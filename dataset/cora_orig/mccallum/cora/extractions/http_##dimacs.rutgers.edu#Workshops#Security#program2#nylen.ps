URL: http://dimacs.rutgers.edu/Workshops/Security/program2/nylen.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Security/program2/program.html
Root-URL: http://www.cs.rutgers.edu
Email: fparosh,bengt,d93ameg@docs.uu.se  
Title: Modeling and Automated Verification of Authentication Protocols  
Author: Parosh Aziz Abdulla, Bengt Jonsson, Aletta Nylen 
Address: P.O. Box 325 S-751 05 Uppsala, Sweden  
Affiliation: Dept. of Computer Systems  
Abstract: In this paper we present a general framework for modeling infinite-state authentication protocols that allows an unbounded number of protocol participants. We present a method for automated verification by performing a backwards reachability analysis where sets of insecure states are specified using constraints. We illustrate our method by showing how to model the Needham-Schroeder public-key protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [AJ97] <author> Parosh Aziz Abdulla and Bengt Jonsson. </author> <title> Verifying networks of timed processes, </title> <note> 1997. in preparation. </note>
Reference-contexts: We intend to use and further develop recent advances in the analysis of infinite-state systems, which have been able to automate the analysis of certain classes of parameterized systems and systems operating on infinite-valued data structures. In particular, some of our earlier work in <ref> [AJ97] </ref> have concentrated on proving safety properties: this is applicable since most security properties of interest are safety properties [Bol97]. 1 We present a network model based on the ideas of [Bol96].
Reference: [BAN89] <author> Michael Burrows, Martn Abadi, and Roger Needham. </author> <title> A logic of authentication. </title> <journal> In Proceedings of the Royal Society of London A, </journal> <volume> volume 426, </volume> <pages> pages 233-271, </pages> <year> 1989. </year>
Reference-contexts: These protocols typically have few messages that may be encrypted with symmetric or asymmetric cryptographic keys. Formal modeling and verification of cryptographic protocols has received much attention in recent years. Several frameworks for modeling authentication protocols and associated correctness properties have been presented. Burrows, Abadi and Needham <ref> [BAN89] </ref> have developed a belief-based logic for expressing properties of authentication protocols together with inference rules for reasoning about such properties. It is far from obvious how proofs in this framework could be automated.
Reference: [Bol96] <author> Dominique Bolignano. </author> <title> An approach to the formal verification of cryptographic protocols. </title> <booktitle> In Proc. 3 rd ACM Conference on Computer and Communication Security, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: It is far from obvious how proofs in this framework could be automated. A simpler approach to modeling, which is not based on special purpose logic has been presented by Bolignano <ref> [Bol96] </ref> and by Schneider [Sch96a, Sch96b]. These approaches model protocols in rather standard transition-system based formalisms, and investigate how authentication can be expressed and analyzed. In general, the mechanization of proofs requires the use of interactive theorem provers. <p> In particular, some of our earlier work in [AJ97] have concentrated on proving safety properties: this is applicable since most security properties of interest are safety properties [Bol97]. 1 We present a network model based on the ideas of <ref> [Bol96] </ref>. Our goals in designing this model was to simplify the task of modeling authentication protocols, and to model authentication in a way that can be used with mechanized techniques of proving invariants of parameterized systems. <p> The enemy can store and (if possible) decrypt the messages circulating on the medium. It can also encrypt data to create new messages and send messages in order to mislead trustworthy principals. Similar approaches have been used in <ref> [Sch96b, Bol96, Mea96] </ref>. The trustworthy principals will be modeled as a set of identical processes called users.
Reference: [Bol97] <author> Dominique Bolignano. </author> <title> Towards a mechanization of cryptographic verification. </title> <booktitle> In 9 th International Computer-Aided Verification Conference, </booktitle> <address> CAV'97, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: In particular, some of our earlier work in [AJ97] have concentrated on proving safety properties: this is applicable since most security properties of interest are safety properties <ref> [Bol97] </ref>. 1 We present a network model based on the ideas of [Bol96]. Our goals in designing this model was to simplify the task of modeling authentication protocols, and to model authentication in a way that can be used with mechanized techniques of proving invariants of parameterized systems.
Reference: [Low96] <author> Gavin Lowe. </author> <title> Breaking and fixing the Needham-Schroeder public-key protocol using FDR. </title> <editor> In Margaria and Steffen, editors, </editor> <booktitle> Proceedings of TACAS, volume 1055 of Lecture Notes in Computer Science, </booktitle> <pages> pages 147-166. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Thus after a protocol run the secrets N A and N B will have been established and the presence of both A and B will have been proved. In <ref> [Low96] </ref>, Lowe presented an attack upon this protocol, which allows an intruder to impersonate another agent.
Reference: [Mea96] <author> Cathrine Meadows. </author> <title> The NRL protocol analyser: An overview. </title> <journal> Journal of Logic Programming, </journal> <year> 1996. </year>
Reference-contexts: The enemy can store and (if possible) decrypt the messages circulating on the medium. It can also encrypt data to create new messages and send messages in order to mislead trustworthy principals. Similar approaches have been used in <ref> [Sch96b, Bol96, Mea96] </ref>. The trustworthy principals will be modeled as a set of identical processes called users.
Reference: [NS78] <author> Roger M. Needham and Michael D. Schroeder. </author> <title> Using encryption for authentication in large networks of computers. </title> <journal> Communications of the ACM, </journal> <volume> 21(12) </volume> <pages> 993-999, </pages> <month> December </month> <year> 1978. </year>
Reference: [Sch96a] <author> Steve Schneider. </author> <title> Security properties and CSP. </title> <booktitle> In IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, </address> <year> 1996. </year>
Reference-contexts: It is far from obvious how proofs in this framework could be automated. A simpler approach to modeling, which is not based on special purpose logic has been presented by Bolignano [Bol96] and by Schneider <ref> [Sch96a, Sch96b] </ref>. These approaches model protocols in rather standard transition-system based formalisms, and investigate how authentication can be expressed and analyzed. In general, the mechanization of proofs requires the use of interactive theorem provers.
Reference: [Sch96b] <author> Steve Schneider. </author> <title> Using CSP for protocol analysis: the Needham-Schroeder public-key protocol. </title> <type> Technical Report CSD-TR-96-14, </type> <institution> Royal Holloway, University of Lon-don, </institution> <year> 1996. </year> <month> 7 </month>
Reference-contexts: It is far from obvious how proofs in this framework could be automated. A simpler approach to modeling, which is not based on special purpose logic has been presented by Bolignano [Bol96] and by Schneider <ref> [Sch96a, Sch96b] </ref>. These approaches model protocols in rather standard transition-system based formalisms, and investigate how authentication can be expressed and analyzed. In general, the mechanization of proofs requires the use of interactive theorem provers. <p> The enemy can store and (if possible) decrypt the messages circulating on the medium. It can also encrypt data to create new messages and send messages in order to mislead trustworthy principals. Similar approaches have been used in <ref> [Sch96b, Bol96, Mea96] </ref>. The trustworthy principals will be modeled as a set of identical processes called users.
References-found: 9

