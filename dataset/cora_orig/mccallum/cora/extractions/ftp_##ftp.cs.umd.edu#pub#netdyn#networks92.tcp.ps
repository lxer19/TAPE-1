URL: ftp://ftp.cs.umd.edu/pub/netdyn/networks92.tcp.ps
Refering-URL: http://www.cs.umd.edu/projects/netdyn.html
Root-URL: 
Title: TCP Flow Control in Lossy Networks: Analysis and Enhancement  
Author: Partho P. Mishra, Dheeraj Sanghi, and Satish K. Tripathi 
Keyword: Keyword Codes: C.2.2; I.6.4 Keywords: Network Protocols; Model Validation and Analysis  
Address: College Park, MD 20742, USA  
Affiliation: Department of Computer Science, University of Maryland,  
Abstract: TCP uses an implicit feedback based window flow control mechanism. The window size is increased on receipt of an acknowledgement and decreased on detection of a packet loss. Thus a packet loss is used as an indication of congestion in the network. In the course of experiments conducted over the Internet, we have observed that packet losses can occur due to reasons other than congestion. In this paper, we use analysis and simulation to show that the current flow control scheme results in a significant drop in the throughput even if the likelihood of non congestion related loss is quite low. Based on our analysis we suggest a modification to the current scheme. Experimental results show that the modified scheme improves throughput significantly. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ashok K. Agrawala and Dheeraj Sanghi. </author> <title> Design and evaluation of an adaptive flow control scheme. </title> <booktitle> In Proceedings of IEEE INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: We are currently studying the performance of another flow control scheme in which we explicitly determine the time to send each packet based on the estimates of network conditions <ref> [1] </ref>.
Reference: [2] <editor> R. Braden (editor). </editor> <title> Requirements for Internet hosts communication layers. Request for Comment: </title> <institution> RFC-1122, Network Information Center, SRI International, </institution> <month> October </month> <year> 1989. </year>
Reference-contexts: The congestion control algorithm currently embedded in the 4.3-Tahoe BSD Unix implementation was proposed by Jacobson and Karels [4] (henceforth we refer to this algorithm as the JK scheme). It is now considered as the standard Internet flow control algorithm <ref> [2] </ref>. Thus it is important to study the performance of this algorithm under different network operating conditions. While there have been some recent studies of the dynamics of this algorithm [5, 9, 10], the performance of the algorithm under lossy network conditions has not been examined.
Reference: [3] <author> M. Gerla and L. Kleirock. </author> <title> Flow control: A comparative survey. </title> <journal> IEEE Transactions on Communication, </journal> <volume> COM-28(4):553-574, </volume> <month> April </month> <year> 1980. </year>
Reference-contexts: While there have been some recent studies of the dynamics of this algorithm [5, 9, 10], the performance of the algorithm under lossy network conditions has not been examined. The JK algorithm belongs to a class of window based feedback flow control algorithms <ref> [3] </ref> where feedback from the network is used to adjust the window size of a transport level fl This work is supported in part by Rome Labs and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland.
Reference: [4] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proceedings of ACM SIGCOMM '88, </booktitle> <pages> pages 314-329, </pages> <address> Stanford, California, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: 1. Introduction TCP [6] is the most commonly used transport protocol in the Internet. The congestion control algorithm currently embedded in the 4.3-Tahoe BSD Unix implementation was proposed by Jacobson and Karels <ref> [4] </ref> (henceforth we refer to this algorithm as the JK scheme). It is now considered as the standard Internet flow control algorithm [2]. Thus it is important to study the performance of this algorithm under different network operating conditions.
Reference: [5] <author> A. Mankin and K. Thompson. </author> <title> Limiting factors in the performance of the slow-start TCP algorithms. </title> <booktitle> In Proceedings of USENIX Winter Conference '89, </booktitle> <pages> pages 219-228, </pages> <address> San Diego, California, </address> <month> January </month> <year> 1989. </year>
Reference-contexts: It is now considered as the standard Internet flow control algorithm [2]. Thus it is important to study the performance of this algorithm under different network operating conditions. While there have been some recent studies of the dynamics of this algorithm <ref> [5, 9, 10] </ref>, the performance of the algorithm under lossy network conditions has not been examined.
Reference: [6] <editor> J. B. Postel (editor). </editor> <title> Transmission Control Protocol. Request for Comment: </title> <institution> RFC-793, Network Information Center, SRI International, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: 1. Introduction TCP <ref> [6] </ref> is the most commonly used transport protocol in the Internet. The congestion control algorithm currently embedded in the 4.3-Tahoe BSD Unix implementation was proposed by Jacobson and Karels [4] (henceforth we refer to this algorithm as the JK scheme).
Reference: [7] <author> Dheeraj Sanghi, Ashok K. Agrawala, O. Gudmundsson, and Bijendra Jain. </author> <title> Experimental assessment of end-to-end behavior on Internet. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: If packet losses can occur due to reasons other than buffer overflow then the performance of the algorithm is adversely affected. In the course of experiments conducted over the Internet, we have observed that losses are not always caused by buffer overflows resulting from network congestion <ref> [7] </ref>. There are diverse hardware and software problems with many gateways in the Internet that may result in packet loss even when there is no congestion. One example of such problem is erroneous Ethernet or FDDI adapter cards that do not work according to the specifications. <p> This causes them to lose packets randomly. While exact numbers are hard to come by due to the size and diversity of the Internet, the random loss likelihood can be as high as 2-3% for certain networks <ref> [7] </ref>. This suggests the need for studying the behavior of the JK scheme in lossy environments. The results presented in this paper show that even at 1% random loss of packets, the throughput of a connection reduces significantly when the JK algorithm is used.
Reference: [8] <author> Dheeraj Sanghi, M. C. V. Subramaniam, A. U. Shankar, O. Gudmundsson, and P. Jalote. </author> <title> A TCP instrumentation and its use in evaluating roundtrip-time estimators. </title> <journal> J. of Internetworking: Research & Experience, </journal> <volume> 1(2) </volume> <pages> 77-99, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: If the probability of more than one random loss in a window is non-negligible then the scheme may be easily extended to to ignore multiple losses as random losses. 4. Experiments and Results 4.1. Experimental Setup We have previously instrumented <ref> [8] </ref> the 4.3-Tahoe BSD Unix implementation of TCP. The experiments described in this paper were carried out on a VaxStation 3200 running the instrumented kernel. The instrumentation provides detailed information as a packet crosses the interface between TCP and IP.
Reference: [9] <author> Scott Shenker, Lixia Zhang, and David D. Clark. </author> <title> Some observations on the dynamics of a congestion control algorithm. </title> <journal> Computer Communication Review, </journal> <volume> 20(5) </volume> <pages> 30-39, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: It is now considered as the standard Internet flow control algorithm [2]. Thus it is important to study the performance of this algorithm under different network operating conditions. While there have been some recent studies of the dynamics of this algorithm <ref> [5, 9, 10] </ref>, the performance of the algorithm under lossy network conditions has not been examined. <p> We derive analytically the average value of the maximum window size in the presence of random losses. We validate the analysis using simulations. 2.1. Description of the JK algorithm To describe the JK algorithm, we borrow some of the terminology used in <ref> [9] </ref>. For simplicity of exposition, we adopt the convention that window sizes are in packets rather than in bytes as in the original TCP specification. At TCP connection set up time the receiver specifies a maximum window size, max wnd.
Reference: [10] <author> Lixia Zhang and David D. Clark. </author> <title> Oscillating behavior of network traffic: A case study simulation. </title> <journal> J. of Internetworking: Research & Experience, </journal> <volume> 1(2) </volume> <pages> 101-112, </pages> <month> De-cember </month> <year> 1990. </year>
Reference-contexts: It is now considered as the standard Internet flow control algorithm [2]. Thus it is important to study the performance of this algorithm under different network operating conditions. While there have been some recent studies of the dynamics of this algorithm <ref> [5, 9, 10] </ref>, the performance of the algorithm under lossy network conditions has not been examined.
References-found: 10

