URL: http://www.cs.unc.edu/~anderson/papers/tocs97.ps.Z
Refering-URL: http://www.cs.unc.edu/~anderson/papers.html
Root-URL: http://www.cs.unc.edu
Title: Real-Time Computing with Lock-Free Shared Objects  
Author: JAMES H. ANDERSON, SRIKANTH RAMAMURTHY, and KEVIN JEFFAY 
Keyword: Categories and Subject Descriptors: C.3 [Computer Systems Organization]: Special-Purpose and Application-Based Systems|real-time systems; D.4.1 [Operating Systems]: Process Management|concurrency, multiprocessing/multiprogramming, mutual exclusion, scheduling, synchronization; J.7 [Computer Applications]: Computers in Other Systems|real-time General Terms: Design, Experimentation, Performance, Theory Additional Key Words and Phrases: critical sections, deadline-monotonic, earliest-deadline-first, hard real-time, lock-free, rate-monotonic, scheduling, synchronization, wait-free  
Affiliation: University of North Carolina  
Abstract: This paper considers the use of lock-free shared objects within hard real-time systems. As the name suggests, lock-free shared objects are distinguished by the fact that they are accessed without locking. As such, they do not give rise to priority inversions, a key advantage over conventional, lock-based object-sharing approaches. Despite this advantage, it is not immediately apparent that lock-free shared objects can be employed if tasks must adhere to strict timing constraints. In particular, lock-free object implementations permit concurrent operations to interfere with each other, and repeated interferences can cause a given operation to take an arbitrarily long time to complete. The main contribution of this paper is to show that such interferences can be bounded by judicious scheduling. This work pertains to periodic, hard real-time tasks that share lock-free objects on a uniprocessor. In the first part of the paper, scheduling conditions are derived for such tasks, for both static and dynamic priority schemes. Based on these conditions, it is formally shown that lock-free shared objects often incur less overhead than object implementations based on wait-free algorithms or lock-based schemes. In the last part of the paper, this conclusion is validated experimentally through work involving a real-time desktop videoconferencing system. A preliminary version of this paper appeared in Proceedings of the 16th IEEE Real-Time Systems Symposium, IEEE Computer Society Press, December 1995, pp. 28-37. The first author was supported by NSF grants CCR 9216421 and CCR 9510156, by an Alfred P. Sloan Research Fellowship, and by a U.S. Army Research Office Young Investigator Award, grant number DAAH04-95-1-0323. The second author was also supported by ARO grant DAAH04-95-1-0323. The third author was supported by NSF grant CCR 9510156 and by grants from the Intel and IBM corporations. Address: Department of Computer Science, University of North Carolina, Chapel Hill, NC 27599-3175; email: fanderson, ramamurt, jeffayg@cs.unc.edu. Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the first page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works, requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept, ACM Inc., 1515 Broadway, New York, NY 10036 USA, fax +1 (212) 869-0481, or permissions@acm.org. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Alemany, J. and Felten, E. W. </author> <year> 1992. </year> <title> Performance issues in non-blocking synchronization on shared-memory multiprocessors. </title> <booktitle> In Proceedings of the 11th Annual ACM Symposium on Principles of Distributed Computing (August 1992), </booktitle> <pages> pp. 125-134. </pages> <publisher> ACM. </publisher>
Reference: <author> Anderson, J. H. and Moir, M. </author> <year> 1995. </year> <title> Universal constructions for large objects. </title> <booktitle> In Proceedings of the Ninth International Workshop on Distributed Algorithms (September 1995), </booktitle> <pages> pp. 168-182. </pages> <publisher> Springer Verlag. </publisher>
Reference: <author> Anderson, J. H. and Ramamurthy, S. </author> <year> 1996. </year> <title> A framework for implementing objects and scheduling tasks in lock-free real-time systems. </title> <booktitle> In Proceedings of the 17th IEEE Real-Time Systems Symposium (December 1996), </booktitle> <pages> pp. 92-105. </pages> <publisher> IEEE. </publisher>
Reference: <author> Anderson, J. H., Ramamurthy, S., and Jain, R. </author> <year> 1997. </year> <title> Implementing wait-free objects in priority-based systems. </title> <type> Manuscript. </type>
Reference: <author> Anderson, J. H., Ramamurthy, S., and Jeffay, K. </author> <year> 1995. </year> <title> Real-time computing with lock-free objects. </title> <type> Technical Report TR95-021, </type> <institution> Department of Computer Science, University of North Carolina, Chapel Hill, North Carolina. </institution>
Reference: <author> Anderson, J. H., Ramamurthy, S., Moir, M., and Jeffay, K. </author> <year> 1997. </year> <title> Lock-free transactions for real-time systems. In Real-Time Databases: Issues and Applications. </title> <publisher> Amsterdam: Kluwer Academic Publishers. </publisher>
Reference: <author> Baker, T. </author> <year> 1991. </year> <title> Stack-based scheduling of real-time processes. </title> <booktitle> Real-Time Systems 3, </booktitle> <month> 1 (March), </month> <pages> 67-99. </pages>
Reference: <author> Baruah, S. K., Howell, R. R., and Rosier, L. E. </author> <year> 1993. </year> <title> Feasibility problems for recurring tasks on one processor. </title> <booktitle> Theoretical Computer Science 118, </booktitle> <pages> 3-20. </pages>
Reference: <author> Bershad, B. </author> <year> 1993. </year> <title> Practical considerations for non-blocking concurrent objects. </title> <booktitle> In Proceedings of the 13th International Conference on Distributed Computing Systems (May 1993), </booktitle> <pages> pp. 264-274. </pages>
Reference: <author> Chen, M. I. and Lin, K. J. </author> <year> 1990. </year> <title> Dynamic priority ceiling: A concurrency control protocol for real time systems. </title> <booktitle> Real-Time Systems 2, </booktitle> <volume> 1, </volume> <pages> 325-346. </pages>
Reference: <author> Gallmeister, B. O. and Lanier, C. </author> <year> 1991. </year> <title> Early experience with POSIX 1003.4 and POSIX 1003.4a. </title> <booktitle> In Proceedings of the 12th IEEE Real-Time Systems Symposium (De-cember 1991), </booktitle> <pages> pp. 190-198. </pages> <publisher> IEEE. </publisher>
Reference: <author> Herlihy, M. </author> <year> 1991. </year> <title> Wait-free synchronization. </title> <journal> ACM Trans. on Programm. Lang. Syst. </journal> <volume> 13, 1, </volume> <pages> 124-149. </pages>
Reference: <author> Herlihy, M. </author> <year> 1993. </year> <title> A methodology for implementing highly concurrent data objects. </title> <journal> ACM Trans. on Programm. Lang. Syst. </journal> <volume> 15, 5, </volume> <pages> 745-770. </pages>
Reference: <author> Jeffay, K. </author> <year> 1992. </year> <title> Scheduling sporadic tasks with shared resources in hard real-time systems. </title> <booktitle> In Proceedings of the 13 th IEEE Symposium on Real-Time Systems (December 1992), </booktitle> <pages> pp. </pages> <note> 28 J. </note> <author> Anderson, S. Ramamurthy, and K. </author> <note> Jeffay 89-98. IEEE. </note>
Reference: <author> Jeffay, K., Stanat, D. F., and Martel, C. U. </author> <year> 1991. </year> <title> On non-preemptive scheduling of periodic and sporadic tasks. </title> <booktitle> In Proceedings of the 12 th IEEE Symposium on Real-Time Systems (December 1991), </booktitle> <pages> pp. 129-139. </pages> <publisher> IEEE. </publisher>
Reference: <author> Jeffay, K. and Stone, D. </author> <year> 1993. </year> <title> Accounting for interrupt handling costs in dynamic priority task systems. </title> <booktitle> In Proceedings of the 14 th IEEE Symposium on Real-Time Systems (December 1993), </booktitle> <pages> pp. 212-221. </pages> <publisher> IEEE. </publisher>
Reference: <author> Jeffay, K., Stone, D., and Smith, F. D. </author> <year> 1992. </year> <title> Kernel support for live digital audio and video. </title> <journal> Computer Communications 15, </journal> <volume> 6 (July), </volume> <pages> 388-395. </pages>
Reference: <author> Johnson, T. and Harathi, K. </author> <year> 1994. </year> <title> Interruptible critical sections. </title> <type> Technical Report TR94-007, </type> <institution> University of Florida, Gainesville, Florida. </institution>
Reference: <author> Katcher, D. I., Arakawa, H., and Strosnider, J. K. </author> <year> 1993. </year> <title> Engineering and analysis of fixed-priority schedulers. </title> <journal> IEEE Trans. on Software Engineering 19, </journal> <volume> 9 (September), </volume> <pages> 920-934. </pages>
Reference: <author> Kopetz, H. and Reisinger, J. </author> <year> 1993. </year> <title> The non-blocking write protocol NBW: A solution to a real-time synchronization problem. </title> <booktitle> In Proceedings of the 14 th IEEE Symposium on Real-Time Systems (December 1993), </booktitle> <pages> pp. 131-137. </pages> <publisher> IEEE. </publisher>
Reference: <author> Lamport, L. </author> <year> 1977. </year> <title> Concurrent reading and writing. </title> <journal> Commun. ACM 20, </journal> <volume> 11 (November), </volume> <pages> 806-811. </pages>
Reference: <author> Lamport, L. </author> <year> 1986. </year> <title> On interprocess communication, parts I and II. </title> <booktitle> Distributed Computing 1, </booktitle> <pages> 77-101. </pages>
Reference: <author> Lehoczky, J., Sha, L., and Ding, Y. </author> <year> 1989. </year> <title> The rate monotonic scheduling algorithm: Exact characterization and average case behavior. </title> <booktitle> In Proceedings of the Tenth IEEE Symposium on Real-Time Systems (December 1989), </booktitle> <pages> pp. 166-171. </pages> <publisher> IEEE. </publisher>
Reference: <author> Leung, J. Y. T. and Whitehead, J. </author> <year> 1982. </year> <title> On the complexity of fixed-priority scheduling of periodic, real-time tasks. Performance Evaluation 2, </title> <booktitle> 4, </booktitle> <pages> 237-250. </pages>
Reference: <author> Liu, C. and Layland, J. </author> <year> 1973. </year> <title> Scheduling algorithms for multiprogramming in a hard real-time environment. </title> <journal> Journal of the ACM 30, </journal> <pages> 46-61. </pages>
Reference: <author> Massalin, H. </author> <year> 1992. </year> <title> Synthesis: An Efficient Implementation of Fundamental Operating System Services. </title> <type> Ph. D. thesis, </type> <institution> Columbia University, </institution> <address> New York, New York. </address>
Reference: <author> Peterson, G. L. </author> <year> 1983. </year> <title> Concurrent reading while writing. </title> <journal> ACM Trans. on Programm. Lang. Syst. </journal> <volume> 5, 1, </volume> <pages> 46-55. </pages>
Reference: <author> Rajkumar, R. </author> <year> 1991. </year> <title> Synchronization In Real-Time Systems APriority Inheritance Approach. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address>
Reference: <author> Ramamurthy, S., Moir, M., and Anderson, J. H. </author> <year> 1996. </year> <title> Real-time object sharing with minimal support. </title> <booktitle> In Proceedings of the 15th Annual ACM Symposium on Principles of Distributed Computing (May 1996), </booktitle> <pages> pp. 233-242. </pages> <publisher> ACM. </publisher>
Reference: <author> Sha, L., Rajkumar, R., and Lehoczky, J. </author> <year> 1990. </year> <title> Priority inheritance protocols: An approach to real-time system synchronization. </title> <journal> IEEE Transactions on Computers 39, </journal> <volume> 9, </volume> <pages> 1175-1185. </pages>
Reference: <author> Sorensen, P. </author> <year> 1974. </year> <title> A Methodology for Real-Time System Development. </title> <type> Ph. D. thesis, </type> <institution> University of Toronto, Toronto, Canada. </institution>
Reference: <author> Sorensen, P. and Hemachar, V. </author> <year> 1975. </year> <title> A real-time system design methodology. </title> <journal> IN-FOR 13, </journal> <volume> 1, </volume> <pages> 1-18. </pages>
Reference: <author> Stone, D. L. </author> <year> 1995. </year> <title> Managing the Effect of Delay Jitter on the Display of Live Continuous Media. </title> <type> Ph. D. thesis, </type> <institution> University of North Carolina, Chapel Hill, North Carolina. </institution>
References-found: 33

