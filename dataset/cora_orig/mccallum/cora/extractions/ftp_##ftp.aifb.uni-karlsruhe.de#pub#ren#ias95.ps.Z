URL: ftp://ftp.aifb.uni-karlsruhe.de/pub/ren/ias95.ps.Z
Refering-URL: http://www.aifb.uni-karlsruhe.de/WBS/ren/publications.html
Root-URL: 
Email: E-mail: engels@aifb.uni-karlsruhe.de  
Phone: Tel: +49-721-608 4062 Fax: +49-721-693 717  
Title: Hogdalenverket: Applying ILP in an Industrial Setting  
Author: Robert Engels 
Keyword: Machine Learning, Inductive Logic Programming, Knowledge Acquistion  
Note: Published in the Proceedings of the Workshop on Intelligent Adaptive Systems, Melbourne Beach, 1995 The author's current address is:  
Address: Electrum 230, 164 40 Kista, Sweden  D-76128 Karlsruhe, Germany.  
Affiliation: Dept. of Computer and Systems Sciences Stockholm University  Institute AIFB, University of Karlsruhe,  
Abstract: When applying Inductive Logic Programming techniques in real-world settings, many problems will come up. Since not many real-world applications are reported using ILP-techniques this report describes some problems that may appear when starting such a project. The project was done in co-operation with Hogdalenverket, a heat and power plant burning household refuse in the Stockholm area, Sweden. The application problems with collecting data and the application of ILP-techniques are discussed. Results of tests performed while using SPECTRE, an ILP-algorithm developed at Stockholm University, are reported. These results show that the addition of background knowledge and addition/retraction of parameters has positive effect on the performance of the ILP-techniques. After initial tests a knowledge acquistion stage was started. This resulted in knowledge about the domain that was used for evaluating the results of learning using SPECTRE. This prevented several mistakes by interpreting data and evaluating performance. This knowledge was partly used as background knowledge for the learning algorithm. Noise handling was applied and increased the efficiency of the SPECTRE-algorithm. The paper lists the results of tests performed on data from the refuse-burning plant. It also compares the performance of the SPECTRE-algorithm on theoretical databases with the performance on this practical domain. It also gives some insight in the change of performance that can be expected when transferring from the laboratory-domains to domains gathered in the real-world. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Bostrom, H. and Idestam-Almquist, P., </author> <title> "Specialization of Logic Programs by Pruning SLD-Trees", </title> <booktitle> Proceedings of the 4th International Workshop on Inductive Logic Programming, volume 237 of GMD-Studien, </booktitle> <institution> Gesellschaft fur Mathematik und Datenverarbeitung MBH (1994) 31-48 </institution>
Reference-contexts: Inductive Logic Programming (ILP) was used for learning in the domain. Few real world applications using ILP are available for evaluation. The algorithm used for this application is called SPECTRE 3 and is developed at the Stockholm University <ref> [1] </ref>. Modelling the domain using ILP-techniques only was not convenient, so it was decided to add a knowledge acquistion stage. At this stage interviews at the plant and knowledge available from reports etc. were taken into consideration. <p> This formalization of the processes could then be used at a later stage of the project as an input-model for learning control rules for directing SNCR-processes. 2 Using ILP-techniques: the SPECTRE algorithm The ILP-technique used was the SPECTRE algorithm <ref> [1] </ref>. This algorithm is based on the idea of finding an inductive hypothesis through the specialization of a logic program. The program has as input a logic program, a set of negative examples and a set of positive examples. <p> The shape of this tree is defined by the computation rule. Bostrom and Idestam Almquist give a discussion on SPECTRE as well as the results of running SPECTRE on domains taken from the UCI repository of machine learning databases <ref> [1] </ref>. They test the SPECTRE algorithm using three different computational rules: the standard PROLOG computation rule (which selects the left-most literal), a computation rule that selects literals at random and a computation rule that applies unfolding and than minimizes the residual impurity of the resolvents. <p> An more extensive description of the SPECTRE al-gorithm is provided by Bostrom and Idestam-Almquist <ref> [1] </ref>. In the current paper these experiments will be extended by research involving the application of the SPECTRE algorithm on a real-world domain (See section 3). The results of these experiments are compared with the results reported in [1]. 3 The industrial setting: Hogdalenverket The domain which was evaluated contains the <p> extensive description of the SPECTRE al-gorithm is provided by Bostrom and Idestam-Almquist <ref> [1] </ref>. In the current paper these experiments will be extended by research involving the application of the SPECTRE algorithm on a real-world domain (See section 3). The results of these experiments are compared with the results reported in [1]. 3 The industrial setting: Hogdalenverket The domain which was evaluated contains the logged data of the P3 combustion chamber at Hogdalenverket, a refuse burning plant in the Stockholm area. The examples consist of instances of the target clause T. Each example has an initial 27 parameters. <p> During this evaluation SPECTRE performed very well. In most cases the SPECTRE-heuristic performed better than the other ILP-heuristics it was compared with while producing fewer clauses <ref> [1] </ref>. After this research an application using SPECTRE on a real-world domain was looked for in order to get more experience with using ILP-techniques in real-world settings. The Hogdalen domain was selected because of the availability of relatively large amounts of data in Excel-format. <p> The tests were performed in the same way as the evaluation of the SPECTRE-algorithm mentioned in <ref> [1] </ref>. Tests were performed using the standard PROLOG computational rule (i.e. selection of the left-most literal during search), a random selection of the literal and using a computational rule that minimizes residual impurity after unfolding (i.e. takes the literal where the residual impurity will be the lowest).
Reference: 2. <author> Cupit, J. and Shadbolt, N., </author> <title> "Representational redescription within knowledge intensive data-mining." Proceedings of the Third Japanese Knowledge Acquisition for Knowledge Based Systems Workshop, </title> <booktitle> Hatoyama, Japan, nov 7th 9th, </booktitle> <year> (1994) </year>
Reference-contexts: Many practical domains however are represented numerically. Several authors propose solutions for such problems (see for example [9], <ref> [2] </ref>). One approach that does pay attention to the problem of numerical values introduces the use of similarity measures for the selection of cut-points for numerical attributes [9]. <p> The results of the second test series give an indication of which parameters should be taken into account. The results are not yet good enough to justify an implementation of the found rules. According to the view of <ref> [2] </ref> these results are to be used for evaluation and therefor to be seen as an intermediate step in development of a good ruleset. <p> One of the questions raised at this point is whether it might be a good idea to redescribe the database representation (i.e. raising the level of representational granularity as described in <ref> [2] </ref>). However, in this report it is shown what the drawbacks on planning can mean for the application of ILP-techniques. It is also shown what the impact is of certain manipulations of the data for the performance. After the interviews the test series without the HCl parameter were initiated. <p> Evaluating the project, it can be stated that using inductive learning algorithms on real-world domains without any knowledge acquistion process is not very helpful. As mentioned in <ref> [2] </ref> applying machine learning algorithms on "raw" data extracted from a database is of limited benefit. Our experience supports this point of view and we expect much benefit from the knowledge elicitation and representational redescription processes as described in [2]. <p> As mentioned in <ref> [2] </ref> applying machine learning algorithms on "raw" data extracted from a database is of limited benefit. Our experience supports this point of view and we expect much benefit from the knowledge elicitation and representational redescription processes as described in [2]. The study as done till now is only an intervening stage of the project. The next stages of the project will include some further testing on newly provided data from Hogdalenverket and testing the Hogdalen domain with the MOBAL-system [11].
Reference: 3. <author> Feng, C., </author> <title> "Inducing Temporal Fault Diagnosis Rules from a Qualitative Model" In: Muggleton, </title> <booktitle> F.H. Inductive Logic Programming (1992) </booktitle>
Reference: 4. <author> King, R.D., Muggleton, S.H., Lewis, R.A. and Sternberg, M.J.E., </author> <title> Drug design by machine learning: The use of inductive logic programming to model the structure-activity relationships of trimethoprim analogues binding to dihydrofolate reductase. </title> <booktitle> Proceedings of the National Academy of Science USA, </booktitle> <volume> volume 89, </volume> <month> 11322-11326 </month> <year> (1992) </year>
Reference-contexts: Background knowledge includes already known relations between the domain concepts. Adding background knowledge to the specialization problem has the advantage that the search process can be biased to raise the efficiency of the search process (see [12], [8], [6], [14], <ref> [4] </ref> ). When databases grow larger this topic becomes of more interest. Background knowledge can be elicited performing Knowledge Acquistion and is normally represented in a symbolical form. The tests were initially conducted using only an overgeneral theory.
Reference: 5. <author> Lindner, G., </author> <note> "Logikbasiertes Lernen in relationalen Datenbanken." (in German) LS-8 Report 12, University Dortmund (1994) </note>
Reference-contexts: This was based on reported successes of using inductive learning algorithms to find knowledge that is seen as new and interesting by experts and that triggered new knowledge (as reported in <ref> [5] </ref> and [10]). Evaluating the project, it can be stated that using inductive learning algorithms on real-world domains without any knowledge acquistion process is not very helpful. As mentioned in [2] applying machine learning algorithms on "raw" data extracted from a database is of limited benefit.
Reference: 6. <author> Lloyd, J.W., </author> <title> "Foundations of Logic Programming." </title> <publisher> Springer-Verlag (1987) </publisher>
Reference-contexts: Background knowledge includes already known relations between the domain concepts. Adding background knowledge to the specialization problem has the advantage that the search process can be biased to raise the efficiency of the search process (see [12], [8], <ref> [6] </ref>, [14], [4] ). When databases grow larger this topic becomes of more interest. Background knowledge can be elicited performing Knowledge Acquistion and is normally represented in a symbolical form. The tests were initially conducted using only an overgeneral theory.
Reference: 7. <author> Matheus, C.J., Chan, P.K. and Piatetsky-Shapiro, G., </author> <title> "Systems for Knowledge Discovery in Databases." </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> volume 5, number 6 (1993), </volume> <pages> 903-913 </pages>
Reference-contexts: The pruning is performed by cutting the appropriate tree in the SLD-tree. In practice this means that after performing unfolding, the pruning can be realized by removing the literal 3 SPECialization by TRansformation and Elimination 4 M P 0 denotes the least Hebrand model as described in <ref> [7] </ref> corresponding to the sub-tree to be removed. An more extensive description of the SPECTRE al-gorithm is provided by Bostrom and Idestam-Almquist [1]. In the current paper these experiments will be extended by research involving the application of the SPECTRE algorithm on a real-world domain (See section 3).
Reference: 8. <author> Merckt, Th. van de, </author> <booktitle> "Decision Trees in Numerical Attribute Spaces" Proceedings of the 13th International Joint Conference on Artificial Intelligence, </booktitle> <month> 28 august - 3 september, </month> <booktitle> volume 2, Chamberry; France (1993), </booktitle> <pages> 1016-1021 </pages>
Reference-contexts: Background knowledge includes already known relations between the domain concepts. Adding background knowledge to the specialization problem has the advantage that the search process can be biased to raise the efficiency of the search process (see [12], <ref> [8] </ref>, [6], [14], [4] ). When databases grow larger this topic becomes of more interest. Background knowledge can be elicited performing Knowledge Acquistion and is normally represented in a symbolical form. The tests were initially conducted using only an overgeneral theory. <p> Adding a knowledge acquistion stage also facilitates the process of focussing on the most informative data in the database. Focussing is found a useful process in the stage of learning from databases ( <ref> [8] </ref> for more on this topic). Interviews and reports resulted in a preliminary model of the processes involved and their connections.
Reference: 9. <author> Muggleton, S., King, R.D. and Sternberg, M.J.E., </author> <title> Protein Secondary Structure Prediction using logic-based machine learing. </title> <journal> Protein Engineering, </journal> <volume> 5(4), </volume> <month> 647-657 </month> <year> (1992) </year>
Reference-contexts: Many practical domains however are represented numerically. Several authors propose solutions for such problems (see for example <ref> [9] </ref>, [2]). One approach that does pay attention to the problem of numerical values introduces the use of similarity measures for the selection of cut-points for numerical attributes [9]. <p> Many practical domains however are represented numerically. Several authors propose solutions for such problems (see for example <ref> [9] </ref>, [2]). One approach that does pay attention to the problem of numerical values introduces the use of similarity measures for the selection of cut-points for numerical attributes [9]. This approach seems to be promising for domains where the training set is not sufficiently large, i.e. were the concept boundaries are not likely to be clearly defined, (as in instance spaces with few instances). [9] also concludes that when there is a higher coverage of the concept boundaries by <p> introduces the use of similarity measures for the selection of cut-points for numerical attributes <ref> [9] </ref>. This approach seems to be promising for domains where the training set is not sufficiently large, i.e. were the concept boundaries are not likely to be clearly defined, (as in instance spaces with few instances). [9] also concludes that when there is a higher coverage of the concept boundaries by the training set the use of these similarity based heuristic becomes less important. Our hypothesis was that at the Hogdalen domain there is a good coverage of these concept boundaries.
Reference: 10. <author> Morik, K., </author> <title> "Knowledgeable Learning using MOBAL- A Case Study on a Medical Domain." </title> <booktitle> Real-World Applications of Machine Learning; European Conference on Machine Learning, </booktitle> <address> Austria (1993) </address>
Reference-contexts: This was based on reported successes of using inductive learning algorithms to find knowledge that is seen as new and interesting by experts and that triggered new knowledge (as reported in [5] and <ref> [10] </ref>). Evaluating the project, it can be stated that using inductive learning algorithms on real-world domains without any knowledge acquistion process is not very helpful. As mentioned in [2] applying machine learning algorithms on "raw" data extracted from a database is of limited benefit.
Reference: 11. <author> Muggleton, S. and Feng, C., </author> <title> "Efficient Induction of Logic Programs." </title> <booktitle> Proceedings of the First Conference on Algorithmic Learning Theory Japan (1990) </booktitle>
Reference-contexts: The study as done till now is only an intervening stage of the project. The next stages of the project will include some further testing on newly provided data from Hogdalenverket and testing the Hogdalen domain with the MOBAL-system <ref> [11] </ref>. It is expected that performance can increase using better noise handling and more accurately measured data (which presumably becomes available soon). Representation of the learning problem as a problem of increasing/decreasing the ammount of ammonia injected at the several injection points is also planned.
Reference: 12. <author> Quinlan, J., </author> <title> "Induction of Decision Trees." </title> <journal> Machine Learning, </journal> <volume> volume 1 (1986) 81-106 </volume>
Reference-contexts: Background knowledge includes already known relations between the domain concepts. Adding background knowledge to the specialization problem has the advantage that the search process can be biased to raise the efficiency of the search process (see <ref> [12] </ref>, [8], [6], [14], [4] ). When databases grow larger this topic becomes of more interest. Background knowledge can be elicited performing Knowledge Acquistion and is normally represented in a symbolical form. The tests were initially conducted using only an overgeneral theory.
Reference: 13. <author> Sternberg, M.J.E., Lewis, R.A., King, R.D. and Muggleton, S., </author> <title> "Modelling the Structure and Function of Enzymes by Machine Learning" Faraday Discuss., </title> <booktitle> volume 93 (1992) 269-280 </booktitle>
Reference: 14. <author> Stromberg, A.M. and Karlsson, H.T., </author> <title> "Background Paper" presented to VarmeForsk Nordisc N O x Seminar, </title> <address> Stockholm, </address> <month> march 17-19 </month> <year> (1993) </year>
Reference-contexts: Background knowledge includes already known relations between the domain concepts. Adding background knowledge to the specialization problem has the advantage that the search process can be biased to raise the efficiency of the search process (see [12], [8], [6], <ref> [14] </ref>, [4] ). When databases grow larger this topic becomes of more interest. Background knowledge can be elicited performing Knowledge Acquistion and is normally represented in a symbolical form. The tests were initially conducted using only an overgeneral theory.
References-found: 14

