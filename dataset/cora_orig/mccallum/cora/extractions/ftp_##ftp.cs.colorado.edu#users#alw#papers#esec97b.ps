URL: ftp://ftp.cs.colorado.edu/users/alw/papers/esec97b.ps
Refering-URL: http://www.cs.colorado.edu/users/alw/RecentPubs.html
Root-URL: http://www.cs.colorado.edu
Email: alw@cs.colorado.edu  
Title: A Design Framework for Internet-Scale Event Observation and Notification  
Author: David S. Rosenblum Alexander L. Wolf 
Keyword: design, distributed systems, events, Internet, software engineering  
Web: http://www.ics.uci.edu/~dsr/  http://www.cs.colorado.edu/users/alw/  
Address: Irvine, CA 92697-3425 USA  Boulder, CO 80309-0430 USA  
Affiliation: Dept. of Info. Computer Science University of California, Irvine  Dept. of Computer Science University of Colorado  
Abstract: There is increasing interest in having software systems execute and interoperate over the Internet. Execution and interoperation at this scale imply a degree of loose coupling and heterogeneity among the components from which such systems will be built. One common architectural style for distributed, loosely-coupled, heterogeneous software systems is a structure based on event generation, observation and notification. The technology to support this approach is well-developed for local area networks, but it is ill-suited to networks on the scale of the Internet. Hence, new technologies are needed to support the construction of large-scale, event-based software systems for the Internet. We have begun to design a new facility for event observation and notification that better serves the needs of Internet-scale applications. In this paper we present results from our first step in this design process, in which we defined a framework that captures many of the relevant design dimensions. Our framework comprises seven modelsan object model , an event model , a naming model , an observation model , a time model , a notification model , and a resource model . The paper discusses each of these models in detail and illustrates them using an example involving an update to a Web page. The paper also evaluates three existing technologies with respect to the seven models. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.J. Barrett, L.A. Clarke, P.L. Tarr, and A.E. Wise, </author> <title> A Framework for Event-Based Software Integration, </title> <journal> ACM Trans. Software Engineering and Methodology , vol. </journal> <volume> 5, no. 4, </volume> <pages> pp. 378421, </pages> <year> 1996. </year>
Reference-contexts: ToolTalk is a trademark of Sun Microsystems, Inc. See Barrett et al. for a recent study of event-based integration <ref> [1] </ref>. 6 Notes is a registered trademark of Lotus Development Corporation. 7 UNIX is a registered trademark in the United States and other countries, exclusively licensed through X/OPEN Company, Ltd. observation and notification mechanism.
Reference: [2] <author> P.C. Bates and J.C. Wileden, </author> <title> High-Level Debugging of Distributed Systems: The Behavioral Abstraction Approach, </title> <journal> Journal of Systems and Software , vol. </journal> <volume> 3, no. 4, </volume> <pages> pp. 255264, </pages> <year> 1983. </year>
Reference-contexts: operating systems and windowing systems, such as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction <ref> [2] </ref> , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication
Reference: [3] <author> T. Berners-Lee, L. Masinter, and M. McCahill, </author> <title> Uniform Resource Locators (URL), Internet Engineering Task Force, Request for Comments RFC 1738, </title> <month> December </month> <year> 1994. </year>
Reference-contexts: Structure-based naming models typically employ a hierarchical naming scheme that corresponds to the hierarchical organization of the entities of interest. The state-of-the-art in Internet-scale structure-based naming models is the Universal Resource Locator (URL), which provides a way of locating and accessing Internet resources <ref> [3] </ref> .
Reference: [4] <author> M.I. Bolsky and D.G. Korn, </author> <title> The New KornShell Command and Programming Language , 2nd ed. Upper Saddle River, </title> <address> NJ: </address> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: For its time model, Yeast assumes the existence of a global clock, and it performs time zone conversions when the client and server are located in different time zones. Yeasts notification mechanism is the KornShell <ref> [4] </ref> . Communication from client to server is achieved through a number of Yeast client commands, while notification from server to client is achieved by executing the sequence of shell commands specified as the action of a specification.
Reference: [5] <author> K. Brockschmidt, </author> <title> Inside OLE. </title> <address> Redmond, WA: </address> <publisher> Microsoft Press, </publisher> <year> 1995. </year>
Reference-contexts: Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX <ref> [5] </ref> and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes
Reference: [6] <author> S. Chernicoff, </author> <title> Macintosh TM Revealed, vol. 2: Programming with the Toolbox, 2nd ed. Indianapolis, IN: </title> <publisher> Hayden Books, </publisher> <year> 1987. </year>
Reference-contexts: and notification, and we can classify them as follows: 1. theoretical models of distributed clocks [21] , vector timestamps [9,25] and partial orders of events [29] ; 2. low-level event managers for operating systems and windowing systems, such as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager <ref> [6] </ref> ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and
Reference: [7] <author> D. Cohen, </author> <title> Compiling Complex Datab ase Transition Triggers, </title> <booktitle> Proc. of SIGMOD '89: 1989 Intl Conf. on Management of Data, </booktitle> <pages> pp. 225234, </pages> <year> 1989. </year>
Reference-contexts: is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database systems, such as AP5 <ref> [7] </ref> and Ode [11] ; and 10. event-action systems, such as Yeast [20] and Amadeus [33] . Below we examine three particular technologies in detailthe Yeast Event-Action System, the CORBA Event Service, and the Network News Transfer Protocol.
Reference: [8] <author> R. Daniel and M. Mealling, </author> <title> Resolution of Uniform Resource Identifiers using the Domain Name System, Internet Engineering Task Force, Internet Draft (Work in Progress) 21 November 1996. </title>
Reference-contexts: URLs could be used as the realization for a facilitys naming model, but the URL syntax and semantics would have to be extended to support the naming of additional kinds of objects; work in this direction is the subject of a draft specification for Uniform Resource Identifiers (URIs) <ref> [8] </ref> . In a property-based naming model, the entities to be named are named declaratively with a description of some property they possess or some predicate they satisfy.
Reference: [9] <author> C.J. Fidge, </author> <title> Logical Time in Distributed Computing Systems, </title> <journal> IEEE Computer , vol. </journal> <volume> 24, no. 8, </volume> <pages> pp. 2833, </pages> <year> 1991. </year>
Reference: [10] <author> D. Garlan and D. Notkin, </author> <title> Formalizing Design Spaces: Implicit Invocation Mechanisms, </title> <booktitle> Proc. of VDM '91: 4th Intl Symposium of VDM Europe on Formal Software Development Methods, Noordwijkerhout, The Netherlands, </booktitle> <pages> pp. 3144, </pages> <year> 1991. </year>
Reference-contexts: 1. theoretical models of distributed clocks [21] , vector timestamps [9,25] and partial orders of events [29] ; 2. low-level event managers for operating systems and windowing systems, such as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model <ref> [10] </ref> ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including
Reference: [11] <author> N.H. Gehani and H.V. Jagadish, </author> <title> Ode as an Active Database: Constraints and Triggers, </title> <booktitle> Proc. of VLDB 91: 17th Intl Conf. on Very Large Data Bases, </booktitle> <pages> pp. 327336, </pages> <year> 1991. </year>
Reference-contexts: of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database systems, such as AP5 [7] and Ode <ref> [11] </ref> ; and 10. event-action systems, such as Yeast [20] and Amadeus [33] . Below we examine three particular technologies in detailthe Yeast Event-Action System, the CORBA Event Service, and the Network News Transfer Protocol.
Reference: [12] <author> M.R. Genesereth and S.P. Ketchpel, </author> <title> Software Agents, </title> <journal> Communications of the ACM , vol. </journal> <volume> 37, no. 7, </volume> <pages> pp. </pages> <note> 4853 and 147, </note> <year> 1994. </year>
Reference-contexts: [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel <ref> [12] </ref> ); 9. active database systems, such as AP5 [7] and Ode [11] ; and 10. event-action systems, such as Yeast [20] and Amadeus [33] . Below we examine three particular technologies in detailthe Yeast Event-Action System, the CORBA Event Service, and the Network News Transfer Protocol.
Reference: [13] <author> C. Gerety, </author> <title> HP SoftBench: A New Generation of Software Development Tools, </title> <journal> Hewlett-Packard Journal, </journal> <volume> vol. 41, no. 3, </volume> <pages> pp. 4859, </pages> <year> 1990. </year>
Reference-contexts: One common architectural style for distributed, loosely-coupled, heterogeneous software systems is a structure based on event generation, observation and notification. The technology to support this architectural style is well-developed for local area networks (e.g., Fields Msg [31] , SoftBenchs 7RflDSSHDUflLQflWKHfl3URFHHGLQJVflRIflWKHfl6L [WKfl (XURSHDQfl6RIWZDUHfl (QJLQHHULQJ &RQIHUHQFH$&0fl6,*62)7fl)LIWKfl6"PSRVLXPflRQflWKHfl)RXQGDWLRQVflRIfl6RIWZDUH (QJLQHHULQJ*fl=XULFK*fl6ZLW]HUODQG*fl6HSfltt BMS <ref> [13] </ref> , ToolTalk [17] and Yeast [20] ), but it is illsuited to networks on the scale of the Internet. Hence, new technologies are needed to support the construction of large-scale, event-based software systems for the Internet. <p> for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM <ref> [13] </ref> and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12]
Reference: [14] <editor> R.S. Hall, D. Heimbigner, A. van der Hoek, and A.L. Wolf, </editor> <title> An Architecture for Post-Development Configuration Management in a Wide-Area Network, </title> <booktitle> Proc. of 1997 Intl Conf. on Distributed Computing Systems, </booktitle> <address> Baltimore, MD, </address> <pages> pp. 269278, </pages> <year> 1997. </year>
Reference-contexts: We have several plans for future research on this problem. First, we have begun work on a prototype Internet-scale event observation and notification facility that we are studying in the context of the Software Dock , an agent-based architecture for Internet-scale distributed configuration management and deployment <ref> [14] </ref>. Second, our design framework must better address security, quality-of-service and mobility issues, which could naturally be the subject of additional models in the framework.
Reference: [15] <author> R.W. Hall, A. Mathur, F. Jahanian, A. Prakash, and C. Rassmussen, Corona: </author> <title> A Communication Server for Scalable, Reliable Group Collaboration Systems, </title> <booktitle> Proc. of CSCW '96 6th Conf. on Computer Supported Cooperative Work , Boston, </booktitle> <address> MA, </address> <pages> pp. 140 149, </pages> <year> 1996. </year>
Reference-contexts: ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona <ref> [15] </ref> ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database systems, such as AP5 [7] and Ode [11] ; and 10. event-action systems, such as Yeast [20] and Amadeus [33] .
Reference: [16] <author> D. Heller, </author> <booktitle> The XView Notifier, Unix World, </booktitle> <pages> pp. 123133, </pages> <year> 1990. </year>
Reference-contexts: of technologies are relevant to Internet-scale event observation and notification, and we can classify them as follows: 1. theoretical models of distributed clocks [21] , vector timestamps [9,25] and partial orders of events [29] ; 2. low-level event managers for operating systems and windowing systems, such as the XView Notifier <ref> [16] </ref> and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses,
Reference: [17] <author> A.M. Julienne and B. Holtz, </author> <title> ToolTalk and Open Protocols: Inter-Application Communication: </title> <publisher> Prentice Hall, </publisher> <year> 1994. </year>
Reference-contexts: One common architectural style for distributed, loosely-coupled, heterogeneous software systems is a structure based on event generation, observation and notification. The technology to support this architectural style is well-developed for local area networks (e.g., Fields Msg [31] , SoftBenchs 7RflDSSHDUflLQflWKHfl3URFHHGLQJVflRIflWKHfl6L [WKfl (XURSHDQfl6RIWZDUHfl (QJLQHHULQJ &RQIHUHQFH$&0fl6,*62)7fl)LIWKfl6"PSRVLXPflRQflWKHfl)RXQGDWLRQVflRIfl6RIWZDUH (QJLQHHULQJ*fl=XULFK*fl6ZLW]HUODQG*fl6HSfltt BMS [13] , ToolTalk <ref> [17] </ref> and Yeast [20] ), but it is illsuited to networks on the scale of the Internet. Hence, new technologies are needed to support the construction of large-scale, event-based software systems for the Internet. <p> and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM <ref> [17] </ref> ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database
Reference: [18] <author> B. Kantor and P. Lapsley, </author> <title> Network News Transfer Protocol, Internet Engineering Task Force, Request for Comments RFC 977, </title> <month> February </month> <year> 1986. </year>
Reference-contexts: [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services <ref> [18] </ref> , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database systems, such as AP5 [7] and Ode [11] ; and 10. event-action systems, such as Yeast [20] and Amadeus [33] . <p> We hope that future refinements of the CORBA specification will address more fully the phenomenon of event occurrences within CORBA applications. 4.3 The Network News Transfer Protocol The Network News Transfer Protocol (NNTP) is the protocol used to distribute Usenet news articles across the Internet <ref> [18] </ref> . These articles are organized into a collection of newsgroups, each one being set up to support ongoing discussion of a particular topic. Users express interest in a newsgroup by subscribing to it.
Reference: [19] <author> A. Kaplan and J.C. Wileden, </author> <title> Formalization and Application of a Unifying Model for Name Management, </title> <booktitle> Proc. of ACM SIGSOFT '95 Third Symposium on the Foundations of Software Engineering, </booktitle> <address> Washington, DC, </address> <pages> pp. 161-172, </pages> <year> 1995. </year>
Reference-contexts: This event is observable, since a Web browser could be used to load the old version of the page prior to the occurrence of the event and the new version after the occurrence. 3.3 Naming Model Naming is of central importance in any software system <ref> [19] </ref> , and this is especially true of the naming model for an Internet-scale event observation and notification facility, which provides a way of identifying events, as well as the objects, operations and other information associated with events.
Reference: [20] <author> B. Krishnamurthy and D.S. Rosenblum, Yeast: </author> <title> A General Purpose Event-Action System, </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 21, no. 10, </volume> <pages> pp. 845857, </pages> <year> 1995. </year>
Reference-contexts: The technology to support this architectural style is well-developed for local area networks (e.g., Fields Msg [31] , SoftBenchs 7RflDSSHDUflLQflWKHfl3URFHHGLQJVflRIflWKHfl6L [WKfl (XURSHDQfl6RIWZDUHfl (QJLQHHULQJ &RQIHUHQFH$&0fl6,*62)7fl)LIWKfl6"PSRVLXPflRQflWKHfl)RXQGDWLRQVflRIfl6RIWZDUH (QJLQHHULQJ*fl=XULFK*fl6ZLW]HUODQG*fl6HSfltt BMS [13] , ToolTalk [17] and Yeast <ref> [20] </ref> ), but it is illsuited to networks on the scale of the Internet. Hence, new technologies are needed to support the construction of large-scale, event-based software systems for the Internet. We envision event observation and notification as being an explicit facility provided to software components across the Internet. <p> such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database systems, such as AP5 [7] and Ode [11] ; and 10. event-action systems, such as Yeast <ref> [20] </ref> and Amadeus [33] . Below we examine three particular technologies in detailthe Yeast Event-Action System, the CORBA Event Service, and the Network News Transfer Protocol. <p> A more exhaustive evaluation of existing technologies will be the subject of future work. 4.1 Yeast Yeast (Yet another Event-Action Specification Tool) is a clientserver system in which distributed clients register event-action specifications with a centralized server, which performs event detection and specification management <ref> [20] </ref> . Each specification submitted by a client defines a pattern of events that is of interest to the client's application, plus an action that is to be executed in response to an occurrence of the event pattern.
Reference: [21] <author> L. Lamport, </author> <title> Time, Clocks and the Ordering of Events in a Distributed System, </title> <journal> Communications of the ACM, </journal> <volume> vol. 21, no. 7, </volume> <pages> pp. 558565, </pages> <year> 1978. </year>
Reference-contexts: In the example, the percentage of change must be somehow derivable from the information associated with the event. 3.5 Time Model The theoretical problems of associating times with events in distributed systems and synchronizing clocks across distributed systems are well known (e.g., see Lamport <ref> [21] </ref> ). But as a practical matter, the full ramifications of these issues are yet to be fully understood for networks of Internet scale. As we observe in Section 1, relativistic issues may preclude the use of any deterministic techniques for associating times and causal relationships with events. <p> A number of technologies are relevant to Internet-scale event observation and notification, and we can classify them as follows: 1. theoretical models of distributed clocks <ref> [21] </ref> , vector timestamps [9,25] and partial orders of events [29] ; 2. low-level event managers for operating systems and windowing systems, such as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for
Reference: [22] <author> T.J. LeBlanc and J.M. Mellor- Crummey, </author> <title> Debugging Parallel Programs with Instant Replay, </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-36, no. 4, </volume> <pages> pp. 471482, </pages> <year> 1987. </year>
Reference-contexts: 2. low-level event managers for operating systems and windowing systems, such as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay <ref> [22] </ref> , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of
Reference: [23] <author> D.C. Luckham, D.P. Helmbold, D.L. Bryan, and M.A. Haberler, </author> <title> Task Sequencing Language for Specifying Distributed Ada Systems (TSL-1), </title> <booktitle> Proc. of PARLEThe Conf. on Parallel Architectures and Languages Europe, Volume II: Parallel Languages , pp. </booktitle> <volume> 444463, </volume> <year> 1987. </year>
Reference: [24] <author> D.C. Luckham, J.J. Kenney, L.M. Augustin, J. Vera, D. Bryan, and W. Mann, </author> <title> Specification and Analysis of System Architecture Using Rapide, </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 21, no. 4, </volume> <pages> pp. 336355, </pages> <year> 1995. </year>
Reference-contexts: as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide <ref> [24] </ref> ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic
Reference: [25] <author> F. Mattern, </author> <title> Virtual Time and Global States of Distributed Systems, </title> <booktitle> Proc. of Parallel and Distributed Algorithms, </booktitle> <pages> pp. 215226, </pages> <year> 1988. </year>
Reference: [26] <author> R. Milner, </author> <title> Communication and Concurrency . Hemel Hempstead, </title> <address> Hertfordshire, UK: </address> <publisher> Prentice Hall International, </publisher> <year> 1989. </year>
Reference-contexts: It is common to support event abstraction in order to provide a way of naming a pattern of events. Event abstraction is an especially notable feature of process algebras such as CCS <ref> [26] </ref> . The pattern abstraction policy may support a notion of event abstraction, in which a pattern of observed events is represented by a single abstract event or by a name that is used to refer to the pattern.
Reference: [27] <author> Object Management Group, </author> <title> The Common Object Request Broker: Architecture and Specification, revision 2.0, </title> <month> July </month> <year> 1995. </year>
Reference: [28] <author> Object Management Group, </author> <title> Common Object Services Specification, Volume I, revision 1.0, </title> <month> March </month> <year> 1994. </year>
Reference-contexts: The CORBA specification includes specifications for a number of Common Object Services, one of which is the CORBA Event Service <ref> [28] </ref> . The CORBA Event Service defines a set of interfaces that provide a way for objects to synchronously communicate event messages to each other.
Reference: [29] <author> V. Pratt, </author> <title> Modeling Concurrency with Partial Orders, </title> <journal> Intl Journal of Parallel Programming, </journal> <volume> vol. 15, no. 1, </volume> <pages> pp. 3371, </pages> <year> 1986. </year>
Reference-contexts: A number of technologies are relevant to Internet-scale event observation and notification, and we can classify them as follows: 1. theoretical models of distributed clocks [21] , vector timestamps [9,25] and partial orders of events <ref> [29] </ref> ; 2. low-level event managers for operating systems and windowing systems, such as the XView Notifier [16] and the Macintosh TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant
Reference: [30] <author> J.M. Purtilo, </author> <title> The POLYLITH Software Bus, </title> <journal> ACM Trans. Programming Languages and Systems, </journal> <volume> vol. 16, no. 1, </volume> <pages> pp. 151174, </pages> <year> 1994. </year>
Reference-contexts: TM Toolbox Event Manager [6] ; 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith <ref> [30] </ref> , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18]
Reference: [31] <author> S.P. Reiss, </author> <title> Connecting Tools Using Message Passing in the Field Environment, </title> <journal> IEEE Software, </journal> <volume> vol. 7, no. 4, </volume> <pages> pp. 5766, </pages> <year> 1990. </year>
Reference-contexts: One common architectural style for distributed, loosely-coupled, heterogeneous software systems is a structure based on event generation, observation and notification. The technology to support this architectural style is well-developed for local area networks (e.g., Fields Msg <ref> [31] </ref> , SoftBenchs 7RflDSSHDUflLQflWKHfl3URFHHGLQJVflRIflWKHfl6L [WKfl (XURSHDQfl6RIWZDUHfl (QJLQHHULQJ &RQIHUHQFH$&0fl6,*62)7fl)LIWKfl6"PSRVLXPflRQflWKHfl)RXQGDWLRQVflRIfl6RIWZDUH (QJLQHHULQJ*fl=XULFK*fl6ZLW]HUODQG*fl6HSfltt BMS [13] , ToolTalk [17] and Yeast [20] ), but it is illsuited to networks on the scale of the Internet. Hence, new technologies are needed to support the construction of large-scale, event-based software systems for the Internet. <p> 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA [34] ; 6. tool integration frameworks , including Field <ref> [31] </ref> , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see
Reference: [32] <author> D.S. Rosenblum, </author> <title> Specifying Concurrent Systems with TSL, </title> <journal> IEEE Software, </journal> <volume> vol. 8, no. 3, </volume> <pages> pp. 5261, </pages> <year> 1991. </year>
Reference: [33] <author> R.W. Selby, A.A. Porter, D.C. Schmidt, and J. Berney, </author> <title> Metric-Driven Analysis and Feedback Systems for Enabling Empirically Guided Software Development, </title> <booktitle> Proc. of 13th Intl Conf. on Software Engineering, </booktitle> <pages> pp. 288298, </pages> <year> 1991. </year>
Reference-contexts: mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona [15] ; 6 8. software agent technology (e.g., see Genesereth and Ketchpel [12] ); 9. active database systems, such as AP5 [7] and Ode [11] ; and 10. event-action systems, such as Yeast [20] and Amadeus <ref> [33] </ref> . Below we examine three particular technologies in detailthe Yeast Event-Action System, the CORBA Event Service, and the Network News Transfer Protocol.
Reference: [34] <author> J. Siegel, </author> <title> CORBA Fundamentals and Programming. </title> <address> New York, NY: </address> <publisher> Wiley, </publisher> <year> 1996. </year>
Reference-contexts: 4 3. the implicit invocation design model [10] ; 4. languages and systems for event-based specification, analysis and debugging of software , including Instant Replay [22] , Event-Based Behavioral Abstraction [2] , TSL [23,32] and Rapide [24] ; 5. software buses, such as Polylith [30] , OLE/ActiveX [5] and CORBA <ref> [34] </ref> ; 6. tool integration frameworks , including Field [31] , SoftBench TM [13] and ToolTalk TM [17] ; 5 4 Macintosh is a trademark of Apple Computer, Inc. 7. communication and collaboration systems, such as electronic mail, electronic bulletin boards, network news services [18] , Lotus Notes , and Corona
Reference: [35] <institution> Telecommunications Information Networking Architecture Consortium, TINA Notification Service Description, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: Recently there have been a small number of proposals and initial prototypes for Internet-scale event facilities, such as the OMG CORBA Event Service [27,28] and the TINA Notification Service <ref> [35] </ref> . But the definitions of these facilities address only a limited portion of the full problem space. Therefore, we have begun to design a new facility for event observation and notification that better serves the needs of Internet-scale applications. <p> Additional interfaces define channels, which act as buffers and multicast distribution points between suppliers and consumers. The TINA Notification Service is a similar service defined on top of the CORBA Event Service <ref> [35] </ref> . The CORBA Event Service lacks support for many aspects of event observation and notification defined in Section 3. The object model is the object model of CORBA, and an event is simply a message that one object communicates to another object as a parameter of some interface method.
References-found: 35

