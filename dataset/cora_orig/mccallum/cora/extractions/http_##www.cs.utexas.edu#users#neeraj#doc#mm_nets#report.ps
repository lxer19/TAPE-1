URL: http://www.cs.utexas.edu/users/neeraj/doc/mm_nets/report.ps
Refering-URL: http://www.cs.utexas.edu/users/neeraj/professional.html
Root-URL: 
Email: neeraj@cs.utexas.edu  vishy@cs.utexas.edu  
Title: CS395T:Multimedia Networking  Push Caching  under the guidance of  
Author: Neeraj Garg T R Vishwanath Prof. Harrick Vin 
Date: May 13, 1998  
Pubnum: Project Report  
Abstract: With the exponential growth of the Internet, web caching frameworks have been proposed for server load balancing and for reducing the client latency. Push caching is an extension of web caching where objects are "pushed" proactively by the caches to others, to further reduce latency. In this paper, we examine the design and implementation details of two push caching algorithms for a metadata caching hierarchy proposed by Tewari et al. All implementations have been made using the Squid proxy cache as the underlying platform.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Chankhunthod, P. Danzig, C. Neerdaels, M. Schwartz, and K. Worrell. </author> <title> A hierarchial internet object cache. </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference, </booktitle> <month> Jan </month> <year> 1996. </year>
Reference: [2] <author> Digital Equipment Corporation. </author> <title> Digital web proxy traces. </title> <address> ftp://ftp.digital.com/pub/DEC/traces/proxy/webtraces.html, </address> <month> Sept </month> <year> 1996. </year>
Reference: [3] <author> M. Dahlin, C. Mather, R. Wang, T. Anderson, and D. Patterson. </author> <title> A quantiative analysis of cache policies for scalable network file system. </title> <booktitle> In Proceedings of the SIGMETRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 150-160, </pages> <month> May </month> <year> 1994. </year>
Reference: [4] <author> J. Griffioen and R. Appleton. </author> <title> Automatic prefetching in a wan. </title> <booktitle> In IEEE Workshop on Advances in Parallel and Distributed Systems, </booktitle> <month> October </month> <year> 1993. </year>
Reference: [5] <author> T. Kroeger, D. Long, and J. Mogul. </author> <title> Exploring the bounds of web latency reduction from caching and prefetching. </title> <booktitle> In Proceedings of the USENIX symposium of Internet Technologies and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference: [6] <author> C. Liu and P. Cao. </author> <title> Maintaining strong cache consistency in the world wide web. </title> <booktitle> In Proceedings of the Seventeenth International Conference on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1997. </year>
Reference: [7] <author> V. Padmanabhan and J. Mogul. </author> <title> Using predictive prefetching to improve world wide web latency. </title> <booktitle> In Proceedings of the ACM SIGCOMM'96 conference on Applications, Technologies, Architectures, and Protocols for Computer Communiations, </booktitle> <pages> pages 22-36, </pages> <month> July </month> <year> 1996. </year>
Reference: [8] <author> R. Tewari, M. Dahlin, H. Vin, and J. Kay. </author> <title> Beyond hierarchies: Design considerations for distributed caching on the internet. </title> <type> Technical Report TR98-04, </type> <institution> University of Texas at Austin Computer Sciences Department, </institution> <month> Feb </month> <year> 1998. </year>
Reference-contexts: Tewari et al explore some of these issues in <ref> [8] </ref>. In a cooperative caching framework, latency in accessing objects can be further reduced if caches can proactively send the data to the other caches before they actually receive requests for the data. This is the main idea of push caching. <p> This is the main idea of push caching. Clearly, the effectiveness of push caching schemes depends on how effectively only the data that is needed is pushed to other caches. In this paper, we present the design of two push caching algorithms based on the schemes presented in <ref> [8] </ref>. We also discuss the implementation of these algorithms on a prototype hint cache framework built on top of the Squid proxy cache [9]. The rest of the paper is organized as follows. Section 2 discusses in detail a caching hierarchy proposed in [8], in which only the leaf nodes cache <p> algorithms based on the schemes presented in <ref> [8] </ref>. We also discuss the implementation of these algorithms on a prototype hint cache framework built on top of the Squid proxy cache [9]. The rest of the paper is organized as follows. Section 2 discusses in detail a caching hierarchy proposed in [8], in which only the leaf nodes cache data and hints are used to identify from which cache the data has 1 to be fetched. In Section 3, we present the two push caching algorithms. <p> This process continued recursively till either a cache containing the object was contacted, or the root was reached and the object had to be got from the server. This clearly adds latency to accessing the object. In <ref> [8] </ref>, the authors had studied the traces available and had observed that a majority of cache misses were communication misses. In such a scenario, the above caching hierarchy doesnt help. Instead, they proposed a cache hierarchy where only the leaf caches store the actual data.
Reference: [9] <author> D. Wessels. </author> <title> Squid internet object cache. </title> <note> http://squid.nlanr.net/Squid, Janauary 1998. </note>
Reference-contexts: In this paper, we present the design of two push caching algorithms based on the schemes presented in [8]. We also discuss the implementation of these algorithms on a prototype hint cache framework built on top of the Squid proxy cache <ref> [9] </ref>. The rest of the paper is organized as follows. Section 2 discusses in detail a caching hierarchy proposed in [8], in which only the leaf nodes cache data and hints are used to identify from which cache the data has 1 to be fetched.
Reference: [10] <author> D. Wessels and K Claffy. </author> <title> Application of internet cache protocol(icp) version 2. request of comments rfc-2186, network working group. </title> <note> http://ds.internic.net/rfc/rfc2187.txt, 1997. </note>
Reference: [11] <author> L. Zhang, S. Floyd, , and V. Jacobson. </author> <title> Adaptive web caching. </title> <note> http://ircache.nlanr.net/Cache/Workshop97/, June 1997. </note>
Reference-contexts: Such objects need to be treated separately. In case of both the systems, a large number of caches may demand the same object from the same cache simultaneously. An approach for scalability might be to distribute it using a lightweight multicast protocol as in <ref> [11] </ref>.
References-found: 11

