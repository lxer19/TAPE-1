URL: http://www.cs.ucl.ac.uk/research/mobile/archives/ucl/mobile/mazliza/mc2r.ps
Refering-URL: http://www.cs.ucl.ac.uk/staff/M.Othman/
Root-URL: http://www.cs.ucl.ac.uk
Email: @cs.ucl.ac.uk  
Title: Mobile Computing and Communications Review, Vol..  Power Conservation Strategy for Mobile Computers Using Load Sharing  
Author: Mazliza Othman Stephen Hailes -M.Othman, S.Hailes- 
Address: Gower Street London WC1E 6BT  
Affiliation: Deparment of Computer Science University College London  
Date: 1, January 1998  
Pubnum: 2, No.  
Abstract: Power management is an important aspect of mobile computing. Previous works on power conservation have concentrated on the hardware approach. In this paper, we propose a different approach of power conservation strategy for mobile computers which is based on the concept of load sharing. User jobs are transferred from a mobile host to a fixed host to reduce power consumption by the CPU. Simulation results show that under suitable conditions, transferring job can extend battery lifetime by up to 20%. Transferring jobs to a fixed host does not only extend battery lifetime but also gives users access to faster machines, hence improving job response time. 
Abstract-found: 1
Intro-found: 1
Reference: [Alon93] <author> R. Alonso, H.F. </author> <booktitle> Korth , Database System Issues in Nomadic Computing , SIGMOD Record Vol. </booktitle> <volume> 22, Iss. 2, </volume> <month> June </month> <year> 1993. </year> <title> performance comparison of LS, ALS and History 0.0 10.0 20.0 u s e r 2 u s e r 4 a v e r a g e a t t e r y f e t i e p r o v en LS History ALS </title>
Reference-contexts: They will expect the same computational environment regardless of their location [Tera91]. Alonso and Korth envisioned that applications run will be similar to those currently served by laptop computers and these applications will demand various transaction and transaction-like services <ref> [Alon93] </ref>. Ideally, users should receive the same quality of service and performance as if they were connected to the wired network.
Reference: [Badr93] <author> B.R. Badrinath, A. Acharya, T. </author> <booktitle> Imielinski , Impact of Mobility on Distributed Computing , Operating Systems Review, </booktitle> <volume> Vol. 27, No. 2, </volume> <month> April </month> <year> 1993. </year>
Reference-contexts: Although the limitations are being addressed in successive technologies, the performance disparity between the wireless and wired networks is likely to remain [Wats94]. Mobile hosts have significantly lower memory capacity and computing power compared to a fixed host. For this reason, <ref> [Badr93] </ref> proposed that the computation and communication load should be borne by the static part of the network to the extent possible. Doing so will reduce the burden of computation on mobile hosts and also helps conserve battery power. <p> In order to conserve power message transmission from a mobile host should be kept to a minimum. Communication in a cell needs to be asymmetric to reduce power consumption on the mobile hosts and to better exploit the broadcast capability of the medium <ref> [Badr93] </ref>. Power can also be conserved by design and efficient operation. Applications can conserve power by reducing their appetite for computation, communication and memory [Form94]. The power conservation strategy we are proposing takes on the suggestion that the computation load should be borne by the fixed network by [Badr93]. 2.3 Load <p> the medium <ref> [Badr93] </ref>. Power can also be conserved by design and efficient operation. Applications can conserve power by reducing their appetite for computation, communication and memory [Form94]. The power conservation strategy we are proposing takes on the suggestion that the computation load should be borne by the fixed network by [Badr93]. 2.3 Load Sharing in Wireless Networks Mobility introduces new challenges as a lot of assumptions made regarding distributed networks are no longer valid in wireless networks. Wireless networks are associated with low bandwidth, high delays and frequent disconnection.
Reference: [Davi93] <author> N. Davies, G.S. Blair, </author> <title> A.D. Cross, </title> <booktitle> P.F. Raven , Mobile Open Systems Technologies for the Utilities Industries , IEE Colloquium on CSCW Issues for Mobile and Remote Workers, </booktitle> <month> March, </month> <year> 1993. </year>
Reference-contexts: 1. Introduction Advancing technology in wireless communication will allow roaming users to access the network while away from their office. An example of an application for roaming users is the MOST project <ref> [Davi93] </ref>, where engineers take their laptops with them to the field. Wireless Coyote [Gran93] is an example of how wireless technology can be used in an educational product. The Wireless Coyote experiment involved four groups of students who used the product on a field trip.
Reference: [Doug94a] <author> F. Douglis, P. Krishnan, B. Marsh, </author> <booktitle> Thwarting the Power-Hungry Disk , 1994 Winter USENIX Conference, </booktitle> <month> January </month> <year> 1994. </year>
Reference-contexts: Executing the jobs at a fixed host will not only reduce power consumption but will also give the mobile access to a faster machine and, thus, improves performance. Previous works on power conservation have concentrated on the hardware approach. <ref> [Doug94a] </ref> and [Doug95] discuss a strategy of spinning down the hard disk during idle periods which will reduce power consumption on mobile computers. [Helm96] discusses a dynamic disk spin-down algorithm which receives input from a set of experts.
Reference: [Doug94b] <author> F. Douglis, R. Caceres, B. Marsh, F. Kaashoek, K. Li, </author> <title> Storage Alternatives for Mobile Computers , Proc. </title> <booktitle> of the 1st. Symposium on Operating System Design and Implementation, USENIX Assc., </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: Each expert is assigned a weight which is updated after each trial depending on how accurate or misleading the expert's prediction is. <ref> [Doug94b] </ref> discusses a storage alternative, the flash memory, which consumes less power, has low latency and has high throughput for read accesses. [Weis94] proposed a method of power savings by reducing the CPU clock speed.
Reference: [Doug95] <author> F. Douglis, P. Krishnan, B. </author> <booktitle> Bershad , Adaptive Disk Spin-Down Policies for Mobile Computers , 2nd USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Executing the jobs at a fixed host will not only reduce power consumption but will also give the mobile access to a faster machine and, thus, improves performance. Previous works on power conservation have concentrated on the hardware approach. [Doug94a] and <ref> [Doug95] </ref> discuss a strategy of spinning down the hard disk during idle periods which will reduce power consumption on mobile computers. [Helm96] discusses a dynamic disk spin-down algorithm which receives input from a set of experts.
Reference: [Eage86] <author> D.L. Eager, E.D. Lazowska, J. </author> <title> Zahorjan , Adaptive Load Sharing in Homogeneous Distributed Systems , IEEE Transactions on Software Engineering, </title> <journal> Vol. </journal> <volume> 12, No. 5, </volume> <month> May </month> <year> 1986. </year>
Reference-contexts: On the other hand, a less frequent period will result in out of date information being used. Several load sharing algorithms have been proposed. The algorithms vary from those which make no use of system state information (e.g. Random algorithm of <ref> [Eage86] </ref>) to those which attempt to make use of global state information (e.g. [Krue94]). Not all jobs are suitable for migration. [Zhou88] observes that some jobs are immobile, i.e. they have to be executed locally. Examples of such jobs are those which perform local services and/or require local resources. <p> Migrating a job involves packaging it at the source node, transmitting it through the communication network and unpacking it at the destination. A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], <ref> [Eage86] </ref>, [Shin89] and [Mirc90]). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were [Hsu86], [Sven90], [Zein91] and [Krem92]. <p> The percentage of jobs transferred for user4 is low because most jobs are short-lived and, therefore, not worth migrating. This agrees with the suggestion of <ref> [Eage86] </ref> that a practical implementation of load sharing should attempt to selects jobs with a relatively high ratio of processing costs to transfer cost. indeed correspond to average CPU utilisation. 4.4 History and ALS Table 3 summarises the simulation results for users using History and ALS compared to LS .
Reference: [Form94] <author> G.H. Forman, J. </author> <title> Zahorjan , The Challenges of Mobile Computing, </title> <type> Technical Report , UW CSE #93-11-03, </type> <institution> University of Washington, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: This paper discusses an approach to reduce power consumption by the CPU. The CPU consumes approximately 31% power on a mobile computer <ref> [Form94] </ref>. The proposed approach borrows from the concept of load sharing. Jobs are migrated from a mobile host to a fixed host for execution in order to reduce power consumption by the mobile's CPU. <p> Power can also be conserved by design and efficient operation. Applications can conserve power by reducing their appetite for computation, communication and memory <ref> [Form94] </ref>. <p> Transmitting and receiving will consume 3.4W and 1.7W respectively [Imie96]. <ref> [Form94] </ref> lists power consumption of hardware components of a portable computer. Based on this information, the battery will last for about 3.4 hours, assuming that general power consumption (i.e. power consumption by the basic components such as the display, hard drive, keyboard etc) will be about 10.1 W.
Reference: [Gran93] <author> W.C. Grant, </author> <title> Wireless Coyote : A Computer-Supported Field Trip , Communication of the ACM, </title> <journal> Vol. </journal> <volume> 36, No. 5, </volume> <month> May </month> <year> 1993. </year>
Reference-contexts: 1. Introduction Advancing technology in wireless communication will allow roaming users to access the network while away from their office. An example of an application for roaming users is the MOST project [Davi93], where engineers take their laptops with them to the field. Wireless Coyote <ref> [Gran93] </ref> is an example of how wireless technology can be used in an educational product. The Wireless Coyote experiment involved four groups of students who used the product on a field trip. The application allowed the groups of students in different locations to share the data they collected in real-time.
Reference: [Helm96] <author> D.P. Helmbold, D.D.E. Long, B. Sherrod, </author> <title> A Dynamic Disk Spin-Down Technique for Mobile Computing , Mobicom 1996. </title>
Reference-contexts: Previous works on power conservation have concentrated on the hardware approach. [Doug94a] and [Doug95] discuss a strategy of spinning down the hard disk during idle periods which will reduce power consumption on mobile computers. <ref> [Helm96] </ref> discusses a dynamic disk spin-down algorithm which receives input from a set of experts.
Reference: [Hsu86] <author> C.H. Hsu, J. Liu, </author> <booktitle> Dynamic Load Balancing Algorithms in Homogeneous Distributed Systems , Proceedings of the 6th International Conference on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1986. </year>
Reference-contexts: A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], [Eage86], [Shin89] and [Mirc90]). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were <ref> [Hsu86] </ref>, [Sven90], [Zein91] and [Krem92]. If a file used by a job has to be transferred to be migrated along with it, the delay factor will be even more significant. This study investigates the use of load sharing for a different purpose.
Reference: [Imie96] <author> T. Imielinski (ed.), H.F. </author> <title> Korth, </title> <publisher> Mobile Computing , Kluwer Academic Publishers, </publisher> <year> 1996. </year>
Reference-contexts: Transmitting and receiving will consume 3.4W and 1.7W respectively <ref> [Imie96] </ref>. [Form94] lists power consumption of hardware components of a portable computer. Based on this information, the battery will last for about 3.4 hours, assuming that general power consumption (i.e. power consumption by the basic components such as the display, hard drive, keyboard etc) will be about 10.1 W.
Reference: [Inte94] <institution> Intel Application Note, </institution> <note> Pentiumfi Processor (610"75) Power Consumption, Rev. </note> <month> 1.1 , October </month> <year> 1994. </year>
Reference-contexts: Power consumed by the CPU is = P 3600 CPU P = power consumed by the CPU t = CPU time taken to execute a job on a mobile (sec) Based on the information provided in Intel's Application Note <ref> [Inte94] </ref>, the average active CPU power consumption is assumed to be 4.59 Watts and idle power consumption, i.e. doze mode, (with Advanced Power Management) is 1.24 Watts. 3.5 Assumptions At the moment the simulation only considers job migration between a mobile and its Mobile Support Station (MSS) or Base Station (BS).
Reference: [Krem92] <author> O. Kremian, J. </author> <title> Kramer , Methodical Analysis of Adaptive Load Sharing Algorithms , IEEE Transactions on Parallel and Distributed Systems, </title> <journal> Vol. </journal> <volume> 3, No. 6, </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], [Eage86], [Shin89] and [Mirc90]). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were [Hsu86], [Sven90], [Zein91] and <ref> [Krem92] </ref>. If a file used by a job has to be transferred to be migrated along with it, the delay factor will be even more significant. This study investigates the use of load sharing for a different purpose.
Reference: [Krue94] <author> P. Krueger, N.G. </author> <title> Shivarati , Adaptive Location Policies for Global Scheduling , IEEE Transactions on Software Engineering, </title> <journal> Vol. </journal> <volume> 20, No. 6, </volume> <month> June </month> <year> 1994. </year>
Reference-contexts: Several load sharing algorithms have been proposed. The algorithms vary from those which make no use of system state information (e.g. Random algorithm of [Eage86]) to those which attempt to make use of global state information (e.g. <ref> [Krue94] </ref>). Not all jobs are suitable for migration. [Zhou88] observes that some jobs are immobile, i.e. they have to be executed locally. Examples of such jobs are those which perform local services and/or require local resources.
Reference: [Mirc90] <author> R. Mirchandaney, D. Towsley, J.A. Stankovic, </author> <title> Adaptive Load Sharing in Heterogeneous Distributed Systems , Journal of Parallel and Distributed Computing, </title> <journal> Vol. </journal> <volume> 9, No. 4, </volume> <month> August </month> <year> 1990. </year>
Reference-contexts: Migrating a job involves packaging it at the source node, transmitting it through the communication network and unpacking it at the destination. A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], [Eage86], [Shin89] and <ref> [Mirc90] </ref>). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were [Hsu86], [Sven90], [Zein91] and [Krem92]. If a file used by a job has to be transferred to be migrated along with it, the delay factor will be even more significant.
Reference: [Shen92] <author> S. Sheng, A. Chandrakasan, R.W. </author> <title> Brodersen , A Portable Multimedia Terminal , IEEE Communications Magazine, </title> <month> December </month> <year> 1992. </year>
Reference-contexts: Under continuous use, the battery will last for about 2 - 3 hours. Ideally it should last for 8 hours (one working day). Since the projection on progress in battery technology shows that only a 20% improvement in battery capacity will occur over the next 10 years <ref> [Shen92] </ref>, it is vital that power utilisation is managed efficiently and economically. This paper discusses an approach to reduce power consumption by the CPU. The CPU consumes approximately 31% power on a mobile computer [Form94]. The proposed approach borrows from the concept of load sharing.
Reference: [Shin89] <author> K.G. Shin, Y.C. Chang, </author> <title> Load Sharing in Distributed Real-Time Systems with State-Change Broadcasts, </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 38, No. 8, </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: Migrating a job involves packaging it at the source node, transmitting it through the communication network and unpacking it at the destination. A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], [Eage86], <ref> [Shin89] </ref> and [Mirc90]). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were [Hsu86], [Sven90], [Zein91] and [Krem92]. If a file used by a job has to be transferred to be migrated along with it, the delay factor will be even more significant.
Reference: [Shor95] <author> J. Short, R. Bagrodia, L. </author> <title> Kleinrock , Mobile Wireless Network System Simulation , Mobicom '95, </title> <month> November </month> <year> 1995. </year>
Reference-contexts: We expect this algorithm to be the most practical compared to the other two algorithms since it makes no assumption of a priori knowledge and is able to adapt its behaviour according to a user's working pattern. 3.2 The Simulation The simulation is written using Maisie <ref> [Shor95] </ref> which is a C-based simulation language. Entities are defined to represent mobile hosts, mobile support stations, fixed hosts and communication channels. The entities communicate using message passing. 3.3 Trace Data We would like the simulation to represent the type of workload generated in real life.
Reference: [Sven90] <author> A. Svensson, </author> <title> History, </title> <booktitle> an Intelligent Load Sharing Filter , Proceeding of the 10th International Conference on Distributed Computing Systems, </booktitle> <year> 1990. </year>
Reference-contexts: A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], [Eage86], [Shin89] and [Mirc90]). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were [Hsu86], <ref> [Sven90] </ref>, [Zein91] and [Krem92]. If a file used by a job has to be transferred to be migrated along with it, the delay factor will be even more significant. This study investigates the use of load sharing for a different purpose.
Reference: [Tera91] <author> F. Teraoka, Y. Yokote, M. Tokoro, </author> <title> A Network Architecture Providing Host Migration Transparency , ACM SIGCOMM, </title> <month> September </month> <year> 1991. </year>
Reference-contexts: Users will want to run the same applications that they run on a fixed network. They will expect the same computational environment regardless of their location <ref> [Tera91] </ref>. Alonso and Korth envisioned that applications run will be similar to those currently served by laptop computers and these applications will demand various transaction and transaction-like services [Alon93]. Ideally, users should receive the same quality of service and performance as if they were connected to the wired network.
Reference: [Wang85] <author> Y.T. Wang, R.J.T. Morris, </author> <title> Load Sharing in Distributed Systems, </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. C-34, No. 3, </volume> <month> March </month> <year> 1985. </year>
Reference: [Wats94] <author> T. Watson, </author> <booktitle> Application Design for Wireless Computing , IEEE Workshop on Mobile Computing, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: Although the limitations are being addressed in successive technologies, the performance disparity between the wireless and wired networks is likely to remain <ref> [Wats94] </ref>. Mobile hosts have significantly lower memory capacity and computing power compared to a fixed host. For this reason, [Badr93] proposed that the computation and communication load should be borne by the static part of the network to the extent possible.
Reference: [Weis94] <author> M. Weiser, B. Welch, A. Demers, S. </author> <title> Shenker , Scheduling for Reduced CPU Energy , USENIX 1994 Operating System Design and Implementation Symposium, </title> <month> November </month> <year> 1994. </year>
Reference-contexts: Each expert is assigned a weight which is updated after each trial depending on how accurate or misleading the expert's prediction is. [Doug94b] discusses a storage alternative, the flash memory, which consumes less power, has low latency and has high throughput for read accesses. <ref> [Weis94] </ref> proposed a method of power savings by reducing the CPU clock speed. In this paper, Weiser et al shows that is better to spread work out by reducing clock speed and voltage than to run the CPU at full speed for short bursts and then idle.
Reference: [Zein91] <author> O. ZeinElDine, M. El-Toweissy, R. Mukkamala, </author> <title> A Distributed Scheduling algorithm for Heterogeneous Real-Time Systems , Lecture Notes in Computer Science, </title> <journal> Vol. </journal> <volume> 497, </volume> <year> 1991. </year>
Reference-contexts: A number of previous works assumed that the probing cost and/or network cost to be negligible ([Wang85], [Eage86], [Shin89] and [Mirc90]). Probes are usually assumed to take zero time. Other works which made a non-negligible delay assumptions were [Hsu86], [Sven90], <ref> [Zein91] </ref> and [Krem92]. If a file used by a job has to be transferred to be migrated along with it, the delay factor will be even more significant. This study investigates the use of load sharing for a different purpose.

References-found: 25

