URL: http://www.mcs.anl.gov/~thakur/papers/ipps94-all-to-all.ps.gz
Refering-URL: http://www.mcs.anl.gov/~thakur/papers.html
Root-URL: http://www.mcs.anl.gov
Email: @npac.syr.edu  
Title: All-to-All Communication on Meshes with Wormhole Routing  
Author: Rajeev Thakur and Alok Choudhary thakur, choudhar 
Address: 111 College Place, Rm 3-228 Syracuse University, Syracuse NY 13244  
Affiliation: Northeast Parallel Architectures Center  
Note: In Proc. of IPPS '94, pp. 561-565  
Abstract: This paper describes several algorithms to perform all-to-all communication on a two-dimensional mesh connected computer with wormhole routing. We discuss both direct algorithms, in which data is sent directly from source to destination processor, and indirect algorithms in which data is sent through one or more intermediate processors. We propose algorithms for both power-of-two and non power-of-two meshes as well as an algorithm which works for any arbitrary mesh. We have developed analytical models to estimate the performance of the algorithms on the basis of system parameters. Performance results obtained on the Intel Touchstone Delta are compared with the estimated values. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Barnett, M., Littlefield, R., Payne, D., and van de Geijn, R., </author> <title> "Global Combine on Mesh Architectures with Wormhole Routing", </title> <booktitle> Proc. of 7 th Int. Parallel Proc. Symp., </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: Details of wormhole routing techniques can be found in [5]. To model the performance of the algorithms, we use an approach similar to that used by Barnett et al in <ref> [1] </ref>. <p> For the Delta, fl = 1 is a good approximation <ref> [1] </ref>. In other words, even if two messages contend for a link, there is no increase in communication time. <p> We have validated the models developed to predict the performance of the algorithms by comparing the predicted times with the actual times observed on the Delta. For this purpose, we use typical values for the communication costs on the Delta <ref> [4, 1] </ref>, namely for unforced messages ff = 75s, fi ex = 0:35s and for forced messages ff = 150s, fi ex = 0:2s.
Reference: [2] <author> Bokhari, S., </author> <title> "Complete Exchange on the iPSC/860", </title> <type> ICASE Technical Report 91-4, </type> <year> 1991. </year>
Reference-contexts: Hence it is necessary to use efficient algorithms to perform complete exchange. fl The authors are also with the Dept. of Electrical and Computer Engineering, Syracuse University Complete exchange algorithms for hypercube and fat tree architectures are described in <ref> [2, 6] </ref>. These algorithms assume that the number of processors is a power-of-two, which is a valid assumption for those architectures. <p> We first discuss three direct algorithms for complete exchange on a mesh. In direct algorithms, data is sent directly from source processor to destination processor. 3.1 Pairwise Exchange for Power-of-Two Mesh (PEX) The best algorithm for a hypercube architecture is the pairwise exchange algorithm described in <ref> [2, 7] </ref>, as it guarantees no link contention in the hypercube at every step. This algorithm has also been shown to perform well on the fat tree architecture of the CM-5 [6]. It requires p1 steps and the communication schedule is as follows.
Reference: [3] <author> Bokhari, S., and Berryman, H., </author> <title> "Complete Exchange on a Circuit Switched Mesh", </title> <booktitle> Proc. of Scalable High Perf. Computing Conf., </booktitle> <year> 1992, </year> <pages> pp. 300-306. </pages>
Reference-contexts: Previous work on complete exchange algorithms for a mesh assumes that the number of processors is a power-of-two <ref> [3, 7] </ref>. In this paper, we discuss algorithms for both power-of-two and non power-of-two meshes. We have developed analytical models to estimate the performance of the algorithms. We present performance results on the Intel Touchstone Delta and compare them with the predicted values.
Reference: [4] <author> Littlefield, R., </author> <title> "Tuning Communication", Proceedings of the Delta Advanced User Training Class Notes, </title> <type> CCSF Technical Report CCSF-25-92, </type> <month> July </month> <year> 1992, </year> <pages> pp. 99-119. </pages>
Reference-contexts: Hence, the total time required for IPEX is given by : T IP EX = i=1 + j=1 + i=1 5 Performance We implemented all the algorithms on the Intel Touchstone Delta and studied their performance for different mesh configurations and message sizes. As suggested in <ref> [4] </ref>, we use forced messages (which provide higher bandwidth but also higher startup cost) if the message size is greater than or equal to 1.5 Kbytes and unforced messages if the message size is less than 1.5 Kbytes. on a 16 fi 32 mesh for different message sizes. <p> We have validated the models developed to predict the performance of the algorithms by comparing the predicted times with the actual times observed on the Delta. For this purpose, we use typical values for the communication costs on the Delta <ref> [4, 1] </ref>, namely for unforced messages ff = 75s, fi ex = 0:35s and for forced messages ff = 150s, fi ex = 0:2s.
Reference: [5] <author> Ni, L., and McKinley, P., </author> <title> "A Survey of Wormhole Routing Techniques in Direct Networks", </title> <booktitle> Computer, </booktitle> <month> February </month> <year> 1993, </year> <pages> pp. 62-76. </pages>
Reference-contexts: The Intel Touchstone Delta, the Intel Paragon and the Symult 2010 use a two-dimensional mesh while the MIT J-machine and the Mosaic computer developed at Caltech use a three-dimensional mesh <ref> [5] </ref>. All these machines use wormhole routing, an important feature of which is that the network latency is almost independent of the path length when there is no link contention and the packet size is large. <p> Thus, if L f &lt;< L, the path length D will not significantly affect the network latency provided there is no link contention. Details of wormhole routing techniques can be found in <ref> [5] </ref>. To model the performance of the algorithms, we use an approach similar to that used by Barnett et al in [1].
Reference: [6] <author> Ponnusamy, R., Thakur, R., Choudhary, A., and Fox G., </author> <title> "Scheduling Regular and Irregular Communication Patterns on the CM-5", </title> <booktitle> Proc. of Supercomputing 92, </booktitle> <month> November </month> <year> 1992, </year> <pages> pp. 394-402. </pages>
Reference-contexts: Hence it is necessary to use efficient algorithms to perform complete exchange. fl The authors are also with the Dept. of Electrical and Computer Engineering, Syracuse University Complete exchange algorithms for hypercube and fat tree architectures are described in <ref> [2, 6] </ref>. These algorithms assume that the number of processors is a power-of-two, which is a valid assumption for those architectures. <p> This algorithm has also been shown to perform well on the fat tree architecture of the CM-5 <ref> [6] </ref>. It requires p1 steps and the communication schedule is as follows. In step i, 1 i p 1, each processor exchanges data with the processor determined by taking the exclusive-or of its processor number with i.
Reference: [7] <author> Scott, D., </author> <title> "Efficient All-to-All Communication Patterns in Hypercube and Mesh Topologies", </title> <booktitle> Proc. of 6 th Distributed Memory Computing Conf., </booktitle> <year> 1991, </year> <pages> pp. 398-403. </pages>
Reference-contexts: Previous work on complete exchange algorithms for a mesh assumes that the number of processors is a power-of-two <ref> [3, 7] </ref>. In this paper, we discuss algorithms for both power-of-two and non power-of-two meshes. We have developed analytical models to estimate the performance of the algorithms. We present performance results on the Intel Touchstone Delta and compare them with the predicted values. <p> In other words, even if two messages contend for a link, there is no increase in communication time. Note that since the Delta has bidirectional links, two messages contend for a link only if they need to travel in the same direction simultaneously. 3 Direct Algorithms Scott <ref> [7] </ref> has shown that a 3 =4 is the lower bound on the number of phases required to perform a complete exchange on an a fi a mesh such that there is no link contention in any phase. <p> We first discuss three direct algorithms for complete exchange on a mesh. In direct algorithms, data is sent directly from source processor to destination processor. 3.1 Pairwise Exchange for Power-of-Two Mesh (PEX) The best algorithm for a hypercube architecture is the pairwise exchange algorithm described in <ref> [2, 7] </ref>, as it guarantees no link contention in the hypercube at every step. This algorithm has also been shown to perform well on the fat tree architecture of the CM-5 [6]. It requires p1 steps and the communication schedule is as follows.
References-found: 7

