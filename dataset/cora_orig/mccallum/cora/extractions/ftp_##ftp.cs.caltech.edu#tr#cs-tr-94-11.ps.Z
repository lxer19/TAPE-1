URL: ftp://ftp.cs.caltech.edu/tr/cs-tr-94-11.ps.Z
Refering-URL: ftp://ftp.cs.caltech.edu/tr/INDEX.html
Root-URL: http://www.cs.caltech.edu
Title: RECURRENCE-BASED HEURISTICS FOR THE HAMILTONIAN PATH INCLUSION AND EXCLUSION ALGORITHM  
Author: ERIC BAX 
Keyword: Key words. algorithms, combinatorial problems, parallel algorithms.  
Note: AMS subject classifications. 05,68  
Abstract: For many problem instances, the inclusion and exclusion formula has many cancellations and symmetries. By imposing a hierarchy on the formula's terms, we develop general reductions for inclusion and exclusion algorithms. We apply these reductions to an algorithm which counts Hamiltonian paths, and we develop a branch and bound algorithm to detect Hamiltonian paths. Then we show how to apply the reductions to other inclusion and exclusion algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Bax, </author> <title> Inclusion and exclusion algorithm for the Hamiltonian path problem, </title> <journal> Inf. Proc. Lett., </journal> <volume> 47 (4) (1993), </volume> <pages> pp. 203-207. </pages>
Reference-contexts: Also, the inclusion and exclusion algorithms can be efficiently computed using message-passing parallel machines because the lack of data interdependencies among computed terms means that very little communication is required <ref> [1] </ref>. Our top-down approach to reduction development ensures that these algorithms remain efficient on parallel machines. 2. Inclusion and Exclusion. Inclusion and exclusion counts the members of a universal set U that do not belong to any of the sets P 1 : : : P n . Definition 2.1. <p> We can compute N (S) in poly (n) time by dynamic programming [6] or adjacency matrix multiplication <ref> [1] </ref>. 6.2. Applying the Symmetry Reduction.
Reference: [2] <author> E. Bax, </author> <title> Counting paths and cycles, </title> <journal> Inf. Proc. Lett., </journal> <volume> 52 (1994), </volume> <pages> pp. 249-252. </pages>
Reference-contexts: 1. Introduction. The principle of inclusion and exclusion is the basis for several combinatorial algorithms, including counting graph colorings [12]; computing the matrix permanent [10]; counting Hamiltonian paths, sequencing, and bin packing [6]; counting satisfying assignments to a DNF formula [7]; and counting paths and cycles <ref> [2] </ref>. These algorithms have exponential time complexity, as do their dynamic programming counterparts (e.g. see [5, 3].) But the inclusion and exclusion algorithms have polynomial space requirements, while their dynamic programming counterparts require exponential space.
Reference: [3] <author> R. Bellman, </author> <title> Combinatorial processes and dynamic programming, </title> <editor> in: R. Bellman and M. Hall, Eds., </editor> <booktitle> Combinatorial Analysis, Proc. AMS Symposia on Applied Mathematics, </booktitle> <volume> Vol. X, </volume> <publisher> American Mathematical Society, </publisher> <address> Providence, RI, </address> <year> 1960. </year>
Reference-contexts: These algorithms have exponential time complexity, as do their dynamic programming counterparts (e.g. see <ref> [5, 3] </ref>.) But the inclusion and exclusion algorithms have polynomial space requirements, while their dynamic programming counterparts require exponential space.
Reference: [4] <author> Y. Gurevich and S. Shelah, </author> <title> Expected computation time for Hamiltonian path problem, </title> <journal> SIAM J. Comput., </journal> <volume> 16 (3) (1987), </volume> <pages> pp. 486-502. </pages>
Reference-contexts: These results are validated by of G n;p having an s-t Hamiltonian path in Figure 1. For large n, is the algorithm efficient in the p threshold range? The algorithm's performance in the p threshold range affects its usefulness as a backup algorithm for probabilistic detection algorithms (e.g. <ref> [4] </ref>) that work well when G n;p is either almost surely Hamiltonian or almost surely non-Hamiltonian. Acknowledgements. I thank Dr. Douglas Rall, Dr. P. M. Cook, and Dr. Andras Recski for introducing me to combinatorial algorithms. I thank Zehra Catal-tepe, Paul Sivilotti, Dr. Joel Franklin, and Dr.
Reference: [5] <author> M. Held and R. M. Karp, </author> <title> A dynamic programming approach to sequencing problems, </title> <journal> J. Soc. Indust. Appl. Math., </journal> <volume> 10 (1962), </volume> <pages> pp. 196-210. </pages>
Reference-contexts: These algorithms have exponential time complexity, as do their dynamic programming counterparts (e.g. see <ref> [5, 3] </ref>.) But the inclusion and exclusion algorithms have polynomial space requirements, while their dynamic programming counterparts require exponential space.
Reference: [6] <author> R. M. Karp, </author> <title> Dynamic programming meets the principle of inclusion and exclusion, </title> <journal> Operations Research Letters, </journal> <volume> 1 (2) (1982), </volume> <pages> pp. 49-51. </pages>
Reference-contexts: 1. Introduction. The principle of inclusion and exclusion is the basis for several combinatorial algorithms, including counting graph colorings [12]; computing the matrix permanent [10]; counting Hamiltonian paths, sequencing, and bin packing <ref> [6] </ref>; counting satisfying assignments to a DNF formula [7]; and counting paths and cycles [2]. These algorithms have exponential time complexity, as do their dynamic programming counterparts (e.g. see [5, 3].) But the inclusion and exclusion algorithms have polynomial space requirements, while their dynamic programming counterparts require exponential space. <p> We can compute N (S) in poly (n) time by dynamic programming <ref> [6] </ref> or adjacency matrix multiplication [1]. 6.2. Applying the Symmetry Reduction. <p> So the algorithm presented here maintains the polynomial space requirement of the earlier algorithms. There are O (2 n ) tree nodes, and partitioning R by s () takes O (njEj) time in each node. Also, computing N (S) requires O (njEj) time <ref> [6] </ref> for each S f1 : : : ng. Therefore, the algorithm has time complexity O (2 n njEj). 6.5. Testing.
Reference: [7] <author> N. Linial and N. Nisan, </author> <title> Approximate inclusion-exclusion, </title> <journal> Combinatorica, </journal> <volume> 10 (4) (1990), </volume> <pages> pp. 349-365. </pages>
Reference-contexts: 1. Introduction. The principle of inclusion and exclusion is the basis for several combinatorial algorithms, including counting graph colorings [12]; computing the matrix permanent [10]; counting Hamiltonian paths, sequencing, and bin packing [6]; counting satisfying assignments to a DNF formula <ref> [7] </ref>; and counting paths and cycles [2]. These algorithms have exponential time complexity, as do their dynamic programming counterparts (e.g. see [5, 3].) But the inclusion and exclusion algorithms have polynomial space requirements, while their dynamic programming counterparts require exponential space.
Reference: [8] <author> C. H. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization, Algorithms and Complexity Prentice-Hall, </title> <publisher> Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1982, </year> <pages> pp. 433-448. </pages>
Reference-contexts: Detection and Bounding Algorithms. The algorithm can be altered to solve the detection problem, i.e. to determine whether or not G contains at least one s-t Hamiltonian path. We follow the branch and bound model <ref> [8] </ref>, but we use the method for counting rather than optimization. The algorithm begins with a single active node representing N (f1 : : : ng; ;). At each step an active node is replaced by an equivalent set of active nodes (branches) or computed N (S) terms (leaves).
Reference: [9] <author> L. P osa, </author> <title> Hamiltonian circuits in random graphs, </title> <journal> Discrete Mathematics, </journal> <volume> 14 (1976), </volume> <pages> pp. 359-364. </pages>
Reference-contexts: In highly symmetric graphs it may be worthwhile to examine symmetry among subgraphs as well. Posa <ref> [9] </ref> shows that the minimum p value for which G n;p is almost surely Hamil-tonian decreases to zero as n goes to infinity.
Reference: [10] <author> H. J. </author> <title> Ryser, </title> <journal> Combinatorial Mathematics The Mathematical Association of America, </journal> <year> 1963, </year> <pages> pp. 24-28. </pages>
Reference-contexts: 1. Introduction. The principle of inclusion and exclusion is the basis for several combinatorial algorithms, including counting graph colorings [12]; computing the matrix permanent <ref> [10] </ref>; counting Hamiltonian paths, sequencing, and bin packing [6]; counting satisfying assignments to a DNF formula [7]; and counting paths and cycles [2]. <p> To calculate N (S), zero the columns indexed by S, and take the product of the row sums <ref> [10] </ref>. Since the product of row sums is invariant under permutations of the columns, to use the symmetry reduction, make M the largest set of equal columns in R. 8.3. Vertex Coloring.
Reference: [11] <author> E. Shamir, </author> <title> How many random edges make a graph Hamiltonian? Combinatorica, </title> <booktitle> 3 (1) (1983), </booktitle> <pages> pp. 123-131. </pages>
Reference-contexts: In highly symmetric graphs it may be worthwhile to examine symmetry among subgraphs as well. Posa [9] shows that the minimum p value for which G n;p is almost surely Hamil-tonian decreases to zero as n goes to infinity. Shamir <ref> [11] </ref> shows that the threshold p range in which G n;p is neither almost surely Hamiltonian nor almost surely non-Hamiltonian decreases to zero as n goes to infinity. These results are validated by of G n;p having an s-t Hamiltonian path in Figure 1.
Reference: [12] <author> H. Whitney, </author> <title> A logical expansion in mathematics, </title> <journal> Bull. Amer. Math. Soc., </journal> <volume> 38 (1932), </volume> <pages> pp. 572-579. </pages> <note> 8 E. BAX Fig. </note> <month> 1. </month> <title> Test Results for n=14 Fig. 2. N(R,S) Calls Executed RECURRENCE-BASED HEURISTICS 9 Fig. 3. N(R,S) Calls Avoided by R Subset Reduction Fig. 4. N(R,S) Calls Avoided by Symmetry Reduction 10 E. BAX Fig. 5. N(R,S) Calls Avoided by S Subset Reduction Fig. 6. Graphs with at Least One Hamiltonian Path RECURRENCE-BASED HEURISTICS 11 Fig. 7. s-t Hamiltonian Paths </title>
Reference-contexts: 1. Introduction. The principle of inclusion and exclusion is the basis for several combinatorial algorithms, including counting graph colorings <ref> [12] </ref>; computing the matrix permanent [10]; counting Hamiltonian paths, sequencing, and bin packing [6]; counting satisfying assignments to a DNF formula [7]; and counting paths and cycles [2]. <p> So each component in the graph induced by edge set S is monochrome. Hence, N (S) is k raised to the power of the number of connected components in the graph induced by edge set S <ref> [12] </ref>. The symmetry situation is similar to that for the Hamiltonian path algorithms.
References-found: 12

