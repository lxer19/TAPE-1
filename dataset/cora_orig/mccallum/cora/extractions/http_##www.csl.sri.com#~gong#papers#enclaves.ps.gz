URL: http://www.csl.sri.com/~gong/papers/enclaves.ps.gz
Refering-URL: http://www.csl.sri.com/~gong/papers/pubs96.html
Root-URL: 
Email: (gong@csl.sri.com)  
Title: Enclaves: Enabling Secure Collaboration over the Internet Enclaves approach is to transform user machines into
Author: Li Gong 
Note: The  
Address: 333 Ravenswood Avenue Menlo Park, California 94025, U.S.A.  
Affiliation: SRI International Computer Science Laboratory  
Abstract: The rapid expansion of the Internet means that users increasingly want to interact with each other. Due to the openness and unsecure nature of the net, users often have to rely on firewalls to protect their connections. Firewalls, however, make real-time interaction and collaboration more difficult. Firewalls are also complicated to configure and expensive to install and maintain, and are inaccessible to small home offices and mobile users. This paper describes the design and implementation of the Enclaves toolkit, and some applications we have built using the toolkit. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.J. Anderson. </author> <title> Why Cryptosystems Fail. </title> <journal> Communications of the ACM, </journal> <volume> 37(11) </volume> <pages> 32-40, </pages> <month> Novem-ber </month> <year> 1994. </year>
Reference-contexts: L ! M: group admit, fL ID, M ID, leader host name, port number, group admit, group key, nonce 1g K Table 2: A nonce-based authentication protocol In designing the protocols, we followed the robustness principle <ref> [1] </ref> and the specific format of fail-stop protocols [10]. Therefore, the protocols are somewhat less efficient than they can be; optimizations are discussed later in this paper. <p> Except for the first group-join request message, which has a segment of clear text noting the name of the requester, all messages are fully encrypted. (Anonymity can be achieved through other means that are not discussed here.) Following the fail-stop and the explicitness principles <ref> [1, 10] </ref>, we make every message unique by including in the message the identities of the sender and of the recipient, a timestamp, and a sequence number, as follows: fSender ID, Recipient ID, Sequence Number, Timestamp, Message Bodyg K .
Reference: [2] <author> A.J. Ballardie and J. Crowcroft. Multicast-Specific Security Threats and Counter-Measures. </author> <booktitle> In Proceedings of the Internet Society Symposium on Network and Distributed System Security, </booktitle> <address> San Diego, California, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: Nevertheless, certain types of group activities in Enclaves may benefit from the stronger semantics guaranteed by the reliable and atomic mul-ticast protocols. Another related work is IP-multicast [6] and its security considerations <ref> [2] </ref>. Superficially, IP-multicast and Enclaves have a lot in common: they both form user groups over the Internet and facilitate group-oriented activities. However, the two have very distinctive characteristics in reality.
Reference: [3] <author> K.P. Birman. </author> <title> The Process Group Approach to Reliable Distributed Computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(12) </volume> <pages> 37-53/103, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: First, user-level groups have different characteristics from process-level groups (such as in Isis <ref> [3] </ref> and Rampart [14]) and require different system-support mechanisms. In particular, group members have common interests but do not normally engage in identical activities. Second, the object of sharing among group members should be the target of an application rather than the method or the medium used for the application. <p> This can be optimized when the encryption key can identify the sender or the context cannot be misunderstood. Currently, the secure multicast mechanism performs best-effort communication and does not provide additional semantics such as group-wide causality or atomicity <ref> [3] </ref>. For example, messages within the group are not necessarily causally or totally ordered. There are a few reasons for this design choice. First, the weaker the multicast semantics, the faster the mechanism can be.
Reference: [4] <author> W.R. </author> <title> Cheswick and S.M. Bellovin. Firewalls and Internet Security. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Such an approach poses two major problems. First, against the widely perceived potentials of the Internet, firewalls make (real-time) user interaction and collaboration much more difficult, if not impossible, especially across organizational boundaries <ref> [4] </ref>. Second, firewalls cannot be universally applied. For example, small companies or individuals users may not be able to afford the installation and maintenance of firewalls. Moreover, in the case of home users and mobile users, providing an extra, physically separate firewall machine is not practical. <p> In this respect, Enclaves is closer to the concept of "joint-ventures", where partners with limited mutual trust must perform restricted collaborative activities <ref> [4] </ref>. The Enclaves system can also supplement firewall protection in that it is more user-friendly to configure corporate firewalls to support an acceptable level of protection policy while leaving certain fine-grained controls to individual users.
Reference: [5] <author> D. Coleman and R. Khanna, </author> <title> editors. Groupware Technology and Applications. </title> <publisher> Prentice-Hall, </publisher> <address> Upper Saddle River, New Jersey, </address> <year> 1995. </year>
Reference-contexts: Second, the object of sharing among group members should be the target of an application rather than the method or the medium used for the application. This is in contrast with many existing groupware systems <ref> [5] </ref>, where sharing typically occurs too far away from the applications. For example, through simple replication, users may share a common text editor or the same X-window display. Sharing at such low levels has a number of problems. A major problem is security. <p> A major difference is that these systems have not yet paid serious attention to security issues. A recent survey of the field <ref> [5] </ref> shows that only a tiny number of vendors discuss security at all or show concerns over privacy issues resulting from collaboration. The discussion often stops at how to provide password controlled access and encrypted electronic mail.
Reference: [6] <author> S. Deering. </author> <title> Host Extensions for IP Multicasting. Request for Comments 1112, </title> <institution> Internet Network Working Group, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: Nevertheless, certain types of group activities in Enclaves may benefit from the stronger semantics guaranteed by the reliable and atomic mul-ticast protocols. Another related work is IP-multicast <ref> [6] </ref> and its security considerations [2]. Superficially, IP-multicast and Enclaves have a lot in common: they both form user groups over the Internet and facilitate group-oriented activities. However, the two have very distinctive characteristics in reality.
Reference: [7] <author> H. Eriksson. MBONE: </author> <title> The Multicast Backbone. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 54-60, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: Superficially, IP-multicast and Enclaves have a lot in common: they both form user groups over the Internet and facilitate group-oriented activities. However, the two have very distinctive characteristics in reality. The typical group formed using IP-multicast technology over the M-bone <ref> [7] </ref> is large in scale, loose in user interaction, and difficult to control in terms of security. In contrast, Enclaves seeks to support close user interaction and collaboration, good real-time response, and high quality of security control. Moreover, Enclaves is extremely lightweight and runs directly over TCP/IP protocols.
Reference: [8] <author> L. Gong. </author> <title> Optimal Authentication Protocols Resistant to Password Guessing Attacks. </title> <booktitle> In Proceedings of the 8th IEEE Computer Security Foundations Workshop, </booktitle> <pages> pages 24-29, </pages> <address> County Kerry, Ire-land, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Authentication (for joining in a group session) uses DES-style shared-key cryptosystems. If we can assume that members have public-key capabilities, then Enclaves can use alternative protocols that provide very strong password protection <ref> [8] </ref>. Enclaves provides an abstract layer of secure mul-ticast. For each group session, different keys are distributed to members for encrypting multicast data. The implementation of this layer is expected to change in future versions to better handle issues such as failure recovery and efficiency [9].
Reference: [9] <author> L. Gong and N. Shacham. </author> <title> Multicast Security and Its Extension to a Mobile Environment. </title> <journal> ACM-Baltzer Journal of Wireless Networks, </journal> <volume> 1(3) </volume> <pages> 281-295, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Enclaves provides an abstract layer of secure mul-ticast. For each group session, different keys are distributed to members for encrypting multicast data. The implementation of this layer is expected to change in future versions to better handle issues such as failure recovery and efficiency <ref> [9] </ref>. The Enclaves toolkit does not yet directly support remote objects. To facilitate a simple kind of secure remote object invocation, our approach is to define a platform-independent object manipulation language for each type of shared remote objects. <p> Currently, the group state transferred includes the group membership list and references of all shared resources such as text files. There can be numerous types of groups, which range from totally open ones, to moderately controlled ones, and to ultra-secret ones <ref> [9] </ref>. These groups have vastly different admission policies. When a leader initiates a group, it has the option to decide upon the particular admission policy for that group. The most commonly used policy in Enclaves is what we call leader controlled.
Reference: [10] <author> L. Gong and P. Syverson. </author> <title> Fail-Stop Protocols: An Approach to Designing Secure Protocols. </title> <booktitle> In Proceedings of the 5th IFIP Working Conference on Dependable Computing for Critical Applications, Dependable Computing and Fault-Tolerant Systems, </booktitle> <pages> pages 44-55, </pages> <address> Urbana-Champaign, Illinois, </address> <month> September </month> <year> 1995. </year> <note> Springer-Verlag. </note>
Reference-contexts: L ! M: group admit, fL ID, M ID, leader host name, port number, group admit, group key, nonce 1g K Table 2: A nonce-based authentication protocol In designing the protocols, we followed the robustness principle [1] and the specific format of fail-stop protocols <ref> [10] </ref>. Therefore, the protocols are somewhat less efficient than they can be; optimizations are discussed later in this paper. <p> Except for the first group-join request message, which has a segment of clear text noting the name of the requester, all messages are fully encrypted. (Anonymity can be achieved through other means that are not discussed here.) Following the fail-stop and the explicitness principles <ref> [1, 10] </ref>, we make every message unique by including in the message the identities of the sender and of the recipient, a timestamp, and a sequence number, as follows: fSender ID, Recipient ID, Sequence Number, Timestamp, Message Bodyg K .
Reference: [11] <author> M. Knister and A. Prakash. </author> <title> Issues in the Design of a Toolkit for Supporting Multiple Group Editors. </title> <journal> Computing Systems, </journal> <volume> 6(2) </volume> <pages> 135-166, </pages> <month> Spring </month> <year> 1993. </year>
Reference-contexts: In comparison, the deployment of IP-multicast requires special routers or tunnels and sometimes the recompilation of operating system kernels to incorporate IP-multicast software. The topic area popularly known as groupware or computer-supported cooperative work (CSCW), which includes collaborative systems for workflow management, shared whiteboard, teleconferencing, and shared editing (e.g., <ref> [11, 15] </ref>), is obviously related. A major difference is that these systems have not yet paid serious attention to security issues. A recent survey of the field [5] shows that only a tiny number of vendors discuss security at all or show concerns over privacy issues resulting from collaboration.
Reference: [12] <author> D.E. Knuth. </author> <title> The Art of Computer Programming, Vol.2: Seminumerical Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1969. </year> <note> Revised edition. </note>
Reference-contexts: Synchronized clocks are not required to use Enclaves. If clocks may not be accurate, then random numbers (known as nonces) are used to prove freshness in a different, four-message authentication protocol shown in Table 2. Enclaves provides a random number generator, based on well-known algorithms <ref> [12] </ref>. In this situation, although three messages is the theoretical minimum for mutual authentication, the four-message protocol is simple to implement using two nested RPCs. msg.1. M ! L: group join, nonce 1 msg.2. L ! M: nonce 2 msg.3.
Reference: [13] <author> J.K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison Wesley, </publisher> <address> Menlo Park, California, </address> <year> 1994. </year>
Reference-contexts: All the machines are connected to the Internet via Ethernets. Enclaves 1.0 software is programmed using mostly the scripting language Tcl 7.3, its graphical companion Tk 3.6, and a TCP/IP extension of Tcl called Tcl-DP 3.2 <ref> [13] </ref>. In addition, there is a small amount of C and Unix Shell programming. Encryption is done with the DES in Cipher Block Chaining (CBC) mode. 3.1 Secure Group Management The typical user-level group considered in Enclaves is a distributed group, with members located in different places.
Reference: [14] <author> M. Reiter. </author> <title> Secure Agreement Protocols: Reliable and Atomic Group Multicast in Rampart. </title> <booktitle> In Proceedings of the 2nd ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 68-80, </pages> <address> Fairfax, Virginia, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: First, user-level groups have different characteristics from process-level groups (such as in Isis [3] and Rampart <ref> [14] </ref>) and require different system-support mechanisms. In particular, group members have common interests but do not normally engage in identical activities. Second, the object of sharing among group members should be the target of an application rather than the method or the medium used for the application. <p> Group members can invoke only those predefined procedures (or operations) on remote machines (or objects) and can do so only through the secure protocol interfaces. 2.4 Comparison with Related Work There are related works on group security in the context of distributed computing systems. The Rampart system <ref> [14] </ref> functions on the fundamental concept of secure process groups that are also virtually synchronized. A major difference between Rampart and Enclaves is that the target application domains differ significantly. Rampart aims to be a toolkit for developing highly secure and fault-tolerant systems.
Reference: [15] <author> M. Roseman and S. Greenberg. </author> <title> Building Real Time Groupware with GroupKit, a Groupware Toolkit. </title> <journal> ACM Transactions on Computer Human Interaction, </journal> <note> 1996. To appear. </note>
Reference-contexts: In comparison, the deployment of IP-multicast requires special routers or tunnels and sometimes the recompilation of operating system kernels to incorporate IP-multicast software. The topic area popularly known as groupware or computer-supported cooperative work (CSCW), which includes collaborative systems for workflow management, shared whiteboard, teleconferencing, and shared editing (e.g., <ref> [11, 15] </ref>), is obviously related. A major difference is that these systems have not yet paid serious attention to security issues. A recent survey of the field [5] shows that only a tiny number of vendors discuss security at all or show concerns over privacy issues resulting from collaboration.
Reference: [16] <author> T. Takahashi, A. Shimbo, and M. Murota. </author> <title> File-Based Network Collaboration System. </title> <booktitle> In Proceedings of the 5th USENIX UNIX Security Symposium, </booktitle> <pages> pages 95-104, </pages> <address> Salt Lake City, Utah, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Enclaves, on the other hand, is built on the basis of a secure group management layer and a secure multicast abstraction, and thus can provide very strong security guarantees. A few systems that provide secure file sharing (such as <ref> [16] </ref>) have drawbacks, compared with Enclaves, in that they do not necessarily support real-time interaction; they also depend on good user behavior to maintain consistency of shared files. Moreover, they may have to share a real (rather than a virtual) file system.
References-found: 16

