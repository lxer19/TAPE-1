URL: http://theory.lcs.mit.edu/tds/papers/Chaudhuri/CRL98-4.ps
Refering-URL: http://theory.lcs.mit.edu/tds/reflist.html
Root-URL: 
Title: Tight Bounds for k -Set Agreement  
Author: Soma Chaudhuri Maurice Herlihy Nancy A. Lynch Mark R. Tuttle 
Note: CRL 98/4  
Abstract-found: 0
Intro-found: 1
Reference: [AR96] <author> Hagit Attiya and Sergio Rajsbaum. </author> <title> A combinatorial topology framework for wait-free computability. </title> <booktitle> In Proceedings of the Workshop on Distributed Algorithms and Graphs, </booktitle> <year> 1996. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [BHG87] <author> Philip A. Bernstein, Vassos Hadzilacos, and Nathan Goodman. </author> <title> Concurrency Control and Recovery in Database Systems. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, Massachusetts, </address> <year> 1987. </year>
Reference-contexts: Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit <ref> [BHG87] </ref>, and concurrent object design [Her91]. Between these extremes, as we vary the value of k from n to 1, we gradually increase the degree of processor coordination required. We consider this family of problems in a synchronous, message-passing model with crash failures.
Reference: [BG93] <author> Elizabeth Borowsky and Eli Gafni. </author> <title> Generalized FLP impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 25th ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [Cha91] <author> Soma Chaudhuri. </author> <title> Towards a complexity hierarchy of wait-free concurrent objects. </title> <booktitle> In Proceedings of the 3rd IEEE Symposium on Parallel and Distributed Processing. IEEE, </booktitle> <month> December </month> <year> 1991. </year> <note> Also appeared as Technical Report No. 91-024, </note> <institution> Iowa State University, </institution> <year> 1991. </year>
Reference-contexts: In this paper, we give a precise characterization of the tradeoffs required by studying a family of basic coordination problems called k-set agreement. In k-set agreement <ref> [Cha91] </ref>, each processor starts with an arbitrary input value and halts after choosing an output value. These output values must satisfy two conditions: each output value must be some processor's input value, and the set of output values chosen must contain at most k distinct values. <p> For a fixed value of f , Figure 1 shows that 2-set agreement can be achieved 2 1 INTRODUCTION in half the time needed to achieve consensus. In addition, the lower bound proof itself is interesting because of the geometric proof technique we use, combining ideas due to Chaudhuri <ref> [Cha91, Cha93] </ref>, Fischer and Lynch [FL82], Herlihy and Shavit [HS93], and Dwork, Moses, and Tuttle [DM90, MT88]. In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93]). <p> Thus, in the case illustrated above, there is no protocol for 2-set agreement halting in 1 round. We note that the basic structure of the Bermuda Triangle and the idea of coloring the vertices with decision values and applying Sperner's Lemma have appeared in previous work by Chaudhuri <ref> [Cha91, Cha93] </ref>. In that work, she also proved a lower bound of bf =kc + 1 rounds for k-set agreement, but for a very restricted class of protocols. <p> the lower bound in this paper: Lemma 1: If there is an n-processor protocol solving k-set agreement with f fail 11 ures in r rounds, then there is an n-processor full-information protocol solving k-set agreement with f failures in r rounds. 4 The k-set Agreement Problem The k-set agreement problem <ref> [Cha91] </ref> is defined as follows. We assume that each processor p i has two private registers in its local state, a read-only input register and a write-only output register. <p> Theorem 24: The protocol P solves k-set agreement in bf =kc + 1 rounds. REFERENCES 31 Acknowledgments The results in the paper have appeared earlier in preliminary form. The lower bound result has appeared in [CHLT93] and the algorithm has appeared in <ref> [Cha91] </ref>. Much of this work was performed while the first author was visiting MIT. The first and third authors were supported in part by NSF grant CCR-89-15206, in part by DARPA contracts N00014-89-J-1988, N00014-92-J-4033, and N00014-92-J-1799, and in part by ONR contract N00014-91-J-1046.
Reference: [Cha93] <author> Soma Chaudhuri. </author> <title> More choices allow more faults: Set consensus problems in totally asynchronous systems. Information and Computation, </title> <address> 105(1):132158, </address> <month> July </month> <year> 1993. </year> <note> A preliminary version appeared in ACM PODC, </note> <year> 1990. </year>
Reference-contexts: For a fixed value of f , Figure 1 shows that 2-set agreement can be achieved 2 1 INTRODUCTION in half the time needed to achieve consensus. In addition, the lower bound proof itself is interesting because of the geometric proof technique we use, combining ideas due to Chaudhuri <ref> [Cha91, Cha93] </ref>, Fischer and Lynch [FL82], Herlihy and Shavit [HS93], and Dwork, Moses, and Tuttle [DM90, MT88]. In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93]). <p> We can represent a global state for an n-processor protocol as an (n 1)-dimensional simplex <ref> [Cha93, HS93] </ref>, where each vertex is labeled with a processor id and local state. If g 1 and g 2 are global states in which p 1 has the same local state, then we glue together the vertices of g 1 and g 2 labeled with p 1 . <p> Thus, in the case illustrated above, there is no protocol for 2-set agreement halting in 1 round. We note that the basic structure of the Bermuda Triangle and the idea of coloring the vertices with decision values and applying Sperner's Lemma have appeared in previous work by Chaudhuri <ref> [Cha91, Cha93] </ref>. In that work, she also proved a lower bound of bf =kc + 1 rounds for k-set agreement, but for a very restricted class of protocols. <p> For example, the 2-dimensional Bermuda Triangle is illustrated in Figure 5. This triangulation, known as Kuhn's triangulation, is defined formally as follows <ref> [Cha93] </ref>. Let e 1 ; : : : ; e k be the unit vectors; that is, e i is the vector (0; : : : ; 1; : : : ; 0) with a single 1 in the ith coordinate.
Reference: [CHLT93] <author> Soma Chaudhuri, Maurice Herlihy, Nancy Lynch, and Mark R. Tuttle. </author> <title> A tight lower bound for k-set agreement. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, pages 206215. IEEE, </booktitle> <month> November </month> <year> 1993. </year>
Reference-contexts: Theorem 24: The protocol P solves k-set agreement in bf =kc + 1 rounds. REFERENCES 31 Acknowledgments The results in the paper have appeared earlier in preliminary form. The lower bound result has appeared in <ref> [CHLT93] </ref> and the algorithm has appeared in [Cha91]. Much of this work was performed while the first author was visiting MIT. The first and third authors were supported in part by NSF grant CCR-89-15206, in part by DARPA contracts N00014-89-J-1988, N00014-92-J-4033, and N00014-92-J-1799, and in part by ONR contract N00014-91-J-1046.
Reference: [DM90] <author> Cynthia Dwork and Yoram Moses. </author> <title> Knowledge and common knowledge in a Byzantine environment: Crash failures. Information and Computation, </title> <address> 88(2):156186, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: In addition, the lower bound proof itself is interesting because of the geometric proof technique we use, combining ideas due to Chaudhuri [Cha91, Cha93], Fischer and Lynch [FL82], Herlihy and Shavit [HS93], and Dwork, Moses, and Tuttle <ref> [DM90, MT88] </ref>. In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93]). <p> In this section, we use a simplified version of this object to illustrate the general ideas in our proof. Since consensus is a special case of k-set agreement, it is helpful to review the standard proof of the f + 1 round lower bound for consensus <ref> [FL82, DS83, Mer85, DM90] </ref> to see why new ideas are needed for k-set agreement. Suppose that the protocol P is a consensus protocol, which means that in all executions of P all nonfaulty processors have chosen the same output value at time r. <p> In their proofa refinement of similar proofs by Dwork and Moses <ref> [DM90] </ref> and othersthe sequence of graphs they construct has the property that each graph in the chain can be obtained from the preceding graph by applying a sequence of the add, delete, and change graph operations defined above.
Reference: [Dol82] <author> Danny Dolev. </author> <title> The Byzantine generals strike again. </title> <journal> Journal of Algorithms, </journal> <volume> 3(1):1430, </volume> <month> March </month> <year> 1982. </year>
Reference-contexts: At one extreme, if n is the number of processors in the system, then n-set agreement is trivial: each processor simply chooses its own input value. At the other extreme, 1-set agreement requires that all processors choose the same output value, a problem equivalent to the consensus problem <ref> [LSP82, PSL80, FL82, FLP85, Dol82, Fis83] </ref>. Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design [Her91].
Reference: [DS83] <author> Danny Dolev and H. Raymond Strong. </author> <title> Authenticated algorithms for Byzan-tine agreement. </title> <journal> SIAM Journal on Computing, </journal> <volume> 12(3):656666, </volume> <month> November </month> <year> 1983. </year> <note> 32 REFERENCES </note>
Reference-contexts: In this section, we use a simplified version of this object to illustrate the general ideas in our proof. Since consensus is a special case of k-set agreement, it is helpful to review the standard proof of the f + 1 round lower bound for consensus <ref> [FL82, DS83, Mer85, DM90] </ref> to see why new ideas are needed for k-set agreement. Suppose that the protocol P is a consensus protocol, which means that in all executions of P all nonfaulty processors have chosen the same output value at time r.
Reference: [Fis83] <author> Michael J. Fischer. </author> <title> The consensus problem in unreliable distributed systems (a brief survey). </title> <editor> In Marek Karpinsky, editor, </editor> <booktitle> Proceedings of the 10th International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 127140. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year> <note> A preliminary version appeared as Yale Technical Report YALEU/DCS/RR-273. </note>
Reference-contexts: At one extreme, if n is the number of processors in the system, then n-set agreement is trivial: each processor simply chooses its own input value. At the other extreme, 1-set agreement requires that all processors choose the same output value, a problem equivalent to the consensus problem <ref> [LSP82, PSL80, FL82, FLP85, Dol82, Fis83] </ref>. Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design [Her91].
Reference: [FL82] <author> Michael J. Fischer and Nancy A. Lynch. </author> <title> A lower bound for the time to assure interactive consistency. </title> <journal> Information Processing Letters, </journal> <volume> 14(4):183 186, </volume> <month> June </month> <year> 1982. </year>
Reference-contexts: At one extreme, if n is the number of processors in the system, then n-set agreement is trivial: each processor simply chooses its own input value. At the other extreme, 1-set agreement requires that all processors choose the same output value, a problem equivalent to the consensus problem <ref> [LSP82, PSL80, FL82, FLP85, Dol82, Fis83] </ref>. Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design [Her91]. <p> Since consensus is just 1-set agreement, our lower bound implies the well-known lower bound of f + 1 rounds for consensus when n f + 2 <ref> [FL82] </ref>. More important, the running time r = bf =kc + 1 demonstrates that there is a smooth but inescapable tradeoff among the number f of faults tolerated, the degree k of coordination achieved, and the time r the protocol must run. <p> In addition, the lower bound proof itself is interesting because of the geometric proof technique we use, combining ideas due to Chaudhuri [Cha91, Cha93], Fischer and Lynch <ref> [FL82] </ref>, Herlihy and Shavit [HS93], and Dwork, Moses, and Tuttle [DM90, MT88]. In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93]). <p> In this section, we use a simplified version of this object to illustrate the general ideas in our proof. Since consensus is a special case of k-set agreement, it is helpful to review the standard proof of the f + 1 round lower bound for consensus <ref> [FL82, DS83, Mer85, DM90] </ref> to see why new ideas are needed for k-set agreement. Suppose that the protocol P is a consensus protocol, which means that in all executions of P all nonfaulty processors have chosen the same output value at time r. <p> We say that p is active through round r if p sends all messages in round r and earlier. A full-information protocol is one in which every processor broadcasts its entire local state to every processor, including itself, in every round <ref> [PSL80, FL82, Had83] </ref>. One nice property of full-information protocols is that every execution of a full-information protocol P has a compact representation called a communication graph [MT88]. The communication graph G for an r-round execution of P is a two-dimensional two-colored graph.
Reference: [FLP85] <author> Michael J. Fischer, Nancy A. Lynch, and Michael S. Paterson. </author> <title> Impossibility of distributed consensus with one faulty processor. </title> <journal> Journal of the ACM, </journal> <volume> 32(2):374382, </volume> <year> 1985. </year>
Reference-contexts: At one extreme, if n is the number of processors in the system, then n-set agreement is trivial: each processor simply chooses its own input value. At the other extreme, 1-set agreement requires that all processors choose the same output value, a problem equivalent to the consensus problem <ref> [LSP82, PSL80, FL82, FLP85, Dol82, Fis83] </ref>. Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design [Her91].
Reference: [GK96] <author> Eli Gafni and Elias Koutsoupias. </author> <title> Three-processor tasks are undecidable. </title> <address> daphne.cs.ucla.edu/eli/undec.ps, </address> <year> 1996. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [Had83] <author> Vassos Hadzilacos. </author> <title> A lower bound for Byzantine agreement with fail-stop processors. </title> <type> Technical Report TR2183, </type> <institution> Harvard University, </institution> <year> 1983. </year>
Reference-contexts: We say that p is active through round r if p sends all messages in round r and earlier. A full-information protocol is one in which every processor broadcasts its entire local state to every processor, including itself, in every round <ref> [PSL80, FL82, Had83] </ref>. One nice property of full-information protocols is that every execution of a full-information protocol P has a compact representation called a communication graph [MT88]. The communication graph G for an r-round execution of P is a two-dimensional two-colored graph.
Reference: [Her91] <author> Maurice P. Herlihy. </author> <title> Wait-free synchronization. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 13(1):124149, </volume> <month> January </month> <year> 1991. </year>
Reference-contexts: Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design <ref> [Her91] </ref>. Between these extremes, as we vary the value of k from n to 1, we gradually increase the degree of processor coordination required. We consider this family of problems in a synchronous, message-passing model with crash failures.
Reference: [HR94] <author> Maurice P. Herlihy and Sergio Rajsbaum. </author> <title> Set consensus using arbitrary objects. </title> <booktitle> In Proceedings of the 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [HR95] <author> Maurice P. Herlihy and Sergio Rajsbaum. </author> <title> Algebraic spans. </title> <booktitle> In Proceedings of the 14th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 9099. </pages> <publisher> ACM, </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [HS93] <author> Maurice P. Herlihy and Nir Shavit. </author> <title> The asynchronous computability theorem for t-resilient tasks. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 111120. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: In addition, the lower bound proof itself is interesting because of the geometric proof technique we use, combining ideas due to Chaudhuri [Cha91, Cha93], Fischer and Lynch [FL82], Herlihy and Shavit <ref> [HS93] </ref>, and Dwork, Moses, and Tuttle [DM90, MT88]. In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93]). <p> In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes. <p> We can represent a global state for an n-processor protocol as an (n 1)-dimensional simplex <ref> [Cha93, HS93] </ref>, where each vertex is labeled with a processor id and local state. If g 1 and g 2 are global states in which p 1 has the same local state, then we glue together the vertices of g 1 and g 2 labeled with p 1 .
Reference: [HS94] <author> Maurice P. Herlihy and Nir Shavit. </author> <title> A simple constructive computability theorem for wait-free computation. </title> <booktitle> In Proceedings of the 1994 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [LSP82] <author> Leslie Lamport, Robert Shostak, and Marshall Pease. </author> <title> The Byzantine generals problem. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 4(3):382401, </volume> <month> July </month> <year> 1982. </year>
Reference-contexts: At one extreme, if n is the number of processors in the system, then n-set agreement is trivial: each processor simply chooses its own input value. At the other extreme, 1-set agreement requires that all processors choose the same output value, a problem equivalent to the consensus problem <ref> [LSP82, PSL80, FL82, FLP85, Dol82, Fis83] </ref>. Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design [Her91].
Reference: [Mer85] <author> Michael Merritt. </author> <title> Notes on the Dolev-Strong lower bound for byzantine agreement. </title> <type> Unpublished manuscript, </type> <year> 1985. </year>
Reference-contexts: In this section, we use a simplified version of this object to illustrate the general ideas in our proof. Since consensus is a special case of k-set agreement, it is helpful to review the standard proof of the f + 1 round lower bound for consensus <ref> [FL82, DS83, Mer85, DM90] </ref> to see why new ideas are needed for k-set agreement. Suppose that the protocol P is a consensus protocol, which means that in all executions of P all nonfaulty processors have chosen the same output value at time r.
Reference: [MT88] <author> Yoram Moses and Mark R. Tuttle. </author> <title> Programming simultaneous actions using common knowledge. </title> <journal> Algorithmica, </journal> <volume> 3(1):121169, </volume> <year> 1988. </year>
Reference-contexts: In addition, the lower bound proof itself is interesting because of the geometric proof technique we use, combining ideas due to Chaudhuri [Cha91, Cha93], Fischer and Lynch [FL82], Herlihy and Shavit [HS93], and Dwork, Moses, and Tuttle <ref> [DM90, MT88] </ref>. In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93]). <p> A full-information protocol is one in which every processor broadcasts its entire local state to every processor, including itself, in every round [PSL80, FL82, Had83]. One nice property of full-information protocols is that every execution of a full-information protocol P has a compact representation called a communication graph <ref> [MT88] </ref>. The communication graph G for an r-round execution of P is a two-dimensional two-colored graph. The vertices form an n fi r grid, with processor names 1 through n labeling the vertical axis and times 0 through r labeling the horizontal axis. <p> restrictions guarantee that if G is an `-graph and red (G; p; m) and green (G; p; m) are defined, then red (G; p; m) and green (G; p; m) are both `-graphs. 6.3 Graph sequences 17 In the case of ordinary communication graphs, a result by Moses and Tuttle <ref> [MT88] </ref> implies that there is a similarity chain of graphs between G and red (G; p; m) and between G and green (G; p; m).
Reference: [PSL80] <author> Marshall Pease, Robert Shostak, and Leslie Lamport. </author> <title> Reaching agreement in the presence of faults. </title> <journal> Journal of the ACM, </journal> <note> 27(2):228234, 1980. REFERENCES 33 </note>
Reference-contexts: At one extreme, if n is the number of processors in the system, then n-set agreement is trivial: each processor simply chooses its own input value. At the other extreme, 1-set agreement requires that all processors choose the same output value, a problem equivalent to the consensus problem <ref> [LSP82, PSL80, FL82, FLP85, Dol82, Fis83] </ref>. Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control [W + 78], database transaction commit [BHG87], and concurrent object design [Her91]. <p> We say that p is active through round r if p sends all messages in round r and earlier. A full-information protocol is one in which every processor broadcasts its entire local state to every processor, including itself, in every round <ref> [PSL80, FL82, Had83] </ref>. One nice property of full-information protocols is that every execution of a full-information protocol P has a compact representation called a communication graph [MT88]. The communication graph G for an r-round execution of P is a two-dimensional two-colored graph.
Reference: [SZ93] <author> Michael Saks and Fotis Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In the past few years, researchers have developed powerful new tools based on classical algebraic topology for analyzing tasks in asynchronous models (e.g., <ref> [AR96, BG93, GK96, HR94, HR95, HS93, HS94, SZ93] </ref>). The principal innovation of these papers is to model computations as simplicial complexes (rather than graphs) and to derive connections between computations and the topological properties of their complexes.
Reference: [Spa66] <author> Edwin H. Spanier. </author> <title> Algebraic Topology. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1966. </year>
Reference-contexts: Colorings with this property are called Sperner colorings, and have been studied extensively in the field of algebraic topology. At this point, we exploit a remarkable combinatorial result first proved in 1928: Sperner's Lemma <ref> [Spa66, p.151] </ref> states that any Sperner coloring of any triangulated k-dimensional simplex must include at least one simplex whose corners are colored with all k + 1 colors.
Reference: [W + 78] <editor> J. H. Wensley et al. SIFT: </editor> <title> Design and analysis of a fault-tolerant computer for aircraft control. </title> <booktitle> Proceedings of the IEEE, </booktitle> <address> 66(10):12401255, </address> <month> October </month> <year> 1978. </year> <title> 34 REFERENCES Tight Bounds f or -Set Agreement Soma Chaudhur i Maur ice Her lih y Nancy A. ynch Mar k T uttle CRL 98/4 y </title>
Reference-contexts: Consensus is well-known to be the hardest problem, in the sense that all other decision problems can be reduced to it. Consensus arises in applications as diverse as on-board aircraft control <ref> [W + 78] </ref>, database transaction commit [BHG87], and concurrent object design [Her91]. Between these extremes, as we vary the value of k from n to 1, we gradually increase the degree of processor coordination required. We consider this family of problems in a synchronous, message-passing model with crash failures.
References-found: 26

