URL: http://www.cs.arizona.edu/people/gene/PAPERS/linear.ps
Refering-URL: http://www.cs.arizona.edu/people/gene/vita.html
Root-URL: http://www.cs.arizona.edu
Title: Optimal alignments in linear space  
Author: Eugene W. Myers and Webb Miller* 
Abstract: Space, not time, is often the limiting factor when computing optimal sequence alignments, and a number of recent papers in the biology literature have proposed space-saving strategies. However, a 1975 computer science paper by Hirschberg presented a method that is superior to the newer proposals, both in theory and in practice. The goal of this note is to give Hirschberg's idea the visibility it deserves by developing a linear-space version of Gotoh's algorithm, which accommodates affine gap penalties. A portable C-software package implementing this algorithm is available on the BIONET free of charge. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Altschul, S. and B. W. </author> <title> Erickson (1986) Optimal sequence alignments using affine gap costs, </title> <journal> Bull. Math. Biol., </journal> <volume> 48, </volume> <pages> 603-616. </pages>
Reference: <author> Fickett, J. W. </author> <title> (1984) Fast optimal alignment, </title> <journal> Nucleic Acids Research, </journal> <volume> 12, </volume> <pages> 175-179. </pages>
Reference: <author> Gotoh, O. </author> <title> (1982) An improved algorithm for matching biological sequences, </title> <journal> J. Molec. Biol., </journal> <volume> 162, </volume> <pages> 705-708. </pages>
Reference: <author> Gotoh, O. </author> <title> (1986) Alignment of three biological sequences with an efficient traceback procedure, </title> <journal> J. Theor. Biol., </journal> <volume> 121, </volume> <pages> 327-337. </pages>
Reference: <author> Gotoh, O. </author> <title> (1987) Pattern matching of biological sequences with limited storage, </title> <journal> CABIOS, </journal> <volume> 3, </volume> <pages> 17-20. </pages>
Reference: <author> Hirschberg, D. S. </author> <title> (1975) A linear space algorithm for computing longest common subsequences, </title> <journal> Commun. Assoc. Comput. Mach., </journal> <volume> 18, </volume> <pages> 341-343. </pages>
Reference: <author> Masek, W. J. and M. S. </author> <title> Paterson (1980) A faster algorithm for computing string-edit distances, </title> <journal> J. Comput. System Sci., </journal> <volume> 20, </volume> <pages> 18-31. </pages>
Reference: <author> Miller, W. and E. W. </author> <title> Myers (1985) A file comparison program, </title> <journal> Software Practice and Experience, </journal> <volume> 15, </volume> <pages> 1025-1040. </pages>
Reference: <author> Miller, W. and E. W. </author> <title> Myers (1988) Sequence comparison with concave weighting functions, </title> <journal> Bull. Math. Biol., </journal> <note> to appear. </note>
Reference-contexts: In this note we apply Hirschberg's technique to Gotoh's algorithm. Limiting consideration to a relatively simple method yields a simple and novel development that we hope will bring Hirschberg's idea to a wider audience. Moreover, for affine indel costs, the more general concave-weights software <ref> (Miller and Myers, 1988) </ref> runs 3.0 times slower and uses 3.5 times more space than the program described in this paper. System and Methods C software implementing the algorithm was written and tested on a Vax 11/780 running 4.3 BSD Unix. <p> Many, perhaps all, cost-only alignment algorithms yield an alignment-delivering variation with identical asymptotic time and space complexities. When applied to certain other alignment algorithms, the space requirement becomes sublinear (Myers, 1986), linear (Wagner and Fischer, 1974; Masek and Paterson, 1980), or linear in expectation <ref> (Miller and Myers, 1988) </ref>. Occasionally, the variation is not space-efficient, as with the method of Waterman, Smith, and Beyer (1976), whose cost-only version needs O (MN) space. In practice, employing the strategy at most doubles the time and space requirements of the cost-only version.
Reference: <author> Myers, E. W. </author> <title> (1986) An O(ND) difference algorithm and its variations, </title> <journal> Algorithmica, </journal> <volume> 1, </volume> <pages> 251-266. </pages>
Reference-contexts: The underlying divide-and-conquer strategy, taken from a 1975 paper of Hirschberg, is quite general. Many, perhaps all, cost-only alignment algorithms yield an alignment-delivering variation with identical asymptotic time and space complexities. When applied to certain other alignment algorithms, the space requirement becomes sublinear <ref> (Myers, 1986) </ref>, linear (Wagner and Fischer, 1974; Masek and Paterson, 1980), or linear in expectation (Miller and Myers, 1988). Occasionally, the variation is not space-efficient, as with the method of Waterman, Smith, and Beyer (1976), whose cost-only version needs O (MN) space.
Reference: <author> Smith, T. F., M. S. Waterman, and W. M. </author> <title> Fitch (1981) Comparative biosequence metrics, </title> <journal> J. Molec. Evol., </journal> <volume> 18, </volume> <pages> 38-46. </pages> - <note> 12 - Taylor, </note> <author> P. </author> <title> (1984) A fast homology program for aligning biological sequences, </title> <journal> Nucleic Acids Research 12, </journal> <pages> 447-455. </pages>
Reference-contexts: This formulation is converted to a difference problem by the transformations w (a, b) = s max - s (a, b) for all pairs (a, b) g = q where s max = max (a, b) s (a, b) <ref> (Smith, et al., 1981) </ref>. Thus, to produce an alignment that maximizes the similarity score, first apply these transformations and then run the program described in this paper with the resulting w, g, and h.
Reference: <author> Ukkonen, E. </author> <title> (1985) Algorithms for approximate string matching, </title> <journal> Information and Control, </journal> <volume> 64, </volume> <pages> 100-118. </pages>
Reference: <author> Wagner, R. A. and M. J. </author> <title> Fischer (1974) The string-to-string correction problem, </title> <journal> J. ACM, </journal> <volume> 21, </volume> <pages> 168-173. </pages>
Reference-contexts: Statistics that are easier to interpret, and relatively machine-insensitive, can be determined by comparison with a ``standard'' program. We chose the following straightforward implementation of the classic dynamic programming algorithm for the case where gap (k ) = hk <ref> (Wagner and Fischer, 1974) </ref>. To facilitate comparative testing, the procedure arguments match the software interface described below.
Reference: <author> Watanabe, K., Y. Urano, and T. </author> <title> Tamaoki (1985) Optimal alignments of biological sequences on a microcomputer, </title> <journal> CABIOS, </journal> <volume> 1, </volume> <pages> 83-87. </pages>
Reference: <author> Waterman, M. S. </author> <title> (1983) Sequence alignment in the neighborhood of the optimum, </title> <booktitle> Proc. </booktitle> <institution> Natl. Acad. Sci. USA, </institution> <month> 80, </month> <pages> 3123-3124. </pages>
Reference: <author> Waterman, M. S. and T. H. </author> <title> Byers (1985) A dynamic programming algorithm to find all solutions in a neighborhood of the optimum, </title> <journal> Math. Biosciences, </journal> <volume> 77, </volume> <pages> 179-188. </pages>
Reference: <author> Waterman, M. S., T. F. Smith and W. A. </author> <title> Beyer (1976) Some biological sequence metrics, </title> <booktitle> Advances in Mathematics, </booktitle> <volume> 20, </volume> <pages> 367-387. - 13 </pages> -
References-found: 17

