URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/westbrook/planar-graph-encoding.ps.Z
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/westbrook/
Root-URL: http://www.cs.yale.edu
Title: Short Encodings of Planar Graphs and Maps  
Author: Kenneth Keeler Jeffery Westbrook 
Date: August 3, 1993  
Abstract: We discuss space-efficient encoding schemes for planar graphs and maps. Our results improve on the constants of previous schemes and can be achieved with simple encoding algorithms. They are near-optimal in number of bits per edge.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Booth and G. Lueker. </author> <title> Testing for the consecutive ones property, interval graphs, and graph planarity using PQ-tree algorithms. </title> <journal> J. Comput. System Sci., </journal> <volume> 13 </volume> <pages> 335-379, </pages> <year> 1976. </year>
Reference-contexts: This standard representation can be constructed from other standard representations such as the winged-edge data structure in O (m) time. Note that a planar graph can be embedded in linear time <ref> [1, 4] </ref>. The encoding algorithm is straightforward. The topological depth-first search runs in linear time, since the adjacency lists are ordered in CCW order. The subsequent tree traversal is also easily implemented in linear time, again using the CCW ordering of adjacency lists.
Reference: [2] <author> P. Elias. </author> <title> Universal codeword sets and representations of the integers. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-21:194-203, </volume> <month> March </month> <year> 1975. </year>
Reference-contexts: Alternately, m may be prepended to 1 ffi 2 with ~ lg m bits using, e.g., Elias's representation of the positive integers <ref> [2] </ref>. This adds a term O (log m) to the length of the encoding. | Next we consider the efficiency of the encoding and decoding algorithms.
Reference: [3] <author> F. Harary. </author> <title> Graph Theory. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA., </address> <year> 1972. </year>
Reference-contexts: This converts the map into a labeled version of the search tree. We then encode the tree in any standard way, followed by an encoding of the string of labels. Harary <ref> [3] </ref> is a reference for the graph theoretic terminology we use in this paper. 2 Encoding Loop- and stick-free Maps in 3 Bits/Edge In this section we describe an encoding scheme for maps that contain neither loop edges nor sticks.
Reference: [4] <author> J. Hopcroft and R. E. Tarjan. </author> <title> Efficient planarity testing. </title> <journal> J. ACM, </journal> <volume> 21 </volume> <pages> 549-568, </pages> <year> 1974. </year>
Reference-contexts: This standard representation can be constructed from other standard representations such as the winged-edge data structure in O (m) time. Note that a planar graph can be embedded in linear time <ref> [1, 4] </ref>. The encoding algorithm is straightforward. The topological depth-first search runs in linear time, since the adjacency lists are ordered in CCW order. The subsequent tree traversal is also easily implemented in linear time, again using the CCW ordering of adjacency lists.
Reference: [5] <author> A. Itai and M. Rodeh. </author> <title> Representation of graphs. </title> <journal> Acta Informatica, </journal> <volume> 17 </volume> <pages> 215-219, </pages> <year> 1982. </year>
Reference-contexts: Turan [9] gives an encoding of unlabeled connected planar graphs and maps which uses (asymptotically) 4m bits 1 . Itai and Rodeh <ref> [5] </ref> give a scheme for labeled planar graphs requiring 3 2 n lg n + O (n) bits, and Naor [7] gives a method for general unlabeled graphs which uses n 2 =2 n lg n + O (n) bits (the storage requirement is shown to be optimal to second order).
Reference: [6] <author> G. Jacobson. </author> <title> Space-efficient static trees and graphs. </title> <booktitle> In Proceedings of the 30 th IEEE Symposium on Foundations of Computer Science, </booktitle> <address> Durham, NC, </address> <month> October </month> <year> 1989. </year>
Reference-contexts: We may also mention that Jacobson <ref> [6] </ref> gives an fi (n) space fl Parts of this research were performed while this author was with the Division of Applied Sciences, Harvard University (supported by U.S. <p> The constant factor in the space bound is relatively large, however. Our encoding schemes for planar graphs are at heart schemes for encoding maps: we choose a particular planar embedding and encode the resulting map. This is the procedure as well in references <ref> [6, 9] </ref>. Following Tutte [11], we allow graphs and maps to have multiple edges between two vertexes, and to contain loop edges, which are edges whose endpoints coincide. Graphs and maps may also contain degree-one vertexes; we call such a degree-one vertex and its incident edge a stick.
Reference: [7] <author> M. Naor. </author> <title> Succinct representations of general unlabeled graphs. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 28 </volume> <pages> 303-307, </pages> <year> 1990. </year>
Reference-contexts: Turan [9] gives an encoding of unlabeled connected planar graphs and maps which uses (asymptotically) 4m bits 1 . Itai and Rodeh [5] give a scheme for labeled planar graphs requiring 3 2 n lg n + O (n) bits, and Naor <ref> [7] </ref> gives a method for general unlabeled graphs which uses n 2 =2 n lg n + O (n) bits (the storage requirement is shown to be optimal to second order).
Reference: [8] <author> R. E. Tarjan. </author> <title> Depth first search and linear graph algorithms. </title> <journal> SIAM J. Comput., </journal> <volume> 1 </volume> <pages> 146-160, </pages> <year> 1972. </year>
Reference-contexts: A topological depth-first search (TDFS) of a connected graph G embedded in an oriented surface (or, to abuse definitions slightly, of a map M in that surface) is a depth-first search <ref> [8] </ref> in which vertexes adjacent to the current vertex are recursively searched in counter-clockwise (CCW) order of the corresponding edges around the current vertex, starting at the edge from the current vertex to its parent. (In standard DFS, the adjacent vertexes are searched in arbitrary order.) The TDFS is started at <p> There are therefore k = m n + 1 non-tree edges, the set of which we denote by N . Depth-first search has the property that for any non-tree edge hu; vi 2 N , either u is an ancestor of v or vice versa <ref> [8] </ref>. Figure 1 gives an example of a map M and Figure 2 shows the TDFS T of M when the root node is 1 and the root edge is h1; 2i.
Reference: [9] <author> G. Turan. </author> <title> Succinct representation of graphs. </title> <journal> Discrete Applied Math, </journal> <volume> 8 </volume> <pages> 289-294, </pages> <year> 1984. </year>
Reference-contexts: There are a number of recent results on space-efficient encoding. A standard adjacency list encoding of an unlabeled graph G requires fi (m lg n) bits, where m and n are the number of edges and vertexes, respectively. Turan <ref> [9] </ref> gives an encoding of unlabeled connected planar graphs and maps which uses (asymptotically) 4m bits 1 . <p> Army Research Office Contract DAAL03-86-K-0171) and the Performance Analysis Department, AT&T Bell Laboratories. y Department of Computer Science, Yale University, New Haven, CT 06520-2158. Research partially supported by National Science Foundation Grant CCR-9009753. 1 This is not actually stated in <ref> [9] </ref>; the storage requirement is given as 12 bits per vertex. 1 encoding of unlabeled connected planar graphs which supports traversal in fi (lg n) time per vertex visited. The constant factor in the space bound is relatively large, however. <p> The constant factor in the space bound is relatively large, however. Our encoding schemes for planar graphs are at heart schemes for encoding maps: we choose a particular planar embedding and encode the resulting map. This is the procedure as well in references <ref> [6, 9] </ref>. Following Tutte [11], we allow graphs and maps to have multiple edges between two vertexes, and to contain loop edges, which are edges whose endpoints coincide. Graphs and maps may also contain degree-one vertexes; we call such a degree-one vertex and its incident edge a stick.
Reference: [10] <author> W. T. Tutte. </author> <title> A census of planar triangulations. </title> <journal> Canadian Journal of Mathematics, </journal> <volume> 14 </volume> <pages> 21-38, </pages> <year> 1962. </year>
Reference-contexts: approximation we have A m = 12 m 2 5 Then given any code for maps with m edges, the number of maps whose codewords are shorter than m (lg 12 *) + O (1) bits is o (A m =m) for any *. 2 Another enumeration due to Tutte <ref> [10] </ref> gives the comparable bound for triangulations, with which we shall compare our 2 This is a sharper version of what is often called in the computer science literature the "information-theoretic lower bound," by which is meant simply the logarithm of the size of the set to be encoded. 2 result. <p> This is ~ (3 + lg 3)=2 bits/region of M , or ~ (3 + lg 3)=3 bits/edge. | Our results may be compared with the theoretical limit of 1:62 bits/region or 1:08 bits per edge implied by the enumeration of triangulations due to Tutte <ref> [10] </ref>. 5 Remarks In Sections 2 and 3 we give schemes to encode loop-free maps and stick-free maps in lg 12 bits per edge, and maps that are both loop-free and stick-free in 3 bits per edge.
Reference: [11] <author> W. T. Tutte. </author> <title> A census of planar maps. </title> <journal> Canadian Journal of Mathematics, </journal> <volume> 15(2) </volume> <pages> 249-271, </pages> <year> 1963. </year>
Reference-contexts: The constant factor in the space bound is relatively large, however. Our encoding schemes for planar graphs are at heart schemes for encoding maps: we choose a particular planar embedding and encode the resulting map. This is the procedure as well in references [6, 9]. Following Tutte <ref> [11] </ref>, we allow graphs and maps to have multiple edges between two vertexes, and to contain loop edges, which are edges whose endpoints coincide. Graphs and maps may also contain degree-one vertexes; we call such a degree-one vertex and its incident edge a stick. <p> The unusual constant lg 12 3:58 is of particular significance in view of Tutte's enumeration of the rooted connected planar maps with m edges <ref> [11] </ref>. A rooted map is a map in which one edge has been designated the root. There are A m = m!(m + 2)! rooted connected maps and between A m =4m and A m unrooted connected maps.
References-found: 11

