URL: http://www.eecis.udel.edu:80/~ajit/techreports/ec.ps
Refering-URL: http://www.eecis.udel.edu:80/~ajit/papers.html
Root-URL: http://www.cis.udel.edu
Title: Commit: Minimizing Scheduling Delays in Reservation-TDMA Networks 1  
Author: Ajit S. Thyagarajan and David L. Mills 
Affiliation: Sun Microsystems.  
Note: Early  
Abstract: Electrical Engineering Department University of Delaware Technical Report 95-10-1 October 1995 
Abstract-found: 1
Intro-found: 1
Reference: [BG87] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1987. </year>
Reference-contexts: Suppose node A receives a request to transmit a burst from A to D. This request is multicast along a minimum spanning tree <ref> [BG87] </ref> with A as source at time T A . Figure 3 shows the timing diagram for this request. This request arrives at the different nodes at times T A , T B , T C and T D as indicated by the arrows.
Reference: [BM92] <author> C. G. Boncelet and D. L. Mills. </author> <title> A Labeling Algorithm for Just-in-Time Scheduling in TDMA Networks. </title> <booktitle> In Proceedings of the ACM SIGCOMM '92, </booktitle> <pages> pages 170-175, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Each request now takes O (T h N 2 ) time where N is the number of nodes in the network and T h is a time horizon beyond which the request cannot be scheduled. For further analysis of these algorithms, the reader is referred to <ref> [BM92, Sch91] </ref>. There can be a considerable impact in the running time of the EC algorithm, since state changes can occur every time that another node receives a request. <p> The values for the network in Figure 2 are given in Table 1. The useful values are marked with a box around them. 4 Simulation Results Boncelet et al. showed that the Highball scheduling algorithms were able to achieve overall efficiencies of 80-90% <ref> [BM92] </ref>. These algorithms were based on finding a route among a set of links by considering all possible paths between the source and destination. However, a closer examination of the various algorithms reveals that the scheduling delays for each reservation request are quite high.
Reference: [Fuj90] <author> R. M. Fujimoto. </author> <title> Parallel Discrete Event Simulation. </title> <journal> Communications of the ACM, </journal> <pages> pages 30-53, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: attempts to schedule the transmission request as soon as the destination node receives it without waiting for all the nodes to receive the request. 3 Early Commit Early Commit is a deterministic algorithm for a Highball network, although it can be adapted to other Parallel Discrete Event Simulation (PDES) applications <ref> [Fuj90] </ref>, such as intelligent highways, traffic control and distributed interactive simulation. With EC, it is possible to construct a deterministic schedule which realizes the minimum delay over all (greedy) deterministic schedules. Specifically, EC determines whether a reservation request can be scheduled before all the nodes have received it.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. Computers and Intractability. W. H. Freeman and Company, </author> <year> 1979. </year>
Reference-contexts: Thus in the worst case, its performance is akin to that of the Highball scheduling algorithms. 3.3 Analysis of EC It is known that finding an optimum schedule among a given set of nodes is NP-Hard <ref> [GJ79] </ref>. The Highball scheduling algorithms attempt to reduce this exponential complexity by processing requests one at a time and not permitting rescheduling of previously scheduled reservations. This results in a sub-optimal schedule, but helps to reduce the complexity significantly.
Reference: [MBE + 90] <author> D. L. Mills, C. G. Boncelet, J. G. Elias, P. A. Schragger, and A. W. Jackson. Highball: </author> <title> A High Speed, Reserved-Access, Wide Area Network. </title> <institution> Technical Report Electrical Engineering Department Report 90-9-3, University of Delaware, </institution> <month> September </month> <year> 1990. </year>
Reference-contexts: 1 Introduction The Highball Architecture <ref> [MBE + 90, MBE + 95] </ref> is designed for applications requiring high speed burst transmissions and which can tolerate some latency between requesting a transmission and the actual transmission of the burst. It consists of a set of interconnected, communicating finite state machines, each running a distributed, deterministic, burst-scheduling algorithm.
Reference: [MBE + 95] <author> D. L. Mills, C. G. Boncelet, J. Elias, P. A. Schragger, A. W. Jackson, and A. S. Thyagarajan. </author> <title> Performance and policy dimensions in internet routing. </title> <institution> Technical Report Electrical Engineering Dept. TR95-4-1, University of Delaware, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The Highball Architecture <ref> [MBE + 90, MBE + 95] </ref> is designed for applications requiring high speed burst transmissions and which can tolerate some latency between requesting a transmission and the actual transmission of the burst. It consists of a set of interconnected, communicating finite state machines, each running a distributed, deterministic, burst-scheduling algorithm.
Reference: [Mil94] <author> D. L. Mills. </author> <title> Improved Algorithms for Synchronizing Computer Network Clocks. </title> <booktitle> In Proceedings of the ACM SIGCOMM '94, </booktitle> <pages> pages 317-327, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: It is assumed that all the nodes are synchronized to within a fraction of a burst transmission time; it has been shown that this can be achieved using the Network Time Protocol (NTP) <ref> [Mil94] </ref>. At every node, exact information on the network topology and individual link delays is available for use in the schedule computation. The links between the nodes occur in pairs, one for each direction of transmission.
Reference: [Sch91] <author> P. Schragger. </author> <title> Scheduling Algorithms for Burst Reservations on Wide Area High Speed Networks. </title> <booktitle> In Proceedings of the IEEE INFOCOM '91, </booktitle> <pages> pages 6B.2.1-6B.2.8, </pages> <month> April </month> <year> 1991. </year> <month> 12 </month>
Reference-contexts: The path selection algorithm is deterministic, enumerating all possible loop-free paths between n s and n d . A detailed description of some path selection algorithms can be found in <ref> [Sch91] </ref>. It follows from Lemma 4 that, if perfectly synchronized, all the nodes in set Q si can perform a synchronous task every time a new node receives the request. <p> Each request now takes O (T h N 2 ) time where N is the number of nodes in the network and T h is a time horizon beyond which the request cannot be scheduled. For further analysis of these algorithms, the reader is referred to <ref> [BM92, Sch91] </ref>. There can be a considerable impact in the running time of the EC algorithm, since state changes can occur every time that another node receives a request. <p> In our simulations, we used the shortest path between each source and destination instead of considering all possible paths. Exploring all possible paths increases the complexity of the scheduling algorithms as evaluated in <ref> [Sch91] </ref>, but we expect the same results to also apply in these cases. Reservation requests were generated at each node using a Poisson process with the arrival rate varying between 0:05 and 0:91 bursts per ms.
References-found: 8

