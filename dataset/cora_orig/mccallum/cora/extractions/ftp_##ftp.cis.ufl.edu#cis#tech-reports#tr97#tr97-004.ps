URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr97/tr97-004.ps
Refering-URL: http://www.cis.ufl.edu/~fishwick/tr/tr97-004.html
Root-URL: http://www.cis.ufl.edu
Title: MOOSE: architecture of an object-oriented multimodeling simulation system  
Author: Robert Cubert, Tolga Goktekin, and Paul A. Fishwick 
Keyword: Simulation, Multimodel, Object-Oriented Modeling, Object Oriented Physical Modeling, Visualization  
Address: CSE Room 301  Gainesville, FL 32611-6120  
Affiliation: Department of Computer Information Science and Engineering  University of Florida  
Abstract: MOOSE (Multimodel Object Oriented Simulation Environment) is an enabling environment for modeling and simulation, under construction at University of Florida, based on OOPM (Object Oriented Physical Modeling). OOPM extends object-oriented program design with visualization and a definition of system modeling that reinforces the relation of model to program. OOPM is a natural mechanism for modeling large-scale systems, and facilitates effective integration of disparate pieces of code into one simulation. Components of MOOSE are Modeler, Translator, Engine, and Scenario: (1) Modeler interacts with model author via GUI to capture model design, (2) Translator is a bridge between model design and model execution, reading Modeler output, building structures representing model, and emitting C++ (or potentially other) code for model; (3) Engine is a C++ program, composed of Translator output plus runtime support, compiled and linked once, then repeatedly activated for Model Execution; (4) Scenario is a visualization-enabling GUI which activates and interacts with Engine, and displays Engine output in a form meaningful to user. Dynamic model types supported include Finite State Machine, Functional Block Model, and Equational Constraint models; alternatively, model authors may create their own C++ "code models"; model types may be freely combined; class libraries facilitate reuse. MOOSE emphasizes multimodeling, which glues together models of the same or different types, produced during model refinement, reflecting various abstraction perspectives, to adjust model fidelity, during development and during model execution. Underlying multimodeling is "Block" as fundamental object. Every model is built from Blocks, expressed in a Modeling Assembly Language. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> P. A. Fishwick, </author> <title> "Extending object oriented design for physical modeling," </title> <journal> ACM Transactions on Modeling and Computer Simulation , July 1996. </journal> <note> Submitted for review. </note>
Reference: 2. <author> I. Sommerville, </author> <title> Software Engineering, Fourth Ed., </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference: 3. <author> P. A. Fishwick, </author> <title> "The role of process abstraction in simulation," </title> <journal> IEEE Transactions on Systems, Man and Cybernetics 18, pp. </journal> <volume> 18 - 39, </volume> <month> January/February </month> <year> 1988. </year>
Reference: 4. <author> P. A. Fishwick, </author> <title> "Abstraction level traversal in hierarchical modeling," in Modelling and Simulation Methodology: Knowledge Systems Paradigms, </title> <editor> B. P. Zeigler, M. Elzas, and T. Oren, eds., pp. </editor> <volume> 393 - 429, </volume> <publisher> Elsevier North Holland, </publisher> <year> 1989. </year>
Reference: 5. <author> V. Berzins, M. Gray, and D. </author> <title> Naumann, </title> <journal> "Abstraction-based software development," Communications of the ACM 29(5), pp. </journal> <volume> 402 - 415, </volume> <year> 1986. </year>
Reference: 6. <author> P. A. Fishwick and K. Lee, </author> <title> "Two methods for exploiting abstraction in systems," </title> <booktitle> AI, Simulation and Planning in High Autonomous Systems , pp. </booktitle> <pages> 257-264, </pages> <year> 1996. </year>
Reference: 7. <author> P. A. Fishwick, </author> <title> Simulation Model Design and Execution : Building Digital Worlds, </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference: 8. <author> K. Lee and P. A. Fishwick, </author> <title> "Semi-automated method for dynamic model abstraction," </title> <booktitle> in SPIE Conference Proceedings, </booktitle> <year> 1997. </year>
Reference: 9. <author> G. Booch, </author> <title> Object Oriented Design with Applications, </title> <publisher> Benjamin Cummings, </publisher> <year> 1994. </year>
Reference: 10. <author> B. P. Zeigler, </author> <title> Object Oriented Simulation with Hierarchical, Modular Models: Intelligent Agents and Endomor-phic Systems, </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference: 11. <author> B. Stroustrup, </author> <title> The C++ Programming Language, second edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year>
Reference: 12. <author> G. Booch and J. Rumbaugh, </author> <title> Unified Method for Object-Oriented Development, Rational Software, </title> <year> 1995. </year>
Reference: 13. <author> M. Gardner, </author> <title> "Mathematical games," </title> <publisher> Scientific American, </publisher> <month> Oct </month> <year> 1970 </year> <month> , </month> <year> 1970. </year>
Reference: 14. <author> M. Gardner, </author> <title> "Mathematical games," </title> <publisher> Scientific American, </publisher> <month> Feb </month> <year> 1971 </year> <month> , </month> <year> 1971. </year>
Reference: 15. <author> M. Gardner, </author> <title> Wheels, Life, and Other Mathematical Games, </title> <publisher> publisher, </publisher> <year> 1983. </year>
Reference: 16. <author> T. I. Oren, </author> <title> "Dynamic Templates and Semantic Rules for Simulation Advisors and Certifiers," in Knowledge Based Simulation: Methodology and Application, </title> <editor> P. Fishwick and R. Modjeski, eds., pp. </editor> <volume> 53 - 76, </volume> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference: 17. <author> P. A. Fishwick and B. P. Zeigler, </author> <title> "A Multimodel Methodology for Qualitative Model Engineering," </title> <booktitle> ACM Transactions on Modeling and Computer Simulation 2(1), </booktitle> <pages> pp. 52-81, </pages> <year> 1992. </year>
Reference: 18. <author> P. A. Fishwick, </author> <title> "A Simulation Environment for Multimodeling," Discrete Event Dynamic Systems: </title> <booktitle> Theory and Applications 3, </booktitle> <pages> pp. 151-171, </pages> <year> 1993. </year>
Reference: 19. <author> R. M. Cubert, </author> <title> "The oosim object oriented simulation library," </title> <type> Tech. Rep. </type> <institution> TR951230, University of Florida CISE Simulation Group, </institution> <year> 1995. </year>
Reference: 20. <author> M. H. MacDougall, </author> <title> Simulating Computer Systems : Techniques and Tools, </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference: 21. <author> J. A. Payne, </author> <title> Introduction to Simulation : programming techniques and methods of analysis, </title> <publisher> McGraw-Hill, </publisher> <year> 1982. </year>
Reference: 22. <author> A. M. Law and W. D. </author> <title> Kelton, Simulation Modeling and Analysis, </title> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference: 23. <author> G. S. Fishman, </author> <title> Concepts and Methods in Discrete Event Digital Simulation, </title> <publisher> John Wiley & Sons, </publisher> <year> 1973. </year>
Reference: 24. <author> B. </author> <booktitle> International, The World of C++, Borland International, </booktitle> <address> Scotts Valley, CA, </address> <year> 1991. </year>

References-found: 24

