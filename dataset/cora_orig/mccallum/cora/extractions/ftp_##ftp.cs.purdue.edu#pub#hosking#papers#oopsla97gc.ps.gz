URL: ftp://ftp.cs.purdue.edu/pub/hosking/papers/oopsla97gc.ps.gz
Refering-URL: http://www.cs.purdue.edu/homes/hosking/papers.html
Root-URL: http://www.cs.purdue.edu
Email: hosking@cs.purdue.edu  novianto@cs.purdue.edu  
Title: Reachability-based orthogonal persistence for C, C++ and other intransigents  
Author: Antony L. Hosking Aria P. Novianto 
Keyword: mostly-copying garbage collection, persistence by reachability, buffer management  
Date: August 4, 1997  
Address: West Lafayette, IN 47907-1398, USA  
Affiliation: Department of Computer Sciences Purdue University  
Abstract: We describe how reachability-based orthogonal persistence can be supported even in uncooperative implementations of languages such as C and C++, where there is no support for accurate discovery of transient roots. Such ambiguous transient roots preclude the usual copying approach to promotion of objects from transient to persistent by reachability from well-known persistent roots [Atkinson et al. 1983]. Our approach extends Bartlett's mostly-copying garbage collector [Bartlett 1988; 1989] to manage both transient objects and resident persistent objects, and to perform the reachability closure necessary for stabilization in a mostly-copying fashion. The only requirement, necessary anyway for persistence, is accurate discovery of pointers in heap-allocated objects. Such support can be obtained through direct compiler assistance, extracted from debugging information, or provided explicitly by the programmer. We also consider how the garbage collector can inform the buffer manager of persistent pages that are likely candidates for removal. 
Abstract-found: 1
Intro-found: 1
Reference: <author> AGRAWAL, R. AND GEHANI, N. H. </author> <year> 1989. </year> <title> ODE (Object Database and Environment): The language and the data model. </title> <booktitle> In Proceedings of the ACM International Conference on Management of Data (Portland, </booktitle> <address> Oregon, </address> <month> May). </month> <booktitle> ACM SIGMOD Record 18, </booktitle> <month> 2 (June), 3645. </month>
Reference: <author> AGRAWAL, R. AND GEHANI, N. H. </author> <year> 1990. </year> <title> Rationale for the design of persistence and query processing facilities in the database language O++. </title> <note> See Hull et al. [1990], 2540. </note>
Reference: <author> ATKINSON, M. P., CHISHOLM, K. J., COCKSHOTT, W. P., AND MARSHALL, R. M. </author> <year> 1983. </year> <title> Algorithms for a persistent heap. </title> <journal> Software: Practice and Experience 13, </journal> <volume> 7 (Mar.), </volume> <pages> 259271. </pages>
Reference: <author> ATKINSON, M. P. AND MORRISON, R. </author> <year> 1995. </year> <title> Orthogonally persistent object systems. </title> <booktitle> Int. J. Very Large Data Bases 4, </booktitle> <volume> 3, </volume> <pages> 319401. </pages>
Reference: <author> BARTLETT, J. F. </author> <year> 1988. </year> <title> Compacting garbage collection with ambiguous roots. </title> <type> Research Report 88/2, </type> <institution> Western Research Laboratory, Digital Equipment Corporation. </institution> <month> Feb. </month>
Reference: <author> BARTLETT, J. F. </author> <year> 1989. </year> <title> Mostly-copying garbage collection picks up generations and C++. </title> <type> Technical Note TN-12, </type> <institution> Western Research Laboratory, Digital Equipment Corporation. </institution> <month> Oct. </month>
Reference: <author> BOEHM, H.-J. </author> <year> 1993. </year> <title> Space efficient conservative garbage collection. </title> <booktitle> In Proceedings of the ACM Conference on Programming Language Design and Implementation (Albuquerque, </booktitle> <address> New Mexico, </address> <month> June). </month> <journal> ACM SIGPLAN Notices 28, </journal> <note> 6 (June), 197206. </note>
Reference: <author> BOEHM, H.-J. AND WEISER, M. </author> <year> 1988. </year> <title> Garbage collection in an uncooperative environment. </title> <journal> Software: Practice and Experience 18, </journal> <volume> 9 (Sept.), </volume> <pages> 807820. </pages>
Reference: <author> CHENEY, C. J. </author> <year> 1970. </year> <title> A nonrecursive list compacting algorithm. </title> <journal> Commun. ACM 13, </journal> <volume> 11 (Nov.), </volume> <pages> 677678. </pages>
Reference: <author> DETLEFS, D. D., HERLIHY, M. P., AND WING, J. M. </author> <year> 1988. </year> <title> Inheritance of synchronization and recovery in Avalon/C++. </title> <journal> IEEE Computer 21, </journal> <note> 12 (Dec.), 5769. </note>
Reference: <author> DETREVILLE, J. </author> <year> 1990. </year> <title> Experience with concurrent garbage collectors for Modula-2+. </title> <type> Tech. Rep. 64, </type> <institution> Systems Research Center, Digital Equipment Corporation, </institution> <address> Palo Alto, CA. </address> <month> Aug. </month>
Reference: <author> HULL, R., MORRISON, R., AND STEMPLE, D., Eds. </author> <year> 1990. </year> <booktitle> Proceedings of the Second International Workshop on Database Programming Languages (Salishan Lodge, </booktitle> <address> Gleneden Beach, Oregon, June 1989). </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> JONES, R. AND LINS, R. </author> <year> 1996. </year> <title> Garbage Collection: Algorithms for Automatic Dynamic Memory Management. </title> <publisher> Wiley. </publisher>
Reference: <author> LAMB, C., LANDIS, G., ORENSTEIN, J., AND WEINREB, D. </author> <year> 1991. </year> <title> The ObjectStore database system. </title> <journal> Commun. ACM 34, </journal> <volume> 10 (Oct.), </volume> <pages> 5063. </pages>
Reference: <author> MOSS, J. E. B. </author> <year> 1990a. </year> <title> Addressing large distributed collections of persistent objects: The Mneme project's approach. </title> <note> See Hull et al. [1990], 269285. Also available as COINS Technical Report 89-68, </note> <institution> University of Massachusetts. </institution>
Reference: <author> MOSS, J. E. B. </author> <year> 1990b. </year> <title> Design of the Mneme persistent object store. </title> <journal> ACM Transactions on Information Systems 8, </journal> <volume> 2 (Apr.), </volume> <pages> 103139. </pages>
Reference: <author> MOSS, J. E. B. </author> <year> 1992. </year> <title> Working with persistent objects: To swizzle or not to swizzle. </title> <journal> IEEE Trans. Softw. Eng. </journal> <volume> 18, 8 (Aug.), </volume> <pages> 657673. </pages>
Reference: <author> MOSS, J. E. B. AND SINOFSKY, S. </author> <year> 1988. </year> <title> Managing persistent data with Mneme: Designing a reliable, shared object interface. </title> <booktitle> In Proceedings of the International Workshop on Object Oriented Database Systems (Bad Munster am Stein-Ebernburg, </booktitle> <address> Germany, </address> <month> Sept.), </month> <editor> K. R. Dittrich, Ed. </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 334. </volume> <publisher> Springer-Verlag, </publisher> <pages> 298316. </pages>
Reference: <author> NELSON, G., Ed. </author> <year> 1991. </year> <title> Systems Programming with Modula-3. </title> <publisher> Prentice Hall. </publisher>
Reference: <author> RICHARDSON, J. E. AND CAREY, M. J. </author> <year> 1990. </year> <title> Persistence in the E language: Issues and implementation. </title> <journal> Software: </journal> <note> Practice and Experience 19, 12 (Dec.), 11151150. </note>
Reference: <author> RICHARDSON, J. E., CAREY, M. J., AND SCHUH, D. T. </author> <year> 1993. </year> <title> The design of the E programming language. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 15, </volume> <month> 3 (July), 494534. </month>
Reference: <author> SCHUH, D., CAREY, M., AND DEWITT, D. </author> <year> 1991. </year> <title> Persistence in E revisitedimplementation experiences. </title> <booktitle> In Proceedings of the Fourth International Workshop on Persistent Object Systems (Martha's Vineyard, </booktitle> <address> Massachusetts, </address> <month> Sept. </month> <year> 1990), </year> <editor> A. Dearle, G. M. Shaw, and S. B. Zdonik, Eds. </editor> <title> Implementing Persistent Object Bases: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Morgan Kaufmann, </publisher> <pages> 345359. </pages>
Reference: <author> SINGHAL, V., KAKKAD, S. V., AND WILSON, P. R. </author> <year> 1992. </year> <title> Texas, an efficient, portable persistent store. </title> <booktitle> In Proceedings of the Fifth International Workshop on Persistent Object Systems (San Miniato (Pisa), </booktitle> <address> Italy, </address> <month> Sept.), </month> <editor> A. Albano and R. Morrison, Eds. </editor> <booktitle> Workshops in Computing. </booktitle> <publisher> Springer-Verlag, </publisher> <pages> 1133. </pages>
Reference: <author> WHITE, S. J. AND DEWITT, D. J. </author> <year> 1994. </year> <title> QuickStore: A high performance mapped object store. </title> <booktitle> In Proceedings of the ACM International Conference on Management of Data (Minneapolis, </booktitle> <address> Minnesota, </address> <month> May). </month> <booktitle> ACM SIGMOD Record 23, </booktitle> <month> 2 (June), 395406. </month>
Reference: <author> WILSON, P. R. </author> <title> Uniprocessor garbage collection techniques. </title> <journal> ACM Comput. </journal> <note> Surv.. To appear. </note>
Reference: <author> WILSON, P. R. </author> <year> 1992. </year> <title> Uniprocessor garbage collection techniques. </title> <booktitle> In Proceedings of the International Workshop on Memory Management (St. </booktitle> <address> Malo, France, </address> <month> Sept.), </month> <editor> Y. Bekkers and J. Cohen, Eds. </editor> <booktitle> Number 637 in Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: <author> WILSON, P. R. AND KAKKAD, S. V. </author> <year> 1992. </year> <title> Pointer swizzling at page fault time: Efficiently and compatibly supporting huge address spaces on standard hardware. </title> <booktitle> In Proceedings of the 1992 International Workshop on Object Orientation in Operating Systems (Paris, France, Sept.). IEEE Computer Society, </booktitle> <volume> 364377. </volume> <pages> 10 </pages>
References-found: 27

