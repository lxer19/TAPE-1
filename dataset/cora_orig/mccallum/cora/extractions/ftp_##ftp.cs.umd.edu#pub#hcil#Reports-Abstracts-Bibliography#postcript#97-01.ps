URL: ftp://ftp.cs.umd.edu/pub/hcil/Reports-Abstracts-Bibliography/postcript/97-01.ps
Refering-URL: http://www.cs.umd.edu/projects/hcil/Research/tech-report-list.html
Root-URL: 
Title: Direct Manipulation for Comprehensible, Predictable and Controllable User Interfaces  
Author: Ben Shneiderman 
Address: College Park, MD 20742  
Affiliation: Human Computer Interaction Laboratory Department of Computer Science Institute for Systems Research University of Maryland,  
Abstract: Direct manipulation user interfaces have proven their worth over two decades, but they are still in their youth. Dramatic opportunities exist to develop direct manipulation programming to create end-user programming tools, dynamic queries to perform information search in large databases, and information visualization to support network database browsing. Direct manipulation depends on visual representation of the objects and actions of interest, physical actions or pointing instead of complex syntax, and rapid incremental reversible operations whose effect on the object of interest is immediately visible. This strategy can lead to user interfaces that are comprehensible, predictable and controllable. Direct manipulation interfaces are seen as more likely candidates to influence advanced user interfaces than adaptive, autonomous, intelligent agents. User control and responsibility are highly desirable. Note: This paper is adapted, with permission of the publisher, from the forthcoming book: Designing the User Interface: Strategies for Effective Human-Computer Interaction (3rd Edition) , Addison Wesley, Reading, MA (1997). 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ahlberg, Christopher, Williamson, Christopher, and Shneiderman, Ben, </author> <title> Dynamic queries for information exploration: An implementation and evaluation, </title> <booktitle> Proc. ACM CHI92: Human Factors in Computing Systems, </booktitle> <year> (1992), </year> <pages> 619-626. </pages> <note> Ahlberg, </note> <author> Christopher and Shneiderman, Ben, </author> <title> Visual Information Seeking: Tight coupling of dynamic query filters with starfield displays , Proc. </title> <booktitle> of ACM CHI94 Conference, </booktitle> <month> (April </month> <year> 1994), </year> <note> 313-317 + color plates. Reprinted in Baecker, </note> <editor> R. M., Grudin, J., Buxton, W. A. S., and Greenberg, S. (Editors), </editor> <booktitle> Readings in Human-Computer Interaction: Toward the Year 2000, Second Edition, </booktitle> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Francisco, CA (1995), </address> <pages> 450-456. </pages>
Reference-contexts: Seeing 40-60 icons on the screen seems like a modest ambition when the megapixel displays can easily show 4000-6000 glyphs and allow rapid user controlled animation on task-relevant animations (Shneiderman, 1994, 1996). Our work on the HomeFinder <ref> (Ahlberg, Williamson and Shneiderman, 1992) </ref> and the FilmFinder (Ahlberg and Shneiderman, 1994) demonstrated that users could find information faster than with natural language queries and that user comprehension and satisfaction was high for these interfaces.
Reference: <author> Ahlberg, Christopher and Shneiderman, Ben, AlphaSlider: </author> <title> A compact and rapid selector, </title> <booktitle> Proc. of ACM CHI94 Conference, </booktitle> <month> (April </month> <year> 1994), </year> <pages> 365-371. </pages>
Reference-contexts: Seeing 40-60 icons on the screen seems like a modest ambition when the megapixel displays can easily show 4000-6000 glyphs and allow rapid user controlled animation on task-relevant animations (Shneiderman, 1994, 1996). Our work on the HomeFinder (Ahlberg, Williamson and Shneiderman, 1992) and the FilmFinder <ref> (Ahlberg and Shneiderman, 1994) </ref> demonstrated that users could find information faster than with natural language queries and that user comprehension and satisfaction was high for these interfaces.
Reference: <author> Doan, K., Plaisant, C., and Shneiderman, B., </author> <title> Query previews for networked information services, </title> <booktitle> Proc. Advances in Digital Libraries Conference, IEEE Computer Society (May 1996), </booktitle> <pages> 120-129. </pages> <editor> Cypher, Allen, </editor> <title> EAGER: Programming repetitive tasks by example, </title> <booktitle> Proc. CHI 91 ConferenceHuman Factors in Computing Systems , ACM, </booktitle> <address> New York (1991), </address> <month> 3339. </month>
Reference: <author> Frohlich, David M., </author> <title> The history and future of direct manipulation, </title> <booktitle> Behaviour & Information Technology 12 , 6 (1993), </booktitle> <pages> 315-329. </pages>
Reference: <author> Green, T. R. G. and Petre, M., </author> <title> Usability analysis of visual programming environments: A 'cognitive dimensions' framework, </title> <booktitle> Journal of Visual Languages and Computing 7 (1996), </booktitle> <pages> 131-174. </pages>
Reference-contexts: This influence will be a positive step that will also facilitate history keeping, undo, and online help. The cognitive dimensions framework may help in analyzing design issues of visual programming environments such as those needed for PITUI <ref> (Green and Petre, 1996) </ref>. The framework provides a vocabulary to facilitate discussion of high-level design issues, for example, "viscosity" is used to describe the difficulty of making changes in a program and progressive evaluation describes the capacity for execution of partial programs.

Reference: <author> Maulsby, David L. and Witten, Ian H., </author> <title> Inducing programs in a direct-manipulation environment, </title> <booktitle> Proc. CHI 89 ConferenceHuman Factors in Computing Systems , ACM, </booktitle> <address> New York (1989), </address> <month> 5762. </month>
Reference: <author> Myers, Brad A., </author> <title> Demonstrational interfaces: A step beyond direct manipulation, </title> <booktitle> IEEE Computer 25, </booktitle> <month> 8 (August, </month> <year> 1992), </year> <pages> 61-73. </pages>
Reference: <author> North, C., Shneiderman, B., and Plaisant, C., </author> <title> User controlled overviews of an image library: A case study of the Visible Human, </title> <booktitle> Proc. 1st ACM International Conference on Digital Libraries (March 1996), </booktitle> <pages> 74-82. </pages>
Reference-contexts: We applied the same sliding control for the National Library of Medicine's 50-gigabyte image database of the Visible Human (http://www.nlm.nih.gov) <ref> (north et al., 1996) </ref>.
Reference: <author> Plaisant, C., Rose, A., Milash, B., Widoff, S., and Shneiderman, B., LifeLines: </author> <title> Visualizing personal histories, </title> <booktitle> Proc. of ACM CHI96 Conference (April 1996), </booktitle> <pages> 221-227, </pages> <note> 518. </note> <author> Potter, Richard, </author> <title> Just in Time Programming, Cypher, </title> <editor> Allen (Editor), </editor> <title> Watch What I Do: </title> <publisher> Programming by Demonstration , MIT Press, </publisher> <address> Cambridge, MA (1993), </address> <pages> 513-526. </pages>
Reference-contexts: Sliders over the body rapidly (less than 100 ms) reveal the slice images that are available for downloading (see Figure 2) Medical patient histories are another difficult domain for which a user-controlled overview with dynamic queries to support zooming and filtering is proving to be effective (see Figure 3) <ref> (Plaisant et al., 1996) </ref>. Conclusion Direct manipulation and its descendants are thriving. Visual overviews accompanied by user interfaces that permit zooming, filtering, extraction, viewing relations, history keeping, and details-on-demand can provide users with appealing and powerful environments to accomplish their tasks.
Reference: <author> Rubin, Robert V., Golin, Eric J., and Reiss, Steven P., Thinkpad: </author> <title> A graphics system for programming by demonstrations, IEEE Software 2 , 2 (March 1985), 7379. Shneiderman, Ben, Direct manipulation: A step beyond programming languages, </title> <booktitle> IEEE Computer 16 , 8 (1983), </booktitle> <pages> 5769. </pages>
Reference-contexts: Smith (1977) inspired work in this area with his Pygmalion system that allowed arithmetic programs to be specified visually with icons. A number of early research projects have attempted to create direct manipulation programming systems <ref> (Rubin et al., 1985) </ref>. Maulsby and Witten (1989) developed a system that could induce or infer a program from examples, questioning the users to resolve ambiguities. In constrained domains inferences become predictable and useful, but if the inference is occasionally wrong users will quickly distrust it.
Reference: <author> Shneiderman, B., </author> <title> Beyond intelligent machines: Just Do It!, </title> <booktitle> IEEE Software 10, </booktitle> <month> 1 (January </month> <year> 1993), </year> <pages> 100-103. </pages>
Reference: <author> Shneiderman, B., </author> <title> Dynamic queries for visual information seeking, </title> <booktitle> IEEE Software 11 , 6 (1994), </booktitle> <pages> 70-77. </pages> <editor> Shneiderman, Ben, </editor> <title> Looking for the bright side of agents, </title> <booktitle> ACM Interactions 2 , 1 (January 1995), </booktitle> <pages> 13-15. </pages>
Reference-contexts: Dynamic Queries and Information Visualization The remarkable human visual perception seems underutilized by today's graphical user interfaces. Seeing 40-60 icons on the screen seems like a modest ambition when the megapixel displays can easily show 4000-6000 glyphs and allow rapid user controlled animation on task-relevant animations <ref> (Shneiderman, 1994, 1996) </ref>. Our work on the HomeFinder (Ahlberg, Williamson and Shneiderman, 1992) and the FilmFinder (Ahlberg and Shneiderman, 1994) demonstrated that users could find information faster than with natural language queries and that user comprehension and satisfaction was high for these interfaces. <p> Seeing 40-60 icons on the screen seems like a modest ambition when the megapixel displays can easily show 4000-6000 glyphs and allow rapid user controlled animation on task-relevant animations (Shneiderman, 1994, 1996). Our work on the HomeFinder (Ahlberg, Williamson and Shneiderman, 1992) and the FilmFinder <ref> (Ahlberg and Shneiderman, 1994) </ref> demonstrated that users could find information faster than with natural language queries and that user comprehension and satisfaction was high for these interfaces.
Reference: <author> Shneiderman, B., </author> <title> The eyes have it: A task by data type taxonomy of information visualizations, </title> <booktitle> Proc. IEEE Symposium on Visual Languages 96 , IEEE, </booktitle> <address> Los Alamitos, CA (September 1996), </address> <month> 336-343. </month> <title> Shneiderman, Ben, Designing the User Interface: Strategies for Effective Human-Computer Interaction: Third Edition, </title> <publisher> Addison-Wesley Publishing Co., </publisher> <address> Reading, MA (1997). </address> <note> Smith, </note> <author> David Canfield, Pygmalion: </author> <title> A Computer Program to Model and Stimulate Creative Thought , Birkhauser Verlag, </title> <address> Basel, Switzerland (1977). </address>
Reference: <author> Ziegler, J. E. and Fhnrich, K.-P., </author> <title> Direct manipulation. </title> <editor> In Helander, M. (Editor), </editor> <publisher> Handbook of HumanComputer Interaction , Elsevier Science Publishers, </publisher> <address> Amsterdam, The Netherlands (1988), </address> <month> 123133. </month>
References-found: 14

