URL: http://www.iihe.ac.be/stc/simulation/Rabat.ps.Z
Refering-URL: http://www.iihe.ac.be/stc/simulation/
Root-URL: http://www.iihe.ac.be
Email: cohen@helios.iihe.rtt.be and mrabet@helios.iihe.rtt.be  
Phone: Tel 322-650-57-04 Fax 322-641-38-16  
Title: Design of AMS, an Atelier for Modeling and Simulating Open Communication Systems  
Author: Atika COHEN and Radouane MRABET C=be; ADMD=rtt; PRMD=iihe; O=helios; S=cohen (or S=mrabet) 
Address: Bd du Triomphe, CP 230 Brussels, Belgium  
Affiliation: Universit Libre de Bruxelles Service Tlmatique et Communication  
Abstract: The article describes a work related to the OSISIM project (Open System Integrated Simulator). The main objective of this project is to set up an atelier for the modelization of communication systems and the analysis of their performances. The representation of a system to be simulated is based on models of several standard networks available in the library which is the kernel of the atelier. Starting with an outline of the components of the atelier, we describe the basic models to be included in it. Moreover, a concrete example of communication system shows a methodology to be applied when using the atelier. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. A. Marsan, G. Balbo, G. Bruno, and F. Neri, </author> <title> "TOPNET : A Tool for the Visual Simulation of Communication Networks". </title> <journal> IEEE Journal on Selected Areas in Comm., </journal> <volume> Vol. 8, no 9, </volume> <pages> 1735-1747, </pages> <month> Dec. 90. </month>
Reference-contexts: 1. Introduction The main objective of the OSISIM project is to set up an atelier for the modelization of communication systems and the analysis of their performances. In the literature, we find the description of different toolkits dedicated to this field, such as TOPNET <ref> [1] </ref>, which is based on PROT net, a class of Petri nets; NETMOD [2], which is based on simple analytical models; BONeS [3], which is based on block-oriented modeling paradigm, written in C++. Unlike these approaches, ours is based on queueing networks.
Reference: [2] <author> D. W. Bachmann, M. E. Segal, M. M. Srinivasan, and T. J. Teorey, "NetMod: </author> <title> A Design Tool for Large-Scale Heterogeneous Campus Networks", </title> <journal> IEEE Journal on Selected Areas in Comm., </journal> <volume> Vol. 9, no 1, </volume> <pages> 1735-1747, 15-24, </pages> <month> January 91. </month>
Reference-contexts: In the literature, we find the description of different toolkits dedicated to this field, such as TOPNET [1], which is based on PROT net, a class of Petri nets; NETMOD <ref> [2] </ref>, which is based on simple analytical models; BONeS [3], which is based on block-oriented modeling paradigm, written in C++. Unlike these approaches, ours is based on queueing networks.
Reference: [3] <author> K. S. Shanmugan, V. S. Frost, W. LaRue, </author> <title> "A block-Oriented Network Simulator", </title> <booktitle> Simulation, </booktitle> <pages> 83-94, </pages> <note> February 92. [4] "QNAP2 User's Manual", Simulog S.A. 1992. [5] "QNAP2 Reference Manual", Simulog S.A. 1992. [6] "GSS4 User's Guide", Simulog S.A. </note> <year> 1992. </year>
Reference-contexts: In the literature, we find the description of different toolkits dedicated to this field, such as TOPNET [1], which is based on PROT net, a class of Petri nets; NETMOD [2], which is based on simple analytical models; BONeS <ref> [3] </ref>, which is based on block-oriented modeling paradigm, written in C++. Unlike these approaches, ours is based on queueing networks. Our atelier, named AMS (Atelier for Modelization and Simulation), integrates the facilities and the tools in such a way as to be easy to use by the end-user.
Reference: [7] <author> A. Cohen and R. Mrabet, </author> <title> "AMS : An Integrated Simulator for Open Systems", </title> <booktitle> GLOBECOM'93 Conference, </booktitle> <pages> 656-660, </pages> <address> Houston, Texas, </address> <month> November 29- December 2, </month> <year> 1993. </year>
Reference-contexts: That is why we have to build basic models, which will make up other models of more complex systems. Each basic model implements uniform and well-defined sets of functions, while having clearly specified interfaces. In the section 2, this paper describes the architectural elements of the AMS <ref> [7] </ref>, and how the latter can be used. The section 3 focuses on the design of a basic model [8], its components, the structure of messages exchanged and the interconnection of two basic models.
Reference: [8] <author> A. Cohen and R. Mrabet, </author> <title> "AMS : Internal structure for Basic Models", </title> <type> Internal Report, </type> <institution> IIHE/HELIOS-B-115-92, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: Each basic model implements uniform and well-defined sets of functions, while having clearly specified interfaces. In the section 2, this paper describes the architectural elements of the AMS [7], and how the latter can be used. The section 3 focuses on the design of a basic model <ref> [8] </ref>, its components, the structure of messages exchanged and the interconnection of two basic models. The section 4 is devoted to the presentation of how an end-user can build a communication system using the atelier.
Reference: [9] <author> A. Cohen and R. Mrabet, </author> <title> "How to write a DBM using the QNAP2 package ?", Internal Report, STC-93-15, juin 1993. 7. Acknowledgment We wish to express our gratitude to SAIT Systems with whom we have been working on the OSISIM project. Besides, we gratefully acknowledge the financial support granted by IRSIA. </title>
Reference-contexts: Inside a same DBM, the modeler is free to choose the type. In contrast, if a message transits between stations not belonging to the same DBM, the type of message has to meet a specific format. This specific format <ref> [9] </ref> is used in order to homogenize the interactions between all DBMs. Hereunder, the format of messages which transit between DBMs. A customer modeling such a message has the type, named CUST_TT described in figure 6. We note that this kind of message is divided into two parts.
References-found: 6

