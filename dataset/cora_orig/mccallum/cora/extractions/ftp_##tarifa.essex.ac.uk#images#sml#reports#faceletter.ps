URL: ftp://tarifa.essex.ac.uk/images/sml/reports/faceletter.ps
Refering-URL: http://www.cnl.salk.edu/~wiskott/Bibliographies/FaceProcessing.html
Root-URL: http://www.cnl.salk.edu/~wiskott/Bibliographies/FaceProcessing.html
Email: sml@essex.ac.uk  
Title: The continuous n-tuple classifier and its application to face recognition  
Author: S.M. Lucas 
Address: Colchester CO4 3SQ, UK  
Affiliation: Department of Electronic Systems Engineering University of Essex  
Abstract: This paper describes the continuous n-tuple classifier: a new type of n-tuple classifier that is ideally suited to problems where the input is continuous or multi-level rather than binary. Results on a widely used face database show the continuous n-tuple classifier to be as accurate as any method reported in the literature, while having the advantages of speed and simplicity over other methods. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Aleksander and T. Stonham, </author> <title> "Guide to pattern recognition using random-access memories," </title> <booktitle> IEE Proceedings on Computers and Digital Techniques, </booktitle> <volume> vol. 2, </volume> <pages> pp. 29 - 40, </pages> <year> (1979). </year>
Reference-contexts: 1 Introduction Conventional n-tuple systems <ref> [1] </ref> have the desirable features of super-fast single-pass training, super-fast recognition, conceptual simplicity, straightforward hardware and software implementations and accuracy that is often competitive with other more complex, slower methods. Due to their attractive features, n-tuple methods have been the subject of much research.
Reference: [2] <author> R. Rohwer and M. Morciniec, </author> <title> The Theoretical and Experimental Status of the n-tuple Classifier. </title> <type> Technical Report NCRG/4347: </type> <institution> Neural Computing Research Group, Aston University, UK, </institution> <year> (1995). </year>
Reference-contexts: Due to their attractive features, n-tuple methods have been the subject of much research. See Rohwer and Morciniec <ref> [2] </ref> for a thorough review. In conventional n-tuple based image recognition systems, the locations specified by each n-tuple are used to identify an address in a look-up-table.
Reference: [3] <author> N. Allinson and A. Kolcz, </author> <title> "Application of the CMAC input encoding scheme in the n-tuple approximation network," </title> <booktitle> IEE Proceedings on Computers and Digital Techniques, </booktitle> <volume> vol. 141, </volume> <pages> pp. 177 - 183, </pages> <year> (1994). </year>
Reference-contexts: While the traditional n-tuple classifier deals with binary-valued input vectors, methods for using n-tuple systems with integer-valued inputs have also been developed. Allinson and Kolcz <ref> [3] </ref> have developed a method of mapping scalar attributes into bit strings based on a combination of CMAC and Gray coding methods.
Reference: [4] <author> G. Tattersall and R. Johnston, </author> <title> "Single-layer look-up perceptrons," </title> <booktitle> IEE Proceedings F, </booktitle> <volume> vol. 138, </volume> <pages> pp. 46 - 54, </pages> <year> (1991). </year>
Reference-contexts: However, where practical, the continuous n-tuple method described in this paper should be preferable, since it incorporates the exact arithmetic distance between attributes. The continuous n-tuple method also shares some similarity at the architectural level with the single-layer look-up perceptron of Tattersall et al <ref> [4] </ref>, though they differ in the way the class outputs are calculated, and in the training methods used to configure the contents of the look-up tables (RAMs).
Reference: [5] <author> S. Lucas, </author> <title> "Face recognition with the continuous n-tuple classifier," </title> <booktitle> Proceedings of the British Machine Vision Conference, </booktitle> <year> (1997). </year>
Reference-contexts: The continuous n-tuple method was first proposed by the author <ref> [5] </ref>; this paper gives a concise description of the method, and provides a more significant set of results. 2 The continuous n-tuple classifier The d-dimensional input space is sampled by m n-tuples. Each n-tuple defines a fixed set of locations in the input space.
Reference: [6] <author> S. Lin, S. Kung, and L. Lin, </author> <title> "Face recognition/detection by a probabilistic decision-based neural network," </title> <journal> IEEE Transactions on Neural Networks, </journal> <volume> vol. 8, </volume> <pages> pp. 114 - 132, </pages> <year> (1997). </year>
Reference-contexts: To make the results presented in this paper (i.e. the n-tuple results) statistically significant, each result is based on 100 random partitions of the dataset (again, into 5 images for training and 5 for testing). The probabilistic decision-based neural net (PDBNN) results are taken from Lin and Kung <ref> [6] </ref>. Self-organising map combined with convolutional neural net (SOM+CN) results, together with the results of Eigenface, Top-down HMM and Pseudo-2d HMM are taken from Lawrence et al [7] and Samaria and Harter [8]. The humble nearest neighbour classifier 4 actually performs surprisingly well.
Reference: [7] <author> S. Lawrence, C. Giles, A. Tsoi, and A. </author> <title> Back, "Face recognition: a convolutional neural network approach," </title> <journal> IEEE Transactions on Neural Networks, </journal> <volume> vol. 8, </volume> <pages> pp. 98 - 113, </pages> <year> (1997). </year>
Reference-contexts: The probabilistic decision-based neural net (PDBNN) results are taken from Lin and Kung [6]. Self-organising map combined with convolutional neural net (SOM+CN) results, together with the results of Eigenface, Top-down HMM and Pseudo-2d HMM are taken from Lawrence et al <ref> [7] </ref> and Samaria and Harter [8]. The humble nearest neighbour classifier 4 actually performs surprisingly well. This is based on a city-block distance; a Euclidean distance version performs significantly worse. The figures in parentheses indicate that the nearest-neighbour classifier was implemented as a continuous n-tuple system with n=10304 and m=1.

References-found: 7

