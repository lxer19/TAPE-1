URL: http://www.ai.univie.ac.at/ilp_kdd/pompe.ps.gz
Refering-URL: http://www.ai.univie.ac.at/ilp_kdd/schedule.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: furos.pompe, igor.kononenkog@fri.uni-lj.si  
Title: An application of ILP in a musical database: learning to compose the two-voice counterpoint  
Author: Uros Pompe, Igor Kononenko, Tjasa Makse 
Address: Trzaska 25, SI-1001 Ljubljana, Slovenia  
Affiliation: University of Ljubljana Faculty of Computer and Information Science  
Abstract: We describe SFOIL, a descendant of FOIL that uses the advanced stochastic search heuristic, and its application in learning to compose the two-voice counterpoint. The application required learning a 4-ary relation from more than 20.000 training instances. SFOIL is able to efficiently deal with this learning task which is to our knowledge one of the most complex learning task solved by an ILP system. This demonstrates that ILP systems can scale up to real databases and that top-down ILP systems that use the covering approach and advanced search strategies are appropriate for knowledge discovery in databases and are promising for further investigation. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Dobnikar A. </author> <title> (1994) Two-voice counterpoint composition defined with inductive learning, </title> <booktitle> Proc. 3th Electrotech. and Computer Sc. Conf. </booktitle> <address> ERK-94, Portoroz, Slovenia, </address> <month> Sept. </month> <year> 1994, </year> <note> Vol.B, pp.151-154. </note>
Reference: <author> Dolsak B., Jezernik A., Bratko I. </author> <title> (1991) A knowledge base for finite element mesh design, </title> <type> Technical report, </type> <institution> University of Maribor, University of Ljubljana. </institution>
Reference-contexts: At the inner level the algorithm does not perform any post-processing. 3.4 Benchmark comparison with some other systems We conducted several tests on two benchmark real-world problems: finite element mesh design (FEM) <ref> (Dolsak et al., 1991) </ref> and King-rook-king chess endgame (KRK).
Reference: <author> Dzeroski S. </author> <title> (1991) Handling noise in inductive logic programming, M.Sc. </title> <type> thesis, </type> <institution> University of Ljubljana, FER. </institution>
Reference-contexts: It uses the algorithm called Markovian neural network (Kovacic, 1991), which is a generalization of simulated annealing. The system inherits also some qualities from other ILP systems, namely, FOIL (Quinlan, 1990), mFOIL <ref> (Dzeroski, 1991) </ref>, and PCFOIL (Zupanc, 1991). We tested SFOIL on several artificial benchmark problems, described in (Quinlan, 1990)(in this paper the results are omitted), and on two real world benchmark problems: the finite element mesh design and the king-rook-king chess endgame. <p> This entropy is, informally speaking, the total information contained in the training set T S (s k ). The second set of heuristic estimates is based on the m-estimate <ref> (Dzeroski, 1991) </ref>. <p> When either of the conditions is satisfied, the clause is added to the hypothesis (and later eventually eliminated by the post-processing). At the outer level the post-processing consists of eliminating inaccurate and insignificant clauses. Significance of the clause is measured by the likelihood ratio statistics <ref> (Dzeroski, 1991) </ref> where only those clauses, for which the value of the statistic exceeds some predetermined threshold, are retained in the final definition. <p> Table 1 shows the classification accuracy of SFOIL in FEM when learning with default set of parameters. With a small amount of fine-tuning the classification accuracy of up to 32.7% in FEM was achieved. SFOIL clearly performed better than FOIL (FOIL's and mFOIL's results are from <ref> (Dzeroski, 1991) </ref>). The main source of the increase of the classification accuracy were the clauses containing the neighbour literal. These literals have small or zero information gain and are usually overlooked by the greedy search. <p> The learning time for individual clauses was in the range of minutes (on Sun-Sparc station IPX). A significant property of every learning algorithm is it's noise resistance. SFOIL was tested on KRK domain. Tests were performed on the same data and conducted in the same manner as described in <ref> (Dzeroski, 1991) </ref>.
Reference: <author> King R.D., Hurst J.D., Sternberg M.J.E. </author> <title> (1994) A comparison of artificial inteligence methods for modelling QSARs, </title> <journal> Applied Artificial Intelligence, </journal> <year> 1994. </year>
Reference-contexts: To our knowledge, the only two exceptions are learning the quantitative structure activity relationships in triazines, where the task is to learn a 2-ary relation from about 24.000 training instances and about 2000 facts (with arity up to 3) in the background knowledge <ref> (King et al., 1994) </ref>, and learning in mutagenesis, where the task is to learn from 230 training instances and 15.000 facts (with up to 5 strongly typed arguments) in the background knowledge (Srinivasan et al., 1994; 1995).
Reference: <author> Kovacic M. </author> <title> (1991) Markovian neural networks, </title> <journal> Biological cybernetics, </journal> <volume> 64 </volume> <pages> 337-342. </pages>
Reference-contexts: We have developed an ILP system, called SFOIL (Pompe et al., 1993), that benefits from one such technique. It uses the algorithm called Markovian neural network <ref> (Kovacic, 1991) </ref>, which is a generalization of simulated annealing. The system inherits also some qualities from other ILP systems, namely, FOIL (Quinlan, 1990), mFOIL (Dzeroski, 1991), and PCFOIL (Zupanc, 1991).
Reference: <author> Kovacic M., Lavrac N., Groblenik M., Zupancic D., Mladenic D. </author> <title> (1992) Stochastic search in inductive logic programming, </title> <booktitle> Proc. European Conference on AI, </booktitle> <address> Vienna, pp.444-445. </address>
Reference-contexts: Inductive Logic Programming systems perform the task by searching the state space of logic programs. This space is determined by the language of logic programs (Quinlan, 1990) and can be structured as a refinement graph <ref> (Kovacic et al., 1992) </ref>. The ILP algorithms were supposed to be an efficient tool for coping with real world problems. In order to achieve that, many systems search the subspace which is significantly reduced compared to complete state space. The FOIL system (Quinlan, 1990) is a step in this direction. <p> and second, the domain itself is not crisp, there are examples which can not be classified as either positive or negative since sometimes the rules can be broken to emphasize more the artistic component of the counterpoint. 3 SFOIL We can consider the induction of hypothesis as an optimization problem <ref> (Kovacic et al., 1992) </ref>. This way we do not only look at the problem from another point of view, but we can also employ well-known techniques that are able to solve such problems. <p> The task is to find such s min 2 S that 8s i 2 S : f (s min ) f (s i ), that is, function f has a minimum in s min . Stochastic search method <ref> (Kovacic et al., 1992) </ref> works as follows. Let S s cur be a set of successors of state s cur; and T &gt; 0, a parameter called temperature.
Reference: <author> Makse T. </author> <title> (1994) An application of ILP in music, </title> <booktitle> B.Sc. thesis (in slovene), </booktitle> <institution> University of Ljubljana, FER. </institution>
Reference-contexts: Note that due to 4 arguments of the target predicate, each with 13 possible values, the complete space consists of 13 4 = 28:561 instances. We had available a database from which we were able to generate up to 505 positive instances and up to 19.912 negative instances <ref> (Makse, 1994) </ref>. The closed world assumption for the generation of the negative instances is inappropriate for two reasons in this case.
Reference: <author> Morris R.O. </author> <title> (1922) Contrapunctal technique in the 16th century, </title> <publisher> Oxford University Press. </publisher>
Reference: <editor> Muggleton S. (ed.) </editor> <booktitle> (1992) Inductive Logic Programming, </booktitle> <publisher> Academic Press. </publisher>
Reference: <author> Lavrac N. and Dzeroski S. </author> <title> (1994) Inductive Logic Programming. </title> <publisher> Ellis Horwood. </publisher>
Reference-contexts: We still think that an ILP system, which is able to interpret the background knowledge on the fly has an advantage over the transformational approach (a la LINUS <ref> (Lavrac and Dzeroski, 1994) </ref>). It does not impose such a restrictive declarative bias on the hypothesis language.
Reference: <author> Orem P.W. </author> <title> (1937) The art of interweaving melodies, a first method of counterpoint, </title> <address> Philadel 10 phia, </address> <publisher> Theodore Presser Co. </publisher>
Reference: <author> Pompe U., Kovacic M., Kononenko I. </author> <year> (1993) </year> <month> SFOIL: </month> <title> Stochastic approach to inductive logic programming, </title> <booktitle> Proc. Slovenian Conf. on Electrr. </booktitle> <institution> Eng. and Computer Science ERK-93, Portoroz, Slovenia, </institution> <month> Sept. </month> <year> 1993, </year> <note> Vol.B, pp.189-192. </note>
Reference-contexts: The search strategy introduced by this system is based on the greedy, heuristically guided algorithm. Unfortunately, due to its myopic behavior, it is not able to discover interesting relations that often appear in real world problems. We have developed an ILP system, called SFOIL (Stochastic FOIL) <ref> (Pompe et al., 1993) </ref> which is due to stochastic search strategy less 1 myopic than its predecessor FOIL. It combines the FOIL's efficiency with an advanced search strategy. <p> This way we do not only look at the problem from another point of view, but we can also employ well-known techniques that are able to solve such problems. We have developed an ILP system, called SFOIL <ref> (Pompe et al., 1993) </ref>, that benefits from one such technique. It uses the algorithm called Markovian neural network (Kovacic, 1991), which is a generalization of simulated annealing. The system inherits also some qualities from other ILP systems, namely, FOIL (Quinlan, 1990), mFOIL (Dzeroski, 1991), and PCFOIL (Zupanc, 1991).
Reference: <author> Pompe U., Kononenko I. </author> <title> (1995a) Linear space induction in first order logic with RELIEFF, </title> <editor> In: G.Della Riccia, R.Kruse, R.Viertl, (eds.), </editor> <booktitle> Proc. of ISSEK Workshop on Mathematical and statistical methods in Artificial Intelligence, </booktitle> <address> (Udine, 6-8.9.1994), </address> <publisher> Springer Verlag, pp.185-198. </publisher>
Reference: <author> Pompe U., Kononenko I. </author> <title> (1995b) Naive Bayesian classifier within ILP-R, </title> <booktitle> Proc. 5th Intern. Workshop on Inductive Logic Programming ILP-95, </booktitle> <address> Leuven, </address> <month> Sept. </month> <year> 1995, </year> <pages> pp. 417-436. </pages>
Reference: <author> Quinlan J.R. </author> <title> (1990) Learning logical definitions from relations, </title> <journal> Machine learning, </journal> <volume> 5 </volume> <pages> 239-266. </pages>
Reference-contexts: Inductive Logic Programming systems perform the task by searching the state space of logic programs. This space is determined by the language of logic programs <ref> (Quinlan, 1990) </ref> and can be structured as a refinement graph (Kovacic et al., 1992). The ILP algorithms were supposed to be an efficient tool for coping with real world problems. In order to achieve that, many systems search the subspace which is significantly reduced compared to complete state space. <p> The ILP algorithms were supposed to be an efficient tool for coping with real world problems. In order to achieve that, many systems search the subspace which is significantly reduced compared to complete state space. The FOIL system <ref> (Quinlan, 1990) </ref> is a step in this direction. The search strategy introduced by this system is based on the greedy, heuristically guided algorithm. Unfortunately, due to its myopic behavior, it is not able to discover interesting relations that often appear in real world problems. <p> We have developed an ILP system, called SFOIL (Pompe et al., 1993), that benefits from one such technique. It uses the algorithm called Markovian neural network (Kovacic, 1991), which is a generalization of simulated annealing. The system inherits also some qualities from other ILP systems, namely, FOIL <ref> (Quinlan, 1990) </ref>, mFOIL (Dzeroski, 1991), and PCFOIL (Zupanc, 1991). We tested SFOIL on several artificial benchmark problems, described in (Quinlan, 1990)(in this paper the results are omitted), and on two real world benchmark problems: the finite element mesh design and the king-rook-king chess endgame. <p> It uses the algorithm called Markovian neural network (Kovacic, 1991), which is a generalization of simulated annealing. The system inherits also some qualities from other ILP systems, namely, FOIL <ref> (Quinlan, 1990) </ref>, mFOIL (Dzeroski, 1991), and PCFOIL (Zupanc, 1991). We tested SFOIL on several artificial benchmark problems, described in (Quinlan, 1990)(in this paper the results are omitted), and on two real world benchmark problems: the finite element mesh design and the king-rook-king chess endgame. Like FOIL, SFOIL uses the extensional representation of the background knowledge and the target predicate. At the outer level it is the covering algorithm. <p> V i may be either an existing or a new variable. Note that in case of q i = p (recursive literal), q i (V 1 ; : : : ; V s ) must comply with additional restrictions, carefully described in <ref> (Quinlan, 1990) </ref>.
Reference: <author> Quinlan J.R. </author> <booktitle> (1991) Determinate literals in inductive logic programming, Proc. 12th Int. Joint Conf. on AI, </booktitle> <pages> pp. 746-750. </pages>
Reference-contexts: We will sometimes, when appropriate, refer to the function h as the function of literal L (h (L)). * finally, (s cur ) = fs k ; s k = s cur fl L c g (3) L c is a determinate literal <ref> (Quinlan, 1991) </ref> or a literal with the maximum utility estimate. This literal is computed individually for each predicate from the background knowledge. Therefore, for the background knowledge B with r predicates it holds j (s cur )j r.
Reference: <author> Srinivasan A., Muggleton S., King R.D., Sternberg M.J.E. </author> <year> (1994) </year> <month> Mutagenesis: </month> <title> ILP experiments in a non-determinate biological domain, </title> <booktitle> Proc. 4th ILP Workshop, </booktitle> <address> Bonn. </address>
Reference: <author> Srinivasan A., Muggleton S., Sternberg M.J.E., King R.D. </author> <title> (1994) Theories for mutagenicity: a study of 1st order and a feature based induction. </title> <institution> PRG-TR-8-95, Oxford University Computing Laboratory. </institution>
Reference: <author> Widmer G. </author> <title> (1988) A knowledge-based approach to machine learning in a subfield of tonal music. Intern. School for the Synthesis of Expert's Knowledge ISSEK-88, </title> <type> Udine, </type> <institution> Italy. </institution>
Reference: <author> Zupanc R. </author> <title> (1991) Efficient implementation of machine learning in 1st order logic, </title> <booktitle> M.Sc. thesis (in slovene), </booktitle> <institution> University of Ljubljana, FER. </institution> <month> 11 </month>
Reference-contexts: It uses the algorithm called Markovian neural network (Kovacic, 1991), which is a generalization of simulated annealing. The system inherits also some qualities from other ILP systems, namely, FOIL (Quinlan, 1990), mFOIL (Dzeroski, 1991), and PCFOIL <ref> (Zupanc, 1991) </ref>. We tested SFOIL on several artificial benchmark problems, described in (Quinlan, 1990)(in this paper the results are omitted), and on two real world benchmark problems: the finite element mesh design and the king-rook-king chess endgame.
References-found: 20

