URL: http://ftp.eecs.umich.edu/people/sakallah/cse-tr-97-91.ps.Z
Refering-URL: http://ftp.eecs.umich.edu/people/sakallah/
Root-URL: http://www.eecs.umich.edu
Title: Synchronization of Pipelines  
Phone: USA  
Author: Karem A. Sakallah Trevor N. Mudge Timothy M. Burks Edward S. Davidson 
Date: February 11, 1991  
Address: Ann Arbor, Michigan 48109-2122fl  
Affiliation: THE UNIVERSITY OF MICHIGAN Computer Science and Engineering Divisionfl Department of Electrical Engineering and Computer Sciencefl  
Abstract: Computer Science and Engineering Technical Report CSE-TR-97-91 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. R. Kunkel and J. E. Smith, </author> <title> "Optimal Pipelining in Supercomputers," </title> <booktitle> in Proc. of the 13th Annual Symposium on Computer Architecture, </booktitle> <pages> pp. 404-411, </pages> <year> 1986. </year>
Reference-contexts: Theoretically, this should yield a factor of n performance improvement over the non-pipelined case. This maximum is rarely achieved, however, because of dependencies among the operations and overhead due to clocking <ref> [1] </ref>. <p> This paper addresses one aspect of the second step, namely, determining the minimum cycle time, T c;min , for an n-stage pipeline in terms of circuit delays. The problem has been addressed previously by a number of authors including <ref> [2, 3, 4, 1] </ref>. This previous work dealt mostly with simple clocking paradigms. Furthermore, the analysis was typically based on examination of a single pipe stage. <p> Conclusions and suggestions for future work are summarized in Sec. 5. 2 Pipeline Model Our pipeline model is shown in Fig. 1. Unlike earlier formulations, such as those given in <ref> [2, 3, 4, 1] </ref>, the pipe stages in our model form a simple closed loop. This is a more realistic configuration than an open-ended pipeline because it accounts for the the timing of the source and sink of the data flowing in the pipeline.
Reference: [2] <author> L. W. Cotten, </author> <title> "Circuit Implementation of High-Speed Pipeline Systems," </title> <booktitle> in AFIPS Fall Joint Computer Conference, </booktitle> <pages> pp. 489-504, </pages> <year> 1965. </year>
Reference-contexts: This paper addresses one aspect of the second step, namely, determining the minimum cycle time, T c;min , for an n-stage pipeline in terms of circuit delays. The problem has been addressed previously by a number of authors including <ref> [2, 3, 4, 1] </ref>. This previous work dealt mostly with simple clocking paradigms. Furthermore, the analysis was typically based on examination of a single pipe stage. <p> Conclusions and suggestions for future work are summarized in Sec. 5. 2 Pipeline Model Our pipeline model is shown in Fig. 1. Unlike earlier formulations, such as those given in <ref> [2, 3, 4, 1] </ref>, the pipe stages in our model form a simple closed loop. This is a more realistic configuration than an open-ended pipeline because it accounts for the the timing of the source and sink of the data flowing in the pipeline.
Reference: [3] <author> T. G. Hallin and M. J. Flynn, </author> <title> "Pipelining of Arithmetic Functions," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-21, no. 8, </volume> <pages> pp. 880-886, </pages> <month> August </month> <year> 1972. </year>
Reference-contexts: This paper addresses one aspect of the second step, namely, determining the minimum cycle time, T c;min , for an n-stage pipeline in terms of circuit delays. The problem has been addressed previously by a number of authors including <ref> [2, 3, 4, 1] </ref>. This previous work dealt mostly with simple clocking paradigms. Furthermore, the analysis was typically based on examination of a single pipe stage. <p> Conclusions and suggestions for future work are summarized in Sec. 5. 2 Pipeline Model Our pipeline model is shown in Fig. 1. Unlike earlier formulations, such as those given in <ref> [2, 3, 4, 1] </ref>, the pipe stages in our model form a simple closed loop. This is a more realistic configuration than an open-ended pipeline because it accounts for the the timing of the source and sink of the data flowing in the pipeline.
Reference: [4] <author> B. K. Fawcett, </author> <title> Maximal Clocking Rates for Pipelined Digital Systems, </title> <type> Master's thesis, </type> <institution> University of Illinois, </institution> <year> 1975. </year> <month> 22 </month>
Reference-contexts: This paper addresses one aspect of the second step, namely, determining the minimum cycle time, T c;min , for an n-stage pipeline in terms of circuit delays. The problem has been addressed previously by a number of authors including <ref> [2, 3, 4, 1] </ref>. This previous work dealt mostly with simple clocking paradigms. Furthermore, the analysis was typically based on examination of a single pipe stage. <p> Conclusions and suggestions for future work are summarized in Sec. 5. 2 Pipeline Model Our pipeline model is shown in Fig. 1. Unlike earlier formulations, such as those given in <ref> [2, 3, 4, 1] </ref>, the pipe stages in our model form a simple closed loop. This is a more realistic configuration than an open-ended pipeline because it accounts for the the timing of the source and sink of the data flowing in the pipeline.
Reference: [5] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun, </author> <title> "checkT c and minT c : Timing Ver--ification and Optimal Clocking of Synchronous Digital Circuits," </title> <booktitle> in ICCAD-90 Digest of Technical Papers, </booktitle> <address> Santa Clara, California, </address> <month> November </month> <year> 1990, </year> <note> IEEE. </note>
Reference-contexts: i-1 ] d i [ ,D i ] d 0 [ ,D 0 ] 0 T c - p TT c ( ) Enabling Edge Latching Edge j p Passive Interval Active Interval We base the steady-state behavior of such pipelines on the general model of synchronous operation introduced in <ref> [5] </ref>. The salient features of this model, as they relate to the pipeline, are summarized below. <p> It will be convenient to refer to a i and A i as the early and late arrival times, and to d i and D i as the early and late departure times. The timing model of the pipeline can now be expressed by the following constraints and equations <ref> [5] </ref> for i = 0; ; n 1: Clock Constraints which express limitations on clock generation and distribution. This set should at least include the following minimum pulse width constraints: T p i w (2) where w is a specified parameter. <p> In <ref> [5] </ref>, this was defined to be equal to the phase shift from clock phase p i1 to clock phase p i , i.e. E i1;i j E p i1 p i .
Reference: [6] <author> D. Wong, G. D. Micheli, and M. Flynn, </author> <title> "Inserting Active Delay Elements to Achieve Wave Pipelining," </title> <booktitle> in ICCAD-89 Digest of Technical Papers, </booktitle> <pages> pp. 270-273, </pages> <year> 1989. </year> <month> 23 </month>
Reference-contexts: The salient features of this model, as they relate to the pipeline, are summarized below. In addition, we extend the model to allow for wave pipelined <ref> [6] </ref> operation, and examine the relationships among concurrency in the pipeline, clocking, and the degree of wave pipelining. 3 2.1 Clocking Model The clocking model is described in terms of a temporal rather than a logical framework based on the concept of periodic phases which define local time zones related by <p> To keep the equations from becoming too cluttered, the mod operator will be dropped and assumed to be implied. 6 Reliance on logic delay, rather than synchronizing elements, to prevent interference between consecutive data waves has been dubbed wave pipelining in <ref> [6] </ref>. This phenomenon will occur in any pipe stage for which i &gt; 0. Furthermore, as we show later, it may also occur for latch-controlled pipes even when i = 0.
References-found: 6

