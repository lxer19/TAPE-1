URL: http://www.cs.ucsb.edu/~kienle/ooodb.ps
Refering-URL: http://www.cs.ucsb.edu/~kienle/prj/prj.html
Root-URL: http://www.cs.ucsb.edu
Email: kienle@cs.ucsb.edu  pfortier@umassd.edu  
Title: Exception-Handling Extension for an Object-oriented DBMS  
Author: Holger M. Kienle Paul J. Fortier 
Address: Stuttgart, Germany  USA  
Affiliation: University of  University of Massachusetts Dartmouth,  
Abstract: This paper describes the implementation of an exception handling facility for the Open OODB, a research database system developed by Texas Instruments under an advanced research project agency (ARPA) funding. The initial OODB database has been extended and modified to support exception handling. An extended exception handling model was designed and implemented which fits into the existing Open OODB architecture and computation model. 
Abstract-found: 1
Intro-found: 1
Reference: [ADF + 94] <author> Tom Atwood, J. Duhl, G. Ferran, M. Loomis, and D. Wade. </author> <title> The Object 11 Database Standard, ODMG-93. </title> <publisher> Mor--gan Kaufmann Publisher, </publisher> <address> release 1.1 edition, </address> <year> 1994. </year>
Reference-contexts: The model specification also mentions support for exception handling is planned, but there has been neither a specification nor an existing implementation of such a facility in the present Open OODB. The Open OODB object model is nearly isomorphic to the ODMG object model <ref> [ADF + 94] </ref>.
Reference: [Bis93] <author> Kurt M. Bischoff. </author> <title> Ox: User Reference Manual, </title> <month> November </month> <year> 1993. </year>
Reference-contexts: The parser calls the scanner in order to skip tokens and the scanner modifies the token stream extensively by adding, changing, and grouping tokens into new ones. 9 To overcome the limitations of lex & yacc, a more sophisticated compiler generator tool, namely Ox <ref> [Bis93] </ref> and PCCTS [PCD91] are examined. Ox seemed a reasonable choice since it is a superset of lex & yacc which supports attribute grammars, and the construction and traversal of attributed parse trees. But since Ox requires a lex-file, this tool could not be used.
Reference: [BW90] <author> Alan Burns and Andrew Wellings. </author> <title> Real-Time Systems and their Programming Languages. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: The object t is an instance of the OODB class. t.beginT () . . . t.beginT () . . . t.commitT () . . . t.commitT () Note, that the scope of the transactions can only be determined during run-time. 3 Exception Handling Exception handling [Goo75] <ref> [BW90] </ref> [DPW92] [Str94] is an approach to programming which attempts to contain and handle error situations. The goal is to make systems more reliable by providing a framework for implementing software fault tolerance.
Reference: [DPW92] <author> C. Dony, J. Purchase, and R. Winder. </author> <title> Exception Handling in Object-oriented Systems. </title> <journal> OOPS Messenger, </journal> <volume> 3(2) </volume> <pages> 17-30, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: The object t is an instance of the OODB class. t.beginT () . . . t.beginT () . . . t.commitT () . . . t.commitT () Note, that the scope of the transactions can only be determined during run-time. 3 Exception Handling Exception handling [Goo75] [BW90] <ref> [DPW92] </ref> [Str94] is an approach to programming which attempts to contain and handle error situations. The goal is to make systems more reliable by providing a framework for implementing software fault tolerance.
Reference: [ES90] <author> M. A. Ellis and B. Stroustrup. </author> <title> The Annotated C++ Reference Manual. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Instead, a handwritten lexer has been written, making it very hard to modify and extend the lexer and hence it violates the principle of openness and reusability of the Open OODB requirements. * The C++ grammar of the preprocessor is taken from <ref> [ES90] </ref>, a superset of the actual C++ language: "This summary of the C++ syntax is intended to be an aid to comprehension.
Reference: [Goo75] <author> John B. Goodenough. </author> <title> Exception Handling: Issues and a Proposed Notation. </title> <journal> Communications of the ACM, </journal> <volume> 18(12) </volume> <pages> 683-696, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: The object t is an instance of the OODB class. t.beginT () . . . t.beginT () . . . t.commitT () . . . t.commitT () Note, that the scope of the transactions can only be determined during run-time. 3 Exception Handling Exception handling <ref> [Goo75] </ref> [BW90] [DPW92] [Str94] is an approach to programming which attempts to contain and handle error situations. The goal is to make systems more reliable by providing a framework for implementing software fault tolerance.
Reference: [Kie95] <author> Holger Michael Kienle. </author> <title> Exception-Handling Extension for the Open OODB. </title> <type> Master's thesis, </type> <institution> University of Massachusetts Dartmouth, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: The object model of the Open OODB is closely related to that defined by the Object Database Management Group (ODMG). The Open OODB has been analyzed in order to ensure a seamless integration of the new exception fl Work performed in a Master's thesis <ref> [Kie95] </ref> while a M.S. CIS student at the University of Massachusetts Dart-mouth, USA. handling facility into the existing model. The second part introduces exception handling, including general concepts and a suitable exception handling model for incorporation into Open OODB and implemented using the C++ programming language. <p> catch exceptions from group G 1 g catch (OODB Excpt P)f catch remaining exceptions from policy manager P (G 2 and G 3 ) g exception handlers for other policy managers . . . catch (OODB Excpt)f catch remaining Open OODB exceptions g The described design has been used in <ref> [Kie95] </ref> to implement exceptions for the Transaction PM. For example, the Transaction PM raises an exception if an attempt has been made to commit or abort a transaction, but no active transaction exists.
Reference: [PCD91] <author> T. Parr, W. Cohen, and H. Dietz. </author> <title> PCCTS Reference Manual. </title> <institution> School of Electrical Engineering, Pudue University, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: The parser calls the scanner in order to skip tokens and the scanner modifies the token stream extensively by adding, changing, and grouping tokens into new ones. 9 To overcome the limitations of lex & yacc, a more sophisticated compiler generator tool, namely Ox [Bis93] and PCCTS <ref> [PCD91] </ref> are examined. Ox seemed a reasonable choice since it is a superset of lex & yacc which supports attribute grammars, and the construction and traversal of attributed parse trees. But since Ox requires a lex-file, this tool could not be used.
Reference: [Str94] <author> Bjarne Stroustrup. </author> <title> The Design and Evolution of C++. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: The object t is an instance of the OODB class. t.beginT () . . . t.beginT () . . . t.commitT () . . . t.commitT () Note, that the scope of the transactions can only be determined during run-time. 3 Exception Handling Exception handling [Goo75] [BW90] [DPW92] <ref> [Str94] </ref> is an approach to programming which attempts to contain and handle error situations. The goal is to make systems more reliable by providing a framework for implementing software fault tolerance.
Reference: [Wai] <author> W. M. Waite. </author> <title> Beyond LEX and YACC: How to Generate the Whole Compiler. </title>
Reference-contexts: Using a compiler generator tool is a more convenient and less error-prone way to construct a compiler than writing one from scratch. But yacc is a rather limited approach because scanning and parsing account for only 15% of a typical compiler <ref> [Wai] </ref>. By looking at the C++ code, the following observations were made which can cause problems if we must modify (or improve) the preprocessor: * The scanner generator lex has not been used.
Reference: [WBT92] <author> David L. Wells, Jose A. Blakeley, and Craig W. Thompson. </author> <title> Architecture of an Open Object-Oriented Database Management System. </title> <journal> Computer, </journal> <volume> 25(10), </volume> <year> 1992. </year>
Reference-contexts: In order to implement the design, the API of the Open OODB is extended and the Open OODB preprocessor is modified. The paper closes with conclusions drawn from this work. 2 Open OODB The Open OODB <ref> [WBT92] </ref> [Wel93b] [Wel93a] was developed by Texas Instruments as an effort to build an open and extensible system to serve as a platform for research.
Reference: [Wel93a] <author> D. Wells. </author> <title> Open OODB Executive Summary. </title> <type> Technical report, </type> <institution> Texas Instruments Inc., </institution> <year> 1993. </year>
Reference-contexts: In order to implement the design, the API of the Open OODB is extended and the Open OODB preprocessor is modified. The paper closes with conclusions drawn from this work. 2 Open OODB The Open OODB [WBT92] [Wel93b] <ref> [Wel93a] </ref> was developed by Texas Instruments as an effort to build an open and extensible system to serve as a platform for research.
Reference: [Wel93b] <author> D. Wells. </author> <title> Open OODB Technical Overview Release 0.2 (Alpha). </title> <type> Technical report, </type> <institution> Texas Instruments Inc., </institution> <year> 1993. </year>
Reference-contexts: In order to implement the design, the API of the Open OODB is extended and the Open OODB preprocessor is modified. The paper closes with conclusions drawn from this work. 2 Open OODB The Open OODB [WBT92] <ref> [Wel93b] </ref> [Wel93a] was developed by Texas Instruments as an effort to build an open and extensible system to serve as a platform for research. <p> The Open OODB has no exception handling model. <ref> [Wel93b] </ref> points out that "Open OODB will define a collection of exception classes and required handlers to provide traceability for exceptions signaled by [policy managers]." But this proposed exception mechanism has not been further specified or implemented at this writing.
References-found: 13

