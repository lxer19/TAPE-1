URL: http://cs.jhu.edu/~baruch/MULTICAST/SURVEY/survey.ps
Refering-URL: http://cs.jhu.edu/~baruch/MULTICAST/index.htm
Root-URL: http://www.cs.jhu.edu
Email: baruch@cs.jhu.edu  
Title: Online Selective Multicast and Maximal Dense Trees: A Survey problem for regular routing Selective Batch
Author: Baruch Awerbuch Awerbuch, Azar, Blum and buch, Azar, Fiat and Leighton cently studied by Awerbuch and Singh (). 
Keyword: Non-selective Batch Arrival multicast:  
Note: This is the Admission/Route Selection  studied by Awerbuch, Azar and Plotkin (FOCS 93).  which is closely related to k-MST problem studied by  Supported by NSF contract 9114440-CCR, ARPA/Army contract DABT63-93-C-0038, ARPA/Air Force Contract F19628-95-C-0137, and NIST/USRA Contract 5555-47.  
Date: October 2, 1996  Vempala (STOC 95).  
Affiliation: Dept. of Computer Science Johns Hopkins University  
Abstract: Online Selective Multicast is defined as follows. Various network users issue online requests for a connection to a certain multicast source. The network either connects this request or rejects it. If request is connected, a path is established starting at the requesting user and ending either at the source or at one of the users previosly connected to the same source. The goal is to maximize total number of users connected subject to network capacity constraints, namely, that number of connections to different sources passing thru any edge does not exceed the capacity of that edge. Generalizations of this problem include setting the pricing policy in order to maximize total network revenues, or to the problem on network design and synthesis. To the best of our knowledge, the above problem have not been defined or analyzed in the Theoretical Computer Science community. The following special cases have been studied very recently: 
Abstract-found: 1
Intro-found: 1
Reference: [AA94a] <author> Baruch Awerbuch and Yossi Azar. </author> <title> Competitive route selection for multicast communication. </title> <journal> Wireless Networks Journal, </journal> <year> 1994. </year>
Reference-contexts: In this case, we cannot use Claims 0.1 and 0.3 because routing of users of one group "distorts" the metric space used to route users of other groups. Interleaving disables clan reduction to a combinatorial problem such as approximating Min Steiner Tree. Nevertheless, Awerbuch and Azar <ref> [AA94a] </ref> show a new proof technique that enables to prove the following claim Claim 2.4 The algorithm connecting each user along shortest path to previously connected user is is O (log 2 n) competitive in overload. 3 Background: Semi-selective multicast Problem statement. <p> Route selection component of the problem, namely determining the path over which a user will be connected to the existing multicast tree, is pretty simple, and can be handled just as in <ref> [AA94a] </ref>, namely, connect the user along shortest path to the previosly connected user or the source. However, the tricky part is making admission control decisions individually. In this version of the problem, the requests of different groups are not interleaved, but they do arrive online and must be handled online.
Reference: [AA94b] <author> Baruch Awerbuch and Yossi Azar. </author> <title> Local optimization of global objectives: ,competitive distributed deadlock resolution and resource allocation. </title> <booktitle> In focs35, </booktitle> <year> 1994. </year>
Reference: [AAB96] <author> B. Awerbuch, Y. Azar, and Y. Bartal. </author> <title> On-line generalized steiner problem. </title> <booktitle> In Proc. of 7th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 68-74, </pages> <year> 1996. </year>
Reference-contexts: We remark that for the non-selective case, this problem has been solved in <ref> [AAB96] </ref>. 13 6 Distributed decision making The difficulty such an environment presents is that the metric space in which the algorithm is operating is not well defined. We outline how to approach distributed multicast problems. 6.1 Non-interleaved arrival Consider the non-interleaved arrival version of the problem.
Reference: [AABV95] <author> Baruch Awerbuch, Yossi Azar, Avrim Blum, and Santosh Vempala. </author> <title> Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen. </title> <booktitle> In Proceedings of the ACM STOC, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: It is a variation of prize-collecting salesman and the k-MST problems [Bal89, GH94, GLV87, RSM + 94]. First polynomial solution for these problems due to Awerbuch, Azar, Blum and Vempala <ref> [AABV95] </ref> relied on (o*ine) polynomial approximation of cable wiring problem. The following algorithm was originally designed by Awerbuch and Azar in 1993 with the intention to solve the selected multicast problems. It has been modified to solve k-MST problem and proved by Awerbuch, Azar, Blum and Vempala [AABV95]. <p> Blum and Vempala <ref> [AABV95] </ref> relied on (o*ine) polynomial approximation of cable wiring problem. The following algorithm was originally designed by Awerbuch and Azar in 1993 with the intention to solve the selected multicast problems. It has been modified to solve k-MST problem and proved by Awerbuch, Azar, Blum and Vempala [AABV95]. Our algorithm and analysis contain two main ideas. The first is a measure used for grouping points into components in a Kruskal's-algorithm-like manner. The second is a bucketing technique that allows one to prove this measure to be useful. <p> Theorem 4.2 The above algorithm generates (in polynomial time) =4 log n-maximal 1 = log n-dense tree for all log n &gt; 1. Proof Sketch: See <ref> [AABV95] </ref> for the proof. 4.2 Non-interleaved arrival Description of the problem This model still assumes some serial order for arrival of different multicast groups, but the users subscribing to each group arrive online and the algorithm must take individual decision for each one of these users without the knowledge of future <p> The o*ine version of this problem was first defined in [RSM + 94] who came up with a polynomial-time O ( p n) approximation for this problem. The approximation ratio was subsequently improved to a constant for planar graphs in [GH94] for plan, and to general graphs in <ref> [AABV95] </ref>, and then improved to a constant on general graphs by Blum et al. [BRV96]. 5.2 Online Bank robber problem The bank robber problem is the following: given the map of a city including the amounts of money in each bank, and a car with bounded gas tank, the robber has
Reference: [AAF + 93] <author> Jim Aspnes, Yossi Azar, Amos Fiat, Serge Plotkin, and Orli Waarts. </author> <title> On-line load balancing with applications to machine scheduling and virtual circuit routing. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 623-631, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: One unit of bandwidth must be allocated along edges of the tree. The goal is to minimize the maximal (over all edges) of the "capacity overload" of an edge, namely the ratio between total traffic and capacity of that edge. From the point of view of competitive analysis, <ref> [AAF + 93] </ref> provides a comprehensive solution for this problem, namely, gives an optimally-competitive online solution. We briefly outline this approach. Exponential metric space: We define edge weight to be the exponent of the number of connections currently passing thru the edge, time a certain normalization coefficient [AAF + 93]. <p> of competitive analysis, <ref> [AAF + 93] </ref> provides a comprehensive solution for this problem, namely, gives an optimally-competitive online solution. We briefly outline this approach. Exponential metric space: We define edge weight to be the exponent of the number of connections currently passing thru the edge, time a certain normalization coefficient [AAF + 93]. The algorithm then simply routes users of a specific group along a tree of minimum weight connecting them with their source. Claim 2.1 The overload created by the above algorithm is at most logarithmically higher that that created by an o*ine algorithm. Proof: See [AAF + 93]. 2.2 <p> certain normalization coefficient <ref> [AAF + 93] </ref>. The algorithm then simply routes users of a specific group along a tree of minimum weight connecting them with their source. Claim 2.1 The overload created by the above algorithm is at most logarithmically higher that that created by an o*ine algorithm. Proof: See [AAF + 93]. 2.2 Individual non-interleaved arrival Problem definition In this case, the online input consists of arrivals of individual users of certain multicast groups, with users of one group strictly preceding or following users of another group. Extension of the argument in [AAF + 93] gives Claim 2.2 If the <p> Proof: See <ref> [AAF + 93] </ref>. 2.2 Individual non-interleaved arrival Problem definition In this case, the online input consists of arrivals of individual users of certain multicast groups, with users of one group strictly preceding or following users of another group. Extension of the argument in [AAF + 93] gives Claim 2.2 If the algorithm routes users of a given group along an ff-approximation for Minimum Weight Spanning tree connecting that group to their source, then is overload is O (ff log n) competitive.
Reference: [AAFL96] <author> Baruch Awerbuch, Yossi Azar, Amos Fiat, and Tom Leighton. </author> <title> Making commitments in the face of uncertainty: How to pick a winner almost every time. </title> <booktitle> In Proceedings of the ACM STOC, </booktitle> <year> 1996. </year> <note> REFERENCES 15 </note>
Reference-contexts: The remaining problem is to achieve small ; in online fashion. Special case of a star graph (e.g. video server connected by links of variable weights to a number of clients) is essentially the `winner picking" problem introduced by Awerbuch, Azar, Fiat, and Leighton <ref> [AAFL96] </ref>. In general graph, we can still view cable wiring problem as picking online a set of nodes with high density, which falls into the "winner picking" framework of [AAFL96]. <p> of variable weights to a number of clients) is essentially the `winner picking" problem introduced by Awerbuch, Azar, Fiat, and Leighton <ref> [AAFL96] </ref>. In general graph, we can still view cable wiring problem as picking online a set of nodes with high density, which falls into the "winner picking" framework of [AAFL96]. Roughly speaking, this framework can be used to pick "approximately winning" set (in our case, set with maximal density) with probability which decreases only logarithmically (rather than linearly) in the number of sets. <p> Since number of relevant subsets in a general network is exponential, additional insights are necessary to make method in <ref> [AAFL96] </ref> useful in our context. Probabilistic assumptions (e.g., relaxation of the competitive framework) were used in in [AAG93] to handle the online problem on a general network. <p> Special case of a star graph (e.g. video server connected by links of variable weights to a number of clients) can be near-optimally handled via "winner picking" algorithm introduced by Awerbuch, Azar, Fiat, and Leighton <ref> [AAFL96] </ref>.
Reference: [AAG93] <author> Baruch Awerbuch, Yossi Azar, and Rainer Gawlick. </author> <title> Dense trees and competitive selective multicast. </title> <type> unpublished manuscript, </type> <month> December </month> <year> 1993. </year>
Reference-contexts: Since number of relevant subsets in a general network is exponential, additional insights are necessary to make method in [AAFL96] useful in our context. Probabilistic assumptions (e.g., relaxation of the competitive framework) were used in in <ref> [AAG93] </ref> to handle the online problem on a general network. Even with probabilistic assumptions in [AAG93], our solution dominates [AAG93] in expected efficiency. 4.2.1 Competitive Online Algorithms for Maximal Dense Trees In this section we provide an online algorithm for the online maximal dense tree problem. <p> Probabilistic assumptions (e.g., relaxation of the competitive framework) were used in in <ref> [AAG93] </ref> to handle the online problem on a general network. Even with probabilistic assumptions in [AAG93], our solution dominates [AAG93] in expected efficiency. 4.2.1 Competitive Online Algorithms for Maximal Dense Trees In this section we provide an online algorithm for the online maximal dense tree problem. <p> Probabilistic assumptions (e.g., relaxation of the competitive framework) were used in in <ref> [AAG93] </ref> to handle the online problem on a general network. Even with probabilistic assumptions in [AAG93], our solution dominates [AAG93] in expected efficiency. 4.2.1 Competitive Online Algorithms for Maximal Dense Trees In this section we provide an online algorithm for the online maximal dense tree problem.
Reference: [AAP93] <author> Baruch Awerbuch, Yossi Azar, and Serge Plotkin. </author> <title> Throughput competitive on-line routing. </title> <booktitle> In Proc. 34rd IEEE Symp. on Found. of Comp. Science, </booktitle> <pages> pages 32-40. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1993. </year>
Reference-contexts: Semi-Selective Multicast is the version of the problem in which each multicast group is either connected as a whole, or rejected as a whole, and the goal is to maximize the number of connected users. From the point of view of competitive analysis, the methods in <ref> [AAP93] </ref> suffice to provide a competitive solution for this problem. We briefly outline this approach. Exponential metric space: We define edge weight to be the exponent of the number of connections currently passing thru the edge, scaled down by a factor which is linear in the number of network nodes [AAP93]. <p> <ref> [AAP93] </ref> suffice to provide a competitive solution for this problem. We briefly outline this approach. Exponential metric space: We define edge weight to be the exponent of the number of connections currently passing thru the edge, scaled down by a factor which is linear in the number of network nodes [AAP93]. Density of a multicast group is defined as the ratio between the size of this group and the cost of the minimum-weight tree spanning this group and the source for this group. <p> Theorem 3.1 Accepting groups if and only if its density is greater or equal to 1 yields logarithmic competitive ratio, which is also optimal (see <ref> [AAP93] </ref>. Proof Sketch: The following discussion is essentially a simplification of the argument in [AAP93]. <p> Theorem 3.1 Accepting groups if and only if its density is greater or equal to 1 yields logarithmic competitive ratio, which is also optimal (see <ref> [AAP93] </ref>. Proof Sketch: The following discussion is essentially a simplification of the argument in [AAP93].
Reference: [ABF93] <author> Baruch Awerbuch, Yair Bartal, and Amos Fiat. </author> <title> Competitive distributed file allocation. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 164-173, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Approximately minimizing the total weight of the spanning tree can be accomplished if every user picks the shortest path from itself to the previously connected user, thus running Online Steiner Tree algorithm <ref> [IW91, BFR92, ABF93] </ref>. Following [IW91, BFR92, ABF93], one can prove Claim 2.3 The weight gap between this simple heuristic and the optimum strategy is at most logarithmic in the size of multicast group. <p> Approximately minimizing the total weight of the spanning tree can be accomplished if every user picks the shortest path from itself to the previously connected user, thus running Online Steiner Tree algorithm <ref> [IW91, BFR92, ABF93] </ref>. Following [IW91, BFR92, ABF93], one can prove Claim 2.3 The weight gap between this simple heuristic and the optimum strategy is at most logarithmic in the size of multicast group. <p> Note now that k X 2 2 log e k 4 3 BACKGROUND: SEMI-SELECTIVE MULTICAST which proves that the online heuristic is 2 log e k-competitive with optimum, where k is the number of users. Moreover, one can prove that logarithmic gap is inherent in any online decision-making procedure <ref> [IW91, ABF93] </ref>. Thus, one cannot hope to achieve a better ratio in the worst case. 2.3 Interleaved arrival Problem definition In this case, the online input consists of arrivals of individual users, which arrive in arbitrary interleaved order.
Reference: [AP90] <author> Baruch Awerbuch and David Peleg. </author> <title> Locality-sensitive resource allocation. </title> <type> Technical Report CS90-27, </type> <institution> Weizmann Institute, </institution> <month> November </month> <year> 1990. </year>
Reference-contexts: In order to eliminate this unfairness and in fact achieve deterministic solution, one can use hierarchical lattice and partitions based on an unpublished work by Awerbuch and Peleg <ref> [AP90] </ref>.
Reference: [Bal89] <author> E. Balas. </author> <title> The prize collecting traveling salesman problem. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 621-636, </pages> <year> 1989. </year>
Reference-contexts: It is a variation of prize-collecting salesman and the k-MST problems <ref> [Bal89, GH94, GLV87, RSM + 94] </ref>. First polynomial solution for these problems due to Awerbuch, Azar, Blum and Vempala [AABV95] relied on (o*ine) polynomial approximation of cable wiring problem. The following algorithm was originally designed by Awerbuch and Azar in 1993 with the intention to solve the selected multicast problems.
Reference: [Bar96] <author> Yair Bartal. </author> <title> Probabilistic approximation of metric spaces and its algorithmic applications. </title> <booktitle> In Proc. 37th IEEE Symp. on Found. of Comp. Science, </booktitle> <year> 1996. </year>
Reference-contexts: An efficient implementation of such a directory would constitute a generalization of the distributed directory of Bartal, Fiat and Rabani [BFR92]. We note that efficient synchronization is easy to achieve on a tree network. In fact, a randomized algorithm due to Yair Bartal <ref> [Bar96] </ref> enables to compress an arbitrary network topology into a tree. Unfortunately, such an algorithm is may be inherently unfair to some users, whose distance are significantly distorted by the tree (see Bartal's paper [Bar96] for more details). <p> In fact, a randomized algorithm due to Yair Bartal <ref> [Bar96] </ref> enables to compress an arbitrary network topology into a tree. Unfortunately, such an algorithm is may be inherently unfair to some users, whose distance are significantly distorted by the tree (see Bartal's paper [Bar96] for more details). In order to eliminate this unfairness and in fact achieve deterministic solution, one can use hierarchical lattice and partitions based on an unpublished work by Awerbuch and Peleg [AP90].
Reference: [BFR92] <author> Yair Bartal, Amos Fiat, and Yuval Rabani. </author> <title> Competitive algorithms for distributed data management. </title> <booktitle> In Proc. 24th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 39-50, </pages> <year> 1992. </year>
Reference-contexts: Approximately minimizing the total weight of the spanning tree can be accomplished if every user picks the shortest path from itself to the previously connected user, thus running Online Steiner Tree algorithm <ref> [IW91, BFR92, ABF93] </ref>. Following [IW91, BFR92, ABF93], one can prove Claim 2.3 The weight gap between this simple heuristic and the optimum strategy is at most logarithmic in the size of multicast group. <p> Approximately minimizing the total weight of the spanning tree can be accomplished if every user picks the shortest path from itself to the previously connected user, thus running Online Steiner Tree algorithm <ref> [IW91, BFR92, ABF93] </ref>. Following [IW91, BFR92, ABF93], one can prove Claim 2.3 The weight gap between this simple heuristic and the optimum strategy is at most logarithmic in the size of multicast group. <p> An efficient implementation of such a directory would constitute a generalization of the distributed directory of Bartal, Fiat and Rabani <ref> [BFR92] </ref>. We note that efficient synchronization is easy to achieve on a tree network. In fact, a randomized algorithm due to Yair Bartal [Bar96] enables to compress an arbitrary network topology into a tree.
Reference: [BG87] <author> D. Bertsekas and R. Gallager. </author> <title> Data networks. </title> <publisher> Prentice-Hall Inc., </publisher> <address> Englewood Cliffs New Jersey, </address> <year> 1987. </year>
Reference: [BRV96] <author> A. Blum, R. Ravi, and S. Vempala. </author> <title> A constant-factor approximation algorithm for the k-mst problem. </title> <booktitle> In Proc. 26th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 442-448, </pages> <year> 1996. </year>
Reference-contexts: The approximation ratio was subsequently improved to a constant for planar graphs in [GH94] for plan, and to general graphs in [AABV95], and then improved to a constant on general graphs by Blum et al. <ref> [BRV96] </ref>. 5.2 Online Bank robber problem The bank robber problem is the following: given the map of a city including the amounts of money in each bank, and a car with bounded gas tank, the robber has to rob the maximum amount of money without refueling after first robbery (thus avoiding
Reference: [DEF + 94] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. GungLiu, and L. Wei. </author> <title> An architecture for wide-area multicast routing. </title> <booktitle> In Proceedings of SIGCOMM, ACM, </booktitle> <year> 1994. </year>
Reference: [FJMZ95] <author> S. Floyd, V. Jacobson, S. MacCanne, and L. Zhang. </author> <title> A reliable multicast framework for lightweight sessions and application level framing. </title> <booktitle> In Proceedings of SIGCOMM, </booktitle> <year> 1995. </year>
Reference: [GH94] <author> N. Garg and D. Hochbaum. </author> <title> An o(log k) approximation algorithm for the k minimum spanning tree problem in the plane. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 432-438, </pages> <year> 1994. </year>
Reference-contexts: It is a variation of prize-collecting salesman and the k-MST problems <ref> [Bal89, GH94, GLV87, RSM + 94] </ref>. First polynomial solution for these problems due to Awerbuch, Azar, Blum and Vempala [AABV95] relied on (o*ine) polynomial approximation of cable wiring problem. The following algorithm was originally designed by Awerbuch and Azar in 1993 with the intention to solve the selected multicast problems. <p> The o*ine version of this problem was first defined in [RSM + 94] who came up with a polynomial-time O ( p n) approximation for this problem. The approximation ratio was subsequently improved to a constant for planar graphs in <ref> [GH94] </ref> for plan, and to general graphs in [AABV95], and then improved to a constant on general graphs by Blum et al. [BRV96]. 5.2 Online Bank robber problem The bank robber problem is the following: given the map of a city including the amounts of money in each bank, and a
Reference: [GLV87] <author> B.L. Golden, L. Levy, and R. Vohra. </author> <title> The orienteering problem. </title> <journal> Naval Research Logistics, </journal> <volume> 34 </volume> <pages> 307-318, </pages> <year> 1987. </year>
Reference-contexts: It is a variation of prize-collecting salesman and the k-MST problems <ref> [Bal89, GH94, GLV87, RSM + 94] </ref>. First polynomial solution for these problems due to Awerbuch, Azar, Blum and Vempala [AABV95] relied on (o*ine) polynomial approximation of cable wiring problem. The following algorithm was originally designed by Awerbuch and Azar in 1993 with the intention to solve the selected multicast problems. <p> This problem is also called the "orienteering problem" by Golden, Levi, and Vohra <ref> [GLV87] </ref>. 5.3 Generalized Connectivity/Steiner tree The maximal dense tree problem as well as bank robber and prize-collecting salesman can be generalized as follows.
Reference: [IW91] <author> M. Imaze and B.M. Waxman. </author> <title> Dynamic steiner tree problem. </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 4(3) </volume> <pages> 369-384, </pages> <month> august </month> <year> 1991. </year>
Reference-contexts: Approximately minimizing the total weight of the spanning tree can be accomplished if every user picks the shortest path from itself to the previously connected user, thus running Online Steiner Tree algorithm <ref> [IW91, BFR92, ABF93] </ref>. Following [IW91, BFR92, ABF93], one can prove Claim 2.3 The weight gap between this simple heuristic and the optimum strategy is at most logarithmic in the size of multicast group. <p> Approximately minimizing the total weight of the spanning tree can be accomplished if every user picks the shortest path from itself to the previously connected user, thus running Online Steiner Tree algorithm <ref> [IW91, BFR92, ABF93] </ref>. Following [IW91, BFR92, ABF93], one can prove Claim 2.3 The weight gap between this simple heuristic and the optimum strategy is at most logarithmic in the size of multicast group. <p> Note now that k X 2 2 log e k 4 3 BACKGROUND: SEMI-SELECTIVE MULTICAST which proves that the online heuristic is 2 log e k-competitive with optimum, where k is the number of users. Moreover, one can prove that logarithmic gap is inherent in any online decision-making procedure <ref> [IW91, ABF93] </ref>. Thus, one cannot hope to achieve a better ratio in the worst case. 2.3 Interleaved arrival Problem definition In this case, the online input consists of arrivals of individual users, which arrive in arbitrary interleaved order.
Reference: [MJ96] <author> Steven McCanne and Van Jacobson. </author> <title> Receiver-driven layered multicast. </title> <booktitle> In Proceedings of SIGCOMM, </booktitle> <volume> volume 26, </volume> <year> 1996. </year>
Reference: [RSM + 94] <author> R. Ravi, R. Sundaram, M.V. Marathe, D.J. Rosenkrantz, and S.S. Ravi. </author> <title> Spanning trees short and small. </title> <booktitle> In Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: It is a variation of prize-collecting salesman and the k-MST problems <ref> [Bal89, GH94, GLV87, RSM + 94] </ref>. First polynomial solution for these problems due to Awerbuch, Azar, Blum and Vempala [AABV95] relied on (o*ine) polynomial approximation of cable wiring problem. The following algorithm was originally designed by Awerbuch and Azar in 1993 with the intention to solve the selected multicast problems. <p> This problem has received a relatively large amount of attention in the theory community. The o*ine version of this problem was first defined in <ref> [RSM + 94] </ref> who came up with a polynomial-time O ( p n) approximation for this problem.
Reference: [ST85] <author> Daniel D. Sleator and Robert E. Tarjan. </author> <title> Amortized efficiency of list update and paging rules. </title> <journal> Comm. of the ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction 1.1 Motivation The essence of this survey is systematic classification of the variants of the multicast problems that present themselves in various networking and distributed systems applications, as well as algorithmic solutions to these problems in the spirit of "competitive analysis" <ref> [ST85] </ref>. From the algorithmic point of view, which is the point of view taken in this survey, the Multicast Problem can be defined as follows. Various network users issue online requests for a connection to certain multicast sources. The network either connects this request or rejects it (admission control decision).
References-found: 23

