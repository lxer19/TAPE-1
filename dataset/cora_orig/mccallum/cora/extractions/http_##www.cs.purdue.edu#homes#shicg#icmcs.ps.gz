URL: http://www.cs.purdue.edu/homes/shicg/icmcs.ps.gz
Refering-URL: http://www.cs.purdue.edu/people/shicg/
Root-URL: http://www.cs.purdue.edu
Email: fshicg,bbg@cs.purdue.edu  
Title: Approach to Encrypt MPEG Video in Real Time  
Author: Changgui Shi and Bharat Bhargava 
Keyword: Multimedia data security, MPEG video encryption, MPEG codec.  
Address: West Lafayette, IN 47906, USA.  
Affiliation: Department of Computer Sciences Purdue University  
Note: An  
Abstract: This paper was submitted to IEEE ICMCS99 Abstract We present a fast MPEG video encryption algorithm which encrypts the selected sign bits of DCT coefficients and motion vectors with DES/IDEA. This algorithm is robust to plaintext attack and ciphertext attack. It adds very small overhead to MPEG video codec. A software implementation is fast enough to meet the real time requirement of MPEG video applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Agi and L. Gong. </author> <title> An Empirical Study of MPEG Video Transmission. </title> <booktitle> In Proceedings of the Internet Society Symposium on Network and Distributed Systems Security, </booktitle> <address> pp137-144. San Diego, CA., </address> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: But great portions of the video could be visible because of some P and B frames may contain intra-coded I blocks. Therefore, encrypting only I frames does not provide a satisfactory security level <ref> [1] </ref>. Other selective MPEG video encryption methods include (1) encrypting all headers plus DCs and lower AC terms [7]; (2) encrypting one half of a frame with DES/IDEA [10], and the other half of the frame with an "one-time-pad" generated from that frame [9].
Reference: [2] <author> D. L. Gall. </author> <title> MPEG: A Video Compression Standard for Multimedia Applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 46-58, </pages> <year> 1991. </year>
Reference-contexts: Section 3 discusses related work. Section 4 presents our new MPEG video encryption algorithm. Section 5 analyzes the algorithm. Section 6 shows experimental results. Section 7 presents discussions. Finally, section 8 is conclusions. 2. Background In MPEG video coding model <ref> [2] </ref>, a video is composed of a sequence of group of pictures (GOPs). Each GOP is a series of I, P, and B pictures. The relative frequency of occurrence of I, P, and B pictures can be controlled by applications.
Reference: [3] <author> K. L. Gong and L. A. Rowe. </author> <title> Parallel MPEG-1 Video Encoding. </title> <booktitle> In Proceedings of the 1994 Picture Coding Symposium, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: RVEA neither changes the MPEG syntax nor the semantics. This makes error con-sealment attack difficult. 6. Experiments We conducted our experiments on a Sun Sparc 10 station at the Raid Lib of the Computer Science Department of Purdue University. We modified the Berkeley mpeg play [8] and mpeg encode <ref> [3] </ref> programs and used them to test RVEA algorithm. We embedded RVEA into the Berkeley mpeg encode [3] program and used it to test the encryption results and overheads added to MPEG codec. We used IDEA in our RVEA implementation, because IDEA [10] is faster than DES. <p> We modified the Berkeley mpeg play [8] and mpeg encode <ref> [3] </ref> programs and used them to test RVEA algorithm. We embedded RVEA into the Berkeley mpeg encode [3] program and used it to test the encryption results and overheads added to MPEG codec. We used IDEA in our RVEA implementation, because IDEA [10] is faster than DES. IDEA (International Data Encryption Algorithm) is currently one of the best known algorithm.
Reference: [4] <author> Y. Li, Z. Chen, S. Tan, and R. Campbell. </author> <title> Security Enhanced MPEG Player. </title> <booktitle> In proceedings of IEEE First International Workshop on Multimedia Software Development (MMSD 96), </booktitle> <address> Berlin, Germany, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: However, a software DES implementation is too slow to meet the real time requirement of MPEG video playback. A strategy to solve the problem is to selectively encrypt only portions of MPEG video <ref> [4, 6] </ref>. Only encrypting MPEG video headers, including GOP headers, slice headers and macroblock headers, is a way to hide video decoding information from adversaries. But this is not a good method. One reason is that a header contains mostly standard information. Attacker can easily guess the information.
Reference: [5] <author> B. Macq and J. Quisquater. </author> <title> Cryptoloy for Digital TV Broadcasting. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> Vol. 83(6) </volume> <pages> 944-957, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Heavy weight encryption and decryption algorithms (during or after encoding phase) will aggravate the problem and increase the latency. For some commercial video applications, such as pay-per-view, information rate is very high, but information value is very low <ref> [5] </ref>. Very expensive attacks are not interesting to adversaries [5], because to break such encryption code is much more expensive than to buy the programs. Most MPEG videos are different from military secrets or financial information. They have characteristics of large size and low value. <p> Heavy weight encryption and decryption algorithms (during or after encoding phase) will aggravate the problem and increase the latency. For some commercial video applications, such as pay-per-view, information rate is very high, but information value is very low <ref> [5] </ref>. Very expensive attacks are not interesting to adversaries [5], because to break such encryption code is much more expensive than to buy the programs. Most MPEG videos are different from military secrets or financial information. They have characteristics of large size and low value. It is too expensive and not necessary to encrypt the video byte-by-byte.
Reference: [6] <author> T. B. Maples and G. A. Spanos. </author> <title> Performance Study of a Selective Encryption Scheme for the Security of Networked, Real-time Video. </title> <booktitle> In Proceedings of the 4th International Conference on Computer Communications and Neworks, </booktitle> <month> September </month> <year> 1995. </year>
Reference-contexts: However, a software DES implementation is too slow to meet the real time requirement of MPEG video playback. A strategy to solve the problem is to selectively encrypt only portions of MPEG video <ref> [4, 6] </ref>. Only encrypting MPEG video headers, including GOP headers, slice headers and macroblock headers, is a way to hide video decoding information from adversaries. But this is not a good method. One reason is that a header contains mostly standard information. Attacker can easily guess the information.
Reference: [7] <author> J. Meyer and F. Gadegast. </author> <title> Security Mechanism of Multimedia Data with the Example MPEG-1 Video. </title> <note> Available on WWW via http://www.powerweb.de/phade/phade.html, 1995. </note>
Reference-contexts: Therefore, encrypting only I frames does not provide a satisfactory security level [1]. Other selective MPEG video encryption methods include (1) encrypting all headers plus DCs and lower AC terms <ref> [7] </ref>; (2) encrypting one half of a frame with DES/IDEA [10], and the other half of the frame with an "one-time-pad" generated from that frame [9]. In those systems, the encryption operations are processed after MPEG compression operations; the decryption operations are processed before MPEG decompression operations.
Reference: [8] <author> K. Patel, B. Smith, and L. Rowe. </author> <title> Performance of a Software MPEG Video Decoder. </title> <booktitle> In Proceedings of ACM Multimedia 93, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: RVEA neither changes the MPEG syntax nor the semantics. This makes error con-sealment attack difficult. 6. Experiments We conducted our experiments on a Sun Sparc 10 station at the Raid Lib of the Computer Science Department of Purdue University. We modified the Berkeley mpeg play <ref> [8] </ref> and mpeg encode [3] programs and used them to test RVEA algorithm. We embedded RVEA into the Berkeley mpeg encode [3] program and used it to test the encryption results and overheads added to MPEG codec.
Reference: [9] <author> L. Qiao and K. Nahrstedt. </author> <title> Comparison of MPEG Encryption Algorithms. </title> <journal> International Journal on Computers&Graphics, Special Issue: "Data Security in Image Communication and Network", </journal> <volume> Vol. 22, No. </volume> <pages> 3, </pages> <note> published bimonthly by Permagon Publisher, </note> <month> January </month> <year> 1998. </year>
Reference-contexts: One reason is that a header contains mostly standard information. Attacker can easily guess the information. Another reason is that in many MPEG applications, the video stream is index by frame in order to perform synchronization or adaption. Therefore, the beginning of each frame is known <ref> [9] </ref>. Third reason is that when block encrypted video headers are sent over a noisy channel, one bit error occurred in an encrypted block will propagate onto the whole block during decrypting the video. <p> Other selective MPEG video encryption methods include (1) encrypting all headers plus DCs and lower AC terms [7]; (2) encrypting one half of a frame with DES/IDEA [10], and the other half of the frame with an "one-time-pad" generated from that frame <ref> [9] </ref>. In those systems, the encryption operations are processed after MPEG compression operations; the decryption operations are processed before MPEG decompression operations. Those systems add latency to real time video delivering and overhead to video decoding. Tang [14] introduced some methods to incorporate MPEG compression with encryption in one step.
Reference: [10] <author> B. Schneier. </author> <title> Applied Cryptography. </title> <publisher> John Wiley & sons, INC., </publisher> <address> New York, </address> <year> 1996. </year>
Reference-contexts: Therefore, encrypting only I frames does not provide a satisfactory security level [1]. Other selective MPEG video encryption methods include (1) encrypting all headers plus DCs and lower AC terms [7]; (2) encrypting one half of a frame with DES/IDEA <ref> [10] </ref>, and the other half of the frame with an "one-time-pad" generated from that frame [9]. In those systems, the encryption operations are processed after MPEG compression operations; the decryption operations are processed before MPEG decompression operations. <p> We embedded RVEA into the Berkeley mpeg encode [3] program and used it to test the encryption results and overheads added to MPEG codec. We used IDEA in our RVEA implementation, because IDEA <ref> [10] </ref> is faster than DES. IDEA (International Data Encryption Algorithm) is currently one of the best known algorithm. It uses a key of 128 bits to encrypt a plaintext block of 64 bits. IDEA is generally considered to be very secure. No practical attack on it has been published. <p> For example, for 320x240 video frames, there are 20x15 macroblocks in each frame. To process 30 frames per second, RVEA needs to encrypt data at 20x15x30x8 bytes per second, i.e., about 72kb/sec. Using IDEA, even a 66Mhz 486 PC can encrypt data at 300kb/sec <ref> [10] </ref>. SUN stations and Pentium PCs surely can process data faster the that. For those kinds of platforms, RVEA only adds tiny amount of overhead to their MPEG decoding.
Reference: [11] <author> C. Shi and B. Bhargava. </author> <title> An Efficient MPEG Video Encryption Algorithm. </title> <booktitle> In Proceedings of the 17th IEEE Symposium on Reliable Distributed Systems, </booktitle> <address> West Lafayette, Indiana, USA. </address> <publisher> published by IEEE Computer Society, </publisher> <address> pp381-386. Los Alamitos, California, </address> <month> Oct. </month> <year> 1998. </year>
Reference-contexts: Tang's methods decreases video compression rate. The reason is that the random permutations distort the probability distribution of DCT coefficients and render the Huffman table used less than optimal. In our previous work <ref> [11, 12] </ref>, we developed fast MPEG video encryption algorithms which use a secret key randomly changing the sign bits of all DCT coefficients and the sign bits of motion vectors. Those algorithms can achieve satisfying encryption results with less computations. But they are very weak in plaintext attack.
Reference: [12] <author> C. Shi and B. Bhargava. </author> <title> A Fast MPEG Video Encryption Algorithm. </title> <booktitle> In Proceedings of the 6th ACM International Multimedia Conference, </booktitle> <address> Bris-tol, UK, </address> <month> September </month> <year> 1998. </year>
Reference-contexts: Tang's methods decreases video compression rate. The reason is that the random permutations distort the probability distribution of DCT coefficients and render the Huffman table used less than optimal. In our previous work <ref> [11, 12] </ref>, we developed fast MPEG video encryption algorithms which use a secret key randomly changing the sign bits of all DCT coefficients and the sign bits of motion vectors. Those algorithms can achieve satisfying encryption results with less computations. But they are very weak in plaintext attack. <p> ff 1 ff 2 ff 3 ff 4 ff 5 Start ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? coefficients <ref> [12] </ref>. If an adversary does not know the secret key, then his decoder will play pictures quite different from the original video, because most im age pixel values are changed. Changing the sign bits of DCs of I frames is very efficient.
Reference: [13] <author> D. R. Stinson. </author> <title> Cryptography Theory and Practice. </title> <publisher> CRC Press, Inc., </publisher> <address> New York, </address> <year> 1995. </year>
Reference: [14] <author> L. Tang. </author> <title> Methods for Encrypting and Decrypting MPEG Video Data Efficiently. </title> <booktitle> In Proceedings of the ACM Multimedia96, </booktitle> <pages> pages 219-229, </pages> <address> Boston, MA., </address> <month> November </month> <year> 1996. </year>
Reference-contexts: In those systems, the encryption operations are processed after MPEG compression operations; the decryption operations are processed before MPEG decompression operations. Those systems add latency to real time video delivering and overhead to video decoding. Tang <ref> [14] </ref> introduced some methods to incorporate MPEG compression with encryption in one step. Tang's methods use a random permutation list to replace the zig-zag order to map the DCT coefficients to a 1 fi 64 vector.
Reference: [15] <author> Y. Wang and Q. Zhu. </author> <title> Error Control and Concealment for Video Communication: A Review. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> Vol. 86(5) </volume> <pages> 974-997, </pages> <month> May </month> <year> 1998. </year>
Reference-contexts: Two hours MPEG video may contains 7200x30=216000 frames, this game is enough for him to play with in his whole life. Other way to attack RVEA encrypted MPEG video is to apply image error consealment methods. Some image error consealment algorithms <ref> [15] </ref> detecting video error spot by checking Huffman code words. RVEA neither changes the MPEG syntax nor the semantics. This makes error con-sealment attack difficult. 6. Experiments We conducted our experiments on a Sun Sparc 10 station at the Raid Lib of the Computer Science Department of Purdue University.
References-found: 15

