URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/6385/readings/dan.ps.Z
Refering-URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/6385/papers.html
Root-URL: 
Title: Scheduling Policies for an On-Demand Video Server with Batching  
Author: Asit Dan Dinkar Sitaram Perwez Shahabuddin 
Note: IBM Research Report, RC 19381  
Address: Yorktown Heights, NY 10598  
Affiliation: IBM Research Division, T. J. Watson Research Center  
Abstract: In an on-demand video server environment, clients make requests for movies to a centralized video server. Due to the stringent response time requirements, continuous delivery of a video stream to the client has to be guaranteed by reserving sufficient resources required to deliver a stream. Hence there is a hard limit on the number of streams that can be simultaneously delivered by a server. The server can satisfy multiple requests for the same movie using a single disk I/O stream by sending the same data pages to multiple clients (using the multicast facility if present in the system). This can be achieved by batching requests for the same movie that arrive within a short duration of time. In this paper, we consider various policies for selecting the movie to be multicast. The choice of a policy depends very much on the customer waiting time tolerance before reneging. We show that an FCFS policy that schedules the movie with the longest outstanding request can perform better than the MQL policy that chooses the movie with the maximum number of outstanding requests. Additionally, if the user behaviour can be influenced by guaranteeing maximum waiting time then it may be beneficial to pre-allocate a fixed number of streams for popular movies. Finally, we demonstrate using empirical distribution for movie requests, that a substantial reduction (more than 60%) in required server capacity can be achieved by batching. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anderson, D. P., </author> <title> "Metascheduling for Continuous Media," </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 11, No. 3, </volume> <month> August </month> <year> 1993, </year> <pages> pp. 226-252. </pages>
Reference-contexts: Due to the stringent response time requirements, continuous delivery of a stream to the client has to be guaranteed by reserving sufficient resources (both at the network as well as at the server) required to deliver a stream <ref> [1, 14] </ref>. The bottleneck resource at the server could be either disk bandwidth or CPU capacity. Hence there is a hard limit on the number of streams that can be simultaneously delivered by a server. Each client requests playback of a movie of his/her choice independently of others. <p> For example, if two clients make a request for the same movie separated by a small time interval, then by delaying the playback for the first client, the same server stream can be used to satisfy both requests <ref> [1] </ref>. The multicast facility need not be present in the distribution system. A video server that reads once from disk and then sends separately the data to multiple clients accrues the benefit of reading once for multiple clients.
Reference: [2] <author> Craig, D. W., and C. M. Woodside, </author> <title> "The Rejection Rate for Tasks with Random Arrivals, Deadlines, and Preemptive Scheduling," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 16, No. 10, </volume> <month> October </month> <year> 1990, </year> <pages> pp. 1198-1208. </pages>
Reference-contexts: In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. In some other queueing systems the loss may be due to reneging of impatient customers [7, 21] or due to missing deadline in hard real-time environment <ref> [11, 16, 17, 2] </ref>. In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients. <p> The amount of time an user will wait before deciding to leave may not be known in advance as is the case in deadline driven scheduling <ref> [11, 16, 17, 2] </ref>. In general, the reneging time of a client, which we denote by W , may be a random variable with a general distribution.
Reference: [3] <author> Dan, A., and D. Sitaram, </author> <title> "Buffer Management Policy for an On-Demand Video Server", IBM Research Report, RC 19347, </title> <address> Yorktown Heights, NY, </address> <year> 1993. </year>
Reference-contexts: An alternative approach is to use a small amount of buffer for caching the blocks of a multicast stream for the paused clients similar to <ref> [3] </ref>. 2 of information to a service computer. When the service computer processes a request the desired page is broadcast to all users regardless of who requested it. Our system differs from the videotex system in several ways.
Reference: [4] <author> Dykeman, H. D., M. H. Ammar, and J. W. Wong, </author> <title> "Scheduling Algorithms for Videotex Systems under Broadcast Delivery", </title> <booktitle> Proc ICC'86, </booktitle> <year> 1986, </year> <pages> pp. 1847-1851. </pages>
Reference-contexts: The non-work conserving merging property appears as a result of the multicast feature in multimedia systems. This has also been observed in the context of broadcast delivery in videotex systems <ref> [20, 4] </ref>. In such a system, users submit independent requests to retrieve a specific page restart for individual clients. There are various ways to provide this facility. <p> Alternatively, policies can be devised that take into 5 account both the waiting time as well as the number of customers (e.g., sum of waiting time for all customers for a movie as in <ref> [4] </ref>). Such policies are more complex and may not be preferred from the implementation point of view. <p> This is similar to the MRF (Maximum Request First) policy in <ref> [4] </ref>. One drawback of this policy is that it may choose only the hot movies since there are very few requests for cold movies within a short time period (within the reneging time of a customer).
Reference: [5] <institution> Electronic Engineering Times, </institution> <month> March 15, </month> <year> 1993, </year> <pages> pp 72. </pages>
Reference-contexts: Such a request may arrive at random time intervals. Hence a new movie stream could be started to satisfy the request. In a commercial environment, there may be a large number of clients simultaneously watching movies over the network, potentially in the thousands <ref> [5] </ref>. This would require a very large server capacity. We would like to note that modern communication networks such as ATM are equipped with a multicast facility [12, 9, 22] i.e. the same message can be sent to multiple clients without causing any extra overhead to the server. <p> The tradeoffs amongst various policies are studied in section 4. Section 5 contains our concluding observations. 3 2 Assumptions and Proposed Policies Access to the movies are non-uniform, i.e., some movies are more popular than others. stores <ref> [5] </ref>. <p> Client requests are modelled as a Poisson arrival process. Let denote the client request rate. The value of is chosen such that the number of simultaneous users varies from roughly 600 to 6000 (consistent with projected demand <ref> [5] </ref>). Each movie is assumed to be 2 hours long. Hence, the value of is varied from 5 to 50 per minute. The frequencies for requesting various movies are assumed to be a skewed distribution.
Reference: [6] <author> Fox, E. A., </author> <title> "The Coming Revolution in Interactive Digital Video," </title> <journal> Communication of the ACM, </journal> <volume> Vol. 7, </volume> <month> July </month> <year> 1989, </year> <pages> pp. 794-801. </pages>
Reference-contexts: 1 Introduction Recent advances in communication and computer technology have made feasible video-on-demand applications, where a large database of movies are stored in a set of centralized servers and played through high-speed communication networks by geographically distributed clients (see Figure 1) <ref> [6, 15, 14] </ref>. Due to the stringent response time requirements, continuous delivery of a stream to the client has to be guaranteed by reserving sufficient resources (both at the network as well as at the server) required to deliver a stream [1, 14].
Reference: [7] <author> Gross, D., and C. M. Harris, </author> <title> Fundamentals of Queueing Theory, </title> <publisher> John Wiley and Sons - New York, </publisher> <address> Chichester, Brisbane, Toronto, Singapore, </address> <year> 1985, </year> <pages> pp 124. </pages>
Reference-contexts: The loss may occur due to two reasons. In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. In some other queueing systems the loss may be due to reneging of impatient customers <ref> [7, 21] </ref> or due to missing deadline in hard real-time environment [11, 16, 17, 2]. In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients.
Reference: [8] <author> Kleinrock, L., </author> <title> Queueing Systems, Volume 1: Theory, </title> <publisher> John Wiley and Sons New York, </publisher> <address> Chichester, Brisbane, Toronto, </address> <year> 1975, </year> <pages> pp 105. </pages>
Reference-contexts: Additionally, there are multiple channels for serving movie requests in our system. Finally, the scheduling policy in our system has to take into account the customer reneging behavior. Loss systems have been studied both in the classical literature <ref> [8] </ref> and also in various communication systems [13, 21]. The loss may occur due to two reasons. In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length.
Reference: [9] <author> Le Boudec, J.-Y., </author> <title> "The Asynchronous Transfer Mode: A Tutorial," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> Vol. 24, </volume> <year> 1992, </year> <pages> pp. 279-309. </pages>
Reference-contexts: In a commercial environment, there may be a large number of clients simultaneously watching movies over the network, potentially in the thousands [5]. This would require a very large server capacity. We would like to note that modern communication networks such as ATM are equipped with a multicast facility <ref> [12, 9, 22] </ref> i.e. the same message can be sent to multiple clients without causing any extra overhead to the server. This feature can be exploited to reduce the number of streams required by a server to support a given number of clients.
Reference: [10] <author> Lindfield, G. R., and J. E. T. Penny, </author> <title> Microcomputers in Numerical Analysis, </title> <publisher> John Wiley and Sons New York, </publisher> <address> Chichester, Brisbane, Toronto, </address> <year> 1989, </year> <pages> pp 31. 22 </pages>
Reference-contexts: In the simulation, this is obtained 18 by repeating the simulation following a search process on the server capacity. Since the simulation is expensive, an efficient search process is needed. For this purpose, we use a secant search method <ref> [10] </ref>. Figure 11 compares the required server capacity for MQL and FCFS to achieve the above objective (less than 5% reneging probability). The customer reneging behavior is assumed to follow the minimum waiting time model.
Reference: [11] <author> Liu, C. L., and J. W. Layland, </author> <title> "Scheduling Algorithms for Multiprogramming in a hard Real-Time Environment," </title> <journal> Journal of the ACM, </journal> <volume> Vol. 20, No. 1, </volume> <month> January </month> <year> 1973, </year> <pages> pp. 46-61. </pages>
Reference-contexts: In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. In some other queueing systems the loss may be due to reneging of impatient customers [7, 21] or due to missing deadline in hard real-time environment <ref> [11, 16, 17, 2] </ref>. In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients. <p> The amount of time an user will wait before deciding to leave may not be known in advance as is the case in deadline driven scheduling <ref> [11, 16, 17, 2] </ref>. In general, the reneging time of a client, which we denote by W , may be a random variable with a general distribution.
Reference: [12] <author> Marchok, D. J., C. Rohrs, and M. R. Schafer, </author> <title> "Multicasting in a Growable Packet (ATM) Switch," </title> <booktitle> IEEE INFOCOM, </booktitle> <year> 1991, </year> <pages> pp. 850-858. </pages>
Reference-contexts: In a commercial environment, there may be a large number of clients simultaneously watching movies over the network, potentially in the thousands [5]. This would require a very large server capacity. We would like to note that modern communication networks such as ATM are equipped with a multicast facility <ref> [12, 9, 22] </ref> i.e. the same message can be sent to multiple clients without causing any extra overhead to the server. This feature can be exploited to reduce the number of streams required by a server to support a given number of clients.
Reference: [13] <author> Peha, J. M., and F. A. Tobagi, </author> <title> "Evaluating Scheduling Algorithms for Traffic with Heterogeneous Performance Objectives," </title> <booktitle> IEEE GLOBECOM, </booktitle> <year> 1990, </year> <pages> pp. 21-27. </pages>
Reference-contexts: Additionally, there are multiple channels for serving movie requests in our system. Finally, the scheduling policy in our system has to take into account the customer reneging behavior. Loss systems have been studied both in the classical literature [8] and also in various communication systems <ref> [13, 21] </ref>. The loss may occur due to two reasons. In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length.
Reference: [14] <author> Rangan, P. V., H. M. Vin, and S. Ramanathan, </author> <title> "Designing an On-Demand Multimedia Service," </title> <journal> IEEE Communication Magazine, </journal> <volume> Vol. 30, </volume> <month> July </month> <year> 1992, </year> <pages> pp. 56-65. </pages>
Reference-contexts: 1 Introduction Recent advances in communication and computer technology have made feasible video-on-demand applications, where a large database of movies are stored in a set of centralized servers and played through high-speed communication networks by geographically distributed clients (see Figure 1) <ref> [6, 15, 14] </ref>. Due to the stringent response time requirements, continuous delivery of a stream to the client has to be guaranteed by reserving sufficient resources (both at the network as well as at the server) required to deliver a stream [1, 14]. <p> Due to the stringent response time requirements, continuous delivery of a stream to the client has to be guaranteed by reserving sufficient resources (both at the network as well as at the server) required to deliver a stream <ref> [1, 14] </ref>. The bottleneck resource at the server could be either disk bandwidth or CPU capacity. Hence there is a hard limit on the number of streams that can be simultaneously delivered by a server. Each client requests playback of a movie of his/her choice independently of others.
Reference: [15] <author> Sincoskie, W. D., </author> <title> "System Architecture for a Large Scale Video On Demand Service," </title> <journal> Computer Networks and ISDN System, </journal> <volume> Vol. 22, </volume> <year> 1991, </year> <pages> pp. 155-162. </pages>
Reference-contexts: 1 Introduction Recent advances in communication and computer technology have made feasible video-on-demand applications, where a large database of movies are stored in a set of centralized servers and played through high-speed communication networks by geographically distributed clients (see Figure 1) <ref> [6, 15, 14] </ref>. Due to the stringent response time requirements, continuous delivery of a stream to the client has to be guaranteed by reserving sufficient resources (both at the network as well as at the server) required to deliver a stream [1, 14].
Reference: [16] <author> Stankovic, J., K. Ramamritham, and S. Chang, </author> <title> "Evaluation of a Flexible Task Scheduling Algorithm for Distributed Hard Real-Time Systems," </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. C-34, No. 12, </volume> <month> December </month> <year> 1985, </year> <pages> pp. 1130-1143. </pages>
Reference-contexts: In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. In some other queueing systems the loss may be due to reneging of impatient customers [7, 21] or due to missing deadline in hard real-time environment <ref> [11, 16, 17, 2] </ref>. In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients. <p> The amount of time an user will wait before deciding to leave may not be known in advance as is the case in deadline driven scheduling <ref> [11, 16, 17, 2] </ref>. In general, the reneging time of a client, which we denote by W , may be a random variable with a general distribution.
Reference: [17] <author> Towsley, D., and S. S. Panwar, </author> <title> "On the Optimality of Minimum Laxity and Earliest Deadline Scheduling for Real-time Multiprocessors," </title> <booktitle> Proc. of EUROMICRO Workshop on Real Time, </booktitle> <year> 1990, </year> <pages> pp. 17-24. </pages>
Reference-contexts: In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. In some other queueing systems the loss may be due to reneging of impatient customers [7, 21] or due to missing deadline in hard real-time environment <ref> [11, 16, 17, 2] </ref>. In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients. <p> The amount of time an user will wait before deciding to leave may not be known in advance as is the case in deadline driven scheduling <ref> [11, 16, 17, 2] </ref>. In general, the reneging time of a client, which we denote by W , may be a random variable with a general distribution.
Reference: [18] <author> Video Store Magazine, </author> <month> Dec. 13, </month> <year> 1992. </year>
Reference-contexts: Each movie is assumed to be 2 hours long. Hence, the value of is varied from 5 to 50 per minute. The frequencies for requesting various movies are assumed to be a skewed distribution. We will approximate the empirical distribution in <ref> [18] </ref> (presented in Section 2) by a Zipf distribution with the parameter 0.271. We will use this distribution throughout our simulation study unless otherwise specified. The number of different movies is assumed to be 92.
Reference: [19] <author> Wolff, R.W., </author> <title> Poisson Arrivals See Time Averages, </title> <journal> Operations Research 30, </journal> <volume> 2, </volume> <year> 1989, </year> <pages> pp. 223-231. </pages>
Reference-contexts: Once we determine the steady state probabilities, then using the Poisson Arrivals See Time Averages (PASTA) property <ref> [19] </ref>, we can determine the expected waiting time of requests for any given movie.
Reference: [20] <author> Wong, J. W. and M. H. Ammar, </author> <title> "Analysis of Broadcast Delivery in a Videotex System", </title> <journal> IEEE Transactions on Communications, </journal> <volume> Vol. 34, No. 9, </volume> <month> September, </month> <year> 1985, </year> <pages> pp. 863-866. </pages>
Reference-contexts: The non-work conserving merging property appears as a result of the multicast feature in multimedia systems. This has also been observed in the context of broadcast delivery in videotex systems <ref> [20, 4] </ref>. In such a system, users submit independent requests to retrieve a specific page restart for individual clients. There are various ways to provide this facility.
Reference: [21] <author> Zhao, Z. X., S. S. Panwar, and D. Towsley, </author> <title> "Queueing Performance with Impatient Customers," </title> <booktitle> IEEE INFOCOM, </booktitle> <year> 1991, </year> <pages> pp. 400-409. </pages>
Reference-contexts: Additionally, there are multiple channels for serving movie requests in our system. Finally, the scheduling policy in our system has to take into account the customer reneging behavior. Loss systems have been studied both in the classical literature [8] and also in various communication systems <ref> [13, 21] </ref>. The loss may occur due to two reasons. In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. <p> The loss may occur due to two reasons. In communication systems, the loss may occur due to finite resources (e.g., buffer) and hence, the constraint on the queue length. In some other queueing systems the loss may be due to reneging of impatient customers <ref> [7, 21] </ref> or due to missing deadline in hard real-time environment [11, 16, 17, 2]. In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients. <p> In our system, the individual client deadlines are not known, and the loss is primarily due to reneging of impatient clients. The work closest to ours in this respect is the paper by Zhao, Panwar and Towsley <ref> [21] </ref> where the behavior of individual impatient customers is not known. Apart from the merging property, the current work differs from the above paper in many respects.
Reference: [22] <author> Zhong, W. D., Y. Onozato, and J. Kaniyil, </author> <title> "Copy Network with Shared Buffers for Large-scale Multicast ATM Switching," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 1, No. 2, </volume> <month> April </month> <year> 1993, </year> <pages> pp. </pages> <month> 157-165. </month> <title> 23 (exponential reneging time distribution) accepted requests (exp. reneging time dist.) (uniform reneging time distribution) 24 the reneging probability (W min = 2 minutes) (W max = 2 minutes) (W max = 5 minutes) on the required server capacity for 95% acceptance guarantee 25 on the required server capacity for 95% acceptance guarantee on the required server capacity for 95% acceptance guarantee of required server capacity 26 </title>
Reference-contexts: In a commercial environment, there may be a large number of clients simultaneously watching movies over the network, potentially in the thousands [5]. This would require a very large server capacity. We would like to note that modern communication networks such as ATM are equipped with a multicast facility <ref> [12, 9, 22] </ref> i.e. the same message can be sent to multiple clients without causing any extra overhead to the server. This feature can be exploited to reduce the number of streams required by a server to support a given number of clients.
References-found: 22

