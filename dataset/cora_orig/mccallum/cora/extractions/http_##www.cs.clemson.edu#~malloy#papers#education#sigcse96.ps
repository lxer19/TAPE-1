URL: http://www.cs.clemson.edu/~malloy/papers/education/sigcse96.ps
Refering-URL: http://www.cs.clemson.edu/~malloy/cse.html
Root-URL: http://www.cs.clemson.edu
Phone: 32(1):9 23, 1989.  
Title: Figure 3: The project phases for the incremental development of the DBMS. 3.2.5 Extension of
Author: Peter J. Denning, Douglas E. Comer, David Gries, Michael Mulder, Allen Tucker, A. Joe Turner, and Paul R. Young. [] Brian Malloy, Devidas Gupta, Anuradha Kare, and John D. McGregor. [] Brian Malloy, Devidas Gupta, Anuradha Kare, and John D. McGregor. James Rumbaugh, Michael Blaha, William Premerlani, Frederick Eddy, and William Lorensen. 
Degree: assisted the students in identifing the portions of the  
Date: 1991.  
Address: Englewood Cliffs, NJ,  
Note: software that would be altered. This  should be made. There are drawbacks to the  References [1]  Computing as a discipline. Communications of the ACM,  of the 9th Annual ASEET Symposium, 1995. [4] Ruben Prieto-Diaz. Domain analysis: An introduction. ACM SIGSOFT's Software Engineering Notes, 15(2):47-54, 1990. [5]  Prentice-Hall,  
Abstract: 4 RESULTS AND CONCLUSIONS This approach allows the course or curriculum developer to ensure that the relevant topics are covered in the computer science thread. The course instructor can be certain that the correct application topics are used to motivate the computer science principles. The "knowledge packets" approach reported in [1] is an excellent source of material for defining the threads. Our experience, so far, is limited to individual courses. Our evaluation of this technique has been largely through student and instructor feedback. Overwhelmingly positive student feedback from CS4 has encouraged us to utilize the application centered approach in other courses. We are currently using an application centered approach for CS2 instruction, where the application is a text editor, and the language vehicle is Ada 95. In our CS2 project, the students are exploring various algorithms for line breaking and other string manipulation techniques. The object-oriented design of the text editor parallels the design of a DBMS that threads the CS2 laboratory experience[2, 3]. analysis and project design are particularly intensive and must be completed prior to use of the application. Textbooks do not yet support this approach so a standard text is used as a reference for algorithms and techniques and the instructor-created domain digest provides the background material on the application domain. To adequately constrain the project the instructor should completely implement the project. This implementation will be used to produce the shell program given to the students as part of the initial project description and it will also prove useful when students fail to complete one of the assignments in the incremental set of extensions. Another drawback of the application centered aproach is that some students who failed to complete one of the assignments also found it difficult to incorporate the instructor's solution into their project. The feedback indicates that any extra effort is offset by improved motivation and, hopefully, improved understanding of concepts. Our experiences on courses will serve as important input into our department's current review of the undergraduate curricula. The application centered approach may be one mechanism for a "breadth-first" view of computing while still developing the essential basic skills that are required in the specialized upper division computer science courses. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Peter J. Denning, Douglas E. Comer, David Gries, Michael Mulder, Allen Tucker, A. Joe Turner, and Paul R. Young. </author> <title> Computing as a discipline. </title> <journal> Communications of the ACM, </journal> <volume> 32(1):9 - 23, </volume> <year> 1989. </year>
Reference: [2] <author> Brian Malloy, Devidas Gupta, Anuradha Kare, and John D. McGregor. </author> <title> Incorporating reusability and extensibility into the CS 2 curriculum. </title> <booktitle> In Proceedings of the OOPSLA'95 Educator's Symposium, </booktitle> <year> 1995. </year>
Reference: [3] <author> Brian Malloy, Devidas Gupta, Anuradha Kare, and John D. McGregor. </author> <title> Migrating from an object-based approach to an object-oriented approach to software design. </title> <booktitle> In Proceedings of the 9th Annual ASEET Symposium, </booktitle> <year> 1995. </year>
Reference: [4] <author> Ruben Prieto-Diaz. </author> <title> Domain analysis: An introduction. </title> <journal> ACM SIGSOFT's Software Engineering Notes, </journal> <volume> 15(2) </volume> <pages> 47-54, </pages> <year> 1990. </year>

References-found: 4

