URL: http://www.cs.indiana.edu/l/www/pub/shirley/mc96.ps
Refering-URL: http://www.cs.indiana.edu/l/www/pub/shirley/
Root-URL: http://www.cs.indiana.edu
Title: Monte Carlo Methods in Rendering  
Author: Peter Shirley 
Note: Notes, Chapter 11, pp. 1-24.  
Affiliation: Cornell Program of Computer Graphics  
Abstract: Revised May 15, 1996. The original version of this paper appeared as: Shirley, P. 1994. "Hybrid Radiosity/Monte Carlo Methods," ACM SIGGRAPH '94 Advanced Topics in Radiosity Course 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> John M. Airey and Ming Ouh-Young. </author> <title> Two adaptive techniques let progressive radiosity outperform the traditional radiosity algorithm. </title> <type> Technical Report TR89-20, </type> <institution> Computer Science Department, University of North Carolina at Chapel Hill, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: To do this, first choose a random point on the luminaire surface, and then choose a random direction based on the surface normal at that point. Arvo's method can be extended to a radiosity [15] method by letting the Lambertian zones interreflect light <ref> [32, 1, 2, 44] </ref>. This is really just a ray tracing variant of the progressive refinement radiosity method [8]. <p> This approach is almost certainly correct, but its justification and implications have yet to be explained. For example, when evaluating a one dimensional integral on <ref> [0; 1] </ref> we could use a set of N uniformly random sample points (x 1 ; x 2 ; ; x N ) on [0; 1] to get an approximation: Z 1 f (x)dx N i=1 Interestingly, we can replace the points (x 1 ; x 2 ; ; x N <p> This approach is almost certainly correct, but its justification and implications have yet to be explained. For example, when evaluating a one dimensional integral on <ref> [0; 1] </ref> we could use a set of N uniformly random sample points (x 1 ; x 2 ; ; x N ) on [0; 1] to get an approximation: Z 1 f (x)dx N i=1 Interestingly, we can replace the points (x 1 ; x 2 ; ; x N ) with a set of non-random points (y 1 ; y 2 ; ; y N ), and the approximation will still work. <p> More specifics on this can be found in Appendix A. As an example in two dimensions, suppose we want to integrate some function f on the origin centered square <ref> [1; 1] </ref> 2 . <p> But how do we choose non-uniform random points? As discussed in Appendix A, sample points can be chosen uniformly from <ref> [0; 1] </ref> 2 and then a warping transformation can be applied to distribute the points according to w [50, 42, 30]. <p> For several practical and theoretical reasons [43] we have chosen the width 2 weighting function that is non-zero on (x; y) 2 <ref> [1; 1] </ref> 2 : w (x; y) = (1 jxj) (1 jyj) : (11) We generate random points with density equal to w by applying a transformation to a uniform random pair (r 1 ; r 2 ) 2 [0; 1] 2 . <p> width 2 weighting function that is non-zero on (x; y) 2 [1; 1] 2 : w (x; y) = (1 jxj) (1 jyj) : (11) We generate random points with density equal to w by applying a transformation to a uniform random pair (r 1 ; r 2 ) 2 <ref> [0; 1] </ref> 2 . <p> ): This makes it easy to figure out the color of the ground in the midwest: it's the weighted average of the color of the sky times the reflectance of the ground! 4.4 Multidimensional Quasi-Monte Carlo Integration Suppose we want to numerically estimate the value of an integral I on <ref> [0; 1] </ref> 2 : I = 0 0 f (x; y)dxdy: For pure Monte Carlo we might use a set of uniform random points (x i ; y i ) 2 [0; 1] 2 and estimate I to be the average of f (x i ; y i ). <p> ground! 4.4 Multidimensional Quasi-Monte Carlo Integration Suppose we want to numerically estimate the value of an integral I on <ref> [0; 1] </ref> 2 : I = 0 0 f (x; y)dxdy: For pure Monte Carlo we might use a set of uniform random points (x i ; y i ) 2 [0; 1] 2 and estimate I to be the average of f (x i ; y i ). For stratified sampling we might partition [0; 1] 2 into several equal-area rectangles and take one sample (x i ; y i ) in each rectangle and again average f (x i ; <p> = 0 0 f (x; y)dxdy: For pure Monte Carlo we might use a set of uniform random points (x i ; y i ) 2 <ref> [0; 1] </ref> 2 and estimate I to be the average of f (x i ; y i ). For stratified sampling we might partition [0; 1] 2 into several equal-area rectangles and take one sample (x i ; y i ) in each rectangle and again average f (x i ; y i ). Interestingly, we might also use "Poisson-disk" sampling to generate the points, or even just use points on a regular grid. <p> If the density is a one dimensional f (x) defined over the interval x 2 [x min ; x max ], then we can generate random numbers ff i that have density f from a set of uniform random numbers ~ i , where ~ i 2 <ref> [0; 1] </ref>. <p> If P is not analytically invertible then numerical methods will suffice because an inverse exists for all valid probability distribution functions. For example, to choose random points x i that have the density p (x) = 3x 2 =2 on <ref> [1; 1] </ref>, we see that P (x) = (x 3 + 1)=2, and P 1 (x) = 3 p 2x 1, so we can "warp" a set of canonical random numbers (~ 1 ; ; ~ N ) to the properly distributed numbers (x 1 ; ; x N ) =
Reference: [2] <author> John M. Airey, John H. Rohlf, and Frederick P. Brooks. </author> <title> Towards image realism with interactive update rates in complex virtual building environments. </title> <journal> Computer Graphics, </journal> <volume> 24(1) </volume> <pages> 41-50, </pages> <year> 1990. </year> <booktitle> ACM Workshop on Interactive Graphics Proceedings. </booktitle>
Reference-contexts: To do this, first choose a random point on the luminaire surface, and then choose a random direction based on the surface normal at that point. Arvo's method can be extended to a radiosity [15] method by letting the Lambertian zones interreflect light <ref> [32, 1, 2, 44] </ref>. This is really just a ray tracing variant of the progressive refinement radiosity method [8]. <p> For example, suppose that we want to choose rays according to the density: p (; ) = 2 Where n is a Phong-like exponent, is the angle from the surface normal and 2 [0; =2] (is on the upper hemisphere) and is the azimuthal angle ( 2 <ref> [0; 2] </ref>). The distribution function is: P (; ) = 0 0 The cos 0 term arises because on the sphere d! = cos dd.
Reference: [3] <author> James Arvo. </author> <title> Backward ray tracing. </title> <booktitle> Developments in Ray Tracing, </booktitle> <pages> pages 259-263, </pages> <year> 1986. </year> <note> ACM Siggraph '86 Course Notes. </note>
Reference-contexts: If photons are retained as an aspect of the model, then an obvious analog process is one where photons whose wavelengths are outside of the region of spectral sensitivity of the film do not exist. Several researchers (e.g. <ref> [3] </ref>) have used Monte Carlo simulation of a simple analog of optics, where only Lambertian and specular surfaces are used. A lambertian surface is one with several simple properties. First, its radiance at any wavelength does not vary with viewing angle. <p> Note that d is the reflectance, not the BRDF, of the surface. The BRDF is a constant function with value d =. As an example of an analog process, the illumination ray tracing of Arvo <ref> [3] </ref> assumed photons traveled as bundles with a spectral distribution. He further assumed that these bundles were attenuated when reflecting from a specular surface.
Reference: [4] <author> James Arvo. </author> <title> Stratified sampling of spherical triangles. </title> <editor> In Rob Cook, editor, </editor> <booktitle> Proceedings of SIGGRAPH '95 (Anaheim, </booktitle> <address> California, </address> <month> August 6-11, </month> <year> 1995), </year> <booktitle> Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> pages 437-438, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Instead, many researchers [12, 25] sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 This can be done for triangular luminaires <ref> [4] </ref>, and for spherical luminaires [27, 58]. If Equation 15 is used to choose points on the luminaire, then radiance can be estimated to be: where ! is the total solid angle subtended by the luminaire as seen by x.
Reference: [5] <author> James Arvo and David Kirk. </author> <title> Particle transport and image synthesis. </title> <journal> Computer Graphics, </journal> <volume> 24(3) </volume> <pages> 63-66, </pages> <month> August </month> <year> 1990. </year> <booktitle> ACM Siggraph '90 Conference Proceedings. </booktitle>
Reference-contexts: One solution to this problem is to use "Russian roulette" and keep all particles with the same power by probabilistically absorbing them according to the albedo of the surface <ref> [5, 36] </ref>. Another solution to this problem of low energy particles is to replace the reflection model with an analog model where light is absorbed and immediately reemitted (after attenuation by the reflectance) (see Figure 3). <p> The reflectivity term is simply: R (x; ) = incoming 0 bd (x; ; 0 ) cos d!: For an ideal specular surface, the ~ will always be the ideal reflection direction. For a dielectric, ~ can be chosen randomly between reflected and transmitted directions <ref> [5] </ref>, or it can be split into two integrals as is done in a Whitted-style ray tracer [61]. For a diffuse surface, ~ will follow a cosine distribution: p ( 0 ) = cos =. When Equation 13 is used, the sampling takes place over all surfaces in the environment. <p> Particle tracing techniques have been pushed for view-independent [48], and view-dependent [24]. There is certainly a lot of work left to do! When designing new Monte Carlo methods, we usually think in terms of variance reduction. Work by Arvo and Kirk <ref> [5, 26] </ref> has detailed that this can be a non-trivial and sometimes counter intuitive process. To add to the confusion, we usually use quasi-random sampling, so the variance calculations are only an approximation.
Reference: [6] <author> Brian Cabral, Nelson Max, and Rebecca Springmeyer. </author> <title> Bidirectional reflectance functions from surface bump maps. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 273-282, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle>
Reference-contexts: In the viewing stage, this distribution can be queried with results depending on viewer position. The distribution functions could be stored in a Hemicube as done by Immel et al. [22], as spherical harmonics as done in <ref> [6, 51] </ref>, or in hemispherical tables as done in [16, 41, 47]. These latter methods use Monte Carlo by generating outgoing power rays according to the shape of the unemitted power function as shown in Figure 6.
Reference: [7] <author> Shenchang Eric Chen, Holly Rushmeier, Gavin Miller, and Douglass Turner. </author> <title> A progressive multi-pass method for global illumination. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1991. </year> <booktitle> ACM Siggraph '91 Conference Proceedings. </booktitle>
Reference-contexts: In method 2 the fine detail caused by shadows (see Figure 10) is handled in the direct phase and the indirect lighting is handled by some precomputed values <ref> [44, 7, 29] </ref>. Ward's Radiance program [60, 59] is in the second family although the indirect information is calculated on the fly and cached, and the mesh is implicit.
Reference: [8] <author> Michael F. Cohen, Shenchang Eric Chen, John R. Wallace, and Donald P. Greenberg. </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 75-84, </pages> <month> August </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference-contexts: Arvo's method can be extended to a radiosity [15] method by letting the Lambertian zones interreflect light [32, 1, 2, 44]. This is really just a ray tracing variant of the progressive refinement radiosity method <ref> [8] </ref>. In this method, reflectance ( d;i ) and emitted power ( e;i ) of the ith zone are known, and the reflected power ( r;i ) ( r;i = incoming;i ) is unknown. <p> The first is that the number of rays emitted from a certain zone is proportional to the power being emitted in that iteration (each ray carries approximately the same amount of power). The other is that, unlike in <ref> [8] </ref>, the zone with the most power is not searched for, or the time complexity of the method will increase from O (N log N ) to O (N 2 ), where N is the number of zones [46].
Reference: [9] <author> Michael F. Cohen and Donald P. Greenberg. </author> <title> The hemi-cube: a radiosity solution for complex environments. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 31-40, </pages> <month> July </month> <year> 1985. </year> <booktitle> ACM Siggraph '85 Conference Proceedings. </booktitle> <pages> 22 </pages>
Reference-contexts: Once the total power of each patch is found, it can be converted to radiance using Equation 4. These radiance values can then be interpolated to form a smooth appearance <ref> [9] </ref>. 1 The number of rays sent can be thought of as the number of photons tracked in a certain time interval. The number of rays will be proportional to the time a "shutter" is open.
Reference: [10] <author> Michael F. Cohen, Donald P. Greenberg, David S. Immel, and Philip J. Brock. </author> <title> An efficient radiosity approach for realistic image synthesis. </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> 6(2) </volume> <pages> 26-35, </pages> <year> 1986. </year>
Reference-contexts: In method 3, a zonal solution is carried out on a low-resolution version of the scene, and this is used as sources for gather phases at each pixel [39, 38, 28]. This in some sense is a generalization of the patch and elements approach <ref> [10] </ref>. The application of this technique and brute-force path tracing [25] is shown in Figure 11. The Rushmeier method ran eight times faster because it did not have to recursively fire rays. On complex scenes this advantage will only grow. I am a fan of method 3 for many applications.
Reference: [11] <author> Robert L. Cook. </author> <title> Stochastic sampling in computer graphics. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(1) </volume> <pages> 51-72, </pages> <month> January </month> <year> 1986. </year>
Reference-contexts: 98,437 importance x=8 0 1 stratified 1/4 21:3N 3 70 Table 1: Variance for Monte Carlo Estimate of R 4 4.1 Quasi-Monte Carlo Integration Although distribution ray tracing is usually phrased as an application of Equation 6, many researchers replace the ~ i with more evenly distributed (quasi-random) samples (e.g. <ref> [11, 33] </ref>). This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure [64, 62, 33, 42] rather than in terms of variance. <p> Instead, people often either choose uniform p, or set p (x) = w (x) <ref> [11, 37, 30] </ref>. An example of a weighted average often used is pixel filtering. <p> When Equation 13 is used, the sampling takes place over all surfaces in the environment. In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces. This can be split into one integral for each surface <ref> [11] </ref>, or can be viewed as a single sampling space [30, 49]. To simplify this discussion, we will assume only one luminaire, so the sampling space is just a single surface.
Reference: [12] <author> Robert L. Cook, Thomas Porter, and Loren Carpenter. </author> <title> Distributed ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle>
Reference-contexts: i=1 p i (x i ) : (7) It can be shown that the variance of stratified sampling is never higher than unstratified if all strata have equal measure: Z p (x)d = N S The most common example of stratified sampling in graphics is jittering for pixel sam pling <ref> [12] </ref>. As an example of the Monte Carlo solution of an integral I set g (x) to be x over the interval (0, 4): I = 0 The great impact of the shape of the function p on the variance of the N sample estimates is shown in Table 1. <p> In practice, this isn't practical because the geometry term g and the BRDF bd can be very difficult to characterize. Instead, many researchers <ref> [12, 25] </ref> sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 This can be done for triangular luminaires [4], and for spherical luminaires [27, 58].
Reference: [13] <author> R. C. Corlett. </author> <title> Direct Monte Carlo calculation of radiative heat transfer in vacuum. </title> <journal> Journal of Heat Transfer, </journal> <pages> pages 376-382, </pages> <month> November </month> <year> 1966. </year>
Reference-contexts: This energy packet will bounce around the environment until it is depleted to a point where truncation is used. This basic energy packet tracing technique has been used in Heat Transfer <ref> [21, 13, 56] </ref>, Illumination Engineering [55], and Physics [53, 23]. This method, which I call reflection simulation (see Figure 2), is problematic in that each reflection is followed by a ray intersection test to find the next surface hit.
Reference: [14] <author> Andrew S. Glassner. </author> <title> Principles of Digital Image Synthesis. </title> <address> Morgan-Kaufman, San Francisco, </address> <year> 1995. </year>
Reference-contexts: These course notes were originally written in 1993 and rewritten the next year. They still serve as an introduction to the tools of Monte Carlo, but a broader treatment on Monte Carlo methods for rendering can be found in Glassner's recent two-volume book <ref> [14] </ref>. In these notes I will cover the basics of both Monte Carlo simulation, where a physical system is modeled, Monte Carlo integration, where random numbers are used to approximate integrals, and Quasi-Monte Carlo integration, where non-random numbers are used.
Reference: [15] <author> Cindy M. Goral, Kenneth E. Torrance, and Donald P. Greenberg. </author> <title> Modeling the interaction of light between diffuse surfaces. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 213-222, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle>
Reference-contexts: The rays should also be sent from points distributed on the surface of the luminaire. To do this, first choose a random point on the luminaire surface, and then choose a random direction based on the surface normal at that point. Arvo's method can be extended to a radiosity <ref> [15] </ref> method by letting the Lambertian zones interreflect light [32, 1, 2, 44]. This is really just a ray tracing variant of the progressive refinement radiosity method [8].
Reference: [16] <author> David Edward Hall. </author> <title> An analysis and modification of Shao's radiosity method for computer graphics image synthesis. </title> <type> Master's thesis, </type> <institution> Department of Mechanical Engineering, Georgia Institute of Technology, </institution> <month> March </month> <year> 1990. </year>
Reference-contexts: In the viewing stage, this distribution can be queried with results depending on viewer position. The distribution functions could be stored in a Hemicube as done by Immel et al. [22], as spherical harmonics as done in [6, 51], or in hemispherical tables as done in <ref> [16, 41, 47] </ref>. These latter methods use Monte Carlo by generating outgoing power rays according to the shape of the unemitted power function as shown in Figure 6.
Reference: [17] <author> John H. Halton. </author> <title> A retrospective and prospective of the Monte Carlo method. </title> <journal> SIAM Review, </journal> <volume> 12(1) </volume> <pages> 1-63, </pages> <month> January </month> <year> 1970. </year>
Reference-contexts: This section differs by being geared toward classes of problems that crop up in Computer Graphics. Readers interested in a broader treatment of Monte Carlo techniques should consult one of the classic Monte Carlo texts <ref> [18, 50, 17, 63] </ref>.
Reference: [18] <author> J. M. Hammersley and D. C. Handscomb. </author> <title> Monte Carlo Methods. </title> <publisher> Wiley, </publisher> <address> New York, N.Y., </address> <year> 1964. </year>
Reference-contexts: This section differs by being geared toward classes of problems that crop up in Computer Graphics. Readers interested in a broader treatment of Monte Carlo techniques should consult one of the classic Monte Carlo texts <ref> [18, 50, 17, 63] </ref>.
Reference: [19] <author> Paul S. Heckbert. </author> <title> Adaptive radiosity textures for bidirectional ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 24(3) </volume> <pages> 145-154, </pages> <month> August </month> <year> 1990. </year> <booktitle> ACM Siggraph '90 Conference Proceedings. </booktitle>
Reference-contexts: A natural choice for tracking the power is to use ray tracing. However, it is not so obvious how many rays to send, or where to send them. This question has been examined in a fairly sophisticated way in <ref> [19] </ref>, but even for a simple implementation the answer is non-obvious. The number of rays that must be sent is "enough". This depends on how much noise is acceptable in an image, and how small the zones are.
Reference: [20] <author> Paul S. Heckbert. </author> <title> What are the coordinates of a pixel? In Andrew Glassner, editor, Graphics Gems. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1990. </year>
Reference-contexts: weighting function is used for every pixel yields the estimator : I (i; j) N k=1 p (x k ; y k ) This assumes a coordinate system where a pixel (i; j) has unit area and is centered at (i + 0:5; j + 0:5) as suggested by Heckbert <ref> [20] </ref>. Once a w is chosen for filtering, implementation is straightforward with p proportional to w provided that w is strictly positive (as it must be if negative pixel colors are disallowed).
Reference: [21] <author> J. R. Howell and M. Perlmutter. </author> <title> Monte Carlo solution of thermal transfer through radiant media between gray walls. </title> <journal> Journal of Heat Transfer, </journal> <pages> pages 116-122, </pages> <month> February </month> <year> 1964. </year>
Reference-contexts: This energy packet will bounce around the environment until it is depleted to a point where truncation is used. This basic energy packet tracing technique has been used in Heat Transfer <ref> [21, 13, 56] </ref>, Illumination Engineering [55], and Physics [53, 23]. This method, which I call reflection simulation (see Figure 2), is problematic in that each reflection is followed by a ray intersection test to find the next surface hit.
Reference: [22] <author> David S. Immel, Michael F. Cohen, and Donald P. Greenberg. </author> <title> A radiosity method for non-diffuse environments. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 133-142, </pages> <month> August </month> <year> 1986. </year> <booktitle> ACM Siggraph '86 Conference Proceedings. </booktitle>
Reference-contexts: In the viewing stage, this distribution can be queried with results depending on viewer position. The distribution functions could be stored in a Hemicube as done by Immel et al. <ref> [22] </ref>, as spherical harmonics as done in [6, 51], or in hemispherical tables as done in [16, 41, 47]. These latter methods use Monte Carlo by generating outgoing power rays according to the shape of the unemitted power function as shown in Figure 6. <p> The rendering equation can be written down in two basic ways. It can be written down in terms of all directions visible to x (as in <ref> [22] </ref>): L (x; ) = incoming 0 bd (x; ; 0 )L (x; 0 ) cos d! 0 : (12) or it can written down as an integral over all surfaces (as in [25]): L (x; ) = all x 0 dA 0 cos 0 When Equation 12 is used, we
Reference: [23] <author> Theodore M. Jenkins, Walter R. Nelson, and Alessandro Rindi, </author> <title> editors. Monte Carlo Transport of Electrons and Photons. </title> <publisher> Plenum Press, </publisher> <address> New York, N.Y., </address> <year> 1988. </year>
Reference-contexts: This energy packet will bounce around the environment until it is depleted to a point where truncation is used. This basic energy packet tracing technique has been used in Heat Transfer [21, 13, 56], Illumination Engineering [55], and Physics <ref> [53, 23] </ref>. This method, which I call reflection simulation (see Figure 2), is problematic in that each reflection is followed by a ray intersection test to find the next surface hit.
Reference: [24] <author> Henrik Wann Jensen and Niels Jorgen Christensen. </author> <title> Bidirectional Monte Carlo ray tracing of complex objects using photon maps. </title> <journal> Computers & Graphics, </journal> <volume> 19(2), </volume> <year> 1995. </year>
Reference-contexts: The work on image-based and bidirectional techniques has been nicely surveyed and expanded in Eric Lafortune's dissertation, which is available at the web page: http://www.graphics.cornell.edu/~eric. Particle tracing techniques have been pushed for view-independent [48], and view-dependent <ref> [24] </ref>. There is certainly a lot of work left to do! When designing new Monte Carlo methods, we usually think in terms of variance reduction. Work by Arvo and Kirk [5, 26] has detailed that this can be a non-trivial and sometimes counter intuitive process.
Reference: [25] <author> James T. Kajiya. </author> <title> The rendering equation. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> August </month> <year> 1986. </year> <booktitle> ACM Siggraph '86 Conference Proceedings. </booktitle> <pages> 23 </pages>
Reference-contexts: It can be written down in terms of all directions visible to x (as in [22]): L (x; ) = incoming 0 bd (x; ; 0 )L (x; 0 ) cos d! 0 : (12) or it can written down as an integral over all surfaces (as in <ref> [25] </ref>): L (x; ) = all x 0 dA 0 cos 0 When Equation 12 is used, we can view bd (x; ; 0 ) cos as a weighting function and sample according to it. <p> In practice, this isn't practical because the geometry term g and the BRDF bd can be very difficult to characterize. Instead, many researchers <ref> [12, 25] </ref> sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 This can be done for triangular luminaires [4], and for spherical luminaires [27, 58]. <p> For a diffuse surface, the explicit method is usually used for direct lighting, and the implicit method is used only for indirect lighting <ref> [25, 60, 30] </ref>. To decide which method to use, variance should be analyzed, but the general rule is that specular surfaces should be dealt with using the implicit calculation and diffuse surfaces are treated explicitly. <p> If indirect lighting is to be added, then the surfaces that use the explicit direct lighting calculation can calculate indirect lighting implicitly with a scattered reflection ray <ref> [25] </ref>. This method, called path tracing, just recursively applies the direct lighting calculation and adds indirect lighting. If you implement this, be sure not to double count the indirect lighting! 5 Hybrid Methods Many methods use some combination of view-dependent and view-independent methods. <p> This in some sense is a generalization of the patch and elements approach [10]. The application of this technique and brute-force path tracing <ref> [25] </ref> is shown in Figure 11. The Rushmeier method ran eight times faster because it did not have to recursively fire rays. On complex scenes this advantage will only grow. I am a fan of method 3 for many applications.
Reference: [26] <author> David Kirk and James Arvo. </author> <title> Unbiased sampling techniques for image sysnthesis. </title> <journal> Com--puter Graphics, </journal> <volume> 25(4) </volume> <pages> 153-156, </pages> <month> July </month> <year> 1991. </year> <booktitle> ACM Siggraph '91 Conference Proceedings. </booktitle>
Reference-contexts: Particle tracing techniques have been pushed for view-independent [48], and view-dependent [24]. There is certainly a lot of work left to do! When designing new Monte Carlo methods, we usually think in terms of variance reduction. Work by Arvo and Kirk <ref> [5, 26] </ref> has detailed that this can be a non-trivial and sometimes counter intuitive process. To add to the confusion, we usually use quasi-random sampling, so the variance calculations are only an approximation.
Reference: [27] <author> David Kirk and James Arvo. </author> <title> Unbiased variance reduction for global illumination. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering (Barcelona, </booktitle> <month> May </month> <year> 1991), 1991. </year>
Reference-contexts: Instead, many researchers [12, 25] sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 This can be done for triangular luminaires [4], and for spherical luminaires <ref> [27, 58] </ref>. If Equation 15 is used to choose points on the luminaire, then radiance can be estimated to be: where ! is the total solid angle subtended by the luminaire as seen by x.
Reference: [28] <author> Arjan F. Kok. </author> <title> Grouping of patches in progressive radiosity. </title> <booktitle> In Proceedings of the Fourth Eurographics Workshop on Rendering, </booktitle> <pages> pages 221-231, </pages> <year> 1993. </year>
Reference-contexts: In method 3, a zonal solution is carried out on a low-resolution version of the scene, and this is used as sources for gather phases at each pixel <ref> [39, 38, 28] </ref>. This in some sense is a generalization of the patch and elements approach [10]. The application of this technique and brute-force path tracing [25] is shown in Figure 11. The Rushmeier method ran eight times faster because it did not have to recursively fire rays.
Reference: [29] <author> Arjan J. F. Kok and Frederik W. Jasen. </author> <title> Source selection for the direct lighting calculation in global illumination. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering (Barcelona, </booktitle> <month> May </month> <year> 1991), </year> <pages> pages 75-82, </pages> <year> 1991. </year>
Reference-contexts: In method 2 the fine detail caused by shadows (see Figure 10) is handled in the direct phase and the indirect lighting is handled by some precomputed values <ref> [44, 7, 29] </ref>. Ward's Radiance program [60, 59] is in the second family although the indirect information is calculated on the fly and cached, and the mesh is implicit.
Reference: [30] <author> Brigitta Lange. </author> <title> The simulation of radiant light transfer with stochastic ray-tracing. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering (Barcelona, </booktitle> <month> May </month> <year> 1991), 1991. </year>
Reference-contexts: Instead, people often either choose uniform p, or set p (x) = w (x) <ref> [11, 37, 30] </ref>. An example of a weighted average often used is pixel filtering. <p> But how do we choose non-uniform random points? As discussed in Appendix A, sample points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w <ref> [50, 42, 30] </ref>. <p> In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces. This can be split into one integral for each surface [11], or can be viewed as a single sampling space <ref> [30, 49] </ref>. To simplify this discussion, we will assume only one luminaire, so the sampling space is just a single surface. <p> For a diffuse surface, the explicit method is usually used for direct lighting, and the implicit method is used only for indirect lighting <ref> [25, 60, 30] </ref>. To decide which method to use, variance should be analyzed, but the general rule is that specular surfaces should be dealt with using the implicit calculation and diffuse surfaces are treated explicitly.
Reference: [31] <author> Dani Lischinski, Filippo Tampieri, and Donald P. Greenberg. </author> <title> Combining hierarchical radiosity and discontinuity meshing. </title> <journal> Computer Graphics, </journal> <pages> pages 199-208, </pages> <month> August </month> <year> 1993. </year> <booktitle> ACM Siggraph '93 Conference Proceedings. </booktitle>
Reference-contexts: Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used <ref> [31] </ref>. In method 2 the fine detail caused by shadows (see Figure 10) is handled in the direct phase and the indirect lighting is handled by some precomputed values [44, 7, 29].
Reference: [32] <author> Thomas J. V. Malley. </author> <title> A shading method for computer generated images. </title> <type> Master's thesis, </type> <institution> Computer Science Department, University of Utah, </institution> <month> June </month> <year> 1988. </year>
Reference-contexts: To do this, first choose a random point on the luminaire surface, and then choose a random direction based on the surface normal at that point. Arvo's method can be extended to a radiosity [15] method by letting the Lambertian zones interreflect light <ref> [32, 1, 2, 44] </ref>. This is really just a ray tracing variant of the progressive refinement radiosity method [8]. <p> This method works only for planar mirrors, but performs very well for environments that have one important specular surface like a mirror or highly polished floor. Malley extended his Monte Carlo power transport method to account for zonal transport by specular surfaces <ref> [32] </ref>. He did this by allowing power carrying rays to reflect off specular surfaces as shown in Figure 5. The colors of specular surfaces can be determined in the viewing phase by standard ray tracing. <p> Use ray tracing for direct lighting. 3. Generate a radiosity solution on a low resolution environment and use this in the viewing phase. In method 1 the ray tracing is really just to accurately capture specular effects [57] and the radiosity phase my or may not include specular transport <ref> [32, 52] </ref> or directional diffuse transport [41, 47, 51]. Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used [31].
Reference: [33] <author> Don P. Mitchell. </author> <title> Spectrally optimal sampling for distributed ray tracing. </title> <editor> In Thomas W. Sederberg, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> volume 25, </volume> <pages> pages 157-164, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: 98,437 importance x=8 0 1 stratified 1/4 21:3N 3 70 Table 1: Variance for Monte Carlo Estimate of R 4 4.1 Quasi-Monte Carlo Integration Although distribution ray tracing is usually phrased as an application of Equation 6, many researchers replace the ~ i with more evenly distributed (quasi-random) samples (e.g. <ref> [11, 33] </ref>). This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure [64, 62, 33, 42] rather than in terms of variance. <p> This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [64, 62, 33, 42] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and then to turn around and use non-random, but equidistributed samples in an implementation.
Reference: [34] <author> Don P. Mitchell. </author> <title> Ray tracing and irregularities of distribution. </title> <booktitle> In Proceedings of the Third Eurographics Workshop on Rendering, </booktitle> <pages> pages 61-70, </pages> <year> 1992. </year>
Reference-contexts: There is a rich literature on this topic, but Mitchell has indicated that the graphics community will not be able to find many useful answers there, because the patterns that are used in that literature are deterministic, which causes aliasing in images <ref> [34] </ref>. 4.5 Direct Lighting In this section the famous direct lighting calculation is discussed. Even if radiosity is used, it can often be used only for the indirect component and the direct component can be done 15 using the machinery of this section.
Reference: [35] <author> Laszlo Neumann, Martin Feda, Manfred Kopp, and Werner Purgathofer. </author> <title> The stochastic ray method for radiosity. </title> <booktitle> In Proceedings of the Sixth Eurographics Workshop on Rendering, </booktitle> <pages> pages 206-218, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: A more detailed discussion of the implementation of Monte Carlo radiosity can be found in [45]. Recently, Neumann et al. have compared various Monte Carlo strategies for radiosity on predefined meshes <ref> [35] </ref>. Interestingly, the straightforward particle tracing with Russian roulette converges faster inm their tests than "absorb and reemit", and that "absorb and reemit" can be improved by viewing it in a linear algebra context.
Reference: [36] <author> S. N. Pattanaik. </author> <title> Computational Methods for Global Illumination and Visualisation of Complex 3D Environments. </title> <type> PhD thesis, </type> <institution> Birla Institute of Technology & Science, Computer Science Department, Pilani, India, </institution> <month> February </month> <year> 1993. </year>
Reference-contexts: One solution to this problem is to use "Russian roulette" and keep all particles with the same power by probabilistically absorbing them according to the albedo of the surface <ref> [5, 36] </ref>. Another solution to this problem of low energy particles is to replace the reflection model with an analog model where light is absorbed and immediately reemitted (after attenuation by the reflectance) (see Figure 3).
Reference: [37] <author> Werner Purgathofer. </author> <title> A statistical method for adaptive stochastic sampling. </title> <journal> Computers and Graphics, </journal> <volume> 11(2) </volume> <pages> 157-162, </pages> <month> feb </month> <year> 1987. </year>
Reference-contexts: Instead, people often either choose uniform p, or set p (x) = w (x) <ref> [11, 37, 30] </ref>. An example of a weighted average often used is pixel filtering.
Reference: [38] <author> Holly Rushmeier, Charles Patterson, and Aravindan Veerasamy. </author> <title> Geometric simplification for indirect illumination calculations. </title> <booktitle> In Proceedings of Graphics Interface '93, </booktitle> <pages> pages 227-236, </pages> <address> Toronto, Ontario, Canada, </address> <month> May </month> <year> 1993. </year> <booktitle> Canadian Information Processing Society. </booktitle>
Reference-contexts: In method 3, a zonal solution is carried out on a low-resolution version of the scene, and this is used as sources for gather phases at each pixel <ref> [39, 38, 28] </ref>. This in some sense is a generalization of the patch and elements approach [10]. The application of this technique and brute-force path tracing [25] is shown in Figure 11. The Rushmeier method ran eight times faster because it did not have to recursively fire rays.
Reference: [39] <author> Holly E. Rushmeier. </author> <title> Realistic Image Synthesis for Scenes with Radiatively Participating Media. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <month> May </month> <year> 1988. </year> <month> 24 </month>
Reference-contexts: In method 3, a zonal solution is carried out on a low-resolution version of the scene, and this is used as sources for gather phases at each pixel <ref> [39, 38, 28] </ref>. This in some sense is a generalization of the patch and elements approach [10]. The application of this technique and brute-force path tracing [25] is shown in Figure 11. The Rushmeier method ran eight times faster because it did not have to recursively fire rays.
Reference: [40] <author> Holly E. Rushmeier and Kenneth E. Torrance. </author> <title> Extending the radiosity method to include specularly reflecting and translucent materials. </title> <journal> ACM Transaction on Graphics, </journal> <volume> 9(1) </volume> <pages> 1-27, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: This idea is illustrated in Figure 4. This simple simulation method could also be used for diffuse transmission, in a manner similar to that of Rushmeier and Torrance <ref> [40] </ref>. Some of the simulation techniques discussed earlier can be extended to non-diffuse reflection types. The most important application is to scenes that include specular surfaces, but glossy surfaces are sometimes desirable too. The simplest method of including specular reflection in a radiosity calculation is the image method [57, 40]. <p> Some of the simulation techniques discussed earlier can be extended to non-diffuse reflection types. The most important application is to scenes that include specular surfaces, but glossy surfaces are sometimes desirable too. The simplest method of including specular reflection in a radiosity calculation is the image method <ref> [57, 40] </ref>. In the image method, a specular surface is replaced by a hole into a virtual environment. This method works only for planar mirrors, but performs very well for environments that have one important specular surface like a mirror or highly polished floor.
Reference: [41] <author> Bertrand Le Saec and Christophe Schlick. </author> <title> A progressive ray-tracing-based radiosity with general reflectance functions. </title> <booktitle> In Proceedings of the Eurographics Workshop on Photosimulation, Realism and Physics in Computer Graphics, </booktitle> <pages> pages 103-116, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: In the viewing stage, this distribution can be queried with results depending on viewer position. The distribution functions could be stored in a Hemicube as done by Immel et al. [22], as spherical harmonics as done in [6, 51], or in hemispherical tables as done in <ref> [16, 41, 47] </ref>. These latter methods use Monte Carlo by generating outgoing power rays according to the shape of the unemitted power function as shown in Figure 6. <p> Generate a radiosity solution on a low resolution environment and use this in the viewing phase. In method 1 the ray tracing is really just to accurately capture specular effects [57] and the radiosity phase my or may not include specular transport [32, 52] or directional diffuse transport <ref> [41, 47, 51] </ref>. Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used [31].
Reference: [42] <author> P. Shirley. </author> <title> Discrepancy as a quality measure for sample distributions. </title> <editor> In Werner Purgathofer, editor, </editor> <volume> Eurographics '91, </volume> <pages> pages 183-194. </pages> <publisher> North-Holland, </publisher> <month> September </month> <year> 1991. </year>
Reference-contexts: This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [64, 62, 33, 42] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and then to turn around and use non-random, but equidistributed samples in an implementation. <p> But how do we choose non-uniform random points? As discussed in Appendix A, sample points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w <ref> [50, 42, 30] </ref>.
Reference: [43] <author> Peter Shirley. </author> <title> Physically Based Lighting Calculations for Computer Graphics. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> November </month> <year> 1990. </year>
Reference-contexts: But how do we choose non-uniform random points? As discussed in Appendix A, sample points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w [50, 42, 30]. For several practical and theoretical reasons <ref> [43] </ref> we have chosen the width 2 weighting function that is non-zero on (x; y) 2 [1; 1] 2 : w (x; y) = (1 jxj) (1 jyj) : (11) We generate random points with density equal to w by applying a transformation to a uniform random pair (r 1 ;
Reference: [44] <author> Peter Shirley. </author> <title> A ray tracing method for illumination calculation in diffuse-specular scenes. </title> <booktitle> In Proceedings of Graphics Interface '90, </booktitle> <pages> pages 205-212, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: To do this, first choose a random point on the luminaire surface, and then choose a random direction based on the surface normal at that point. Arvo's method can be extended to a radiosity [15] method by letting the Lambertian zones interreflect light <ref> [32, 1, 2, 44] </ref>. This is really just a ray tracing variant of the progressive refinement radiosity method [8]. <p> In method 2 the fine detail caused by shadows (see Figure 10) is handled in the direct phase and the indirect lighting is handled by some precomputed values <ref> [44, 7, 29] </ref>. Ward's Radiance program [60, 59] is in the second family although the indirect information is calculated on the fly and cached, and the mesh is implicit. <p> The Rushmeier method ran eight times faster because it did not have to recursively fire rays. On complex scenes this advantage will only grow. I am a fan of method 3 for many applications. I used to use method 2 (see <ref> [44] </ref>) but I found it cumbersome to have to mesh all diffuse objects. The beauty of method 3 is that it works even if the high resolution environment is an on-demand procedural model, it is easy to code, and that there are no smoothing issues.
Reference: [45] <author> Peter Shirley. </author> <title> Radiosity via ray tracing. </title> <editor> In James Arvo, editor, </editor> <title> Graphics Gems 2. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1991. </year>
Reference-contexts: This problem can be avoided if a heap or similar structure is used to make the search for maximum O (log N ) rather than O (N ). A more detailed discussion of the implementation of Monte Carlo radiosity can be found in <ref> [45] </ref>. Recently, Neumann et al. have compared various Monte Carlo strategies for radiosity on predefined meshes [35]. Interestingly, the straightforward particle tracing with Russian roulette converges faster inm their tests than "absorb and reemit", and that "absorb and reemit" can be improved by viewing it in a linear algebra context.
Reference: [46] <author> Peter Shirley. </author> <title> Time complexity of Monte Carlo radiosity. </title> <booktitle> In Eurographics '91, </booktitle> <pages> pages 459-466, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: The number of rays that must be sent is "enough". This depends on how much noise is acceptable in an image, and how small the zones are. In <ref> [46] </ref> it is argued that the number of rays should be linearly proportional to the number of zones, so doubling the number of zones implies that the number of rays should also be doubled. <p> The other is that, unlike in [8], the zone with the most power is not searched for, or the time complexity of the method will increase from O (N log N ) to O (N 2 ), where N is the number of zones <ref> [46] </ref>. This problem can be avoided if a heap or similar structure is used to make the search for maximum O (log N ) rather than O (N ). A more detailed discussion of the implementation of Monte Carlo radiosity can be found in [45].
Reference: [47] <author> Peter Shirley, Kelvin Sung, and William Brown. </author> <title> A ray tracing framework for global illumination systems. </title> <booktitle> In Proceedings of Graphics Interface '91, </booktitle> <pages> pages 117-128, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: In the viewing stage, this distribution can be queried with results depending on viewer position. The distribution functions could be stored in a Hemicube as done by Immel et al. [22], as spherical harmonics as done in [6, 51], or in hemispherical tables as done in <ref> [16, 41, 47] </ref>. These latter methods use Monte Carlo by generating outgoing power rays according to the shape of the unemitted power function as shown in Figure 6. <p> Generate a radiosity solution on a low resolution environment and use this in the viewing phase. In method 1 the ray tracing is really just to accurately capture specular effects [57] and the radiosity phase my or may not include specular transport [32, 52] or directional diffuse transport <ref> [41, 47, 51] </ref>. Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used [31].
Reference: [48] <author> Peter Shirley, Bretton Wade, David Zareski, Philip Hubbard, Bruce Walter, and Don-ald P. Greenberg. </author> <title> Global illumination via density estimation. </title> <booktitle> In Proceedings of the Sixth Eurographics Workshop on Rendering, </booktitle> <pages> pages 187-199, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The work on image-based and bidirectional techniques has been nicely surveyed and expanded in Eric Lafortune's dissertation, which is available at the web page: http://www.graphics.cornell.edu/~eric. Particle tracing techniques have been pushed for view-independent <ref> [48] </ref>, and view-dependent [24]. There is certainly a lot of work left to do! When designing new Monte Carlo methods, we usually think in terms of variance reduction. Work by Arvo and Kirk [5, 26] has detailed that this can be a non-trivial and sometimes counter intuitive process.
Reference: [49] <author> Peter Shirley and Changyaw Wang. </author> <title> Direct lighting by Monte Carlo integration. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering (Barcelona, </booktitle> <month> May </month> <year> 1991), 1991. </year>
Reference-contexts: In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces. This can be split into one integral for each surface [11], or can be viewed as a single sampling space <ref> [30, 49] </ref>. To simplify this discussion, we will assume only one luminaire, so the sampling space is just a single surface.
Reference: [50] <author> Y. A. Shreider. </author> <title> The Monte Carlo Method. </title> <publisher> Pergamon Press, </publisher> <address> New York, N.Y., </address> <year> 1966. </year>
Reference-contexts: This section differs by being geared toward classes of problems that crop up in Computer Graphics. Readers interested in a broader treatment of Monte Carlo techniques should consult one of the classic Monte Carlo texts <ref> [18, 50, 17, 63] </ref>. <p> But how do we choose non-uniform random points? As discussed in Appendix A, sample points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w <ref> [50, 42, 30] </ref>.
Reference: [51] <author> Fran~cois X. Sillion, James Arvo, Stephen Westin, and Donald Greenberg. </author> <title> A global illumination algorithm for general reflection distributions. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 187-196, </pages> <month> July </month> <year> 1991. </year> <booktitle> ACM Siggraph '91 Conference Proceedings. </booktitle>
Reference-contexts: In the viewing stage, this distribution can be queried with results depending on viewer position. The distribution functions could be stored in a Hemicube as done by Immel et al. [22], as spherical harmonics as done in <ref> [6, 51] </ref>, or in hemispherical tables as done in [16, 41, 47]. These latter methods use Monte Carlo by generating outgoing power rays according to the shape of the unemitted power function as shown in Figure 6. <p> Generate a radiosity solution on a low resolution environment and use this in the viewing phase. In method 1 the ray tracing is really just to accurately capture specular effects [57] and the radiosity phase my or may not include specular transport [32, 52] or directional diffuse transport <ref> [41, 47, 51] </ref>. Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used [31].
Reference: [52] <author> Fran~cois X. Sillion and Claude Puech. </author> <title> A general two-pass method integrating specular and diffuse reflection. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 335-344, </pages> <month> July </month> <year> 1989. </year> <booktitle> ACM Siggraph '89 Conference Proceedings. </booktitle>
Reference-contexts: The colors of specular surfaces can be determined in the viewing phase by standard ray tracing. Sillion and Puech used a similar technique to account for specular reflection, and included subdivision strategies for sampling more heavily where ray paths diverged <ref> [52] </ref>. Any non-diffuse reflectors can have zonal values, as long as each incoming power packet adds to a power distribution function that will be reemitted. In the viewing stage, this distribution can be queried with results depending on viewer position. <p> Use ray tracing for direct lighting. 3. Generate a radiosity solution on a low resolution environment and use this in the viewing phase. In method 1 the ray tracing is really just to accurately capture specular effects [57] and the radiosity phase my or may not include specular transport <ref> [32, 52] </ref> or directional diffuse transport [41, 47, 51]. Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used [31].
Reference: [53] <author> Jerome Spanier and Ely M. Gelbard. </author> <title> Monte Carlo Principles and Neutron Transport Problems. </title> <publisher> Addison-Wesley, </publisher> <address> New York, N.Y., </address> <year> 1969. </year>
Reference-contexts: Here both cleverness and some analytic skills are required. Fortunately, the analytic skills are fairly narrow in scope, so many of them can be covered in this short tutorial. A more formal discussion of Monte Carlo simulation can be found in the neutron transport literature (e.g. <ref> [53] </ref>) and an extremely current survey of Monte Carlo integration for practical applications can be found in the survey article by Spanier and Maize [54]. 2 Background and Terminology Before getting to the specifics of Monte Carlo techniques, we need several definitions, the most important of which are continuous random variable, <p> This energy packet will bounce around the environment until it is depleted to a point where truncation is used. This basic energy packet tracing technique has been used in Heat Transfer [21, 13, 56], Illumination Engineering [55], and Physics <ref> [53, 23] </ref>. This method, which I call reflection simulation (see Figure 2), is problematic in that each reflection is followed by a ray intersection test to find the next surface hit.
Reference: [54] <author> Jerome Spanier and Earl H. Maize. </author> <title> Quasi-random methods for estimating integrals using relatively small samples. </title> <journal> SIAM Review, </journal> <volume> 36(1) </volume> <pages> 18-44, </pages> <month> March </month> <year> 1994. </year> <month> 25 </month>
Reference-contexts: A more formal discussion of Monte Carlo simulation can be found in the neutron transport literature (e.g. [53]) and an extremely current survey of Monte Carlo integration for practical applications can be found in the survey article by Spanier and Maize <ref> [54] </ref>. 2 Background and Terminology Before getting to the specifics of Monte Carlo techniques, we need several definitions, the most important of which are continuous random variable, probability density function, expected value, and variance.
Reference: [55] <author> Dan Stanger. </author> <title> Monte Carlo procedures in lighting design. </title> <journal> Journal of the Illumination Engineering Society, </journal> <pages> pages 14-25, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: This energy packet will bounce around the environment until it is depleted to a point where truncation is used. This basic energy packet tracing technique has been used in Heat Transfer [21, 13, 56], Illumination Engineering <ref> [55] </ref>, and Physics [53, 23]. This method, which I call reflection simulation (see Figure 2), is problematic in that each reflection is followed by a ray intersection test to find the next surface hit.
Reference: [56] <author> J. S. Toor and R. Viskanta. </author> <title> A numerical experiment of radiant heat interchange by the Monte Carlo method. </title> <journal> International Journal of Heat and Mass Transfer, </journal> <volume> 11 </volume> <pages> 883-897, </pages> <year> 1968. </year>
Reference-contexts: This energy packet will bounce around the environment until it is depleted to a point where truncation is used. This basic energy packet tracing technique has been used in Heat Transfer <ref> [21, 13, 56] </ref>, Illumination Engineering [55], and Physics [53, 23]. This method, which I call reflection simulation (see Figure 2), is problematic in that each reflection is followed by a ray intersection test to find the next surface hit.
Reference: [57] <author> John R. Wallace, Michael F. Cohen, and Donald P. Greenberg. </author> <title> A two-pass solution to the rendering equation: a synthesis of ray tracing and radiosity methods. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 311-320, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle>
Reference-contexts: Some of the simulation techniques discussed earlier can be extended to non-diffuse reflection types. The most important application is to scenes that include specular surfaces, but glossy surfaces are sometimes desirable too. The simplest method of including specular reflection in a radiosity calculation is the image method <ref> [57, 40] </ref>. In the image method, a specular surface is replaced by a hole into a virtual environment. This method works only for planar mirrors, but performs very well for environments that have one important specular surface like a mirror or highly polished floor. <p> Generate a radiosity solution and use only for indirect lighting. Use ray tracing for direct lighting. 3. Generate a radiosity solution on a low resolution environment and use this in the viewing phase. In method 1 the ray tracing is really just to accurately capture specular effects <ref> [57] </ref> and the radiosity phase my or may not include specular transport [32, 52] or directional diffuse transport [41, 47, 51]. Any problems with the meshing in high gradient areas will be very obvious in method 1, so some form of discontinuity meshing should be used [31].
Reference: [58] <author> Changyaw Wang. </author> <title> Physically correct direct lighting for distribution ray tracing. </title> <editor> In David Kirk, editor, </editor> <title> Graphics Gems 3. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1992. </year>
Reference-contexts: Instead, many researchers [12, 25] sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 This can be done for triangular luminaires [4], and for spherical luminaires <ref> [27, 58] </ref>. If Equation 15 is used to choose points on the luminaire, then radiance can be estimated to be: where ! is the total solid angle subtended by the luminaire as seen by x.
Reference: [59] <author> Gregory J. Ward. </author> <title> The RADIANCE lighting simulation and rendering system. </title> <journal> Computer Graphics, </journal> <volume> 28(2) </volume> <pages> 459-472, </pages> <month> July </month> <year> 1994. </year> <booktitle> ACM Siggraph '94 Conference Proceedings. </booktitle>
Reference-contexts: In method 2 the fine detail caused by shadows (see Figure 10) is handled in the direct phase and the indirect lighting is handled by some precomputed values [44, 7, 29]. Ward's Radiance program <ref> [60, 59] </ref> is in the second family although the indirect information is calculated on the fly and cached, and the mesh is implicit. <p> However, these benefits come with the price of long execution times. If you need speed, use other techniques, or supplement Monte Carlo techniques with other methods. A good example of this combined strategy is Ward's Radiance program described in the conference procedings <ref> [59] </ref>. Since these notes appeared at SIGGRAPH '94, there has been a lot of work in Monte Carlo rendering. The work on image-based and bidirectional techniques has been nicely surveyed and expanded in Eric Lafortune's dissertation, which is available at the web page: http://www.graphics.cornell.edu/~eric.
Reference: [60] <author> Gregory J. Ward, Francis M. Rubinstein, and Robert D. </author> <title> Clear. A ray tracing solution for diffuse interreflection. </title> <editor> In John Dill, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> volume 22, </volume> <pages> pages 85-92, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: For a diffuse surface, the explicit method is usually used for direct lighting, and the implicit method is used only for indirect lighting <ref> [25, 60, 30] </ref>. To decide which method to use, variance should be analyzed, but the general rule is that specular surfaces should be dealt with using the implicit calculation and diffuse surfaces are treated explicitly. <p> In method 2 the fine detail caused by shadows (see Figure 10) is handled in the direct phase and the indirect lighting is handled by some precomputed values [44, 7, 29]. Ward's Radiance program <ref> [60, 59] </ref> is in the second family although the indirect information is calculated on the fly and cached, and the mesh is implicit.
Reference: [61] <author> Turner Whitted. </author> <title> An improved illumination model for shaded display. </title> <journal> Communications of the ACM, </journal> <volume> 23(6) </volume> <pages> 343-349, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: For a dielectric, ~ can be chosen randomly between reflected and transmitted directions [5], or it can be split into two integrals as is done in a Whitted-style ray tracer <ref> [61] </ref>. For a diffuse surface, ~ will follow a cosine distribution: p ( 0 ) = cos =. When Equation 13 is used, the sampling takes place over all surfaces in the environment. In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces.
Reference: [62] <author> H. Wozniakowski. </author> <title> Average case complexity of multivariate integration. </title> <journal> Bulletin (New Series) of the American Mathematical Society, </journal> <volume> 24(1) </volume> <pages> 185-193, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [64, 62, 33, 42] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and then to turn around and use non-random, but equidistributed samples in an implementation.
Reference: [63] <author> Sidney J. Yakowitz. </author> <title> Computational Probability and Simulation. </title> <publisher> Addison-Wesley, </publisher> <address> New York, N.Y., </address> <year> 1977. </year>
Reference-contexts: This section differs by being geared toward classes of problems that crop up in Computer Graphics. Readers interested in a broader treatment of Monte Carlo techniques should consult one of the classic Monte Carlo texts <ref> [18, 50, 17, 63] </ref>.
Reference: [64] <author> S. K. Zaremba. </author> <title> The mathematical basis of Monte Carlo and quasi-Monte Carlo methods. </title> <journal> SIAM Review, </journal> <volume> 10(3) </volume> <pages> 303-314, </pages> <month> July </month> <year> 1968. </year> <month> 26 </month>
Reference-contexts: This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [64, 62, 33, 42] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and then to turn around and use non-random, but equidistributed samples in an implementation.
References-found: 64

