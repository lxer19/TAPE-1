URL: ftp://rtlinux.cs.nmt.edu/pub/rtlinux/papers/l.ps.gz
Refering-URL: http://luz.cs.nmt.edu/~rtlinux/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Cheap operating systems research and teaching with Linux  
Author: Victor Yodaiken 
Address: New Mexico Tech  
Affiliation: Department of Computer Science  
Abstract: The advent of freely distributed operating systems, compilers, and cross-compilers in combination with the radically lowered costs of hardware has made it possible to carry out quite ambitious research in operating systems with modest resources. These same factors make it possible to teach operating systems in a hands-on fashion that offers students more than a "conceptual" understanding of operating systems. This paper briefly describes two research projects in operating system design and a collection course changes, all making use of the Linux operating system. The first research project is aimed at developing a hard real-time executive to run over Linux. The second project is aimed at design of scientific workstation operating systems and is currently focused on IO and file systems. 
Abstract-found: 1
Intro-found: 1
Reference: [GKP89] <author> Ronald L. Graham, Donald E. Knuth, and Oren Patashnik. </author> <title> Concrete Mathematics. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: More measurements will be ready soon and will be put on the web page. The kernel patch and analysis programs will be also made available over the web page when they are reliable and properly packaged. 3 Concrete Operating Sys tems The mathematics textbook of Graham, Knuth, and Patashnik <ref> [GKP89] </ref> begins with a quotation from J.
Reference: [Ham68] <author> J. M. </author> <title> Hammersley. On the enfeeblement of mathematical skills by `modern mathematics' and by similar soft intellectual trash. </title> <journal> Bulletin of the Institute for Mathematics and its Applications, </journal> <volume> 4(4) </volume> <pages> 68-65, </pages> <month> October </month> <year> 1968. </year>
Reference-contexts: In short we look for deeds not words. <ref> [Ham68] </ref> The same standard should be applied to computer scientists. But the traditional operating systems class does little to prepare students to "solve problems". Instead emphasis is placed on general concepts and on a high-level perspective that ignores the critical implementation details.
Reference: [Her91] <author> M. P. Herlihy. </author> <title> Wait-free synchronization. </title> <journal> ACM Transactions on Programming Languages, </journal> <volume> 13 </volume> <pages> 124-149, </pages> <year> 1991. </year>
Reference: [Jun95] <author> Wang Jun. </author> <title> A linux file system file i/o system calls and buffer cache trace package. </title> <type> Technical report, </type> <institution> New Mexico Tech, </institution> <month> july </month> <year> 1995. </year>
Reference-contexts: The data on file system operation in section 2.2 was collected as part of a Masters project by Wang Jun <ref> [Jun95] </ref>. The scientific workstation project is a collaborative effort with Professor Jeff Putnum of New Mexico Tech and with members of the scientific staff at the National Radio Astronomy Observatory in Socorro, New Mexico. The new version of the software for this project is being implemented by Craig Wu.
Reference: [Koo93] <author> P. Koopman. </author> <title> Perils of the pc cache. Embedded Systems Programming, </title> <type> 6(5), </type> <month> may </month> <year> 1993. </year>
Reference-contexts: Linux itself will not be rewritten. Instead a real-time executive will run Linux as its lowest priority task, preempting it when needed regardless of whether Linux is running in kernel or user mode. Of course, this does not completely solve the problem. As Koopman has illustrated <ref> [Koo93] </ref>, the cache heavy design of modern computer systems can cause unpredicatable behavior on the hardware level. But problems with cache and similar problems with pipelines can be contained with careful programming and relatively lax deadlines. Unpredictable behavior by the OS is a more significant problem.
Reference: [MP89] <author> H. Massalin and C. Pu. </author> <title> Threads and input/output in the synthesis kernel. </title> <booktitle> In Proc. Twelfth ACM Symp. on Operating Sys., Operating Systems Review, </booktitle> <pages> page 191, </pages> <month> December </month> <year> 1989. </year> <booktitle> Published as Proc. Twelfth ACM Symp. on Operating Sys., Operating Systems Review, </booktitle> <volume> volume 23, number 5. </volume>
Reference: [MP91] <author> Henry Massalin and Calton Pu. </author> <title> A lock-free multiprocessor OS kernel. </title> <type> Technical Report CUCS-005-91, </type> <institution> Columbia University, </institution> <year> 1991. </year>
Reference: [RW93] <author> Chris Ruemmler and John Wilkes. </author> <title> UNIX disk access patterns. </title> <booktitle> In USENIX Technical Conference Proceedings, </booktitle> <pages> pages 405-420, </pages> <address> San Diego, CA, </address> <booktitle> Winter 1993. USENIX. </booktitle>
Reference-contexts: Much of the small literature on general file system loads is collected by programs similar to the the UNIX trace command which collect data at the user level. Ruemmler and Wilkes <ref> [RW93] </ref> offer one of the rare exceptions in their paper on data collected by instrumenting the HP-UX operating system (this paper also contains a good summary of the literature).
Reference: [SR88] <author> John A. Stankovic and Krithi Ramam-ritham. </author> <title> Hard Real-Time Systems, </title> <booktitle> volume 819 of IEEE Tutorials. IEEE, </booktitle> <year> 1988. </year> <title> About the author Victor Yodaiken is an assistant professor of Computer Science at the New Mexico Institute of Mining and Technology (New Mexico Tech). </title> <type> Mail: </type> <institution> Department of Computer Science. Speare 4. New Mexico Tech. </institution> <address> Socorro, New Mexico 87801. </address> <note> Email: yodaiken@nmt.edu URL: http://www.cs.nmt.edu/~yodaiken URL for Real-time projects: http://www.nmt.edu/~realtime URL for Scientific OS project: http://www.cs..nmt.edu/~yodaiken/os/os.html 11 </note>
Reference-contexts: For example, the shutdown sequence must be precisely timed and cannot be delayed by lower priority tasks without spectacular and unwelcome results. At first glance, and at second and third glance too, Linux seems a very unlikely answer to the hard real time requirements <ref> [SR88] </ref>. The system is large and slow, and it suffers from the standard inability to preempt kernel mode processes. Redesign of the scheduling algorithm will not help because there are unpredicatable delays caused by the kernel preemption problem, the virtual memory paging system, and the demands of interrupt driven devices.
References-found: 9

