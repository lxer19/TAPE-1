URL: http://www.cs.umn.edu/Users/dept/users/myriad/icpads.ps.Z
Refering-URL: http://www.cs.umn.edu/Users/dept/users/myriad/
Root-URL: http://www.cs.umn.edu
Title: Asynchronous Transaction Commitment in Federated Database Systems  
Author: San-Yih Hwang Ee-Peng Lim Jaideep Srivastava 
Address: Minneapolis, MN 55455  
Affiliation: Department of Computer Science, University of Minnesota  
Abstract: We propose a new (and restricted) model for global transactions which allows asynchronous commitment of subtransactions. Our model requires each global transaction to have a fixed structure with update to the data in at most one database. Based on this transaction model, we present two concurrency control algorithms, namely Asynchronous Site Graph and Asynchronous VirtGlobalSG, which employ asynchronous commitment and achieve global serializability. Compared to other proposed algorithms, our algorithms employ asynchronous commitment so as to increase transaction performance. Furthermore, our algorithms do not put restrictions on transaction data access or local histories. 
Abstract-found: 1
Intro-found: 1
Reference: [BS88] <author> Y. Breitbart and A. Silberschatz. </author> <title> Multi-database update issues. </title> <booktitle> In Proc. of ACM SIGMOD Int'l. Conf. on Management of Data, </booktitle> <year> 1988. </year>
Reference-contexts: non-fully committed ac-transaction in a starvation-free serializ-able history still has the chance to fully commit. 4 Concurrency Control Algorithms with Asynchronous Commitment In this section, we propose two FDBS concurrency control algorithms that employ asynchronous commitment. 4.1 Asynchronous Site Graph Site graph algorithm was proposed by Breitbart and Silberschatz in <ref> [BS88] </ref>. It is a pessimistic approach that assumes potential conflicts exist between every pair of global transactions executed concurrently at the same site. Site Graph algorithm maintains an acyclic bipartite graph called Site Graph.
Reference: [EJK91] <author> A. K. Elmargarmid, Jin Jing, and Won Kim. </author> <title> Global commitment in multi-database systems. </title> <type> Technical Report 91-017, </type> <institution> Dept. Computer Sci., Purdue Univ., IN, </institution> <year> 1991. </year>
Reference-contexts: This restricted transaction model is valid only for certain applications. Besides, serializability cannot be achieved in an FDBS environment where local transactions are beyond the control the FDBS. In <ref> [EJK91] </ref>, asynchronous commitment is analyzed from a theoretical viewpoint, and sufficient conditions are proposed to achieve global serializability in the presence of failures. The transaction model presented requires that the dependency between subtransactions of a global transaction be acyclic.
Reference: [HHS93] <author> S.-Y. Hwang, J. Huang, and J. Srivas-tava. </author> <title> Concurrency control in federated databases: A dynamic approach. </title> <booktitle> In Proc. of the 2nd Int'l Conf. on Information and Knowledge Management, </booktitle> <year> 1993. </year>
Reference-contexts: Theorem 1 The Site Graph with asynchronous commitment always generates starvation-free serializable histories. [HSL93b] 4.2 Asynchronous Virtual Global Serial ization Graph The Virtual Global Serialization Graph (VirtGlob-alSG) was used in DAGSO (i.e., Dynamic Adjustment of Global Serialization Order) to achieve global serializability <ref> [HHS93] </ref>. In this section, we further revise the VirtGlobalSG based approach to make it work with the asynchronous commit protocol. The VirtGlobalSG is a graph that maintains the serialization orders of global transactions on various local executions.
Reference: [HS90] <author> M. Hsu and A. Silberschatz. </author> <title> Unilateral commit: A new paradigm for reliable distributed transaction processing. </title> <booktitle> In Proc. of the 7th Int'l Conf. on Data Engineering, </booktitle> <year> 1990. </year>
Reference-contexts: Although this approach looks appealing, in an FDBS environment it is difficult, both for the systems and the users, to specify a compensating transaction for each global sub-transaction. In <ref> [HS90] </ref>, a unilateral commit paradigm is proposed for distributed transaction management to commit each subtransaction unilaterally. When a sub-transaction is aborted, it is retried until it is committed. A distributed transaction is modeled as a hierarchy of subtransactions, and a subtransaction can not be started until its parent commits.
Reference: [HSL93a] <author> S.-Y. Hwang, J. Srivastava, and J. Li. </author> <title> Transaction recovery in federated autonomous databases. Distributed and Parallel Databases, </title> <note> An Interational Journal, to appear, </note> <year> 1993. </year>
Reference-contexts: This causes a problem since the FDBS transaction management may have decided to commit such a transaction. A number of mechanisms have been proposed to solve this problem (e.g., see <ref> [HSL93a] </ref>). However, each of these proposed solutions imposes restrictions on the type of local site con-currency control mechanisms and the data that local transactions can access. These restrictions affect the autonomy of local databases.
Reference: [HSL93b] <author> S.-Y. Hwang, J. Srivastava, and E.-P. Lim. </author> <title> Asynchronous transaction commitment in federated database systems. </title> <type> Technical Report 93-54, </type> <institution> Dept. Computer Sci., U. of Minnesota, MN, </institution> <year> 1993. </year>
Reference-contexts: A global transaction is allowed to execute only when the induced edges do not cause cycles in the Site Graph. this algorithm. Theorem 1 The Site Graph with asynchronous commitment always generates starvation-free serializable histories. <ref> [HSL93b] </ref> 4.2 Asynchronous Virtual Global Serial ization Graph The Virtual Global Serialization Graph (VirtGlob-alSG) was used in DAGSO (i.e., Dynamic Adjustment of Global Serialization Order) to achieve global serializability [HHS93]. In this section, we further revise the VirtGlobalSG based approach to make it work with the asynchronous commit protocol. <p> All subtransactions serialized before G s at site s have committed. The algorithm for using VirtGlobalSG with the asynchronous commitment protocol is presented in Theorem 2 The VirtGlobalSG with asynchronous commitment always generates a starvation-free seri-alizable history. <ref> [HSL93b] </ref> 5 Conclusions We discussed the issues related to asynchronous commit of global transactions in a federated database system. We have proposed a global transaction model for asynchronous commitment. We require each global transaction to be fixed structured and have at most one update operation.
Reference: [LS93] <author> E.-P. Lim and J. Srivastava. </author> <title> Query optimization/processing in federated database systems. </title> <booktitle> In Proc. of the 2nd Int'l Conf. on Information and Knowledge Management, </booktitle> <year> 1993. </year>
Reference-contexts: Global users issue queries to the FDBS, which operate on the global schema. A global query is decomposed into a set of subqueries, each of which is executed at a local site, based on the query execution plan produced by the FDBS query optimizer <ref> [LS93] </ref>. The execution plan for a global query, represented as a partial order, determines the dependencies among subqueries. To allow asynchronous commit of global transactions under an FDBS environment, we restrict our selves to the following transaction model.
Reference: [MRKS91] <author> S. Mehrotra, R. Rastogi, H. F. Korth, and A. Silberschatz. </author> <title> Non-serializable executions in heterogeneous distributed database systems. </title> <booktitle> In Proc. of the 2nd Int'l Symposium on Databases in Parallel and Distributed Systems, </booktitle> <year> 1991. </year>
Reference-contexts: The sub-transaction dependency graph of G is a directed graph 1 A transaction program is said to be fixed-structured if the execution of the program from any database state results in the same sequence of read and write operations <ref> [MRKS91] </ref>. 2 The term `query' used in this paper has a broader meaning.
Reference: [RELL90] <author> M. Rusinkiewicz, A. Elmagarmid, Y. Leu, and W. Litwin. </author> <title> Extending the transaction model to capture more meaning. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 19(1), </volume> <year> 1990. </year>
Reference-contexts: Furthermore, even if the prepared-to-commit state is supported by the local DBMSs, the execution cost of the 2PC protocol can be high. Thus, some mechanisms have recently been proposed to allow asynchronous commitment and to use compensating transactions to achieve semantic atomicity (e.g., see <ref> [RELL90] </ref>). In these protocols, a subtransaction can commit without synchronizing with other subtrans-actions. If the subtransaction is aborted, the entire global transaction is considered aborted, and a compensating subtransaction is executed for each sub-transaction that has committed earlier.
References-found: 9

