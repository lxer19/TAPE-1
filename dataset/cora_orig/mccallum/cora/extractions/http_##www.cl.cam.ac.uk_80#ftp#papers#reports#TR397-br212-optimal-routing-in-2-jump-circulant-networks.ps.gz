URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/TR397-br212-optimal-routing-in-2-jump-circulant-networks.ps.gz
Refering-URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/
Root-URL: 
Title: Optimal Routing in 2-jump Circulant Networks  
Author: Borut Robic 
Note: Supported by the Partridge Visiting Fellowship and the Slovenian Science Foundation. On leave from  
Date: May 1996  
Address: New Museums Site, Pembroke Street, Cambridge CB2 3QG, UK  Ljubljana, Slovenia.  
Affiliation: University of Cambridge Computer Laboratory Systems Research Group  Jozef Stefan Institute and Faculty of Computer and Information Science, University  
Abstract: An algorithm for routing a message along the shortest path between a pair of processors in 2-jump circulant (undirected double fixed step) networks is given. The algorithm requires fi(d) time for preprocessing, and ` = O(d) routing steps, where ` is the distance between the processors and d is the diameter of the network. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.-C. Bermond, F. Comellas, D.F.Hsu. </author> <title> Distributed loop computer networks: A survey, </title> <journal> J. Parallel Distr. Comput. </journal> <volume> 24, pp.2-10, </volume> <year> 1995. </year>
Reference-contexts: to each vertex u: two short edges connecting it to vertices u h 1 (mod n), and two long edges connecting it to vertices u h 2 (mod n). 2-jump circulant graphs are special cases of circulant graphs which are in turn abstractions of undirected multiple fixed step computer networks <ref> [1] </ref> (with processors and communication links represented by vertices and edges, resp.). <p> We call a routing algorithm optimal if its worst-case time complexity is O (d). In view of this, we state the following problem. Problem. Find an optimal routing algorithm for 2-jump circulant graphs. Recently, much attention has been payed to double fixed step digraphs (known as double loop graphs) <ref> [1, 2, 3, 4] </ref>, which are directed 2-jump circulant graphs, i.e. each vertex u has two outgoing arcs u ! u + h 1 (mod n) and u ! u + h 2 (mod n), and two incoming arcs u h 1 (mod n) ! u and u h 2 (mod <p> We are not aware of any optimal routing algorithm for 2-jump circulant graphs though several remarkable results on circulant graphs have recently appeared <ref> [1] </ref>. In particular, we will make use of the O (log n) time algorithm for computing the diameter of a 2-jump circulant graph [7]. <p> Step D also takes O (log n) time [7]. Loop F is entered 4d = fi (d) times (Theorem 3) while the body G..M takes O (1) time (Theorem 2). Hence, the overall time complexity is O (log n) + fi (d). Since d = ( p n) <ref> [1, 7] </ref>, the first term is absorbed by the second one. Compute (a; b) has (worst-case) time complexity fi (d). 5 5 Improved algorithm C ompute (a; b) In this section we describe an improvement of the above algorithm that is based on two observations.
Reference: [2] <author> Y. Cheng, F.K. Hwang. </author> <title> Diameters of weighted double looop networks. </title> <editor> J. </editor> <booktitle> Algorithms 9, </booktitle> <address> pp.401-410, </address> <year> 1988. </year>
Reference-contexts: We call a routing algorithm optimal if its worst-case time complexity is O (d). In view of this, we state the following problem. Problem. Find an optimal routing algorithm for 2-jump circulant graphs. Recently, much attention has been payed to double fixed step digraphs (known as double loop graphs) <ref> [1, 2, 3, 4] </ref>, which are directed 2-jump circulant graphs, i.e. each vertex u has two outgoing arcs u ! u + h 1 (mod n) and u ! u + h 2 (mod n), and two incoming arcs u h 1 (mod n) ! u and u h 2 (mod
Reference: [3] <editor> D.-Z. Du, D.F.Hsu (Eds.) </editor> <title> Combinatorial network theory, </title> <publisher> Kluwer Academic Publ., </publisher> <year> 1996. </year>
Reference-contexts: We call a routing algorithm optimal if its worst-case time complexity is O (d). In view of this, we state the following problem. Problem. Find an optimal routing algorithm for 2-jump circulant graphs. Recently, much attention has been payed to double fixed step digraphs (known as double loop graphs) <ref> [1, 2, 3, 4] </ref>, which are directed 2-jump circulant graphs, i.e. each vertex u has two outgoing arcs u ! u + h 1 (mod n) and u ! u + h 2 (mod n), and two incoming arcs u h 1 (mod n) ! u and u h 2 (mod
Reference: [4] <author> M.A. Fiol,, J.L.A. Yebra, I. Alegre, M. Valero. </author> <title> A discrete optimization problem in local networks and data alignment, </title> <journal> IEEE Trans. Comput. </journal> <volume> C-36, pp.702-713, </volume> <year> 1987. </year>
Reference-contexts: We will therefore assume that G (n; h 1 ; h 2 ) is connected, i.e. there is a path between each pair of vertices, which is exactly when gcd (h 1 ; h 2 ; n) = 1 <ref> [4] </ref>. An algorithm is said to be routing algorithm (also referred to as a two-terminal routing algorithm) if, given a pair of vertices (i.e. processors), it routes a message from the source to the destination vertex. <p> We call a routing algorithm optimal if its worst-case time complexity is O (d). In view of this, we state the following problem. Problem. Find an optimal routing algorithm for 2-jump circulant graphs. Recently, much attention has been payed to double fixed step digraphs (known as double loop graphs) <ref> [1, 2, 3, 4] </ref>, which are directed 2-jump circulant graphs, i.e. each vertex u has two outgoing arcs u ! u + h 1 (mod n) and u ! u + h 2 (mod n), and two incoming arcs u h 1 (mod n) ! u and u h 2 (mod
Reference: [5] <author> D.E. Knuth. </author> <booktitle> The art of computer programming Vol. 2: Seminumerical algorithms, </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1969. </year>
Reference-contexts: X k = p h w + kn : (5) Note that the solution (p; q) of (4) is independent of k, so it may be computed only once. (Extended Eucliud algorithm <ref> [5, p.325] </ref> finds (p; q) in O (log n) time.) Knowing (X k ; Y k ) we could systematically search the solutions (3) at t = 0; 1; 2; : : : for the one minimizing (2), i.e. for the solution (x k ; y k ) (though the termination <p> Steps A..C can be performed in O (log n) time <ref> [5] </ref>. Step D also takes O (log n) time [7]. Loop F is entered 4d = fi (d) times (Theorem 3) while the body G..M takes O (1) time (Theorem 2). Hence, the overall time complexity is O (log n) + fi (d).
Reference: [6] <author> B.M. Stewart. </author> <title> Theory of numbers. </title> <booktitle> The McMillan, </booktitle> <year> 1964. </year>
Reference-contexts: Theorem 1. Equation (DE k ) is solvable in Z 2 iff hnw + kn: Proof. See <ref> [6, p.96] </ref> qed. 3.2 Answer to B. Assume that (DE k ) is solvable in Z 2 . According to [6, p.96], integer solutions of (DE k ) are exactly the pairs (x k (t); y k (t)), t 2 Z, where x k (t) = X k + h 2 <p> Theorem 1. Equation (DE k ) is solvable in Z 2 iff hnw + kn: Proof. See <ref> [6, p.96] </ref> qed. 3.2 Answer to B. Assume that (DE k ) is solvable in Z 2 . According to [6, p.96], integer solutions of (DE k ) are exactly the pairs (x k (t); y k (t)), t 2 Z, where x k (t) = X k + h 2 t and y k (t) = Y k h 1 t: (3) We find a basic solution (X k ; <p> Division by h yields X k h 0 0 2 = W k , where W k = w+kn h . 0 0 2 ) = 1, so the equation ph 1 + qh 2 = 1 (4) admits an integer solution <ref> [6, p.37] </ref>, say (p; q) 2 Z 2 . Multiplying (4) by W k yields pW k h 0 qW k h 2 = W k ; which in turn reveals that X k = pW k and Y k = qW k , i.e.
Reference: [7] <author> J. Zerovnik, T. Pisanski. </author> <title> Computing the diameter in multiple-loop networks. </title> <editor> J. </editor> <booktitle> Algorithms 14, </booktitle> <address> pp.226-243, </address> <year> 1993. </year> <month> 7 </month>
Reference-contexts: We are not aware of any optimal routing algorithm for 2-jump circulant graphs though several remarkable results on circulant graphs have recently appeared [1]. In particular, we will make use of the O (log n) time algorithm for computing the diameter of a 2-jump circulant graph <ref> [7] </ref>. In what follows we describe an optimal oblivious routing algorithm for 2-jump circulant graphs. 2 2 Routing algorithm A move along a short edge will be referred to as a short hop. Likewise, a long hop is a move along a long edge. <p> Steps A..C can be performed in O (log n) time [5]. Step D also takes O (log n) time <ref> [7] </ref>. Loop F is entered 4d = fi (d) times (Theorem 3) while the body G..M takes O (1) time (Theorem 2). Hence, the overall time complexity is O (log n) + fi (d). <p> Step D also takes O (log n) time [7]. Loop F is entered 4d = fi (d) times (Theorem 3) while the body G..M takes O (1) time (Theorem 2). Hence, the overall time complexity is O (log n) + fi (d). Since d = ( p n) <ref> [1, 7] </ref>, the first term is absorbed by the second one. Compute (a; b) has (worst-case) time complexity fi (d). 5 5 Improved algorithm C ompute (a; b) In this section we describe an improvement of the above algorithm that is based on two observations.
References-found: 7

