URL: ftp://ftp.isi.edu/pub/cengiz/publications/PhD:ICNP.ps.gz
Refering-URL: http://www.isi.edu/~cengiz/publications/
Root-URL: http://www.isi.edu
Email: fca,shankarg@cs.umd.edu  
Title: An Approach to Hierarchical Inter-Domain Routing with On-Demand ToS and Policy Resolution  
Author: Cengiz Alaettinoglu, A. Udaya Shankar 
Address: College Park, Maryland 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: We present an inter-domain routing protocol based on superdomains, which always finds a valid path if one exists. Both strong and weak constraints are maintained for each visible superdomain. If the strong constraints of superdomains on a path are satisfied, then the path is valid. If the weak constraints of a superdomain are satisfied but the strong constraints are not, the source uses a query protocol to obtain a more detailed "internal" view of the superdomain, and searches again for a valid path. Our protocol handles topology changes, including node/link failures that partition superdomains. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Hierarchical Inter-Domain Routing Protocol with On-Demand ToS and Poicy Resolution. </title> <type> Technical Report UMIACS-TR-93-18, </type> <institution> CS-TR-3038, Department of Computer Science, University of Maryland, College Park, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: Section 6 shows how to modify the results of Sections 2-5 to handle topology changes including those that cause partitions. In Section 7, we give concluding remarks. For precise specification of the protocols in this paper, the reader is referred to <ref> [1] </ref>. 2 Superdomain-level Edges The superdomain hierarchy defines the following parent-child relationship: a level i super domain is the parent of each level i 1 superdomain it contains. Note that top level superdomains have no parents, and level 1 superdomains, which are just domains, have no children.
Reference: [2] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Viewserver Hierarchy: A Scalable and Adaptive Inter-Domain Routing Protocol. </title> <type> Technical Report UMIACS-TR-93-13, </type> <institution> CS-TR-3033, Department of Computer Science, University of Maryland, College Park, </institution> <month> February </month> <year> 1993. </year>
Reference-contexts: In our opinion, solving this problem without loosing scalability requires a query mechanism to obtain ToS and policy details wherever it is needed to find a valid path. In <ref> [2] </ref>, we introduced a new viewserver hierarchy. Here, special routers called viewservers maintain the view of domains in a surrounding precinct.
Reference: [3] <author> A. Bar-Noy and M. Gopal. </author> <title> Topology Distribution Cost vs. Efficient Routing in Large Networks. </title> <booktitle> In Proc. ACM SIGCOMM '90, </booktitle> <pages> pages 242-252, </pages> <address> Philadelphia, Pennsylvania, </address> <month> September </month> <year> 1990. </year>
Reference-contexts: The cost equals 1 if all links from U to V are down. Each cost value of an sd-edge (U; V ) can be derived from the cost values of the links in U and links from U to V <ref> [3] </ref>. For example, if U and V are domains, the cost of the d-edge (U; V ) can be calculated as the maximum/average cost of the routes from any router in U to the first router in V .
Reference: [4] <author> L. Breslau and D. Estrin. </author> <title> Design of Inter-Administrative Domain Routing Protocols. </title> <booktitle> In Proc. ACM SIGCOMM '90, </booktitle> <pages> pages 231-241, </pages> <address> Philadelphia, Pennsylvania, </address> <month> September </month> <year> 1990. </year>
Reference-contexts: Across all domains, an inter-domain routing pro-tocol is executed that provides routes between source and destination nodes in different domains. This pro tocol must satisfy various constraints: * It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 7, 4] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain U specify how other domains can use the resources of U (e.g. $0.01 per packet, no traffic from domain V ). <p> Transit policies of a domain are public (i.e. available to other domains), whereas source policies are usually private. * An inter-domain routing protocol must also satisfy ToS constraints of applications. To do this, it must keep track of the types of services offered by each domain <ref> [4] </ref>. * An inter-domain routing protocol must handle arbitrary interconnection of networks [7] (e.g. we do not want to hand-configure special routes as "back doors"). * Inter-domain routing protocols must scale up to very large internetworks, i.e. with a very large number of domains. <p> A straight-forward approach to inter-domain routing is domain-level source routing with link-state approach <ref> [6, 4] </ref>. In this approach, each router 2 maintains a domain-level view of the internetwork, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. Policy and ToS information is attached to the vertices and the edges of the view.
Reference: [5] <author> J. N. Chiappa. </author> <title> A New IP Routing and Addressing Architecture. Big-Internet mailing list., </title> <note> 1992. Available by anonymous ftp from munnari.oz.au:big-internet/list-archive. </note>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed <ref> [10, 12, 5] </ref>. Here, domains are grouped hierarchically into superdomains: each domain is a level 1 su-perdomain, "close" level 1 superdomains are grouped into level 2 superdomains, "close" level 2 superdo-mains are grouped into level 3 superdomains, and so on (see Figure 2). <p> We use a link-state view update protocol to handle topology changes including failures that partition superdomains at any level. Several approaches have been proposed based on the superdomain hierarchy <ref> [12, 10, 8, 5, 14] </ref> and landmark hierarchy [13]. In each case, the approach either suffers from the loss of ToS and policy information (and hence not find a valid path which exists), or it is still in a preliminary stage. <p> Note that merged views need not be stored in fast expensive memory, since they are not used in packet forwarding. The cost of merging views and forwarding packets over superdomain-level source routes can be amortized over packets by using connection-oriented routing (other approaches <ref> [6, 10, 5, 8] </ref> have similar cost). In this paper, we have ignored how source policy constraints of a domain are adapted to the super-domain hierarchy.
Reference: [6] <author> D.D. Clark. </author> <title> Policy routing in Internet protocols. Request for Comment RFC-1102, </title> <institution> Network Information Center, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing pro-tocol is executed that provides routes between source and destination nodes in different domains. This pro tocol must satisfy various constraints: * It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 7, 4] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain U specify how other domains can use the resources of U (e.g. $0.01 per packet, no traffic from domain V ). <p> A straight-forward approach to inter-domain routing is domain-level source routing with link-state approach <ref> [6, 4] </ref>. In this approach, each router 2 maintains a domain-level view of the internetwork, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. Policy and ToS information is attached to the vertices and the edges of the view. <p> Note that merged views need not be stored in fast expensive memory, since they are not used in packet forwarding. The cost of merging views and forwarding packets over superdomain-level source routes can be amortized over packets by using connection-oriented routing (other approaches <ref> [6, 10, 5, 8] </ref> have similar cost). In this paper, we have ignored how source policy constraints of a domain are adapted to the super-domain hierarchy.
Reference: [7] <author> D. Estrin. </author> <title> Policy requirements for inter Administrative Domain routing. Request for Comment RFC-1125, </title> <institution> Network Information Center, </institution> <month> November </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing pro-tocol is executed that provides routes between source and destination nodes in different domains. This pro tocol must satisfy various constraints: * It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 7, 4] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain U specify how other domains can use the resources of U (e.g. $0.01 per packet, no traffic from domain V ). <p> To do this, it must keep track of the types of services offered by each domain [4]. * An inter-domain routing protocol must handle arbitrary interconnection of networks <ref> [7] </ref> (e.g. we do not want to hand-configure special routes as "back doors"). * Inter-domain routing protocols must scale up to very large internetworks, i.e. with a very large number of domains.
Reference: [8] <author> D. Estrin, Y. Rekhter, and S. Hotz. </author> <title> Scalable Inter-Domain Routing Architecture. </title> <booktitle> In Proc. ACM SIG-COMM '92, </booktitle> <pages> pages 40-52, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: We use a link-state view update protocol to handle topology changes including failures that partition superdomains at any level. Several approaches have been proposed based on the superdomain hierarchy <ref> [12, 10, 8, 5, 14] </ref> and landmark hierarchy [13]. In each case, the approach either suffers from the loss of ToS and policy information (and hence not find a valid path which exists), or it is still in a preliminary stage. <p> Note that merged views need not be stored in fast expensive memory, since they are not used in packet forwarding. The cost of merging views and forwarding packets over superdomain-level source routes can be amortized over packets by using connection-oriented routing (other approaches <ref> [6, 10, 5, 8] </ref> have similar cost). In this paper, we have ignored how source policy constraints of a domain are adapted to the super-domain hierarchy.
Reference: [9] <author> L. Kleinrock and F. Kamoun. </author> <title> Hierarchical Routing for Large Networks. </title> <journal> Computer Networks and ISDN Systems, </journal> (1):155-174, 1977. 
Reference-contexts: Our protocol preserves the logarithmic space complexity of the classical area hierarchy approach <ref> [9] </ref>, with the exception of merging views, where the storage requirement may be more than logarithmic in the worst case. Heuristics to choose candidate superdo-mains to query and to choose superdomains to delete from merged views should be investigated.
Reference: [10] <author> M. Lepp and M. Steenstrup. </author> <title> An Architecture for Inter-Domain Policy Routing. Internet Draft. Available from the authors., </title> <month> June </month> <year> 1992. </year>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed <ref> [10, 12, 5] </ref>. Here, domains are grouped hierarchically into superdomains: each domain is a level 1 su-perdomain, "close" level 1 superdomains are grouped into level 2 superdomains, "close" level 2 superdo-mains are grouped into level 3 superdomains, and so on (see Figure 2). <p> If there are children superdomains with different (possibly contradictory) constraints in a superdomain, then there is no good way of deriving the ToS and policy constraints of the superdomain. The usual techniques <ref> [10] </ref> are to obtain either a strong set of constraints or a weak set of constraints 3 . If strong (weak) constraints are used for policies, the superdo-main is assumed to enforce a policy constraint if that policy constraint is enforced by some (all) of its children. <p> If the weak version is used, G allows transit traffic 3 "strong" and "weak" are referred to as "union" and "intersection" in <ref> [10] </ref> from d1, forcing d19 to allow transit traffic from d1. Another problem with superdomains is that even if a valid superdomain-level path is determined for an application, it is not straight-forward to implement that in terms of superdomain-level source routes. <p> We use a link-state view update protocol to handle topology changes including failures that partition superdomains at any level. Several approaches have been proposed based on the superdomain hierarchy <ref> [12, 10, 8, 5, 14] </ref> and landmark hierarchy [13]. In each case, the approach either suffers from the loss of ToS and policy information (and hence not find a valid path which exists), or it is still in a preliminary stage. <p> Note that merged views need not be stored in fast expensive memory, since they are not used in packet forwarding. The cost of merging views and forwarding packets over superdomain-level source routes can be amortized over packets by using connection-oriented routing (other approaches <ref> [6, 10, 5, 8] </ref> have similar cost). In this paper, we have ignored how source policy constraints of a domain are adapted to the super-domain hierarchy.
Reference: [11] <author> R. Perlman. </author> <title> Hierarchical Networks and Subnetwork Partition Problem. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 9 </volume> <pages> 297-303, </pages> <year> 1985. </year>
Reference-contexts: Practically this means that processing, memory and communication requirements should be much less than linear in the number of domains. * Inter-domain routing protocols must automatically adapt to link cost changes and node/link failures and repairs, including failures that partition do mains <ref> [11] </ref>. A straight-forward approach to inter-domain routing is domain-level source routing with link-state approach [6, 4]. In this approach, each router 2 maintains a domain-level view of the internetwork, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains.
Reference: [12] <author> Y. Rekhter. </author> <title> Inter-Domain Routing Protocol (IDRP). Available from the author., 1992. </title> <type> T.J. </type> <institution> Watson Research Center, IBM Corp. </institution>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed <ref> [10, 12, 5] </ref>. Here, domains are grouped hierarchically into superdomains: each domain is a level 1 su-perdomain, "close" level 1 superdomains are grouped into level 2 superdomains, "close" level 2 superdo-mains are grouped into level 3 superdomains, and so on (see Figure 2). <p> We use a link-state view update protocol to handle topology changes including failures that partition superdomains at any level. Several approaches have been proposed based on the superdomain hierarchy <ref> [12, 10, 8, 5, 14] </ref> and landmark hierarchy [13]. In each case, the approach either suffers from the loss of ToS and policy information (and hence not find a valid path which exists), or it is still in a preliminary stage.
Reference: [13] <author> P. F. Tsuchiya. </author> <title> The Landmark Hierarchy:A New Hierarchy For Routing In Very Large Networks. </title> <booktitle> In Proc. ACM SIGCOMM '88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: We use a link-state view update protocol to handle topology changes including failures that partition superdomains at any level. Several approaches have been proposed based on the superdomain hierarchy [12, 10, 8, 5, 14] and landmark hierarchy <ref> [13] </ref>. In each case, the approach either suffers from the loss of ToS and policy information (and hence not find a valid path which exists), or it is still in a preliminary stage.
Reference: [14] <author> P. F. Tsuchiya. </author> <title> Efficient and Robust Policy Routing Using Multiple Hierarchical Addresses. </title> <booktitle> In Proc. ACM SIGCOMM '91, </booktitle> <pages> pages 53-65, </pages> <address> Zurich, Switzer-land, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: We use a link-state view update protocol to handle topology changes including failures that partition superdomains at any level. Several approaches have been proposed based on the superdomain hierarchy <ref> [12, 10, 8, 5, 14] </ref> and landmark hierarchy [13]. In each case, the approach either suffers from the loss of ToS and policy information (and hence not find a valid path which exists), or it is still in a preliminary stage.
References-found: 14

