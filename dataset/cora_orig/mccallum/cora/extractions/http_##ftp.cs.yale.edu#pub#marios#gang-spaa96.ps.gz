URL: http://ftp.cs.yale.edu/pub/marios/gang-spaa96.ps.gz
Refering-URL: http://ftp.cs.yale.edu/pub/marios/
Root-URL: http://www.cs.yale.edu
Email: mss@watson.ibm.com  fwang-fang,papaefthymiou-mariosg@cs.yale.edu  
Title: An Analysis of Gang Scheduling for Multiprogrammed Parallel Computing Environments  
Author: Mark S. Squillante Fang Wang, Marios Papaefthymiou 
Address: Yorktown Heights, NY 10598  New Haven, CT 06520-8285  
Affiliation: IBM Research Division T.J. Watson Research Center  Computer Science Department Yale University  
Abstract: Gang scheduling is a resource management scheme for parallel and distributed systems that combines time-sharing with space-sharing to ensure short response times for interactive tasks and high overall system throughput. In this paper, we present and analyze a queueing theoretic model for a general gang scheduling scheme that forms the basis of a multiprogramming environment currently being developed for IBM's SP2 parallel system and for clusters of workstations. Our model and analysis can be used to tune our scheduler in order to maximize its performance on each hardware platform. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <year> 1974. </year>
Reference-contexts: and Ergodicity The irreducibility of the Markov chain fX p (t); t 0g can be verified for any specific instance of our model by determining whether the first P=g (p) + 2 levels of the state space (the boundary plus the first level of the repeating portion) are strongly connected <ref> [1] </ref>.
Reference: [2] <author> S. Asmussen, O. Nerman, and M. Olsson. </author> <title> Fitting phase type distributions via the EM algorithm. </title> <type> Technical Report 1994:23, </type> <institution> Department of Mathematics, Chalmers University of Technology, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: Moreover, a considerable body of research has examined the fitting of phase-type distributions to empirical data, and a number of algorithms have been developed for doing so <ref> [2, 5, 14, 15] </ref>. It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models [20, 21, 25].
Reference: [3] <author> V. D. Cung et al. </author> <title> Concurrent data structures and load balancing strategies for parallel branch-and-bound/a* algorithms. </title> <booktitle> In The Third DIMACS International Algorithm Implementation Challenge on Parallel Algorithms, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: There are situations, however, in which jobs may not need all the available processors in the system. It has been argued, for example, that performance does not increase as the number of processors dedicated to a job increases past a certain limit <ref> [3, 13] </ref>. Thus, simply allocating the total number of available processors to a job may underutilize a system's resources. To address this problem, several systems employ space-sharing in which jobs share the system resources at any given time instead of each taking up all processors.
Reference: [4] <author> E. de Souza e Silva, H. R. Gail, and R. R. Muntz. </author> <title> Polling systems with server timeouts and their application to token passing networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(5) </volume> <pages> 560-575, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: The theoretical gang scheduling problem we consider is related to problems that have been studied for many years in the area of polling/vacation and communication systems. There is an extensive body of literature on the analysis of these systems (e.g., see <ref> [4, 23] </ref> and the references therein), but these solutions and methods are not sufficiently general to directly address the properties of our gang scheduling problem.
Reference: [5] <author> M. J. Faddy. </author> <title> Fitting structured phase-type distributions. </title> <type> Technical report, </type> <institution> Department of Mathematics, University of Queensland, Australia, </institution> <month> April </month> <year> 1994. </year> <title> To appear, Applied Stochastic Models and Data Analysis. </title>
Reference-contexts: Moreover, a considerable body of research has examined the fitting of phase-type distributions to empirical data, and a number of algorithms have been developed for doing so <ref> [2, 5, 14, 15] </ref>. It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models [20, 21, 25].
Reference: [6] <author> D. G. Feitelson and L. Rudolph. </author> <title> Distributed hierarchical control for parallel processing. </title> <booktitle> Computer, </booktitle> <month> May </month> <year> 1990. </year>
Reference-contexts: Space-sharing helps decrease resource fragmentation and increase throughput. Studies have also shown that space-sharing can yield higher throughput than time-sharing in some environments [24, 28]. Gang scheduling is a mixed scheduling scheme that combines time-sharing with space-sharing <ref> [6, 7, 8] </ref>. Under gang scheduling, jobs with the same resource requirements are collected in groups. Each group is assigned to a partition of the system for a specific amount of time.
Reference: [7] <author> D. G. Feitelson and L. Rudolph. </author> <title> Mapping and scheduling in a shared parallel environment using distributed hierarchical control. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <volume> volume I, </volume> <pages> pages 1-8, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Space-sharing helps decrease resource fragmentation and increase throughput. Studies have also shown that space-sharing can yield higher throughput than time-sharing in some environments [24, 28]. Gang scheduling is a mixed scheduling scheme that combines time-sharing with space-sharing <ref> [6, 7, 8] </ref>. Under gang scheduling, jobs with the same resource requirements are collected in groups. Each group is assigned to a partition of the system for a specific amount of time.
Reference: [8] <author> D. G. Feitelson and L. Rudolph. </author> <title> Gang scheduling performance benefits for fine-grain synchronization. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 16(4) </volume> <pages> 306-318, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: Space-sharing helps decrease resource fragmentation and increase throughput. Studies have also shown that space-sharing can yield higher throughput than time-sharing in some environments [24, 28]. Gang scheduling is a mixed scheduling scheme that combines time-sharing with space-sharing <ref> [6, 7, 8] </ref>. Under gang scheduling, jobs with the same resource requirements are collected in groups. Each group is assigned to a partition of the system for a specific amount of time.
Reference: [9] <author> W. Feller. </author> <title> An Introduction to Probability Theory and Its Applications, volume I. </title> <publisher> John Wiley and Sons, </publisher> <address> Third edition, </address> <year> 1968. </year>
Reference-contexts: This section briefly develops a series of technical results that provide the background for our approach. Additional technical details can be found in numerous excellent texts, including <ref> [9, 11, 12, 17, 19, 27] </ref>. Throughout this paper we use IR + and IR + to denote the set of non-negative and positive real numbers, respectively.
Reference: [10] <author> F. R. Gantmacher. </author> <title> The Theory of Matrices. </title> <publisher> Chelsea, </publisher> <year> 1959. </year>
Reference-contexts: Since the non-diagonal elements of a generator matrix are non-negative and the diagonal element of each row is the negative sum of the non-diagonal elements on that row <ref> [10] </ref>, we have that Se + S = 0. The distribution of the time until absorption (into state m + 1) in this Markov chain defines an order m phase-type distribution with parameters (ff; S) whose mean is given by ffS 1 e.
Reference: [11] <author> S. Karlin and H. M. Taylor. </author> <title> A First Course in Stochastic Processes. </title> <publisher> Academic Press, </publisher> <address> Second edition, </address> <year> 1975. </year>
Reference-contexts: This section briefly develops a series of technical results that provide the background for our approach. Additional technical details can be found in numerous excellent texts, including <ref> [9, 11, 12, 17, 19, 27] </ref>. Throughout this paper we use IR + and IR + to denote the set of non-negative and positive real numbers, respectively.
Reference: [12] <author> L. Kleinrock. </author> <title> Queueing Systems Volume I: Theory. </title> <publisher> John Wiley and Sons, </publisher> <year> 1975. </year>
Reference-contexts: This section briefly develops a series of technical results that provide the background for our approach. Additional technical details can be found in numerous excellent texts, including <ref> [9, 11, 12, 17, 19, 27] </ref>. Throughout this paper we use IR + and IR + to denote the set of non-negative and positive real numbers, respectively. <p> We use the notation PH (ff; S) to refer to such a phase-type distribution. As a simple example, consider a K-stage Erlang distribution with mean 1= <ref> [12] </ref>. This is easily shown to be a very simple phase-type distribution with S = 6 4 0 K K : : : : : : . . . 0 : : : K 7 5 ; T Our mathematical analysis exploits the form of the convolution of phase-type distributions. <p> Multiple job arrivals, multiple job departures, and both an arrival and a departure within a small time interval h are all assumed to occur with probability of order o (h) <ref> [12] </ref>. <p> our assumption of phase-type distributions, this leads to a particular class of Markov chains called quasi-birth-death processes [18] (although our mathematical analysis is easily extended to handle batch arrivals and/or departures as long as the batch sizes are bounded), which is a generalization of birth-death processes from classical queueing theory <ref> [12] </ref>. 3.1 Gang Scheduling Policy The above system employs a general gang scheduling policy under which for each job class p, up to P=g (p) jobs space-share all of the P system processors.
Reference: [13] <author> A. Krishnamurthy et al. </author> <title> Connected components on distributed memory machines. </title> <booktitle> In The Third DIMACS International Algorithm Implementation Challenge on Parallel Algorithms, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: There are situations, however, in which jobs may not need all the available processors in the system. It has been argued, for example, that performance does not increase as the number of processors dedicated to a job increases past a certain limit <ref> [3, 13] </ref>. Thus, simply allocating the total number of available processors to a job may underutilize a system's resources. To address this problem, several systems employ space-sharing in which jobs share the system resources at any given time instead of each taking up all processors.
Reference: [14] <author> A. Lang. </author> <title> Parameter estimation for phase-type distributions, part I: Fundamentals and existing methods. </title> <type> Technical Report 159, </type> <institution> Department of Statistics, Ore-gon State University, </institution> <year> 1994. </year>
Reference-contexts: Moreover, a considerable body of research has examined the fitting of phase-type distributions to empirical data, and a number of algorithms have been developed for doing so <ref> [2, 5, 14, 15] </ref>. It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models [20, 21, 25].
Reference: [15] <author> A. Lang and J. L. Arthur. </author> <title> Parameter estimation for phase-type distributions, part II: Computational evaluation. </title> <type> Technical Report 160, </type> <institution> Department of Statistics, Oregon State University, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: Moreover, a considerable body of research has examined the fitting of phase-type distributions to empirical data, and a number of algorithms have been developed for doing so <ref> [2, 5, 14, 15] </ref>. It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models [20, 21, 25].
Reference: [16] <author> J. D. C. Little. </author> <title> A proof of the queuing formula L = W . Operations Research, </title> <type> 9, </type> <year> 1961. </year>
Reference-contexts: X T k =n; (1) the average customer arrival rate as = lim fl (t)=t; (2) and the average number of customers in the system N as N = lim Z t N (s)=t ds: (3) We then have the following important relationship between these performance measures, called Little's result <ref> [16] </ref>.
Reference: [17] <author> R. Nelson. </author> <title> Probability, Stochastic Processes, and Queueing Theory The Mathematics of Computer Performance Modeling. </title> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: This section briefly develops a series of technical results that provide the background for our approach. Additional technical details can be found in numerous excellent texts, including <ref> [9, 11, 12, 17, 19, 27] </ref>. Throughout this paper we use IR + and IR + to denote the set of non-negative and positive real numbers, respectively.
Reference: [18] <author> M. F. Neuts. </author> <title> Matrix-Geometric Solutions in Stochastic Models: An Algorithmic Approach. </title> <publisher> The Johns Hopkins University Press, </publisher> <year> 1981. </year>
Reference-contexts: In this paper we exploit a particularly general class of probability distributions called phase-type distributions <ref> [18, 25] </ref>. <p> The following basic result for the convolution of two phase-type distributions can be easily established <ref> [18] </ref>. <p> Multiple job arrivals, multiple job departures, and both an arrival and a departure within a small time interval h are all assumed to occur with probability of order o (h) [12]. Under our assumption of phase-type distributions, this leads to a particular class of Markov chains called quasi-birth-death processes <ref> [18] </ref> (although our mathematical analysis is easily extended to handle batch arrivals and/or departures as long as the batch sizes are bounded), which is a generalization of birth-death processes from classical queueing theory [12]. 3.1 Gang Scheduling Policy The above system employs a general gang scheduling policy under which for each
Reference: [19] <author> S. M. Ross. </author> <title> Stochastic Processes. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: This section briefly develops a series of technical results that provide the background for our approach. Additional technical details can be found in numerous excellent texts, including <ref> [9, 11, 12, 17, 19, 27] </ref>. Throughout this paper we use IR + and IR + to denote the set of non-negative and positive real numbers, respectively.
Reference: [20] <author> R. Schassberger. </author> <title> Insensitivity of steady-state distributions of generalized semi-Markov processes, part I. </title> <journal> The Annals of Probability, </journal> <volume> 5(1) </volume> <pages> 87-99, </pages> <year> 1977. </year>
Reference-contexts: It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models <ref> [20, 21, 25] </ref>. In this section we define the phase-type distributions for our model parameters, and we refer the reader back to Section 2.5 for additional details.
Reference: [21] <author> R. Schassberger. </author> <title> Insensitivity of steady-state distributions of generalized semi-Markov processes, part II. </title> <journal> The Annals of Probability, </journal> <volume> 6(1) </volume> <pages> 85-93, </pages> <year> 1978. </year>
Reference-contexts: It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models <ref> [20, 21, 25] </ref>. In this section we define the phase-type distributions for our model parameters, and we refer the reader back to Section 2.5 for additional details.
Reference: [22] <author> M. S. Squillante. </author> <title> MAGIC: A computer performance modeling tool based on matrix-geometric techniques. </title> <booktitle> In Proceedings of the Fifth International Conference on Modelling Techniques and Tools for Computer Performance Evaluation, </booktitle> <pages> pages 411-425, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Since sp (R p ) &lt; 1 must be satisfied in order for the Markov process to be positive recurrent (see Section 4.4), equation (24) directly follows. The solutions to equations (21) - (24) can be numerically computed in an efficient manner <ref> [22] </ref>. These equations form the solution to our parallel system model from the perspective of class p, 0 p &lt; L, provided that the distributions F p are known.
Reference: [23] <author> H. Takagi. </author> <title> Queueing Analysis A Foundation of Performance Evaluation, volume 1: Vacation and Priority Systems, Part 1. </title> <publisher> North Holland, </publisher> <year> 1991. </year>
Reference-contexts: The theoretical gang scheduling problem we consider is related to problems that have been studied for many years in the area of polling/vacation and communication systems. There is an extensive body of literature on the analysis of these systems (e.g., see <ref> [4, 23] </ref> and the references therein), but these solutions and methods are not sufficiently general to directly address the properties of our gang scheduling problem.
Reference: [24] <author> A. Tucker and A. Gupta. </author> <title> Process control and scheduling issues for multiprogrammed shared-memory multiprocessors. </title> <booktitle> In Proceedings of the Twelfth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 159-166, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: To address this problem, several systems employ space-sharing in which jobs share the system resources at any given time instead of each taking up all processors. Space-sharing helps decrease resource fragmentation and increase throughput. Studies have also shown that space-sharing can yield higher throughput than time-sharing in some environments <ref> [24, 28] </ref>. Gang scheduling is a mixed scheduling scheme that combines time-sharing with space-sharing [6, 7, 8]. Under gang scheduling, jobs with the same resource requirements are collected in groups. Each group is assigned to a partition of the system for a specific amount of time.
Reference: [25] <author> J. Walrand. </author> <title> An Introduction to Queueing Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1988. </year>
Reference-contexts: In this paper we exploit a particularly general class of probability distributions called phase-type distributions <ref> [18, 25] </ref>. <p> It is also well known that some steady-state measures (e.g., mean response time) often depend only upon the first few moments of the parameter distributions (as opposed to their detailed forms) in a general class of probability models <ref> [20, 21, 25] </ref>. In this section we define the phase-type distributions for our model parameters, and we refer the reader back to Section 2.5 for additional details.
Reference: [26] <author> F. Wang, H. Franke, M. Papaefthymiou, P. Pattnaik, L. Rudolph, and M. Squillante. </author> <title> A gang scheduling design for multiprogrammed parallel computing environments. </title> <booktitle> In Proceedings of the 2nd Workshop on Job Scheduling Strategies for Parallel Processing, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: Our model and related analysis is being used to guide the implementation of a gang scheduling scheme for real multiprogrammed parallel systems. In particular, we are currently participating in the development of a multiprogramming environment for IBM's SP2 and for clusters of workstations <ref> [26] </ref>. The scheduling mechanism for these systems is a variant of the basic gang scheduling scheme we analyze in this paper. Previous work on parallel gang scheduling has been empirical and concentrated on systems issues without analyzing the quantitative properties of the systems. <p> We plan to use our model to maximize the performance of gang scheduling in a specific parallel multiprogrammed environment that we are currently developing in collaboration with other researchers <ref> [26] </ref>. The operation of the scheduler in our system is based on the general gang scheduling scheme we presented in this paper. The main deviation of our system implementation from our model is that context switches are not necessarily system-wide.
Reference: [27] <author> R. W. Wolff. </author> <title> Stochastic Modeling and the Theory of Queues. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: This section briefly develops a series of technical results that provide the background for our approach. Additional technical details can be found in numerous excellent texts, including <ref> [9, 11, 12, 17, 19, 27] </ref>. Throughout this paper we use IR + and IR + to denote the set of non-negative and positive real numbers, respectively.
Reference: [28] <author> J. Zahorjan and C. McCann. </author> <title> Processor scheduling in shared memory multiprocessors. </title> <booktitle> In Proceedings of the ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 214-225, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: To address this problem, several systems employ space-sharing in which jobs share the system resources at any given time instead of each taking up all processors. Space-sharing helps decrease resource fragmentation and increase throughput. Studies have also shown that space-sharing can yield higher throughput than time-sharing in some environments <ref> [24, 28] </ref>. Gang scheduling is a mixed scheduling scheme that combines time-sharing with space-sharing [6, 7, 8]. Under gang scheduling, jobs with the same resource requirements are collected in groups. Each group is assigned to a partition of the system for a specific amount of time.
References-found: 28

