URL: http://www.cs.vt.edu/~chitra/docs/96tr-14/96tr-14.ps
Refering-URL: http://www.cs.vt.edu/~chitra/PublicationList.html
Root-URL: http://www.cs.vt.edu
Email: fmathur,abramsg@cs.vt.edu  
Title: Modeling Transient Trace Data  
Author: Anup Mathur Marc Abrams 
Date: October 25, 1996  
Address: VA 24061-0106  
Affiliation: Department of Computer Science Virginia Polytechnic Institute and State University Blacksburg,  
Pubnum: Technical Report TR 96-14  
Abstract: This paper introduces a novel technique to construct an empirical workload model fitting time-varying (transient) trace data. The trace can be a categorical or numerical time-series. We model the trace as a Piecewise Independent stochastic process. To estimate the parameters for our model we first build a Rate Evolution Graph from the trace data. Piecewise linear regression is then used to construct a joint time-dependent probability mass function for the trace data. Two methods are proposed to build a parsimonious model. The modeling approach is demonstrated by the application of our model to twelve traces from the performance analysis domain. 
Abstract-found: 1
Intro-found: 1
Reference: [ADM92] <author> M. Abrams, N. Doraswamy, and A. Mathur. Chitra: </author> <title> Visual analysis of parallel and distributed programs in the time, event, and frequency domain. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 3(6) </volume> <pages> 672-685, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: This paper contains a novel approach for constructing an empirical model for transient trace data containing either numerical or categorical traces. 1.1 Related Work There are many methods in the literature for deriving models from trace, including models of traces of program behavior <ref> [GH93, ADM92] </ref>, modeling network traffic packet-traces [PF94, LTWW94], and modeling traces of compressed video [Gar93, HTL92]. The state of the art is illustrated by Heyman and Lakshman [HL96], who model twelve video traffic traces with a variety of stationary distributions.
Reference: [ARM96] <author> M. Abrams, R. Ribler, and A. Mathur. </author> <title> Two performance tool design issues and chitra's solutions. </title> <booktitle> In SIGMETRICS Symposium on Parallel and Distributed Tools. ACM, </booktitle> <address> Philadelphia, PA, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: For categorical traces, we use the categorical correlation plot <ref> [ARM96] </ref>, which measures the degree of correlation between two traces. To validate our model we measure the categorical correlation between a test case trace and a synthetic trace generated from our model of the test case trace.
Reference: [Ber94] <author> J. Beran. </author> <title> Statistics for Long-Memory Processes. </title> <publisher> Chapman Hall, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Workload models for a system can be built from traces collected by observing a system. Traces (or log files) from several domains, including program behavior traces, contain transient behavior, however, most modeling methods in the literature are based on stationary stochastic process models. Self-similar stochastic processes <ref> [Ber94, LTWW94] </ref> have been successfully used to model trace data previously thought to be non-stationary because they exhibited long range dependence. However, these models do not address modeling traces of transient data. Most trace modeling methods apply only to traces containing numerical data only.
Reference: [BJ76] <author> G. E. P. Box and G. M. Jenkins. </author> <title> TIME SERIES ANALYSIS forecasting and control, Revised Edition. </title> <publisher> Holden-Day, </publisher> <address> Oakland, California, </address> <year> 1976. </year>
Reference-contexts: A trace is a sequence of states that records the behavior of the system over a period of time. Generally a trace can have time stamps associated with every occurrence of a state. Our analysis is limited to traces which can be considered as time series <ref> [BJ76] </ref> with an index parameter space that is discrete, equally spaced, and monotonically increasing. The term event number refers to the index parameter space for a trace.
Reference: [FSZ83] <author> D. Ferrari, G. Serazzi, and A. Zeigner. </author> <title> Measurement and Tuning of Computer Systems. </title> <publisher> Prentice-Hall, </publisher> <address> London, </address> <year> 1983. </year>
Reference-contexts: 1 Introduction Creation of accurate non executable, artificial workload models <ref> [FSZ83] </ref> of computer systems is a key step in evaluating, debugging, and tuning these systems. Workload models for a system can be built from traces collected by observing a system.
Reference: [Gar93] <author> M. W. Garrett. </author> <title> Statistical Analysis of a Long Trace of Variable Bit Rate Video Traffic. </title> <type> PhD thesis, </type> <institution> Columbia Univ., </institution> <year> 1993. </year> <note> Chapter IV. </note>
Reference-contexts: constructing an empirical model for transient trace data containing either numerical or categorical traces. 1.1 Related Work There are many methods in the literature for deriving models from trace, including models of traces of program behavior [GH93, ADM92], modeling network traffic packet-traces [PF94, LTWW94], and modeling traces of compressed video <ref> [Gar93, HTL92] </ref>. The state of the art is illustrated by Heyman and Lakshman [HL96], who model twelve video traffic traces with a variety of stationary distributions. <p> Star Wars Trace: This is a trace of frame sizes of the Star Wars movie <ref> [Gar93] </ref> 1 . The trace is a sequence of frame sizes from the movie. Periodic Trace: This trace is generated from a known synthetic distribution.
Reference: [GH93] <author> A. J. Goldberg and J. L. Hennessy. </author> <title> Mtool: An integrated system for performance debugging shared memory applications. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 4(1) </volume> <pages> 28-40, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: This paper contains a novel approach for constructing an empirical model for transient trace data containing either numerical or categorical traces. 1.1 Related Work There are many methods in the literature for deriving models from trace, including models of traces of program behavior <ref> [GH93, ADM92] </ref>, modeling network traffic packet-traces [PF94, LTWW94], and modeling traces of compressed video [Gar93, HTL92]. The state of the art is illustrated by Heyman and Lakshman [HL96], who model twelve video traffic traces with a variety of stationary distributions.
Reference: [HL96] <author> D. P. Heyman and T. V. Lakshman. </author> <title> Source models for vbr broadcast-video traffic. </title> <journal> IEEE Trans. on Networking, </journal> <volume> 4(1) </volume> <pages> 40-48, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: The state of the art is illustrated by Heyman and Lakshman <ref> [HL96] </ref>, who model twelve video traffic traces with a variety of stationary distributions.
Reference: [HTL92] <author> D. P. Heyman, Ali Tabatabai, and T. V. Laskshman. </author> <title> Statistical analysis and simulation study of video teleconference traffic in atm networks. </title> <journal> IEEE Trans. on Circuits and Systems for Video Technology, </journal> <volume> 2(1) </volume> <pages> 49-58, </pages> <month> March </month> <year> 1992. </year> <month> 19 </month>
Reference-contexts: constructing an empirical model for transient trace data containing either numerical or categorical traces. 1.1 Related Work There are many methods in the literature for deriving models from trace, including models of traces of program behavior [GH93, ADM92], modeling network traffic packet-traces [PF94, LTWW94], and modeling traces of compressed video <ref> [Gar93, HTL92] </ref>. The state of the art is illustrated by Heyman and Lakshman [HL96], who model twelve video traffic traces with a variety of stationary distributions.
Reference: [LTWW94] <author> W. E. Leland, M. S. Taqqu, W. Willinger, and D. V. Wilson. </author> <title> On the self-similar nature of ethernet traffic (extended version). </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 2(1) </volume> <pages> 1-15, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: Workload models for a system can be built from traces collected by observing a system. Traces (or log files) from several domains, including program behavior traces, contain transient behavior, however, most modeling methods in the literature are based on stationary stochastic process models. Self-similar stochastic processes <ref> [Ber94, LTWW94] </ref> have been successfully used to model trace data previously thought to be non-stationary because they exhibited long range dependence. However, these models do not address modeling traces of transient data. Most trace modeling methods apply only to traces containing numerical data only. <p> This paper contains a novel approach for constructing an empirical model for transient trace data containing either numerical or categorical traces. 1.1 Related Work There are many methods in the literature for deriving models from trace, including models of traces of program behavior [GH93, ADM92], modeling network traffic packet-traces <ref> [PF94, LTWW94] </ref>, and modeling traces of compressed video [Gar93, HTL92]. The state of the art is illustrated by Heyman and Lakshman [HL96], who model twelve video traffic traces with a variety of stationary distributions.
Reference: [Mat96] <author> A. Mathur. </author> <title> A Stochastic Process Model for Transient Trace Data. </title> <type> PhD thesis, </type> <institution> Computer Sci. Dept., Virginia Tech, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: We assume here that a state is a discrete scalar value; an extension for vector states is discussed in <ref> [Mat96] </ref>. A trace is a sequence of states that records the behavior of the system over a period of time. Generally a trace can have time stamps associated with every occurrence of a state. <p> are defined in Sections 2 and 3 respectively. 1.3 Problem Statement The objective of this paper is to define the PISP model, develop a method to estimate the model parameters from sample traces, and evaluate the model quality on a set of twelve test cases drawn from various systems. (See <ref> [Mat96] </ref> for more details on the traces.) 2 The Independent Stochastic Process Consider a stochastic process fX t j t 2 Tg with a discrete and finite index parameter space T = ft 1 ; t 2 ; t 3 ; : : : ; t n g and discrete state <p> Approach (2), which only applies to numerical traces, consists of selecting the state space size desired, and then mapping the trace states to this reduced state space size. For numerical traces, the two methods may be combined. The details of both methods is explained in <ref> [Mat96] </ref>. 11 9 Model Validation To evaluate the quality of models produced by our method, we select twelve test traces (Table 1) representing a variety of features, then generate models of each trace, then synthetically generate a set of traces (using different seeds) from the models, then compare the synthesized traces <p> We first list the twelve traces, then explain our validation tests, and finally state the results of validation. 9.1 Test Case Traces (Table 1) In the three video traces (i.e., Ingalls, ACM, and Star Wars), the number of frame sizes modeled was reduced using a method discussed in <ref> [Mat96] </ref>. GE Message Trace: This trace was obtained from an instrumented implementation of a Gaussian elimination algorithm, which solves a 64 fi 64 system of equations using 32 processors on an NCUBE multicomputer [RW93].
Reference: [Ott88] <author> L. Ott. </author> <title> An Introduction to Statistical Methods and Data Analysis. </title> <address> PWS-Kent, Boston, </address> <note> 3rd edition, </note> <year> 1988. </year>
Reference-contexts: We compute the rate i;t a 1 as the slope parameter of the linear regression function <ref> [Ott88] </ref> that fits the points (t a 1 ; g (x i ; t a 1 )); : : : ; (t a 2 1; g (x i ; t a 2 1)). <p> The main behavioral characteristic of this trace is that it shows three intervals of distinct behavior. Within each interval only two out of the four states occur, each with probability 0:5. 9.2 Validation Tests We use three validation tests, explained below. Kruskall-Wallis Rank Sum Test: The KW test <ref> [Ott88] </ref> is non-parametric; its advantage is that it does not make any assumptions about the shape of the distribution of the trace data. The following null hypothesis is tested: A trace synthesized from our model is generated from the same distribution that generated the original trace.
Reference: [PF94] <author> V. Paxson and S. Floyd. </author> <title> Wide-area traffic: The failure of Poisson modeling. </title> <booktitle> In Proc. SIGCOMM94, </booktitle> <pages> pages 257-268. </pages> <publisher> ACM, </publisher> <address> London, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: This paper contains a novel approach for constructing an empirical model for transient trace data containing either numerical or categorical traces. 1.1 Related Work There are many methods in the literature for deriving models from trace, including models of traces of program behavior [GH93, ADM92], modeling network traffic packet-traces <ref> [PF94, LTWW94] </ref>, and modeling traces of compressed video [Gar93, HTL92]. The state of the art is illustrated by Heyman and Lakshman [HL96], who model twelve video traffic traces with a variety of stationary distributions.

References-found: 13

