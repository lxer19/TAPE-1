URL: http://robotics.stanford.edu/~latombe/papers/algorithmica/landmark/paper.ps.gz
Refering-URL: http://robotics.stanford.edu/~latombe/pub.html
Root-URL: http://www.cs.stanford.edu
Email: lazanas@flamingo.stanford.edu  latombe@cs.stanford.edu  
Title: Landmark-Based Robot Navigation  
Author: Anthony Lazanas Jean-Claude Latombe 
Note: Acknowledgments: This research was partially funded by darpa contract daaa21-89-c0002 and onr contract n00014-92-j-1809. The authors also thank Leo Guibas for his encouragements and comments.  
Address: Stanford, CA 94305, USA  
Affiliation: Robotics Laboratory Department of Computer Science Stanford University,  
Abstract: Achieving goals despite uncertainty in control and sensing may require robots to perform complicated motion planning and execution monitoring. This paper describes a reduced version of the general planning problem in the presence of uncertainty and a complete polynomial algorithm solving it. The planner computes a guaranteed plan (for given uncertainty bounds) by backchaining omnidirectional backprojections of the goal until one fully contains the set of possible initial positions of the robot. The algorithm assumes that landmarks are scattered across the workspace, that robot control and position sensing are perfect within the fields of influence of these landmarks (the regions in which the landmarks can be sensed by the robot), and that control is imperfect and sensing null outside these fields. The polynomiality and completeness of the algorithm derive from these simplifying assumptions, whose satisfaction may require the robot and/or its workspace to be specifically engineered. This leads us to view robot/workspace engineering as a means to make planning problems tractable. A computer program embedding the planner was implemented, along with navigation techniques and a robot simulator. Several examples run with this program are presented in this paper. Non-implemented extensions of the planner are also discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ayache, N., </author> <title> Artificial Vision for Mobile Robots: Stereo Vision and Multisensory Perception, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving. For example, for mobile robots, many techniques have been proposed to combine the estimates provided by both dead-reckoning and environmental sensing (e.g., see <ref> [1, 7, 22, 33] </ref>). These techniques address the problem of tracking a selected motion plan as well as possible, not the problem of generating this plan. <p> The right (or left) ray of any extension disk thus supports at most one edge of the total backprojection's boundary. If two edges share the same endpoint, this endpoint is called a spike. Each connected subset has a single spike. We assign a distinct integer in <ref> [1; `] </ref> to every landmark disk. Using these numbers we give a distinct name to every disk, ray and intersection of two rays.
Reference: [2] <author> Briggs, A.J., </author> <title> "An efficient Algorithm for One-Step Planar Compliant Motion Planning with Uncertainty," </title> <booktitle> Proc. of the 5th Annual ACM Symp. on Computational Geometry, </booktitle> <address> Saarbruchen, Germany, </address> <year> 1989, </year> <pages> pp. 187-196. </pages>
Reference-contexts: For a point robot moving in the plane, he showed that this set is sufficiently described by a polynomial number of backprojections. He used this result to propose an O (n 4 log n) algorithm to generate one-step (single motion command) plans. Briggs <ref> [2] </ref> reduced the time complexity of this algorithm to O (n 2 log n). Hutchinson and Fox [17, 14] extended the algorithm to exploit visual constraints and allow visual compliant motions. One remaining difficulty to construct a multi-step planner is backchaining.
Reference: [3] <author> Buckley, S.J., </author> <title> Planning and Teaching Compliant Motion Strategies, </title> <type> Ph.D. Dissertation, </type> <institution> Department of Electrical Engineering and Computer Science, MIT, </institution> <address> Cambridge, MA, </address> <year> 1986. </year>
Reference-contexts: If the robot lies in this field, it senses the landmark and uses this information to determine its location. Related notions have been previously introduced in the literature with the same or different names, e.g., landmarks [23], atomic regions <ref> [3] </ref>, signature neighborhoods [26], and perceptual equivalent classes [10, 6]. Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving.
Reference: [4] <author> Canny, J.F. and Reif, J., </author> <title> "New Lower Bound Techniques for Robot Motion Planning Problems," </title> <booktitle> 27th IEEE Symposium on Foundations of Computer Science, </booktitle> <address> Los Angeles, CA, </address> <year> 1987, </year> <pages> pp. 49-60. </pages>
Reference-contexts: Very few complete planners have been proposed so far. Most of them take exponential time in some measure of the size of the input problem (e.g., [5, 9]), which makes them virtually inapplicable. In fact, it has been shown that these planners attack problems which are inherently intractable <ref> [4] </ref>. In this paper we achieve polynomiality by both making assumptions in the problem formulation that eliminate the source of intractability, and using algorithmic techniques that take advantage of these assumptions. <p> Such a decision takes double exponential time in r. Moreover, the smallest r for which a plan may exist grows with the complexity of the environment. Actually, various forms of the above motion planning problem have been proven intrinsically hard <ref> [4, 28] </ref>. At the expense of completeness, Erdmann [12] suggested that goal reachability and recognizability be treated separately by identifying a subset of the goal, called a kernel, such that when this subset is attained, goal achievement can be recognized (by TC) independently of the way it has been achieved.
Reference: [5] <author> Canny, J.F., </author> <title> "On Computability of Fine Motion Plans," </title> <booktitle> Proc. of the IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Scottsdale, AZ, </address> <year> 1989, </year> <pages> pp. 177-182. </pages>
Reference-contexts: A complete planner is one which generates a correct plan whenever one exists, and returns failure otherwise. Very few complete planners have been proposed so far. Most of them take exponential time in some measure of the size of the input problem (e.g., <ref> [5, 9] </ref>), which makes them virtually inapplicable. In fact, it has been shown that these planners attack problems which are inherently intractable [4]. <p> Goal recognition, hence the termination condition of a command, may depend on the region from where the command is executed. This region, which is precisely the preimage of the goal for that command, also depends on the termination condition. This recursive dependence was noted in [25]. Nevertheless, Canny <ref> [5] </ref> described a complete planner with very few restrictive assumptions in it. This planner generates an r-step plan by reducing the input problem to deciding the satisfiability of a semi-algebraic formula with 2r alternating existential and universal quantifiers. Such a decision takes double exponential time in r.
Reference: [6] <author> Christiansen, A., Mason, M. and Mitchell, </author> <title> T.M., "Learning Reliable Manipulation Strategies without Initial Physical Models," </title> <booktitle> Proc. of the IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Cincinnati, OH, </address> <year> 1990, </year> <pages> pp. 1224-1230. </pages>
Reference-contexts: If the robot lies in this field, it senses the landmark and uses this information to determine its location. Related notions have been previously introduced in the literature with the same or different names, e.g., landmarks [23], atomic regions [3], signature neighborhoods [26], and perceptual equivalent classes <ref> [10, 6] </ref>. Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving.
Reference: [7] <author> Crowley, J.L., </author> <title> "World Modeling and Position Estimation for a Mobile Robot Using Ultrasonic Ranging," </title> <booktitle> Proc. of the IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Scotts-dale, AZ, </address> <year> 1989, </year> <pages> pp. 674-680. </pages>
Reference-contexts: Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving. For example, for mobile robots, many techniques have been proposed to combine the estimates provided by both dead-reckoning and environmental sensing (e.g., see <ref> [1, 7, 22, 33] </ref>). These techniques address the problem of tracking a selected motion plan as well as possible, not the problem of generating this plan.
Reference: [8] <author> Donald, B.R., </author> <title> "A Geometric Approach to Error Detection and Recovery for Robot Motion Planning with Uncertainty," </title> <journal> Artificial Intelligence J., </journal> <pages> 37(1-3), </pages> <year> 1988, </year> <pages> pp. 223-271. </pages>
Reference-contexts: For example, one may introduce time and consider uncertainty in the robot velocity, allowing the construction of more sophisticated termination conditions [27, 12]. The workspace model (e.g., the location and the shape of the obstacles) may also be subject to errors, yielding a third type of uncertainty <ref> [8] </ref>. For the sake of simplicity we will not discuss these variants here (see [18]).
Reference: [9] <author> Donald, B.R., </author> <title> "The Complexity of Planar Compliant Motion Planning Under Uncer--tainty," </title> <journal> Algorithmica, </journal> <volume> 5, </volume> <year> 1990, </year> <pages> pp. 353-382. </pages>
Reference-contexts: A complete planner is one which generates a correct plan whenever one exists, and returns failure otherwise. Very few complete planners have been proposed so far. Most of them take exponential time in some measure of the size of the input problem (e.g., <ref> [5, 9] </ref>), which makes them virtually inapplicable. In fact, it has been shown that these planners attack problems which are inherently intractable [4]. <p> The planner described in [19] only considers a finite number of regularly spaced directions; hence, it is incomplete, and usually not very efficient. Donald <ref> [9] </ref> considered the disjoint union of backprojections of a region R over all possible directions of motion. For a point robot moving in the plane, he showed that this set is sufficiently described by a polynomial number of backprojections. <p> The nondirectional backprojection is thus the two-dimensional set S d2S 1 B (G; d). It is the region from where the robot can reach G by a single move in some direction. Donald <ref> [9] </ref> employs the same name for the disjoint union of all directional backprojections over d, but the terminology is counter-intuitive.
Reference: [10] <author> Donald, B.R. and Jennings, J., </author> <title> "Sensor Interpretation and Task-Directed Planning Using Perceptual Equivalence Classes," </title> <booktitle> Proc. of the IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Sacramento, CA, </address> <year> 1991, </year> <pages> pp. 190-197. </pages>
Reference-contexts: If the robot lies in this field, it senses the landmark and uses this information to determine its location. Related notions have been previously introduced in the literature with the same or different names, e.g., landmarks [23], atomic regions [3], signature neighborhoods [26], and perceptual equivalent classes <ref> [10, 6] </ref>. Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving.
Reference: [11] <author> Dufay, B. and Latombe, </author> <title> J.C., "An Approach to Automatic Robot Programming Based on Inductive Learning," </title> <journal> Int. J. of Robotics Research, </journal> <volume> 3(4), </volume> <year> 1984, </year> <pages> pp. 3-20. </pages>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement [24, 32], inductive learning from experiments <ref> [11] </ref>, iterative removal of contacts [20, 16], and preim-age backchaining [25, 27, 12]. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty.
Reference: [12] <author> Erdmann, M., </author> <title> On Motion Planning with Uncertainty, </title> <type> Tech. Rep. 810, </type> <institution> AI Lab., MIT, </institution> <address> Cambridge, MA, </address> <year> 1984. </year>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Several motion planners have been proposed which address this issue (e.g., [24, 32, 11, 20, 16, 25, 27, 12]). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in <ref> [25, 27, 12] </ref>, we represent uncertainty by bounded regions describing ranges of errors. A correct plan is one whose execution is guaranteed to achieve the goal, whenever actual errors (at execution time) are within the uncertainty bounds. A sound planner is one which only generates correct plans. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement [24, 32], inductive learning from experiments [11], iterative removal of contacts [20, 16], and preim-age backchaining <ref> [25, 27, 12] </ref>. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty. Instead, preimage backchaining takes uncertainty into account throughout the whole planning process. <p> The above problem formulation admits many variants. For example, one may introduce time and consider uncertainty in the robot velocity, allowing the construction of more sophisticated termination conditions <ref> [27, 12] </ref>. The workspace model (e.g., the location and the shape of the obstacles) may also be subject to errors, yielding a third type of uncertainty [8]. For the sake of simplicity we will not discuss these variants here (see [18]). <p> Such a decision takes double exponential time in r. Moreover, the smallest r for which a plan may exist grows with the complexity of the environment. Actually, various forms of the above motion planning problem have been proven intrinsically hard [4, 28]. At the expense of completeness, Erdmann <ref> [12] </ref> suggested that goal reachability and recognizability be treated separately by identifying a subset of the goal, called a kernel, such that when this subset is attained, goal achievement can be recognized (by TC) independently of the way it has been achieved. <p> Omnidirectional Backprojection of a Goal We call the omnidirectional backprojection of a goal G the disjoint union of all directional backprojections over d 2 S 1 , i.e., the three-dimensional set S We denote this set by OB (G). (Remark on terminology: Erdmann <ref> [12] </ref> defines the nondirectional backprojection of a goal as the union of all directional backprojections of this goal over d 2 S 1 . The nondirectional backprojection is thus the two-dimensional set S d2S 1 B (G; d).
Reference: [13] <author> Erdmann, M., </author> <title> Towards Task-Level Planning: Action-Based Sensor Design, </title> <type> Tech. Rep. </type> <institution> CMU-CS-92-116, Dept. of Computer Science, Carnegie Mellon Univ., </institution> <address> Pittsburgh, PA, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: Thus, although the planner assumed perfect sensing in landmark areas, we can now create these areas by engineering the workspace in such a way that the sensors just provide the information that is needed by the plan (see <ref> [13] </ref> for a similar idea). However, maximal errors in landmark areas seem to depend on the plan itself, so that they can only be computed once a plan has been generated assuming no such errors. 28 8.3.
Reference: [14] <author> Fox, A. and Hutchinson, S., </author> <title> Exploiting Visual Constraints in the Synthesis of Uncertainty-Tolerant Motion Plans, </title> <type> Tech. Rep. </type> <institution> UIUC-BI-AI-RCV-92-05, The University of Illinois at Urbana-Champaign, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: He used this result to propose an O (n 4 log n) algorithm to generate one-step (single motion command) plans. Briggs [2] reduced the time complexity of this algorithm to O (n 2 log n). Hutchinson and Fox <ref> [17, 14] </ref> extended the algorithm to exploit visual constraints and allow visual compliant motions. One remaining difficulty to construct a multi-step planner is backchaining.
Reference: [15] <author> Friedman, J., </author> <title> Computational Aspects of Compliant Motion Planning, </title> <type> Ph.D. Dissertation, Tech. Rep. </type> <institution> No. STAN-CS-91-1368, Dept. of Computer Science, Stanford University, Stanford, </institution> <address> CA, </address> <year> 1991. </year>
Reference-contexts: We show that backchaining is then reduced to iteratively computing a relatively small set of backprojections for a growing set of landmark regions. This result directly yields a polynomial planning algorithm. This planner is also complete relative to a well-defined class of problems. Previously, Friedman <ref> [15] </ref> had proposed another polynomial multi-step planner for a compliant point robot in a polygonal workspace by assuming that sensing exactly detects when the robot traverses line segments joining vertices of the workspace.
Reference: [16] <author> Gottschlich, </author> <title> S.N. and Kak, A.C., "Dealing with Uncertainty in CAD-Based Assembly Motion Planning," </title> <booktitle> Proc. of the 9th Nat. Conf. on Artificial Intelligence, </booktitle> <address> Anaheim, CA, </address> <month> July </month> <year> 1991, </year> <pages> pp. 646-652. </pages>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement [24, 32], inductive learning from experiments [11], iterative removal of contacts <ref> [20, 16] </ref>, and preim-age backchaining [25, 27, 12]. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty. Instead, preimage backchaining takes uncertainty into account throughout the whole planning process.
Reference: [17] <author> Hutchinson, S., </author> <title> "Exploiting Visual Constraints in Robot Motion Planning," </title> <booktitle> Proc. of the IEEE Int. Conf. of Robotics and Automation, </booktitle> <address> Sacramento, CA, </address> <year> 1991, </year> <pages> pp. 1722-1727. </pages>
Reference-contexts: He used this result to propose an O (n 4 log n) algorithm to generate one-step (single motion command) plans. Briggs [2] reduced the time complexity of this algorithm to O (n 2 log n). Hutchinson and Fox <ref> [17, 14] </ref> extended the algorithm to exploit visual constraints and allow visual compliant motions. One remaining difficulty to construct a multi-step planner is backchaining.
Reference: [18] <author> Latombe, </author> <title> J.C., Robot Motion Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: The workspace model (e.g., the location and the shape of the obstacles) may also be subject to errors, yielding a third type of uncertainty [8]. For the sake of simplicity we will not discuss these variants here (see <ref> [18] </ref>).
Reference: [19] <author> Latombe, J.C., Lazanas, A., and Shekhar, S., </author> <title> "Robot Motion Planning with Uncertainty in Control and Sensing," </title> <journal> Artificial Intelligence J., </journal> <volume> 52(1), </volume> <year> 1991, </year> <pages> pp. 1-47. </pages>
Reference-contexts: He proposed an O (n log n) algorithm to compute backprojections in the plane when the obstacles are polygons bounded by n edges. Hence, a preimage of a goal can be computed as the backprojection of its kernel. An implemented planner based on this technique is described 4 in <ref> [19] </ref>. Once the kernel of a goal has been identified, a remaining issue is the selection of the commanded direction of motion to attain this kernel, since the backprojection of the kernel varies when the direction changes. The planner described in [19] only considers a finite number of regularly spaced directions; <p> planner based on this technique is described 4 in <ref> [19] </ref>. Once the kernel of a goal has been identified, a remaining issue is the selection of the commanded direction of motion to attain this kernel, since the backprojection of the kernel varies when the direction changes. The planner described in [19] only considers a finite number of regularly spaced directions; hence, it is incomplete, and usually not very efficient. Donald [9] considered the disjoint union of backprojections of a region R over all possible directions of motion.
Reference: [20] <author> Laugier, C. and Theveneau, P., </author> <title> Planning Sensor-Based Motions for Part-Mating Using Geometric Reasoning Techniques, </title> <booktitle> Proc. of European Conf. on Artificial Intelligence, </booktitle> <address> Brighton, UK, </address> <year> 1986. </year>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement [24, 32], inductive learning from experiments [11], iterative removal of contacts <ref> [20, 16] </ref>, and preim-age backchaining [25, 27, 12]. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty. Instead, preimage backchaining takes uncertainty into account throughout the whole planning process.
Reference: [21] <author> Lazanas, A., and Latombe, </author> <title> J.C., Landmark-Based Robot Navigation, </title> <type> Tech. Rep. </type> <institution> STAN-CS-92-1428, Dept. of Computer Science, Stanford, </institution> <address> CA, </address> <year> 1992. </year>
Reference-contexts: Otherwise it is a fourth degree curve. The algebraic expression of the intersection of this curve with a circle is established in <ref> [21] </ref>. 5.3. Planning Method If I G 0 , the robot is already in the goal and the planner has nothing to do. In general, however, the planner computes the extension E (G 0 ). If this extension is empty, the planner returns failure. <p> But the plan is incomplete, since no command is attached to the initial region. The plan can nevertheless be useful. For example, the robot controller may then decide to execute a random motion 15 until the robot enters a landmark area with a command attached to it (see <ref> [21] </ref>). 5.5. Completeness and Optimality By construction, every I-command in a plan is guaranteed to reach a landmark disk in its termination set. <p> Hence: Theorem 2 The planning algorithm takes time O (s` 3 log `) and space O (` 3 ). Several simple improvements are possible, which do not change this asymptotic bound. For example, as shown in <ref> [21] </ref>, by considering O (` 2 ) additional I-events, one can process each I-event in constant time, hence reducing the time for processing all I-events to O (` 2 ), instead of O (` 3 log `). We also show in [21] that a simple modification of the description of a <p> For example, as shown in <ref> [21] </ref>, by considering O (` 2 ) additional I-events, one can process each I-event in constant time, hence reducing the time for processing all I-events to O (` 2 ), instead of O (` 3 log `). We also show in [21] that a simple modification of the description of a directional backprojection allows the E-Spike-In and E-Spike-Out events to be eliminated, thus reducing the cost of sorting and processing the non-catastrophic E-events to O (` 2 log `).
Reference: [22] <author> Leonard, J.J. and Durrant-Whyte, H.F., </author> <title> "Mobile Robot Localization by Tracking Geometric Beacons," </title> <journal> IEEE Tr. on Robotics and Automation, </journal> <volume> 7(3), </volume> <year> 1991, </year> <pages> pp. 376-382. </pages>
Reference-contexts: Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving. For example, for mobile robots, many techniques have been proposed to combine the estimates provided by both dead-reckoning and environmental sensing (e.g., see <ref> [1, 7, 22, 33] </ref>). These techniques address the problem of tracking a selected motion plan as well as possible, not the problem of generating this plan.
Reference: [23] <author> Levitt, T.S., Lawton, D.T., Chelberg, D.M. and Nelson, </author> <title> P.C., "Qualitative Navigation," </title> <booktitle> Image Understanding Workshop, </booktitle> <address> Los Angeles, CA, </address> <year> 1987, </year> <pages> pp. 447-465. </pages>
Reference-contexts: If the robot lies in this field, it senses the landmark and uses this information to determine its location. Related notions have been previously introduced in the literature with the same or different names, e.g., landmarks <ref> [23] </ref>, atomic regions [3], signature neighborhoods [26], and perceptual equivalent classes [10, 6]. Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving.
Reference: [24] <author> Lozano-Perez, </author> <title> T.,The Design of a Mechanical Assembly System, </title> <type> Tech. Rep. </type> <institution> AI-TR 397, Artificial Intelligence Laboratory, MIT, </institution> <year> 1976. </year>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement <ref> [24, 32] </ref>, inductive learning from experiments [11], iterative removal of contacts [20, 16], and preim-age backchaining [25, 27, 12]. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty.
Reference: [25] <author> Lozano-Perez, T., Mason, </author> <title> M.T. and Taylor, R.H., "Automatic Synthesis of Fine-Motion Strategies for Robots," </title> <journal> Int. J. of Robotics Research, </journal> <volume> 3(1), </volume> <year> 1984, </year> <pages> pp. 3-24. 31 </pages>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Several motion planners have been proposed which address this issue (e.g., [24, 32, 11, 20, 16, 25, 27, 12]). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in <ref> [25, 27, 12] </ref>, we represent uncertainty by bounded regions describing ranges of errors. A correct plan is one whose execution is guaranteed to achieve the goal, whenever actual errors (at execution time) are within the uncertainty bounds. A sound planner is one which only generates correct plans. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement [24, 32], inductive learning from experiments [11], iterative removal of contacts [20, 16], and preim-age backchaining <ref> [25, 27, 12] </ref>. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty. Instead, preimage backchaining takes uncertainty into account throughout the whole planning process. <p> Our work is a direct continuation of a series of work on preimage backchaining. We focus most of the following discussion on this series. Preimage backchaining considers the following class of motion planning problems <ref> [25] </ref>: A plan is a sequence (more generally, an algorithm) of motion commands, each defined by a commanded direction of motion d and a termination condition TC. <p> Goal recognition, hence the termination condition of a command, may depend on the region from where the command is executed. This region, which is precisely the preimage of the goal for that command, also depends on the termination condition. This recursive dependence was noted in <ref> [25] </ref>. Nevertheless, Canny [5] described a complete planner with very few restrictive assumptions in it. This planner generates an r-step plan by reducing the input problem to deciding the satisfiability of a semi-algebraic formula with 2r alternating existential and universal quantifiers. Such a decision takes double exponential time in r.
Reference: [26] <author> Mahadevan, S. and Connell, J., </author> <title> Automatic Programming of Behavior-based Robots using Reinforcement Learning, </title> <type> Research Rep., </type> <institution> IBM T.J. Watson Research Center, </institution> <address> Yorktown Heights, NY, </address> <year> 1990. </year>
Reference-contexts: If the robot lies in this field, it senses the landmark and uses this information to determine its location. Related notions have been previously introduced in the literature with the same or different names, e.g., landmarks [23], atomic regions [3], signature neighborhoods <ref> [26] </ref>, and perceptual equivalent classes [10, 6]. Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving.
Reference: [27] <author> Mason, </author> <title> M.T., "Automatic Planning of Fine Motions: Correctness and Completeness," </title> <booktitle> Proc. of the IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Atlanta, GA, </address> <year> 1984, </year> <pages> pp. 492-503. </pages>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Several motion planners have been proposed which address this issue (e.g., [24, 32, 11, 20, 16, 25, 27, 12]). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in <ref> [25, 27, 12] </ref>, we represent uncertainty by bounded regions describing ranges of errors. A correct plan is one whose execution is guaranteed to achieve the goal, whenever actual errors (at execution time) are within the uncertainty bounds. A sound planner is one which only generates correct plans. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement [24, 32], inductive learning from experiments [11], iterative removal of contacts [20, 16], and preim-age backchaining <ref> [25, 27, 12] </ref>. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty. Instead, preimage backchaining takes uncertainty into account throughout the whole planning process. <p> The above problem formulation admits many variants. For example, one may introduce time and consider uncertainty in the robot velocity, allowing the construction of more sophisticated termination conditions <ref> [27, 12] </ref>. The workspace model (e.g., the location and the shape of the obstacles) may also be subject to errors, yielding a third type of uncertainty [8]. For the sake of simplicity we will not discuss these variants here (see [18]).
Reference: [28] <author> Natarajan, B.K., </author> <title> "The Complexity of Fine Motion Planning," </title> <journal> Int. J. of Robotics Research, </journal> <volume> 7(2), </volume> <year> 1988, </year> <pages> pp. 36-42. </pages>
Reference-contexts: Such a decision takes double exponential time in r. Moreover, the smallest r for which a plan may exist grows with the complexity of the environment. Actually, various forms of the above motion planning problem have been proven intrinsically hard <ref> [4, 28] </ref>. At the expense of completeness, Erdmann [12] suggested that goal reachability and recognizability be treated separately by identifying a subset of the goal, called a kernel, such that when this subset is attained, goal achievement can be recognized (by TC) independently of the way it has been achieved.
Reference: [29] <author> Preparata, </author> <title> F.P. and Shamos, M.I., Computational Geometry: An Introduction, </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: A simple divide-and-conquer does the precomputation in time O (` log 2 `) and space O (`) <ref> [29] </ref>. To compute B (G; d) we erect the O (`) rays tangent to the precomputed boundary of E (G) and pointing along the directions + d .
Reference: [30] <author> Schoppers, M.J., </author> <title> Representation and Automatic Synthesis of Reaction Plans, </title> <type> Ph.D. Dissertation, </type> <institution> Dept. of Computer Science, University of Illinois at Urbana-Champaign, Urbana, IL, </institution> <year> 1989. </year>
Reference-contexts: Hence, the above planning algorithm has time complexity O (s` 4 log `). 5.4. Plan Execution Assume that the planner returns success after computing an omnidirectional backprojection OB (G n ) that contains I. The generated plan can be regarded as a non-ordered collection of reaction rules <ref> [30] </ref>.
Reference: [31] <author> Takeda, H. and Latombe, </author> <title> J.C., "Sensory Uncertainty Field for Mobile Robot Navigation," </title> <booktitle> Proc. of the IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Nice, France, </address> <year> 1992, </year> <pages> pp. 2465-2472. </pages>
Reference-contexts: To some extent, most workspaces can be engineered to include such features. Landmark areas with sharp boundaries can be obtained by introducing artificial landmarks and/or thresholding an estimate of the sensing uncertainty. For example, the notion of a "sensory uncertainty field" (suf) is introduced in <ref> [31] </ref>. At every possible point q in the configuration space, the suf estimates the range of possible errors in the sensed configuration that the navigation system would compute by matching the sensory data against a prior model of the workspace, if the robot was at q.
Reference: [32] <author> Taylor, </author> <title> R.H., Synthesis of Manipulator Control Programs from Task-Level Specifications, </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, Stanford University, </institution> <year> 1976. </year>
Reference-contexts: 1. Introduction To operate in the real world robots must deal with errors in control and sensing. Several motion planners have been proposed which address this issue (e.g., <ref> [24, 32, 11, 20, 16, 25, 27, 12] </ref>). Many of them, however, embed tacit or unclear assumptions, causing them to be unreliable in practice. 1 In this paper, like in [25, 27, 12], we represent uncertainty by bounded regions describing ranges of errors. <p> Related Work Motion planning with uncertainty has been a research topic in robotics for almost two decades. Various approaches have been proposed, including skeleton refinement <ref> [24, 32] </ref>, inductive learning from experiments [11], iterative removal of contacts [20, 16], and preim-age backchaining [25, 27, 12]. The first three of these approaches operate in two phases: a motion plan is first generated assuming no uncertainty and then transformed to deal with uncertainty.
Reference: [33] <author> Zhang, Z. and Faugeras, O., </author> <title> "A 3D World Model Builder with a Mobile Robot," </title> <journal> The Int. J. of Robotics Research, </journal> <volume> 11(4), </volume> <year> 1992, </year> <pages> pp. 269-285. 32 </pages>
Reference-contexts: Over the past decade, there has also been a substantial amount of work at reducing position sensing errors while a robot is moving. For example, for mobile robots, many techniques have been proposed to combine the estimates provided by both dead-reckoning and environmental sensing (e.g., see <ref> [1, 7, 22, 33] </ref>). These techniques address the problem of tracking a selected motion plan as well as possible, not the problem of generating this plan.
References-found: 33

