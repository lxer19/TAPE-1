URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/misc/cado-palo-lenz-97.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: e-mail: &lt;lastname&gt;@dis.uniroma1.it  e-mail: palopoli@unical.it  
Phone: 2  
Title: Datalog and Description Logics: Expressive Power  
Author: Marco Cadoli and Luigi Palopoli and Maurizio Lenzerini 
Address: Via Salaria 113, I-00198 Roma, Italy  I-87036 Rende (CS), Italy  
Affiliation: 1 Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  Dipartimento di Elettronica Informatica e Sistemistica Universita della Calabria  
Abstract: Recently there was some attention on integration of description logics of the AL-family with rule-based languages for querying relational databases such as Datalog, so as to achieve the best characteristics of both kinds of formalisms in a common framework. Formal analysis on such hybrid languages has been limited to computational complexity: i.e., how much time/space it is needed to answer to a specific query? This paper carries out a different formal analysis, the one dealing with expressiveness, which gives precise characterization of the concepts definable as queries. We first analyze the applicability to hybrid languages of formal tools developed for characterizing the expressive power of relational query languages. We then present some preliminary results on the expressiveness of hybrid languages. In particular, we show that relatively simple hybrid languages are able to define all finite structures expressed by skolemized universally quantified second-order formulae with some constraints on the quantified predicates. To appear on the Proceedings of the 6th International Workshop on Database Programming Languages (DBPL'97) August 18-20, 1997, Estes Park, Colorado Lecture Notes in Computer Science, Springer-Verlag 
Abstract-found: 1
Intro-found: 1
Reference: [AV92] <author> S. Abiteboul and V. Vianu. </author> <title> Expressive power of query languages. </title> <editor> In J. D. Ullman, editor, </editor> <booktitle> Theoretical Studies in Computer Science. </booktitle> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Vice-versa, such a query does exist in Datalog. 2. With respect to a set of logical formulae, such as first- or second-order logic. For instance, "while queries" <ref> [AV92] </ref> can express exactly the set of second order properties over ordered finite structures. 3. With respect to a complexity class, such as P, NP, coNP, PSPACE, etc.
Reference: [Baa96] <author> Franz Baader. </author> <title> A formal definition for the expressive power of terminological knowledge representation languages. </title> <journal> Journal of Logic and Computation, </journal> <volume> 6 </volume> <pages> 33-54, </pages> <year> 1996. </year>
Reference-contexts: Formal studies of expressive power of description logics have been recently pursued. In particular, [Bor96] shows that description logics built using constructors usually considered in the literature are characterized by subsets of first-order logic allowing only three variable symbols. <ref> [Baa96] </ref> gives a methodological contribution, pointing out that expressiveness must be defined within a precise formal framework, and proposes the model-theoretic approach for the characterization of expressive power. Interestingly, he shows that the complexity of inference of two equally expressive languages may be different.
Reference: [BDS93] <author> Martin Buchheit, Francesco M. Donini, and Andrea Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: In fact, the TBox is a set of inclusion axioms <ref> [BDS93] </ref>, and concept constructors used in the TBox are just propositional. Actually, this is an AL-log program [DLNS91]. From the point of view of expressiveness, we can conclude that Datalog, when augmented with inclusion axioms typical of description logics, is able to capture some coNP-complete queries.
Reference: [BE96] <author> P. Bonatti and T. Eiter. </author> <title> Querying disjunctive databases through non-monotonic logics. </title> <journal> Theoretical Computer Science, </journal> <volume> 160 </volume> <pages> 321-363, </pages> <year> 1996. </year>
Reference: [Bor96] <author> Alexander Borgida. </author> <title> On the relative expressiveness of description logics and predicate logics. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 82 </volume> <pages> 353-367, </pages> <year> 1996. </year>
Reference-contexts: Formal studies of expressive power of description logics have been recently pursued. In particular, <ref> [Bor96] </ref> shows that description logics built using constructors usually considered in the literature are characterized by subsets of first-order logic allowing only three variable symbols. [Baa96] gives a methodological contribution, pointing out that expressiveness must be defined within a precise formal framework, and proposes the model-theoretic approach for the characterization of <p> With respect to a complexity class, such as P, NP, coNP, PSPACE, etc. As an example, Datalog with stable negation can express all NP properties of finite structures [Sch95], e.g., whether a graph is 3-colorable or not. According to the above classification, <ref> [Bor96] </ref> gives a contribution in the context of the second measure, whereas the so-called "Fagin's theorem" [Fag74], provides the basis for unifying the second and the third modalities.
Reference: [Cal96] <author> Diego Calvanese. </author> <title> Finite model reasoning in description logics. </title> <editor> In Luigia C. Aiello, John Doyle, and Stuart C. Shapiro, editors, </editor> <booktitle> Proceedings of the Fifth International Conference on the Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 292-303. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1996. </year>
Reference-contexts: As a consequence, inference in all models is equivalent to inference in finite ones, and we can restrict to finite domains. We note that some concept description languages do not have the finite model property <ref> [Cal96] </ref>.
Reference: [CH80] <author> A. Chandra and D. Harel. </author> <title> Computable queries for relational databases. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21 </volume> <pages> 156-178, </pages> <year> 1980. </year>
Reference-contexts: As in most of the papers discussing the expressive power of query languages, in this paper we focus on Boolean queries, which are Boolean transformations defined on relational databases. D is a finite set of domain constants. Definition 1 (From <ref> [CH80] </ref>). A (Boolean) query is a mapping from relational databases onto fT rue; F alseg satisfying the following constraints: 1. Q is partial recursive; 2. Q is generic, i.e., for each bijection ae over D, ae (Q (D)) = Q (ae (D)).
Reference: [CL94] <author> Diego Calvanese and Maurizio Lenzerini. </author> <title> Making object-oriented schemas more expressive. </title> <booktitle> In Proceedings of the Thirteenth ACM SIGACT SIGMOD SIGART Symposium on Principles of Database Systems (PODS-94), </booktitle> <pages> pages 243-254, </pages> <address> Minneapolis, 1994. </address> <publisher> ACM Press and Addison Wesley. </publisher>
Reference-contexts: A description logic knowledge base is given semantics through interpretations. An interpretation I is associated with a domain of constants D I , which can be finite or infinite. Actually ALCN R has the so-called finite model property <ref> [CL94] </ref>, i.e., if a knowledge base has a model, then it has a finite one. As a consequence, inference in all models is equivalent to inference in finite ones, and we can restrict to finite domains.
Reference: [Cos93] <author> S. S. Cosmadakis. </author> <title> Logical reducibility and monadic NP. </title> <booktitle> In Proceedings of the Thirtyfourth Annual Symposium on the Foundations of Computer Science (FOCS-93), </booktitle> <year> 1993. </year>
Reference-contexts: Nevertheless there are polynomial collections of databases (e.g., the collection of dyadic relations with even number of tuples) that are not in NP 1 [Fag93]. The class NP 1 has interesting properties: as an example, in <ref> [Cos93] </ref> it is proven that NP 1 differs from coNP 1 , while this is a long-standing open question for unbounded NP and coNP.
Reference: [DLNS91] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, and Andrea Schaerf. </author> <title> A hybrid system integrating Datalog and concept languages. </title> <booktitle> In Proceedings of the Second Conference of the Italian Association for Artificial Intelligence (AI*IA-91), number 549 in Lecture Notes In Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: In fact, the TBox is a set of inclusion axioms [BDS93], and concept constructors used in the TBox are just propositional. Actually, this is an AL-log program <ref> [DLNS91] </ref>. From the point of view of expressiveness, we can conclude that Datalog, when augmented with inclusion axioms typical of description logics, is able to capture some coNP-complete queries.
Reference: [DLNS97] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, and Andrea Schaerf. AL-log: </author> <title> Integrating Datalog and description logics. </title> <journal> Journal of Intelligent Information Systems, </journal> <note> 1997. To appear. </note>
Reference: [EGM97] <author> T. Eiter, G. Gottlob, and H. Mannila. </author> <title> Disjunctive Datalog. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 22 </volume> <pages> 364-418, </pages> <year> 1997. </year>
Reference: [Fag74] <author> R. Fagin. </author> <title> Generalized First-Order Spectra and Polynomial-Time Recognizable Sets. </title> <editor> In R. M. Karp, editor, </editor> <booktitle> Complexity of Computation, </booktitle> <pages> pages 43-74. </pages> <publisher> AMS, </publisher> <year> 1974. </year>
Reference-contexts: As an example, Datalog with stable negation can express all NP properties of finite structures [Sch95], e.g., whether a graph is 3-colorable or not. According to the above classification, [Bor96] gives a contribution in the context of the second measure, whereas the so-called "Fagin's theorem" <ref> [Fag74] </ref>, provides the basis for unifying the second and the third modalities. This theorem, which is one of the major results in this field, says that the set of NP properties coincides with the set of properties expressed by existentially quantified second-order formulae. <p> Then we say that a query language L expresses a database complexity class C if for each C-recognizable database family D there is an expression e of L which defines D. Fagin's theorem <ref> [Fag74] </ref>, cited in Section 1, states that a query language expresses NP iff it has the same expressive power of the language of existentially quantified second-order formulae (9S)OE, where S is a tuple of predicate names and OE is a first-order formula. <p> In the following, oe denotes a fixed set of relational symbols not including equality "=" and S denotes a list of variables ranging over monadic relational symbols distinct from those in oe. By Fagin's theorem <ref> [Fag74] </ref>, any NP-recognizable collection D of finite structures over oe is defined by a second-order existentially quantified formula. In particular, NP-recognizable collections D of finite structures, defined by formulas where all existentially quantified relational symbols are 1-ary, form the set of NP 1 collections.
Reference: [Fag75] <author> Ronald Fagin. </author> <title> Monadic generalized spectra. </title> <journal> Zeitschrift fur mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 21 </volume> <pages> 89-96, </pages> <year> 1975. </year>
Reference-contexts: Subsequently, many other similar results relative to other complexity classes have been proved. In our framework, since TBoxes are assumed to contain predicates (concepts, roles) with fixed arity, we will refer in the following to fragments of universal second-order logic with fixed arity <ref> [Fag75] </ref>. The class NP k , k 1, includes all collections which can be expressed by second-order formulae (9S)OE where each predicate in S has arity less than or equal to k.
Reference: [Fag93] <author> Ronald Fagin. </author> <title> Finite-model theory a personal perspective. </title> <journal> Theoretical Computer Science, </journal> <volume> 116 </volume> <pages> 3-31, </pages> <year> 1993. </year>
Reference-contexts: Classes NP k form a proper hierarchy within NP, in that each class NP k is strictly contained in NP k+1 <ref> [Fag93] </ref>. This hierarchy does not immediately relate to computational complexity: In fact, the smallest class in the hierarchy (NP 1 ) contains NP complete collections (e.g., the collection of 3-colorable graphs). <p> Nevertheless there are polynomial collections of databases (e.g., the collection of dyadic relations with even number of tuples) that are not in NP 1 <ref> [Fag93] </ref>. The class NP 1 has interesting properties: as an example, in [Cos93] it is proven that NP 1 differs from coNP 1 , while this is a long-standing open question for unbounded NP and coNP. <p> Such formulae define a subset of NP 2 that contains NP-complete problems. We note that there are collections of polynomial-time recognizable databases (e.g., the collection of ternary relations with even number of tuples) that are not in NP 2 <ref> [Fag93] </ref>, and that NP 2 strictly contains NP 1 (e.g., the collection of dyadic relations with even number of tuples is in NP 2 ). In this case, we do assume the language includes built-in predicate for equality only (denoted also eq by analogy to the previous theorem).
Reference: [Kan90] <author> P. Kanellakis. </author> <title> Elements of relational database theory. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B, chapter 17. </booktitle> <publisher> Elsevier Science Publishers (North-Holland), </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: The importance of formal analysis of expressive power of query languages is acknowledged in the database community <ref> [Kan90] </ref>. However, the exploitation of such formal tools in our context is not straightforward, as they have been devised to handle a case where, from the logical point of view, the knowledge base has a single model over a fixed domain | this not being the case for AL-languages.
Reference: [LR96a] <author> Alon Y. Levy and Marie-Christine Rousset. CARIN: </author> <title> A representation language combining Horn rules and description logics. </title> <booktitle> In Proceedings of the Twelfth European Conference on Artificial Intelligence (ECAI-96), </booktitle> <pages> pages 323-327, </pages> <year> 1996. </year>
Reference-contexts: Note that we are not assuming the Closed World Assumption to hold over E . In order to clarify what kind of queries hybrid knowledge bases allow to express, we report next an example, taken from <ref> [LR96a] </ref>. comp, am co, and am ass co are symbols for concepts denoting companies, American companies, and companies having at least one associate company which is American, respectively. asso is a symbol for a role denoting association between companies. Consider the knowledge base consisting of the following components: 1.
Reference: [LR96b] <author> Alon Y. Levy and Marie-Christine Rousset. </author> <title> The limits on combining recursive Horn rules with description logics. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence (AAAI-96), </booktitle> <pages> pages 577-584, </pages> <year> 1996. </year>
Reference-contexts: Indeed, one can verify that T [ R [ E j= non 3 col iff G is not 3-colorable (where j= denotes the usual logical consequence operator, i.e., validity in all models). In the terminology of <ref> [LR96b] </ref>, T is "acyclic", and R is "non-recursive". Moreover T belongs to the class carin-marc of "maximal (decidable) ALCN R recursive carin", which includes the constructors t; u; ( n R); 9R:C, and negation on primitive concepts. <p> We assume that the ABox is empty, and that the TBox uses only propositional connectives. In other words, we are in case (a) according to the classification illustrated in Section 3.2. In <ref> [LR96b] </ref> it is proved that the data complexity (the input being the ABox and the relational database) of logical inference in both carin-marc and role-safe carin is coNP-complete, and we showed in Section 1 that coNP-complete problems are indeed expressed by very simple carin knowledge bases, where the Horn component is <p> The coNP-completeness of querying the classes of carin-marc and role-safe carin knowledge bases, whose definition has been recalled in Section 1, established in <ref> [LR96b] </ref> serves also as an upper bound to the expressiveness when the ABox is empty. In other words we know that no carin-marc or role-safe carin knowledge base can express queries which are not in coNP. <p> Also, we proved some results on the expressive power of two hybrid languages, in particular obtaining two lower bounds on their expressiveness (Theorems 2 and 3). Upper bound for the expressiveness of the former language follows from the results of <ref> [LR96b] </ref>. We still have to investigate the upper bound of expressiveness of the latter language. In this work we assumed empty ABoxes. Nevertheless the results we presented are valid also if the ABox contains positive atomic assertions such as red (node1).
Reference: [MP96] <author> J.A. Makowsky and Y.B. Pnueli. </author> <title> Arity and alternation in second-order logic. </title> <journal> Annals of Pure and Applied Logics, </journal> <volume> 78 </volume> <pages> 189-202, </pages> <year> 1996. </year>
Reference-contexts: On the other hand, T and R deal with the intensional level of the knowledge base. The former expresses general knowledge about the concepts of the 1 Formulae of this kind are said to be in doubly prenex normal form <ref> [MP96] </ref>. description logic part, whereas the latter is used to define intensional predicates in terms of concepts, roles, and relations. Following the spirit of deductive databases, it is reasonable to conceive R as specifying the computation needed to extract information from the knowledge base.
Reference: [Rei84] <author> Raymond Reiter. </author> <title> Towards a logical reconstruction of relational database theory. </title> <editor> In M. L. Brodie, J. Mylopoulos, and J. W. Schmidt, editors, </editor> <booktitle> On Conceptual Modelling. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: From the logical point of view, a relational database is a first-order finite interpretation that satisfies the properties expressed in the relational schema (the database is indeed seen as a model of the schema, see <ref> [Rei84] </ref>). Thus, a query is actually a function over the collection of all possible finite models of the relational schema. In hybrid languages, the situation is more complicated.
Reference: [Sch95] <author> J. S. Schlipf. </author> <title> The expressive powers of the logic programming semantics. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 51 </volume> <pages> 64-86, </pages> <year> 1995. </year>
Reference-contexts: For instance, "while queries" [AV92] can express exactly the set of second order properties over ordered finite structures. 3. With respect to a complexity class, such as P, NP, coNP, PSPACE, etc. As an example, Datalog with stable negation can express all NP properties of finite structures <ref> [Sch95] </ref>, e.g., whether a graph is 3-colorable or not. According to the above classification, [Bor96] gives a contribution in the context of the second measure, whereas the so-called "Fagin's theorem" [Fag74], provides the basis for unifying the second and the third modalities.
Reference: [Var86] <author> M. Y. Vardi. </author> <title> Querying logical databases. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 33 </volume> <pages> 142-160, </pages> <year> 1986. </year>
References-found: 22

