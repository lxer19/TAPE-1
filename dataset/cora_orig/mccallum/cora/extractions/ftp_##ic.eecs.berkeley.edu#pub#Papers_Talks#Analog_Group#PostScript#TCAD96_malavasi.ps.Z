URL: ftp://ic.eecs.berkeley.edu/pub/Papers_Talks/Analog_Group/PostScript/TCAD96_malavasi.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu:80/~charbon/publications/my_publications.html
Root-URL: http://www.cs.berkeley.edu
Title: Automation of IC Layout with Analog Constraints  
Author: Enrico Malavasi, Edoardo Charbon, Eric Felt and Alberto Sangiovanni-Vincentelli 
Keyword: Layout, Analog Design, Constraint-Driven Layout.  
Date: 1999  
Note: 100 IEEE TRANSACTIONS ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS, VOL. XX, NO. Y, MONTH  
Abstract: A methodology for the automatic synthesis of full-custom IC layout with analog constraints is presented. The methodology guarantees that all performance constraints are met when feasible, or otherwise infeasibility is detected as soon as possible, thus providing a robust and efficient design environment. In the proposed approach, performance specifications are translated into lower level bounds on parasitics or geometric parameters, using sensitivity analysis. Bounds can be used by a set of specialized layout tools performing stack generation, placement, routing and compaction. For each tool, a detailed description is provided of its functionality, of the way constraints are mapped and enforced, and of its impact on the design flow. Examples drawn from industrial applications are reported to illustrate the effectiveness of the approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Y. Koh, C. H. Sequin and P. R. Gray, "OPASYN: </author> <title> A compiler for CMOS operational amplifiers", </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. 9, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 113-126, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators <ref> [1] </ref>, [2], [3], switched-capacitor filters [4], [5], [6] and data converters [7], [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [2] <author> H. Onodera, H. Kanbara and K. Tamaru, </author> <title> "Operational Amplifier Compilation with Performance Optimization", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <month> May </month> <year> 1989. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], <ref> [2] </ref>, [3], switched-capacitor filters [4], [5], [6] and data converters [7], [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [3] <author> R. Harjani, R. A. Rutenbar and L. R. Carley, "OASYS. </author> <title> A Framework for Analog Circuit Synthesis", </title> <institution> Research Report CMUCAD-89-65, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> Nov </month> <year> 1989. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], <ref> [3] </ref>, switched-capacitor filters [4], [5], [6] and data converters [7], [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [4] <author> H. Yaghutiel, A. Sangiovanni-Vincentelli and P. R. Gray, </author> <title> "A Methodology for Automated Layout of Switched-Capacitor Filters", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 444-447, </pages> <year> 1986. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], [3], switched-capacitor filters <ref> [4] </ref>, [5], [6] and data converters [7], [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [5] <author> Y. Therasse, L. Reynders, R. Lannoo and B. Dupont, </author> <title> "A Switched-Capacitor Filter Compiler", </title> <booktitle> VLSI System Design, </booktitle> <pages> pp. 85-88, </pages> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], [3], switched-capacitor filters [4], <ref> [5] </ref>, [6] and data converters [7], [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [6] <author> J. Assael, P. Senn and M. S. Tawfik, </author> <title> "A Switched-Capacitor Filter Silicon Compiler", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 23, n.1, </volume> <pages> pp. 166-174, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], [3], switched-capacitor filters [4], [5], <ref> [6] </ref> and data converters [7], [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [7] <author> P. E. Allen and P. R. Barton, </author> <title> "A Silicon Compiler for Successive Approximation A/D and D/A Converters", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 552-555, </pages> <year> 1986. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], [3], switched-capacitor filters [4], [5], [6] and data converters <ref> [7] </ref>, [8], [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [8] <author> G. Jusuf, P. R. Gray and A. Sangiovanni-Vincentelli, </author> <title> "CADICS Cyclic Analog-To-Digital Converter Synthesis", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 286-289, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], [3], switched-capacitor filters [4], [5], [6] and data converters [7], <ref> [8] </ref>, [9]. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [9] <author> H. Chang, E. Liu, R. Neff, E. Felt, E. Malavasi, E. Char-bon, A. Sangiovanni-Vincentelli and P. R. Gray, </author> <title> "Top-Down, Constraint-Driven Methodology Based Generation of n-bit Interpolative Current Source D/A Converters", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 369-372, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: At the system level, analog silicon compilers have reached satisfactory results with systems characterized by regular hierarchical structures. Examples are programs for the automatic synthesis of opamps and comparators [1], [2], [3], switched-capacitor filters [4], [5], [6] and data converters [7], [8], <ref> [9] </ref>. Although these generators cover a substantial fraction of the analog circuits needed in most industrial applications, a more general approach, able to cope with arbitrary architecture and full custom layout, is often needed.
Reference: [10] <author> G. Winner et al., </author> <title> "Analogue Macrocell Assembler", </title> <booktitle> VLSI System Design, </booktitle> <pages> pp. 68-71, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: This research has been supported in part by SRC (grant 91-DC-008), ARPA (grant J-FBI-90-073), FUJITSU, the MICRO Program of the State of California, the Italian National Council of Research, and Asea Brown Boveri, Baden, Switzerland. and channel routing, have been proposed: in macro-cell <ref> [10] </ref> and standard-cell [11], [12], [13] approaches, capacitive coupling between interconnections is minimized during global routing by allocating sensitive nets to separate channels. In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules.
Reference: [11] <author> C. D. Kimble, A. E. Dunlop, G. F. Gross, V. L. Hein, M. Y. Lu-ong, K. J. Stern and E. J. Swanson, </author> <title> "Autorouted Analog VLSI", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 72-78, </pages> <year> 1985. </year>
Reference-contexts: This research has been supported in part by SRC (grant 91-DC-008), ARPA (grant J-FBI-90-073), FUJITSU, the MICRO Program of the State of California, the Italian National Council of Research, and Asea Brown Boveri, Baden, Switzerland. and channel routing, have been proposed: in macro-cell [10] and standard-cell <ref> [11] </ref>, [12], [13] approaches, capacitive coupling between interconnections is minimized during global routing by allocating sensitive nets to separate channels. In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules.
Reference: [12] <author> T. Pletersek et al., </author> <title> "High-PerformanceDesigns with CMOS Analogue Standard Cells", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 21, n.2, </volume> <pages> pp. 215-222, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: This research has been supported in part by SRC (grant 91-DC-008), ARPA (grant J-FBI-90-073), FUJITSU, the MICRO Program of the State of California, the Italian National Council of Research, and Asea Brown Boveri, Baden, Switzerland. and channel routing, have been proposed: in macro-cell [10] and standard-cell [11], <ref> [12] </ref>, [13] approaches, capacitive coupling between interconnections is minimized during global routing by allocating sensitive nets to separate channels. In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules.
Reference: [13] <author> L. D. Smith et al., </author> <title> "A CMOS-Based Analog Standard Cell Product Family", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 370-379, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: This research has been supported in part by SRC (grant 91-DC-008), ARPA (grant J-FBI-90-073), FUJITSU, the MICRO Program of the State of California, the Italian National Council of Research, and Asea Brown Boveri, Baden, Switzerland. and channel routing, have been proposed: in macro-cell [10] and standard-cell [11], [12], <ref> [13] </ref> approaches, capacitive coupling between interconnections is minimized during global routing by allocating sensitive nets to separate channels. In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules.
Reference: [14] <author> J. Rijmenants, J. B. Litsios, T. R. Schwarz and M. G. R. De-grauwe, "ILAC: </author> <title> An Automated Layout Tool for Analog CMOS Circuits", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 417-425, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: In ilac <ref> [14] </ref>, the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules. Knowledge-based approaches, such as the ones presented in salim [16], ladies [17] and blades [18], rely heavily on the user's expertise.
Reference: [15] <author> M. G. R. Degrauwe et al., </author> <title> "Towards an Analog System Design Environment", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 659-671, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: In ilac [14], the layout generator for the analog synthesis system idac <ref> [15] </ref> the layout is based on the generation of specialized pre-defined modules. Knowledge-based approaches, such as the ones presented in salim [16], ladies [17] and blades [18], rely heavily on the user's expertise.
Reference: [16] <author> M. Kayal, S. Piguet, M. Declercq and B. Hochet, "SALIM: </author> <title> A Layout Generator Tool for Analog ICs", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 751-754, </pages> <month> May </month> <year> 1988. </year> <editor> MALAVASI ET AL.: </editor> <title> AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 113 </title>
Reference-contexts: In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules. Knowledge-based approaches, such as the ones presented in salim <ref> [16] </ref>, ladies [17] and blades [18], rely heavily on the user's expertise.
Reference: [17] <author> M. Mogaki, N. Kato, Y. Chikami, N. Yamada and Y. Kobayashi, "LADIES: </author> <title> An Automatic Layout system for Analog LSI's", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 450-453, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules. Knowledge-based approaches, such as the ones presented in salim [16], ladies <ref> [17] </ref> and blades [18], rely heavily on the user's expertise.
Reference: [18] <author> F. M. Turky and E. E. Perry, "BLADES: </author> <title> An A.I. Approach to Analog Circuit Design", </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. </volume> <editor> CAD-8, n. </editor> <volume> 6, </volume> <pages> pp. 680-692, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules. Knowledge-based approaches, such as the ones presented in salim [16], ladies [17] and blades <ref> [18] </ref>, rely heavily on the user's expertise. In [19], a gridless channel-router is described, where great importance is given to parasitic control during routing: capacitance bounds between nets are preserved by setting the minimum separation between horizontal segments in a channel, and by ordering them to avoid crossovers (if possible).
Reference: [19] <author> R. S. Gyurcsik and J.-C. Jeen, </author> <title> "A Generalized Approach to Routing Mixed Analog and Digital Signal Nets in a Channel", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 436-442, </pages> <month> Apr </month> <year> 1989. </year>
Reference-contexts: In ilac [14], the layout generator for the analog synthesis system idac [15] the layout is based on the generation of specialized pre-defined modules. Knowledge-based approaches, such as the ones presented in salim [16], ladies [17] and blades [18], rely heavily on the user's expertise. In <ref> [19] </ref>, a gridless channel-router is described, where great importance is given to parasitic control during routing: capacitance bounds between nets are preserved by setting the minimum separation between horizontal segments in a channel, and by ordering them to avoid crossovers (if possible).
Reference: [20] <author> I. Harada, H. Kitazawa and T. Kaneko, </author> <title> "A Routing System for Mixed A/D Standard Cell LSI's", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 378-381, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: In [19], a gridless channel-router is described, where great importance is given to parasitic control during routing: capacitance bounds between nets are preserved by setting the minimum separation between horizontal segments in a channel, and by ordering them to avoid crossovers (if possible). In <ref> [20] </ref>, cross-coupling minimization is the routing target, while stray resistances are controlled by means of variable wire-segment widths. In stat [21] and in koan/anagram [22], placement and routing rely on weighted parasitic minimization and matching constraint enforcement.
Reference: [21] <author> S. W. Mehranfar, </author> <title> "A Technology-Independent Approach to Custom Analog Cell Generation", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 26, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 386-393, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: In [20], cross-coupling minimization is the routing target, while stray resistances are controlled by means of variable wire-segment widths. In stat <ref> [21] </ref> and in koan/anagram [22], placement and routing rely on weighted parasitic minimization and matching constraint enforcement. Area routing and unconstrained placement with abutment capability provide the layout with high flexibility and good area performance.
Reference: [22] <author> J. M. Cohn, D. J. Garrod, R. A. Rutenbar and L. R. Car-ley, "KOAN/ANAGRAM II: </author> <title> New Tools for Device-Level Analog Placement and Routing", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 26, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 330-342, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: In [20], cross-coupling minimization is the routing target, while stray resistances are controlled by means of variable wire-segment widths. In stat [21] and in koan/anagram <ref> [22] </ref>, placement and routing rely on weighted parasitic minimization and matching constraint enforcement. Area routing and unconstrained placement with abutment capability provide the layout with high flexibility and good area performance. However, no clear strategy is indicated for the definition of parasitic weights, of routing schedule and matching constraints. <p> It can also be used to merge the diffusion regions of MOS transistors or of other components, such as capacitors, BJTs etc. In puppy-a, abutment is obtained in two different ways. The first is by dynamic device abutment (similar to the approach in koan <ref> [22] </ref>), performed by puppy-a during the annealing algorithm. In puppy-a, dynamic abutment is driven by parasitic constraints, as well as by area and wiring considerations. Instead of randomly choosing the devices to merge, the algorithm operates first on the nets whose parasitics are critical for performance constraints.
Reference: [23] <author> R. Okuda, T. Sato, H. Onodera and K. Tamaru, </author> <title> "An Efficient Algorithm for Layout Compaction Problem with Symmetry Constraints", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 148-151, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: This information must be supplied by the user, on the ground of his/her experience and knowledge of the circuit behavior. Finally, most of the systems cited above produce non-compacted layouts. Unconstrained compaction can degrade parasitics by modifying the spacings between interconnections and matched devices. So far, few approaches <ref> [23] </ref> have been reported which face, at least in part, the multi-constrained analog compaction problem. <p> Round off the coordinates of the elements laying out of the critical path 4. Verify that all constraints are satisfied Using the CG solution as starting point is key to a significant speed-up in the solution of the linear problem. Compared to previous approaches <ref> [23] </ref> solving compaction using an LP solver, this algorithm represents a substantial improvement. In fact in our case the LP solver starts from a feasible configuration which is already close to the final solution.
Reference: [24] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "Constraint-Based Channel Routing for Analog and Mixed-Analog Digital Circuits", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 198-201, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Analog CAD tools, like their digital counterparts, must guarantee to meet all specs, or otherwise to detect as soon as possible infeasibility and its causes. Only recently constraint-driven layout generation tools <ref> [24] </ref>, [25], [26], [27] have been proposed, generally based on sensitivity analysis of circuit performance [28], [29]. In this paper, a methodology and the supporting tools [30] for performance-driven layout synthesis are presented. <p> Routing with Analog Constraints Channel Routing In the channel router art <ref> [24] </ref>, the two-layer gridless channel-routing problem [47] is represented by a vertical-constraint graph (VCG) whose nodes correspond to the horizontal segments of a net or subnet. An undirected edge links two nodes if the associated segments have a common horizontal span.
Reference: [25] <author> E. Malavasi, U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "A Routing Methodology for Analog Integrated Circuits", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 202-205, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Analog CAD tools, like their digital counterparts, must guarantee to meet all specs, or otherwise to detect as soon as possible infeasibility and its causes. Only recently constraint-driven layout generation tools [24], <ref> [25] </ref>, [26], [27] have been proposed, generally based on sensitivity analysis of circuit performance [28], [29]. In this paper, a methodology and the supporting tools [30] for performance-driven layout synthesis are presented.
Reference: [26] <author> S. K. Hong and P. E. Allen, </author> <title> "Performance driven analog layout compiler", </title> <booktitle> in Proc. IEEE Int. Symposium on Circuits and Systems, </booktitle> <pages> pp. 835-838, </pages> <year> 1990. </year>
Reference-contexts: Analog CAD tools, like their digital counterparts, must guarantee to meet all specs, or otherwise to detect as soon as possible infeasibility and its causes. Only recently constraint-driven layout generation tools [24], [25], <ref> [26] </ref>, [27] have been proposed, generally based on sensitivity analysis of circuit performance [28], [29]. In this paper, a methodology and the supporting tools [30] for performance-driven layout synthesis are presented.
Reference: [27] <author> E. Charbon, E. Malavasi, U. Choudhury, A. Casotto and A. Sangiovanni-Vincentelli, </author> <title> "A Constraint-Driven Placement Methodology for Analog Integrated Circuits", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 2821-2824, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Analog CAD tools, like their digital counterparts, must guarantee to meet all specs, or otherwise to detect as soon as possible infeasibility and its causes. Only recently constraint-driven layout generation tools [24], [25], [26], <ref> [27] </ref> have been proposed, generally based on sensitivity analysis of circuit performance [28], [29]. In this paper, a methodology and the supporting tools [30] for performance-driven layout synthesis are presented. <p> After each stage of the design, further elaboration is allowed only if the partial design can meet all MALAVASI ET AL.: AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 101 performance specifications. While the tools supporting the methodology have been presented [28], <ref> [27] </ref>, [31], [32], [33], [34], so far no paper has been published to present an overall view of the layout methodology. <p> In practice, only the mismatch between the source resistances in the differential pair and the mismatch between the two current mirrors (M 20 ; M 23 ) and (M 21 ; M 22 ) are responsible for offset. IV. Placement with Analog Constraints Puppy-a <ref> [27] </ref> is a macro-cell-style placement tool based on Simulated Annealing (S.A.) [45]. In puppy-a, the cost function is a weighted sum of non-homogeneous parameters controlling parasitics, symmetries and device matching. Let s be a placement configuration, i.e. the set of the positions and rotation angles of all layout modules.
Reference: [28] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "Constraint Generation for Routing Analog Circuits", </title> <booktitle> in Proc. IEEE/ACM DAC, </booktitle> <pages> pp. 561-566, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Analog CAD tools, like their digital counterparts, must guarantee to meet all specs, or otherwise to detect as soon as possible infeasibility and its causes. Only recently constraint-driven layout generation tools [24], [25], [26], [27] have been proposed, generally based on sensitivity analysis of circuit performance <ref> [28] </ref>, [29]. In this paper, a methodology and the supporting tools [30] for performance-driven layout synthesis are presented. In the methodology, high-level constraints are automatically translated into a set of low-level bounds on the parameters (i.e. parasitics and geometry) that can be effectively controlled during layout synthesis. <p> After each stage of the design, further elaboration is allowed only if the partial design can meet all MALAVASI ET AL.: AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 101 performance specifications. While the tools supporting the methodology have been presented <ref> [28] </ref>, [27], [31], [32], [33], [34], so far no paper has been published to present an overall view of the layout methodology. <p> The array of all degradations of performance functions due to parasitic variations is h i Before the definition of layout details, one cannot take advantage of the possible cancellation effects due to positive 1 Here and in what follows the non-normalized notation, first used in <ref> [28] </ref>, is used for sensitivities, without loss of generality. 102 IEEE TRANSACTIONS ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS, VOL. XX, NO. Y, MONTH 1999 and negative sensitivities for different parasitics. <p> Similarly, A 0 indicates that every element of A is a non-negative real number. III. The Constraint Generator In general, an infinite number of solutions exist for the constraint-generation problem. Parcar <ref> [28] </ref> is a constraint-generator, namely a tool able to find a solution to the constraint-generation problem under particular assumptions. Among all solutions, parcar chooses the one maximizing the layout tool flexibility, which is a measure of how easily the tool is able to meet the constraints. <p> Therefore flexibility is defined as F = 1 kp (max) p (min) k 2 A discussion of this definition and of the quadratic norm choice can be found in <ref> [28] </ref>. In parcar, a geometric norm is used, and the constraint-generation problem is solved by minimizing a quadratic function (the geometric norm) subject to linear constraints (7) and (8), using a standard quadratic programming (QP) package.
Reference: [29] <author> G. Gad-El-Karim and R. S. Gyurcsik, </author> <title> "Use of Performance Sensitivities in Analog Cell Layout", </title> <booktitle> in Proc. IEEE Int. Symposium on Circuits and Systems, </booktitle> <month> June </month> <year> 1991. </year>
Reference-contexts: Analog CAD tools, like their digital counterparts, must guarantee to meet all specs, or otherwise to detect as soon as possible infeasibility and its causes. Only recently constraint-driven layout generation tools [24], [25], [26], [27] have been proposed, generally based on sensitivity analysis of circuit performance [28], <ref> [29] </ref>. In this paper, a methodology and the supporting tools [30] for performance-driven layout synthesis are presented. In the methodology, high-level constraints are automatically translated into a set of low-level bounds on the parameters (i.e. parasitics and geometry) that can be effectively controlled during layout synthesis.
Reference: [30] <author> H. Chang, A. Sangiovanni-Vincentelli, F. Balarin, E. Charbon, U. Choudhury, G. Jusuf, E. Liu, E. Malavasi, R. Neff and P. Gray, </author> <title> "A Top-down, Constraint-Driven Design Methodology for Analog Integrated Circuits", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 841-846, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Only recently constraint-driven layout generation tools [24], [25], [26], [27] have been proposed, generally based on sensitivity analysis of circuit performance [28], [29]. In this paper, a methodology and the supporting tools <ref> [30] </ref> for performance-driven layout synthesis are presented. In the methodology, high-level constraints are automatically translated into a set of low-level bounds on the parameters (i.e. parasitics and geometry) that can be effectively controlled during layout synthesis. Design choices are taken trying to detect infeasible configurations as early as possible.
Reference: [31] <author> E. Malavasi and A. Sangiovanni-Vincentelli, </author> <title> "Area Routing for Analog Layout", </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. 12, </volume> <editor> n. </editor> <volume> 8, </volume> <pages> pp. 1186-1197, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: After each stage of the design, further elaboration is allowed only if the partial design can meet all MALAVASI ET AL.: AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 101 performance specifications. While the tools supporting the methodology have been presented [28], [27], <ref> [31] </ref>, [32], [33], [34], so far no paper has been published to present an overall view of the layout methodology. <p> Only coupling capacitances with other nets running close to the connector will suffer slight asymmetries. Area Routing Road <ref> [31] </ref> is a maze router based on the A* algorithm [48], using a relative grid with dynamic allocation. For each net, the path found by the maze router is the one of minimum length. <p> Symmetries Road is able to find symmetric paths for differential signals with symmetric placements, even in the presence of a non-symmetric distribution of terminals. The algorithm, described in detail in <ref> [31] </ref>, is illustrated in Fig.7. Let us assume without loss of generality that the symmetry axis is vertical and it splits the circuit into a left half and a right half.
Reference: [32] <author> E. Felt, E. Malavasi, E. Charbon, R. Totaro and A. Sangiovanni-Vincentelli, </author> <title> "Performance-Driven Compaction for Analog Integrated Circuits", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 1731-1735, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: After each stage of the design, further elaboration is allowed only if the partial design can meet all MALAVASI ET AL.: AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 101 performance specifications. While the tools supporting the methodology have been presented [28], [27], [31], <ref> [32] </ref>, [33], [34], so far no paper has been published to present an overall view of the layout methodology. <p> Example As a practical example, consider the clocked comparator compl, whose schematic is shown in Fig.3. This comparator has been used as a benchmark in several recent works on analog CAD <ref> [32] </ref>, [43], [44], due to its relevant performance sensitivity to layout details.
Reference: [33] <author> E. Charbon, E. Malavasi, D. Pandini and A. Sangiovanni-Vincentelli, </author> <title> "Simultaneous Placement and Module Optimization of Analog IC's", </title> <booktitle> in Proc. IEEE/ACM DAC, </booktitle> <pages> pp. 31-35, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: After each stage of the design, further elaboration is allowed only if the partial design can meet all MALAVASI ET AL.: AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 101 performance specifications. While the tools supporting the methodology have been presented [28], [27], [31], [32], <ref> [33] </ref>, [34], so far no paper has been published to present an overall view of the layout methodology. <p> The criterion whether to accept the move is based on the usual annealing scheme <ref> [33] </ref>. Example Consider the clocked comparator compl. Many possible stack implementations exist for this circuit. Two of such possible solutions are shown in Fig.4. All transistors have been grouped in four sub-circuits, according to their channel widths, their matching requirements and bulk nets.
Reference: [34] <author> E. Malavasi and D. Pandini, </author> <title> "Optimum CMOS Stack Generation with Analog Constraints", </title> <journal> IEEE Trans. on CAD/ICAS, </journal> <volume> vol. 14, </volume> <editor> n. </editor> <volume> 1, </volume> <pages> pp. 107-122, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: After each stage of the design, further elaboration is allowed only if the partial design can meet all MALAVASI ET AL.: AUTOMATION OF IC LAYOUT WITH ANALOG CONSTRAINTS 101 performance specifications. While the tools supporting the methodology have been presented [28], [27], [31], [32], [33], <ref> [34] </ref>, so far no paper has been published to present an overall view of the layout methodology. <p> Instead of randomly choosing the devices to merge, the algorithm operates first on the nets whose parasitics are critical for performance constraints. The second is through the stack generator ldo, which efficiently builds stacks containing transistors all with the same width. Ldo <ref> [34] </ref> implements stacks of folded or interleaved MOS transistors sharing their drain and source diffusions. Dense layouts can be achieved with this approach, the junction capacitances associated with shared diffusions being minimized. <p> The second phase explores the compatibility between all paths. By solving a clique problem, an optimum set of paths is selected, which minimizes the cost function and contains all the transistors of the circuit. More details on the algorithm and its implementation can be found in <ref> [34] </ref>. In ldo, not only are symmetries fully taken into account, but they have proved effective to reduce the computational complexity by limiting the size of the search space, while preserving the admissibility of the algorithm (i.e. the optimum solution is always found).
Reference: [35] <author> W. Nye, D. C. Riley, A. Sangiovanni-Vincentelli and A. L. Tits, "DELIGHT-SPICE: </author> <title> An Optimization-Based System for the Design of Integrated Circuits", </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. 7, </volume> <editor> n. </editor> <volume> 4, </volume> <pages> pp. 501-519, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: A generalized expression for the computation of sensitivities from a set of arbitrary performance functions has been derived in <ref> [35] </ref>, [36].
Reference: [36] <author> J.-M. Shyu, </author> <title> "Performance Optimization of Integrated Circuits", </title> <institution> Memorandum UCB/ERL M88/74, University of California at Berkeley, </institution> <month> Nov </month> <year> 1988. </year>
Reference-contexts: A generalized expression for the computation of sensitivities from a set of arbitrary performance functions has been derived in [35], <ref> [36] </ref>.
Reference: [37] <author> S. W. Director and R. A. Rohrer, </author> <title> "The generalized adjoint network and network sensitivities", </title> <journal> IEEE Trans. on Circuit Theory, </journal> <volume> vol. 16, </volume> <pages> pp. 318-323, </pages> <month> August </month> <year> 1969. </year>
Reference-contexts: The adjoint technique of sensitivity analysis <ref> [37] </ref> has been used in the AC, DC and time [38] domain. Performance degradations are approximated by linearized expressions using sensitivities [39], which is acceptable as long as we assume that degradations are small compared to the nominal values.
Reference: [38] <author> U. Choudhury, </author> <title> "Sensitivity Computation in SPICE3", M.S. </title> <type> Thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1988. </year>
Reference-contexts: The adjoint technique of sensitivity analysis [37] has been used in the AC, DC and time <ref> [38] </ref> domain. Performance degradations are approximated by linearized expressions using sensitivities [39], which is acceptable as long as we assume that degradations are small compared to the nominal values. <p> They were computed by spice-3 <ref> [38] </ref> with a precision within the third digit. <p> This has allowed us to test the described algorithms, and to validate the methodological approach on a large set of test circuits. All sensitivity computation and simulations have been done using spice-3 <ref> [38] </ref>. This section reports a few circuit examples to illustrate the methodology and the results which can be achieved.
Reference: [39] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "Use of Performance Sensitivities in Routing of Analog Circuits", </title> <booktitle> in Proc. IEEE Int. Symposium on Circuits and Systems, </booktitle> <pages> pp. 348-351, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The adjoint technique of sensitivity analysis [37] has been used in the AC, DC and time [38] domain. Performance degradations are approximated by linearized expressions using sensitivities <ref> [39] </ref>, which is acceptable as long as we assume that degradations are small compared to the nominal values.
Reference: [40] <author> M. J. M. Pelgrom, A. C. J. Duinmaijer and A. P. G. Welbers, </author> <title> "Matching Properties of MOS Transistors", </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <pages> pp. 1433-1440, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: in p (mismatches as well as parasitics) are independent random variables with zero mean, the variance of the degradation of performance function K i with respect to the variances of all mismatches is 2 (K i ) = j6=l jS i; j;l j 2 2 (ffip j;l ): (12) In <ref> [40] </ref>, and more recently in [41], relations have been determined between variances and the relative orientation and distance between device pairs. This information can be used to translate the maximum allowed performance degradation into constraints on the physical separation and relative orientation between devices.
Reference: [41] <author> C. Guardiani, A. Tomasini, J. Benkoski, M. Quarantelli and P. Gubian, </author> <title> "Applying a submicron mismatch model to practical IC design", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 297-300, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: as parasitics) are independent random variables with zero mean, the variance of the degradation of performance function K i with respect to the variances of all mismatches is 2 (K i ) = j6=l jS i; j;l j 2 2 (ffip j;l ): (12) In [40], and more recently in <ref> [41] </ref>, relations have been determined between variances and the relative orientation and distance between device pairs. This information can be used to translate the maximum allowed performance degradation into constraints on the physical separation and relative orientation between devices. This procedure has been described in detail in [42].
Reference: [42] <author> E. Charbon, E. Malavasi and A. Sangiovanni-Vincentelli, </author> <title> "Generalized Constraint Generation for Analog Circuit Design", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 408-414, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: This information can be used to translate the maximum allowed performance degradation into constraints on the physical separation and relative orientation between devices. This procedure has been described in detail in <ref> [42] </ref>. Symmetry Constraints A quantitative approach to the determination of all parasitic and device symmetry constraints has been developed and is used to generate automatically symmetry constraints. <p> Symmetry is recognized as a particular case of matching between devices or interconnections belonging to distinct differential signal paths, which become effective when the circuit is operated in differential mode. A graph-based search algorithm, described in detail in <ref> [42] </ref>, has been designed for the automated detection of all critical symmetry constraints. First, a graph is built, with a node for each circuit net, and an edge for each device, to represent the circuit connectivity.
Reference: [43] <author> B. Basaran, R. A. Rutenbar and L. R. Carley, </author> <title> "Latchup-Aware Placement and Parasitic-Bounded Routing of Custom Analog Cells", </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 415-421, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Example As a practical example, consider the clocked comparator compl, whose schematic is shown in Fig.3. This comparator has been used as a benchmark in several recent works on analog CAD [32], <ref> [43] </ref>, [44], due to its relevant performance sensitivity to layout details.
Reference: [44] <author> Z. Daoud and C. J. Spanos, "DORIC: </author> <title> Design of Optimal and Robust Integrated Circuits", </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 361-364, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Example As a practical example, consider the clocked comparator compl, whose schematic is shown in Fig.3. This comparator has been used as a benchmark in several recent works on analog CAD [32], [43], <ref> [44] </ref>, due to its relevant performance sensitivity to layout details.
Reference: [45] <author> E. H. L. Aarts and P. J. M. van Laarhoven, </author> <title> Simulated Annealing: Theory and Applications, </title> <address> D. </address> <publisher> Reidel Publishing, </publisher> <year> 1987. </year>
Reference-contexts: IV. Placement with Analog Constraints Puppy-a [27] is a macro-cell-style placement tool based on Simulated Annealing (S.A.) <ref> [45] </ref>. In puppy-a, the cost function is a weighted sum of non-homogeneous parameters controlling parasitics, symmetries and device matching. Let s be a placement configuration, i.e. the set of the positions and rotation angles of all layout modules.
Reference: [46] <author> C. Sechen and A. Sangiovanni-Vincentelli, "Chip-Planning, </author> <title> Placement and Global Routing of Macro/Custom Cell IC's using Simulated Annealing", </title> <booktitle> in Proc. IEEE/ACM DAC, </booktitle> <pages> pp. 73-80, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Two estimation methods are available, one based on semi-perimeter and the other on pseudo Steiner tree technique. * f a (s) is the total area of the circuit. Space for routing is estimated with the halo mechanism described in <ref> [46] </ref> * f ov (s) is the total overlapping area between cells. * f we (s) is a measure of the discontinuity of well regions. This parameter is used only in device-level placement.
Reference: [47] <author> M. Burstein, </author> <title> "Channel Routing", in Layout Design and Verification, </title> <journal> ch. </journal> <volume> 4, </volume> <pages> pp. 133-167, </pages> <editor> T.Ohtsuki Ed., </editor> <publisher> North Holland, </publisher> <year> 1986. </year>
Reference-contexts: Routing with Analog Constraints Channel Routing In the channel router art [24], the two-layer gridless channel-routing problem <ref> [47] </ref> is represented by a vertical-constraint graph (VCG) whose nodes correspond to the horizontal segments of a net or subnet. An undirected edge links two nodes if the associated segments have a common horizontal span.
Reference: [48] <author> G. W. Clow, </author> <title> "A Global Routing Algorithm for General Cells", </title> <booktitle> in Proc. IEEE/ACM DAC, </booktitle> <pages> pp. 45-51, </pages> <year> 1984. </year>
Reference-contexts: Only coupling capacitances with other nets running close to the connector will suffer slight asymmetries. Area Routing Road [31] is a maze router based on the A* algorithm <ref> [48] </ref>, using a relative grid with dynamic allocation. For each net, the path found by the maze router is the one of minimum length. If a cost function is defined on the edges of the grid, the path found is the one minimizing the integral of the cost function.
Reference: [49] <author> E. Felt, E. Charbon, E. Malavasi and A. Sangiovanni-Vincentelli, </author> <title> "An Efficient Methodology for Symbolic Compaction of Analog IC's with Multiple Symmetry Constraints", </title> <booktitle> in Proc. European Design Automation Conference, </booktitle> <pages> pp. 148-153, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: VI. Compaction Sparcs-a <ref> [49] </ref> is a mono-dimensional constraint-graph (CG) longest-path compactor, implementing algorithms to enforce symmetry and parasitic constraints. The role of compaction in the constraint-driven approach is important for two reasons: 1.
Reference: [50] <author> E. Malavasi, E. Felt, E. Charbon and A. Sangiovanni-Vincentelli, </author> <title> "Symbolic Compaction with Analog Constraints", </title> <journal> International Journal of Circuit Theory and Applications, John Wiley & Sons, </journal> <volume> vol. 23, </volume> <editor> n. </editor> <volume> 4, </volume> <pages> pp. 433-452, </pages> <month> July-August </month> <year> 1995. </year>
Reference-contexts: In fact in our case the LP solver starts from a feasible configuration which is already close to the final solution. The range of cases that can be managed with acceptable computational complexity is therefore significantly broadened <ref> [50] </ref>. Control over cross-coupling capacitances is enforced by modifying the constraint-graph before computing the longest path. Proper distances between parallel interconnection edges are kept to maintain cross-coupling capacitances below their bounds.
Reference: [51] <author> J. Kuhn, </author> <title> "Analog Module Generators for Silicon Compilation", </title> <booktitle> VLSI Systems Design, </booktitle> <pages> pp. 74-80, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Notice that this particular layout cannot be found with any tool relying only on automatic abutment during placement, because of the interleaved pattern in the differential pair. Nor could it be generated with standard module generators <ref> [51] </ref>, unless a detailed knowledge of the circuit structure was known a priori. Example: fastcomp Fig.14 shows the schematic of a clocked comparator named fastcomp. For this circuit we consider specifications on voltage offset and switching speed.

References-found: 51

