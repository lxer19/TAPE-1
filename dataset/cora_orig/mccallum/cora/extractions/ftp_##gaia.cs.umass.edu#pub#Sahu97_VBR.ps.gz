URL: ftp://gaia.cs.umass.edu/pub/Sahu97:VBR.ps.gz
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Email: sahu@cs.umass.edu zhzhang@cs.umn.edu kurose,towsley@cs.umass.edu  
Title: On the Efficient Retrieval of VBR Video in a Multimedia Server  
Author: Sambit Sahu Zhi-Li Zhang Jim Kurose and Don Towsley 
Affiliation: Dept of Comp. Science Dept of Comp. Science Dept of Comp. Science Univ. of Massachusetts Univ. of Minnesota Univ. of Massachusetts  
Abstract: In this paper, we consider the retrieval of variable bit rate (VBR) video data from the storage server subject to the constraint that the server's buffer between its disk and network subsystem neither empties nor overflows. Our approach is based on the realization that there are two separate decisions to be made, namely, first to determine which data to access by what deadline and second, how to schedule the data access. These decisions are the responsibilities of the data access and data scheduling policies. In the context of data access policies, we examine both the constant time length (CTL) and constant data length (CDL) policies. We find that increasing either the round length (for CTL access) or the fixed data size (for CDL access) allows data retrieval to be smoothed out over time. We then examine round-based and deadline-based data scheduling in conjunction with CTL and CDL data access policies. We find that two deadline-based scheduling policies that we propose (lazy-EDF and Workahead CTL-Round) allow a significant additional amount of smoothing to be achieved over traditional round-based data scheduling. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Biersack, and F. Thiesse. </author> <title> A New Class of Constant Data Length Retrieval Algorithms for Video Servers with VBR Streams, Multimedia Storage and Archiving Systems, </title> <booktitle> SPIE Photonics East `96 Symposium, </booktitle> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: These finer-grain decisions are made by a data scheduling policy. We will consider two data scheduling policies. Round-based Data Scheduling. The commonly used round-based retrieval policy has been proposed in <ref> [1, 2, 7] </ref> for VBR video retrieval. We have chosen to combine round-based data scheduling with CTL data access as a baseline policy and to compare the performance of other policies that we study with this one. <p> In other words, both data access policies would have similar impact on disk bandwidth and buffer requirement and utilization. The further smoothing that is obtainable via a deadline-based data scheduling by workahead, is absent in a round-based retrieval policy. In <ref> [1, 2, 7] </ref>, a round-based retrieval policy has been studied. As a result, the smoothing gain is localized to the individual data access round. Because the data retrieval still proceeds in rounds, the rate variability that exists across the data access rounds is not reduced.
Reference: [2] <author> Ed Chang, and A. Zakhor. </author> <title> Admission Control and Data Placement for VBR Video Servers, </title> <booktitle> 1st International Conference on Image Processing, </booktitle> <address> Austin, Texas, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: At one level, a policy must determine which data must be resident in-memory by when. Here data for each client is typically constrained to be retrieved in either constant time length (CTL) or constant data length (CDL) units <ref> [2] </ref>. These two alternatives determine what we will call the data access policy and we refer to the two specific polices above as CTL (constant time length) and CDL (constant data length) data access policies, respectively. <p> We consider two data access policies <ref> [2] </ref> and describe below how W and D are determined under these two policies. CTL Data Access. <p> These finer-grain decisions are made by a data scheduling policy. We will consider two data scheduling policies. Round-based Data Scheduling. The commonly used round-based retrieval policy has been proposed in <ref> [1, 2, 7] </ref> for VBR video retrieval. We have chosen to combine round-based data scheduling with CTL data access as a baseline policy and to compare the performance of other policies that we study with this one. <p> In other words, both data access policies would have similar impact on disk bandwidth and buffer requirement and utilization. The further smoothing that is obtainable via a deadline-based data scheduling by workahead, is absent in a round-based retrieval policy. In <ref> [1, 2, 7] </ref>, a round-based retrieval policy has been studied. As a result, the smoothing gain is localized to the individual data access round. Because the data retrieval still proceeds in rounds, the rate variability that exists across the data access rounds is not reduced.
Reference: [3] <author> S. Chen, and D. Towsley. </author> <title> Scheduling Customers in a Non-Removal Real-Time System with an Application to Disk Scheduling, </title> <journal> Real-Time System Journal, </journal> <pages> pp. 55-72, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Let ffi (n) denote the seek delay incurred when the disk head moves n tracks. We model it as ffi (n) = a + b fl n (1) We shall take a = 5:0; b = 0:6 for our disk model <ref> [3] </ref>. We further assume that there are 1000 tracks on each disk in our system. The data from the disk is assumed to be delivered to the in-memory buffers at constant rate. We consider an easy to implement 2-buffer management scheme which has been suggested in the literature [4].
Reference: [4] <author> D. J. Gemmell, H.M. Vin, D. D. Kandlur, P. V. Rangan, and L. A. Rowe. </author> <title> Multimedia Storage Servers: A Tutorial and Survey. </title> <journal> IEEE Computer, </journal> <volume> 28(5), </volume> <pages> pp. 40-49, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: We further assume that there are 1000 tracks on each disk in our system. The data from the disk is assumed to be delivered to the in-memory buffers at constant rate. We consider an easy to implement 2-buffer management scheme which has been suggested in the literature <ref> [4] </ref>. The in-memory buffer is shared by the disk retrieval scheduler and the network transmission scheduler. The buffers are also shared by the concurrent video streams, rather than partitioned among them as this yields better performance.
Reference: [5] <author> D. J. Gemmell, J. Han, R. J. Beaton, and S. Christodoulakis. </author> <title> Delay-Sensitive Multimedia on Disks, </title> <booktitle> IEEE Multimedia, </booktitle> <pages> pp. 56-67, </pages> <month> Fall </month> <year> 1994 </year>
Reference: [6] <author> C.L. Liu, and J.W. Layland. </author> <title> Algorithms for Multiprogramming in a Hard Real-Time Environment, </title> <journal> J. ACM, </journal> <volume> Vol. 20, </volume> <pages> pp. 46-61, </pages> <year> 1973. </year>
Reference-contexts: Here, unlike CTL, the generated set of deadlines D (b) do not exhibit any periodicity. We will observe that round-based scheduling yields low disk utilization. Since EDF-based data scheduling is optimal in the absence of any seek overheads <ref> [6] </ref>, we combine CDL data access with EDF-based data scheduling and study how efficiently the disk bandwidth is utilized. 3 CTL-Round Based and CDL-EDF Based Data Retrieval In this section, we provide an appropriate formulation for the CTL-Round and CDL-EDF policies and evaluate in their performance. <p> We chose to couple CDL with EDF retrieval because it has been proven optimal in the absence of seek overhead <ref> [6] </ref>.
Reference: [7] <author> S. Paek, and S.-F. Chang. </author> <title> Video Server Retrieval Scheduling for Variable Bit Rate Scalable Video, </title> <booktitle> Proceedings of ICMCS 96, </booktitle> <pages> pp. 108-112, </pages> <year> 1996. </year>
Reference-contexts: These finer-grain decisions are made by a data scheduling policy. We will consider two data scheduling policies. Round-based Data Scheduling. The commonly used round-based retrieval policy has been proposed in <ref> [1, 2, 7] </ref> for VBR video retrieval. We have chosen to combine round-based data scheduling with CTL data access as a baseline policy and to compare the performance of other policies that we study with this one. <p> In other words, both data access policies would have similar impact on disk bandwidth and buffer requirement and utilization. The further smoothing that is obtainable via a deadline-based data scheduling by workahead, is absent in a round-based retrieval policy. In <ref> [1, 2, 7] </ref>, a round-based retrieval policy has been studied. As a result, the smoothing gain is localized to the individual data access round. Because the data retrieval still proceeds in rounds, the rate variability that exists across the data access rounds is not reduced.
Reference: [8] <author> A. L. N. Reddy, and J. C. Wyllie. </author> <title> I/O Issues in a Multimedia System, </title> <journal> IEEE Computer27(3) pp. </journal> <pages> 69-74, </pages> <month> March </month> <year> 1994. </year>
Reference: [9] <author> S. Sahu, Z.-L. Zhang, J. F. Kurose, and D. Towsley. </author> <title> On Efficient Retrieval of VBR Video in a Multimedia Server. </title> <type> UMASS CS Technical Report 97-25. </type>
Reference-contexts: We observer similar trends in ^r and ^ B for heterogeneous workloads (mix of starwar, mtv, wizard streams) and the details are reported in <ref> [9] </ref>. 1 We observe significant improvement even when the network transmission schedule has been smoothened out using the optimal smoothing algorithm presented in [10]. t We observed [9] considerable amount of variability in the required disk rate across a sample path. <p> observer similar trends in ^r and ^ B for heterogeneous workloads (mix of starwar, mtv, wizard streams) and the details are reported in <ref> [9] </ref>. 1 We observe significant improvement even when the network transmission schedule has been smoothened out using the optimal smoothing algorithm presented in [10]. t We observed [9] considerable amount of variability in the required disk rate across a sample path. This is a disadvantage of any round-based data scheduling policy because the variability across the rounds cannot be smoothed out by such a non-work conserving data scheduling policy. <p> of buffer, B (b; r), needed for lazy-EDF based schedule using the 2-buffer scheme is given by: B (b; r) = max fA b [0; d i+1 ] C [0; d The details of the 2-buffering scheme for CDL-EDF policy and the derivation of the above result is reported in <ref> [9] </ref>. We 2 Lazy-EDF also minimizes the buffer requirements for any other deadline-based scheduling policy in the absence of seek overhead. prove that the lazy-EDF retrieval schedule results in the smallest buffer for CDL-EDF, the proof of which can be found in [9]. <p> derivation of the above result is reported in <ref> [9] </ref>. We 2 Lazy-EDF also minimizes the buffer requirements for any other deadline-based scheduling policy in the absence of seek overhead. prove that the lazy-EDF retrieval schedule results in the smallest buffer for CDL-EDF, the proof of which can be found in [9]. Lemma 1 Given the set of deadlines D (b) and associated workload W (b) for each deadline and the disk rate r, lazy-EDF schedule S (b; r) minimizes the buffer size B (b; r) re quired by CDL-EDF. <p> For simplicity, we consider identical CDL data access sizes for all the streams, i.e., b 1 = b 2 ; :::: = b m = b. We need the following result <ref> [9] </ref>: Lemma 2 The minimal buffer requirement ^ B (b; r) is a non-increasing function of the disk rate r, where r ^r. Given a disk rate r, determine the set of CDL block sizes for which ^r r. Denote this set as F (r). <p> The de tails of the algorithms for computing F (r) and ^ B (r) are provided in <ref> [9] </ref>. We have an O (n 2 ) algorithm for finding ^ B (r) and O (n) algorithm for determining ^r (b), where n denotes the total number of deadlines. Given m streams and disk rate r, we use lazy-EDF to determine the minimal buffer requirement ^ B (r). <p> For a given disk rate r, we find out the minimum buffer required among all chosen CDL block sizes using the algorithm we described earlier. This plot illustrates the tradeoff between the choice of disk rate and buffer space. Our studies in <ref> [9] </ref> indicate that there is considerably lower variability in ^r across a sample path. This is due to the additional reduction in variability that is obtained by prefetching data ahead in time, thus smoothing out the workload across the windows. <p> We observe similar trends for the mtv and wizard 4 We compared the startup latency s for both the policies and found that CDL-EDF has lower s than the CTL-Round policy (refer to <ref> [9] </ref> for the details of the comparison). 5 The details of the schedulability conditions and algorithms for determining these are reported in [9]. CDL-EDF policy over CTL-Round traces [9]. <p> the mtv and wizard 4 We compared the startup latency s for both the policies and found that CDL-EDF has lower s than the CTL-Round policy (refer to <ref> [9] </ref> for the details of the comparison). 5 The details of the schedulability conditions and algorithms for determining these are reported in [9]. CDL-EDF policy over CTL-Round traces [9]. We observe that CDL-EDF is able to support the retrieval of the same number of streams at a lower disk rate than CTL-Round. <p> compared the startup latency s for both the policies and found that CDL-EDF has lower s than the CTL-Round policy (refer to <ref> [9] </ref> for the details of the comparison). 5 The details of the schedulability conditions and algorithms for determining these are reported in [9]. CDL-EDF policy over CTL-Round traces [9]. We observe that CDL-EDF is able to support the retrieval of the same number of streams at a lower disk rate than CTL-Round.
Reference: [10] <author> J. D. Salehi, Z.-L. Zhang, J. F. Kurose, and D. Towsley. </author> <title> Supporting Stored Video: Reducing Rate Variability and End-to-End Resource Requirements through Optimal Smoothing, </title> <booktitle> Proceeding of ACM SIGMETRICS 96, </booktitle> <pages> pp. 1-10, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: C j [t 1 ; t 2 ] is determined by (among other things), the encoding of the stored video, the available network bandwidth, and the client buffering constraints <ref> [10] </ref>. <p> We observer similar trends in ^r and ^ B for heterogeneous workloads (mix of starwar, mtv, wizard streams) and the details are reported in [9]. 1 We observe significant improvement even when the network transmission schedule has been smoothened out using the optimal smoothing algorithm presented in <ref> [10] </ref>. t We observed [9] considerable amount of variability in the required disk rate across a sample path. This is a disadvantage of any round-based data scheduling policy because the variability across the rounds cannot be smoothed out by such a non-work conserving data scheduling policy. <p> The advantage of the greedy buffer-fill schedule is that we need only the information on the order of the deadlines. We do not need to keep track of lazy-EDF schedule. 3 3 An interesting application of the above result in the context of smoothing of network transmission schedule <ref> [10] </ref> for VBR video is that if the smoothing of VBR video is performed with a client buffer size ^ B (r), then the peak rate of smoothed network transmission schedule would be bounded by rate r.
References-found: 10

