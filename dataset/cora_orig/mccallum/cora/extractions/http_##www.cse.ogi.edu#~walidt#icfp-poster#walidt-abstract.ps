URL: http://www.cse.ogi.edu/~walidt/icfp-poster/walidt-abstract.ps
Refering-URL: http://www.cse.ogi.edu/~walidt/walidt.html
Root-URL: http://www.cse.ogi.edu
Email: fwalidt,sheardg@cse.ogi.edu  
Title: Multi-Stage Programming  
Author: Walid Taha Tim Sheard 
Affiliation: Oregon Graduate Institute of Science Technology  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Rowan Davies and Frank Pfenning. </author> <title> A modal analysis of staged computation. </title> <booktitle> In 23rd Annual ACM Symposium on Principles of Programming Languages (POPL'96), </booktitle> <address> St.Petersburg Beach, Florida, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The concept of a multi-stage computation has recently been the focus of a number of studies <ref> [2, 1] </ref>. A computational stage roughly corresponds to the "running" of a program on some input.
Reference: [2] <author> Robert Gluck and Jesper Jtrgensen. </author> <title> Fast binding-time analysis for multi-level specialization. </title> <booktitle> In PSI-96: Andrei Ershov Second International Memorial Conference, Perspectives of System Informatics, volume 1181 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: 1 Introduction The concept of a multi-stage computation has recently been the focus of a number of studies <ref> [2, 1] </ref>. A computational stage roughly corresponds to the "running" of a program on some input. <p> The two-stage program is then run on the inputs that are known at "partial-evaluation time". The resulting program is a specialized, more efficient version of the original program that has just been partially evaluated. Recently, o*ine partial evaluation has been generalized to general multi-stage programs <ref> [2] </ref>. 3 MetaML Until recently, multi-stage computations were developed using ad hoc methods, such as generating text-strings representing programs. Systems developed this way are prone to error. MetaML is a statically-typed multistage language based on an SML-like core. The language was developed to allow multi-stage programming with explicit annotations [3].
Reference: [3] <author> Walid Taha and Tim Sheard. </author> <title> Multi-stage programming with explicit annotations. </title> <booktitle> In Proceedings of the Symposium on Partial Evaluation and Semantics-Based Program Manipulation, </booktitle> <address> Amster-dam, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Systems developed this way are prone to error. MetaML is a statically-typed multistage language based on an SML-like core. The language was developed to allow multi-stage programming with explicit annotations <ref> [3] </ref>.
References-found: 3

