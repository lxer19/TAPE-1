URL: http://www.cs.hmc.edu/~fleck/estimator.ps.Z
Refering-URL: http://www.cs.hmc.edu/~fleck/papers-vision.html
Root-URL: http://www.cs.hmc.edu
Title: Practical Edge Finding with a Robust Estimator  
Author: Margaret M. Fleck 
Address: Iowa City, IA 52252 USA  
Affiliation: Computer Science University of Iowa  
Abstract: This paper presents a new algorithm for locating the boundaries of textured regions (both step changes and outliers) using a robust estimator. Previous robust image filters perform poorly on binary images, blur edges, round corners, and run slowly. I avoid artifacts on binary images by modelling them as continuous and interpolating values. Information is combined directly between non-adjacent locations to prevent blurring. Corners are sharpened by relabelling mis-classified pixels. The algorithm is made as fast as a Marr-Hildreth edge finder by restructuring the estimator as a series of 2D image operations, using new multi-ring order statistic operators, and running most of the estimator on a randomly sampled image. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Astola, J., Heinonen, P., and Neuvo, Y. </author> <year> 1987. </year> <title> On Root Structures of Median and Median-Type Filters. </title> <journal> IEEE ASSP 35(8) </journal> <pages> 1199-1201. </pages>
Reference-contexts: Other order statistics can be approximated by changing which value is returned from the largest ring: the 6th of 9 values approximates the 67th percentile. The output of discrete median operators is unstable on binary images <ref> [1, 23] </ref>. To avoid this, I treat the digitized image as a sampled version of some underlying continuous function. The continuous analog of a binary image contains intermediate values, so the theoretical median varies continuously. In the partial-ring operator, I interpolate values for ring locations whose coordinates are not integers.
Reference: [2] <author> Ataman, E., Aatre, V.K., and Wong, K.M. </author> <year> 1980. </year>
Reference-contexts: The median can be computed in worse-case (rA log (r)) or (rA log (k)) time, using a moving binary tree <ref> [2, 4] </ref>, where k is the number of different intensity values. However, these methods are complicated and thus slow. Iterating small median filters does not produce approximations to large median filters, "separable median" filters [21] are not isotropic, and threshold decomposition [21] is not feasible when k is large.
References-found: 2

