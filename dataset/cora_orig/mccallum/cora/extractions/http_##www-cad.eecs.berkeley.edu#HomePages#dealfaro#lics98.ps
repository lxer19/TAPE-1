URL: http://www-cad.eecs.berkeley.edu/HomePages/dealfaro/lics98.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/dealfaro/papers.html
Root-URL: http://www.cs.berkeley.edu
Phone: Telephone: Intl. 732-562-3966.  
Title: How to Specify and Verify the Long-Run Average Behavior of Probabilistic Systems  
Author: Luca de Alfaro 
Address: 445 Hoes Lane P.O. Box 1331 Piscataway, NJ 08855-1331, USA.  Berkeley  
Affiliation: Service Center  University of California at  
Note: In Proc. 13th IEEE Symp. Logic in Comp. Sci., 1998. Copyright 1998 IEEE. Published in the Proceedings of LICS'98, 21-24 June 1998 in Indianapolis, Indiana. Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any copyrighted component of this work in other works, must be obtained from the IEEE. Contact: Manager, Copyrights and Permissions IEEE  
Abstract: In this paper, we argue that current formal specification methods cannot be used to specify long-run average properties of probabilistic systems. To enable the specification of these properties, we propose an approach based on the concept of experiments. Experiments are labeled graphs that can be used to describe behavior patterns of interest, such as the request for a resource followed by either a grant or a rejection. Experiments are meant to be performed infinitely often, and it is possible to specify their long-run average outcome or duration. We propose simple extensions of temporal logics based on experiments, and we present model-checking algorithms for the verification of properties of finite-state timed probabilistic systems in which both probabilistic and nondeterministic choice are present. The consideration of system models that include nondeter-minism enables the performance and reliability analysis of partially specified systems, such as systems in their early design stages. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajmone Marsan, G. Balbo, and G. Conte. </author> <title> A class of generalized stochastic Petri nets for the performance analysis of multiprocessor systems. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 2(2) </volume> <pages> 93-122, </pages> <month> May </month> <year> 1984. </year>
Reference: [2] <author> A. Aziz, V. Singhal, F. Balarin, R.K. Bray-ton, and A.L. Sangiovanni-Vincentelli. </author> <title> It usually works: The temporal logic of stochastic systems. </title> <booktitle> In Computer Aided Verification, volume 939 of LNCS, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [3] <author> M. Bernardo, N. Busi, and R. Gorrieri. </author> <title> A distributed semantics for EMPA based on stochastic contextual nets. </title> <journal> Computer J., </journal> <volume> 38(7) </volume> <pages> 492-509, </pages> <year> 1995. </year>
Reference: [4] <author> M. Bernardo, L. Donatiello, and R. Gorrieri. </author> <title> Giving a net semantics to Markovian process algebra. </title> <booktitle> In Proc. 6th Int. Workshop on Petri Nets and Performance Models, </booktitle> <pages> pages 169-178. </pages> <publisher> IEEE Comput. Soc. Press, </publisher> <year> 1995. </year>
Reference: [5] <author> M. Bernardo and R. Gorrieri. </author> <title> Extended Marko-vian process algebra. </title> <booktitle> In CONCUR'96: Con-currency Theory. 7th Int. Conf., volume 1119 of LNCS, </booktitle> <pages> pages 315-330. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference: [6] <author> D.P. Bertsekas. </author> <title> Dynamic Programming and Optimal Control. </title> <publisher> Athena Scientific, </publisher> <year> 1995. </year> <month> 11 </month>
Reference: [7] <author> A. Bianco and L. de Alfaro. </author> <title> Model checking of probabilistic and nondeterministic systems. </title> <booktitle> In Found. of Software Tech. and Theor. Comp. Sci., volume 1026 of LNCS, </booktitle> <pages> pages 499-513. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [8] <author> G. Ciardo, J.K. Muppala, </author> <title> and K.S. Trivedi. On the solution of GSPN reward models. Performance Evaluation, </title> <booktitle> 12 </booktitle> <pages> 237-253, </pages> <year> 1991. </year>
Reference: [9] <author> R. Cleaveland, S.A. Smolka, and A. Zwarico. </author> <title> Testing preorders for probabilistic processes. </title> <booktitle> In Proc. 19th Int. Colloq. Aut. Lang. Prog., volume 623 of LNCS, </booktitle> <pages> pages 708-719. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference: [10] <author> C. Courcoubetis and M. Yannakakis. </author> <title> Verifying temporal properties of finite-state probabilistic programs. </title> <booktitle> In Proc. 29th IEEE Symp. </booktitle> <institution> Found. of Comp. Sci., </institution> <year> 1988. </year>
Reference: [11] <author> C. Courcoubetis and M. Yannakakis. </author> <title> Markov decision processes and regular events. </title> <booktitle> In Proc. 17th Int. Colloq. Aut. Lang. Prog., volume 443 of LNCS, </booktitle> <pages> pages 336-349. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [12] <author> L. de Alfaro. </author> <title> Formal Verification of Probabilistic Systems. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <year> 1997. </year> <note> Technical Report STAN-CS-TR-98-1601. </note>
Reference-contexts: The algorithm relies on new results on the theory of Markov decision processes, and on a connection with optimization problems for semi-Markov decision processes <ref> [12] </ref>. The correctness proof for the algorithms is fairly complex, and 8 has been presented in [12, x6]: here, we will only pro-vide a partial and informal justification. <p> The algorithm relies on new results on the theory of Markov decision processes, and on a connection with optimization problems for semi-Markov decision processes [12]. The correctness proof for the algorithms is fairly complex, and 8 has been presented in <ref> [12, x6] </ref>: here, we will only pro-vide a partial and informal justification. We note that for purely probabilistic systems, it is possible to use a simpler algorithm, based on the computation of the steady-state distribution of Markov chains [12, x6]. <p> for the algorithms is fairly complex, and 8 has been presented in <ref> [12, x6] </ref>: here, we will only pro-vide a partial and informal justification. We note that for purely probabilistic systems, it is possible to use a simpler algorithm, based on the computation of the steady-state distribution of Markov chains [12, x6]. <p> We note that for purely probabilistic systems, it is possible to use a simpler algorithm, based on the computation of the steady-state distribution of Markov chains [12, x6]. To present the algorithms, we need the preliminary notions of sub-MDP and end component <ref> [12] </ref>. 5.1 End Components End components are the analogous concept in Markov decision processes of the closed recurrent classes of Markov chains [20]: they represent the set of states and actions that can be repeated infinitely often along a behavior with non-zero probability. <p> It is not difficult to see that, given a sub-MDP (C; D), the set maxEC (C; D) can be computed in time polynomial in jCj + P s2C jD (s)j using simple graph algorithms; an algorithm to do so is given in <ref> [12, x3] </ref>. Given a behavior !, let C ! = fs j 9 k : X k = sg 1 where 1 9 k stands for "there are infinitely many dif ferent k's". <p> The sub-MDP (C ! ; D ! ) corresponds to the states and actions that are repeated infinitely often along !. The proof of the following result can be found in <ref> [12] </ref>. <p> This enables us to disregard predicate I when working on e i , leading to a connection between the computation of e T + and the solution of an optimization problem for semi-Markov MDPs <ref> [12] </ref>.
Reference: [13] <author> L. de Alfaro. </author> <title> Temporal logics for the specification of performance and reliability. </title> <booktitle> In Proc. of Symp. on Theor. Asp. of Comp. Sci., volume 1200 of LNCS, </booktitle> <pages> pages 165-176. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: This duality is reflected in the different types of questions that arise during verification. The model checking of GPTL* formula P ./a involves the construction of the product between the TPS and the deterministic Rabin automaton for or : <ref> [13] </ref>. Deterministic Rabin automata are strictly more expressive than deterministic Buchi automata [22]. Nonetheless, for the sake of simplicity we consider an algorithm that computes the product with a deterministic Buchi automaton instead.
Reference: [14] <author> C. Derman. </author> <title> Finite State Markovian Decision Processes. </title> <publisher> Acedemic Press, </publisher> <year> 1970. </year>
Reference: [15] <author> D. Ferrari. </author> <title> Computer Systems Performance Evaluation. </title> <publisher> Prentice-Hall, </publisher> <year> 1978. </year>
Reference: [16] <author> H.N. Gotz, U. Herzog, and M. Rettelbach. </author> <title> Multiprocessor and distributed system design: the integration of functional specification and performance analysis using stochastic process algebras. </title> <booktitle> In PERFORMANCE'93, volume 729 of LNCS, </booktitle> <pages> pages 121-146, </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [17] <author> H. Hansson and B. Jonsson. </author> <title> A framework for reasoning about time and reliability. </title> <booktitle> In Proc. of Real Time Systems Symposium, </booktitle> <pages> pages 102-111. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference: [18] <author> H. Hansson and B. Jonsson. </author> <title> A logic for reasoning about time and probability. </title> <journal> Formal Aspects of Computing, </journal> <volume> 6(5) </volume> <pages> 512-535, </pages> <year> 1994. </year>
Reference: [19] <author> J. Hillston. </author> <title> A Compositional Approach to Performance Modelling. </title> <booktitle> Distinguished Dissertations Series. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1996. </year>
Reference: [20] <author> J.G. Kemeny, J.L. Snell, and A.W. Knapp. </author> <title> Denumerable Markov Chains. </title> <address> D. </address> <publisher> Van Nostrand Company, </publisher> <year> 1966. </year>
Reference-contexts: To present the algorithms, we need the preliminary notions of sub-MDP and end component [12]. 5.1 End Components End components are the analogous concept in Markov decision processes of the closed recurrent classes of Markov chains <ref> [20] </ref>: they represent the set of states and actions that can be repeated infinitely often along a behavior with non-zero probability.
Reference: [21] <author> M. Kwiatkowska and C. Baier. </author> <title> Model checking for a probabilistic branching time logic with fairness. </title> <type> Technical Report CSR-96-12, </type> <institution> University of Birmingham, </institution> <month> June </month> <year> 1996. </year>
Reference: [22] <author> L.H. </author> <title> Landweber. Decision problems for !- automata. </title> <journal> Mathematical Systems Theory, </journal> <volume> 3 </volume> <pages> 376-384, </pages> <year> 1969. </year>
Reference-contexts: The model checking of GPTL* formula P ./a involves the construction of the product between the TPS and the deterministic Rabin automaton for or : [13]. Deterministic Rabin automata are strictly more expressive than deterministic Buchi automata <ref> [22] </ref>. Nonetheless, for the sake of simplicity we consider an algorithm that computes the product with a deterministic Buchi automaton instead. Such an algorithm can be used for the subclass of formulas that can be encoded as deterministic Buchi automata.
Reference: [23] <author> K.G. Larsen and A. Skou. </author> <title> Bisimulation through probabilistic testing (preliminary report). </title> <booktitle> In Proc. 16th ACM Symp. Princ. of Prog. Lang., </booktitle> <pages> pages 344-352, </pages> <year> 1989. </year>
Reference: [24] <author> Z. Liu, A.P. Ravn, E.V. Sorensen, and C.C. Zhou. </author> <title> A probabilistic duration calculus. </title> <booktitle> In Proc. of the Second Intl. Workshop on Responsive Computer Systems, </booktitle> <pages> pages 14-27. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference: [25] <editor> M.K. </editor> <title> Molloy. On the Integration of Delay and Throughput Measure In Distributed Processing Models. </title> <type> PhD thesis, </type> <institution> UCLA, </institution> <address> Los Angeles, </address> <year> 1981. </year>
Reference: [26] <author> S. Natkin. </author> <title> Les Reseaux de Petri Stochastiques et leur Application a l'Evaluation des Systemes Informatiques. </title> <type> PhD thesis, </type> <institution> CNAM, Paris, </institution> <year> 1980. </year>
Reference: [27] <author> A. Pnueli and L. Zuck. </author> <title> Probabilistic verification by tableaux. </title> <booktitle> In Proc. First IEEE Symp. Logic in Comp. Sci., </booktitle> <pages> pages 322-331, </pages> <year> 1986. </year>
Reference: [28] <author> R. Segala. </author> <title> Modeling and Verification of Randomized Distributed Real-Time Systems. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <year> 1995. </year> <note> Technical Report MIT/LCS/TR-676. </note>
Reference: [29] <author> R. Segala and N.A. Lynch. </author> <title> Probabilistic simulations for probabilistic processes. </title> <booktitle> In CONCUR'94: Concurrency Theory. 5th Int. Conf., volume 836 of LNCS, </booktitle> <pages> pages 481-496. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference: [30] <author> F.J.W. Symons. </author> <title> Introduction to numerical Petri nets, a general graphical model for concurrent processing systems. </title> <journal> Australian Telecommunications Research, </journal> <volume> 14(1) </volume> <pages> 28-33, </pages> <month> January </month> <year> 1980. </year>
Reference: [31] <author> M.Y. Vardi. </author> <title> Automatic verification of probabilistic concurrent finite-state systems. </title> <booktitle> In Proc. 26th IEEE Symp. Found. of Comp. Sci., </booktitle> <pages> pages 327-338, </pages> <year> 1985. </year>
References-found: 31

