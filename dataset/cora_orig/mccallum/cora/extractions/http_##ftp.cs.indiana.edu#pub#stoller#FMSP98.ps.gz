URL: http://ftp.cs.indiana.edu/pub/stoller/FMSP98.ps.gz
Refering-URL: http://www.cs.indiana.edu/hyplan/stoller.html
Root-URL: http://www.cs.indiana.edu
Email: stoller@cs.indiana.edu  
Title: Justifying Finite Resources for Adversaries in Automated Analysis of Authentication Protocols  
Author: Scott D. Stoller 
Date: 11 June 1998  
Web: www.cs.indiana.edu/~stoller/  
Address: Bloomington, IN 47405 USA  
Affiliation: Computer Science Dept. Indiana University  
Abstract: Exhaustive state-space exploration is a powerful approach to automated verification of authentication and key establishment protocols. However, correctness of such protocols is typically expressed as properties (requirements) that must hold even in systems in which there are an unbounded number of (potentially concurrent) runs of the protocol, and in which an adversary can perform an unbounded number of decryptions while eavesdropping and an unbounded number of encryptions (and other operations) while fabricating messages. Therefore, reduction theorems are needed, which show that if the required properties hold in a system with certain finite bounds on these parameters, then the properties hold in the unbounded system as well. We prove reductions that bound the number of operations performed by the adversary; one of these reductions presupposes a bound on the number of runs of the protocol. We also sketch an approach to establishing the latter bound.
Abstract-found: 1
Intro-found: 1
Reference: [BAN90] <author> Michael Burrows, Martn Abadi, and Roger Needham. </author> <title> A logic of authentication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(1) </volume> <pages> 18-36, </pages> <month> February </month> <year> 1990. </year> <note> An expanded version appeared as Res. Rep. 39, </note> <institution> Systems Research Center, Digital Equipment Corp., </institution> <address> Palo Alto, CA, </address> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: However, [Low98] does not consider properties other than secrecy and makes places on protocols some restrictions [Low98, Sections 2.1 and 2.2] that are not needed for our reductions. The restrictions are reasonable but are not satisfied by some interesting authentication protocols, such as the Otway-Rees [OR87], Yahalom <ref> [BAN90] </ref>, and Kerberos version 5 [KN93] protocols. In [Ros98], A. W.
Reference: [DY83] <author> Danny Dolev and Andrew C. Yao. </author> <title> On the security of public key protocols. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-29(2):198-208, </volume> <month> March </month> <year> 1983. </year>
Reference-contexts: In [Ros98], A. W. Roscoe shows how data-independence techniques developed for CSP can be used to prove reductions that bound the sizes of types used to represent nonces and names of principals In <ref> [DY83] </ref>, Dolev and Yao give algorithms that verify the security of protocols directly, without reductions to finite-state systems. When those algorithms apply, they are likely to be more efficient than a verification based on reduction plus state-space exploration. However, [DY83] considers only secrecy properties. <p> of types used to represent nonces and names of principals In <ref> [DY83] </ref>, Dolev and Yao give algorithms that verify the security of protocols directly, without reductions to finite-state systems. When those algorithms apply, they are likely to be more efficient than a verification based on reduction plus state-space exploration. However, [DY83] considers only secrecy properties. Furthermore, it considers a class of protocols|called name-stamp protocols| that is strictly less expressive than the class of protocols we consider.
Reference: [KN93] <author> J. Kohl and C. Neuman. </author> <title> The Kerberos Network Authentication Service (V5), Internet Request for Comments 1510, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: The restrictions are reasonable but are not satisfied by some interesting authentication protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos version 5 <ref> [KN93] </ref> protocols. In [Ros98], A. W.
Reference: [Lam93] <author> Leslie Lamport. </author> <title> How to write a long formula. </title> <type> Technical Report SRC-119, </type> <institution> Digital Equipment Corporation, Systems Research Center, </institution> <year> 1993. </year> <note> Available via http://www.research.digital.com/SRC/personal/Leslie Lamport/proofs/proofs.html. </note>
Reference-contexts: and proceeds line-by-line. (E4) Every Send event hid; l; Send (x; t)i is immediately followed by a Receive event hid 0 ; l 0 ; Receive (x 0 ; t 0 )i (called the corresponding Receive event) 3 such that (using Lamport's bullet-style notation for lists of conjuncts or disjuncts <ref> [Lam93] </ref>) ^ t [subst (id)] = t 0 [subst (id 0 )] ^ (id 6= id 0 ) ^ (id = ? _ prin (id) = x 0 [subst (id 0 )]) ^ (id 0 = ? _ prin (id 0 ) = x [subst (id)]): (This allows Z to intercept
Reference: [Low96] <author> Gavin Lowe. </author> <title> Breaking and fixing the Needham-Schroeder public-key protocol using FDR. </title> <editor> In Tiziana Margaria and Bernhard Steffen, editors, </editor> <booktitle> Proc. Workshop on Tools and Algorithms for The Construction and Analysis of Systems (TACAS), volume 1055 of Lecture Notes in Computer Science, </booktitle> <pages> pages 147-166. </pages> <publisher> Springer-Verlag, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Exhaustive state-space exploration is a powerful approach to automated verification of authentication and key establishment protocols. This approach has been applied to several protocols <ref> [Ros95, Low96, MMS97, MCJ97] </ref>. This approach is promising because many such protocols use a small, fixed amount of state. <p> Similarly, in [MCJ97], Marrero et al. adopt small bounds on these parameters and acknowledge [Mar98] that these bounds have not been rigorously justified. In <ref> [Low96] </ref>, Lowe uses the FDR system, a model checker for CSP, to find a weakness in the Needham-Schroeder public-key protocol and to analyze a corrected version of the protocol, with 1 small bounds on the parameters. Lowe then proves that these bounds are justified for the modified Needham-Schroeder protocol.
Reference: [Low98] <author> Gavin Lowe. </author> <title> Towards a completeness result for model checking of security protocols. </title> <type> Technical Report 1998/6, </type> <institution> Dept. of Mathematics and Computer Science, University of Leicester, </institution> <year> 1998. </year>
Reference-contexts: Lowe then proves that these bounds are justified for the modified Needham-Schroeder protocol. Lowe <ref> [Low98] </ref> is generalizing that proof to a large class of protocols; his reduction shows that no attacks on secrecy properties are missed when small bounds are used. However, [Low98] does not consider properties other than secrecy and makes places on protocols some restrictions [Low98, Sections 2.1 and 2.2] that are not <p> Lowe then proves that these bounds are justified for the modified Needham-Schroeder protocol. Lowe <ref> [Low98] </ref> is generalizing that proof to a large class of protocols; his reduction shows that no attacks on secrecy properties are missed when small bounds are used. However, [Low98] does not consider properties other than secrecy and makes places on protocols some restrictions [Low98, Sections 2.1 and 2.2] that are not needed for our reductions. <p> Lowe [Low98] is generalizing that proof to a large class of protocols; his reduction shows that no attacks on secrecy properties are missed when small bounds are used. However, [Low98] does not consider properties other than secrecy and makes places on protocols some restrictions <ref> [Low98, Sections 2.1 and 2.2] </ref> that are not needed for our reductions. The restrictions are reasonable but are not satisfied by some interesting authentication protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos version 5 [KN93] protocols. In [Ros98], A. W.
Reference: [Mar98] <author> Will Marrero. </author> <title> Private communication, </title> <month> January </month> <year> 1998. </year>
Reference-contexts: Similarly, in [MCJ97], Marrero et al. adopt small bounds on these parameters and acknowledge <ref> [Mar98] </ref> that these bounds have not been rigorously justified. In [Low96], Lowe uses the FDR system, a model checker for CSP, to find a weakness in the Needham-Schroeder public-key protocol and to analyze a corrected version of the protocol, with 1 small bounds on the parameters.
Reference: [MCJ97] <author> Will Marrero, Edmund Clarke, and Somesh Jha. </author> <title> A model checker for authentication protocols. </title> <booktitle> In Proc. DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <month> September </month> <year> 1997. </year> <note> Available via http://dimacs.rutgers.edu/Workshops/Security/program2/program.html. </note>
Reference-contexts: 1 Introduction Exhaustive state-space exploration is a powerful approach to automated verification of authentication and key establishment protocols. This approach has been applied to several protocols <ref> [Ros95, Low96, MMS97, MCJ97] </ref>. This approach is promising because many such protocols use a small, fixed amount of state. <p> Thus, even if Mur reports no violations of the properties, this does not guarantee that no violations would be found if larger bounds were used; in other words, there is a possibility that an attack was missed because the bounds were too small. Similarly, in <ref> [MCJ97] </ref>, Marrero et al. adopt small bounds on these parameters and acknowledge [Mar98] that these bounds have not been rigorously justified. <p> In this paper, we prove reductions that apply to a large class of protocols and properties. The protocols and properties we consider are essentially those of Woo and Lam's model for authentication protocols [WL93a, WL93b]; that model also underlies <ref> [MCJ97] </ref>. Woo and Lam's model comprises a language for writing authentication protocols, a language for expressing required properties, and trace-based semantics for both languages. 1 In their model, a protocol is (roughly) a collection of local protocols, which are sequential programs run by the participants.
Reference: [MMS97] <author> John C. Mitchell, Mark Mitchell, and Ulrich Stern. </author> <title> Automated analysis of cryptographic protocols using Mur. </title> <booktitle> In Proc. 18th IEEE Symposium on Research in Security and Privacy. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: 1 Introduction Exhaustive state-space exploration is a powerful approach to automated verification of authentication and key establishment protocols. This approach has been applied to several protocols <ref> [Ros95, Low96, MMS97, MCJ97] </ref>. This approach is promising because many such protocols use a small, fixed amount of state. <p> This problem is widely acknowledged but has generally been dealt with in ad hoc ways. For example, in <ref> [MMS97] </ref>, Mitchell et al. adopt small bounds on these parameters and use Mur to explore the state-space of the resulting system; however, they acknowledge that these bounds have not been rigorously justified.
Reference: [OR87] <author> D. Otway and O. Rees. </author> <title> Efficient and timely mutual authentication. </title> <journal> Operating Systems Review, </journal> <volume> 21(1) </volume> <pages> 8-10, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: However, [Low98] does not consider properties other than secrecy and makes places on protocols some restrictions [Low98, Sections 2.1 and 2.2] that are not needed for our reductions. The restrictions are reasonable but are not satisfied by some interesting authentication protocols, such as the Otway-Rees <ref> [OR87] </ref>, Yahalom [BAN90], and Kerberos version 5 [KN93] protocols. In [Ros98], A. W. <p> However, [DY83] considers only secrecy properties. Furthermore, it considers a class of protocols|called name-stamp protocols| that is strictly less expressive than the class of protocols we consider. For example, the Otway-Rees protocol <ref> [OR87] </ref> cannot be expressed as a name-stamp protocol, because name-stamp protocols cannot test whether a field of an input message is encrypted with a certain key or whether two fields of an input message contain the same value. <p> Note that occurrences of the same variable in different local protocols are unrelated, and that each run of a local protocol has distinct variable bindings. Example. In this language, the Otway-Rees protocol <ref> [OR87] </ref> is hfkey (Z; S)g; fhfA; Bg; P 1 i; hfA; Bg; P 2 i; hfSg; P 3 igi; where P 1 : 0. BeginInit (r) 1. NewValue (;; m) 2. NewValue (;; n) 3. Send (r; mr fnmrg key (;S) ) 4. Receive (r; mfnkg key (;S) ) 5.
Reference: [Ros95] <author> A. W. Roscoe. </author> <title> Modelling and verifying key exchange protocols using CSP and FDR. </title> <booktitle> In Proc. 8th IEEE Computer Security Foundations Workshop, </booktitle> <pages> pages 98-107. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction Exhaustive state-space exploration is a powerful approach to automated verification of authentication and key establishment protocols. This approach has been applied to several protocols <ref> [Ros95, Low96, MMS97, MCJ97] </ref>. This approach is promising because many such protocols use a small, fixed amount of state.
Reference: [Ros98] <author> A. W. Roscoe. </author> <title> Proving security protocols with model checkers by data independence techniques. </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1998. </year>
Reference-contexts: The restrictions are reasonable but are not satisfied by some interesting authentication protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos version 5 [KN93] protocols. In <ref> [Ros98] </ref>, A. W. Roscoe shows how data-independence techniques developed for CSP can be used to prove reductions that bound the sizes of types used to represent nonces and names of principals In [DY83], Dolev and Yao give algorithms that verify the security of protocols directly, without reductions to finite-state systems.
Reference: [WL93a] <author> Thomas Y. C. Woo and Simon S. Lam. </author> <title> A semantic model for authentication protocols. </title> <booktitle> In Proc. 14th IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 178-194. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year> <note> Available via http://www.cs.utexas.edu/users/lam/NRL/network security.html. </note>
Reference-contexts: In this paper, we prove reductions that apply to a large class of protocols and properties. The protocols and properties we consider are essentially those of Woo and Lam's model for authentication protocols <ref> [WL93a, WL93b] </ref>; that model also underlies [MCJ97]. <p> Woo and Lam's model incorporates some common simplifying assumptions. It assumes that the symmetric and public-key cryptosystems are perfect (or ideal) <ref> [WL93a] </ref>; a reasonable approximation to this can be obtained by incorporating into the encryption and decryptions functions an integrity check based on a message digest. <p> Using these results, Section 5 presents the three reductions described above that bound Z's behavior. Section 6 discusses reductions for the number of runs of each local protocol. 2 Model of Authentication Protocols We use Woo and Lam's model of authentication <ref> [WL93a] </ref>, with insignificant modifications. Woo and Lam's semantics defines the possible executions of a system as the runs of a transition system; we give a more concise semantics expressed as a predicate on executions. 2.1 Syntax of Authentication Protocols Terms. <p> inClosure (t 2 ; S)) _ (9t 1 2 Term G ; k 2 (Key sym [ Key asym ) : t = ft 1 g k ^ k 2 S ^ inClosure (t 1 ; S)) These definitions assume that the symmetric and public-key cryptosystems are perfect (or ideal) <ref> [WL93a] </ref>. There are several minor differences between Woo and Lam's language and semantics and ours.
Reference: [WL93b] <author> Thomas Y. C. Woo and Simon S. Lam. </author> <title> Verifying authentication protocols: Methodology and example. </title> <booktitle> In Proc. Int'l. Conference on Network Protocols, </booktitle> <month> October </month> <year> 1993. </year>
Reference-contexts: In this paper, we prove reductions that apply to a large class of protocols and properties. The protocols and properties we consider are essentially those of Woo and Lam's model for authentication protocols <ref> [WL93a, WL93b] </ref>; that model also underlies [MCJ97]. <p> Section 2 defines our model of protocols and properties. Section 3 characterizes encryptions by Z that are not useful, i.e., do not affect the behavior of the other principals in an execution. 1 A proof system based on that model is described in <ref> [WL93b] </ref> and used in [WL94]. 2 Section 4 shows that in executions in which Z performs many nested encryptions, some of those encryptions must be useless. Using these results, Section 5 presents the three reductions described above that bound Z's behavior.
Reference: [WL94] <author> Thomas Y. C. Woo and Simon S. Lam. </author> <title> Design, verification and implementation of an authentication protocol. </title> <booktitle> In Proc. Int'l. Conference on Network Protocols, </booktitle> <month> October </month> <year> 1994. </year> <month> 13 </month>
Reference-contexts: Section 2 defines our model of protocols and properties. Section 3 characterizes encryptions by Z that are not useful, i.e., do not affect the behavior of the other principals in an execution. 1 A proof system based on that model is described in [WL93b] and used in <ref> [WL94] </ref>. 2 Section 4 shows that in executions in which Z performs many nested encryptions, some of those encryptions must be useless. Using these results, Section 5 presents the three reductions described above that bound Z's behavior.
References-found: 15

