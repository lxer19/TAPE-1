URL: http://www.win.tue.nl/math/dw/pp/berry/papers/CS-R9571.ps.gz
Refering-URL: http://www.win.tue.nl/math/dw/pp/berry/papers.html
Root-URL: http://www.win.tue.nl
Title: secret-ballot elections with linear work  
Author: R.J.F. Cramer, M. Franklin, L.A.M. Schoenmakers and M. Yung 
Date: 1995  
Affiliation: Computer Science/Department of Algorithmics and  
Note: Multi-authority  
Pubnum: Architecture CS-R9571  
Abstract: Centrum voor Wiskunde en Informatica REPORTRAPPORT 
Abstract-found: 1
Intro-found: 1
Reference: [Ben87a] <author> J. Benaloh. </author> <title> Cryptographic capsules: A disjunctive primitive for interactive protocols. </title> <booktitle> In Advances in Cryptology|CRYPTO '86, volume 263 of Lecture Notes in Computer Science, </booktitle> <pages> pages 213-222, </pages> <address> Berlin, 1987. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: In the present paper we will also address various number-theoretic assumptions. As with our result, the efficiency improvement in [SK94] is mainly due to an improved zero-knowledge protocol to show validity of ballots. As noted by Benaloh, such cryptographic capsules <ref> [Ben87a, Ben87b] </ref> are at the heart of the problem of electronic elections and also useful for other applications. We note that the technique of [CDS94] can also be used to obtain efficient solutions for group signatures (see [CDS94, CP95]). 2.
Reference: [Ben87b] <author> J. Benaloh. </author> <title> Verifiable Secret-Ballot Elections. </title> <type> PhD thesis, </type> <institution> Yale University, Department of Computer Science Department, </institution> <address> New Haven, CT, </address> <month> September </month> <year> 1987. </year>
Reference-contexts: that only a subset (of a size larger than a certain threshold) of the authorities is required to participate throughout the execution of the scheme in order to compute the final tally. 1.2 Related Work The type of voting schemes considered in this paper was first introduced and implemented in <ref> [CF85, BY86, Ben87b] </ref>. In these schemes, privacy and robustness are achieved by distributing the ballots over a number of tallying authorities, while still achieving universal verifiability. This contrasts with other approaches in which the ballots are submitted anonymously to guarantee privacy for the individual voters. <p> For these approaches it seems difficult however to attain all desired properties, 2. Cryptographic Primitives 4 and still achieve high performance and provable security. The voting schemes of <ref> [CF85, BY86, Ben87b] </ref> rely on an r-th residuosity assumption. In [SK94] it is shown that such schemes can also be based on a discrete logarithm assumption (without fully addressing robustness, though), and how this leads to considerable efficiency improvements. In the present paper we will also address various number-theoretic assumptions. <p> In the present paper we will also address various number-theoretic assumptions. As with our result, the efficiency improvement in [SK94] is mainly due to an improved zero-knowledge protocol to show validity of ballots. As noted by Benaloh, such cryptographic capsules <ref> [Ben87a, Ben87b] </ref> are at the heart of the problem of electronic elections and also useful for other applications. We note that the technique of [CDS94] can also be used to obtain efficient solutions for group signatures (see [CDS94, CP95]). 2.
Reference: [BT94] <editor> J. Benaloh and D. Tuinstra. Receipt-free secret-ballot elections. </editor> <booktitle> In Proc. 26th Symposium on Theory of Computing (STOC '94), </booktitle> <pages> pages 544-553, </pages> <address> New York, 1994. </address> <publisher> A.C.M. </publisher>
Reference-contexts: A property of voting schemes, recently identified, that we did not consider in the present paper is that of non-coercibility <ref> [BT94] </ref>. Non-coercibility ensures that no voter will obtain, as a result of an execution of the voting scheme, a receipt that can prove how she voted. The intention of this property is to prevent vote-buying and other tactics of voter persuasion.
Reference: [BY86] <author> J. Benaloh and M. Yung. </author> <title> Distributing the power of a government to enhance the privacy of voters. </title> <booktitle> In Proc. 5th ACM Symposium on Principles of Distributed Computing (PODC '86), </booktitle> <pages> pages 52-62, </pages> <address> New York, 1986. </address> <publisher> A.C.M. </publisher>
Reference-contexts: that only a subset (of a size larger than a certain threshold) of the authorities is required to participate throughout the execution of the scheme in order to compute the final tally. 1.2 Related Work The type of voting schemes considered in this paper was first introduced and implemented in <ref> [CF85, BY86, Ben87b] </ref>. In these schemes, privacy and robustness are achieved by distributing the ballots over a number of tallying authorities, while still achieving universal verifiability. This contrasts with other approaches in which the ballots are submitted anonymously to guarantee privacy for the individual voters. <p> For these approaches it seems difficult however to attain all desired properties, 2. Cryptographic Primitives 4 and still achieve high performance and provable security. The voting schemes of <ref> [CF85, BY86, Ben87b] </ref> rely on an r-th residuosity assumption. In [SK94] it is shown that such schemes can also be based on a discrete logarithm assumption (without fully addressing robustness, though), and how this leads to considerable efficiency improvements. In the present paper we will also address various number-theoretic assumptions. <p> Multiway Elections In a multiway election each voter has to choose between a number of options. That is, if there are K options, the voter has to say yes to one of them and no to all of the others. (See also <ref> [BY86] </ref>.) This is achieved efficiently through ballots of the same form as in a parallel election, with the additional requirement that P K l=1 v l = 1, if yes and no are represented by 1 and 0 respectively. To prove 5.
Reference: [CDS94] <author> R. Cramer, I. Damgard, and B. Schoenmakers. </author> <title> Proofs of partial knowledge and simplified design of witness hiding protocols. </title> <booktitle> In Advances in Cryptology| CRYPTO '94, volume 839 of Lecture Notes in Computer Science, </booktitle> <pages> pages 174-187, </pages> <address> Berlin, 1994. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Our contribution now is twofold. We use a particular efficient homomorphic encryption scheme, based on the discrete logarithm problem (although, as we show, it can be based on other cryptographic assumptions as well). Moreover, by applying results from <ref> [CDS94] </ref>, the proof of validity is a simple three-move protocol which is witness indistinguishable (in fact, witness hiding as well), instead of zero-knowledge as in previous schemes. <p> As noted by Benaloh, such cryptographic capsules [Ben87a, Ben87b] are at the heart of the problem of electronic elections and also useful for other applications. We note that the technique of <ref> [CDS94] </ref> can also be used to obtain efficient solutions for group signatures (see [CDS94, CP95]). 2. <p> As noted by Benaloh, such cryptographic capsules [Ben87a, Ben87b] are at the heart of the problem of electronic elections and also useful for other applications. We note that the technique of [CDS94] can also be used to obtain efficient solutions for group signatures (see <ref> [CDS94, CP95] </ref>). 2. <p> Furthermore, by the results of <ref> [CDS94] </ref>, the protocol in Figure 1 is a witness indistinguishable proof of knowledge that the voter knows log g Bh or log g B=h; here, Schnorr's identification protocol [Sch91] is used as the basic protocol in the construction of [CDS94]. <p> Furthermore, by the results of <ref> [CDS94] </ref>, the protocol in Figure 1 is a witness indistinguishable proof of knowledge that the voter knows log g Bh or log g B=h; here, Schnorr's identification protocol [Sch91] is used as the basic protocol in the construction of [CDS94]. Thus the verifier learns that the voter knows ff and v 2 f1; 1g such that B = g ff h v , without obtaining any information about the actual value of v. 2 Note that it even follows that the proof of validity is witness hiding. <p> Again the technique from <ref> [CDS94] </ref> can be applied to hide which of the two is known. Multiway Elections In a multiway election each voter has to choose between a number of options. <p> This can be achieved directly by using 1-out-of-N proofs (see <ref> [CDS94] </ref>). Also, using the above approach for parallel elections, the bits b i can be assigned weights like 2 i1 , and then we get integer votes with N = 2 K . 5. <p> To commit to a value m 2 ZZ v , the commit-ter chooses ff 2 R ZZ fl N , and reveals B = ff v h m . The commitment is opened by revealing ff and m. In this setting we may directly apply the technique of <ref> [CDS94] </ref> to Guillou-Quisquater's identification protocol [GQ88] to construct proofs of validity for ballots of the form B i = ff v i h b i .
Reference: [CF85] <author> J. Cohen and M. Fischer. </author> <title> A robust and verifiable cryptographically secure election scheme. </title> <booktitle> In Proc. 26th IEEE Symposium on Foundations of Computer Science (FOCS '85), </booktitle> <pages> pages 372-382. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1985. </year> <note> References 12 </note>
Reference-contexts: that only a subset (of a size larger than a certain threshold) of the authorities is required to participate throughout the execution of the scheme in order to compute the final tally. 1.2 Related Work The type of voting schemes considered in this paper was first introduced and implemented in <ref> [CF85, BY86, Ben87b] </ref>. In these schemes, privacy and robustness are achieved by distributing the ballots over a number of tallying authorities, while still achieving universal verifiability. This contrasts with other approaches in which the ballots are submitted anonymously to guarantee privacy for the individual voters. <p> For these approaches it seems difficult however to attain all desired properties, 2. Cryptographic Primitives 4 and still achieve high performance and provable security. The voting schemes of <ref> [CF85, BY86, Ben87b] </ref> rely on an r-th residuosity assumption. In [SK94] it is shown that such schemes can also be based on a discrete logarithm assumption (without fully addressing robustness, though), and how this leads to considerable efficiency improvements. In the present paper we will also address various number-theoretic assumptions. <p> As depicted in Figure 1, a source of randomness is required in the program for the verifier. For this purpose, one can use some unpredictable physical source of randomness <ref> [CF85] </ref>, or agree on mutually random bits by cryptographic means. A more practical way, however, making the protocol non-interactive, is to apply the well-known Fiat-Shamir heuristic [FS87].
Reference: [Cha81] <author> D. Chaum. </author> <title> Untraceable electronic mail, return addresses, and digital pseudonyms. </title> <journal> Communications of the ACM, </journal> <volume> 24(2) </volume> <pages> 84-88, </pages> <year> 1981. </year>
Reference-contexts: This contrasts with other approaches in which the ballots are submitted anonymously to guarantee privacy for the individual voters. Such schemes rely on the use of anonymous channels <ref> [Cha81] </ref>, or even some form of blind signatures as in privacy-protecting payment systems (see, e.g., [Che94]) to achieve privacy. For these approaches it seems difficult however to attain all desired properties, 2. Cryptographic Primitives 4 and still achieve high performance and provable security.
Reference: [Che94] <author> L. Chen. </author> <title> Witness Hiding Proofs and Applications. </title> <type> PhD thesis, </type> <institution> Aarhus University, Computer Science Department, Aarhus, Denmark, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: This contrasts with other approaches in which the ballots are submitted anonymously to guarantee privacy for the individual voters. Such schemes rely on the use of anonymous channels [Cha81], or even some form of blind signatures as in privacy-protecting payment systems (see, e.g., <ref> [Che94] </ref>) to achieve privacy. For these approaches it seems difficult however to attain all desired properties, 2. Cryptographic Primitives 4 and still achieve high performance and provable security. The voting schemes of [CF85, BY86, Ben87b] rely on an r-th residuosity assumption.
Reference: [CP95] <author> L. Chen and T. P. Pedersen. </author> <title> New group signature schemes. </title> <booktitle> In Advances in Cryptology|EUROCRYPT '94, volume 950 of Lecture Notes in Computer Science, </booktitle> <pages> pages 171-181, </pages> <address> Berlin, 1995. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: As noted by Benaloh, such cryptographic capsules [Ben87a, Ben87b] are at the heart of the problem of electronic elections and also useful for other applications. We note that the technique of [CDS94] can also be used to obtain efficient solutions for group signatures (see <ref> [CDS94, CP95] </ref>). 2.
Reference: [FS87] <author> A. Fiat and A. Shamir. </author> <title> How to prove yourself: Practical solutions to identification and signature problems. </title> <booktitle> In Advances in Cryptology|CRYPTO '86, volume 263 of Lecture Notes in Computer Science, </booktitle> <pages> pages 186-194, </pages> <address> New York, 1987. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: For this purpose, one can use some unpredictable physical source of randomness [CF85], or agree on mutually random bits by cryptographic means. A more practical way, however, making the protocol non-interactive, is to apply the well-known Fiat-Shamir heuristic <ref> [FS87] </ref>. Their idea is to compute the challenge in a three-move identification scheme as a hash value of the message to be signed and the first message of the prover. So, let H be a suitable strong cryptographic hash function (thought of as a random oracle).
Reference: [Gen95] <author> R. Gennaro. </author> <title> Achieving independence efficiently and securely. </title> <booktitle> In Proc. 14th ACM Symposium on Principles of Distributed Computing (PODC '95), </booktitle> <address> New York, 1995. </address> <publisher> A.C.M. </publisher>
Reference: [GQ88] <author> L. C. Guillou and J.-J. Quisquater. </author> <title> A practical zero-knowledge protocol fitted to security microprocessor minimizing both transmission and memory. </title> <booktitle> In Advances in Cryptology|EUROCRYPT '88, volume 330 of Lecture Notes in Computer Science, </booktitle> <pages> pages 123-128, </pages> <address> Berlin, 1988. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The commitment is opened by revealing ff and m. In this setting we may directly apply the technique of [CDS94] to Guillou-Quisquater's identification protocol <ref> [GQ88] </ref> to construct proofs of validity for ballots of the form B i = ff v i h b i . To extend this to a solution with multiple authorities, as in Section 3, we run into a problem as we have no matching verifiably secret sharing scheme.
Reference: [Oka93] <author> T. Okamoto. </author> <title> Provably secure and practical identification schemes and corresponding signature schemes. </title> <booktitle> In Advances in Cryptology|CRYPTO '92, volume 740 of Lecture Notes in Computer Science, </booktitle> <pages> pages 31-53, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The scheme of Section 3 can be carried over easily to this setting by observing that the immediate generalization of Okamoto's variation of Schnorr's scheme <ref> [Oka93] </ref> can be used to prove knowledge of either log g;h 1 ;:::;h l1 ;h l+1 ;:::;h K Bh l or log g;h 1 ;:::;h l1 ;h l+1 ;:::;h K B=h l , for each l = 1; : : : ; K.
Reference: [Ped92] <author> T. P. Pedersen. </author> <title> Non-interactive and information-theoretic secure verifiable secret sharing. </title> <booktitle> In Advances in Cryptology|CRYPTO '91, volume 576 of Lecture Notes in Computer Science, </booktitle> <pages> pages 129-140, </pages> <address> Berlin, 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The encrypted vote is distributed over the authorities such that fewer than some number of authorities remain ignorant about individual votes. To make sure that the authorities are convinced that the posted shares actually represent the vote cast, verifiable secret sharing is employed. Here, we apply Pedersen's scheme <ref> [Ped92] </ref>, as it fits with the other primitives remarkably well. <p> Assume that the discrete logarithm problem for G is intractable. The encryption scheme below is obtained as an extension of Pedersen's commitment scheme <ref> [Ped92] </ref> with an efficient proof of validity. Initialization: The participants, or a designated subset of them, run Gen (1 k ) and obtain a group G q of prime order q, and random group elements g and h. <p> We use the scheme of Pedersen <ref> [Ped92] </ref>, as it is based on discrete logarithms as well and fits nicely with our encryption scheme. Being information theoretically secure, this scheme also contributes to privacy in our multiple authority scenario. 3. <p> Subsequently, b i is considered as a secret which is to be shared among the authorities. We employ a verifiable secret sharing scheme to prevent voters from disrupting elections by sending false shares to authorities. The efficient scheme by Pedersen <ref> [Ped92] </ref> is a perfect candidate as it applies exactly to the discrete log setting we are considering. The idea is thus to let the voter act as the dealer in Pedersen's scheme, sending a verifiable share of the secret b i to each authority using the proper private channels.
Reference: [Sch91] <author> C. P. Schnorr. </author> <title> Efficient signature generation by smart cards. </title> <journal> Journal of Cryptology, </journal> <volume> 4(3) </volume> <pages> 161-174, </pages> <year> 1991. </year>
Reference-contexts: Furthermore, by the results of [CDS94], the protocol in Figure 1 is a witness indistinguishable proof of knowledge that the voter knows log g Bh or log g B=h; here, Schnorr's identification protocol <ref> [Sch91] </ref> is used as the basic protocol in the construction of [CDS94].
Reference: [SK94] <author> K. Sako and J. Kilian. </author> <title> Secure voting using partially compatible homomor-phisms. </title> <booktitle> In Advances in Cryptology|CRYPTO '94, volume 839 of Lecture Notes in Computer Science, </booktitle> <pages> pages 411-424, </pages> <address> Berlin, 1994. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: For these approaches it seems difficult however to attain all desired properties, 2. Cryptographic Primitives 4 and still achieve high performance and provable security. The voting schemes of [CF85, BY86, Ben87b] rely on an r-th residuosity assumption. In <ref> [SK94] </ref> it is shown that such schemes can also be based on a discrete logarithm assumption (without fully addressing robustness, though), and how this leads to considerable efficiency improvements. In the present paper we will also address various number-theoretic assumptions. As with our result, the efficiency improvement in [SK94] is mainly <p> In <ref> [SK94] </ref> it is shown that such schemes can also be based on a discrete logarithm assumption (without fully addressing robustness, though), and how this leads to considerable efficiency improvements. In the present paper we will also address various number-theoretic assumptions. As with our result, the efficiency improvement in [SK94] is mainly due to an improved zero-knowledge protocol to show validity of ballots. As noted by Benaloh, such cryptographic capsules [Ben87a, Ben87b] are at the heart of the problem of electronic elections and also useful for other applications. <p> voter need not communicate more than approximately 10.000 bits of information to submit a vote, assuming that jpj = 512 bits and jqj = 160 bits for our discrete log scheme. (Note that the actual ballot plus its proof of validity require only 1152 bits.) Compare this, for instance, to <ref> [SK94] </ref> with in the order of a million bits per vote for the same level of security. A property of voting schemes, recently identified, that we did not consider in the present paper is that of non-coercibility [BT94].
Reference: [SK95] <author> K. Sako and J. Kilian. </author> <title> Receipt-free mix-type voting scheme|a practical solution to the implementation of a voting booth. </title> <booktitle> In Advances in Cryptology| EUROCRYPT '95, volume 921 of Lecture Notes in Computer Science, </booktitle> <pages> pages 393-403, </pages> <address> Berlin, 1995. </address> <publisher> Springer-Verlag. </publisher>
References-found: 17

