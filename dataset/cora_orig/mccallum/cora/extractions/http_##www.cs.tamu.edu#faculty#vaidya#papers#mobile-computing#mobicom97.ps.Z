URL: http://www.cs.tamu.edu/faculty/vaidya/papers/mobile-computing/mobicom97.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/mobile.html
Root-URL: http://www.cs.tamu.edu
Email: E-mail: fshameed,vaidyag@cs.tamu.edu  
Title: Log-time Algorithms for Scheduling Single and Multiple Channel Data Broadcast  
Author: Sohail Hameed Nitin H. Vaidya 
Web: Web: http://www.cs.tamu.edu/faculty/vaidya/  
Address: College Station, TX 77843-3112, U.S.A.  
Affiliation: Department of Computer Science Texas A&M University  
Abstract: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest. The environment under consideration is asymmetric in that the information server has much more bandwidth available, as compared to the clients. It has been proposed that in such systems the server should broadcast the information periodically. A broadcast schedule determines what is broadcast by the server and when. This paper makes the simple, yet useful, observation that the problem of broadcast scheduling is closely related to the problem of fair queueing. Based on this observation, we present a log-time algorithm for scheduling broadcast, based on an existing fair queueing algorithm. This algorithm significantly improves the time-complexity over previously proposed broadcast scheduling algorithms. Also, for environments where different users may be listening to different number of broadcast channels, we present an algorithm to coordinate broadcasts over different channels. Simulation results are presented for proposed algorithms. Key Words: Data broadcast, asymmetric communication environments, broadcast scheduling, multiple channel broadcast, simulation results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> Prefetching from a broadcast disk, </title> <booktitle> in 12th International Conference on Data Engineering, </booktitle> <month> February </month> <year> 1996. </year>
Reference: [2] <author> S. Acharya, R. Alonso, M. Franklin, and S. Zdonik, </author> <title> Broadcast disks data management for asymmetric communications environment, </title> <booktitle> in ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1995. </year>
Reference: [3] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> Dissemination-based data delivery using broadcast disks, </title> <journal> IEEE Personal Communication, </journal> <pages> pp. 50-60, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest. For instance, such mechanisms could be used by a satellite [25] or a base station <ref> [3] </ref> to communicate information of common interest to wireless hosts. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments [3]. <p> satellite [25] or a base station <ref> [3] </ref> to communicate information of common interest to wireless hosts. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments [3]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. <p> Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [3, 4, 31] </ref>). The Zipf distribution may be expressed as : p i = 1=i P M ; 1 i M channel 3 by an interval of i3 with respect to channel 1. where is a parameter named access skew coefficient. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., <ref> [4, 3, 14, 9, 25, 31] </ref>) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., [8, 16, 15, 17, 30]). In this paper, we only consider minimization of access time. <p> Wong also presents a cyclic scheduling algorithm that performs close to the optimal (the schedule needs to be generated a priori). Chiueh [9] and Acharya et al. <ref> [3] </ref> present schemes that transmit the more frequently used items more often. However, they do not necessarily use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal (a) = 0; 0:2 Random Length Distribution. <p> They also present fast heuristics to achieve a low access time using indexing. The scheduling schemes presented in this paper do not use indexing. Several researchers, including Su and Tassiulas [23], Acharya et al. <ref> [3] </ref> and Statathos et al. [22], have considered the possibility of caching information items at the client. With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. <p> Based on the O (M ) algorithm, we developed another bucketing algorithm that can trade time complexity with performance with an appropriate choice of parameter. The bucketing algorithm has some similarities with broadcast disks <ref> [3] </ref>, but would typically perform better than broadcast disks [25, 26, 29]. * Multiple channel broadcast: Based on the s 2 i p i = constant requirement, we have developed a O (cM ) multichannel broadcast scheduling algorithm for c channels [13, 29].
Reference: [4] <author> M. H. Ammar and J. W. Wong, </author> <title> On the optimality of cyclic transmission in teletext systems, </title> <journal> IEEE Transactions on Communications, </journal> <pages> pp. 68-73, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [3, 4, 31] </ref>). The Zipf distribution may be expressed as : p i = 1=i P M ; 1 i M channel 3 by an interval of i3 with respect to channel 1. where is a parameter named access skew coefficient. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., <ref> [4, 3, 14, 9, 25, 31] </ref>) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., [8, 16, 15, 17, 30]). In this paper, we only consider minimization of access time. <p> In this paper, we only consider minimization of access time. Ammar and Wong <ref> [4, 31] </ref> have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1).
Reference: [5] <institution> Battlefield awareness and data dissemination (BADD) program, program duration 1996-2000. </institution> <note> Web site at http://maco.dc.isx.com/iso/battle/badd.html. </note>
Reference-contexts: 1 Introduction Mobile computing and wireless networks are fast-growing technologies that are making ubiquitous computing a reality. Mobile and wireless computing systems have found many applications, including Defense Messaging System (DMS) [24], Digital Battlefield and Data Dissemination (BADD) <ref> [5] </ref>, and fl Research reported is supported in part by Texas Advanced Technology Program grant 009741-052-C. as a general-purpose computing tool. With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest.
Reference: [6] <author> J. C. R. Bennett and H. Zhang, Wf2q: </author> <title> Worst-case fair weighted fair queueing, </title> <booktitle> in INFOCOM'96, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: This paper makes three contributions: * We observe that the problem of broadcast scheduling is closely related to packet fair queueing <ref> [6, 19, 21] </ref>. While obvious in the hindsight, this observation has not been exploited before to design efficient broadcasting algorithms. * Based on the above observation, we present a O (log M ) broadcast scheduling algorithm, where M is the number of information items. <p> However, as shown later, it is often possible to achieve overall mean access time almost identical to the above lower bound. 3 Broadcast Scheduling & Packet Fair Queueing Consider a switch that has many input channels (queues), but just one output channel. Packet fair queueing algorithms <ref> [6, 21] </ref> determine which packet from the many input queues should be transmitted next on the output channel. <p> Observe that l i =s i is the fraction of broadcast channel bandwidth allocated to item i. * All instances of each item i should be spaced equally apart with spacing s i . These two conditions are similar to those imposed on packet fair queueing, particularly in <ref> [6] </ref>. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair queueing algorithm in [6, 20] to broadcast scheduling. <p> These two conditions are similar to those imposed on packet fair queueing, particularly in [6]. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair queueing algorithm in <ref> [6, 20] </ref> to broadcast scheduling. The broadcast scheduling algorithm, thus obtained, is presented below. 4 Single Channel Broadcast Scheduling Scheme In this section, we consider the case when the information items are broadcast on a single channel. Section 5 considers multiple channel broadcast. <p> From among these items, the items with the smallest C i (suggested worst-case completion time) is chosen for broadcast. Using the heap data structure, steps 1 through 4 can be implemented such that, the average time complexity per iteration is O (log M ) <ref> [6, 28] </ref>. As an illustration, assume that the database consists of 3 items, such that l 1 = 1, l 2 = 2, l 3 = 3, p 1 = 0:5, p 2 = 0:25, and p 3 = 0:25. <p> Note that the curves ch1 sim and ch1 opt are overlapping. 2, and (ii) there is still some room for improvement in our algorithm for c = 3. 7 Related Work The algorithms presented in this paper are based on an algorithm proposed previously for packet fair queueing <ref> [6] </ref>. As noted earlier, the problem of optimal broadcast scheduling is closely related to design of good packet fair queueing algorithms. The problem of data broadcasting has received much attention lately.
Reference: [7] <author> W. E. Boyce and R. C. DiPrima, </author> <title> Calculus. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1988. </year>
Reference-contexts: Solving Equations 14 and 15, we get i2 = 4 2 +3 3 3 2 +2 3 s i . It can be verified that these values of i2 and i3 represent the point of minima, by applying appropriate checks to second derivatives of t i <ref> [7] </ref>. The above proof can be generalized for c &gt; 3 also.
Reference: [8] <author> M.-S. Chen, P. S. Yu, and K.-L. Wu, </author> <title> Indexed sequential data broadcasting in wireless mobile computing, </title> <booktitle> in International Conf. Distributed Computing Systems, </booktitle> <pages> pp. 124-131, </pages> <year> 1997. </year>
Reference-contexts: existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., [4, 3, 14, 9, 25, 31]) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., <ref> [8, 16, 15, 17, 30] </ref>). In this paper, we only consider minimization of access time. Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results.
Reference: [9] <author> T. Chiueh, </author> <title> Scheduling for broadcast-based file systems, </title> <booktitle> in MOBIDATA Workshop, </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., <ref> [4, 3, 14, 9, 25, 31] </ref>) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., [8, 16, 15, 17, 30]). In this paper, we only consider minimization of access time. <p> Wong also presents a cyclic scheduling algorithm that performs close to the optimal (the schedule needs to be generated a priori). Chiueh <ref> [9] </ref> and Acharya et al. [3] present schemes that transmit the more frequently used items more often. However, they do not necessarily use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal (a) = 0; 0:2 Random Length Distribution.
Reference: [10] <author> V. Gondhalekar, R. Jain, and J. Werth, </author> <title> Scheduling on airdisks: Efficient access to personalized information services via periodic wireless data broadcast, </title> <booktitle> in IEEE Int. Conf. Comm., </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: In (a), the curves shown are for access skew coefficient = 0 and = 0:2, whereas in (b), the curves shown are for = 0:5 and = 0:75. frequencies. (Optimal frequencies are inversely proportional to optimal spacing.) Gondhalekar et al. <ref> [10] </ref> have looked at the problem of optimizing mean access time using indexing schemes, and shown that the problem is NP-complete under certain conditions. They also present fast heuristics to achieve a low access time using indexing. The scheduling schemes presented in this paper do not use indexing.
Reference: [11] <author> V. A. Gondhalekar, </author> <title> Scheduling periodic wireless data broadcast, </title> <month> December </month> <year> 1995. </year> <title> M.S. </title> <type> Thesis, </type> <institution> The University of Texas at Austin. </institution>
Reference: [12] <author> A. Gurijala and U. Pooch, </author> <title> Propagating updates in asymmetric channels (a position paper), </title> <booktitle> in First International Workshop on Satellite-based Information Services (WOS-BIS), </booktitle> <month> November </month> <year> 1996. </year>
Reference: [13] <author> S. Hameed, </author> <title> Scheduling information broadcast in asymmetric environment. M.S. </title> <type> Thesis, </type> <institution> Dept. of Computer Science, Texas A&M University, </institution> <month> May </month> <year> 1997. </year>
Reference-contexts: With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. We have developed several broadcast scheduling algorithms that are not presented in this paper <ref> [13, 27, 28, 29, 25, 26] </ref>. This section summarizes some of these algorithms. * Single channel broadcast: From Theorem 1, it follows that, for an optimal schedule s 2 i p i = constant, for all items i. <p> The bucketing algorithm has some similarities with broadcast disks [3], but would typically perform better than broadcast disks [25, 26, 29]. * Multiple channel broadcast: Based on the s 2 i p i = constant requirement, we have developed a O (cM ) multichannel broadcast scheduling algorithm for c channels <ref> [13, 29] </ref>. This algorithm results in near-optimal performance in many cases, and tends to perform better than the multi-channel algorithm presented in this pa per. However, the algorithm presented here has lower time complexity. <p> tains an uncorrectable (detected) error is E (l), then the proportionality in Theorem 1 must be modified as s i / l i 1 + E (l i ) The modified Theorem 1 can then be used to design scheduling algorithms (similar to above algorithms) in presence of transmission errors <ref> [13, 25, 29] </ref>. 8 Conclusions This paper considers asymmetric environments where a server has a much larger communication bandwidth available as compared to the clients. In such an environment, an effective way for the server to communicate information to the clients is to broadcast the information periodically.
Reference: [14] <author> T. Imielinski and S. Viswanathan, </author> <title> Adaptive wireless information systems, </title> <booktitle> in Proceedings of SIGDBS (Special Interest Group in DataBase Systems) Conference, </booktitle> <month> Octo-ber </month> <year> 1994. </year>
Reference-contexts: The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., <ref> [4, 3, 14, 9, 25, 31] </ref>) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., [8, 16, 15, 17, 30]). In this paper, we only consider minimization of access time. <p> Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). Wong [31] and Imielinski and Viswanathan <ref> [14, 30] </ref> present a constant-time algorithm that uses a probabilistic approach for deciding which item to transmit. <p> The single channel scheduling algorithm presented in this paper results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic algorithm in <ref> [14, 30, 31] </ref>, with a modest increase in time-complexity (logarithmic). Wong also presents a cyclic scheduling algorithm that performs close to the optimal (the schedule needs to be generated a priori). Chiueh [9] and Acharya et al. [3] present schemes that transmit the more frequently used items more often.
Reference: [15] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> Energy efficient indexing on air, </title> <month> May </month> <year> 1994. </year>
Reference-contexts: existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., [4, 3, 14, 9, 25, 31]) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., <ref> [8, 16, 15, 17, 30] </ref>). In this paper, we only consider minimization of access time. Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results.
Reference: [16] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> Power efficient filtering of data on air, </title> <booktitle> in 4th International Conference on Extending Database Technology, </booktitle> <month> March </month> <year> 1994. </year>
Reference-contexts: existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., [4, 3, 14, 9, 25, 31]) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., <ref> [8, 16, 15, 17, 30] </ref>). In this paper, we only consider minimization of access time. Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results.
Reference: [17] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> Data on the air organization and access, </title> <journal> IEEE Transactions of Data and Knowldge Engineering, </journal> <month> July </month> <year> 1996. </year>
Reference-contexts: existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., [4, 3, 14, 9, 25, 31]) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., <ref> [8, 16, 15, 17, 30] </ref>). In this paper, we only consider minimization of access time. Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results.
Reference: [18] <author> R. Jain and J. Werth, </author> <title> Airdisks and airraid : Mod-elling and scheduling periodic wireless data broadcast (extended abstract), </title> <type> Tech. Rep. DIMACS Tech. Report 95-11, </type> <institution> Rutgers University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: The spacing between two instances of an item is the time it takes to broadcast information from the beginning of the first instance to the beginning of the second instance. It can be shown that, for optimal broadcast scheduling, all instances of an item should be equally spaced <ref> [18, 25] </ref>. Hereafter, for our theoretical development, we assume that all instances of item i are spaced s i apart. The equal-spacing assumption cannot always be realized in practice [28], however, the assumption does provide a basis for developing the proposed algorithms.
Reference: [19] <author> S. Keshav, </author> <title> On the efficient implementation of fair queueing, </title> <journal> Journal of Internetworking: Research and Experience, </journal> <volume> vol. 2, </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: This paper makes three contributions: * We observe that the problem of broadcast scheduling is closely related to packet fair queueing <ref> [6, 19, 21] </ref>. While obvious in the hindsight, this observation has not been exploited before to design efficient broadcasting algorithms. * Based on the above observation, we present a O (log M ) broadcast scheduling algorithm, where M is the number of information items.
Reference: [20] <author> P. Krishna, </author> <title> personal communication on packet fair queueing and broadcast scheduling, </title> <year> 1996. </year>
Reference-contexts: These two conditions are similar to those imposed on packet fair queueing, particularly in [6]. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair queueing algorithm in <ref> [6, 20] </ref> to broadcast scheduling. The broadcast scheduling algorithm, thus obtained, is presented below. 4 Single Channel Broadcast Scheduling Scheme In this section, we consider the case when the information items are broadcast on a single channel. Section 5 considers multiple channel broadcast. <p> These issues are a subject of our on-going work. Acknowledgements Thanks are due to P. Krishna for drawing our attention to the papers on packet fair queueing <ref> [20] </ref>. This work was motivated by discussions with him on the possibility of applying our previous broadcast scheduling algorithms to solve the packet fair queueing problem. This paper presents the converse, applica tion of packet fair queueing algorithms to solve the broadcast scheduling problem.
Reference: [21] <author> M. Shreedhar and G. Varghese, </author> <title> Efficient fair queuing using deficit round robin, </title> <booktitle> in SIGCOMM'95, </booktitle> <address> Cambridge, MA, USA, </address> <year> 1995. </year>
Reference-contexts: This paper makes three contributions: * We observe that the problem of broadcast scheduling is closely related to packet fair queueing <ref> [6, 19, 21] </ref>. While obvious in the hindsight, this observation has not been exploited before to design efficient broadcasting algorithms. * Based on the above observation, we present a O (log M ) broadcast scheduling algorithm, where M is the number of information items. <p> However, as shown later, it is often possible to achieve overall mean access time almost identical to the above lower bound. 3 Broadcast Scheduling & Packet Fair Queueing Consider a switch that has many input channels (queues), but just one output channel. Packet fair queueing algorithms <ref> [6, 21] </ref> determine which packet from the many input queues should be transmitted next on the output channel.
Reference: [22] <author> K. Stathatos, N. Roussopoulos, and J. S. Baras, </author> <title> Adaptive data broadcasting using air-cache, </title> <booktitle> in First International Workshop on Satellite-based Information Services (WOSBIS), </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: They also present fast heuristics to achieve a low access time using indexing. The scheduling schemes presented in this paper do not use indexing. Several researchers, including Su and Tassiulas [23], Acharya et al. [3] and Statathos et al. <ref> [22] </ref>, have considered the possibility of caching information items at the client. With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet.
Reference: [23] <author> C.-J. Su and L. Tassiulas, </author> <title> Novel information distribution methods to massive mobile user populations, </title> <type> Tech. Rep. TR 97-46, </type> <institution> ISR, Univ. of Maryland, </institution> <year> 1997. </year>
Reference-contexts: They also present fast heuristics to achieve a low access time using indexing. The scheduling schemes presented in this paper do not use indexing. Several researchers, including Su and Tassiulas <ref> [23] </ref>, Acharya et al. [3] and Statathos et al. [22], have considered the possibility of caching information items at the client. With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. <p> We have developed an O (M ) algorithm that attempts to achieve this equality. The simulation results show that this algorithm also results in near-optimal ac cess times [27, 25, 26, 29]. Su and Tassiulas <ref> [23] </ref> present a broadcast scheduling scheme for clients that do not have any caches. Although the model used in their work, and the method of arriving at the algorithm are different, it is interesting to note that their algorithm bears resemblance to our O (M ) algorithm.
Reference: [24] <institution> U.S. </institution> <note> Navy, Chips articles on DMS, 1993-96. Web site at http://www.chips.navy.mil/dms/dmsart.html. </note>
Reference-contexts: 1 Introduction Mobile computing and wireless networks are fast-growing technologies that are making ubiquitous computing a reality. Mobile and wireless computing systems have found many applications, including Defense Messaging System (DMS) <ref> [24] </ref>, Digital Battlefield and Data Dissemination (BADD) [5], and fl Research reported is supported in part by Texas Advanced Technology Program grant 009741-052-C. as a general-purpose computing tool. With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest.
Reference: [25] <author> N. H. Vaidya and S. Hameed, </author> <title> Data broadcast in asymmetric environments, </title> <booktitle> in First International Workshop on Satellite-based Information Services (WOSBIS), </booktitle> <month> Novem-ber </month> <year> 1996. </year>
Reference-contexts: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest. For instance, such mechanisms could be used by a satellite <ref> [25] </ref> or a base station [3] to communicate information of common interest to wireless hosts. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments [3]. <p> Section 6 evaluates the performance of our algorithms. Related work is discussed in Section 7, including a summary of other scheduling algorithms that we have developed. A summary is presented in Section 8. 2 Terminology and Theoretical Foundation <ref> [25] </ref> First we introduce some terminology and notations. Database at the server is assumed to be divided into many information items. The items are not necessarily of the same length. l i represents length of item i. <p> The spacing between two instances of an item is the time it takes to broadcast information from the beginning of the first instance to the beginning of the second instance. It can be shown that, for optimal broadcast scheduling, all instances of an item should be equally spaced <ref> [18, 25] </ref>. Hereafter, for our theoretical development, we assume that all instances of item i are spaced s i apart. The equal-spacing assumption cannot always be realized in practice [28], however, the assumption does provide a basis for developing the proposed algorithms. <p> Thus, t overall = P M i=1 p i t i . Substituting t i = s i 2 , we obtain t overall as t overall = 1 M X p i s i (1) The theorem below, proved in <ref> [25, 28] </ref>, provides a theoretical basis for the proposed scheduling scheme. Theorem 1 Square-root Rule [25, 28]: Assuming that instances of each item i are equally spaced with spacing s i , minimum overall mean access time is achieved when s i is proportional to p l i and inversely proportional <p> Substituting t i = s i 2 , we obtain t overall as t overall = 1 M X p i s i (1) The theorem below, proved in <ref> [25, 28] </ref>, provides a theoretical basis for the proposed scheduling scheme. Theorem 1 Square-root Rule [25, 28]: Assuming that instances of each item i are equally spaced with spacing s i , minimum overall mean access time is achieved when s i is proportional to p l i and inversely proportional to p p i . <p> That is, s i / l i ; 1 i M Specifically, it can be shown <ref> [25, 28] </ref> that, optimal s i is given by s i = M X p ! r p i Substituting this expression for s i into Equation 1, the optimal overall mean access time, named t optimal , is obtained as: t optimal = 1 i=1 p i l i (3) <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., <ref> [4, 3, 14, 9, 25, 31] </ref>) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., [8, 16, 15, 17, 30]). In this paper, we only consider minimization of access time. <p> With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. We have developed several broadcast scheduling algorithms that are not presented in this paper <ref> [13, 27, 28, 29, 25, 26] </ref>. This section summarizes some of these algorithms. * Single channel broadcast: From Theorem 1, it follows that, for an optimal schedule s 2 i p i = constant, for all items i. <p> We have developed an O (M ) algorithm that attempts to achieve this equality. The simulation results show that this algorithm also results in near-optimal ac cess times <ref> [27, 25, 26, 29] </ref>. Su and Tassiulas [23] present a broadcast scheduling scheme for clients that do not have any caches. <p> Based on the O (M ) algorithm, we developed another bucketing algorithm that can trade time complexity with performance with an appropriate choice of parameter. The bucketing algorithm has some similarities with broadcast disks [3], but would typically perform better than broadcast disks <ref> [25, 26, 29] </ref>. * Multiple channel broadcast: Based on the s 2 i p i = constant requirement, we have developed a O (cM ) multichannel broadcast scheduling algorithm for c channels [13, 29]. <p> tains an uncorrectable (detected) error is E (l), then the proportionality in Theorem 1 must be modified as s i / l i 1 + E (l i ) The modified Theorem 1 can then be used to design scheduling algorithms (similar to above algorithms) in presence of transmission errors <ref> [13, 25, 29] </ref>. 8 Conclusions This paper considers asymmetric environments where a server has a much larger communication bandwidth available as compared to the clients. In such an environment, an effective way for the server to communicate information to the clients is to broadcast the information periodically.
Reference: [26] <author> N. H. Vaidya and S. Hameed, </author> <title> Data broadcast scheduling: On-line and off-line algorithms, </title> <type> Tech. Rep. 96-017, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. We have developed several broadcast scheduling algorithms that are not presented in this paper <ref> [13, 27, 28, 29, 25, 26] </ref>. This section summarizes some of these algorithms. * Single channel broadcast: From Theorem 1, it follows that, for an optimal schedule s 2 i p i = constant, for all items i. <p> We have developed an O (M ) algorithm that attempts to achieve this equality. The simulation results show that this algorithm also results in near-optimal ac cess times <ref> [27, 25, 26, 29] </ref>. Su and Tassiulas [23] present a broadcast scheduling scheme for clients that do not have any caches. <p> Based on the O (M ) algorithm, we developed another bucketing algorithm that can trade time complexity with performance with an appropriate choice of parameter. The bucketing algorithm has some similarities with broadcast disks [3], but would typically perform better than broadcast disks <ref> [25, 26, 29] </ref>. * Multiple channel broadcast: Based on the s 2 i p i = constant requirement, we have developed a O (cM ) multichannel broadcast scheduling algorithm for c channels [13, 29]. <p> In the multi-channel algorithm presented in this paper, each item is independently staggered on the multiple channels. Another possible approach is to design a single schedule for one channel, and use staggered (time-shifted) versions of the entire schedule on other chan nels <ref> [26] </ref>.
Reference: [27] <author> N. H. Vaidya and S. Hameed, </author> <title> Data broadcast scheduling (part I), </title> <type> Tech. Rep. 96-012, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. We have developed several broadcast scheduling algorithms that are not presented in this paper <ref> [13, 27, 28, 29, 25, 26] </ref>. This section summarizes some of these algorithms. * Single channel broadcast: From Theorem 1, it follows that, for an optimal schedule s 2 i p i = constant, for all items i. <p> We have developed an O (M ) algorithm that attempts to achieve this equality. The simulation results show that this algorithm also results in near-optimal ac cess times <ref> [27, 25, 26, 29] </ref>. Su and Tassiulas [23] present a broadcast scheduling scheme for clients that do not have any caches.
Reference: [28] <author> N. H. Vaidya and S. Hameed, </author> <title> Improved algorithms for scheduling data broadcast, </title> <type> Tech. Rep. 96-029, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: It can be shown that, for optimal broadcast scheduling, all instances of an item should be equally spaced [18, 25]. Hereafter, for our theoretical development, we assume that all instances of item i are spaced s i apart. The equal-spacing assumption cannot always be realized in practice <ref> [28] </ref>, however, the assumption does provide a basis for developing the proposed algorithms. Item Mean Access Time of item i, denoted t i , is defined as the average wait by a client needing item i until it starts receiving item i from the server. <p> Thus, t overall = P M i=1 p i t i . Substituting t i = s i 2 , we obtain t overall as t overall = 1 M X p i s i (1) The theorem below, proved in <ref> [25, 28] </ref>, provides a theoretical basis for the proposed scheduling scheme. Theorem 1 Square-root Rule [25, 28]: Assuming that instances of each item i are equally spaced with spacing s i , minimum overall mean access time is achieved when s i is proportional to p l i and inversely proportional <p> Substituting t i = s i 2 , we obtain t overall as t overall = 1 M X p i s i (1) The theorem below, proved in <ref> [25, 28] </ref>, provides a theoretical basis for the proposed scheduling scheme. Theorem 1 Square-root Rule [25, 28]: Assuming that instances of each item i are equally spaced with spacing s i , minimum overall mean access time is achieved when s i is proportional to p l i and inversely proportional to p p i . <p> That is, s i / l i ; 1 i M Specifically, it can be shown <ref> [25, 28] </ref> that, optimal s i is given by s i = M X p ! r p i Substituting this expression for s i into Equation 1, the optimal overall mean access time, named t optimal , is obtained as: t optimal = 1 i=1 p i l i (3) <p> As noted before, the equal-spacing assumption cannot always be realized <ref> [28] </ref>. Therefore, t optimal represents a lower bound on the overall mean access time. The lower bound, in general, is not achievable. <p> From among these items, the items with the smallest C i (suggested worst-case completion time) is chosen for broadcast. Using the heap data structure, steps 1 through 4 can be implemented such that, the average time complexity per iteration is O (log M ) <ref> [6, 28] </ref>. As an illustration, assume that the database consists of 3 items, such that l 1 = 1, l 2 = 2, l 3 = 3, p 1 = 0:5, p 2 = 0:25, and p 3 = 0:25. <p> One can also conceive an environment in which the server broadcasts information on multiple channels <ref> [29, 28] </ref>, and different clients listen to different number of channels depending on the desired quality of service (as characterized by the mean access time). <p> With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. We have developed several broadcast scheduling algorithms that are not presented in this paper <ref> [13, 27, 28, 29, 25, 26] </ref>. This section summarizes some of these algorithms. * Single channel broadcast: From Theorem 1, it follows that, for an optimal schedule s 2 i p i = constant, for all items i.
Reference: [29] <author> N. H. Vaidya and S. Hameed, </author> <title> Scheduling data broadcast in asymmetric communication environments, </title> <type> Tech. Rep. 96-022, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: One can also conceive an environment in which the server broadcasts information on multiple channels <ref> [29, 28] </ref>, and different clients listen to different number of channels depending on the desired quality of service (as characterized by the mean access time). <p> Then, the performance metric of interest here, called composite overall mean access time, denoted t composite overall , is obtained as t composite overall = c X i t overall (i) (5) This metric is a special case of a metric presented in <ref> [29] </ref>. When a client listens to only 1 channel, a lower bound on the overall mean access time t overall (1) is given by t optimal in Equation 3. It is easy to see that, a lower bound on t overall (i) is given by t optimal =i. <p> With caching, a client need only wait for broadcast if the desired item is not in the cache. Our broadcasting schemes do not consider caching as yet. We have developed several broadcast scheduling algorithms that are not presented in this paper <ref> [13, 27, 28, 29, 25, 26] </ref>. This section summarizes some of these algorithms. * Single channel broadcast: From Theorem 1, it follows that, for an optimal schedule s 2 i p i = constant, for all items i. <p> We have developed an O (M ) algorithm that attempts to achieve this equality. The simulation results show that this algorithm also results in near-optimal ac cess times <ref> [27, 25, 26, 29] </ref>. Su and Tassiulas [23] present a broadcast scheduling scheme for clients that do not have any caches. <p> Based on the O (M ) algorithm, we developed another bucketing algorithm that can trade time complexity with performance with an appropriate choice of parameter. The bucketing algorithm has some similarities with broadcast disks [3], but would typically perform better than broadcast disks <ref> [25, 26, 29] </ref>. * Multiple channel broadcast: Based on the s 2 i p i = constant requirement, we have developed a O (cM ) multichannel broadcast scheduling algorithm for c channels [13, 29]. <p> The bucketing algorithm has some similarities with broadcast disks [3], but would typically perform better than broadcast disks [25, 26, 29]. * Multiple channel broadcast: Based on the s 2 i p i = constant requirement, we have developed a O (cM ) multichannel broadcast scheduling algorithm for c channels <ref> [13, 29] </ref>. This algorithm results in near-optimal performance in many cases, and tends to perform better than the multi-channel algorithm presented in this pa per. However, the algorithm presented here has lower time complexity. <p> tains an uncorrectable (detected) error is E (l), then the proportionality in Theorem 1 must be modified as s i / l i 1 + E (l i ) The modified Theorem 1 can then be used to design scheduling algorithms (similar to above algorithms) in presence of transmission errors <ref> [13, 25, 29] </ref>. 8 Conclusions This paper considers asymmetric environments where a server has a much larger communication bandwidth available as compared to the clients. In such an environment, an effective way for the server to communicate information to the clients is to broadcast the information periodically.
Reference: [30] <author> S. Viswanathan, </author> <title> Publishing in Wireless and Wireline Environments. </title> <type> PhD thesis, </type> <institution> Rutgers, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., [4, 3, 14, 9, 25, 31]) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., <ref> [8, 16, 15, 17, 30] </ref>). In this paper, we only consider minimization of access time. Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). Wong [31] and Imielinski and Viswanathan <ref> [14, 30] </ref> present a constant-time algorithm that uses a probabilistic approach for deciding which item to transmit. <p> The single channel scheduling algorithm presented in this paper results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic algorithm in <ref> [14, 30, 31] </ref>, with a modest increase in time-complexity (logarithmic). Wong also presents a cyclic scheduling algorithm that performs close to the optimal (the schedule needs to be generated a priori). Chiueh [9] and Acharya et al. [3] present schemes that transmit the more frequently used items more often.
Reference: [31] <author> J. W. Wong, </author> <title> Broadcast delivery, </title> <booktitle> in Proceedings of IEEE, </booktitle> <pages> pp. 1566-1577, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [3, 4, 31] </ref>). The Zipf distribution may be expressed as : p i = 1=i P M ; 1 i M channel 3 by an interval of i3 with respect to channel 1. where is a parameter named access skew coefficient. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time (e.g., <ref> [4, 3, 14, 9, 25, 31] </ref>) and schemes attempting to reduce the tuning time, i.e., the time a client actively listens to the broadcast (e.g., [8, 16, 15, 17, 30]). In this paper, we only consider minimization of access time. <p> In this paper, we only consider minimization of access time. Ammar and Wong <ref> [4, 31] </ref> have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). <p> In this paper, we only consider minimization of access time. Ammar and Wong [4, 31] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). Wong <ref> [31] </ref> and Imielinski and Viswanathan [14, 30] present a constant-time algorithm that uses a probabilistic approach for deciding which item to transmit. <p> The single channel scheduling algorithm presented in this paper results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic algorithm in <ref> [14, 30, 31] </ref>, with a modest increase in time-complexity (logarithmic). Wong also presents a cyclic scheduling algorithm that performs close to the optimal (the schedule needs to be generated a priori). Chiueh [9] and Acharya et al. [3] present schemes that transmit the more frequently used items more often.
Reference: [32] <author> Z. Zdonik, R. Alonso, M. Franklin, and S. Acharya, </author> <title> Are disks in the air, </title> ' <booktitle> just pie in the sky? ', in IEEE Workshop on Mobile comp. System, </booktitle> <month> December </month> <year> 1994. </year>
References-found: 32

