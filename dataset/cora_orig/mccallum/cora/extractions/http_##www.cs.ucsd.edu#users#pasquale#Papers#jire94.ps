URL: http://www.cs.ucsd.edu/users/pasquale/Papers/jire94.ps
Refering-URL: http://www.cs.ucsd.edu/users/pasquale/Pub.html
Root-URL: http://www.cs.ucsd.edu
Email: kompellag@cs.ucsd.edu.  
Phone: Tel.: 619-534-2673, 619-534-3508, Fax: 619-534-7029  
Title: The Multimedia Multicast Channel  
Author: Joseph C. Pasquale George C. Polyzos Eric W. Anderson Vachaspathi P. Kompella fpasquale, polyzos, ewa, 
Keyword: KEY WORDS: multicast, multimedia, dissemination, computer networks.  
Note: This research has been supported in part by grants from DEC, IBM, NCR, NSF, TRW, and UC MICRO. The views expressed are those of the authors, and not necessarily those of the supporters.  
Address: La Jolla, CA 92093-0114  
Affiliation: Computer Systems Laboratory Department of Computer Science and Engineering University of California, San Diego  
Abstract: The Multimedia Multicast Channel is a dissemination-oriented communication abstraction providing a service analogous to that of a cable television broadcast channel. A source transmits multimedia information such as video and audio streams onto a channel, and a varying number of receivers "tune in" to the channel to receive a selected set of the streams. To support heterogeneity, each receiver may tailor the selected streams to meet individual needs through the use of filters. The design encourages a very loose coupling between the source and the receivers, promoting open-loop control for the underlying network protocols. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.P. Anderson and G. Homsy, </author> <title> "A Continuous Media I/O Server and Its Synchronization Mechanism," </title> <journal> IEEE Computer, </journal> <volume> Vol. 24, No. 10, </volume> <pages> pp. 51-57, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: We use a simple shared memory approach which permits a user process to send and receive data without copying it into and out of the kernel. This approach is similar to those used in ACME <ref> [1] </ref> and in Container Shipping [21]. GetSegment (port, stream, buf, buf_size, position, length, blocking) ReleaseSegment (port, stream, buf, buf_size, blocking) These two calls form a shared memory I/O interface to a stream.
Reference: [2] <author> S. Casner, K. Seo, W. Edmond, and C. Topolcic, </author> <title> "N-Way Conferencing with Packet Video," </title> <booktitle> Proc. 3rd International Workshop on Packet Video, </booktitle> <address> Morristown, NJ, </address> <month> March </month> <year> 1990. </year>
Reference-contexts: A prime example is "video distribution" [24, 14], as in cable television systems where a single source generates video (and associated audio) distributed to a large set of receivers who generally have little or no interaction with the source. Another application is video conferencing <ref> [2, 10, 28] </ref>, where each member is both a source and receiver. This application would require a separate MMC per source to support base-level audio-video distribution. However, video conferencing also requires other control mechanisms which are outside the scope of what is provided by the MMC.
Reference: [3] <author> S. Casner and S. Deering, </author> <title> "First IETF Internet Audiocast," </title> <journal> ACM SIGCOMM Computer Communications Review, </journal> <volume> Vol. 22, </volume> <pages> pp. 92-97, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The actual multicast routing is done by routers that learn the shortest path routes to the destinations [8]. Experiments using IP multicasting include the telecasting of IETF meetings <ref> [3] </ref>. Tunneling [29] is used for efficiency, forming a virtual network, the MBone [18], which supports IP multicasting more efficiently. Various tools and multimedia groupware applications (e.g. sd, nv, vat, wb, mmcc, and others) have been developed and are used over the MBone [18].
Reference: [4] <author> D. Cheriton, </author> <title> "Dissemination-oriented Communication Systems," Distinguished Lecturer Series, </title> <institution> Department of Computer Science and Engineering, University of California, </institution> <address> San Diego, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The Multimedia Multicast Channel (MMC) is a programming abstraction which supports dissemination-oriented communication <ref> [4] </ref>. The abstraction is analogous to that of a cable television channel: a source transmits onto a specific channel, and receivers which have subscribed to that channel receive media streams (e.g. audio and video) without explicit interactions with the source.
Reference: [5] <author> D.D. Clark and D.L. Tennenhouse, </author> <title> "Architectural Considerations for a New Generation of Protocols," </title> <booktitle> Proc. ACM SIGCOMM'90, </booktitle> <pages> pp. 200-208, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: For example, a segment, with its size defined by the application, is a relatively independent piece of information, similar to the "Application Data Unit" concept described in <ref> [5] </ref>. We expect that for many multimedia applications, guarantees of reliable delivery will not be necessary for various media component types, and some segments could be dropped at times of heavy congestion. <p> In particular, the segment position and length allow the receiver to recognize the segment's identity and relationship to other segments in the stream. This allows, for example, out-of-order operation on segments, which improves performance <ref> [5] </ref> as well as fault tolerance. With regard to underlying system software support, it is advantageous to treat the segment as the data unit of manipulation [5]. <p> This allows, for example, out-of-order operation on segments, which improves performance <ref> [5] </ref> as well as fault tolerance. With regard to underlying system software support, it is advantageous to treat the segment as the data unit of manipulation [5]. Cooperation between the network system software and the operating system dictates that a segment be recognized as a basic unit through the protocol stack and the network.
Reference: [6] <author> D.D. Clark, S. Shenker, and L. Zhang, </author> <title> "Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism," </title> <booktitle> Proc. ACM SIGCOMM'92, </booktitle> <address> Balitimore, MD, </address> <pages> pp. 14-26, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: We expect that for many multimedia applications, guarantees of reliable delivery will not be necessary for various media component types, and some segments could be dropped at times of heavy congestion. In addition, some of these applications may actually be quite tolerant to variability of delays, as described in <ref> [6] </ref>. Particularly for lower priority components, applications would be expected to recover gracefully from loss of segments, or adapt to changes in the delays of their arrivals. To enable such adaptability and recovery, segment information (e.g. priority, position, and length) is made available to the receiver.
Reference: [7] <author> S. Deering, </author> <title> "Host Extensions for IP Multicasting," </title> <type> RFC 1112, </type> <institution> Network Information Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> August </month> <year> 1989. </year>
Reference-contexts: Nevertheless, support for dissemination-oriented communication is beginning to receive attention. Pioneering work on IP multicasting by Deering et al. [8] is still fueling some of the current protocol work, which is based on a group communication protocol, the Internet Group Management Protocol (IGMP) <ref> [7] </ref>. This protocol specifies how multicast groups can be formed and managed with little change to the basic infrastructure of IP. Multicast groups are created by individual hosts explicitly joining the groups, i.e. using IGMP to include them in the address list corresponding to a multicast address.
Reference: [8] <author> S. Deering and D. Cheriton, </author> <title> "Multicast Routing in Internetworks and Extended LANs, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 8, No. 2, </volume> <pages> pp. 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: However, most of the work in this area revolves around either low-level communication protocols or groupware applications, which typically simulate multicast through a series of unicasts. Nevertheless, support for dissemination-oriented communication is beginning to receive attention. Pioneering work on IP multicasting by Deering et al. <ref> [8] </ref> is still fueling some of the current protocol work, which is based on a group communication protocol, the Internet Group Management Protocol (IGMP) [7]. This protocol specifies how multicast groups can be formed and managed with little change to the basic infrastructure of IP. <p> Multicast groups are created by individual hosts explicitly joining the groups, i.e. using IGMP to include them in the address list corresponding to a multicast address. The actual multicast routing is done by routers that learn the shortest path routes to the destinations <ref> [8] </ref>. Experiments using IP multicasting include the telecasting of IETF meetings [3]. Tunneling [29] is used for efficiency, forming a virtual network, the MBone [18], which supports IP multicasting more efficiently.
Reference: [9] <author> A.E. Eckberg, </author> <title> "B-ISDN/ATM Traffic and Congestion Control," </title> <journal> IEEE Network, </journal> <volume> Vol. 6, No. 5, </volume> <pages> pp. 28-37, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: For the latter technique to be effective, it should be combined with hierarchical coding (see below) and priority-based discarding of excess load by the network. Various congestion control schemes based on these ideas are under consideration for Broadband ISDN using the Asynchronous Transfer Mode (ATM) <ref> [9] </ref>. Hierarchical coding techniques (also referred to as component, layered, or sub-band coding) split continuous media signals into components of varying importance [15, 13]. The aggregation of these components reconstructs the original data, but subsets of them can also provide various degrees of approximation to the original signal.
Reference: [10] <author> J.R. Ensor, S.R. Ahuja, D.N. Horn, and S.E. Lucco, </author> <title> "The Rapport Multimedia Conferencing System | A Software Overview," </title> <booktitle> Proc. 2nd IEEE Conference on Computer Workstations, </booktitle> <address> Santa Clara, CA, </address> <pages> pp. 52-58, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: A prime example is "video distribution" [24, 14], as in cable television systems where a single source generates video (and associated audio) distributed to a large set of receivers who generally have little or no interaction with the source. Another application is video conferencing <ref> [2, 10, 28] </ref>, where each member is both a source and receiver. This application would require a separate MMC per source to support base-level audio-video distribution. However, video conferencing also requires other control mechanisms which are outside the scope of what is provided by the MMC.
Reference: [11] <author> D. Ferrari and D. Verma, </author> <title> "A Scheme for Real-Time Channel Establishment in Wide-Area Networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 8, No. 3, </volume> <pages> pp. 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference: [12] <author> D. Ferrari, J.C. Pasquale, </author> <title> and G.C. Polyzos, "Network Issues for Sequoia 2000," </title> <booktitle> Proc. IEEE Compcon Spring'92, </booktitle> <address> San Francisco, CA, </address> <pages> pp. 24-28, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: We are currently gaining experience implementing and using the MMC by building a number of distributed multimedia applications, including video-conferencing and a video distribution service, which make use of it. Our testbeds include the Sequoia 2000 Network <ref> [12] </ref> and a large variety of different types of workstations which have audio and video capabilities. <p> Hierarchical coding has been studied extensively in the area of signal processing. It has recently been recommended as a potentially effective mechanism for congestion control for high-speed networks carrying digital continuous media <ref> [15, 13, 19, 12, 23] </ref>. However, we are not aware of any other operating system or network system software level support for layered coding, in particular, in relation to multicasting. 7 Conclusions We have presented the MMC programming abstraction which supports dissemination-oriented communication for distributed multimedia applications.
Reference: [13] <author> M. Ghanbari, </author> <title> "Two-Layer Coding of Video Signals for VBR Networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 7, No. 5, </volume> <pages> pp. 771-781, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: Various congestion control schemes based on these ideas are under consideration for Broadband ISDN using the Asynchronous Transfer Mode (ATM) [9]. Hierarchical coding techniques (also referred to as component, layered, or sub-band coding) split continuous media signals into components of varying importance <ref> [15, 13] </ref>. The aggregation of these components reconstructs the original data, but subsets of them can also provide various degrees of approximation to the original signal. Many compression standards support various forms of hierarchical coding [30, 17]. <p> Hierarchical coding has been studied extensively in the area of signal processing. It has recently been recommended as a potentially effective mechanism for congestion control for high-speed networks carrying digital continuous media <ref> [15, 13, 19, 12, 23] </ref>. However, we are not aware of any other operating system or network system software level support for layered coding, in particular, in relation to multicasting. 7 Conclusions We have presented the MMC programming abstraction which supports dissemination-oriented communication for distributed multimedia applications.
Reference: [14] <author> R. Gusella and M. Maresca, </author> <title> "Design Considerations for a Multimedia Network Distribution Center," </title> <booktitle> Proc. 2nd International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Heidelberg, Germany, </address> <pages> pp. 185-196, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: The use of hierarchical coding at the source to facilitate tailoring is encouraged [15]. We believe this communication paradigm is highly appropriate for multimedia distribution services required by a large class of multimedia multipoint applications. A prime example is "video distribution" <ref> [24, 14] </ref>, as in cable television systems where a single source generates video (and associated audio) distributed to a large set of receivers who generally have little or no interaction with the source. Another application is video conferencing [2, 10, 28], where each member is both a source and receiver.
Reference: [15] <author> G. Karlsson and M. Vetterli, </author> <title> "Packet Video and its Integration into the Network Architecture," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 7, No. 5, </volume> <pages> pp. 739-751, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: These streams may be a subset of the source streams, or new ones computed from the source streams. The use of hierarchical coding at the source to facilitate tailoring is encouraged <ref> [15] </ref>. We believe this communication paradigm is highly appropriate for multimedia distribution services required by a large class of multimedia multipoint applications. <p> Various congestion control schemes based on these ideas are under consideration for Broadband ISDN using the Asynchronous Transfer Mode (ATM) [9]. Hierarchical coding techniques (also referred to as component, layered, or sub-band coding) split continuous media signals into components of varying importance <ref> [15, 13] </ref>. The aggregation of these components reconstructs the original data, but subsets of them can also provide various degrees of approximation to the original signal. Many compression standards support various forms of hierarchical coding [30, 17]. <p> Hierarchical coding has been studied extensively in the area of signal processing. It has recently been recommended as a potentially effective mechanism for congestion control for high-speed networks carrying digital continuous media <ref> [15, 13, 19, 12, 23] </ref>. However, we are not aware of any other operating system or network system software level support for layered coding, in particular, in relation to multicasting. 7 Conclusions We have presented the MMC programming abstraction which supports dissemination-oriented communication for distributed multimedia applications.
Reference: [16] <author> V.P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos, "Multicast Routing for Multimedia Communication," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 1, No. 3, </volume> <pages> pp. 286-292, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Filters may also combine, such as when two receivers on the same channel install identical filters on their ports. If channels are built using source-rooted multicast tree connections <ref> [16] </ref>, the filters can independently propagate upstream and encounter each other at some intermediate node. There, they would be combined to form a single filter which may then continue propagation upstream. <p> Similarly, scaling considerations lead to the decision to limit the involvement of the source in controlling or dealing with individual receivers (e.g. RSVP specifies receiver initiated reservations). 8 The multicast routing algorithm described in <ref> [16] </ref> optimizes network performance for continuous media, making it a strong choice for MMC support. It constructs a source-rooted multicast tree which efficiently uses bandwidth while bounding delay between the source and all destinations. <p> It constructs a source-rooted multicast tree which efficiently uses bandwidth while bounding delay between the source and all destinations. Other work on optimization of multicast tree set up, some of it in the context of multimedia communications, can be found in the references in <ref> [16] </ref>. Hierarchical coding has been studied extensively in the area of signal processing. It has recently been recommended as a potentially effective mechanism for congestion control for high-speed networks carrying digital continuous media [15, 13, 19, 12, 23].
Reference: [17] <author> D. Le Gall, </author> <title> "MPEG: A Video Compression Standard for Multimedia Applications," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 34, No. 4, </volume> <pages> pp. 46-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The aggregation of these components reconstructs the original data, but subsets of them can also provide various degrees of approximation to the original signal. Many compression standards support various forms of hierarchical coding <ref> [30, 17] </ref>. The application of hierarchical coding to continuous media gives the system software at the receiver the capability of allocating resources based on local (i.e. the receiver's) specifications and priorities.
Reference: [18] <author> M.R. </author> <title> Macedonia and D.P. Brutzman, "MBone Provides Audio and Video across the Internet," </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 4, </volume> <pages> pp. 30-6, </pages> <month> April </month> <year> 1994. </year> <month> 10 </month>
Reference-contexts: The actual multicast routing is done by routers that learn the shortest path routes to the destinations [8]. Experiments using IP multicasting include the telecasting of IETF meetings [3]. Tunneling [29] is used for efficiency, forming a virtual network, the MBone <ref> [18] </ref>, which supports IP multicasting more efficiently. Various tools and multimedia groupware applications (e.g. sd, nv, vat, wb, mmcc, and others) have been developed and are used over the MBone [18]. An alternative network layer protocol in the Internet suite, specially designed for continuous media transmission, is ST-II [27]. <p> Tunneling [29] is used for efficiency, forming a virtual network, the MBone <ref> [18] </ref>, which supports IP multicasting more efficiently. Various tools and multimedia groupware applications (e.g. sd, nv, vat, wb, mmcc, and others) have been developed and are used over the MBone [18]. An alternative network layer protocol in the Internet suite, specially designed for continuous media transmission, is ST-II [27].
Reference: [19] <author> J. Pasquale, G. Polyzos, E. Anderson, K. Fall, J. Kay, V. Kompella, D. Ranganathan, S. McMullan, </author> <title> "Network and Operating Systems Support for Multimedia Applications," </title> <type> Technical Report CS91-186, </type> <institution> University of California, </institution> <address> San Diego, La Jolla, CA, </address> <month> March </month> <year> 1991. </year>
Reference-contexts: Hierarchical coding has been studied extensively in the area of signal processing. It has recently been recommended as a potentially effective mechanism for congestion control for high-speed networks carrying digital continuous media <ref> [15, 13, 19, 12, 23] </ref>. However, we are not aware of any other operating system or network system software level support for layered coding, in particular, in relation to multicasting. 7 Conclusions We have presented the MMC programming abstraction which supports dissemination-oriented communication for distributed multimedia applications.
Reference: [20] <author> J.C. Pasquale, </author> <title> G.C. Polyzos, E.W. Anderson, and V.P. Kompella, "Filter Propagation in Dissemination Trees: Trading Off Bandwidth and Processing in Continuous Media Networks," </title> <booktitle> Proc. 4th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> November </month> <year> 1993. </year>
Reference-contexts: Filters are further discussed in <ref> [20] </ref>. 3 Programming Interface We now present a set of system calls that provide the programming interface to the MMC. channel = CreateChannel (access_control, ac_count, stream_spec, ss_count) DestroyChannel (channel) These calls create and destroy channels. Once created, channels exist until destroyed, even across reboots (assuming CreateChannel is atomic).
Reference: [21] <author> J. Pasquale, E. Anderson, P.K. Muller, </author> <title> "Container Shipping: Operating System Support for I/O-Intensive Applications," </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 3, </volume> <pages> pp. 84-93, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: We use a simple shared memory approach which permits a user process to send and receive data without copying it into and out of the kernel. This approach is similar to those used in ACME [1] and in Container Shipping <ref> [21] </ref>. GetSegment (port, stream, buf, buf_size, position, length, blocking) ReleaseSegment (port, stream, buf, buf_size, blocking) These two calls form a shared memory I/O interface to a stream. Buffers containing sourced or received segments are all located within a shared memory area whose size is set in the EnableStream call.
Reference: [22] <author> H. Schulzrinne and S. Casner, "RTP: </author> <title> A Transport Protocol for Real-Time Applications," </title> <institution> Internet Engineering Task Force Draft, file://nic.ddn.mil/internet-drafts/draft-ietf-avt-rtp-04.ps, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: This experimental protocol supports multicasting and resource negotiation appropriate for continuous media, but the protocol itself does not include specific implementation mechanisms, e.g. for multicast route set-up or network resource reservation (instead, such mechanisms must be provided outside of the protocol). A transport protocol for real-time applications, RTP <ref> [22] </ref>, has been proposed lately. RTP provides end-to-end support for multiparty functions, such as synchronization of multiple streams, and reconstruction of streams based on timestamps.
Reference: [23] <author> N. Shacham, </author> <title> "Multipoint Communication by Hierarchically Encoded Data," </title> <booktitle> Proc. IEEE INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <pages> pp. 2107-2114, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Hierarchical coding has been studied extensively in the area of signal processing. It has recently been recommended as a potentially effective mechanism for congestion control for high-speed networks carrying digital continuous media <ref> [15, 13, 19, 12, 23] </ref>. However, we are not aware of any other operating system or network system software level support for layered coding, in particular, in relation to multicasting. 7 Conclusions We have presented the MMC programming abstraction which supports dissemination-oriented communication for distributed multimedia applications.
Reference: [24] <author> W.D. Sincoskie, </author> <title> "System Architecture for a Large Scale Video On Demand Service," Computer Networks and ISDN Systems, </title> <journal> North-Holland, </journal> <volume> Vol. 22, No. 2, </volume> <pages> pp. 155-162, </pages> <year> 1991. </year>
Reference-contexts: The use of hierarchical coding at the source to facilitate tailoring is encouraged [15]. We believe this communication paradigm is highly appropriate for multimedia distribution services required by a large class of multimedia multipoint applications. A prime example is "video distribution" <ref> [24, 14] </ref>, as in cable television systems where a single source generates video (and associated audio) distributed to a large set of receivers who generally have little or no interaction with the source. Another application is video conferencing [2, 10, 28], where each member is both a source and receiver.
Reference: [25] <author> K. </author> <title> Taylor and G.C. Polyzos, "Performance Measurements of a Simple Hierarchically Coded Image Animation over Various Network Testbeds," </title> <type> Sequoia 2000 Technical Report 93/39, </type> <institution> University of California Berkeley, </institution> <address> CA, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: However, since resource reservation is a higher level, infrequent operation, its cost may be acceptable. 7 We have also implemented aspects of the MMC on a local ATM environment <ref> [25, 26] </ref>. A prototype sci-entific visualization animation and video distribution application, using various simple hierarchical coding techniques, demonstrated the capability to efficiently handle heterogeneous receivers. Multiple, multipoint (switched) virtual circuits (VCs) from a source were used to implement a MMC, with different signal components being transported over different VCs.
Reference: [26] <author> K. Taylor, </author> <title> "Prototype Video Multicasting Over a Local ATM Testbed," M.Sc. </title> <type> Thesis, </type> <institution> University of California, </institution> <address> San Diego, La Jolla, CA, </address> <year> 1994. </year>
Reference-contexts: However, since resource reservation is a higher level, infrequent operation, its cost may be acceptable. 7 We have also implemented aspects of the MMC on a local ATM environment <ref> [25, 26] </ref>. A prototype sci-entific visualization animation and video distribution application, using various simple hierarchical coding techniques, demonstrated the capability to efficiently handle heterogeneous receivers. Multiple, multipoint (switched) virtual circuits (VCs) from a source were used to implement a MMC, with different signal components being transported over different VCs. <p> Multiple, multipoint (switched) virtual circuits (VCs) from a source were used to implement a MMC, with different signal components being transported over different VCs. Performance measurements in this environment show <ref> [26] </ref> that (i) using independently received components (i.e. multiple correlated streams implemented as VCs) does not introduce any significant communication overhead, and (ii) that using independently controllable components (e.g.
Reference: [27] <author> C. Topolcic, Ed., </author> <title> "Experimental Internet Stream Protocol, </title> <type> Version 2 (ST-II)," </type> <institution> RFC1190, Network Information Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: Various tools and multimedia groupware applications (e.g. sd, nv, vat, wb, mmcc, and others) have been developed and are used over the MBone [18]. An alternative network layer protocol in the Internet suite, specially designed for continuous media transmission, is ST-II <ref> [27] </ref>. This experimental protocol supports multicasting and resource negotiation appropriate for continuous media, but the protocol itself does not include specific implementation mechanisms, e.g. for multicast route set-up or network resource reservation (instead, such mechanisms must be provided outside of the protocol).
Reference: [28] <author> H.M. Vin, P.T. Zellweger, D.C. Swinehart, and P.V. Rangan, </author> <title> "Multimedia conferencing in the Ether-phone environment," </title> <journal> IEEE Computer, </journal> <volume> Vol. 24, No. 10, </volume> <pages> pp. 69-79, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: A prime example is "video distribution" [24, 14], as in cable television systems where a single source generates video (and associated audio) distributed to a large set of receivers who generally have little or no interaction with the source. Another application is video conferencing <ref> [2, 10, 28] </ref>, where each member is both a source and receiver. This application would require a separate MMC per source to support base-level audio-video distribution. However, video conferencing also requires other control mechanisms which are outside the scope of what is provided by the MMC.
Reference: [29] <author> D. Waitzman, C. Partridge, and S. Deering, </author> <title> "Distance Vector Multicast Routing Protocol," </title> <type> RFC 1075, </type> <institution> Network Information Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> November </month> <year> 1988. </year>
Reference-contexts: The actual multicast routing is done by routers that learn the shortest path routes to the destinations [8]. Experiments using IP multicasting include the telecasting of IETF meetings [3]. Tunneling <ref> [29] </ref> is used for efficiency, forming a virtual network, the MBone [18], which supports IP multicasting more efficiently. Various tools and multimedia groupware applications (e.g. sd, nv, vat, wb, mmcc, and others) have been developed and are used over the MBone [18].
Reference: [30] <author> G.K. Wallace, </author> <title> "The JPEG Still Picture Compression Standard," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 34, No. 4, </volume> <pages> pp. 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The aggregation of these components reconstructs the original data, but subsets of them can also provide various degrees of approximation to the original signal. Many compression standards support various forms of hierarchical coding <ref> [30, 17] </ref>. The application of hierarchical coding to continuous media gives the system software at the receiver the capability of allocating resources based on local (i.e. the receiver's) specifications and priorities.
Reference: [31] <author> L. Zhang, </author> <title> "Virtual Clock: A New Traffic Control Algorithm for Packet Switching Networks," </title> <journal> ACM Transactions on Computers Systems, </journal> <volume> Vol. 9, No. 2, </volume> <pages> pp. 101-124, </pages> <month> May </month> <year> 1991. </year>
Reference: [32] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, "RSVP: </author> <title> A New Resource ReSerVation Protocol," </title> <journal> IEEE Network, </journal> <volume> Vol. 7, No. </volume> <pages> 5 pp. 8-18, </pages> <month> September </month> <year> 1993. </year> <month> 11 </month>
Reference-contexts: The bridges are also responsible for modifying the data so as to be acceptable for the destinations that they serve. In that sense, bridges are similar to the filters we propose. A resource reservation protocol, RSVP <ref> [32] </ref>, has been recently proposed in order to effectively support group communications and the QoS demands of real-time continuous media applications. Even though we do not address resource reservation issues here, RSVP and MMC share many goals and some design decisions.
References-found: 32

