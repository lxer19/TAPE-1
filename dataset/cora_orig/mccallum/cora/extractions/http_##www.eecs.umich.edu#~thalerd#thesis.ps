URL: http://www.eecs.umich.edu/~thalerd/thesis.ps
Refering-URL: http://www.eecs.umich.edu/~thalerd/gdt.html
Root-URL: http://www.cs.umich.edu
Title: An Architecture for Inter-Domain Network Troubleshooting  
Author: by David Garfield Thaler III Chinya V. Ravishankar, Chair 
Degree: A dissertation submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy (Computer Science and Engineering) in The  Doctoral Committee:  Associate Professor Farnam Jahanian Assistant Professor Sugih Jamin Professor Toby Teorey Professor Ken Wise  
Note: Research Scientist  
Date: 1997  
Affiliation: University of Michigan  
Abstract-found: 0
Intro-found: 1
Reference: <institution> 131 BIBLIOGRAPHY </institution>
Reference: [1] <author> Shri K. Goyal and Ralph W. Worrest. </author> <title> Expert systems in network maintenance and management. </title> <booktitle> In Proceedings of the International Conference on Communications, </booktitle> <month> June </month> <year> 1986. </year>
Reference-contexts: In contrast, little has been done to address the problem of coordinated network management across administrative domains, although the need for such a global coordination system has long been recognized <ref> [1, 2, 3, 4] </ref>.
Reference: [2] <author> Makoto Yoshida, Makoto Kobayashi, and Haruo Yamaguchi. </author> <title> Customer control of network management from the service provider's perspective. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 35-40, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: In contrast, little has been done to address the problem of coordinated network management across administrative domains, although the need for such a global coordination system has long been recognized <ref> [1, 2, 3, 4] </ref>.
Reference: [3] <author> Kraig R. Meyer and Dale S. Johnson. </author> <title> Experience in network management: The Merit network operations center. In Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 301-310. </pages> <publisher> IFIP TC6/WG6.6, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: In contrast, little has been done to address the problem of coordinated network management across administrative domains, although the need for such a global coordination system has long been recognized <ref> [1, 2, 3, 4] </ref>.
Reference: [4] <author> Alan Hannan. Inter-provider outage notification. </author> <title> North American Network Operator's Group, </title> <month> May </month> <year> 1996. </year> <note> http://www.academ.com/nanog/may1996/outage.html. </note>
Reference-contexts: In contrast, little has been done to address the problem of coordinated network management across administrative domains, although the need for such a global coordination system has long been recognized <ref> [1, 2, 3, 4] </ref>.
Reference: [5] <author> Craig Labovitz. </author> <title> Routing stability analysis. North American Network Operator's Group, </title> <month> October </month> <year> 1996. </year> <note> http://www.academ.com/nanog/oct1996/routing-stability.html. </note>
Reference-contexts: In contrast, little has been done to address the problem of coordinated network management across administrative domains, although the need for such a global coordination system has long been recognized [1, 2, 3, 4]. A recent informal study of routing instability <ref> [5] </ref> found that while the majority of catastrophic routing problems could be identified as software and configuration errors, about 10% of the problems could only be classified as "somebody else's problem", since all parties questioned pointed to another party as the cause. <p> Cycles in cause-effect graphs are particularly important. They may lead all administrations involved to conclude it is "somebody else's problem", as observed in the informal routing instability study <ref> [5] </ref>, resulting in no action taken at all. We will return to this issue in Section 2.4.4. Constructing cause-effect graphs Given an initial problem (leaf effect) report, a cause-effect graph can be constructed according to the following procedure: 1.
Reference: [6] <author> W. Fenner and D. Massey. </author> <title> Multicast routing report. </title> <address> http://ganef.cs.ucla.edu/ ~masseyd/Route/. </address>
Reference-contexts: Congestion may have many causes, including competing traffic and overloaded 1 routers. Route flapping A given route is repeatedly advertised and withdrawn, causing intermittent connectivity. Flapping is caused by bugs in several router implementations <ref> [6, 7] </ref>. Route dumping A large number of useless routes are advertised, causing routers to be overloaded. Dumping is typically caused by misconfigured routers. No route to source No route exists at some receiver's router for a given source, preventing reception of any data sent. <p> Congestion may have many causes, including competing traffic and overloaded routers. Route flapping A given route is repeatedly advertised and withdrawn, causing intermit tent connectivity. Flapping is caused by bugs in several router implementations <ref> [6] </ref>. Route dumping A large number of useless routes are advertised, causing routers to be overloaded. Dumping is typically caused by misconfigured routers. No route to source No route exists at some receiver's router for a given source, preventing reception of any data sent. <p> One alternative is to use a separate "route flap monitor" which keeps longer-term state on all routes and passively listens to routing messages. Two implementations of this approach exist today, one from the author [51], and the other from UCLA/PARC <ref> [6] </ref>. As with rtprocr instances, demand is generated at a routefwdr for route updates of local origin (due to timer expirations, link failures, and route changes imported from unicast routes). We assume that routefwdr capacity is unbounded, and that the higherList is empty.
Reference: [7] <author> C. Labovitz, R. Malan, and F. Jahanian. </author> <title> Internet routing instability. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <year> 1997. </year>
Reference-contexts: Congestion may have many causes, including competing traffic and overloaded 1 routers. Route flapping A given route is repeatedly advertised and withdrawn, causing intermittent connectivity. Flapping is caused by bugs in several router implementations <ref> [6, 7] </ref>. Route dumping A large number of useless routes are advertised, causing routers to be overloaded. Dumping is typically caused by misconfigured routers. No route to source No route exists at some receiver's router for a given source, preventing reception of any data sent.
Reference: [8] <author> ISO. </author> <title> Information processing systems open systems interconnection basic reference model part 4: Management framework, </title> <booktitle> 1989. </booktitle> <pages> ISO 7498-4. </pages>
Reference-contexts: may be persistent (for example, caused by a misconfiguration or network partition), or intermittent, as part of a route flap problem. 1.2 Network Management Overview The International Standards Organization (ISO) has divided the task of network management into five functional areas defined in the Open Systems Interconnection (OSI) Management Framework <ref> [8] </ref> as follows: Fault management deals with tracking down and correcting hardware problems in an existing network. Performance management deals with avoiding congestion, and optimizing the network in various ways to achieve the best performance according to some criteria. <p> For the horizontal directions, we use the term downstream to denote the direction of data flow, and upstream to denote the reverse direction. In the vertical direction, up and down are defined with respect to the seven-layer protocol stack defined by the ISO <ref> [8] </ref>. To expand upon this notion, we propose the use of resource dependency graphs . We first use a resource dependency graph to describe the network, in which each node represents an object, and directed edges denote dependencies. <p> This is important, since an observer may not be able to distinguish between the two, and our definition allows us to coordinate information relating to both fault management and performance management, as defined by the ISO <ref> [8] </ref>. Our methodology requires creating and maintaining, for each class of objects, means for determining an instance's capacity, utilization, and health, and methods for determining the set of instances above, below, upstream, and downstream from a given instance.
Reference: [9] <author> Elizabeth K. Adams. </author> <title> Global commonality in user requirements. In Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 171-181. </pages> <publisher> IFIP TC6/WG6.6, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: Accounting management deals with tracking resource utilization, such as for billing or quota needs. Security management deals with key management, logging security risks, and audit trails of important events. In one study <ref> [9] </ref>, experts ranked the above areas in the following order of importance: Fault, Configuration, Performance, Security, and Accounting management. Configuration management was seen as important mainly because of its use in fault and performance management.
Reference: [10] <author> Marshall T. Rose. </author> <title> The Simple Book. </title> <publisher> Prentice Hall, </publisher> <address> 2nd edition, </address> <year> 1994. </year>
Reference-contexts: We will therefore focus primarily on fault and performance management in this thesis, although our results are not limited to those areas. The most prevalent protocol for doing network management is the Simple Network Management Protocol (SNMP) <ref> [10] </ref>. SNMP is intended to help in obtaining and setting the values of parameters in remote devices. Collections of such parameters ("variables" in SNMP parlance) related to the same protocol or function are frequently grouped into Management Information Bases (MIBs). <p> No route to source No route exists at some receiver's router for a given source, preventing reception of any data sent. This problem may be persistent (for example, caused 28 by a misconfiguration or network partition), or intermittent, as part of a route flap problem. The SNMP <ref> [10] </ref> protocol is intended to help in obtaining and setting the values of parameters in remote devices. Collections of such parameters ("variables" in SNMP parlance) related to the same protocol or function are frequently grouped into Management Information Bases (MIBs).
Reference: [11] <author> W. Fenner and S. Casner. </author> <title> A "traceroute" facility for IP multicast. </title> <type> Internet Draft, </type> <month> November </month> <year> 1997. </year>
Reference-contexts: A number of ad-hoc diagnostic tools are available, each created to solve a particular problem, or to provide separate and piecemeal access to whatever information is available. Two examples of such tools are mtrace <ref> [11] </ref> and rtpmon [12] (which we will discuss further in Chapter 3). Both of these are very helpful in diagnosing problems when used by a knowledgeable operator. However, using and interpreting such information correctly can be difficult, even when information about other domains is available. <p> Examples of such DEMs include: CT The Connectivity Tool (CT) [23] is a rule-based system which uses ping and traceroute, as well as SNMP queries to identify the causes of end-to-end connectivity problems in the Internet. mtrace daemon An agent may passively listen in on multicast traceroute <ref> [11] </ref> messages to form a picture of Internet connectivity and loss rates. In Chapter 3, we will describe our experience with using such agents in our architecture. As we will see, DEMs will provide the mechanisms to obtain specific information which is used in our methodology. <p> A number of ad-hoc diagnostic tools are available, each created to solve a particular problem, or to provide separate and piecemeal access to whatever information is available. Two examples of such tools available for the MBone domain are mtrace <ref> [11] </ref> and rtpmon [12]. Both of these are very helpful in diagnosing problems when used by a knowledgeable operator. However, using and interpreting such information correctly can be difficult, even when information about other domains is available. Similarly, MIBs often provide ad hoc monitoring information.
Reference: [12] <author> D. Bacher and A. Swan. </author> <title> rtpmon tool. </title> <publisher> ftp://mm-ftp.cs.berkeley.edu/pub/rtpmon/ rtpmon.tar.gz. </publisher>
Reference-contexts: A number of ad-hoc diagnostic tools are available, each created to solve a particular problem, or to provide separate and piecemeal access to whatever information is available. Two examples of such tools are mtrace [11] and rtpmon <ref> [12] </ref> (which we will discuss further in Chapter 3). Both of these are very helpful in diagnosing problems when used by a knowledgeable operator. However, using and interpreting such information correctly can be difficult, even when information about other domains is available. <p> A number of ad-hoc diagnostic tools are available, each created to solve a particular problem, or to provide separate and piecemeal access to whatever information is available. Two examples of such tools available for the MBone domain are mtrace [11] and rtpmon <ref> [12] </ref>. Both of these are very helpful in diagnosing problems when used by a knowledgeable operator. However, using and interpreting such information correctly can be difficult, even when information about other domains is available. Similarly, MIBs often provide ad hoc monitoring information.
Reference: [13] <author> Willis Stinson and Shaygan Kheradpir. </author> <title> A state-based approach to real-time telecommunications network management. </title> <booktitle> In NOMS, </booktitle> <pages> pages 520-532, </pages> <year> 1992. </year>
Reference-contexts: Other work on methodology has been done in the context of fault management <ref> [13, 14] </ref>. However, these techniques are less applicable to performance management, and we desire an integrated solution since it is often difficult to tell whether a perceived problem is due to a fault or to congestion. 1.3 Research Ob jectives This dissertation has three primary research objectives: 1. <p> Observation 3 High utilization can cause low health, as utilization approaches the object's capacity. That is, low health may arise from soft failures (congestion) in addition to hard failures (hardware or software faults). 2.3.2 Cause-effect Graphs Previous studies (e.g., <ref> [13, 14] </ref>) have typically only looked at one direction of fault propagation (i.e., "up"). We introduce cause-effect graphs as a more comprehensive model for representing fault propagation. Each node in such a graph represents a problem, and directed edges lead from effects to causes.
Reference: [14] <author> Aiko Pras. </author> <title> Network Management Architectures. </title> <type> PhD thesis, </type> <institution> University of Twente, Enschede, Netherlands, </institution> <month> February </month> <year> 1995. </year> <month> 132 </month>
Reference-contexts: Other work on methodology has been done in the context of fault management <ref> [13, 14] </ref>. However, these techniques are less applicable to performance management, and we desire an integrated solution since it is often difficult to tell whether a perceived problem is due to a fault or to congestion. 1.3 Research Ob jectives This dissertation has three primary research objectives: 1. <p> Observation 3 High utilization can cause low health, as utilization approaches the object's capacity. That is, low health may arise from soft failures (congestion) in addition to hard failures (hardware or software faults). 2.3.2 Cause-effect Graphs Previous studies (e.g., <ref> [13, 14] </ref>) have typically only looked at one direction of fault propagation (i.e., "up"). We introduce cause-effect graphs as a more comprehensive model for representing fault propagation. Each node in such a graph represents a problem, and directed edges lead from effects to causes.
Reference: [15] <author> David D. Clark. </author> <title> The design philosophy of the DARPA Internet protocols. </title> <booktitle> Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 106-114, </pages> <year> 1988. </year>
Reference-contexts: Also, problems reported by untrusted sources must be confirmed before being acted upon. 1.4.2 Architectural Constraints Our architecture will follow the Internet design philosophy described in <ref> [15] </ref>. We summarize this philosophy with the following set of constraints ranked in order of importance: high availability, allowing multiple services, networks, and centers of administration, cost-effectiveness, low-effort deployment, and accountability.
Reference: [16] <author> Merit/ISI. Inter-provider notification. </author> <note> http://compute.merit.edu/ipn.html. </note>
Reference-contexts: We leave inter-administration negotiation as an opportunity for future work. We also leave the issue of pre-notification, or notifying organizations of downtime scheduled in the future, to other mechanisms. While some work currently in progress, such as IPN <ref> [16] </ref>, addresses the issue of pre-notification, we observe that pre-notification does not solve the problem of coordinating troubleshooting during a problem, since past announcements (if any) may have been lost, ignored, or forgotten, and may be inaccessible during the problem.
Reference: [17] <author> Jill Huntington-Lee, Kornel Terplan, and Jeffrey A. Gibson. </author> <title> HP Openview: A Manager's Guide. </title> <publisher> McGraw-Hill, </publisher> <year> 1997. </year>
Reference-contexts: An NMS is typically run from a console in the domain's NOC, where it may have access to current and historical data on devices and problem reports. Examples of NMS's include HP Openview <ref> [17] </ref>, MView [18], and ANM [19]. 8 MbD agents To address some of the scalability concerns with having a single NMS polling all devices in a large domain, there has been recent interest in distributed (intra-domain) management.
Reference: [18] <author> David G. Thaler and Chinya V. Ravishankar. NView: </author> <title> A visual framework for network tool integration. </title> <booktitle> In Proceedings of the IEEE International Phoenix Conference on Computers and Communications, </booktitle> <pages> pages 283-289, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: An NMS is typically run from a console in the domain's NOC, where it may have access to current and historical data on devices and problem reports. Examples of NMS's include HP Openview [17], MView <ref> [18] </ref>, and ANM [19]. 8 MbD agents To address some of the scalability concerns with having a single NMS polling all devices in a large domain, there has been recent interest in distributed (intra-domain) management. <p> We then extended the user interfaces of typical audio/video applications such as vic and vat to automatically launch a GDT client when needed. Our GDT expert implementation uses the concept of output handlers from NView <ref> [18] </ref>. Briefly, the expert employs available command-line utilities, such as mtrace, and simply parses their output to get the statistics it needs.
Reference: [19] <author> M. Feridun, M. Leib, M. Nodine, and J. Ong. ANM: </author> <title> Automated network management system. </title> <journal> IEEE Network Magazine, </journal> <volume> 2(2) </volume> <pages> 13-19, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: An NMS is typically run from a console in the domain's NOC, where it may have access to current and historical data on devices and problem reports. Examples of NMS's include HP Openview [17], MView [18], and ANM <ref> [19] </ref>. 8 MbD agents To address some of the scalability concerns with having a single NMS polling all devices in a large domain, there has been recent interest in distributed (intra-domain) management.
Reference: [20] <author> German Goldszmidt and Yechiam Yemini. </author> <title> Distributed management by delegation. </title> <booktitle> In Proceedings of the International Conference on Distributed Computing Systems, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: For example, Goldszmidt and Yemini have proposed a Management by Delegation (MbD) <ref> [20] </ref> approach whereby an NMS can push scripts out to management agents around its domain. Each of these agents could potentially be viewed as a DEM. An overview of MbD and other approaches to distributed intra domain management can be found in [21].
Reference: [21] <author> M. Kahani and H.W.P. Beadle. </author> <title> Decentralized approaches for network management. </title> <journal> Computer Communication Review, </journal> <volume> 27(3) </volume> <pages> 36-47, </pages> <month> July </month> <year> 1997. </year>
Reference-contexts: Each of these agents could potentially be viewed as a DEM. An overview of MbD and other approaches to distributed intra domain management can be found in <ref> [21] </ref>. NetNow daemons As part of the Internet Performance Measurement and Analysis (IPMA) project, NetNow daemons [22] measure latency and loss across major Internet Service Providers and Internet exchange points. Such a daemon thus has current and historical data on problems seen in each of several domains.
Reference: [22] <author> Craig Labovitz. Netnow. </author> <note> http://www.merit.edu/~ipma/netnow. </note>
Reference-contexts: Each of these agents could potentially be viewed as a DEM. An overview of MbD and other approaches to distributed intra domain management can be found in [21]. NetNow daemons As part of the Internet Performance Measurement and Analysis (IPMA) project, NetNow daemons <ref> [22] </ref> measure latency and loss across major Internet Service Providers and Internet exchange points. Such a daemon thus has current and historical data on problems seen in each of several domains. DEMs also include tools which diagnose problems end-to-end and help narrow down the cause to a given domain.
Reference: [23] <author> Metin Feridun. </author> <title> Diagnosis of connectivity problems in the internet. In Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 691-701. </pages> <publisher> IFIP TC6/WG6.6, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: Since there are many existing techniques (although ad hoc) to do such things, we wish to incorporate them into our framework as well. Examples of such DEMs include: CT The Connectivity Tool (CT) <ref> [23] </ref> is a rule-based system which uses ping and traceroute, as well as SNMP queries to identify the causes of end-to-end connectivity problems in the Internet. mtrace daemon An agent may passively listen in on multicast traceroute [11] messages to form a picture of Internet connectivity and loss rates.
Reference: [24] <author> Zheng Wang. </author> <title> Model of network faults. In Integrated Network Management, </title> <booktitle> I, </booktitle> <pages> pages 345-352. </pages> <publisher> IFIP TC6/WG6.6, </publisher> <month> April </month> <year> 1989. </year>
Reference-contexts: A good introduction to fault propagation can be found in <ref> [24] </ref>, which describes how faults propagate both vertically, as well as horizontally through the network. For the horizontal directions, we use the term downstream to denote the direction of data flow, and upstream to denote the reverse direction.
Reference: [25] <author> German Goldszmidt and Yechiam Yemini. </author> <title> Evaluating management decisions via delegation. In Integrated Network Management, </title> <booktitle> III. IFIP TC6/WG6.6, </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: For example, a link's capacity might be measured in megabits per second, and a file system's capacity might be measured in gigabytes. Let an object's utilization denote the total amount of its resources in use. Finally, we adopt the concept of a "health function" from <ref> [25] </ref>. We let an object's health be a measure of its performance and its ability to adequately meet imposed demands. Low health is thus an indication of degraded performance. We will use the term problem to denote an object experiencing low health.
Reference: [26] <author> A. Guttman. R-trees: </author> <title> A dynamic index structure for spatial searching. </title> <booktitle> In Proceedings of the 1984 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 47-57, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: This problem is analogous to that of performing a point query in a spatial database to get a list of regions covering the given point. Traditional spatial database techniques such as R-trees <ref> [26] </ref> are not directly applicable, 15 however, since scalability requires that the database of regions be physically distributed. In addition, it doesn't matter whether a region is matched if the associated expert isn't reachable. <p> Area hierarchies are thus constructed in a bottom-up fashion, as in the Landmark scheme. 5.2.4 R-trees It is also instructive to examine centralized hierarchy construction schemes, such as R-trees. An R-tree <ref> [26] </ref> is constructed top-down, starting with a root and recursively choosing the most suitable subtree under which to add each new node.
Reference: [27] <author> P. Mockapetris. </author> <title> Domain names concepts and facilities, </title> <month> November </month> <year> 1987. </year> <month> RFC-1034. </month>
Reference-contexts: Maintain low bandwidth and memory overhead (thus trying not to exacerbate con gestion problems, and interfering as little as possible with other objects). The first constraint suggests that a hierarchy of servers corresponding to a hierarchy in the name space (as is used by DNS <ref> [27] </ref>, X.500 [28], etc) will not work, since we must have successful queries even when we are partitioned from a large part of the network. Replicating such servers everywhere will not keep the bandwidth overhead low. <p> X.500 is a world-wide white-pages naming service that also implements a hierarchical naming structure. Hierarchies in DNS <ref> [27] </ref> and X.500 [28] are constructed by manually configuring each agent with a list of potential parents, ordered by preference. An agent then uses the most preferred parent which is reachable. Such manual configuration usually represents a significant administrative burden in constructing hierarchies. <p> From this comparison, we see that the rate at which messages are received is much lower in the top-down scheme. 88 5.7 Conclusion Many applications, such as name service <ref> [27, 28] </ref> and network management (Chapter 2, use hierarchies of distributed agents. In this chapter, we presented a solution to the important problem of constructing hierarchies in distributed fashion. We presented a top-down approach to this problem, and described a specific top-down algorithm (TDH) with a number of desirable properties.
Reference: [28] <author> Gerald W. Neufeld. </author> <title> Descriptive names in X.500. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 64-70, </pages> <year> 1989. </year>
Reference-contexts: Maintain low bandwidth and memory overhead (thus trying not to exacerbate con gestion problems, and interfering as little as possible with other objects). The first constraint suggests that a hierarchy of servers corresponding to a hierarchy in the name space (as is used by DNS [27], X.500 <ref> [28] </ref>, etc) will not work, since we must have successful queries even when we are partitioned from a large part of the network. Replicating such servers everywhere will not keep the bandwidth overhead low. <p> X.500 is a world-wide white-pages naming service that also implements a hierarchical naming structure. Hierarchies in DNS [27] and X.500 <ref> [28] </ref> are constructed by manually configuring each agent with a list of potential parents, ordered by preference. An agent then uses the most preferred parent which is reachable. Such manual configuration usually represents a significant administrative burden in constructing hierarchies. <p> From this comparison, we see that the rate at which messages are received is much lower in the top-down scheme. 88 5.7 Conclusion Many applications, such as name service <ref> [27, 28] </ref> and network management (Chapter 2, use hierarchies of distributed agents. In this chapter, we presented a solution to the important problem of constructing hierarchies in distributed fashion. We presented a top-down approach to this problem, and described a specific top-down algorithm (TDH) with a number of desirable properties.
Reference: [29] <author> Larry L. Peterson. </author> <title> The profile naming service. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(4) </volume> <pages> 341-364, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: On the other hand, we desire some structure to the servers so that expert location can provide higher availability, and be easily adapted to changing conditions without manual reconfiguration. Many existing attribute-based naming schemes (e.g., <ref> [29] </ref>) provide no structure to servers and hence rely on manual configuration. The solution we adopt is as follows. Expert location servers (ELS's) are organized into a hierarchy according to their location.
Reference: [30] <author> Mic Bowman, Saumya K. Debray, and Larry L. Peterson. </author> <title> Reasoning about naming systems. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 15(5) </volume> <pages> 795-825, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: This procedure ensures that closer experts will be found before more distant experts. This approach both helps to ensure availability of experts matched, and minimizes latency and bandwidth used. A second issue is the ordering of the list of experts. Bowman, et al. <ref> [30] </ref> describe a framework for reasoning about naming systems and describe how ordering rules can be expressed in terms of a "preference hierarchy". The constraints listed above lead us to the following preference hierarchy for ordering the list of experts. 1. Prefer closer experts first to achieve availability.
Reference: [31] <author> Reid G. Smith. </author> <title> The Contract Net protocol: High-level communication and control in a distributed problem solver. </title> <journal> ACM Transactions on Computers, </journal> <pages> pages 1104-1113, </pages> <month> December </month> <year> 1980. </year> <month> 133 </month>
Reference-contexts: We also do not want the world to be flooded with requests for experts, as is done in the Contract Net protocol <ref> [31] </ref>. <p> Minimum-Load Mapping is, however, the approach taken in many existing systems. For example, Cisco's LocalDirector [64], which redirects WWW requests to one of a set of local servers, periodically queries the servers for status information, thus potentially using out-of-date information. In the Contract Net protocol <ref> [31] </ref>, servers are queried for load information when a request is ready, introducing additional latency. 4.3.3 Fastest-Response Mapping In the fastest-response scheme, a client pings the servers, and picks the one that responds first. Thus, f t (i) = (response time for S i ).
Reference: [32] <author> D. Eastlake and C. Kaufman. </author> <title> Domain name system security extensions, </title> <month> January </month> <year> 1997. RFC-2065. </year>
Reference-contexts: To ensure integrity of capability advertisements and authentication of their origin, we adopt the current model recommended by the IETF for use with nameservice-like applications, which is known as DNSsec <ref> [32] </ref>. Briefly, a public/private key pair is associated with each domain, and all capabilities are signed with a domain key. To reliably learn the public key of a domain, the key itself must be signed. <p> A resolver must therefore be configured with at least the public key of one domain that it can use to authenticate signatures. It can then securely read the public keys of other domains if the intervening domains in the ELS tree are secure and their signed keys accessible. See <ref> [32, 33] </ref> for a more detailed discussion of the security model and associated concerns. An alternative method to ensure integrity of capability advertisements and authentication of their origin entails the use of one or more "trusted third parties", or signature authorities.
Reference: [33] <author> D. </author> <title> Eastlake. Secure domain name system dynamic update, </title> <month> April </month> <year> 1997. </year> <month> RFC-2137. </month>
Reference-contexts: A resolver must therefore be configured with at least the public key of one domain that it can use to authenticate signatures. It can then securely read the public keys of other domains if the intervening domains in the ELS tree are secure and their signed keys accessible. See <ref> [32, 33] </ref> for a more detailed discussion of the security model and associated concerns. An alternative method to ensure integrity of capability advertisements and authentication of their origin entails the use of one or more "trusted third parties", or signature authorities.
Reference: [34] <author> Mark T. Sutter and Paul E. Zeldin. </author> <title> Designing expert systems for real-time diagnosis of self-correcting networks. </title> <journal> IEEE Network Magazine, </journal> <pages> pages 43-51, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: Cost is expressed in loss of productivity per unit time, such as in dollars per hour. For example, the cost of disrupted service on a physical link can be computed using bandwidth, as proposed by Sutter and Zeldin <ref> [34] </ref>. For a given link i, they let c (h; i) = v (i)b (h; i), where v is the value of bandwidth on the link and b (h; i) is the amount of bandwidth disrupted.
Reference: [35] <institution> Lawrence Berkeley National Labs. ns software. </institution> <note> http://www-nrg.ee.lbl.gov/ns/. </note>
Reference-contexts: When a test completes, tests waiting in the queue can then be started. 2.6 Simulation In this section, we evaluate the performance of the GDT protocol. To do this, we implemented GDT clients and experts using "ns", the LBNL Network Simulator <ref> [35] </ref>. Our goal will be to test its performance and reliability under conditions particularly adverse to GDT. It is first useful to understand the effects on GDT of hard and soft failures.
Reference: [36] <author> Sally Floyd and Van Jacobson. </author> <title> Random early detection gateways for congestion avoidance. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(4) </volume> <pages> 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: We assume that clients start with a warm cache of expert capabilities, and vary the loss rate of GDT messages by artificially injecting loss. Our simulations assumed that all messages had an equal probability of being lost when the aggregate bandwidth demand is constant (e.g., as with RED <ref> [36] </ref>). When routers with 24 (a) Probability of Repair (b) Resource Usage (c) Cause-effect graph statistics (d) Reaction Time a drop-tail queueing policy exist in the network, this assumption is invalid; the policy is biased against bursty streams.
Reference: [37] <editor> MICE. </editor> <booktitle> mwatch tools. </booktitle> <address> ftp://ftp.cl.cam.ac.uk/pub/mwatch.README. </address>
Reference-contexts: loss, all times are dominated by the times required by domain-expertise modules to perform tests and repairs, whereas for higher loss, GDT's retransmission timeout intervals dominate the resolution time. 2.6.1 Using a Real Topology Our final set simulations used a subset of the actual MBone topology obtained from the MWatch <ref> [37] </ref> server, which constructs a database of the actual MBone topology by periodically querying all MBone routers. (Since some routers do not respond to such queries, the MWatch database is actually a subset of the full MBone topology.) We first obtained this database from MWatch, removed all one-way links, and found <p> One way to find a path when no route exists is provided by the MWatch <ref> [37] </ref> tool suite. The MWatch database can be queried for a legal path using mr. If a path is found, then diagnosis may proceed using that path.
Reference: [38] <author> Ajit T. Thyagarajan, Stephen L. Casner, and Stephen E. Deering. </author> <title> Making the MBone real. </title> <booktitle> In Proc. </booktitle> <volume> INET '95, </volume> <pages> pages 465-473, </pages> <year> 1995. </year>
Reference-contexts: A group, identified by a single IP multicast address, may have a single data source, as for a video bandwidth, but in the general case there can be many sources per group. An overview of issues, problems, and some diagnostic tools can be found in <ref> [38] </ref>. The MBone currently experiences frequent instances of several problems. Among these, the following problems are common: Congestion A multicast session experiences packet loss due to congestion at an intermediate link or router. Congestion may have many causes, including competing traffic and overloaded routers.
Reference: [39] <author> D. Thaler. </author> <title> Distance-vector multicast routing protocol MIB. </title> <type> Internet Draft, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: Collections of such parameters ("variables" in SNMP parlance) related to the same protocol or function are frequently grouped into Management Information Bases (MIBs). MIBs serve to define the names and legal values of parameters of interest, and several MIBs have been defined for MBone-specific variables <ref> [39, 40, 41, 42] </ref>. However, SNMP alone is inadequate to solve the problems we list above, for at least two reasons. First, the SNMP model requires users or network management software at remote sites to interact directly with SNMP-conformant devices. <p> Such objects are outside the scope of our discussion. The higherList contains a set of routefwdr (see below) instances, and the upstreamList contains an rtprocr instance for each neighbor. 4 The number of routes received in DVMRP is currently available through the DVMRP MIB <ref> [39] </ref>, but the number of routes sent to a neighbor is not. This illustrates how our methodology can be used to improve MIBs. 39 Objects of Interest: No Route to Source The routesource object describes the protocol from which the route is obtained, such as static routing or interface routes.
Reference: [40] <author> K. McCloghrie, D. Farinacci, and D. Thaler. </author> <title> IP multicast routing MIB. </title> <type> Internet Draft, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: Collections of such parameters ("variables" in SNMP parlance) related to the same protocol or function are frequently grouped into Management Information Bases (MIBs). MIBs serve to define the names and legal values of parameters of interest, and several MIBs have been defined for MBone-specific variables <ref> [39, 40, 41, 42] </ref>. However, SNMP alone is inadequate to solve the problems we list above, for at least two reasons. First, the SNMP model requires users or network management software at remote sites to interact directly with SNMP-conformant devices.
Reference: [41] <author> K. McCloghrie, D. Farinacci, and D. Thaler. </author> <title> Internet group management protocol MIB. </title> <type> Internet Draft, </type> <month> July </month> <year> 1997. </year>
Reference-contexts: Collections of such parameters ("variables" in SNMP parlance) related to the same protocol or function are frequently grouped into Management Information Bases (MIBs). MIBs serve to define the names and legal values of parameters of interest, and several MIBs have been defined for MBone-specific variables <ref> [39, 40, 41, 42] </ref>. However, SNMP alone is inadequate to solve the problems we list above, for at least two reasons. First, the SNMP model requires users or network management software at remote sites to interact directly with SNMP-conformant devices.
Reference: [42] <author> K. McCloghrie, D. Farinacci, and D. Thaler. </author> <title> Protocol independent multicast MIB. </title> <type> Internet Draft, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: Collections of such parameters ("variables" in SNMP parlance) related to the same protocol or function are frequently grouped into Management Information Bases (MIBs). MIBs serve to define the names and legal values of parameters of interest, and several MIBs have been defined for MBone-specific variables <ref> [39, 40, 41, 42] </ref>. However, SNMP alone is inadequate to solve the problems we list above, for at least two reasons. First, the SNMP model requires users or network management software at remote sites to interact directly with SNMP-conformant devices.
Reference: [43] <author> Van Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proceedings of the ACM SIG-COMM, </booktitle> <pages> pages 273-288, </pages> <year> 1988. </year>
Reference-contexts: The health H is defined to be in the range [0,1]. Our test for lowH is based on a simple threshold criterion, such as "H &lt; h", where h is a parameter configured for the class of 1 Mean deviation, as shown in <ref> [43] </ref>, is much faster to compute, and gives more conservative results than standard deviation. It is often related to standard deviation by a simple constant. 2 This technique is widely used for estimation in Internet protocols, e.g., TCP round trip time estima tion [43] 30 Parameter Description lowH H &lt; h <p> of 1 Mean deviation, as shown in <ref> [43] </ref>, is much faster to compute, and gives more conservative results than standard deviation. It is often related to standard deviation by a simple constant. 2 This technique is widely used for estimation in Internet protocols, e.g., TCP round trip time estima tion [43] 30 Parameter Description lowH H &lt; h highU U &gt; r u C or U &gt; k 1 ^ U + k 2 ^s lowC ^ U &gt; r c C highD D &gt; r d C or D &gt; k 3 ^ U + k 4 ^s Table 3.2:
Reference: [44] <author> S. McCanne, V. Jacobson, and M. Vetterli. </author> <title> Receiver-driver layered multicast. </title> <booktitle> In Proceedings of the ACM SIGCOMM, </booktitle> <pages> pages 117-130, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: For classes with unbounded capacity, we use a technique similar to those used to compute timeout values by <ref> [44, 45] </ref>. The threshold we use is based on mean deviation, declaring highU when U i &gt; k 1 ^ U i1 + k 2 ^s i1 . Thus, high utilization is confirmed 3 when the utilization is more than two deviations above the mean, according to our estimator.
Reference: [45] <author> P. Sharma, D. Estrin, S. Floyd, and V. Jacobson. </author> <title> Scalable timers for soft state protocols. </title> <booktitle> In Proceedings of the IEEE INFOCOM, </booktitle> <year> 1997. </year>
Reference-contexts: For classes with unbounded capacity, we use a technique similar to those used to compute timeout values by <ref> [44, 45] </ref>. The threshold we use is based on mean deviation, declaring highU when U i &gt; k 1 ^ U i1 + k 2 ^s i1 . Thus, high utilization is confirmed 3 when the utilization is more than two deviations above the mean, according to our estimator.
Reference: [46] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson. RTP: </author> <title> A transport protocol for real-time applications, </title> <month> January </month> <year> 1996. </year> <month> RFC-1889. </month>
Reference-contexts: Applications generally deal with transport-layer connections and connectionless sessions. We group both together under the term "streams". A stream is therefore a set of packets with identical source address, destination address, transport protocol (such as TCP or RTP <ref> [46] </ref>), and transport-layer stream identifiers (such as port numbers). Routers, on the other hand, typically have no knowledge of individual streams, but instead use broad "classes" of traffic. For example, a router might process all unicast traffic in one manner, and all multicast traffic in another manner. <p> The choice of whether an agent with a parent should broadcast announcements may be made based on any of several criteria. For example, it could be based on static configuration, or active prefix length (limiting broadcasters to those at the highest levels). Alternatively, an RTP-like scheme <ref> [46] </ref> could be used, in which all agents broadcast, the broadcast periods being scaled back with the number of agents, so that the overall frequency (and hence the bandwidth usage) remains the same.
Reference: [47] <author> M. Baugher, J. Du, and S. Naudus. </author> <title> Real-time transport protocol management information base. </title> <type> Internet Draft, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: The remaining items needed to characterize the classes may be obtained as follows: * For Real-time Transport Protocol (RTP) streams, the utilizations of streamsource and streamsink objects are available directly in RTP messages (e.g., using rtpmon or the RTP MIB <ref> [47] </ref>). For non-RTP streams, other practical methods must be found. * For determining capacity, an expert may have a preconfigured value for what is reasonable for each object, based on prior estimates.
Reference: [48] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. RSVP: </author> <title> A new resource reservation protocol. </title> <journal> IEEE Network Magazine, </journal> <volume> 7 </volume> <pages> 8-18, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: For non-RTP streams, other practical methods must be found. * For determining capacity, an expert may have a preconfigured value for what is reasonable for each object, based on prior estimates. If resource reservations are used (e.g., RSVP <ref> [48] </ref>), the capacity could instead be obtained from the reservation. * For the lowerList, the performance of a streamsource or streamsink depends on host resources such as CPU and memory.
Reference: [49] <author> W. Fenner. mtrace man page, </author> <month> May </month> <year> 1995. </year>
Reference-contexts: This quantity should be the same at all routers on the link, and is a robust measure. When SNMP statistics are not available, a first-cut estimate may be obtained from the middle column of mtrace output (Figure 3.3). Because of bugs in various router implementations <ref> [49] </ref>, these numbers are not always correct. Flawed packet statistics can cause GDT to erroneously report a cause of congestion. The lowerList of a traffichop contains its component trafficlink and trafficfwdr instances, which we now describe in turn.
Reference: [50] <author> D. Thaler and B. Aboba. </author> <title> Multicast debugging handbook. </title> <type> Internet Draft, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: This analysis led to the addition of several new procedures in the Multicast Debugging Handbook <ref> [50] </ref>. In our scenario, a multicast application experiences packet loss due to congestion at an intermediate link or router.
Reference: [51] <author> D. Thaler. </author> <title> TroubleD distribution. </title> <note> To be released. 134 </note>
Reference-contexts: One alternative is to use a separate "route flap monitor" which keeps longer-term state on all routes and passively listens to routing messages. Two implementations of this approach exist today, one from the author <ref> [51] </ref>, and the other from UCLA/PARC [6]. As with rtprocr instances, demand is generated at a routefwdr for route updates of local origin (due to timer expirations, link failures, and route changes imported from unicast routes). We assume that routefwdr capacity is unbounded, and that the higherList is empty.
Reference: [52] <author> Brian Renaud. </author> <title> Routing arbiter project overview, </title> <month> October </month> <year> 1995. </year> <note> ftp://ftp.ra.net/ routing.arbiter/radb/presentations/RIPE-22 renaud routing.ps. </note>
Reference-contexts: One way to find a path when no route exists is provided by the MWatch [37] tool suite. The MWatch database can be queried for a legal path using mr. If a path is found, then diagnosis may proceed using that path. The Routing Arbiter database <ref> [52] </ref> could also be queried to determine the list of Autonomous Systems (AS's), or routing domains, in the path, and diagnosis could proceed using that instead.
Reference: [53] <author> Tony Ballardie, Paul Francis, and Jon Crowcroft. </author> <title> An architecture for scalable inter-domain multicast routing. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 85-95, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: That is, the CPU load due to any single object can be handled by a single server. The above characteristics cover a wide variety of domains. Some examples include: Real-time producer-consumer systems For example, in multicast routing protocols such as CBT <ref> [53] </ref> and PIM [54], receivers' routers request data for a specific session by sending a join request towards the root of a distribution tree for that session, and sources send data to a session via the root of its tree. <p> as a hash function, we felt that investigating other weight functions was not necessary. 4.7 Case Studies To show how HRW applies to a variety of domains, we now examine two applications in more detail. 4.7.1 Shared-Tree Multicast Routing In shared-tree multicast routing protocols such as PIM [54] and CBT <ref> [53] </ref>, receivers' routers request packets for a specific session by sending a "join session" request toward the root of a distribution tree for that session. Sources send data to a session by sending it toward the root of its tree.
Reference: [54] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, Van Jacobson, Ching-Gung Liu, and Liming Wei. </author> <title> An architecture for wide-area multicast routing. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 126-135, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: That is, the CPU load due to any single object can be handled by a single server. The above characteristics cover a wide variety of domains. Some examples include: Real-time producer-consumer systems For example, in multicast routing protocols such as CBT [53] and PIM <ref> [54] </ref>, receivers' routers request data for a specific session by sending a join request towards the root of a distribution tree for that session, and sources send data to a session via the root of its tree. <p> of W rand as a hash function, we felt that investigating other weight functions was not necessary. 4.7 Case Studies To show how HRW applies to a variety of domains, we now examine two applications in more detail. 4.7.1 Shared-Tree Multicast Routing In shared-tree multicast routing protocols such as PIM <ref> [54] </ref> and CBT [53], receivers' routers request packets for a specific session by sending a "join session" request toward the root of a distribution tree for that session. Sources send data to a session by sending it toward the root of its tree. <p> The conditions of Corollary 1 are thus satisfied, and the situation is ideal for the use of HRW. We focus on Sparse-Mode PIM in particular, since its evolution illustrates many of the concepts and goals discussed in Section 4.3. The original description of PIMv1 <ref> [54] </ref> did not specify any mapping algorithm for assigning join requests to servers. Since replication was not prevented, providers sent session data to all servers in a cluster. This resulted in undesirable complexity and resource consumption.
Reference: [55] <author> James Gwertzman and Margo Seltzer. </author> <title> World-wide web cache consistency. </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference, </booktitle> <pages> pages 141-151, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: The root thus takes on the role of a server, with receivers and sources becoming clients. Sources and receivers must rendezvous at the root for effective data transfer. Client-side WWW proxy caches In the World Wide Web (WWW), pages can be cached at proxy servers <ref> [55, 56] </ref>. All outbound client requests can then go through a 46 local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote provider. Otherwise, the page is retrieved and cached for future use. <p> One solution to this problem is to cache web pages at HTTP proxies <ref> [55, 56, 75] </ref>. Client requests then go through a local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote server. Otherwise, the page is retrieved and cached for future use.
Reference: [56] <author> C. Mic Bowman, Peter B. Danzig, Darren R. Hardy, Udi Manber, and Michael F. Schwartz. </author> <title> The Harvest information discovery and access system. </title> <booktitle> Proceedings of the Second International World Wide Web Conference, </booktitle> <pages> pages 763-771, </pages> <note> Oc-tober 1994. Available from ftp://ftp.cs.colorado.edu/pub/cs/techreports/ schwartz/Harvest.Conf.ps.Z. </note>
Reference-contexts: The root thus takes on the role of a server, with receivers and sources becoming clients. Sources and receivers must rendezvous at the root for effective data transfer. Client-side WWW proxy caches In the World Wide Web (WWW), pages can be cached at proxy servers <ref> [55, 56] </ref>. All outbound client requests can then go through a 46 local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote provider. Otherwise, the page is retrieved and cached for future use. <p> Thus, f t (i) = (response time for S i ). When all servers are equally distant, this mapping is similar to the least-loaded scheme (with the same advantages and disadvantages), since the server with the least load typically responds first. The Harvest <ref> [56] </ref> web cache implementation and the Andrew File System (AFS) [65] both use this method. 4.3.4 Round-Robin Mapping A simpler scheme is round-robin, where successive requests are sent to consecutive servers. <p> One solution to this problem is to cache web pages at HTTP proxies <ref> [55, 56, 75] </ref>. Client requests then go through a local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote server. Otherwise, the page is retrieved and cached for future use.
Reference: [57] <author> Mark S. Squillante and Edward D. Lazowska. </author> <title> Using processor-cache affinity information in shared-memory multiprocessor scheduling. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(2) </volume> <pages> 131-143, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: We will refer to this concept as a "name-based" mapping. It is possible to view the case where all clients send requests for the same object to the same server as defining affinities between objects and servers in a cluster (Figure 4.1). A number of studies (e.g., <ref> [57, 58, 59] </ref>) have examined the related notion of "cache-affinity" scheduling in the context of shared-memory multiprocessors, in which tasks are sent to processors which already have data cached. This achieves higher cache hit rates at the possible expense of load balancing.
Reference: [58] <author> Raj Vaswani and John Zahorjan. </author> <title> The implications of cache affinity on processor scheduling for multiprogrammed, shared memory multiprocessors. </title> <booktitle> In Proc. 13th Symp. Operating Syst. Principles, </booktitle> <pages> pages 26-40, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: We will refer to this concept as a "name-based" mapping. It is possible to view the case where all clients send requests for the same object to the same server as defining affinities between objects and servers in a cluster (Figure 4.1). A number of studies (e.g., <ref> [57, 58, 59] </ref>) have examined the related notion of "cache-affinity" scheduling in the context of shared-memory multiprocessors, in which tasks are sent to processors which already have data cached. This achieves higher cache hit rates at the possible expense of load balancing.
Reference: [59] <author> James D. Salehi, James F. Kurose, and Don Towsley. </author> <title> The effectiveness of affinity-based scheduling in multiprocessor network protocol processing (extended version). </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(4) </volume> <pages> 516-530, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: We will refer to this concept as a "name-based" mapping. It is possible to view the case where all clients send requests for the same object to the same server as defining affinities between objects and servers in a cluster (Figure 4.1). A number of studies (e.g., <ref> [57, 58, 59] </ref>) have examined the related notion of "cache-affinity" scheduling in the context of shared-memory multiprocessors, in which tasks are sent to processors which already have data cached. This achieves higher cache hit rates at the possible expense of load balancing.
Reference: [60] <author> Vern Paxson and Sally Floyd. </author> <title> Wide-area traffic: The failure of poisson modeling. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 257-268, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: To ensure that this goal is realized, one must first define what load balancing means, and consider how loads are generated. It is well-known (e.g., <ref> [60] </ref>) that patterns of requests can be very bursty when the request stream includes machine-initiated requests, so that the arrival process of requests is not, in general, Poisson.
Reference: [61] <author> Raj Jain and Shawn A. Routhier. </author> <title> Packet trains measurements and a new model for computer network traffic. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 4(6) </volume> <pages> 986-995, </pages> <month> September </month> <year> 1986. </year>
Reference-contexts: It is well-known (e.g., [60]) that patterns of requests can be very bursty when the request stream includes machine-initiated requests, so that the arrival process of requests is not, in general, Poisson. The Packet Train <ref> [61] </ref> model is a widely-used alternative to the traditional Poisson arrival model, and appears to model such request patterns well. We therefore adopt this model, and assume that requests arrive in batches, or "trains". <p> We now demonstrate formally that round-robin achieves load balancing when the request rate is high. As discussed earlier, we will use the packet-train model <ref> [61] </ref> for our analysis. Let N be the number of requests in the batch or train. Let r be a random variable describing the service time for one request.
Reference: [62] <author> Marek Fisz. </author> <title> Probability Theory and Mathematical Statistics. </title> <publisher> John Wiley & Sons, </publisher> <year> 1963. </year>
Reference-contexts: The distribution of l i is approximately normal with mean k and variance k 2 as N ! 1. Proof: The result follows immediately from the Central-Limit Theorem. See any standard book dealing with sampling theory, <ref> [62] </ref>, for example. fl Hence, for sufficiently large packet train sizes, loads on all servers are normally distributed. We will now show that loads in a server cluster become balanced if the coefficient of variation (ratio of mean to standard deviation) of the load distribution on servers tends to zero. <p> Proof: Let l be the sample mean, and let y i = l i l. By the usual definition of sample variance, we have (m 1)s 2 y 1 2 y m 2 The sum on the right side follows the 2 distribution <ref> [62] </ref> with m 1 degrees of freedom 1 . Thus, we may write s 2 = 2 [ 2 m1 =(m 1)]. Therefore, (s=) 2 = (=) 2 [ 2 m1 =(m 1)]. 1 There are only m 1 independent terms in the sum on the right side. <p> We know from sampling theory <ref> [62] </ref> that E [ p i ] = p = 1=K, so E [q i ] = k p = (K=m)(1=K) = (1=m) (4.11) We also know from sampling theory [62] that V ar [ p i ] = (K k)( 2 p =k)=(K 1). <p> We know from sampling theory <ref> [62] </ref> that E [ p i ] = p = 1=K, so E [q i ] = k p = (K=m)(1=K) = (1=m) (4.11) We also know from sampling theory [62] that V ar [ p i ] = (K k)( 2 p =k)=(K 1).
Reference: [63] <author> Peter B. Danzig, Richard S. Hall, and Michael F. Schwartz. </author> <title> A case for caching file objects inside internetworks. </title> <type> Technical Report CU-CS-642-93, </type> <institution> University of Colorado, Boulder, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: The last of these options may be viewed as defining affinities between objects and servers. Replication can also reduce hit rates in caching schemes by decreasing the effective cache size of the servers in the cluster. For example, a study conducted in 1992 <ref> [63] </ref> reported that a 4 GB cache was necessary for intermediaries to achieve a cache hit rate of 45% for FTP transfers.
Reference: [64] <author> Cisco Systems. </author> <title> Scaling the world wide web. </title> <note> Available from http://cio.cisco.com/ warp/public/751/advtg/swww wp.htm. </note>
Reference-contexts: In the worst case, all clients issue requests to the same, previously idle, server, resulting in a very high load. Minimum-Load Mapping is, however, the approach taken in many existing systems. For example, Cisco's LocalDirector <ref> [64] </ref>, which redirects WWW requests to one of a set of local servers, periodically queries the servers for status information, thus potentially using out-of-date information.
Reference: [65] <author> Mahadev Satyanarayanan. </author> <title> Scalable, secure, and highly available distributed file access. </title> <journal> IEEE Computer Magazine, </journal> <volume> 23(5) </volume> <pages> 9-21, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: When all servers are equally distant, this mapping is similar to the least-loaded scheme (with the same advantages and disadvantages), since the server with the least load typically responds first. The Harvest [56] web cache implementation and the Andrew File System (AFS) <ref> [65] </ref> both use this method. 4.3.4 Round-Robin Mapping A simpler scheme is round-robin, where successive requests are sent to consecutive servers. For example, when a name in the Domain Name Service (DNS) resolves to multiple 52 IP addresses, DNS returns this list of IP addresses, rotated circularly after each request. <p> true Round-Robin ordering when clients generate duplicate requests, due to DNS caching at clients. 53 4.3.5 Random Mapping Another way to balance the expected number of requests assigned to each server, is to send requests to a server chosen at random (e.g., f (i) = random ()), as suggested in <ref> [65] </ref>. This is referred to in queueing theory as a random split. As before, let N be the number of requests in the batch or train. Let r be a random variable describing the service time for one request.
Reference: [66] <author> T. Brisco. </author> <title> DNS support for load balancing, </title> <month> April </month> <year> 1995. </year> <note> RFC-1794. 135 </note>
Reference-contexts: If clients use the first address on this list, requests will be sent to the various IP addresses in round-robin fashion 2 , thereby balancing the number of requests sent to each <ref> [66] </ref>. The NCSA scalable web server configuration [67] is one example of such use of DNS. When all servers are up, a true Round-Robin scheme maps the n th request sent to the cluster to the n th server (modulo m). Thus, F (r n ) = n (mod m).
Reference: [67] <author> Eric Katz, Michelle Butler, and Robert McGrath. </author> <title> A scalable HTTP server: The NCSA prototype. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 27 </volume> <pages> 155-164, </pages> <year> 1994. </year> <note> http://www.ncsa.uiuc.edu/InformationServers/Conferences/CERNwww94/ www94.ncsa.ps. </note>
Reference-contexts: If clients use the first address on this list, requests will be sent to the various IP addresses in round-robin fashion 2 , thereby balancing the number of requests sent to each [66]. The NCSA scalable web server configuration <ref> [67] </ref> is one example of such use of DNS. When all servers are up, a true Round-Robin scheme maps the n th request sent to the cluster to the n th server (modulo m). Thus, F (r n ) = n (mod m).
Reference: [68] <author> Estrin, Farinacci, Helmy, Thaler, Deering, Handley, Jacobson, Liu, Sharma, and Wei. </author> <title> Protocol independent multicast-sparse mode (PIM-SM): Specification, </title> <month> June </month> <year> 1997. </year> <month> RFC-2117. </month>
Reference-contexts: Therefore, the output of such a hash function must be an ordered list of servers rather than a single server name. In some domains, such as PIMv2 <ref> [68] </ref>, the list of servers is dynamically updated to exclude unreachable servers. In this case, it suffices for the hash function to map a name to a single server. <p> HRW has already been applied to multicast routing, where it has been recently incorporated by both the PIM <ref> [68] </ref> and CBT [82] protocols. HRW is also applicable to the World Wide Web. WWW clients could improve response time by using HRW to select servers in a cluster, rather than simply using the order presented by DNS. <p> Our HRW algorithm has already been applied in this manner to multicast routing, where it has been recently incorporated by both the PIM-SM <ref> [68] </ref> and CBT [82] protocols as the mechanism for routers to identify Rendezvous Points/Cores. Top-Down Hierarchy Construction Chapter 5 accomplished our last objective by pre senting TDH, a Top-Down Hierarchy construction protocol.
Reference: [69] <author> D. Estrin, A. Helmy, P. Huang, and D. Thaler. </author> <title> A dynamic bootstrap mechanism for rendezvous-based multicast routing. </title> <note> Submitted to ACM/IEEE Transactions on Networking. </note>
Reference-contexts: Again, we assume that the server list is known to clients a priori. For example, it may be statically configured, resolved at client startup time, or periodically distributed to clients. See <ref> [69] </ref> for further discussion of these issues. 58 4.5.4 Minimal Disruption When a server S i goes down, all objects which mapped to that server must be reassigned. All other objects will be unaffected, and so the optimum disruption bound is achieved. <p> Low latency is also important to 65 receivers who want to join a session in progress. One example motivating the low latency requirement is known as the "bursty-source problem" <ref> [69] </ref>, where a source periodically sends a burst of data, and then remains silent for a long time. An example is an application which broadcasts its current state once a day. <p> Pull All agents poll some location, which maintains common state. This requires knowledge of a location to poll. Such knowledge must be discovered using one of these four methods, resulting in a recursive problem known as the "Bootstrap Problem" <ref> [69] </ref>. Thus, while this scheme can be useful for decreasing the amount of information which is pushed or configured, it is not a complete solution without one of the other three options. Scoped pull Here, a request is broadcast within a given scope, and one or more agents will reply. <p> When multicast is available, root election and discovery can be accomplished through an election procedure similar to the "Bootstrap Router" election used by PIM-SMv2 <ref> [69] </ref>. The root is chosen by a simple Bully election: the agent with the shortest maximal policy prefix wins, with ties broken by highest preconfigured "priority" value, and then by lowest address. This operates as follows.
Reference: [70] <author> Donald E. Knuth. </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> volume 1. </volume> <publisher> Addison Wesley, </publisher> <address> 2nd edition, </address> <year> 1973. </year>
Reference-contexts: distribution, so that E [n i ] = m i + 1 Using linearity of expectation in Equation 4.15, we get E [p] = i=1 m X m=(m i + 1): After changing the summation index appropriately, this reduces to E [p] = m i=1 i It is well-known (see <ref> [70] </ref>, for example) that m X 1 = ln m + fl + 2m Substituting above, the theorem follows. fl It is clear that full replication is achieved rather quickly. With 10 servers in a cluster, the expected number of requests to reach full replication is about 30.
Reference: [71] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and intractability: A guide to the theory of NP-completeness, </title> <month> June </month> <year> 1988. </year>
Reference-contexts: Thus, the optimal set of objects to cache at time t in a cache of size C maximizes P k2C p k (t), subject to the constraint that P k2C s k C. This is an instance of the Knapsack problem, which is known to be NP-complete <ref> [71] </ref>. Cache replacement strategies can then be viewed as heuristics to solve this problem. Since the future is unknown, they must use local estimates of the p k (t)'s based on statistics such as recency or frequency of reference, typically deriving them from past history. <p> In networks, minimal cost trees spanning some subset of nodes are known as Steiner trees, whose construction is known to be NP-complete <ref> [71] </ref>. Hence, these techniques are not suitable for use in large dynamic hierarchies of distributed agents. * Using a region of influence for each node, usually defined by distance (e.g., [84]).
Reference: [72] <author> Ivan Niven, Herbert S. Zuckerman, and Hugh L. Montgomery. </author> <title> An Introduction to the Theory of Numbers. </title> <publisher> John Wiley & Sons, </publisher> <address> 5th edition, </address> <year> 1991. </year>
Reference-contexts: Then, since modulo-2 31 congruence is preserved under subtraction: A ((AS i + B) XOR D (k)) where A = 1103515245, B = 12345. But A and 2 31 are relatively prime, so a standard result from number theory <ref> [72] </ref> tells us that we may cancel A, leaving us with: (AS i + B) XOR D (k) (AS j + B) XOR D (k) (mod 2 31 ) 3 Since rand is no longer the same on all platforms, implementations should use Equation 4.16 directly. 4 E.g., 7 on an
Reference: [73] <author> Stephen K. Park and Keith W. Miller. </author> <title> Random number generators: Good ones are hard to find. </title> <journal> Communications of the ACM, </journal> <volume> 31(10) </volume> <pages> 1192-1201, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: The first competing weight function we consider is based on the Unix system functions random and srandom in place of rand and srand, resulting in a weight function we denote W random 5 . The second function we consider uses the Minimal Standard random number generator <ref> [73, 74] </ref>, resulting in the weight function: W minstd (k; S i ) = (16807 ((16807 S i ) XOR D (k))) (mod (2 31 1)) Our third alternative is to modify the W rand function as follows: W rand2 (k; S i ) = (1103515245 ((1103515245 D (k) +12345) XOR <p> The choice of which is most appropriate for use with HRW depends on the characteristics of the domain of use. Finally, while we could have simulated many other types of pseudo-random functions, we note that finding a good pseudo-random function is hard <ref> [73] </ref>.
Reference: [74] <author> David G. Carta. </author> <title> Two fast implementations of the "minimal standard" random number generator. </title> <journal> Communications of the ACM, </journal> <volume> 33(1) </volume> <pages> 87-88, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The first competing weight function we consider is based on the Unix system functions random and srandom in place of rand and srand, resulting in a weight function we denote W random 5 . The second function we consider uses the Minimal Standard random number generator <ref> [73, 74] </ref>, resulting in the weight function: W minstd (k; S i ) = (16807 ((16807 S i ) XOR D (k))) (mod (2 31 1)) Our third alternative is to modify the W rand function as follows: W rand2 (k; S i ) = (1103515245 ((1103515245 D (k) +12345) XOR
Reference: [75] <author> Stephen Williams, Marc Abrams, Charles R. Standridge, Ghaleb Abdulla, and Ed-ward A. Fox. </author> <title> Removal policies in network caches for world-wide web documents. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 293-305, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: One solution to this problem is to cache web pages at HTTP proxies <ref> [55, 56, 75] </ref>. Client requests then go through a local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote server. Otherwise, the page is retrieved and cached for future use.
Reference: [76] <author> Marc Abrams, Charles R. Standridge, Ghaleb Abdulla, Stephen Willians, and Ed-ward A. Fox. </author> <title> Caching proxies: Limitations and potentials. </title> <booktitle> Proc. 4th International World-Wide Web Conference, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: Client requests then go through a local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote server. Otherwise, the page is retrieved and cached for future use. Various studies (e.g., <ref> [76, 77] </ref>) have found that a cache hit rate of up to 50% can be achieved. Thus, since the number of possible objects is large, and a significant concentration of requests exists, the conditions are appropriate for HRW. <p> Table 4.2 shows the characterization of the resulting data set used for simulation. Note that about 50% of the URLs requested were unique, giving an upper bound on the cache hit rate of around 50%, which agrees with the bound observed by <ref> [76] </ref> and [77].
Reference: [77] <author> Steven Glassman. </author> <title> A caching relay for the world wide web. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 27(2) </volume> <pages> 165-173, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: Client requests then go through a local proxy server. If the proxy server has the page cached, the page is returned to the client without accessing the remote server. Otherwise, the page is retrieved and cached for future use. Various studies (e.g., <ref> [76, 77] </ref>) have found that a cache hit rate of up to 50% can be achieved. Thus, since the number of possible objects is large, and a significant concentration of requests exists, the conditions are appropriate for HRW. <p> Table 4.2 shows the characterization of the resulting data set used for simulation. Note that about 50% of the URLs requested were unique, giving an upper bound on the cache hit rate of around 50%, which agrees with the bound observed by [76] and <ref> [77] </ref>. <p> That is, when there is enough space at all servers combined to hold an object, but not at any single server, HRW must evict an object from a cache. zero if the object was cached). By comparison, Glassman <ref> [77] </ref> found the average response time t MISS seen by a client for an uncached page to be between 6 and 9 seconds, compared with t HIT = 1:5 seconds for a cached page, using a Digital Web relay.
Reference: [78] <institution> Netscape Communications Corp. </institution> <note> Netscape Navigator software. Available from http://www.netscape.com. </note>
Reference-contexts: Various studies (e.g., [76, 77]) have found that a cache hit rate of up to 50% can be achieved. Thus, since the number of possible objects is large, and a significant concentration of requests exists, the conditions are appropriate for HRW. Popular WWW browsers such as Netscape Navigator <ref> [78] </ref>, NCSA Mosaic, and lynx, now allow specifying one or more proxy servers through which requests for remote objects are sent. A single proxy, however, does not provide any fault tolerance. For a robust deployment, multiple proxies are required.
Reference: [79] <author> Carlos R. Cunha, Azer Bestavros, and Mark E. Crovella. </author> <title> Characteristics of WWW client-based traces. </title> <type> Technical Report BU-CS-95-010, </type> <institution> Boston University, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: This will allow the terminology to apply to the more general problem. 66 In the following simulations, the objects and object sizes are taken from the publicly--available WWW client-based traces described in <ref> [79] </ref>, where all URLs accessed from 37 workstations at Boston University were logged over a period of five months.
Reference: [80] <author> Mark R. Nelson. </author> <title> File verification using CRC. </title> <journal> Dr. Dobb's Journal, </journal> <pages> pages 64-67, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Table 4.2: WWW Trace Summary Since a unique object name k can, in general, have arbitrary length, and we wish to obtain a digest with which we can do 32-bit arithmetic, our simulation defined D (k) to be the 31-bit digest of the object name obtained by computing its CRC-32 <ref> [80] </ref> checksum and discarding the most significant bit. Simulation Our simulator implemented HRW, a round-robin scheme, and a random allocation scheme. In a fourth scheme, similar to least-loaded allocation, a request was sent to the server with the least number of objects currently being serviced (with ties broken randomly).
Reference: [81] <author> Donald Neal. </author> <title> The Harvest object cache in New Zealand. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 28 </volume> <pages> 1415-1430, </pages> <month> May </month> <year> 1996. </year> <note> Available at http://www.waikato.ac.nz/ harvest/www5/. </note>
Reference-contexts: The line shown is based on the ratio of HRW's latency to that seen by Random. We expect the improvement to be much more pronounced for sites with low bandwidth connectivity to the outside world, such as New Zealand <ref> [81] </ref>, since t MISS will rise while t HIT remains constant.
Reference: [82] <author> A. Ballardie. </author> <title> Core based trees (CBT version 2) multicast routing, </title> <month> September </month> <year> 1997. </year> <note> RFC-2189. 136 </note>
Reference-contexts: HRW has already been applied to multicast routing, where it has been recently incorporated by both the PIM [68] and CBT <ref> [82] </ref> protocols. HRW is also applicable to the World Wide Web. WWW clients could improve response time by using HRW to select servers in a cluster, rather than simply using the order presented by DNS. <p> Our HRW algorithm has already been applied in this manner to multicast routing, where it has been recently incorporated by both the PIM-SM [68] and CBT <ref> [82] </ref> protocols as the mechanism for routers to identify Rendezvous Points/Cores. Top-Down Hierarchy Construction Chapter 5 accomplished our last objective by pre senting TDH, a Top-Down Hierarchy construction protocol. Hierarchies provide scalability in large networks, and are integral to many widely-used protocols and applications, such as DNS and X.500.
Reference: [83] <author> C. Zahn. </author> <title> Graph-theoretical methods for detecting and describing gestalt clusters. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 20 </volume> <pages> 68-86, </pages> <year> 1971. </year>
Reference-contexts: Hierarchy construction is closely related to the problem of identifying clusters in data, since siblings in a hierarchy are related, and will be close to each other under an appropriate metric. Though algorithms currently exist for clustering nodes according to topological placement (e.g., <ref> [83, 84, 85, 86] </ref>), they are often inadequate for inter-domain hierarchy construction in the context of the Internet. While clustering according to topological placement is often desirable, hierarchy construction in the global Internet is complicated by the existence of administrative policy constraints. <p> from individual points by merging clusters, or divisive, working top-down from the entire space by successively dividing clusters. 73 Urquhart [86] gives a good introduction to these algorithms, which generally require one or more of the following: * Constructing a minimal spanning tree which is then partitioned in various ways <ref> [83] </ref>. In networks, minimal cost trees spanning some subset of nodes are known as Steiner trees, whose construction is known to be NP-complete [71].
Reference: [84] <author> Warren Koontz, Patrenahalli Narendra, and Keinosuke Fukunaga. </author> <title> A graph-theoretic approach to nonparametric cluster analysis. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 25(9) </volume> <pages> 936-944, </pages> <month> September </month> <year> 1976. </year>
Reference-contexts: Hierarchy construction is closely related to the problem of identifying clusters in data, since siblings in a hierarchy are related, and will be close to each other under an appropriate metric. Though algorithms currently exist for clustering nodes according to topological placement (e.g., <ref> [83, 84, 85, 86] </ref>), they are often inadequate for inter-domain hierarchy construction in the context of the Internet. While clustering according to topological placement is often desirable, hierarchy construction in the global Internet is complicated by the existence of administrative policy constraints. <p> Hence, these techniques are not suitable for use in large dynamic hierarchies of distributed agents. * Using a region of influence for each node, usually defined by distance (e.g., <ref> [84] </ref>). In a distributed version, this method would require broadcast advertisements within this region, such as those used by the Landmark scheme as described above. This method has disadvantages, as we will see in Section 5.4. * Finding the k-nearest neighbors for each node (e.g., [85]).
Reference: [85] <author> Riichiro Mizoguchi and Masamichi Shimura. </author> <title> A nonparametric algorithm for detecting clusters using hierarchical structure. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 2(4) </volume> <pages> 292-300, </pages> <month> July </month> <year> 1980. </year>
Reference-contexts: Hierarchy construction is closely related to the problem of identifying clusters in data, since siblings in a hierarchy are related, and will be close to each other under an appropriate metric. Though algorithms currently exist for clustering nodes according to topological placement (e.g., <ref> [83, 84, 85, 86] </ref>), they are often inadequate for inter-domain hierarchy construction in the context of the Internet. While clustering according to topological placement is often desirable, hierarchy construction in the global Internet is complicated by the existence of administrative policy constraints. <p> In a distributed version, this method would require broadcast advertisements within this region, such as those used by the Landmark scheme as described above. This method has disadvantages, as we will see in Section 5.4. * Finding the k-nearest neighbors for each node (e.g., <ref> [85] </ref>). This approach does not lend itself well to a distributed algorithm for arbitrary topologies, for two reasons.
Reference: [86] <author> Roderick Urquhart. </author> <title> Graph theoretical clustering based on limited neighbourhood sets. </title> <journal> Pattern Recognition, </journal> <volume> 15(3) </volume> <pages> 173-187, </pages> <year> 1982. </year>
Reference-contexts: Hierarchy construction is closely related to the problem of identifying clusters in data, since siblings in a hierarchy are related, and will be close to each other under an appropriate metric. Though algorithms currently exist for clustering nodes according to topological placement (e.g., <ref> [83, 84, 85, 86] </ref>), they are often inadequate for inter-domain hierarchy construction in the context of the Internet. While clustering according to topological placement is often desirable, hierarchy construction in the global Internet is complicated by the existence of administrative policy constraints. <p> Here, the problem is to identify clusters of points (usually in a plane) based on their coordinates. Hierarchy construction algorithms using these techniques may be either agglomerative, working bottom-up from individual points by merging clusters, or divisive, working top-down from the entire space by successively dividing clusters. 73 Urquhart <ref> [86] </ref> gives a good introduction to these algorithms, which generally require one or more of the following: * Constructing a minimal spanning tree which is then partitioned in various ways [83].
Reference: [87] <author> Paul F. Tsuchiya. </author> <title> The landmark hierarchy: A new hierarchy for routing in very large networks. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 35-42, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Such manual configuration usually represents a significant administrative burden in constructing hierarchies. It also allows the implementation of only a limited form of policy, and provides no guarantee that a hierarchy is constructed (if possible) unless all potential parents are configured. 5.2.2 Landmark Hierarchies Landmark routing <ref> [87, 88, 89, 90] </ref> constructs a hierarchy out of all nodes (or "landmarks") in a network, which is then used for routing packets. <p> Scoped broadcast ("Push") For root discovery, the scope is simply the entire network, since all agents need to discover the same root. For neighbor discovery, the scope can be set based on hierarchy level, as in the Landmark <ref> [87] </ref> scheme. Thus, the higher up in the hierarchy an agent is, the farther away its neighbors may be. For example, if level 0 indicates a leaf and the scope is specified in network hops, the scope might be given by 2 (level+1) .
Reference: [88] <author> Paul F. Tsuchiya. </author> <title> The landmark hierarchy: Description and analysis. </title> <type> Technical Report MTR-87W00152, </type> <institution> MITRE Corporation, </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: Such manual configuration usually represents a significant administrative burden in constructing hierarchies. It also allows the implementation of only a limited form of policy, and provides no guarantee that a hierarchy is constructed (if possible) unless all potential parents are configured. 5.2.2 Landmark Hierarchies Landmark routing <ref> [87, 88, 89, 90] </ref> constructs a hierarchy out of all nodes (or "landmarks") in a network, which is then used for routing packets.
Reference: [89] <author> Paul F. Tsuchiya. </author> <title> Landmark routing: Architecture, algorithms, and issues. </title> <type> Technical Report MTR-87W00174, </type> <institution> MITRE Corporation, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: Such manual configuration usually represents a significant administrative burden in constructing hierarchies. It also allows the implementation of only a limited form of policy, and provides no guarantee that a hierarchy is constructed (if possible) unless all potential parents are configured. 5.2.2 Landmark Hierarchies Landmark routing <ref> [87, 88, 89, 90] </ref> constructs a hierarchy out of all nodes (or "landmarks") in a network, which is then used for routing packets. <p> Based on such advertisements, peers elect parents such that the maximum number of children per parent is bounded. As we will show in Section 5.4, the use of broadcast (or multicast) advertisements can result in significant overhead. In <ref> [89] </ref>, Tsuchiya describes a policy scheme for Landmark routing which requires configuration of each router on the boundary of an administrative area. This scheme allows broadcast scopes to be constrained by administrative boundaries at various levels, so that a single subtree is built within a given boundary.
Reference: [90] <author> Paul F. Tsuchiya and Ron Zahavi. </author> <title> Landmark routing algorithms: Analysis and simulation results. </title> <type> Technical Report MTR-89W00277, </type> <institution> MITRE Corporation, </institution> <month> December </month> <year> 1989. </year>
Reference-contexts: Such manual configuration usually represents a significant administrative burden in constructing hierarchies. It also allows the implementation of only a limited form of policy, and provides no guarantee that a hierarchy is constructed (if possible) unless all potential parents are configured. 5.2.2 Landmark Hierarchies Landmark routing <ref> [87, 88, 89, 90] </ref> constructs a hierarchy out of all nodes (or "landmarks") in a network, which is then used for routing packets.
Reference: [91] <author> L. Kleinrock and F. Kamoun. </author> <title> Hierarchical routing for large networks: Performance evaluation and optimization. </title> <journal> Computer Networks, </journal> <volume> 1 </volume> <pages> 155-174, </pages> <year> 1977. </year>
Reference-contexts: It is, however, applicable when the same policy constraints apply to multiple protocols, so that similar hierarchies are desirable. 5.2.3 Area Hierarchies Area Hierarchies are well known in the domain of Internet routing (e.g., <ref> [91, 92, 93] </ref>), and predate Landmark routing. A node's address in an area hierarchy also corresponds to its position in the hierarchy.
Reference: [92] <author> Nachum Shacham and Jil Westcott. </author> <title> Future directions in packet radio architectures and protocols. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 75(1) </volume> <pages> 83-99, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: It is, however, applicable when the same policy constraints apply to multiple protocols, so that similar hierarchies are desirable. 5.2.3 Area Hierarchies Area Hierarchies are well known in the domain of Internet routing (e.g., <ref> [91, 92, 93] </ref>), and predate Landmark routing. A node's address in an area hierarchy also corresponds to its position in the hierarchy. <p> In an area hierarchy, however, a node is only aware of its children, its siblings, and the siblings of its direct ancestors; it is not necessarily aware of other nodes which are topologically close. Hagouel [93] and Shacham <ref> [92] </ref> both discuss general approaches to managing area hierarchies, although neither give detailed protocols or significant analysis. Hagouel's and Shacham's schemes both require that a pre-designated "primary" node oversee the formation of each cluster at any level.
Reference: [93] <author> Jacob Hagouel. </author> <title> Issues in routing for large and dynamic networks, </title> <month> May </month> <year> 1983. </year> <type> Ph.D. Thesis, </type> <institution> Columbia University. </institution>
Reference-contexts: It is, however, applicable when the same policy constraints apply to multiple protocols, so that similar hierarchies are desirable. 5.2.3 Area Hierarchies Area Hierarchies are well known in the domain of Internet routing (e.g., <ref> [91, 92, 93] </ref>), and predate Landmark routing. A node's address in an area hierarchy also corresponds to its position in the hierarchy. <p> In an area hierarchy, however, a node is only aware of its children, its siblings, and the siblings of its direct ancestors; it is not necessarily aware of other nodes which are topologically close. Hagouel <ref> [93] </ref> and Shacham [92] both discuss general approaches to managing area hierarchies, although neither give detailed protocols or significant analysis. Hagouel's and Shacham's schemes both require that a pre-designated "primary" node oversee the formation of each cluster at any level.
Reference: [94] <author> Hector Garcia-Molina. </author> <title> Elections in a distributed computing system. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-31(1):48-59, </volume> <month> January </month> <year> 1982. </year>
Reference-contexts: This is referred to as the "Bully" method <ref> [94] </ref>. * The agent which is the most "centralized" with respect to the others wins, so overhead is minimized. A comparison of such election algorithms can be found in [95]. 5.4 Analysis of Distribution Mechanisms We now turn to an analysis of the costs of various classes of algorithms.
Reference: [95] <author> David G. Thaler and Chinya V. Ravishankar. </author> <title> Distributed center-location algorithms. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 15(3) </volume> <pages> 291-303, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: This is referred to as the "Bully" method [94]. * The agent which is the most "centralized" with respect to the others wins, so overhead is minimized. A comparison of such election algorithms can be found in <ref> [95] </ref>. 5.4 Analysis of Distribution Mechanisms We now turn to an analysis of the costs of various classes of algorithms.
Reference: [96] <author> Bernard M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(9) </volume> <pages> 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: We use the random graph model presented by Waxman <ref> [96] </ref>, where nodes are randomly distributed over a Cartesian coordinate system.
Reference: [97] <author> R. Atkinson. </author> <title> Security architecture for the internet protocol, </title> <month> August </month> <year> 1995. </year> <note> RFC-1825. 137 </note>
Reference-contexts: If authentication is desired, we assume that GDT messages may use IPsec <ref> [97] </ref> to address security concerns. 126 APPENDIX B GDT Element Naming This appendix describes the format of element naming as used in the implementation described in Chapter 3.
References-found: 98

