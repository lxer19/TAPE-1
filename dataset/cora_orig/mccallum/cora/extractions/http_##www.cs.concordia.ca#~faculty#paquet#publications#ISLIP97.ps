URL: http://www.cs.concordia.ca/~faculty/paquet/publications/ISLIP97.ps
Refering-URL: http://www.cs.concordia.ca/~faculty/paquet/publications/publications.html
Root-URL: http://www.cs.concordia.ca
Email: jpaquet@ift.ulaval.ca  plaice@acm.org  
Title: Towards an intensional scientioc programming methodology  
Author: Joey Paquet John Plaice 
Date: May 12, 1997  
Abstract: Scientioc programming is a key element for the advancement of all pure and applied sciences. Unfortunately, the languages currently used for scientioc programming are not well suited to the expression of the multidimensional and intensional aspects of dioeerential equations. First, we propose a new iintensional no-tationj to close the gap between dioeerential notation and intensional programming. Second, we propose an extension of Lucid for the natural expression of dioeerential or tensor equations, and we apply this extension to two examples, plasma simulation and relativistic gravity simulation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Ashcroft, A. Faustini, R. Jagannathan, and W. Wadge. </author> <title> Multidimensional, Declarative Programming. </title> <publisher> Oxford University Press, </publisher> <address> London, </address> <year> 1995. </year>
Reference-contexts: The situation gets worse when programming tensor equations: a single tensor equation can imply dozens of ordinary dioeerential equations, and the multidimensional and intensional aspects must be made explicit, thereby exploding the number of equations to be programmed. The Lucid language <ref> [1, 10] </ref> manipulates multidimensional dataAEows in an intensional manner. Unlike the C and fortran languages that are currently used for scientioc programming, Lucid is (1) intensional and multidimensional, (2) declarative, (3) implicitly parallel and (4) based on a demand-driven computation approach.
Reference: [2] <author> James Kent Blackburn. GRPP, </author> <title> a scientioc programming language preprocessor designed using lex and yacc. </title> <booktitle> Computers in Physics, </booktitle> <address> 8(1):98112, </address> <year> 1994. </year> <month> 9 </month>
Reference-contexts: For example, one of Einstein's equations for general relativity has the form G ab = 8T ab thereby linking Einstein's rank-2 tensor of space-time curvature G ab with the rank-2 energy-stress tensor T ab <ref> [2] </ref>. The indices a and b in the equation pertain to each coordinate dimension, for example (t; x; y; z) for Cartesian coordinates. <p> also shown that our intensional tensor syntax simplioes the creation of Lucid programs starting from dioeerential equations. 4 Example: Tensor equations The tensor example that is presented below corresponds to the displacement of a particle in the neighbour-hood of a black hole, as predicted by some interpretations of general relativity <ref> [2] </ref>. This program is suOEciently complex to explain fundamental problems, but can be summarized in a few lines. The presentation below is just an outline. To deone the problem, we suppose the Boyer-Linquist coordinate system (t; r; ; OE).
Reference: [3] <author> Oscar Buneman. tristan: </author> <title> the 3-D E-M particle code. </title> <type> Unpublished manuscript. </type>
Reference-contexts: Developed by the late Oscar Buneman <ref> [3] </ref> at Stanford University, this program has been used to simulate plasmas at many dioeerent scales, as in the interaction between the solar wind and the terrestrial magneto-sphere [4], solar disturbances [9] and galaxy formation [6]. 3 However, the tristan code is much more complex than the equations upon which it
Reference: [4] <author> Oscar Buneman, Torsten Neubert, and Ken-Ichi Nishikawa. </author> <title> Solar wind-magnetosphere interaction as simulated by a 3-D EM particle code. </title> <journal> IEEE Transactions on Plasma Science, </journal> <volume> 20(6):810816, </volume> <year> 1992. </year>
Reference-contexts: Developed by the late Oscar Buneman [3] at Stanford University, this program has been used to simulate plasmas at many dioeerent scales, as in the interaction between the solar wind and the terrestrial magneto-sphere <ref> [4] </ref>, solar disturbances [9] and galaxy formation [6]. 3 However, the tristan code is much more complex than the equations upon which it is based. These equations manipulate AEows in ove dimensions, all simulated using unidimensional arrays.
Reference: [5] <author> P.A.M. </author> <title> Dirac. General Theory of Relativity. Princeton Landmarks in Physics. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1996. </year>
Reference-contexts: Superscripts normally correspond to contravariant components, while subscripts normally correspond to covariant components. The same notation, with simultaneous use of subscripts and superscripts, can also be used for non-tensors, as is the case for Christooeel symbols <ref> [5] </ref>. When the same letter simultaneously appears as an subscript and as a superscript, Einstein's summation convention states that an implicit summation must take place across the entire set of coordinate dimensions. For example, the Ricci rank-2 tensor is deoned from the Riemann-Christooeel rank-4 tensor [5] R ab = R c <p> the case for Christooeel symbols <ref> [5] </ref>. When the same letter simultaneously appears as an subscript and as a superscript, Einstein's summation convention states that an implicit summation must take place across the entire set of coordinate dimensions. For example, the Ricci rank-2 tensor is deoned from the Riemann-Christooeel rank-4 tensor [5] R ab = R c which implies a contraction over the contravariant superscript and the second covariant subscript, i.e.
Reference: [6] <author> Anthony L. Peratt. </author> <title> Physics of the Plasma Universe. </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Developed by the late Oscar Buneman [3] at Stanford University, this program has been used to simulate plasmas at many dioeerent scales, as in the interaction between the solar wind and the terrestrial magneto-sphere [4], solar disturbances [9] and galaxy formation <ref> [6] </ref>. 3 However, the tristan code is much more complex than the equations upon which it is based. These equations manipulate AEows in ove dimensions, all simulated using unidimensional arrays. <p> The resulting velocity is computed using the Lorentz equation d (mv) = q (E + v fi B) interpolated in time and to which a relativistic fl factor for mass increase has been added <ref> [6] </ref> (v t+1 v t ) ffit = flm 0 E + v t+1 + v t j j where q is the charge, m 0 is the particle's rest mass and E and B are the electric and magnetic oelds at the particle's initial position. <p> This equation must be transformed into a computable form, which gives the following system of equa tions <ref> [6] </ref>: x t+1 = x t + u t+1 u 1 = u 0 + 2 0 (u 0 + u 0 fi B 0 ) fi B 0 + E 0 B 0 = fl (u 0 ) 2m 0 E 0 = 2m 0 fl (v) = p fl
Reference: [7] <author> John Plaice. </author> <title> Particle in-cell simulation with Lucid. </title> <editor> In Ed Ashcroft, editor, </editor> <booktitle> Proceedings of the Seventh ISLIP, pages 5356, SRI International, </booktitle> <address> Menlo Park, CA, </address> <year> 1994. </year>
Reference-contexts: Furthermore, many similar operations on permutations of dimensions must take place. The translation into Lucid will allow these equations to be naturally translated in a succinct manner. Much of the tristan code was already translated in <ref> [7, 8] </ref>. <p> prev.d (F); dnext.d (F) = next.d (F) - F; diff.i.j (f,F) = f.j (F_i); curl (f,F) = diff.a.c (f,F) - diff.c.a (f,F); In other words: curl (dnext,E') = diff.c,b (dnext,E') - diff.b,c (dnext,E'); curl (dprev,B') = diff.c,b (dprev,B') - diff.b,c (dprev,B'); This formal derivation gives the same result as in <ref> [7, 8] </ref>, but it has the advantage of making the result evident, in addition to not relying on the fortran program.
Reference: [8] <author> John Plaice. </author> <title> Particle in-cell simulation with Lucid. In Intensional Programming I, </title> <booktitle> pages 149161. World Scientioc, </booktitle> <address> Singapore, </address> <year> 1995. </year>
Reference-contexts: Furthermore, many similar operations on permutations of dimensions must take place. The translation into Lucid will allow these equations to be naturally translated in a succinct manner. Much of the tristan code was already translated in <ref> [7, 8] </ref>. <p> prev.d (F); dnext.d (F) = next.d (F) - F; diff.i.j (f,F) = f.j (F_i); curl (f,F) = diff.a.c (f,F) - diff.c.a (f,F); In other words: curl (dnext,E') = diff.c,b (dnext,E') - diff.b,c (dnext,E'); curl (dprev,B') = diff.c,b (dprev,B') - diff.b,c (dprev,B'); This formal derivation gives the same result as in <ref> [7, 8] </ref>, but it has the advantage of making the result evident, in addition to not relying on the fortran program.
Reference: [9] <author> J.I. Sakai, T. Fushiki, and K.I. Nishikawa. </author> <title> A model of solar AEares triggered by interactions between force-free current loops and plasmoids. </title> <journal> Solar Physics, </journal> <volume> 158(301), </volume> <year> 1995. </year>
Reference-contexts: Developed by the late Oscar Buneman [3] at Stanford University, this program has been used to simulate plasmas at many dioeerent scales, as in the interaction between the solar wind and the terrestrial magneto-sphere [4], solar disturbances <ref> [9] </ref> and galaxy formation [6]. 3 However, the tristan code is much more complex than the equations upon which it is based. These equations manipulate AEows in ove dimensions, all simulated using unidimensional arrays.
Reference: [10] <author> William W. Wadge and Ed A. Ashcroft. </author> <title> Lucid, </title> <booktitle> the DataAEow Programming Language. </booktitle> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year> <month> 10 </month>
Reference-contexts: The situation gets worse when programming tensor equations: a single tensor equation can imply dozens of ordinary dioeerential equations, and the multidimensional and intensional aspects must be made explicit, thereby exploding the number of equations to be programmed. The Lucid language <ref> [1, 10] </ref> manipulates multidimensional dataAEows in an intensional manner. Unlike the C and fortran languages that are currently used for scientioc programming, Lucid is (1) intensional and multidimensional, (2) declarative, (3) implicitly parallel and (4) based on a demand-driven computation approach.
References-found: 10

