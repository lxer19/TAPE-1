URL: http://www.cs.columbia.edu/~german/papers/isinm95.ps.Z
Refering-URL: http://www.cs.columbia.edu/~german/mbd.html
Root-URL: http://www.cs.columbia.edu
Title: Decentralizing Control and Intelligence in Network Management  
Author: Kraig Meyer, Mike Erlinger, Joe Betser, Carl Sunshine German Goldszmidt, Yechiam Yemini 
Keyword: Network Architecture and Design, Management Model, Distributed Processing, Client-Server.  
Address: Barbara, CA,  P.O. Box 92957, Los Angeles, CA, 90009, USA.  New York, NY, 10027, USA.  
Affiliation: Network Management, Santa  The Aerospace Corporation  Computer Science Department, Columbia University 450 Computer Science Building, Columbia University,  
Note: 1 In Proceedings of the 4th International Symposium on Integrated  
Email: Email: kmeyer@aero.org  Email: german@cs.columbia.edu  
Phone: Phone: +1 310-336-8114.  Phone: +1 212-939-7123.  
Date: May 1995.  
Abstract: Device failures, performance inefficiencies, and security compromises are some of the problems associated with the operations of networked systems. Effective management requires monitoring, interpreting, and controlling the behavior of the distributed resources. Current management systems pursue a platform-centered paradigm, where agents monitor the system and collect data, which can be accessed by applications via management protocols. We contrast this centralized paradigm with a decentralized paradigm, in which some or all intelligence and control is distributed among the network entities. Network management examples show that the centralized paradigm has some fundamental limitations. We explain that centralized and decentralized paradigms can and should coexist, and define characteristics that can be used to determine the degree of decentralization that is appropriate for a given network management application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> D. Banning and et. al. </editor> <booktitle> Auditing of Distributed Systems. In Proceedings of the 14th National Computer Security Conference, </booktitle> <pages> pages 59-68, </pages> <address> Washington, D.C., </address> <month> October </month> <year> 1991. </year>
Reference-contexts: As a result, there is a high motivation to keep processing distributed as much as possible, and to keep the audit record format as standardized as possible. Historically, the management of distributed intrusion detection has not been addressed in any standardized way. Banning <ref> [1] </ref> suggests that a list of an audit agent's managed objects should be stored in a MIB, and an audit agent should be managed using a standardized protocol such as CMIP [5]. However, to date, no intrusion detection systems have been widely fielded that perform this function.
Reference: [2] <author> J. Case, K. McCloghrie, M. Rose, and S. Waldbusser. </author> <title> Manager-to-Manager Management Information Base. </title> <type> RFC 1451, </type> <month> April </month> <year> 1993. </year>
Reference-contexts: In this way, MBD should be seen as augmenting, rather than competing with, SNMP efforts. In fact, the SNMP community has already recognized the value of distributable management, with a manager-to-manager MIB <ref> [2] </ref> and some preliminary work 4 on NMS-to-agent communications via scripts. As previously mentioned, most of the early network management applications were well-suited to centralized control, which explains the success that the centralized SNMP paradigm has had to date. Some newer and evolving applications require a decentralized approach.
Reference: [3] <author> Jeffrey D. Case, Mark S. Fedor, Martin L. Schoffstall, and James R. Davin. </author> <title> A Simple Network Management Protocol (SNMP). </title> <type> RFC 1157, </type> <month> May </month> <year> 1990. </year> <institution> DDN Network Information Center, SRI International. </institution>
Reference: [4] <author> German Goldszmidt. </author> <title> Distributed System Management via Elastic Servers. </title> <booktitle> In IEEE First International Workshop on Systems Management, </booktitle> <pages> pages 31-35, </pages> <address> Los Angeles, Cal-ifornia, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: But the MBD model supports a more distributed management environment by increasing the management autonomy of agents. MBD defines a type of distributed process, Elastic Process <ref> [4] </ref>, that supports execution time extension and contraction of functionality. During its execution, an elastic process can absorb new functions that are delegated by other processes. Those functions can then be invoked by remote clients as either remote procedures or independent threads in the scope of the elastic process.
Reference: [5] <author> International Standards Organization ISO. </author> <title> 9596 Information Technology, Open Systems Interconnection, Common Management Information Protocol Specification, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Historically, the management of distributed intrusion detection has not been addressed in any standardized way. Banning [1] suggests that a list of an audit agent's managed objects should be stored in a MIB, and an audit agent should be managed using a standardized protocol such as CMIP <ref> [5] </ref>. However, to date, no intrusion detection systems have been widely fielded that perform this function. Intrusion detection is an excellent candidate application for decentralized management.
Reference: [6] <author> K. McCloghrie and M. Rose. </author> <title> Management Information Base for Network Management of TCP/IP-based internets: </title> <journal> MIB-II. </journal> <volume> RFC 1213, </volume> <month> March </month> <year> 1991. </year>
Reference: [7] <author> B.N. Meandzija, K.W. Kappel, and P.J. Brusil. </author> <title> Integrated Network Management and The International Symposia. </title> <editor> In Iyengar Krishnan and Wolfgang Zimmer, editors, </editor> <booktitle> The Second International Symposium on Integrated Network Management, </booktitle> <address> Washington, DC, April 1991. </address> <publisher> North Holland. </publisher>
Reference-contexts: introduction to <ref> [7] </ref>, it is still the case that "most network management systems are passive and offer little more than interfaces to raw or partly aggregated and/or correlated data in MIBs." The rapid growth in the size of networks has also brought into question the scalability of any centralized model.
Reference: [8] <author> M. Rose and K. McCloghrie. </author> <title> Structure and Identification of Management Information for TCP/IP-based Internets. </title> <type> RFC 1155, </type> <month> May </month> <year> 1990. </year>
Reference: [9] <author> M. Rose and K. McCloghrie. </author> <title> Concise MIB Definitions. </title> <type> RFC 1212, </type> <month> March </month> <year> 1991. </year>
Reference: [10] <author> Marshall T. Rose. </author> <title> The Simple Book, An introduction to Management of TCP/IP-based Internets. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year> <month> 13 </month>
Reference: [11] <author> Olin Sibert. </author> <title> Auditing in a Distributed System: SunOS MLS Audit Trails. </title> <booktitle> In The Pro--ceedings of the 11th National Computer Security Conference?, </booktitle> <address> Baltimore, MD, </address> <month> October </month> <year> 1988. </year> <institution> National Security Agency. </institution>
Reference-contexts: For example, if all audit events are enabled on a Sun Microsystems workstation running Multilevel Secure SunOS, it is possible for a single machine to generate as much as 20 megabytes of raw data per hour, although 1-3 megabytes is more typical <ref> [11] </ref>. Once the audit records are recorded, they must all be read and analyzed, increasing I/O 8 overhead further and requiring a large amount of CPU processing. Audit data generally scales linearly with the number of users.
Reference: [12] <author> S. Waldbusser. </author> <title> Remote Network Monitoring Management Information Base. </title> <type> RFC 1271, </type> <month> November </month> <year> 1991. </year>
Reference-contexts: Some newer and evolving applications require a decentralized approach. A good example of an application that requires decentralization is the use of RMON (remote monitoring) probes <ref> [12] </ref>. RMON probes collect large amounts of information from their local Ethernet segment, and provide an NMS with detailed information about traffic activity on the segment. These probes perform extensive sorting and processing locally, and provide summary and table information via SNMP through a specially formatted MIB. <p> Further, there may be a need for a semantically rich conversation between distributed monitors, as they may need to pass relatively complicated structures that are hard to predefine in a MIB. 4.2 Subnet Remote Monitoring (RMON) As previously mentioned, RMON <ref> [12] </ref> provides a framework in which remote monitoring probes collect information from local Ethernet segments, and provide this data to NMSs. RMON has in fact taken a hybrid centralized/decentralized approach to management.
Reference: [13] <author> Yechiam Yemini, German Goldszmidt, and Shaula Yemini. </author> <title> Network Management by Delegation. </title> <booktitle> In The Second International Symposium on Integrated Network Management, </booktitle> <pages> pages 95-107, </pages> <address> Washington, DC, </address> <month> April </month> <year> 1991. </year> <month> 14 </month>
Reference-contexts: This paradigm needs to be augmented to allow for decentralized control and intelligence, distributed processing, and local interpretation of data semantics. 2.2 Decentralized Management by Delegation Management by Delegation (MBD) <ref> [13] </ref> utilizes a decentralized paradigm that takes advantage of the increased computational power in network agents and decreases pressure on centralized NMSs and network bandwidth. MBD supports both temporal distribution (distribution over time) and spatial distribution (distribution over different network devices).
References-found: 13

