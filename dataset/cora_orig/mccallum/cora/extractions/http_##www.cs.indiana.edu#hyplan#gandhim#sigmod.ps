URL: http://www.cs.indiana.edu/hyplan/gandhim/sigmod.ps
Refering-URL: http://www.cs.indiana.edu/hyplan/gandhim.html
Root-URL: http://www.cs.indiana.edu
Email: gandhim@indiana.edu  edrbtsn@cs.indiana.edu  vgucht@cs.indiana.edu  
Title: Modeling and Querying Primitives for Digital Media  
Author: Munish Gandhi Edward L. Robertson Dirk Van Gucht 
Date: October 29, 1994  
Abstract: We present a data model and equivalent rule-based and visual query formalisms for managing digital media data specifically, audio and video data. The query formalisms in the paper are also equivalent to an algebra. The simplicity and equivalence of these formalisms provides evidence that the concepts in this model may define a kernel of capabilities required for handling digital media. 
Abstract-found: 1
Intro-found: 1
Reference: [All83] <author> J. F. Allen. </author> <title> Maintaining Knowledge About Temporal Intervals. </title> <journal> Communications of the ACM, </journal> <volume> 26(11) </volume> <pages> 832-843, </pages> <month> November </month> <year> 1983. </year>
Reference: [BBKV87] <author> F. Bancilhon, T. Briggs, S. Khoshafian, and P Valduriez. </author> <title> FAD, a Powerful and Simple Database Language. </title> <booktitle> In Proceedings of the 13th International Conference on Very Large Data Bases, </booktitle> <pages> pages 97-105, </pages> <address> Brighton, England, </address> <year> 1987. </year>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models <ref> [BBKV87, BCD89, GZC89, VD91] </ref>, the list type constructor is one of many collection-based data type constructors. The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language.
Reference: [BCD89] <author> F. Bancilhon, S. Cluet, and C. Delobel. </author> <title> A Query Language for the O2 Object-oriented Database System. </title> <editor> In R. Hull, R. Morrison, and D. Stemple, editor, </editor> <booktitle> Proceedings of the 2nd International Workshop on Database Programming Languages, </booktitle> <address> Gleneden Beach, Oregon, June 1989. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models <ref> [BBKV87, BCD89, GZC89, VD91] </ref>, the list type constructor is one of many collection-based data type constructors. The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language.
Reference: [BGT92] <author> C. Breiteneder, S. Gibbs, and D. Tsichritzis. </author> <title> Modelling of Audio / Video Data. </title> <editor> In D. Tsichritzis, editor, </editor> <booktitle> Object Frameworks, chapter 16, </booktitle> <pages> pages 293-310. </pages> <institution> Centre Universi-taire d'Informatique, Universite de Geneve, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. At the track level, the work is at an informal level ( <ref> [BGT92, RBE94] </ref>), is targeted toward other domains ( [GNU94, RP92, SLR94, CCT94]), or looks at a different modeling problem ( [LG93, LAF + 94]). <p> This model is one of the models used in implementing a video-on-demand system [LAF + 94]. Another video-on-demand system [RBE94] uses relational technology to model digital media. In contrast, object-oriented technology is used to model digital media 19 in <ref> [GBT92, BGT92] </ref>. 6 Conclusion We have presented a simple model for sequential data found in digital media repositories. Two equivalent languages, one rule based and the other visual, were defined for querying and manipulating such databases.
Reference: [CACS94] <author> V. Christophides, S. Abiteboul, S. Cluet, and M. Scholl. </author> <title> From Structured Documents to Novel Query Facilities. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 313-324. </pages> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations.
Reference: [Cat94] <author> R. G. G. Cattell. </author> <title> The Object Database Standard: ODMG-93. </title> <publisher> Morgan-Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1994. </year>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models [BBKV87, BCD89, GZC89, VD91], the list type constructor is one of many collection-based data type constructors. The ODMG object model <ref> [Cat94] </ref> and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based.
Reference: [CCT94] <author> J. Clifford, A. Croker, and A. Tuzhilin. </author> <title> On Completeness of Historical Relational Query Languages. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19(1) </volume> <pages> 64-116, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( <ref> [GNU94, RP92, SLR94, CCT94] </ref>), or looks at a different modeling problem ( [LG93, LAF + 94]). <p> However, unlike the list based models, the elements in the sequence are not hierarchically structured. These models usually deal with specific application data such as stock-market data, biological sequence data, time dependent experimental data and audio-video data. It may seem that temporal data models <ref> [RP92, CCT94] </ref> are sufficient for modeling digital media. However, these models are not suitable for essentially the same reasons that these models are not desirable for modeling list based data models [Ric92]. 18 Since our model is sequence based, we will compare it with some other proposals in this category.
Reference: [Col94] <author> L. Colby. </author> <title> Concepts for modeling and querying list-structured data. </title> <booktitle> Information Processing and Management, </booktitle> <volume> 30(5) </volume> <pages> 197-208, </pages> <year> 1994. </year>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations.
Reference: [DSP91] <author> G Davenport, T.G.A. Smith, and N. Pincever. </author> <title> Cinematic Primitives for Multimedia. </title> <journal> IEEE Computer Graphics & Applications, </journal> <pages> pages 67-74, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: For example, annotations could consist of frame numbers for a movie, the length of shots in a movie, or the title of news stories. Annotation tracks add valuable information about the media data and provide a symbolic basis for accessing and querying media data <ref> [DSP91] </ref>. For this reason, we believe that they constitute a necessary element of any audio-video model. Given the above, we now introduce the central notion of a track. A track seeks to characterize either a media stream or the symbolic information that annotates a media stream.
Reference: [EN89] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of database systems. </title> <publisher> Benjamin/Cummings Publishing Company, Inc., </publisher> <address> RedWood City, California, </address> <year> 1989. </year> <month> 20 </month>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology <ref> [EN89] </ref> or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks.
Reference: [GBT92] <author> S. Gibbs, C. Breiteneder, and D. Tsichritzis. </author> <title> Audio / Video Databases: An Object--Oriented Approach. </title> <editor> In D. Tsichritzis, editor, </editor> <booktitle> Object Frameworks, chapter 15, </booktitle> <pages> pages 275-292. </pages> <institution> Centre Universitaire d'Informatique, Universite de Geneve, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: This model is one of the models used in implementing a video-on-demand system [LAF + 94]. Another video-on-demand system [RBE94] uses relational technology to model digital media. In contrast, object-oriented technology is used to model digital media 19 in <ref> [GBT92, BGT92] </ref>. 6 Conclusion We have presented a simple model for sequential data found in digital media repositories. Two equivalent languages, one rule based and the other visual, were defined for querying and manipulating such databases.
Reference: [GNU94] <author> G. Grahne, M. Nykaenen, and E. Ukkonen. </author> <title> Reasoning about Strings in Databases. </title> <booktitle> In Proceedings of the Thirteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. </booktitle> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( <ref> [GNU94, RP92, SLR94, CCT94] </ref>), or looks at a different modeling problem ( [LG93, LAF + 94]). <p> These models may be differentiated based on whether the sequence allows undefined positions. Sequences in Ginsburg and Wang [GW92] and Grahne, Nykanen and Ukkonen <ref> [GNU94] </ref> are intended for biological sequence data and, hence, do not allow undefined positions. The latter model subsumes the former and manipulates sequences through an alignment logic. The resulting query language turns out to be very expressive.
Reference: [GPVG89] <author> M. Gyssens, J. Paradaens, and D. Van Gucht. </author> <title> A grammar-based approach towards unifying hierarchichal data models. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 263-272, </pages> <address> Portland, OR, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations.
Reference: [GR94] <author> M. Gandhi and E. L. Robertson. </author> <title> A Data Model for Audio-Video Data. </title> <booktitle> In to appear in Sixth International Conference on Management of Data. </booktitle> <publisher> Tata McGraw-Hill, </publisher> <month> December </month> <year> 1994. </year>
Reference-contexts: The rule language and visual language are equivalent to one another and are, in fact, equivalent to a Track Algebraic Language <ref> [GR94] </ref>. The appendix summarizes the operators in the algebraic language. We are using the formalisms presented in this paper as the foundation for developing a Media Library Kiosk [ICG94]. The kiosk is a multimedia catalog of films in the Media Library at Indiana University.
Reference: [GT87] <author> G. Gonnet and F. Tompa. </author> <title> Mind Your Grammar: A New Approach to Modelling Text. </title> <booktitle> In Proceedings of the 13th International Conference on Very Large Data Bases, </booktitle> <pages> pages 339-346, </pages> <address> Brighton, England, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations.
Reference: [GW92] <author> S. Ginsburg and X. Wang. </author> <title> Pattern Matching by Rs-operations: Towards a Unified Approach to Querying Sequenced Data. </title> <booktitle> In ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 376-386, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: These models may be differentiated based on whether the sequence allows undefined positions. Sequences in Ginsburg and Wang <ref> [GW92] </ref> and Grahne, Nykanen and Ukkonen [GNU94] are intended for biological sequence data and, hence, do not allow undefined positions. The latter model subsumes the former and manipulates sequences through an alignment logic. The resulting query language turns out to be very expressive.
Reference: [GZC89] <author> R. H. Guting, R. Zicari, and D. M. Choy. </author> <title> An algebra for structured office documents. </title> <journal> ACM Trans. on Inf. Sys., </journal> <volume> 7(2):123, </volume> <year> 1989. </year>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models <ref> [BBKV87, BCD89, GZC89, VD91] </ref>, the list type constructor is one of many collection-based data type constructors. The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language.
Reference: [HBvR94] <author> L. Hardman, D.C.A. Bulterman, and G. van Rossum. </author> <title> The Amsterdam Hypermedia Model: Adding Time and Context to the Dexter Model. </title> <journal> Communications of the ACM, </journal> <volume> 37(2) </volume> <pages> 50-62, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms <ref> [HBvR94, NKN91] </ref> may be used to organize a set of tracks. At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( [GNU94, RP92, SLR94, CCT94]), or looks at a different modeling problem ( [LG93, LAF + 94]).
Reference: [HIL94] <author> E.M. Haber, Y.E. Ioannidis, and M. Livny. </author> <title> Foundations of Visual Metaphors for Schema Display. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 3 </volume> <pages> 1-38, </pages> <year> 1994. </year>
Reference-contexts: This correspondence will enable a better understanding of the visual metaphor <ref> [HIL94] </ref>. It will also establish the equivalence between the languages and suggest how one may be translated to the other. Both languages consider a program to be a sequence of clusters. At the cluster level, the cluster tracks are the same in both rule and visual languages.
Reference: [ICG94] <institution> Indiana University INforum Collaborative Group. </institution> <note> Networked Information and the Scholar. Satellite videoconference, </note> <month> October </month> <year> 1994. </year>
Reference-contexts: The rule language and visual language are equivalent to one another and are, in fact, equivalent to a Track Algebraic Language [GR94]. The appendix summarizes the operators in the algebraic language. We are using the formalisms presented in this paper as the foundation for developing a Media Library Kiosk <ref> [ICG94] </ref>. The kiosk is a multimedia catalog of films in the Media Library at Indiana University. The architecture of the system illustrates the context in which the formalisms are being used (figure 2).
Reference: [Kim94] <author> W. Kim. </author> <title> UniSQL/X Unified Relational and Object-Oriented Database System. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> page 481. </pages> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models [BBKV87, BCD89, GZC89, VD91], the list type constructor is one of many collection-based data type constructors. The ODMG object model [Cat94] and the various object-relational database models <ref> [Sto93, Kim94] </ref> incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based.
Reference: [LAF + 94] <author> T.D.C. Little, G. Ahanger, R.J. Folz, J.F. Gibbon, F.W. Reewe, D.H. Schelleng, and D. Venkatesh. </author> <title> A Digital On-Demand Video Service Supporting Content-Based Queries. </title> <booktitle> In Proceedings of the 1st ACM International Conference on Multimedia, </booktitle> <address> Anaheim, CA, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( [GNU94, RP92, SLR94, CCT94]), or looks at a different modeling problem ( <ref> [LG93, LAF + 94] </ref>). <p> Little and Ghafoor [LG93] present a conceptual model for time dependencies in multimedia with the goal of providing temporal access control operations such as reverse and fast-forward. This model is one of the models used in implementing a video-on-demand system <ref> [LAF + 94] </ref>. Another video-on-demand system [RBE94] uses relational technology to model digital media. In contrast, object-oriented technology is used to model digital media 19 in [GBT92, BGT92]. 6 Conclusion We have presented a simple model for sequential data found in digital media repositories.
Reference: [LG91] <author> D. Le Gall. </author> <title> MPEG: A Video Compression Standard for Multimedia Applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks.
Reference: [LG93] <author> T. D. C. Little and A. Ghafoor. </author> <title> Interval-Based Conceptual Models for Time-Dependent Multimedia Data. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(4) </volume> <pages> 551-563, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( [GNU94, RP92, SLR94, CCT94]), or looks at a different modeling problem ( <ref> [LG93, LAF + 94] </ref>). <p> Furthermore, the more primitive model enables the media track layer in figure 1 to be used by a media library which could be relational, object-oriented, or hypermedia based. We now turn our attention to efforts which have specifically looked at modeling digital media. Little and Ghafoor <ref> [LG93] </ref> present a conceptual model for time dependencies in multimedia with the goal of providing temporal access control operations such as reverse and fast-forward. This model is one of the models used in implementing a video-on-demand system [LAF + 94].
Reference: [Mac90] <author> I.A. Macleod. </author> <title> Storage and Retrieval of Structured Documents. </title> <booktitle> Information Processing and Management, </booktitle> <volume> 26(2) </volume> <pages> 197-208, </pages> <year> 1990. </year> <month> 21 </month>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations.
Reference: [Mac91] <author> I.A. Macleod. </author> <title> A Query Language for Retrieving Information from Hierarchic Text Struc--tures. </title> <journal> The Computer Journal, </journal> <volume> 34(3) </volume> <pages> 254-264, </pages> <year> 1991. </year>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations.
Reference: [NKN91] <author> S. R. Newcomb, N. A. Kipp, and V. T. Newcomb. HyTime: </author> <title> The Hypermedia/Time-based Document Structuring Language. </title> <journal> Communications of the ACM, </journal> <volume> 34(11) </volume> <pages> 67-83, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms <ref> [HBvR94, NKN91] </ref> may be used to organize a set of tracks. At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( [GNU94, RP92, SLR94, CCT94]), or looks at a different modeling problem ( [LG93, LAF + 94]).
Reference: [Poh92] <author> K. C. Pohlmann. </author> <title> The Compact Disc Handbook. The Computer Music and Digital Audio series. A-R Editions, </title> <booktitle> 2nd edition, </booktitle> <year> 1992. </year>
Reference-contexts: While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks.
Reference: [RBE94] <author> L.A. Rowe, J.S. Boreczky, </author> <title> and C.A. Eads. Indexes for User Access to Large Video Databases. In Storage and REtrieval for Image and Video Databases II, </title> <booktitle> IS&T/SPIE Symp. </booktitle> <institution> on Elec Imaging Sci & Tech., </institution> <address> San Jose, CA, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. At the track level, the work is at an informal level ( <ref> [BGT92, RBE94] </ref>), is targeted toward other domains ( [GNU94, RP92, SLR94, CCT94]), or looks at a different modeling problem ( [LG93, LAF + 94]). <p> Little and Ghafoor [LG93] present a conceptual model for time dependencies in multimedia with the goal of providing temporal access control operations such as reverse and fast-forward. This model is one of the models used in implementing a video-on-demand system [LAF + 94]. Another video-on-demand system <ref> [RBE94] </ref> uses relational technology to model digital media. In contrast, object-oriented technology is used to model digital media 19 in [GBT92, BGT92]. 6 Conclusion We have presented a simple model for sequential data found in digital media repositories.
Reference: [Ric92] <author> J. Richardson. </author> <title> Supporting Lists in a Data Model (A Timely Approach). </title> <booktitle> In Proceedings of the 18th Conference on Very Large Databases, </booktitle> <publisher> Morgan Kaufman pubs. </publisher> <address> (Los Altos CA), Vancouver, Vancouver, August 1992. </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based. In these models <ref> [GT87, Mac90, Mac91, GPVG89, Col94, CACS94, Ric92] </ref> the list type is the main data type. The lists that can be constructed and manipulated can have a complex hierarchical structure, often specified by a context-free grammar. The query languages are designed to facilitate typical list operations. <p> It may seem that temporal data models [RP92, CCT94] are sufficient for modeling digital media. However, these models are not suitable for essentially the same reasons that these models are not desirable for modeling list based data models <ref> [Ric92] </ref>. 18 Since our model is sequence based, we will compare it with some other proposals in this category. These models may be differentiated based on whether the sequence allows undefined positions.
Reference: [RP92] <author> J. F. Roddick and J. D. Patrck. </author> <title> Temporal Semantics in Information Systems A Survey. </title> <journal> Information Systems, </journal> <volume> 17(3) </volume> <pages> 249-267, </pages> <year> 1992. </year>
Reference-contexts: At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( <ref> [GNU94, RP92, SLR94, CCT94] </ref>), or looks at a different modeling problem ( [LG93, LAF + 94]). <p> However, unlike the list based models, the elements in the sequence are not hierarchically structured. These models usually deal with specific application data such as stock-market data, biological sequence data, time dependent experimental data and audio-video data. It may seem that temporal data models <ref> [RP92, CCT94] </ref> are sufficient for modeling digital media. However, these models are not suitable for essentially the same reasons that these models are not desirable for modeling list based data models [Ric92]. 18 Since our model is sequence based, we will compare it with some other proposals in this category.
Reference: [SLR94] <author> P. Seshadri, M. Livny, and R. Ramakrishnan. </author> <title> Sequence Query Processing. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 430-441. </pages> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. At the track level, the work is at an informal level ( [BGT92, RBE94]), is targeted toward other domains ( <ref> [GNU94, RP92, SLR94, CCT94] </ref>), or looks at a different modeling problem ( [LG93, LAF + 94]). <p> The latter model subsumes the former and manipulates sequences through an alignment logic. The resulting query language turns out to be very expressive. Sequences in the Seshadri, Livny and Ramakrishnan model <ref> [SLR94] </ref> deal with stock market data and allow undefined positions. It is interesting to note that even though these models were motivated by different application areas, the primitives are very similar. We believe that this further validates the robustness of these primitives.
Reference: [Sto93] <author> M. Stonebraker. </author> <title> The Miro DBMS. </title> <booktitle> In Proceedings of the 1993 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> page 439. </pages> <publisher> ACM Press, </publisher> <year> 1993. </year>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models [BBKV87, BCD89, GZC89, VD91], the list type constructor is one of many collection-based data type constructors. The ODMG object model [Cat94] and the various object-relational database models <ref> [Sto93, Kim94] </ref> incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language. These models are intended for a broad range of applications. 2. List based.
Reference: [VD91] <author> S. L. Vandenberg and D. J. DeWitt. </author> <title> Algebraic Support for Complex Objects with Arrays, Identity, and Inheritance. </title> <editor> In J. Clifford and King. R., editors, </editor> <booktitle> Proceedings of the 1991 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 158-167, </pages> <address> Denver, CO, </address> <month> May </month> <year> 1991. </year> <note> ACM. </note>
Reference-contexts: These models may be broadly classified as follows: 1. Complex object based. In these models <ref> [BBKV87, BCD89, GZC89, VD91] </ref>, the list type constructor is one of many collection-based data type constructors. The ODMG object model [Cat94] and the various object-relational database models [Sto93, Kim94] incorporate these type constructors. Typically, list algebraic operators are supported which can be incorporated in the query language.
Reference: [Wal91] <author> G. Wallace. </author> <title> The JPEG Still Picture Compression Standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The media library may now store information about the track and maintain links between tracks. At this layer, the media track is considered atomic. As an example, consider how a movie may be stored using this architecture. The lowest layer could consist of JPEG compressed <ref> [Wal91] </ref> frames from the movie. A media track would then represent a movie using a sequence of these frames. Finally, the media library could store bibliographic information about the movie in addition to referencing the media track which constitutes the movie. <p> While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks.
Reference: [Zlo77] <author> M. M. Zloof. Query-by-example: </author> <title> A data base language. </title> <journal> IBM Sys. J., </journal> <volume> 16(4):324, </volume> <year> 1977. </year> <month> 22 </month>
Reference-contexts: Whereas rule language programs, being text-based, are linear artifacts, visual interface windows are 2 1 2 D, use simulated depth and dynamism to enhance the perceptions of sequencing and grouping. The presented formalism is similar in spirit to QBE <ref> [Zlo77] </ref>. The visual language is equivalent to the rule language and the shares the same overall structure and some primitives with it. Both consider a program as a sequence of clusters. The visual language presents the clusters as a top-down sequence of cluster blocks.
References-found: 36

