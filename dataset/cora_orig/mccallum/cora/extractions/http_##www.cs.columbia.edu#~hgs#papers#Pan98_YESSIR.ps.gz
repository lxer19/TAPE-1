URL: http://www.cs.columbia.edu/~hgs/papers/Pan98_YESSIR.ps.gz
Refering-URL: http://www.cs.columbia.edu/~hgs/resume/resume.html
Root-URL: http://www.cs.columbia.edu
Email: pan@watson.ibm.com  schulzrinne@cs.columbia.edu  
Title: YESSIR: A Simple Reservation Mechanism for the Internet all-or-nothing reservation model to support partial reservations
Author: Ping Pan Henning Schulzrinne 
Note: YESSIR extends the  
Date: August 1, 1997  
Address: 30 Saw Mill River Road Hawthorne, NY 10532  1214 Amsterdam Avenue New York, NY 10027  
Affiliation: IBM T. J. Watson Research Center  Dept. of Computer Science Columbia University  
Abstract: RSVP has been designed to support resource reservation in the Internet. However, it has two major problems: complexity and scalability. The former results in heavy message processing overhead at end systems and routers, and inefficient firewall processing at the edge of the network. The latter implies that in a backbone environment, the amount of bandwidth consumed by refresh messages and the storage space that is needed to support a large number of flows at a router are too large. We have developed a new reservation mechanism that simplifies the process of establishing reserved flows while preserving many unique features introduced in RSVP. Simplicity is measured in terms of control message processing, data packet processing, and user-level flexibility. Features such as robustness, advertising network service availability and resource sharing among multiple senders are also supported in the proposal. The proposed mechanism, YESSIR (YEt another Sender Session Internet Reservations) generates reservation requests by senders to reduce the processing overhead, builds on top of RTCP, uses soft state to maintain reservation states, supports shared reservation and associated flow merging and is backward compatible with the IETF Integrated Services models. To address the scalability issue, we investigate the possibility of using YESSIR for per-stream reser vation and RSVP for aggregate reservation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, RTP: </author> <title> a transport protocol for real-time applications, </title> <type> RFC 1889, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: There are several driving forces behind the growth of continuous media applications: The deployment of IP multicast in the Internet via the MBONE overlay network has provided an important platform for testing and deploying various audio and video applications. Also, the Real-Time Transport Protocol (RTP) <ref> [1] </ref> facilitated the development of interoperable applications, which have become available across a wide range of platforms. Finally, end systems have become capable of generating and rendering highly-compressed multimedia content. <p> First, they need to parse and pass RSVP requests; they also need to correlate between the flows (session-sender pairs) described in RSVP messages and the actual data streams (Fig. 1). The reservation mechanism introduced here avoids these problems. 4 1.4 RTP Features Useful for Resource Reservation RTP <ref> [1] </ref> has been designed to provide end-to-end delivery services for data with real-time characteristics. Although protocol-independent, applications normally run RTP on top of UDP to make the use of its multiplexing and checksum services.
Reference: [2] <author> V. Paxson, </author> <title> Measurements and Analysis of End-to-End Internet Dynamics. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, Berkeley, California, </institution> <month> May </month> <year> 1997. </year>
Reference-contexts: Finally, end systems have become capable of generating and rendering highly-compressed multimedia content. However, as the usage of the Internet has grown, packet loss, delay variations and lack of bandwidth <ref> [2] </ref> have made the current Internet unsuitable for widespread delivery of predictably high-quality continuous media services.
Reference: [3] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, RSVP: </author> <title> a new resource ReSerVation protocol, </title> <journal> IEEE Network, </journal> <volume> vol. 7, </volume> <pages> pp. 818, </pages> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Both approaches can be combined; for example, a resource reservation protocol can limit the amount of traffic with a particular TOS value. We will focus primarily on per-flow resource reservation. Currently, RSVP <ref> [3, 4] </ref> is the reservation protocol of record in the Internet. Unfortunately, its generality implies a cost in complexity, as discussed in 1 Particularly, if the users of these applications may be willing to pay for improved predictability in quality-of-service.
Reference: [4] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin, </author> <title> Resource reservation protocol (RSVP) version 1 functional specification, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Both approaches can be combined; for example, a resource reservation protocol can limit the amount of traffic with a particular TOS value. We will focus primarily on per-flow resource reservation. Currently, RSVP <ref> [3, 4] </ref> is the reservation protocol of record in the Internet. Unfortunately, its generality implies a cost in complexity, as discussed in 1 Particularly, if the users of these applications may be willing to pay for improved predictability in quality-of-service.
Reference: [5] <author> S. Herzog, </author> <title> RSVP extensions for policy control, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: YESSIR reuses large parts of the code necessary to provide guaranteed quality-of-service, in particular, the scheduler, admission control and policy protocols <ref> [5] </ref>. YESSIR and RSVP can operate side-by-side in the same network, without affecting the certainty of guarantees offered to applications. In this section, we will briefly explain some of the design decisions that introduce complexity into RSVP and describe features of RTP relevant to YESSIR.
Reference: [6] <author> M. Handley, H. Schulzrinne, and E. Schooler, SIP: </author> <title> Session initiation protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1998. </year> <title> Work in progress. </title>
Reference-contexts: This allows individual receivers within a single multicast group to request different levels of service guarantees, including none. It seems likely, however, that receivers will simply request whatever traffic bandwidth the sender has indicated, either through RSVP PATH messages or some other session initiation protocol <ref> [6] </ref>. 2 The name reflects the proper attitude of a resource reservation protocol in a well-designed network. 3 The separation of reservation and path-finding messages for receiver-oriented reservation mechanisms imposes additional processing and protocol complexity.
Reference: [7] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> Receiver-driven layered multicast, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Palo Alto, California), </address> <month> Aug. </month> <year> 1996. </year> <month> 23 </month>
Reference-contexts: However, random packet dropping will quickly degrade most audio and video encodings due to their use of prediction across packet boundaries. Other mechanisms, such as layered multicast <ref> [7] </ref>, were found to be superior to support diverse receiver populations. RSVP receivers can request different values of queueing delay as part of their resource reservation.
Reference: [8] <author> S. McCanne and V. Jacobson, </author> <title> vic: A flexible framework for packet video, </title> <booktitle> in Proc. of ACM Multime--dia '95, </booktitle> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: Although protocol-independent, applications normally run RTP on top of UDP to make the use of its multiplexing and checksum services. It has been widely implemented on multimedia systems across all operating systems and is part of the ITU H.323 recommendation for conferencing and Internet telephony. Examples include vic <ref> [8] </ref>, vat [9], rat [10] and NeVoT [11] for teleconferencing over the MBONE, NetMeeting from Microsoft and conferencing tools from Netscape.
Reference: [9] <author> V. Jacobson, </author> <title> Multimedia conferencing on the Internet, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (London, England), </address> <month> Aug. </month> <year> 1994. </year> <note> Tutorial slides. </note>
Reference-contexts: It has been widely implemented on multimedia systems across all operating systems and is part of the ITU H.323 recommendation for conferencing and Internet telephony. Examples include vic [8], vat <ref> [9] </ref>, rat [10] and NeVoT [11] for teleconferencing over the MBONE, NetMeeting from Microsoft and conferencing tools from Netscape.
Reference: [10] <author> I. Kouvelas, V. Hardman, and A. Watson, </author> <title> Lip synchronisation for use over the internet: Analysis and implementation, </title> <booktitle> in Proceedings of the IEEE Conference on Global Communications (GLOBECOM), </booktitle> <address> (London, England), </address> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: It has been widely implemented on multimedia systems across all operating systems and is part of the ITU H.323 recommendation for conferencing and Internet telephony. Examples include vic [8], vat [9], rat <ref> [10] </ref> and NeVoT [11] for teleconferencing over the MBONE, NetMeeting from Microsoft and conferencing tools from Netscape.
Reference: [11] <author> H. Schulzrinne, </author> <title> Voice communication across the Internet: A network voice terminal, </title> <type> Technical Report TR 92-50, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: It has been widely implemented on multimedia systems across all operating systems and is part of the ITU H.323 recommendation for conferencing and Internet telephony. Examples include vic [8], vat [9], rat [10] and NeVoT <ref> [11] </ref> for teleconferencing over the MBONE, NetMeeting from Microsoft and conferencing tools from Netscape. Although RTP was not intended as a resource reservation protocol, resource reservation can benefit from the following RTP features: In-band signaling: RTP defines two types of packets: RTP for data transport and RTCP for control.
Reference: [12] <author> D. Katz, </author> <title> IP router alert option, </title> <type> RFC 2113, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: No kernel modifications, beyond the support of IP router alert options (Section 1.5), are needed. 1.5 IP Router Alert option The IP router alert option <ref> [12, 13] </ref> alerts transit routers to more closely examine the contents of an IP packet. In other words, routers can intercept packets not addressed to them directly, with little performance impact. For example, RSVP PATH messages are carried in IP packets that include the router alert option.
Reference: [13] <author> D. Katz, R. Atkinson, C. Partridge, and A. Jackson, </author> <title> IPv6 router alert option, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: No kernel modifications, beyond the support of IP router alert options (Section 1.5), are needed. 1.5 IP Router Alert option The IP router alert option <ref> [12, 13] </ref> alerts transit routers to more closely examine the contents of an IP packet. In other words, routers can intercept packets not addressed to them directly, with little performance impact. For example, RSVP PATH messages are carried in IP packets that include the router alert option.
Reference: [14] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C.-G. Liu, and L. Wei, </author> <title> An architecture for wide-area multicast routing, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (London, UK), </address> <pages> pp. 126135, </pages> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: Note that RSVP could also be modified to have PATH messages initiate reservations, so that the benefits of sender orientation for some applications do not depend on the use of YESSIR. Robustness and soft-state: Similar to RSVP and PIM <ref> [14] </ref>, routers maintain reservation states as soft state, i.e., reservations disappear by themselves if not refreshed periodically. In YESSIR, this offers several advantages: It avoids orphan reservations and adapts quickly to routing changes. <p> Some of the unsolved issues are: Selecting RSVP proxy servers: In the example, the RSVP flow is originated from B1 and terminated at B3. The mechanism and criteria to select a proxy server can be tricky: a BGP external speaker [23], a PIM rendezvous point <ref> [14] </ref>, and a router managed by some policy agents are some of the candidates for RSVP proxy servers. RSVP tunnel identification: The combination of source and destination address and port number should not be used to classify packets inside the backbone due to large storage overhead.
Reference: [15] <author> J. Wroclawski, </author> <title> Specification of the controlled-load network element service, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> May </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Interoperable with RTP and the IntServ models: YESSIR messages are piggybacked in RTCP. The operation of existing RTP functions at end systems is not affected at all. YESSIR can describe the traffic flows in terms of the service models <ref> [15, 16] </ref> that have been specified in IETF IntServ working group. Provide link resource advertising function: The purpose of making link-level resource reservation is to meet end-to-end application requirements. <p> We have considered three types for YESSIR: IntServ, RTP PT (payload-type), and TOS (type-of-service). For applications that support the IntServ traffic models, namely the controlled-load <ref> [15] </ref> and guaranteed-service [16], the flowspec format will be the one that has already been designed by the IETF IntServ working group [17]. In the flowspec, the requested bandwidth, the burst size and a service class need to be specified explicitly.
Reference: [16] <author> S. Shenker, C. Partridge, and R. Guerin, </author> <title> Specification of guaranteed quality of service, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Interoperable with RTP and the IntServ models: YESSIR messages are piggybacked in RTCP. The operation of existing RTP functions at end systems is not affected at all. YESSIR can describe the traffic flows in terms of the service models <ref> [15, 16] </ref> that have been specified in IETF IntServ working group. Provide link resource advertising function: The purpose of making link-level resource reservation is to meet end-to-end application requirements. <p> We have considered three types for YESSIR: IntServ, RTP PT (payload-type), and TOS (type-of-service). For applications that support the IntServ traffic models, namely the controlled-load [15] and guaranteed-service <ref> [16] </ref>, the flowspec format will be the one that has already been designed by the IETF IntServ working group [17]. In the flowspec, the requested bandwidth, the burst size and a service class need to be specified explicitly.
Reference: [17] <author> J. Wroclawski, </author> <title> The use of RSVP with ietf integrated services, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: The flow specification can be in several formats. The optional network monitoring fragment stores link resource information. If it is present in a request, every router along the path updates the link information in the fragment. Currently, we use the ADSPEC format <ref> [17] </ref> defined by the IETF IntServ working group. The optional reservation error fragment is used to collect error information that will allow end systems and network administrators to diagnose reservation failure inside the network. <p> We have considered three types for YESSIR: IntServ, RTP PT (payload-type), and TOS (type-of-service). For applications that support the IntServ traffic models, namely the controlled-load [15] and guaranteed-service [16], the flowspec format will be the one that has already been designed by the IETF IntServ working group <ref> [17] </ref>. In the flowspec, the requested bandwidth, the burst size and a service class need to be specified explicitly. For some well-known and well-understood traffic types such as voice, the flowspec contained in the 12 RTCP SR can simply list the current RTP payload type [19]. <p> 4 It obviously runs the risk that reservations will fail when the network is sufficiently busy to drop best-effort traffic. 15 3.9 Network Resource Advertising In order to satisfy end-to-end service requirements, we adapted the OPWA (One-Pass With Advertising) scheme proposed by Shenker and Breslau [22] and described by Wroclawski <ref> [17] </ref> for YESSIR. Here is how it works in the context of YESSIR: each reservation request message carries a network monitoring fragment that consists of fields for hop counts, propagation delay, aggregated bandwidth and delay bounds. As SR messages traverse routers, this fragment will be updated at every hop.
Reference: [18] <author> S. Jamin, </author> <title> A measurement-based admission control algorithm for integrated services packet networks. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, University of Southern California, </institution> <address> Los Angeles, California, </address> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: If a second packet for the same session comes along, the router computes the difference in time stamps and byte counts and thus computes an estimated rate. It then establishes reservations for this measured bandwidth, updated as new RTCP packets arrive. Compared to other measurement-based admission controls <ref> [18] </ref>, this frees the router from the burden to count packets and estimate rates. Another measurement method, which we have not explored in detail, simply has the end system mark an RTP data packet every so often with an IP router alert option.
Reference: [19] <author> H. Schulzrinne, </author> <title> RTP profile for audio and video conferences with minimal control, </title> <type> RFC 1890, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: In the flowspec, the requested bandwidth, the burst size and a service class need to be specified explicitly. For some well-known and well-understood traffic types such as voice, the flowspec contained in the 12 RTCP SR can simply list the current RTP payload type <ref> [19] </ref>. Separate ranges of the payload type values have been set aside for audio and video, so that a router can assign RTP flows at different granularity: by session, by payload type value or by media class.
Reference: [20] <author> P. Pan and R. Guerin, </author> <title> Ibm research RSVP router implementation, software documentation, </title> <institution> IBM T. J. Watson Laboratory, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: Also, RTCP sender reports containing YESSIR reservation requests are always forwarded, even if unsuccessful. We chose this approach for several reasons: 1. This behavior is simple to implement. As shown in several RSVP implementations <ref> [20, 21] </ref>, the support for error message handling and associated blockade states are costly in terms of protocol processing, timer management and extra state storage. 2. For links where resources are relatively plenty, such as a gigabit Ethernet, there is no reason to reserve resources for small data streams. <p> If necessary, it would be easy to add an authentication facility to either RTCP or the YESSIR elements. 4 Implementation and Measurements To evaluate YESSIR, we have implemented it on the IBM AIXSIM router simulation platform, where RSVP had also been developed <ref> [20] </ref>. The simulator has relatively accurate functional and timing behaviors compared with the actual routers. We have simulated a network shown in Figure 8 to study the processing cost imposed by RSVP and YESSIR. In the Figure, S1 and S2 are senders, R1 and R2 are receivers. <p> In our experimental implementation, the total YESSIR-specific implementation was written in approximately 1,200 lines of C code. With adequate support for network management and security, the product-level code for YESSIR should be in the range of 2,000 lines. As a comparison, current RSVP implementations <ref> [20, 21] </ref> require more than 10,000 lines of code. The additional code to insert the YESSIR elements into sender reports is minimal. 5 Alternatively, we could also hash on the 4-byte RTP synchronization source identifier (SSRC) instead of 12 bytes of source/destination information.
Reference: [21] <author> B. Braden, </author> <title> Isi RSVP host implementation, software release, </title> <type> ISI, </type> <institution> Marina del Rey, California, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: Also, RTCP sender reports containing YESSIR reservation requests are always forwarded, even if unsuccessful. We chose this approach for several reasons: 1. This behavior is simple to implement. As shown in several RSVP implementations <ref> [20, 21] </ref>, the support for error message handling and associated blockade states are costly in terms of protocol processing, timer management and extra state storage. 2. For links where resources are relatively plenty, such as a gigabit Ethernet, there is no reason to reserve resources for small data streams. <p> In our experimental implementation, the total YESSIR-specific implementation was written in approximately 1,200 lines of C code. With adequate support for network management and security, the product-level code for YESSIR should be in the range of 2,000 lines. As a comparison, current RSVP implementations <ref> [20, 21] </ref> require more than 10,000 lines of code. The additional code to insert the YESSIR elements into sender reports is minimal. 5 Alternatively, we could also hash on the 4-byte RTP synchronization source identifier (SSRC) instead of 12 bytes of source/destination information.
Reference: [22] <author> S. Shenker and L. Breslau, </author> <title> Two issues in reservation establishment, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Cambridge, Massachusetts), </address> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: of receivers indicate reception problems. 4 It obviously runs the risk that reservations will fail when the network is sufficiently busy to drop best-effort traffic. 15 3.9 Network Resource Advertising In order to satisfy end-to-end service requirements, we adapted the OPWA (One-Pass With Advertising) scheme proposed by Shenker and Breslau <ref> [22] </ref> and described by Wroclawski [17] for YESSIR. Here is how it works in the context of YESSIR: each reservation request message carries a network monitoring fragment that consists of fields for hop counts, propagation delay, aggregated bandwidth and delay bounds.
Reference: [23] <author> Y. Rekhter and T. Li, </author> <title> A border gateway protocol 4 (BGP-4), </title> <type> RFC 1771, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: An end-to-end reserved connection is therefore established. Some of the unsolved issues are: Selecting RSVP proxy servers: In the example, the RSVP flow is originated from B1 and terminated at B3. The mechanism and criteria to select a proxy server can be tricky: a BGP external speaker <ref> [23] </ref>, a PIM rendezvous point [14], and a router managed by some policy agents are some of the candidates for RSVP proxy servers.
Reference: [24] <author> V. Fuller, T. Li, J. Yu, and K. Varadhan, </author> <title> Classless inter-domain routing (CIDR): an address assignment and aggregation strategy, </title> <type> RFC 1519, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1993. </year> <month> 24 </month>
Reference-contexts: How to classify packets in backbone RSVP routers needs to be studied. Possible solutions could be encapsulating data packets at the edge of the backbone, or making the use of CIDR <ref> [24] </ref>, or managing IPv6 flow-ids properly. Join YESSIR/RSVP gateway: In the example above, senders S1 and S2 have to somehow join themselves to the nearest YESSIR/RSVP gateway, B1, prior to the reservation requesting time. The joining mechanism needs to be designed.
Reference: [25] <author> P. Sharma, D. Estrin, S. Floyd, and V. Jacobson, </author> <title> Scalable timers for soft state protocols, </title> <booktitle> in Proceed--ings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Kobe, Japan), </address> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: On the other hand, infrequent refresh may reduce the system's ability to correct failure in timely fashion. A more efficient soft state management mechanism needs to be in place for YESSIR and RSVP. We will base our design on <ref> [25] </ref> and [26]. 5.2 RSVP Extensions If RSVP allows making reservation from sender's direction, many of the features that we introduced in this paper would also be applied in the new RSVP extension.
Reference: [26] <author> P. Pan and H. Schulzrinne, Staged refresh timers for RSVP, </author> <title> in Global Internet'97, </title> <address> (Tucson, Arizona), </address> <month> Nov. </month> <year> 1997. </year>
Reference-contexts: On the other hand, infrequent refresh may reduce the system's ability to correct failure in timely fashion. A more efficient soft state management mechanism needs to be in place for YESSIR and RSVP. We will base our design on [25] and <ref> [26] </ref>. 5.2 RSVP Extensions If RSVP allows making reservation from sender's direction, many of the features that we introduced in this paper would also be applied in the new RSVP extension.
Reference: [27] <author> L. Delgrossi and L. Berger, </author> <title> Internet stream protocol version 2 (ST2) protocol specification version ST2+, </title> <type> RFC 1819, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: The effort of modifying RSVP could fold into the on-going RSVPv2 works that has been taking place in the IETF community. 6 Related Work A number of protocols have explored sender-based reservations, including ST-II+ <ref> [27] </ref> and its predecessors, RTIP and RCAP [28] and CBSRP [29]. ST-II+ replaced IP with a new, connection-oriented Internet protocol and integrated resource reservation with establishing connectivity, thus making the smooth transition between reserved and best effort flows more difficult. RTIP and RCAP took a similar approach.
Reference: [28] <author> A. Banerjea and B. A. Mah, </author> <title> The real-time channel administration protocol., </title> <type> technical report, </type> <institution> UC Berkeley, </institution> <year> 1991. </year>
Reference-contexts: The effort of modifying RSVP could fold into the on-going RSVPv2 works that has been taking place in the IETF community. 6 Related Work A number of protocols have explored sender-based reservations, including ST-II+ [27] and its predecessors, RTIP and RCAP <ref> [28] </ref> and CBSRP [29]. ST-II+ replaced IP with a new, connection-oriented Internet protocol and integrated resource reservation with establishing connectivity, thus making the smooth transition between reserved and best effort flows more difficult. RTIP and RCAP took a similar approach.
Reference: [29] <author> S. T.-C. Chou and H. Tokuda, </author> <title> System support for dynamic QOS control of continuous media communication, </title> <booktitle> in Third International Workshop on network and operating system support for digital audio and video, </booktitle> <address> (San Diego, California), </address> <pages> pp. </pages> <month> 322327, </month> <journal> IEEE Computer and Communications Societies, </journal> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: The effort of modifying RSVP could fold into the on-going RSVPv2 works that has been taking place in the IETF community. 6 Related Work A number of protocols have explored sender-based reservations, including ST-II+ [27] and its predecessors, RTIP and RCAP [28] and CBSRP <ref> [29] </ref>. ST-II+ replaced IP with a new, connection-oriented Internet protocol and integrated resource reservation with establishing connectivity, thus making the smooth transition between reserved and best effort flows more difficult. RTIP and RCAP took a similar approach.
References-found: 29

