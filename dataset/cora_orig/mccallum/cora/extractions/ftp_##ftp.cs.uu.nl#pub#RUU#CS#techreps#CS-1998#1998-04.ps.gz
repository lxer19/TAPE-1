URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1998/1998-04.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Label Placement by Maximum Independent Set in Rectangles  
Author: Pankaj K. Agarwal Marc van Kreveld Subhash Suri 
Note: any integer k 1.  
Abstract: Motivated by the problem of labeling maps, we investigate the problem of computing a large non-intersecting subset in a set of n rectangles in the plane. Our results are as follows. In O(n log n) time, we can find an O(log n)-factor approximation of the maximum subset in a set of n arbitrary axis-parallel rectangles in the plane. If all rectangles have unit height, we can find a 2-approximation in O(n log n) time. Extending this result, we obtain a (1 + 1 k )-approximation in time O(n log n + n 2k1 ) time, for
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare and M. Sudan. </author> <title> Improved non-approximability results. </title> <booktitle> In Proc. 26th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 184-193, </pages> <year> 1994. </year>
Reference-contexts: Although it is known that no polynomial-time (n 1=4 )-approximation algorithm exists for maximum independent sets in arbitrary graphs <ref> [1] </ref>, no such lower bound is known for intersection graphs of rectangles.
Reference: [2] <author> J. Christensen, S. Friedman, J. Marks, and S. Shieber. </author> <title> Empirical testing of algorithms for variable-sized label placement. </title> <booktitle> In Proc. 13th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 415-417, </pages> <year> 1997. </year>
Reference-contexts: See also [12, 15]. Christensen et al. [3] provide a comparison of several approaches to place as many labels as possible on a map. They consider point labels, line labels, and area labels. A further comparison can be found in <ref> [2] </ref>. 3 Arbitrary Size Rectangular Labels We describe a simple, divide-and-conquer algorithm for computing a large independent set in a set R of n orthogonal rectangles in the plane.
Reference: [3] <author> J. Christensen, J. Marks, and S. Shieber. </author> <title> An empirical study of algorithms for point-feature label placement. </title> <journal> ACM Trans. Graph., </journal> <volume> 14 </volume> <pages> 202-232, </pages> <year> 1995. </year>
Reference-contexts: Other variations include the choice of the shapes of the labels and the legal placements allowed for each point. Unfortunately, even in simple settings, the problem turns out to be NP-hard <ref> [3, 7] </ref>. In this paper we assume that each label is an orthogonal rectangle of fixed size and we want to place as many labels as possible. More precisely, let S be a set of n points in the plane. <p> Doddi et al. [5] allow more general shapes of labels, e.g., circles, nonoriented rectangles, ellipses, and present approximation algorithms in each case. Like Formann and Wagner, they also approximate the size of labels. See also [12, 15]. Christensen et al. <ref> [3] </ref> provide a comparison of several approaches to place as many labels as possible on a map. They consider point labels, line labels, and area labels.
Reference: [4] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference-contexts: For each rectangle in the first category, we use the third case and for all rectangles in the second category we apply the second case. We then choose the one that gives the maximum value. We can fill out the three-dimensional table A in a standard dynamic programming manner <ref> [4] </ref>. Geometrically, the only constraint on filling out the entries is that when A [p; q; t] is being computed, we must have computed the entries corresponding to the polygonal lines that lie in the closure 7 of the subplane left of (p;q;t) .
Reference: [5] <author> S. Doddi, M. Marathe, A. Mirzaian, B. Moret, and B. Zhu. </author> <title> Map labeling and its generalization. </title> <booktitle> In Proc. 8th ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 148-157, </pages> <year> 1997. </year>
Reference-contexts: The label placement problem includes positioning labels for area, line, and point features. The primary focus within the computational geometry community has been on labeling point features <ref> [5, 7, 17, 16] </ref>. A basic requirement in the label placement problem is that the labels be pairwise disjoint. Subject to this basic constraint, the most common optimization criteria are the number of features labeled and the size of the labels. <p> They also study several variations and their implementation and find ways to improve on the size of the squares in practice. Doddi et al. <ref> [5] </ref> allow more general shapes of labels, e.g., circles, nonoriented rectangles, ellipses, and present approximation algorithms in each case. Like Formann and Wagner, they also approximate the size of labels. See also [12, 15].
Reference: [6] <author> J. S. Doerschler and H. Freeman. </author> <title> A rule-based system for dense-map name placement. </title> <journal> Commun. ACM, </journal> <volume> 35 </volume> <pages> 68-79, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Automated label placement is an important problem in geographic information systems (GIS), and has received considerable attention in recent years (for instance, see <ref> [6, 9] </ref>). The label placement problem includes positioning labels for area, line, and point features. The primary focus within the computational geometry community has been on labeling point features [5, 7, 17, 16]. A basic requirement in the label placement problem is that the labels be pairwise disjoint. <p> Section 4 describes our approximation algorithm for unit-height rectangles, which is based on dynamic programming. 1 All logarithms in this paper are base 2. 2 2 Previous Research There has been a lot of work on label placement in cartography community; see e.g., <ref> [6, 9] </ref> and the references they contain for a sample of results. Algorithms researchers have also studied labeling maps. Formann and Wagner [7] considered the label placement for point features in the plane using square labels.
Reference: [7] <author> M. Formann and F. Wagner. </author> <title> A packing problem with applications to lettering of maps. </title> <booktitle> In Proc. 7th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 281-288, </pages> <year> 1991. </year>
Reference-contexts: The label placement problem includes positioning labels for area, line, and point features. The primary focus within the computational geometry community has been on labeling point features <ref> [5, 7, 17, 16] </ref>. A basic requirement in the label placement problem is that the labels be pairwise disjoint. Subject to this basic constraint, the most common optimization criteria are the number of features labeled and the size of the labels. <p> Other variations include the choice of the shapes of the labels and the legal placements allowed for each point. Unfortunately, even in simple settings, the problem turns out to be NP-hard <ref> [3, 7] </ref>. In this paper we assume that each label is an orthogonal rectangle of fixed size and we want to place as many labels as possible. More precisely, let S be a set of n points in the plane. <p> In practice the labels are subject to additional constraints, which help in simplifying and improving the algorithms. Restricting the shape of the labels to be same size squares is one such approach <ref> [7, 16, 17] </ref>, because in many technical maps all labels have the same size. Think of mapping measurements at sample points in a terrain, or maps showing magnitudes of earthquakes at points that are the epicenters. Another interesting case is when all labels have the same height but arbitrary width. <p> Algorithms researchers have also studied labeling maps. Formann and Wagner <ref> [7] </ref> considered the label placement for point features in the plane using square labels. Specifically, an axis-aligned square label is placed for each point such that the point coincides with one of the vertices of its labeling square. <p> If all four positions of labels are allowed, then the problem of maximing the size of the label is NP-complete. Formann and Wagner give an O (n log n) time algorithm that guarantees a label size at least half the optimum <ref> [7] </ref>. They also show that no better approximation is possible unless P=NP. Formann and Wagner's approach is to grow all four possible labels around the points, removing candidate placements when they conflict with other growing labels. Whether the remaining labels allow a placement is done by solving 2-SAT problems.
Reference: [8] <author> R. J. Fowler, M. S. Paterson, and S. L. Tanimoto. </author> <title> Optimal packing and covering in the plane are NP-complete. </title> <journal> Inform. Process. Lett., </journal> <volume> 12(3) </volume> <pages> 133-137, </pages> <year> 1981. </year>
Reference-contexts: We want to compute a maximum independent set of G (R). Abusing the terminology slightly, we will say that we want to compute a maximum independent set of R. Computing an independent set of rectangles is known to be NP-hard <ref> [8, 13] </ref>. This suggests that one should aim for approximation algorithms. We call an algorithm an "-approximation algorithm, for " &gt; 1, if it returns an independent set of size at least fl=", where fl is the size of a maximum independent set of R.
Reference: [9] <author> H. Freeman. </author> <title> Computer name placement. </title> <editor> In D. J. Maguire, M. F. Goodchild, and D. W. Rhind, editors, </editor> <booktitle> Geographical Information Systems: Principles and Applications, </booktitle> <pages> pages 445-456. </pages> <publisher> Longman, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction Automated label placement is an important problem in geographic information systems (GIS), and has received considerable attention in recent years (for instance, see <ref> [6, 9] </ref>). The label placement problem includes positioning labels for area, line, and point features. The primary focus within the computational geometry community has been on labeling point features [5, 7, 17, 16]. A basic requirement in the label placement problem is that the labels be pairwise disjoint. <p> Section 4 describes our approximation algorithm for unit-height rectangles, which is based on dynamic programming. 1 All logarithms in this paper are base 2. 2 2 Previous Research There has been a lot of work on label placement in cartography community; see e.g., <ref> [6, 9] </ref> and the references they contain for a sample of results. Algorithms researchers have also studied labeling maps. Formann and Wagner [7] considered the label placement for point features in the plane using square labels.
Reference: [10] <author> D. S. Hochbaum and W. Maas. </author> <title> Approximation schemes for covering and packing problems in image processing and VLSI. </title> <journal> J. ACM, </journal> <volume> 32 </volume> <pages> 130-136, </pages> <year> 1985. </year>
Reference-contexts: maximum independent set of R. 4.2 A (1 + 1 k )-approximation algorithm ` 1 ` 3 ` 5 ` 7 R 1 R 3 R 3 ` 9 We will improve the approximation factor to (1 + 1 bining dynamic programming with the shifting technique of Hochbaum and Maass <ref> [10] </ref>. The basic idea is to partition the rectangles by horizontal lines ` 1 ; ` 2 ; : : : ; ` m as before, but then use dynamic programming to optimally solve the subproblem for each subset of rectangles intersected by k consecutive lines. <p> Hence we get an (1 + 1 k ) factor approximation. This is exactly the shifting idea of Hochbaum and Maass <ref> [10] </ref>, and this is precisely what we will do as well.
Reference: [11] <author> H. B. Hunt III, M. V. Marathe, V. Radhakrishnan, S. S. Ravi, D. J. Rosenkrantz, and R. E. Stearns. </author> <title> A unified approach to approximation schemes for NP- and PSPACE-hard problems for geometric graphs. </title> <booktitle> In Proc. 2nd Annu. European Sympos. Algorithms, volume 855 of Lecture Notes Comput. Sci., </booktitle> <pages> pages 424-435, </pages> <year> 1995. </year> <month> 9 </month>
Reference-contexts: The work is motivated from label placement at points, where the rectangles represent the bounding boxes of labels. The approximation scheme was known for the restrictive case of unit size square labels <ref> [11] </ref>, which occurs for fixed precision decimal numbers as labels. We gave a different approximation scheme for unit height labels with varyings widths, which is the standard situation for labels that are names, or labels of different type with fixed font size.
Reference: [12] <author> H.B. Hunt III, M.V. Marathe, V. Radhakrishnan, S.S. Ravi, D.J. Rosenkrantz, and R.E. Stearns. </author> <title> A unified approach to approximation schemes for NP- and PSPACE-hard problems for geometric graphs. </title> <booktitle> In Proc. 2nd Europ. Symp. on Algorithms, volume 855 of Lect. Notes in Comp. Science, </booktitle> <pages> pages 424-435, </pages> <year> 1995. </year>
Reference-contexts: Doddi et al. [5] allow more general shapes of labels, e.g., circles, nonoriented rectangles, ellipses, and present approximation algorithms in each case. Like Formann and Wagner, they also approximate the size of labels. See also <ref> [12, 15] </ref>. Christensen et al. [3] provide a comparison of several approaches to place as many labels as possible on a map. They consider point labels, line labels, and area labels.
Reference: [13] <author> H. Imai and Ta. Asano. </author> <title> Finding the connected components and a maximum clique of an intersection graph of rectangles in the plane. </title> <journal> J. Algorithms, </journal> <volume> 4 </volume> <pages> 310-323, </pages> <year> 1983. </year>
Reference-contexts: We want to compute a maximum independent set of G (R). Abusing the terminology slightly, we will say that we want to compute a maximum independent set of R. Computing an independent set of rectangles is known to be NP-hard <ref> [8, 13] </ref>. This suggests that one should aim for approximation algorithms. We call an algorithm an "-approximation algorithm, for " &gt; 1, if it returns an independent set of size at least fl=", where fl is the size of a maximum independent set of R.
Reference: [14] <author> L. Kucera, K. Mehlhorn, B. Preis, and E. Schwarzenecker. </author> <title> Exact algorithms for a geometric packing problem. </title> <booktitle> In Proc. 10th Sympos. Theoret. Aspects Comput. Sci., volume 665 of Lecture Notes Comput. Sci., </booktitle> <pages> pages 317-322. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Formann and Wagner's approach is to grow all four possible labels around the points, removing candidate placements when they conflict with other growing labels. Whether the remaining labels allow a placement is done by solving 2-SAT problems. Kucera et al. <ref> [14] </ref> studied the same problem, but developed an exact, super-polynomial algorithm that can be applied for sets with up to roughly 100 points.
Reference: [15] <author> M. V. Marathe, H. Breu, H. B. Hunt III, S. S. Ravi, and D. J. Rosenkrantz. </author> <title> Simple heuristics for unit disk graphs. </title> <journal> Networks, </journal> <volume> 25 </volume> <pages> 59-68, </pages> <year> 1995. </year>
Reference-contexts: Doddi et al. [5] allow more general shapes of labels, e.g., circles, nonoriented rectangles, ellipses, and present approximation algorithms in each case. Like Formann and Wagner, they also approximate the size of labels. See also <ref> [12, 15] </ref>. Christensen et al. [3] provide a comparison of several approaches to place as many labels as possible on a map. They consider point labels, line labels, and area labels.
Reference: [16] <author> F. Wagner and A. Wolff. </author> <title> An efficient and effective approximation algorithm for the map labeling problem. </title> <booktitle> In Proc. 3rd Annu. European Sympos. Algorithms, volume 979 of Lecture Notes Comput. Sci., </booktitle> <pages> pages 420-433. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: The label placement problem includes positioning labels for area, line, and point features. The primary focus within the computational geometry community has been on labeling point features <ref> [5, 7, 17, 16] </ref>. A basic requirement in the label placement problem is that the labels be pairwise disjoint. Subject to this basic constraint, the most common optimization criteria are the number of features labeled and the size of the labels. <p> In practice the labels are subject to additional constraints, which help in simplifying and improving the algorithms. Restricting the shape of the labels to be same size squares is one such approach <ref> [7, 16, 17] </ref>, because in many technical maps all labels have the same size. Think of mapping measurements at sample points in a terrain, or maps showing magnitudes of earthquakes at points that are the epicenters. Another interesting case is when all labels have the same height but arbitrary width. <p> Whether the remaining labels allow a placement is done by solving 2-SAT problems. Kucera et al. [14] studied the same problem, but developed an exact, super-polynomial algorithm that can be applied for sets with up to roughly 100 points. Wagner and Wolff <ref> [17, 16] </ref> have noted that, in practice, the approach of Formann and Wagner hardly ever results in square sizes significantly greater than half the optimum. They also study several variations and their implementation and find ways to improve on the size of the squares in practice.
Reference: [17] <author> Frank Wagner and Alexander Wolff. </author> <title> Map labeling heuristics: Provably good and practically useful. </title> <booktitle> In Proc. 11th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 109-118, </pages> <year> 1995. </year>
Reference-contexts: The label placement problem includes positioning labels for area, line, and point features. The primary focus within the computational geometry community has been on labeling point features <ref> [5, 7, 17, 16] </ref>. A basic requirement in the label placement problem is that the labels be pairwise disjoint. Subject to this basic constraint, the most common optimization criteria are the number of features labeled and the size of the labels. <p> In practice the labels are subject to additional constraints, which help in simplifying and improving the algorithms. Restricting the shape of the labels to be same size squares is one such approach <ref> [7, 16, 17] </ref>, because in many technical maps all labels have the same size. Think of mapping measurements at sample points in a terrain, or maps showing magnitudes of earthquakes at points that are the epicenters. Another interesting case is when all labels have the same height but arbitrary width. <p> Whether the remaining labels allow a placement is done by solving 2-SAT problems. Kucera et al. [14] studied the same problem, but developed an exact, super-polynomial algorithm that can be applied for sets with up to roughly 100 points. Wagner and Wolff <ref> [17, 16] </ref> have noted that, in practice, the approach of Formann and Wagner hardly ever results in square sizes significantly greater than half the optimum. They also study several variations and their implementation and find ways to improve on the size of the squares in practice.
References-found: 17

