URL: http://www.research.microsoft.com/~optas/papers/Random-CSP.ps
Refering-URL: http://www.research.microsoft.com/~optas/work.html
Root-URL: http://www.research.microsoft.com
Email: (optas@cs.toronto.edu)  (kirousis@ceid.upatras.gr)  (kranakis@scs.carleton.ca)  (krizanc@scs.carleton.ca)  (molloy@cs.toronto.edu)  (stamatiu@fryni.ceid.upatras.gr)  
Title: Random Constraint Satisfaction A More Accurate Picture  
Author: Dimitris Achlioptas Lefteris M. Kirousis Evangelos Kranakis zk Danny Krizanc zk Michael S.O. Molloy Yannis C. Stamatiou 
Abstract: Recently there has been a great amount of interest in Random Constraint Satisfaction Problems, both from an experimental and a theoretical point of view. Rather intriguingly, experimental results with various models for generating random CSP instances suggest a "threshold-like" behavior and some theoretical work has been done in analyzing these models when the number of variables becomes large (asymptotic). In this paper we prove that the models commonly used for generating random CSP instances do not have an asymptotic threshold. In particular, we prove that as the number of variables becomes large, almost all instances they generate are trivially overconstrained. We then present a new model for random CSP and, in the spirit of random k-SAT, we derive lower and upper bounds for its parameters so that instances are "almost surely" underconstrained and overconstrained, respectively. Finally, for the case of one of the popular models in Artificial Intelligence we derive sharper estimates for the probability of being overconstrained, as a function of the number of variables. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Achlioptas and M. Molloy, </author> <title> "Almost all graphs with 2.522 n edges are not 3-colorable," </title> <type> Manuscript, </type> <institution> University of Toronto. </institution>
Reference-contexts: Hence, the technique could potentially apply to other models for random CSP. This technique has already been applied to random SAT [21] and random graph coloring <ref> [1] </ref>, in each case giving the best bounds currently known. Definition 2 For each variable in fix an arbitrary ordering of the values in its domain. The set S ] n is defined as the random set of value assignments A such that 1.
Reference: [2] <author> N. Alon, J.H. Spencer, and P. Erdos, </author> <title> The Probabilistic Method, </title> <editor> J. </editor> <publisher> Wiley, </publisher> <address> New York (1992). </address> <month> 10 </month>
Reference-contexts: Consider the constraint graph G (of an instance ). Recall, that the degree of a vertex in G is the number of constraints by which the corresponding variable is bound. Since the total number of edges (constraints) in G is fi (n), using methods from Chapter 8 of <ref> [2] </ref>, it is not hard to verify that the degree of each vertex (variable) is, asymptotically, a Poisson distributed random variable with mean a constant, for both options for Step 1. This implies that for any constant d there almost surely exist (n) vertices that have degree exactly d. <p> Then, a random instance of this CSP encodes the problem of coloring a random graph with p 1 n edges using D colors. This is an extremely interesting problem asymptotically, with numerous papers written on the subject (for an introduction see <ref> [2, 4] </ref>). 5 We feel that suggesting and analyzing interesting models that lack trivial local inconsistencies is a very worthwhile goal. <p> We are interested in establishing a condition subject to which the probability that has a solution decreases exponentially with n. Such a condition is readily provided by the first moment method (for excellent expositions see <ref> [2] </ref> and [27]).
Reference: [3] <editor> D.G. Bobrow and M. Brady, eds., </editor> <title> Special Volume on Frontiers in Problem Solving: Phase Transitions and Complexity, </title> <editor> Guest editors: T. Hogg, B.A. Hubermann, and C.P. Williams, </editor> <booktitle> Artificial Intelligence, </booktitle> <volume> Vol. 81, </volume> <month> Numbers 1-2 </month> <year> (1996). </year>
Reference-contexts: An extensive account of relevant results, both experimental and theoretical, can be found in <ref> [3] </ref>.
Reference: [4] <author> B. Bollobas, </author> <title> Random Graphs, </title> <publisher> Academic Press, </publisher> <address> London (1985). </address>
Reference-contexts: Then, a random instance of this CSP encodes the problem of coloring a random graph with p 1 n edges using D colors. This is an extremely interesting problem asymptotically, with numerous papers written on the subject (for an introduction see <ref> [2, 4] </ref>). 5 We feel that suggesting and analyzing interesting models that lack trivial local inconsistencies is a very worthwhile goal.
Reference: [5] <author> A.Z. Broder, A.M. Frieze, and E. Upfal, </author> <title> "On the satisfiability and maximum satisfiability of random 3-CNF formulas," </title> <booktitle> Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms (1993) 322-330. </booktitle>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability.
Reference: [6] <author> M.-T. Chao and J. Franco, </author> <title> "Probabilistic analysis of two heuristics for the 3-satisfiability problem," </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. </volume> <month> 15 </month> <year> (1986) </year> <month> 1106-1118. </month>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability.
Reference: [7] <author> M.-T. Chao and J. Franco, </author> <title> "Probabilistic analysis of a generalization of the unit-clause literal selection heuristic for the k-satisfiability problem," </title> <journal> Information Science, </journal> <volume> Vol. </volume> <month> 51 </month> <year> (1990) </year> <month> 289-314. </month>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability. <p> For general k, the best known lower bound for r is fi (2 k =k) <ref> [7, 9, 15] </ref> while 2 k is an easy upper bound and was improved by a constant factor in [21] by extending the techniques used for 3-SAT.
Reference: [8] <author> P. Cheeseman, B. Kanefsky and W. Taylor, </author> <title> "Where the really hard problems are," </title> <booktitle> Proceedings of IJCAI '91 (1991) 331-337. </booktitle>
Reference-contexts: Research in this direction originated from research on random instances not of general CSP, but of specific problems like SAT and colorability (see <ref> [8] </ref>). Especially, for random instances of SAT, Mitchell et al. [24] pointed out that some distributions that are commonly used in such experiments are uninteresting since they generate formulas that are almost always very easy to satisfy. <p> Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints.
Reference: [9] <author> V. Chvatal and B. Reed, </author> <title> "Mick gets some (the odds are on his side)," </title> <booktitle> in Proceedings of 33rd IEEE Symposium on Foundations of Computer Science (1992) 620-627. </booktitle>
Reference-contexts: In the following we give a brief summary of the strongest known results. We will say that a sequence of events E n occurs "almost surely" if Pr (E n ) tends to one as n tends to infinity. For k = 2 a sharp threshold was proved in <ref> [9, 16] </ref>: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. <p> For general k, the best known lower bound for r is fi (2 k =k) <ref> [7, 9, 15] </ref> while 2 k is an easy upper bound and was improved by a constant factor in [21] by extending the techniques used for 3-SAT. <p> The following two facts will be very useful: Fact 1 If for an instance of CSP, every connected component of G m has at most one cycle then has at least one solution. Fact 1 is well known for D = 2 (see <ref> [9] </ref>, where a proof is given in terms of 2-SAT) and having D &gt; 2 only makes things easier for that proof.
Reference: [10] <author> R. Dechter, </author> <title> "Constraint networks," </title> <editor> in S. Shapiro (ed.), </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <publisher> Wiley, </publisher> <address> New York, </address> <publisher> 2nd ed. </publisher> <year> (1992) </year> <month> 276-285. </month>
Reference-contexts: Given a constraint network, the Constraint Satisfaction Problem (CSP) is that of determining the n-tuples of value assignments that are compatible with all the constraints. CSP is a fundamental problem in Artificial Intelligence, with applications ranging from scene labeling to scheduling and knowledge representation <ref> [10, 22, 28] </ref>.
Reference: [11] <author> O. Dubois and Y. Boufkhad, </author> <title> A General Upper Bound for the Satisfiability Threshold of Random r-SAT Formulae, </title> <type> Preprint, </type> <address> LAFORIA, CNRS-Universite Paris 6, </address> <year> 1996. </year>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability.
Reference: [12] <author> P. Erdos and A. Renyi, </author> <title> "On the evolution of random graphs," </title> <journal> Publ. of the Math. Inst. of the Hung. Acad. Sci., </journal> <volume> Vol. </volume> <month> 5 </month> <year> (1960) </year> <month> 17-61. </month>
Reference-contexts: Moreover, Fact 2 If a random multigraph G is formed by selecting uniformly, independently and with repetitions n 2 edges then, almost surely, all the components of G will contain at most one cycle. Fact 2 is the analog of Theorem 5e in <ref> [12] </ref> when edges are selected with repetitions. By facts 1,2 we get Theorem 1 If for a random instance generated using Model E, C has fewer than n 2 edges then almost surely has a solution.
Reference: [13] <author> A. El Maftouhi and W. Fernandez de la Vega, </author> <title> "On random 3-SAT", Combinatorics, </title> <journal> Probability and Computing, </journal> <volume> Vol. </volume> <month> 4 </month> <year> (1995) </year> <month> 189-195. </month>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability.
Reference: [14] <author> E. Friedgut, </author> <title> "Sharp thresholds for graph properties and the k-sat problem," </title> <note> Manuscript in preparation. </note>
Reference-contexts: For general k, the best known lower bound for r is fi (2 k =k) [7, 9, 15] while 2 k is an easy upper bound and was improved by a constant factor in [21] by extending the techniques used for 3-SAT. Very recently, Friedgut <ref> [14] </ref> made great progress towards establishing the existence of a threshold for k-SAT for all values of k, although he does not determine its asymptotic location. For general CSP, there also is accumulating experimental evidence that there exists a critical region for the defining parameters of a random instance.
Reference: [15] <author> A. Frieze and S. Suen, </author> <title> "Analysis of two simple heuristics on a random instance of k-SAT," </title> <journal> Journal of Algorithms, </journal> <volume> Vol. </volume> <month> 20 </month> <year> (1996) </year> <month> 312-355. </month>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability. <p> For k = 3, there has been a series of results [6, 7, 5, 13, 19, 15, 21, 11] narrowing the area for which we do not have almost surely (un)satisfiability. The best bounds currently known come from <ref> [15] </ref> where it was proven that a random instance of 3-SAT is almost surely satisfiable if r &lt; 3:003, and [21] where it was proven that a random instance of 3-SAT is almost surely unsatisfiable if r &gt; 4:598. <p> For general k, the best known lower bound for r is fi (2 k =k) <ref> [7, 9, 15] </ref> while 2 k is an easy upper bound and was improved by a constant factor in [21] by extending the techniques used for 3-SAT.
Reference: [16] <author> A. Goerdt, </author> <title> "A threshold for satisfiability," in I.M. </title> <editor> Haven and V. Koubek (eds.) </editor> <booktitle> Proceedings of the Symposium on the Mathematical Foundations of Computer Science (1992) 264-274. </booktitle>
Reference-contexts: In the following we give a brief summary of the strongest known results. We will say that a sequence of events E n occurs "almost surely" if Pr (E n ) tends to one as n tends to infinity. For k = 2 a sharp threshold was proved in <ref> [9, 16] </ref>: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1.
Reference: [17] <author> T. Hogg, </author> <title> "Refining the phase transition in combinatorial search," </title> <booktitle> in [3], </booktitle> <pages> 127-154. </pages>
Reference-contexts: Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints.
Reference: [18] <author> J. Kahn, G. Kalai, and N. Linial, </author> <title> "The influence of variables on Boolean functions", </title> <booktitle> Proceedings of the 29th Annual Symposium on the Foundations of Computer Science (1988) 68-80. </booktitle>
Reference-contexts: We feel that this clustering is not specific to the model we put forward and that it is closely related to the notion of influence introduced in <ref> [18] </ref>. Hence, the technique could potentially apply to other models for random CSP. This technique has already been applied to random SAT [21] and random graph coloring [1], in each case giving the best bounds currently known.
Reference: [19] <author> A. Kamath, R. Motwani, K. Palem, and P. Spirakis, </author> <title> "Tail bounds for occupancy and the satisfiability threshold conjecture," Random Structures and Algorithms, </title> <booktitle> Vol. </booktitle> <month> 7 </month> <year> (1995) </year> <month> 59-80. </month>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability.
Reference: [20] <author> S. Kirkpatrick and B. Selman, </author> <title> "Critical behavior in the satisfiability of random Boolean expressions," </title> <booktitle> Science 264, </booktitle> <pages> pp 1297-1301, </pages> <year> 1994. </year> <month> 11 </month>
Reference-contexts: Finally, a "50%- point" seems to appear around 4:2, the same point where the computational complexity of finding a satisfying truth assignment is maximized. Further experimental results as well the connection of this threshold behavior to transition phenomena in physics are described in <ref> [20] </ref>. Motivated by these experimental behavior there has been a theoretical interest in understanding the behavior of random k-SAT formulas, as the number of variables becomes asymptotic. In the following we give a brief summary of the strongest known results.
Reference: [21] <author> L. M. Kirousis, E. Kranakis, and D. Krizanc, </author> <title> "Approximating the unsatisfiability threshold of random formulas," </title> <booktitle> Proceedings of the Fourth Annual European Symposium on Algorithms, </booktitle> <volume> ESA '96, </volume> <year> (1996) </year> <month> 27-38. </month>
Reference-contexts: For k = 2 a sharp threshold was proved in [9, 16]: A random instance of 2-SAT is almost surely satisfiable if r &lt; 1 and almost surely unsatisfiable if r &gt; 1. For k = 3, there has been a series of results <ref> [6, 7, 5, 13, 19, 15, 21, 11] </ref> narrowing the area for which we do not have almost surely (un)satisfiability. <p> The best bounds currently known come from [15] where it was proven that a random instance of 3-SAT is almost surely satisfiable if r &lt; 3:003, and <ref> [21] </ref> where it was proven that a random instance of 3-SAT is almost surely unsatisfiable if r &gt; 4:598. <p> For general k, the best known lower bound for r is fi (2 k =k) [7, 9, 15] while 2 k is an easy upper bound and was improved by a constant factor in <ref> [21] </ref> by extending the techniques used for 3-SAT. Very recently, Friedgut [14] made great progress towards establishing the existence of a threshold for k-SAT for all values of k, although he does not determine its asymptotic location. <p> The analysis for the underconstrained region exploits a connection to random graphs while the counting argument is based on a technique introduced by Kirousis, Kranakis and Krizanc in <ref> [21] </ref>. Finally, we analyze the popular model (Model B) examined in [26], and derive a sharper upper bound for the probability of having a solution than the one provided by the first moment method [26]. <p> Hence, by substituting jS n ()j for I we might be giving away "a lot". The technique introduced in <ref> [21] </ref>, when applied to CSP, amounts to "compressing" S n by requiring value assignments not only to be solutions of but to also satisfy a certain "local maximality" condition. <p> We feel that this clustering is not specific to the model we put forward and that it is closely related to the notion of influence introduced in [18]. Hence, the technique could potentially apply to other models for random CSP. This technique has already been applied to random SAT <ref> [21] </ref> and random graph coloring [1], in each case giving the best bounds currently known. Definition 2 For each variable in fix an arbitrary ordering of the values in its domain. The set S ] n is defined as the random set of value assignments A such that 1.
Reference: [22] <author> A.K. Mackworth, </author> <title> "Constraint satisfaction," </title> <editor> in S. Shapiro (ed.) </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <publisher> Wiley, </publisher> <address> New York, </address> <publisher> 2nd ed. </publisher> <year> (1992) </year> <month> 285-293. </month>
Reference-contexts: Given a constraint network, the Constraint Satisfaction Problem (CSP) is that of determining the n-tuples of value assignments that are compatible with all the constraints. CSP is a fundamental problem in Artificial Intelligence, with applications ranging from scene labeling to scheduling and knowledge representation <ref> [10, 22, 28] </ref>.
Reference: [23] <author> C. McDiarmid, </author> <title> "On a correlation inequality of Farr," Combinatorics, </title> <journal> Probability and Computing, </journal> <volume> Vol. </volume> <month> 1 </month> <year> (1992) </year> <month> 157-160. </month>
Reference-contexts: Moreover, it exposes that at least one of the m edges was "used" to cause A (X i ; v j ) 6j= . Hence, the events A (X i ; v j ) 6j= are in fact negatively correlated. Formally, this fact follows from the main Theorem in <ref> [23] </ref>.
Reference: [24] <author> D. Mitchell, B. Selman, and H. Levesque, </author> <title> Generating hard satisfiability problems, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 81 (1996), </volume> <pages> 17-29. </pages>
Reference-contexts: Research in this direction originated from research on random instances not of general CSP, but of specific problems like SAT and colorability (see [8]). Especially, for random instances of SAT, Mitchell et al. <ref> [24] </ref> pointed out that some distributions that are commonly used in such experiments are uninteresting since they generate formulas that are almost always very easy to satisfy.
Reference: [25] <author> P. Prosser, </author> <title> "An empirical study of phase transitions in binary constraint satisfaction problems," </title> <booktitle> in [3], </booktitle> <pages> 81-109. </pages>
Reference-contexts: Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints. <p> First, the constraint graph G is constructed as a random graph and then for each edge (constraint) in G a set of edges (incompatible pairs of values) is inserted in C. A general framework for doing this is presented in <ref> [25, 26] </ref>. <p> n tends to infinity. 6 The method of local maxima for model B We will now use the method of local maxima in order to derive better estimations for the probability of a random CSP instance having a solution for a popular model in Artificial Intelligence, called Model B in <ref> [25, 26] </ref>. As we showed in section 3, this model suffers from the shortcoming that when n tends to infinity the probability that a randomly generated instance has a solution tends to zero. <p> the sake of simplicity in the calculations of the example and only for this paragraph, the model where each constraint edge is selected independently with probability p 1 and for each selected constraint edge, each incompatibility edge is selected in the same way with probability p 2 (Model A, in <ref> [25, 26] </ref>) and suppose we have n 0 variables. Let v be a fixed value in the domain of a fixed variable X. Each constraint that bounds X makes v flawed with probability p D 2 .
Reference: [26] <author> B.M. Smith and M.E. Dyer, </author> <title> "Locating the phase transition in binary constraint satisfaction problems," </title> <booktitle> in [3], </booktitle> <pages> 155-181. </pages>
Reference-contexts: Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints. <p> Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic [8, 17, 25, 26, 29, 30, 31] in a spirit similar to random k-SAT. In <ref> [26] </ref>, Smith and Dyer examine a well-established model for generating random CSP with binary constraints. Using the first moment method they derive a condition on the defining parameters subject to which the probability that a random instance has a solution tends to zero as n tends to infinity. <p> They also study the variance of the number of solutions as a function of the defining parameters. In this paper we show that if the fraction of permissible pairs of value assignments in each constraint is a constant (as, e.g., it is assumed in <ref> [26] </ref>), then as the number of variables increases, the probability that a random CSP has a solution tends to zero. This implies that a threshold 2 phenomenon cannot underlie random instances of CSP generated using the current models, includ-ing those examined in [26], since asymptotically almost all instances generated, will not <p> a constant (as, e.g., it is assumed in <ref> [26] </ref>), then as the number of variables increases, the probability that a random CSP has a solution tends to zero. This implies that a threshold 2 phenomenon cannot underlie random instances of CSP generated using the current models, includ-ing those examined in [26], since asymptotically almost all instances generated, will not have a solution. <p> The analysis for the underconstrained region exploits a connection to random graphs while the counting argument is based on a technique introduced by Kirousis, Kranakis and Krizanc in [21]. Finally, we analyze the popular model (Model B) examined in <ref> [26] </ref>, and derive a sharper upper bound for the probability of having a solution than the one provided by the first moment method [26]. <p> Finally, we analyze the popular model (Model B) examined in <ref> [26] </ref>, and derive a sharper upper bound for the probability of having a solution than the one provided by the first moment method [26]. <p> First, the constraint graph G is constructed as a random graph and then for each edge (constraint) in G a set of edges (incompatible pairs of values) is inserted in C. A general framework for doing this is presented in <ref> [25, 26] </ref>. <p> Combining the options for the two steps, we get four slightly different models for generating random CSP which have received various names in the past literature. In particular, in the terminology used in <ref> [26] </ref>, if both 1 and Step 2 are done using the first option (the G n;p fashion, in random graphs terminology) then we get Model A, while if they are both done using the second option (the G n;m fashion, in random graphs terminology), we get Model B. <p> n tends to infinity. 6 The method of local maxima for model B We will now use the method of local maxima in order to derive better estimations for the probability of a random CSP instance having a solution for a popular model in Artificial Intelligence, called Model B in <ref> [25, 26] </ref>. As we showed in section 3, this model suffers from the shortcoming that when n tends to infinity the probability that a randomly generated instance has a solution tends to zero. <p> the sake of simplicity in the calculations of the example and only for this paragraph, the model where each constraint edge is selected independently with probability p 1 and for each selected constraint edge, each incompatibility edge is selected in the same way with probability p 2 (Model A, in <ref> [25, 26] </ref>) and suppose we have n 0 variables. Let v be a fixed value in the domain of a fixed variable X. Each constraint that bounds X makes v flawed with probability p D 2 .
Reference: [27] <author> J. H. Spencer, </author> <title> Ten Lectures on the Probabilistic Method, 2nd edition, </title> <publisher> SIAM, </publisher> <address> Philadelphia (1994). </address>
Reference-contexts: We are interested in establishing a condition subject to which the probability that has a solution decreases exponentially with n. Such a condition is readily provided by the first moment method (for excellent expositions see [2] and <ref> [27] </ref>).
Reference: [28] <author> D. Waltz, </author> <title> "Understanding line drawings of scenes with shadows," The Psychology of Computer Vision, </title> <publisher> McGraw-Hill, </publisher> <address> New York (1975) 19-91. </address>
Reference-contexts: Given a constraint network, the Constraint Satisfaction Problem (CSP) is that of determining the n-tuples of value assignments that are compatible with all the constraints. CSP is a fundamental problem in Artificial Intelligence, with applications ranging from scene labeling to scheduling and knowledge representation <ref> [10, 22, 28] </ref>.
Reference: [29] <author> C. Williams and T. Hogg, </author> <title> "Using deep structure to locate hard problems," </title> <booktitle> Proceedings of AAAI-92 (1992) 472-477. </booktitle>
Reference-contexts: Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints.
Reference: [30] <author> C. Williams and T. Hogg, </author> <title> "Extending deep structure," </title> <booktitle> Proceedings of AAAI-93, </booktitle> <year> (1993) </year> <month> 152-158. </month>
Reference-contexts: Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints.
Reference: [31] <author> C. Williams and T. Hogg, </author> <title> "Exploiting the deep structure of constraint problems," </title> <journal> Artificial Intelligence, </journal> <volume> Vol. </volume> <month> 70 </month> <year> (1994) </year> <month> 73-117. 12 </month>
Reference-contexts: Moreover, the "hard" region seems to narrow as the number of variables increases. This has led to the belief that a threshold phenomenon underlies random CSP when the number of variables, n, becomes asymptotic <ref> [8, 17, 25, 26, 29, 30, 31] </ref> in a spirit similar to random k-SAT. In [26], Smith and Dyer examine a well-established model for generating random CSP with binary constraints.
References-found: 31

