URL: http://www.cs.toronto.edu/~csc2532h/sheila-ijcai97.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Email: E-mail: mcilrait@cs.utoronto.ca  E-mail: mcilrait@parc.xerox.com,  E-mail: sam@hpp.stanford.edu.  
Phone: Phone: 415-812-4332, Fax: 415-812-4334,  
Title: A Closed-Form Solution to the Ramification Problem (Sometimes)  
Author: Sheila A. McIlraith 
Note: Current Address: Xerox  
Date: October 19, 1997  
Address: Toronto, M5S 3G4. Canada  3333 Coyote Hill Road, Palo Alto, CA 94304,  Gates Sciences Building 2A-248, Stanford, CA 94305-9020,  
Affiliation: Department of Computer Science University of Toronto  PARC,  and Knowledge Systems Laboratory, Stanford University,  
Abstract: Our general concern is with how to integrate a representation of action into an existing set of state constraints. As has been observed in the literature, state constraints implicitly define indirect effects of actions as well as indirectly imposing further preconditions on the performance of actions. Thus, any representation scheme we propose must address the ramification and qualification problems, as well as the frame problem. In this paper we achieve such a representation for a syntactically restricted class of situation calculus theories. This paper presents two major technical contributions. The first contribution is provision of an axiomatic closed-form solution to the frame, ramification and qualification problems for a common class of ramification constraints. The solution is presented in the form of an automatable procedure that compiles a syntactically restricted set of situation calculus ramification constraints and effect axioms into a set of successor state axioms. The second major contribution of this paper is provision of an independent semantic justification for this closed-form solution. In particular, we present a semantic specification for a solution to the frame and ramification problems in terms of a prioritized minimization policy, and show that the successor state axioms of our closed-form solution adhere to this specification. Observing that our minimization policy is simply an instance of prioritized circumscription, we exploit results of Lifschitz on computing circumscription [6] to show that computing the prioritized circumscription yields our successor state axioms. In the special case where there are no ramification constraints, computing the circumscription yields Reiter's earlier successor state axiom solution to the frame problem [17]. fl I would like to acknowledge Fangzhen Lin for providing helpful comments on the circumscription results, and particularly for mathematically articulating my intuitions regarding the existence of a lemma that was essential to the proof of Theorem 3. y A subset of the material presented in this paper also appears in Representing Actions and State Constraints in Model-Based Diagnosis, Proceedings of Fourteenth National Conference on Artificial Intelligence c fl AAAI Press, Menlo Park, CA, 1997. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Costello. </author> <title> Solutions to the ramification problem. </title> <booktitle> In Working Papers for the Second Symposium on Logical Formalizations of Commonsense Reasoning, </booktitle> <pages> pages 32-39, </pages> <year> 1993. </year>
Reference-contexts: Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions <ref> [1] </ref>. What distinguishes this work in particular is that it provides an axiomatic closed-form solution and it retains the dual role played by our state constraints. 9 Contributions This paper addressed the problem of integrating a theory of action with a pre-existing set of state constraints.
Reference: [2] <author> E. Giunchiglia. </author> <title> Determining ramifications in the situation calculus. </title> <booktitle> In Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning (KR'96), </booktitle> <pages> pages 76-86, </pages> <address> Cambridge, Massachusetts, USA., </address> <year> 1996. </year>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem which advocate minimizing an explicitly represented notion of causality (e.g., [8], [12], [3], [20], <ref> [2] </ref>). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions [1].
Reference: [3] <author> G. Neelakantan Kartha and V. Lifschitz. </author> <title> Actions with indirect effects (preliminary report). </title> <booktitle> In Proceedings of the International Conference on Principles of Knowledge Representation and Reasoning (KR'94), </booktitle> <pages> pages 341-350, </pages> <year> 1994. </year>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem which advocate minimizing an explicitly represented notion of causality (e.g., [8], [12], <ref> [3] </ref>, [20], [2]). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions [1].
Reference: [4] <author> B. Kramer and J. Mylopolous et al. </author> <title> Developing an expert system technology for industrial process control: An experience report. </title> <booktitle> In Proceedings of the Conference of the Canadian Society for Computational Studies of Intelligence (CSCSI'96), </booktitle> <pages> pages 172-186, </pages> <year> 1996. </year>
Reference: [5] <editor> G. Levi. </editor> <booktitle> Advances in Logic Programming Theory. </booktitle> <publisher> Oxford Science Publications, </publisher> <year> 1994. </year>
Reference-contexts: They also serve as ramification and qualification constraints, indirectly constraining the effects of actions and further constraining the preconditions for actions When employing the ramification constraints to infer the indirect effects of actions, the implication connective is interpreted as causal or definitional, in the logic programming sense. Following <ref> [5] </ref>, we say that a fluent is defined in an axiom or set of axioms if it appears on the right-hand side of an implication connective in that axiom or set of axioms. Thus, it follows that an effect axiom for fluent F also serves to define fluent F . <p> We combine the notion of solitary theory [6] and stratified logic program (e.g., <ref> [5] </ref>) to define the notion of a solitary stratified theory. Note that unlike stratified logic programs, we use a strictly 3 We only list the relevant portion of the models here. 7 &lt; relation to distinguish the strata of our theories.
Reference: [6] <author> V. Lifschitz. </author> <title> Computing Circumscription. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence (IJCAI-85), </booktitle> <pages> pages 121-127, </pages> <year> 1985. </year>
Reference-contexts: Observing that our minimization policy is simply an instance of prioritized circumscription, we exploit results by Lifschitz on computing circumscription <ref> [6] </ref> to show that computing the prioritized circumscription yields our successor state axioms. Finally, we show that when there are no ramifications, computing the circumscription results in the set of successor state axioms Reiter proposed as a solution to the frame problem [17]. <p> We combine the notion of solitary theory <ref> [6] </ref> and stratified logic program (e.g., [5]) to define the notion of a solitary stratified theory. Note that unlike stratified logic programs, we use a strictly 3 We only list the relevant portion of the models here. 7 &lt; relation to distinguish the strata of our theories. <p> In Section 7.2, we observe that our minimization policy is equivalent to a particular instance of prioritized circumscription. Through simple syntactic renaming and by exploiting results from Lifschitz on computing circumscription (e.g., <ref> [6] </ref>), we show that under a consistency assumption, computing this prioritized circumscription results in the computation of our successor state axioms. This result establishes the correctness of our closed-form solution with respect to our nonmonotonic specification. <p> To simplify the computation of this circumscription, we transform our theory ram into a sim pler theory, fl ram . The circumscription is then computed with respect to fl ram by exploiting results of Lifschitz on computing circumscription (e.g., <ref> [6] </ref>, [7]). <p> Lemma 1 below establishes that our nonmonotonic specification of a solution to the frame and ramification problems can be captured by prioritized circumscription in our transformed theory. The results follow directly from the semantic definition of prioritized circumscription (e.g., <ref> [6] </ref>), and the definition of our prioritized model preference. 18 Lemma 1 Suppose is the theory defined in Definition 3 and fl is the theory defined in Definition 4. <p> Lifschitz proved some very nice results identifying when circumscription is first-order defin able, and when we can actually compute the axioms that result from a circumscription (e.g., <ref> [6] </ref>, [7]).
Reference: [7] <author> V. Lifschitz. </author> <title> Circumscription. In D.M. </title> <editor> Gabbay, C.J. Hogger, and J.A. Robinson, editors, </editor> <booktitle> The Handbook of Logic in AI and Logic Programming, </booktitle> <volume> volume 3, </volume> <pages> pages 298-352. </pages> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: To simplify the computation of this circumscription, we transform our theory ram into a sim pler theory, fl ram . The circumscription is then computed with respect to fl ram by exploiting results of Lifschitz on computing circumscription (e.g., [6], <ref> [7] </ref>). <p> Lifschitz proved some very nice results identifying when circumscription is first-order defin able, and when we can actually compute the axioms that result from a circumscription (e.g., [6], <ref> [7] </ref>).
Reference: [8] <author> F. Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1985-1991, </pages> <year> 1995. </year> <month> 22 </month>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem which advocate minimizing an explicitly represented notion of causality (e.g., <ref> [8] </ref>, [12], [3], [20], [2]). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions [1].
Reference: [9] <author> F. Lin and R. Reiter. </author> <title> State constraints revisited. </title> <journal> Journal of Logic and Computation, </journal> <volume> 4(5) </volume> <pages> 655-678, </pages> <year> 1994. </year> <note> Special Issue on Action and Processes. </note>
Reference-contexts: This solution is presented via an automatable procedure that compiles a set of situation calculus ramification constraints and effect axioms into a set of successor state axioms. To address the qualification problem, we appeal to existing results <ref> [9] </ref>, compiling our qualification constraints, necessary conditions for action and successor state axioms into action precondition axioms. A shortcoming in the justification of our closed-form solution is that it relies on an informal appeal to a completeness assumption. <p> In addition to the first-order language we use to axiomatize our domain, the situation calculus also consists of a set of foundational axioms, found which establish properties of our situations and situation tree <ref> [9] </ref>. Included in these axioms is definition of the binary relation &lt; which provides a partial ordering over situations in the subset of the situation tree that is P oss-ible. Finally, note that the situation calculus language we employ in this paper is restricted to primitive, determinate actions. <p> In this section, we propose a solution to the frame and ramification problems for what we argue to be a common class of ramification constraints. The qualification problem is discussed in a subsequent section. Lin and Reiter <ref> [9] </ref> proposed a definition for a solution to the frame and ramification problems in our situation calculus language using circumscription and minimal model semantics. This solution has its limitations. Sometimes there is no minimal model. <p> It remains to address the qualification problem. As previously observed the qualification constraints in T qual can further restrict those situations s in which an action a is P oss-ible. We propose to use Lin and Reiter's solution <ref> [9] </ref>, to determine a set of action precondition axioms T AP . It transforms the necessary conditions for actions, T nec and the qualification constraints, T qual into a set of action precondition axioms T AP . Following their results, we add one more step to our procedure. Step 8. <p> We show that under a consistency assumption, our successor state axioms (52) are solutions to the frame and ramification problems with respect to the specification. We also show that any solution with respect to our specification is also a solution with respect to Lin and Reiter's specification <ref> [9] </ref>. In Section 7.2, we observe that our minimization policy is equivalent to a particular instance of prioritized circumscription. <p> Like the minimization policies advocated by Lin and Shoham [10] and Lin and Reiter <ref> [9] </ref>, our policy minimizes ab F i (a; s) with P oss (a; s) and the truth status of fluents in the initial situation, F i (~x; s) remaining fixed. Fluents in the resulting situation, F i (do (a; s)) are allowed to vary. <p> In particular, we specify that under the prioritized minimization policy, the minimal models of our restricted theories prescribe solutions to the frame and ramification problem. Recall that found is the set of foundational axioms of the situation calculus <ref> [9] </ref>. <p> Then M captures a solution to the frame and ramification problem for . As observed in Section 4.1, Lin and Reiter previously defined a solution to the frame and ramification problem as the minimal models of our same under a similar non-prioritized minimization policy <ref> [9] </ref>. Interestingly, our minimization policy collapses to Lin and Reiter's policy when n = 1. Proposition 2 If M is a minimal model of , then M is also a minimal model of under Lin and Reiter's minimization policy, outlined in [9]. <p> of our same under a similar non-prioritized minimization policy <ref> [9] </ref>. Interestingly, our minimization policy collapses to Lin and Reiter's policy when n = 1. Proposition 2 If M is a minimal model of , then M is also a minimal model of under Lin and Reiter's minimization policy, outlined in [9]. Remark 1 If M captures a solution to the frame and ramification problem for as specified in Definition 3, then it also meets Lin and Reiter's general specification for a solution to the frame and ramification problem, as outline in [9]. <p> of under Lin and Reiter's minimization policy, outlined in <ref> [9] </ref>. Remark 1 If M captures a solution to the frame and ramification problem for as specified in Definition 3, then it also meets Lin and Reiter's general specification for a solution to the frame and ramification problem, as outline in [9]. To contrast our minimization policy to Lin and Reiter's, recall that their specification provides criteria for a solution to the frame and ramification problems. <p> Using similar rewriting tricks, we can apply these results to Reiter's successor state axiom solution to the frame problem to establish that in the case where there are no ramification constraints, our prioritized minimization policy, and also Lin and Reiter's minimization policy <ref> [9] </ref> both compute Reiter's successor state axioms, and hence his closed-form solution to the frame problem. These results confirm the syntactic form of Reiter's successor state axiom solution. Theorem 5 Suppose is the theory defined in Definition 3 and that T ram = fg. <p> The basic minimization policy we employed in our semantic justification is derivative of Lin and Shoham [10] and Lin and Reiter <ref> [9] </ref>, with the important addition of making the minimization prioritized. This enabled us to define a closed-form solution for our restricted theories.
Reference: [10] <author> F. Lin and Y. Shoham. </author> <title> Provably correct theories of action. </title> <journal> Journal of the ACM, </journal> <volume> 42(2) </volume> <pages> 293-320, </pages> <year> 1995. </year>
Reference-contexts: Like the minimization policies advocated by Lin and Shoham <ref> [10] </ref> and Lin and Reiter [9], our policy minimizes ab F i (a; s) with P oss (a; s) and the truth status of fluents in the initial situation, F i (~x; s) remaining fixed. Fluents in the resulting situation, F i (do (a; s)) are allowed to vary. <p> The basic minimization policy we employed in our semantic justification is derivative of Lin and Shoham <ref> [10] </ref> and Lin and Reiter [9], with the important addition of making the minimization prioritized. This enabled us to define a closed-form solution for our restricted theories.
Reference: [11] <author> J.W. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer Verlag, </publisher> <address> second edition, </address> <year> 1987. </year>
Reference-contexts: The Lloyd-Topor transformation <ref> [11] </ref> must then be applied, to convert the resultant theory into Prolog clausal form. Indeed, as an interesting aside, in the sections to follow we show that our successor state axioms are semantically characterized as the outcome of computing a particular prioritized circumscription.
Reference: [12] <author> N. McCain and H. Turner. </author> <title> A causal theory of ramifications and qualifications. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1978-1984, </pages> <year> 1995. </year>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem which advocate minimizing an explicitly represented notion of causality (e.g., [8], <ref> [12] </ref>, [3], [20], [2]). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions [1].
Reference: [13] <author> S. McIlraith. </author> <title> Towards a Formal Account of Diagnostic Problem Solving. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Toronto, Toronto, </institution> <address> Ontario, Canada, </address> <year> 1997. </year>
Reference-contexts: In this paper, we forgo preliminary discussion on transforming our original system state constraints into situation calculus state constraints (see <ref> [13] </ref> for such a discussion) and assume that our axiomatizer has given us a situation calculus domain axiomatization comprising the following sets of axioms T SC [ T ef [ T nec [ T UN A [ T S 0 ; (1) which we describe below. <p> To make the example more interesting, we assume that once water is entering the header, a siphon is created and water will only stop entering the header when the siphon is stopped. The system also contains lights and an alarm. (See <ref> [13] </ref> for a detailed description.) Notation: all formulae are universally quantified from the outside, unless stated otherwise. * T SC is a set of situation calculus state constraints. These incorporate the existing system state constraints, indexed where appropriate with a situation term, s. <p> Perfect models in logic programs have a prioritized circumscription semantics [16], thus the logic program produced from translation of our successor state axioms also has a perfect model semantics. See <ref> [13] </ref> for further details. The state constraints that play the role of ramification constraints with respect to our theory of actions are compiled into successor state axioms, one for every fluent in our theory. <p> The successor state axioms, T SSF defined in (67) are the successor state axioms Reiter iden tified as his solution to the frame problem [17]. This concludes the independent semantic justification for our closed-form solution. Proofs of the orems can be found in <ref> [13] </ref>. In what follows, we briefly discuss related work. 8 Related Work The dialect of the situation calculus language used in this paper originates with the Cognitive Robotics Group at the University of Toronto.
Reference: [14] <author> E. Pednault. </author> <title> Synthesizing plans that contain actions with context-dependent ef fects. </title> <journal> Computational Intelligence, </journal> <volume> 4 </volume> <pages> 356-372, </pages> <year> 1988. </year>
Reference-contexts: Our compilation approach to solving the ramification problem, and more specifically our appeal to a completeness assumption to generate explanation closure axioms is derivative of Reiter's [17], Schubert's [19] and Pednault's <ref> [14] </ref> approaches to solving the frame problem. The basic minimization policy we employed in our semantic justification is derivative of Lin and Shoham [10] and Lin and Reiter [9], with the important addition of making the minimization prioritized. This enabled us to define a closed-form solution for our restricted theories.
Reference: [15] <author> J. Pinto. </author> <title> Temporal Reasoning in the Situation Calculus. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Toronto, Toronto, </institution> <address> Ontario, Canada, </address> <month> February </month> <year> 1994. </year> <note> Also published as Technical Report, </note> <institution> Dept. of Computer Science, University of Toronto (KRR-TR-94-1), </institution> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: The intuition behind our solution to the frame and ramification problems the notion of interpreting our ramification constraints as definitional in nature, was influenced by research on the semantics of normal logic programs and deductive databases (e.g., [16]), and is related to preliminary work on this problem by Pinto <ref> [15] </ref>. Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem which advocate minimizing an explicitly represented notion of causality (e.g., [8], [12], [3], [20], [2]).
Reference: [16] <author> T.C. Przymusinski. </author> <title> On the declarative and procedural semantics of logic programs. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 167-205, </pages> <year> 1989. </year>
Reference-contexts: Indeed, as an interesting aside, in the sections to follow we show that our successor state axioms are semantically characterized as the outcome of computing a particular prioritized circumscription. Perfect models in logic programs have a prioritized circumscription semantics <ref> [16] </ref>, thus the logic program produced from translation of our successor state axioms also has a perfect model semantics. See [13] for further details. <p> This enabled us to define a closed-form solution for our restricted theories. The intuition behind our solution to the frame and ramification problems the notion of interpreting our ramification constraints as definitional in nature, was influenced by research on the semantics of normal logic programs and deductive databases (e.g., <ref> [16] </ref>), and is related to preliminary work on this problem by Pinto [15].
Reference: [17] <author> R. Reiter. </author> <title> The Frame Problem in the Situation Calculus: A Simple Solution (sometimes) and a completeness result for goal regression, </title> <booktitle> pages 359-380. Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of J. McCarthy. </booktitle> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1991. </year>
Reference-contexts: Finally, we show that when there are no ramifications, computing the circumscription results in the set of successor state axioms Reiter proposed as a solution to the frame problem <ref> [17] </ref>. This provides further justification for his solution to the frame problem. 2 The Situation Calculus The situation calculus language we employ to represent our domains is a sorted first-order language with equality. The language consists of sorts actions, situations, and domain. <p> The state constraints that play the role of ramification constraints with respect to our theory of actions are compiled into successor state axioms, one for every fluent in our theory. When state constraints are absent, as in the case of Reiter's solution to the frame problem <ref> [17] </ref>, successor state axioms provide a parsimonious representation for frame and effect axioms. In the presence of ramification constraints, the successor state axioms can, under certain conditions, grow exceedingly long. <p> Finally, we use these results to show that, in the case where there are no ramification constraints, computing the circumscription results in the successor state axioms defined by Reiter in his solution to the frame problem <ref> [17] </ref>. 7.1 Minimization Policy In this section we define a prioritized minimization policy and use it to specify what counts as a solution to the frame and ramification problems for solitary stratified theories. <p> The successor state axioms, T SSF defined in (67) are the successor state axioms Reiter iden tified as his solution to the frame problem <ref> [17] </ref>. This concludes the independent semantic justification for our closed-form solution. Proofs of the orems can be found in [13]. <p> Our compilation approach to solving the ramification problem, and more specifically our appeal to a completeness assumption to generate explanation closure axioms is derivative of Reiter's <ref> [17] </ref>, Schubert's [19] and Pednault's [14] approaches to solving the frame problem. The basic minimization policy we employed in our semantic justification is derivative of Lin and Shoham [10] and Lin and Reiter [9], with the important addition of making the minimization prioritized.
Reference: [18] <author> R. Reiter. </author> <title> Natural actions, concurrency and continuous time in the situation calculus. In L.C. </title> <editor> Aiello, J. Doyle, and S.C. Shapiro, editors, </editor> <booktitle> Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning (KR'96), </booktitle> <pages> pages 2-13, </pages> <address> Cambridge, Massachusetts, USA., November 1996. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Finally, note that the situation calculus language we employ in this paper is restricted to primitive, determinate actions. Our language does not include a representation of time, concurrency or complex actions, but we intend to extend our results to more expressive dialects of the situation calculus (e.g., <ref> [18] </ref>) in future work. 3 Domain Axiomatization: An Example Once again, our problem assumes an existing set of system state constraints and our task is to incorporate a representation of action, solving the frame, ramification and qualification problems.
Reference: [19] <author> L.K. Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyberg, R.P. Loui, and G.N. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defeasible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: Our compilation approach to solving the ramification problem, and more specifically our appeal to a completeness assumption to generate explanation closure axioms is derivative of Reiter's [17], Schubert's <ref> [19] </ref> and Pednault's [14] approaches to solving the frame problem. The basic minimization policy we employed in our semantic justification is derivative of Lin and Shoham [10] and Lin and Reiter [9], with the important addition of making the minimization prioritized.
Reference: [20] <author> M. Thielscher. </author> <title> Computing ramifications by postprocessing. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1994-2000, </pages> <year> 1995. </year>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem which advocate minimizing an explicitly represented notion of causality (e.g., [8], [12], [3], <ref> [20] </ref>, [2]). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions [1].
Reference: [21] <author> R. Waldinger. </author> <title> Achieving several goals simultaneously. </title> <editor> In E. Elcock and D. Michie, editors, </editor> <booktitle> Machine Intelligence 8, </booktitle> <pages> pages 94-136. </pages> <publisher> Ellis Horwood, Edinburgh, </publisher> <address> Scotland, </address> <year> 1977. </year> <month> 23 </month>
Reference-contexts: ix)) ^ (a 6= pump burn out ^ (:AB (P ump; s) _ a = pump f ix)) ^ (a = turn on pump _ (on (P ump; s) ^ a 6= turn of f pump))] _ (water entering header (s) ^ a 6= stop siphon)]: (54) 5 Regression (e.g., <ref> [21] </ref>) is a recursive rewriting procedure used here to reduce the nesting of the do function in situation terms.
References-found: 21

