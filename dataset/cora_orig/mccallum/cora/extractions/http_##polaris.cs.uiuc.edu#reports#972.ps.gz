URL: http://polaris.cs.uiuc.edu/reports/972.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: LIDEX Tutorial  
Author: Jose Eduardo Moreira Wilson Vicente Ruggiero Departamento de Engenharia de Eletricidade, Escola Politecnica da 
Note: This work was supported in part by the Interamerican Development Bank/University of S~ao Paulo project, and the U. S. Department of Energy under Grant No. DE-FG02-85ER25001. Jose E. Moreira is with Laboratorio de Sistemas Integraveis, and Wilson V. Ruggiero is with Laboratorio  
Date: February 1990  972  
Address: S~ao Paulo, Brasil  USA  
Affiliation: Universidade de  Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign,  de Sistemas Digitais  
Pubnum: CSRD Report No.  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jean-Loup Baer. </author> <title> Computer Systems Architecture. </title> <publisher> Computer Science Press, Inc, </publisher> <address> Rockville, Maryland, </address> <year> 1980. </year>
Reference-contexts: + 8 + 16). : R3 := RoR8 (R1, 1) + RoR (R2, 2) + R3; Functional units are very helpful for describing arbitrary combinational circuits, which execute functions not described but the usual operators. 7 A SIMD Computer We shall now describe a reasonably complex system, a SIMD computer <ref> [1, 6] </ref>. A SIMD (single-instruction multiple-data stream) computer has only one control-unit but many data-flows. Since there is only one control-unit, only one instruction stream is executed, but each instruction is simultaneously applied to as many different sets of data as there are data-flows in the computer.
Reference: [2] <author> W. J. Bouknight et al. </author> <title> Computer Structures: Principles and Examples, chapter The Illiac IV System. </title> <publisher> McGraw-Hill Book Company, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: The set of all PEs forms what is usually called array-unit. Besides the real data-flow part, each PE has its local memory and interconnection circuitry to other PEs. The word size is only 16 bits. The PEs are organized in a mesh topology similar to the Illiac IV <ref> [2] </ref> (in the Illiac IV there were 64 PEs). Each PE has four neighbors: north, south, east and west. The communication between PEs is through shared registers, each PE has four communication registers: north-register, south-register, east-register and west-register.
Reference: [3] <author> Melvin A. Breuer. </author> <title> Digital System Design Automation: Languages, Simulation & Data Base. </title> <publisher> Computer Science Press, Inc., </publisher> <address> Rockville, MD, </address> <year> 1975. </year>
Reference-contexts: 1 Introduction The hardware description language LIDEX is a powerful design and description tool for digital systems at the register-transfer level. The LIDEX language is an example of a register transfer language, and in the words of Breuer <ref> [3] </ref> "A Register Transfer Language is a set of symbols (alphabet), a set of rules to describe how to use the symbols in preparing RTL documents (syntax), and a set of meanings to relate each construct of an RTL document to the hardware structures of a digital system (semantics)." The design
Reference: [4] <author> Mansford E. Drummond, Jr. </author> <title> Evaluation and Measurement Techniques for Digital Computer Systems. </title> <publisher> Prentice-Hall, Inc, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1973. </year>
Reference: [5] <author> Fredrick J. Hill and Gerald R.Peterson. </author> <title> Digital Systems: Hardware Organization and Design, Second Edition. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1978. </year>
Reference: [6] <author> Kai Hwang and Faye A. Briggs. </author> <title> Computer Architecture and Parallel Processing. </title> <publisher> McGraw-Hill Book Company, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: + 8 + 16). : R3 := RoR8 (R1, 1) + RoR (R2, 2) + R3; Functional units are very helpful for describing arbitrary combinational circuits, which execute functions not described but the usual operators. 7 A SIMD Computer We shall now describe a reasonably complex system, a SIMD computer <ref> [1, 6] </ref>. A SIMD (single-instruction multiple-data stream) computer has only one control-unit but many data-flows. Since there is only one control-unit, only one instruction stream is executed, but each instruction is simultaneously applied to as many different sets of data as there are data-flows in the computer.
Reference: [7] <author> Glen G. Langdon, Jr. </author> <title> Computer Design. </title> <publisher> Computeach Press Inc., </publisher> <address> San Jose, </address> <year> 1982. </year>
Reference: [8] <author> Jose Eduardo Moreira and Wilson Vicente Ruggiero. </author> <title> LIDEX Reference Manual. </title> <type> Technical Report 973, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomputing Research and Development, Urbana, IL, </institution> <year> 1990. </year>
Reference-contexts: The systems presented here were relatively simple due to the didactic purposes of the document, and not to restrictions imposed by the implementation. Fairly complex systems can be described, and the interested reader should refer to the language reference manual <ref> [8] </ref> for further information. 41
Reference: [9] <author> Jose Eduardo Moreira and Wilson Vicente Ruggiero. </author> <title> LIDEX Simulation Environment User's Manual. </title> <type> Technical Report 974, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomputing Research and Development, Urbana, IL, </institution> <year> 1990. </year>
Reference: [10] <author> Jose Eduardo Moreira and Wilson Vicente Ruggiero. </author> <title> The LIDEX Approach. </title> <type> Technical Report 970, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomputing Research and Development, Urbana, IL, </institution> <year> 1990. </year> <month> 42 </month>
Reference-contexts: The reason for the restrictions above are beyond the scope of this tutorial and are dealt in another document <ref> [10] </ref>. In order to complete the description of the multiplier module, we must still declare its structure: registers and busses.
References-found: 10

