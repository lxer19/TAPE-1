URL: http://www.cs.uni-bonn.de/~tl/Publications/Documents/cremers95a.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~tl/Publications/cremers95a.html
Root-URL: http://cs.uni-bonn.de
Title: CHAPTER 1 Logic Program Modules for Interoperable Information Systems  
Author: Armin B. Cremers, Thomas Lemke, Mechthild Rohen 
Note: Contents  
Address: D-53117 Bonn, Germany  
Affiliation: Universitat Bonn, Institut fur Informatik III,  
Abstract-found: 0
Intro-found: 1
Reference: [BE91] <author> O.A. Bukhres and A.K. Elmagamird. </author> <title> Interoperability in multidatabase systems. </title> <journal> Encyclopedia of Microcomputers, </journal> <volume> 9, </volume> <month> October </month> <year> 1991. </year>
Reference: [Bre90] <author> Y. Breitbart. </author> <title> Multidatabase interoperability. </title> <booktitle> SIGMOD record, </booktitle> <volume> 19(3), </volume> <month> Septem-ber </month> <year> 1990. </year>
Reference: [Bro94] <author> A. Brogi, P. Mancarella, D. Pedreschi, and F. Turini. </author> <title> Modular logic programming. </title> <note> To appear in ACM Transactions on Programming Systems and Languages, </note> <year> 1994. </year>
Reference-contexts: In the last few years, several compositional semantics for logic programs have been studied theoretically and some approaches for the introduction of modules have been realized within Logic Programming systems. A recent overview over this work is given in <ref> [Bro94] </ref>. In [Roh91], we surveyed different approaches to the development of module concepts for logic programs and discussed the classification of our approach within this spectrum. 4. Building Interoperable Systems with Links 4.1.
Reference: [CDF + 86] <author> P. Coscia, S. Djennaoui, P. Franceschi, J. Kouloumdjian, G. Levi, L. Lei, G.H. Moll, I. de Saint Victor, G. Sardu, C. Simonelli, and L. Torre. </author> <title> The EPSILON knowledge base management system: Architecture and DB access optimization. </title> <booktitle> In Workshop on Integration of Logic Programming and Data Bases, </booktitle> <address> Venice, Italy, </address> <month> December </month> <year> 1986. </year>
Reference: [CKLP92] <author> A.B. Cremers, G. Kniesel, Th. Lemke, and L. Plumer. </author> <title> Intelligent databases and interoperability. </title> <editor> In F. Belli and F.J. Radermacher, editors, </editor> <booktitle> Industrial and Engineering Applications of Artificial Intelligence and Expert Systems (IEA/AIE 92), Paderborn, </booktitle> <address> Germany, </address> <month> June </month> <year> 1992. </year> <booktitle> Volume 604 of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Several layered architectures have been proposed for federated database systems (for an overview, see [SL90]). In the following, we abstract from a specific model and use a simplified three-level model that allows to discuss our proposals for future research (cf. <ref> [CKLP92] </ref>). When talking about interoperable systems, at least the following layers can be distinguished (fig. 1): Logic Program Modules 5 * The Information Source Layer consists of a variety of autonomous component systems using different data models and languages. These systems do not support cooperation.
Reference: [DS93] <author> S. Deiters and St. Schuchardt. </author> <title> EPSILON Handbuch. </title> <type> Internal report, </type> <institution> University of Bonn, </institution> <year> 1993. </year>
Reference: [EP90] <author> A.K. Elmagamird and C. Pu, </author> <title> editors. Special issue on heterogeneous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3), </volume> <month> September </month> <year> 1990. </year>
Reference: [HK89] <author> D.K. Hsiao and M.N. Kamel. </author> <title> Heterogeneous databases: Proliferations, issues and solutions. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 1(1), </volume> <month> March </month> <year> 1989. </year>
Reference: [HK92] <author> W. Hoge and G. Kniesel. </author> <title> EPSILON Kommunikationsmodell. </title> <type> Internal report, </type> <institution> University of Bonn, </institution> <year> 1992. </year>
Reference: [HM93] <author> J. Hammer and D. McLeod. </author> <title> An approach to resolving semantic heterogeneity in a federation of autonomous, heterogeneous database systems. </title> <type> Technical report, </type> <institution> University of Southern California, </institution> <address> Los Angeles, California, USA, </address> <year> 1993. </year>
Reference-contexts: Since future information systems need to support the dynamic integration of new information sources, long term research should emphasize the integration of interoperability in intelligent information systems. Besides these "usual" problems of defining a common semantics for heterogeneously represented information (e.g., <ref> [HM93] </ref>), interoperable deductive information 4 A. B. Cremers, Th. Lemke, M. Rohen systems have to provide ways to distribute deductions in a sound way, taking into account that the interoperating components may employ different logical systems.
Reference: [Hsi92] <author> D.K. Hsiao. </author> <title> Tutorial on federated databases and systems (two parts). </title> <journal> VLDB Journal, </journal> <volume> 1, </volume> <year> 1992. </year> <title> Logic Program Modules 19 </title>
Reference: [KC90] <author> G. Kniesel and A.B. Cremers. </author> <title> Cooperative distributed problem solving in EPSILON. </title> <booktitle> In Proceedings of the 7 th Annual ESPRIT Conference (ESPRIT 90), </booktitle> <address> Brussels, Belgium, 1990. </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference: [KRC91] <author> G. Kniesel, M. Rohen, </author> <title> and A.B. Cremers. A management system for distributed knowledge base applications. </title> <editor> In W. Brauer and D. Hernandez, editors, </editor> <booktitle> Verteilte Kunstliche Intelligenz und kooperatives Arbeiten. 4. Inter-nationaler GI-Kongre Wissensbasierte Systeme (GI 91), </booktitle> <address> Munich, Germany, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference: [KS91] <author> W. Kim and J. Seo. </author> <title> Classifying schematic and data heterogeneity in multi-database systems. </title> <journal> IEEE Computer, </journal> <volume> 24(12), </volume> <month> December </month> <year> 1991. </year>
Reference: [LA86] <author> W. Litwin and A. Abdellatif. </author> <title> Multidatabase interoperability. </title> <booktitle> IEEE Computer, </booktitle> <month> 19(12), December </month> <year> 1986. </year>
Reference: [Lei88] <author> L. Lei, G.-H. Moll, J. Kouloumdjian. </author> <title> Prolog-DBMS coupling: A hybrid approach, half interpreted, half compiled. </title> <editor> In C. Beeri, J.W. Schmidt, U. Dayal, editors, </editor> <booktitle> Third International Conference on Data and Knowledge Bases, </booktitle> <address> Jerusalem, Israel, June 1988. </address> <publisher> Morgan-Kaufmann. </publisher>
Reference: [Lei90] <author> L. Lei, G.-H. Moll, J. Kouloumdjian. </author> <title> A deductive database architecture based on partial evaluation. </title> <booktitle> SIGMOD record, </booktitle> <volume> 19(3), </volume> <month> September </month> <year> 1990. </year>
Reference: [Llo87] <author> J.W. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, Ger-many, </address> <note> second edition, </note> <year> 1987. </year>
Reference: [MP88] <author> P. Mancarella and D. Pedreschi. </author> <title> An algebra for logic programs. </title> <booktitle> In Fifth International Conference and Symposium on Logic Programming, </booktitle> <address> Seattle, USA, </address> <month> August </month> <year> 1988. </year> <note> Springer-Verlag. </note>
Reference-contexts: For a Logic Program Modules 13 queried theory, a link interpretation gives the preliminary queried program. A link interpretation is defined as a composition operation on logic programs which in turn can be put down to an algebraic union of sets of clauses as in <ref> [MP88] </ref>. The properties of the different link types are then considered in the definition of composition operations with link type specific composition regulations.
Reference: [O'K85] <author> R.A. O'Keefe. </author> <title> Towards an algebra for constructing logic programs. </title> <booktitle> In IEEE Symposium on Logic Programming, </booktitle> <address> Boston, USA, </address> <month> July </month> <year> 1985. </year> <journal> IEEE Computer Society. </journal>
Reference: [Ram91] <author> S. Ram, </author> <title> editor. </title> <journal> Special issue on heterogeneous distributed database systems. IEEE Computer, </journal> <volume> 24(12), </volume> <month> December </month> <year> 1991. </year>
Reference: [RFR93] <author> G. Reichwein, J.L. Fiadeiro, and M. Rohen. </author> <title> Declarative semantics of interop-erable data and knowledge bases. </title> <booktitle> In International Conference on Intelligent & Cooperative Information Systems (ICIS 93), </booktitle> <address> Rotterdam, The Netherlands, </address> <month> May </month> <year> 1993. </year>
Reference: [RHK + 90] <author> M. Rohen, K.-U. Hoffgen, G. Kniesel, R. Schluter, and R. Waschkowski. </author> <title> Implementation of the distributed EPSILON prototype. </title> <booktitle> EPSILON deliverable C-10, </booktitle> <year> 1990. </year>
Reference: [Roh91] <author> M. Rohen. </author> <title> Semantik komponierter modularer logischer Programme mit inte-grierten objektorientierten Vererbungsmechanismen. </title> <type> PhD thesis, </type> <institution> University of Dortmund, Department of Computer Science, </institution> <year> 1991. </year> <note> Research report 393. </note>
Reference-contexts: These sets of clauses are the starting point for the definition of a declarative semantics for queried programs in arbitrary inheritance contexts. The algebraic definition of a declarative semantics for logic programs which are composed by the introduced types of inheritance links is described in detail in <ref> [Roh91] </ref>. Another way of introducing a formal semantics for links has been taken in the framework of category theory ([RFR93]). Based on a formalization of theories as institutions, heterogeneity of representation formalisms is captured by mixed institutions. <p> In the last few years, several compositional semantics for logic programs have been studied theoretically and some approaches for the introduction of modules have been realized within Logic Programming systems. A recent overview over this work is given in [Bro94]. In <ref> [Roh91] </ref>, we surveyed different approaches to the development of module concepts for logic programs and discussed the classification of our approach within this spectrum. 4. Building Interoperable Systems with Links 4.1. An Overview Regarding the three-layer-model sketched in chapter 2.1, interoperability has to be modeled at the federation layer. <p> T 2 when closed links are used, they extend the imported data when open links are used. Note that the declarative semantics of theories which use these "data base theories" is defined by the algebraic operations sketched in chapter 3.3 and more precisely defined in <ref> [Roh91] </ref>. This formalism can be adopted to the case of external data bases without changes. In an extension of the standard EPSILON links, an import list may be attached to each link specifying the predicates to be inherited by that link ([RHK + 90]).
Reference: [She91] <editor> A.P. Sheth, editor. </editor> <booktitle> Special issue on semantic issues in multidatabase systems. SIGMOD record, </booktitle> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference: [SL90] <author> A.P. Sheth and J.A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3), </volume> <month> September </month> <year> 1990. </year>
Reference-contexts: Distribution, heterogeneity and autonomy are the most important dimensions of Federated Database Systems (FDBS). Following the taxonomy of <ref> [SL90] </ref>, FDBSs may be categorized by the way they control the access to their component DBMSs: In tightly coupled FDBSs the access to component DBMSs is controlled by the federated system (using predefined integrated schemata), whereas there is no central control enforced in a loosely coupled FDBS. <p> Several layered architectures have been proposed for federated database systems (for an overview, see <ref> [SL90] </ref>). In the following, we abstract from a specific model and use a simplified three-level model that allows to discuss our proposals for future research (cf. [CKLP92]).
References-found: 26

