URL: http://www.cs.berkeley.edu/~jfc/papers/93/road/computer-jour/final.ps
Refering-URL: http://www.cs.berkeley.edu/~jfc/
Root-URL: http://www.cs.berkeley.edu
Title: Computing Roadmaps of General Semi-Algebraic Sets  
Author: John Canny 
Date: November 1992, revised May 1993  
Note: Received  
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division, University of California,  
Abstract: In this paper we study the problem of determining whether two points lie in the same connected component of a semi-algebraic set S. Although we are mostly concerned with sets S k , our algorithm can also decide if points in an arbitrary set S R k can be joined by a semi-algebraic path, for any real closed field R. Our algorithm computes a one-dimensional semi-algebraic subset &lt;(S) of S (actually of an embedding of S in a space ^ R k for a certain real extension field ^ R of the given field R). &lt;(S) is called the roadmap of S. The basis of this work is the roadmap algorithm described in [3], [4] which worked only for compact, regularly stratified sets. We measure the complexity of the formula describing the set S by the number of polynomials n, their maximum degree d, the maximum length of their coefficients in bits c, and the number of variables k. With respect to the above measures, the bit complexity of our new algorithm is (n k log n)d O(k 2 ) (c log n) (1+*) randomized, or (n k log n)d O(k 4 ) c (1+*) deterministic, for any * &gt; 0. Note that the combinatorial complexity (complexity in terms of n) in both cases is within a polylog factor of the worst-case lower bound for the number of connected components (n k ). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Bochnak, M. Coste, and M-F. Roy. Geometrie algebrique reelle. </author> <title> Number 12 in Ergebnisse der mathe-matik 3. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: Infinitesimals We will make extensive use of extensions of real fields by infinitesimals. This process is simple to implement computationally, and has been well formalized in <ref> [1] </ref> using the real spectrum. An elementary description of the use of infinitesimal elements is given in [5] in an algorithm for the existential theory of the reals. One disadvantage of working over an infinitesimal extension field is that basic field operations become very expensive. <p> All sign-invariant sets are unions of strata. Note that this is a different stratification than k which is the stratification by sign of k . By the semi-algebraic Sard theorem <ref> [1] </ref>, the map has only finitely many critical values when restricted to any of these strata. Let r 0 be the largest critical value, then for all r &gt; r 0 , S " D r has the same homotopy type (hence number of connected components) as S. <p> By Sard's theorem, we know that the set of non-regular q values has measure zero in V . In fact the semi-algebraic version of Sard's theorem <ref> [1] </ref> tells us that the set of bad values is semi-algebraic. Since it is a measure zero set, it must be contained in a algebraic proper subset Z V . The i th coordinate of q is either a i * or a i ffi.
Reference: [2] <author> M. Ben-Or, D. Kozen, and J. Reif. </author> <title> The complexity of elementary algebra and geometry. </title> <journal> J. Comp. and Sys. Sci., </journal> <volume> 32 </volume> <pages> 251-264, </pages> <year> 1986. </year>
Reference-contexts: 1. INTRODUCTION Good sequential and parallel algorithms have been available for some time for deciding the theory of the reals [10], [11], [3], and for real quantifier elimination <ref> [2] </ref>, [14], [21]. Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components. <p> This idea was persued by Kozen and Yap [18], who gave a simple formula for deciding adjacency between cells, and made use of a parallel algorithm for constructing the cell decomposition <ref> [2] </ref> (this paper contains errors that were fixed in [8], see also [6]). Their algorithm was fully parallel, and had single-exponential parallel running time.
Reference: [3] <author> J.F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> M.I.T. Press, </publisher> <address> Cambridge, </address> <year> 1988. </year>
Reference-contexts: 1. INTRODUCTION Good sequential and parallel algorithms have been available for some time for deciding the theory of the reals [10], [11], <ref> [3] </ref>, and for real quantifier elimination [2], [14], [21]. Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components. <p> So these two cell decomposition algorithms run in sequential time double exponential in the dimension, with the latter taking single exponential time in parallel. Neither looks practical in the near future even in low dimensions. A different approach was taken in <ref> [3] </ref> and [4], based on the construction of a one-dimensional skeleton of the set. This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers [3] and [4], see also [24], made use of regular stratification [13], rather than a cell decomposition, which allowed a very coarse <p> Neither looks practical in the near future even in low dimensions. A different approach was taken in <ref> [3] </ref> and [4], based on the construction of a one-dimensional skeleton of the set. This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers [3] and [4], see also [24], made use of regular stratification [13], rather than a cell decomposition, which allowed a very coarse (and efficient) partition of the set. The complexity of finding paths in [3] was (n k log n)d O (k 2 ) c 2 , and since the lower <p> This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers <ref> [3] </ref> and [4], see also [24], made use of regular stratification [13], rather than a cell decomposition, which allowed a very coarse (and efficient) partition of the set. The complexity of finding paths in [3] was (n k log n)d O (k 2 ) c 2 , and since the lower bound on the number of components is ((nd) k ), this algorithm is nearly optimal in terms of n. <p> This is important for applications in geometric modelling and robotics where d and k are small and fixed, but n, representing the number of surfaces, may be large. The disadvantage of the algorithm in <ref> [3] </ref>, which we will henceforth refer to as the roadmap algorithm, is that it required the semi-algebraic set to be compact and in general position. <p> The new method performs a direct reduction from the general case to the compact, regularly stratified case, so that the algorithm of <ref> [3] </ref> can be applied. This reduction increases the length of the formula by a constant factor, and its coefficient size by a factor of k log (dn). Each polynomial in the input formula is replaced by polynomials which differ in their constant coefficients by various infinitesimals. <p> There remains one sticky point with regard to the boolean formula B. There is a certain cost associated with evaluating B, given the signs of the f i 's. This time is clearly linear for the first evaluation. The algorithm of <ref> [3] </ref> requires frequent re-evaluation of B when a single f i changes sign. Our complexity bounds will be valid if the time to re-evaluate B when a single f i changes sign is O (log n). <p> This correctly gives the sign for sufficiently large r. 4. REDUCTION TO A REGULAR STRATI FICATION As was shown in <ref> [3] </ref> one can obtain a regular stratification by taking the sign-invariant sets of a system of polynomials in sufficiently general position. In the present case, the given f i will not be in general position. In [3] a fixed perturbation was applied to their constant coefficients to achieve this. <p> REDUCTION TO A REGULAR STRATI FICATION As was shown in <ref> [3] </ref> one can obtain a regular stratification by taking the sign-invariant sets of a system of polynomials in sufficiently general position. In the present case, the given f i will not be in general position. In [3] a fixed perturbation was applied to their constant coefficients to achieve this. Now consider the following The Computer Journal, Vol. 36, No. 5, 1993 9004 John Canny symbolic perturbation of the F = (f 1 ; : : : ; f n ) : k ! n . <p> Define F *a = F + *a (3) where a 2 n + is supposed constant for the time being, and * is a single infinitesimal. As shown in <ref> [3] </ref> for almost all choices of the constant coefficients *a, the map F *a is transversal to the natural stratification by sign ( ) n of n , where = f ; f0g; + g. <p> Since the preimage is also a closed, bounded set, and therefore compact, the algorithm of <ref> [3] </ref> can be applied directly to compute its connected components. This takes us a long way toward computing the connected components of a given semi-algebraic set, and leaves us only with the task of determining adjacencies between connected components of sign-invariant sets. For now we must show Theorem 4.2. <p> Since G 1 (( sep ) n ) is a com pact set which is regularly stratified as G 1 (( sep ) n ), we can apply the algorithm of <ref> [3] </ref>, modified to work over arbitrary real coefficient fields as described in [5]. All that remains to determine connectivity of a given semi-algebraic set is to determine the adjacencies between connected components of sign-invariant sets. This we deal with in the next section. 5. <p> The Computer Journal, Vol. 36, No. 5, 1993 9008 John Canny * Return B 0 _ B 1 , which defines a regularly stratified, compact semi-algebraic set whose connected compo nents correspond one-to-one with those of S. 6. COMPLEXITY A full analysis of the algorithm is given in <ref> [3] </ref>, but the main ideas are simple enough to describe here. The main facts we need are the following: 1. The algorithm of [3], modified to use the BKR lemma as described in [5] makes all its branching decisions based on the signs of query polynomials whose degree in the coefficients <p> COMPLEXITY A full analysis of the algorithm is given in <ref> [3] </ref>, but the main ideas are simple enough to describe here. The main facts we need are the following: 1. The algorithm of [3], modified to use the BKR lemma as described in [5] makes all its branching decisions based on the signs of query polynomials whose degree in the coefficients of the input polynomials is d O (k 2 ) . <p> Deterministic Version Making these observations allows us to determine the running time for the deterministic version of the algorithm, which uses infinitesimal a i 's. The algorithm of <ref> [3] </ref> must also use generic linear projection maps : k ! 2 . Because the algorithm recurses on dimension, there need to be k choices of such maps. So all the 's can be specified with 2k 2 real values. For the deterministic version, we define them as infinitesimals. <p> So all the 's can be specified with 2k 2 real values. For the deterministic version, we define them as infinitesimals. Overall, we have the sequence a 1 a n ffi 1 * 1 The bounds in <ref> [3] </ref> and [5] show that the roadmap algo rithm for a particular input requires O (n k log n)d O (k 2 ) evaluations of query polynomials. The basic query is determining the signs of the polynomials f i at certain points along an algebraic curve. <p> As explained in step 3. of the complexity summary above, each query may depend on k 2 of the a i 's and possibly all of the maps , involving a total of O (k 2 ) infinitesimals. From <ref> [3] </ref>, we know the degree of the queries is d O (k 2 ) . So each such query, as a polynomial in those infinitesimals, may have d O (k 4 ) coefficients. Therefore they require d O (k 4 ) time to evaluate. <p> The Computer Journal, Vol. 36, No. 5, 1993 9010 John Canny The perturbation method reduces the calculation of roadmaps, hence connected components, of general semi-algebraic sets to the case of compact, regularly stratified sets. This case was treated earlier in <ref> [3] </ref>. The resulting algorithm for general sets has a running time of (n k log n)d O (k 2 ) (c log n) (1+*) random ized, or (n k log n)d O (k 4 ) c (1+*) deterministic.
Reference: [4] <author> J.F. Canny. </author> <title> Constructing roadmaps of semi-algebraic sets I: Completeness. </title> <journal> Artificial Intelligence, </journal> <volume> 37 </volume> <pages> 203-222, </pages> <year> 1988. </year>
Reference-contexts: So these two cell decomposition algorithms run in sequential time double exponential in the dimension, with the latter taking single exponential time in parallel. Neither looks practical in the near future even in low dimensions. A different approach was taken in [3] and <ref> [4] </ref>, based on the construction of a one-dimensional skeleton of the set. This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers [3] and [4], see also [24], made use of regular stratification [13], rather than a cell decomposition, which allowed a very coarse (and efficient) <p> Neither looks practical in the near future even in low dimensions. A different approach was taken in [3] and <ref> [4] </ref>, based on the construction of a one-dimensional skeleton of the set. This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers [3] and [4], see also [24], made use of regular stratification [13], rather than a cell decomposition, which allowed a very coarse (and efficient) partition of the set.
Reference: [5] <author> J.F. Canny. </author> <title> Some algebraic and geometric computations in PSPACE. </title> <booktitle> In ACM Symposium on Theory of Computing, </booktitle> <pages> pages 460-467, </pages> <year> 1988. </year>
Reference-contexts: Infinitesimals We will make extensive use of extensions of real fields by infinitesimals. This process is simple to implement computationally, and has been well formalized in [1] using the real spectrum. An elementary description of the use of infinitesimal elements is given in <ref> [5] </ref> in an algorithm for the existential theory of the reals. One disadvantage of working over an infinitesimal extension field is that basic field operations become very expensive. Usually, an element of (*; ffi) is represented as a polynomial in * and ffi. <p> This idea may be seen as a special case of the "Transfer Principle" [23]. 3. REDUCTION FROM AN UNBOUNDED TO A BOUNDED SET This is a rather standard reduction which is used in a number of places, see for example <ref> [5] </ref>. First we show that the unbounded set S k is homotopy equivalent to a bounded set. For this purpose, let (x 1 ; : : : ; x k ) = x 2 k be a polynomial radius function. <p> Since G 1 (( sep ) n ) is a com pact set which is regularly stratified as G 1 (( sep ) n ), we can apply the algorithm of [3], modified to work over arbitrary real coefficient fields as described in <ref> [5] </ref>. All that remains to determine connectivity of a given semi-algebraic set is to determine the adjacencies between connected components of sign-invariant sets. This we deal with in the next section. 5. <p> COMPLEXITY A full analysis of the algorithm is given in [3], but the main ideas are simple enough to describe here. The main facts we need are the following: 1. The algorithm of [3], modified to use the BKR lemma as described in <ref> [5] </ref> makes all its branching decisions based on the signs of query polynomials whose degree in the coefficients of the input polynomials is d O (k 2 ) . This bound is obtained by inspecting the resultant matrices used in calculating projections, and the 2-d point ordering algorithm. 2. <p> So all the 's can be specified with 2k 2 real values. For the deterministic version, we define them as infinitesimals. Overall, we have the sequence a 1 a n ffi 1 * 1 The bounds in [3] and <ref> [5] </ref> show that the roadmap algo rithm for a particular input requires O (n k log n)d O (k 2 ) evaluations of query polynomials. The basic query is determining the signs of the polynomials f i at certain points along an algebraic curve.
Reference: [6] <author> J.F. Canny. </author> <title> Improved algorithms for sign determination and existential quantifier elimination. </title> <journal> In Computer Journal (this volume), 1993. The Computer Journal, </journal> <volume> Vol. 36, No. 5, </volume> <booktitle> 1993 Computing Roadmaps of General Semi-Algebraic Sets 9011 </booktitle>
Reference-contexts: This idea was persued by Kozen and Yap [18], who gave a simple formula for deciding adjacency between cells, and made use of a parallel algorithm for constructing the cell decomposition [2] (this paper contains errors that were fixed in [8], see also <ref> [6] </ref>). Their algorithm was fully parallel, and had single-exponential parallel running time. From Kozen and Yap's results it follows that all geometric properties of semialgebraic sets are at hand, because a semi-algebraic set can be represented as a regular cell complex. <p> COMPUTING WITH INFINITESIMALS This section addresses the practical problems of computing over an infinitesimal extension of the real numbers. In the algorithms of [14], [21], [12], <ref> [6] </ref> and this The Computer Journal, Vol. 36, No. 5, 1993 Computing Roadmaps of General Semi-Algebraic Sets 9009 paper, various singularities are dealt with by perturbing the input polynomials with infinitesimals. <p> The resulting algorithm for general sets has a running time of (n k log n)d O (k 2 ) (c log n) (1+*) random ized, or (n k log n)d O (k 4 ) c (1+*) deterministic. Similar algorithms for deciding non-emptiness only of semi-algebraic sets are presented in <ref> [6] </ref>. 9. APPENDIX: DEPTH COMPRESSION OF BOOLEAN FORMULAE Let B (b 1 ; : : : ; b n ) be an boolean function that is defined by an input formula B F .
Reference: [7] <author> J.F. Canny, </author> <title> D.Y. Grigor'ev and N.N. Vorobjov. Finding Connected Components of a Semialgebraic Set in Subexponential Time. Applicable Algebra in Engineering, </title> <journal> Communication and Computing, </journal> <volume> 2 </volume> <pages> 217-239, </pages> <year> 1992. </year>
Reference-contexts: However, the double exponents of both algorithms appears to make them impractical for robotics or geometric modelling applications. The problem of The Computer Journal, Vol. 36, No. 5, 1993 9002 John Canny actually finding the connected components in exponential time, i.e. giving quantifier-free formulae for them, was solved in <ref> [7] </ref>. See also [17]. In [9] roadmaps are defined using arbitrary, not necessarily generic, projection maps.
Reference: [8] <author> N. Fitchas, A. Galligo, and J. </author> <type> Morgenstern. </type> <institution> Al-gorithmes rapides en sequential et en parallele pour l'elimination des quantificateur en geometrie elementaire. Sem. Structures Algebriques Ordonnees, </institution> <year> 1987. </year>
Reference-contexts: This idea was persued by Kozen and Yap [18], who gave a simple formula for deciding adjacency between cells, and made use of a parallel algorithm for constructing the cell decomposition [2] (this paper contains errors that were fixed in <ref> [8] </ref>, see also [6]). Their algorithm was fully parallel, and had single-exponential parallel running time. From Kozen and Yap's results it follows that all geometric properties of semialgebraic sets are at hand, because a semi-algebraic set can be represented as a regular cell complex.
Reference: [9] <author> L. Gournay and J-J. Risler. </author> <title> Construction of roadmaps in semialgebraic sets. </title> <type> manuscript, </type> <year> 1991. </year>
Reference-contexts: The problem of The Computer Journal, Vol. 36, No. 5, 1993 9002 John Canny actually finding the connected components in exponential time, i.e. giving quantifier-free formulae for them, was solved in [7]. See also [17]. In <ref> [9] </ref> roadmaps are defined using arbitrary, not necessarily generic, projection maps.
Reference: [10] <author> D.Y. Grigor'ev. </author> <title> Complexity of deciding Tarski algebra. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 5 </volume> <pages> 65-108, </pages> <year> 1988. </year>
Reference-contexts: 1. INTRODUCTION Good sequential and parallel algorithms have been available for some time for deciding the theory of the reals <ref> [10] </ref>, [11], [3], and for real quantifier elimination [2], [14], [21]. Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components.
Reference: [11] <author> D.Y. Grigor'ev and N.N. Vorobjov. </author> <title> Solving systems of polynomial equations in subexponential time. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 5 </volume> <pages> 37-64, </pages> <year> 1988. </year>
Reference-contexts: 1. INTRODUCTION Good sequential and parallel algorithms have been available for some time for deciding the theory of the reals [10], <ref> [11] </ref>, [3], and for real quantifier elimination [2], [14], [21]. Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components.
Reference: [12] <author> D.Y. Grigor'ev and N.N. Vorobjov. </author> <title> Counting connected components of a semialgebraic set in subexpo-nential time. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 133-186, </pages> <year> 1992. </year>
Reference-contexts: The disadvantage of the algorithm in [3], which we will henceforth refer to as the roadmap algorithm, is that it required the semi-algebraic set to be compact and in general position. Later Grigor'ev and Vorobjov <ref> [12] </ref> gave a (dn) O (k 19 ) algorithm for finding paths in arbitrary semi-algebraic sets, and the Franco-Argentine school in [15] and [16] gave a solution for the general case with a running time of (dn) k O (1) . <p> COMPUTING WITH INFINITESIMALS This section addresses the practical problems of computing over an infinitesimal extension of the real numbers. In the algorithms of [14], [21], <ref> [12] </ref>, [6] and this The Computer Journal, Vol. 36, No. 5, 1993 Computing Roadmaps of General Semi-Algebraic Sets 9009 paper, various singularities are dealt with by perturbing the input polynomials with infinitesimals.
Reference: [13] <author> C.G. Gibson, K. Wirthmuller, A.A. Du Plessis, and E.J.N. Looijenga. </author> <title> Topological Stability of Smooth Mappings. </title> <booktitle> Number 552 in Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: A different approach was taken in [3] and [4], based on the construction of a one-dimensional skeleton of the set. This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers [3] and [4], see also [24], made use of regular stratification <ref> [13] </ref>, rather than a cell decomposition, which allowed a very coarse (and efficient) partition of the set. <p> Stratifications Definition 2.4. A stratification S of a set S k is a partition of S into a finite number of disjoint subsets S i called strata such that each S i is a manifold. A regular stratification satisfies some additional conditions which are well described in <ref> [13] </ref>. There are several basic ways to construct regular stratifications. We will only need two: * Taking products. If C and D are regular stratifications of the spaces C and D respectively, then the product C fi D is a regular stratification of C fi D.
Reference: [14] <author> J. Heintz, M.F. Roy, and P. Solerno. Complexite du principe de Tarski-Seidenberg. </author> <title> Bull. </title> <journal> Soc. Math. France, </journal> <volume> 118 </volume> <pages> 101-126, </pages> <year> 1990. </year>
Reference-contexts: 1. INTRODUCTION Good sequential and parallel algorithms have been available for some time for deciding the theory of the reals [10], [11], [3], and for real quantifier elimination [2], <ref> [14] </ref>, [21]. Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components. <p> COMPUTING WITH INFINITESIMALS This section addresses the practical problems of computing over an infinitesimal extension of the real numbers. In the algorithms of <ref> [14] </ref>, [21], [12], [6] and this The Computer Journal, Vol. 36, No. 5, 1993 Computing Roadmaps of General Semi-Algebraic Sets 9009 paper, various singularities are dealt with by perturbing the input polynomials with infinitesimals.
Reference: [15] <author> J. Heintz, M.F. Roy, and P. Solerno. </author> <title> Single-exponential path finding in semialgebraic sets I: The case of a smooth bounded hypersurface. In AAECC-90, </title> <publisher> Springer LNCS 508, </publisher> <year> 1990. </year>
Reference-contexts: Later Grigor'ev and Vorobjov [12] gave a (dn) O (k 19 ) algorithm for finding paths in arbitrary semi-algebraic sets, and the Franco-Argentine school in <ref> [15] </ref> and [16] gave a solution for the general case with a running time of (dn) k O (1) . However, the double exponents of both algorithms appears to make them impractical for robotics or geometric modelling applications.
Reference: [16] <author> J. Heintz, M.F. Roy, and P. Solerno. </author> <title> Single-exponential path finding in semialgebraic sets II: The general case. </title> <booktitle> In Proc. 60th Birthday Conf. for S. Abhyankar, </booktitle> <year> 1990. </year>
Reference-contexts: Later Grigor'ev and Vorobjov [12] gave a (dn) O (k 19 ) algorithm for finding paths in arbitrary semi-algebraic sets, and the Franco-Argentine school in [15] and <ref> [16] </ref> gave a solution for the general case with a running time of (dn) k O (1) . However, the double exponents of both algorithms appears to make them impractical for robotics or geometric modelling applications.
Reference: [17] <author> J. Heintz, M.F. Roy, and P. Solerno. </author> <title> Description des composantes connexes d'un ensemble semi-algebrique en temps simplement exponentiel. </title> <institution> Compte-Rendus Acad. Sci. Paris, 313 Serie I, </institution> <year> 1991. </year>
Reference-contexts: The problem of The Computer Journal, Vol. 36, No. 5, 1993 9002 John Canny actually finding the connected components in exponential time, i.e. giving quantifier-free formulae for them, was solved in [7]. See also <ref> [17] </ref>. In [9] roadmaps are defined using arbitrary, not necessarily generic, projection maps.
Reference: [18] <author> D. Kozen and C. Yap. </author> <title> Algebraic cell decomposition in NC. </title> <booktitle> In IEEE Conference on Foundations of Computer Science, </booktitle> <pages> pages 515-521, </pages> <year> 1985. </year>
Reference-contexts: The first algorithm for connectivity was described by Schwartz and Sharir [22] who observed that a cylindrical algebraic cell decomposition provides a convenient substrate from which to extract connectivity information. This idea was persued by Kozen and Yap <ref> [18] </ref>, who gave a simple formula for deciding adjacency between cells, and made use of a parallel algorithm for constructing the cell decomposition [2] (this paper contains errors that were fixed in [8], see also [6]). Their algorithm was fully parallel, and had single-exponential parallel running time.
Reference: [19] <author> Paul Pedersen. </author> <title> Multivariate sturm theory. </title> <booktitle> In Proc. </booktitle> <address> AAECC-9, New Orleans, </address> <publisher> Springer LNCS 539. </publisher> <year> 1991. </year>
Reference: [20] <author> P. Pedersen, M.-F. Roy, and A. Szpirglas. </author> <title> Counting real zeros in the multivariate case. </title> <booktitle> In Proc. </booktitle> <address> MEGA-92, </address> <year> 1992. </year> <note> to appear in `Computational Algebraic Geometry', </note> <editor> edited by F. Eyssette, and A. Galligo, </editor> <publisher> Birkhauser. </publisher>
Reference: [21] <author> J. Renegar. </author> <title> On the computational complexity and geometry of the first-order theory of the reals, parts I, II and III. </title> <journal> In Journal of Symbolic Computation, </journal> <volume> 13(3) </volume> <pages> 255-352, </pages> <year> 1992. </year>
Reference-contexts: 1. INTRODUCTION Good sequential and parallel algorithms have been available for some time for deciding the theory of the reals [10], [11], [3], and for real quantifier elimination [2], [14], <ref> [21] </ref>. Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components. <p> COMPUTING WITH INFINITESIMALS This section addresses the practical problems of computing over an infinitesimal extension of the real numbers. In the algorithms of [14], <ref> [21] </ref>, [12], [6] and this The Computer Journal, Vol. 36, No. 5, 1993 Computing Roadmaps of General Semi-Algebraic Sets 9009 paper, various singularities are dealt with by perturbing the input polynomials with infinitesimals.
Reference: [22] <author> J.T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem, II: General techniques for computing topological properties of real algebraic manifolds. </title> <booktitle> Advances in Applied Mathematics, </booktitle> <volume> 4 </volume> <pages> 298-351, </pages> <year> 1983. </year>
Reference-contexts: Geometrically, these problems amount to deciding the emptiness or non-emptiness of semi-algebraic sets and their projections. Recently, attention has turned to computing geometric properties of semi-algebraic sets, such as counting the number of connected components. The first algorithm for connectivity was described by Schwartz and Sharir <ref> [22] </ref> who observed that a cylindrical algebraic cell decomposition provides a convenient substrate from which to extract connectivity information.
Reference: [23] <author> A. Tarski. </author> <title> A Decision Method for Elementary Algebra and Geometry. </title> <institution> University of California Press, Berkeley, </institution> <year> 1948. </year>
Reference-contexts: Some of our proofs will be phrased as though the infinitesimals were real numbers. This saves us having to use awkward definitions of compactness, connectivity and regularity for arbitrary real closed fields. This idea may be seen as a special case of the "Transfer Principle" <ref> [23] </ref>. 3. REDUCTION FROM AN UNBOUNDED TO A BOUNDED SET This is a rather standard reduction which is used in a number of places, see for example [5]. First we show that the unbounded set S k is homotopy equivalent to a bounded set.
Reference: [24] <author> D. Trotman. </author> <title> On Canny's roadmap algorithm: Orien-teering in semialgebraic sets. </title> <type> Technical report, </type> <institution> Univ. Aix-Marseille, </institution> <year> 1989. </year> <journal> The Computer Journal, </journal> <volume> Vol. 36, No. 5, </volume> <year> 1993 </year>
Reference-contexts: A different approach was taken in [3] and [4], based on the construction of a one-dimensional skeleton of the set. This construction, called a roadmap, gave much lower (single exponential) complexity. The original roadmap papers [3] and [4], see also <ref> [24] </ref>, made use of regular stratification [13], rather than a cell decomposition, which allowed a very coarse (and efficient) partition of the set.
References-found: 24

