URL: http://www.cs.purdue.edu/homes/jing/bits.ps
Refering-URL: http://www.cs.purdue.edu/homes/jing/mobile.html
Root-URL: http://www.cs.purdue.edu
Email: jjing@gte.com  ake@cs.purdue.edu  helal@mcc.com  ralonso@sarnoff.com  
Title: Bit-Sequences: An Adaptive Cache Invalidation Method in Mobile Client/Server Environments  
Author: Jin Jing Ahmed Elmagarmid Abdelsalam (Sumi) Helal Rafael Alonso David 
Address: 40 Sylvan Road Waltham, MA 02254  West Lafayette, IN 47907 USA  3500 West Balcones Center Dr. Austin, Texas 78759-6509  CN 5300 Princeton, NJ 08543  
Affiliation: GTE Laboratories, Inc.  Department of Computer Sciences Purdue University  MCC  Sarnoff Research Center  
Abstract: In this paper, we present Bit-Sequences (BS), an adaptive cache invalidation algorithm for client/server mobile environments. The algorithm uses adaptable mechanisms to adjust the size of the invalidation report to optimize the use of a limited communication bandwidth while retaining the effectiveness of cache invalidation. The proposed BS algorithm is especially suited for dissemination-based (or "server-push" based) nomadic information service applications. The critical aspect of our algorithm is its self-adaptability and effectiveness, regardless of the connectivity behavior of the mobile clients. The performance of BS is analyzed through a simulation study that compares BS's effectiveness with that of a hypothetical optimal cache invalidation algorithm.
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Sas user's guide. SAS Insititute Inc., Cary, NC, </institution> <year> 1989. </year>
Reference: [2] <author> S. Acharya, R. Alonso, M. Franklin, and S. Zdonik. </author> <title> Broadcast disks: Data management for asymmetric communications environments. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <address> San Jose, California, </address> <year> 1995. </year>
Reference-contexts: In both cases, only obsolete caches would be invalidated. Recently, the notion of using a repetitive broadcast medium in wireless environments has been investigated. The property of a data broadcast program which provides improved performance for non-uniformly accessed data was investigated in <ref> [2] </ref>. The authors in [3] also addressed the impact of update dissemination on the performance of broadcast disks. The scheme for update dissemination in [3] considers only continuous connectivity of clients in the broadcast disk environments.
Reference: [3] <author> S. Acharya, M. Franklin, and S. Zdonik. </author> <title> Disseminating updates on broadcast disks. </title> <booktitle> In Proceedings of VLDB, </booktitle> <address> Bombay, India, </address> <year> 1996. </year>
Reference-contexts: In both cases, only obsolete caches would be invalidated. Recently, the notion of using a repetitive broadcast medium in wireless environments has been investigated. The property of a data broadcast program which provides improved performance for non-uniformly accessed data was investigated in [2]. The authors in <ref> [3] </ref> also addressed the impact of update dissemination on the performance of broadcast disks. The scheme for update dissemination in [3] considers only continuous connectivity of clients in the broadcast disk environments. The mobile computing group at Rutgers has investigated techniques for indexing broadcast data [12, 13]. <p> The property of a data broadcast program which provides improved performance for non-uniformly accessed data was investigated in [2]. The authors in <ref> [3] </ref> also addressed the impact of update dissemination on the performance of broadcast disks. The scheme for update dissemination in [3] considers only continuous connectivity of clients in the broadcast disk environments. The mobile computing group at Rutgers has investigated techniques for indexing broadcast data [12, 13].
Reference: [4] <author> B. R. Badrinath, A. Acharya, and T. Imielinski. </author> <title> Structuring distributed algorithms for mobile hosts. </title> <booktitle> In Proc. of the 14th International Conference on Distributed Computing Systems, </booktitle> <address> Poznan, Poland, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Section 5 discusses related research. Concluding remarks are offered in Section 6. 2 The Bit-Sequences Algorithm 2.1 Caching Management Model A mobile computing environment consists of two distinct sets of entities: mobile hosts and fixed hosts <ref> [10, 6, 4] </ref>. Some of the fixed hosts, called Mobile Support Stations (MSSs), are augmented with a wireless interface in order to communicate with the mobile hosts, which are located within a radio coverage area called a cell.
Reference: [5] <author> D. Barbara and T. Imielinski. </author> <title> Adaptive stateless caching in mobile environments: An example. </title> <type> Technical Report MITL-TR-60-93, </type> <institution> Matsushita Information Technology Laboratory, </institution> <year> 1993. </year>
Reference-contexts: To support long client disconnections, the idea of adapting the window size of the TS algorithm was discussed in <ref> [5, 7] </ref>. The approach in [5, 7] adjusts the window size for each data item according to changes in update rates and reference frequencies for the item. This is different from our proposed approach which does not need the feedback information about the access patterns from clients. <p> To support long client disconnections, the idea of adapting the window size of the TS algorithm was discussed in <ref> [5, 7] </ref>. The approach in [5, 7] adjusts the window size for each data item according to changes in update rates and reference frequencies for the item. This is different from our proposed approach which does not need the feedback information about the access patterns from clients. <p> In the adaptive TS approach, a client must know the exact window size for each item before using an invalidation report. These sizes must therefore be contained in each report for the client to be able to correctly invalidate its caches. 1 However, no detailed algorithm was presented in <ref> [5, 7] </ref> to show 1 Consistency problems might arise if the window size for a data item is not included in an invalidation report. 19 how the window size information is included in the invalidation report.
Reference: [6] <author> D. Barbara and T. Imielinski. Sleepers and workaholics: </author> <title> Caching strategies for mobile environments. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 1-12, </pages> <year> 1994. </year>
Reference-contexts: Also, the conventional client/server interactions cannot scale to massive numbers of clients due to narrow bandwidth wireless links. In <ref> [6] </ref>, Barbara and Imielinski provided an alternate approach to the problem of invalidating caches in mobile environments. In this approach, a server periodically broadcasts an invalidation report in which the changed data items are indicated. <p> In general, a large report can provide more information and is more effective for cache invalidation. But a large report also implies a long latency for clients while checking the report, given a limited broadcast bandwidth. The Broadcasting Timestamp (TS) <ref> [6] </ref> is a good example of an algorithm that limits the size of the report by broadcasting the names and timestamps only for the data items updated during a window of w seconds (with w being a fixed parameter). <p> Section 5 discusses related research. Concluding remarks are offered in Section 6. 2 The Bit-Sequences Algorithm 2.1 Caching Management Model A mobile computing environment consists of two distinct sets of entities: mobile hosts and fixed hosts <ref> [10, 6, 4] </ref>. Some of the fixed hosts, called Mobile Support Stations (MSSs), are augmented with a wireless interface in order to communicate with the mobile hosts, which are located within a radio coverage area called a cell. <p> In this section, we will discuss two types of bit mapping schemas that define two different effectiveness requirements. We will also analyze the report size for each mapping scheme. Update Window Scheme (Dynamic Bit Mapping): Like the TS algorithm described in <ref> [6] </ref>, bits in the report can only represent data items that have been updated within the preceding w second window. <p> The bit mapping in a report can also indicate only the last f updated data items. In this case, the effectiveness of the report is similar to that in the SIG algorithm in <ref> [6] </ref> (see the analysis included in Appendix A). The analysis shows that the SIG algorithm is effective only if the number of updated data items does not exceed f , an algorithm parameter). <p> For a large k, the latter is about half of the former. The report size in the SIG algorithm can be expressed, as in <ref> [6] </ref>, as 6g (f + 1)(ln (1=ffi) + ln (N )), where N is the number of data items in the database, g is a parameter used to specify the bound 2 g of the probability of failing to diagnose an invalid cache, ffi is a parameter used to specify the <p> Typically, g and ffi are set to 16 and 10 7 , respectively <ref> [6] </ref>. <p> To minimize latency, the first segment is broadcasted more frequently than the rest. An adaptive scheme of broadcasting data was described in [11]. The adaptability is achieved by varying the frequency of the broadcast of individual data items according to the frequency of requests. In <ref> [6] </ref>, issues of cache invalidation using a broadcast medium in a wireless mobile environment were first introduced. The SIG, TS, and AT algorithms that use periodically broadcast invalidation reports were proposed for client caching invalidation in the environment.
Reference: [7] <author> D. Barbara and T. Imielinski. Sleepers and workaholics: </author> <title> Caching strategies for mobile environments (extended version). MOBIDATA: An Interactive journal of mobile computing, </title> <type> 1(1), </type> <month> Nov. </month> <year> 1994. </year> <note> Available through the WWW, http://rags.rutgers.edu/journal/cover.html. </note>
Reference-contexts: To support long client disconnections, the idea of adapting the window size of the TS algorithm was discussed in <ref> [5, 7] </ref>. The approach in [5, 7] adjusts the window size for each data item according to changes in update rates and reference frequencies for the item. This is different from our proposed approach which does not need the feedback information about the access patterns from clients. <p> To support long client disconnections, the idea of adapting the window size of the TS algorithm was discussed in <ref> [5, 7] </ref>. The approach in [5, 7] adjusts the window size for each data item according to changes in update rates and reference frequencies for the item. This is different from our proposed approach which does not need the feedback information about the access patterns from clients. <p> In the adaptive TS approach, a client must know the exact window size for each item before using an invalidation report. These sizes must therefore be contained in each report for the client to be able to correctly invalidate its caches. 1 However, no detailed algorithm was presented in <ref> [5, 7] </ref> to show 1 Consistency problems might arise if the window size for a data item is not included in an invalidation report. 19 how the window size information is included in the invalidation report.
Reference: [8] <author> M. J. Franklin. </author> <title> Caching and memory management in client-server database systems. </title> <type> Ph.D. Thesis, </type> <institution> 1993. University of Wisconsin-Madison. </institution>
Reference-contexts: A comprehensive discussion 16 17 18 and comparison of caching algorithms in the conventional client-server architecture can be found in <ref> [8] </ref>. The issue of false invalidation does not exist in this architecture because, as shown in the algorithms discussed in [8], either the server can directly invalidate client caches or clients can query the server for the validation of their caches. In both cases, only obsolete caches would be invalidated. <p> A comprehensive discussion 16 17 18 and comparison of caching algorithms in the conventional client-server architecture can be found in <ref> [8] </ref>. The issue of false invalidation does not exist in this architecture because, as shown in the algorithms discussed in [8], either the server can directly invalidate client caches or clients can query the server for the validation of their caches. In both cases, only obsolete caches would be invalidated. Recently, the notion of using a repetitive broadcast medium in wireless environments has been investigated.
Reference: [9] <author> Y. Huang, P. Sistla, and O. Wolfson. </author> <title> Data replication for mobile computers. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <address> Minneapolis, Minessota, </address> <year> 1994. </year>
Reference-contexts: The approach in [17] uses an up-link message to check the status of cached data items other than the most recently updated data items. By comparison, the hybrid BS scheme uses the static BS algorithm in the broadcast report to check the status of these items. The work in <ref> [9] </ref> discusses the data allocation issues in mobile environments. The algorithms proposed in [9] assume that servers are stateful since they know about the state of the clients' caches. <p> By comparison, the hybrid BS scheme uses the static BS algorithm in the broadcast report to check the status of these items. The work in <ref> [9] </ref> discusses the data allocation issues in mobile environments. The algorithms proposed in [9] assume that servers are stateful since they know about the state of the clients' caches. The algorithms use this information to decide whether a client can hold a cache copy or not to minimize the communication cost in wireless channels.
Reference: [10] <author> T. Imielinski and B. R. Badrinath. </author> <title> Wireless mobile computing : Challenges in data management. </title> <journal> Communication of ACM, </journal> <volume> 37(10), </volume> <year> 1994. </year>
Reference-contexts: Section 5 discusses related research. Concluding remarks are offered in Section 6. 2 The Bit-Sequences Algorithm 2.1 Caching Management Model A mobile computing environment consists of two distinct sets of entities: mobile hosts and fixed hosts <ref> [10, 6, 4] </ref>. Some of the fixed hosts, called Mobile Support Stations (MSSs), are augmented with a wireless interface in order to communicate with the mobile hosts, which are located within a radio coverage area called a cell. <p> This situation is of interest because information services are likely to be one of the typical applications in mobile computing environments <ref> [10] </ref>. 13 Parameter UNIFORM HOTCOLD HotUpdateBounds first 20% of DB ColdUpdateBounds all DB remainder of DB HotUpdateProb - 0.8 HotQueryBounds first 20% of DB ColdQueryBounds all DB remainder of DB HotQueryProb - 0.8 Table 2: Access parameter settings 4.2 Experiment 1: BS vs.
Reference: [11] <author> T. Imielinski and S. Vishwanath. </author> <title> Adaptive wireless information systems. </title> <booktitle> In Proceedings of SIGDBS (Special Interest Group in DataBase Systems) Conference, </booktitle> <address> Tokyo, Japan, </address> <year> 1994. </year>
Reference-contexts: This approach, called pyramid broadcast, splits an object into a number of segments of increasing sizes. To minimize latency, the first segment is broadcasted more frequently than the rest. An adaptive scheme of broadcasting data was described in <ref> [11] </ref>. The adaptability is achieved by varying the frequency of the broadcast of individual data items according to the frequency of requests. In [6], issues of cache invalidation using a broadcast medium in a wireless mobile environment were first introduced.
Reference: [12] <author> T. Imielinski, S. Vishwanath, and B. R. Badrinath. </author> <title> Energy efficient indexing on air. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <address> Minneapolis, Minessota, </address> <year> 1994. </year>
Reference-contexts: The authors in [3] also addressed the impact of update dissemination on the performance of broadcast disks. The scheme for update dissemination in [3] considers only continuous connectivity of clients in the broadcast disk environments. The mobile computing group at Rutgers has investigated techniques for indexing broadcast data <ref> [12, 13] </ref>. The main motivation of this work has been to investigate ways to reduce battery power consumption at the clients for the access of broadcast data. In our approach, the invalidation report is organized in a bit indexing structure in order to save the space of broadcast channels.
Reference: [13] <author> T. Imielinski, S. Vishwanath, and B. R. Badrinath. </author> <title> Power efficient filtering of data on the air. </title> <booktitle> In Proceedings of the International Conference of EDBT (Extending DataBase Technology), </booktitle> <year> 1994. </year>
Reference-contexts: The authors in [3] also addressed the impact of update dissemination on the performance of broadcast disks. The scheme for update dissemination in [3] considers only continuous connectivity of clients in the broadcast disk environments. The mobile computing group at Rutgers has investigated techniques for indexing broadcast data <ref> [12, 13] </ref>. The main motivation of this work has been to investigate ways to reduce battery power consumption at the clients for the access of broadcast data. In our approach, the invalidation report is organized in a bit indexing structure in order to save the space of broadcast channels.
Reference: [14] <author> J. Jing. </author> <title> Data consistency management in wireless client-server information systems. </title> <type> Ph.D. Thesis, </type> <institution> 1996. Purdyue University. </institution>
Reference-contexts: The hybrid BS scheme with the coarse granularity technique has been studied and analyzed in <ref> [14] </ref>. The hybrid BS scheme enables the static BS scheme to cover more data items without increasing the size of the report and to be effective for all clients regardless of their disconnect times. A similar hybrid approach has also been described in [17]. <p> For this reason, we will not compare this approach with our approach in this paper. The hybrid BS scheme with the coarse granularity technique have been studied and analyzed in <ref> [14] </ref>. A simialr hybrid approach has also been described in [17]. The approach in [17] uses an up-link message to check the status of cached data items other than the most recently updated data items.
Reference: [15] <author> H. Schwetman. </author> <note> Csim user's guide (version 16). </note> <institution> MCC Corporation, </institution> <year> 1992. </year>
Reference-contexts: Such a simplification is appropriate to an assessment of the 12 effect of false invalidation on the cache hit ratio of algorithms. All simulations were performed on Sun Sparc Workstations running SunOS and using a CSIM simulation package <ref> [15] </ref>. 4.1 Parameters and Settings Our model can specify the item access pattern of workloads, thus allowing different client locality types and different server update patterns to be easily specified. For each client, two (possibly overlapping) database regions can be specified.
Reference: [16] <author> S. Vishwanath and T. Imielinski. </author> <title> Pyramid broadcasting for video on demand service. </title> <booktitle> In Proceedings of the IEEE Multimedia Computing and Networks Conference, </booktitle> <address> San Jose, California, </address> <year> 1995. </year>
Reference-contexts: In our approach, the invalidation report is organized in a bit indexing structure in order to save the space of broadcast channels. An approach that broadcasts data for video on demand has been addressed in <ref> [16] </ref>. This approach, called pyramid broadcast, splits an object into a number of segments of increasing sizes. To minimize latency, the first segment is broadcasted more frequently than the rest. An adaptive scheme of broadcasting data was described in [11].
Reference: [17] <author> K. Wu, P. Yu, and M. Chen. </author> <title> Energy-efficient caching for wireless mobile computing. </title> <booktitle> In Pro--ceedings of the IEEE Data Engineering Conference, </booktitle> <year> 1996. </year>
Reference-contexts: The hybrid BS scheme enables the static BS scheme to cover more data items without increasing the size of the report and to be effective for all clients regardless of their disconnect times. A similar hybrid approach has also been described in <ref> [17] </ref>. The approach in [17] uses an up-link message to check the status of cached data items other than the recently updated data items. In contrast, the 11 hybrid BS scheme uses the static BS scheme in the broadcast report to check the status of these items. <p> The hybrid BS scheme enables the static BS scheme to cover more data items without increasing the size of the report and to be effective for all clients regardless of their disconnect times. A similar hybrid approach has also been described in <ref> [17] </ref>. The approach in [17] uses an up-link message to check the status of cached data items other than the recently updated data items. In contrast, the 11 hybrid BS scheme uses the static BS scheme in the broadcast report to check the status of these items. <p> For this reason, we will not compare this approach with our approach in this paper. The hybrid BS scheme with the coarse granularity technique have been studied and analyzed in [14]. A simialr hybrid approach has also been described in <ref> [17] </ref>. The approach in [17] uses an up-link message to check the status of cached data items other than the most recently updated data items. By comparison, the hybrid BS scheme uses the static BS algorithm in the broadcast report to check the status of these items. <p> For this reason, we will not compare this approach with our approach in this paper. The hybrid BS scheme with the coarse granularity technique have been studied and analyzed in [14]. A simialr hybrid approach has also been described in <ref> [17] </ref>. The approach in [17] uses an up-link message to check the status of cached data items other than the most recently updated data items. By comparison, the hybrid BS scheme uses the static BS algorithm in the broadcast report to check the status of these items.
References-found: 17

