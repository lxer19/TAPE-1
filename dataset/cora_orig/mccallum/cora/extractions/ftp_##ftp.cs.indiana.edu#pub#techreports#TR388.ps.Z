URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR388.ps.Z
Refering-URL: http://www.cs.indiana.edu/ftp/techreports/index.html
Root-URL: http://www.cs.indiana.edu
Title: Higher Order Logic  
Author: Daniel Leivant 
Note: Contents  
Abstract-found: 0
Intro-found: 1
Reference: [ Abiteboul and Beeri, 1988 ] <author> S. Abiteboul and C. Beeri. </author> <title> On the power of languages for manipulating complex objects. </title> <note> Research Report 846, IN RIA, </note> <year> 1988. </year>
Reference-contexts: (o) consists of the finite subsets of U o ; and U [o 1 :A 1 ;:::o k :A k ] consits of the k-tuples of pairs, [u 1 : A 1 : : : u k : A k ], where u i 2 U o i . 166 <ref> [ Abiteboul and Beeri, 1988; Kuper and Vardi, 1984 ] </ref> .
Reference: [ Abiteboul and Kanellakis, 1990 ] <author> S. Abiteboul and P. Kanellakis. </author> <title> Data base theory column: Query languages for complex object databases. </title> <journal> SIGACT News, </journal> 21/2:9-18, 1990. 
Reference-contexts: Let us use the same identifiers extension to finite order logic of the algebraic development of first order logic, due to Tarski [ Henkin et al., 1971 ] . A survey of these and related advances can be found in <ref> [ Abiteboul and Kanellakis, 1990 ] </ref> . A seminal paper on computability for higher order objects is [ Dahlhaus and Makowsky, 1987 ] . 167 For more details and applications of this mapping see, for example, [ Girard et al., 1989 ] and [ Leivant, 1990b ] .

Reference: [ Abiteboul et al., 1992 ] <author> S. Abiteboul, M. Vardi, and V. Vianu. </author> <title> Fixpoint logics, relational machines, and computational complexity. </title> <booktitle> In Proceedings of the Seventh IEEE Conference on Structure in Computational Complexity, </booktitle> <year> 1992. </year>
Reference-contexts: The role played by order on finite structures has been greatly clarified recently, see e.g. <ref> [ Abiteboul et al., 1992 ] </ref> . 176 The theorem stated here is Fagin's. Jones and Selman proved a similar and closely related result, that first order spectra are precisely the sets computable in NTime (2 cn ), where the input is given in binary. <p> The queries definable in first order logic extended with are exactly the ones computable in polynomial space [ Abiteboul and Vianu, 1989 ] . Other, nondeterministic, variants of fixpoints yield a characterization of the queries computable in exponential time, as well as additional characterization of poly-space and of NP <ref> [ Abiteboul et al., 1992 ] </ref> . 177 Another method of logical characterization for computational complexity classes uses proof theory, that is, the deductive machinery of logic rather than the descriptive machinery outlined above.
Reference: [ Aczel and Mendler, 1989 ] <author> P. Aczel and N. Mendler. </author> <title> A final coalgebra theorem. </title> <editor> In D. H. Pitt, D. E. Rydeheard, P. Dybner, A. M. Pitts, and A. Poigne, editors, </editor> <booktitle> Proceedings of the 1989 conference on Category Theory and Computer Science, Volume 389 of LNCS, </booktitle> <pages> pages 357-365. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989. </year>
Reference: [ Aczel, 1977 ] <author> P. Aczel. </author> <title> An introduction to inductive definitions. </title> <editor> In J. Bar-wise, editor, </editor> <booktitle> Handbook of Mathematical Logic, </booktitle> <pages> pages 739-782. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1977. </year>
Reference-contexts: For example, the reflexive and transitive closure of a binary relation ae is F 1 , where F = df Rx; y (x = y _ 9z R (x; z) ^ ae (z; y)). For another example, the truth of first order 26 A short informative survey is <ref> [ Aczel, 1977 ] </ref> .
Reference: [ Aho and Ullman, 1979 ] <author> A. V. Aho and J. D. Ullman. </author> <title> Universality of data retrieval languages. </title> <booktitle> In Sixth Symposium on Principles of Programming Languages, </booktitle> <pages> pages 110-117, </pages> <year> 1979. </year>
Reference-contexts: 89 In database theory the interest in extending first order logic with a fixpoint operator [ Chandra and Harel, 1982 ] evolved from the expressive limitations of first order logic, e.g. the impossibility to define (uniformly over all structures) the transitive closure of a binary relation, even over finite structures <ref> [ Aho and Ullman, 1979 ] </ref> . <p> In this framework one is drawn immediately to higher order formulas, because even simple queries, such as the transitive closure, are not first order definable <ref> [ Aho and Ullman, 1979 ] </ref> . 174 Using higher order constructs indeed yields a surprising array of descriptive characterizations of computational complexity, in particular for structures that are given with an order. 175 Most of the results here fall into two organizing principles: syntactic classes of higher order formulas, and
Reference: [ Ajtai and Gurevich, 1987 ] <author> M. Ajtai and Y. Gurevich. </author> <title> Monotone versus positive. </title> <journal> Journal of the ACM, </journal> <volume> 34 </volume> <pages> 1004-1015, </pages> <year> 1987. </year>
Reference-contexts: (R). 32 If an occurrence of in ' is in the scope of n negations and in the negative scope of i implications, then is positive in ' if n+i is even. 33 However, a first order operator may be monotone over all finite structures while failing to be positive <ref> [ Ajtai and Gurevich, 1987 ] </ref> . The restriction to positive operators is therefore less natural in the context of Computer Science [ Livchak, 1983; Gurevich, 1984 ] .
Reference: [ Ajtai, 1979 ] <author> M. Ajtai. </author> <title> Isomorphism and second order equivalence. </title> <journal> Annals of Mathematical Logic, </journal> <volume> 16 </volume> <pages> 181-203, </pages> <year> 1979. </year>
Reference-contexts: Let 7 Theorem 2.3.1 shows that a particular countable structure, that of the natural numbers, is characterized up to isomorphism by its second order theory. A natural question is whether every countable structure is so characterized. <ref> [ Ajtai, 1979 ] </ref> (reported in [ Shapiro, 1991, Section 6.6.4 ] , who attributes the result also to Magidor) shows that this is so for structures defined within the Godel-constructible universe (i.e. assuming V = L), but that the general claim is independent of ZFC. 8 I.e., n = df
Reference: [ Amiot, 1990 ] <author> G. Amiot. </author> <title> The undecidability of the second order predicate unification problem. </title> <journal> Archive for Mathematical Logic, </journal> <volume> 30 </volume> <pages> 193-199, </pages> <year> 1990. </year>
Reference-contexts: The unification problem is decidable for first order logic [ Robinson, 1965 ] , but not for second order logic <ref> [ Amiot, 1990 ] </ref> . 68 8.
Reference: [ Andrews et al., 1984 ] <author> P. B. Andrews, D. Miller, E. Cohen, and F. Pfenning. </author> <title> Automating higher-order logic. </title> <journal> Contemporary Mathematics, </journal> <volume> 29 </volume> <pages> 169-192, </pages> <year> 1984. </year>
Reference-contexts: Paulson's isabelle [ Paulson, 1989; Paulson, 1990 ] , Andrews's TPS <ref> [ Andrews et al., 1984 ] </ref> , and Miller's - Prolog [ Nadathur and Miller, 1988; Nadathur and Miller, 1990; Miller, 1993 ] . 3.7 Truth definitions revisited It is rewarding to relate finite order logic to the issue of truth definitions mentioned in Section 2.6 above. <p> Moreover, these formalisms satisfy important syntactic properties 46 which permit a natural adaptation to these formalisms of methods of automated theorem proving <ref> [ Andrews et al., 1984 ] </ref> . The expressive power of second order logic stems from the standard interpretation of the second order quantifiers as ranging over all relations and functions over the structure in hand. <p> Initially, research in automated theorem proving enforced the primacy of first order logic, for which methods such as resolution and paramod-ulation are complete. However, the work of Andrews and his students has shown that automated theorem proving can be naturally extended to higher order logic <ref> [ Andrews et al., 1984; Miller, 1983 ] </ref> . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] , resolution [ Andrews, 1971 ] , Skolemization
Reference: [ Andrews, 1965 ] <author> P. B. Andrews. </author> <title> A Transfinite Type Theory with Type Variables. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1965. </year>
Reference-contexts: For example, let ! consist of all objects of finite type. Then (!; !) is the type of binary relations between objects of finite types. A formalism of transfinite types is developed and discussed in <ref> [ Andrews, 1965 ] </ref> (see also [ Montague, 1965a ] ). 3.5 Functional types An alternative to relational types of the kind discussed above are functional types. <p> similar method can be used to show that there is a (k + 1) order formula o such that for every k order sentence ', o [#'] is valid iff ' is valid. 43 The construction of truth definitions by using ever higher types can be continued to transifinite types: <ref> [ Andrews, 1965 ] </ref> shows how to give a truth definition over N for all finite order formulas, using quantification over objects of transifinite type. 4 Proof theory 4.1 Basic formalisms By Godel's Completeness Theorem, provability in first order logic captures precisely validity.
Reference: [ Andrews, 1971 ] <author> P. B. Andrews. </author> <title> Resolution in type theory. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 36 </volume> <pages> 414-432, </pages> <year> 1971. </year>
Reference-contexts: extended to higher order logic [ Andrews et al., 1984; Miller, 1983 ] . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] , resolution <ref> [ Andrews, 1971 ] </ref> , Skolemization [ Miller, 1987 ] , unification [ Huet, 1975 ] , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was
Reference: [ Andrews, 1972a ] <author> P. B. Andrews. </author> <title> General models and extensionality. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 15 </volume> <pages> 395-397, </pages> <year> 1972. </year>
Reference-contexts: For detailed surveys on partially-ordered quantifiers see [ Mundici, 1985 ] and [ Krynicki and Mostowski, 1994 ] . 77 See [ Henkin, 1950 ] . A correction to Henkin's treatment is in <ref> [ Andrews, 1972a ] </ref> . 78 [a 1 : : : a k =x 1 : : : x k ]j is the assignment that differs from j only in assigning a 1 : : : a k to x 1 : : : x k , respectively.
Reference: [ Andrews, 1972b ] <author> P. B. Andrews. </author> <title> General models, descriptions, and choice in type theory. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 37 </volume> <pages> 385-394, </pages> <year> 1972. </year>
Reference-contexts: Note that Theorem 5.6.2 refers to validity in all structures. When a particular structure is considered, for example N , then 3.7.1 shows that Choice over arithmetic relations sometimes defines (hyperarithmetical) non-arithmetical relations (see e.g. [ Rogers, 1967 ] ), so choice fails in this Henkin-structure. <ref> [ Andrews, 1972b ] </ref> shows that choice for any given type is not a theorem of full finite order logic, even if the latter is augmented by the Axiom Schema of Description.
Reference: [ Andrews, 1986 ] <author> P. B. Andrews. </author> <title> An Introduction to Mathematical Logic and Type Theory: To Truth through Proof. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: definable pairing function for structure-elements, as is the case for N +;fi and its expansions, then each vector ~ff and ~x can be replaced by a single variable (with appropriate changes in the quantifier-free matrix). 38 See e.g. [ Kleene, 1952 ] . 39 A detailed textbook exposition is in <ref> [ Andrews, 1986 ] </ref> . 18 Daniel Leivant A (o 1 :::o k ) = df P ( i=1 For type o we have Q 0 i=1 A i = f ()g (a singleton), so A o is the two element set f;; f ()g g, whose elements can be identified <p> at a considerable cost to expository naturalness. 122 In the introduction to Principia they claim to have reduced mathematical axioms to logical principles, saying: `What were formerly taken, tacitly or explicitly, as axioms, are either unnecessary or demonstrable' ( [ Whitehead and Russell, 1929, p. v ] , quoted in <ref> [ Andrews, 1986 ] </ref> ).
Reference: [ Barendregt, 1992 ] <author> H. Barendregt. </author> <title> Lambda calculi with types. </title> <editor> In S. Am-bramsky, D. M. Gabbay, and T. S. E. Maibaum, editors, </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> Volume 2. </volume> <publisher> Oxford University Press, </publisher> <year> 1992. </year>
Reference-contexts: This is a definable construct in the Theory of Construction, just as the fixpoint operator is definable in second order logic. The interested reader will find a thorough survey of types in programming languages in [ Mitchell, 1990 ] , and of typed lambda calculi in <ref> [ Barendregt, 1992 ] </ref> . The development of higher order data has not been confined to programming languages.
Reference: [ Barwise and Moschovakis, 1978 ] <author> J. Barwise and Y. Moschovakis. </author> <title> Global inductive definability. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 43 </volume> <pages> 521-534, </pages> <year> 1978. </year>
Reference-contexts: The first version is the one studied in [ Moschovakis, 1974 ] . An attractive related language, Lower Predicate Calculus with Reflection (LPCR), is presented in [ Moschovakis, 1993 ] . A completeness theorem for an interesting fragment of the language is in <ref> [ Barwise and Moschovakis, 1978 ] </ref> , a result improved recently by Katherine St. John (1993, in preparation). 44 Daniel Leivant to validity of FO formulas. <p> In relation to collections of first order structures the notion was used by Tarski's [ Tarski, 1952 ] (Definition 1) and in <ref> [ Barwise and Moschovakis, 1978 ] </ref> . The phrase data base queries is from [ Chandra and Harel, 1980 ] . Other terms for it include global relation [ Gurevich, 1987 ] . generalized relations, [ Rougemont, 1987 ] (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ <p> Tarski's [ Tarski, 1952 ] (Definition 1) and in <ref> [ Barwise and Moschovakis, 1978 ] </ref> . The phrase data base queries is from [ Chandra and Harel, 1980 ] . Other terms for it include global relation [ Gurevich, 1987 ] . generalized relations, [ Rougemont, 1987 ] (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ Blass and Gurevich, 1986 ] , uniformly defined relations, [ Rougemont, 1987 ] , predicate, [ Leivant, 1987 ] , and predicate over oracles [ Cai and Furst, 1987 ] . 72 Daniel Leivant include all the variables free in ')
Reference: [ Barwise, 1969 ] <author> J. Barwise. </author> <title> Applications of strict 1 1 predicates to infinitary logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 34 </volume> <pages> 409-423, </pages> <year> 1969. </year> <note> 76 Daniel Leivant </note>
Reference-contexts: Whereas every 1 1 set in the analytical hierarchy is definable by some formula of the first form, the sets defined by formulas of the second form are all recursively enumerable [ Kreisel, 1968 ] ! The latter formulas were dubbed strict- 1 1 in <ref> [ Barwise, 1969; Barwise, 1975 ] </ref> , and computational in [ Leivant, 1987 ] . The term `computational' is motivated by the fact that each such formula defines, uniformly for all V -structures, the operational semantics of a certain finite state machine.
Reference: [ Barwise, 1972 ] <author> J. Barwise. </author> <title> The Hanf number of second order logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 37 </volume> <pages> 588-594, </pages> <year> 1972. </year>
Reference-contexts: The proof of the Downward Skolem-Lowenheim property for first order logic gives F () = + @ 0 . For second order logic even the function F () = df the 'th inaccessible cardinal (or even the 'th measurable cardinal, assuming these cardinals exist) will not do <ref> [ Barwise, 1972, Theorem 2.1 ] </ref> . 6. First order logic satisfies Beth's definability property, 65 but second (and higher) order logic does not. A logic L has the definability property if each implicitly definable relation is explicitly definable, in the following sense. <p> Thus, every sentence with a model of size h (L) must have models of arbitrarily large size. Barwise <ref> [ Barwise, 1972 ] </ref> showed that the Hanf number of second order logic cannot be proved to exist without using Replacement for a formula ' that uses universal quantification for all sets in the universe. 133 Poincare summarized this achievement at the 1900 Congress of Mathematicians: `Today there remain in analysis
Reference: [ Barwise, 1975 ] <author> J. Barwise. </author> <title> Admissible Sets and Structures. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin and New York, </address> <year> 1975. </year>
Reference-contexts: In particular, they were used in the 1970's as the backbone of major generalizations of Recursive Functions Theory <ref> [ Barwise, 1975; Moschovakis, 1974 ] </ref> . In recent years the ties between inductive definitions (in particular over finite structures) and database theory, descriptive computational complexity, and logics of programs, have been developed. <p> Whereas every 1 1 set in the analytical hierarchy is definable by some formula of the first form, the sets defined by formulas of the second form are all recursively enumerable [ Kreisel, 1968 ] ! The latter formulas were dubbed strict- 1 1 in <ref> [ Barwise, 1969; Barwise, 1975 ] </ref> , and computational in [ Leivant, 1987 ] . The term `computational' is motivated by the fact that each such formula defines, uniformly for all V -structures, the operational semantics of a certain finite state machine.
Reference: [ Barwise, 1977 ] <editor> J. Barwise, editor. </editor> <booktitle> Handbook of Mathematical Logic. </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1977. </year>
Reference: [ Barwise, 1979 ] <author> J. Barwise. </author> <title> On branching quantifiers in English. </title> <journal> J. Phil. Logic, </journal> <volume> 8 </volume> <pages> 47-80, </pages> <year> 1979. </year>
Reference-contexts: Henkin [ 1961 ] noted that the use of quantifiers in first order formulas prevents one from expressing forms of dependence which occur naturally in both mathematics and natural language discourse <ref> [ Barwise, 1979 ] </ref> . For instance, in the formula 8x9y8u9v ' there is no way to state that v depends only on u.
Reference: [ Barwise, 1985 ] <author> J. Barwise. </author> <title> Model-theoretic logics: Background and aims. </title> <editor> In J. Barwise and S. Feferman, editors, </editor> <title> Model Theoretic Logics. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: to the gulf between first order logic and mathematical practice in these words: `As logicians, we do our subject a disservice by convincing others that logic is first order, and then convincing them that almost none of the concepts of modern mathematics can really be captured in first order logic' <ref> [ Barwise, 1985 ] </ref> . A detailed compendium of even the more important higher order constructions in mathematical practice is well beyond the scope of this survey. Instead, we propose to consider the general issue of second order axioms versus first order schemas for principles such as Induction and Replacement.
Reference: [ Behmann, 1922 ] <author> H. Behmann. </author> <title> Beitrage zur Algebra der Logic und zum Entscheidungsproblem. </title> <journal> Math. Ann., </journal> <volume> 86, </volume> <year> 1922. </year>
Reference-contexts: In monadic second order logic the only higher order variables are ones ranging over monadic relations, i.e. sets. Monadic first order logic is decidable [ Lowenheim, 1915 ] , and, in the absence of functions, so is monadic second order logic <ref> [ Skolem, 1919; Behmann, 1922 ] </ref> . However, with functions present monadic second order logic is quite complex: the definition ' N above of N is monadic (Section 2.3).
Reference: [ Benthem and Doets, 1983 ] <author> J. van Benthem and K. Doets. </author> <title> Higher-order logic. </title> <editor> In D. Gabbay and F. Guenthner, editors, </editor> <booktitle> Handbook of Philosophical Logic, </booktitle> <volume> Volume I, </volume> <pages> pages 275-329. </pages> <publisher> Reidel, </publisher> <address> Dordrecht, </address> <year> 1983. </year>
Reference-contexts: Similarly, logic with a quantifier U = `there exist uncountably many' has U interpreted as intended in all structures. Second order logic is, then, one 69 See e.g. [ Chang and Keisler, 1973; Hodges, 1993 ] for detailed proofs of the Fraisse and Keisler Theorems; Van Benthem and Doets <ref> [ Benthem and Doets, 1983 ] </ref> have a pleasant and simplified presentation. <p> More generally, not every V T -structure S is S (H) for some H. Indeed, the structures S (H) have the following properties (compare <ref> [ Benthem and Doets, 1983 ] </ref> ): 79 That is, ' S is defined by recurrence on formulas as follows. (R (t)) S = E (t; R) (R a set-variable), ff S = ff for other atomic formulas, (:') S = :(' S ), ('? ) S = (' S ?
Reference: [ Bernays, 1937 ] <author> P. Bernays. </author> <title> A system of axiomatic set theory. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 2 </volume> <pages> 65-77, </pages> <year> 1937. </year>
Reference: [ Bernays, 1958 ] <author> P. Bernays. </author> <title> Axiomatic Set Theory. </title> <publisher> North-Holland, </publisher> <address> Ams-terdam, </address> <year> 1958. </year>
Reference-contexts: The most important results here were inspired by the Montague-Levy reflection principle [ Levy, 1960 ] , which posits that if a formula ' is true in the universe of sets, then ' must be true when relativized to some universe in the cu 128 An exception is <ref> [ Bernays, 1958 ] </ref> , where the latter relation is denoted xja. 129 This axiom is conservative over [GBN + Choice] for first order formulas [ Felgner, 1971 ] , but is not provable in it [ Easton, 1964 ] . 130 If KM 0 is a theory axiomatized by a
Reference: [ Bernays, 1976 ] <author> P. Bernays. </author> <title> On the problem of schemata of infinity in axiomatic set theory. In G.H. </title> <editor> Muller, editor, </editor> <booktitle> Sets and Classes, </booktitle> <pages> pages 121-172. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1976. </year>
Reference: [ Blass and Gurevich, 1986 ] <author> A. Blass and Y. Gurevich. </author> <title> Henkin quantifiers and complete problems. </title> <journal> Theoretical Computer Science, </journal> <volume> 32 </volume> <pages> 1-16, </pages> <year> 1986. </year>
Reference-contexts: The phrase data base queries is from [ Chandra and Harel, 1980 ] . Other terms for it include global relation [ Gurevich, 1987 ] . generalized relations, [ Rougemont, 1987 ] (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, <ref> [ Blass and Gurevich, 1986 ] </ref> , uniformly defined relations, [ Rougemont, 1987 ] , predicate, [ Leivant, 1987 ] , and predicate over oracles [ Cai and Furst, 1987 ] . 72 Daniel Leivant include all the variables free in ') defines the query ~v:', that assigns to a V <p> The interpretation of second order arithmetic in second order logic (Section 2.3) implies that the provable functions of L 2 (all second order formulas) are precisely the provably-recursive functions of second order arithmetic. 179 177 Characterizations that fall into neither of the spectra above include characterizations of nondeterministic log-space <ref> [ Immerman, 1987; Blass and Gurevich, 1986 ] </ref> , of poly-time [ Immerman, 1987 ] , and of exponential time [ Christen, 1974; Immerman, 1987 ] . 178 Recall the Reverse Mathematics program, described in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given
Reference: [ Blass and Gurevich, 1987 ] <author> A. Blass and Y. Gurevich. </author> <title> Existential fixed-point logic. </title> <editor> In E. Borger, editor, </editor> <booktitle> Logic and Complexity, Volume 270 of LNCS, </booktitle> <pages> pages 20-36. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: A recent study on the scope of expressiveness of the -calculus is [ Lubarsky, 1993 ] . 90 Other fixpoint operators include inflationary fixpoint [ Gurevich and Shelah, 1986; Leivant, 1990c ] and existential fixpoints <ref> [ Blass and Gurevich, 1987 ] </ref> . Additional variants are mentioned in Section 8.4 below, in relation to computational complexity.
Reference: [ Blass et al., 1985 ] <author> A. Blass, Y. Gurevich, and D. Kozen. </author> <title> A zero-one law for logic with a least fixpoint operator. </title> <journal> Information and Control, </journal> <volume> 67 </volume> <pages> 70-90, </pages> <year> 1985. </year>
Reference-contexts: rendered with the weaker reading. 92 It is easy to see that the truth of number theoretic formulas is reducible 89 A finite model theorem and a decision procedure for the propositional -calculus are proved in [ Kozen, 1988; Kozen and Parikh, 1983 ] , and a 0-1 law in <ref> [ Blass et al., 1985 ] </ref> . A recent study on the scope of expressiveness of the -calculus is [ Lubarsky, 1993 ] . 90 Other fixpoint operators include inflationary fixpoint [ Gurevich and Shelah, 1986; Leivant, 1990c ] and existential fixpoints [ Blass and Gurevich, 1987 ] .
Reference: [ Boolos, 1975 ] <author> G. Boolos. </author> <title> On second order logic. </title> <journal> J. of Philosophy, </journal> <volume> 72 </volume> <pages> 509-527, </pages> <year> 1975. </year>
Reference-contexts: This criterion is clearly related to Quine's ontological neutrality. Indeed, even relatively weak fragments of second order logic fail Girard's criterion. 75 72 [ Tharp, 1975 ] concurs with Quine, <ref> [ Boolos, 1975 ] </ref> disagrees. 73 [ Lindstrom, 1969 ] , see [ Ebbinghaus et al., 1984 ] for a textbook exposition. 74 Personal communication. 75 Nonetheless, it is possibly to recover the textual subformula property for fragments which, though logically weak, are nonetheless computationally interesting; see e.g. [ Na dathur <p> It is easy to see that second order truth is definable in set theory by a 2 formula that renders (8 structures S) (S j= ') (see e.g. <ref> [ Boolos, 1975 ] </ref> ).
Reference: [ Brown and Simpson, 1986 ] <author> D. Brown and S. Simpson. </author> <title> Which set existence theorems are needed to prove the Hahn-Banach theorem for separable Banach spaces? Annals of Pure and Applied Logic, </title> <booktitle> 31 </booktitle> <pages> 123-144, </pages> <year> 1986. </year>
Reference: [ Bruijn, 1980 ] <author> N. G. de Bruijn. </author> <title> A survey of the project AUTOMATH. </title> <editor> In J. P. Seldin and J. R. Hindley, editors, To H. B. </editor> <booktitle> Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism, </booktitle> <pages> pages 579-606. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1980. </year>
Reference-contexts: In one guise of abstraction, types can depend on objects, as in `the type of numeric arrays of length k'. This kind of abstraction underlies the type discpline of Martin-Lof [ 1973b ] , and of the automath family of languages <ref> [ Bruijn, 1980 ] </ref> . Another form of abstraction over types is polymorphism, which underlies (in a weak form) the programming language ML. <p> [ Miller, 1987 ] , unification [ Huet, 1975 ] , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages <ref> [ Bruijn, 1980 ] </ref> , designed as a medium for a computerized compendium of mathematics within a higher order logic. 169 See also e.g. [ Gould, 1976; Jensen and Pietrzykowski, 1976; Petersson, 1982 ] . 170 An early presage of higher order theorem proving is [ Robinson, 1969 ] .
Reference: [ Buchholz et al., 1981 ] <author> W. Buchholz, S. Feferman, W. Pohlers, and W. Sieg. </author> <title> Iterated Inductive Definitions and Subsystems of Analysis: Higher Order Logic 77 Recent Proof-Theoreitc Studies. </title> <booktitle> Volume 897 of LNM. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1981. </year>
Reference-contexts: These theories were initiated in [ Kreisel, 1963 ] , and studied extensively in the 1960's and 1970's; see e.g. <ref> [ Buchholz et al., 1981 ] </ref> . <p> Note: (1) the principle is a schema, with arithmetic instances; (2) the principle is an implication, of the form If the binary relation R is a well-ordering, then transfinite recurrence over R with respect to the arithmetic formula f is allowed. 140 See <ref> [ Buchholz et al., 1981 ] </ref> . Such definitions are a paradigm of predicative, bottom-up, construction of subsets of N. Intuitionistic theories of transfinitely iterated inductive definitions were introduced in [ Kreisel, 1963 ] . A detailed account of such theories is in [ Buchholz et al., 1981 ] . 141 <p> arithmetic formula f is allowed. 140 See <ref> [ Buchholz et al., 1981 ] </ref> . Such definitions are a paradigm of predicative, bottom-up, construction of subsets of N. Intuitionistic theories of transfinitely iterated inductive definitions were introduced in [ Kreisel, 1963 ] . A detailed account of such theories is in [ Buchholz et al., 1981 ] . 141 Two predicative formalisms may have the same proof-theoretic power, as measured by provable well-orderings, yet differ substantially in their ability to capture mathematical practice. <p> functionals defined by Bar Induction [ Spector, 1962 ] . (2) With respect to 1 3 formulas, choice for 1 2 formulas is conservative over comprehension for 1 2 , and the latter is conservative over the theory of iterated inductive 1 1 -definitions of length up to * 0 <ref> [ Friedman, 1970; Buchholz et al., 1981 ] </ref> . (3) With respect to 1 2 formulas, choice for 1 1 formulas is conservative over comprehension for 1 1 , and the latter is conservative over ramified analysis of levels up to * 0 [ Friedman, 1967 ] .
Reference: [ Buss, 1992 ] <author> S. R. Buss. </author> <title> On Godel's theorems on lengths of proofs I: Number of lines and speedup for arithmetics. </title> <type> Preprint, </type> <year> 1992. </year>
Reference-contexts: This proves the theorem. Proofs of Theorem 7.4.1 can be found in [ Mostowski, 1952 ] and [ Ehren-feucht and Mycielski, 1971 ] . In <ref> [ Buss, 1992 ] </ref> a proof is given in which consists of the independently interesting formulas Con k (n), where Con k (n) is (a coded form of) the statement `PA k has no proof of 0 = 1 of size n.' In contrast to Theorem 7.4.1, the size speed-up of
Reference: [ Cai and Furst, 1987 ] <author> J.-Y. Cai and M. L. Furst. </author> <title> Pspace survives three-bit bottlenecks. </title> <booktitle> In Proceedings of the Second Annual Conference on Structure in Complexity, </booktitle> <pages> pages 94-102, </pages> <address> Los Angeles, 1987. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: include global relation [ Gurevich, 1987 ] . generalized relations, [ Rougemont, 1987 ] (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ Blass and Gurevich, 1986 ] , uniformly defined relations, [ Rougemont, 1987 ] , predicate, [ Leivant, 1987 ] , and predicate over oracles <ref> [ Cai and Furst, 1987 ] </ref> . 72 Daniel Leivant include all the variables free in ') defines the query ~v:', that assigns to a V -structure S the extension of ' in S, i.e. the collection of ~a 2 jSj k such that S; [~a=~v] j= '.
Reference: [ Cantor, 1895 ] <author> G. Cantor. Beitrage zur Begrundung der transfiniten Men-genlehr I. </author> <title> Math. </title> <journal> Annalen, </journal> <volume> 46 </volume> <pages> 355-358, 1895. </pages>
Reference-contexts: found in Section II.7 of [ Fraenkel et al., 1973 ] . 125 A famous quote is the informal definition of a set by Cantor's the creator of abstract set theory: A set is a collection into a whole of definite distinct objects of our intuition or of our thought <ref> [ Cantor, 1895 ] </ref> . 126 The Principle of Separation is often called the Subset Axiom. Zermelo's original phrase was Axiom der Aussonderung, literally: the axiom of singling-out.
Reference: [ Cardelli and Longo, 1991 ] <author> L. Cardelli and P. Longo. </author> <title> A semantic basis for Quest. </title> <journal> Journal of Functional Programming, </journal> <volume> 1 </volume> <pages> 417-458, </pages> <year> 1991. </year>
Reference-contexts: type structure is part of the syntax of the language, and that it must be described schematically. 160 For instance, the type intersection discipline of [ Coppo and Dezani-Ciancaglini, 1980 ] has been incorporated into Reynold's programming language Forsythe [ Reynolds, 1988 ] , and inheritance into Cardelli's language Quest <ref> [ Cardelli, 1991; Cardelli and Longo, 1991 ] </ref> . 161 See e.g. [ Scedrov, 1990 ] for a survey. The model theory of second order lambda calculus is a fascinating albeit complex story.
Reference: [ Cardelli, 1991 ] <author> L. Cardelli. </author> <title> Typeful programming. </title> <editor> In E. J. Neuhod and M. Park, editors, </editor> <booktitle> Formal Description of Programming Languages, </booktitle> <pages> pages 431-507. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: type structure is part of the syntax of the language, and that it must be described schematically. 160 For instance, the type intersection discipline of [ Coppo and Dezani-Ciancaglini, 1980 ] has been incorporated into Reynold's programming language Forsythe [ Reynolds, 1988 ] , and inheritance into Cardelli's language Quest <ref> [ Cardelli, 1991; Cardelli and Longo, 1991 ] </ref> . 161 See e.g. [ Scedrov, 1990 ] for a survey. The model theory of second order lambda calculus is a fascinating albeit complex story.
Reference: [ Chandra and Harel, 1980 ] <author> A. K. Chandra and D. Harel. </author> <title> Computable queries for relational data bases. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21 </volume> <pages> 156-178, </pages> <year> 1980. </year>
Reference-contexts: In relation to collections of first order structures the notion was used by Tarski's [ Tarski, 1952 ] (Definition 1) and in [ Barwise and Moschovakis, 1978 ] . The phrase data base queries is from <ref> [ Chandra and Harel, 1980 ] </ref> .
Reference: [ Chandra and Harel, 1982 ] <author> A. Chandra and D. Harel. </author> <title> Structure and complexity of relational queries. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 25 </volume> <pages> 99-128, </pages> <year> 1982. </year> <note> Preliminary version in Twenty First Symposium on Foundations of Computer Science (1980) 333-347. </note>
Reference-contexts: Higher Order Logic 43 study of the propositional -calculus, that is, propositional logic enriched with a fixpoint construct [ Kozen, 1983 ] . 89 In database theory the interest in extending first order logic with a fixpoint operator <ref> [ Chandra and Harel, 1982 ] </ref> evolved from the expressive limitations of first order logic, e.g. the impossibility to define (uniformly over all structures) the transitive closure of a binary relation, even over finite structures [ Aho and Ullman, 1979 ] .
Reference: [ Chang and Keisler, 1973 ] <author> C. C. Chang and J. Keisler. </author> <title> Model Theory. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1973. </year>
Reference-contexts: For operators defined by first order formulas the converse also holds: if R~x ' is monotone over all structures, where ' is first order, then there is a formula logically equivalent to ' in which all occurrences of R are positive (by Lyndon's Theorem, see e.g. <ref> [ Chang and Keisler, 1973; Hodges, 1993 ] </ref> ). 33 29 These restrictions are motivated by expository terseness, and could be removed. 30 we use Greek letters as ordinary first order variables 31 The expression ' j R abbreviates 8~x (' $ R (~x)), where arity (~x) = arity (R). 32 <p> Similarly, logic with a quantifier U = `there exist uncountably many' has U interpreted as intended in all structures. Second order logic is, then, one 69 See e.g. <ref> [ Chang and Keisler, 1973; Hodges, 1993 ] </ref> for detailed proofs of the Fraisse and Keisler Theorems; Van Benthem and Doets [ Benthem and Doets, 1983 ] have a pleasant and simplified presentation.
Reference: [ Christen, 1974 ] <author> C. A. Christen. </author> <title> Spektren und Klassen elementarer Funk-tionen. </title> <type> Ph.D. Thesis, </type> <institution> ETH Zurich, </institution> <year> 1974. </year>
Reference-contexts: 2 (all second order formulas) are precisely the provably-recursive functions of second order arithmetic. 179 177 Characterizations that fall into neither of the spectra above include characterizations of nondeterministic log-space [ Immerman, 1987; Blass and Gurevich, 1986 ] , of poly-time [ Immerman, 1987 ] , and of exponential time <ref> [ Christen, 1974; Immerman, 1987 ] </ref> . 178 Recall the Reverse Mathematics program, described in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given in [ Leivant, 1990b ] . 74 Daniel Leivant Using comprehension for computational (i.e. strict-1 1 , see Section 3.2)
Reference: [ Chuaqui, 1981 ] <author> R. B. Chuaqui. </author> <title> Axiomatic Set Theory: Impredicative Theories of Classes. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1981. </year>
Reference-contexts: The main issues addressed are: (1) Delineate formalisms whose predicative nature is brought out clearly, and 131 See <ref> [ Chuaqui, 1981 ] </ref> for a textbook development of set theory based on Bernays's axioms. 132 Applications of this form are in [ Gloede, 1976 ] .
Reference: [ Church, 1949 ] <author> A. Church. </author> <title> A formulation of the simple theory of types. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 5 </volume> <pages> 56-68, </pages> <year> 1949. </year>
Reference-contexts: It is basically due to Church <ref> [ Church, 1949 ] </ref> . 39 We outline a relational variant of finite order logic (similar to the account in [ Schutte, 1960b, Chapter IV ] ). <p> Church [ 1949 ] showed how this simple functional interpretation of propositional logic can be extended to first order logic, using higher order functions. Whereas propositional identifiers denote truth values, relational 41 An alternative notation to oe ! o, common in works about type theory, is o (oe) <ref> [ Church, 1949 ] </ref> . 20 Daniel Leivant identifier denote boolean-valued functions over the type of individual objects.
Reference: [ Church, 1956 ] <author> A. Church. </author> <title> Introduction to Mathematical Logic. </title> <publisher> Princeton University Press, Princeton, </publisher> <year> 1956. </year>
Reference-contexts: It encompasses all elementary set existence axioms of set theory to the extent that they pertain to second order logic: the Empty-Set, Union, and Separation axioms are instances of Comprehension, whereas a form 49 Such a formalism is detailed, for example, in <ref> [ Church, 1956, Section 50 ] </ref> . Note that the axiom schema and rules, including the ones of first order logic, now apply to all formulas in the language. <p> Let us outline the resulting formalisms. The simplest manifestation of the idea of stratifying properties can be found in a predicative variant of second order logic, (finitely) ramified second order logic <ref> [ Church, 1956 ] </ref> . One posits variables ` R k for k-ary relations of level `. The intended semantics is defined inductively, and is intertwined with the syntax of the language.
Reference: [ Cohen, 1966 ] <author> P. J. Cohen. </author> <title> Set Theory and the Continuum Hypothesis. </title> <publisher> Benjamin, </publisher> <address> New York, </address> <year> 1966. </year>
Reference-contexts: It follows that ZF proves the consistency of any finitely axiomatizable subtheory of ZF. See e.g. <ref> [ Cohen, 1966, Section II.8 ] </ref> for an exposition. 121 From the discussion in Section 7.3 below, it follows that many of the methods of Analytic Number Theories can be re-coded within Peano's Arithmetic; however, not all methods are amenable to such coding, and, moreover, the coding is done at a
Reference: [ Compton, 1988 ] <author> K. J. Compton. </author> <title> 0-1 laws in logic and combinatorics. </title> <editor> In I. Rival, editor, </editor> <booktitle> NATO Advanced Study Inst. on Algorithms and Order, </booktitle> <pages> pages 353-383. </pages> <publisher> Reidel, </publisher> <address> Dordrecht, </address> <year> 1988. </year>
Reference-contexts: It fails in the presence of constants: if ' is R (c; c) (R a binary relation constant) then (') = 1 2 . A survey of 0-1 laws for various logics is <ref> [ Compton, 1988 ] </ref> ; some more recent results can be found in [ Spencer and Shelah, 1987; Kolaitis and Vardi, 1987; Kolaitis and Vardi, 1990; Kolaitis and Vardi, 1992; Spencer, 1993 ] . 71 However, see [ Kolaitis and Vardi, 1992 ] for cases of second order formulas for which
Reference: [ Constable and others, 1986 ] <author> R. Constable et al. </author> <title> Implementing Mathematics with the Nuprl Proof Development System. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1986. </year>
Reference-contexts: Notably, its implementation underlies sofware systems for constructing typed functional programs for given specifications from higher order logic proofs that such specifications has solutions. These systems include the PRL Project <ref> [ Constable and others, 1986 ] </ref> , which is based on [ Martin-Lof, 1973b ] , and the Calculus of Constructions mentioned above [ Paulin-Mohring, 1989b; Paulin-Mohring, 1989a ] .
Reference: [ Coppo and Dezani-Ciancaglini, 1980 ] <author> M. Coppo and M. Dezani-Cian-caglini. </author> <title> An extension of basic functionality theory for -calculus. </title> <journal> Notre 78 Daniel Leivant Dame Journal of Formal Logic, </journal> <volume> 21 </volume> <pages> 685-693, </pages> <year> 1980. </year>
Reference-contexts: Algol 68 represents the first realization by a computer scientist that a typed higher-order programming language must have an infinite number of types, that this type structure is part of the syntax of the language, and that it must be described schematically. 160 For instance, the type intersection discipline of <ref> [ Coppo and Dezani-Ciancaglini, 1980 ] </ref> has been incorporated into Reynold's programming language Forsythe [ Reynolds, 1988 ] , and inheritance into Cardelli's language Quest [ Cardelli, 1991; Cardelli and Longo, 1991 ] . 161 See e.g. [ Scedrov, 1990 ] for a survey.
Reference: [ Coquand and Huet, 1985 ] <author> T. Coquand and G. Huet. </author> <title> Constructions: A higher order proof system for mechanizing mathematics. </title> <booktitle> In EURO-CAL85, Volume 203 of LNCS, </booktitle> <address> Berlin, 1985. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: More generally, universal quantification over objects of type o is an operator 8 o of type (o ! o) ! o. To define a generic universal quantifier that can be used for all types one needs to enrich the type structure beyond the one we have been discussing (cf. <ref> [ Girard, 1972; Coquand and Huet, 1985 ] </ref> ). Namely, in Girard's system F ! , the generic universal quantifier is an operator forall of type t: (t ! o) ! o, so that forall (o ) is functionally equivalent 42 to 8 o . <p> Church's interpretation of formulas as higher type functions is used extensively in Computer Science in formal calculi such as the Calculus of Constructions <ref> [ Coquand and Huet, 1985 ] </ref> , as well as in programming systems such as Edinburgh lego, L.
Reference: [ Coquand and Huet, 1988 ] <author> T. Coquand and G. Huet. </author> <title> The calculus of constructions. </title> <journal> Information and Computation, </journal> <volume> 76 </volume> <pages> 95-120, </pages> <year> 1988. </year>
Reference: [ Coquand, 1985 ] <author> T. Coquand. </author> <title> Une Theorie des Constructions. </title> <type> Ph.D. Thesis, </type> <institution> Universite Paris VII, </institution> <month> January </month> <year> 1985. </year>
Reference: [ Curry and Feys, 1958 ] <author> H. B. Curry and R. Feys. </author> <title> Combinatory Logic. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1958. </year>
Reference-contexts: This result is essentially an 68 Daniel Leivant 8.2 The computational nature of higher order natural deduction In launching combinatory logic, Schonfinkel discovered that the basic inferences of logic are in fact of a simple functional nature [ Schonfinkel, 1924 ] . This analogy was elaborated by Curry <ref> [ Curry and Feys, 1958 ] </ref> , and rediscovered by Howard in a yet more prestine form, for natural deduction proofs [ Howard, 1980 ] .
Reference: [ Dahlhaus and Makowsky, 1987 ] <author> E. Dahlhaus and J. A. Makowsky. </author> <title> Computable directory queries. </title> <booktitle> In Logic and Computer Science: New Trends and Applications (Rend. Sem. </booktitle> <publisher> Mat. Univ. </publisher> <address> Pol. Torino), </address> <pages> pages 165-197, </pages> <address> Turin, </address> <year> 1987. </year>
Reference-contexts: A survey of these and related advances can be found in [ Abiteboul and Kanellakis, 1990 ] . A seminal paper on computability for higher order objects is <ref> [ Dahlhaus and Makowsky, 1987 ] </ref> . 167 For more details and applications of this mapping see, for example, [ Girard et al., 1989 ] and [ Leivant, 1990b ] .
Reference: [ Davis, 1965 ] <author> M. Davis, </author> <title> editor. The Undecidable. </title> <publisher> Raven Press, </publisher> <address> New York, </address> <year> 1965. </year>
Reference: [ Dedekind, 1872 ] <author> R. </author> <title> Dedekind. Stetigkeit und irrationale Zahlen. Braun-schweig, Vieweg, 1872. English translation: Richard Dedekind, Essays on the Theory of Numbers, Continuity and Irrational Numbers. Open Court, </title> <address> Chicago, </address> <year> 1901. </year>
Reference-contexts: Already Dedekind showed that major theorems of analysis are equivalent to the topological completeness of the reals <ref> [ Dedekind, 1872 ] </ref> ; also, a well-known compendium of theorems of mathematics that are equivalent to the Axiom of Choice is [ Rubin and Rubin, 1966 ] . See [ Simpson, 1986 ] for a survey of the Reverse Mathematics project.
Reference: [ Dowek et al., 1991 ] <author> G. Dowek, A. Felty, H. Herbelin, G. Huet, C. Paulin-Mohring, , and B. Werner. </author> <title> The Coq proof assistant user's guide. </title> <type> Technical Report 134, </type> <institution> INRIA, </institution> <year> 1991. </year>
Reference: [ Dowek, 1991 ] <author> G. Dowek. </author> <title> Demonstration automatique dans le Calcul des Constructions. </title> <type> Ph.D. Thesis, </type> <institution> Universite Paris VII, </institution> <year> 1991. </year>
Reference: [ Dragalin, 1979 ] <author> A. G. Dragalin. </author> <title> New kinds of realizability. </title> <booktitle> In Sixth International Congress for Logic, Methodology, and Philosophy of Science, </booktitle> <year> 1979. </year> <note> (Abstract). </note>
Reference-contexts: The richness of constructive formalisms compared to their classical counterparts has numerous manifestation. One striking example, for higher 54 [ Kolmogorov, 1925; Godel, 1932 ] ; see also <ref> [ Friedman, 1978; Dragalin, 1979; Leivant, 1985 ] </ref> ; textbook expositions can be found in [ Kleene, 1952, Section 81 ] and [ Troelstra, 1973 ] . 55 I.e, ' 0 j ::' for atomic ' ( ^ O) 0 j 0 ^ O 0 , ( ! O) 0 j
Reference: [ Easton, 1964 ] <author> W. B. Easton. </author> <title> Powers of regular cardinals. </title> <type> Ph.D. Thesis, </type> <institution> Princeton, </institution> <year> 1964. </year> <note> Revised version in Annals of Math. Logic 1 139-178, </note> <year> 1970. </year>
Reference-contexts: be true when relativized to some universe in the cu 128 An exception is [ Bernays, 1958 ] , where the latter relation is denoted xja. 129 This axiom is conservative over [GBN + Choice] for first order formulas [ Felgner, 1971 ] , but is not provable in it <ref> [ Easton, 1964 ] </ref> . 130 If KM 0 is a theory axiomatized by a finite number of theorems of KM, then KM proves reflection for KM 0 , and so KM is not finitely axiomatizable.
Reference: [ Ebbinghaus et al., 1984 ] <author> H.-D. Ebbinghaus, J. Flum, and W. Thomas. </author> <title> Mathematical Logic. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1984. </year>
Reference-contexts: A related phenomenon is Trakhtenbrot's Theorem, that the collection of first order formulas true in all finite structures is not RE <ref> [ Trakhtenbrot, 1950; Ebbinghaus et al., 1984 ] </ref> . 48 Note that ' may have free variables other than x 1 : : : x k , and need not have all of x 1 : : : x k free. <p> This criterion is clearly related to Quine's ontological neutrality. Indeed, even relatively weak fragments of second order logic fail Girard's criterion. 75 72 [ Tharp, 1975 ] concurs with Quine, [ Boolos, 1975 ] disagrees. 73 [ Lindstrom, 1969 ] , see <ref> [ Ebbinghaus et al., 1984 ] </ref> for a textbook exposition. 74 Personal communication. 75 Nonetheless, it is possibly to recover the textual subformula property for fragments which, though logically weak, are nonetheless computationally interesting; see e.g. [ Na dathur and Miller, 1990; Miller et al., 1991 ] . <p> A proof of the interpolation property for first order logic can be found in most logic textbooks, see e.g. <ref> [ Ebbinghaus et al., 1984 ] </ref> . <p> Then ' has (infinite) models, e.g. [0; 1] with the standard order. But ' has no countable model, because a countable model of must be isomorphic to the rationals, with or without one or both endpoints (Cantor's Countable Order Theorem, see e.g. <ref> [ Ebbinghaus et al., 1984 ] </ref> ), and O is false for these structures. 88 Adding fixpoint constructs to logic is somewhat different from formal theories for inductive definitions and iterated inductive definitions, which are usually formulated over arithmetic or analysis. <p> (x; 0; u) $ u 0 ) ^ 8u; v ( R (x; su; v) ! 9w ( R (x; u; w) ^ Plus (x; w; v) ) ). 97 A proof is sketched in [ Monk, 1976 ] (pp. 489-490), where the result is attributed to Tarski, or see <ref> [ Ebbinghaus et al., 1984 ] </ref> exercise IX.2.7. 98 Weak second order logic is trivially interpretable in standard second orer logic, because the notion of finiteness is second order definable (Section 2.2). 46 Daniel Leivant 6.4 Predicative logic: Restricted comprehension One of the main forces that have shaped the development of
Reference: [ Ehrenfeucht and Mycielski, 1971 ] <author> A. Ehrenfeucht and J. Mycielski. </author> <title> Abbreviating proofs by adding new axioms. </title> <journal> Bull. Amer. Math. Soc., </journal> <volume> 77 </volume> <pages> 366-367, </pages> <year> 1971. </year>
Reference: [ Enderton, 1970 ] <author> H. B. Enderton. </author> <title> Finite partially ordered quantifiers. </title> <journal> Zetisch. fur Math. Logik u. Grundlagen der Mathematik, </journal> <volume> 16 </volume> <pages> 393-397, </pages> <year> 1970. </year>
Reference-contexts: Henkin-structure of finite order logic is a Henkin-prestructure H that is closed under definability: for each formula ', assignment j into H, and type o = (o 1 : : : o k ), 78 76 The formula j is due to Ehrenfeucht (reported in [ Henkin, 1961 ] ). <ref> [ Enderton, 1970 ] </ref> and [ Walkoe, 1970 ] independently showed that every 1 1 formula is semantically equiva lent to a formula in the language L H 1 of first order logic augmented with partially-ordered quantifiers.
Reference: [ Fagin, 1974 ] <author> R. Fagin. </author> <title> Generalized first order spectra and polynomial time recognizable sets. </title> <editor> In R. Karp, editor, </editor> <booktitle> Complexity of Computation, </booktitle> <pages> pages 43-73. </pages> <address> SIAM-AMS, </address> <year> 1974. </year> <title> Higher Order Logic 79 </title>
Reference-contexts: Jones and Selman proved a similar and closely related result, that first order spectra are precisely the sets computable in NTime (2 cn ), where the input is given in binary. The proof methods of <ref> [ Fagin, 1974 ] </ref> and [ Jones and Selman, 1974 ] are similar. Higher Order Logic 73 and Vianu, 1989 ] : if is an operator on k-ary relations, then R:(R) is m (;), where m is the smallest number such that m (;) = m+1 (;).
Reference: [ Fagin, 1976 ] <author> R. Fagin. </author> <title> Probability on finite models. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 41 </volume> <pages> 50-58, </pages> <year> 1976. </year>
Reference-contexts: In their original forms, common in expositions of Model Theory, these theorems are stated as characterizations of elementary equivalence. 70 This theorem was discovered independently by Glebskii et al. [ Glebskii et al., 1969 ] and Fagin <ref> [ Fagin, 1976 ] </ref> . It fails in the presence of constants: if ' is R (c; c) (R a binary relation constant) then (') = 1 2 .
Reference: [ Feferman, 1964 ] <author> S. Feferman. </author> <title> Systems of predicative analysis. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 29 </volume> <pages> 1-30, </pages> <year> 1964. </year>
Reference-contexts: This is achieved in Feferman's system IR by alternating the justification of new well-orderings with their use for transfinite induction, leading to a closure ordinal 0 , identified independently by Schutte. See <ref> [ Feferman, 1964; Feferman, 1968; Schutte, 1965b; Schutte, 1965a ] </ref> . 137 If OE is a binary relation on natural numbers, without an infinite descending chain (i.e. if OE is order-isomorphic to a countable ordinal), then transfinite induction on OE is the schema (8x 2 field of OE)((8y OE x'[y]) !
Reference: [ Feferman, 1968 ] <author> S. Feferman. </author> <title> Systems of predicative analysis II. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 33 </volume> <pages> 193-220, </pages> <year> 1968. </year>
Reference-contexts: This is achieved in Feferman's system IR by alternating the justification of new well-orderings with their use for transfinite induction, leading to a closure ordinal 0 , identified independently by Schutte. See <ref> [ Feferman, 1964; Feferman, 1968; Schutte, 1965b; Schutte, 1965a ] </ref> . 137 If OE is a binary relation on natural numbers, without an infinite descending chain (i.e. if OE is order-isomorphic to a countable ordinal), then transfinite induction on OE is the schema (8x 2 field of OE)((8y OE x'[y]) !
Reference: [ Feferman, 1977 ] <author> S. Feferman. </author> <title> Theories of finite type related to mathematical practice, </title> <booktitle> 1977. In [ Barwise, </booktitle> <pages> 1977 ] , pages 913-971. </pages>
Reference-contexts: Of some interest are variants of the Choice principles above, such as the schema of Dependent Choice and Generalized Dependent Choice (see e.g. <ref> [ Kreisel, 1968; Feferman, 1977 ] </ref> ). 52 9! abbreviates `there is a unique': 9!y j df 9y ( ^ 8z ( [z=y] ! z = y )). <p> of ZF and to related theories as theories of classes, and to use the x 2 a notation ambiguously for both the first order membership relation between sets, and for the relational application a (x) (when a is viewed as 123 However, as observed by Kreisel and Feferman (see e.g. <ref> [ Feferman, 1977 ] </ref> ), the trans-finite iteration of the type hierarchy has barely any connection with the actual development of mathematical analysis, which is in practice restricted to small, let alone finite, types. <p> only integers and finite or infinite systems [=sets] of integers : : : Mathematics has been arithmetized : : : We may say today that absolute rigor has been achieved' ( [ Poincare, 1902 ] , quoted in [ Fraenkel et al., 1973, p. 14 ] ). 134 See e.g. <ref> [ Feferman, 1977 ] </ref> for a broad and informative survey of the development of mathematical analysis in finite order logic. 135 See e.g. [ Kechris and Moschovakis, 1977 ] for a survey and further references. 58 Daniel Leivant classify their proof theoretic strength; (2) Reduce seemingly impredica tive methods to predicative <p> is equivalent to the axiom of transfinite induction, often dubbed Bar Induction: WF [X] ! 8Y TI [X; Y ], where WF [X] states that X is a well founded binary relation, and TI [X; Y ] is transfinite induction over X for the unary predicate Y . (See, e.g., <ref> [ Feferman, 1977, Section 6.1.5 ] </ref> for a proof.) 139 For example, the theory AT R 0 of arithmetical transfinite recursion permits the definition of functions and sets by recursion of an arithmetic predicate, over a well-ordering.
Reference: [ Felgner, 1971 ] <author> U. Felgner. </author> <title> Comparison of the axioms of local and universal choice. </title> <journal> Fundamenta Math., </journal> <volume> 71 </volume> <pages> 43-62, </pages> <year> 1971. </year>
Reference-contexts: ' is true in the universe of sets, then ' must be true when relativized to some universe in the cu 128 An exception is [ Bernays, 1958 ] , where the latter relation is denoted xja. 129 This axiom is conservative over [GBN + Choice] for first order formulas <ref> [ Felgner, 1971 ] </ref> , but is not provable in it [ Easton, 1964 ] . 130 If KM 0 is a theory axiomatized by a finite number of theorems of KM, then KM proves reflection for KM 0 , and so KM is not finitely axiomatizable.
Reference: [ Felty and Miller, 1988 ] <author> A. Felty and D. A. Miller. </author> <title> Specifying theorem provers in a higher-order logic programming language. </title> <editor> In E. Lusk and R. Overbeek, editors, </editor> <booktitle> Ninth International Conference on Automated Deduction, Volume 310 of LNCS, </booktitle> <pages> pages 61-80. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference: [ Felty, 1993 ] <author> A. Felty. </author> <title> Implementing tactics and tacticals in a higher order programming language. </title> <journal> Journal of Automated reasoning, </journal> <volume> 11 </volume> <pages> 43-87, </pages> <year> 1993. </year>
Reference: [ Fraenkel and Bar-Hillel, 1958 ] <author> A. A. Fraenkel and Y. Bar-Hillel. </author> <title> Foundations of Set Theory, Second edition. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1958. </year>
Reference-contexts: choice over formulas that mention set quantifiers, these set-existence principles are circular, since the existence of the set Z is based 99 See e.g. the introduction of [ Mendelson, 1964 ] , or [ Fraenkel et al., 1973, Ch. 1 ] , for concise and informative surveys of that crisis. <ref> [ Fraenkel and Bar-Hillel, 1958, Section I.6 ] </ref> contains a detailed bibliography through 1956. 100 [ Whitehead and Russell, 1929; Zermelo, 1908; Zermelo, 1930; Fraenkel, 1922 ] . 101 The notion of `existence' is understood here to encompasses disjunction, since, for example, p _ q is equivalent to 9x (x =
Reference: [ Fraenkel et al., 1973 ] <author> A. A. Fraenkel, Y. Bar-Hillel, and A. Levy. </author> <title> Foundations of Set Theory. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <note> second edition, </note> <year> 1973. </year>
Reference-contexts: When referring to choice over formulas that mention set quantifiers, these set-existence principles are circular, since the existence of the set Z is based 99 See e.g. the introduction of [ Mendelson, 1964 ] , or <ref> [ Fraenkel et al., 1973, Ch. 1 ] </ref> , for concise and informative surveys of that crisis. [ Fraenkel and Bar-Hillel, 1958, Section I.6 ] contains a detailed bibliography through 1956. 100 [ Whitehead and Russell, 1929; Zermelo, 1908; Zermelo, 1930; Fraenkel, 1922 ] . 101 The notion of `existence' is <p> j (9a 2 A) (r 2 a) g, i.e. one uses Comprehension: 9b 8r 2 Q (r 2 b $ (9a 2 A) (r 2 a) ). 106 Depending on the exact formulation of the sequential calculus, 0 may need to be slightly repaired to yield a correct proof 107 <ref> [ Fraenkel et al., 1973 ] </ref> (p. 132 fn. 2) attributes this use of cut-free proofs to Paul Cohen. <p> Among the few exceptions is the use of transfinite types to prove the determinacy of Borel games; see e.g. [ Martin, 1975 ] . 124 A detailed survey of these issues can be found in Section II.7 of <ref> [ Fraenkel et al., 1973 ] </ref> . 125 A famous quote is the informal definition of a set by Cantor's the creator of abstract set theory: A set is a collection into a whole of definite distinct objects of our intuition or of our thought [ Cantor, 1895 ] . 126 <p> Reflection for KM is provable assuming the existence of a Mahlo cardinal [ Levy, 1960 ] , but the consistency of KM is reducible already to the consistency of ZF + there exists an inaccessible cardinal <ref> [ Fraenkel et al., 1973, p. 139 ] </ref> . Higher Order Logic 57 mulative hierarchy, that is ' V ff is true, for some cardinal ff. <p> achievement at the 1900 Congress of Mathematicians: `Today there remain in analysis only integers and finite or infinite systems [=sets] of integers : : : Mathematics has been arithmetized : : : We may say today that absolute rigor has been achieved' ( [ Poincare, 1902 ] , quoted in <ref> [ Fraenkel et al., 1973, p. 14 ] </ref> ). 134 See e.g. [ Feferman, 1977 ] for a broad and informative survey of the development of mathematical analysis in finite order logic. 135 See e.g. [ Kechris and Moschovakis, 1977 ] for a survey and further references. 58 Daniel Leivant classify
Reference: [ Fraenkel, 1922 ] <author> A. A. Fraenkel. </author> <title> Uber der begriff "definit" und die Unanhangigkeit des Auswahlaxioms. </title> <publisher> Sitz. Berlin, </publisher> <pages> pages 253-257, </pages> <year> 1922. </year> <note> English translation in [ Heijenoort, </note> <year> 1967 </year> <month> ] , 284-289. </month>
Reference: [ Friedman et al., 1982 ] <author> H. Friedman, K. McAloon, and S. Simpson. </author> <title> A finite combinatorial principles which is equivalent to the 1-consistence of predicative analysis. </title> <editor> In G. Metakides, editor, </editor> <booktitle> Logic Symposium (Patras, </booktitle> <year> 1980), </year> <pages> pages 197-230. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1982. </year>
Reference-contexts: See e.g. <ref> [ Friedman et al., 1982; Simpson, 1982a; Simpson, 1982b ] </ref> for detailed expositions.
Reference: [ Friedman et al., 1983 ] <author> H. Friedman, S. Simpson, and R. Smith. </author> <title> Countable algebra and set existence axioms. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 25 </volume> <pages> 141-181, </pages> <year> 1983. </year>
Reference: [ Friedman, 1967 ] <author> H. Friedman. </author> <title> Subsystems of set theory and analysis. </title> <type> Ph.D. Thesis, </type> <institution> MIT, </institution> <year> 1967. </year>
Reference-contexts: -definitions of length up to * 0 [ Friedman, 1970; Buchholz et al., 1981 ] . (3) With respect to 1 2 formulas, choice for 1 1 formulas is conservative over comprehension for 1 1 , and the latter is conservative over ramified analysis of levels up to * 0 <ref> [ Friedman, 1967 ] </ref> .
Reference: [ Friedman, 1969 ] <author> H. Friedman. </author> <title> Konig's Lemma is weak, 1969. Mimeographed note, </title> <publisher> Stanford University. </publisher>
Reference-contexts: Weaker or alternative versions of the latter result have been proved since <ref> [ Friedman, 1969 ] </ref> . In particular, a proof theoretic reduction of Weak Konig's Lemma to primitive recursive arithmetic, of a general nature, can be found in [ Sieg, 1985 ] .
Reference: [ Friedman, 1970 ] <author> H. Friedman. </author> <title> Iterated inductive definitions and 1 2 -AC. </title> <editor> In J. Myhill et al., editor, </editor> <booktitle> Intuitionism and Proof Theory, </booktitle> <pages> pages 435-442. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1970. </year>
Reference-contexts: functionals defined by Bar Induction [ Spector, 1962 ] . (2) With respect to 1 3 formulas, choice for 1 2 formulas is conservative over comprehension for 1 2 , and the latter is conservative over the theory of iterated inductive 1 1 -definitions of length up to * 0 <ref> [ Friedman, 1970; Buchholz et al., 1981 ] </ref> . (3) With respect to 1 2 formulas, choice for 1 1 formulas is conservative over comprehension for 1 1 , and the latter is conservative over ramified analysis of levels up to * 0 [ Friedman, 1967 ] .
Reference: [ Friedman, 1975 ] <author> H. Friedman. </author> <title> Some systems of second order arithmetic and their use. </title> <booktitle> In Proceedings of the International Congress of Mathematicians (Vancouver, 1974), </booktitle> <volume> Volume 1, </volume> <pages> pages 235-242. </pages> <booktitle> Canadian Mathematical Congress, </booktitle> <year> 1975. </year> <note> 80 Daniel Leivant </note>
Reference-contexts: See [ Simpson, 1986 ] for a survey of the Reverse Mathematics project. The seminal papers of the project are <ref> [ Friedman, 1975; Friedman, 1976; Steel, 1976 ] </ref> , and other key papers are [ Friedman et al., 1982; Friedman et al., 1983; Simpson, 1984; Simpson, 1986; Brown and Simpson, 1986 ] . 146 The equivalences are proved within a weak base theory, in which comprehension and induction are allowed over
Reference: [ Friedman, 1976 ] <author> H. Friedman. </author> <title> Systems of second order arithmetic with restricted induction, I, II (Abstracts). </title> <journal> Journal of Symbolic Logic, </journal> <volume> 41 </volume> <pages> 557-559, </pages> <year> 1976. </year>
Reference-contexts: See [ Simpson, 1986 ] for a survey of the Reverse Mathematics project. The seminal papers of the project are <ref> [ Friedman, 1975; Friedman, 1976; Steel, 1976 ] </ref> , and other key papers are [ Friedman et al., 1982; Friedman et al., 1983; Simpson, 1984; Simpson, 1986; Brown and Simpson, 1986 ] . 146 The equivalences are proved within a weak base theory, in which comprehension and induction are allowed over
Reference: [ Friedman, 1977 ] <author> H. Friedman. </author> <title> Set theoretic foundations for constructive analysis. </title> <journal> Annals of Mathematics, </journal> <volume> 105 </volume> <pages> 1-28, </pages> <year> 1977. </year>
Reference-contexts: However, as one would expect from the re-ductionist program outlined above, much of analysis can be carried out in formalisms weak enough to be conservative over Peano's Arithmetic (see e.g. <ref> [ Friedman, 1977; Friedman, 1980 ] </ref> ). To calibrate the `degree of pred-icativity' of particular theorems one shows that a theorem is not only a consequence of a principle of predicative analysis, but is in fact equivalent to such a principle. This project, initiated by H.
Reference: [ Friedman, 1978 ] <author> H. Friedman. </author> <title> Classically and intuitionistically provable recursive functions. </title> <editor> In G. H. Muller and D. S. Scott, editors, </editor> <booktitle> Higher Set Theory, </booktitle> <pages> pages 21-28. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1978. </year>
Reference-contexts: The richness of constructive formalisms compared to their classical counterparts has numerous manifestation. One striking example, for higher 54 [ Kolmogorov, 1925; Godel, 1932 ] ; see also <ref> [ Friedman, 1978; Dragalin, 1979; Leivant, 1985 ] </ref> ; textbook expositions can be found in [ Kleene, 1952, Section 81 ] and [ Troelstra, 1973 ] . 55 I.e, ' 0 j ::' for atomic ' ( ^ O) 0 j 0 ^ O 0 , ( ! O) 0 j
Reference: [ Friedman, 1980 ] <author> H. Friedman. </author> <title> A strong conservative extension of Peano arithmetic. </title> <booktitle> In The Kleene Symposium, </booktitle> <pages> pages 113-122. </pages> <publisher> North-Holland, </publisher> <year> 1980. </year>
Reference-contexts: However, as one would expect from the re-ductionist program outlined above, much of analysis can be carried out in formalisms weak enough to be conservative over Peano's Arithmetic (see e.g. <ref> [ Friedman, 1977; Friedman, 1980 ] </ref> ). To calibrate the `degree of pred-icativity' of particular theorems one shows that a theorem is not only a consequence of a principle of predicative analysis, but is in fact equivalent to such a principle. This project, initiated by H.
Reference: [ Friedman, 1981 ] <author> H. Friedman. </author> <title> Independence results in finite graph theory, </title> <note> 1981. Unpublished notes. </note>
Reference: [ Friedman, 1982 ] <author> H. Friedman. </author> <title> Beyond Kruskal's Theorem, </title> <note> 1982. Unpublished notes. </note>
Reference-contexts: Friedman [ 1981 ] showed that neither this theorem, nor a 0 2 `finite form' thereof, are provable in AT R 0 . The results about an extended form of Kruskal's Theorem are in <ref> [ Friedman, 1982 ] </ref> . 148 One usually requires that the set of axioms be finite, or generated by a finite number Higher Order Logic 61 measure a proof (for the definition of speed-up) either by counting the number of steps (lines) in it, 149 or the number of symbols.
Reference: [ Gallier, 1990 ] <author> J. Gallier. </author> <title> On Girard's "Candidats de Reductibilite". </title> <editor> In P. Odifreddi, editor, </editor> <booktitle> Logic and Computer Science, </booktitle> <pages> pages 123-203. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1990. </year>
Reference-contexts: syntactic size of detour formulas as a yardstick for progress on eliminating all detours: in eliminating the implicational detour above, might be a detour of the form 8R 0 , whose elimination would result in detours of syntactic complexity greater than that of the original detour ! '. 63 See <ref> [ Gallier, 1990 ] </ref> for a survey.
Reference: [ Girard et al., 1989 ] <author> J.-Y. Girard, Y. Lafont, and P. Taylor. </author> <title> Proofs and Types. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989. </year>
Reference-contexts: A survey of these and related advances can be found in [ Abiteboul and Kanellakis, 1990 ] . A seminal paper on computability for higher order objects is [ Dahlhaus and Makowsky, 1987 ] . 167 For more details and applications of this mapping see, for example, <ref> [ Girard et al., 1989 ] </ref> and [ Leivant, 1990b ] . Higher Order Logic 69 for relational variables of second order propositional logic and for type variables of the second order lambda calculus.
Reference: [ Girard, 1972 ] <author> J.-Y. Girard. </author> <title> Interpretation fonctionelle et elimination des coupures dans l'arithmetique d'ordre superieur, </title> <booktitle> 1972. </booktitle> <address> These de Doctorat d'Etat. </address>
Reference-contexts: More generally, universal quantification over objects of type o is an operator 8 o of type (o ! o) ! o. To define a generic universal quantifier that can be used for all types one needs to enrich the type structure beyond the one we have been discussing (cf. <ref> [ Girard, 1972; Coquand and Huet, 1985 ] </ref> ). Namely, in Girard's system F ! , the generic universal quantifier is an operator forall of type t: (t ! o) ! o, so that forall (o ) is functionally equivalent 42 to 8 o . <p> Another form of abstraction over types is polymorphism, which underlies (in a weak form) the programming language ML. Just as the functional type hierarchy is captured mathematically by the simply typed lambda calculus, polymorphism is captured by the second order lambda calculus, invented independently by Girard and Reynolds <ref> [ Girard, 1972; Reynolds, 1974 ] </ref> . 161 In the interest of our discussion in 8.2 below, let us outline the essentials of the second order lambda calculus. <p> students has shown that automated theorem proving can be naturally extended to higher order logic [ Andrews et al., 1984; Miller, 1983 ] . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization <ref> [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] </ref> , resolution [ Andrews, 1971 ] , Skolemization [ Miller, 1987 ] , unification [ Huet, 1975 ] , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving
Reference: [ Glebskii et al., 1969 ] <author> Y. V. Glebskii, D. I. Kogan, M. I. Liogonkii, and V. A. Talanov. </author> <title> Range and degree of realizability of formulas in the restricted predicate calculus. </title> <journal> Cybernetics, </journal> <volume> 5 </volume> <pages> 142-154, </pages> <year> 1969. </year>
Reference-contexts: In their original forms, common in expositions of Model Theory, these theorems are stated as characterizations of elementary equivalence. 70 This theorem was discovered independently by Glebskii et al. <ref> [ Glebskii et al., 1969 ] </ref> and Fagin [ Fagin, 1976 ] . It fails in the presence of constants: if ' is R (c; c) (R a binary relation constant) then (') = 1 2 .
Reference: [ Gloede, 1976 ] <author> K. Gloede. </author> <title> Reflection principles and indiscernibility. </title> <editor> In H. Muller, editor, </editor> <booktitle> Sets and Classes, </booktitle> <pages> pages 277-323. </pages> <publisher> North-Holland, </publisher> <address> Am-sterdam, </address> <year> 1976. </year>
Reference-contexts: The main issues addressed are: (1) Delineate formalisms whose predicative nature is brought out clearly, and 131 See [ Chuaqui, 1981 ] for a textbook development of set theory based on Bernays's axioms. 132 Applications of this form are in <ref> [ Gloede, 1976 ] </ref> . The existence of measurable cardinals is not provable in Bernays's theory [ Solovay et al., 1978 ] , but it is provable in a further natural extension of the theory, allowing hyper-classes [ Marshall, 1989 ] .
Reference: [ Godel, 1932 ] <author> K. </author> <title> Godel. Zur intuitionistischen Arithmetik und Zahlenthe-orie. </title> <journal> Ergebnisse eines mathematischen Kolloquiums, </journal> <volume> 4 </volume> <pages> 34-38, </pages> <year> 1932. </year> <note> English translation in [ Davis, </note> <year> 1965 </year> <month> ] , pages 75-81. </month>
Reference-contexts: Then ' $ ' 0 is provable in L 2 , and ' is provable in L 2 iff ' 0 is provable in IL 2 . The richness of constructive formalisms compared to their classical counterparts has numerous manifestation. One striking example, for higher 54 <ref> [ Kolmogorov, 1925; Godel, 1932 ] </ref> ; see also [ Friedman, 1978; Dragalin, 1979; Leivant, 1985 ] ; textbook expositions can be found in [ Kleene, 1952, Section 81 ] and [ Troelstra, 1973 ] . 55 I.e, ' 0 j ::' for atomic ' ( ^ O) 0 j 0
Reference: [ Godel, 1940 ] <author> K. </author> <title> Godel. The consistency of the axiom of choice and of the general continuum hypothesis, </title> <booktitle> volume 3 of Annals of Mathematical Studies. </booktitle> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1940. </year>
Reference-contexts: To the first group belong the formalisms of von Neu-mann [ 1925 ] , Bernays [ 1937; 1958 ] , Godel [ 1940 ] and Mostowski [ 1939 ] . In one style (e.g. <ref> [ Godel, 1940 ] </ref> ) the second order character of the theory is masked: the theory is rephrased as a first order theory of classes, in which the notion of a set is definable (x is a set iff x 2 a for some class a), and comprehension is restricted to
Reference: [ Goldfarb, 1981 ] <author> D. Goldfarb. </author> <title> The undecidability of the second order unification problem. </title> <journal> Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 225-230, </pages> <year> 1981. </year>
Reference-contexts: let ' be the conjunction of the formulas in , with R replaced by a variable R of the same arity, and let fl [~x] j df 9R (' ^ R (~x)). 68 The latter result is based on the undecidability of the second order term unication problem, proved in <ref> [ Goldfarb, 1981 ] </ref> . Higher Order Logic 31 It states, roughly, that a property of models is definable by a first order formula iff it is also recognized by a computation with a finite number of alternations between existential (nondeterministic) and universal (co-nondeterministic) guesses.
Reference: [ Gould, 1976 ] <author> W. E. Gould. </author> <title> A matching procedure for !-order logic, </title> <note> 1976. AFCRL Scientific Report 4. </note>
Reference-contexts: description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages [ Bruijn, 1980 ] , designed as a medium for a computerized compendium of mathematics within a higher order logic. 169 See also e.g. <ref> [ Gould, 1976; Jensen and Pietrzykowski, 1976; Petersson, 1982 ] </ref> . 170 An early presage of higher order theorem proving is [ Robinson, 1969 ] .
Reference: [ Gunter, 1992 ] <author> C. Gunter. </author> <title> Semantics of Programming Languages. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year> <title> Higher Order Logic 81 </title>
Reference-contexts: The model theory of second order lambda calculus is a fascinating albeit complex story. See e.g. [ Scedrov, 1990 ] and <ref> [ Gunter, 1992 ] </ref> chapter 11 for general expositions, and references there for pointers to the technical literature. 162 We use an optional type supserscript to indicate the type associated with a variable. <p> The seminal work was [ Scott and Strachey, 1971 ] . Recent expositions include the survey [ Mosses, 1990 ] and the textbooks <ref> [ Tennent, 1991; Gunter, 1992 ] </ref> . 172 Some recent key papers are [ Felty and Miller, 1988; Harper et al., 1987; Huet and Lang, 1978; Hannan and Miller, 1988b; Hannan and Miller, 1988a; Howe, 1988; Harper et al., 1989; Huet, 1986; Knoblock and Constable, 1986; Lee and Pleban, 1987; Paulson,
Reference: [ Gurevich and Shelah, 1986 ] <author> Y. Gurevich and S. Shelah. </author> <title> Fixed-point extensions of first-order logic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 32 </volume> <pages> 265-280, </pages> <year> 1986. </year>
Reference-contexts: A recent study on the scope of expressiveness of the -calculus is [ Lubarsky, 1993 ] . 90 Other fixpoint operators include inflationary fixpoint <ref> [ Gurevich and Shelah, 1986; Leivant, 1990c ] </ref> and existential fixpoints [ Blass and Gurevich, 1987 ] . Additional variants are mentioned in Section 8.4 below, in relation to computational complexity.
Reference: [ Gurevich, 1984 ] <author> Y. Gurevich. </author> <title> Toward logic tailored for computational complexity. </title> <editor> In M. M. Richter et al., editor, </editor> <booktitle> Computation and Proof Theory, Volume 1104 of LNM, </booktitle> <pages> pages 175-216. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1984. </year>
Reference-contexts: The restriction to positive operators is therefore less natural in the context of Computer Science <ref> [ Livchak, 1983; Gurevich, 1984 ] </ref> . Higher Order Logic 15 3 Canonical semantics of higher order logic 3.1 Tarskian semantics of second order logic Let us consider the semantics of second order formulas more formally. Let V be a vocabulary (as for first order logic), S a V -structure.
Reference: [ Gurevich, 1985 ] <author> Y. Gurevich. </author> <title> Monadic second-order theories. </title> <editor> In J. Bar-wise and S. Feferman, editors, </editor> <booktitle> Model-Theoretical Logics, </booktitle> <pages> pages 479-506. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year>
Reference-contexts: A discussion and compendium of monadic second order theories can be found in <ref> [ Gurevich, 1985 ] </ref> . 6.2 Restricted expressiveness 2: Fixpoint logics Because inductive definitions play particularly important roles in various applications of higher order logic, it is natural to isolate them, and to consider extensions of first order logic with fixpoint constructs. 88 The study of proof calculi for first order
Reference: [ Gurevich, 1987 ] <author> Y. Gurevich. </author> <title> Logic and the challenge of computer science. </title> <editor> In E. Borger, editor, </editor> <booktitle> Current Trends in Theoretical Computer Science. </booktitle> <publisher> Computer Science Press, </publisher> <year> 1987. </year>
Reference-contexts: The phrase data base queries is from [ Chandra and Harel, 1980 ] . Other terms for it include global relation <ref> [ Gurevich, 1987 ] </ref> . generalized relations, [ Rougemont, 1987 ] (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ Blass and Gurevich, 1986 ] , uniformly defined relations, [ Rougemont, 1987 ] , predicate, [ Leivant, 1987 ] , and predicate over oracles [ Cai and Furst,
Reference: [ Guttag, 1980 ] <author> J. Guttag. </author> <title> Notes on type abstraction. </title> <journal> IEEE Trans. on Software Engineering SE, </journal> 6/1:13-23, 1980. 
Reference: [ Hacking, 1979 ] <author> I. </author> <title> Hacking. </title> <journal> What is logic? Journal of Philosophy, </journal> <volume> 76 </volume> <pages> 285-319, </pages> <year> 1979. </year>
Reference-contexts: particular, a truth definition for first order arithmetic can be obtained by using quantification over first order definable relations (i.e. the lowest level 112 In particular, we have the propositional types ((); `) for all ` 0. 113 Among the promoters of ramified higher order logic are Hacking and Hazen <ref> [ Hacking, 1979; Hazen, 1983; Hazen, 1985 ] </ref> .
Reference: [ Hannan and Miller, 1988a ] <author> J. Hannan and D. Miller. </author> <title> Enriching a meta-language with higher-order features. </title> <editor> In J. Lloyd, editor, </editor> <booktitle> Proceedings of the Workshop on Meta-Programming in Logic Programming, </booktitle> <address> Bristol, </address> <year> 1988. </year> <institution> University of Bristol. </institution>
Reference: [ Hannan and Miller, 1988b ] <author> J. Hannan and D. Miller. </author> <title> Uses of higher-order unification for implementing program transformers. </title> <booktitle> In Logic Programming: Proceedings of the Fifth International Conference and Symposium, </booktitle> <volume> volume 2, </volume> <pages> pages 942-959. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference: [ Harel, 1979 ] <author> David Harel. </author> <title> Characterizing second order logic with first order quantifiers. </title> <journal> Zetisch. fur Math. Logik u. Grundlagen der Mathematik, </journal> <volume> 25 </volume> <pages> 419-422, </pages> <year> 1979. </year>
Reference: [ Harper et al., 1987 ] <author> R. Harper, F. Honsell, and G. Plotkin. </author> <title> A framework for defining logics. </title> <booktitle> In Symposium on Logic in Computer Science, </booktitle> <pages> pages 194-204. </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Washington, </address> <year> 1987. </year>
Reference: [ Harper et al., 1989 ] <author> R. Harper, D. Sannella, and A. Tarlecki. </author> <title> Logic representation. </title> <booktitle> In Proceedings of the Workshop on Category Theory and Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989. </year>
Reference: [ Hazen, 1983 ] <author> A. P. Hazen. </author> <title> Ramified type theories. </title> <editor> In D. Gabbay and F. Guenthner, editors, </editor> <booktitle> Handbook of Philosophical Logic, Volume I. </booktitle> <address> Rei-del, Dordrecht, </address> <year> 1983. </year>
Reference-contexts: We say that a formula ' of predicative second order logic is 110 See <ref> [ Hazen, 1983 ] </ref> for a survey of ramified type theories. 111 See e.g. [ Quine, 1937; Quine, 1951; Wang, 1954; Wang, 1962 ] 50 Daniel Leivant true in a structure S if it is true in S when variables ` R k are interpreted as ranging over ` U k <p> particular, a truth definition for first order arithmetic can be obtained by using quantification over first order definable relations (i.e. the lowest level 112 In particular, we have the propositional types ((); `) for all ` 0. 113 Among the promoters of ramified higher order logic are Hacking and Hazen <ref> [ Hacking, 1979; Hazen, 1983; Hazen, 1985 ] </ref> .
Reference: [ Hazen, 1985 ] <author> A. P. Hazen. </author> <title> Nominalism and abstract entities. </title> <journal> Analysis, </journal> <volume> 45 </volume> <pages> 65-68, </pages> <year> 1985. </year>
Reference-contexts: particular, a truth definition for first order arithmetic can be obtained by using quantification over first order definable relations (i.e. the lowest level 112 In particular, we have the propositional types ((); `) for all ` 0. 113 Among the promoters of ramified higher order logic are Hacking and Hazen <ref> [ Hacking, 1979; Hazen, 1983; Hazen, 1985 ] </ref> .
Reference: [ Hazen, 1989 ] <author> A.P. Hazen. </author> <title> Two logical reductions. </title> <type> Preprint 2/89, </type> <month> October </month> <year> 1989. </year> <institution> Department of Philosophy, University of Melbourne. </institution>
Reference: [ Hazen, 1992 ] <author> A. P. Hazen. </author> <title> Interpretability of Robinson Arithmetic in the 82 Daniel Leivant ramified second-order theory of dense linear order. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 33 </volume> <pages> 101-111, </pages> <year> 1992. </year>
Reference-contexts: Higher Order Logic 51 in the ramified hierarchy of relations). 114 Another interesting example of the expressive power of ramified higher order logic over particular structures is the interpretability of Robinson's Arithmetic (an undecidable theory) in level 2 ramified second order theory of dense linear orders <ref> [ Hazen, 1992 ] </ref> . This ought to be contrasted with the first order theory of dense linear orders, which is decidable. 7 Mathematical practice Mathematics is replete with second order notions and images.
Reference: [ Heijenoort, 1967 ] <editor> J.van Heijenoort. </editor> <title> From Frege to Godel, A Source Book in Mathematical Logic, </title> <address> 1879-1931. </address> <publisher> Harvard University Press, </publisher> <address> Cam-bridge, MA, </address> <year> 1967. </year>
Reference: [ Henkin et al., 1971 ] <editor> L. Henkin, J. D. Monk, and A. Tarski. Cylindric Algebras I. </editor> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1971. </year>
Reference-contexts: Let us use the same identifiers extension to finite order logic of the algebraic development of first order logic, due to Tarski <ref> [ Henkin et al., 1971 ] </ref> . A survey of these and related advances can be found in [ Abiteboul and Kanellakis, 1990 ] .
Reference: [ Henkin, 1950 ] <author> Leon Henkin. </author> <title> Completeness in the theory of types. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 15 </volume> <pages> 81-91, </pages> <year> 1950. </year>
Reference-contexts: Motowski showed that expressive equivalence with full second order logic can be obtained, alternatively, by closing the collection of partially-ordered quantifiers under a duality operation. For detailed surveys on partially-ordered quantifiers see [ Mundici, 1985 ] and [ Krynicki and Mostowski, 1994 ] . 77 See <ref> [ Henkin, 1950 ] </ref> .
Reference: [ Henkin, 1961 ] <author> L. </author> <title> Henkin. Some remarks on infinitely long formulas. </title> <booktitle> In Infinitistic Methods, </booktitle> <pages> pages 167-183, </pages> <address> Warsaw, </address> <year> 1961. </year>
Reference-contexts: A Henkin-structure of finite order logic is a Henkin-prestructure H that is closed under definability: for each formula ', assignment j into H, and type o = (o 1 : : : o k ), 78 76 The formula j is due to Ehrenfeucht (reported in <ref> [ Henkin, 1961 ] </ref> ). [ Enderton, 1970 ] and [ Walkoe, 1970 ] independently showed that every 1 1 formula is semantically equiva lent to a formula in the language L H 1 of first order logic augmented with partially-ordered quantifiers.
Reference: [ Hilbert and Ackermann, 1928 ] <author> D. Hilbert and W. Ackermann. </author> <title> Grundzuge der theoretischen Logik. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1928. </year> <title> English translation in Principles of Mathematical Logic. </title> <publisher> Chelsea, </publisher> <address> New York, </address> <year> 1950. </year>
Reference-contexts: 8D (oe;o) ( 8x oe 9y o D (x; y) ! 9R (oe;o) 8x oe 9!y o R (x; y) ^ D (x; y) ): For types (; oe), with oe = (oe 1 : : : oe r ), we can reformulate this axiom as a principle of Collection <ref> [ Hilbert and Ackermann, 1928, Section IV.1 ] </ref> : 8D (;oe) ( 8x 9y oe D (x; y) ! 9z (;oe) 8x oe D (x; z x ) ); where D (x; z x ) j df 9y oe ( 8u oe 1 r ( y (~u) $ z (x; ~u) <p> There are alternative formulations, all equivalent by the use of weak forms of Comprehension. <ref> [ Hilbert and Ackermann, 1928 ] </ref> gives the following schema, which states that for every binary relation D there is a function R that acts as a choice (partial) function on the domain of D: 8D9R ( 8x; y; z (R (x; y) ^ R (x; z) ! y z) ^
Reference: [ Hilbert and Bernays, 1939 ] <author> D. Hilbert and P. Bernays. </author> <title> Grundlagen der Mathematik II. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1939. </year> <title> Second edition: </title> <publisher> Springer-Verlag, </publisher> <year> 1970. </year>
Reference-contexts: An early example is the development of much of analysis using only arithmetic comprehension, by Weyl [ 1918 ] . 144 Sieg notes that virtually all of the turn-of-the-century analysis, as presented in <ref> [ Hilbert and Bernays, 1939 ] </ref> , can be formalized already in second order arithmetic with 1 1 comprehension and induction for 1 1 formulas [ Sieg, 1990 ] .
Reference: [ Hintikka, 1955 ] <author> J. Hintikka. </author> <title> Reductions in the theory of types. </title> <journal> Acta Philo-sophica Fennica, </journal> <volume> 8 </volume> <pages> 61-115, </pages> <year> 1955. </year>
Reference: [ Hitchcock and Park, 1973 ] <author> P. Hitchcock and D. Park. </author> <title> Induction rules and termination proofs. </title> <booktitle> In Proceedings of the First International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 225-251. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1973. </year>
Reference: [ Hodges, 1993 ] <author> W. Hodges. </author> <title> Model Theory. </title> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: For operators defined by first order formulas the converse also holds: if R~x ' is monotone over all structures, where ' is first order, then there is a formula logically equivalent to ' in which all occurrences of R are positive (by Lyndon's Theorem, see e.g. <ref> [ Chang and Keisler, 1973; Hodges, 1993 ] </ref> ). 33 29 These restrictions are motivated by expository terseness, and could be removed. 30 we use Greek letters as ordinary first order variables 31 The expression ' j R abbreviates 8~x (' $ R (~x)), where arity (~x) = arity (R). 32 <p> Similarly, logic with a quantifier U = `there exist uncountably many' has U interpreted as intended in all structures. Second order logic is, then, one 69 See e.g. <ref> [ Chang and Keisler, 1973; Hodges, 1993 ] </ref> for detailed proofs of the Fraisse and Keisler Theorems; Van Benthem and Doets [ Benthem and Doets, 1983 ] have a pleasant and simplified presentation.
Reference: [ Hopcroft and Ullman, 1979 ] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1979. </year>
Reference-contexts: detour, where a detour is a formula which is derived by an introduction rule, and is also the principal premise of an elimination rule. 61 For example, in a deduction of the form 56 i.e. the proof formalism for boolean quantified formulas. 57 [ Stockmeyer, 1974 ] ; see e.g. <ref> [ Hopcroft and Ullman, 1979 ] </ref> ; the decidability of quan tified boolean formulas is a canonical example of a poly-space complete problem. 58 This complexity of IL 0 2 is related to the facts that there is no truth-table semantics for which intuitionistic propositional logic is sound and complete, but
Reference: [ Howard, 1980 ] <author> W. A. Howard. </author> <title> The formulae-as-types notion of construction. </title> <editor> In J. P. Seldin and J. R. Hindley, editors, To H. B. </editor> <booktitle> Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism, </booktitle> <pages> pages 479-490. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1980. </year> <note> Preliminary manuscript: </note> <year> 1969. </year>
Reference-contexts: Constructive finite order logic is in fact a highly fecund formalism, with strong and useful ties to computing and to programming. Perhaps the most powerful ingredient of that connection is the close resemblance, discovered by Howard <ref> [ Howard, 1980 ] </ref> , between typed lambda calculi and natural deduction calculi (see Section 8.2). <p> This analogy was elaborated by Curry [ Curry and Feys, 1958 ] , and rediscovered by Howard in a yet more prestine form, for natural deduction proofs <ref> [ Howard, 1980 ] </ref> .
Reference: [ Howe, 1988 ] <author> D. J. Howe. </author> <title> Computational metatheory in Nuprl. </title> <editor> In E. Lusk and R. Overbeek, editors, </editor> <booktitle> Ninth International Conference on Automated Deduction, Volume 310 of LNCS, </booktitle> <pages> pages 238-257. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference: [ Huet and Lang, 1978 ] <author> G. Huet and B. Lang. </author> <title> Proving and applying program transformations expressed with second-order patterns. </title> <journal> Acta Infor-matica, </journal> <volume> 11 </volume> <pages> 31-55, </pages> <year> 1978. </year>
Reference: [ Huet, 1975 ] <author> G. Huet. </author> <title> A unification algorithm for typed -calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 1 </volume> <pages> 27-57, </pages> <year> 1975. </year> <title> Higher Order Logic 83 </title>
Reference-contexts: ] . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] , resolution [ Andrews, 1971 ] , Skolemization [ Miller, 1987 ] , unification <ref> [ Huet, 1975 ] </ref> , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages [ Bruijn, 1980 ] , designed as
Reference: [ Huet, 1986 ] <author> G. Huet. </author> <title> Formal structures for computation and deduction, </title> <booktitle> 1986. Lecture Notes, </booktitle> <institution> Carnegie Mellon University. </institution>
Reference: [ Immerman, 1986 ] <author> N. Immerman. </author> <title> Relational queries computable in polynomial time. </title> <journal> Information and Control, </journal> <volume> 68 </volume> <pages> 86-104, </pages> <year> 1986. </year> <note> Preliminary report in Fourteenth ACM Symposium on Theory of Computing, </note> <year> 1982, </year> <pages> pp. 147-152. </pages>
Reference-contexts: The seminal result on characterization of complexity classes in terms of fixpoint queries states that a query over ordered finite structures is in P iff it is definable in the logic FO (first order logic with a monotone fixpoint operation, see Section 6.2) <ref> [ Immerman, 1986; Vardi, 1982 ] </ref> .
Reference: [ Immerman, 1987 ] <author> N. Immerman. </author> <title> Languages which capture complexity classes. </title> <journal> SIAM Journal of Computing, </journal> <volume> 16 </volume> <pages> 760-778, </pages> <year> 1987. </year>
Reference-contexts: The interpretation of second order arithmetic in second order logic (Section 2.3) implies that the provable functions of L 2 (all second order formulas) are precisely the provably-recursive functions of second order arithmetic. 179 177 Characterizations that fall into neither of the spectra above include characterizations of nondeterministic log-space <ref> [ Immerman, 1987; Blass and Gurevich, 1986 ] </ref> , of poly-time [ Immerman, 1987 ] , and of exponential time [ Christen, 1974; Immerman, 1987 ] . 178 Recall the Reverse Mathematics program, described in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given <p> (Section 2.3) implies that the provable functions of L 2 (all second order formulas) are precisely the provably-recursive functions of second order arithmetic. 179 177 Characterizations that fall into neither of the spectra above include characterizations of nondeterministic log-space [ Immerman, 1987; Blass and Gurevich, 1986 ] , of poly-time <ref> [ Immerman, 1987 ] </ref> , and of exponential time [ Christen, 1974; Immerman, 1987 ] . 178 Recall the Reverse Mathematics program, described in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given in [ Leivant, 1990b ] . 74 Daniel Leivant Using comprehension <p> 2 (all second order formulas) are precisely the provably-recursive functions of second order arithmetic. 179 177 Characterizations that fall into neither of the spectra above include characterizations of nondeterministic log-space [ Immerman, 1987; Blass and Gurevich, 1986 ] , of poly-time [ Immerman, 1987 ] , and of exponential time <ref> [ Christen, 1974; Immerman, 1987 ] </ref> . 178 Recall the Reverse Mathematics program, described in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given in [ Leivant, 1990b ] . 74 Daniel Leivant Using comprehension for computational (i.e. strict-1 1 , see Section 3.2)
Reference: [ Jensen and Pietrzykowski, 1976 ] <author> D. C. Jensen and T. Pietrzykowski. </author> <title> Mechanizing ! order type theory through unification. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 123-171, </pages> <year> 1976. </year>
Reference-contexts: description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages [ Bruijn, 1980 ] , designed as a medium for a computerized compendium of mathematics within a higher order logic. 169 See also e.g. <ref> [ Gould, 1976; Jensen and Pietrzykowski, 1976; Petersson, 1982 ] </ref> . 170 An early presage of higher order theorem proving is [ Robinson, 1969 ] .
Reference: [ Jones and Selman, 1974 ] <author> N. G. Jones and A. L. Selman. </author> <title> Turing machines and the spectra of first order formulas. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 39 </volume> <pages> 139-150, </pages> <year> 1974. </year>
Reference-contexts: Jones and Selman proved a similar and closely related result, that first order spectra are precisely the sets computable in NTime (2 cn ), where the input is given in binary. The proof methods of [ Fagin, 1974 ] and <ref> [ Jones and Selman, 1974 ] </ref> are similar. Higher Order Logic 73 and Vianu, 1989 ] : if is an operator on k-ary relations, then R:(R) is m (;), where m is the smallest number such that m (;) = m+1 (;).
Reference: [ Kechris and Moschovakis, 1977 ] <author> A. Kechris and Y. Moschovakis. </author> <title> Recursion in higher types, </title> <booktitle> 1977. In [ Barwise, </booktitle> <year> 1977 </year> <month> ] , 681-738. </month>
Reference-contexts: today that absolute rigor has been achieved' ( [ Poincare, 1902 ] , quoted in [ Fraenkel et al., 1973, p. 14 ] ). 134 See e.g. [ Feferman, 1977 ] for a broad and informative survey of the development of mathematical analysis in finite order logic. 135 See e.g. <ref> [ Kechris and Moschovakis, 1977 ] </ref> for a survey and further references. 58 Daniel Leivant classify their proof theoretic strength; (2) Reduce seemingly impredica tive methods to predicative ones, or otherwise justify them by predicative means; (3) Identify those parts of Analysis which can be formalized in various predicative calculi.
Reference: [ Kelley, 1955 ] <author> J. L. Kelley. </author> <title> General Topology. </title> <publisher> Van Nostrand, </publisher> <address> New York, </address> <year> 1955. </year>
Reference-contexts: Let us denote by KM the theories in this group. The KM theories are particularly attractive for actual formalization of branches of mathematics with a strong set theoretic component, notably of point set topology <ref> [ Kelley, 1955 ] </ref> and category theory. The relation of KM to ZF is analogous to the relation of full analysis to first-order arithmetic: KM proves reflection for ZF, and is therefore not a conservative extension thereof.
Reference: [ Kleene, 1952 ] <author> S. C. Kleene. </author> <title> Introduction to Metamathematics. </title> <address> Wolters-Noordhof, Groningen, </address> <year> 1952. </year>
Reference-contexts: A (partial) function f over the algebra A is computed by (P; f ) if f = f P . For example, 14 Herbrand-Godel programs, a variant of equational programs for natural numbers, are defined e.g. in <ref> [ Kleene, 1952 ] </ref> . 15 That is, (1) P ` E for every E 2 P ; (2) P ` x x; (3) if P ` E then P ` [t=u]E for every V P -term t and variable u (where [t=u] denotes is the operation of substituting t for <p> is not coherent, nor is fg (x) = f (0); f (0) = 0; f (0) = s0g. 17 Here arity (~x) = arity (f ), and A (x 1 : : : x k ) abbreviates A (x 1 ) ^ ^ A (x k ). 18 See e.g. <ref> [ Kleene, 1952 ] </ref> for numeric programs, [ Leivant, 1994 ] for programs over W. 19 We follow tradition in referring to N, even though from a modern viewpoint richer free algebras, such as W, are more appropriate. <p> O and O 0 are quantifier-free. 37 If a structure has a definable pairing function for structure-elements, as is the case for N +;fi and its expansions, then each vector ~ff and ~x can be replaced by a single variable (with appropriate changes in the quantifier-free matrix). 38 See e.g. <ref> [ Kleene, 1952 ] </ref> . 39 A detailed textbook exposition is in [ Andrews, 1986 ] . 18 Daniel Leivant A (o 1 :::o k ) = df P ( i=1 For type o we have Q 0 i=1 A i = f ()g (a singleton), so A o is the <p> The richness of constructive formalisms compared to their classical counterparts has numerous manifestation. One striking example, for higher 54 [ Kolmogorov, 1925; Godel, 1932 ] ; see also [ Friedman, 1978; Dragalin, 1979; Leivant, 1985 ] ; textbook expositions can be found in <ref> [ Kleene, 1952, Section 81 ] </ref> and [ Troelstra, 1973 ] . 55 I.e, ' 0 j ::' for atomic ' ( ^ O) 0 j 0 ^ O 0 , ( ! O) 0 j 0 ! O 0 , ( _ O) 0 j ::( 0 _ O 0
Reference: [ Kleene, 1955 ] <author> S. C. Kleene. </author> <title> On the forms of the predicates in the theory of constructive ordinals (second paper). </title> <journal> Amer. Journal of Math., </journal> <volume> 77 </volume> <pages> 405-428, </pages> <year> 1955. </year>
Reference-contexts: Moreover, 1 1 sets are definable by a natural transfinite extension of the arithmetical hierarchy <ref> [ Kleene, 1955 ] </ref> , providing further constructive justification for them. (4) Weak Konig's Lemma is conservative, with respect to 1 1 formulas, over second order arithmetic with recursive comprehension and 0 1 -induction [ Sieg, 1987 ] .
Reference: [ Knoblock and Constable, 1986 ] <author> T. B. Knoblock and R. L. Constable. </author> <title> Formalized metareasoning in type theory. </title> <booktitle> In First Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 237-248, </pages> <address> Cambridge, MA, 1986. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: [ Kolaitis and Vardi, 1987 ] <author> P. Kolaitis and M. Vardi. </author> <title> The decision problem for the probabilities of higher-order properties. </title> <booktitle> In Proceedings of the Nineteenth ACM Symp. on Theory of Computing, </booktitle> <pages> pages 425-435. </pages> <publisher> ACM, </publisher> <address> New York, </address> <year> 1987. </year>
Reference: [ Kolaitis and Vardi, 1990 ] <author> P. Kolaitis and M. Vardi. </author> <title> 0-1 laws for infinitary logics. </title> <booktitle> In Proceedings of the Fifth IEEE Symp. on Logic in Computer Science, </booktitle> <pages> pages 156-167, </pages> <address> Los Alamitos, 1990. </address> <publisher> IEEE Computer Science Press. </publisher>
Reference: [ Kolaitis and Vardi, 1992 ] <author> P. Kolaitis and M. Vardi. </author> <title> 0-1 laws for fragments of second-order logic: An overview. </title> <editor> In Y. Moschovakis, editor, </editor> <booktitle> Logic from Computer Science, </booktitle> <pages> pages 51-72. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: A survey of 0-1 laws for various logics is [ Compton, 1988 ] ; some more recent results can be found in [ Spencer and Shelah, 1987; Kolaitis and Vardi, 1987; Kolaitis and Vardi, 1990; Kolaitis and Vardi, 1992; Spencer, 1993 ] . 71 However, see <ref> [ Kolaitis and Vardi, 1992 ] </ref> for cases of second order formulas for which the 0-1 law does hold. 32 Daniel Leivant in a plethora of logics, in which the logical constants of first order logic are augmented by quantification over relations.
Reference: [ Kolmogorov, 1925 ] <author> A. </author> <title> Kolmogorov. Sur le principe de tertium non datur. </title> <journal> Recueil Math. de la Soc. Math. de Moscou, </journal> <volume> 32 </volume> <pages> 647-667, </pages> <year> 1925. </year> <note> English translation in [ Heijenoort, </note> <year> 1967 </year> <month> ] , 414-437. </month>
Reference-contexts: Then ' $ ' 0 is provable in L 2 , and ' is provable in L 2 iff ' 0 is provable in IL 2 . The richness of constructive formalisms compared to their classical counterparts has numerous manifestation. One striking example, for higher 54 <ref> [ Kolmogorov, 1925; Godel, 1932 ] </ref> ; see also [ Friedman, 1978; Dragalin, 1979; Leivant, 1985 ] ; textbook expositions can be found in [ Kleene, 1952, Section 81 ] and [ Troelstra, 1973 ] . 55 I.e, ' 0 j ::' for atomic ' ( ^ O) 0 j 0
Reference: [ Kozen and Parikh, 1983 ] <author> D. Kozen and R. Parikh. </author> <title> A decision procedure 84 Daniel Leivant for the propositional -calculus. </title> <booktitle> In Proc. Workshop on Logics of Programs 1983, Volume 164 of LNCS, </booktitle> <pages> pages 313-325, </pages> <address> Berlin, 1983. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: the interaction between the two fixpoints may get to be too complex to be rendered with the weaker reading. 92 It is easy to see that the truth of number theoretic formulas is reducible 89 A finite model theorem and a decision procedure for the propositional -calculus are proved in <ref> [ Kozen, 1988; Kozen and Parikh, 1983 ] </ref> , and a 0-1 law in [ Blass et al., 1985 ] .
Reference: [ Kozen, 1983 ] <author> D. Kozen. </author> <title> Results on the propositional -calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 27 </volume> <pages> 333-354, </pages> <year> 1983. </year> <booktitle> Preliminary version in Proceedings of the Ninth International Colloquium on Automata, Languages, and Programming, </booktitle> <month> July </month> <year> 1982. </year>
Reference-contexts: Higher Order Logic 43 study of the propositional -calculus, that is, propositional logic enriched with a fixpoint construct <ref> [ Kozen, 1983 ] </ref> . 89 In database theory the interest in extending first order logic with a fixpoint operator [ Chandra and Harel, 1982 ] evolved from the expressive limitations of first order logic, e.g. the impossibility to define (uniformly over all structures) the transitive closure of a binary relation,
Reference: [ Kozen, 1988 ] <author> D. Kozen. </author> <title> A finite model theorem for the propositional - calculus. </title> <journal> Studia Logica, </journal> <volume> 47 </volume> <pages> 233-241, </pages> <year> 1988. </year> <note> Preliminary version as Technical Report IBM RC-10320, </note> <month> January </month> <year> 1984. </year>
Reference-contexts: the interaction between the two fixpoints may get to be too complex to be rendered with the weaker reading. 92 It is easy to see that the truth of number theoretic formulas is reducible 89 A finite model theorem and a decision procedure for the propositional -calculus are proved in <ref> [ Kozen, 1988; Kozen and Parikh, 1983 ] </ref> , and a 0-1 law in [ Blass et al., 1985 ] .
Reference: [ Krajicek, 1989 ] <author> J. Krajicek. </author> <title> On the number of steps in proofs. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 41 </volume> <pages> 153-178, </pages> <year> 1989. </year>
Reference-contexts: Parikh [ Parikh, 1973; Parikh, 1986 ] gave a proof of Theorem 7.4.4 for speed-up of PA 2 over PA 1 , which was extended to speedup of PA k+1 over PA k by Krajicek <ref> [ Krajicek, 1989 ] </ref> . However, both proofs refer to formalizations where addition and multiplication are ternary relations. 64 Daniel Leivant tame speed-up over first order logic than do higher order number theories over first order arithmetic.
Reference: [ Kreisel and Krivine, 1964 ] <author> G. Kreisel and J.-L. Krivine. </author> <title> Elements de Logique Mathematique. </title> <address> Dunod, Paris, </address> <year> 1964. </year> <title> English translation: Elements of Mathematical Logic. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1967. </year>
Reference: [ Kreisel and Levy, 1968 ] <author> G. Kreisel and A. Levy. </author> <title> Reflection principles and their use for establishing the complexity of axiomatic systems. </title> <journal> Zetisch. fur Math. Logik u. Grundlagen der Mathematik, </journal> <volume> 14 </volume> <pages> 97-191, </pages> <year> 1968. </year>
Reference-contexts: Similarly, ZF based on second order logic, with Replacement formulated as a second order axiom and with comprehension for first order formulas, is conservative over ZF. This should be contrasted with the non-finite axiomatizability of the corresponding first order theories: Lemma 7.1.2. <ref> [ Kreisel, 1968; Kreisel and Levy, 1968 ] </ref> Let T be a first order theory that proves cut-elimination for first order logic (via a suitable coding of the syntax), has for each k a provable truth definition for all formulas of complexity k, and proves induction for all formulas in the
Reference: [ Kreisel, 1963 ] <author> G. Kreisel. </author> <title> Lectures on proof theory, </title> <booktitle> 1963. Mimeographed notes, </booktitle> <publisher> Stanford University. </publisher>
Reference-contexts: These theories were initiated in <ref> [ Kreisel, 1963 ] </ref> , and studied extensively in the 1960's and 1970's; see e.g. [ Buchholz et al., 1981 ] . <p> Such definitions are a paradigm of predicative, bottom-up, construction of subsets of N. Intuitionistic theories of transfinitely iterated inductive definitions were introduced in <ref> [ Kreisel, 1963 ] </ref> . A detailed account of such theories is in [ Buchholz et al., 1981 ] . 141 Two predicative formalisms may have the same proof-theoretic power, as measured by provable well-orderings, yet differ substantially in their ability to capture mathematical practice.
Reference: [ Kreisel, 1965 ] <author> G. Kreisel. </author> <title> Mathematical logic. </title> <editor> In T. Saaty, editor, </editor> <booktitle> Lectures on Modern Mathematics, volume III, </booktitle> <pages> pages 95-195. </pages> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1965. </year>
Reference: [ Kreisel, 1967 ] <author> G. Kreisel. </author> <title> Informal rigor and completeness proofs. </title> <editor> In I. Lakatos, editor, </editor> <booktitle> Problems in the Philosophy of Mathematics, </booktitle> <pages> pages 138-186. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1967. </year>
Reference-contexts: of a class F , whose restriction to a set y is a univalent mapping, then F maps y to a set w. 115 '[t] abbreviates here [t=x]', the result of simultaneously substituting t for all free occurrences of x in '. 116 These and related issues are discussed in <ref> [ Kreisel, 1967 ] </ref> . 117 We write '[t; s] for [t; s=x; y]', where x; y are some distinct variables Higher Order Logic 53 The practical interest in theories such as Peano's arithmetic and ZFC is their axiomatizability by a finite number of axioms and schemas.
Reference: [ Kreisel, 1968 ] <author> G. Kreisel. </author> <title> A survey of proof theory. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 33 </volume> <pages> 321-388, </pages> <year> 1968. </year>
Reference-contexts: Whereas every 1 1 set in the analytical hierarchy is definable by some formula of the first form, the sets defined by formulas of the second form are all recursively enumerable <ref> [ Kreisel, 1968 ] </ref> ! The latter formulas were dubbed strict- 1 1 in [ Barwise, 1969; Barwise, 1975 ] , and computational in [ Leivant, 1987 ] . <p> Of some interest are variants of the Choice principles above, such as the schema of Dependent Choice and Generalized Dependent Choice (see e.g. <ref> [ Kreisel, 1968; Feferman, 1977 ] </ref> ). 52 9! abbreviates `there is a unique': 9!y j df 9y ( ^ 8z ( [z=y] ! z = y )). <p> Similarly, ZF based on second order logic, with Replacement formulated as a second order axiom and with comprehension for first order formulas, is conservative over ZF. This should be contrasted with the non-finite axiomatizability of the corresponding first order theories: Lemma 7.1.2. <ref> [ Kreisel, 1968; Kreisel and Levy, 1968 ] </ref> Let T be a first order theory that proves cut-elimination for first order logic (via a suitable coding of the syntax), has for each k a provable truth definition for all formulas of complexity k, and proves induction for all formulas in the
Reference: [ Kreisel, 1971 ] <author> G. Kreisel. </author> <title> A survey of proof theory II. </title> <editor> In J. E. Fenstad, editor, </editor> <booktitle> Proceedings of the Second Scandinavian Logic Symposium, </booktitle> <pages> pages 109-170. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1971. </year>
Reference: [ Krynicki and Mostowski, 1994 ] <editor> M. Krynicki and M. Mostowski. Henkin quantifiers. In M. Krynicki et al., editor, Quantifiers. </editor> <publisher> Kluwer, </publisher> <year> 1994. </year>
Reference-contexts: Motowski showed that expressive equivalence with full second order logic can be obtained, alternatively, by closing the collection of partially-ordered quantifiers under a duality operation. For detailed surveys on partially-ordered quantifiers see [ Mundici, 1985 ] and <ref> [ Krynicki and Mostowski, 1994 ] </ref> . 77 See [ Henkin, 1950 ] .
Reference: [ Kuper and Vardi, 1984 ] <author> G. M. Kuper and M. Vardi. </author> <title> A new approach to database logic. </title> <booktitle> In Proceedings of the Third ACM Conference on Principles of Database Systems, </booktitle> <pages> pages 86-96, </pages> <address> Providence, RI, 1984. </address> <publisher> ACM Press. </publisher>
Reference-contexts: (o) consists of the finite subsets of U o ; and U [o 1 :A 1 ;:::o k :A k ] consits of the k-tuples of pairs, [u 1 : A 1 : : : u k : A k ], where u i 2 U o i . 166 <ref> [ Abiteboul and Beeri, 1988; Kuper and Vardi, 1984 ] </ref> .
Reference: [ Lakshman and Reddy, 1991 ] <author> T. K. Lakshman and O. Reddy. </author> <title> Typed pro-log: A semantic reconstruction of the Mycroft-O'Keefe true system. </title> <editor> In V. Saraswat and K. Veda, editors, </editor> <booktitle> Logic Programming: Proceedings of the 1991 International Symposium, </booktitle> <pages> pages 202-217, </pages> <address> Cambridge, MA, </address> <year> 1991. </year> <title> MIT Press. Higher Order Logic 85 </title>
Reference: [ Lauchli, 1968 ] <author> H. Lauchli. </author> <title> A decision procedure for the weak second order theory of linear order. In Contributions to Mathematical Logic. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1968. </year>
Reference-contexts: Although weak second order theories are natural and are related to applications of logic in the theory of computing and in artificial intelligence, not very much has been proved about them. Two examples: the weak second order theory of linear ordering is decidable <ref> [ Lauchli, 1968 ] </ref> , and the weak second order theory of one function is decidable [ Rabin, 1969 ] . 95 Recall that ' suc j df 8x s (x) 6= 0 ^ 8x; y ( s (x) = s (y) ! x = y ). 96 For example, Plus
Reference: [ Leblanc, 1976 ] <author> H. Leblanc. </author> <title> Truth-Value Semantics. </title> <publisher> North-Holland, </publisher> <address> Am-sterdam, </address> <year> 1976. </year>
Reference: [ Lee and Pleban, 1987 ] <author> P. Lee and U. F. Pleban. </author> <title> A realistic compiler generator based on high-level semantics. </title> <booktitle> In Proceedings of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 284-295. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1987. </year>
Reference: [ Leivant, 1983 ] <author> D. Leivant. </author> <title> Reasoning about functional programs and complexity classes associated with type disciplines. </title> <booktitle> In Twenty-fourth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 460-469, </pages> <year> 1983. </year>
Reference-contexts: 1 ) ^ g (w 0 ) = w 1 ^ M P [w 0 ; w 1 ; z 0 ; z 1 ] ! R (z 0 ; z 1 )): It is easy to exhibit similar definitions for most basic programming constructs, including recursive procedures and modules <ref> [ Leivant, 1983 ] </ref> . 2.5 Expressing convergence using second order validity The definability of free-algebras by second order formulas can be extended to a characterization of the total computable functions. We summarize the argument of [ Leivant, 1983; Leivant, 1994 ] . <p> We summarize the argument of <ref> [ Leivant, 1983; Leivant, 1994 ] </ref> . Of the many computation calculi that generate the total recursive functions one that lends itself naturally to this model theoretic setting are equational programs; a rudimentary form of such programs would serve us best. 14 Fix a free algebra A .
Reference: [ Leivant, 1985 ] <author> D. Leivant. </author> <title> Syntactic translations and provably recursive functions. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 50 </volume> <pages> 682-688, </pages> <year> 1985. </year>
Reference-contexts: The richness of constructive formalisms compared to their classical counterparts has numerous manifestation. One striking example, for higher 54 [ Kolmogorov, 1925; Godel, 1932 ] ; see also <ref> [ Friedman, 1978; Dragalin, 1979; Leivant, 1985 ] </ref> ; textbook expositions can be found in [ Kleene, 1952, Section 81 ] and [ Troelstra, 1973 ] . 55 I.e, ' 0 j ::' for atomic ' ( ^ O) 0 j 0 ^ O 0 , ( ! O) 0 j
Reference: [ Leivant, 1987 ] <author> D. Leivant. </author> <title> Descriptive characterizations of computational complexity. </title> <booktitle> In Second Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 203-217, </pages> <address> Washington, </address> <year> 1987. </year> <journal> IEEE Computer Society Press. Revised in Journal of Computer and System Sciences, </journal> <volume> 39 </volume> <pages> 51-83, </pages> <year> 1989. </year>
Reference-contexts: in the analytical hierarchy is definable by some formula of the first form, the sets defined by formulas of the second form are all recursively enumerable [ Kreisel, 1968 ] ! The latter formulas were dubbed strict- 1 1 in [ Barwise, 1969; Barwise, 1975 ] , and computational in <ref> [ Leivant, 1987 ] </ref> . The term `computational' is motivated by the fact that each such formula defines, uniformly for all V -structures, the operational semantics of a certain finite state machine. <p> Other terms for it include global relation [ Gurevich, 1987 ] . generalized relations, [ Rougemont, 1987 ] (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ Blass and Gurevich, 1986 ] , uniformly defined relations, [ Rougemont, 1987 ] , predicate, <ref> [ Leivant, 1987 ] </ref> , and predicate over oracles [ Cai and Furst, 1987 ] . 72 Daniel Leivant include all the variables free in ') defines the query ~v:', that assigns to a V -structure S the extension of ' in S, i.e. the collection of ~a 2 jSj k <p> At the limit, the queries definable in full finite order logic are precisely the ones computable within Kalmar-elementary resources, i.e. using time and space which is k-fold exponential in the size of the input, for some k <ref> [ Leivant, 1987 ] </ref> .
Reference: [ Leivant, 1990a ] <author> D. Leivant. </author> <title> Computationally based set existence principles. </title> <editor> In W. Sieg, editor, </editor> <booktitle> Logic and Computation, Volume 106 of Contemporary Mathematics, </booktitle> <pages> pages 197-211. </pages> <publisher> American Mathematical Society, </publisher> <address> Providence, RI, </address> <year> 1990. </year>
Reference-contexts: in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given in [ Leivant, 1990b ] . 74 Daniel Leivant Using comprehension for computational (i.e. strict-1 1 , see Section 3.2) formulas, one obtains exactly the functions defined by recurrence in all finite type <ref> [ Leivant, 1990a; Leivant, 1991b ] </ref> . 180 Comprehension for first order formulas yields exactly the Kalmar-elementary functions. 181 The characterization by comprehension of complexity classes of practical interest is also possible.
Reference: [ Leivant, 1990b ] <author> D. Leivant. </author> <title> Contracting proofs to programs. </title> <editor> In P. Odi-freddi, editor, </editor> <booktitle> Logic and Computer Science, </booktitle> <pages> pages 279-327. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1990. </year>
Reference-contexts: A seminal paper on computability for higher order objects is [ Dahlhaus and Makowsky, 1987 ] . 167 For more details and applications of this mapping see, for example, [ Girard et al., 1989 ] and <ref> [ Leivant, 1990b ] </ref> . Higher Order Logic 69 for relational variables of second order propositional logic and for type variables of the second order lambda calculus. This convention results in a complete syntactic identity between formulas of the logic and types of the lambda calculus. <p> 1987; Blass and Gurevich, 1986 ] , of poly-time [ Immerman, 1987 ] , and of exponential time [ Christen, 1974; Immerman, 1987 ] . 178 Recall the Reverse Mathematics program, described in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given in <ref> [ Leivant, 1990b ] </ref> . 74 Daniel Leivant Using comprehension for computational (i.e. strict-1 1 , see Section 3.2) formulas, one obtains exactly the functions defined by recurrence in all finite type [ Leivant, 1990a; Leivant, 1991b ] . 180 Comprehension for first order formulas yields exactly the Kalmar-elementary functions. 181
Reference: [ Leivant, 1990c ] <author> D. Leivant. </author> <title> Inductive definitions over finite structures. </title> <journal> Information and Computation, </journal> <volume> 89 </volume> <pages> 95-108, </pages> <year> 1990. </year>
Reference-contexts: A recent study on the scope of expressiveness of the -calculus is [ Lubarsky, 1993 ] . 90 Other fixpoint operators include inflationary fixpoint <ref> [ Gurevich and Shelah, 1986; Leivant, 1990c ] </ref> and existential fixpoints [ Blass and Gurevich, 1987 ] . Additional variants are mentioned in Section 8.4 below, in relation to computational complexity.
Reference: [ Leivant, 1991a ] <author> D. Leivant. </author> <title> A foundational delineation of computational feasiblity. </title> <booktitle> In Proceedings of the Sixth IEEE Conference on Logic in Computer Science (Amsterdam), </booktitle> <address> Washington, 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Indeed, the functions over W computable in deterministic polynomial time are exactly the functions provable using comprehension for positive existential formulas. 182 The significance of these characterizations is discussed in <ref> [ Leivant, 1991a; Leivant, 1994 ] </ref> . Acknowledgments I am greatly indebted for detailed and conscientious feedback on early drafts of the chapter from Sam Buss, Kees Doets, Jean-Yves Marion, Dale Miller, Yiannis Moschovakis, Alan Mycroft, Frank Pfenning, John Reynolds, and Stewart Shapiro.
Reference: [ Leivant, 1991b ] <author> D. Leivant. </author> <title> Semantic characterization of number theories. </title> <editor> In Y. Moschovakis, editor, </editor> <booktitle> Logic from Computer Science, </booktitle> <pages> pages 295-318. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: be converted into an equiva lent formula of the form (8 ~ f ) (9~x) or (9 ~ f ) (8~x) , where is quantifier-free, by replacing subformulas of the form 8~x9y '[~x; y] by 9f 8~x '[~x; f (~x)]; 35 The significance of computational formulas is discussed further in <ref> [ Leivant, 1991b ] </ref> . <p> in Section 7.3. 179 A simple method for dealing with Peano's third and fourth axioms is given in [ Leivant, 1990b ] . 74 Daniel Leivant Using comprehension for computational (i.e. strict-1 1 , see Section 3.2) formulas, one obtains exactly the functions defined by recurrence in all finite type <ref> [ Leivant, 1990a; Leivant, 1991b ] </ref> . 180 Comprehension for first order formulas yields exactly the Kalmar-elementary functions. 181 The characterization by comprehension of complexity classes of practical interest is also possible.
Reference: [ Leivant, 1994 ] <author> D. Leivant. </author> <note> A foundational delineation of poly-time, 1994. To appear in Information and Computation. </note>
Reference-contexts: We summarize the argument of <ref> [ Leivant, 1983; Leivant, 1994 ] </ref> . Of the many computation calculi that generate the total recursive functions one that lends itself naturally to this model theoretic setting are equational programs; a rudimentary form of such programs would serve us best. 14 Fix a free algebra A . <p> = f (0); f (0) = 0; f (0) = s0g. 17 Here arity (~x) = arity (f ), and A (x 1 : : : x k ) abbreviates A (x 1 ) ^ ^ A (x k ). 18 See e.g. [ Kleene, 1952 ] for numeric programs, <ref> [ Leivant, 1994 ] </ref> for programs over W. 19 We follow tradition in referring to N, even though from a modern viewpoint richer free algebras, such as W, are more appropriate. <p> Indeed, the functions over W computable in deterministic polynomial time are exactly the functions provable using comprehension for positive existential formulas. 182 The significance of these characterizations is discussed in <ref> [ Leivant, 1991a; Leivant, 1994 ] </ref> . Acknowledgments I am greatly indebted for detailed and conscientious feedback on early drafts of the chapter from Sam Buss, Kees Doets, Jean-Yves Marion, Dale Miller, Yiannis Moschovakis, Alan Mycroft, Frank Pfenning, John Reynolds, and Stewart Shapiro.
Reference: [ Levy, 1960 ] <author> A. Levy. </author> <title> Principles of reflection in axiomatic set theory. </title> <journal> Fun-damenta Math., </journal> <volume> 49 </volume> <pages> 1-10, </pages> <year> 1960. </year>
Reference-contexts: This is not a definition over N, since the set quantifiers range here over arbitrary sets in the intended hierarchy of sets; however, using the Levy-Montague Reflection Principle <ref> [ Levy, 1960 ] </ref> , there is an ordinal ff such that all statements above for the (countably many) second order formulas ' are true exactly when they are true in V ff . Then second order truth is definable over Nin ff-order logic. <p> But this itera 120 The non-finite axiomatizability of first order arithmetic was proved in [ Ryll-Nardzewski, 1953; Rabin, 1961 ] . An argument somewhat analogous to the above was used in <ref> [ Levy, 1960 ] </ref> to show that the schema of Replacement cannot be axiomatized by a finite number of its instances. <p> Indeed, if ' is a given formula in the language of ZF, then ZF proves, using a suitable instance of Replacement, that there is a large enough set X such that ' is true iff ' X (i.e. ' relativized to X) is true, see <ref> [ Levy, 1960 ] </ref> . It follows that ZF proves the consistency of any finitely axiomatizable subtheory of ZF. <p> An argument similar to the proof of Lemma 7.1.2 shows that KM is not finitely axiomatizable. 130 Higher order logic has also impacted the development of set theory itself, notably concerning the status of strong infinity axioms. The most important results here were inspired by the Montague-Levy reflection principle <ref> [ Levy, 1960 ] </ref> , which posits that if a formula ' is true in the universe of sets, then ' must be true when relativized to some universe in the cu 128 An exception is [ Bernays, 1958 ] , where the latter relation is denoted xja. 129 This axiom <p> Reflection for KM is provable assuming the existence of a Mahlo cardinal <ref> [ Levy, 1960 ] </ref> , but the consistency of KM is reducible already to the consistency of ZF + there exists an inaccessible cardinal [ Fraenkel et al., 1973, p. 139 ] . Higher Order Logic 57 mulative hierarchy, that is ' V ff is true, for some cardinal ff.
Reference: [ Lindstrom, 1969 ] <author> P. Lindstrom. </author> <title> On extensions of elementary logic. </title> <journal> Theo-ria, </journal> <volume> 35 </volume> <pages> 1-11, </pages> <year> 1969. </year> <note> 86 Daniel Leivant </note>
Reference-contexts: This criterion is clearly related to Quine's ontological neutrality. Indeed, even relatively weak fragments of second order logic fail Girard's criterion. 75 72 [ Tharp, 1975 ] concurs with Quine, [ Boolos, 1975 ] disagrees. 73 <ref> [ Lindstrom, 1969 ] </ref> , see [ Ebbinghaus et al., 1984 ] for a textbook exposition. 74 Personal communication. 75 Nonetheless, it is possibly to recover the textual subformula property for fragments which, though logically weak, are nonetheless computationally interesting; see e.g. [ Na dathur and Miller, 1990; Miller et al.,
Reference: [ Livchak, 1983 ] <author> A. Livchak. </author> <title> The relational model for process control. </title> <journal> Automatic Documentation and Mathematical Linguistics, </journal> <volume> 4 </volume> <pages> 27-29, </pages> <year> 1983. </year>
Reference-contexts: The restriction to positive operators is therefore less natural in the context of Computer Science <ref> [ Livchak, 1983; Gurevich, 1984 ] </ref> . Higher Order Logic 15 3 Canonical semantics of higher order logic 3.1 Tarskian semantics of second order logic Let us consider the semantics of second order formulas more formally. Let V be a vocabulary (as for first order logic), S a V -structure.
Reference: [ Lob, 1976 ] <author> M. H. Lob. </author> <title> Embedding first order predicate logic in fragments of intuitionistic logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 41 </volume> <pages> 705-718, </pages> <year> 1976. </year>
Reference: [ Lowenheim, 1915 ] <author> L. Lowenheim. </author> <title> Uber Moglichkeiten im Relativkalkul. </title> <journal> Math. Ann., </journal> <volume> 76, </volume> <year> 1915. </year>
Reference-contexts: The former is driven by syntactic form, the latter by semantics. In monadic second order logic the only higher order variables are ones ranging over monadic relations, i.e. sets. Monadic first order logic is decidable <ref> [ Lowenheim, 1915 ] </ref> , and, in the absence of functions, so is monadic second order logic [ Skolem, 1919; Behmann, 1922 ] . However, with functions present monadic second order logic is quite complex: the definition ' N above of N is monadic (Section 2.3).
Reference: [ Lubarsky, 1993 ] <author> R. Lubarsky. </author> <title> -definable sets of integers. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 58 </volume> <pages> 291-313, </pages> <year> 1993. </year>
Reference-contexts: A recent study on the scope of expressiveness of the -calculus is <ref> [ Lubarsky, 1993 ] </ref> . 90 Other fixpoint operators include inflationary fixpoint [ Gurevich and Shelah, 1986; Leivant, 1990c ] and existential fixpoints [ Blass and Gurevich, 1987 ] . Additional variants are mentioned in Section 8.4 below, in relation to computational complexity.
Reference: [ Makinouchi, 1977 ] <author> A. Makinouchi. </author> <title> A consideration on normal form of not necessarily normalized relation in the relational data model. </title> <booktitle> In Proc. Third Symp. on VLDB, </booktitle> <pages> pages 447-453, </pages> <year> 1977. </year>
Reference: [ Marshall, 1989 ] <author> M. Victoria Marshall. </author> <title> Higher order reflection principles. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 54 </volume> <pages> 474-489, </pages> <year> 1989. </year>
Reference-contexts: The existence of measurable cardinals is not provable in Bernays's theory [ Solovay et al., 1978 ] , but it is provable in a further natural extension of the theory, allowing hyper-classes <ref> [ Marshall, 1989 ] </ref> . Another example linking second order logic to higher cardinals is the Hanf number of second order logic.
Reference: [ Martin-Lof, 1973a ] <author> P. Martin-Lof. </author> <title> Hauptsatz for intuitionistic simple type theory. </title> <editor> In P. Suppes, L. Henkin, A. Joja, and G. C. Moisil, editors, </editor> <booktitle> Logic, Methodology and Philosophy of Science IV, </booktitle> <pages> pages 279-290, </pages> <address> Amsterdam, 1973. </address> <publisher> North-Holland. </publisher>
Reference: [ Martin-Lof, 1973b ] <author> P. Martin-Lof. </author> <title> An intuitionistic theory of types: Pred-icative part. </title> <editor> In H. E. Rose and J. C. Shepherdson, editors, </editor> <booktitle> Logic Colloquium '73, </booktitle> <pages> pages 73-118, </pages> <address> Amsterdam, 1973. </address> <publisher> North-Holland. </publisher>
Reference-contexts: This duality reveals the fundamental unity between the operational aspects of logic and functional programming, and it is particularly fecund when extended to higher order forms of abstractions, namely dependent types (Martin-Lof's Type Theory <ref> [ Martin-Lof, 1973b; Martin-Lof, 1980 ] </ref> ) and finite order quantification (Girard's system F ! [ Gi-rard, 1972 ] ). Notably, its implementation underlies sofware systems for constructing typed functional programs for given specifications from higher order logic proofs that such specifications has solutions. <p> Notably, its implementation underlies sofware systems for constructing typed functional programs for given specifications from higher order logic proofs that such specifications has solutions. These systems include the PRL Project [ Constable and others, 1986 ] , which is based on <ref> [ Martin-Lof, 1973b ] </ref> , and the Calculus of Constructions mentioned above [ Paulin-Mohring, 1989b; Paulin-Mohring, 1989a ] .
Reference: [ Martin-Lof, 1980 ] <author> P. Martin-Lof. </author> <title> Constructive mathematics and computer programming. </title> <booktitle> In Logic, Methodology and Philosophy of Science VI, </booktitle> <pages> pages 153-175. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1980. </year>
Reference-contexts: This duality reveals the fundamental unity between the operational aspects of logic and functional programming, and it is particularly fecund when extended to higher order forms of abstractions, namely dependent types (Martin-Lof's Type Theory <ref> [ Martin-Lof, 1973b; Martin-Lof, 1980 ] </ref> ) and finite order quantification (Girard's system F ! [ Gi-rard, 1972 ] ). Notably, its implementation underlies sofware systems for constructing typed functional programs for given specifications from higher order logic proofs that such specifications has solutions.
Reference: [ Martin, 1975 ] <author> D. Martin. </author> <title> Borel determinacy. </title> <journal> Annals of Math., </journal> <volume> 102 </volume> <pages> 363-371, </pages> <year> 1975. </year>
Reference-contexts: Among the few exceptions is the use of transfinite types to prove the determinacy of Borel games; see e.g. <ref> [ Martin, 1975 ] </ref> . 124 A detailed survey of these issues can be found in Section II.7 of [ Fraenkel et al., 1973 ] . 125 A famous quote is the informal definition of a set by Cantor's the creator of abstract set theory: A set is a collection into
Reference: [ Mendelson, 1964 ] <author> E. Mendelson. </author> <title> Introduction to Mathematical Logic. </title> <publisher> Van Nostrand, Princeton, </publisher> <year> 1964. </year>
Reference-contexts: When referring to choice over formulas that mention set quantifiers, these set-existence principles are circular, since the existence of the set Z is based 99 See e.g. the introduction of <ref> [ Mendelson, 1964 ] </ref> , or [ Fraenkel et al., 1973, Ch. 1 ] , for concise and informative surveys of that crisis. [ Fraenkel and Bar-Hillel, 1958, Section I.6 ] contains a detailed bibliography through 1956. 100 [ Whitehead and Russell, 1929; Zermelo, 1908; Zermelo, 1930; Fraenkel, 1922 ] .
Reference: [ Miller and Nadathur, 1986 ] <author> D. A. Miller and G. Nadathur. </author> <title> Higher-order logic programming. </title> <booktitle> In Proceedings of the Third International Conference on Logic Programming. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1986. </year>
Reference: [ Miller et al., 1991 ] <author> D. Miller, G. Nadathur, F. Pfenning, and A. Scedrov. </author> <title> Uniform proofs as a foundation for logic programming. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 51 </volume> <pages> 125-157, </pages> <year> 1991. </year>
Reference-contexts: Analogous axiom-schema and inference-rule should be added for 9, unless 9 is viewed as an abbreviation for :8:. 50 for both element- and relation-variables, in the usual sense 51 See for example <ref> [ Takeuti, 1975; Miller et al., 1991 ] </ref> . A resolution-style calculus for higher order Horn clauses can be found in [ Miller, 1993 ] . Higher Order Logic 25 of Pairing is present in the syntax of L 2 , which has relation-variables for any finite arity. <p> These proofs use a model theoretic method of `partial valuation' due to Schutte [ 1960a ] . 64 This is less true for certain fragments of second order logic, in which the complexity of substituted formulas can be effectively controlled <ref> [ Nadathur and Miller, 1990; Miller et al., 1991 ] </ref> . 30 Daniel Leivant does not: the sentence :(oe &lt;@ 1 ) (see Section 2.2) has a model, but no countable model. 4. <p> with Quine, [ Boolos, 1975 ] disagrees. 73 [ Lindstrom, 1969 ] , see [ Ebbinghaus et al., 1984 ] for a textbook exposition. 74 Personal communication. 75 Nonetheless, it is possibly to recover the textual subformula property for fragments which, though logically weak, are nonetheless computationally interesting; see e.g. <ref> [ Na dathur and Miller, 1990; Miller et al., 1991 ] </ref> .
Reference: [ Miller, 1983 ] <author> D. Miller. </author> <title> Proofs in higher-order logic. </title> <type> Ph.D. Thesis, </type> <institution> Car-negie-Mellon University, </institution> <year> 1983. </year>
Reference-contexts: Initially, research in automated theorem proving enforced the primacy of first order logic, for which methods such as resolution and paramod-ulation are complete. However, the work of Andrews and his students has shown that automated theorem proving can be naturally extended to higher order logic <ref> [ Andrews et al., 1984; Miller, 1983 ] </ref> . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] , resolution [ Andrews, 1971 ] , Skolemization
Reference: [ Miller, 1987 ] <author> D. Miller. </author> <title> A compact representation of proofs. </title> <journal> Studia Logica, </journal> <pages> pages 347-370, </pages> <year> 1987. </year>
Reference-contexts: Andrews et al., 1984; Miller, 1983 ] . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] , resolution [ Andrews, 1971 ] , Skolemization <ref> [ Miller, 1987 ] </ref> , unification [ Huet, 1975 ] , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages [ <p> from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] , resolution [ Andrews, 1971 ] , Skolemization <ref> [ Miller, 1987 ] </ref> , unification [ Huet, 1975 ] , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages [ Bruijn, 1980 ] , designed as a medium for a computerized compendium of mathematics within
Reference: [ Miller, 1988 ] <author> D. Miller. </author> <title> Logic programming based on higher-order hereditary harrop formulas, </title> <note> 1988. Technical Report (published?). </note>
Reference: [ Miller, 1989 ] <author> D. Miller. </author> <title> Abstractions in logic programming. </title> <editor> In P. Odi-freddi, editor, </editor> <booktitle> Logic and Computer Science. </booktitle> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1989. </year> <title> Higher Order Logic 87 </title>
Reference: [ Miller, 1993 ] <author> D. Miller. </author> <title> Higher order logic programming. </title> <editor> In D. M. Gabbay, C. J. Hogger, and J. A. Robinson, editors, </editor> <booktitle> Handbook of Logic in Artificial Intelligence and Logic Programming, </booktitle> <volume> Volume 5. </volume> <publisher> Oxford University Press, Oxford, </publisher> <year> 1993. </year>
Reference-contexts: A resolution-style calculus for higher order Horn clauses can be found in <ref> [ Miller, 1993 ] </ref> . Higher Order Logic 25 of Pairing is present in the syntax of L 2 , which has relation-variables for any finite arity. The Power-Set axiom is outside the scope of second order logic, since it collapses the entire type hierarchy into a first order theory. <p> See e.g. [ Mycroft and O'Keef, 1984; Nadathur, 1987; Miller and Nadathur, 1986; Miller, 1988; Miller, 1989; Lakshman and Reddy, 1991; Yardeni et al., 1991 ] , and in particular [ Nadathur and Miller, 1990 ] . These topics are covered in <ref> [ Miller, 1993 ] </ref> in this Handbook. 66 Daniel Leivant first in Algol 68. 159 More complex programming concepts related to the type hierarchy (yet not to abstraction for types) include inheritance (and the related constructs of coercion and subtyping) and type intersection; these have been developed recently, notably in relation
Reference: [ Milner and Tofte, 1991 ] <author> R. Milner and M. Tofte. </author> <title> Co-induction and relational semantics. </title> <journal> Theoretical Computer Science, </journal> <volume> 87 </volume> <pages> 209-220, </pages> <year> 1991. </year>
Reference: [ Mitchell, 1990 ] <author> J. C. Mitchell. </author> <title> Types systems for programming languages. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 365-458. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: This is a definable construct in the Theory of Construction, just as the fixpoint operator is definable in second order logic. The interested reader will find a thorough survey of types in programming languages in <ref> [ Mitchell, 1990 ] </ref> , and of typed lambda calculi in [ Barendregt, 1992 ] . The development of higher order data has not been confined to programming languages.
Reference: [ Monk, 1976 ] <author> J. D. Monk. </author> <title> Mathematical Logic. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: Times (x; y; z) $ 9R: ( R (x; y; z) ^ 8u ( R (x; 0; u) $ u 0 ) ^ 8u; v ( R (x; su; v) ! 9w ( R (x; u; w) ^ Plus (x; w; v) ) ). 97 A proof is sketched in <ref> [ Monk, 1976 ] </ref> (pp. 489-490), where the result is attributed to Tarski, or see [ Ebbinghaus et al., 1984 ] exercise IX.2.7. 98 Weak second order logic is trivially interpretable in standard second orer logic, because the notion of finiteness is second order definable (Section 2.2). 46 Daniel Leivant 6.4
Reference: [ Montague, 1965a ] <author> R. Montague. </author> <title> Reductions of higher-order logic. </title> <editor> In J.W. Addison, L. Henkin, and A. Tarski, editors, </editor> <booktitle> The Theory of Models, </booktitle> <pages> pages 251-264. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1965. </year>
Reference-contexts: For example, let ! consist of all objects of finite type. Then (!; !) is the type of binary relations between objects of finite types. A formalism of transfinite types is developed and discussed in [ Andrews, 1965 ] (see also <ref> [ Montague, 1965a ] </ref> ). 3.5 Functional types An alternative to relational types of the kind discussed above are functional types. Functional types are syntactic expressions inductively generated by: and o are types; and if oe and o are types then so is oe ! o .
Reference: [ Montague, 1965b ] <author> R. Montague. </author> <title> Set theory and higher order logic. </title> <editor> In J. Crossley and M. Dummett, editors, </editor> <booktitle> Formal Systems and Recursive Functions, </booktitle> <pages> pages 131-148. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1965. </year>
Reference-contexts: Shapiro [ 1991 ] cites <ref> [ Montague, 1965b ] </ref> as an independent source, stating that Montague attributes the result to David Kaplan.
Reference: [ Morse, 1965 ] <author> A. P. Morse. </author> <title> A Theory of Sets. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1965. </year>
Reference: [ Moschovakis, 1974 ] <author> Y. Moschovakis. </author> <title> Elementary Induction on Abstract Structures. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1974. </year>
Reference-contexts: In particular, they were used in the 1970's as the backbone of major generalizations of Recursive Functions Theory <ref> [ Barwise, 1975; Moschovakis, 1974 ] </ref> . In recent years the ties between inductive definitions (in particular over finite structures) and database theory, descriptive computational complexity, and logics of programs, have been developed. <p> For another example, the truth of first order 26 A short informative survey is [ Aczel, 1977 ] . A comprehensive monograph is <ref> [ Moschovakis, 1974 ] </ref> . 27 the exponent r is needed because may be finite. 28 [Q=R]S is the structure S expanded with Q as the interpretation of the relation constant R. 14 Daniel Leivant arithmetic formulas using _, 8, equations and inequalities 29 is F 1 [v; 0], where F <p> various applications of higher order logic, it is natural to isolate them, and to consider extensions of first order logic with fixpoint constructs. 88 The study of proof calculi for first order logic extended with fixpoints is implicit in the development of the theory of inductive definitions over arbitrary structures <ref> [ Moschovakis, 1974 ] </ref> . However, syntactic logical formalisms that incorporate explicitly a fixpoint operator seem to have originated independently in two areas of Theoretical Computer Science: logics of programs and database theory. <p> The first version is the one studied in <ref> [ Moschovakis, 1974 ] </ref> . An attractive related language, Lower Predicate Calculus with Reflection (LPCR), is presented in [ Moschovakis, 1993 ] . A completeness theorem for an interesting fragment of the language is in [ Barwise and Moschovakis, 1978 ] , a result improved recently by Katherine St.
Reference: [ Moschovakis, 1993 ] <author> Y. Moschovakis. </author> <title> Sense and denotation as algorithm and value. </title> <booktitle> In Proceedings of the 1993 ASL Summer Meeting in Helsinki, Lecture Notes in Logic. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: The first version is the one studied in [ Moschovakis, 1974 ] . An attractive related language, Lower Predicate Calculus with Reflection (LPCR), is presented in <ref> [ Moschovakis, 1993 ] </ref> . A completeness theorem for an interesting fragment of the language is in [ Barwise and Moschovakis, 1978 ] , a result improved recently by Katherine St. John (1993, in preparation). 44 Daniel Leivant to validity of FO formulas.
Reference: [ Mosses, 1990 ] <author> P. D. Mosses. </author> <title> Denotational semantics. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 577-632. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: The seminal work was [ Scott and Strachey, 1971 ] . Recent expositions include the survey <ref> [ Mosses, 1990 ] </ref> and the textbooks [ Tennent, 1991; Gunter, 1992 ] . 172 Some recent key papers are [ Felty and Miller, 1988; Harper et al., 1987; Huet and Lang, 1978; Hannan and Miller, 1988b; Hannan and Miller, 1988a; Howe, 1988; Harper et al., 1989; Huet, 1986; Knoblock and
Reference: [ Mostowski, 1939 ] <author> A. Mostowski. </author> <title> Uber die Unabhangigkeit des Wohlor-dungssatzes vom Ordungprinzip. </title> <journal> Fund. Math., </journal> <volume> 32 </volume> <pages> 201-252, </pages> <year> 1939. </year>
Reference: [ Mostowski, 1951 ] <author> A. Mostowski. </author> <title> Some impredicative definitions in the axiomatic set theory. </title> <journal> Fundamenta Math., </journal> <volume> 37 </volume> <pages> 111-124, </pages> <year> 1951. </year>
Reference-contexts: For every k n, 8S9R8x 1 : : : x k ( R (~x) $ 8yS (y; ~x) ) It remains to list finitely many instances of comprehension that imply (possibly using comprehension for compound formulas) every atomic instance of comprehension, namely: due in the case of set theory to <ref> [ Novak, 1951; Rosse and Wang, 1950; Mostowski, 1951 ] </ref> , runs as follows. If ' is not a theorem of T , then (by the Completeness Theorem for first order logic) there is a model of T [ f:'g.
Reference: [ Mostowski, 1952 ] <author> A. Mostowski. </author> <title> Sentences Undecidable in Formalized Arithmetic: An Exposition of the Theory of Kurt Godel. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1952. </year>
Reference-contexts: This proves the theorem. Proofs of Theorem 7.4.1 can be found in <ref> [ Mostowski, 1952 ] </ref> and [ Ehren-feucht and Mycielski, 1971 ] .
Reference: [ Mostowski, 1968 ] <author> A. Mostowski. </author> <title> Craig's interpolation theorem in some extended systems of logic. </title> <editor> In B. van Rootselaar and J. F. Staal, editors, </editor> <booktitle> Proceedings of the Third International Conference on Logic, Methodology and Philosophy of Science, </booktitle> <pages> pages 87-103. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1968. </year>
Reference-contexts: order formula D ! (8X N ) (O N ); where D is the primitive recursive definition of the functions used in as well as for p, and where O N is O relativized to N . 86 Moreover, monadic second order logic does not have the Craig interpolation property <ref> [ Mostowski, 1968 ] </ref> , which both first order and full second order logic have.
Reference: [ Mundici, 1985 ] <author> D. Mundici. </author> <title> Other quantifiers: An overview. </title> <editor> In J. Barwise and S. Feferman, editors, </editor> <booktitle> Model Theoretic Logic, </booktitle> <pages> pages 211-233. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1985. </year> <note> 88 Daniel Leivant </note>
Reference-contexts: Motowski showed that expressive equivalence with full second order logic can be obtained, alternatively, by closing the collection of partially-ordered quantifiers under a duality operation. For detailed surveys on partially-ordered quantifiers see <ref> [ Mundici, 1985 ] </ref> and [ Krynicki and Mostowski, 1994 ] . 77 See [ Henkin, 1950 ] .
Reference: [ Mycroft and O'Keef, 1984 ] <author> A. Mycroft and R. A. O'Keef. </author> <title> A polymorphic type system for prolog. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 295-307, </pages> <year> 1984. </year>
Reference: [ Nadathur and Miller, 1988 ] <author> G. Nadathur and D. Miller. </author> <title> An overview of - prolog. </title> <editor> In K. A. Bowen and R. A. Kowalski, editors, </editor> <booktitle> Fifth International Logic Programming Conference, </booktitle> <pages> pages 810-827. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference: [ Nadathur and Miller, 1990 ] <author> G. Nadathur and D. Miller. </author> <title> Higher-order horn clauses. </title> <journal> Journal of the ACM, </journal> <volume> 37 </volume> <pages> 777-814, </pages> <year> 1990. </year>
Reference-contexts: These proofs use a model theoretic method of `partial valuation' due to Schutte [ 1960a ] . 64 This is less true for certain fragments of second order logic, in which the complexity of substituted formulas can be effectively controlled <ref> [ Nadathur and Miller, 1990; Miller et al., 1991 ] </ref> . 30 Daniel Leivant does not: the sentence :(oe &lt;@ 1 ) (see Section 2.2) has a model, but no countable model. 4. <p> More recently, extensions of logic programming with higher order abstraction have also been developed and implemented. See e.g. [ Mycroft and O'Keef, 1984; Nadathur, 1987; Miller and Nadathur, 1986; Miller, 1988; Miller, 1989; Lakshman and Reddy, 1991; Yardeni et al., 1991 ] , and in particular <ref> [ Nadathur and Miller, 1990 ] </ref> .
Reference: [ Nadathur, 1987 ] <author> G. Nadathur. </author> <title> A higher-order logic as the basis for logic programming. </title> <type> Ph.D. Thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1987. </year>
Reference: [ Neumann, 1925 ] <author> J. von Neumann. Eine axiomatisierung der mengelehre. J. </author> <title> f. </title> <journal> Math., </journal> <volume> 154 </volume> <pages> 219-240, </pages> <year> 1925. </year> <editor> Corrections J. f. </editor> <publisher> Math., </publisher> <address> 155:128, </address> <year> 1926. </year> <note> English translation in [ Heijenoort, </note> <year> 1967 </year> <month> ] , 393-413. </month>
Reference: [ Novak, 1951 ] <author> I. Novak. </author> <title> A construction for models of consistent systems. </title> <journal> Fundamenta Math., </journal> <volume> 37 </volume> <pages> 87-110, </pages> <year> 1951. </year>
Reference-contexts: For every k n, 8S9R8x 1 : : : x k ( R (~x) $ 8yS (y; ~x) ) It remains to list finitely many instances of comprehension that imply (possibly using comprehension for compound formulas) every atomic instance of comprehension, namely: due in the case of set theory to <ref> [ Novak, 1951; Rosse and Wang, 1950; Mostowski, 1951 ] </ref> , runs as follows. If ' is not a theorem of T , then (by the Completeness Theorem for first order logic) there is a model of T [ f:'g.
Reference: [ Parikh, 1973 ] <author> R. J. Parikh. </author> <title> Some results on the length of proofs. </title> <journal> Trans. Amer. Math. Soc., </journal> <volume> 177 </volume> <pages> 29-36, </pages> <year> 1973. </year>
Reference-contexts: Parikh <ref> [ Parikh, 1973; Parikh, 1986 ] </ref> gave a proof of Theorem 7.4.4 for speed-up of PA 2 over PA 1 , which was extended to speedup of PA k+1 over PA k by Krajicek [ Krajicek, 1989 ] .
Reference: [ Parikh, 1986 ] <author> R. J. Parikh. </author> <title> Introductory note to 1936(a). In Kurt Godel, </title> <booktitle> Collected Works, </booktitle> <volume> Volume 1, </volume> <pages> pages 394-397. </pages> <publisher> Oxford University Press, Oxford, </publisher> <year> 1986. </year>
Reference-contexts: Parikh <ref> [ Parikh, 1973; Parikh, 1986 ] </ref> gave a proof of Theorem 7.4.4 for speed-up of PA 2 over PA 1 , which was extended to speedup of PA k+1 over PA k by Krajicek [ Krajicek, 1989 ] .
Reference: [ Paris and Harrington, 1977 ] <author> J. Paris and L. Harrington. </author> <title> A mathematical incompleteness in Peano Arithmetic, </title> <booktitle> 1977. In [ Barwise, </booktitle> <year> 1977, </year> <pages> pp. 1133-1142 </pages> ] . 
Reference-contexts: A detailed survey of these results is [ Simpson, 1985a ] . The seminal work on combinatorial statements independent of Peano's arithmetic is <ref> [ Paris and Harrington, 1977 ] </ref> . Kruskal's Theorem asserts that in every infinite sequence of finite trees there must occur a tree within which some previous tree in the list can be embedded.
Reference: [ Park, 1970 ] <author> D. Park. </author> <title> Fixpoint induction and proof of program semantics. </title> <editor> In Meltzer and Michie, editors, </editor> <booktitle> Machine Intelligence V, </booktitle> <pages> pages 59-78. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1970. </year>
Reference: [ Paulin-Mohring, 1989a ] <author> C. Paulin-Mohring. </author> <title> Extracting F ! programs from proofs in the calculus of constructions. </title> <booktitle> In Sixteenth Annual Symposium on Principles of Programming Languages, </booktitle> <pages> pages 89-104. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: These systems include the PRL Project [ Constable and others, 1986 ] , which is based on [ Martin-Lof, 1973b ] , and the Calculus of Constructions mentioned above <ref> [ Paulin-Mohring, 1989b; Paulin-Mohring, 1989a ] </ref> .
Reference: [ Paulin-Mohring, 1989b ] <author> C. Paulin-Mohring. </author> <title> Extraction de programmes dans le Calcul des Constructions. </title> <type> Ph.D. Thesis, </type> <institution> These, Universite de Paris VII, </institution> <year> 1989. </year>
Reference-contexts: These systems include the PRL Project [ Constable and others, 1986 ] , which is based on [ Martin-Lof, 1973b ] , and the Calculus of Constructions mentioned above <ref> [ Paulin-Mohring, 1989b; Paulin-Mohring, 1989a ] </ref> .
Reference: [ Paulson, 1987 ] <author> L. C. Paulson. </author> <title> Logic and Computation: Interactive Proof with Cambridge LCF. </title> <publisher> Cambridge University Press, </publisher> <year> 1987. </year>
Reference: [ Paulson, 1989 ] <author> L. C. Paulson. </author> <title> The foundation of a generic theorem prover. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 363-397, </pages> <year> 1989. </year>
Reference-contexts: Church's interpretation of formulas as higher type functions is used extensively in Computer Science in formal calculi such as the Calculus of Constructions [ Coquand and Huet, 1985 ] , as well as in programming systems such as Edinburgh lego, L. Paulson's isabelle <ref> [ Paulson, 1989; Paulson, 1990 ] </ref> , Andrews's TPS [ Andrews et al., 1984 ] , and Miller's - Prolog [ Nadathur and Miller, 1988; Nadathur and Miller, 1990; Miller, 1993 ] . 3.7 Truth definitions revisited It is rewarding to relate finite order logic to the issue of truth definitions
Reference: [ Paulson, 1990 ] <author> L. C. Paulson. </author> <title> Isabelle: The next 700 theorem provers. </title> <editor> In P. Odifreddi, editor, </editor> <booktitle> Logic and Computer Science, </booktitle> <pages> pages 361-386. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: Church's interpretation of formulas as higher type functions is used extensively in Computer Science in formal calculi such as the Calculus of Constructions [ Coquand and Huet, 1985 ] , as well as in programming systems such as Edinburgh lego, L. Paulson's isabelle <ref> [ Paulson, 1989; Paulson, 1990 ] </ref> , Andrews's TPS [ Andrews et al., 1984 ] , and Miller's - Prolog [ Nadathur and Miller, 1988; Nadathur and Miller, 1990; Miller, 1993 ] . 3.7 Truth definitions revisited It is rewarding to relate finite order logic to the issue of truth definitions
Reference: [ Petersson, 1982 ] <author> K. Petersson. </author> <title> A programming system for type theory. </title> <type> Technical Report 21, </type> <institution> Department of Computer Science, Chalmers Uni Higher Order Logic 89 versity, Goteborg, </institution> <year> 1982. </year>
Reference-contexts: description of mathematics within higher order logic, higher order theorem proving has led, quite recently, to 168 The ground-breaking work was the automath family of languages [ Bruijn, 1980 ] , designed as a medium for a computerized compendium of mathematics within a higher order logic. 169 See also e.g. <ref> [ Gould, 1976; Jensen and Pietrzykowski, 1976; Petersson, 1982 ] </ref> . 170 An early presage of higher order theorem proving is [ Robinson, 1969 ] .
Reference: [ Pfenning and Rohwedder, 1991 ] <author> F. Pfenning and E. Rohwedder. </author> <title> Implementing the meta-theory of deductive systems, 1991. </title> <type> Preprint. </type>
Reference: [ Pfenning, 1989 ] <author> F. Pfenning. </author> <title> Elf: A language for logic definition and verified meta-programming. </title> <booktitle> In Fourth Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 313-322, </pages> <address> Washington, 1989. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: [ Pitts, 1993 ] <author> A. M. Pitts. </author> <title> A co-induction principle for recursively defined domains. </title> <booktitle> Theoretical Computer Science, </booktitle> <year> 1993. </year> <note> To appear. </note>
Reference: [ Poincare, 1902 ] <author> H. </author> <month> Poincare. </month> <institution> Du role de l'intuition et de la logique en mathematiques. C.R. du Deuxieme Congres Int. des Math., </institution> <address> Paris 1900, </address> <pages> pages 200-202, </pages> <year> 1902. </year>
Reference-contexts: in the universe. 133 Poincare summarized this achievement at the 1900 Congress of Mathematicians: `Today there remain in analysis only integers and finite or infinite systems [=sets] of integers : : : Mathematics has been arithmetized : : : We may say today that absolute rigor has been achieved' ( <ref> [ Poincare, 1902 ] </ref> , quoted in [ Fraenkel et al., 1973, p. 14 ] ). 134 See e.g. [ Feferman, 1977 ] for a broad and informative survey of the development of mathematical analysis in finite order logic. 135 See e.g. [ Kechris and Moschovakis, 1977 ] for a survey
Reference: [ Poincare, 1910 ] <author> H. Poincare. </author> <title> Uber transfinite Zahlen. </title> <journal> In Sechs Vortrage uber ausgewahlte Gegenstande aus der reiner Mathematik und mathema-tischen Physik, </journal> <pages> pages 43-48, </pages> <address> Leipzig, </address> <year> 1910. </year>
Reference: [ Prawitz, 1965 ] <author> D. Prawitz. </author> <title> Natural Deduction. </title> <publisher> Almqvist and Wiksell, </publisher> <address> Uppsala, </address> <year> 1965. </year>
Reference: [ Prawitz, 1968 ] <author> D. Prawitz. </author> <title> Hauptsatz for higher order logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 33 </volume> <pages> 452-457, </pages> <year> 1968. </year>
Reference: [ Prawitz, 1972 ] <author> D. Prawitz. </author> <title> Ideas and results in proof theory. </title> <editor> In J. Fenstad, editor, </editor> <booktitle> Proceedings of the Second Scandinavian Logic Symposium, </booktitle> <pages> pages 235-307. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1972. </year>
Reference-contexts: students has shown that automated theorem proving can be naturally extended to higher order logic [ Andrews et al., 1984; Miller, 1983 ] . 169 This extension is linked to generalization, from first order to higher order, of the major syntactic theorems of first order logic: Cut elimination and normalization <ref> [ Takahashi, 1967; Girard, 1972; Prawitz, 1972 ] </ref> , resolution [ Andrews, 1971 ] , Skolemization [ Miller, 1987 ] , unification [ Huet, 1975 ] , and Herbrand's The orem [ Miller, 1987 ] . 170 Given the natural description of mathematics within higher order logic, higher order theorem proving
Reference: [ Quine, 1937 ] <author> W. V. O. Quine. </author> <title> New foundations for mathematical logic. </title> <journal> Amer. Math. Monthly, </journal> <volume> 44 </volume> <pages> 80-101, </pages> <year> 1937. </year>
Reference-contexts: We say that a formula ' of predicative second order logic is 110 See [ Hazen, 1983 ] for a survey of ramified type theories. 111 See e.g. <ref> [ Quine, 1937; Quine, 1951; Wang, 1954; Wang, 1962 ] </ref> 50 Daniel Leivant true in a structure S if it is true in S when variables ` R k are interpreted as ranging over ` U k .
Reference: [ Quine, 1951 ] <author> W. V. O. Quine. </author> <title> Mathematical Logic, Revised edition. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1951. </year> <note> (First edition: </note> <year> 1940). </year>
Reference-contexts: We say that a formula ' of predicative second order logic is 110 See [ Hazen, 1983 ] for a survey of ramified type theories. 111 See e.g. <ref> [ Quine, 1937; Quine, 1951; Wang, 1954; Wang, 1962 ] </ref> 50 Daniel Leivant true in a structure S if it is true in S when variables ` R k are interpreted as ranging over ` U k .
Reference: [ Quine, 1970 ] <author> W. V. O. Quine. </author> <title> Philosophy of Logic. </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliffs, NJ, </address> <year> 1970. </year>
Reference: [ Rabin, 1961 ] <author> M. Rabin. </author> <title> Non-standard models and independence of the induction axiom. </title> <booktitle> In Essays in the Foundations of Mathematics, </booktitle> <pages> pages 287-299. </pages> <publisher> The Magnes Press, </publisher> <address> Jerusalem, </address> <year> 1961. </year>
Reference-contexts: But this itera 120 The non-finite axiomatizability of first order arithmetic was proved in <ref> [ Ryll-Nardzewski, 1953; Rabin, 1961 ] </ref> . An argument somewhat analogous to the above was used in [ Levy, 1960 ] to show that the schema of Replacement cannot be axiomatized by a finite number of its instances.
Reference: [ Rabin, 1969 ] <author> M. Rabin. </author> <title> Decidability of second order theories and automata on infinite trees. </title> <journal> Trans. Amer. Math. Soc., </journal> <volume> 141 </volume> <pages> 1-35, </pages> <year> 1969. </year>
Reference-contexts: the full second order theory of zero and a successor function (without additional function symbols) is essentially second order arithmetic (since the graphs of all primitive-recursive functions are definable), but the monadic second order theory of even two successors (i.e. the monadic second order theory of binary trees) is decidable <ref> [ Rabin, 1969 ] </ref> . <p> Two examples: the weak second order theory of linear ordering is decidable [ Lauchli, 1968 ] , and the weak second order theory of one function is decidable <ref> [ Rabin, 1969 ] </ref> . 95 Recall that ' suc j df 8x s (x) 6= 0 ^ 8x; y ( s (x) = s (y) ! x = y ). 96 For example, Plus (x; y; z) $ 9R: ( R (x; y; z) ^ 8u ( R (x; 0;
Reference: [ Reynolds, 1972 ] <author> J. C. Reynolds. </author> <title> Definitional interpreters for higher-order programming languages. </title> <booktitle> In Proceedings of the 25th ACM National Conference, </booktitle> <pages> pages 717-740, </pages> <address> New York, 1972. </address> <publisher> ACM Press. </publisher>
Reference-contexts: A landmark advance was the procedure definition facility of Algol 60 and its descendents, such as ada, which use the entire type structure of finite order logic <ref> [ Reynolds, 1972; Reynolds, 1981 ] </ref> , as captured for example by the simply typed lambda calculus. 158 An explicit use of infinitely many types within the syntax of the language seems to have appeared 157 The absence of induction in L 2 is inconsequential, because second order arithmetic is interpretable
Reference: [ Reynolds, 1974 ] <author> J. C. Reynolds. </author> <title> Towards a theory of type structure. </title> <booktitle> In Proc. Colloque sur la Programmation, Volume 19 of LNCS, </booktitle> <pages> pages 408-425. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1974. </year>
Reference-contexts: Another form of abstraction over types is polymorphism, which underlies (in a weak form) the programming language ML. Just as the functional type hierarchy is captured mathematically by the simply typed lambda calculus, polymorphism is captured by the second order lambda calculus, invented independently by Girard and Reynolds <ref> [ Girard, 1972; Reynolds, 1974 ] </ref> . 161 In the interest of our discussion in 8.2 below, let us outline the essentials of the second order lambda calculus.
Reference: [ Reynolds, 1981 ] <author> J. C. Reynolds. </author> <title> The essence of Algol. </title> <editor> In J. W. de Bakker and J. C. van Vliet, editors, </editor> <booktitle> Algorithmic Languages, </booktitle> <pages> pages 345-372. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1981. </year> <note> 90 Daniel Leivant </note>
Reference-contexts: A landmark advance was the procedure definition facility of Algol 60 and its descendents, such as ada, which use the entire type structure of finite order logic <ref> [ Reynolds, 1972; Reynolds, 1981 ] </ref> , as captured for example by the simply typed lambda calculus. 158 An explicit use of infinitely many types within the syntax of the language seems to have appeared 157 The absence of induction in L 2 is inconsequential, because second order arithmetic is interpretable
Reference: [ Reynolds, 1988 ] <author> J. C. Reynolds. </author> <title> Preliminary design of the programming language Forsythe. </title> <type> Technical Report CMU-CS-88-159, </type> <institution> Carnegie Mellon University, </institution> <year> 1988. </year>
Reference-contexts: programming language must have an infinite number of types, that this type structure is part of the syntax of the language, and that it must be described schematically. 160 For instance, the type intersection discipline of [ Coppo and Dezani-Ciancaglini, 1980 ] has been incorporated into Reynold's programming language Forsythe <ref> [ Reynolds, 1988 ] </ref> , and inheritance into Cardelli's language Quest [ Cardelli, 1991; Cardelli and Longo, 1991 ] . 161 See e.g. [ Scedrov, 1990 ] for a survey. The model theory of second order lambda calculus is a fascinating albeit complex story.
Reference: [ Robinson, 1965 ] <author> J. A. Robinson. </author> <title> A machine-oriented logic based on the resolution principle. </title> <journal> Journal of the ACM, </journal> <volume> 12 </volume> <pages> 23-41, </pages> <year> 1965. </year>
Reference-contexts: If a V -structure S is expanded to a model of then S j= ' N , and is therefore standard, and we must have R S = A. 7. The unification problem is decidable for first order logic <ref> [ Robinson, 1965 ] </ref> , but not for second order logic [ Amiot, 1990 ] . 68 8.
Reference: [ Robinson, 1969 ] <author> J. A. Robinson. </author> <title> Mechanizing higher order logic. </title> <journal> Machine Intelligence, </journal> <volume> 4 </volume> <pages> 151-170, </pages> <year> 1969. </year>
Reference-contexts: the automath family of languages [ Bruijn, 1980 ] , designed as a medium for a computerized compendium of mathematics within a higher order logic. 169 See also e.g. [ Gould, 1976; Jensen and Pietrzykowski, 1976; Petersson, 1982 ] . 170 An early presage of higher order theorem proving is <ref> [ Robinson, 1969 ] </ref> .
Reference: [ Rogers, 1967 ] <author> H. Rogers. </author> <title> Theory of Recursive Functions and Effective Computability. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: Note that Theorem 5.6.2 refers to validity in all structures. When a particular structure is considered, for example N , then 3.7.1 shows that Choice over arithmetic relations sometimes defines (hyperarithmetical) non-arithmetical relations (see e.g. <ref> [ Rogers, 1967 ] </ref> ), so choice fails in this Henkin-structure. [ Andrews, 1972b ] shows that choice for any given type is not a theorem of full finite order logic, even if the latter is augmented by the Axiom Schema of Description.
Reference: [ Rosse and Wang, 1950 ] <author> J. R. Rosse and A. Wang. </author> <title> Nonstandard models for formal logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 15 </volume> <pages> 113-129, </pages> <year> 1950. </year>
Reference-contexts: For every k n, 8S9R8x 1 : : : x k ( R (~x) $ 8yS (y; ~x) ) It remains to list finitely many instances of comprehension that imply (possibly using comprehension for compound formulas) every atomic instance of comprehension, namely: due in the case of set theory to <ref> [ Novak, 1951; Rosse and Wang, 1950; Mostowski, 1951 ] </ref> , runs as follows. If ' is not a theorem of T , then (by the Completeness Theorem for first order logic) there is a model of T [ f:'g.
Reference: [ Rougemont, 1987 ] <author> M. de Rougemont. </author> <title> Second order and inductive defin-ability on finite structures. </title> <journal> Zeitschr. f. math. Logik und Grundlagen d. Math., </journal> <volume> 33 </volume> <pages> 47-63, </pages> <year> 1987. </year>
Reference-contexts: The phrase data base queries is from [ Chandra and Harel, 1980 ] . Other terms for it include global relation [ Gurevich, 1987 ] . generalized relations, <ref> [ Rougemont, 1987 ] </ref> (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ Blass and Gurevich, 1986 ] , uniformly defined relations, [ Rougemont, 1987 ] , predicate, [ Leivant, 1987 ] , and predicate over oracles [ Cai and Furst, 1987 ] . 72 Daniel Leivant include <p> Other terms for it include global relation [ Gurevich, 1987 ] . generalized relations, <ref> [ Rougemont, 1987 ] </ref> (referring to [ Barwise and Moschovakis, 1978 ] ), global predicates, [ Blass and Gurevich, 1986 ] , uniformly defined relations, [ Rougemont, 1987 ] , predicate, [ Leivant, 1987 ] , and predicate over oracles [ Cai and Furst, 1987 ] . 72 Daniel Leivant include all the variables free in ') defines the query ~v:', that assigns to a V -structure S the extension of ' in S, i.e. the
Reference: [ Rubin and Rubin, 1966 ] <author> H. Rubin and J. E. Rubin. </author> <title> Equivalents of the Axiom of Choice. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1966. </year>
Reference-contexts: Already Dedekind showed that major theorems of analysis are equivalent to the topological completeness of the reals [ Dedekind, 1872 ] ; also, a well-known compendium of theorems of mathematics that are equivalent to the Axiom of Choice is <ref> [ Rubin and Rubin, 1966 ] </ref> . See [ Simpson, 1986 ] for a survey of the Reverse Mathematics project.
Reference: [ Russell, 1908 ] <author> B. Russell. </author> <title> Mathematical logic as based on the theory of types. </title> <journal> Amer. J. of Math., </journal> <volume> 30 </volume> <pages> 222-262, </pages> <year> 1908. </year>
Reference-contexts: This eliminates circularity, since in a set S = fn j 8X 'g, if the set-variable X ranges over sets of level k, then that range excludes S, since level (S) &gt; k. The idea of stratifying abstraction into levels goes back to the Ramified Type Theory of <ref> [ Russell, 1908; Whitehead and Russell, 1929 ] </ref> , whose purpose was precisely to circumvent the antinomies of Naive Set Theory. 110 It is present in many mathematical, logical and philosophical development, notably in the predicative development of Analysis (see below) and of Set Theory 111 .
Reference: [ Ryll-Nardzewski, 1953 ] <author> C. Ryll-Nardzewski. </author> <title> The role of the axiom of induction in elementary arithmetic. </title> <journal> Fundamenta Mathematicae, </journal> <volume> 39 </volume> <pages> 239-263, </pages> <year> 1953. </year>
Reference-contexts: But this itera 120 The non-finite axiomatizability of first order arithmetic was proved in <ref> [ Ryll-Nardzewski, 1953; Rabin, 1961 ] </ref> . An argument somewhat analogous to the above was used in [ Levy, 1960 ] to show that the schema of Replacement cannot be axiomatized by a finite number of its instances.
Reference: [ Scedrov, 1990 ] <author> A. Scedrov. </author> <title> A guide to polymorphic types. </title> <editor> In P. Odifreddi, editor, </editor> <booktitle> Logic and Computer Science, </booktitle> <pages> pages 387-420. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1990. </year>
Reference-contexts: it must be described schematically. 160 For instance, the type intersection discipline of [ Coppo and Dezani-Ciancaglini, 1980 ] has been incorporated into Reynold's programming language Forsythe [ Reynolds, 1988 ] , and inheritance into Cardelli's language Quest [ Cardelli, 1991; Cardelli and Longo, 1991 ] . 161 See e.g. <ref> [ Scedrov, 1990 ] </ref> for a survey. The model theory of second order lambda calculus is a fascinating albeit complex story. See e.g. [ Scedrov, 1990 ] and [ Gunter, 1992 ] chapter 11 for general expositions, and references there for pointers to the technical literature. 162 We use an optional <p> Reynold's programming language Forsythe [ Reynolds, 1988 ] , and inheritance into Cardelli's language Quest [ Cardelli, 1991; Cardelli and Longo, 1991 ] . 161 See e.g. <ref> [ Scedrov, 1990 ] </ref> for a survey. The model theory of second order lambda calculus is a fascinating albeit complex story. See e.g. [ Scedrov, 1990 ] and [ Gunter, 1992 ] chapter 11 for general expositions, and references there for pointers to the technical literature. 162 We use an optional type supserscript to indicate the type associated with a variable.
Reference: [ Schonfinkel, 1924 ] <author> M. Schonfinkel. </author> <title> Uber die Bausteine der mathematis-chen Logik. </title> <journal> Mathematische Annalen, </journal> <volume> 92 </volume> <pages> 305-316, </pages> <year> 1924. </year> <title> English translation: On the building blocks of mathematical logic, </title> <editor> in [ Heijenoort, </editor> <year> 1967 </year> <month> ] , 355-366. </month>
Reference-contexts: This result is essentially an 68 Daniel Leivant 8.2 The computational nature of higher order natural deduction In launching combinatory logic, Schonfinkel discovered that the basic inferences of logic are in fact of a simple functional nature <ref> [ Schonfinkel, 1924 ] </ref> . This analogy was elaborated by Curry [ Curry and Feys, 1958 ] , and rediscovered by Howard in a yet more prestine form, for natural deduction proofs [ Howard, 1980 ] .
Reference: [ Schutte, 1951 ] <editor> K. Schutte. Beweistheoretische Erfassung der unendlischen Induktion in der reinen Zahlentheorie. </editor> <title> Math. </title> <journal> Annalen, </journal> <volume> 122 </volume> <pages> 369-389, </pages> <year> 1951. </year>
Reference-contexts: See <ref> [ Schutte, 1951; Schutte, 1952; Schwichtenberg, 1977 ] </ref> for these theories. 138 The predicative status of set existence principles is not clear-cut, but particular weak principles are usually viewed as predicatively obvious, notably comprehension for arithmetic first order formulas (that is, the first level of the ramified hierarchy), and Weak Konig's
Reference: [ Schutte, 1952 ] <author> K. </author> <title> Schutte. </title> <journal> Beweistheoretische Untersuchung der ver-sweigten Analysis. Math. Annalen, </journal> <volume> 124 </volume> <pages> 123-147, </pages> <year> 1952. </year>
Reference-contexts: See <ref> [ Schutte, 1951; Schutte, 1952; Schwichtenberg, 1977 ] </ref> for these theories. 138 The predicative status of set existence principles is not clear-cut, but particular weak principles are usually viewed as predicatively obvious, notably comprehension for arithmetic first order formulas (that is, the first level of the ramified hierarchy), and Weak Konig's
Reference: [ Schutte, 1960a ] <author> K. Schutte. Beweistheorie. </author> <title> Volume 103 of Grundlagen der mathematischen Wissenschaften. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1960. </year> <title> English translation: Proof Theory, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1977. </year>
Reference: [ Schutte, 1960b ] <author> K. Schutte. </author> <title> Syntactic and semantic properties of simple type theory. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 25 </volume> <pages> 305-325, </pages> <year> 1960. </year>
Reference-contexts: It is basically due to Church [ Church, 1949 ] . 39 We outline a relational variant of finite order logic (similar to the account in <ref> [ Schutte, 1960b, Chapter IV ] </ref> ). Types (or, more precisely, relational types) are syntactic expressions inductively generated by: is a type; and if o 1 : : : o k are types (k 0), then o = (o 1 : : : o k ) is a type.
Reference: [ Schutte, 1965a ] <author> K. Schutte. </author> <title> Eine Grenze fur die Beweisbarkeit der trans-finiten Induktion in der verzweigten Typenlogik. </title> <journal> Archiv fur math. Logik und Grundlagenforschung, </journal> <volume> 7 </volume> <pages> 45-60, </pages> <year> 1965. </year> <title> Higher Order Logic 91 </title>
Reference-contexts: This is achieved in Feferman's system IR by alternating the justification of new well-orderings with their use for transfinite induction, leading to a closure ordinal 0 , identified independently by Schutte. See <ref> [ Feferman, 1964; Feferman, 1968; Schutte, 1965b; Schutte, 1965a ] </ref> . 137 If OE is a binary relation on natural numbers, without an infinite descending chain (i.e. if OE is order-isomorphic to a countable ordinal), then transfinite induction on OE is the schema (8x 2 field of OE)((8y OE x'[y]) !
Reference: [ Schutte, 1965b ] <author> K. Schutte. </author> <title> Predicative well orderings. </title> <editor> In J. Crossley and M. Dummett, editors, </editor> <booktitle> Formal Systems and Recursive Functions, </booktitle> <pages> pages 280-303. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1965. </year>
Reference-contexts: This is achieved in Feferman's system IR by alternating the justification of new well-orderings with their use for transfinite induction, leading to a closure ordinal 0 , identified independently by Schutte. See <ref> [ Feferman, 1964; Feferman, 1968; Schutte, 1965b; Schutte, 1965a ] </ref> . 137 If OE is a binary relation on natural numbers, without an infinite descending chain (i.e. if OE is order-isomorphic to a countable ordinal), then transfinite induction on OE is the schema (8x 2 field of OE)((8y OE x'[y]) !
Reference: [ Schwarts et al., 1986 ] <author> J. T. Schwarts, R. B. K. Dewar, E. Dubinsky, and E. Schonberg. </author> <title> Programming with Sets: An Introduction to SETL. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: The rich theory of recursion in higher types aside, the use of higher order objects in database theory is probably due to Makinouchi [ 1977 ] , and is related to the uses of higher order relations in the general purpose programming language setl <ref> [ Schwarts et al., 1986 ] </ref> . 165 The types (also dubbed sorts) of a complex object database are taken to be the simple higher order relational types, built up using cartesian products with attributes as labels.
Reference: [ Schwichtenberg, 1977 ] <author> H. Schwichtenberg. </author> <title> Proof theory: Some applications of cut-elimination, </title> <booktitle> 1977. In [ Barwise, </booktitle> <pages> 1977 ] , pages 867-895. </pages>
Reference-contexts: See <ref> [ Schutte, 1951; Schutte, 1952; Schwichtenberg, 1977 ] </ref> for these theories. 138 The predicative status of set existence principles is not clear-cut, but particular weak principles are usually viewed as predicatively obvious, notably comprehension for arithmetic first order formulas (that is, the first level of the ramified hierarchy), and Weak Konig's
Reference: [ Scott and de Bakker, 1969 ] <author> D. Scott and J.W. de Bakker. </author> <title> A theory of programs. </title> <type> Unpublished manuscript. </type> <institution> IBM, Vienna, </institution> <year> 1969. </year>
Reference: [ Scott and Strachey, 1971 ] <author> D. S. Scott and C. Strachey. </author> <title> Towards a mathematical semantics for computer languages. </title> <editor> In J. Fox, editor, </editor> <booktitle> Computers and Automata, </booktitle> <pages> pages 19-46. </pages> <institution> Brooklyn Polytechnic Institute Press, </institution> <year> 1971. </year>
Reference-contexts: Every V -formula ' (together with a list ~v = v 1 : : : v k of variables that 171 Denotational semantics has grown, of course, into a broad and central field in theoretical computer science. The seminal work was <ref> [ Scott and Strachey, 1971 ] </ref> .
Reference: [ Shapiro, 1991 ] <author> S. Shapiro. </author> <title> Foundation without Foundationalism: A Case for Second-Order Logic. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year>
Reference-contexts: Let 7 Theorem 2.3.1 shows that a particular countable structure, that of the natural numbers, is characterized up to isomorphism by its second order theory. A natural question is whether every countable structure is so characterized. [ Ajtai, 1979 ] (reported in <ref> [ Shapiro, 1991, Section 6.6.4 ] </ref> , who attributes the result also to Magidor) shows that this is so for structures defined within the Godel-constructible universe (i.e. assuming V = L), but that the general claim is independent of ZFC. 8 I.e., n = df s [n] (0) = s (s <p> et al., 1984 ] ). 66 Put differently, every two models of that have the same universe and same interpretation for the constants in V , must have the same interpretation for R. 67 The argument seems to have been part of the folklore; it can also be found in <ref> [ Shapiro, 1991, Section 6.6.3 ] </ref> . [ Shapiro, 1991 ] also observes that the definability property does hold for second order logic for finite: let ' be the conjunction of the formulas in , with R replaced by a variable R of the same arity, and let fl [~x] j <p> differently, every two models of that have the same universe and same interpretation for the constants in V , must have the same interpretation for R. 67 The argument seems to have been part of the folklore; it can also be found in [ Shapiro, 1991, Section 6.6.3 ] . <ref> [ Shapiro, 1991 ] </ref> also observes that the definability property does hold for second order logic for finite: let ' be the conjunction of the formulas in , with R replaced by a variable R of the same arity, and let fl [~x] j df 9R (' ^ R (~x)). 68 <p> A proof of the interpolation property for first order logic can be found in most logic textbooks, see e.g. [ Ebbinghaus et al., 1984 ] . For second order logic the property is trivial (see e.g. <ref> [ Shapiro, 1991 ] </ref> ): let R 1 R k be the vocabulary relation identifiers that occur in ' but not in , and let O be 9R 1 9R k '. 87 Let ' be ^O, where is the first order formula axiomatizing dense linear orderings, 42 Daniel Leivant follows
Reference: [ Sieg, 1985 ] <author> W. Sieg. </author> <title> Fragments of arithmetic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 28 </volume> <pages> 33-71, </pages> <year> 1985. </year>
Reference-contexts: Weaker or alternative versions of the latter result have been proved since [ Friedman, 1969 ] . In particular, a proof theoretic reduction of Weak Konig's Lemma to primitive recursive arithmetic, of a general nature, can be found in <ref> [ Sieg, 1985 ] </ref> .
Reference: [ Sieg, 1987 ] <author> W. Sieg. </author> <title> Provably recursive functionals of theories with Ko-nig's Lemma. </title> <journal> Rend. Sem. Mat. Univers. Politecn. Torino, Fasc. Specale: Logic and Computer Science, </journal> <pages> pages 75-92, </pages> <year> 1987. </year>
Reference-contexts: Moreover, 1 1 sets are definable by a natural transfinite extension of the arithmetical hierarchy [ Kleene, 1955 ] , providing further constructive justification for them. (4) Weak Konig's Lemma is conservative, with respect to 1 1 formulas, over second order arithmetic with recursive comprehension and 0 1 -induction <ref> [ Sieg, 1987 ] </ref> . Weaker or alternative versions of the latter result have been proved since [ Friedman, 1969 ] . In particular, a proof theoretic reduction of Weak Konig's Lemma to primitive recursive arithmetic, of a general nature, can be found in [ Sieg, 1985 ] .
Reference: [ Sieg, 1990 ] <author> W. Sieg. </author> <title> Review of [ Simpson, </title> <journal> 1985a ] . Journal of Symbolic Logic, </journal> <volume> 55 </volume> <pages> 870-874, </pages> <year> 1990. </year>
Reference-contexts: of analysis using only arithmetic comprehension, by Weyl [ 1918 ] . 144 Sieg notes that virtually all of the turn-of-the-century analysis, as presented in [ Hilbert and Bernays, 1939 ] , can be formalized already in second order arithmetic with 1 1 comprehension and induction for 1 1 formulas <ref> [ Sieg, 1990 ] </ref> . However, as one would expect from the re-ductionist program outlined above, much of analysis can be carried out in formalisms weak enough to be conservative over Peano's Arithmetic (see e.g. [ Friedman, 1977; Friedman, 1980 ] ). <p> It is therefore important to restrict attention to natural formalisms, with a suitably simple set of axiom. 148 Also, we can 145 The equivalence of `theorems' to `axioms' is, as noted in <ref> [ Sieg, 1990 ] </ref> , an old theme, however.
Reference: [ Simpson, 1982a ] <author> S. Simpson. </author> <title> 1 1 and 1 1 transfinite induction. </title> <editor> In D. Van Dalen et al., editor, </editor> <booktitle> Logic Colloquium '80, </booktitle> <pages> pages 239-253. </pages> <publisher> North Holland, </publisher> <year> 1982. </year>
Reference-contexts: See e.g. <ref> [ Friedman et al., 1982; Simpson, 1982a; Simpson, 1982b ] </ref> for detailed expositions.
Reference: [ Simpson, 1982b ] <author> S. Simpson. </author> <title> Set theoretic aspects of AT R 0 . In D. </title> <editor> Van Dalen et als, editor, </editor> <booktitle> Logic Colloquium '80, </booktitle> <pages> pages 254-271. </pages> <publisher> North Holland, </publisher> <year> 1982. </year>
Reference-contexts: See e.g. <ref> [ Friedman et al., 1982; Simpson, 1982a; Simpson, 1982b ] </ref> for detailed expositions.
Reference: [ Simpson, 1984 ] <author> S. Simpson. </author> <title> Which set existence axioms are needed to prove the Cauchy/Peano Theorem for ordinary differential equations? Journal of Symbolic Logic, </title> <booktitle> 49 </booktitle> <pages> 783-802, </pages> <year> 1984. </year>
Reference: [ Simpson, 1985a ] <author> S. Simpson. </author> <title> Friedman's research on subsystems of second order arithmetic. </title> <editor> In L. A. Harrington et al., editor, </editor> <booktitle> Harvey Friedman's Research on the Foundations of Mathematics, </booktitle> <pages> pages 137-159. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1985. </year>
Reference-contexts: Better examples are the unprovability in ATR 0 of Kruskal's Theorem about tree em-beddings, and the unprovability of an extended form of Kruskal's Theorem in analysis with comprehension and induction for 1 1 -formulas. A detailed survey of these results is <ref> [ Simpson, 1985a ] </ref> . The seminal work on combinatorial statements independent of Peano's arithmetic is [ Paris and Harrington, 1977 ] . Kruskal's Theorem asserts that in every infinite sequence of finite trees there must occur a tree within which some previous tree in the list can be embedded.
Reference: [ Simpson, 1985b ] <author> S. Simpson. </author> <title> Nonprovability of certain combinatorial properties of finite trees. </title> <editor> In L. A. Harrington et al., editor, </editor> <booktitle> Harvey Friedman's Research on the Foundations of Mathematics, </booktitle> <pages> pages 87-117. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1985. </year>
Reference: [ Simpson, 1986 ] <author> S. Simpson. </author> <title> Subsystems of Z 2 and Reverse Mathematics. </title>
Reference-contexts: Already Dedekind showed that major theorems of analysis are equivalent to the topological completeness of the reals [ Dedekind, 1872 ] ; also, a well-known compendium of theorems of mathematics that are equivalent to the Axiom of Choice is [ Rubin and Rubin, 1966 ] . See <ref> [ Simpson, 1986 ] </ref> for a survey of the Reverse Mathematics project.
References-found: 264

