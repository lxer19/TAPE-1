URL: ftp://ftp.eecs.umich.edu/people/rundenst/papers/r-93-8.ps
Refering-URL: http://www.eecs.umich.edu/~rundenst/group/papers.html
Root-URL: http://www.cs.umich.edu
Title: SET RESTRICTIONS FOR SEMANTIC GROUPINGS  
Author: Elke A. Rundensteiner, Lubomir Bic, Jonathan P. Gilbert and Meng-Lai Yin 
Keyword: Index Terms: Advanced Data Modeling, Constraint Specification, Indistinguishability, Object Equivalence, Object Identity, Semantic Abstractions, Semantic Integrity.  
Address: Irvine, CA 92717  P.O. Box 3707, Mail Stop 6A-UC, Seattle, WA 98124-2207.  
Affiliation: Information and Computer Science Department University of California, Irvine  
Date: April 1993.  
Note: To appear: IEEE Trans. on Knowledge and Data Engineering,  This work has partially been supported by NSF grant CCR-8709817. Current Address: Boing Commercial Airplanes,  
Abstract: Most research on semantic integrity has taken place in the traditional database fields, specifically, the relational data model. Advanced models, such as, semantic and object-oriented data models, have developed higher-level abstractions to increase their expressive power in order to meet the needs of newly emerging application domains. This allows them to incorporate some semantic constraints directly into their schemas. There are however many types of restrictions that cannot be expressed solely by these high-level constructs. Therefore we extend the potential of advanced models by augmenting their abstractions with useful set restrictions. In particular, we identify and formulate four of their most common semantic groupings: set groupings, is-a related set groupings, power set groupings, and Cartesian product groupings. For each, we define a number of restrictions that control its structure and composition. We exploit the notion of object identity for the definition of these semantic restrictions. This permits each grouping to capture more subtle distinctions of the concepts in the application environment as is demonstrated by numerous examples throughout this paper. The resulting set of restrictions forms a general framework for integrity constraint management in advanced data models. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abiteboul, S. and Hull, R., </author> <title> IFO: A Formal Semantic Database Model, </title> <journal> ACM Trans. on Database Systems Vol. </journal> <volume> 12, Issue 4, </volume> <month> Dec. </month> <year> 1987, </year> <pages> pp. 525-565. </pages>
Reference: [2] <editor> Bancilhon, F., et al., </editor> <title> The Design and Implementation of O2 an Object-Oriented Database System, Rapport Technique Altair 20-88, </title> <month> April </month> <year> 1988. </year>
Reference: [3] <author> Banerjee, J., Kim, W., Kim, H.-J., and Korth, H., </author> <title> Semantics and Implementation of Schema Evolution in Object-Oriented Databases, </title> <booktitle> Proc. ACM-SIGMOD Int. Conf. on Management of Data, </booktitle> <address> San Francisco, CA., </address> <year> 1987. </year>
Reference: [4] <author> Bic L. and Gilbert J.P. </author> <title> Learning from AI: New Trends in Database Technology, </title> <journal> Computer, </journal> <volume> Vol. 19, Issue 3, </volume> <month> Mar. </month> <year> 1986, </year> <pages> pp. 44-54. </pages>
Reference: [5] <author> Borgida, A. </author> <title> Conceptual Modeling of Information Systems, in On Knowledge Base Management Systems (ed. Brodie, M.L. </title> <editor> and Mylopoulos, J.) </editor> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: [6] <institution> Proceedings of the Workshop on Data Abstraction, Databases and Conceptual Modelling, Pingree Park, Colorado, Sponsored by the Nat'l. Bureau of Standards, ACM SIGART, SIG-MOD and SIGPLAN (ed. </institution> <note> Brodie, M.L. and Zilles, S.N) June 23-26, </note> <year> 1980. </year>
Reference: [7] <author> Chen, </author> <title> P.P., The Entity-Relationship Model | Toward a Unified View of Data, </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 1, Issue 1, </volume> <month> Mar. </month> <year> 1976, </year> <pages> pp. 9-36. </pages>
Reference-contexts: The term entity is used in this paper in its most generic form | it may, for example, stand for a row in a relation table [8], an entity (or a relationship) in the entity-relationship model <ref> [7] </ref>, an entity in a semantic data model [16, 13] or an object in an object-oriented model [22, 12]. Entities in the world of the application are grouped into classes, based on common properties. The class notion, however, serves a dual purpose.
Reference: [8] <author> Codd, E.F., </author> <title> Extending the Database Relational Model to Capture More Meaning, </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 4, Issue 4, </volume> <month> Dec. </month> <year> 1979, </year> <pages> pp. 397-434. </pages>
Reference-contexts: In this paper we take the following position. Entities in our data model represent a concept (concrete or abstract) in the application world. The term entity is used in this paper in its most generic form | it may, for example, stand for a row in a relation table <ref> [8] </ref>, an entity (or a relationship) in the entity-relationship model [7], an entity in a semantic data model [16, 13] or an object in an object-oriented model [22, 12]. Entities in the world of the application are grouped into classes, based on common properties.
Reference: [9] <author> Hammer M. and McLeod D.J., </author> <title> A Framework for Data Base Semantic Integrity, </title> <booktitle> Proc. 2nd Int. Conf. on Software Engineering, </booktitle> <address> San Francisco, CA Oct. 13-15, </address> <year> 1976, </year> <pages> pp. 498-504. </pages>
Reference: [10] <author> Hammer M. and McLeod D.J., </author> <title> Semantic Integrity in a Relational Data Base System, </title> <booktitle> Proc. of Int. Conf. on Very Large Data Bases, Framingham, MA Sep. </booktitle> <pages> 22-24, </pages> <year> 1975. </year>
Reference: [11] <author> Hammer M. and McLeod D.J., </author> <title> Database Description with SDM: A Semantic Data Model, </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 6, Issue 3, </volume> <month> Sept. </month> <year> 1981, </year> <pages> pp. 351-386. </pages>
Reference: [12] <author> Hudson, S.E. and King, R., CACTIS: </author> <title> A database system for specifying functionally-defined data, </title> <booktitle> Proc. of the Workshop on Object-Oriented Databases, </booktitle> <year> 1986. </year>
Reference-contexts: is used in this paper in its most generic form | it may, for example, stand for a row in a relation table [8], an entity (or a relationship) in the entity-relationship model [7], an entity in a semantic data model [16, 13] or an object in an object-oriented model <ref> [22, 12] </ref>. Entities in the world of the application are grouped into classes, based on common properties. The class notion, however, serves a dual purpose. It is a generic description of all entities which belong to that class and hence it imposes a type on those entities.
Reference: [13] <author> Hull, R. and King, R., </author> <title> Semantic Database Modeling: Survey, Applications and Research Issues, </title> <journal> ACM Computing Surveys Vol. </journal> <volume> 19, Issue 3, </volume> <month> Sept. </month> <year> 1987, </year> <pages> pp. 201-260. </pages>
Reference-contexts: The term entity is used in this paper in its most generic form | it may, for example, stand for a row in a relation table [8], an entity (or a relationship) in the entity-relationship model [7], an entity in a semantic data model <ref> [16, 13] </ref> or an object in an object-oriented model [22, 12]. Entities in the world of the application are grouped into classes, based on common properties. The class notion, however, serves a dual purpose.
Reference: [14] <author> Hull, R., </author> <title> Four Views of Complex Objects: A Sophisticate's Introduction, Nested Relations and Complex Objects, </title> <note> to appear in Springer-Verlag LNCS, </note> <year> 1988. </year>
Reference-contexts: Let us denote the identity and the state of an entity s by s.id and s.state, respectively. The identity is time-invariant, i.e., when the state of an entity is modified its identity is unchanged. This is typically implemented by a 1 In <ref> [14] </ref>, Hull shows that this restriction does not limit the `information capacity' of the model. 2 BASIC CONCEPTS 7 surrogate | a system-assigned global ID invisible to the user. The identity of a given entity is independent of its current state.
Reference: [15] <author> Kent, W., </author> <title> Limitations of record-based information models, </title> <journal> Comm. ACM, </journal> <volume> Vol. 4, Issue 1, </volume> <month> Mar. </month> <year> 1979, </year> <pages> pp. 107-131. REFERENCES 26 </pages>
Reference: [16] <author> King, J., Sembase: </author> <title> A Semantic DBMS, </title> <booktitle> Proc. Workshop on Expert Database Systems, </booktitle> <month> Oct. </month> <year> 1984, </year> <pages> pp. 151-171. </pages>
Reference-contexts: The term entity is used in this paper in its most generic form | it may, for example, stand for a row in a relation table [8], an entity (or a relationship) in the entity-relationship model [7], an entity in a semantic data model <ref> [16, 13] </ref> or an object in an object-oriented model [22, 12]. Entities in the world of the application are grouped into classes, based on common properties. The class notion, however, serves a dual purpose.
Reference: [17] <author> Khoshafian, </author> <title> S.N. and Copeland G.P., Object Identity, </title> <booktitle> Proc. </booktitle> <address> OOPSLA'86, </address> <month> Sept. </month> <pages> 1986 , pp. 406-416. </pages>
Reference-contexts: We distinguish four levels of relationships among objects based on identity equivalence and value equivalence. Then objects may be: (1) distinct and distinguishable, (2) distinct but indistinguishable (shallow equal), (3) the same but distinguishable (when viewed as participating in different classes), or (4) the same and indistinguishable (deep equal) <ref> [17, 27, 25] </ref>. Our paper extends the conventional set-oriented notation with the notion of object identity and the ability to handle complex objects and classes. <p> All of these are commonly found in some form in semantic database models [23]. 2.3 Identity The concept of identity has been introduced implicitly in some semantic models (explicitly in object-oriented systems <ref> [17] </ref>) to better cope with complex entities. We use it explicitly: an entity (with identity) consists of two parts | an identity and a state. Let us denote the identity and the state of an entity s by s.id and s.state, respectively. <p> Note that the last definition is recursive; it stops when applied to simple entities. To illustrate these two definitions, which are based on the work of Khoshafian and Copeland <ref> [17] </ref>, consider a situation where a new car, say car 2 , has been built out of the major parts of another (perhaps damaged) car, say car 1 .
Reference: [18] <author> Kim, W., Bertino, E., and Garza, J. F. </author> , <title> Composite Objects Revisited, </title> <booktitle> Proc. of SIGMOD, </booktitle> <address> May/31-June/2, </address> <year> 1989, </year> <pages> pp. 337-347. </pages> <booktitle> (SIGMOD Record Vol. </booktitle> <volume> 18, No. 2, </volume> <month> June </month> <year> 1989) </year>
Reference: [19] <author> Lenzerini M., </author> <title> Covering and Disjointness in Type Networks, </title> <booktitle> Proc. 2nd Int. Conf. on Data Engineering, </booktitle> <address> Los Angeles, CA, </address> <month> Feb. </month> <pages> 3-5, </pages> <year> 1987, </year> <pages> pp. 386-393. </pages>
Reference: [20] <author> Liskov, B.H. et al, </author> <title> Abstraction Mechanisms in CLU, </title> <journal> Comm. of the ACM Vol. </journal> <volume> 20, Issue 8, </volume> <month> Aug. </month> <year> 1977, </year> <pages> pp. 564-576. </pages>
Reference: [21] <author> Maier, D., and Stein, J., </author> <title> Development and Implementation of an Object-Oriented DBMS, Research Directions in Object-Oriented Programming, </title> <editor> B. Shriver and P. Wegner, (Eds.), </editor> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference: [22] <author> Mylopoulos, J., Bernstein, P.A., and Wong H.K.T., </author> <title> A Language Facility for Designing Database-Intensive Applications, </title> <journal> ACM Trans. on Database Systems Vol. </journal> <volume> 5, Issue 2, </volume> <month> June </month> <year> 1980, </year> <pages> pp. 185-207. </pages>
Reference-contexts: is used in this paper in its most generic form | it may, for example, stand for a row in a relation table [8], an entity (or a relationship) in the entity-relationship model [7], an entity in a semantic data model [16, 13] or an object in an object-oriented model <ref> [22, 12] </ref>. Entities in the world of the application are grouped into classes, based on common properties. The class notion, however, serves a dual purpose. It is a generic description of all entities which belong to that class and hence it imposes a type on those entities.
Reference: [23] <author> Peckham, J. and Maryanski, F., </author> <title> Semantic Data Models, </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 20, Issue 3, </volume> <month> Sept. </month> <year> 1988, </year> <pages> pp. 153-189. </pages>
Reference-contexts: Note that the four constructs: set grouping, is-a related grouping, Cartesian grouping, and power set grouping, are closely related to the following abstractions respectively: classification, generalization/specialization, aggregation, and association. All of these are commonly found in some form in semantic database models <ref> [23] </ref>. 2.3 Identity The concept of identity has been introduced implicitly in some semantic models (explicitly in object-oriented systems [17]) to better cope with complex entities. We use it explicitly: an entity (with identity) consists of two parts | an identity and a state.
Reference: [24] <author> Rundensteiner, E. A., Bic, L., Gilbert, J., and Yin, M., </author> <title> A Semantic Integrity Framework: Set Restrictions for Semantic Groupings, </title> <booktitle> IEEE Int. Conf. on Data Engineering, </booktitle> <address> (ICDE-7), Kobe, Japan, </address> <month> April </month> <year> 1991. </year>
Reference: [25] <author> Rundensteiner, E. A., Bic, L., Gilbert, J., and Yin, M., </author> <title> Restricting Is-A Related Groupings Using Object Equivalence, </title> <booktitle> The Second Int. Symposium on Database Systems for Advanced Applications (DASFAA'91), </booktitle> <address> Tokyo, Japan, </address> <month> April 2-4, </month> <year> 1991. </year>
Reference-contexts: We distinguish four levels of relationships among objects based on identity equivalence and value equivalence. Then objects may be: (1) distinct and distinguishable, (2) distinct but indistinguishable (shallow equal), (3) the same but distinguishable (when viewed as participating in different classes), or (4) the same and indistinguishable (deep equal) <ref> [17, 27, 25] </ref>. Our paper extends the conventional set-oriented notation with the notion of object identity and the ability to handle complex objects and classes.
Reference: [26] <author> Rundensteiner, E. A., and Bic, L., </author> <title> Set Operations in a Data Model Supporting Complex Objects, </title> <booktitle> Int. Conf. on Extending Data Base Technology (EDBT), </booktitle> <address> Fondazione Cini, Venice, Italy. March 26-30, </address> <year> 1990. </year> <note> (published in Lecture Notes in Computer Science, vol. 416, </note> <year> 1990, </year> <pages> pp. 286 - 300.) </pages>
Reference: [27] <author> Rundensteiner, E. A., L. Bic, J. Gilbert, and M.-L. Yin, </author> <title> Set-Related Restrictions for Semantic Groupings, </title> <type> Technical Report Number 89-07, </type> <institution> Department of Information and Computer Science, University of California, Irvine, </institution> <month> Jan. </month> <year> 1989. </year>
Reference-contexts: We distinguish four levels of relationships among objects based on identity equivalence and value equivalence. Then objects may be: (1) distinct and distinguishable, (2) distinct but indistinguishable (shallow equal), (3) the same but distinguishable (when viewed as participating in different classes), or (4) the same and indistinguishable (deep equal) <ref> [17, 27, 25] </ref>. Our paper extends the conventional set-oriented notation with the notion of object identity and the ability to handle complex objects and classes.
Reference: [28] <author> Shephard, A., and L. Kerschberg, </author> <title> Constraint Management in Expert Database Systems, </title> <booktitle> Proc. of the First Int. Workshop on Expert Database Systems, </booktitle> <publisher> The Benjamin Cummings Pub. Co., Inc. </publisher> <editor> (ed. L. Kerschberg) Mar. </editor> <year> 1986, </year> <pages> pp. 309-331. REFERENCES 27 </pages>
Reference: [29] <author> Shipman, D.W., </author> <title> The Functional Data Model and the Data Language DAPLEX, </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 6, Issue 1, </volume> <month> Mar. </month> <year> 1981, </year> <pages> pp. 140-173. </pages>
Reference: [30] <author> Smith, J.M. and Smith D.C.P., </author> <title> Database Abstractions: Aggregation and Generalization, </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 2, Issue 2, </volume> <month> June </month> <year> 1977, </year> <pages> pp. 105-133. </pages>
Reference: [31] <author> Ullman, J. D., </author> <title> Principles of Database and Knowledge-Base Systems | Vol. </title> <publisher> 1 Computer Science Press, </publisher> <year> 1988. </year>
Reference: [32] <author> Urban, S.D., and Delcambre, L.M.L., </author> <title> Constraint Analysis: A Tool for Explaining the Semantics of Complex Objects, </title> <booktitle> Proc. 2nd Int. Workshop on Object-Oriented Database Systems, </booktitle> <address> Bad Munster, West Germany, </address> <month> Sep. </month> <year> 1988, </year> <pages> pp. 498-504. </pages>
References-found: 32

