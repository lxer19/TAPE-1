URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1993/93-03.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1993/
Root-URL: 
Title: Motion Compensated Compression of Computer Animation Frames  
Author: Brian K. Guenter Hee Cheol Yun, and Russell M. Mersereau 
Keyword: CR Categories: I.4.2[compression(coding)]exact coding. Additional keywords: compression,computer animation,computer graphics, motion prediction  
Abstract: This paper presents a new lossless compression algorithm for computer animation image sequences. The algorithm uses transformation information available in the animation script and floating point depth and object number information stored at each pixel to perform highly accurate motion prediction with very low computation. The geometric data, i.e., the depth and object number, is very efficiently compressed using motion prediction and a new technique called direction coding, typically to 1 to 2 bits per pixel. The geometric data is also useful in z-buffer image compositing and this new compression algorithm offers a very low storage overhead method for saving the information needed for z-buffer image compositing. The overall compression ratio of the new algorithm, including the geometric data overhead, is compared to conventional spatial linear prediction compression and is shown to be consistently better, by a factor of 1.4 or more, even with large frame-to-frame motion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Denber, Michael J. and Turner, Paul M. </author> <title> A Differential Compiler for Computer Animation. </title> <booktitle> Proceedings of SIGGRAPH '86 (Dallas, Taxas, August 18-22,1986). In Computer Graphics 20,4 (August 1986), </booktitle> <pages> 21-27. </pages>
Reference-contexts: Much more information is available to a compression algorithm for computer animation than is the case for live action video. However, surprisingly little work has been done on exploiting the information in a computer animation script to improve image compression efficiency. Previous work such as that described in <ref> [1] </ref> and [5] is actually image based compression although the application is to computer animation. The lossless compression algorithm for computer animation to be described in this paper combines elements of both motion prediction and spatial linear prediction compression techniques, using each when most appropriate.
Reference: [2] <author> Duff, Tom. </author> <title> Compositing 3-D Rendered Images. </title> <booktitle> Proceedings of SIGGRAPH '85 (San Francisco, </booktitle> <address> California, July 22-26,1985). </address> <booktitle> In Computer Graphics 19, 3(July 1985), </booktitle> <pages> 41-44. </pages>
Reference-contexts: Extra geometric information, the object number and the depth at each pixel, is stored in each frame to perform motion prediction. The geometric information is compressed very efficiently in our new algorithm, typically to 1 or 2 bits per pixel. For z-buffer compositing applications <ref> [2] </ref> this is another advantage of the new algorithm, because the depth information needed for z-buffer compositing is stored in very little space. We assume the animation script contains a homogeneous matrix transformation for every object in every frame.
Reference: [3] <author> Jain, Anil K. </author> <title> Fundamentals of Digital Image Processing. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1989. </year>
Reference: [4] <author> Jayant, Nuggehally S. and Noll, Peter. </author> <title> Digital Coding of Waveforms. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1984. </year>
Reference-contexts: The required number of bits for the object number depends on the total number of objects. 3 System Block diagrams The heart of the coding scheme uses a linear predictive coding algorithm (DPCM) <ref> [4] </ref>. Since there exists substantial correlation between successive frames in computer animation as well as in real-life video, good compression gain can be achieved by these predictive schemes.
Reference: [5] <author> Jones, Stephen C. and Moorhead II, Robert J. </author> <title> Hardware-specific Image Compression Techniques for the Animation of CFD data. </title> <booktitle> Proceedings of SPIE International Society for Optical Engineering, </booktitle> <address> 1668 (San Jose, California, </address> <month> February </month> <year> 10-11,1992), </year> <pages> 141-146. </pages>
Reference-contexts: However, surprisingly little work has been done on exploiting the information in a computer animation script to improve image compression efficiency. Previous work such as that described in [1] and <ref> [5] </ref> is actually image based compression although the application is to computer animation. The lossless compression algorithm for computer animation to be described in this paper combines elements of both motion prediction and spatial linear prediction compression techniques, using each when most appropriate.
Reference: [6] <author> Lim, Jae S. </author> <title> Two-Dimensional Signal and Image Processing., </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1990. </year>
Reference: [7] <author> Martucci, Stephen A. </author> <title> Reversible Compression of HDTV Images Using Median Adaptive Prediction and Arithmetic Coding. </title> <booktitle> Proceedings of IEEE ISCAS, </booktitle> <address> 2(New Or-leans, Louisiana, </address> <month> May </month> <year> 1-3,1990),1310-1313. </year>
Reference-contexts: One of the most effective lossless image compression techniques is DPCM followed by entropy coding [4][8]. For typical live action video sequences the best compression achievable using this method is usually less than 2 to 1 <ref> [7] </ref>. The best computer generated images are nearly indistinguishable from real images so we can expect that good synthetic images will not compress any better than live action video.
Reference: [8] <author> Melnychuck, Paul W. and Rabbani, Majid. </author> <title> Survey of Lossless Image Coding Techniques. </title> <booktitle> Proceedings of SPIE International Society for Optical Engineering, </booktitle> <address> 1075 (Los Angeles, California, </address> <month> January 17-20, </month> <year> 1989), </year> <pages> 92-100. </pages>
Reference: [9] <author> Sederberg, Thomas W. and Parry, Scott R. </author> <title> Free-Form Deformation of Solid Geometric Models. </title> <booktitle> Proceedings of SIGGRAPH '86 (Dallas, Taxas,August 18-22,1986). In Computer Graphics 20,4 (August 1986), </booktitle> <pages> 151-160. </pages>
Reference-contexts: This limits the current implementation to rigid body motion but this is not an intrinsic limitation of the algorithm. Non-rigid body motion can be accommodated by storing appropriate transformation information, such as free form deformation mesh points for example <ref> [9] </ref>, in the animation script. The current implementation assumes that objects are represented as polygonal surfaces. Algorithms exist for converting many different surface representations to approximating polygonal surfaces. Many commercial image synthesis programs perform this conversion internally so the limitation to a polygonal representation is not unduly restrictive.
Reference: [10] <author> Witten, Ian H., Neal, Radford M., and Cleary, John G. </author> <title> Arithmetic Coding for Data Compression. </title> <note> In Communications of the ACM 30,6 (June 1987), </note> <month> 520-540. </month> <title> Plate 1: Frame 5 of the test sequence Plate 2: Frame 0,9 Plate 3: Frame 10,19 Plate 4: Frame 20,29 Plate 5: The differential image of frame 5 by DPCM (512 fi 512). Plate 6: The differential residual image of frame 5 by motion compensation (512 fi 512). </title>
References-found: 10

