URL: http://www.cs.mtu.edu/~asandu/Deposit/phd.ps.gz
Refering-URL: http://www.cs.mtu.edu/~asandu/theses.html
Root-URL: http://www.cs.mtu.edu
Title: NUMERICAL ASPECTS OF AIR QUALITY MODELING by Adrian Sandu An Abstract  
Degree: Of a thesis submitted in partial fulfillment of the requirements for the Doctor of Philosophy degree in  Thesis supervisors: Professor Florian A. Potra Professor Gregory R. Carmichael  
Date: August 1997  
Affiliation: Applied Mathematical and Computational Sciences in the Graduate College of The University of Iowa  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> T. Alishenas and O. Olafsson. </author> <title> Modeling and velocity stabilization of constrained mechanical systems with comparative study of two test problems. </title> <type> Preprint, NADA, </type> <institution> Royal Institute of Technology, Stockholm, </institution> <year> 1993. </year>
Reference-contexts: Such symmetric permutations can be viewed as a rearrangement (renumbering) of the species involved in the chemical mechanism (if the initial ordering was <ref> [1; :::; n] </ref> T , the new ordering will be [1; :::; n] T ). <p> Such symmetric permutations can be viewed as a rearrangement (renumbering) of the species involved in the chemical mechanism (if the initial ordering was <ref> [1; :::; n] </ref> T , the new ordering will be [1; :::; n] T ). We further restrict the class of possible permutations to those given by a global strategy; more exactly, we want to compute the permutation off-line, in the preprocessing stage (hence considering only the structure of the matrix and not particular numerical entries). <p> Let = <ref> [0; 1] </ref> fi [0; 1]. For the heat equation let L 1 = K@=@x 2 , L 2 = K@=@y 2 . Denote f0; 1g fi [0; 1] = @ x , 178 [0; 1] fi f0; 1g = @ y and @ = @ x [ @ y . <p> Let = <ref> [0; 1] </ref> fi [0; 1]. For the heat equation let L 1 = K@=@x 2 , L 2 = K@=@y 2 . Denote f0; 1g fi [0; 1] = @ x , 178 [0; 1] fi f0; 1g = @ y and @ = @ x [ @ y . <p> Let = <ref> [0; 1] </ref> fi [0; 1]. For the heat equation let L 1 = K@=@x 2 , L 2 = K@=@y 2 . Denote f0; 1g fi [0; 1] = @ x , 178 [0; 1] fi f0; 1g = @ y and @ = @ x [ @ y . For the transport equation let L 1 = v 1 @=@x, L 2 = v 2 @=@y with v 1 ; v 2 &gt; 0. <p> Let = <ref> [0; 1] </ref> fi [0; 1]. For the heat equation let L 1 = K@=@x 2 , L 2 = K@=@y 2 . Denote f0; 1g fi [0; 1] = @ x , 178 [0; 1] fi f0; 1g = @ y and @ = @ x [ @ y . For the transport equation let L 1 = v 1 @=@x, L 2 = v 2 @=@y with v 1 ; v 2 &gt; 0. Denote the upwind boundaries by f0gfi [0; 1] = <p> , 178 <ref> [0; 1] </ref> fi f0; 1g = @ y and @ = @ x [ @ y . For the transport equation let L 1 = v 1 @=@x, L 2 = v 2 @=@y with v 1 ; v 2 &gt; 0. Denote the upwind boundaries by f0gfi [0; 1] = @ x , [0; 1]fif0g = @ y and @ = @ x [@ y . Since (on smooth enough arguments) L 1 and L 2 commute we will consider only a simple (non-symmetric) splitting. <p> For the transport equation let L 1 = v 1 @=@x, L 2 = v 2 @=@y with v 1 ; v 2 &gt; 0. Denote the upwind boundaries by f0gfi <ref> [0; 1] </ref> = @ x , [0; 1]fif0g = @ y and @ = @ x [@ y . Since (on smooth enough arguments) L 1 and L 2 commute we will consider only a simple (non-symmetric) splitting.
Reference: [2] <author> H. Amann. </author> <title> Ordinary Differential Equations: An Introduction to Nonlinear Analysis. </title> <publisher> Walter de Gruyter, </publisher> <year> 1990. </year>
Reference: [3] <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Dongarra, J. Du Croz, A. Green-baum, S. Hammarling, A. McKenney, S. Ostrouchov, and D. Sorensen. </author> <title> LA-PACK User's Guide, second edition. </title> <type> Technical report, </type> <institution> SIAM, </institution> <address> Philadelphia, PA, </address> <year> 1995. </year>
Reference-contexts: LINPACK O is LINPACK acting on the ordered matrix. Without any further intervention, other than species reordering, the decomposition time may be cut down significantly, as seen in Tables 3.2, 3.3. This is explained by the sparsity of L. 2. LAPACK The code available on netlib, see <ref> [3] </ref>. LAPACK is a collection of Fortran subroutines that supersedes both LINPACK and EISPACK. Tested routines: dgetrf and dgetrs. Results for both the ordered and the unordered system are given. 3. HARWELL MA28 The code, available on netlib, is written by I. S.
Reference: [4] <author> U. M. Ascher, S. J. Ruuth, and B. T. R. Wetton. </author> <title> Implicit-Explicit methods for time dependent PDE's. </title> <type> Technical Report 93-15, </type> <year> 1993. </year>
Reference-contexts: This may be done by efficiently combining an implicit method for the fast (stiff) part with an explicit method for the slow (non-stiff) part. Possible candidates are Partitioned Runge-Kutta methods (PRK) from [47], Implicit-Explicit Multi step methods (IEM) from <ref> [4] </ref> and SPARK methods from [55]. 4. Positivity preserving. This aspect is important for preserving the stability of the chemical system itself, but has not been fully explored so far. 197 5. Use of differential algebraic solvers for problems involving multiple phase equi libria.
Reference: [5] <author> R.D. Atkinson, D.L. Baulch, R.A. Cox, R.F.JR. Hampson, J.A. Kerr, and J. Troe. </author> <title> Evaluated kinetic and photochemical data for atmospheric chemistry. </title> <journal> International Journal of Chemical Kinetics, </journal> <volume> 21 </volume> <pages> 115-190, </pages> <year> 1989. </year>
Reference-contexts: The mechanism, based on the work of Lurmann et al. [59] and Atkinson et. al. <ref> [5] </ref> is representative of those presently being used in the study of chemically perturbed environments; it represents the major features of the photochemical oxidant cycle in the troposphere and can be used to study the chemistry of both highly polluted (e.g., near urban centers) and remote (e.g., marine) environments. <p> The mechanism, based on the work of Atkinson et. al. <ref> [5] </ref> and Lurmann et al. [59] can be used to study the chemistry of both highly polluted (e.g., near urban centers) and remote (e.g., marine) environments. Problem D is an urban scenario, while problem E a rural one, based on IPCC scenario 3.
Reference: [6] <author> G. Bader and P. Deuflhard. </author> <title> A semi-implicit mid-point rule for stiff systems of ordinary differential equations. </title> <journal> Numer. Math., </journal> <volume> 41 </volume> <pages> 373-398, </pages> <year> 1983. </year>
Reference-contexts: Some extrapolation methods have proved to be successful for very stiff problems arising in chemistry, e.g., extrapola tion based on the linearly implicit Euler method or on the linearly implicit mid-point rule, see <ref> [6, 30] </ref> and [47, Section IV.9]. Therefore, extrapolation cannot be a priori discarded as a viable technique for solving the stiff systems arising in atmospheric chemistry.
Reference: [7] <author> Ch. Bischof, A. Carle, G. Corliss, A. Griewank, and P. Hovland. </author> <title> ADIFOR generating derivative codes from FORTRAN programs. </title> <type> Technical report, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Ar-gonne, Illinois, </institution> <year> 1992. </year>
Reference: [8] <author> Ch. Bischof, A. Carle, P. Khademi, and A. Mauer. </author> <title> The ADIFOR2.0 system for the automatic differentiation of FORTRAN77 programs. </title> <type> Technical report, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1994. </year>
Reference: [9] <author> H.G. Bock. </author> <title> Numerical treatment of inverse problems in chemical reaction kinetics. Modelling of Chemical Reaction Systems, K.H. Ebert, </title> <editor> P. Deuflhard and W. Jaeger editors, </editor> <title> Springer Series in Chem. </title> <journal> Phys., </journal> <volume> 18 </volume> <pages> 102-125, </pages> <year> 1981. </year>
Reference: [10] <author> K. E. Brenan, S. L. Campbell, and L. R. Petzold. </author> <title> Numerical Solution of Initial-Value Problems in Differential-Algebraic Equations. </title> <publisher> Elsevier Science Publishers, </publisher> <year> 1989. </year>
Reference-contexts: Species i Re ( i ) HN O 3 (aq) 2:2 10 9 OH SO 2 HCOOH (aq) , SO 2 (aq) , -1.25e+7, -3.65e+6, -1e+6, HCOO (aq) , N H 3 (aq) , O 2 HO 2 (aq) , OH, O, H + HSO N O All other 2 <ref> [10; 0] </ref> of the problem in terms of the eigenvalues of the Jacobian is given in Table 4.9.
Reference: [11] <author> P.N. Brown, G.D. Byrne, and A.C. Hindmarsh. VODE: </author> <title> A Variable Step ODE Solver. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 10 </volume> <pages> 1038-1051, </pages> <year> 1989. </year> <month> 229 </month>
Reference-contexts: We have used the original implementation obtained directly from the authors. To accelerate the convergence of the Gauss-Seidel iterations, the species have been sorted in decreasing order relatively to the size of their destruction rates. 8. Vode (a BDF code, see <ref> [11, 12] </ref>)) is similar to LSODE (Livermore Solver for ODE, see [51]), widely used by atmospheric modellers. Vode is considered to have several advantages over LSODE when used to integrate systems of ODE arising from chemical kinetics (see [12]). <p> Three off-the-shelf integrators were used in the numerical experiments in both original and modified (sparse) versions. Each code is based on a different numerical scheme. * Vode, the Variable coefficient ODE solver of Hindmarsch, Brown and Byrne, a BDF code. For details see <ref> [11] </ref>; * Sdirk4 written by Hairer and Wanner, part of [47]. Is based on a sti*y accu rate, five stages, order four, singly diagonally implicit Runge-Kutta method; * Rodas written by Hairer and Wanner, part of [47]. <p> 1:94100407061964420292840123379419 ~ b 1 = 1:53358745784149585370766523913002 ~ b 3 = 0:28386385364476186843165221544619 The remaining coefficients are ff 21 = ff 31 = fl and ff 32 = fl 31 = 0. 3.8 Other methods 3.8.1 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit BDF formulas <ref> [11, 47] </ref> and a successor of the "Livermore Solver" 96 Lsode from [51]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [11, 47]. <p> VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit BDF formulas <ref> [11, 47] </ref> and a successor of the "Livermore Solver" 96 Lsode from [51]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [11, 47]. We used Vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration.
Reference: [12] <author> G.D. Byrne and A.M. Dean. </author> <title> The numerical solution of some chemical kinetics models with VODE and CHEMKIN II. </title> <journal> Computers Chem., </journal> <volume> 17 </volume> <pages> 297-302, </pages> <year> 1993. </year>
Reference-contexts: We have used the original implementation obtained directly from the authors. To accelerate the convergence of the Gauss-Seidel iterations, the species have been sorted in decreasing order relatively to the size of their destruction rates. 8. Vode (a BDF code, see <ref> [11, 12] </ref>)) is similar to LSODE (Livermore Solver for ODE, see [51]), widely used by atmospheric modellers. Vode is considered to have several advantages over LSODE when used to integrate systems of ODE arising from chemical kinetics (see [12]). <p> Vode (a BDF code, see [11, 12])) is similar to LSODE (Livermore Solver for ODE, see [51]), widely used by atmospheric modellers. Vode is considered to have several advantages over LSODE when used to integrate systems of ODE arising from chemical kinetics (see <ref> [12] </ref>). In order to take full advantage of the sparsity pattern of the Jacobian, Vode has been modified as described in [75] by replacing the general factorization and substitution routines dgefa 43 and dgesl with specialized sparse routines. Results for both the standard and the modified Vode are presented.
Reference: [13] <author> D. G. Cacuci. </author> <title> Sensitivity theory for nonlinear systems. I. Nonlinear functional analysis approach. II. Extensions to additional classes of responses. </title> <journal> J. Math. Phys., </journal> <volume> 22 </volume> <pages> 2794-2812, </pages> <year> 1981. </year>
Reference: [14] <author> G.R. Carmichael, L.K. Peters, and T. Kitada. </author> <title> A second generation model for regional-scale transport/ chemistry/ deposition. </title> <journal> Atmospheric environment, </journal> <volume> 20 </volume> <pages> 173-188, </pages> <year> 1986. </year>
Reference-contexts: Unlike controlled laboratory experiments, field studies cannot be parametrically controlled. Since laboratory experiments and field studies by themselves cannot fully elucidate complex atmospheric phenomena, comprehensive models that allow multiple processes to occur simultaneously are required for data analysis and scientific inquiry. The models by Carmichael et al. <ref> [14] </ref>, Jacob et al. [53], Dentener and Crutzen [29] are examples of regional and global scale atmospheric chemistry models in use today. These models treat transport, chemical transformations, emissions and deposition processes in an integrated framework, and serve as representations of our current understanding of the complex atmospheric processes. <p> The net result is that the simulation time is of the same order as the wall-clock time. One possible solution is to move the 4 codes on more powerful machines (e.g., a version of STEM-II, see <ref> [14] </ref>, is currently running on a CRAY-C90). Another direction would be to take advantage of the inner parallelism of the problem, and to write parallel versions of the simulation codes. The increase in machine power, however, does not anihilate the need for faster (and more reliable) numerical methods. <p> The values of initial concentrations for the most important species are given in Table 3.4. Test problem B employs the chemical mechanism that is presently used in the STEM-II regional-scale transport/ chemistry/ removal model (Carmichael et al., <ref> [14] </ref>), consisting of 86 chemical species involved in 142 thermal and 36 photolytic reactions . <p> They employ the kinetic mechanism that is presently used in the STEM-II regional-scale/transport/chemistry/removal model <ref> [14] </ref>, consisting of 84 chemical species (plus 4 species whose concentrations were held fixed throughout simulation: H 2 O; CO 2 ; O 2 ; H 2 ) involved in 142 thermal and 36 photolytic reactions. <p> This approach means that the production and the destruction functions related to the chemical equations are written by hand and then translated into a programming language. This has been used in STEM-I and STEM-II developed by Carmichael et. al. <ref> [14] </ref>. The language used was FORTRAN-77. The advantage of this method conststs in the fact that the subroutines that implement the production and the destruction terms can be coded very efficiently in order to run very fast on a given computer.
Reference: [15] <author> G.R. Carmichael, A. Sandu, and F.A. Potra. </author> <title> Sensitivity Analysis for Atmospheric Chemistry models via Automatic Differentiation. Atmospheric Environment, </title> <address> 31:475 - 489, </address> <year> 1997. </year>
Reference: [16] <author> B.W. Char, K.O. Geddes, G.H. Gonnet, M.B. Monagan, and S.M. Watt. </author> <title> Maple V Language Reference Manual. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [17] <author> M. Chin, D. Jacob, J. Munger, D. Parrish, and B. Doddridge. </author> <title> Relationship of ozone and carbon monoxide over north america. </title> <institution> J. Geophys. Res., 99:14,565-14,573, </institution> <year> 1994. </year>
Reference: [18] <author> Y. S. Cho. </author> <type> Ph.d. thesis. </type> <institution> The University of Iowa, </institution> <year> 1986. </year>
Reference: [19] <author> Y. S. Cho and G.R. </author> <title> Carmichael. Evaluation of liquid phase chemical production of sulfate using sensitivity analysis. Atmospheric Environment, </title> <address> 20:l959-l988, </address> <year> 1986. </year>
Reference: [20] <author> Y. S. Cho, G.R. Carmichael, and H. Rabitz. </author> <title> Sensitivity analysis of the advection-diffusion equation. </title> <journal> Atmospheric Environment, </journal> <volume> 21 </volume> <pages> 2589-2598, </pages> <year> 1987. </year>
Reference: [21] <author> Y. S. Cho, G.R. Carmichael, and H. Rabitz. </author> <title> The relationship between primary emissions and acid deposition in eulerian models determined by sensitivity analysis. Water, Air and Soil Pollution, </title> <booktitle> 40 </booktitle> <pages> 9-31, </pages> <year> 1988. </year>
Reference: [22] <author> D. P. Chock and S. L. Winkler. </author> <title> A comparison of advection algorithms coupled with chemistry. </title> <journal> Atmospheric Environment, </journal> <volume> 28(16) </volume> <pages> 2659-2675, </pages> <year> 1994. </year>
Reference: [23] <author> D. Dabdub and J.H. Seinfeld. </author> <title> Extrapolation techniques used in the solution of stiff odes associated with chemical kinetics of air quality models. </title> <journal> Atmospheric Environment, </journal> <volume> 29 </volume> <pages> 403-410, </pages> <year> 1995. </year>
Reference-contexts: Dabdub and Seinfeld investigated in <ref> [23] </ref> an extrapolation algorithm whose underlying numerical scheme is based on a Qssa predictor and on a hybrid corrector (with a trapezoidal method for nonstiff components and a modified Qssa formula for the stiff components). The authors report good results, however, a theoretical analysis of the method is not presented. <p> However, following Chemeq philosophy, a local error greater than tol does not force a step rejection. It only restricts h new . See [39] for more details. 2.11.3 ET The solver ET uses an extrapolation algorithm proposed in <ref> [23] </ref>. The approximations used for the extrapolation are computed with a predictor-corrector pair of which the corrector is a Qssa type formula. To describe the formulas used, we adopt 50 the implicit notation used for Chemeq. <p> For details about how the extrapolation is organized and the corrector is used we refer to <ref> [23] </ref>. See also [39] for more details. 51 The Euler Backward Iterative (Ebi) method was proposed by (Hertel et al., 1993).
Reference: [24] <author> V. Damian-Iordache. </author> <title> KPP a chemical development environment. </title> <type> Technical report, </type> <institution> The University of Iowa, </institution> <address> Iowa City, IA 52246, </address> <year> 1996. </year>
Reference: [25] <author> V. Damian-Iordache, A. Sandu, M. Damian-Iordache, G. R. carmichael, and F. A. Potra. </author> <title> KPP A symbolic preprocessor for chemistry kinetics - User's guide. </title> <type> Technical report, </type> <institution> The University of Iowa, </institution> <address> Iowa City, IA 52246, </address> <year> 1995. </year> <month> 230 </month>
Reference-contexts: Sparsity For large atmospheric chemistry models the number of zeroes in J readily amounts to 90%. This high level of sparsity can be exploited to significantly reduce the costs of the linear algebra calculations. For this task we use the symbolic preprocessor KPP <ref> [25, 76] </ref>. KPP prepares a sparse matrix factorization with only a minimal fill-in (see Table 1 in (Sandu et al. 1996a)) and delivers a Fortran routine for the backsolve without indirect addressing. Altogether this means that the numerical algebra is handled very efficiently. <p> In [54] and [89] it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in [75]. The necessary routines are automatically generated by the symbolic chemical preprocessor KPP <ref> [25] </ref>, which transparently: * determines the sparse analytical Jacobian, * reorders the species using a diagonal Markowitz criterion, in order to minimize the fill-in resulting from the LU decomposition of the matrix used in the modified Newton process, * analyses the pattern of zeros in the Jacobian and builds the data <p> Four of them describe gas-phase, and one describes gas-liquid phase chemistry. All are fully documented elsewhere. Before briefly describing each problem, several general remarks are in order: * All the test problems were uniformly coded in FORTRAN using the KPP symbolic preprocessor <ref> [25] </ref>. This uniformity is important for a meaningful intercomparison, since part of the algorithms need the derivative function in production-destruction form, part need it in the standard form, and some of them need an analytical Jacobian. <p> In the following I will briefly outline the mathematical formulation of the kinetic problem, the user view of KPP and a short description of preprocessor's capabilities and language. A complete KPP documentation can be found in <ref> [25] </ref>. 5.2 The kinetic equations We will first describe the problem with the help of an example.
Reference: [26] <author> J. J. B. de Swart and J. G. Blom. </author> <title> Experiences with sparse matrix solvers in parallel ODE software. </title> <type> Technical report, </type> <institution> Centrum voor Wiskunde en Infor-matica, </institution> <address> Kruislaan 413, 1098 SJ Amsterdam, </address> <year> 1995. </year>
Reference-contexts: The line parallelism shows that both code versions perform similarly in terms of accuracy; in particular, the accuracy does not seem to be affected by non-pivoting. This experimental conclusion is in agreement with the findings of other authors (see <ref> [26, 54, 89] </ref>). To summarize, figures 3.1 and 3.2 show that careful exploitation of sparsity leads to significant improvements in the efficiency of implicit numerical integrators.
Reference: [27] <author> J. E. Dennis. </author> <title> On the kanrovitch hypothesis for Newton's method. </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 6 </volume> <pages> 493-507, </pages> <year> 1969. </year>
Reference: [28] <author> J. E. Dennis and R. B. Schnabel. </author> <title> Numerical Methods for unconstrained optimization and nonlinear equations. </title> <publisher> Prentice Hall Inc, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1985. </year>
Reference: [29] <author> R. Dentener and P. Crutzen. </author> <title> Reaction of N 2 O 5 on tropospheric aerosols : impact of the global distributions of NO x , O 3 and OH. </title> <journal> Journal of Geophysical Research, </journal> <volume> 98 </volume> <pages> 7149-7163, </pages> <year> 1993. </year>
Reference-contexts: Since laboratory experiments and field studies by themselves cannot fully elucidate complex atmospheric phenomena, comprehensive models that allow multiple processes to occur simultaneously are required for data analysis and scientific inquiry. The models by Carmichael et al. [14], Jacob et al. [53], Dentener and Crutzen <ref> [29] </ref> are examples of regional and global scale atmospheric chemistry models in use today. These models treat transport, chemical transformations, emissions and deposition processes in an integrated framework, and serve as representations of our current understanding of the complex atmospheric processes.
Reference: [30] <author> P. Deuflhard. </author> <title> Recent progress in extrapolation methods for ordinary differential equations. </title> <journal> SIAM Review, </journal> <volume> 27 </volume> <pages> 505-535, </pages> <year> 1985. </year>
Reference-contexts: Some extrapolation methods have proved to be successful for very stiff problems arising in chemistry, e.g., extrapola tion based on the linearly implicit Euler method or on the linearly implicit mid-point rule, see <ref> [6, 30] </ref> and [47, Section IV.9]. Therefore, extrapolation cannot be a priori discarded as a viable technique for solving the stiff systems arising in atmospheric chemistry.
Reference: [31] <author> J. J. Dongarra, J. R. Bunch, C. B. Moller, and G. W. Stewart. </author> <title> LINPACK User's Guide. </title> <type> Technical report, </type> <institution> SIAM, </institution> <address> Philadelphia, PA, </address> <year> 1979. </year>
Reference-contexts: Each call to DEC was followed by 0 and by 7 calls to SOL (for timing DEC only, and for simulating the calls made by an implicit integrator). 3.4.3 Short description of 63 linear system solvers tested. 3.4.3.1 Off-the-shelf solvers 1. LINPACK The code is available on netlib, see <ref> [31] </ref>. LINPACK uses column-oriented algorithms to increase efficiency by preserving locality of reference. Here we test the routines dgefa and dgesl. LINPACK U is LINPACK, acting on the unordered matrix. More exactly, the order of the species is the reverse of that resulting from the Markowitz diagonal criterion.
Reference: [32] <author> J.J. Dongarra and E. Grosse. </author> <title> Distribution of software via electronic mail. </title> <journal> Communications ACM, </journal> <pages> pages 403-407, </pages> <year> 1987. </year>
Reference: [33] <author> I. S. Duff, A. M. Erisman, and J. K. Reid. </author> <title> Direct Methods for Sparse Matrices. </title> <publisher> Oxford Science Publications, Clarendon Press Oxford, </publisher> <year> 1986. </year>
Reference-contexts: This results in a small overhead when DECOMPOSE-ing, and a large speed-up when solving. This version is more efficient when a large number of SOLVEs follow each decomposition. 3. DOOLITTLE This routine uses a row-oriented Doolittle factorization (see <ref> [33] </ref> for more details on this algorithm). Line k in L is computed, followed by the computation of line k in U. <p> Has the advantage of working on a uniform representation of the matrix (one vector of nonzero elements, unlike SLAP, which requires one vector for L, one for U and one for D). Each row is decompressed before, and re-compressed again after processing (see <ref> [33] </ref>). This moves most of the indirect addressings from the O (n 2 ) loop to two O (n) loops.
Reference: [34] <author> A. M. Dunker. </author> <title> The decoupled direct method for calculating sensitivity coefficients in chemical kinetics. </title> <journal> J. Chemical Physics, </journal> <volume> 81:2385, </volume> <year> 1984. </year>
Reference: [35] <author> S.C. Eisenstat, M.C. Gursky, M.H. Schultz, and A.H. Sherman. </author> <title> Yale Sparse Matrix Package. ii. The nonsymmetric codes. </title> <type> Research Report 114, </type> <institution> Department of Computer Science, Yale University, </institution> <year> 1977. </year>
Reference-contexts: See [39] for other specific parameter settings. 97 3.8.2 LSODES Lsodes is a version of the popular BDF code Lsode which exploits the sparsity in the Jacobian matrix by calling linear algebra routines from the Yale Sparse Matrix Package <ref> [36, 35] </ref>. It is obvious that Vode and Lsodes are closely related. For our application an important difference is that Vode uses a dedicated sparsity technique, whereas Lsodes uses the general Yale package, which is less efficient, in general.
Reference: [36] <author> S.C. Eisenstat, M.C. Gursky, M.H. Schultz, and A.H. Sherman. </author> <title> Yale Sparse Matrix Package. i. The symmetric codes. </title> <journal> Int. J. Num. Meth. Eng., </journal> <volume> 18 </volume> <pages> 1145-1151, </pages> <year> 1982. </year>
Reference-contexts: See [39] for other specific parameter settings. 97 3.8.2 LSODES Lsodes is a version of the popular BDF code Lsode which exploits the sparsity in the Jacobian matrix by calling linear algebra routines from the Yale Sparse Matrix Package <ref> [36, 35] </ref>. It is obvious that Vode and Lsodes are closely related. For our application an important difference is that Vode uses a dedicated sparsity technique, whereas Lsodes uses the general Yale package, which is less efficient, in general.
Reference: [37] <author> A.S. El-Bakry, R.A. Tapia, T. Tsuchia, and Y. Zhang. </author> <title> On the Formulation of the Primal-Dual Newton Interior-Point Method for Nonlinear Programming. </title> <note> To appear in Journal of Optimization Theory and Applications, </note> <year> 1996. </year>
Reference: [38] <author> S. Elliot, R.P. Turco, and M.Z. Jacobson. </author> <title> Tests on combined projection/forward differencing integration for stiff photochemical family systems at long time step. </title> <journal> Computers Chem, </journal> <volume> 17 </volume> <pages> 91-102, </pages> <year> 1993. </year> <note> [39] ftp.cgrer.uiowa.edu. Ftp site. </note> <institution> Ftp site at The Center for Global and Regional Environmental Research, University of Iowa, (pub/Ode benchmark, pub/KPP), </institution> <year> 1996. </year> <month> 231 </month>
Reference-contexts: A fancy projection/forward differencing method was proposed by Elliot, Turco, and Jacobson <ref> [38] </ref>.
Reference: [40] <author> M. W. Gery, G.Z. Whitten, J.P. Killus, and M.C. Dodge. </author> <title> A photochemical kinetics mechanism for urban and regional scale computer modelling. </title> <journal> Journal of Geophysical Research, </journal> <volume> 94 </volume> <pages> 12925-12956, </pages> <year> 1989. </year>
Reference-contexts: by induction on n provided the constants A; B, and C are chosen sufficiently large and h is sufficiently small, but independently of ". 2.8 Description of the test problem To test the properties of different numerical methods we have chosen the Carbon Bond Mechanism IV (CBM-IV) (Gery et al., <ref> [40] </ref>), consisting of 32 chemical species involved in 70 thermal and 11 photolytic reactions. The concentration of H 2 O is held fixed throughout the simulation. This mechanism is designed for the numerical simulation of chemical processes in urban and in regional scale models. <p> Problem A Species i Re ( i ) OH 9 All other 2 [4 10 4 ; 0] 4.2.3 Problems B and C: CBM-IV model These problems are based on the Carbon Bond Mechanism IV (CBM-IV) <ref> [40] </ref>, consisting of 32 chemical species involved in 70 thermal and 11 photolytic reactions. The concentration of H 2 O was held fixed throughout simulation. The CBM-IV mechanism was designed for the numerical simulation of chemical processes in urban and in regional scale models.
Reference: [41] <author> G. Golub and C. F. van Loan. </author> <title> Matrix computaions. </title> <publisher> Johns Hopkins University Press, </publisher> <address> Baltimore and London, </address> <year> 1983. </year>
Reference: [42] <author> W. Gong and H.R. Cho. </author> <title> A numerical scheme for the integration of the gas phase chemical rate equations in 3D atmospheric models. Atmospheric Environment, </title> <address> 27A:2147-2160, </address> <year> 1993. </year>
Reference-contexts: The nonlinear system is solved using functional iterations. The main idea is to speed up these iterations using explicit solutions for several groups of species. The method seems to work fine for very large step-sizes. A particularly clear approach was taken by Gong and Cho <ref> [42] </ref>.
Reference: [43] <author> A. Griewank, C. Bischof, G. Corliss, A. Carle, and K. Williamson. </author> <title> Derivative convergence for iterative equation solvers. </title> <journal> Optimization methods and software, </journal> <volume> 2 </volume> <pages> 321-355, </pages> <year> 1993. </year>
Reference: [44] <author> A. Griewank and G. Corliss. </author> <title> Automatic differentiation of algorithms: Theory, implementation, and application. </title> <publisher> SIAM, </publisher> <address> Philadelphia, Pennsylvania, </address> <year> 1991. </year>
Reference: [45] <author> E. Hairer, Ch. Lubich, and M. Roche. </author> <title> The Numerical Solution of Differential-Algebraic Systems by Runge-Kutta Methods. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, New-York, </address> <year> 1989. </year>
Reference-contexts: Proof. To start the proof, we first show convergence of order one for the Qssa method (direct approach). It is worth noting that this part of the proof remains valid for variable step-sizes with h = max i jh i j. We use standard techniques (see, e.g., <ref> [45, Theorem 4.4] </ref> and [47, Theorem VI.7.5]).
Reference: [46] <author> E. Hairer, S.P. Norsett, and G. Wanner. </author> <title> Solving Ordinary Differential Equations I. Nonstiff Problems. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Another type of extrapolation algorithm makes use of asymptotic expansions in even powers of h. The following algorithm is similar to the well-known GBS algorithm <ref> [46, Formula II.9.13] </ref> but it is based on Qssa. <p> For part 3, the logarithmic norm associated with the max-norm of a matrix A is given by <ref> [46, Formula I.10.20'] </ref> 1 (A) = max X ja ij j : For the matrix C I we get 1 (C I) = max X jc ij j max n X jc ij j 1 = kCk 1 1 &lt; 0 : For the matrix D (C I) we thus have <p> 0 10 C A : Although C 2 (y; z) is a contraction for the 1-norm kzk 1 = P n i=1 jz i j and the Euclidean norm kzk 2 = ( P n i=1 jz i j 2 ) 1=2 , for the corresponding induced logarithmic norms (see <ref> [46, Theorem I.10.5] </ref>) we have 1 (g z (y; z)) = 8:9 and 2 (g z (y; z)) 1:67. It is quite amazing to notice that C 2 (y; z) is a contraction for the max-norm and 1 (g z (y; z)) = 0:01.
Reference: [47] <author> E. Hairer and G. Wanner. </author> <title> Solving Ordinary Differential Equations II. Stiff and Differential-Algebraic Problems. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: Some extrapolation methods have proved to be successful for very stiff problems arising in chemistry, e.g., extrapola tion based on the linearly implicit Euler method or on the linearly implicit mid-point rule, see [6, 30] and <ref> [47, Section IV.9] </ref>. Therefore, extrapolation cannot be a priori discarded as a viable technique for solving the stiff systems arising in atmospheric chemistry. <p> (y; z)y + P 1 (y; z) = D 1 (y; z)(y + C 1 (y; z)) =: f (y; z) ; (2.12a) We assume that g z (y; z) is invertible (2.13) in a neighbourhood of the solution which implies that the differential-algebraic system (2.12a)-(2.12b) has index one (cf. <ref> [47] </ref>). This assumption is actually quite natural for species with very short life-times (see (2.5)). <p> It is worth noting that this part of the proof remains valid for variable step-sizes with h = max i jh i j. We use standard techniques (see, e.g., [45, Theorem 4.4] and <ref> [47, Theorem VI.7.5] </ref>). <p> For the Qssa method (2.15a)-(2.15b) we have the inequalities ky n+1 k ky n k + O (hky n k + hkz n k) ; (2.18a) with 0 &lt; 1. Applying <ref> [47, Lemma VI.2.9] </ref> we get ky n k C 4 (ky 0 k + hkz 0 k) ; If (y k n ) with k n denotes the Qssa solution starting on the exact solution at t k , then the previous formula and (2.16a)-(2.16b) imply ky k n k C <p> In the second part of our proof we assume that the step-size h is constant. As in <ref> [47, Theorem VI.4.3] </ref> we are looking for a perturbed asymptotic expansion of the global error of the form y i y (t i ) = j=1 j z i z (t i ) = j=1 j with smooth functions a j (t), b j (t), and perturbations ff j j i <p> The remainder can be estimated as in part d) of the proof of <ref> [47, Theorem VI.4.3] </ref>. We obtain recurrence relations similar to (2.18a)-(2.18b). The process of determining the perturbed asymptotic expansion may be continued if the perturbations are exponentially decaying to zero. <p> Because we are mainly interested in smooth solutions to (2.10a)-(2.10b) (see <ref> [47, Section VI.2] </ref>) we require as a stability assumption that the logarithmic norm of g z (y; z) satisfies [47, Formula VI.2.11] (g z (y; z)) &lt; 0 (2.23) in an "-independent neighbourhood of the solution. <p> Because we are mainly interested in smooth solutions to (2.10a)-(2.10b) (see [47, Section VI.2]) we require as a stability assumption that the logarithmic norm of g z (y; z) satisfies <ref> [47, Formula VI.2.11] </ref> (g z (y; z)) &lt; 0 (2.23) in an "-independent neighbourhood of the solution. By definition, the logarithmic norm of a matrix A is given by (A) = lim kI + hAk 1 (2.24) where I is the identity matrix. <p> We now analyze the behaviour of the Qssa method when applied to the singular perturbation problem (2.10a)-(2.10b). We will do an analysis similar to that in <ref> [47, Section VI.2] </ref>. <p> The constant L depends on the constants A; B, and C, but does not vary with n. We can apply <ref> [47, Lemma VI.2.9] </ref> to get the desired result. <p> Hairer and G. Wanner <ref> [47] </ref> with very tight tolerances rtol = 10 12 and atol = 10 10 [molecules=cm 3 ]. <p> Using higher order methods based on explicit formulas may not pay off, because of the order reduction phenomenon (see [56, 92]), and since higher accuracy and stability are in general contradictory requirements (see <ref> [47] </ref>). * Multistep, Runge-Kutta and standard Rosenbrock methods all enjoy the property of conserving the linear invariants of the system (for example, they are structurally mass-conservative). Neither Qssa nor Chemeq have this desirable property. <p> Each code is based on a different numerical scheme. * Vode, the Variable coefficient ODE solver of Hindmarsch, Brown and Byrne, a BDF code. For details see [11]; * Sdirk4 written by Hairer and Wanner, part of <ref> [47] </ref>. Is based on a sti*y accu rate, five stages, order four, singly diagonally implicit Runge-Kutta method; * Rodas written by Hairer and Wanner, part of [47]. <p> For details see [11]; * Sdirk4 written by Hairer and Wanner, part of <ref> [47] </ref>. Is based on a sti*y accu rate, five stages, order four, singly diagonally implicit Runge-Kutta method; * Rodas written by Hairer and Wanner, part of [47]. Based on sti*y accurate Rosenbrock method of order four with six stages. 3.4.6 Test problems Test problem A corresponds to a stratospheric (altitude 40 Km) box model. It is available at NASA ftp site, contact Douglas E. Kinnison, kinnison1@llnl.gov. <p> In this section the results for the test problem are compared to the solution computed by the code RADAU5 of E. Hairer and G. Wanner <ref> [47] </ref> with very tight tolerances rtol = 10 12 and atol = 10 10 [mlc=cm 3 ]. <p> 1:94100407061964420292840123379419 ~ b 1 = 1:53358745784149585370766523913002 ~ b 3 = 0:28386385364476186843165221544619 The remaining coefficients are ff 21 = ff 31 = fl and ff 32 = fl 31 = 0. 3.8 Other methods 3.8.1 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit BDF formulas <ref> [11, 47] </ref> and a successor of the "Livermore Solver" 96 Lsode from [51]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [11, 47]. <p> VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit BDF formulas <ref> [11, 47] </ref> and a successor of the "Livermore Solver" 96 Lsode from [51]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [11, 47]. We used Vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. <p> The code was applied with its user parameter setting MF = 121, i.e. analytical Jacobian with an inner estimation of the sparsity structure. See [39] for other specific parameter settings. 3.8.3 SDIRK4 This solver has been borrowed from Hairer and Wanner <ref> [47] </ref> where a full description along with numerical results can be found. It is based on a 4-th order, diagonally implicit Runge-Kutta method using five stages. Because this solver is of one-step type, it allows a fast increase in step size after a restart. <p> For atmospheric chemistry applications this is an obvious advantage. We have only modified it for the treatment of sparsity as described in Section 3.8.1. Hence all strategies were unaltered. See [39] for specific parameter settings. 3.8.4 RODAS This solver has also been borrowed from Hairer and Wanner <ref> [47] </ref>. It is based on a 4-th order, Runge-Kutta-Rosenbrock method using six stages. This solver is also of one-step type and hence shares the advantage of a fast increase in step 98 size after a restart with Sdirk4. <p> All the runs were made in double precision on a HP-UX 935 A workstation with a CPU clock frequency of 125 megaherz and 160 Mbytes RAM. The numerical results for all test problems are compared to a very accurate reference solution computed by the code Radau5 from <ref> [47] </ref> with the very tight tolerances rtol = 10 12 ; atol i = 10 15 i , where i estimates the magnitude of the concentration of 116 species i in unit mlc/cm 3 . <p> This may be done by efficiently combining an implicit method for the fast (stiff) part with an explicit method for the slow (non-stiff) part. Possible candidates are Partitioned Runge-Kutta methods (PRK) from <ref> [47] </ref>, Implicit-Explicit Multi step methods (IEM) from [4] and SPARK methods from [55]. 4. Positivity preserving. This aspect is important for preserving the stability of the chemical system itself, but has not been fully explored so far. 197 5.
Reference: [48] <author> O. Hertel, R. Berkowicz, J. Christensen, and O. Hov. </author> <title> Test of two numerical schemes for use in atmospheric transport-chemistry models. Atmospheric Environment, </title> <address> 27A:2591-2611, </address> <year> 1993. </year>
Reference-contexts: The scheme is efficient, but difficult to generalize. 13 Hertel, Berkowicz, Christensen, and Hov <ref> [48] </ref> proposed an algorithm based on the implicit Euler method. Using only linear operators it preserves the total mass. The nonlinear system is solved using functional iterations. The main idea is to speed up these iterations using explicit solutions for several groups of species.
Reference: [49] <author> E. Hesstvedt, O. Hov, and I. Isaacsen. </author> <title> A numerical method to predict secondary air pollutants with an application on oxidant generation in an urban atmosphere. </title> <journal> WMO publication, </journal> <volume> 510 </volume> <pages> 219-226, </pages> <year> 1978. </year>
Reference-contexts: With lumping we mean here the technique of grouping species into chemical families to reduce, for example, the stiffness, or to enforce conservation for a chemical family (see <ref> [49, 50] </ref> where this form of lumping was proposed first for the Qssa method). 2.11 Other methods We briefly present other methods from the literature. 2.11.1 Twostep Twostep [87, 89, 91] is based on the variable step size, two-step backward differentiation formula (BDF) y n+1 = Y n + flhf (t
Reference: [50] <author> E. Hesstvedt, O. Hov, and I. Isaacsen. </author> <title> Quasi-steady-state-approximation in air pollution modelling: comparison of two numerical schemes for oxidant prediction. </title> <journal> Int. J. Chem. Kinet., </journal> <volume> 10 </volume> <pages> 971-994, </pages> <year> 1978. </year>
Reference-contexts: One of the commonly used methods is the Qssa method of Hesstvedt et al. <ref> [50] </ref>. The performance of the Qssa scheme can be further improved by using the lumping technique which leads to mass conservation of groups of species. Practical Qssa performance is discussed in the instructive paper [79], by Shieh, Carmichael et al. where different integrators are compared on specific atmospheric chemistry problems. <p> With lumping we mean here the technique of grouping species into chemical families to reduce, for example, the stiffness, or to enforce conservation for a chemical family (see <ref> [49, 50] </ref> where this form of lumping was proposed first for the Qssa method). 2.11 Other methods We briefly present other methods from the literature. 2.11.1 Twostep Twostep [87, 89, 91] is based on the variable step size, two-step backward differentiation formula (BDF) y n+1 = Y n + flhf (t <p> Average speed-ups obtained. Model A Model B t [sec] 900 3600 900 3600 Vode 2.7 2.6 4.33 4.12 Sdirk4 1.7 2.2 3.25 3.00 Rodas 1.4 1.5 2.50 2.90 In addition to presenting the results for sparse implicit integrators, we perform a comparison with the widely used algorithms Qssa (see <ref> [50] </ref>), Chemeq (see [96]) and the sparse BDF code Lsodes (see [51]). * Qssa is used with a dynamic partitioning of the species into slow, fast and normal, function of step-size h and the species life-time t i = 1=D i . 76 If t i &gt; 100 h the species
Reference: [51] <author> A. Hindmarsch. ODEPACK: </author> <title> A systematized collection of ODE solvers. </title> <editor> Ed. </editor> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1983. </year>
Reference-contexts: To accelerate the convergence of the Gauss-Seidel iterations, the species have been sorted in decreasing order relatively to the size of their destruction rates. 8. Vode (a BDF code, see [11, 12])) is similar to LSODE (Livermore Solver for ODE, see <ref> [51] </ref>), widely used by atmospheric modellers. Vode is considered to have several advantages over LSODE when used to integrate systems of ODE arising from chemical kinetics (see [12]). <p> 3600 900 3600 Vode 2.7 2.6 4.33 4.12 Sdirk4 1.7 2.2 3.25 3.00 Rodas 1.4 1.5 2.50 2.90 In addition to presenting the results for sparse implicit integrators, we perform a comparison with the widely used algorithms Qssa (see [50]), Chemeq (see [96]) and the sparse BDF code Lsodes (see <ref> [51] </ref>). * Qssa is used with a dynamic partitioning of the species into slow, fast and normal, function of step-size h and the species life-time t i = 1=D i . 76 If t i &gt; 100 h the species is slow and is integrated with forward Euler formula; If t <p> remaining coefficients are ff 21 = ff 31 = fl and ff 32 = fl 31 = 0. 3.8 Other methods 3.8.1 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit BDF formulas [11, 47] and a successor of the "Livermore Solver" 96 Lsode from <ref> [51] </ref>. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [11, 47].
Reference: [52] <author> M. Hochbruck, C. Lubich, and H. Selhofer. </author> <title> Exponential integrators for large systems of differential equations. </title> <journal> SIAM Journal of Scientific Computing, </journal> <note> to appear, </note> <year> 1997. </year>
Reference-contexts: Numerical experiments have shown that Iterated Qssa performs better than Plain Qssa (in terms of precision/work ratio) only for large tolerances. 2.4 Qssa is an exponentially fitted method Apply exponentially fitted Euler method <ref> [52] </ref> to (2.1): y 1 = y 0 + h (hJ )f (y 0 ) where (z) = z If the Jacobian is approximated by the destruction matrix in the exponentially fitted Euler formula one obtains the plain Qssa formula (2.2) y 1 = y 0 + h (hD)f (y 0 <p> where (z) = z If the Jacobian is approximated by the destruction matrix in the exponentially fitted Euler formula one obtains the plain Qssa formula (2.2) y 1 = y 0 + h (hD)f (y 0 ) = y 0 + (e hD I)(y 0 D 1 P ) In <ref> [52] </ref> W-methods are considered, which are of exponentially fitted type and have arbitrarily high orders using any approximation A of the Jacobian J .
Reference: [53] <author> D.J. Jacob, J.A. Logan, G.M. Gardner, C.M. Spivakovsky R.M. Yevich, S.C. Wofsy, S. Sillman, and M.J. Prather. </author> <title> Factors regulating ozone over the United 232 States and its export to the global atmosphere. </title> <institution> J. Geophys. Res., 98:14,817-14,826, </institution> <year> 1993. </year>
Reference-contexts: Since laboratory experiments and field studies by themselves cannot fully elucidate complex atmospheric phenomena, comprehensive models that allow multiple processes to occur simultaneously are required for data analysis and scientific inquiry. The models by Carmichael et al. [14], Jacob et al. <ref> [53] </ref>, Dentener and Crutzen [29] are examples of regional and global scale atmospheric chemistry models in use today. These models treat transport, chemical transformations, emissions and deposition processes in an integrated framework, and serve as representations of our current understanding of the complex atmospheric processes.
Reference: [54] <author> M.Z. Jacobson and R.P. Turco. SMVGEAR: </author> <title> a sparse-matrix, vectorized Gear code for atmospheric models. </title> <journal> Atmospheric Environment, </journal> <volume> 17 </volume> <pages> 273-284, </pages> <year> 1994. </year>
Reference-contexts: The two-step method enables very large step-sizes. A different approach was taken in <ref> [54] </ref> by Jacobson. <p> What prevented so far implicit methods from being widely used in three dimensional, comprehensive atmospheric models is the fact that they are considered too slow for this type of application (except for the case when special hardware is available seethe Smvgear code <ref> [54] </ref>, running on CRAY-YMP). At each integration step, a nonlinear system of equations has to be solved. This involves the repeated evaluation of Jacobians and the solution of linear algebraic systems of dimension n, the number of species considered in the model. <p> On the other hand, exploitation of sparsity may significantly reduce the linear algebra overhead. Recently, several authors showed promising results with sparse BDF codes in atmospheric chemistry models <ref> [54, 89] </ref>. In this chapter we develop a systematic way of exploiting sparsity when integrating atmospheric chemistry equations. Unlike [54], our target is not a specialized architecture; we concentrate on developing machine-independent algorithms. In section 3.3 we discuss and evaluate reordering techniques that lead to minimal fill-in during LU decomposition. <p> On the other hand, exploitation of sparsity may significantly reduce the linear algebra overhead. Recently, several authors showed promising results with sparse BDF codes in atmospheric chemistry models [54, 89]. In this chapter we develop a systematic way of exploiting sparsity when integrating atmospheric chemistry equations. Unlike <ref> [54] </ref>, our target is not a specialized architecture; we concentrate on developing machine-independent algorithms. In section 3.3 we discuss and evaluate reordering techniques that lead to minimal fill-in during LU decomposition. <p> This form of the prediction matrix holds for multistep schemes and, after an equivalence transformation, for Runge-Kutta methods as well. Several authors ([26], <ref> [54] </ref>, [89]) report good results with non-pivoting sparse linear algebra solvers, when integrating atmospheric chemistry equations. This saves computational time. <p> The line parallelism shows that both code versions perform similarly in terms of accuracy; in particular, the accuracy does not seem to be affected by non-pivoting. This experimental conclusion is in agreement with the findings of other authors (see <ref> [26, 54, 89] </ref>). To summarize, figures 3.1 and 3.2 show that careful exploitation of sparsity leads to significant improvements in the efficiency of implicit numerical integrators. <p> We used Vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. In <ref> [54] </ref> and [89] it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in [75]. <p> We emphasize that promising solvers should also be compared in actual 3D transport applications where the issues of memory use, vectorization <ref> [54, 92] </ref> and parallelization are of great practical importance. Code changes connected with vectorization and/or parallelization for a particular architecture can result in CPU time decreases of orders of magnitude. <p> Also robustness and ease of use are important in 3D models, since a subtle tuning of the ODE code is cumbersome due to the large variety of conditions that will occur at different gridpoints. Finally, the issues of memory use, vectorization <ref> [54, 92] </ref> and parallelization are of great practical importance too. Optimal ODE solvers should be tested in a 3D software environment where vectorization and parallelization take place. * Often the work-precision curves are non-monotonic, revealing the situation that more CPU time is spent, yet a less accurate solution is obtained.
Reference: [55] <author> L. O. Jay. </author> <title> Structure-Preserving Integrators. </title> <institution> University of Minnesota AH-PCRC, </institution> <type> Preprint 95-038, </type> <year> 1995. </year>
Reference-contexts: This may be done by efficiently combining an implicit method for the fast (stiff) part with an explicit method for the slow (non-stiff) part. Possible candidates are Partitioned Runge-Kutta methods (PRK) from [47], Implicit-Explicit Multi step methods (IEM) from [4] and SPARK methods from <ref> [55] </ref>. 4. Positivity preserving. This aspect is important for preserving the stability of the chemical system itself, but has not been fully explored so far. 197 5. Use of differential algebraic solvers for problems involving multiple phase equi libria.
Reference: [56] <author> L.O. Jay, A. Sandu, F.A. Potra, and G.R. </author> <title> Carmichael. Improved QSSA methods for atmospheric chemistry integration. </title> <journal> SIAM Journal on Scientififc Computing, </journal> <volume> 18 </volume> <pages> 182-202, </pages> <year> 1997. </year>
Reference-contexts: Using higher order methods based on explicit formulas may not pay off, because of the order reduction phenomenon (see <ref> [56, 92] </ref>), and since higher accuracy and stability are in general contradictory requirements (see [47]). * Multistep, Runge-Kutta and standard Rosenbrock methods all enjoy the property of conserving the linear invariants of the system (for example, they are structurally mass-conservative). Neither Qssa nor Chemeq have this desirable property.
Reference: [57] <author> R. J. Kee, F. M. Rupley, and J. A. Miller. CHEMKIN II: </author> <title> A FORTRAN package for the analysis of gas phase chemical kinetics. </title> <type> Technical report, </type> <institution> Sandia National Laboratory, Livermore, </institution> <address> CA, </address> <year> 1989. </year>
Reference-contexts: In this way the speed is about the same as for the hardcoded method, and changes of the chemical mechanism can be easily made. We also have the guarantee that the generated code is correct. This methode was partially adopted by CHEMKIN in <ref> [57] </ref>. Our implementation further extends the preprocessing method. A specific language has been designed for specifying the chemical mechanism, the initial values, integration options, including the capability to select the integration method and the integration driver.
Reference: [58] <author> X. Lin, M. Trainer, and S. Liu. </author> <title> On the nonlinearity of tropospheric ozone production. </title> <journal> Journal of Geophysical Research, </journal> <volume> 93:15,879-15,888, </volume> <year> 1988. </year>
Reference: [59] <author> F.W. Lurmann, A.C. Loyd, and R. Atkinson. </author> <title> A chemical mechanism for use in long-range transport/acid deposition computer modeling. </title> <journal> Journal of Geophysical Research, </journal> <volume> 91:10,905-10,936, </volume> <year> 1986. </year>
Reference-contexts: Test problem B employs the chemical mechanism that is presently used in the STEM-II regional-scale transport/ chemistry/ removal model (Carmichael et al., [14]), consisting of 86 chemical species involved in 142 thermal and 36 photolytic reactions . The mechanism, based on the work of Lurmann et al. <ref> [59] </ref> and Atkinson et. al. [5] is representative of those presently being used in the study of chemically perturbed environments; it represents the major features of the photochemical oxidant cycle in the troposphere and can be used to study the chemistry of both highly polluted (e.g., near urban centers) and remote <p> The mechanism, based on the work of Atkinson et. al. [5] and Lurmann et al. <ref> [59] </ref> can be used to study the chemistry of both highly polluted (e.g., near urban centers) and remote (e.g., marine) environments. Problem D is an urban scenario, while problem E a rural one, based on IPCC scenario 3.
Reference: [60] <author> J. Matthijsen. </author> <title> Private Communication. </title> <year> 1995. </year>
Reference-contexts: consists of seven problems based on three tropospheric gas-phase chemistry schemes, namely a small, a medium and a large scheme (used to simulate both a rural and an urban scenario). one stratospheric scheme coming from NASA, and one hybrid gas-liquid phase scheme from cloud modeling which we obtained from Matthijsen <ref> [60] </ref>. Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Numerical comparisons are performed between several dedicated explicit and several implicit solvers. <p> The gas-phase mechanism is based on CBM-IV, while the liquid-phase mechanism is based on a chemical scheme the authors obtained from <ref> [60] </ref>. Initial concentrations are given in Table 4.10. Information about the stiffness 110 Table 4.7. Initial concentrations and physical conditions for the stratospheric problem F.
Reference: [61] <author> G.J. McRae, W.R. Goodin, and J.H. Seinfeld. </author> <title> Numerical solution of the atmospheric diffusion equation for chemically reacting flows. </title> <journal> Journal of Computational Physics, </journal> <volume> 45 </volume> <pages> 1-42, </pages> <year> 1982. </year>
Reference-contexts: In mathematical terms this implies that for these short lived species the loss term L i (t; y) is close to a stiff eigenvalue of the Jacobian matrix, and that no stiff eigenvalues exist which are not close to a loss term. Following <ref> [61] </ref>, the following reasoning explains this. Consider atomic oxygen O which is a very fast reacting species. <p> therefore illustrate the eigenvalue relationship in a table showing the species and eigenvalues for which the relationship is found to exist and the distribution of the remaining part of the spectrum (all the eigenvalues were computed with the routine dgees from Lapack) of the Jacobian (see also Fig. 8 in <ref> [61] </ref>). In this remaining part, eigenvalues thus can be of two sorts, either they are small and hence do not introduce stiffness, or they are large but cannot be associated with a single short lived species. If these latter eigenvalues exist, then the special purpose explicit methods can fail completely.
Reference: [62] <author> Hoa D. Nguyen and Seungho Paik. </author> <title> Solution Domain decomposition with Finite Difference Methods for PDE. Numerical methods for PDE, </title> <booktitle> 11 </booktitle> <pages> 453-466, </pages> <year> 1995. </year>
Reference: [63] <author> Jorge Nocedal. </author> <title> Theory of Algorithms for Unconstrained Optimization. </title> <journal> Acta Numerica, </journal> <pages> pages 1-37, </pages> <year> 1991. </year>
Reference: [64] <author> U. Nowak. </author> <title> A short user's guide to LARKIN. </title> <type> Technical report, </type> <institution> Konrad-Zuse-Zentrum fuer, Informationstechnik Berlin, </institution> <year> 1982. </year>
Reference-contexts: Then the production and destruction functions are implemented by scanning these arrays at run time. This solve the major disadvantage of the first method. Now the code can adapt easily to any chemical mechanism. This approach was taken by LARKIN in <ref> [64] </ref>. The drawback of this approach is the fact that all the computation is done at runtime which results in reduced speed. * The last method is the preprocessing method. Here, as with the totally integrated method, the chemical mechanism is described in a specific language.
Reference: [65] <author> J. Olson, M. Prather, T. Berntsen, G. R. Carmichael, R. Chatfield, P. Connell, R. Derwent, L. Horowitz, S. Jin, M. Kanakidou, P. Kasibhatla, R. Kotomarthi, M. Kuhn, K. Law, S. Sillman, J. Penner, L. Perliski, F. Stordal, A. Thompson, and O. Wild. </author> <title> Results from the IPCC Photochemical Model Intercomparison (PhotoComp): Some Insights into Tropospheric Chemistry. </title> <note> submitted to Journal of Geophysical Research, </note> <month> March </month> <year> 1996. </year>
Reference: [66] <author> K. Olszyna, E. Bailey, R. Simonaites, and J. Meagher. </author> <title> O 3 and N O y relationships at a rural site. </title> <journal> Journal of Geophysical Research, </journal> <volume> 99:14,557-14,563, </volume> <year> 1994. </year> <month> 233 </month>
Reference: [67] <author> D. Parrish, J. Holloway, M. Trainer, P. Murphy, G. Forbes, and F. Fehsenfeld. </author> <title> Export of north american ozone pollution to the north atlantic ocean. </title> <journal> Science, </journal> <volume> 259 </volume> <pages> 1436-1439, </pages> <year> 1993. </year>
Reference: [68] <author> F.A. Potra, K. Kortanek, and Y. Ye. </author> <title> On some efficient interior point methods for nonlinear convex programming. </title> <journal> Linear Algebra and its Applications, </journal> <volume> 152 </volume> <pages> 191-222, </pages> <year> 1991. </year>
Reference: [69] <author> M.J.D. Powell. </author> <title> Convergence properties of algorithms for nonlinear optimization. </title> <type> Report DAMTP 1985/NA1, </type> <institution> University of Cambridge, Department of Applied Mathematics and Theoretical Physics, </institution> <address> Cambridge, </address> <month> October </month> <year> 1985. </year>
Reference: [70] <author> M. Prather. </author> <title> Intercomparison of tropospheric chemistry/ transport models. Scientific assesment of ozone depletion, World meteorological organization, </title> <year> 1995. </year>
Reference-contexts: For the numerical experiments the chemical mechanism is run for a simulation time of 5 days. The rate constants and initial conditions follow the IPCC (Intergovernmental Panel on Climate Change) Chemistry Intercomparison study (see <ref> [70] </ref>) scenario 3 ("Bio"). An operator-splitting environment (the atmospheric convection-diffusion-reaction equation is solved with the method of fractional steps [95]; chemistry and transport are considered separately and integrated with different step-sizes) is simulated with a time step of 20 [minutes] for the transport scheme. <p> This helps to relate our results to those presented in the above mentioned paper. Test problem C describes a rural scenario and simulates a clean atmosphere. It follows the IPCC Chemistry Inter-comparison Study, third Bio scenario (see <ref> [70] </ref>). The values of initial concentrations and the values of hourly emissions are given in Table 4.5. The emission was released in equal quantities at the beginning of each time interval.
Reference: [71] <author> A. Prothero and A. Robinson. </author> <title> On the stability and accuracy of one-step methods for solving stiff systems of ordinary differential equations. </title> <journal> Math. of Com-put., </journal> <volume> 28 </volume> <pages> 145-162, </pages> <year> 1974. </year>
Reference-contexts: next two sections we analyze what may happen with stiffness by con sidering a singular perturbation problem and its related reduced system. 2.6 The reduced system of a singular perturbation problem Since the differential equations (2.1) modelling chemical reactions are generally stiff, the well-known phenomenon of order reduction may occur <ref> [71] </ref>.
Reference: [72] <author> H. Rabitz, M. Hramer, and D. Dacol. </author> <title> Sensitivity analysis in chemical kinetics. </title> <journal> Anual review of physical chemistry, </journal> <volume> 34, </volume> <year> 1983. </year>
Reference: [73] <author> D. Ralph and S. Wright. </author> <title> Superlinear convergence of an interior point method for monotone variational inequalities. </title> <type> Preprint MCS-P556-0196, </type> <institution> Argonne National Laboratory, </institution> <year> 1996. </year>
Reference: [74] <author> A. Sandu, J. G. Blom, E. Spee, J. G. Verwer, F.A. Potra, and G.R. </author> <title> Carmichael. Benchmarking stiff ODE solvers for atmospheric chemistry equations II Rosen-brock Solvers. </title> <note> Report on Computational Mathematics 90, </note> <institution> The University of Iowa, Department of Mathematics, Iowa City, </institution> <month> July </month> <year> 1996. </year>
Reference: [75] <author> A. Sandu, F.A. Potra, V. Damian, and G.R. </author> <title> Carmichael. Efficient implementation of fully implicit methods for atmospheric chemistry. </title> <journal> Journal of Computational Physics, </journal> <volume> 129:101 - 110, </volume> <year> 1996. </year>
Reference-contexts: Vode is considered to have several advantages over LSODE when used to integrate systems of ODE arising from chemical kinetics (see [12]). In order to take full advantage of the sparsity pattern of the Jacobian, Vode has been modified as described in <ref> [75] </ref> by replacing the general factorization and substitution routines dgefa 43 and dgesl with specialized sparse routines. Results for both the standard and the modified Vode are presented. All integrators have been used with a lower bound of 0:01 [seconds] imposed on the chosen step-size. <p> However, if the linear algebra is done such that full advantage of the structure of the problem is taken (see <ref> [75] </ref>) the computational time of Vode is greatly reduced (the use of sparse linear algebra routines with Vode reduces the total computational time for our test problem by a factor between two to three) and the code becomes competitive. <p> This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. In [54] and [89] it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in <ref> [75] </ref>. <p> Although the chemical conditions are identical and the calculated results very close, the performances of the numerical solvers depend on the chemical mechanism used. We will make this point later in the paper. * An important issue in our numerical comparison is the use of a sparse matrix technique <ref> [75] </ref> to economize on the linear algebra costs which the stiff solvers spend in the modified Newton iteration.
Reference: [76] <author> A. Sandu, M. van Loon, F.A. Potra, G.R. Carmichael, and J. G. Verwer. </author> <title> Benchmarking stiff ODE solvers for atmospheric chemistry equations I Implicit vs. Explicit. </title> <note> Report on Computational Mathematics 85, </note> <institution> The University of Iowa, Department of Mathematics, Iowa City, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: More numerical tests are necessary before drawing a general conclusion. The authors are currently involved in a comprehensive benchmark work that will test most of the old and new algorithms (see <ref> [76] </ref>). 2.10 Lumping Modifications, such as lumping, can improve their performance notably (see e.g. [89] where this is illustrated for the EUSMOG problem), but have the disadvantage of being problem dependent. <p> models usually contain chemical conditions ranging from ground level to upper troposphere and from marine environments to heavily polutted urban centers. * For problems involving inter-phase mass transfer explicit codes may become unstable; an example of gas-liquid chemistry for which all explicit integrators 54 completely fail can be found in <ref> [76] </ref>. * The higher orders of consistency of standard implicit methods lead to substantial improvements in accuracy. <p> Sparsity For large atmospheric chemistry models the number of zeroes in J readily amounts to 90%. This high level of sparsity can be exploited to significantly reduce the costs of the linear algebra calculations. For this task we use the symbolic preprocessor KPP <ref> [25, 76] </ref>. KPP prepares a sparse matrix factorization with only a minimal fill-in (see Table 1 in (Sandu et al. 1996a)) and delivers a Fortran routine for the backsolve without indirect addressing. Altogether this means that the numerical algebra is handled very efficiently. <p> (solid with "x"), Sparse Rodas (solid with "o"), Twostep Seidel (dots with "x"), Sparse Vode (dots with "o"), Sparse Seulex (dashed with "o") and Qssa (dash dots with "x"). 138 Vode (dots with "o") and Sparse Seulex (dashed with "o"). 139 4.5.5 Problem G: aqueous model As pointed out in <ref> [76] </ref>, this test problem is the most difficult one from the numerical point of view. The Jacobian f 0 (y) of the derivative function (3.1) contains stiff eigenvalues for which the relation i L i (with L i the destruction term associated with species i) does not hold. <p> Such eigenvalues are due to the rapid gas-liquid phase interactions and cannot be associated with certain species; for this reason, all the explicit solvers tested in <ref> [76] </ref> failed to efficiently integrate the Aqueous model. As a consequence, in the present work Twostep was not applied to this problem. The results plotted in Figure 4.11 for the other solvers are very much in line with those for the stratospheric problem.
Reference: [77] <author> R. D. Saylor and G. D. Ford. </author> <title> On the comparison of numerical methods for the integration of kinetic equations in atmospheric chemistry and transport models. </title> <journal> Atmospheric Environment, </journal> <volume> 29 </volume> <pages> 2585-2593, </pages> <year> 1995. </year>
Reference-contexts: Iterated Qssa is similar to DAE Qssa, but has one extra iteration (2.6). 4. Chemeq (see [96], implemented in CALGRID) is used as specified in <ref> [77] </ref>: * If t i &lt; 0:2 h the species is fast and is integrated with (2.4); 42 * If t i &gt; 5 h the species is slow and is integrated with the nonstiff Chemeq formula; * For all other species the Chemeq stiff formula is used. 5. <p> Each category is integrated with a special predictor-corrector formula. Our implementation of Chemeq follows the one described in <ref> [77] </ref> and is based on the following predictor-corrector pairs (the abbreviation P n k stands for P k (t n ; y n ), etc.): * If t k &gt; 5h (slow species): predictor : y n+1 k = y n k L n k ) (2.35a) corrector : y n+1 <p> 1=D i . 76 If t i &gt; 100 h the species is slow and is integrated with forward Euler formula; If t i &lt; 0:1 h the species is fast and is considered at steady state; Otherwise, exponential Qssa formula is applied. * Chemeq is used as specified in <ref> [77] </ref>: If t i &lt; 0:2 h the species is fast and is considered at steady-state; If t i &gt; 5 h the species is slow and is integrated with the nonstiff Chemeq formula; For all other species the Chemeq stiff formula is used. * Lsodes is the sparse version of <p> LSODE and Lsodes are often used to solve the atmospheric chemical kinetics equations (see <ref> [77] </ref>). The code was used with M F = 121, i.e. analytical Jacobian with an inner estimation of the sparsity structure. For implicit integrators, the same parameter setting for both sparse and off-the-shelf versions was used. <p> For our application an important difference is that Vode uses a dedicated sparsity technique, whereas Lsodes uses the general Yale package, which is less efficient, in general. Lsode and Lsodes are often used to solve atmospheric chemical kinetics equations (see e.g. <ref> [77] </ref>). The code was applied with its user parameter setting MF = 121, i.e. analytical Jacobian with an inner estimation of the sparsity structure. <p> The CBM-IV mechanism was designed for the numerical simulation of chemical processes in urban and in regional scale models. Test problem B describes an urban scenario and simulates a heavily polluted atmosphere. The initial concentrations and the levels of hourly emissions follow those described in <ref> [77] </ref>. This helps to relate our results to those presented in the above mentioned paper. Test problem C describes a rural scenario and simulates a clean atmosphere. It follows the IPCC Chemistry Inter-comparison Study, third Bio scenario (see [70]).
Reference: [78] <author> A.H. Sherman and A.C. Hindmarsh. GEARS: </author> <title> a package for the solution of sparse, stiff ordinary differential equations. </title> <institution> Lawrence Livermore Laboratory Report, UCRL-84102. </institution> <month> 234 </month>
Reference: [79] <author> D. Shyan-Shu Shieh, Y. Chang, and G.R. </author> <title> Carmichael. The evaluation of numerical techniques for solution of stiff ODE arising from chemical kinetic problems. </title> <journal> Environmental Software, </journal> <volume> 3, </volume> <year> 1988. </year>
Reference-contexts: One of the commonly used methods is the Qssa method of Hesstvedt et al. [50]. The performance of the Qssa scheme can be further improved by using the lumping technique which leads to mass conservation of groups of species. Practical Qssa performance is discussed in the instructive paper <ref> [79] </ref>, by Shieh, Carmichael et al. where different integrators are compared on specific atmospheric chemistry problems. An evaluation of the local truncation error of the Qssa scheme can be found in [92]. There are many specially-tailored methods in use in atmospheric chemistry models. <p> A comparison 55 of the exactness and time efficiency of different integrators can be found in the paper of Shieh, Carmichael et al. <ref> [79] </ref>. On the other hand, exploitation of sparsity may significantly reduce the linear algebra overhead. Recently, several authors showed promising results with sparse BDF codes in atmospheric chemistry models [54, 89]. In this chapter we develop a systematic way of exploiting sparsity when integrating atmospheric chemistry equations.
Reference: [80] <author> S. Sillman. </author> <title> A numerical solution for the equations of tropospheric chemistry based on an analysis of sources and sinks of odd hydrogen. </title> <journal> Journal of Geophysical Research, </journal> <volume> 96 </volume> <pages> 20735-20744, </pages> <year> 1991. </year>
Reference-contexts: Species are divided into stiff and nonstiff; the explicit Euler method (predictor) and an explicit trapezoidal method (corrector) are used for the nonstiff part, while the stiff part is integrated with a modified midpoint scheme. S. Sillman in <ref> [80] </ref> developed an integration scheme based on the implicit Euler formula. <p> The same permutation is then used throughout the computation, thus reducing the workload associated with sparse data structure manipulation. The following strategies were considered: 1. Intuitive. A reordering based on the reactivity of the species. This requires specific knowledge regarding the chemical mechanism and has been applied successfully in <ref> [80] </ref>. Since our aim here is to minimize the fill-in, we ordered the species decreasingly after their characteristic life-time (the inverse of average destruction term, the average being taken over the two day integration interval); 2. Row. <p> Partitioned methods (either partitioning the reactions into fast and slow ones, or partitioning the species into stiff and nonstiff ones) offer a possibility to further reduce computational time (see for example <ref> [80] </ref> and [97, 83]). This may be done by efficiently combining an implicit method for the fast (stiff) part with an explicit method for the slow (non-stiff) part. Possible candidates are Partitioned Runge-Kutta methods (PRK) from [47], Implicit-Explicit Multi step methods (IEM) from [4] and SPARK methods from [55]. 4.
Reference: [81] <author> D. Simpson. </author> <title> Biogenic VOC in Europe. Part II: implications for ozone control strategies. </title> <address> EMEP MSC-W, </address> <year> 1994. </year>
Reference: [82] <author> D. Simpson, Y. Andersson-Skold, and M.E. Jenkin. </author> <title> Updating the chemical scheme for the EMEP MSC-W oxidant model: current status. EMEP MSC-W, </title> <type> Technical Report 2/93, </type> <year> 1993. </year>
Reference-contexts: The problem is a highly parameterized version of the EMEP MSC-W ozone chemistry scheme <ref> [82] </ref>. It consists of 15 reactions between 15 species and is extensively described in [85]. It has been used before in the comparisons reported in [89], where it has also been documented. Information about the eigen-values can be found in Table 4.2. 105 Table 4.2.
Reference: [83] <author> S. Skelboe and Z. Zlatev. </author> <title> Exploiting the natural partitioning in the numerical solution of ODE systems arising from atmospheric chemistry. </title> <type> Report, </type> <institution> University of Copenhagen, Department of Computer Science, Copenhagen, Denmark, </institution> <year> 1996. </year>
Reference-contexts: Partitioned methods (either partitioning the reactions into fast and slow ones, or partitioning the species into stiff and nonstiff ones) offer a possibility to further reduce computational time (see for example [80] and <ref> [97, 83] </ref>). This may be done by efficiently combining an implicit method for the fast (stiff) part with an explicit method for the slow (non-stiff) part. Possible candidates are Partitioned Runge-Kutta methods (PRK) from [47], Implicit-Explicit Multi step methods (IEM) from [4] and SPARK methods from [55]. 4. Positivity preserving.
Reference: [84] <author> D. Stoffer. </author> <title> Variable steps for reversible integration methods. </title> <journal> Computing, </journal> <volume> 55 </volume> <pages> 1-22, </pages> <year> 1995. </year>
Reference: [85] <author> M. van Loon. </author> <title> Numerical smog prediction I: the physical and chemical model. </title> <type> CWI Report NM-R9411, </type> <year> 1995. </year>
Reference-contexts: The Jacobian matrix has 90 nonzero entries and 93 after the factorization. 4.2.2 Problem A2: EUSMOG model This problem is borrowed from a model which is currently implemented and tested at the CWI in a Dutch smog prediction code in the framework of the project EUSMOG <ref> [85, 86] </ref>. The problem is a highly parameterized version of the EMEP MSC-W ozone chemistry scheme [82]. It consists of 15 reactions between 15 species and is extensively described in [85]. It has been used before in the comparisons reported in [89], where it has also been documented. <p> The problem is a highly parameterized version of the EMEP MSC-W ozone chemistry scheme [82]. It consists of 15 reactions between 15 species and is extensively described in <ref> [85] </ref>. It has been used before in the comparisons reported in [89], where it has also been documented. Information about the eigen-values can be found in Table 4.2. 105 Table 4.2. Distribution of real part of the spectrum of the Jacobian for EU SMOG problem A.
Reference: [86] <author> M. van Loon. </author> <title> Numerical smog prediction II: Grid refinement and its application to the Dutch smog prediction model. </title> <type> CWI Report NM-R95xx, </type> <year> 1995. </year>
Reference-contexts: The Jacobian matrix has 90 nonzero entries and 93 after the factorization. 4.2.2 Problem A2: EUSMOG model This problem is borrowed from a model which is currently implemented and tested at the CWI in a Dutch smog prediction code in the framework of the project EUSMOG <ref> [85, 86] </ref>. The problem is a highly parameterized version of the EMEP MSC-W ozone chemistry scheme [82]. It consists of 15 reactions between 15 species and is extensively described in [85]. It has been used before in the comparisons reported in [89], where it has also been documented.
Reference: [87] <author> J. Verwer. </author> <title> Gauss-Seidel iterations for stiff ODEs from chemical kinetics. </title> <journal> SIAM Journal of Scientific Computing, </journal> <volume> 15 </volume> <pages> 1243-1250, </pages> <year> 1994. </year>
Reference-contexts: Twostep is based on the variable step size, two-step backward differentiation formula BDF2 <ref> [87, 91, 89] </ref>. Instead of a modified Newton process, Gauss-Seidel iterations are used for solving the nonlinear system of equations. This technique carefully exploits the production-loss form of the differential equation (see [87] for details). We have used the original implementation obtained directly from the authors. <p> Twostep is based on the variable step size, two-step backward differentiation formula BDF2 [87, 91, 89]. Instead of a modified Newton process, Gauss-Seidel iterations are used for solving the nonlinear system of equations. This technique carefully exploits the production-loss form of the differential equation (see <ref> [87] </ref> for details). We have used the original implementation obtained directly from the authors. To accelerate the convergence of the Gauss-Seidel iterations, the species have been sorted in decreasing order relatively to the size of their destruction rates. 8. <p> technique of grouping species into chemical families to reduce, for example, the stiffness, or to enforce conservation for a chemical family (see [49, 50] where this form of lumping was proposed first for the Qssa method). 2.11 Other methods We briefly present other methods from the literature. 2.11.1 Twostep Twostep <ref> [87, 89, 91] </ref> is based on the variable step size, two-step backward differentiation formula (BDF) y n+1 = Y n + flhf (t n+1 ; y n+1 ); h = t n+1 t n ; (2.32) where fl = (c + 1)=(c + 2), c = (t n t n1 )=(t
Reference: [88] <author> J. Verwer, J. G. Blom, and W. Hunsdorfer. </author> <title> An Implicit-Explicit Approach for Atmospheric Transport-Chemistry Problems. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 20 </volume> <pages> 191-209, </pages> <year> 1996. </year>
Reference: [89] <author> J. Verwer, J. G. Blom, M. van Loon, and E. J. Spee. </author> <title> A comparison of stiff ODE solvers for atmospheric chemistry problems. </title> <journal> Atmospheric Environment, </journal> <volume> 30 </volume> <pages> 49-58, </pages> <year> 1996. </year>
Reference-contexts: Twostep is based on the variable step size, two-step backward differentiation formula BDF2 <ref> [87, 91, 89] </ref>. Instead of a modified Newton process, Gauss-Seidel iterations are used for solving the nonlinear system of equations. This technique carefully exploits the production-loss form of the differential equation (see [87] for details). We have used the original implementation obtained directly from the authors. <p> More numerical tests are necessary before drawing a general conclusion. The authors are currently involved in a comprehensive benchmark work that will test most of the old and new algorithms (see [76]). 2.10 Lumping Modifications, such as lumping, can improve their performance notably (see e.g. <ref> [89] </ref> where this is illustrated for the EUSMOG problem), but have the disadvantage of being problem dependent. <p> technique of grouping species into chemical families to reduce, for example, the stiffness, or to enforce conservation for a chemical family (see [49, 50] where this form of lumping was proposed first for the Qssa method). 2.11 Other methods We briefly present other methods from the literature. 2.11.1 Twostep Twostep <ref> [87, 89, 91] </ref> is based on the variable step size, two-step backward differentiation formula (BDF) y n+1 = Y n + flhf (t n+1 ; y n+1 ); h = t n+1 t n ; (2.32) where fl = (c + 1)=(c + 2), c = (t n t n1 )=(t <p> Here we will use both types of iteration techniques. Note that for the Gauss-Seidel technique the order of the species plays a role when only a small number of iterations are used. In all experiments we in fact restrict the number of iterations to only two. In <ref> [89, 91] </ref> this has been shown to work well. 48 Twostep is based on a two-step formula which cannot be applied at an operator-split restart. At restart the one-step backward Euler formula is therefore used, which simply means that Y n = y n . <p> Twostep allows a maximal growth in step size at restart by a factor of two. This is less than one-step solvers usually allow, but still quite acceptable in view of the explicit iteration process. For more details on the code we refer to <ref> [89, 91] </ref> and [39]. 2.11.2 Chemeq One of the first dedicated, explicit methods for solving chemical equations in comprehensive advection-reaction models is the hybrid algorithm of Young and Boris [96]. It is currently implemented in the Calgrid mesoscale model [94]. <p> On the other hand, exploitation of sparsity may significantly reduce the linear algebra overhead. Recently, several authors showed promising results with sparse BDF codes in atmospheric chemistry models <ref> [54, 89] </ref>. In this chapter we develop a systematic way of exploiting sparsity when integrating atmospheric chemistry equations. Unlike [54], our target is not a specialized architecture; we concentrate on developing machine-independent algorithms. In section 3.3 we discuss and evaluate reordering techniques that lead to minimal fill-in during LU decomposition. <p> In section 3.3 we discuss and evaluate reordering techniques that lead to minimal fill-in during LU decomposition. We then (section 3.4.3) test various linear system solvers, in particular showing that the chosen routine is twice as fast as the one used in <ref> [89] </ref>; in section 2.9 we demonstrate how the chosen solver can improve the efficiency of some state-of-the-art stiff ODE solvers. These ideas are tested on two comprehensive chemical mechanisms used to study stratospheric and tropospheric chemistry; both models are described in section 3.4.6. <p> This form of the prediction matrix holds for multistep schemes and, after an equivalence transformation, for Runge-Kutta methods as well. Several authors ([26], [54], <ref> [89] </ref>) report good results with non-pivoting sparse linear algebra solvers, when integrating atmospheric chemistry equations. This saves computational time. <p> The line parallelism shows that both code versions perform similarly in terms of accuracy; in particular, the accuracy does not seem to be affected by non-pivoting. This experimental conclusion is in agreement with the findings of other authors (see <ref> [26, 54, 89] </ref>). To summarize, figures 3.1 and 3.2 show that careful exploitation of sparsity leads to significant improvements in the efficiency of implicit numerical integrators. <p> We used Vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. In [54] and <ref> [89] </ref> it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in [75]. <p> Lest we miss the obvious, for problems of a small dimension for which the dense matrix numerical algebra costs are not dominating, the gain in using a more efficient matrix solution will be hardly noticeable in the overall costs. This is the case for Problem A (see also <ref> [89] </ref>). The dedicated explicit algorithms are scalarly implicit and exploit the production loss form of the ODE system. 104 4.2.1 Problem A1: TMk model The problem was borrowed from (Dentener, 1993, 1996). <p> The problem is a highly parameterized version of the EMEP MSC-W ozone chemistry scheme [82]. It consists of 15 reactions between 15 species and is extensively described in [85]. It has been used before in the comparisons reported in <ref> [89] </ref>, where it has also been documented. Information about the eigen-values can be found in Table 4.2. 105 Table 4.2. Distribution of real part of the spectrum of the Jacobian for EU SMOG problem A. <p> The good performance of implicit integrators is due in part to the small dimension of the system which means less work with 122 the linear algebra. Note that the Jacobi and Gauss-Seidel versions of Twostep have similar performance for this test problem (see also <ref> [89] </ref>). It is clear that the simplest Qssa solver, ET and Chemeq are the slowest among the tested routines. It is also worth noting that the Qssa performance greatly improves by extrapolation.
Reference: [90] <author> J. Verwer and W. Hunsdorfer. </author> <title> A note on Splitting Errors for Advection-Reaction Equations. </title> <type> CWI Report NM-R9424. </type>
Reference: [91] <author> J. Verwer and D. Simpson. </author> <title> Explicit Methods for Stiff Odes from Atmospheric Chemistry. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 18 </volume> <pages> 413-430, </pages> <year> 1995. </year>
Reference-contexts: The authors report good results, however, a theoretical analysis of the method is not presented. Verwer <ref> [91] </ref> proposed an extension of Qssa to a second order consistent scheme, and also a "two-step method" which is the second order BDF formula plus Gauss-Seidel iterations for solving the nonlinear system (according to the author, these 14 iterations perform similarly to the modified Newton method, but with less overhead). <p> Twostep is based on the variable step size, two-step backward differentiation formula BDF2 <ref> [87, 91, 89] </ref>. Instead of a modified Newton process, Gauss-Seidel iterations are used for solving the nonlinear system of equations. This technique carefully exploits the production-loss form of the differential equation (see [87] for details). We have used the original implementation obtained directly from the authors. <p> technique of grouping species into chemical families to reduce, for example, the stiffness, or to enforce conservation for a chemical family (see [49, 50] where this form of lumping was proposed first for the Qssa method). 2.11 Other methods We briefly present other methods from the literature. 2.11.1 Twostep Twostep <ref> [87, 89, 91] </ref> is based on the variable step size, two-step backward differentiation formula (BDF) y n+1 = Y n + flhf (t n+1 ; y n+1 ); h = t n+1 t n ; (2.32) where fl = (c + 1)=(c + 2), c = (t n t n1 )=(t <p> Here we will use both types of iteration techniques. Note that for the Gauss-Seidel technique the order of the species plays a role when only a small number of iterations are used. In all experiments we in fact restrict the number of iterations to only two. In <ref> [89, 91] </ref> this has been shown to work well. 48 Twostep is based on a two-step formula which cannot be applied at an operator-split restart. At restart the one-step backward Euler formula is therefore used, which simply means that Y n = y n . <p> Twostep allows a maximal growth in step size at restart by a factor of two. This is less than one-step solvers usually allow, but still quite acceptable in view of the explicit iteration process. For more details on the code we refer to <ref> [89, 91] </ref> and [39]. 2.11.2 Chemeq One of the first dedicated, explicit methods for solving chemical equations in comprehensive advection-reaction models is the hybrid algorithm of Young and Boris [96]. It is currently implemented in the Calgrid mesoscale model [94].
Reference: [92] <author> J. Verwer and M. van Loon. </author> <title> An evaluation of explicit Pseudo-Steady-State Approximation achemes for stiff ODE systems from chemical kinetics. </title> <journal> Journal of Computational Physics, </journal> <volume> 113 </volume> <pages> 347-352, </pages> <year> 1994. </year> <month> 235 </month>
Reference-contexts: Practical Qssa performance is discussed in the instructive paper [79], by Shieh, Carmichael et al. where different integrators are compared on specific atmospheric chemistry problems. An evaluation of the local truncation error of the Qssa scheme can be found in <ref> [92] </ref>. There are many specially-tailored methods in use in atmospheric chemistry models. One of the first proposed methods, and which has been extensively used, is the hybrid predictor-corrector algorithm of Young and Boris [96]. <p> This explains why these methods have 52 been successfully employed for many years for problems where relatively large errors are accepted and small computing times are desired. In <ref> [92] </ref> the local truncation error for Plain Qssa scheme is shown to be only O (h) for the components with small lifetimes t i t h. However, numerical experiments have shown that the Qssa solutions still converge to the exact solution. <p> Using higher order methods based on explicit formulas may not pay off, because of the order reduction phenomenon (see <ref> [56, 92] </ref>), and since higher accuracy and stability are in general contradictory requirements (see [47]). * Multistep, Runge-Kutta and standard Rosenbrock methods all enjoy the property of conserving the linear invariants of the system (for example, they are structurally mass-conservative). Neither Qssa nor Chemeq have this desirable property. <p> We emphasize that promising solvers should also be compared in actual 3D transport applications where the issues of memory use, vectorization <ref> [54, 92] </ref> and parallelization are of great practical importance. Code changes connected with vectorization and/or parallelization for a particular architecture can result in CPU time decreases of orders of magnitude. <p> Also robustness and ease of use are important in 3D models, since a subtle tuning of the ODE code is cumbersome due to the large variety of conditions that will occur at different gridpoints. Finally, the issues of memory use, vectorization <ref> [54, 92] </ref> and parallelization are of great practical importance too. Optimal ODE solvers should be tested in a 3D software environment where vectorization and parallelization take place. * Often the work-precision curves are non-monotonic, revealing the situation that more CPU time is spent, yet a less accurate solution is obtained. <p> QSSA-based algorithms are explicit methods and yet they enjoy a remarkable stability. They behave like implicit methods although their evaluation formulae is explicit. In this thesis QSSA type methods are investigated theoretically, and their excellent stability properties rigorously explained. In <ref> [92] </ref> the local truncation error for Plain QSSA scheme is shown to be only O (h) for the components with small lifetimes t i t h. However, numerical experiments have shown that the QSSA solutions still converge to the exact solution.
Reference: [93] <author> P. Werbos. </author> <title> Applications of advances in nonlinear sensitivity analysis. System modelling and optimization, </title> <address> Springer-Verlag:762-777, </address> <year> 1982. </year>
Reference: [94] <author> R. Yamartino, J. Scire, G.R. Carmichael, and Y.S. Chang. </author> <title> The CALGRID mesoscale photochemical grid model. Atmospheric Environment, </title> <address> 26 A:1493-1512, </address> <year> 1992. </year>
Reference-contexts: For more details on the code we refer to [89, 91] and [39]. 2.11.2 Chemeq One of the first dedicated, explicit methods for solving chemical equations in comprehensive advection-reaction models is the hybrid algorithm of Young and Boris [96]. It is currently implemented in the Calgrid mesoscale model <ref> [94] </ref>. In the original algorithm, the species are dynamically separated into two categories (fast and slow) according to the relative magnitude of their life-times t k = 1=L k with respect to the current step size h. Each category is integrated with a special predictor-corrector formula.
Reference: [95] <author> N. N. Yanenko. </author> <title> The method of fractional steps. </title> <publisher> Springer-Verlag, </publisher> <address> New-York, Heidelberg, Berlin, </address> <year> 1971. </year>
Reference-contexts: The rate constants and initial conditions follow the IPCC (Intergovernmental Panel on Climate Change) Chemistry Intercomparison study (see [70]) scenario 3 ("Bio"). An operator-splitting environment (the atmospheric convection-diffusion-reaction equation is solved with the method of fractional steps <ref> [95] </ref>; chemistry and transport are considered separately and integrated with different step-sizes) is simulated with a time step of 20 [minutes] for the transport scheme. Emission levels of 0:01 [ppb=hour] of N O, 0:01 [ppb=hour] of N O 2 and 0:1 [ppb=hour] of isoprene are considered.
Reference: [96] <author> T. R. Young and J. P. Boris. </author> <title> A numerical technique for solving stiff ODE associated with the chemical kinetics of reactive flow problems. </title> <journal> Journal of Physical Chemistry, </journal> <volume> 81 </volume> <pages> 2424-2427, </pages> <year> 1977. </year>
Reference-contexts: An evaluation of the local truncation error of the Qssa scheme can be found in [92]. There are many specially-tailored methods in use in atmospheric chemistry models. One of the first proposed methods, and which has been extensively used, is the hybrid predictor-corrector algorithm of Young and Boris <ref> [96] </ref>. Species are divided into stiff and nonstiff; the explicit Euler method (predictor) and an explicit trapezoidal method (corrector) are used for the nonstiff part, while the stiff part is integrated with a modified midpoint scheme. S. Sillman in [80] developed an integration scheme based on the implicit Euler formula. <p> Iterated Qssa is similar to DAE Qssa, but has one extra iteration (2.6). 4. Chemeq (see <ref> [96] </ref>, implemented in CALGRID) is used as specified in [77]: * If t i &lt; 0:2 h the species is fast and is integrated with (2.4); 42 * If t i &gt; 5 h the species is slow and is integrated with the nonstiff Chemeq formula; * For all other species <p> For more details on the code we refer to [89, 91] and [39]. 2.11.2 Chemeq One of the first dedicated, explicit methods for solving chemical equations in comprehensive advection-reaction models is the hybrid algorithm of Young and Boris <ref> [96] </ref>. It is currently implemented in the Calgrid mesoscale model [94]. In the original algorithm, the species are dynamically separated into two categories (fast and slow) according to the relative magnitude of their life-times t k = 1=L k with respect to the current step size h. <p> Model A Model B t [sec] 900 3600 900 3600 Vode 2.7 2.6 4.33 4.12 Sdirk4 1.7 2.2 3.25 3.00 Rodas 1.4 1.5 2.50 2.90 In addition to presenting the results for sparse implicit integrators, we perform a comparison with the widely used algorithms Qssa (see [50]), Chemeq (see <ref> [96] </ref>) and the sparse BDF code Lsodes (see [51]). * Qssa is used with a dynamic partitioning of the species into slow, fast and normal, function of step-size h and the species life-time t i = 1=D i . 76 If t i &gt; 100 h the species is slow and
Reference: [97] <author> Z. Zlatev. </author> <title> Computer Treatment of Large Air Pollution Models. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1995. </year>
Reference-contexts: We have included Seulex in our benchmarking as the extrapolation approach is mentioned by Zlatev <ref> [97] </ref> (see Section 3.4.3) as a viable one for atmospheric ODE problems, although no results seem to have been reported 99 yet. The same sparse linear algebra as used for the other solvers was implemented. The extrapolation sequence defined by iwork (4) = 4 was used. <p> Partitioned methods (either partitioning the reactions into fast and slow ones, or partitioning the species into stiff and nonstiff ones) offer a possibility to further reduce computational time (see for example [80] and <ref> [97, 83] </ref>). This may be done by efficiently combining an implicit method for the fast (stiff) part with an explicit method for the slow (non-stiff) part. Possible candidates are Partitioned Runge-Kutta methods (PRK) from [47], Implicit-Explicit Multi step methods (IEM) from [4] and SPARK methods from [55]. 4. Positivity preserving.
References-found: 96

