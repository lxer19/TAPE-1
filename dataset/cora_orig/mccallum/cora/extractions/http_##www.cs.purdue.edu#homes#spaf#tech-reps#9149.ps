URL: http://www.cs.purdue.edu/homes/spaf/tech-reps/9149.ps
Refering-URL: http://www.cs.purdue.edu/coast/coast-tools.html
Root-URL: http://www.cs.purdue.edu
Email: spaf@cs.purdue.edu  
Title: Observing Reusable Password Choices  
Author: Eugene H. Spafford 
Date: 31 July 1992  
Address: West Lafayette, IN 47907-1398  
Affiliation: Department of Computer Sciences Purdue University  
Pubnum: Purdue Technical Report CSD-TR 92-049  
Abstract: From experience, a significant number of recent computer breakins perhaps the majority can be traced back to an instance of a poorly-chosen reusable password. Once a system intruder has gained access to one account by breaking a password, it is often a simple matter to find system flaws and weaknesses that thereafter allow entry to other accounts and increasing amounts of privilege. The OPUS project being conducted at Purdue is an attempt to screen users' selection of passwords to prevent poor choices. The focus of the project is on using screening methods that are both time and space-efficient and to provide a mechanism that is effective for workstations with little or no disk as well as mainframes. To test this mechanism, we require a representative sample of real passwords. Thus, we constructed a method of sampling real passwords choices as they were made by users. The challenge of such a sampling mechanism is how to protect it from attack, and how to protect the results from being used against the system. This paper discusses our approach, and some of our initial observations on the words collected.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ana Maria De Alvar e. </author> <title> How crackers crack passwords, or what passwords to avoid. </title> <type> Technical Report UCID-21515, </type> <institution> Lawrence Livermore National Laboratory, </institution> <year> 1988. </year>
Reference-contexts: Even a rich character set may not be sufficient to create secure passwords if the combination of characters is restricted to an arbitrary set of possibilities. Thus, good password choice should avoid common words and names (cf. <ref> [1, 5, 7, 8, 9] </ref>). One weakness with reusable password systems is the choice of the password.
Reference: [2] <author> Burton H. Bloom. </author> <title> Space/time trade-offs in hash coding with allowable errors. </title> <journal> Communications of the ACM, </journal> <volume> 13(7) </volume> <pages> 422-426, </pages> <month> July </month> <year> 1970. </year>
Reference-contexts: OPUS is innovative because it solves the problem of using a huge screening dictionary while occupying a modest amount of disk space and computation. OPUS is designed around a compact representation of a dictionary in the form of a Bloom filter <ref> [2] </ref>. A Bloom filter is a large hashed structure with boolean values to represent its contents. Each probe value is hashed multiple times, using multiple hashing algorithms. If all corresponding bits are set, the probe represents a value in the table; any misses are definitely not known values.
Reference: [3] <author> Dorothy E. R. Denning. </author> <title> Cryptography and Data Security. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: For this reason, the collector was constructed to use the RSA public-key encryption mechanism.[10] Using this method allows a key (the public key) can be be disclosed without compromising the encrypted data (assuming that appropriate keys are chosen). 3 Furthermore, the strength of RSA is known (cf. <ref> [3] </ref>), and this would help assure everyone involved in the study of the safety of the collected passwords. Using the method described in [3], two 1000+ binary bit prime numbers were generated, resulting in a modulus of 2015 binary bits. The public key was then generated, being 994 binary bits. <p> (the public key) can be be disclosed without compromising the encrypted data (assuming that appropriate keys are chosen). 3 Furthermore, the strength of RSA is known (cf. <ref> [3] </ref>), and this would help assure everyone involved in the study of the safety of the collected passwords. Using the method described in [3], two 1000+ binary bit prime numbers were generated, resulting in a modulus of 2015 binary bits. The public key was then generated, being 994 binary bits.
Reference: [4] <author> Daniel Farmer and Eugene H. Spafford. </author> <title> The COPS security checker system. </title> <booktitle> In Proceedings of the Summer Usenix Conference. Usenix Association, </booktitle> <month> June </month> <year> 1990. </year>
Reference: [5] <author> Simson Garfinkel and Gene Spafford. </author> <title> Practical Unix Security. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> Sebastapol, CA, </address> <year> 1991. </year>
Reference-contexts: Even a rich character set may not be sufficient to create secure passwords if the combination of characters is restricted to an arbitrary set of possibilities. Thus, good password choice should avoid common words and names (cf. <ref> [1, 5, 7, 8, 9] </ref>). One weakness with reusable password systems is the choice of the password. <p> The public key was then generated, being 994 binary bits. These keys are long enough that a brute-force attack with current technology would likely exceed the lifetime of the universe (cf. the discussion in chapter 15 of <ref> [5] </ref>). The private key was also calculated but it has not been disclosed to anyone.
Reference: [6] <author> Daniel V. Klein. </author> <title> A survey of, and improvements to, password security. </title> <booktitle> In UNIX Security Workshop II, </booktitle> <pages> pages 5-14. </pages> <booktitle> The Usenix Association, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: In particular, attempting to break actual passwords and using only those that are breakable does not give an accurate dataset for analysis. Thus, using a set of words produced from a study like that in <ref> [6] </ref> would be interesting, but not realistic enough for true calibration. This requirement for real passwords means that we need a collection of password choices by actual users. However, to get these passwords means we must somehow capture live passwords from users as they are chosen.
Reference: [7] <author> Belden Menkus. </author> <title> Understanding password compromise. </title> <journal> Computers & Security, </journal> <volume> 7(5) </volume> <pages> 475-481, </pages> <month> De-cember </month> <year> 1988. </year>
Reference-contexts: Even a rich character set may not be sufficient to create secure passwords if the combination of characters is restricted to an arbitrary set of possibilities. Thus, good password choice should avoid common words and names (cf. <ref> [1, 5, 7, 8, 9] </ref>). One weakness with reusable password systems is the choice of the password.
Reference: [8] <author> Robert Morris and Ken Thompson. </author> <title> Password security: a case history. In Unix Programmer's Supplementary Documentation. </title> <journal> AT&T, </journal> <month> November </month> <year> 1979. </year>
Reference-contexts: Even a rich character set may not be sufficient to create secure passwords if the combination of characters is restricted to an arbitrary set of possibilities. Thus, good password choice should avoid common words and names (cf. <ref> [1, 5, 7, 8, 9] </ref>). One weakness with reusable password systems is the choice of the password.
Reference: [9] <institution> National Computer Security Center. Password management guideline. </institution> <type> Technical Report CSC-STD-002-85, </type> <institution> US Department of Defense, </institution> <year> 1985. </year>
Reference-contexts: Even a rich character set may not be sufficient to create secure passwords if the combination of characters is restricted to an arbitrary set of possibilities. Thus, good password choice should avoid common words and names (cf. <ref> [1, 5, 7, 8, 9] </ref>). One weakness with reusable password systems is the choice of the password.
Reference: [10] <author> R. L. Rivest, A. Shamir, and L. Adleman. </author> <title> A method for obtaining digital signatures and public-key cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-126, </pages> <month> February </month> <year> 1978. </year> <month> 13 </month>
Reference: [11] <author> Eugene H. Spafford. </author> <title> Observations on reusable password choices. </title> <booktitle> In Proceedings of the 3rd Security Symposium. Usenix, </booktitle> <month> September </month> <year> 1992. </year>
Reference-contexts: Reusable passwords provide a cost-effective method of authentication. They do not require special hardware, they may be used from any form of dial-in port or terminal connected to the target system, the fl This paper also appeared as <ref> [11] </ref>. 1 Communications from members of the CERT/CC and from local system administrators support this observation. 1 mechanism can easily be understood by most users, and they allow users to manage some of their own account security. Reusable passwords have been widely studied [13] and they seem to be well-understood..
Reference: [12] <author> Eugene H. Spafford. </author> <title> Opus: Preventing weak password choices. </title> <journal> Computers & Security, </journal> <volume> 11(3) </volume> <pages> 273-278, </pages> <year> 1992. </year>
Reference-contexts: OPUS can be integrated with other mechanisms, like Kerberos, and may be configured to support password aging as part of its design. Details of the structure of OPUS are not the main focus of this paper; the interested reader may refer to <ref> [12] </ref> for further design details. To properly evaluate an implementation of OPUS, it will be necessary to check its behavior against a large body of actual user passwords.
Reference: [13] <author> Eugene H. Spafford and Stephen A. Weeber. </author> <title> User authentication and related topics: An annotated bib-liograph. </title> <type> Technical Report 91-086, </type> <institution> Purdue University, Department of Computer Sciences, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Reusable passwords have been widely studied <ref> [13] </ref> and they seem to be well-understood.. For these reasons, they are often used as the primary form of authentication in multi-user systems, and in many single-user products. Reusable passwords also present problems.
References-found: 13

