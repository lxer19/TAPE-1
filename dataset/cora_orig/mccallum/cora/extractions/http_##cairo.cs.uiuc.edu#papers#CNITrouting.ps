URL: http://cairo.cs.uiuc.edu/papers/CNITrouting.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Email: fklara,s-chen5g@cs.uiuc.edu  
Title: Coexistence of QoS and Best-Effort Flows Routing and Scheduling  
Author: Klara Nahrstedt, Shigang Chen 
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: The future high-speed networks will need to support diverse traffic and provide services to flows with Quality of Service (QoS) requirements as well as to best effort flows. In this paper we analyze the coexistence of the QoS and best effort flows from the routing and scheduling point of view. We concentrate in our routing and scheduling analysis on the network bandwidth resource. We present two sets of source routing algorithms: (1) the bandwidth-constrained routing with imprecise state information for QoS flows, and (2) the maxmin fair routing for best effort flows. The routing analysis includes an extensive description of various algorithms in their domains and their complexity discussion. Furthermore, we discuss two level hierarchical scheduling which is tailored towards the needs raised by the coexistence of QoS and best effort flows. We show that this scheduling design accomplishes two design goals (1) guaranteeing QoS for QoS flows and (2) ensuring fairness for best effort flows, and the overhead is reasonably small and comparable with the time complexity of the single-level fair queuing scheduling. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Awerbuch and Y. Shavitt. </author> <title> Converging to approximated max-min flow fairness in logarithmic time. accepted for Infocom'98, </title> <address> San-Francisco, CA, </address> <month> April </month> <year> 1998. </year>
Reference-contexts: Much further research <ref> [1, 3, 4, 5, 17] </ref> has been done since then. It has been accepted by the ATM Forum as one of the traffic management approaches for the ABR (Available Bit Rate) service.
Reference: [2] <author> J. Bennett and H. Zhang. </author> <title> Hierarchical packet fair queueing algorithms. </title> <booktitle> ACM SIGCOMM'96, </booktitle> <year> 1996. </year>
Reference-contexts: Hence, a hierarchical scheduling is more appropriate to deploy as it scales better towards the increasing number of flows with different network requirements. We modified the hierarchical fair queuing scheduling algorithm proposed by Bennett and Zhang <ref> [2] </ref> and tuned it towards specific needs raised by the co-existence of QoS flows and best effort flows. In this paper we discuss the two-level hierarchical scheduling. <p> A flow may receive a less share due to insufficient input data because of an upstream bottleneck link. 5.2 Hierarchical Scheduling We propose a hierarchical scheduling algorithm which achieves the two design goals. Our algorithm is similar to the one proposed by Bennett and Zhang <ref> [2] </ref>. How ever, it is tuned toward the specific needs raised by the co-existence of QoS flows and best-effort flows. 5.2.1 Overview A packet scheduling algorithm operates on each individual link l. The algorithm is a two-level hierarchy as shown in Figure 2. <p> The arrival packets are inserted into the queue in the FIFO order. A timestamp t i qos is calculated for the ith arrival packet. t i qos maxfV qos ; t i1 qos g + B (f ) where V qos is the reference virtual time <ref> [2] </ref> of the QoS server, sp i is the length of the packet, t i1 qos is the timestamp of the (i 1)th packet and B (f ) is used as the weight. See Table 3 for a quick reference to the notations introduced here and in the following paragraphs. <p> The bandwidth received by f 2 F qos (l) is equal to B (f) f 0 2F qos (l) B (f) C qos (l) fi C qos (l) = B (f ), if all flows are back-logged. Hence, the invariant I2 holds. Readers are referred to <ref> [2, 8, 21] </ref> for the detailed study of fair queuing. 11 a i the arrival time of the ith data packet sp i the size of the ith packet in term of number of bits t i qos the timestamp assigned to the ith packet by the QoS server for scheduling
Reference: [3] <author> D. Bertsekas and R. Gallager. </author> <title> Data networks. </title> <publisher> Prentice Hall, </publisher> <address> Englwood Cliffs, N.J., </address> <year> 1992. </year>
Reference-contexts: Much further research <ref> [1, 3, 4, 5, 17] </ref> has been done since then. It has been accepted by the ATM Forum as one of the traffic management approaches for the ABR (Available Bit Rate) service. <p> Note that, according to the maxmin allocation, the rates of flows in F b best (l) are higher than those of flows in F best (l) F b best (l) whose bottleneck links are elsewhere on their routes other than l <ref> [3] </ref>.
Reference: [4] <author> F. Bonomi and K. Fendick. </author> <title> The rate-based flow control framework for the available bit rate atm service. </title> <journal> IEEE Network, </journal> <pages> pages 9(2) 25-39, </pages> <month> March/April </month> <year> 1995. </year>
Reference-contexts: Much further research <ref> [1, 3, 4, 5, 17] </ref> has been done since then. It has been accepted by the ATM Forum as one of the traffic management approaches for the ABR (Available Bit Rate) service.
Reference: [5] <author> A. Charny, D. D. Clark, and R. Jain. </author> <title> Congestion control with explicit rate indication. </title> <booktitle> IEEE International Conference on Communications, </booktitle> <year> 1995. </year>
Reference-contexts: Let F be the set of flows in the network. We study connection-oriented networks where each flow has a fixed source (destination) and is assigned a fixed route through which all packets of that flow are transmitted in the FIFO order <ref> [5, 13, 12] </ref>. For a flow f 2 F , the set of links on its route is denoted as L (f ). The set of flows through a link l is denoted as F (l). We study two types of flows in this paper. <p> Much further research <ref> [1, 3, 4, 5, 17] </ref> has been done since then. It has been accepted by the ATM Forum as one of the traffic management approaches for the ABR (Available Bit Rate) service. <p> The maxmin bandwidth of each best-effort flow is determined by the bottleneck link on its route. A global bottleneck based algorithm which assigns the maxmin bandwidth to each best-effort flow was described in <ref> [5, 16] </ref> and is briefly summarized below. A distributed algorithm was given in [9]. A global bottleneck link l b is defined as the link which has the smallest bandwidth per flow, C best (l b ) jF best (l b )j . <p> The design requirement of dynamic bandwidth allocation is that, given any initial state, it must be able to converge to the maxmin allocation in finite time if there is no further arrival of new flows and no further leave of existing flows. Anna Charny et al <ref> [5] </ref> proposed a distributed algorithm which fulfills such a requirement. We modify the algorithm in order to maintain F b best (l) and r (l) at each link l and therefore provide the information needed by the approximation algorithm in Section 4.3. <p> Readers are referred to <ref> [5] </ref>, where the traffic volume of control messages are considered. 9 next hop on its route. By traversing every link on its route, the forward control message keeps the smallest assigned bandwidth, and the link which assigns such a bandwidth is also kept as the bot tleneck link. 3.
Reference: [6] <author> S. Chen and K. Nahrstedt. </author> <title> Maxmin fair routing in connection-oriented networks. </title> <type> Tech. Rep., </type> <institution> Dept. of Com. Sci., UIUC, USA, </institution> <year> 1998. </year>
Reference-contexts: The proof of the following theorem can be found in <ref> [6] </ref>. Theorem 1 m (F best ) (F best ), for any feasible allocation . 4.2 Maxmin Routing In this section, the optimization property of the maxmin bandwidth allocation illustrated in Theorem 1 is extended from the domain of flow control to the domain of routing.
Reference: [7] <author> S. Chen and K. Nahrstedt. </author> <title> On finding multi-constrained paths. </title> <booktitle> IEEE International Conference on Communications, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: Any path from s to t satisfying the above constraint is called a feasible path. We use the source routing strategy <ref> [7, 12, 14] </ref>, in which every node maintains an image of the global network state, based on that a routing path is computed at the source node.
Reference: [8] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <booktitle> ACM SIGCOMM'89, </booktitle> <pages> pages 3-12, </pages> <year> 1989. </year>
Reference-contexts: Referring to Figure 2, (1) and (2) are the second-level schedulings; (3) is the first-level scheduling. All three parts can be implemented by the weighted fair queuing <ref> [8] </ref>. 5.3.1 Scheduling within QoS Server Assume the invariant I1 (Section 5.2.2) always holds, i.e., the capacity of the QoS server, C qos (l), is always B (f ). How to maintain such a capacity in a dynamic network is discussed in Section 5.3.3. <p> The bandwidth received by f 2 F qos (l) is equal to B (f) f 0 2F qos (l) B (f) C qos (l) fi C qos (l) = B (f ), if all flows are back-logged. Hence, the invariant I2 holds. Readers are referred to <ref> [2, 8, 21] </ref> for the detailed study of fair queuing. 11 a i the arrival time of the ith data packet sp i the size of the ith packet in term of number of bits t i qos the timestamp assigned to the ith packet by the QoS server for scheduling
Reference: [9] <author> J. M. Faffe. </author> <title> Bottleneck flow control. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-29(7):954-962, </volume> <month> July </month> <year> 1981. </year>
Reference-contexts: Throughout this section, we call C best (l) the available bandwidth (capacity) for best effort flows of link l. 4.1 Maxmin Bandwidth Allocation 4.1.1 Brief Review The maxmin allocation was first proposed by Jaffe <ref> [9] </ref> as a flow control technique which distributes the network bandwidth fairly among the best-effort flows. Much further research [1, 3, 4, 5, 17] has been done since then. <p> The maxmin bandwidth of each best-effort flow is determined by the bottleneck link on its route. A global bottleneck based algorithm which assigns the maxmin bandwidth to each best-effort flow was described in [5, 16] and is briefly summarized below. A distributed algorithm was given in <ref> [9] </ref>. A global bottleneck link l b is defined as the link which has the smallest bandwidth per flow, C best (l b ) jF best (l b )j .
Reference: [10] <author> ATM Forum. </author> <title> Private network network interface (pnni) v1.0 specifications. </title> <month> May </month> <year> 1996. </year>
Reference-contexts: Third, the hierarchical approach is likely to be used to solve the scalability problem of routing in large networks <ref> [10] </ref>. However, the state aggregation in hierarchical routing increases the level of imprecision [12]. The imprecision of state information directly affects the routing performance.
Reference: [11] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <address> New York: </address> <publisher> W.H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: Multiple constraints often make the QoS routing problem intractable. In particular, finding the least-cost path with one path constraint or finding a feasible path with two independent path con straints is NP-complete <ref> [11] </ref>. * Second, any future integrated-service network will carry both QoS traffic and best-effort traffic, which makes the issue of performance optimization complicated. A primary task of routing is to maximize the resource efficiency, which is measured by two goals.
Reference: [12] <author> R. Guerin and A. Orda. </author> <title> Qos-based routing in networks with inaccurate information: Theory and algorithms. </title> <address> Infocom'97, Japan, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: Let F be the set of flows in the network. We study connection-oriented networks where each flow has a fixed source (destination) and is assigned a fixed route through which all packets of that flow are transmitted in the FIFO order <ref> [5, 13, 12] </ref>. For a flow f 2 F , the set of links on its route is denoted as L (f ). The set of flows through a link l is denoted as F (l). We study two types of flows in this paper. <p> Any path from s to t satisfying the above constraint is called a feasible path. We use the source routing strategy <ref> [7, 12, 14] </ref>, in which every node maintains an image of the global network state, based on that a routing path is computed at the source node. <p> Third, the hierarchical approach is likely to be used to solve the scalability problem of routing in large networks [10]. However, the state aggregation in hierarchical routing increases the level of imprecision <ref> [12] </ref>. The imprecision of state information directly affects the routing performance. The goal of our algorithm is to maximize the probability of success in finding a feasible path in a dynamic network environment where the available information is imprecise. <p> The most related work was done by Guerin and Orda <ref> [12] </ref> and by Lorenz and Orda [14]. Their imprecision model is based on the probability distribution functions. For instance, every node maintains, for every link l, the probability p l (w) of link l having a residual bandwidth of w units, where w ranges from zero to maximum possible value.
Reference: [13] <author> H. T. Kung, T. Blackwell, and A. Chapman. </author> <title> Credit-based flow control for atm networks: Credit update protocol, adaptive credit allocation, and statistical multiplexing. </title> <booktitle> ACM SIG-COMM'94, </booktitle> <pages> pages 101-114, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: Let F be the set of flows in the network. We study connection-oriented networks where each flow has a fixed source (destination) and is assigned a fixed route through which all packets of that flow are transmitted in the FIFO order <ref> [5, 13, 12] </ref>. For a flow f 2 F , the set of links on its route is denoted as L (f ). The set of flows through a link l is denoted as F (l). We study two types of flows in this paper.
Reference: [14] <author> D. H. Lorenz and A. Orda. </author> <title> Qos routing in networks with uncertain parameters. </title> <address> Infocom'98, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: Any path from s to t satisfying the above constraint is called a feasible path. We use the source routing strategy <ref> [7, 12, 14] </ref>, in which every node maintains an image of the global network state, based on that a routing path is computed at the source node. <p> The most related work was done by Guerin and Orda [12] and by Lorenz and Orda <ref> [14] </ref>. Their imprecision model is based on the probability distribution functions. For instance, every node maintains, for every link l, the probability p l (w) of link l having a residual bandwidth of w units, where w ranges from zero to maximum possible value.
Reference: [15] <author> Q. Ma and P. Steenkiste. </author> <title> Quality-of-service routing with performance guarantees. </title> <booktitle> Proceedings of the 4th International IFIP Workshop on Quality of Service, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: It does not consider other optimization criteria such as the path length. When there exist many paths that satisfy the QoS requirement, the shortest path in terms of number of hops is often desired due to a better statistical performance <ref> [15] </ref>. Algorithm 3 tries to take the path length into account. Let d s;t be the distance between the source s and the destination t. Algorithm 3 1. Let E 0 = f lj P r (bandwidth (l) B) &gt; 0; l 2 Eg. <p> However, in a long term, fairness may contradict throughput as the proposed algorithm may 8 select an excessively long path which reduces the over-all bandwidth available for flows arriving successively. Research showed that short routing paths tend to yield high overall throughput <ref> [15] </ref>. The proposed algorithm can be modified to take the path length into consideration. A maximum allowable length is specified for a new flow based on the distance from the source to the destination.
Reference: [16] <author> Q. Ma, P. Steenkiste, and H. Zhang. </author> <title> Routing high-bandwidth traffic in max-min fair share networks. </title> <booktitle> Proceedings of SIGCOMM'96, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: The maxmin bandwidth of each best-effort flow is determined by the bottleneck link on its route. A global bottleneck based algorithm which assigns the maxmin bandwidth to each best-effort flow was described in <ref> [5, 16] </ref> and is briefly summarized below. A distributed algorithm was given in [9]. A global bottleneck link l b is defined as the link which has the smallest bandwidth per flow, C best (l b ) jF best (l b )j . <p> When flows join and leave the network frequently, the communication overhead for collecting the routes of all flows will be excessively high. Many routing algorithms <ref> [16, 19, 20] </ref> rely on the state information of the links in the network, instead of that of the flows. The state of the links can be collected and maintained at each node by the link-state algorithm [18], which has been implemented on many internetworks.
Reference: [17] <author> J. Mosley. </author> <title> Asynchronous distributed flow control algorithms. </title> <type> Ph.D. thesis, </type> <institution> MIT, Dept. of Electrical Engineering and Computer Science, </institution> <address> Cambridge, MA, </address> <year> 1984. </year>
Reference-contexts: Much further research <ref> [1, 3, 4, 5, 17] </ref> has been done since then. It has been accepted by the ATM Forum as one of the traffic management approaches for the ABR (Available Bit Rate) service.
Reference: [18] <author> J. Moy. </author> <note> Ospf version 2, internet rfc 1583. </note> <month> March </month> <year> 1994. </year>
Reference-contexts: Many routing algorithms [16, 19, 20] rely on the state information of the links in the network, instead of that of the flows. The state of the links can be collected and maintained at each node by the link-state algorithm <ref> [18] </ref>, which has been implemented on many internetworks. In the following, we approximate the proposed maxmin routing algorithm by using a new state defined on each link.
Reference: [19] <author> C. Parris, H. Zhang, and D. Ferrari. </author> <title> Dynamic management of guaranteed performance multimedia connections. </title> <journal> Multimedia Systems Journal, </journal> <volume> 1 </volume> <pages> 267-283, </pages> <year> 1994. </year>
Reference-contexts: When flows join and leave the network frequently, the communication overhead for collecting the routes of all flows will be excessively high. Many routing algorithms <ref> [16, 19, 20] </ref> rely on the state information of the links in the network, instead of that of the flows. The state of the links can be collected and maintained at each node by the link-state algorithm [18], which has been implemented on many internetworks.
Reference: [20] <author> Z. Wang and J. Crowcroft. </author> <title> Qos routing for sup-porting resource reservation. </title> <address> JSAC, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: When flows join and leave the network frequently, the communication overhead for collecting the routes of all flows will be excessively high. Many routing algorithms <ref> [16, 19, 20] </ref> rely on the state information of the links in the network, instead of that of the flows. The state of the links can be collected and maintained at each node by the link-state algorithm [18], which has been implemented on many internetworks.
Reference: [21] <author> H. Zhang and S. Keshav. </author> <title> Comparison of rate-based service disciplines. </title> <booktitle> ACM SIGCOMM'91, </booktitle> <year> 1991. </year>
Reference-contexts: The bandwidth received by f 2 F qos (l) is equal to B (f) f 0 2F qos (l) B (f) C qos (l) fi C qos (l) = B (f ), if all flows are back-logged. Hence, the invariant I2 holds. Readers are referred to <ref> [2, 8, 21] </ref> for the detailed study of fair queuing. 11 a i the arrival time of the ith data packet sp i the size of the ith packet in term of number of bits t i qos the timestamp assigned to the ith packet by the QoS server for scheduling
References-found: 21

