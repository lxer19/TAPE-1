URL: ftp://ftp.cs.unc.edu/pub/users/jeffay/dissertations/stone-95/part3.ps.Z
Refering-URL: http://www.cs.unc.edu/~jeffay/students/stone-95/abstract.html
Root-URL: http://www.cs.unc.edu
Title: Chapter V Analysis of the Delay Bound 5.1 Introduction execute in mutual exclusion ensures that
Note: These assumptions are also used implicitly. The fact that tasks that share resources  can be modeled in  
Abstract: In Chapter 3 I developed a feasibility test for an abstract model of real-time systems that matched the programming model of YARTOS. In Chapter 4, I used this test to show that the application tasks comprising the workstation-based video conferencing application described in Chapter 2 always execute to completion prior to their deadlines and that the tasks that share resources adhere to the required mutual exclusion constraints. In this chapter, I present an axiomatic specification of the application in which these properties are included as axioms. From this specification, I derive a theorem showing that every video frame generated by the ActionMedia hardware is acquired and compressed, and that the delay experienced by video frames during processing on the acquisitionside is bounded. The acquisitionside delay experienced by a video frame is precisely defined as the interval between two events: the VBI logical interrupt that occurs at the start of digitization of the frame and the time the frame is placed on the transmit_video queue (see Section 2.5.3). In this chapter, I will demonstrate that 100 ms. (i.e., 6 times the period of the VBI logical interrupt) is an upper bound on the acquisitionside side delay experienced by each video frame. Throughout the axiomatic specification of the application presented in this chapter, I take advantage of the deadline and mutual exclusion properties that were shown in Chapter 4. These properties are used both explicitly and implicitly. Explicitly, the fact that each task invocation completes execution prior to a deadline is used to show that each task invocation executes within a well-defined interval. In addition, the mutual exclusion property is used to show that several pairs of operations execute in mutual exclusion. 
Abstract-found: 1
Intro-found: 0
References-found: 0

