URL: http://www.cs.ucl.ac.uk/research/mobile/archives/DCNDS/MobileIP/low-loss-hc.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/mobile/archives/DCNDS/MobileIP/
Root-URL: http://www.cs.ucl.ac.uk
Email: steveg@cdt.luth.se  
Title: Low-loss TCP/IP Header Compression for Wireless Networks for Distance Spanning Technology (CDT), Lulea, Sweden, and
Author: Mikael Degermark Mathias Engan Bjorn Nordgren and Stephen Pink yz fmicke, engan, bcn, 
Note: This work was supported by grants from the Centre  
Address: PO box 1263 S-971 87 Lulea, Sweden S-164 28 Kista, Sweden  
Affiliation: CDT/Department of Computer Science Swedish Institute of Computer Science Lulea University  
Abstract: Headers of IP packets are growing and the bandwidth required for transmitting headers is increasing. With the coming of IPv6 the address size increases from 4 to 16 bytes and the basic IP header increases from 20 to 40 bytes. Moreover, most mobility schemes tunnel packets addressed to mobile hosts by adding an extra IP header or extra routing information, typically increasing the size of TCP/IPv4 headers to 60 bytes and TCP/IPv6 headers to 100 bytes. In this paper, we provide new header compression schemes for UDP/IP and TCP/IP protocols. We show how to reduce the size of UDP/IP headers by an order of magnitude, down to four to five bytes. Our method works over simplex links, lossy links, multi-access links, and supports multicast communication. We also show how to generalize the most commonly used method for header compression for TCP/IPv4, developed by Van Jacobson, to IPv6 and multiple IP headers. The resulting scheme unfortunately reduces TCP throughput over lossy links due to unfavorable interaction with TCP's congestion control mechanisms. However, by adding two 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mary G. Baker, Xinhua Zhao, Stuart Cheshire, Jonathan Stone: </author> <title> Supporting Mobility in MosquitoNet. </title> <booktitle> Proc. 1996 USENIX Technical Conference, </booktitle> <address> San Diego, CA, </address> <month> January </month> <year> 1996. </year>
Reference: [2] <author> Hari Balakrishnan, Srinivasan Seshan, Elan Amir, Randy H. Katz: </author> <title> Improving TCP/IP performance over Wireless Networks. </title> <booktitle> Proc. </booktitle> <address> MobiCom '95, Berkeley, CA, </address> <month> November </month> <year> 1995, </year> <pages> pp. 2-11. </pages>
Reference-contexts: This is largely due to the reduced packet loss rate that allows TCP to increase its sending window more between losses. A number of researchers have worked with increasing TCP throughput over lossy wireless links. One example is the Berkeley snoop protocol <ref> [2] </ref>, which augments TCP by inserting a booster protocol [9] over the wireless link. The booster protocol stores segments temporarily, snoops into segments and acknowledgments to detect what segments are lost, and performs local re-transmissions over the wireless link. <p> The lower packet loss rate is beneficial because fewer segments need to be retransmitted, and if the booster manages to fill the link to capacity, the reduced header size promises a performance increase of around 15% for IPv6 and Mobile IP headers. Moreover, booster protocols such as in <ref> [2] </ref> can benefit from the decompressor's detailed knowledge of when packet losses has occurred. It would make sense to have the decompressor inform the booster protocol of when losses occur, and have the booster tell the compressor when to send a full header.
Reference: [3] <author> David D. Clark: </author> <title> The Design Philosophy of the DARPA Internet Protocols. </title> <journal> Proc. SIGCOMM '88, Computer Communication Review Vol. </journal> <volume> 18, No. 4, </volume> <month> August, </month> <year> 1988, </year> <pages> pp. 106-114. </pages> <note> Also in Computer Communication Review Vol. 25, No. 1, </note> <month> January, </month> <year> 1995, </year> <pages> pp. 102-111. </pages>
Reference-contexts: If not refreshed, the compression state is garbage collected away. This is an application of the soft state principle introduced by Clark <ref> [3] </ref> and used for example in the RSVP [19] resource reservation setup protocol, and the PIM [6] multicast routing protocol. The periodic refreshes of soft state provide the following advantages. * If the first full header is lost, the decompressor can install proper compression state when a refreshing header arrives.
Reference: [4] <author> Steve Deering: </author> <title> Host Extensions for IP Multicasting. Request For Comment 1112, </title> <month> August, </month> <year> 1989. </year> <month> ftp://ds.internic.net/rfc/rfc1112.fps,txtg </month>
Reference: [5] <author> Steve Deering, Robert Hinden: </author> <title> Internet Protocol, Version 6 (IPv6) Specification. Request For Comment 1883, </title> <month> December, </month> <year> 1995. </year> <month> ftp://ds.internic.net/rfc/rfc1883.txt </month>
Reference: [6] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, Van Jacobson, Ching-Gung Liu, Liming Wei: </author> <title> An Architecture for Wide-Area Multicast Routing. </title> <journal> Proc. ACM SigComm '94, Computer Communication Review, </journal> <volume> Vol. 24, No. 4, </volume> <month> October, </month> <year> 1994, </year> <pages> pp. 126-135. </pages>
Reference-contexts: If not refreshed, the compression state is garbage collected away. This is an application of the soft state principle introduced by Clark [3] and used for example in the RSVP [19] resource reservation setup protocol, and the PIM <ref> [6] </ref> multicast routing protocol. The periodic refreshes of soft state provide the following advantages. * If the first full header is lost, the decompressor can install proper compression state when a refreshing header arrives.
Reference: [7] <author> David Eckhardt, Peter Steenkiste: </author> <title> Measurement and Analysis of the Error Characteristics of an In-Building Wireless Network. </title> <journal> Proc. ACM SigComm '96, Computer Communication Review, </journal> <volume> Vol. 26, No. 4, </volume> <month> October, </month> <year> 1996, </year> <pages> pp. 243-254. </pages>
Reference-contexts: We have used uniformly distributed bit-error frequencies in our simulations. This implies that most packet losses are for single packets. It is not clear that this is a good model for a wireless LAN. Two recent studies of the AT&T WaveLAN <ref> [7, 11] </ref> have come to slightly different conclusions. [11] found that withing a room, packet losses does not occur in groups and are uniformly distributed. For longer distances between rooms packet loss occur in groups of 2-3 packets 7 . <p> For longer distances between rooms packet loss occur in groups of 2-3 packets 7 . The other study <ref> [7] </ref> also found that within a room, losses are uniform and for single packets. This was also true between rooms. Moreover, this latter study found a much lower correlation between distance and loss rate than the previous study.
Reference: [8] <author> Mikael Degermark, Bjorn Nordgren, Stephen Pink: </author> <title> Header Compression for IPv6. Internet Engineering Task Force, Internet Draft (work in progress), </title> <month> June, </month> <year> 1996. </year> <month> draft-degermark-ipv6hc-01.txt </month>
Reference-contexts: All fields in headers can be classified into one of the following four categories depending on how they are expected to change between consecutive headers in a packet stream. <ref> [8] </ref> provides such classifications for IPv6 basic and extension headers, IPv4, TCP, and UDP headers. nochange The field is not expected to change. <p> We are currently implementing IPv6 header compression in the NetBSD kernel, and are planning a Streams module for Sun Microsystems, Inc., Solaris operating system. A current Internet Draft <ref> [8] </ref> specifies the details of IPv6 header compression. 7 Conclusion The large headers of IPv6 and Mobile IP threaten to reduce the applicability of Internet technology over low- and medium-speed links.
Reference: [9] <institution> We owe the concept of a booster protocol to David Feldmeier and Anthony MacAuley. </institution>
Reference-contexts: A number of researchers have worked with increasing TCP throughput over lossy wireless links. One example is the Berkeley snoop protocol [2], which augments TCP by inserting a booster protocol <ref> [9] </ref> over the wireless link. The booster protocol stores segments temporarily, snoops into segments and acknowledgments to detect what segments are lost, and performs local re-transmissions over the wireless link.
Reference: [10] <author> Van Jacobson: </author> <title> Compressing TCP/IP Headers for Low-Speed Serial Links. Request For Comment 1144, </title> <address> Febru-ary, </address> <year> 1990. </year> <month> ftp://ds.internic.net/rfc/rfc1144.fps,txtg </month>
Reference-contexts: The numbers above assume uniformly distributed bit-errors. 4 TCP header compression The currently used header compression method for TCP/IPv4 is by Jacobson <ref> [10] </ref>, and is known as VJ header compression. Jacobson carefully analyzes how the various fields in the TCP header change between consecutive packets in a TCP connection. Utilizing this knowledge, his method can reduce the size of a TCP/IPv4 header to 3-6 bytes. <p> This suggests that it is not possible to improve the low-loss mechanisms significantly. 5 Related work and discussion The first work on header compression by Jacobson resulted in the now familiar VJ header compression method <ref> [10] </ref>, widely used in the Internet today. VJ header compression can compress TCP/IPv4 headers only, UDP headers are not compressed by his method. Most real-time traffic in the Internet today uses UDP, so there is a need for compression mechanisms for UDP.
Reference: [11] <author> Giao T. Nguyen, Randy H. Katz, Brian Noble, Ma-hadev Satyanarayanan: </author> <title> A Trace-based Approach for Modeling Wireless Channell Behaviour. To appear, </title> <booktitle> Proc. of the Winter Simulation Conference, </booktitle> <month> December </month> <year> 1996. </year> <note> http://daedalus.cs.berkeley.edu/publications/wsc96.ps.gz </note>
Reference-contexts: We have used uniformly distributed bit-error frequencies in our simulations. This implies that most packet losses are for single packets. It is not clear that this is a good model for a wireless LAN. Two recent studies of the AT&T WaveLAN <ref> [7, 11] </ref> have come to slightly different conclusions. [11] found that withing a room, packet losses does not occur in groups and are uniformly distributed. For longer distances between rooms packet loss occur in groups of 2-3 packets 7 . <p> We have used uniformly distributed bit-error frequencies in our simulations. This implies that most packet losses are for single packets. It is not clear that this is a good model for a wireless LAN. Two recent studies of the AT&T WaveLAN [7, 11] have come to slightly different conclusions. <ref> [11] </ref> found that withing a room, packet losses does not occur in groups and are uniformly distributed. For longer distances between rooms packet loss occur in groups of 2-3 packets 7 . The other study [7] also found that within a room, losses are uniform and for single packets.
Reference: [12] <author> A. Mathur, M. Lewis: </author> <title> Compressing IPX Headers Over WAN Media (CIPX). Request For Comment 1553, </title> <address> De-cember, </address> <year> 1993. </year> <month> ftp://ds.internic.net/rfc/rfc1553.txt </month>
Reference-contexts: VJ header compression can compress TCP/IPv4 headers only, UDP headers are not compressed by his method. Most real-time traffic in the Internet today uses UDP, so there is a need for compression mechanisms for UDP. Mathur et al <ref> [12] </ref> has defined a header compression method for IPX, that can be adapted to UDP. In their scheme, compressor and decompressor perform a handshake after each full header. Thus, the scheme in [12] cannot be used over simplex links, and the ack implosion problem makes it hard to adapt for multicast <p> Mathur et al <ref> [12] </ref> has defined a header compression method for IPX, that can be adapted to UDP. In their scheme, compressor and decompressor perform a handshake after each full header. Thus, the scheme in [12] cannot be used over simplex links, and the ack implosion problem makes it hard to adapt for multicast communication.
Reference: [13] <author> Craig Partridge: </author> <title> Gigabit networking. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year> <note> ISBN 0-201-56333-9. </note>
Reference-contexts: Routing means an IPv6/UDP header with a four address routing header. Compr means the compressed version of IPv6/UDP, optim, tunnel, or routing. For comparison, the bandwidth needed for the actual audio samples is somewhere between 10 kbit/s for GSM quality to 128 kbit/s for CD quality <ref> [13, p. 179] </ref>. So when tunneling for mobility, at least 45.2 kbit/s is required for GSM quality with 20 ms between packets. With header compression this can be reduced to 11.6 kbit/s. 3. TCP bulk transfers over the wide area today typically use 512 byte segments.
Reference: [14] <author> Charlie Perkins, ed: </author> <title> IP Mobility Support. Internet Engineering Task Force, Internet Draft (work in progress), </title> <address> April 22, </address> <year> 1996. </year> <month> draft-ietf-mobileip-protocol-16.txt </month>
Reference: [15] <author> Charles Perkins, David B. Johnson: </author> <title> Mobility Support in IPv6. Internet Engineering Task Force, Internet Draft (work in progress), </title> <month> January 26, </month> <year> 1996. </year> <month> draft-ietf-mobileip-ipv6-00.txt </month>
Reference-contexts: It is straightforward to extend VJ header compression to TCP/IPv6. It is important to do this since not only are the base headers in IPv6 larger than IPv4, multiple headers needed to support Mobile IPv6 <ref> [15] </ref>, i.e., routing headers with 16 byte addresses tunneled to the mobile host, will produce a large overhead on wireless networks. 4.1 Compression of TCP header Most fields in the TCP header are transmitted as the difference from the previous header. <p> The figures show throughput over the Modem topology. TCP segments have a payload of 512 bytes and have an extra IPv6 header for tunnelling IP datagrams from a Home Agent to a mobile host as described in the current Mobile IPv6 draft <ref> [15] </ref>, resulting in a total header of 100 bytes. Compressed headers are assumed to be 5 bytes on average, a slightly pessimistic value for data transfers. Modem topology with bit-error rate 2 fi 10 7 . Modem topology with bit-error rate 2 fi 10 6 .
Reference: [16] <author> J. L. Romkey: </author> <title> A Nonstandard for Transmission of IP Datagrams Over Serial Lines: SLIP. Request For Comment 1055, </title> <month> June, </month> <year> 1988. </year>
Reference-contexts: If the link-level framing protocol uses a strong checksum, this will never happen because frames with bit-errors will be discarded before reaching the decompres-sor. However, some framing protocols, for example SLIP <ref> [16] </ref>, lack strong checksums. PPP [17] has a strong checksum if HDLC-like framing [18] is used, but that is not required. IPv6 must not be operated over links that can deliver a significant fraction of corrupted packets.
Reference: [17] <author> W. Simpson: </author> <title> The Point-to-Point Protocol (PPP). Request For Comment 1661, </title> <month> July, </month> <year> 1994. </year>
Reference-contexts: If the link-level framing protocol uses a strong checksum, this will never happen because frames with bit-errors will be discarded before reaching the decompres-sor. However, some framing protocols, for example SLIP [16], lack strong checksums. PPP <ref> [17] </ref> has a strong checksum if HDLC-like framing [18] is used, but that is not required. IPv6 must not be operated over links that can deliver a significant fraction of corrupted packets.
Reference: [18] <author> W. Simpson: </author> <title> PPP in HDLC-like Framing. Request For Comment 1662, </title> <month> July, </month> <year> 1994. </year>
Reference-contexts: If the link-level framing protocol uses a strong checksum, this will never happen because frames with bit-errors will be discarded before reaching the decompres-sor. However, some framing protocols, for example SLIP [16], lack strong checksums. PPP [17] has a strong checksum if HDLC-like framing <ref> [18] </ref> is used, but that is not required. IPv6 must not be operated over links that can deliver a significant fraction of corrupted packets. This means that when IPv6 is run over a lossy wireless link the link layer must have a strong checksum or error correction.
Reference: [19] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, D. Zap-pala: RSVP: </author> <title> A New Resource ReSerVation Protocol. </title> <journal> IEEE Network Magazine, </journal> <pages> pp. 8-18, </pages> <month> September, </month> <year> 1993. </year>
Reference-contexts: If not refreshed, the compression state is garbage collected away. This is an application of the soft state principle introduced by Clark [3] and used for example in the RSVP <ref> [19] </ref> resource reservation setup protocol, and the PIM [6] multicast routing protocol. The periodic refreshes of soft state provide the following advantages. * If the first full header is lost, the decompressor can install proper compression state when a refreshing header arrives.
Reference: [20] <institution> Network Research Group, Lawrence Berkelay National Laboratory. ns | LBNL Network Simulator. </institution> <note> URL http://www-nrg.ee.lbl.gov/ns/ </note>
Reference-contexts: Header compression over the bottleneck link (if done). TCP connections between S and M. Right link is lossy. To investigate the effects of header compression in various scenarios we have used the LBNL Network Simulator <ref> [20] </ref>, a network simulator based on the REAL simulator [21]. A number of TCP variants are available, including TCPs that support selective acknowledgments, and it is possible to set up various network topologies.
Reference: [21] <author> S. Keshav, </author> <title> The REAL Network Simulator. </title> <address> URL http://minnie.cs.adfa.oz.au/REAL/ </address>
Reference-contexts: Header compression over the bottleneck link (if done). TCP connections between S and M. Right link is lossy. To investigate the effects of header compression in various scenarios we have used the LBNL Network Simulator [20], a network simulator based on the REAL simulator <ref> [21] </ref>. A number of TCP variants are available, including TCPs that support selective acknowledgments, and it is possible to set up various network topologies. We have extended the simulator to allow emulation of VJ header compression, and in this paper we show simulations over the two topologies in figure 9.
References-found: 21

