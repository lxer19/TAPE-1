URL: http://www.cs.ucsb.edu/conferences/java98/papers/cev.ps
Refering-URL: http://www.cs.ucsb.edu/conferences/java98/program.html
Root-URL: http://www.cs.ucsb.edu
Email: fmboyles, rraje, sfangg@cs.iupui.edu  
Title: CEV: Collaborative Environment for Visualization Using Java RMI  
Author: Michael Boyles Rajeev Raje Shiaofen Fang 
Keyword: Collaborative, Visualization, World Wide Web, Java, Remote Method Invocation  
Address: Indianapolis, IN 46202  
Affiliation: Department of Computer and Information Science Indiana University Purdue University Indianapolis  
Abstract: Collaborative visualization is an active area of research in computer science. Many different techniques and implementations have been proposed. However, most of today's systems require many high-end graphics workstations. By implementing a new technique that separates the 2D and 3D components of the visualization process, we have developed a system called CEV that operates using only one high-end workstation along with many inexpensive machines that need only the capability of running a web browser. Using Java RMI, CEV provides a heterogeneous environment for many users that is easy-to-use. This paper describes the operation, methodology, and implementation of CEV. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arie Kaufman. </author> <title> Volume Visualization. </title> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: 1 Introduction Scientific visualization is the process of using computer graphics to view or explore 3D objects, natural phenomenon, or complex data <ref> [1] </ref>. It has proven to be very useful to many areas of science and engineering. Collaborative visualization enhances the traditional visualization by bringing together many experts so that each can contribute towards the common goal of the understanding of the object, phenomenon, or data under investigation.
Reference: [2] <author> Vinod Anupam and Chandrajit Bajaj. Shastra: </author> <title> Multimedia Collaborative Design Environment. </title> <booktitle> IEEE Multimedia, </booktitle> <pages> 39-49, </pages> <year> 1994. </year>
Reference-contexts: There are many research efforts to develop collaborative visualization systems. For the sake of braviety, here, we will mention only a few prominent ones. As cited in <ref> [2] </ref>, MMConf [3], Rapport [4], and CECED [5] allow for the content-independent sharing of drawing and viewing surfaces. Shastra [2] included the ability to perform content-dependent sharing. Shastra applications are "collaboration aware" and support synchronous multiuser manipulations. CSpray uses a "spray painting metaphor for an intuitive user-interface" [6]. <p> There are many research efforts to develop collaborative visualization systems. For the sake of braviety, here, we will mention only a few prominent ones. As cited in <ref> [2] </ref>, MMConf [3], Rapport [4], and CECED [5] allow for the content-independent sharing of drawing and viewing surfaces. Shastra [2] included the ability to perform content-dependent sharing. Shastra applications are "collaboration aware" and support synchronous multiuser manipulations. CSpray uses a "spray painting metaphor for an intuitive user-interface" [6]. The CSpray system decreases network traffic through incremental updates and handles shared resources through privately owned spray cans.
Reference: [3] <author> T. Crowley et al. MMConf: </author> <title> An Infrastructure for Building Shared Multimedia Applications. </title> <booktitle> Proceedings ACM CSCW 90, </booktitle> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1990, </year> <month> pp.21-37. </month>
Reference-contexts: There are many research efforts to develop collaborative visualization systems. For the sake of braviety, here, we will mention only a few prominent ones. As cited in [2], MMConf <ref> [3] </ref>, Rapport [4], and CECED [5] allow for the content-independent sharing of drawing and viewing surfaces. Shastra [2] included the ability to perform content-dependent sharing. Shastra applications are "collaboration aware" and support synchronous multiuser manipulations. CSpray uses a "spray painting metaphor for an intuitive user-interface" [6].
Reference: [4] <author> S. Ahuja, J. Ensor, and D. Horn. </author> <title> The Rapport Multimedia Conferencing System. </title> <booktitle> Proceedings ACM SIGOIS, </booktitle> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1988, </year> <month> pp.1-8. </month>
Reference-contexts: There are many research efforts to develop collaborative visualization systems. For the sake of braviety, here, we will mention only a few prominent ones. As cited in [2], MMConf [3], Rapport <ref> [4] </ref>, and CECED [5] allow for the content-independent sharing of drawing and viewing surfaces. Shastra [2] included the ability to perform content-dependent sharing. Shastra applications are "collaboration aware" and support synchronous multiuser manipulations. CSpray uses a "spray painting metaphor for an intuitive user-interface" [6].
Reference: [5] <author> E. Craighill et al. </author> <title> Environments to Enable Informal Collaborative Design Processes. </title> <booktitle> Proceedings First Workshop on Enabling Technologies for Concurrent Engineering, </booktitle> <address> Morgantown, West Virginia, </address> <year> 1992, </year> <pages> pp. 47-51. </pages>
Reference-contexts: There are many research efforts to develop collaborative visualization systems. For the sake of braviety, here, we will mention only a few prominent ones. As cited in [2], MMConf [3], Rapport [4], and CECED <ref> [5] </ref> allow for the content-independent sharing of drawing and viewing surfaces. Shastra [2] included the ability to perform content-dependent sharing. Shastra applications are "collaboration aware" and support synchronous multiuser manipulations. CSpray uses a "spray painting metaphor for an intuitive user-interface" [6].
Reference: [6] <author> Alex Pang and Craig M. Wittenbrink. </author> <title> Collaborative Visualization with CSpray. </title> <note> http://www.cse.ucsc.edu/research/slvg/cspray.html, 1997. </note>
Reference-contexts: Shastra [2] included the ability to perform content-dependent sharing. Shastra applications are "collaboration aware" and support synchronous multiuser manipulations. CSpray uses a "spray painting metaphor for an intuitive user-interface" <ref> [6] </ref>. The CSpray system decreases network traffic through incremental updates and handles shared resources through privately owned spray cans. CSpray is intended for a small group of collaborators. Wood et al. [7] describe an architecture that can offer a collaborative extension to a dataflow visualization system.
Reference: [7] <author> Jason Wood, Helen Wright, and Ken Brodlie. </author> <title> Collaborative Visualization. </title> <booktitle> Proceedings of the IEEE Visualization 97, </booktitle> <address> Octobeer 19-24, Phoenix, Arizona, </address> <year> 1997. </year>
Reference-contexts: CSpray uses a "spray painting metaphor for an intuitive user-interface" [6]. The CSpray system decreases network traffic through incremental updates and handles shared resources through privately owned spray cans. CSpray is intended for a small group of collaborators. Wood et al. <ref> [7] </ref> describe an architecture that can offer a collaborative extension to a dataflow visualization system. Northeast Parallel Architectures Center (NPAC) has developed TANGOsim [8]. TANGOsim is a collaborative environment providing message filters and event driven simulators that was written in Java to provide architecture independence.
Reference: [8] <author> Lukasz Beca, Gang Cheng, Geoffrey Fox, Tomasz Jurga, Konrad Olszewski, Marek Podgorny, Piotr Sokolowski, and Krzysztof Walczak. </author> <title> Web Technologies for Collaborative Visualization and Simulation. </title> <type> NPAC Technical Report SCCS-786, </type> <month> January, </month> <year> 1997. </year>
Reference-contexts: CSpray is intended for a small group of collaborators. Wood et al. [7] describe an architecture that can offer a collaborative extension to a dataflow visualization system. Northeast Parallel Architectures Center (NPAC) has developed TANGOsim <ref> [8] </ref>. TANGOsim is a collaborative environment providing message filters and event driven simulators that was written in Java to provide architecture independence.
Reference: [9] <author> Gary Cornell and Cay S. Horstmann. </author> <title> Core JAVA Second Edition. </title> <publisher> Sunsoft Press, </publisher> <year> 1997. </year>
Reference-contexts: Communication between users is handled using Remote Method Invocation (RMI). Due to the architecture neutrality, Java and RMI handle geographically distributed heterogeneous machines and provide a transparent view to the participants. For more information on either, the reader is referred to <ref> [9] </ref>. * Users must have the ability to communicate concurrently and in a fair manner: CEV uses the concept of maintaining both a local (or private) view and a global (or public) view of the object under consideration.
References-found: 9

