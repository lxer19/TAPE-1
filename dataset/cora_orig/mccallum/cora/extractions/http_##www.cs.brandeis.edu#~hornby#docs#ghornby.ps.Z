URL: http://www.cs.brandeis.edu/~hornby/docs/ghornby.ps.Z
Refering-URL: http://www.cs.brandeis.edu/~hornby/thesis.html
Root-URL: http://www.cs.brandeis.edu
Title: Recombination Operator, its Correlation to the Fitness Landscape and Search Performance  
Keyword: Library Release Form  
Note: Name of Author: Gregory Scott Hornby Title of Thesis: The  Degree: Masters of Science Year this Degree Granted: 1996 Permission is hereby granted to the University of Alberta Library to reproduce single copies of this thesis and to lend or sell such copies for private, scholarly or scientific research purposes only. Gregory Scott Hornby 242 S. Thulin  Date:  
Address: Alberta  St. Campbell River, B.C. Canada, V9W 2K1  
Affiliation: University of  
Abstract: The author reserves all other publication and other rights in association with the copyright in the thesis, and except as hereinbefore provided, neither the thesis nor any substantial portion thereof may be printed or otherwise reproduced in any material form whatever without the author's prior written permission. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. H. Ackley. </author> <title> A Connectionist Machine for Genetic Hillclimbing. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1987. </year>
Reference-contexts: be taken from the current parent or whether to switch to the other parent. for i = 1 to L if (random val &lt; switch probability) swap (child1, child2) child1 [i] = parent1 [i] child2 [i] = parent2 [i] Uniform crossover (UX) Uniform crossover was first used by Ackley in <ref> [1] </ref>. With this operator, for each gene, a child has equal probability of receiving the allele from either parent with the other child receiving the other allele.
Reference: [2] <author> Thomas Back. </author> <title> Evolutionary Algorithms in Theory and Practice. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1996. </year>
Reference-contexts: For a more in-depth description of EAs the reader is referred to appendix A, [16], [33], and <ref> [2] </ref>. 2.1 Definitions Evolutionary algorithms are a search and optimization technique. To search a problem domain an evolutionary algorithm processes a population. A population is a collection of individuals. <p> First we will present the recombination operators in use with ESs. Then we will review the development of phenotypic recombination operators in GAs. Evolutionary strategies have several different recombination operators ([3], <ref> [2] </ref>) For every x i 2 x x i = p a;i or p b;i discrete (2.4) x i = (p a;i + p b;i )=2 intermediate (2.5) x i = ffip a;i + (1 ffi)p b;i 0 ffi 1 generalized intermediate (2.6) x i = p b i ;i panmictic
Reference: [3] <editor> Thomas Back, Frank Hoffmeister, and Hans-Paul Schwefel. </editor> <title> A survey of evolution strategies. </title> <editor> In Richard K. Belew; Lashon B. Booker, editor, </editor> <booktitle> Proc. of the Fourth Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 2-9, </pages> <address> San Mateo, CA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [4] <author> J. E. Baker. </author> <title> Adaptive selection methods for genetic algorithms. </title> <editor> In John J. Grefen-stette, editor, </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the First International Conference on Genetic Algorithms, </booktitle> <pages> pages 101-111, </pages> <year> 1985. </year>
Reference: [5] <editor> Lashon B. Booker. </editor> <title> Recombination distributions for genetic algorithms. </title> <editor> In L. D. Whit-ley, editor, </editor> <booktitle> Foundations of Genetic Algorithms 2, </booktitle> <pages> pages 29-44. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: To tune a recombination operator to a problem's fitness landscape it is necessary to determine the features of that landscape. While there has been much research into recombination operators on genotypic encodings (see for example [11], [40] and <ref> [5] </ref>) visualizing the landscapes for genotypic EAs is very difficult. Thus we use a phenotypic representation as it is easier to identify the features of the landscape and tailor the recombination operator to them (both [38] and [27] also find the phenotypic space easier to work with).
Reference: [6] <author> A. Brindle. </author> <title> Genetic Algorithms for Function Optimization. </title> <type> Doctoral Dissertation, </type> <institution> University of Alberta, Edmonton, </institution> <year> 1981. </year>
Reference: [7] <author> D. J. Cavicchio. </author> <title> Adaptive Search using simulated evolution. </title> <type> Ph.D. Thesis, </type> <institution> University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1970. </year>
Reference: [8] <author> Joe Culberson. </author> <title> Genetic invariance: A new paradigm for genetic algorithm design. </title> <type> (Technical Report TR 92-02), </type> <institution> University of Alberta Department of Computing Science, </institution> <year> 1992. </year>
Reference: [9] <author> L. Davis. </author> <title> Hybridization and numerical representation. </title> <editor> In L. Davis, editor, </editor> <booktitle> The Handbook of Genetic Algorithms, </booktitle> <pages> pages 61-71, </pages> <address> New York, 1991. </address> <publisher> Van Nostrand Reinhold. </publisher>
Reference: [10] <author> K. A. DeJong. </author> <title> Analysis of the Behavior of a Class of Genetic Adaptive Systems. </title> <institution> Dept. Computer and Communication Sciences, University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1975. </year>
Reference: [11] <editor> Larry J. Eshelman, Richard A. Caruana, and J. David Schaffer. </editor> <title> Biases in the crossover landscape. </title> <editor> In J. David Schaffer, editor, </editor> <booktitle> Proc. of the Third Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 10-19. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: To tune a recombination operator to a problem's fitness landscape it is necessary to determine the features of that landscape. While there has been much research into recombination operators on genotypic encodings (see for example <ref> [11] </ref>, [40] and [5]) visualizing the landscapes for genotypic EAs is very difficult. Thus we use a phenotypic representation as it is easier to identify the features of the landscape and tailor the recombination operator to them (both [38] and [27] also find the phenotypic space easier to work with). <p> Since these studies 2-point crossover has become the most commonly used crossover operator in the GA community. 7 Segmented Crossover (SX) A variation on MX is segmented crossover, developed by Eshelman et al. <ref> [11] </ref>. <p> To remove the positional bias Holland ([24]) developed an inversion operator 8 that reorders the genes. This operator is no longer in common use. Shu*e crossover (developed by Eshelman et al. <ref> [11] </ref>) incorporates inversion into a crossover operator by reordering the genes before crossover takes place. One method of using the entire population to generate a new individual is bit-based simulated crossover (BSC) developed by Syswerda ([43]). <p> These tables show that recombination is not good at maintaining a small group of individuals on a peak. Recombination has also been thought of as a diversification operator whose role is to generate variation and cause the population to explore the landscape (see <ref> [11] </ref> and [36]). Thus it may not be surprising that it is not good at keeping individuals on peaks. For this reason we used elitism to keep the best individual from generation to generation.
Reference: [12] <editor> Larry J. Eshelman and J. David Schaffer. </editor> <title> Real-coded genetic algorithms and interval-schemata. </title> <editor> In L. D. Whitley, editor, </editor> <booktitle> Foundations of Genetic Algorithms 2, </booktitle> <pages> pages 187-202. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: First we mention some results where non-traditional encodings and operators have improved the performance of the EA. This shows that as well as using different operators another way of tuning an EA to a problem is to change the encoding. Next Eshelman and Schaffer's work <ref> [12] </ref> is described. The two directionally tuned operators used in this thesis are modifications of their BLX-ff 11 operator and this thesis can be though of as an extension of their study of this operator. <p> In [38], Radcliffe argues that the conventional binary operators and encoding are ill-suited to many problems. Comparisons between EAs on real-valued functions have generally shown the algorithm using the real-valued encoding gives better results (see [27], [50] and <ref> [12] </ref>). Graph problems, such as the TSP, are another class of problems for which non-binary encodings have been found to work better (for example Whitley et al.'s genetic edge recombination [48], Laszewski's partition swapping crossover [44], and Homaifar et al.'s adjacency matrix representation and matrix crossover [25]).
Reference: [13] <author> D. B. Fogel and J. W. Atmar. </author> <title> Comparing genetic operators with gaussian mutations in simulated evolutionary processes using linear systems. </title> <journal> In Biological Cybernetics, </journal> <volume> volume 63, </volume> <pages> pages 111-114. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: It is thought that the power of the recombination operator comes from its communication between individuals ([11], [40], and [28]). It is not settled that recombination is better than mutation. The evolutionary programming community uses strictly mutation with no recombination. In <ref> [13] </ref>, Fogel and Atmar argue that mutation is the more powerful operator. One way of changing the EA to better suit a problem is to change the operators. Over the years many different recombination operators have been developed and used. <p> With panmictic recombination the entire population's gene pool is available for the creation of each new individual. Early GA recombination operators for real-valued encodings did not modify the genes (also called parameters) but exchanged them (for example <ref> [13] </ref>) similar to discrete recom 9 bination, equation 2.4. In effect they operated like genotypic recombination operators where crossover points could fall only on parameter boundaries.
Reference: [14] <author> L. J. Fogel, A. J. Owens, and M. J. Walsh. </author> <title> Artificial Intelligence Through Simulated Evolution. </title> <publisher> Wiley Publishing, </publisher> <address> New York, </address> <year> 1966. </year> <month> 81 </month>
Reference-contexts: For example there are a large number of recombination operators for the traveling salesman problem. Other examples of phenotypic encodings are where the individuals are programs, such as in genetic programming, [30], or finite state machines as in evolutionary programming, <ref> [14] </ref> 2.3 Related Research This section reviews some research related to this thesis. First we mention some results where non-traditional encodings and operators have improved the performance of the EA.
Reference: [15] <editor> Stephanie Forrest and Melanie Mitchell. </editor> <title> Relative building-block fitness and the building-block hypothesis. </title> <editor> In L. D. Whitley, editor, </editor> <booktitle> Foundations of Genetic Algorithms 2, </booktitle> <pages> pages 109-126. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: One class of functions designed explicitly to examine an EA's ability to optimize independent genes is Forrest and Mitchell's royal road functions <ref> [15] </ref>. The first such function, R1, is for binary individuals of length 64. This function has 8 building blocks, one for each of the sets of genes: 1-8, 9-16, 17-24, . . . , 57-64.
Reference: [16] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Don Mills, </address> <year> 1989. </year>
Reference-contexts: Chapter 6 provides a conclusion and gives suggestions for future work. 3 Chapter 2 Background In this chapter we review the terminology of the field, recombination operators and research related to this thesis. For a more in-depth description of EAs the reader is referred to appendix A, <ref> [16] </ref>, [33], and [2]. 2.1 Definitions Evolutionary algorithms are a search and optimization technique. To search a problem domain an evolutionary algorithm processes a population. A population is a collection of individuals. <p> Some researchers (see [24] and <ref> [16] </ref>) believe it to be the more powerful search operator. It is thought that the power of the recombination operator comes from its communication between individuals ([11], [40], and [28]). It is not settled that recombination is better than mutation. The evolutionary programming community uses strictly mutation with no recombination. <p> In our comparison we vary the radius of the high peak and the radii of the short peaks. When the radius of the high peak is very small the landscape becomes a needle-in-a-haystack problem (NIAH problem, <ref> [16] </ref>) so we expect R IE to converge to the short peaks on all three landscapes. As the radius of the high peak increases it becomes easier to find so the EA's performance should increase.
Reference: [17] <editor> David E. Goldberg and Kalyanmoy Deb. </editor> <title> A comparative analysis of selection schemes used in genetic algorithms. </title> <editor> In G. J. E. Rawlins, editor, </editor> <booktitle> Foundations of Genetic Algorithms, </booktitle> <pages> pages 69-93. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [18] <author> David E. Goldberg and Jon Richardson. </author> <title> Genetic algorithms with sharing for multimodal function optimization. </title> <editor> In John J. Grefenstette, editor, </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pages 41-49. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1987. </year>
Reference: [19] <author> David E. Goldberg and Philip Segrest. </author> <title> Finite markov chain analysis of genetic algorithms. </title> <editor> In John J. Grefenstette, editor, </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pages 1-8. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1987. </year>
Reference: [20] <author> David Perry Greene and Stephen F. Smith. </author> <title> A genetic system for learning models of consumer choice. </title> <editor> In John J. Grefenstette, editor, </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pages 217-223. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1987. </year>
Reference: [21] <author> J. J. Grefenstette. </author> <title> A User's Guide to GENESIS. </title> <type> (Technical Report CS 83-11), </type> <institution> Computer Science Department, Vanderbilt University, Nashville, TN, </institution> <year> 1983. </year>
Reference: [22] <author> Joerg Heitkoetter and David Beasley, </author> <title> editors. The Hitch-Hiker's Guide to Evolutionary Computation: A list of Frequently Asked Questions (FAQ). USENET: </title> <journal> comp.ai.genetic, </journal> <note> Available via anonymous FTP from rtfm.mit.edu:/pub/usenet/news.answers/ai-faq/genetic/, </note> <year> 1996. </year>
Reference: [23] <author> M. R. Hilliard and G. E. Liepins. </author> <title> A classification-based system for discovering scheduling heuristics. </title> <editor> In John J. Grefenstette, editor, </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pages 231-235. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1987. </year>
Reference: [24] <author> J. H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> University of Michigan Press, </publisher> <address> Ann Arbor, </address> <year> 1975. </year>
Reference-contexts: Some researchers (see <ref> [24] </ref> and [16]) believe it to be the more powerful search operator. It is thought that the power of the recombination operator comes from its communication between individuals ([11], [40], and [28]). It is not settled that recombination is better than mutation.
Reference: [25] <author> Abdollah Homaifar, Shanguchuan Guan, and Gunar E. Liepins. </author> <title> A new approach on the traveling salesman problem by genetic algorithms. </title> <editor> In S. Forrest, editor, </editor> <booktitle> Proc. of the Fifth Inter. Conf. on Genetic Algorithms, </booktitle> <pages> pages 460-466, </pages> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Graph problems, such as the TSP, are another class of problems for which non-binary encodings have been found to work better (for example Whitley et al.'s genetic edge recombination [48], Laszewski's partition swapping crossover [44], and Homaifar et al.'s adjacency matrix representation and matrix crossover <ref> [25] </ref>). Other classes of problems for which alternative operators and encodings are used include evolving computer code and neural network trees (both can use Koza's sub-tree swap [30]).
Reference: [26] <author> Wilfried Jakob, Martina Gorges-Schleuter, and Christian Blume. </author> <title> Application of genetic algorithms to task planning and learning. Parallel Problem Solving from Nature, </title> <booktitle> 2, </booktitle> <pages> pages 291-300, </pages> <year> 1992. </year>
Reference: [27] <author> Cezary Z. Janikow and Zbigniew Michalewicz. </author> <title> An experimental comparison of binary and floating point representations in genetic algorithms. </title> <editor> In Richard K. Belew; Lashon B. Booker, editor, </editor> <booktitle> Proc. of the Fourth Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 31-36, </pages> <address> San Mateo, CA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Thus we use a phenotypic representation as it is easier to identify the features of the landscape and tailor the recombination operator to them (both [38] and <ref> [27] </ref> also find the phenotypic space easier to work with). <p> In [38], Radcliffe argues that the conventional binary operators and encoding are ill-suited to many problems. Comparisons between EAs on real-valued functions have generally shown the algorithm using the real-valued encoding gives better results (see <ref> [27] </ref>, [50] and [12]). Graph problems, such as the TSP, are another class of problems for which non-binary encodings have been found to work better (for example Whitley et al.'s genetic edge recombination [48], Laszewski's partition swapping crossover [44], and Homaifar et al.'s adjacency matrix representation and matrix crossover [25]). <p> Getting better performance with an operator that has been modified for a problem has been reported in several papers (including <ref> [27] </ref>, [45] and [38]). In this section we reviewed work on improving EA performance. Initial work showed that by tuning the EA (either by choice of representation or variation operators) better performance on a given problem or class of problems could be achieved.
Reference: [28] <author> Terry Jones. </author> <title> Crossover, macromutation, and population-based search. </title> <editor> In Larry J. Eshelman, editor, </editor> <booktitle> Proc. of the Sixth Inter. Conf. on Genetic Algorithms, </booktitle> <pages> pages 73-80, </pages> <address> San Francisco, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Some researchers (see [24] and [16]) believe it to be the more powerful search operator. It is thought that the power of the recombination operator comes from its communication between individuals ([11], [40], and <ref> [28] </ref>). It is not settled that recombination is better than mutation. The evolutionary programming community uses strictly mutation with no recombination. In [13], Fogel and Atmar argue that mutation is the more powerful operator. One way of changing the EA to better suit a problem is to change the operators.
Reference: [29] <author> Terry Jones. </author> <title> Evolutionary Algorithms, Fitness Landscapes and Search. </title> <type> Ph.D. Thesis, </type> <institution> University of New Mexico, </institution> <year> 1995. </year> <month> 82 </month>
Reference-contexts: One test to see if the recombination operator is doing more than blindly moving the population about the landscape is the headless chicken test. The headless chicken test was developed by Jones <ref> [29] </ref> to see if a given recombination operator is using information from the two parent individuals to create better offspring than would be created by a large mutation. Jones' headless chicken operator, R HC , uses the recombination operator which it is compared against.
Reference: [30] <author> J. R. Koza. </author> <title> Genetic Programming: on the programming of computers by means of natural selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1992. </year>
Reference-contexts: In addition to these recombination operators there are ones created for specific problems or encodings. For example there are a large number of recombination operators for the traveling salesman problem. Other examples of phenotypic encodings are where the individuals are programs, such as in genetic programming, <ref> [30] </ref>, or finite state machines as in evolutionary programming, [14] 2.3 Related Research This section reviews some research related to this thesis. First we mention some results where non-traditional encodings and operators have improved the performance of the EA. <p> Other classes of problems for which alternative operators and encodings are used include evolving computer code and neural network trees (both can use Koza's sub-tree swap <ref> [30] </ref>). Each of these operators (and encodings) has been tailored for a specific class of problems, each with its own assumptions about the problem space. In tailoring recombination operators to specific problems it is better to work in the phenotype space than the genotype space.
Reference: [31] <author> S. W. Mahfoud. </author> <title> Crowding and preselection revisited. </title> <editor> In R. Manner and B. Manderick, editors, </editor> <booktitle> Parallel Problem Solving from Nature, </booktitle> <volume> 2, </volume> <pages> pages 27-36. </pages> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference: [32] <author> M. L. Mauldin. </author> <title> Maintaining diversity in genetic search. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 247-250, </pages> <year> 1984. </year>
Reference: [33] <author> Zbigniew Michalewicz. </author> <title> Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Chapter 6 provides a conclusion and gives suggestions for future work. 3 Chapter 2 Background In this chapter we review the terminology of the field, recombination operators and research related to this thesis. For a more in-depth description of EAs the reader is referred to appendix A, [16], <ref> [33] </ref>, and [2]. 2.1 Definitions Evolutionary algorithms are a search and optimization technique. To search a problem domain an evolutionary algorithm processes a population. A population is a collection of individuals.
Reference: [34] <author> Heinz Muhlenbein. </author> <title> Evolution in time and space-the parallel genetic algorithm. </title> <editor> In G. J. E. Rawlins, editor, </editor> <booktitle> Foundations of Genetic Algorithms, </booktitle> <pages> pages 316-337. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [35] <author> Chrisila C. Pettey, Michael R. Leuze, and John J. Grefenstette. </author> <title> A parallel genetic algorithm. </title> <editor> In John J. Grefenstette, editor, </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pages 155-161. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1987. </year>
Reference: [36] <author> Xiaofeng Qi and Francesco Palmieri. </author> <title> The diversification role of crossover in the genetic algorithms. </title> <editor> In S. Forrest, editor, </editor> <booktitle> Proc. of the Fifth Inter. Conf. on Genetic Algorithms, </booktitle> <pages> pages 132-137, </pages> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: These tables show that recombination is not good at maintaining a small group of individuals on a peak. Recombination has also been thought of as a diversification operator whose role is to generate variation and cause the population to explore the landscape (see [11] and <ref> [36] </ref>). Thus it may not be surprising that it is not good at keeping individuals on peaks. For this reason we used elitism to keep the best individual from generation to generation.
Reference: [37] <author> N. J. Radcliffe. </author> <title> Genetic Neural Networks on MIMD Computers. </title> <publisher> Ph. </publisher> <address> D. </address> <institution> Dissertation, Dept. of Theoretical Physics, University of Edinburgh, Edinburgh, UK., </institution> <year> 1990. </year>
Reference: [38] <author> Nicholas J. Radcliffe. </author> <title> Non-linear genetic representations. </title> <editor> In R. Manner and B. Mand-erick, editors, </editor> <booktitle> Parallel Problem Solving from Nature, </booktitle> <volume> 2, </volume> <pages> pages 259-268. </pages> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: Thus we use a phenotypic representation as it is easier to identify the features of the landscape and tailor the recombination operator to them (both <ref> [38] </ref> and [27] also find the phenotypic space easier to work with). <p> Even though the majority of work in EAs has used a binary encoding and operators there are those who have used non-binary representations with non-traditional operators and found them to work better. In <ref> [38] </ref>, Radcliffe argues that the conventional binary operators and encoding are ill-suited to many problems. Comparisons between EAs on real-valued functions have generally shown the algorithm using the real-valued encoding gives better results (see [27], [50] and [12]). <p> Getting better performance with an operator that has been modified for a problem has been reported in several papers (including [27], [45] and <ref> [38] </ref>). In this section we reviewed work on improving EA performance. Initial work showed that by tuning the EA (either by choice of representation or variation operators) better performance on a given problem or class of problems could be achieved.
Reference: [39] <editor> J. David Schaffer and Larry J. Eshelman. </editor> <title> On crossover as an evolutionarily viable strategy. </title> <editor> In Richard K. Belew; Lashon B. Booker, editor, </editor> <booktitle> Proc. of the Fourth Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 61-68, </pages> <address> San Mateo, CA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This landscape has no ridge of peaks to move along, just the peak with the global optima. 3.2.1 Royal Road Landscape It is generally believed that EAs and recombination work best when the relation between the genes is linear ([28], [40] and <ref> [39] </ref>). One class of functions designed explicitly to examine an EA's ability to optimize independent genes is Forrest and Mitchell's royal road functions [15]. The first such function, R1, is for binary individuals of length 64.
Reference: [40] <author> William M. Spears. </author> <title> Crossover or mutation? In L. </title> <editor> D. Whitley, editor, </editor> <booktitle> Foundations of Genetic Algorithms 2, </booktitle> <pages> pages 221-237. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: To tune a recombination operator to a problem's fitness landscape it is necessary to determine the features of that landscape. While there has been much research into recombination operators on genotypic encodings (see for example [11], <ref> [40] </ref> and [5]) visualizing the landscapes for genotypic EAs is very difficult. Thus we use a phenotypic representation as it is easier to identify the features of the landscape and tailor the recombination operator to them (both [38] and [27] also find the phenotypic space easier to work with). <p> Some researchers (see [24] and [16]) believe it to be the more powerful search operator. It is thought that the power of the recombination operator comes from its communication between individuals ([11], <ref> [40] </ref>, and [28]). It is not settled that recombination is better than mutation. The evolutionary programming community uses strictly mutation with no recombination. In [13], Fogel and Atmar argue that mutation is the more powerful operator. <p> The second control landscape is the one-peak landscape. This landscape has no ridge of peaks to move along, just the peak with the global optima. 3.2.1 Royal Road Landscape It is generally believed that EAs and recombination work best when the relation between the genes is linear ([28], <ref> [40] </ref> and [39]). One class of functions designed explicitly to examine an EA's ability to optimize independent genes is Forrest and Mitchell's royal road functions [15]. The first such function, R1, is for binary individuals of length 64.
Reference: [41] <author> William M. Spears and Kenneth A. De Jong. </author> <title> On the virtues of parameterized uniform crossover. </title> <editor> In Richard K. Belew; Lashon B. Booker, editor, </editor> <booktitle> Proc. of the Fourth Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 230-236, </pages> <address> San Mateo, CA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: longer UX is better at combining schema. 8i; c1 i = p1 i ; ff i = 0 c2 i = p2 i ; ff i = 0 ff i = f0j1g (2.2) A more general version of UX, parameterized uniform crossover (PUX), was developed by Spears and De Jong, <ref> [41] </ref>.
Reference: [42] <author> Gilbert Syswerda. </author> <title> Uniform crossover in genetic algorithms. </title> <editor> In J. David Schaffer, editor, </editor> <booktitle> Proc. of the Third Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 2-9. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference: [43] <author> Gilbert Syswerda. </author> <title> Simulated crossover in genetic algorithms. </title> <editor> In L. D. Whitley, editor, </editor> <booktitle> Foundations of Genetic Algorithms 2, </booktitle> <pages> pages 239-255. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference: [44] <author> Gregor von Laszewski. </author> <title> Intelligent structural operators for the k-way graph partitioning problem. </title> <editor> In Richard K. Belew; Lashon B. Booker, editor, </editor> <booktitle> Proc. of the Fourth Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 45-52, </pages> <address> San Mateo, CA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Graph problems, such as the TSP, are another class of problems for which non-binary encodings have been found to work better (for example Whitley et al.'s genetic edge recombination [48], Laszewski's partition swapping crossover <ref> [44] </ref>, and Homaifar et al.'s adjacency matrix representation and matrix crossover [25]). Other classes of problems for which alternative operators and encodings are used include evolving computer code and neural network trees (both can use Koza's sub-tree swap [30]).
Reference: [45] <author> Michael D. Vose and Gunar E. Liepins. </author> <title> Schema disruption. </title> <editor> In Richard K. Belew; Lashon B. Booker, editor, </editor> <booktitle> Proc. of the Fourth Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 237-242, </pages> <address> San Mateo, CA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Getting better performance with an operator that has been modified for a problem has been reported in several papers (including [27], <ref> [45] </ref> and [38]). In this section we reviewed work on improving EA performance. Initial work showed that by tuning the EA (either by choice of representation or variation operators) better performance on a given problem or class of problems could be achieved.
Reference: [46] <author> D. Whitley and J. Kauth. </author> <title> Genitor: A Different Genetic Algorithm. </title> <type> Technical Report CS 88-101, </type> <institution> Colorado State University, </institution> <year> 1988. </year> <month> 83 </month>
Reference: [47] <author> Darrell Whitley. </author> <title> The genitor algorithm and selection pressure: Why rank-based allo-cation of reproductive trials is best. </title> <editor> In J. David Schaffer, editor, </editor> <booktitle> Proc. of the Third Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 116-121. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference: [48] <author> Darrell Whitley, Timothy Starkweather, and D'Ann Fuquay. </author> <title> Scheduling problems and traveling salesmen: The genetic edge recombination operator. </title> <editor> In J. David Schaffer, editor, </editor> <booktitle> Proc. of the Third Int. Conf. on Genetic Algorithms, </booktitle> <pages> pages 133-140. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: Graph problems, such as the TSP, are another class of problems for which non-binary encodings have been found to work better (for example Whitley et al.'s genetic edge recombination <ref> [48] </ref>, Laszewski's partition swapping crossover [44], and Homaifar et al.'s adjacency matrix representation and matrix crossover [25]). Other classes of problems for which alternative operators and encodings are used include evolving computer code and neural network trees (both can use Koza's sub-tree swap [30]).
Reference: [49] <author> David H. Wolpert and William G. Macready. </author> <title> No free lunch theorems for search. </title> <publisher> ftp://ftp.santafe.edu/pub/wgm/nfl.ps. </publisher>
Reference-contexts: It is then often concluded that this operator is universally better. This belief that one recombination operator is universally better than another is a common misconception in the field of evolutionary algorithms. Under the appropriate model the No Free Lunch theorems for search <ref> [49] </ref> state that when averaged over the set of all functions all algorithms perform equally well (this is more formally described in section 2.3). To achieve better than average performance a search algorithm must incorporate some knowledge about the problem it is searching. <p> In this latter case shifting the locations of the local and global optima reduces the performance of the binary encoded 12 EAs to that of BLX-0.5. In <ref> [49] </ref> Wolpert and Macready present what they call the No Free Lunch theorems for search, or NFL theorems. The essence of their paper is that all search algorithms perform equally well when averaged over a uniform distribution of all functions.
Reference: [50] <author> Alden H. Wright. </author> <title> Genetic algorithms for real parameter optimization. </title> <editor> In G. J. E. Rawlins, editor, </editor> <booktitle> Foundations of Genetic Algorithms, </booktitle> <pages> pages 205-218. </pages> <publisher> Morgan Kauf-mann, </publisher> <year> 1991. </year>
Reference-contexts: When both parents are on the same side of a peak then extrapolating beyond one parent can lead to the global optima. The final two operators we look at have this capability. parents, p 1 and p 2 . The previous two operators work on each gene independently. In <ref> [50] </ref> Wright examined recombination operators for a real-valued encoding and developed one that treats individuals as points in an euclidean space. He developed linear crossover to get around the problem where strict exchange of alleles produced individuals of lower fitness (figure 2.4). <p> In [38], Radcliffe argues that the conventional binary operators and encoding are ill-suited to many problems. Comparisons between EAs on real-valued functions have generally shown the algorithm using the real-valued encoding gives better results (see [27], <ref> [50] </ref> and [12]). Graph problems, such as the TSP, are another class of problems for which non-binary encodings have been found to work better (for example Whitley et al.'s genetic edge recombination [48], Laszewski's partition swapping crossover [44], and Homaifar et al.'s adjacency matrix representation and matrix crossover [25]).
Reference: [51] <author> Sewall Wright. </author> <title> The roles of mutation, inbreeding, crossbreeding and selection in evolution. </title> <editor> In Donald F. Jones, editor, </editor> <booktitle> Proc. 6th Intl. Cong. of Genetics, </booktitle> <pages> pages 356-366, </pages> <address> Brooklyn, New York, </address> <year> 1932. </year> <note> Brooklyn Botanic Garden. </note>
Reference: [52] <author> Byonng-Tak Zhang and Heinz Muhlenbein. </author> <title> Genetic programming of minimal neural nets using occam's razor. </title> <editor> In S. Forrest, editor, </editor> <booktitle> Proc. of the Fifth Inter. Conf. on Genetic Algorithms, </booktitle> <pages> pages 291-300, </pages> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher> <pages> 84 </pages>
References-found: 52

