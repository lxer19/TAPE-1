URL: http://www.cs.huji.ac.il/papers/IP/median-filter-pami.ps.gz
Refering-URL: http://www.cs.huji.ac.il/papers/IP/index.html
Root-URL: 
Title: Computing 2-Dimensional Min, Median and Max Filters  
Author: Joseph Gil and Michael Werman 
Date: October 7, 1996  
Address: 91904 Jerusalem, Israel  
Affiliation: Dept. of Computer Science The Hebrew University of Jerusalem  
Abstract: Fast algorithms to compute min, median, max or any other order statistic filter transforms are described and lower bounds for their computation are shown. The algorithms take constant time per pixel to compute min or max filters and polylog time per pixel, in the size of the filter, to compute the median filter.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.V. Aho, J.E. Hopcroft, and J.D. Ullman. </author> <title> The design and Analysis of Computer Algorithms. </title> <publisher> Addison Wesley, </publisher> <year> 1974. </year>
Reference-contexts: Our algorithm will produces the p 2 median transform values in O (p 2 log 2 p) time, which is O (log 2 p) time per element. As a building block the algorithm uses a balanced binary search tree (BBST) scheme. Such a scheme could be AVL <ref> [1] </ref>, 2-3 trees [1] or even, since 5 only total time is of concern, self-adjusting binary search trees [5]. <p> As a building block the algorithm uses a balanced binary search tree (BBST) scheme. Such a scheme could be AVL <ref> [1] </ref>, 2-3 trees [1] or even, since 5 only total time is of concern, self-adjusting binary search trees [5].
Reference: [2] <author> J. Gil, W. Steiger, and A. Wigderson. </author> <note> Running Medians. To be published. </note>
Reference-contexts: We show an O (log p) lower bound for computing the median filter. The one dimensional median filter was treated in <ref> [2] </ref> for which they gave the tight upper and lower bound of O (log p) for the case of the shape being a segment of length p.
Reference: [3] <author> T.S. Huang. </author> <title> Two-dimensional Digital Signal Procesing II: Transfoms and Median Filters. </title> <publisher> Springer-Verlag, </publisher> <year> 1981. </year>
Reference-contexts: 1 Introduction Order filters are widely used as an effective tool for reducing certain types of noise and periodic interference patterns in signals and images without severely degrading the signal <ref> [3] </ref>. One of the more useful properties of the median filter is that it many situations it doesn't blur edges and monotone changes in the signal but it cleans up sporadic noise. <p> The one dimensional median filter was treated in [2] for which they gave the tight upper and lower bound of O (log p) for the case of the shape being a segment of length p. Previous known algorithms for computing the 2-D median filter <ref> [3] </ref> took either O (p 2 ) or O (ph), h being the number of grey levels in the image, time per element.
Reference: [4] <author> J. Serra. </author> <title> Image Analysis and Mathematical Morphology. </title> <publisher> Academic, </publisher> <year> 1982. </year>
Reference-contexts: One of the more useful properties of the median filter is that it many situations it doesn't blur edges and monotone changes in the signal but it cleans up sporadic noise. The min and max filters are the primitive operations for all of the so called morphological filters <ref> [4, 6] </ref>. In this paper we describe fast algorithms to compute min, median, max or any other order statistic filter transforms and show lower bounds for their computation.
Reference: [5] <author> D.D. Sleator and R.E. Tarjan. </author> <title> Self adjusting binary search trees. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 32 </volume> <pages> 652-686, </pages> <year> 1985. </year>
Reference-contexts: As a building block the algorithm uses a balanced binary search tree (BBST) scheme. Such a scheme could be AVL [1], 2-3 trees [1] or even, since 5 only total time is of concern, self-adjusting binary search trees <ref> [5] </ref>. Note that if the size of each sub-tree is stored in the node defining it, then the median of the set represented in the BBST can be found in logarithmic time, without affecting the logarithmic time behavior of the other tree operations.
Reference: [6] <author> M. Werman and S. Peleg. </author> <title> Min max operators in texture analysis. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-7:730-733, </volume> <month> November </month> <year> 1985. </year> <month> 7 </month>
Reference-contexts: One of the more useful properties of the median filter is that it many situations it doesn't blur edges and monotone changes in the signal but it cleans up sporadic noise. The min and max filters are the primitive operations for all of the so called morphological filters <ref> [4, 6] </ref>. In this paper we describe fast algorithms to compute min, median, max or any other order statistic filter transforms and show lower bounds for their computation.
References-found: 6

