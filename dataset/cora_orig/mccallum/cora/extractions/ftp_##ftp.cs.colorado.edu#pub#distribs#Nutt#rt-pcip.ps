URL: ftp://ftp.cs.colorado.edu/pub/distribs/Nutt/rt-pcip.ps
Refering-URL: http://www.cs.colorado.edu/~nutt/Home.html
Root-URL: http://www.cs.colorado.edu
Email: siewerts@rodin.colorado.edu  
Title: Real-Time Parametrically Controlled InKernel Pipelines Work-In-Progress Abstract InKernel Pipe with Filter Stage and Device Interface
Author: Sam Siewert, Gary Nutt, and Marty Humphrey* HW SW 
Note: Figure 1:  Interface  
Date: 1.0 Introduction  
Address: Boulder, CO 80309-0430  
Affiliation: *Department of Computer Science and Engineering, University of Colorado at Denver, Denver, CO  Department of Computer Science University of Colorado,  
Abstract: The RT-PCIP (Real-Time Parametrically Controlled InKernel Pipeline) mechanism introduced in this paper is intended to provide time-critical applications with quantifiable assurance of system response using a simple EPA (Execution-Performance Agent) interface to the deadline monotonic scheduling algorithm. In addition, the RT-PCIP EPA provides a system call and signal interface which allows applications to monitor and control pipeline real-time performance online, and therefore significantly extends existing work on inkernel pipelines. The set of applications requiring this type of performance negotiation support from an operating system is increasing with the emergence of virtual reality environments [Nu95], continuous media [Co94], multimedia [Ste95], digital control [Tr95], and shared-control automation [Bru93][SiNu96]. The RT-PCIP mechanism and EPA are being implemented in the RT-Mach microkernel, and will be tested on a UAV (Unoccupied Air-Vehicle) testbed incorporating continuous media, digital control, and shared-control pipelines. Traditionally, if an application requires service time assurances, there are three approaches: best-effort systems, hard real-time systems, and application specific embedded systems. Best-effort systems rely upon adequate resources always being available whenever an arbitrary task requests service, and can make no guarantees when they are even temporarily overloaded. Hard real-time systems require that the application provide resource bounds (e.g., the "Worst-Case Execution Time" or WCET) so that the operating system can mathematically check schedulability and admit only tasks whose complete execution can be guaranteed by hard deadlines. Embedded systems typically include cooperative tasks implemented in a single protection domain. Each task is designed with full knowledge of all other tasks and resource demands; it is difficult to change or scale embedded software. These three approaches do not provide controllable real-time reliability or ability to make online tradeoffs. 
Abstract-found: 1
Intro-found: 0
Reference: [Au93] <author> Audsley, N., Burns, A., and Wellings, A., </author> <title> "Deadline Monotonic Scheduling Theory and Application", </title> <journal> Control Engineering Practice, </journal> <volume> Vol. 1, </volume> <pages> pp 71-8, </pages> <year> 1993. </year>
Reference-contexts: The well established DM scheduling policy and schedulability test are used due to their ability to handle execution where deadline does not equal period <ref> [Au93] </ref>. This may often be true for the applications to be supported. One major drawback of the DM scheduling policy is that to provide a guarantee, the WCET of each pipeline stage thread must be known along with the release period. <p> Similarly, probability P (C high &lt; D term ) 0.9998. Likewise thread two has respective deadline confidences P (C low soft ) high &lt; D term ) 0.9998. Based on sufficient, but not necessary schedulability tests for DM <ref> [Au93] </ref> with EPA execution time confidence intervals inputs rather than just worst-case execution time, the schedulability with desired confidence in deadlines can be derived from the execution time confidence intervals, as shown below.
Reference: [Be95] <author> Bershad, B., Fiuczynski, M., Savage, S., Becker, D., et al., </author> <title> "Extensibility, Safety and Performance in the SPIN Operating System", Association for Computing Machinery, </title> <type> SIGOPS '95, </type> <institution> Colorado, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: However, the RT-PCIP facility allows "untrusted" code to be executed in the kernel protection domain. We have focused on the functionality of architecture, relying on the existence of other technology such as that used in the SPIN operating system <ref> [Be95] </ref> to provide compile time safety checking.
Reference: [Bu91] <author> Burns, A., </author> <title> "Scheduling Hard Real-Time Systems: A Review", </title> <journal> Software Engineering Journal, </journal> <month> May </month> <year> 1991. </year>
Reference-contexts: employ and control these pipelines for guaranteed or reliable execution performance. 2.0 EPA-DM Approach to Thread Scheduling The concept of EPA-DM thread scheduling for pipeline stages is based upon a definition of soft and termination deadlines in terms of utility and potential damage to the system controlled by the application <ref> [Bu91] </ref>. 3 The concept is best understood by examining Figure 2, which shows response time utility and damage in relation to soft and termination deadlines as well as early responses.
Reference: [Bro95] <author> Brooks, R., </author> <title> "Intelligence Without Reason", </title> <editor> In Steels, L. and Brooks, R., eds., </editor> <title> The Artificial Life Route to Artificial Intelligence: Building Embodied, Situated Agents, </title> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, New Jersey, </address> <year> 1995. </year>
Reference-contexts: Finally, many real-time semi-autonomous and shared control projects are in progress [Bru93] [Fle95], including applications where occasional missed deadlines would not be catastrophic [Pa96] <ref> [Bro95] </ref>. 5.0 Conclusion Experiments will be implemented using both the RT-PCIP and user-level applications to compare performance.
Reference: [Bru93] <author> Brunner, B., Hirzinger, G., Landzettel, K., and Heindl, J., </author> <title> Multisensory shared autonomy and tele-sensor-programming - key issues in the space robot technology experiment ROTEX, </title> <booktitle> IROS 93 International Conference on Intelligent Robots and Systems, </booktitle> <address> Yokohama, Japan, </address> <month> July, </month> <year> 1993. </year>
Reference-contexts: Research on process control requirements for digital control indicate that parametric control of a number of kernel pipes within a general operating system environment would be useful for sophisticated industrial applications [Tr95]. Finally, many real-time semi-autonomous and shared control projects are in progress <ref> [Bru93] </ref> [Fle95], including applications where occasional missed deadlines would not be catastrophic [Pa96] [Bro95]. 5.0 Conclusion Experiments will be implemented using both the RT-PCIP and user-level applications to compare performance.
Reference: [Co94] <author> Coulson, G., Blair, G., and Robin, P., </author> <title> "Micro-kernel Support for Continuous Media in Distributed Systems", </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <pages> pp. 1323-1341, </pages> <address> Number 26, </address> <year> 1994. </year>
Reference-contexts: The set of applications requiring this type of performance negotiation support from an operating system is increasing with the emergence of virtual reality environments [Nu95], continuous media <ref> [Co94] </ref>, multimedia [Ste95], digital control [Tr95], and shared-control automation [Bru93][SiNu96]. The RT-PCIP mechanism and EPA are being implemented in the RT-Mach microkernel, and will be tested on a UAV (Unoccupied Air-Vehicle) testbed incorporating continuous media, digital control, and shared-control pipelines. <p> Finally, the operator will be provided with continuous media video from onboard QuickCam output piped to a ground display through WaveLAN radio frequency point-to-point transport . 6 4.0 Related Work A number of pipeline mechanisms for continuous media have been developed [Gov91], <ref> [Co94] </ref>, [Fal94]. However, most common implementations include application-level processing with device buffers mapped from kernel space into userspace rather than an inkernel mechanism for executing user code loaded into kernel space. Likewise, these memory-mapped implementations also employ user-level threads with split-level scheduling or bindings of user threads onto kernel threads.
Reference: [Fal94] <author> Fall, K., and Pasquale, J., </author> <title> "Improving Continuous-Media Playback Performance With InKernel Data Paths", </title> <booktitle> Proceedings of the IEEE International Conference on Multimedia Computing and Systems (ICMCS), </booktitle> <pages> pp. 100-109, </pages> <address> Boston, MA, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: This basic inkernel pipeline design is very similar to the splice mechanism <ref> [Fal94] </ref>, but the EPA and scheduling control are much different. Each RT-PCIP module, shown in Figure 1, is implemented as a kernel thread configured and controlled through the EPA and scheduled by the DM (Deadline Monotonic) algorithm. The controlling application executes as a normal user thread. <p> Finally, the operator will be provided with continuous media video from onboard QuickCam output piped to a ground display through WaveLAN radio frequency point-to-point transport . 6 4.0 Related Work A number of pipeline mechanisms for continuous media have been developed [Gov91], [Co94], <ref> [Fal94] </ref>. However, most common implementations include application-level processing with device buffers mapped from kernel space into userspace rather than an inkernel mechanism for executing user code loaded into kernel space. Likewise, these memory-mapped implementations also employ user-level threads with split-level scheduling or bindings of user threads onto kernel threads. <p> The splice mechanism is most relevant since it operates inkernel using loadable modules or simple streaming as the RT-PCIP will, and was shown to have up to a 55% performance improvement <ref> [Fal94] </ref>. However, to our knowledge, splice does not provide a configuration and online control interface like the EPA. Many examples of periodic hard real-time digital control streams exist [Kl94], but no general mechanism for reliable real-time control of pipelines is known to exist.
Reference: [Fle95] <author> Fleischer, S., Rock, S., Lee, M., </author> <title> "Underwater Vehicle Control from a Virtual Environment Interface", Association for Computing Machinery, 1995 Symposium on Interactive 3D Graphics, </title> <address> Monterey CA, </address> <year> 1995. </year>
Reference-contexts: Research on process control requirements for digital control indicate that parametric control of a number of kernel pipes within a general operating system environment would be useful for sophisticated industrial applications [Tr95]. Finally, many real-time semi-autonomous and shared control projects are in progress [Bru93] <ref> [Fle95] </ref>, including applications where occasional missed deadlines would not be catastrophic [Pa96] [Bro95]. 5.0 Conclusion Experiments will be implemented using both the RT-PCIP and user-level applications to compare performance.
Reference: [Gov91] <author> Govindan, R., and Anderson, D., </author> <title> "Scheduling and IPC Mechanisms for Continuous Media", </title> <booktitle> 13th ACM Symposium on Operating Systems Principles, </booktitle> <year> 1991. </year>
Reference-contexts: Finally, the operator will be provided with continuous media video from onboard QuickCam output piped to a ground display through WaveLAN radio frequency point-to-point transport . 6 4.0 Related Work A number of pipeline mechanisms for continuous media have been developed <ref> [Gov91] </ref>, [Co94], [Fal94]. However, most common implementations include application-level processing with device buffers mapped from kernel space into userspace rather than an inkernel mechanism for executing user code loaded into kernel space.
Reference: [Kl94] <author> Klein, M., Lehoczky, J., and Rajkumar, R., </author> <title> Rate-Monotonic Analysis for Real-Time Industrial Computing, </title> <booktitle> IEEE Computer, </booktitle> <month> January </month> <year> 1994. </year>
Reference-contexts: However, to our knowledge, splice does not provide a configuration and online control interface like the EPA. Many examples of periodic hard real-time digital control streams exist <ref> [Kl94] </ref>, but no general mechanism for reliable real-time control of pipelines is known to exist. Research on process control requirements for digital control indicate that parametric control of a number of kernel pipes within a general operating system environment would be useful for sophisticated industrial applications [Tr95].
Reference: [Nu95] <author> Nutt, G., Antell, J., Brandt, S., Gantz, C., Griff, A., Mankovich, J., </author> <title> Software Support for a Virtual Planning Room, </title> <type> Technical Report CU-CS-800-95, </type> <institution> Dept. of Computer Science, University of Colorado, Boulder, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: The set of applications requiring this type of performance negotiation support from an operating system is increasing with the emergence of virtual reality environments <ref> [Nu95] </ref>, continuous media [Co94], multimedia [Ste95], digital control [Tr95], and shared-control automation [Bru93][SiNu96]. The RT-PCIP mechanism and EPA are being implemented in the RT-Mach microkernel, and will be tested on a UAV (Unoccupied Air-Vehicle) testbed incorporating continuous media, digital control, and shared-control pipelines.
Reference: [Pa96] <author> Paulos, E., and Canny, J., </author> <title> Delivering Real Reality to the World Wide Web via Telerobotics, </title> <booktitle> IEEE International Conference on Robotics and Automation. </booktitle>
Reference-contexts: Finally, many real-time semi-autonomous and shared control projects are in progress [Bru93] [Fle95], including applications where occasional missed deadlines would not be catastrophic <ref> [Pa96] </ref> [Bro95]. 5.0 Conclusion Experiments will be implemented using both the RT-PCIP and user-level applications to compare performance.
Reference: [Si96] <author> Siewert, S., </author> <title> Operating System Support for Parametric Control of Isochronous and Sporadic Execution in Multiple Time Frames, </title> <type> Ph.D. dissertation proposal, </type> <institution> Univ. of Colorado Boulder, </institution> <year> 1996. </year>
Reference-contexts: Application Execution-Performance Agent Sink Device Source Device system call Device Interface PipeStage Filter Device Interface kernel API HW / SW Interface 2 In contrast, the RT-PCIP mechanism supports a broad spectrum of contemporary applications ranging from virtual environments to semi-autonomous systems <ref> [Si96] </ref>. <p> The EPA interface is intended to allow an application to specify desired service and adjust performance for both periodic pipelines requiring isochrony and aperiodic pipeline execution. Many scenarios exist for online RT-PCIP service renegotiation for continuous media, digital control, etc. <ref> [Si96] </ref>. For example, a continuous media application might initially negotiate reliable service for a video pipeline with a framerate of 30 fps, and later renegotiate online for 15 fps so that an audio pipeline may also be executed.
Reference: [SiNu96] <author> Siewert, S., and Nutt, G., </author> <title> A Space Systems Testbed for Situated Agent Observability and Interaction, </title> <booktitle> In the Second ASCE Specialty Conf. on Robotics for Challenging Environments, </booktitle> <address> Albuquerque, New Mexico, </address> <month> June </month> <year> 1996. </year>
Reference: [Ste95] <author> Steinmetz, R., and Wolf, L., </author> <title> "Evaluation of a CPU Scheduling Mechanism for Synchronized Multimedia Streams", in Quantitative Evaluation of Computing and Communication Systems, </title> <editor> Beilner, H. and Bause, F. eds., </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> No. 977, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference-contexts: The set of applications requiring this type of performance negotiation support from an operating system is increasing with the emergence of virtual reality environments [Nu95], continuous media [Co94], multimedia <ref> [Ste95] </ref>, digital control [Tr95], and shared-control automation [Bru93][SiNu96]. The RT-PCIP mechanism and EPA are being implemented in the RT-Mach microkernel, and will be tested on a UAV (Unoccupied Air-Vehicle) testbed incorporating continuous media, digital control, and shared-control pipelines.
Reference: [To90] <author> Tokuda, H., Nakajima, T., and Rao P., </author> <title> "Real-Time Mach: Towards a Predictable Real-Time System", </title> <booktitle> Proceedings of USENIX Mach Workshop, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: In this case, WCET, which is a statistical extreme, lead to rejection of a thread set which can be scheduled with 99.98% probability of successfully meeting termination deadlines. 3.0 In-Work Implementation, Experimentation and Evaluation The mechanism is being implemented in RT-Mach <ref> [To90] </ref> with modifications to rate monotonic scheduling of real-time kernel threads to implement the EPA-DM approach. The kernel is also being modified to incorporate the pipeline EPA system call and signal interface with functionality for loading and controlling pipe stage modules and device interface modules.
Reference: [Tr95] <author> Trngren, M., </author> <title> "On the Modelling of Distributed Real-Time Control Applications, </title> <booktitle> Proceedings of the 13th IFAC Workshop on Distributed Computer Control Systems, </booktitle> <address> Toulouse-Blagnac, France, </address> <month> September, </month> <year> 1995. </year> <month> 8 </month>
Reference-contexts: The set of applications requiring this type of performance negotiation support from an operating system is increasing with the emergence of virtual reality environments [Nu95], continuous media [Co94], multimedia [Ste95], digital control <ref> [Tr95] </ref>, and shared-control automation [Bru93][SiNu96]. The RT-PCIP mechanism and EPA are being implemented in the RT-Mach microkernel, and will be tested on a UAV (Unoccupied Air-Vehicle) testbed incorporating continuous media, digital control, and shared-control pipelines. <p> Research on process control requirements for digital control indicate that parametric control of a number of kernel pipes within a general operating system environment would be useful for sophisticated industrial applications <ref> [Tr95] </ref>. Finally, many real-time semi-autonomous and shared control projects are in progress [Bru93] [Fle95], including applications where occasional missed deadlines would not be catastrophic [Pa96] [Bro95]. 5.0 Conclusion Experiments will be implemented using both the RT-PCIP and user-level applications to compare performance.
References-found: 17

