URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/kc-assim.ps
Refering-URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/index.html
Root-URL: 
Email: fkautz, selmang@research.att.com  
Title: Forming Concepts for Fast Inference  
Author: Henry Kautz and Bart Selman 
Address: 600 Mountain Avenue, Room 2C-407 Murray Hill, NJ 07974  
Affiliation: AI Principles Research Department AT&T Bell Laboratories  
Abstract: Knowledge compilation speeds inference by creating tractable approximations of a knowledge base, but this advantage is lost if the approximations are too large. We show how learning concept generalizations can allow for a more compact representation of the tractable theory. We also give a general induction rule for generating such concept generalizations. Finally, we prove that unless NP non-uniform P, not all theories have small Horn least upper-bound approximations.
Abstract-found: 1
Intro-found: 1
Reference: [ Amarel, 1968 ] <author> Saul Amarel. </author> <title> On representations of problems of reasoning about actions. </title> <editor> In Michie, editor, </editor> <booktitle> Machine Intelligence 3, </booktitle> <pages> pages 131-171. </pages> <publisher> Edinburgh University Press, </publisher> <year> 1968. </year>
Reference: [ Boppana and Sipser, 1990 ] <author> R. B. Boppana and M. Sipser. </author> <title> The complexity of finite functions. </title> <editor> In J. an Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Compexity, </booktitle> <pages> pages 757-804. </pages> <publisher> Elsevier, Amsterdam (and MIT Press, </publisher> <address> Cambridge), </address> <year> 1990. </year>
Reference-contexts: Note that this is so despite the fact that we allow an arbitrary amount of work to be performed in computing the data structure used to represent lub . The notion of "non-uniform P" comes from work in circuit complexity <ref> [ Boppana and Sipser, 1990 ] </ref> . A problem is in non-uniform P (also called P/poly) iff for every integer n there exists a circuit of complexity (size) polynomial in n that solves instances of size n.
Reference: [ Bresina et al., 1986 ] <author> J. L. Bresina, S. C. Marsella, and C. F. Schmidt. </author> <title> Reappr improving planning efficience via local expertise and reformulation. </title> <type> Technical Report LCSR-TR-82, </type> <institution> Rutgers U., </institution> <address> New Brunswick, </address> <month> June </month> <year> 1986. </year> <month> 13 </month>
Reference: [ Cook, 1971 ] <author> S. A. Cook. </author> <title> The complexity of theorem-proving procedures. </title> <booktitle> In Proceedings of the 3rd Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 151-158, </pages> <year> 1971. </year>
Reference-contexts: The general problem of determining if a given clause is entailed by clausal theory is NP-hard <ref> [ Cook, 1971 ] </ref> , and thus almost certainly intractable.
Reference: [ Dowling and Gallier, 1984 ] <author> William F. Dowling and Jean H. Gallier. </author> <title> Linear time algorithms for testing the satisfiability of propositional horn formula. </title> <journal> Journal of Logic Programming, </journal> <volume> 3 </volume> <pages> 267-284, </pages> <year> 1984. </year>
Reference-contexts: The general problem of determining if a given clause is entailed by clausal theory is NP-hard [ Cook, 1971 ] , and thus almost certainly intractable. However, the problem for Horn theories can be solved in time linear in the combined lengths of the theory and query <ref> [ Dowling and Gallier, 1984 ] </ref> . (Note that the query need not be Horn; in fact, the problem remains linear for even broader clauses of queries, such as arbitrary CNF formulas, and DNF formulas, where each disjunct contains at most one negative literal.) Following are the definitions of the Horn
Reference: [ Greiner, 1992 ] <author> Russell Greiner. </author> <title> Learning near-optimal horn approximations. </title> <booktitle> In Preprints of the AAAI Spring Symposium on Knowledge Assimilation. </booktitle> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: some theories whose LUB cannot be represented in a form that is both small and tractable. 2 Theory Approximation For a full introduction to knowledge compilation using Horn approximations see [ Selman and Kautz, 1991 ] ; a generalization to other kinds of approximations and the first-order case appears in <ref> [ Kautz and Selman, 1991; Greiner, 1992 ] </ref> . This section summarizes only the relevant definitions and results. We assume a standard propositional language, and use p; q; r; and s to denote propositional letters.
Reference: [ Karp and Lipton, 1982 ] <author> R. M. Karp and R. Lipton. </author> <title> Turing machines that take advice. </title> <journal> Enseign. Math., </journal> <volume> 28 </volume> <pages> 191-209, </pages> <year> 1982. </year>
Reference-contexts: For any n the circuit is simply fixed to return 1 or 0.) Although it is possible that P 6= NP and yet NP non-uniform P, this is considered unlikely. One consequence would be that the polynomial-time hierarchy would collapse to 2 <ref> [ Karp and Lipton, 1982 ] </ref> . As shown in the appendix, the theorem can be strengthened to say that the claim that there always exists an efficient form of the LUB for answering Horn clausal 9 queries is equivalent to the claim that NP non-uniform P.
Reference: [ Kautz and Selman, 1991 ] <author> Henry Kautz and Bart Selman. </author> <title> A general framework for knowledge compilation. </title> <booktitle> In Proceedings of the International Workshop on Processing Declarative Knowledge (PDK), </booktitle> <address> Kaiserslautern, Germany, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: On the other hand, the problem can be solved in linear time for theories expressed by Horn clauses. We have developed algorithms for computing two kinds of Horn approximations to general clausal theories <ref> [ Selman and Kautz, 1991; Kautz and Selman, 1991 ] </ref> . The first is a Horn lower-bound, defined as a set of Horn clauses that entails the source theory. <p> some theories whose LUB cannot be represented in a form that is both small and tractable. 2 Theory Approximation For a full introduction to knowledge compilation using Horn approximations see [ Selman and Kautz, 1991 ] ; a generalization to other kinds of approximations and the first-order case appears in <ref> [ Kautz and Selman, 1991; Greiner, 1992 ] </ref> . This section summarizes only the relevant definitions and results. We assume a standard propositional language, and use p; q; r; and s to denote propositional letters. <p> However, the general framework for theory approximation described in the beginning of this paper can be adapted to use bounds that are in any tractable language, such as binary clauses <ref> [ Kautz and Selman, 1991 ] </ref> , or Horn clauses of a fixed maximum length. In some of these languages we can be sure that the LUB is of polynomial size. For example, the binary-clause least upper-bound of a theory of size n is of size O (n 2 ).
Reference: [ Kearns, 1990 ] <author> Michael J. Kearns. </author> <title> The Computational Complexity of Machine Learning. </title> <publisher> MIT Press, </publisher> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Work in machine learning has traditionally been divided into two main camps: concept learning (e.g. <ref> [ Kearns, 1990 ] </ref> ) and speed-up learning (e.g. [ Minton, 1988 ] ). The work reported in this paper bridges these two areas by showing how concept learning can be used to speed up inference by allowing a more compact and efficient representation of a knowledge base.
Reference: [ Minton, 1985 ] <author> Steve Minton. </author> <title> Selectively generalizing plans for problem solving. </title> <booktitle> In Proceedings of IJCAI-85, </booktitle> <year> 1985. </year>
Reference-contexts: In work on speed-up learning for problem-solving, the learned macro-operators can also be considered to be newly defined concepts <ref> [ Minton, 1985 ] </ref> .
Reference: [ Minton, 1988 ] <author> Steven Minton. </author> <title> Learning Effective Search Control Knowledge: an Explanation-Based Approach. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Carnegie-Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Work in machine learning has traditionally been divided into two main camps: concept learning (e.g. [ Kearns, 1990 ] ) and speed-up learning (e.g. <ref> [ Minton, 1988 ] </ref> ). The work reported in this paper bridges these two areas by showing how concept learning can be used to speed up inference by allowing a more compact and efficient representation of a knowledge base.
Reference: [ Muggleton and Buntine, 1988 ] <author> Stephen Muggleton and Wray Buntine. </author> <title> Machine invention of first-order predicates by inverting resolution. </title> <editor> In J. Laird, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Machine Learning, </booktitle> <pages> page 339, </pages> <address> Los Altos, CA, 1988. </address> <publisher> Morgan Kauf-mann. </publisher>
Reference-contexts: One might wonder, however, if the process can be inverted: Can such concepts be generated as a by-product of the search for a compact representation of the tractable approximation? This is indeed possible, we will show below. (See <ref> [ Muggleton and Buntine, 1988 ] </ref> for a different approach to learning new generalizations, based on inverting resolution proofs.) Suppose you know that two different classes of objects, call them p and q, share a number of characteristics.
Reference: [ Pagallo and Haussler, 1990 ] <author> Giulia Pagallo and David Haussler. </author> <title> Boolean feature discovery in empirical learning. </title> <journal> Machine Learning, </journal> <volume> 5 </volume> <pages> 77-99, </pages> <year> 1990. </year>
Reference-contexts: The connection between concept learning and speed-up learning has always been implicit in much of the work in the two fields. For example, work on algorithms for learning decision trees <ref> [ Pagallo and Haussler, 1990 ] </ref> has the goal of generating trees that are small, and/or are expected to classify objects with a minimum number of tests.
Reference: [ Selman and Kautz, 1991 ] <author> Bart Selman and Henry Kautz. </author> <title> Knowledge compilation using horn approximations. </title> <booktitle> In Proceedings of AAAI-91, </booktitle> <pages> pages 904-909, </pages> <address> Anaheim, CA, </address> <year> 1991. </year>
Reference-contexts: On the other hand, the problem can be solved in linear time for theories expressed by Horn clauses. We have developed algorithms for computing two kinds of Horn approximations to general clausal theories <ref> [ Selman and Kautz, 1991; Kautz and Selman, 1991 ] </ref> . The first is a Horn lower-bound, defined as a set of Horn clauses that entails the source theory. <p> Finally we prove that unless the polynomial hierarchy collapses to 2 , there must always be some theories whose LUB cannot be represented in a form that is both small and tractable. 2 Theory Approximation For a full introduction to knowledge compilation using Horn approximations see <ref> [ Selman and Kautz, 1991 ] </ref> ; a generalization to other kinds of approximations and the first-order case appears in [ Kautz and Selman, 1991; Greiner, 1992 ] . This section summarizes only the relevant definitions and results. <p> This basic algorithm can be optimized so that it generates fewer redundant clauses, but there is little hope for a polynomial time algorithm since the problem is NP-hard ( <ref> [ Selman and Kautz, 1991 ] </ref> ). We accept this potential cost, however; the game we are playing is to see how fast we can make run-time question-answering by moving computational effort to a pre-processing stage.
Reference: [ Shoenfield, 1967 ] <author> Joseph R. Shoenfield. </author> <title> Mathematical Logic. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1967. </year>
Reference-contexts: We see that 00 is a conservative extension of , since it extends by adding a defined proposition <ref> [ Shoenfield, 1967, page 57 ] </ref> .
Reference: [ Subramanian and Genesereth, 1987 ] <author> Devika Subramanian and Michael R. Genesereth. </author> <title> The relevance of irrelevance. </title> <booktitle> In Proceedings of IJCAI-87, </booktitle> <volume> volume 1, </volume> <pages> page 416, </pages> <year> 1987. </year> <month> 14 </month>
References-found: 16

