URL: http://www.eecs.umich.edu/~marios/papers/dac93.ps
Refering-URL: http://www.eecs.umich.edu/~marios/pubs.html
Root-URL: http://www.cs.umich.edu
Email: fmarios,randallg@lcs.mit.edu  
Title: Tim: A Timing Package for Two-Phase, Level-Clocked Circuitry  
Author: Marios C. Papaefthymiou Keith H. Randall 
Address: Cambridge, Massachusetts 02139  
Affiliation: MIT Laboratory for Computer Science  
Abstract: In this paper, we present new polynomial-time optimization algorithms for retiming and sensitivity analysis, and we describe the implementation of the new and previously reported algorithms in Tim. We also present empirical results from the application of Tim to sequential circuitry obtained from academic and industrial sources. Our experiments show that the number of latches in edge-triggered designs which have been retimed for maximum performance can be substantially reduced in corresponding two-phase, level-clocked designs that operate at the same speed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. D. Agrawal. </author> <title> Synchronous path analysis in MOS circuit simulator. </title> <booktitle> In Proc. 19th Design Automation Conference, </booktitle> <pages> pages 629-635, </pages> <month> June </month> <year> 1982. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [2] <author> T. Burks, K. Sakallah, and T. Mudge. </author> <title> Multiphase retiming using minT c . t 92 ACM Workshop on Timing Issues in the Specification and Synthesis of Digital Systems, </title> <month> March </month> <year> 1992. </year>
Reference-contexts: In both conceptual and computational terms, retiming is more difficult for level-clocked circuits than for edge-triggered circuits. Algorithms for re-timing single-phase and multiphase level-clocked circuits have appeared in [21] and [8, 13], respectively. Retiming heuristics were given in <ref> [2] </ref>. We present an algorithm for retiming level-clocked circuits with a view to minimize latch count. We describe new algorithms for sensitivity analysis that provide information about the critical paths in a circuit and about the sensitivity of a circuit's clock period to changes in its gate delays.
Reference: [3] <author> J. J. Cherry. Pearl: </author> <title> a CMOS timing analyzer. </title> <booktitle> In Proc. 25th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 148-153, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [4] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Shortest-paths computations are repeatedly employed in almost all functions of Tim. We have implemented two single-source shortest-paths algorithms. The first is an algorithm by Bellman and Ford that runs in O (V E) time and solves the shortest-paths problem on graphs with real edge-weights <ref> [4] </ref>. We use this algorithm before all-pairs shortest-paths computations in order to compute graphs with identical shortest-paths and nonnegative edge-weights, because shortest-paths can be computed more efficiently on such graphs. The second shortest-paths algorithm that we have implemented is Dijkstra's algorithm for graphs with nonnegative edge-weights [4]. <p> graphs with real edge-weights <ref> [4] </ref>. We use this algorithm before all-pairs shortest-paths computations in order to compute graphs with identical shortest-paths and nonnegative edge-weights, because shortest-paths can be computed more efficiently on such graphs. The second shortest-paths algorithm that we have implemented is Dijkstra's algorithm for graphs with nonnegative edge-weights [4]. The running time of this algorithm depends on the implementation of the priority queue it employs. We tried three priority queues. The first one was a simple array, in which case the theoretical running time of the algorithm is O (V 2 ).
Reference: [5] <author> M. R. Dagenais and N. C. Rumin. </author> <title> Automatic determination of optimal clocking parameters in synchronous MOS VLSI circuits. </title> <booktitle> In Advanced Research in VLSI: Proc. of the 5th MIT Conference, </booktitle> <pages> pages 19-33, </pages> <year> 1988. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [6] <author> M. Fredman and R. E. Tarjan. </author> <title> Fibonacci heaps and their uses in improved network optimization problems. </title> <booktitle> Proc. of the 25th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 338-346, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: We used this implementation in the beginning until we debugged our programs. The array was soon a limiting factor in the performance of our tool, and so we implemented two additional data structures: a Fibonacci heap <ref> [6] </ref> that yields an O (E + V lg V ) running time, and a binary heap that yields an O (E lg V ) running time.
Reference: [7] <author> A. T. Ishii and C. E. Leiserson. </author> <title> A timing analysis of level-clocked circuitry. </title> <booktitle> In Advanced Research in VLSI: Proc. of the Sixth MIT Conference, </booktitle> <pages> pages 113-130. </pages> <publisher> MIT Press, </publisher> <month> April </month> <year> 1990. </year>
Reference-contexts: Timing verification A general algorithm for timing verification was given in <ref> [7] </ref> and runs in O (E 2 ) steps in the special case of two-phase circuits. We implemented in Tim an asymptotically faster algorithm from [8] that runs in O (V E) steps and was designed specifically for two-phase circuits.
Reference: [8] <author> A. T. Ishii, C. E. Leiserson, and M. C. Papaefthymiou. </author> <title> Optimizing two-phase, </title> <booktitle> level-clocked circuitry. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: In both conceptual and computational terms, retiming is more difficult for level-clocked circuits than for edge-triggered circuits. Algorithms for re-timing single-phase and multiphase level-clocked circuits have appeared in [21] and <ref> [8, 13] </ref>, respectively. Retiming heuristics were given in [2]. We present an algorithm for retiming level-clocked circuits with a view to minimize latch count. <p> The gaps fl 0 and fl 1 between the two phases handle engineering considerations such as setup and hold times of the latches, clock skew, and nonideal clocking waveforms. The circuit model employed by Tim is based on the one described in <ref> [8] </ref>. A two-phase, level-clocked circuit is modeled as a vertex-weighted, edge-weighted graph G = hV; E; d; w; i, as shown in Figure 2. The vertices in V represent blocks of combinational logic, and the edges in E represent wires. <p> Whenever the clock input of a latch is asserted, the latch becomes transparent and data ripple through. Along any path in G, latches are clocked on alternate phases, and around any directed cycle in G there are at least two latches. We have extended the model in <ref> [8] </ref> to include non-ideal latches: All latches in Tim are assumed to have equal propagation delays, equal setup times and equal hold times. <p> Timing verification A general algorithm for timing verification was given in [7] and runs in O (E 2 ) steps in the special case of two-phase circuits. We implemented in Tim an asymptotically faster algorithm from <ref> [8] </ref> that runs in O (V E) steps and was designed specifically for two-phase circuits. <p> For example, the rise-to-fall time of the path A ; C in Figure 2 is 0 + fl 0 + 1 + fl 1 + 0 = 0 + . In <ref> [8] </ref> it is shown that a two-phase circuit is properly timed if and only if the following two conditions are satisfied: PC. For every simple path p in the circuit with delay d (p) and rise-to-fall time t (p), we must have d (p) t (p). CC. <p> The functions f and g and an O (V 3 )-time relaxation algorithm for solving the ensuing constraints are described in more detail in <ref> [8] </ref>. The constraints graph is computed in O (V E lg V ) steps, and thus, the algorithm terminates in O (V 3 + V E lg V ) steps. <p> When the duty-cycle of the clocking scheme is not fixed, Tim performs a binary search in and a linear search in one of the two duty-cycles. More details on these approximation schemes as well as exact 3 polynomial-time algorithms, are given in <ref> [8] </ref>. Retiming for minimum latch count Tim can retime a given circuit in order to achieve a specified symmetric clocking scheme = h; fl; ; fli with the minimum number of latches. <p> evidence that retiming with symmetric clocking schemes often leads to designs that operate just as fast as designs obtained by retiming with unrestricted duty-ratio, we are implementing an asymptotically faster algorithm for retiming with symmetric clocking schemes that runs in O (V E + V 2 lg V ) time <ref> [8] </ref>. We are also working on faster implementations of the minimum-cost flow algorithm and the shortest-paths algorithms. Acknowledgments We would like to thank Charles Leiserson of MIT for his suggestions and ideas during the course of this work.
Reference: [9] <author> N. P. Jouppi. </author> <title> Timing analysis for NMOS VLSI. </title> <booktitle> In Proc. 20th Design Automation Conference, </booktitle> <pages> pages 411-418, </pages> <month> June </month> <year> 1983. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [10] <author> R. M. Karp. </author> <title> A characterization of the minimum cycle mean in a digraph. </title> <journal> Discrete Mathematics, </journal> <volume> 23 </volume> <pages> 309-311, </pages> <year> 1978. </year>
Reference-contexts: on alternate phases and constraints on the simple cycles of the circuit. the values D (v; i) to check the strongest among the simple cycle constraints by extending Karp's O (V E)-time minimum cycle-mean algorithm to solve the problem of finding a cycle c with maximum d (c)=w (c) ratio <ref> [10] </ref>. Clock tuning When tuning the clock of a given two-phase circuit, Tim computes duty-cycles 0 and 1 such that the period of the resulting clocking scheme is minimized. The gaps fl 0 and fl 1 are supplied as inputs and remain fixed.
Reference: [11] <author> C. E. Leiserson, F. M. Rose, and J. B. Saxe. </author> <title> Optimizing synchronous circuitry by retiming. </title> <booktitle> 3rd Caltech Conference on VLSI, </booktitle> <year> 1983. </year> <editor> R. Bryant, </editor> <publisher> ed., </publisher> <pages> pp. 87-116. </pages>
Reference: [12] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing synchronous systems. </title> <journal> Journal of VLSI and Computer Systems, </journal> <volume> 1(1) </volume> <pages> 41-67, </pages> <year> 1983. </year>
Reference: [13] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of multi-phase, </title> <booktitle> level-clocked circuits. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: In both conceptual and computational terms, retiming is more difficult for level-clocked circuits than for edge-triggered circuits. Algorithms for re-timing single-phase and multiphase level-clocked circuits have appeared in [21] and <ref> [8, 13] </ref>, respectively. Retiming heuristics were given in [2]. We present an algorithm for retiming level-clocked circuits with a view to minimize latch count.
Reference: [14] <author> N. Megiddo. </author> <title> Partitioning with two lines in the plane. </title> <journal> Journal of Algorithms, </journal> <volume> 6:430 - 433, </volume> <year> 1985. </year>
Reference: [15] <author> J. B. Orlin. </author> <title> A faster strongly polynomial minimum cost flow algorithm. </title> <booktitle> Proc. of the 20th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 377-387, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: The constraint graph G c is also augmented with constraints which guarantee that retiming will not relocate I/O latches. Tim computes a minimum-cost flow on G c in O (V 3 ) time by applying Orlin's scaling algorithm <ref> [15] </ref>. The dual variables of the minimum-cost flow are used to retime the circuit. Sensitivity analysis In addition to optimizations that manipulate the circuit directly, Tim provides timing information about the circuit at a higher level. This information identifies parts of the circuit that have potential for further optimization.
Reference: [16] <author> J. K. Ousterhout. </author> <title> Switch-level timing verifier for digital MOS VLSI. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> CAD-4:336-349, </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [17] <author> M. C. Papaefthymiou. </author> <title> Sensitivity analysis of synchronous circuitry. </title> <type> Unpublished manuscript, </type> <month> August </month> <year> 1992. </year>
Reference: [18] <author> M. C. Papaefthymiou and K. H. Randall. Tim: </author> <title> an interactive timing optimization tool for level-clocked circuits. </title> <month> July </month> <year> 1992. </year> <note> User's Guide and Reference Manual, under preparation. </note>
Reference: [19] <author> M. C. Papaefthymiou and K. H. Randall. </author> <title> Edge-triggering vs. two-phase level-clocking. </title> <booktitle> In Research on Integrated Systems: Proceedings of the 1993 Symposium, </booktitle> <month> March </month> <year> 1993. </year>
Reference-contexts: This problem is reduced to the dual of an uncapacitated minimum-cost flow problem on the constraint graph G c <ref> [19] </ref>. The demand (supply) of each vertex v equals the difference between the outdegree and the inde-gree of v in the circuit graph G. For each edge e 2 E, the cost equals w c (e). <p> Retiming with unrestricted duty-ratio produced circuits that were no more than 1.5% faster than the circuits generated by retiming with symmetric clocking schemes. A more detailed description of these experiments can be found in <ref> [19] </ref>. In the third set of experiments, we applied the following procedure for each example circuit. We retimed the original edge-triggered circuit to achieve a specific clock period with the minimum number of flip-flops.
Reference: [20] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun. </author> <title> checkT c and minT c : Timing verification and optimal clocking of synchronous digital circuits. </title> <booktitle> In Digest of Technical Papers of the 1990 IEEE International Conference on CAD, </booktitle> <pages> pages 552-555, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [21] <author> N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Retiming of circuits with single phase level-sensitive latches. </title> <booktitle> In International Conference on Computer Design, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: In both conceptual and computational terms, retiming is more difficult for level-clocked circuits than for edge-triggered circuits. Algorithms for re-timing single-phase and multiphase level-clocked circuits have appeared in <ref> [21] </ref> and [8, 13], respectively. Retiming heuristics were given in [2]. We present an algorithm for retiming level-clocked circuits with a view to minimize latch count.
Reference: [22] <author> T. G. Szymanski. LEADOUT: </author> <title> A static timing analyzer for MOS circuits. </title> <booktitle> In Digest of Technical Papers of the 1986 IEEE International Conference on CAD, </booktitle> <pages> pages 130-133, </pages> <month> November </month> <year> 1986. </year>
Reference-contexts: These results show that two-phase clocking can maintain the performance of edge-triggered clocking while achieving substantial reductions in latch count, and therefore circuit area. Several tools have been developed for analyzing the timing of circuits that contain level-sensitive latches <ref> [1, 3, 5, 9, 16, 20, 22] </ref>. These tools perform timing verification and enable the user to minimize the overall clock period by tuning various parameters of the clocking schemes. Our tool provides the designer with two additional features: retiming and sensitivity analysis.
Reference: [23] <author> T. G. Szymanski. </author> <title> Computing optimal clock schedules. </title> <booktitle> In Proc. 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 399-404, </pages> <month> June </month> <year> 1992. </year>
Reference: [24] <author> T. G. Szymanski and N. Shenoy. </author> <title> Verifying clock schedules. </title> <booktitle> In Digest of Technical Papers of the 1992 IEEE/ACM International Conference on CAD, </booktitle> <month> November </month> <year> 1992. </year>
Reference: [25] <author> S. H. Unger and C. J. Tan. </author> <title> Clocking schemes for high speed digital systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(10):880-895, </volume> <month> October </month> <year> 1986. </year>
Reference: [26] <author> S. A. Ward and R. H. Halstead, Jr. </author> <title> Computation Structures. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year> <month> 6 </month>
Reference-contexts: We generated two-phase circuits by replacing each edge-triggered flip-flop by a pair of level-sensitive latches that are clocked on alternate phases of a two-phase clocking scheme. In fact, it is a common practice in VLSI to implement edge-triggered flip-flops by two back-to-back level-sensitive latches <ref> [26] </ref>. The statistics of our original example circuits are shown in Figure 6.
References-found: 26

