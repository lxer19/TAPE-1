URL: ftp://ic.eecs.berkeley.edu/pub/Papers_Talks/Analog_Group/PostScript/DAC94_charbon.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/murgai/publications/my_publications.html
Root-URL: 
Title: Simultaneous Placement and Module Optimization of Analog IC's  
Author: Edoardo Charbon, Enrico Malavasi Davide Pandini and Alberto Sangiovanni-Vincentelli 
Address: Berkeley, CA 94720, USA  35131 Padova, Italy  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California,  Dipartimento di Elettronica e Informatica Universita di Padova,  
Abstract: New placement techniques are presented which substantially improve the process of automatic layout generation of analog IC's. Extremely tight specifications can be enforced on high-performance analog circuits by using simultaneous placement and module optimization. An algorithmic approach to module generation provides alternative sets of modules optimized with respect to area and performance but equivalent in terms of parasitics and topology. The final module selection is performed during the placement phase, based on Simulated Annealing. The flexibility of the annealing algorithm has been significantly improved, thus making it possible to more efficiently exploit the tradeoffs between area, parasitics and matching. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Rijmenants, J. B. Litsios, T. R. Schwarz and M. G. R. Degrauwe, ILAC: </author> <title> An Automated Layout Tool for Analog CMOS Circuits, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 417-425, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Digitally targeted layout tools are often ineffective in controlling performance due to the lack of parasitic minimization. Techniques derived from the digital world addressing analog-specific constraints, have been proposed in <ref> [1, 2, 3] </ref>. These tools focused mainly on the minimization of area and wiring, with no explicit provision to control performance. As a result a large number of time-consuming layout-extraction-simulation iterations may be necessary to meet a set of tight performance specifications.
Reference: [2] <author> M. Kayal, S. Piguet, M. Declercq and B. Hochet, SALIM: </author> <title> A Layout Generator Tool for Analog ICs, </title> <booktitle> in Proc. IEEE Custom Integrated Circuits Conference, </booktitle> <pages> pp. 751-754, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Digitally targeted layout tools are often ineffective in controlling performance due to the lack of parasitic minimization. Techniques derived from the digital world addressing analog-specific constraints, have been proposed in <ref> [1, 2, 3] </ref>. These tools focused mainly on the minimization of area and wiring, with no explicit provision to control performance. As a result a large number of time-consuming layout-extraction-simulation iterations may be necessary to meet a set of tight performance specifications.
Reference: [3] <author> J. M. Cohn, D. J. Garrod, R. A. Rutenbar and L. R. Carley, KOAN/ANAGRAM II: </author> <title> New Tools for Device-Level Analog Placement and Routing, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 26, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 330-342, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: Digitally targeted layout tools are often ineffective in controlling performance due to the lack of parasitic minimization. Techniques derived from the digital world addressing analog-specific constraints, have been proposed in <ref> [1, 2, 3] </ref>. These tools focused mainly on the minimization of area and wiring, with no explicit provision to control performance. As a result a large number of time-consuming layout-extraction-simulation iterations may be necessary to meet a set of tight performance specifications. <p> A possibly advantageous configuration, for example one minimizing capacitive loading at critical nodes or maximizing interleaving within the modules, cannot be explored. More recently, attempts to alleviate, in part, these limitations have been proposed. In <ref> [3] </ref> and [6] placement algorithms based on Simulated Annealing [7] were presented that perform module abutment as a standard annealing move. Moreover, in [3] the annealing operates on the shape of the modules to obtain the desired aspect ratio of the cell. <p> More recently, attempts to alleviate, in part, these limitations have been proposed. In <ref> [3] </ref> and [6] placement algorithms based on Simulated Annealing [7] were presented that perform module abutment as a standard annealing move. Moreover, in [3] the annealing operates on the shape of the modules to obtain the desired aspect ratio of the cell. However, the number of elemental modules is relatively large, and the configuration space becomes a limiting factor for the efficiency of this approach. <p> Notice that in every circuit at least one trivial partition exists, where each path has exactly one edge. Such partition corresponds to separate elemental transistor modules and it is often the starting configuration for placement tools with automatic abutment capability <ref> [3, 6] </ref>. The complexity of placement algorithms is considerably reduced if more complex stacked structures, with interleaved transistors and multiple abutments, are available as basic modules. A stack-generation algorithm is used to determine the best partitions according to an optimality criterion based on a cost function. <p> The modules in the circuit are often generated before the placement phase and their shape and connectivity remains intact during the annealing. Slight deviations to this policy have been proposed in <ref> [3] </ref> and [6] where abutment and minor aspect-ratio adjustments were used to alter some modules during the annealing. In our placement approach the search space S is dynamically modified through a special move which swaps a randomly selected module with appropriate replacements.
Reference: [4] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> Constraint Generation for Routing Analog Circuits, </title> <booktitle> in Proc. Design Automation Conference, </booktitle> <pages> pp. </pages> <month> 561-566,June </month> <year> 1990. </year>
Reference-contexts: As a result a large number of time-consuming layout-extraction-simulation iterations may be necessary to meet a set of tight performance specifications. Only recently performance-driven approaches to the layout of analog circuits have been presented. In <ref> [4] </ref> and [5] a methodology for the generation and the use of a complete set of analog-specific constraints for the layout synthesis of analog circuits was proposed. <p> In general, the cost function takes into account chip area and wiring constraints. In PUPPY-A analog specific requirements such as symmetry, matching, well distribution and parasitic constraints are also considered. The constraints are computed by PARCAR <ref> [4, 12] </ref> using constrained optimization based on a numerical sensitivity analysis of the circuit. Modified Annealing Algorithm In most placement algorithms S is fixed, since the aspect-ratio, the number and the internal structure of each module is pre-determined. <p> From these estimates the cumulative effect of parasitics is evaluated based on the sensitivity information of performance with respect to each parasitic component in the circuit as suggested by <ref> [4] </ref>. Violations to specifications can therefore be detected and included as an additional cost f co in function f [6].
Reference: [5] <author> E. Malavasi, H. Chang, A. Sangiovanni-Vincentelli, E. Charbon, U. Choudhury, E. Felt, G. Jusuf, E. Liu and R. Neff, </author> <title> A Top-down, Constraint-Driven Design Methodology for Analog Integrated Circuits, </title> <booktitle> in Analog Circuit Design, </booktitle> <pages> pp. 285-324. </pages> <editor> J. H. Huijsing, R. J. van der Plassche and W. Sansen Ed., </editor> <publisher> Kluwer Academic Press, </publisher> <year> 1993. </year>
Reference-contexts: As a result a large number of time-consuming layout-extraction-simulation iterations may be necessary to meet a set of tight performance specifications. Only recently performance-driven approaches to the layout of analog circuits have been presented. In [4] and <ref> [5] </ref> a methodology for the generation and the use of a complete set of analog-specific constraints for the layout synthesis of analog circuits was proposed. <p> Some of the most relevant examples are discussed in this section. All circuits were routed with ROAD and compacted with SPARCS-A <ref> [5] </ref>. Performance specifications were obtained by simulating the extracted circuit with HSPICE and SPICE33 .
Reference: [6] <author> E. Charbon, E. Malavasi, U. Choudhury, A. Casotto and A. </author> <note> Sangiovanni-Vincentelli, </note>
Reference-contexts: A possibly advantageous configuration, for example one minimizing capacitive loading at critical nodes or maximizing interleaving within the modules, cannot be explored. More recently, attempts to alleviate, in part, these limitations have been proposed. In [3] and <ref> [6] </ref> placement algorithms based on Simulated Annealing [7] were presented that perform module abutment as a standard annealing move. Moreover, in [3] the annealing operates on the shape of the modules to obtain the desired aspect ratio of the cell. <p> Notice that in every circuit at least one trivial partition exists, where each path has exactly one edge. Such partition corresponds to separate elemental transistor modules and it is often the starting configuration for placement tools with automatic abutment capability <ref> [3, 6] </ref>. The complexity of placement algorithms is considerably reduced if more complex stacked structures, with interleaved transistors and multiple abutments, are available as basic modules. A stack-generation algorithm is used to determine the best partitions according to an optimality criterion based on a cost function. <p> Matching can also be improved by selecting the configurations with maximum device interleaving, and common-centroid patterns are always found when they exist. 3 Placement Algorithm A placement tool based on the Simulated Annealing algorithm, PUPPY-A <ref> [6] </ref>, has been modified to implement our techniques of simultaneous optimization. In placement problems the annealing algorithm operates on an initial configuration by randomly perturbing it in order to minimize a cost function f by a finite succession of improvements. <p> The modules in the circuit are often generated before the placement phase and their shape and connectivity remains intact during the annealing. Slight deviations to this policy have been proposed in [3] and <ref> [6] </ref> where abutment and minor aspect-ratio adjustments were used to alter some modules during the annealing. In our placement approach the search space S is dynamically modified through a special move which swaps a randomly selected module with appropriate replacements. <p> Capacitive and resistive parasitics are estimated using analytical models [14] for a particular technology. Cross-over capacitances between nets are obtained from an estimate of the probability that the nets will cross after the routing as described in <ref> [6] </ref>. From these estimates the cumulative effect of parasitics is evaluated based on the sensitivity information of performance with respect to each parasitic component in the circuit as suggested by [4]. Violations to specifications can therefore be detected and included as an additional cost f co in function f [6]. <p> in <ref> [6] </ref>. From these estimates the cumulative effect of parasitics is evaluated based on the sensitivity information of performance with respect to each parasitic component in the circuit as suggested by [4]. Violations to specifications can therefore be detected and included as an additional cost f co in function f [6].
References-found: 6

