URL: http://www.cs.princeton.edu/~erez/pra2.ps
Refering-URL: http://www.cs.princeton.edu/~erez/publications.html
Root-URL: http://www.cs.princeton.edu
Title: CBC MAC for Real-Time Data Sources  
Author: Erez Petrank Charles Rackoff 
Keyword: Message authentication, Real time, Cipher block chaining, Block ciphers.  
Abstract: The Cipher Block Chaining (CBC) Message Authentication Code (MAC) is an authentication method which is widely used in practice. It is well known that the use of the CBC MAC for variable length messages is not secure, and a few rules of thumb for the correct use of the CBC MAC are known by folklore. The first rigorous proof of the security of CBC MAC, when used on fixed length messages, was given only recently by Bellare, Kilian and Rogaway [3]. They also suggested variants of CBC MAC that handle variable-length messages but in these variants the length of the message has to be known in advance (i.e., before the message is processed). We study CBC authentication of real-time applications in which the length of the message is not known until the message ends, and furthermore, since the application is real-time, it is not possible to start processing the authentication only after the message ends. We first consider a variant of CBC MAC, we call encrypted CBC MAC (EMAC) which handles messages of variable unknown lengths. Computing EMAC on a message is virtually as simple and as efficient as computing the standard CBC MAC on the message. We provide a rigorous proof that its security is implied by the security of the underlying block cipher. Next, we argue that the basic CBC MAC is secure when applied to prefix-free message space. A message space can be made prefix-free by authenticating also the (usually hidden) last character which marks the end of the message.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare, R. Canetti, and H. Krawczyk. </author> <title> Keying hash functions for message authentication. </title> <booktitle> Advances in Cryptology - Crypto '96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1109, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 1-15, </pages> <year> 1996. </year>
Reference-contexts: See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality. Bellare, Canetti, and Krawczyk <ref> [1] </ref> introduce two methods for message authentication code: NMAC and HMAC. Both bear resemblence to our EMAC, but are also different. <p> Their constructions and proofs are not applicable to the EMAC construction since the EMAC deals with an iteration that is not (weakly) collision resistant for non-fixed size inputs. This bad property of the CBC MAC foils the proof in <ref> [1] </ref> and therefore a proof is needed that the EMAC is indeed secure. The ANSI standard X9.19 augments CBC-MAC using a DES cipher. The standard suggests using two keys like our EMAC.
Reference: [2] <author> M. Bellare, R. Guerin, and P. Rogaway. </author> <title> XOR MACs: New Methods for Message Authentication Using Finite Pseudorandom Functions. </title> <booktitle> Advances in Cryptology - Crypto '95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 15-28, </pages> <year> 1995. </year>
Reference-contexts: Following that, efficient applications of this procedure were suggested by Krawczyk [8], Stinson [17], Shoup [16], and Rogaway [15]. See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway <ref> [2] </ref>, who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality. Bellare, Canetti, and Krawczyk [1] introduce two methods for message authentication code: NMAC and HMAC. Both bear resemblence to our EMAC, but are also different.
Reference: [3] <author> M. Bellare, J. Kilian, and P. Rogaway. </author> <title> The security of Cipher Block Chaining. </title> <booktitle> Advances in Cryptology - Crypto '94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 341-358, </pages> <year> 1994. </year> <note> An updated version can be found in the personal URL's of the authros. See for example, http://www.cs.ucdavis.edu/ rogaway/papers/. </note>
Reference-contexts: Until recently, no solid theoretical ground was suggested to deal with the security of this method. The main interest is whether the security of the cipher block f (e.g. DES) implies the security of the CBC MAC f (m) . Bellare, Kilian, and Rogaway <ref> [3] </ref> were the first to study this problem. They show that CBC MAC is secure when applied to messages of fixed length. <p> Therefore, the efficiency of this authentication is virtually the same as the standard CBC MAC. We call this authentication EMAC (for encrypted CBC MAC). 1 We then provide a rigorous proof that this method is secure. Our proof is an extension of the proof in <ref> [3] </ref>. Next, we argue that the security of cipher block chaining (CBC) message authentication code (MAC) applied on prefix-free message space is secure. If the part of the message which is authenticated includes the (usually hidden) "end of message" character, then this condition (of prefix-free messages) holds. <p> More formally, suppose the message space is drawn from an alphabet of blocks which excludes a distinguished block ? and if we encode each 1 Actually, a different method to deal with unknown lengths was suggested in <ref> [3] </ref>. Their method seems to have a flaw. See Appendix A for details. 2 authenticated message by appending the ? block to the end of the message, then we get that the encoded messages form a prefix-free set of messages. <p> The proof that CBC MAC is secure when invoked on a prefix-free message space is an easy augmentation of the proof for fixed length messages given in <ref> [3] </ref>. Let us point out an important point here. The security of the system guarantees only that the adversary cannot forge a legal message taken from the prefix-free space. <p> Therefore, we recommend using EMAC even though one more operation of f is needed per message. 1.2 The theoretical framework We follow the approach suggested by Bellare, Kilian and Rogaway <ref> [3] </ref>. We describe it here shortly, and we refer the reader to their paper for details and motivation. We would like to show that if the underlying block cipher is secure then a message authentication code is also secure. <p> We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack. This adopts the viewpoints of Goldwasser, Micali and Rivest [7] with regards to signature schemes. We shall follow <ref> [3] </ref> and actually show that the message authentication code is secure in a very strong sense, i.e., that the EMAC we suggest, or the application of CBC MAC on prefix-free message space, is actually a family of pseudo random functions. <p> Section 3 we show that EMAC is (almost) as secure as the underlying block cipher used, and in Section 4 we argue that it is secure to use CBC MAC on a prefix-free message space (given that the underlying family is secure). 2 Preliminaries We (basically) use the notation of <ref> [3] </ref>. The set of all functions from f0; 1g ` to f0; 1g ` is called R `!` . Also, let the (infinite) set of all functions from (f0; 1g ` ) fl to f0; 1g ` be called R ` fl !` . <p> In the main theorem of <ref> [3] </ref> (where all messages had the same length) and also in case the message space is prefix-free, the adversary is limited in his queries, and this is used in the proof. <p> Remark 3.2 The constant c is a small number which depends on the computational model. The advantage of A 0 (see Section 2) is defined over the random tape of A 0 and the random choice of f 2 F . 7 Proof: We extend the proof in <ref> [3] </ref> to deal with EMAC. The proof in [3] consists of two main parts. 1. They start by checking the possibility of distinguishing a random function in R ` fl !` from a random function in CBC M AC R `!` . <p> The advantage of A 0 (see Section 2) is defined over the random tape of A 0 and the random choice of f 2 F . 7 Proof: We extend the proof in <ref> [3] </ref> to deal with EMAC. The proof in [3] consists of two main parts. 1. They start by checking the possibility of distinguishing a random function in R ` fl !` from a random function in CBC M AC R `!` . <p> R `!` with advantage * 0 = * 6 2 2 ` 2 ` , running time t + c ` (for a small constant c) and number of queries at most . 19 The proof of this theorem is a simple extension of the proof which was given in <ref> [3] </ref> for a message space of fixed length messages. We choose not to repeat their proof (which is quite different from the one presented in the previous subsections.) The main modification required in their proof is in redefining border nodes.
Reference: [4] <author> M. Bellare and P. Rogaway. </author> <title> Collision Resistent Hashing: Towards Making UOWHFs Practical. </title> <booktitle> Advances in Cryptology - Crypto '97 Proceedings, Lecture Notes in Computer Science 1294, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 471-484, </pages> <year> 1997. </year>
Reference-contexts: To the best of our knowledge, there is no published rigorous proof of security for the ANSI X9.19 construction, which is different from the EMAC. Independently of this work, Bellare and Rogaway <ref> [4] </ref> consider the case in which private keys are not allowed. They construct a mechanism to do that, which has a similar weakness when variable-length messages are hashed.
Reference: [5] <author> A. Berendschot, B. den Boer, J.P. Boly, A. Bosselaers, J. Brandt, D. Chaum, I. Damg-ard, M. Dichtl, W. Fumy, M. van der Ham, C.J.A. Jansen, P. Landrock, 20 B. Preneel, G. Roelofsen, P. de Rooij, J. Vandewalle. </author> <title> Integrity Primitives for Secure Information Systems. Final Report of RACE Integrity Primitives Evaluation (RIPE-RACE 1040). </title> <booktitle> Lecture Notes in Computer Science 1007, RIPE Integrity Primitives, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995 </year> <month> (226 pp.). </month>
Reference-contexts: We study how to use the popular CBC MAC approach in this scenario. First, we consider the following variant of CBC MAC to deal securely with the problem of variable (unknown) length messages. This variant was first suggested in <ref> [5] </ref>. We use the secret key a to produce two secret keys a 0 = f a (0) and a 00 = f a (1).
Reference: [6] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to Construct Random Functions . In Journal of the ACM, </title> <journal> Vol. </journal> <volume> 33, No. 4, </volume> <pages> 210-217, </pages> <year> (1986). </year>
Reference-contexts: Then we assume that this family is a pseudo-random family of functions. This approach to modeling the security of a block cipher was suggested by Luby and Rackoff [10, 11], and the notion of a family of pseudo random functions was suggested by Goldreich, Goldwasser and Micali <ref> [6] </ref>. We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack. This adopts the viewpoints of Goldwasser, Micali and Rivest [7] with regards to signature schemes. <p> 1 ; C 2 ) def fi fiProb [A C 1 = 1] Prob [A C 2 = 1] fi fi : The distribution is a random choice of a function in the family C 1 or C 2 according to the distribution defined for the family. (This notation follows <ref> [6] </ref>.) A message space is a set of strings in f0; 1g fl . We say that a message space is prefix-free if there are no two strings x 1 ; x 2 2 such that x 1 is a prefix of x 2 .
Reference: [7] <author> S. Goldwasser, S. Micali, and R. Rivest. </author> <title> A Digital Signature Scheme Secure Against Adaptive Chosen-message Attack. </title> <journal> In SIAM Journal on Computing , Vol. </journal> <volume> 17, No. 2, </volume> <pages> pp. 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack. This adopts the viewpoints of Goldwasser, Micali and Rivest <ref> [7] </ref> with regards to signature schemes. We shall follow [3] and actually show that the message authentication code is secure in a very strong sense, i.e., that the EMAC we suggest, or the application of CBC MAC on prefix-free message space, is actually a family of pseudo random functions.
Reference: [8] <author> H. Krawczyk, </author> <title> LFSR-based Hashing and Authentication. </title> <booktitle> Advances in Cryptology - Crypto '94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 129-139, </pages> <year> 1994. </year>
Reference-contexts: Wegman and Carter [18] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk <ref> [8] </ref>, Stinson [17], Shoup [16], and Rogaway [15]. See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality.
Reference: [9] <author> ISO/IEC 9797. </author> <title> Data Cryptographic Techniques Data Integrity Mechanism Using a Cryptographic Check Function Employing a Block Cipher Algorithm. </title> <year> 1989. </year>
Reference-contexts: Thus, f (m) a is a function that takes a message of m 1 blocks (or m` bits) and assigns it a tag of one block. The CBC MAC is an International Standard <ref> [9] </ref>, widely used, especially with the DES as the underlying block cipher. It is well known that the use of the CBC MAC for variable length messages is not secure, and a few rules of thumb for the correct use of the CBC MAC are known by folklore.
Reference: [10] <author> M. Luby and C. Rackoff. </author> <title> How to Construct Pseudorandom Permutations from Pseudorandom Functions. </title> <journal> SIAM Journal on Computing , Vol. </journal> <volume> 17, No. 2, </volume> <pages> pp. </pages> <month> 373-386 April </month> <year> 1988. </year>
Reference-contexts: Namely, consider the block cipher as a family of functions, so that each key determines a function in the family. Then we assume that this family is a pseudo-random family of functions. This approach to modeling the security of a block cipher was suggested by Luby and Rackoff <ref> [10, 11] </ref>, and the notion of a family of pseudo random functions was suggested by Goldreich, Goldwasser and Micali [6]. We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack.
Reference: [11] <author> M. Luby and C. Rackoff. </author> <title> A Study of Password Security. </title> <booktitle> In Advances in Cryptology - Crypto '87 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 293, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 392-397, </pages> <year> 1987. </year>
Reference-contexts: Namely, consider the block cipher as a family of functions, so that each key determines a function in the family. Then we assume that this family is a pseudo-random family of functions. This approach to modeling the security of a block cipher was suggested by Luby and Rackoff <ref> [10, 11] </ref>, and the notion of a family of pseudo random functions was suggested by Goldreich, Goldwasser and Micali [6]. We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack.
Reference: [12] <author> B. Preneel and P. </author> <title> van Oorschot MDx-MAC and Building Fast MACs from Hash Functions. </title> <booktitle> In Advances in Cryptology - Crypto '95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 1-14, </pages> <year> 1996. </year>
Reference-contexts: This construction is closely related to our EMAC. It needs a bit more work in the second stage, but the proof of security becomes easier. Last, let us mention the birthday attacks of Preneel and Oorschot <ref> [12] </ref>. They show that MAC's of a particular form can be broken if enough (and/or long enough) messages are authenticated so that a collision occurs, i.e., the breaker finds two different messages that get the same hash value.
Reference: [13] <author> G. Tsudik, </author> <title> Message Authentication with One-Way Hash Functions. </title> <booktitle> In Proceedings of Infocom 92, </booktitle> <publisher> IEEE Press, </publisher> <pages> pp. 2055-2059, </pages> <year> 1992. </year>
Reference: [14] <author> R. Rivest, </author> <title> The MD5 message digest algorithm. </title> <booktitle> IETF Networking Working Group, </booktitle> <address> RFC-1321, </address> <month> April </month> <year> 1992. </year>
Reference: [15] <author> P. Rogaway. </author> <title> Bucket Hashing and its Application to Fast Message Authentication. </title> <booktitle> Advances in Cryptology - Crypto '95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 29-42, </pages> <year> 1996. </year>
Reference-contexts: Wegman and Carter [18] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [8], Stinson [17], Shoup [16], and Rogaway <ref> [15] </ref>. See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality. <p> Wegman and Carter [18] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [8], Stinson [17], Shoup [16], and Rogaway <ref> [15] </ref>. See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality.
Reference: [16] <author> V. Shoup. </author> <title> On fast and Provably Secure Message Authentication based on Universal Hashing. </title> <booktitle> Advances in Cryptology - Crypto '96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1109, </volume> <publisher> Springer-Verlag, </publisher> <pages> pp. 313-328, </pages> <year> 1996. </year>
Reference-contexts: Wegman and Carter [18] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [8], Stinson [17], Shoup <ref> [16] </ref>, and Rogaway [15]. See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality.
Reference: [17] <author> D. Stinson. </author> <title> Universal Hashing and Authentication Codes. Designs, </title> <journal> Codes and Cryptography, </journal> <volume> vol. 4, No. 4, </volume> <pages> pp. 369-380, </pages> <year> 1994. </year> <month> 21 </month>
Reference-contexts: Wegman and Carter [18] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [8], Stinson <ref> [17] </ref>, Shoup [16], and Rogaway [15]. See [15] for more details and references. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive-or's on encryptions of the input blocks. This allows parallelizability and incrementality.
Reference: [18] <author> M. Wegman and L. Carter. </author> <title> New Hash Functions and their use in Authentication and Set Equality. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> Vol. 18, No. 2, </volume> <pages> pp. 143-154, </pages> <year> 1979. </year>
Reference-contexts: We follow this approach. 2 For example, upon seeing t 0 = M AC a (0) the adversary knows that t 0 = M AC a (0; t 0 ). 3 1.3 Related works There are various approaches to authentication other than CBC MAC. Wegman and Carter <ref> [18] </ref> suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [8], Stinson [17], Shoup [16], and Rogaway [15]. See [15] for more details and references.
References-found: 18

