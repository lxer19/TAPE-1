URL: http://www.cs.huji.ac.il/~noam/prcc.ps
Refering-URL: http://www.cs.huji.ac.il/~noam/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Pseudorandomness for Network Algorithms  
Author: Russell Impagliazzo Noam Nisan Avi Wigderson 
Abstract: We define pseudorandom generators for Yao's two-party communication complexity model and exhibit a simple construction, based on expanders, for it. We then use a recursive composition of such generators to obtain pseudorandom generators that fool distributed network algorithms. While the construction and the proofs are simple, we demonstrate the generality of such generators by giving several applications. 
Abstract-found: 1
Intro-found: 1
Reference: [AC88] <author> N. Alon and F. R. K. Chung. </author> <title> Explicit Constructions of Linear Sized Tolerant Networks. </title> <booktitle> In Discrete Mathematics 72, </booktitle> <pages> pp. 15-19, </pages> <year> 1988. </year>
Reference-contexts: In particular, if H is Ramanujan [LPS86], g is a (d=4)generator. Proof: For every graph H = (V; E) of degree D and second largest eigenvalue , and for every S; T V we have the standard inequality (see e.g. <ref> [AC88] </ref>) j jEj jSj jT j j D In our context, the left-hand side is exactly the difference in probability that a pair of vertices (a; b) belongs to the "rectangle" S fi T , where in the first expression it is chosen as the endpoints of uniformly random directed edge
Reference: [AS90] <author> N. Alon, P. Seymour. </author> <title> A Separator Theorem for Graphs with an Excluded Minor and its Applications. </title> <booktitle> In Proc. of the 22nd STOC, </booktitle> <pages> pp. 293-299, </pages> <year> 1990. </year>
Reference-contexts: Any graph with "tree-width" k has width O (k) (see e.g. [Re92].) 3. Any planar graph on n vertices has width O ( n), and in fact has total width O ( p [LT79]. The same bounds apply also to graphs with bounded genus or with any forbidden minor <ref> [AS90] </ref>. 4. A d-dimensional mesh on N vertices has width (and, in fact, total width) O (N 11=d ). 1 We consider the number of vertices which cover the cut instead of the size of the cut since we will assume a bound on the communication of each processor.
Reference: [AW85] <author> M. Ajtai and A. Wigderson. </author> <title> Deterministic simulation of probabilistic constant depth circuits. </title> <booktitle> In 26th FOCS, </booktitle> <pages> pages 11-19, </pages> <year> 1985. </year>
Reference-contexts: The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators. To this class of results belong the pseudorandom generators for various constant-depth circuits <ref> [AW85, Nis91, LVW93] </ref> and for space-bounded Turing machines [BNS89, Nis92, NZ93]. Our paper adds a significant number of computational models for which such unconditional results can be proved.
Reference: [BFNW] <author> L. Babai, L. Fortnow, N. Nisan, and A. Wigderson. </author> <title> Bpp has subexponential time simulations unless exptime has publishable proofs. </title> <note> To appear in Journal of Complexity Theory. </note>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
Reference: [BM82] <author> M. Blum and S. Micali. </author> <title> How to generate cryptographically strong sequences of Page 8 pseudo-random bits. </title> <booktitle> In 23rd FOCS, </booktitle> <pages> pages 112-117, </pages> <year> 1982. </year>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
Reference: [BNS89] <author> L. Babai, N. Nisan, and M. Szegedy. </author> <title> Multi-party protocols and Logspace-hard pseudorandom sequences. </title> <booktitle> In 21st STOC, </booktitle> <pages> pages 1-11, </pages> <year> 1989. </year>
Reference-contexts: The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators. To this class of results belong the pseudorandom generators for various constant-depth circuits [AW85, Nis91, LVW93] and for space-bounded Turing machines <ref> [BNS89, Nis92, NZ93] </ref>. Our paper adds a significant number of computational models for which such unconditional results can be proved. We present a new construction of a pseudorandom generator which fools every computational model which can be described as a network of probabilistic processors. <p> We have two examples in mind: the first is an arbitrary space (S) machine which treats its input tape as though it was a source of random bits, i.e. in one-way fashion. This is the model considered in <ref> [BNS89, Nis92] </ref>. The second example is an arbitrary two-way finite automata. Theorem 3 There exists an efficient generator G : f0; 1g m ! f0; 1g n which is pseudorandom, to within *, for space (S) bounded read-multiplicity machines, where m = O ((S + log (n=*)) log n).
Reference: [GKL88] <author> O. Goldreich, H. Krawcyzk, M. Luby. </author> <title> On the Existence of Pseudorandom Generators. </title> <booktitle> In 29th FOCS, </booktitle> <pages> pp. 12-24, </pages> <year> 1988. </year>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
Reference: [Has90] <author> J. Hastad. </author> <title> Pseudorandom generators under uniform assumptions, </title> <booktitle> In 22nd STOC, </booktitle> <pages> pp 395-404, </pages> <year> 1990. </year>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
Reference: [ILL89] <author> R. Impagliazzo, L. Levin, and M. Luby. </author> <title> Pseudo-random number generation from one-way functions. </title> <booktitle> In 21st STOC, </booktitle> <pages> pages 12-24, </pages> <year> 1989. </year>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
Reference: [LPS86] <author> A. Lubotzky, R. Phillips, and P. Sarnak. </author> <title> Explicit expanders and the Ramanujan conjectures. </title> <booktitle> In 18th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 240-246, </pages> <year> 1986. </year>
Reference-contexts: Thus g accepts an m = r + d bit string and produces two r bit strings. Page 2 Theorem 1 g is a c-generator, for c = (d log )=2, where is the second largest eigenvalue of H. In particular, if H is Ramanujan <ref> [LPS86] </ref>, g is a (d=4)generator.
Reference: [LT79] <author> R. J. Lipton, R. E. Tarjan. </author> <title> A separator theorem for planar graphs. </title> <journal> SIAM J. Appl. Math. </journal> <volume> 36, </volume> <pages> pp. 177-189, </pages> <year> 1979. </year>
Reference-contexts: Examples: 1. Any tree has width O (1). 2. Any graph with "tree-width" k has width O (k) (see e.g. [Re92].) 3. Any planar graph on n vertices has width O ( n), and in fact has total width O ( p <ref> [LT79] </ref>. The same bounds apply also to graphs with bounded genus or with any forbidden minor [AS90]. 4.
Reference: [LVW93] <author> M. Luby, B. Velickovic, A. Wigderson. </author> <title> Deterministic Approximate Counting of Depth-2 Circuits. </title> <booktitle> In Proc. of the 2nd ISTCS (Israeli Symposium on Theoretical Computer Science), </booktitle> <pages> pp. 18-24, </pages> <year> 1993. </year>
Reference-contexts: The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators. To this class of results belong the pseudorandom generators for various constant-depth circuits <ref> [AW85, Nis91, LVW93] </ref> and for space-bounded Turing machines [BNS89, Nis92, NZ93]. Our paper adds a significant number of computational models for which such unconditional results can be proved. <p> This will take de terministic time 2 m T ime (G), where T ime (G) is the complexity of evaluating G. This approach was used to approximately count the number of accepted inputs to constant depth circuits [Nis91] and to GF (2) polynomials in <ref> [LVW93] </ref>. Since our generators are efficient (computable in polynomial time), the two theorems below add nontrivial algorithms for this approximate counting problem for two other circuit classes: read-once formula and planar circuits. Moreover, both results hold for any choice of finite basis for the gates of the circuit.
Reference: [Nis91] <author> N. Nisan. </author> <title> Pseudorandom bits for constant depth circuits. </title> <booktitle> In Combinatorica 11 (1), </booktitle> <pages> pp. 63-70, </pages> <year> 1991. </year>
Reference-contexts: The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators. To this class of results belong the pseudorandom generators for various constant-depth circuits <ref> [AW85, Nis91, LVW93] </ref> and for space-bounded Turing machines [BNS89, Nis92, NZ93]. Our paper adds a significant number of computational models for which such unconditional results can be proved. <p> This will take de terministic time 2 m T ime (G), where T ime (G) is the complexity of evaluating G. This approach was used to approximately count the number of accepted inputs to constant depth circuits <ref> [Nis91] </ref> and to GF (2) polynomials in [LVW93]. Since our generators are efficient (computable in polynomial time), the two theorems below add nontrivial algorithms for this approximate counting problem for two other circuit classes: read-once formula and planar circuits.
Reference: [Nis92] <author> N. Nisan. </author> <title> Pseudo-random sequences for space bounded computation. </title> <booktitle> In Combina-torica 12 (4), </booktitle> <pages> pp 449-461, </pages> <year> 1992. </year>
Reference-contexts: The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators. To this class of results belong the pseudorandom generators for various constant-depth circuits [AW85, Nis91, LVW93] and for space-bounded Turing machines <ref> [BNS89, Nis92, NZ93] </ref>. Our paper adds a significant number of computational models for which such unconditional results can be proved. We present a new construction of a pseudorandom generator which fools every computational model which can be described as a network of probabilistic processors. <p> We obtain an O (log 2 n) generator for what we call bounded read-multiplicity Logspace machines. This includes as a special case Nisan's pseudorandom generator for Logspace machines <ref> [Nis92] </ref>. This also includes as a special case arbitrary two-way finite automata. * Turing machines. We obtain a ~ O ( p erator for one-tape time (T ) Turing machines. We also obtain a ~ O ( p ST ) generator for general time (T )-space (S) bounded Turing machines. <p> We have two examples in mind: the first is an arbitrary space (S) machine which treats its input tape as though it was a source of random bits, i.e. in one-way fashion. This is the model considered in <ref> [BNS89, Nis92] </ref>. The second example is an arbitrary two-way finite automata. Theorem 3 There exists an efficient generator G : f0; 1g m ! f0; 1g n which is pseudorandom, to within *, for space (S) bounded read-multiplicity machines, where m = O ((S + log (n=*)) log n).
Reference: [NW88] <author> N. Nisan and A. Wigderson. </author> <title> Hardness vs. randomness. </title> <booktitle> In FOCS, </booktitle> <year> 1988. </year>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
Reference: [NZ93] <author> N. Nisan and D. Zuckerman. </author> <title> More deterministic simulation in Logspace. </title> <booktitle> In STOC, </booktitle> <year> 1993. </year>
Reference-contexts: The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators. To this class of results belong the pseudorandom generators for various constant-depth circuits [AW85, Nis91, LVW93] and for space-bounded Turing machines <ref> [BNS89, Nis92, NZ93] </ref>. Our paper adds a significant number of computational models for which such unconditional results can be proved. We present a new construction of a pseudorandom generator which fools every computational model which can be described as a network of probabilistic processors.
Reference: [Re92] <author> B. </author> <title> Read. Finding Approximate Separators and Computing Tree-Width Quickly. </title> <booktitle> In Proc. of the 24th STOC, </booktitle> <pages> pp. 221-228, </pages> <year> 1992. </year>
Reference-contexts: Examples: 1. Any tree has width O (1). 2. Any graph with "tree-width" k has width O (k) (see e.g. <ref> [Re92] </ref>.) 3. Any planar graph on n vertices has width O ( n), and in fact has total width O ( p [LT79]. The same bounds apply also to graphs with bounded genus or with any forbidden minor [AS90]. 4.
Reference: [We87] <author> I. Wegener. </author> <title> The complexity of Boolean functions, </title> <address> Wiley-Teubner, </address> <year> 1987. </year>
Reference-contexts: Note: We do not care here about the distinction usually made between having the inputs presented at the boundary of the planar embedding or not <ref> [We87] </ref>. Also, as in the space results, we cannot hope to beat the best known lower bounds for planar circuits, which are quadratic. Again, our generator essentially meets this bound.
Reference: [Y79] <author> A. C.-C. Yao. </author> <title> Some complexity questions related to distributive computing. </title> <booktitle> In Proceedings of 11 th STOC, </booktitle> <pages> pp. </pages> <month> 209-213 </month> <year> 1979. </year>
Reference-contexts: The savings are extremely significant (m = (log n) O (1) ) for networks such as paths, cycles and trees. As a "base-case" for the recursive construction of the pseudo-random generator, serves a new pseudorandom generator for the two-party communication complexity model of <ref> [Y79] </ref>, which is interesting in its own right.
Reference: [Yao82] <author> A. C. Yao. </author> <title> Theory and applications of trapdoor functions. </title> <booktitle> In FOCS, </booktitle> <pages> pages 80-91, </pages> <year> 1982. </year> <pages> Page 9 </pages>
Reference-contexts: In a conditional result (of the above type), the quality of the generator is based on some complexity theoretic assumption, which is believed but is not known to hold. Such results exist for very strong models, specifically polynomial time computation, under various assumptions <ref> [BM82, Yao82, GKL88, ILL89, Has90, NW88, BFNW] </ref>. The unconditional results use no unproven assumption, and typically demonstrate that weaker computational models can be fooled by pseudorandom generators.
References-found: 20

