URL: http://www.isp.pitt.edu/~rymon/papers/annals.ps
Refering-URL: http://www.isp.pitt.edu/~rymon/pubs.html
Root-URL: 
Title: An SE-tree-based Prime Implicant Generation Algorithm  
Author: Ron Rymon 
Address: Philadelphia, PA 19104  
Affiliation: Department of Computer and Information Science University of Pennsylvania  
Abstract: Prime implicants/implicates (PIs) have been shown to be a useful tool in several problem domains. In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have used PIs to characterize diagnoses. We present a PI generation algorithm which, although based on the general SE-tree-based search framework, is effectively an improvement of a particular PI generation algorithm proposed by [Slagle et al. 70]. The improvement is achieved via a decomposition tactic which is boosted by the SE-tree-based framework. The new algorithm is also more flexible in a number of ways. We present empirical results comparing the new algorithm to the old one, as well as to current PI generation algorithms.
Abstract-found: 1
Intro-found: 1
Reference: [Berge 73] <author> Berge, C., </author> <title> Graphs and Hypergraphs, Chapter 18, </title> <publisher> North-Holland Publishing Company, </publisher> <year> 1973. </year>
Reference-contexts: In particular, a Union-Find strategy [Tarjan 83] can be used. By itself, Theorem 4.1 is not very new. It can be viewed, for example, as a special case of a decomposition theorem for hypergraph transversals shown by <ref> [Berge 73] </ref>. However, it becomes very powerful when used in the SE-tree search framework. In particular, its SE-tree-based structure allows SE-HS to take advantage of partitioning in later stages, even if there was no partitioning at first.

Reference: [Forbus & de Kleer 1988] <author> Forbus, K. D., and de Kleer, J., </author> <title> Focusing the ATMS. </title> <booktitle> Proc. AAAI-88, </booktitle> <pages> pp. 193-198, </pages> <address> Saint Paul MN, </address> <year> 1988. </year>
Reference-contexts: Focusing facility. Due to the possibly overwhelming number of PIs, it may be impossible to explore them all within the constraints of a given application. In such applications, it may be beneficial to focus on those which are most probable or most important for other reasons (e.g. <ref> [Forbus & de Kleer 1988, de Kleer 91] </ref>). A variety of exploration policies can be defined in SE-HS using the priority queue. In particular, nodes can be explored in an order conforming to their cardinality, probability, utility, or any other monotonic preference function, without compromising the algorithm's correctness.
Reference: [Ginsberg 89] <author> Ginsberg, M., </author> <title> A Circumscriptive Theorem Prover, </title> <journal> Artificial Intelli gence, </journal> <volume> 39, </volume> <pages> pp. 209-230, </pages> <year> 1989. </year>
Reference: [Greiner et al. 89] <author> Greiner, R., Smith, B. A., and Wilkerson R. W., </author> <title> A Correction to the Algorithm in Reiter's Theory of Diagnosis. </title> <journal> Artificial Intelligence, </journal> <volume> 41, </volume> <pages> pp. 79-88, </pages> <year> 1989. </year>
Reference-contexts: Figure 5 presents some results from this experiment. In [Rymon 92], we also compare SE-HS to HS-Dag, a hitting set algorithm proposed by [Reiter 87] and <ref> [Greiner et al. 89] </ref> and which works by recursive clause-based expansion. A clause that is not hit by a node's label is picked, and that node is expanded with each of its components.
Reference: [Holzblatt 88] <author> Holzblatt, L. J., </author> <title> Diagnosing Multiple Failures Using Knowledge of Component States. </title> <booktitle> Proc. IEEE AI Applications, </booktitle> <pages> pp. 139-143, </pages> <year> 1988. </year>
Reference-contexts: Fault models. In diagnostic applications, it may sometimes be useful to encode knowledge about the expected behavior of the diagnosed system in the presence of certain faults (e.g. <ref> [Holzblatt 88, de Kleer & Williams 89, Struss & Dressler 89] </ref>.) As it turns, the theory of [de Kleer et al. 90] can be extended directly to multiple faults, with the diagnoses still characterized in terms of hitting sets.
Reference: [Hong et al. 74] <author> Hong, S. J., Cain, R. G., and Ostapko, D. L., </author> <title> MINI: A Heuristic Approach for Logic Minimization. </title> <journal> IBM Journal of Research and Development, </journal> <year> 1974, </year> <pages> pp. 443-458. </pages>
Reference-contexts: A number of algorithms were developed, including [Quine 52], [Karnaugh 53], [McCluskey 56], [Tison 67], [Slagle et al. 70], <ref> [Hong et al. 74] </ref>. Interest in PIs, which has declined with the development of new circuitry minimization technologies, has renewed in recent years when they were fl This research was supported in part by a graduate fellowship ARO Grant DAAL03-89-C0031PRI.
Reference: [Jackson & Pais 90] <author> Jackson, P., and Pais, J., </author> <title> Computing Prime Implicants. </title> <booktitle> Proc. Conference on Automated Deduction, </booktitle> <pages> pp. 543-557, </pages> <year> 1990. </year>
Reference-contexts: In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have characterized diagnoses using PIs. A number of new, and improved algorithms have emerged, e.g. <ref> [Jackson & Pais 90] </ref>, [Kean & Tsiknis 90], [de Kleer 92], [Ngair 92]. The algorithm presented here originates from the general SE-tree search framework [Rymon 92]. First, from that framework, we derive an algorithm which resembles the PI generation algorithm of [Slagle et al. 70]. <p> Number of Clauses Run time (CPU sec) vs. Literals and Literals/Clause saved in SE-HS because of its completeness and systematicity. Figure 6 presents some results from this experiment (note that run-time is drawn on a logarithmic scale). Finally, <ref> [Jackson & Pais 90] </ref> propose an algorithm that is based on the matrix representation in the connection calculus of [Bibel 82]. In this Matrix Method algorithm (MM), search proceeds by iteratively choosing one input disjunction at a time, and expanding open nodes to cover it.
Reference: [Karnaugh 53] <author> Karnaugh, G., </author> <title> The Map Method for Synthesis of Combinational Logic Circuits. </title> <journal> AIEE Trans. Communications and Electronics, </journal> <volume> vol. 72, </volume> <pages> pp. 593-599, </pages> <year> 1953. </year>
Reference-contexts: 1 Introduction Prime implicates/implicants (PIs) were a topic of great interest to researchers in the early days of computer science, in part because of their use in procedures for boolean function minimization [Quine 52]. A number of algorithms were developed, including [Quine 52], <ref> [Karnaugh 53] </ref>, [McCluskey 56], [Tison 67], [Slagle et al. 70], [Hong et al. 74]. Interest in PIs, which has declined with the development of new circuitry minimization technologies, has renewed in recent years when they were fl This research was supported in part by a graduate fellowship ARO Grant DAAL03-89-C0031PRI.
Reference: [Kean & Tsiknis 90] <author> Kean, A., and Tsiknis, G., </author> <title> An Incremental Method for Gener ating Prime implicants/Implicates. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 9 </volume> <pages> 185-206, </pages> <year> 1990. </year>
Reference-contexts: In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have characterized diagnoses using PIs. A number of new, and improved algorithms have emerged, e.g. [Jackson & Pais 90], <ref> [Kean & Tsiknis 90] </ref>, [de Kleer 92], [Ngair 92]. The algorithm presented here originates from the general SE-tree search framework [Rymon 92]. First, from that framework, we derive an algorithm which resembles the PI generation algorithm of [Slagle et al. 70]. <p> Such comparison is important because Ngair has shown his algorithm to be comparable, and in some instances preferable to other current algorithms such as IPIA <ref> [Kean & Tsiknis 90] </ref> and CLTMS [de Kleer 92]. Figure 5 presents some results from this experiment. In [Rymon 92], we also compare SE-HS to HS-Dag, a hitting set algorithm proposed by [Reiter 87] and [Greiner et al. 89] and which works by recursive clause-based expansion.
Reference: [Korf 92] <author> Korf, R. E., </author> <title> Linear-Space Best-First Search: Summary of Results. </title> <booktitle> In Proc. AAAI-92, </booktitle> <address> San Jose CA, </address> <year> 1992. </year>
Reference-contexts: Incrementalism. SE-HS has an incremental version in which hypotheses are gradually refined as more information becomes available. As a side note, the space burden of implementing a best-first search has been eased recently with the development of linear-space algorithms <ref> [Korf 92, Russell 92] </ref>. More important for the purpose of this paper, SE-HS can be augmented with a problem decomposition heuristic, resulting in an improvement in both space and run time.
Reference: [McCluskey 56] <author> McCluskey, E., </author> <title> Minimization of Boolean Functions. </title> <journal> Bell System Technical Journal, </journal> <volume> 35 </volume> <pages> 1417-1444, </pages> <year> 1956. </year> <month> 16 </month>
Reference-contexts: 1 Introduction Prime implicates/implicants (PIs) were a topic of great interest to researchers in the early days of computer science, in part because of their use in procedures for boolean function minimization [Quine 52]. A number of algorithms were developed, including [Quine 52], [Karnaugh 53], <ref> [McCluskey 56] </ref>, [Tison 67], [Slagle et al. 70], [Hong et al. 74]. Interest in PIs, which has declined with the development of new circuitry minimization technologies, has renewed in recent years when they were fl This research was supported in part by a graduate fellowship ARO Grant DAAL03-89-C0031PRI.
Reference: [Ngair 92] <author> Ngair, T., </author> <title> Convex Spaces as an Order-Theoretic Basis for Problem Solving, </title> <type> Ph. D. Thesis, </type> <institution> Department of Computer and Information Science, University of Pennsylvania, </institution> <year> 1992. </year>
Reference-contexts: In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have characterized diagnoses using PIs. A number of new, and improved algorithms have emerged, e.g. [Jackson & Pais 90], [Kean & Tsiknis 90], [de Kleer 92], <ref> [Ngair 92] </ref>. The algorithm presented here originates from the general SE-tree search framework [Rymon 92]. First, from that framework, we derive an algorithm which resembles the PI generation algorithm of [Slagle et al. 70]. <p> Run time (CPU sec) vs. Number of Clauses Number of Nodes vs. Number of Clauses 6 Other Related Work In [Rymon 92], we present an experiment in which SE-HS (without decomposition) is compared to a PHI-based PI generation algorithm <ref> [Ngair 92] </ref>. Such comparison is important because Ngair has shown his algorithm to be comparable, and in some instances preferable to other current algorithms such as IPIA [Kean & Tsiknis 90] and CLTMS [de Kleer 92]. Figure 5 presents some results from this experiment.
Reference: [Quine 52] <author> Quine, J. O. W., </author> <title> The Problem of Simplifying Truth Functions. </title> <journal> American Mathematical Monthly, </journal> <volume> 59 </volume> <pages> 521-531, </pages> <year> 1952. </year>
Reference-contexts: 1 Introduction Prime implicates/implicants (PIs) were a topic of great interest to researchers in the early days of computer science, in part because of their use in procedures for boolean function minimization <ref> [Quine 52] </ref>. A number of algorithms were developed, including [Quine 52], [Karnaugh 53], [McCluskey 56], [Tison 67], [Slagle et al. 70], [Hong et al. 74]. <p> 1 Introduction Prime implicates/implicants (PIs) were a topic of great interest to researchers in the early days of computer science, in part because of their use in procedures for boolean function minimization <ref> [Quine 52] </ref>. A number of algorithms were developed, including [Quine 52], [Karnaugh 53], [McCluskey 56], [Tison 67], [Slagle et al. 70], [Hong et al. 74].
Reference: [Raiman & de Kleer 92] <author> Raiman, O., and de Kleer, J., </author> <title> A Minimality Maintenance System. </title> <note> To appear in Proc. </note> <institution> KR-92, </institution> <address> Cambridge MA, </address> <month> Oct 92. </month>
Reference-contexts: Address for correspondence: Ron Rymon, Department of Computer and Information Science, University of Pennsylvania, Philadelphia, PA 19104, E-mail: rymon@linc.cis.upenn.edu. 1 shown to play a role in modeling and implementing TMSs and ATMSs ([Reiter 87], [de Kleer 90]), and circumscription ([Ginsberg 89], <ref> [Raiman & de Kleer 92] </ref>). In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have characterized diagnoses using PIs. A number of new, and improved algorithms have emerged, e.g. [Jackson & Pais 90], [Kean & Tsiknis 90], [de Kleer 92], [Ngair 92].
Reference: [Reiter 87] <author> Reiter, R., </author> <title> A Theory of Diagnosis From First Principles. </title> <journal> Artificial Intel ligence, </journal> <volume> 32, </volume> <pages> pp. 57-95, </pages> <year> 1987. </year>
Reference-contexts: Many algorithms, including our own, assume that formulae are given in such form. In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have used prime implicants in their characterization of a diagnostic problem's solutions. In their theory, an extension of <ref> [Reiter 87] </ref>, a special predicate ab is used to indicate whether or not a component is faulty. <p> Figure 5 presents some results from this experiment. In [Rymon 92], we also compare SE-HS to HS-Dag, a hitting set algorithm proposed by <ref> [Reiter 87] </ref> and [Greiner et al. 89] and which works by recursive clause-based expansion. A clause that is not hit by a node's label is picked, and that node is expanded with each of its components.
Reference: [Russell 92] <author> Russell, S., </author> <title> Efficient Memory-Bounded Search Algorithms. </title> <booktitle> In Proc. ECAI-92, </booktitle> <address> Vienna, Austria, </address> <year> 1992. </year>
Reference-contexts: Incrementalism. SE-HS has an incremental version in which hypotheses are gradually refined as more information becomes available. As a side note, the space burden of implementing a best-first search has been eased recently with the development of linear-space algorithms <ref> [Korf 92, Russell 92] </ref>. More important for the purpose of this paper, SE-HS can be augmented with a problem decomposition heuristic, resulting in an improvement in both space and run time.
Reference: [Rymon 92] <author> Rymon, R., </author> <title> Search through Systematic Set Enumeration. </title> <note> To appear in Proc. </note> <institution> KR-92, </institution> <address> Cambridge MA, </address> <month> Oct </month> <year> 1992. </year>
Reference-contexts: In Model-Based Diagnosis (MBD), [de Kleer et al. 90] have characterized diagnoses using PIs. A number of new, and improved algorithms have emerged, e.g. [Jackson & Pais 90], [Kean & Tsiknis 90], [de Kleer 92], [Ngair 92]. The algorithm presented here originates from the general SE-tree search framework <ref> [Rymon 92] </ref>. First, from that framework, we derive an algorithm which resembles the PI generation algorithm of [Slagle et al. 70]. This algorithm is then improved using a standard problem decomposition tactic which is significantly empowered when used in the SE-tree-based framework. <p> While in most cases, one is not interested in trivial PIs, those can be trivially computed after the non-trivial ones. 3 SE-tree-based Hitting Set Algorithm 3.1 Set Enumeration Trees The basic Set-Enumeration tree (SE-tree) is a vehicle for representing and/or enumerating sets in a best-first fashion <ref> [Rymon 92] </ref>. The extended SE-tree does the same 3 for sets of variable-value pairs denoting partial assignments of values to a set of variables. Both versions of the SE-tree use a pre-imposed order on the underlying set of elements or variables to derive a systematic enumeration of partial assignments. <p> Each data point was obtained by averaging each algorithm's performance on 10 different cases. Run time (CPU sec) vs. Number of Clauses Number of Nodes vs. Number of Clauses 6 Other Related Work In <ref> [Rymon 92] </ref>, we present an experiment in which SE-HS (without decomposition) is compared to a PHI-based PI generation algorithm [Ngair 92]. <p> Such comparison is important because Ngair has shown his algorithm to be comparable, and in some instances preferable to other current algorithms such as IPIA [Kean & Tsiknis 90] and CLTMS [de Kleer 92]. Figure 5 presents some results from this experiment. In <ref> [Rymon 92] </ref>, we also compare SE-HS to HS-Dag, a hitting set algorithm proposed by [Reiter 87] and [Greiner et al. 89] and which works by recursive clause-based expansion. A clause that is not hit by a node's label is picked, and that node is expanded with each of its components. <p> Number of Literals have implemented the algorithm both with and without the decomposition tactic, and have empirically compared the two. Comparison to other algorithms is also discussed. Acknowledgements Parts of this paper are based on an earlier paper describing the SE-tree search method <ref> [Rymon 92] </ref>. I thank Teow-Hin Ngair, Greg Provan, Russ Greiner, Alex Kean, and Peter Jackson for useful discussions and suggestions. I also thank Jeff Siskind, Bonnie Webber, and an anonymous reviewer for comments on previous drafts.
Reference: [Shannon 48] <author> Shannon, C. E., </author> <title> A Mathematical Theory of Communication. </title> <journal> Bell Syst. Tech. J., </journal> <volume> 27, </volume> <pages> pp. 379-623, </pages> <year> 1948. </year>
Reference: [Slagle et al. 70] <author> Slagle, J. R., Chang, C, and Lee R. C., </author> <title> A New Algorithm for Gen erating Prime Implicants. </title> <journal> IEEE Trans. on Computers, </journal> <volume> 19(4), </volume> <year> 1970. </year>
Reference-contexts: 1 Introduction Prime implicates/implicants (PIs) were a topic of great interest to researchers in the early days of computer science, in part because of their use in procedures for boolean function minimization [Quine 52]. A number of algorithms were developed, including [Quine 52], [Karnaugh 53], [McCluskey 56], [Tison 67], <ref> [Slagle et al. 70] </ref>, [Hong et al. 74]. Interest in PIs, which has declined with the development of new circuitry minimization technologies, has renewed in recent years when they were fl This research was supported in part by a graduate fellowship ARO Grant DAAL03-89-C0031PRI. <p> The algorithm presented here originates from the general SE-tree search framework [Rymon 92]. First, from that framework, we derive an algorithm which resembles the PI generation algorithm of <ref> [Slagle et al. 70] </ref>. This algorithm is then improved using a standard problem decomposition tactic which is significantly empowered when used in the SE-tree-based framework. <p> For example, the set feg is not explored in the first level since, according to the SE-tree structure, none of its expansions could ever hit the set fc; dg. 2 Although SE-HS has its origin in the general SE-tree search method, its execution trace corresponds to that of <ref> [Slagle et al. 70] </ref>'s semantic tree if one ignores the lat-ter's frequency-based ordering heuristic. A slight twist to the SE-tree-based search, permitting re-ordering of variables in a node's V iew would allow the implementation of that heuristic and others (e.g. exploration according to an information-gain crite 7 rion). <p> MM, however, requires more subsumption checkings than SE-HS. We plan to empirically compare MM and the decomposition-based SE-HSd. 7 Summary We have presented a prime implicant/implicate generation algorithm that is based on the general SE-tree search method. This algorithm, which was shown to correspond to an algorithm by <ref> [Slagle et al. 70] </ref>, was subsequently improved using a problem decomposition tactic. The SE-tree features of the search allowed using a significantly more powerful version of that decomposition theorem. To verify this improvement, we 14 Run time (CPU sec) vs. Number of Literals Number of Nodes vs.
Reference: [Struss & Dressler 89] <author> Struss, P., and Dressler, O., </author> <title> "Physical Negation" Integrating Fault Models into the General Diagnostic Engine. </title> <booktitle> Proc. IJCAI-89, </booktitle> <pages> pp. 1318-1323, </pages> <address> Detroit MI, </address> <year> 1989. </year>
Reference-contexts: Fault models. In diagnostic applications, it may sometimes be useful to encode knowledge about the expected behavior of the diagnosed system in the presence of certain faults (e.g. <ref> [Holzblatt 88, de Kleer & Williams 89, Struss & Dressler 89] </ref>.) As it turns, the theory of [de Kleer et al. 90] can be extended directly to multiple faults, with the diagnoses still characterized in terms of hitting sets.
Reference: [Tarjan 83] <author> Tarjan, R., </author> <title> Data Structures and Network Algorithms. Society for Indus trial and Applied Mathematics, </title> <address> Philadelphia PA, </address> <year> 1983. </year>
Reference-contexts: A maximal partition is obtained if the sets in the collection are divided into equivalence classes based on a "shared variable" relation. Fortunately, if such partitioning exists, there are a few simple almost-linear algorithms that can be used to find it. In particular, a Union-Find strategy <ref> [Tarjan 83] </ref> can be used. By itself, Theorem 4.1 is not very new. It can be viewed, for example, as a special case of a decomposition theorem for hypergraph transversals shown by [Berge 73]. However, it becomes very powerful when used in the SE-tree search framework.
Reference: [Tison 67] <author> Tison, P., </author> <title> Generalized Consensus Theory and Application to the Mini mization of Boolean Functions. </title> <journal> IEEE Trans. on Computers, </journal> <volume> 16(4) </volume> <pages> 446-456, </pages> <year> 1967. </year>
Reference-contexts: 1 Introduction Prime implicates/implicants (PIs) were a topic of great interest to researchers in the early days of computer science, in part because of their use in procedures for boolean function minimization [Quine 52]. A number of algorithms were developed, including [Quine 52], [Karnaugh 53], [McCluskey 56], <ref> [Tison 67] </ref>, [Slagle et al. 70], [Hong et al. 74]. Interest in PIs, which has declined with the development of new circuitry minimization technologies, has renewed in recent years when they were fl This research was supported in part by a graduate fellowship ARO Grant DAAL03-89-C0031PRI.
Reference: [Wu 90] <author> Wu, T. D., </author> <title> A Problem Decomposition Method for Efficient Diagnosis and Interpretation of Multiple Disorders. </title> <booktitle> Proc. SCAMC-90, </booktitle> <pages> pp. 86-92, </pages> <address> Washington DC, </address> <year> 1990. </year>
Reference-contexts: For example, in the context of diagnosis, such an opportunity may arise when the fault is composed of a number of unrelated, or partially related sub-faults. <ref> [Wu 90] </ref> shows substantial gain in utilizing problem decomposition techniques in diagnosis. 8 In some problem domains, one may be interested in one solution. For example, in diagnosis, one may be interested in a diagnosis of minimum cardinality, or in one which maximizes some probabilistic or utility-based measure.
References-found: 23

