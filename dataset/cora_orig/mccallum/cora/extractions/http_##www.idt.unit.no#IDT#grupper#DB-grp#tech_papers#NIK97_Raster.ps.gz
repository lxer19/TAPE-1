URL: http://www.idt.unit.no/IDT/grupper/DB-grp/tech_papers/NIK97_Raster.ps.gz
Refering-URL: http://www.idt.unit.no/IDT/grupper/DB-grp/tech_papers/tech_papers.html
Root-URL: 
Email: email: kjellb@idi.ntnu.no  
Title: Storage of Two and Three Dimensional Raster Type Data for Optimized Retrieval of One, Two
Author: Kjell Bratbergsengen 
Keyword: storage and retrieval, matrix, optimization  
Note: The  is several tracks.  
Address: Trondheim, Norway  
Affiliation: Department of Computer Systems and Information Science Norwegian University of Science and Technology,  
Abstract: We are analyzing storage structures for two and three dimensional raster type data which are used for feature retrieval. The features are one, two or three dimensional objects with regular outlines like a rectangle or a prism. The features could be parts of a map or image, an area of special interest for searching after oil, a sequence of ultra sound images, and so on. The storage medium is magnetic disk. The data are stored in chunks or blocks representing a regular part of the source object. We analyze the shape and the size to minimize the cost of retrieval. The optimization is based on minimum time to do retrieval. We have five combinations: Lines and areas from areas and volumes, and volumes from volumes. The optimal block sizes for random retrieval varies, with case, feature size and disk characteristics. One general observation is that longer disk tracks gives larger blocks. For line retrieval the optimal block size is only depending on disk track length. For other cases it is also depending on the feature size. For partly sequential retrieval the block size is not the actual block size used during retrieval, but the smallest addressing unit, and the optimal addressing unit could be rather small. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Bratbergsengen. </author> <title> Algebra Operations on a Parallel Computer Performance Evaluation. </title> <booktitle> In The 5th International Workshop on Database Machines, </booktitle> <address> Karuizawa, Japan, </address> <month> October </month> <year> 1987. </year>
Reference-contexts: Especially seismic data are so voluminous that response times are longer than accepted by advanced users. The oil explorers would like to "fly" within their "sky of rock hardiness data" to follow structures that might have trapped oil. We wanted to use our parallel machines (see <ref> [1, 4] </ref>) to overcome the data supply bottleneck of this visualization task. The problem was given as a project and later thesis subject to two of our students Jan Helge Ekeren and Yngve Tuseth Aasheim. They implemented a prototype which is described in [5] and [6].
Reference: [2] <author> K. Bratbergsengen. </author> <title> Efficient Storage of Two and Three Dimensional Raster Type Data with Respect to Retrieval of One, Two or Three Dimensional Features . Technical report, </title> <institution> Department of Computer Systems and Information Sciences, Norwegian University of Science and Technology, Trondheim, </institution> <month> November </month> <year> 1997. </year>
Reference-contexts: The multidimensional chunks have a fixed size chosen or given by the operating system, and the optimization is to give it a shape which is minimizing the number of fetches. The chunk size itself is not considered. The present paper is based on a report <ref> [2] </ref>, which should be consulted when details are of interest.
Reference: [3] <author> K. Bratbergsengen. Filsystemer. </author> <title> Lagring og behandling av store datamengder, in Norwegian. </title> <address> Tapir, Trondheim, </address> <year> 1997. </year>
Reference-contexts: V is the amount of data transferred, and V =b is the number of accesses. If we set t = 1 we have the simplified equation for the transfer time: t (V ) = ! 1 + V s (2) More on disk performance modeling can be found in <ref> [8, 7, 3] </ref>.
Reference: [4] <author> K. Bratbergsengen and T. Gjelsvik. </author> <booktitle> The Development of the CROSS8 and HC16-186 Parallel (Database) Computers. In Proceedings of the 6th International Workshop on Database Machines, </booktitle> <address> France, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: Especially seismic data are so voluminous that response times are longer than accepted by advanced users. The oil explorers would like to "fly" within their "sky of rock hardiness data" to follow structures that might have trapped oil. We wanted to use our parallel machines (see <ref> [1, 4] </ref>) to overcome the data supply bottleneck of this visualization task. The problem was given as a project and later thesis subject to two of our students Jan Helge Ekeren and Yngve Tuseth Aasheim. They implemented a prototype which is described in [5] and [6].
Reference: [5] <author> J. H. Ekeren and Y. T. Aasheim. </author> <title> Paravision - presentasjon av seismiske data pa Hyperkuben. </title> <type> Technical report, </type> <institution> Department of Computer Systems and Telematics, The Norwegian Institute of Technology, University of Trondheim, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: The problem was given as a project and later thesis subject to two of our students Jan Helge Ekeren and Yngve Tuseth Aasheim. They implemented a prototype which is described in <ref> [5] </ref> and [6]. The work with Ekeren and Aasheim focused on the parallelization of the problem, not on I/O optimization on the individual nodes. This paper is strictly about I/O optimization on one computer and we will return to the parallel system in a later paper.
Reference: [6] <author> J. H. Ekeren and Y. T. Aasheim. </author> <title> Paravision a visualization tool for 3-d datasets. </title> <type> Technical report, </type> <institution> Department of Computer Systems and Telematics, The Norwegian Institute of Technology, University of Trondheim, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: The problem was given as a project and later thesis subject to two of our students Jan Helge Ekeren and Yngve Tuseth Aasheim. They implemented a prototype which is described in [5] and <ref> [6] </ref>. The work with Ekeren and Aasheim focused on the parallelization of the problem, not on I/O optimization on the individual nodes. This paper is strictly about I/O optimization on one computer and we will return to the parallel system in a later paper.
Reference: [7] <author> D. Kotz, S. B. Toh, and S. Radhakrishnan. </author> <title> A Detailed Simulation Model of the HP 97560 Disk Drive. </title> <type> Technical report, </type> <institution> Department of Computer Science, Dartmouth College, </institution> <address> Hanover, NH 03755-3510. ftp://ftp.cs.dartmouth.edu/pub/CS-techreports/TR94-220.ps.Z, </address> <year> 1994. </year>
Reference-contexts: V is the amount of data transferred, and V =b is the number of accesses. If we set t = 1 we have the simplified equation for the transfer time: t (V ) = ! 1 + V s (2) More on disk performance modeling can be found in <ref> [8, 7, 3] </ref>.
Reference: [8] <author> C. Ruemmler and J. Wilkes. </author> <title> An introduction to disk drive modeling. </title> <journal> IEEE Computer, </journal> <volume> 27(3), </volume> <month> March </month> <year> 1994. </year>
Reference-contexts: V is the amount of data transferred, and V =b is the number of accesses. If we set t = 1 we have the simplified equation for the transfer time: t (V ) = ! 1 + V s (2) More on disk performance modeling can be found in <ref> [8, 7, 3] </ref>. <p> If we set t = 1 we have the simplified equation for the transfer time: t (V ) = ! 1 + V s (2) More on disk performance modeling can be found in [8, 7, 3]. Ruemmler and Wilkes, <ref> [8] </ref> have also developed a model including the effects of disk cache, however this is not used here as disk cache has little effect on random reads. 1.2 Classification of the Different Cases The source objects we store data about, will be of two or three dimensions.
Reference: [9] <author> S. Sarawagi and M. Stonebraker. </author> <title> Efficient organization of large multidimensional arrays. </title> <booktitle> In Proceedings of 1994 IEEE 10 th International Conference on Data Engineering, </booktitle> <address> Houston, TX, USA, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: The work with Ekeren and Aasheim focused on the parallelization of the problem, not on I/O optimization on the individual nodes. This paper is strictly about I/O optimization on one computer and we will return to the parallel system in a later paper. Sarawagi and Stonebraker in <ref> [9] </ref> are storing data in multidimensional chunks to minimize the number of blocks fetched. They order the chunks to minimize seek distance.
References-found: 9

