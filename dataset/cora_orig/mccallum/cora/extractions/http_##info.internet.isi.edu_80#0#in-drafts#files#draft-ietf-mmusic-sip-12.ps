URL: http://info.internet.isi.edu:80/0/in-drafts/files/draft-ietf-mmusic-sip-12.ps
Refering-URL: http://info.internet.isi.edu:80/in-drafts/id-abstracts.html
Root-URL: http://www.isi.edu
Title: Internet Engineering Task Force MMUSIC WG a product of the Multi-party Multimedia Session Control (MMUSIC)
Author: INTERNET-DRAFT Handley/Schulzrinne/Schooler/Rosenberg 
Note: SIP: Session Initiation Protocol Status of this Memo This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. Distribution of this document is unlimited. Copyright Notice Copyright (c) The Internet Society (1999). All Rights Reserved. This document is  Force. Comments are solicited and should be addressed to the working group's mailing list at confctrl@isi.edu and/or the authors. Contents  
Date: January 15, 1999 Expires: July 1999  
Affiliation: draft-ietf-mmusic-sip-12.ps ISI/Columbia U./Caltech/Bell Labs.  
Abstract: Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as work in progress. To view the entire list of current Internet-Drafts, please check the 1id-abstracts.txt listing contained in the Internet-Drafts Shadow Directories on ftp.is.co.za (Africa), ftp.nordu.net (Northern Europe), ftp.nis.garr.it (Southern Europe), munnari.oz.au (Pacific Rim), ftp.ietf.org (US East Coast), or ftp.isi.edu (US West Coast). Abstract The Session Initiation Protocol (SIP) is an application-layer control (signaling) protocol for creating, modifying and terminating sessions with one or more participants. These sessions include Internet multimedia conferences, Internet telephone calls and multimedia distribution. Members in a session can communicate via multicast or via a mesh of unicast relations, or a combination of these. SIP invitations used to create sessions carry session descriptions which allow participants to agree on a set of compatible media types. SIP supports user mobility by proxying and redirecting requests to the user's current location. Users can register their current location. SIP is not tied to any particular conference control protocol. SIP is designed to be independent of the lower-layer transport protocol and can be extended with additional capabilities. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Pandya, </author> <title> Emerging mobile and personal communication systems, </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 33, </volume> <pages> pp. 4452, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Personal mobility is based on the use of a unique personal identity (i.e., personal number). <ref> [1, p. 44] </ref>. Personal mobility complements terminal mobility, i.e., the ability to maintain communications when moving a single end system from one subnet to another.
Reference: [2] <author> B. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin, </author> <title> Resource ReSerVation protocol (RSVP) version 1 functional specification, </title> <type> RFC 2205, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1997. </year>
Reference-contexts: Internet telephony gateways that connect Public Switched Telephone Network (PSTN) parties can also use SIP to set up calls between them. SIP is designed as part of the overall IETF multimedia data and control architecture currently incorporating protocols such as RSVP (RFC 2205 <ref> [2] </ref>) for reserving network resources, the real-time transport protocol Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 7] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 (RTP) (RFC 1889 [3]) for transporting real-time data and providing QOS feedback, the real-time streaming protocol (RTSP) (RFC 2326 [4]) for controlling delivery of streaming media, the session announcement protocol (SAP)
Reference: [3] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, RTP: </author> <title> a transport protocol for real-time applications, </title> <type> RFC 1889, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: SIP is designed as part of the overall IETF multimedia data and control architecture currently incorporating protocols such as RSVP (RFC 2205 [2]) for reserving network resources, the real-time transport protocol Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 7] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 (RTP) (RFC 1889 <ref> [3] </ref>) for transporting real-time data and providing QOS feedback, the real-time streaming protocol (RTSP) (RFC 2326 [4]) for controlling delivery of streaming media, the session announcement protocol (SAP) [5] for advertising multimedia sessions via multicast and the session description protocol (SDP) (RFC 2327 [6]) for describing multimedia sessions.
Reference: [4] <author> H. Schulzrinne, R. Lanphier, and A. Rao, </author> <title> Real time streaming protocol (RTSP), </title> <type> RFC 2326, </type> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1998. </year>
Reference-contexts: and control architecture currently incorporating protocols such as RSVP (RFC 2205 [2]) for reserving network resources, the real-time transport protocol Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 7] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 (RTP) (RFC 1889 [3]) for transporting real-time data and providing QOS feedback, the real-time streaming protocol (RTSP) (RFC 2326 <ref> [4] </ref>) for controlling delivery of streaming media, the session announcement protocol (SAP) [5] for advertising multimedia sessions via multicast and the session description protocol (SDP) (RFC 2327 [6]) for describing multimedia sessions. However, the functionality and operation of SIP does not depend on any of these protocols. <p> This procedure has been borrowed from RTSP <ref> [4] </ref> and the RTP AVP [26]. 5 Response After receiving and interpreting a request message, the recipient responds with a SIP response message.
Reference: [5] <author> M. Handley, </author> <title> SAP: Session announcement protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: for reserving network resources, the real-time transport protocol Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 7] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 (RTP) (RFC 1889 [3]) for transporting real-time data and providing QOS feedback, the real-time streaming protocol (RTSP) (RFC 2326 [4]) for controlling delivery of streaming media, the session announcement protocol (SAP) <ref> [5] </ref> for advertising multimedia sessions via multicast and the session description protocol (SDP) (RFC 2327 [6]) for describing multimedia sessions. However, the functionality and operation of SIP does not depend on any of these protocols. SIP can also be used in conjunction with other call setup and signaling protocols.
Reference: [6] <author> M. Handley and V. Jacobson, SDP: </author> <title> session description protocol, </title> <type> RFC 2327, </type> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1998. </year>
Reference-contexts: draft-ietf-mmusic-sip-12.ps January 15, 1999 (RTP) (RFC 1889 [3]) for transporting real-time data and providing QOS feedback, the real-time streaming protocol (RTSP) (RFC 2326 [4]) for controlling delivery of streaming media, the session announcement protocol (SAP) [5] for advertising multimedia sessions via multicast and the session description protocol (SDP) (RFC 2327 <ref> [6] </ref>) for describing multimedia sessions. However, the functionality and operation of SIP does not depend on any of these protocols. SIP can also be used in conjunction with other call setup and signaling protocols. <p> Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 9] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 Session: From the SDP specification: A multimedia session is a set of multimedia senders and receivers and the data streams flowing from senders to receivers. A multimedia conference is an example of a multimedia session. (RFC 2327 <ref> [6] </ref>) (A session as defined for SDP can comprise one or more RTP sessions.) As defined, a callee can be invited several times, by different calls, to the same session. <p> If the caller no longer wants to participate in the call, it sends a BYE request instead of an ACK. The INVITE request typically contains a session description, for example written in SDP (RFC 2327 <ref> [6] </ref>) format, that provides the called party with enough information to join the session. For multicast sessions, the session description enumerates the media types and formats that are allowed to be distributed to that session. <p> Then, Max-Forwards header could be used to restrict the registration to that server. 16.2 Invitation to a Multicast Conference The first example invites schooler@vlsi.cs.caltech.edu to a multicast session. All examples use the Session Description Protocol (SDP) (RFC 2327 <ref> [6] </ref>) as the session description format. 16.2.1 Request C-&gt;S: INVITE sip:schooler@cs.caltech.edu SIP/2.0 Via: SIP/2.0/UDP csvax.cs.caltech.edu;branch=8348 ;maddr=239.128.16.254;ttl=16 Via: SIP/2.0/UDP north.east.isi.edu From: Mark Handley &lt;sip:mjh@isi.edu&gt; To: Eve Schooler &lt;sip:schooler@caltech.edu&gt; Call-ID: 2963313058@north.east.isi.edu CSeq: 1 INVITE Subject: SIP will be discussed, too Content-Type: application/sdp Content-Length: 187 v=0 o=user1 53655765 2353687637 IN IP4 128.3.4.5 s=Mbone Audio <p> Clients MUST generate and parse the Call-ID, Content-Length, Content-Type, CSeq, From and To headers. Clients MUST also parse the Require header. A minimal implementation MUST understand SDP (RFC 2327, <ref> [6] </ref>). It MUST be able to recognize the status code classes 1 through 6 and act accordingly. The following capability sets build on top of the minimal implementation described in the previous paragraph. <p> b - Via g m m m m WWW-Authenticate 401 a - Table 6: Header Field Processing Requirements Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 99] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 B Usage of the Session Description Protocol (SDP) This section describes the use of the Session Description Protocol (SDP) (RFC 2327 <ref> [6] </ref>). B.1 Configuring Media Streams The caller and callee align their media descriptions so that the nth media stream (m= line) in the caller's session description corresponds to the nth media stream in the callee's description. All media descriptions SHOULD contain a=rtpmap mappings from RTP payload types to encodings.
Reference: [7] <author> International Telecommunication Union, </author> <title> Visual telephone systems and equipment for local area networks which provide a non-guaranteed quality of service, Recommendation H.323, </title> <institution> Telecommunication Standardization Sector of ITU, Geneva, Switzerland, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: In that mode, an end system uses SIP exchanges to determine the appropriate end system address and protocol from a given address that is protocol-independent. For example, SIP could be used to determine that the party can be reached via H.323 <ref> [7] </ref>, obtain the H.245 [8] gateway and user address and then use H.225.0 [9] to establish the call.
Reference: [8] <institution> International Telecommunication Union, Control protocol for multimedia communication, Recommendation H.245, Telecommunication Standardization Sector of ITU, Geneva, Switzerland, </institution> <month> Feb. </month> <year> 1998. </year>
Reference-contexts: In that mode, an end system uses SIP exchanges to determine the appropriate end system address and protocol from a given address that is protocol-independent. For example, SIP could be used to determine that the party can be reached via H.323 [7], obtain the H.245 <ref> [8] </ref> gateway and user address and then use H.225.0 [9] to establish the call. In another example, SIP might be used to determine that the callee is reachable via the PSTN and indicate the phone number to be called, possibly suggesting an Internet-to-PSTN gateway to be used.
Reference: [9] <institution> International Telecommunication Union, Media stream packetization and synchronization on non-guaranteed quality of service LANs, Recommendation H.225.0, Telecommunication Standardization Sector of ITU, Geneva, Switzerland, </institution> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: For example, SIP could be used to determine that the party can be reached via H.323 [7], obtain the H.245 [8] gateway and user address and then use H.225.0 <ref> [9] </ref> to establish the call. In another example, SIP might be used to determine that the callee is reachable via the PSTN and indicate the phone number to be called, possibly suggesting an Internet-to-PSTN gateway to be used. <p> C Summary of Augmented BNF All of the mechanisms specified in this document are described in both prose and an augmented Backus-Naur Form (BNF) similar to that used by RFC 822 <ref> [9] </ref>. Implementors will need to be familiar with the notation in order to understand this specification.
Reference: [10] <author> S. Bradner, </author> <title> Key words for use in RFCs to indicate requirement levels, </title> <type> RFC 2119, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year> <note> Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 108] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, </note> <year> 1999 </year>
Reference-contexts: SIP does not reserve resources, but can convey to the invited system the information necessary to do this. 1.2 Terminology In this document, the key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL are to be interpreted as described in RFC 2119 <ref> [10] </ref> and indicate requirement levels for compliant SIP implementations. 1.3 Definitions This specification uses a number of terms to refer to the roles played by participants in SIP communications. The definitions of client, server and proxy are similar to those used by the Hypertext Transport Protocol (HTTP) (RFC 2068 [11]).
Reference: [11] <author> R. Fielding, J. Gettys, J. Mogul, H. Nielsen, and T. Berners-Lee, </author> <title> Hypertext transfer protocol HTTP/1.1, RFC 2068, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: The definitions of client, server and proxy are similar to those used by the Hypertext Transport Protocol (HTTP) (RFC 2068 <ref> [11] </ref>). The terms and generic syntax of URI and URL are defined in RFC 2396 [12]. The following terms have special significance for SIP. Call: A call consists of all participants in a conference invited by a common source. <p> Except for the above difference in character sets, much of the message syntax is and header fields are identical to HTTP/1.1; rather than repeating the syntax and semantics here we use [HX.Y] to refer to Section X.Y of the current HTTP/1.1 specification (RFC 2068 <ref> [11] </ref>). In addition, we describe SIP in both prose and an augmented Backus-Naur form (ABNF). See section C for an overview of ABNF. Note, however, that SIP is not an extension of HTTP. Unlike HTTP, SIP MAY use UDP.
Reference: [12] <author> T. Berners-Lee, R. Fielding, and L. Masinter, </author> <title> Uniform resource identifiers (URI): generic syntax, </title> <type> RFC 2396, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1998. </year>
Reference-contexts: The definitions of client, server and proxy are similar to those used by the Hypertext Transport Protocol (HTTP) (RFC 2068 [11]). The terms and generic syntax of URI and URL are defined in RFC 2396 <ref> [12] </ref>. The following terms have special significance for SIP. Call: A call consists of all participants in a conference invited by a common source. A SIP call is identified by a globally unique call-id (Section 6.12). <p> This corresponds to the use of mailto: URLs. It makes it possible, for example, to specify the subject, urgency or media types of calls initiated through a web page or as part of an email message. A SIP URL follows the guidelines of RFC 2396 <ref> [12] </ref> and has the syntax shown in Fig. 3. The syntax is described using Augmented Backus-Naur Form (See Section C). Note that reserved characters have to be escaped and that the set of characters reserved within any given URI component is defined by that component. <p> Note that reserved characters have to be escaped and that the set of characters reserved within any given URI component is defined by that component. In general, a character is reserved if the semantics of the URI changes if the character is replaced with its escaped US-ASCII encoding <ref> [12] </ref>. The URI character classes referenced above are described in Appendix C. The components of the SIP URI have the following meanings. user: If the host is an Internet telephony gateway, the user field MAY also encode a telephone number using the notation of telephone-subscriber (Fig. 4). <p> ; US-ASCII CR, carriage return character LF = %d10 ; US-ASCII LF, line feed character SP = %d32 ; US-ASCII SP, space character HT = %d09 ; US-ASCII HT, horizontal tab character CRLF = CR LF ; typically the end of a line The following are defined in RFC 2396 <ref> [12] </ref> for the SIP URI: unreserved = alphanum j mark mark = - j j . j ! j j * j ' j ( j ) escaped = % hex hex SIP header field values can be folded onto multiple lines if the continuation line begins with a space or
Reference: [13] <author> T. Berners-Lee, L. Masinter, and M. McCahill, </author> <title> Uniform resource locators (URL), </title> <type> RFC 1738, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: The ACK request has the same CSeq number as the corresponding INVITE request, but comprises a transaction of its own. Upstream: Responses sent in the direction from the user agent server to the user agent client. URL-encoded: A character string encoded according to RFC 1738, Section 2.2 <ref> [13] </ref>. User agent client (UAC), calling user agent: A user agent client is a client application that initiates the SIP request.
Reference: [14] <author> A. Gulbrandsen and P. Vixie, </author> <title> A DNS RR for specifying the location of services (DNS SRV), RFC 2052, </title> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: *(qdtext j quoted-pair ) ) qdtext = any TEXT-UTF8 except The backslash character (n) MAY be used as a single-character quoting mechanism only within quoted-string and comment constructs. quoted-pair = n CHAR D Using SRV DNS Records The following procedure is experimental and relies on DNS SRV records (RFC 2052 <ref> [14] </ref>). The steps listed below are used in place of the two steps in section 1.4.2. If a step elicits no addresses, the client continues to the next step. <p> If it does not specify a protocol (TCP or UDP), the client queries the name server for SRV records for both UDP (if supported by the client) and TCP (if supported by the client) SIP servers. The format of these queries is defined in RFC 2052 <ref> [14] </ref>. The results of the query or queries are merged together and ordered based on priority. Then, the searching technique outlined in RFC 2052 [14] is used to select servers in order. If DNS doesn't return any records, the user goes to the last step. <p> The format of these queries is defined in RFC 2052 <ref> [14] </ref>. The results of the query or queries are merged together and ordered based on priority. Then, the searching technique outlined in RFC 2052 [14] is used to select servers in order. If DNS doesn't return any records, the user goes to the last step. Otherwise, the user attempts to contact each server in the order listed. If no server is contacted, the user gives up. 4. <p> If the client does not support the protocol specified in the Request-URI, it gives up. The searching technique outlined in RFC 2052 <ref> [14] </ref> is used to select servers from the DNS response in order. If DNS doesn't return any records, the user goes to the last step. Otherwise, the user attempts to contact each server in the order listed. If no server is contacted, the user gives up. 5.
Reference: [15] <author> P. Mockapetris, </author> <title> Domain names implementation and specification, RFC STD 13, </title> <type> 1035, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: When the client wishes to send a request to the same host, it MUST start the search as if it had just received this answer from the name server. The client MUST follow the procedures in RFC1035 <ref> [15] </ref> regarding DNS cache invalidation when the DNS time-to-live expires. 1.4.3 SIP Transaction Once the host part has been resolved to a SIP server, the client sends one or more SIP requwwests to that server and receives one or more responses from the server. <p> When the client wishes to send a request to the same host, it starts the search as if it had just received this answer from the name server. The server uses the procedures specified in RFC1035 <ref> [15] </ref> regarding cache invalidation when the time-to-live of the DNS result expires. If the client does not find a SIP server among the addresses listed in the cached answer, it starts the search at the beginning of the sequence described above.
Reference: [16] <author> M. Hamilton and R. Wright, </author> <title> Use of DNS aliases for network services, </title> <type> RFC 2219, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1997. </year>
Reference-contexts: There are no mandatory rules on how to select a host name for a SIP server. Users are encouraged to name their SIP servers using the sip.domainname (i.e., sip.example.com) convention, as specified in RFC 2219 <ref> [16] </ref>. Users may only know an email address instead of a full SIP URL for a callee, however.
Reference: [17] <author> D. Zimmerman, </author> <title> The finger user information protocol, </title> <type> RFC 1288, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: These locations can be dynamically registered with the SIP server (Sections 1.4.7, 4.2.6). A location server MAY also use one or more other protocols, such as finger (RFC 1288 <ref> [17] </ref>), rwhois (RFC 2167 [18]), LDAP (RFC 1777 [19]), multicast-based protocols [20] or operating-system dependent mechanisms to actively determine the end system where a user might be reachable.
Reference: [18] <author> S. Williamson, M. Kosters, D. Blacka, J. Singh, and K. Zeilstra, </author> <title> Referral whois (rwhois) protocol V1.5, </title> <type> RFC 2167, </type> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: These locations can be dynamically registered with the SIP server (Sections 1.4.7, 4.2.6). A location server MAY also use one or more other protocols, such as finger (RFC 1288 [17]), rwhois (RFC 2167 <ref> [18] </ref>), LDAP (RFC 1777 [19]), multicast-based protocols [20] or operating-system dependent mechanisms to actively determine the end system where a user might be reachable. A location server MAY return several locations because the user is logged in at several hosts simultaneously or because the location server has (temporarily) inaccurate information.
Reference: [19] <author> W. Yeong, T. Howes, and S. Kille, </author> <title> Lightweight directory access protocol, </title> <type> RFC 1777, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: These locations can be dynamically registered with the SIP server (Sections 1.4.7, 4.2.6). A location server MAY also use one or more other protocols, such as finger (RFC 1288 [17]), rwhois (RFC 2167 [18]), LDAP (RFC 1777 <ref> [19] </ref>), multicast-based protocols [20] or operating-system dependent mechanisms to actively determine the end system where a user might be reachable. A location server MAY return several locations because the user is logged in at several hosts simultaneously or because the location server has (temporarily) inaccurate information.
Reference: [20] <author> E. M. Schooler, </author> <title> A multicast user directory service for synchronous rendezvous, </title> <type> Master's Thesis CS-TR-96-18, </type> <institution> Department of Computer Science, California Institute of Technology, Pasadena, California, </institution> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: These locations can be dynamically registered with the SIP server (Sections 1.4.7, 4.2.6). A location server MAY also use one or more other protocols, such as finger (RFC 1288 [17]), rwhois (RFC 2167 [18]), LDAP (RFC 1777 [19]), multicast-based protocols <ref> [20] </ref> or operating-system dependent mechanisms to actively determine the end system where a user might be reachable. A location server MAY return several locations because the user is logged in at several hosts simultaneously or because the location server has (temporarily) inaccurate information. <p> This MAY be done with either TTL or administrative scopes [25], depending on what is implemented in the network. SIP user agents MAY listen to that address and use it to become aware of the location of other local users <ref> [20] </ref>; however, they do not respond to the request. A user agent MAY also be configured with the address of a registrar server to which it sends a REGISTER request upon startup. Requests are processed in the order received.
Reference: [21] <author> F. Yergeau, UTF-8, </author> <title> a transformation format of ISO 10646, </title> <type> RFC 2279, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1998. </year>
Reference-contexts: As an example, if a call from a telephone is relayed to the Internet via SIP, the SIP From header field might contain a phone URL. 3 SIP Message Overview SIP is a text-based protocol and uses the ISO 10646 character set in UTF-8 encoding (RFC 2279 <ref> [21] </ref>). Senders MUST terminate lines with a CRLF, but receivers MUST also interpret CR and LF by themselves as line terminators. <p> LWS = [CRLF] 1*( SP j HT ) ; linear whitespace The TEXT-UTF8 rule is only used for descriptive field contents and values that are not intended to be interpreted by the message parser. Words of *TEXT-UTF8 contain characters from the UTF-8 character set (RFC 2279 <ref> [21] </ref>). In this regard, SIP differs from HTTP, which uses the ISO 8859-1 character set.
Reference: [22] <author> W. R. Stevens, </author> <title> TCP/IP illustrated: </title> <booktitle> the protocols, </booktitle> <volume> vol. </volume> <pages> 1. </pages> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: UDP datagrams, including all headers, SHOULD NOT be larger than the path maximum transmission unit (MTU) if the MTU is known, or 1500 bytes if the MTU is unknown. The 1500 bytes accommodates encapsulation within the typical ethernet MTU without IP fragmentation. Recent studies <ref> [22, p. 154] </ref> indicate that an MTU of 1500 bytes is a reasonable assumption. The next lower common MTU values are 1006 bytes for SLIP and 296 for low-delay PPP (RFC 1191 [23]).
Reference: [23] <author> J. Mogul and S. Deering, </author> <title> Path MTU discovery, </title> <type> RFC 1191, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1990. </year>
Reference-contexts: The 1500 bytes accommodates encapsulation within the typical ethernet MTU without IP fragmentation. Recent studies [22, p. 154] indicate that an MTU of 1500 bytes is a reasonable assumption. The next lower common MTU values are 1006 bytes for SLIP and 296 for low-delay PPP (RFC 1191 <ref> [23] </ref>). Thus, another reasonable value would be a message size of 950 bytes, to accommodate packet headers within the SLIP MTU without fragmentation.
Reference: [24] <author> D. Crocker, </author> <title> Standard for the format of ARPA internet text messages, RFC STD 11, </title> <type> 822, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1982. </year>
Reference-contexts: SIP-message = Request j Response Both Request (section 4) and Response (section 5) messages use the generic-message format of RFC 822 <ref> [24] </ref> for transferring entities (the body of the message). Both types of messages consist of a start-line, one or more header fields (also known as headers), an empty line (i.e., a line with nothing preceding the carriage-return line-feed (CRLF)) indicating the end of the header fields, and an optional message-body. <p> 6.5 End-to-end and Hop-by-hop Headers End-to-end headers MUST be transmitted unmodified across all proxies, while hop-by-hop headers MAY be modified or added by proxies. 6.6 Header Field Format Header fields (general-header, request-header, response-header, and entity-header) follow the same generic header format as that given in Section 3.1 of RFC 822 <ref> [24] </ref>. Each header field consists of a name followed by a colon (:) and the field value. Field names are case-insensitive. The field value MAY be preceded by any amount of leading white space (LWS), though a single space (SP) is preferred. <p> Call-ID, To and From are needed to identify a call leg. The distinction between call and call leg matters in calls with multiple responses to a forked request. The format is similar to the equivalent RFC 822 <ref> [24] </ref> header, but with a URI instead of just an email address. 6.22 Hide A client uses the Hide request header field to indicate that it wants the path comprised of the Via header fields (Section 6.40) to be hidden from subsequent proxies and user agents.
Reference: [25] <author> D. Meyer, </author> <title> Administratively scoped IP multicast, </title> <type> RFC 2365, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1998. </year>
Reference-contexts: This request SHOULD be scoped to ensure it is not forwarded beyond the boundaries of the administrative system. This MAY be done with either TTL or administrative scopes <ref> [25] </ref>, depending on what is implemented in the network. SIP user agents MAY listen to that address and use it to become aware of the location of other local users [20]; however, they do not respond to the request. <p> This request SHOULD be scoped to ensure it is not forwarded beyond the boundaries of the administrative system. This MAY be done with either TTL or administrative scopes <ref> [25] </ref>, depending on what is implemented in the network. A client receiving a multicast query does not have to check whether the host part of the Request-URI matches its own host or domain name. If the request was received via multicast, the response is also returned via multicast.
Reference: [26] <author> H. Schulzrinne, </author> <title> RTP profile for audio and video conferences with minimal control, </title> <type> RFC 1890, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: This procedure has been borrowed from RTSP [4] and the RTP AVP <ref> [26] </ref>. 5 Response After receiving and interpreting a request message, the recipient responds with a SIP response message.
Reference: [27] <author> D. Eastlake, S. Crocker, and J. Schiller, </author> <title> Randomness recommendations for security, </title> <type> RFC 1750, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1994. </year> <note> Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 109] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, </note> <year> 1999 </year>
Reference-contexts: If this is the case, the local-id SHOULD be an identifier consisting of URI characters that is unique within host. Use of cryptographically random identifiers <ref> [27] </ref> is RECOMMENDED. If, however, host is not an FQDN or globally routable IP address (such as a net 10 address), the local-id MUST be globally unique, as opposed to unique within host. These rules guarantee overall global uniqueness of the Call-ID.
Reference: [28] <author> P. Hoffman, L. Masinter, and J. Zawinski, </author> <title> The mailto URL scheme, </title> <type> RFC 2368, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1998. </year>
Reference-contexts: For example, it could contain URL's for phones, fax, or irc (if they were defined) or a mailto: (RFC 2368, <ref> [28] </ref>) URL. The following parameters are defined.
Reference: [29] <author> B. Braden, </author> <title> Requirements for internet hosts application and support, RFC STD 3, </title> <type> 1123, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: Example: CSeq: 4711 INVITE Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 39] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 6.18 Date Date is a general-header field. Its syntax is: SIP-date = rfc1123-date See [H14.19] for a definition of rfc1123-date. Note that unlike HTTP/1.1, SIP only supports the most recent RFC1123 <ref> [29] </ref> formatting for dates. The Date header field reflects the time when the request or response is first sent. Thus, retransmissions have the same Date header field value as the original.
Reference: [30] <author> J. Palme, </author> <title> Common internet message headers, RFC 2076, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: Examples: Subject: A tornado is heading our way! Priority: emergency Subject: Weekend plans Priority: non-urgent These are the values of RFC 2076 <ref> [30] </ref>, with the addition of emergency. 6.26 Proxy-Authenticate The Proxy-Authenticate response-header field MUST be included as part of a 407 (Proxy Authentication Required) response. The field value consists of a challenge that indicates the authentication scheme and parameters applicable to the proxy for this Request-URI.
Reference: [31] <author> H. Alvestrand, </author> <title> IETF policy on character sets and languages, </title> <type> RFC 2277, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1998. </year>
Reference-contexts: This decision can be based on any available knowledge, such as the location of the cache or user, the Accept-Language field in a request, or the Content-Language field in a response. The default language is i-default <ref> [31] </ref>. Any server MAY add Warning headers to a response. Proxy servers MUST place additional Warning headers before any Authorization headers. Within that constraint, Warning headers MUST be added after any existing Warning headers not covered by a signature.
Reference: [32] <author> M. Elkins, </author> <title> MIME security with pretty good privacy (PGP), RFC 2015, </title> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: In addition to the basic and digest authentication schemes defined in the specifications cited above, SIP defines a new scheme, PGP (RFC 2015, <ref> [32] </ref>), Section 15. Other schemes, such as S/MIME, are for further study. 7 Status Code Definitions The response codes are consistent with, and extend, HTTP/1.1 response codes. Not all HTTP/1.1 response codes are appropriate, and only those that are appropriate are given here.
Reference: [33] <author> D. Atkins, W. Stallings, and P. Zimmermann, </author> <title> PGP message exchange formats, RFC 1991, </title> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: End-to-end encryption relies on keys shared by the two user agents involved in the request. Typically, the message is sent encrypted with the public key of the recipient, so that only that recipient can read the message. All implementations SHOULD support PGP-based encryption <ref> [33] </ref> and MAY implement other schemes. A SIP request (or response) is end-to-end encrypted by splitting the message to be sent into a part to be encrypted and a short header that will remain in the clear. <p> The signature MUST correspond to the From header of the request unless the signed-by parameter is provided. pgp-signature: The PGP ASCII-armored signature <ref> [33] </ref>, as it appears between the BEGIN PGP MESSAGE and END PGP MESSAGE delimiters, without the version indication. The signature is included without any linebreaks.
Reference: [34] <author> R. Atkinson, </author> <title> Security architecture for the internet protocol, </title> <type> RFC 1825, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: No particular mechanism is defined or recommended here. Two possibilities are IPSEC <ref> [34] </ref> or TLS [35].
Reference: [35] <author> C. Allen and T. Dierks, </author> <title> The TLS protocol version 1.0, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: No particular mechanism is defined or recommended here. Two possibilities are IPSEC [34] or TLS <ref> [35] </ref>.
Reference: [36] <author> J. Franks, P. Hallam-Baker, J. Hostetler, S. Lawrence, P. Leach, A. Luotonen, and L. Stewart, </author> <title> HTTP authentication: Basic and digest access authentication, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1998. </year> <title> Work in progress. </title>
Reference-contexts: This section overviews usage of these mechanisms in SIP. The basic operation is almost completely identical to that for HTTP <ref> [36] </ref>. This section outlines this operation, pointing to [36] for details, and noting the differences when used in SIP. 14.1 Framework The framework for SIP authentication parallels that for HTTP [36]. In particular, the BNF for auth-scheme, auth-param, challenge, realm, realm-value, and credentials is identical. <p> This section overviews usage of these mechanisms in SIP. The basic operation is almost completely identical to that for HTTP <ref> [36] </ref>. This section outlines this operation, pointing to [36] for details, and noting the differences when used in SIP. 14.1 Framework The framework for SIP authentication parallels that for HTTP [36]. In particular, the BNF for auth-scheme, auth-param, challenge, realm, realm-value, and credentials is identical. <p> The basic operation is almost completely identical to that for HTTP <ref> [36] </ref>. This section outlines this operation, pointing to [36] for details, and noting the differences when used in SIP. 14.1 Framework The framework for SIP authentication parallels that for HTTP [36]. In particular, the BNF for auth-scheme, auth-param, challenge, realm, realm-value, and credentials is identical. The 401 response is used by user agent servers in SIP to challenge the authorization of a user agent client. <p> Additionally, registrars and redirect servers MAY make use of 401 responses for authorization, but proxies MUST NOT, and instead MAY use the 407 response. The requirements for inclusion of the Proxy-Authenticate, Proxy-Authorization, WWW-Authenticate, and Authorization in the various messages is identical to <ref> [36] </ref>. Since SIP does not have the concept of a canonical root URL, the notion of protections spaces are interpreted differently for SIP. The realm is a protection domain for all SIP URIs with the same value for the userinfo, host and port part of the SIP Request-URI. <p> Handley/Schulzrinne/Schooler/Rosenberg Expires July 1999 [Page 82] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 14.2 Basic Authentication The rules for basic authentication follow those defined in <ref> [36, Section 2] </ref>, but with the words origin server replaced with user agent server, redirect server , or registrar. Since SIP URIs are not hierarchical, the paragraph in [36, Section 2] that states that all paths at or deeper than the depth of the last symbolic element in the path field <p> Expires July 1999 [Page 82] INTERNET-DRAFT draft-ietf-mmusic-sip-12.ps January 15, 1999 14.2 Basic Authentication The rules for basic authentication follow those defined in <ref> [36, Section 2] </ref>, but with the words origin server replaced with user agent server, redirect server , or registrar. Since SIP URIs are not hierarchical, the paragraph in [36, Section 2] that states that all paths at or deeper than the depth of the last symbolic element in the path field of the Request-URI also are within the protection space specified by the Basic realm value of the current challenge does not apply for SIP. <p> SIP clients MAY preemptively send the corresponding Authorization header with requests for SIP URIs within the same protection realm (as defined above) without receipt of another challenge from the server. 14.3 Digest Authentication The rules for digest authentication follow those defined in <ref> [36, Section 3] </ref>, with HTTP 1.1 replaced by SIP/2.0 in addition to the following differences: 1. The URI included in the challenge has the following BNF: URI = SIP-URL 2. The BNF for digest-uri-value is: digest-uri-value = Request-URI ;as defined in Section 4.3 3. <p> The BNF for digest-uri-value is: digest-uri-value = Request-URI ;as defined in Section 4.3 3. The example procedure for choosing a nonce based on Etag does not work for SIP. 4. The Authentication-Info and Proxy-Authentication-Info fields are not used in SIP. 5. The text in <ref> [36] </ref> regarding cache operation does not apply to SIP. 6. [36] requires that a server check that the URI in the request line, and the URI included in the Authorization header, point to the same resource. <p> The example procedure for choosing a nonce based on Etag does not work for SIP. 4. The Authentication-Info and Proxy-Authentication-Info fields are not used in SIP. 5. The text in <ref> [36] </ref> regarding cache operation does not apply to SIP. 6. [36] requires that a server check that the URI in the request line, and the URI included in the Authorization header, point to the same resource. In a SIP context, these two URI's may actually refer to different users, due to forwarding at some proxy. <p> Therefore, in SIP, a server MAY check that the request-uri in the Authorization header corresponds to a user that the server is willing to accept forwarded or direct calls for. 14.4 Proxy-Authentication The use of the Proxy-Authentication and Proxy-Authorization parallel that as described in <ref> [36, Section 3.6] </ref>, with one difference. Proxies MUST NOT add the Proxy-Authorization header. 407 responses MUST be forwarded upstream towards the client following the procedures for any other response. It is the client's responsibility to add the Proxy-Authorization header containing credentials for the proxy which has asked for authentication.
Reference: [37] <author> E. M. Schooler, </author> <title> Case study: multimedia conference control in a packet-switched teleconferencing system, </title> <journal> Journal of Internetworking: Research and Experience, </journal> <volume> vol. 4, </volume> <pages> pp. 99120, </pages> <month> June </month> <year> 1993. </year> <note> ISI reprint series ISI/RS-93-359. </note>
Reference-contexts: Detailed comments were provided by Anders Kristensen, Jim Buller, Dave Devanathan, Yaron Goland, Christian Huitema, Gadi Karmi, Jonathan Lennox, Keith Moore, Vern Paxson, Moshe J. Sambol, and Eric Tremblay. This work is based, inter alia, on <ref> [37, 38] </ref>.

References-found: 37

