URL: ftp://ftp.cs.ust.hk/pub/techreport/96/tr96-30.ps.gz
Refering-URL: http://www.cs.helsinki.fi/~kilpelai/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: SGML and Exceptions  
Author: Pekka Kilpelainen and Derick Wood 
Note: The research of the first author was supported by the Academy of Finland and the research of the second author was supported by grants from the Natural Sciences and Engineering Research Council of Canada and from the  
Address: Helsinki Finland  Hong Kong  Ontario.  
Affiliation: Department of Computer Science University of Helsinki  Department of Computer Science Hong Kong University of Science Technology Clear Water Bay, Kowloon  Information Technology Research Centre of  
Abstract: Technical Report HKUST-CS96-30 June 1996 Abstract The Standard Generalized Markup Language (SGML) allows users to define document type definitions (DTDs), which are essentially extended context-free grammars in a notation that is similar to extended Backus-Naur form. The right-hand side of a production is called a content model and its semantics can be modified by exceptions. We give precise definitions of the semantics of exceptions and prove that they do not increase the expressive power of SGML. For each DTD with exceptions we can construct a structurally equivalent extended context-free grammar. On the other hand, exceptions are a powerful shorthand notation| eliminating them may cause exponential growth in the size of a DTD. The Hong Kong University of Science & Technology Technical Report Series Department of Computer Science 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.V. Aho and J.D. Ullman. </author> <title> The Theory of Parsing, Translation, and Compiling, Vol. I: Parsing. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1972. </year>
Reference-contexts: We treat extended context-free grammars as context-free grammars in which the right-hand sides of productions are regular expressions. Let V be an alphabet. Then, we define a regular expression over V and its language in the usual way <ref> [1, 12] </ref>. The symbol denotes the empty string. We denote by sym (E) the set of symbols of V that appear in a regular expression E. <p> The new productions can be applied to the old DTD instances. Lastly, we can attack the document-instance problem head on by translating old instances into new instances. A convenient technique is to use a generalization of syntax-directed translation grammars (see Aho and Ull-man <ref> [1, 2] </ref> and Wood [12]) to give extended context-free transduction grammars and the corresponding transduction version of DTDs that we call "Document Type Transduction Definitions." We are currently investigating this approach which would also be applicable to the DTD database schema issue raised by Christofides et al. [8].
Reference: [2] <author> A.V. Aho and J.D. Ullman. </author> <title> The Theory of Parsing, Translation and Compiling, Vol. II: Compiling. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1973. </year>
Reference-contexts: The new productions can be applied to the old DTD instances. Lastly, we can attack the document-instance problem head on by translating old instances into new instances. A convenient technique is to use a generalization of syntax-directed translation grammars (see Aho and Ull-man <ref> [1, 2] </ref> and Wood [12]) to give extended context-free transduction grammars and the corresponding transduction version of DTDs that we call "Document Type Transduction Definitions." We are currently investigating this approach which would also be applicable to the DTD database schema issue raised by Christofides et al. [8].
Reference: [3] <author> A. Bruggemann-Klein. </author> <title> Unambiguity of extended regular expressions in SGML document grammars. In Th. Lengauer, editor, Algorithms | ESA 93. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Our methods of eliminating exceptions preserve the unambiguity of the original content models. In this respect our work extends the work of Bruggemann-Klein and Wood <ref> [3, 4, 5, 6, 7] </ref>. The Standard gives rather vague restrictions on the applicability of exclusion exceptions. We propose a simple and rigorous definition for the applicability of exclusions; in the full paper [10], we also present an optimal algorithm for testing applicability.
Reference: [4] <author> A. Bruggemann-Klein. </author> <title> Regular expressions into finite automata. </title> <journal> Theoretical Computer Science, </journal> <volume> 120 </volume> <pages> 197-213, </pages> <year> 1993. </year> <month> 13 </month>
Reference-contexts: Our methods of eliminating exceptions preserve the unambiguity of the original content models. In this respect our work extends the work of Bruggemann-Klein and Wood <ref> [3, 4, 5, 6, 7] </ref>. The Standard gives rather vague restrictions on the applicability of exclusion exceptions. We propose a simple and rigorous definition for the applicability of exclusions; in the full paper [10], we also present an optimal algorithm for testing applicability.
Reference: [5] <author> A. Bruggemann-Klein. </author> <title> Compiler-construction tools and techniques for SGML parsers: Difficulties and solutions. </title> <note> To appear in EPODD, </note> <year> 1996. </year>
Reference-contexts: Our methods of eliminating exceptions preserve the unambiguity of the original content models. In this respect our work extends the work of Bruggemann-Klein and Wood <ref> [3, 4, 5, 6, 7] </ref>. The Standard gives rather vague restrictions on the applicability of exclusion exceptions. We propose a simple and rigorous definition for the applicability of exclusions; in the full paper [10], we also present an optimal algorithm for testing applicability.
Reference: [6] <author> A. Bruggemann-Klein and D. Wood. </author> <title> One-unambiguous regular languages. </title> <note> To appear in Information and Computation, </note> <year> 1996. </year>
Reference-contexts: Our methods of eliminating exceptions preserve the unambiguity of the original content models. In this respect our work extends the work of Bruggemann-Klein and Wood <ref> [3, 4, 5, 6, 7] </ref>. The Standard gives rather vague restrictions on the applicability of exclusion exceptions. We propose a simple and rigorous definition for the applicability of exclusions; in the full paper [10], we also present an optimal algorithm for testing applicability.
Reference: [7] <author> A. Bruggemann-Klein and D. Wood. </author> <title> The validation of SGML content models. </title> <note> To appear in Mathematical and Computer Modelling, </note> <year> 1996. </year>
Reference-contexts: Our methods of eliminating exceptions preserve the unambiguity of the original content models. In this respect our work extends the work of Bruggemann-Klein and Wood <ref> [3, 4, 5, 6, 7] </ref>. The Standard gives rather vague restrictions on the applicability of exclusion exceptions. We propose a simple and rigorous definition for the applicability of exclusions; in the full paper [10], we also present an optimal algorithm for testing applicability.
Reference: [8] <author> V. Christofides, S. Christofides, S. Cluet, and M. Scholl. </author> <title> From structured documents to novel query facilities. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 23(2) </volume> <pages> 313-324, </pages> <month> June </month> <year> 1994. </year> <booktitle> (Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data). </booktitle>
Reference-contexts: An application that requires the elimination of exceptions from content models is the translation of DTDs into static database schemas. This method of integrating textual documents into an object-oriented database has been suggested by Christofides et al. <ref> [8] </ref>. 3 The SGML Standard requires content models to be unambiguous, mean-ing that each nonempty prefix of an input string determines uniquely which symbols of the content model match the symbols of the prefix. Our methods of eliminating exceptions preserve the unambiguity of the original content models. <p> Aho and Ull-man [1, 2] and Wood [12]) to give extended context-free transduction grammars and the corresponding transduction version of DTDs that we call "Document Type Transduction Definitions." We are currently investigating this approach which would also be applicable to the DTD database schema issue raised by Christofides et al. <ref> [8] </ref>. It could also be used to convert a document marked up according to one DTD into a document marked up according to a different, but related, DTD.
Reference: [9] <author> C. F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The Standard Generalized Markup Language (SGML) <ref> [9, 11] </ref> promotes the interchangeability and application-independent management of electronic documents by providing a syntactic metalanguage for the definition of textual 1 The research of the first author was supported by the Academy of Finland and the research of the second author was supported by grants from the Natural Sciences and <p> Exclusion exceptions seem to be a useful concept, but their exact meaning is unclear from the Standard [11] and from Goldfarb's annotation of the Standard <ref> [9] </ref>. We give rigorous definitions for the meaning of exceptions. In the full paper [10], we also give algorithms for transforming grammars with exceptions to grammars without exceptions, as well as giving complete proofs of the results mentioned here. <p> by a polynomial in the size of G? We conjecture that the answer is negative. 8 3 Exception-Removal for DTDs Document type definitions (DTDs) are, essentially, extended context-free grammars that have restricted and generalized regular expressions on the right-hand sides of their productions called content models in the ISO Standard <ref> [9, 11] </ref>. The major difference between regular expressions and content models is that content models have the additional operators: F &G, F ?, and F + , where F &G F G j GF .
Reference: [10] <author> P. Kilpelainen and D. Wood. </author> <title> Exceptions in SGML document grammars, </title> <note> 1996. Submitted for publication. </note>
Reference-contexts: Exclusion exceptions seem to be a useful concept, but their exact meaning is unclear from the Standard [11] and from Goldfarb's annotation of the Standard [9]. We give rigorous definitions for the meaning of exceptions. In the full paper <ref> [10] </ref>, we also give algorithms for transforming grammars with exceptions to grammars without exceptions, as well as giving complete proofs of the results mentioned here. The correctness proofs of these methods imply that exceptions do not increase the expressiveness of SGML DTDs. <p> In this respect our work extends the work of Bruggemann-Klein and Wood [3, 4, 5, 6, 7]. The Standard gives rather vague restrictions on the applicability of exclusion exceptions. We propose a simple and rigorous definition for the applicability of exclusions; in the full paper <ref> [10] </ref>, we also present an optimal algorithm for testing applicability. In this extended abstract we focus on the essential ideas underlying our approach. For this reason, we consider the removal of exceptions from only extended context-free grammars with exceptions, although we mention the problems of transferring this approach to DTDs. <p> In this extended abstract we focus on the essential ideas underlying our approach. For this reason, we consider the removal of exceptions from only extended context-free grammars with exceptions, although we mention the problems of transferring this approach to DTDs. We refer the reader to the full paper <ref> [10] </ref> for more details. 2 Extended Context-Free Grammars with Ex ceptions We introduce extended context-free grammars as a model for SGML DTDs. We treat extended context-free grammars as context-free grammars in which the right-hand sides of productions are regular expressions. Let V be an alphabet. <p> Example 2 Let E = (a?&b?)c and I = fa; cg. We first transform it into the content model (ab?jba?)?c and then into the content model (aa fl (ba fl )?jb (aa fl )?)?c (ajc) fl : In the full paper <ref> [10] </ref>, we give a complete algorithm for computing the content model E I from a given content model E and a given set of inclusions I. <p> As an example, the affect of excluding fbg from the language of the preceding content models E and F is L (E) fbg = L (F ) fbg = faccg: Notice that an exclusion always specifies a subset of the original language. In the full paper <ref> [10] </ref>, we show how to compute a content model E X such that L (E X ) = L (E) X from a given content model E and a given set X of exclusions.
Reference: [11] <author> International Organization for Standardization. </author> <title> ISO 8879: Information Processing|Text and Office Systems|Standard Generalized Markup Language (SGML), </title> <month> October </month> <year> 1986. </year>
Reference-contexts: 1 Introduction The Standard Generalized Markup Language (SGML) <ref> [9, 11] </ref> promotes the interchangeability and application-independent management of electronic documents by providing a syntactic metalanguage for the definition of textual 1 The research of the first author was supported by the Academy of Finland and the research of the second author was supported by grants from the Natural Sciences and <p> This modification allows notes to appear within notes; therefore, to prevent such recursive appearances we add an exclusion exception to the definition of element type note: &lt;!ELEMENT note - (#PCDATA) -(note)&gt;. Exclusion exceptions seem to be a useful concept, but their exact meaning is unclear from the Standard <ref> [11] </ref> and from Goldfarb's annotation of the Standard [9]. We give rigorous definitions for the meaning of exceptions. In the full paper [10], we also give algorithms for transforming grammars with exceptions to grammars without exceptions, as well as giving complete proofs of the results mentioned here. <p> by a polynomial in the size of G? We conjecture that the answer is negative. 8 3 Exception-Removal for DTDs Document type definitions (DTDs) are, essentially, extended context-free grammars that have restricted and generalized regular expressions on the right-hand sides of their productions called content models in the ISO Standard <ref> [9, 11] </ref>. The major difference between regular expressions and content models is that content models have the additional operators: F &G, F ?, and F + , where F &G F G j GF .
Reference: [12] <author> D. Wood. </author> <title> Theory of Computation. </title> <publisher> John Wiley, </publisher> <address> New York, NY, </address> <year> 1987. </year> <month> 14 </month>
Reference-contexts: We treat extended context-free grammars as context-free grammars in which the right-hand sides of productions are regular expressions. Let V be an alphabet. Then, we define a regular expression over V and its language in the usual way <ref> [1, 12] </ref>. The symbol denotes the empty string. We denote by sym (E) the set of symbols of V that appear in a regular expression E. <p> Even though a production schema may correspond to an infinite number of ordinary context-free productions, it is known that extended and ordinary CFGs allow us to describe exactly the same languages; for example, see the text of Wood <ref> [12] </ref>. <p> The new productions can be applied to the old DTD instances. Lastly, we can attack the document-instance problem head on by translating old instances into new instances. A convenient technique is to use a generalization of syntax-directed translation grammars (see Aho and Ull-man [1, 2] and Wood <ref> [12] </ref>) to give extended context-free transduction grammars and the corresponding transduction version of DTDs that we call "Document Type Transduction Definitions." We are currently investigating this approach which would also be applicable to the DTD database schema issue raised by Christofides et al. [8].
References-found: 12

