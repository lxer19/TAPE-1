URL: http://www.cis.ohio-state.edu/~liux/papers/geo-info.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/~liux/
Root-URL: 
Title: Automated Vectorization and Labeling of Very Large Raster Hypsographic Map Images Using Contour Graph  
Author: Xiuwen Liu and J. Raul Ramirez 
Abstract: This paper presents a very efficient method for vectorizing and labeling very large raster hypsographic map images. By extending the contour tree (Freeman and Morse, 1967) to a contour graph, open contour lines and carrying contour lines can be handled. The ambiguities of the topological relationships among contour lines are resolved using map structure information, i.e., elevation tags and index contour lines. Contour graph is constructed and processed efficiently by introducing index contour graph. By using a sequential extraction algorithm (Agrawala and Kulkarni, 1977) for vectorization, attributes for contour lines, such as line width, and elevation tag(s), are extracted efficiently. Although it was developed primarily for USGS 1:24,000 hypsographic maps as part of the GISOM project at The Ohio State University Center for Mapping, the method also is applicable to other scale USGS hypsographic maps. We have applied the algorithm successfully to raster images with pixel size of 19,320 by 25,400. On average, it can correctly vectorize more than 98 percent of the contour lines and correctly label more than 90 percent. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agrawala, A. K. and Kulkarni, A. V., </author> <title> A Sequential Approach to the Extraction of Shape Features, </title> <journal> Computer Graphics and Image Processing, </journal> <volume> Vol. 6, </volume> <year> 1977, </year> <pages> pp. 538-557. </pages>
Reference-contexts: These problems were solved by Liu (1995) using parity testing along raster scan lines to construct the contour tree. The algorithm has been implemented efficiently, using a sequential extraction algorithm <ref> (Agrawala and Kulkarni, 1977) </ref>. As we can see, the contour tree model is based on the assumption that a contour line defines a closed region and the adjacency between contour lines can be identified through the relationship between the corresponding regions. <p> These templates for digits and spot elevation markers are scale dependent. 3. Vectorization and Elevation Labeling A very efficient sequential extraction algorithm <ref> ( Agrawala and Kulkarni, 1977) </ref> is used to derive polygonal approximation of boundaries of contour lines. Centerlines are estimated from the boundaries using the minimum distance method (Shapiro and Sklansky, 1981).
Reference: <author> Boyell, R. L. and Reston, H., </author> <title> Hybrid Techniques for Real-Time Radar Simulation, </title> <booktitle> Proceedings of 1963 Fall Joint Computer Conference, </booktitle> <address> Las Vegas, Nevada, </address> <year> 1963. </year> <note> 7 Freeman, </note> <author> H. and Morse, S. P., </author> <title> On Searching a Contour Map for a Given Terrain Elevation Profile, </title> <journal> Journal of the Franklin Institute, </journal> <volume> Vol. 248, No. 1, </volume> <year> 1967, </year> <pages> pp. 1-25. </pages>
Reference: <author> Grandland, G. H., </author> <title> Fourier Preprocessing for Hand Print Character Recognition, </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 21, No. 2, </volume> <year> 1972, </year> <pages> pp. 195-201. </pages>
Reference-contexts: Uncertainty and ambiguities exist during this stage. If ambiguities cannot be resolved, they will be skipped simply at this phase. 2. Elevation Tag Recognition Elevation labels are recognized using the Fourier descriptor <ref> (Grandland, 1972) </ref>, which is independent of scale, position, and orientation. Individual numbers will be assembled based on the geometric constraints between numbers. Ambiguities such as "6" and "9" are resolved based on orientation conventions of USGS hypsography maps.
Reference: <author> Liu, X., </author> <title> A Prototype System for Automatic Conversion from Raster Hypsography Maps to Vector Format, M.S. </title> <type> Thesis, </type> <institution> The Ohio State University, </institution> <year> 1995. </year>
Reference-contexts: Raster hypsographic map images contain many contour lines. Each contour line may contain many points, and elevations must be carried with contour lines. A prototype system based on a contour tree model <ref> ( Liu, 1995) </ref> was developed, which works well for contour maps containing few open and carrying contours. System performance declines greatly when many open and carrying contour lines are present in contour maps. <p> In addition to that it can be constructed correctly, index contour graph also provides computational advantages by localizing the possible labeling paths for secondary contours. Please refer to the experimental results section for details. Implementation The system is implemented as an extension of the prototype system <ref> (Liu, 1995) </ref>. Currently, two preprocessing stages, noise and gap removing, and elevation tag recognition, are done before vectorization and labeling. 1. Noise and Gap Removal During this phase, gaps and noise will be processed based on usersupplied area criteria and surrounding features.
Reference: <author> Ramirez, J. R., Fernandez-Falcon, E., Schmidley, R., and Szakas, J., </author> <title> The Center for Mapping Database Format, </title> <type> unpublished paper, </type> <institution> The Ohio State University Center for Mapping, </institution> <year> 1991. </year>
Reference: <author> Ramirez, J. R., </author> <title> Automatic Elevation Tagging as Part of Hypsography Data Conversion from Scanning Data, Internal Report, The Center for Mapping, </title> <institution> The Ohio State University, </institution> <year> 1994. </year>
Reference-contexts: Geological Survey (USGS) to convert 1:24,000 quadrangles into digital files for the state of Ohio. This is known as the GISOM project (Generating Information from Scanning Ohio Maps). One of the main goals of this project is to develop a cost-effective production model for conversion <ref> (Ramirez, 1994) </ref>. Conversion is the process of converting line drawings of raster map images into vector format with proper attributes attached. Theoretically, raster and vector maps carry the same information in different forms; however, they differ in many respects. Raster maps employ symbols to represent different types of map features.
Reference: <author> Roubal, J. and Poiker, T. K., </author> <title> Automated Contour Labeling and the Contour Tree, </title> <booktitle> AutoCarto 7 Proceedings, </booktitle> <address> Washington D.C., </address> <month> March </month> <year> 1985, </year> <pages> pp. 472-481. </pages>
Reference: <author> Shapiro, B., Pisa, J., and Sklansky, J., </author> <title> Skeleton Generation from x, y Boundary Sequences, </title> <journal> Computer Graphics and Image Processing, </journal> <volume> Vol. 15, </volume> <year> 1981, </year> <pages> pp. 136-153. </pages>
Reference-contexts: These templates for digits and spot elevation markers are scale dependent. 3. Vectorization and Elevation Labeling A very efficient sequential extraction algorithm ( Agrawala and Kulkarni, 1977) is used to derive polygonal approximation of boundaries of contour lines. Centerlines are estimated from the boundaries using the minimum distance method <ref> (Shapiro and Sklansky, 1981) </ref>. During this process, nodes in the contour graph are defined as centerline segments with proper attributes associated (such as closed or open, index or secondary contour based on average line width) and elevation tags attached.
Reference: <author> Sircar, J. K. and Cebrian, J. A., </author> <title> Application of Image Processing Techniques to the Automated Labeling of Raster Digitized Contour Maps, </title> <booktitle> Proceedings of Second International Symposium on Spatial Data Handling, </booktitle> <address> Seattle, Washington, </address> <month> July 5-10, </month> <year> 1986, </year> <pages> pp. 171-184. </pages> <institution> Offending Command = restore Error = nametype : invalidrestore Stack = --nostringval-- --nostringval-- InputAttributes --nostringval-- </institution>
References-found: 9

