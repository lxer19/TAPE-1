URL: http://www.rpi.edu/~bonisp/fuzzy-course/Papers-ps/train.ps
Refering-URL: http://www.rpi.edu/~bonisp/seminars4Q97.html
Root-URL: 
Email: email: bonissone@crd.ge.com  
Title: Genetic Algorithms for Automated Tuning of Fuzzy Controllers: A Transportation Application  
Author: Piero P. Bonissone, Pratap S. Khedkar, Yuto Chen 
Address: K1 5C32A, 1 Research Circle, Schenectady, NY 12309, USA  
Affiliation: Information Technology Laboratory General Electric Corporate Research and Development,  
Abstract: We describe the design and tuning of a controller for enforcing compliance with a prescribed velocity profile for a rail-based transportation system. This requires following a trajectory, rather than fixed set-points (as in automobiles). We synthesize a fuzzy controller for tracking the velocity profile, while providing a smooth ride and staying within the prescribed speed limits. We use a genetic algorithm to tune the fuzzy controller's performance by adjusting its parameters (the scaling factors and the membership functions) in a sequential order of significance. We show that this approach results in a controller that is superior to the manually designed one, and with only modest computational effort. This makes it possible to customize automated tuning to a variety of different configurations of the route, the terrain, the power configuration, and the cargo. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> William F. Drish, Jr. </author> <title> Train energy model - technical manual. </title> <type> Technical Report SD-040, </type> <institution> Association of American Railroads, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: O*ine, a GA uses the setup for evaluating various FPI parameters. The simulator | TSIM, is an in-house implementation, combining internal data with physical/empirical models as described in TEM (Train Energy Model) <ref> [1] </ref>. TEM was developed by the As sociation of American Railroads. TSIM simulates an extended train with arbitrary detailed makeup, over a specified track profile. The version of TSIM used here does not simulate a stretchable train for the sake of computational efficiency. <p> They are in the ranges: S e 2 <ref> [1; 9] </ref>; S d 2 [0:1; 0:9]; S u 2 [1000; 9000].
Reference: [2] <author> D. Burkhardt and P. Bonissone. </author> <title> Automated Fuzzy Knowledge Base Generation and Tuning. </title> <booktitle> In Proc. 1st IEEE Conf. on Fuzzy Systems, </booktitle> <pages> pages 179-188, </pages> <address> San Diego, CA, USA, 1992. </address> <publisher> IEEE. </publisher>
Reference-contexts: They first initialize the rule base according to intuitive heuristics, use GAs to generate better rule base, and finally tune the membership functions of the best rule base. This order of the tuning process is similar to that typically used by self-organizing controllers <ref> [2] </ref>. Lee and Takagi also tune the rule base and the termsets [9]. They use a binary encoding for each three-tuple characterizing a triangular membership distribution. Each chromosome represents a TSK-type rule [11], concatenating the membership distributions in the rule antecedent with the coefficients of the linear consequent.

Reference: [4] <author> F. Herrera, M. Lozano, and L. Verdegay. </author> <title> Tuning fuzzy logic control by genetic algorithms. </title> <journal> Int. Journal Approximate Reasoning (IJAR), </journal> 12(3/4):299-315, 1995. 
Reference-contexts: Karr uses a binary encoding to represent three parameters defining a membership value in each termset. The binary chromosome is the concatenation of all termsets. The fitness function is a quadratic error calculated for four randomly chosen initial conditions. Herrera, Lozano, and Verdegay <ref> [4] </ref> directly tune each rule used by the FC. They use a real encoding for a four-parameter characterization of a trapezoidal membership value in each termset. Each rule is represented by the concatenation of the membership values used in the rule antecedent (state vector) and consequent (control action).
Reference: [5] <author> C.L. Karr. </author> <title> Design of an adaptive fuzzy logic controller using genetic algorithms. </title> <booktitle> In Proc. Int. Conf. on Genetic Algorithms (ICGA'91), </booktitle> <pages> pages 450-456, </pages> <address> San Diego, CA., USA, </address> <year> 1991. </year>
Reference-contexts: For brevity's sake we will limit this section to a few contributions. These methods differ mostly in the order or the selection of the various FC components that are tuned (termsets, rules, scaling factors). Early work in this area was due to C. Karr <ref> [6, 5, 7] </ref>, who uses GAs to modify the membership functions in the termsets of the variables used by the FCs. Karr uses a binary encoding to represent three parameters defining a membership value in each termset. The binary chromosome is the concatenation of all termsets.
Reference: [6] <author> C.L. Karr. </author> <title> Genetic algorithms for fuzzy controllers. </title> <journal> AI Expert, </journal> <volume> 6(2) </volume> <pages> 27-33, </pages> <year> 1991. </year>
Reference-contexts: For brevity's sake we will limit this section to a few contributions. These methods differ mostly in the order or the selection of the various FC components that are tuned (termsets, rules, scaling factors). Early work in this area was due to C. Karr <ref> [6, 5, 7] </ref>, who uses GAs to modify the membership functions in the termsets of the variables used by the FCs. Karr uses a binary encoding to represent three parameters defining a membership value in each termset. The binary chromosome is the concatenation of all termsets.
Reference: [7] <author> C.L. Karr. </author> <title> Fuzzy control of ph using genetic algorithms. </title> <journal> IEEE Transactions on Fuzzy Systems, </journal> <volume> 1 </volume> <pages> 46-53, </pages> <year> 1993. </year>
Reference-contexts: For brevity's sake we will limit this section to a few contributions. These methods differ mostly in the order or the selection of the various FC components that are tuned (termsets, rules, scaling factors). Early work in this area was due to C. Karr <ref> [6, 5, 7] </ref>, who uses GAs to modify the membership functions in the termsets of the variables used by the FCs. Karr uses a binary encoding to represent three parameters defining a membership value in each termset. The binary chromosome is the concatenation of all termsets.
Reference: [8] <author> J Kinzel, F. Klawoon, and R. Kruse. </author> <title> Modifications of genetic algorithms for designing and optimizing fuzzy controllers. </title> <booktitle> In Proc. First IEEE Conf. on Evolutionary Computing (ICEC'94), </booktitle> <pages> pages 28-33, </pages> <address> Orlando, FL., USA, </address> <year> 1994. </year>
Reference-contexts: The population is the concatenation of all rules so represented. A customized (max-min arithmetical) crossover operator is also proposed. The fitness function is a sum of quadratic errors. Kinzel, Klawon and Kruse <ref> [8] </ref> tune both rules and termsets. They depart from the string representation and use a (cross-product) matrix to encode the rule set (as if it were in table form). They also propose customized (point-radius) crossover operators which are similar to the two-point crossover for string encoding.
Reference: [9] <author> M. Lee and H. Takagi. </author> <title> Integrating design stages of fuzzy systems using genetic algorithms. </title> <booktitle> In Proc. 2nd IEEE Conf. on Fuzzy Systems, </booktitle> <pages> pages 612-617, </pages> <address> San Francisco, CA, USA. </address> <month> March </month> <year> 1993. </year>
Reference-contexts: This order of the tuning process is similar to that typically used by self-organizing controllers [2]. Lee and Takagi also tune the rule base and the termsets <ref> [9] </ref>. They use a binary encoding for each three-tuple characterizing a triangular membership distribution. Each chromosome represents a TSK-type rule [11], concatenating the membership distributions in the rule antecedent with the coefficients of the linear consequent. <p> They are in the ranges: S e 2 <ref> [1; 9] </ref>; S d 2 [0:1; 0:9]; S u 2 [1000; 9000].
Reference: [10] <author> H. Surmann, A. Kanstein, and K. Goser. </author> <title> Self-organizing and genetic algorithms for an automatic design of fuzzy control and decision systems. </title> <booktitle> In Proc. EUFIT'93, </booktitle> <pages> pages 1097-1104, </pages> <address> Aachen, Ger-many, </address> <year> 1993. </year>
Reference-contexts: They use a binary encoding for each three-tuple characterizing a triangular membership distribution. Each chromosome represents a TSK-type rule [11], concatenating the membership distributions in the rule antecedent with the coefficients of the linear consequent. Also of interest to the reader is the approach taken by Surman,Kanstein, and Goser <ref> [10] </ref>, who modify the usual quadratic fitness function by addition an entropy term describing the number of activated rules. to tune a fuzzy train controller. In our approach, which will be described later, we follow the tuning order suggested by Zheng [12] for manual tuning.
Reference: [11] <author> T. Takagi and M. Sugeno. </author> <title> Fuzzy Identification of Systems and Its Applications to Modeling and Control. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 15(1) </volume> <pages> 116-132, </pages> <year> 1985. </year>
Reference-contexts: This order of the tuning process is similar to that typically used by self-organizing controllers [2]. Lee and Takagi also tune the rule base and the termsets [9]. They use a binary encoding for each three-tuple characterizing a triangular membership distribution. Each chromosome represents a TSK-type rule <ref> [11] </ref>, concatenating the membership distributions in the rule antecedent with the coefficients of the linear consequent.
Reference: [12] <author> Li Zheng. </author> <title> A Practical Guide to Tune Proportional and Integral (PI) Like Fuzzy Controllers. </title> <booktitle> In Proc. 1st IEEE Conf. on Fuzzy Systems, </booktitle> <pages> pages 633-640. </pages> <publisher> IEEE, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: In our approach, which will be described later, we follow the tuning order suggested by Zheng <ref> [12] </ref> for manual tuning. We begin with macroscopic effects, by tuning the FC state and control variable scaling factors, while using a standard uniformly spread termset and a homogeneous rule base. After obtaining the best scaling factors, we proceed to tune the termsets, causing medium-size effects. <p> The relationship between output variable, u, and control error, e, can be expressed approximately as follows <ref> [12] </ref>: u (t) S d e (t) u (t) S d S u e (t) S d e (t) S d where S e , S d and S u are the scaling factors of error, change of error, and incremental output variable, respectively.
References-found: 11

