URL: http://www.cs.unc.edu/~parris/research/papers/TCLTK-93.ps.Z
Refering-URL: http://www.cs.unc.edu/~parris/research/papers/papers.html
Root-URL: http://www.cs.unc.edu
Title: Tcl and Tk Use Artifact Based Collaboration System  
Author: John Menges Mark Parris 
Date: February 1, 1996  
Abstract: At the University of North Carolina Department of Computer Science we are developing the Artifact Based Collaboration System (ABC) which provides computer support for collaboration. ABC consists of a distributed hypermedia graph server with associated graph browsers. It also includes the ABC Matrix which interconnects the graph server and browsers with existing X-based applications. ABC also provides hy-perlinking and window sharing capabilities. Tcl is used for defining process-level interfaces and for inter-application communication. Tk is used to implement various user interfaces. In this paper we discuss current and expected uses for Tcl and Tk in the ABC system, and some of the problems we have encountered regarding the use of Tcl and Tk in our environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Jeffay, J.K. Lin, J. Menges, F.D. Smith, and J.B. Smith. </author> <title> Architecture of the Artifact-Based Collaboration System Matrix. </title> <booktitle> In Proceedings of CSCW '92, </booktitle> <month> November </month> <year> 1992. </year>
Reference: [2] <author> Jin-Kun Lin. </author> <title> Virtual Screen: A Framework for Task Management. </title> <booktitle> In Proceedings of the Sixth Annual X Technical Conference, </booktitle> <month> January </month> <year> 1992. </year>
Reference-contexts: First, artifacts may be shared asynchronously by accessing shared artifacts through the distributed graph server (DGS)[4]. Artifacts may also be shared synchronously by sharing windows which display the artifacts. In this case two users see the same windows encapsulated in a nested Virtual Screen <ref> [2] </ref> in a WYSIWIS (what-you-see-is-what-I-see) fashion. Input to the windows is arbitrated by passing a token to the next user who wishes to provide input. In addition to these functions available to the normal user we also incorporate facilities for monitoring and replaying sessions.
Reference: [3] <author> John Menges. </author> <title> The X Engine Library: A C++ Library for Constructing X Pseudo-Servers. </title> <booktitle> In Proceedings of the Seventh Annual X Technical Conference, </booktitle> <pages> pages 129-141, </pages> <address> 103 Morris Street, Sebastopol, CA 95472, </address> <month> January </month> <year> 1993. </year> <institution> O'Reilly & Associates, Inc. </institution>
Reference-contexts: Applications may also be modified similarly to record what semantic actions were invoked. Finally, we have the component which manipulates the X protocol stream. Windows are grouped, con-ferenced, and tracked by using an X Pseudo-Server (XPS) which can intercept, translate, and distribute X-protocol streams <ref> [3] </ref>. The XPS can modify the X-protocol streams for a set of windows so that they all appear to have the same (virtual) root window, thus grouping them inside a common Virtual Screen.
Reference: [4] <author> D. Shackelford, J.B. Smith, and F.D. Smith. </author> <title> A Distributed Data-Storage Service for Supporting Group Collaborations. </title> <type> Technical Report TR92-044, </type> <institution> Department of Computer Science, University of North Carolina, Chapel Hill, North Carolina 27799, </institution> <month> October </month> <year> 1992. </year>
Reference: [5] <author> J. B. Smith and F. D. Smith. </author> <title> ABC: A Hypermedia System for Artifact-Based Collaboration. </title> <booktitle> In Proceedings of Hypertext '91, </booktitle> <month> December </month> <year> 1991. </year>
References-found: 5

