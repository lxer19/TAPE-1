URL: http://www.csl.sri.com/reports/postscript/dcca95.ps.gz
Refering-URL: http://www.csl.sri.com/reports/postscript/
Root-URL: 
Email: gong@eng.sun.com  
Title: Byzantine Agreement with Authentication: Observations and Applications in Tolerating Hybrid and Link Faults  
Author: Li Gong Patrick Lincoln, and John Rushby 
Address: Menlo Park, California 94025, USA  
Affiliation: Computer Science Laboratory SRI International  
Note: From Dependable Computing for Critical Applications-5, Champaign, IL, September 1995, pp. 79-90.  Li Gong is now with JavaSoft and can be reached at  
Abstract: We show that the assumptions required of the authentication mechanism in Byzantine agreement protocols that use "signed messages" are stronger than generally realized, and require more than simple digital signatures. The protocols may fail if these assumptions are violated. We then present new protocols for Byzantine agreement that add authentication to "oral message" protocols so that additional resilience is obtained with authentication, but with no assumptions required about the security of authentication when the number and kind of faults present are within the resilience of the unauthenticated protocol. Our analysis is performed under a "hybrid" fault model that admits manifest (e.g., crash) and symmetric faults as well as arbitrary (i.e., Byzantine) faults. We also extend the classical signed messages protocol to this fault model, and show that its fault tolerance is matched by one of our new protocols. We then explore the behavior of these various protocols under the combination of hybrid processor faults and communications link faults. Using formal state-exploration techniques, we examine cases beyond those guaranteed by simple worst-case bounds and find that the resilience of one of the new protocols exceeds that of the others in these regions. The new protocols are superior to other known protocols in properties and measures of practical interest, and we recommend them for general use. They are particularly attractive in security-critical systems where authentication may be subjected to sophisticated cryptographic attack, and in safety-critical embedded systems where it may be necessary to use very short signatures, but where maximum resilience is required. fl This work was supported in part by the National Aeronautics and Space Administration, Langley Research Center, under contract NAS1-20334, by the Air Force Office of Scientific Research, Air Force Materiel Command, USAF, under contract F49620-95-C0044, and by the National Science Foundation under contract CCR-9509931. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Papers by SRI authors can generally be retrieved from http://www.csl.sri.com/fm.html. </institution>
Reference: [1] <author> Martn Abadi and Roger Needham. </author> <title> Prudent engi neering practice for cryptographic protocols. </title> <booktitle> In Proceedings of the Symposium on Research in Security and Privacy, </booktitle> <pages> pages 122-136, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1994. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: Sophisticated cryptographic and other attacks are a given in the first class of applications, so our concern about the security of authentication needs no further justification here (the literature is replete with broken cryptographic protocols <ref> [1, 21] </ref>). Intelligent malicious attack is not considered a serious possibility in embedded systems, and the argument in these cases is a little different.
Reference: [2] <author> Birgit Baum-Waidner. </author> <title> Byzantine agreement with a minimum number of messages both in the faultless and worst case. </title> <booktitle> In Fault Tolerant Computing Symposium 23 [14], </booktitle> <pages> pages 554-563. </pages>
Reference-contexts: However, both classes of protocols provably require t + 1 rounds in the worst case [5, 11], though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t <ref> [2, 7, 8, 10, 12] </ref>. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts (e.g., asymptotically, a three-fold advantage in number of faults tolerated). However, these advantages may not be so significant in practice.
Reference: [3] <author> Malte Borcherding. </author> <title> Efficient failure discovery with limited authentication. </title> <booktitle> In 15th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 78-82, </pages> <address> Vancouver, Canada, </address> <month> May </month> <year> 1995. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: A third approach is to globally order the messages so that a recipient can deduce from the context which signature sequence should be used for verification. Processors are assumed to know each others' signature keys. Borcherding <ref> [3] </ref> investigates the case where there is no central authority to distribute these keys, and proposes the notion of "local authentication" to achieve a weaker version of Byzantine agreement. Distinguishing concurrent sessions.
Reference: [4] <author> W. Diffie and M.E. Hellman. </author> <title> New directions in cryp tography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):644-650, </volume> <month> November </month> <year> 1976. </year> <month> 10 </month>
Reference-contexts: Any receiver can check the authenticity of a message and confirm the identity of its claimed originator by checking the signature. There are several digital signature schemes that provide these basic properties <ref> [4, 9, 22, 25] </ref>.
Reference: [5] <author> D. Dolev and H. R. </author> <title> Strong. Authenticated algorithms for Byzantine agreement. </title> <journal> SIAM Journal on Computing, </journal> <volume> 12(4) </volume> <pages> 656-666, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: It is generally stated that the written messages assumptions can be satisfied using cryptographic authentication methods (i.e., "digital signatures"), and protocols based on these assumptions are therefore often called "signed messages" or "authenticated" protocols <ref> [5, 11, 16] </ref>. <p> However, both classes of protocols provably require t + 1 rounds in the worst case <ref> [5, 11] </ref>, though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t [2, 7, 8, 10, 12]. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts
Reference: [6] <author> Danny Dolev and Rudiger Reischuk. </author> <title> Bounds on in formation exchange for Byzantine agreement. </title> <journal> Journal of the ACM, </journal> <volume> 32(1) </volume> <pages> 191-204, </pages> <month> January </month> <year> 1985. </year>
Reference-contexts: Note that if the transmitter is not arbitrarily-faulty, the set of values considered in the choice will be a singleton. Lamport, Pease and Shostak show [16, Theorem 2] that SM (r) can tolerate up to r faulty processors, the optimal result <ref> [6, 11] </ref>. To extend SM (r) and its analysis to the hybrid fault model is straightforward: the hybrid protocol SMH (r) simply recognizes and discards manifest-faulty values.
Reference: [7] <author> Danny Dolev, Rudiger Reischuk, and H. Raymond Strong. </author> <title> Early stopping in Byzantine agreement. </title> <journal> Journal of the ACM, </journal> <volume> 37(4) </volume> <pages> 720-741, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: However, both classes of protocols provably require t + 1 rounds in the worst case [5, 11], though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t <ref> [2, 7, 8, 10, 12] </ref>. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts (e.g., asymptotically, a three-fold advantage in number of faults tolerated). However, these advantages may not be so significant in practice.
Reference: [8] <author> Klaus Echtle. </author> <title> Fault masking with reduced redundant communication. </title> <booktitle> In Fault Tolerant Computing Symposium 16, </booktitle> <pages> pages 178-183, </pages> <address> Vienna, Austria, </address> <month> July </month> <year> 1986. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: However, both classes of protocols provably require t + 1 rounds in the worst case [5, 11], though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t <ref> [2, 7, 8, 10, 12] </ref>. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts (e.g., asymptotically, a three-fold advantage in number of faults tolerated). However, these advantages may not be so significant in practice.
Reference: [9] <author> T. ElGamal. </author> <title> A public key cryptosystem and a sig nature scheme based on discrete logarithms. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-31(4):469-472, </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: Any receiver can check the authenticity of a message and confirm the identity of its claimed originator by checking the signature. There are several digital signature schemes that provide these basic properties <ref> [4, 9, 22, 25] </ref>.
Reference: [10] <author> Paul D. Ezhilchelvan. </author> <title> Early stopping algorithms for distributed agreement under fail-stop, omission, and timing fault types. </title> <booktitle> In 6th Symposium on Reliability in Distributed Software and Database Systems, </booktitle> <pages> pages 201-212, </pages> <address> Williamsburg, VA, March 1987. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: However, both classes of protocols provably require t + 1 rounds in the worst case [5, 11], though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t <ref> [2, 7, 8, 10, 12] </ref>. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts (e.g., asymptotically, a three-fold advantage in number of faults tolerated). However, these advantages may not be so significant in practice.
Reference: [11] <author> M. Fischer and N. Lynch. </author> <title> A lower bound for the time to assure interactive consistency. </title> <journal> Information Processing Letters, </journal> <volume> 14 </volume> <pages> 183-186, </pages> <year> 1982. </year>
Reference-contexts: It is generally stated that the written messages assumptions can be satisfied using cryptographic authentication methods (i.e., "digital signatures"), and protocols based on these assumptions are therefore often called "signed messages" or "authenticated" protocols <ref> [5, 11, 16] </ref>. <p> However, both classes of protocols provably require t + 1 rounds in the worst case <ref> [5, 11] </ref>, though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t [2, 7, 8, 10, 12]. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts <p> Note that if the transmitter is not arbitrarily-faulty, the set of values considered in the choice will be a singleton. Lamport, Pease and Shostak show [16, Theorem 2] that SM (r) can tolerate up to r faulty processors, the optimal result <ref> [6, 11] </ref>. To extend SM (r) and its analysis to the hybrid fault model is straightforward: the hybrid protocol SMH (r) simply recognizes and discards manifest-faulty values.
Reference: [12] <author> F. Di Giandomenico, M. L. Guidotti, F. Grandoni, and L. Simoncini. </author> <title> A graceful dependable algorithm for Byzantine agreement. </title> <booktitle> In 6th Symposium on Reliability in Distributed Software and Database Systems, </booktitle> <pages> pages 188-200, </pages> <address> Williamsburg, VA, March 1987. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: However, both classes of protocols provably require t + 1 rounds in the worst case [5, 11], though "early stopping" protocols (which are most easily constructed under the written messages assumptions) use fewer rounds when the actual number of faults is less than t <ref> [2, 7, 8, 10, 12] </ref>. 1 It would seem that the written messages protocols have significant advantages over their oral message counterparts (e.g., asymptotically, a three-fold advantage in number of faults tolerated). However, these advantages may not be so significant in practice.
Reference: [13] <author> L. Gong. </author> <title> Variations on the themes of message fresh ness and replay. </title> <booktitle> In Proceedings of the Computer Security Foundations Workshop VII, </booktitle> <pages> pages 131-136, </pages> <address> Fran-conia, NH, June 1993. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: The initiator must securely attach a freshness identifier to the signed value. For example, the initiator can sign both the freshness identifier and the value in the same signature. There are three types of freshness identifiers, each of which can be used in more than one way <ref> [13] </ref>. The first is a timestamp, if processors have synchronized clocks. In this case, the initiator attaches the reading from the local clock to the value before signing them. A recipient rejects any message with a timestamp that is outside an agreed time window relative to the re-cipient's local clock.
Reference: [14] <institution> Fault Tolerant Computing Symposium 23, Toulouse, </institution> <address> France, June 1993. </address> <publisher> IEEE Computer Society. </publisher>
Reference: [15] <author> R. M. Kieckhafer, C. J. Walter, A. M. Finn, and P. M. Thambidurai. </author> <title> The MAFT architecture for distributed fault tolerance. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(4) </volume> <pages> 398-405, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: But if other purposes (e.g., clock synchronization) already require four or more processors, there seems no compelling reason to use written message protocols. In fact, there is an argument against these protocols which Chris Wal-ter, one of the developers of the MAFT architecture for fault-tolerant flight control <ref> [15] </ref> expressed to us as follows: "you have to assume that digital signatures satisfy the requirements for written messages, and in life-critical systems we prefer to make as few assumptions as possible." It turns out that this caution is justified. <p> these threats? There are two main classes of applications for authenticated Byzantine agreement protocols: secure systems that must maintain coordination in the face of capture and active subversion of system components (e.g., the AT&T "Rampart" architecture [24]), and safety-critical embedded control systems (e.g., the MAFT architecture for aircraft flight control <ref> [15] </ref>). Sophisticated cryptographic and other attacks are a given in the first class of applications, so our concern about the security of authentication needs no further justification here (the literature is replete with broken cryptographic protocols [1, 21]).
Reference: [16] <author> Leslie Lamport, Robert Shostak, and Marshall Pease. </author> <title> The Byzantine Generals problem. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 4(3) </volume> <pages> 382-401, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: In its abstract form, this is the problem of Byzan-tine Agreement (and its variant, the problem of "In-teractive Consistency," also known as "source congruence," "distributed consensus," and "reliable multi-cast") <ref> [16, 23] </ref>. There are two broad classes of protocols for achieving Byzantine agreement. <p> It is generally stated that the written messages assumptions can be satisfied using cryptographic authentication methods (i.e., "digital signatures"), and protocols based on these assumptions are therefore often called "signed messages" or "authenticated" protocols <ref> [5, 11, 16] </ref>. <p> number of participants, which we call "proces-sors." A distinguished processor, which we call the transmitter , possesses a value to be communicated to all the other processors, which we call the receivers. (These correspond to the "Commanding General" and "Lieutenant Generals," respectively, in the terminology of Lamport, Shostak, and Pease <ref> [16] </ref>.) It is assumed that there are point-to-point communications paths between each pair of processors. The Byzantine Agreement problem can be studied under several different sets of assumptions. We consider both "Oral" and "Written" message assumptions, and a "Hybrid" fault model. <p> The Byzantine Agreement problem can be studied under several different sets of assumptions. We consider both "Oral" and "Written" message assumptions, and a "Hybrid" fault model. The Oral Messages assumptions are the following <ref> [16, p. 387] </ref>. A1: Every message that is sent between nonfaulty processors is correctly delivered. A2: The receiver of a message knows who sent it (assumption of private channels). A3: The absence of a message can be detected (assumption of synchrony). <p> A1: Every message that is sent between nonfaulty processors is correctly delivered. A2: The receiver of a message knows who sent it (assumption of private channels). A3: The absence of a message can be detected (assumption of synchrony). Written Messages assumptions add the following to those of oral messages <ref> [16, p. 391] </ref>. A4 (a): Messages sent by a nonfaulty processor (un der the hybrid fault model|see later|this becomes a non-arbitrary-faulty processor) cannot be altered or manufactured by other processors. <p> A solution to this particular problem is to include additional information under the digital signatures that will identify messages as "fresh" (Lamport, Shostak, and Pease suggest sequence numbers <ref> [16, page 400] </ref>), but this needs to be done carefully 3 in order to distinguish this run of the protocol from others that may be active simultaneously. <p> Hence, embedded systems may prefer to dispense with truly secure authenticated protocols and to use short keyed checksums (Lamport, Pease, and Shostak suggest a suitable checksum algorithm <ref> [16, page 400] </ref>), with fixed keys and simple sequence-numbers to indicate freshness. The authentication assumptions may sometimes fail to hold in this arrangement. <p> However, for the case of practical importance|that is, two-round protocols|there appears little to choose between the two classes of protocols: the signed message protocol SM (1) and the oral messages protocol OM (1) of Lamport, Pease, and Shostak <ref> [16] </ref> both require two rounds 2 , and both tolerate only a single arbitrary fault. The difference is that OM (1) requires four processors, while SM (1) requires but three. <p> So one item that warrants examination is the behavior of SM (1) under the hybrid fault model. The classical signed messages protocol, SM (r) proceeds as follows <ref> [16, p. 391] </ref>: SM (r) The transmitter sends a signed message to each receiver. Each receiver adds its signature to the message and sends it to the other receivers who add their signatures and send it to the others, and so on for r rounds. <p> Note that if the transmitter is not arbitrarily-faulty, the set of values considered in the choice will be a singleton. Lamport, Pease and Shostak show <ref> [16, Theorem 2] </ref> that SM (r) can tolerate up to r faulty processors, the optimal result [6, 11]. To extend SM (r) and its analysis to the hybrid fault model is straightforward: the hybrid protocol SMH (r) simply recognizes and discards manifest-faulty values. <p> It follows that only arbitrary-faulty processors need be counted in the fault-tolerance calculation. Thus, by direct analogy with the corresponding result (Theorem 2, page 393) in <ref> [16] </ref>, we have the following result. Theorem 1 For any r, Protocol SMH (r) satisfies Validity and Agreement provided r a, where a is the number of arbitrary-faulty processors. <p> The protocol OMH (r) [19] is our modified and formally verified [17] version of Thambidurai and Park's protocol Z (r) [29], which is in turn a modification of the r + 1-round oral messages protocol OM (r) of Lamport, Shostak, and Pease <ref> [16] </ref>. The key idea in both Z (r) and OMH (r) is to introduce a distinguished value E to record receipt of manifest-faulty messages. E values are ignored in the majority vote that each processor uses to decide its final value. <p> Suppose now that we use digital signatures to add authentication to OMH (r), thereby creating a protocol we can call OMHA (r). First, as Lamport, Shostak, and Pease observe <ref> [16, p.393] </ref>, there is no point authenticating the final step in the protocol (i.e., the OMH (0) round), because we have point-to-point communications and the communication port on which a message arrives serves to authenticate it (this is Assumption A2); thus OMHA (0) is the same as OMH (0).
Reference: [17] <author> Patrick Lincoln and John Rushby. </author> <title> Formal verification of an algorithm for interactive consistency under a hybrid fault model. In Costas Courcoubetis, editor, Computer-Aided Verification, </title> <booktitle> CAV '93, volume 697 of Lecture Notes in Computer Science, </booktitle> <pages> pages 292-304, </pages> <address> Elounda, Greece, June/July 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The classical protocol OM (r) does not do this, but our hybrid protocol OMH (r) does. It therefore seems the most promising place to start. The protocol OMH (r) [19] is our modified and formally verified <ref> [17] </ref> version of Thambidurai and Park's protocol Z (r) [29], which is in turn a modification of the r + 1-round oral messages protocol OM (r) of Lamport, Shostak, and Pease [16].
Reference: [18] <author> Patrick Lincoln and John Rushby. </author> <title> Formal verification of an algorithm for interactive consistency under a hybrid fault model. </title> <type> Technical Report SRI-CSL-93-2, </type> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> March </month> <year> 1993. </year> <note> Also available as NASA Contractor Report 4527, </note> <month> July </month> <year> 1993. </year>
Reference-contexts: Separate analysis shows that the protocol is also optimal when only manifest faults are present, and the obtained bound is n &gt; m <ref> [18] </ref>. When only symmetric faults are present, however, the protocol is definitely suboptimal, in that additional rounds can reduce its resilience. For example, in OMH (0) (where receivers simply accept whatever value they obtain from the transmitter), the number of symmetric-faulty receivers is irrelevant.
Reference: [19] <author> Patrick Lincoln and John Rushby. </author> <title> A formally verified algorithm for interactive consistency under a hybrid fault model. </title> <booktitle> In Fault Tolerant Computing Symposium 23 [14], </booktitle> <pages> pages 402-411. </pages>
Reference-contexts: The difference is that OM (1) requires four processors, while SM (1) requires but three. However, a variation on OM (1) called OMH (1) <ref> [19] </ref> that operates under the Hybrid fault model can tolerate a arbitrary, s symmetric, and m manifest faults simultaneously, provided n, the number of processors, satisfies n &gt; 2a+2s+m+1 and a 1. Thus, OMH (1) appears to tolerate more faults than SM (1) under certain circumstances. <p> The classical protocol OM (r) does not do this, but our hybrid protocol OMH (r) does. It therefore seems the most promising place to start. The protocol OMH (r) <ref> [19] </ref> is our modified and formally verified [17] version of Thambidurai and Park's protocol Z (r) [29], which is in turn a modification of the r + 1-round oral messages protocol OM (r) of Lamport, Shostak, and Pease [16]. <p> Our experiments confirmed the worst-case bounds on fault tolerance claimed for the various protocols in the case n = 5 and r = 1, and rediscovered the known vulnerability of Z (1) to manifest-faulty transmitters <ref> [19] </ref>. That is to say, exhaustive search of all fault configurations satisfying the bounds claimed in Table 1 for the case of n = 5 and r = 1 found no violations of Validity nor of Agreement, except for the known cases in Z (1).
Reference: [20] <author> Ralph Melton and David L. Dill. </author> <title> Mur Annotated Reference Manual. </title> <institution> Computer Science Department, Stanford University, Stanford, </institution> <address> CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: A state-exploration tool will then systematically explore all possible scenarios for their interaction. We have used the Mur (pronounced "Murphy") system from David Dill's group at Stanford <ref> [20] </ref> for this purpose.
Reference: [21] <author> Judy H. Moore. </author> <title> Protocol failures in cryptosystems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76(5) </volume> <pages> 594-602, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Sophisticated cryptographic and other attacks are a given in the first class of applications, so our concern about the security of authentication needs no further justification here (the literature is replete with broken cryptographic protocols <ref> [1, 21] </ref>). Intelligent malicious attack is not considered a serious possibility in embedded systems, and the argument in these cases is a little different.
Reference: [22] <author> National Institute of Standards and Technology. </author> <title> The digital signature standard. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 36-40, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Any receiver can check the authenticity of a message and confirm the identity of its claimed originator by checking the signature. There are several digital signature schemes that provide these basic properties <ref> [4, 9, 22, 25] </ref>.
Reference: [23] <author> M. Pease, R. Shostak, and L. Lamport. </author> <title> Reaching agreement in the presence of faults. </title> <journal> Journal of the ACM, </journal> <volume> 27(2) </volume> <pages> 228-234, </pages> <month> April </month> <year> 1980. </year>
Reference-contexts: In its abstract form, this is the problem of Byzan-tine Agreement (and its variant, the problem of "In-teractive Consistency," also known as "source congruence," "distributed consensus," and "reliable multi-cast") <ref> [16, 23] </ref>. There are two broad classes of protocols for achieving Byzantine agreement. <p> This is optimal when only arbitrary faults are present (we have a = r, s = m = 0, so that n &gt; 3a, satisfying the lower bound established by Pease, Shostak, and Lamport <ref> [23] </ref>). Separate analysis shows that the protocol is also optimal when only manifest faults are present, and the obtained bound is n &gt; m [18]. When only symmetric faults are present, however, the protocol is definitely suboptimal, in that additional rounds can reduce its resilience.
Reference: [24] <author> Michael Reiter. </author> <title> A secure group membership proto col. </title> <booktitle> In Proceedings of the Symposium on Research in Security and Privacy, </booktitle> <pages> pages 176-189, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1994. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: How significant are these threats? There are two main classes of applications for authenticated Byzantine agreement protocols: secure systems that must maintain coordination in the face of capture and active subversion of system components (e.g., the AT&T "Rampart" architecture <ref> [24] </ref>), and safety-critical embedded control systems (e.g., the MAFT architecture for aircraft flight control [15]).
Reference: [25] <author> R.L. Rivest, A. Shamir, and L. Adleman. </author> <title> A method for obtaining digital signatures and public-key cryp-tosystems. </title> <journal> Communications of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-126, </pages> <month> February </month> <year> 1978. </year>
Reference-contexts: Any receiver can check the authenticity of a message and confirm the identity of its claimed originator by checking the signature. There are several digital signature schemes that provide these basic properties <ref> [4, 9, 22, 25] </ref>.
Reference: [26] <author> John Rushby. </author> <title> A formally verified algorithm for clock synchronization under a hybrid fault model. </title> <booktitle> In Thirteenth ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 304-313, </pages> <address> Los Angeles, CA, </address> <month> August </month> <year> 1994. </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: The above characterization of the hybrid fault model is a generic one; for Byzantine agreement, the characterization of fault modes has to be refined in terms of the processor behaviors relevant to this problem (see <ref> [26] </ref> for a different characterization in terms relevant to clock synchronization). The basic step in an agreement protocol is for a processor to transmit a value v to several other processors.
Reference: [27] <author> Fred B. Schneider. </author> <title> Implementing fault-tolerant ser vices using the state machine approach: A tutorial. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(4) </volume> <pages> 299-319, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: 1 Introduction A fundamental requirement in fault-tolerant systems based on the "state machine" approach <ref> [27] </ref> is for replicated processors to reach agreement on the values of single-source data, such as sensor samples. In its abstract form, this is the problem of Byzan-tine Agreement (and its variant, the problem of "In-teractive Consistency," also known as "source congruence," "distributed consensus," and "reliable multi-cast") [16, 23].
Reference: [28] <author> T.K. Srikanth and S. Toueg. </author> <title> Simulating authenticated broadcasts to derive simple fault-tolerant algorithms. </title> <journal> Distributed Computing, </journal> <volume> 2(2) </volume> <pages> 80-94, </pages> <year> 1987. </year>
Reference-contexts: We can alternatively require that a list of hints is attached to each message outside the signatures. However, such hints will add O (n log n) bits to the message length (in an n-round protocol), thus exceeding the tight lower bound on message bits by Srikanth and Toueg <ref> [28, Theorem 1] </ref> by a factor of n. (In today's practice, a secure digital signature uses about 512 to 1024 bits.) Note that hints are necessary whether the signature system used is commutative or not. <p> One solution is to attach a session identifier, possibly the identity of the session initiator, to the sensor value. This solution will increase the size of each message by O (log n) bits. This does not exceed the lower bound by Srikanth and Toueg <ref> [28] </ref> because they already allocate O (log n) bits for signatures. Detecting replay attacks. Beside distinguishing concurrent sessions initiated by different processors, it is equally important to detect any attempt to reuse past messages (from the same initiator) in a new run.
Reference: [29] <author> Philip Thambidurai and You-Keun Park. </author> <title> Interactive consistency with multiple failure modes. </title> <booktitle> In 7th Symposium on Reliable Distributed Systems, </booktitle> <pages> pages 93-100, </pages> <address> Columbus, OH, </address> <month> October </month> <year> 1988. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: This leads to pessimistic estimates of the number of faults that can be tolerated because all faults are regarded as the worst possible. We therefore consider a "hybrid" fault model (origi-nally due to Thambidurai and Park <ref> [29] </ref> and also investigated by Walter, Suri, and Hugue [30]) that distinguishes certain simpler kinds of fault as well as those 2 that are unconstrained. The fault modes we distinguish for processors are arbitrary-faulty , symmetric-faulty , and manifest-faulty. <p> The classical protocol OM (r) does not do this, but our hybrid protocol OMH (r) does. It therefore seems the most promising place to start. The protocol OMH (r) [19] is our modified and formally verified [17] version of Thambidurai and Park's protocol Z (r) <ref> [29] </ref>, which is in turn a modification of the r + 1-round oral messages protocol OM (r) of Lamport, Shostak, and Pease [16]. The key idea in both Z (r) and OMH (r) is to introduce a distinguished value E to record receipt of manifest-faulty messages.
Reference: [30] <author> C. J. Walter, N. Suri, and M. M. Hugue. </author> <title> Continual on line diagnosis of hybrid faults. </title> <editor> In F. Cristian, G. Le Lann, and T. Lunt, editors, </editor> <title> Dependable Computing for Critical Applications|4, </title> <booktitle> volume 9 of Dependable Computing and Fault-Tolerant Systems, </booktitle> <pages> pages 233-249. </pages> <publisher> Springer-Verlag, </publisher> <address> Vienna, Austria, </address> <month> January </month> <year> 1994. </year> <title> The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, </title> <institution> of the Air Force Office of Scientific Research or the U.S. Government. </institution> <month> 11 </month>
Reference-contexts: This leads to pessimistic estimates of the number of faults that can be tolerated because all faults are regarded as the worst possible. We therefore consider a "hybrid" fault model (origi-nally due to Thambidurai and Park [29] and also investigated by Walter, Suri, and Hugue <ref> [30] </ref>) that distinguishes certain simpler kinds of fault as well as those 2 that are unconstrained. The fault modes we distinguish for processors are arbitrary-faulty , symmetric-faulty , and manifest-faulty.
References-found: 31

