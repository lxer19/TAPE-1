URL: http://wwwis.win.tue.nl/~wsinwa/ieee.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/publications.html
Root-URL: http://www.win.tue.nl
Title: Framework for Business Process Redesign  
Author: W.M.P. van der Aalst K.M. van Hee 
Address: P.O. Box 513, 5600 MB, Eindhoven, The Netherlands  
Affiliation: Department of Mathematics and Computing Science Eindhoven University of Technology  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W.M.P. van der Aalst. </author> <title> Timed coloured Petri nets and their application to logistics. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1992. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [1, 6, 7] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 3 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [1, 9, 11] </ref>). 3.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many business processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system. <p> For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [7], Murata [11], and <ref> [1, 2] </ref>. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.). In this way it is possible to evaluate alternative designs.
Reference: [2] <author> W.M.P. van der Aalst. </author> <title> Interval Timed Coloured Petri Nets and their Analysis. </title> <editor> In M. Ajmone Marsan, editor, </editor> <booktitle> Application and Theory of Petri Nets 1993, volume 691 of Lecture Notes in Computer Science, </booktitle> <pages> pages 453-472. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [7], Murata [11], and <ref> [1, 2] </ref>. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.). In this way it is possible to evaluate alternative designs.
Reference: [3] <author> W.M.P. van der Aalst. </author> <title> Putting Petri nets to work in industry. </title> <booktitle> Computers in Industry, </booktitle> <volume> 25(1) </volume> <pages> 45-54, </pages> <year> 1994. </year>
Reference: [4] <author> M. Hammer and J. Champy. </author> <title> Reengineering the corporation. </title> <publisher> Nicolas Brealey Publishing, </publisher> <address> London, </address> <year> 1993. </year>
Reference: [5] <author> R. Haupt. </author> <title> A survey of priority rule-based scheduling. </title> <journal> OR Spectrum, </journal> <volume> 11 </volume> <pages> 3-16, </pages> <year> 1989. </year>
Reference-contexts: In this case, the resource manager uses more information about the task to be scheduled. By assigning a priority to each task, we can favour an important task above less important tasks. We can use most of the priority rules for rule based scheduling (cf. Haupt <ref> [5] </ref>). Typical priority rules are: SPT (shortest processing time), MWKR (most work remaining), LWKR (least work remaining), DD (earliest due-date), etc. figure.
Reference: [6] <author> K.M. van Hee. </author> <title> Information System Engineering: a Formal Approach. </title> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [1, 6, 7] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 3 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [7] and van Hee <ref> [6] </ref>. In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. 3.5 Analysis of Petri nets The complexity of the design and control problems encountered in modern business processes is increasing.
Reference: [7] <author> K. Jensen. </author> <title> Coloured Petri Nets. Basic concepts, analysis methods and practical use. </title> <booktitle> EATCS monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [1, 6, 7] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 3 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen <ref> [7] </ref> and van Hee [6]. In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. 3.5 Analysis of Petri nets The complexity of the design and control problems encountered in modern business processes is increasing. <p> For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen <ref> [7] </ref>, Murata [11], and [1, 2]. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.). In this way it is possible to evaluate alternative designs.
Reference: [8] <author> K. Jensen and G. Rozenberg, </author> <title> editors. High-level Petri Nets: Theory and Application. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [9] <author> M. Ajmone Marsan, G. Balbo, and G. Conte. </author> <title> Performance Models of Multiprocessor Systems. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, </address> <year> 1986. </year>
Reference-contexts: The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [1, 9, 11] </ref>). 3.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many business processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system.
Reference: [10] <author> D. Morris and J. Brandon. </author> <title> Reengineering your business. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Diagramming techniques such as flowcharts, decision trees, Warnier-Orr diagrams, state transition diagrams, fishbone diagrams, hierarchy charts, dataflow diagrams and business activity maps (cf. Morris and Brandon <ref> [10] </ref>) have been used to represent business processes. Most of these techniques suffer from two important drawbacks: (1) the lack of formal semantics and (2) the absence of powerful analysis methods and tools. High-level Petri nets have a formal semantics.
Reference: [11] <author> T. Murata. </author> <title> Petri Nets: Properties, Analysis and Applications. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(4) </volume> <pages> 541-580, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Since then the use and study of Petri nets has increased considerably. For a review of the history of Petri nets and an extensive bibliography the reader is referred to Murata <ref> [11] </ref>. The classical Petri net is a directed bipartite graph with two node types called places and transitions. The nodes are connected via directed arcs. Connections between two nodes of the same type are not allowed. <p> The classical Petri net model has been used in many application areas, e.g. communication protocols, flexible manufacturing systems and distributed information systems (see Murata <ref> [11] </ref>). However, Petri nets describing real systems tend to be complex and extremely large. To solve these problems, many authors propose extensions of the basic Petri net model. We will discuss three of these extensions; `colour', `time' and `hierarchy'. <p> The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [1, 9, 11] </ref>). 3.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many business processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system. <p> For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [7], Murata <ref> [11] </ref>, and [1, 2]. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.). In this way it is possible to evaluate alternative designs.
Reference: [12] <institution> C.A. Petri. Kommunikation mit Automaten. </institution> <type> PhD thesis, </type> <institution> Institut fur instrumentelle Mathematik, Bonn, </institution> <year> 1962. </year>
Reference: [13] <author> A. Smith. </author> <title> The Wealth of Nations. </title> <type> 1776. </type>
References-found: 13

