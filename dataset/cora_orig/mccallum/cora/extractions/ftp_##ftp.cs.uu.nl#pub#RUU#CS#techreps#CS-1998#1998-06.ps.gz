URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1998/1998-06.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Algorithms for Fence Design  
Author: Robert-Paul Berretty Ken Goldberg Mark H. Overmars A. Frank van der Stappen 
Address: Netherlands  Berkeley, CA, USA  Netherlands  Netherlands  
Affiliation: University of Utrecht, Utrecht, The  University of California at  University of Utrecht, Utrecht, The  University of Utrecht, Utrecht, The  
Abstract: A common task in automated manufacturing processes is to orient parts prior to assembly. We address sensorless orientation of a polygonal part on a conveyor belt by a sequence of stationary fences across this belt. Since fences can only push against the motion of the belt, it is a challenging problem to compute fence designs which orients a given part. In this paper, we give several polynomial-time, algorithms to compute fence designs which are optimal with respect to various criteria. We address both frictionless and frictional fences. We also compute modular fence designs in which the fence angles are restricted to a discrete set of angles instead of an interval.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Akella, W. Huang, K.M. Lynch, </author> <title> and M.T. Mason. Sensorless parts feeding with a one joint manipulator. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <month> 26 </month> <year> 1997. </year> <note> See also Alg. for Robotic Motion and Manipulation (J.-P. </note> <editor> Laumond and M. Overmars (Eds.)), A.K. </editor> <publisher> Peters, </publisher> <pages> pages 229-238, </pages> <year> 1996. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) <ref> [1] </ref>, a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. <p> Unfortunately, this implies that frictional fences are not able to orient any part up to symmetry. It is possible to construct parts which can only be oriented with a reorientation of the push direction push arbitrarily close to <ref> [1] </ref>. Since the reorientation of the jaw closest to is arctan for a frictional fence, we can always construct a part which cannot be oriented by frictional fences. 20 5.2 Algorithms for frictional fence designs In this section we discuss two algorithms to compute frictional fence designs, if one exists. <p> The total number of possible reorientations of the jaw is bounded by 2m. Still, it is possible to construct parts which can only be oriented with a reorientation of the push direction push arbitrarily close to <ref> [1] </ref>. This implies that one can always 23 construct a part that cannot be oriented, given a set of modular fence angles. The modular fences we treat in this section are friction free.
Reference: [2] <author> S. Akella and M.T. Mason. </author> <title> Posing polygonal objects in the plane by pushing. </title> <booktitle> In IEEE International Conference on Robotics and Automation, Nice, </booktitle> <pages> pages 2255-2268, </pages> <year> 1992. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] <p> single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. The problem of sensorless orientation by a pushing jaw is to find a sequence of push directions that will move the part from an arbitrary initial orientation into a single known final orientation.
Reference: [3] <author> R.-P. Berretty, K. Goldberg, M. Overmars, and A.F. van der Stappen. </author> <title> Computing fence designs for orienting parts. </title> <type> Technical report, </type> <institution> UU-CS-1997-41, Dept. of Comp. Science, Utrecht University, </institution> <year> 1997. </year>
Reference-contexts: They gave an exponential algorithm for computing the shortest sequence of fences for a given part. In [4], we proved the conjecture that a fence design exists for any polygonal part. A more eleborate version of the proof can be found in <ref> [3] </ref>. Also, we gave an O (n 3 log n) algorithm for computing a fence design of minimal length (in terms of the number of fences used). In this paper, we first review this algorithm, which is easy to implement. <p> Besides the steps, there are isolated points satisfying p () = in the push function, corresponding to local maxima of the radius function. Figure 2 shows a polygonal part and its push function. The final orientation of the part while being pushed is described by the push function. In <ref> [3] </ref> we showed that any step function having only non-zero-length half-steps represents a polygonal part, and is therefore a valid push function. A push function p is said to have period d if p () = p (( + d) mod 2) for all 2 [0; 2). <p> Proof: A fence design which orients P up to symmetry exists <ref> [4, 3] </ref>. We can, by subtracting the indices of a current shortest interval, check in constant time if the part is oriented up to symmetry. Extending the fence design by one fence takes O (n log n) time. Maintaining the used fences takes O (n) time per extension.
Reference: [4] <editor> R.-P. Berretty, K.Y. Goldberg, M.H. Overmars, and A.F. van der Stappen. </editor> <title> On fence design and the complexity of push plan for orienting parts. </title> <booktitle> In Proc. 13th Ann. ACM Symp. on Computational Geometry., </booktitle> <pages> pages 21-29, </pages> <year> 1997. </year>
Reference-contexts: The additional constraints make fence design considerably more difficult than sensorless orientation by a pushing jaw. Wiegley et al. [21] conjectured that a fence design exists for any polygonal part. They gave an exponential algorithm for computing the shortest sequence of fences for a given part. In <ref> [4] </ref>, we proved the conjecture that a fence design exists for any polygonal part. A more eleborate version of the proof can be found in [3]. <p> Also, we can change the algorithm to compute fence designs which use modular fences of fixed angles. The running time of the algorithm is then O (mn 2 ), with m the number of available fence angles. In <ref> [4] </ref>, we showed that fence designs of length O (n) exist for a large class of parts. In this paper, we give a new, output-sensitive algorithm which computes the shortest fence design. This algorithm runs in time O (kn log n), with k the number of fences in the design. <p> For a large class of parts, of which the lengths of the left and right environments are unique to some extent, the linear upper bound is valid for fence design, though. 3 An Algorithm for Computing Fence Designs In this section we give an algorithm <ref> [4] </ref> which enables us to compute fence designs in time O (n 3 log n). This algorithm is based upon a discretization of the fence design problem, which leads to a polynomial-size graph representing the fence design problem. A search in this graph gives a feasible fence design. <p> In <ref> [4, 20] </ref> we showed that, for a large class of parts, the fence designs have linear length, and for most long and thin parts, the fence design has constant length. This suggests that an output sensitive algorithm, whose running time depends on the length, is to be preferred. <p> Proof: A fence design which orients P up to symmetry exists <ref> [4, 3] </ref>. We can, by subtracting the indices of a current shortest interval, check in constant time if the part is oriented up to symmetry. Extending the fence design by one fence takes O (n log n) time. Maintaining the used fences takes O (n) time per extension.
Reference: [5] <author> K.-F. Bohringer, V. Bhatt, and K.Y. Goldberg. </author> <title> Sensorless manipulation using transverse vibrations of a plate. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, Nagoya, Japan, </booktitle> <pages> pages 1989-1996, </pages> <year> 1995. </year>
Reference-contexts: parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields <ref> [5, 6] </ref>. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations.
Reference: [6] <author> K.-F. Bohringer, B.R. Donald, </author> <title> and N.C. MacDonald. Upper and lower bounds for programmable vector fields with applications to mems and vibratory plate part feeders. Alg. for Robotic Motion and Manipulation, </title> <editor> J.-P. Laumond and M. Overmars (Eds.), A.K. </editor> <publisher> Peters, </publisher> <pages> pages 255-276, </pages> <year> 1996. </year>
Reference-contexts: parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields <ref> [5, 6] </ref>. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations.
Reference: [7] <author> M. Brokowski, M.A. Peshkin, and K. Goldberg. </author> <title> Optimal curved fences for part alignment on a belt. </title> <journal> ASME Transactions of Mechanical Design, </journal> <volume> 117, </volume> <month> March </month> <year> 1995. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides <ref> [7, 18, 21] </ref>, a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. <p> The problem of fence design is to determine a sequence of fence orientations (see Figure 1) such that the fences with these orientations align the part as it moves down a conveyor belt and slides along these fences <ref> [7, 18, 21] </ref>. The motion of the belt effectively turns each slide into a push action by the fence in the direction normal to the fence. <p> We now transform this constraint on the push direction relative to the belt into a constraint on successive push directions relative to the part. Sliding along a fence f i causes one of P 's edges e to align with the fence. The curved tip of the fence <ref> [7] </ref> guarantees that e is aligned with the belt sides as P leaves the fence. If f i is a left fence then e faces the left belt side (see Figure 3). If f i is a right fence, it faces the right side.
Reference: [8] <author> J. Chen, K. Goldberg, M. Overmars, D. Halperin, K.-F. Bohringer, and Y. Zhuang. </author> <title> Shape tolerance in feeding and fixturing. em This proceedings, </title> <year> 1998. </year>
Reference-contexts: It is unknown whether this is indeed required ar whether linear length designs always exist. Also, looking into orienting algebraic parts [19] using fences is of interest. Finally, we want to mention the problems of dealing with uncertainty (see <ref> [8] </ref> for a first treatment) and generalization of fence design to 3D. Acknowledgements This research was supported in part by NATO Collaborative Research Grant CRG 951224. Berretty's research is supported by the Dutch Organization for Scientific Research (N.W.O.).
Reference: [9] <author> Y.-B. Chen and D.J. Ierardi. </author> <title> The complexity of oblivious plans for orienting and distinguishing polygonal parts. </title> <journal> Algoritmica, </journal> <volume> 14 </volume> <pages> 367-397, </pages> <year> 1995. </year>
Reference-contexts: The input is a description of the part shape and the output is a sequence of open-loop actions that moves a part from an unknown initial pose into a unique final pose. Among the sensorless part feeders considered in literature are the parallel-jaw gripper <ref> [9, 13] </ref>, a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. <p> Such a sequence is referred to as a push plan. Goldberg [13] showed that any polygonal part can be oriented by a sequence of pushes. Chen and Ierardi <ref> [9] </ref> proved that any polygonal part with n vertices can be oriented by O (n) pushes. 1 for three different initial orientations of the same part are displayed. <p> The relation between push plans and fence design immediately gives a worst case lower bound on the length of fence designs of (n), which is presented in the paper of Chen and Ierardi <ref> [9] </ref>. The left and right environments of the stable equilibria of the parts of [9] which lead to this lower bound have the same length, with only a few exceptions. In their paper, Chen and Ierardi also give a linear upper bound on the length of a general push plan. <p> The relation between push plans and fence design immediately gives a worst case lower bound on the length of fence designs of (n), which is presented in the paper of Chen and Ierardi <ref> [9] </ref>. The left and right environments of the stable equilibria of the parts of [9] which lead to this lower bound have the same length, with only a few exceptions. In their paper, Chen and Ierardi also give a linear upper bound on the length of a general push plan. <p> Since the best known upper bound on the length of a fence design is O (n 2 ), the latter algorithm might be slower than the graph based algorithm. However, we believe that fence designs, like push plans <ref> [9] </ref>, have at most linear length. It is an interesting open problem to prove or disprove this. 25 7 Conclusion In this paper we addressed the algorithmic issues of sensorless part orientation by a sequence of fences across a conveyor belt.
Reference: [10] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts; London, England, </address> <year> 1990. </year>
Reference-contexts: A breadth-first search of the graph takes O (n 3 ) time (see e.g. <ref> [10] </ref>). This yields the following theorem. Theorem 6 The computation of the optimal fence design for a polygonal part P with n vertices takes O (n 3 log n) time. Let t be a path in the graph from the source to the sink. <p> The costs make it impossible to apply Lemma 4 to reduce the graph size, as this may cause the removal of equally long or longer paths with lower cost from the graph. The size of the resulting graph is therefore O (n 4 ). Dijkstra's algorithm (see e.g. <ref> [10] </ref>) has been used to find the minimal cost path through the graph in time O (n 4 ). 4 An Output-Sensitive Algorithm A disadvantage of the algorithm of the previous section is the high running time of O (n 3 log n), even if the computed fence design turns out
Reference: [11] <author> M. de Berg, M. van Kreveld, M. Overmars, and O. Schwarzkopf. </author> <title> Computational Geometry, Algorithms and Applications. </title> <publisher> Springer, </publisher> <address> Berlin Heidelberg, </address> <year> 1997. </year> <note> ISBN 3-540-61270-X. </note>
Reference-contexts: Therefore, this naive approach leads to an O (kn 2 ) algorithm. 4.2 Updating in O (n log n) time We now show how to speed up the part which determines the best candidate to logarithmic time per interval. To achieve this, we build a range tree (see e.g. <ref> [11] </ref>) on the starting orientations of the intervals in L (k 1) and R (k 1), which allows us to find in logarithmic time sets of the candidate intervals for any starting orientation after k fences. A range tree is a balanced binary search tree.
Reference: [12] <author> M.A. Erdmann and M.T. Mason. </author> <title> An exploration of sensorless manipulation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4 </volume> <pages> 367-379, </pages> <year> 1988. </year>
Reference-contexts: the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray <ref> [12, 16] </ref>, and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations.
Reference: [13] <author> K. Goldberg. </author> <title> Orienting polygonal parts without sensors. </title> <journal> Algoritmica, </journal> <volume> 10(2) </volume> <pages> 201-225, </pages> <year> 1993. </year>
Reference-contexts: The input is a description of the part shape and the output is a sequence of open-loop actions that moves a part from an unknown initial pose into a unique final pose. Among the sensorless part feeders considered in literature are the parallel-jaw gripper <ref> [9, 13] </ref>, a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. <p> The problem of sensorless orientation by a pushing jaw is to find a sequence of push directions that will move the part from an arbitrary initial orientation into a single known final orientation. Such a sequence is referred to as a push plan. Goldberg <ref> [13] </ref> showed that any polygonal part can be oriented by a sequence of pushes. Chen and Ierardi [9] proved that any polygonal part with n vertices can be oriented by O (n) pushes. 1 for three different initial orientations of the same part are displayed. <p> This is basically the same technique as used by Goldberg's algorithm to compute push plans <ref> [13] </ref>. Goldberg maintains the interval of possible orientations, and greedily shrinks this interval per application of the pushing jaw. We, however, must take into account the constraints of fence design. It is not sufficient to maintain a single shortest interval of possible orientations.
Reference: [14] <author> K. M. Lynch and M.T. Mason. </author> <title> Stable pushing: Mechanics, controllability, </title> <journal> and plan-ning. Int. J. of Robotics Research, </journal> <volume> 6(15) </volume> <pages> 533-556, </pages> <year> 1996. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] <p> single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. The problem of sensorless orientation by a pushing jaw is to find a sequence of push directions that will move the part from an arbitrary initial orientation into a single known final orientation.
Reference: [15] <author> M. Mason. </author> <title> Manipulator grasping and pushing operations. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <year> 1982. </year> <title> Published in Robot Hands and the Mechanics of Manipulation, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1985. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] <p> single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. The problem of sensorless orientation by a pushing jaw is to find a sequence of push directions that will move the part from an arbitrary initial orientation into a single known final orientation. <p> We can adopt this output sensitive algorithm to compute modular fence designs in similar time bounds. In the first part of the paper, we assume zero friction between the part and the fences. Later, we incorporate Coulomb friction (see e.g. <ref> [15] </ref>) between the part and the fence. The friction between the part and the belt is assumed to be uniform. We assume quasi-static motion, i.e. the belt speed is low enough so the parts do not bounce when they hit a fence. <p> For a polygonal part, the radius function is a continuous piecewise sinusoidal function, and can be computed in O (n) time by checking each vertex <ref> [15] </ref>. The final orientation of a part that is being pushed can be determined from its radius function. In most cases, parts will start to rotate when pushed. <p> In most cases, parts will start to rotate when pushed. If pushing in a certain direction does not cause the part to rotate, then the contact normal at one of its points of contact with the jaw passes through the center-of-mass <ref> [15] </ref>. We refer to the corresponding direction of the contact normal as an equilibrium push direction or orientation. If pushing does change the orientation, then this rotation changes the orientation of the pushing device relative to the part. <p> In this section, we shall incorporate friction into the model. 5.1 The model There are several ways to look at friction. We will use the simplified model of Coulomb friction (see e.g. <ref> [15] </ref>). Imagine a part which slides along a fence on a stable edge. The frictional force is a force opposite to the motion of the part. <p> If we negate the belt force, we check whether or not this force is in the cone. In the former case, the part remains stable, in the latter, the part slides. In his thesis, Mason <ref> [15] </ref> describes an easy test to predict the rotation of the part which has a vertex in contact with the fence. He gives an analysis which boils down to a very simple geometric check.
Reference: [16] <author> B.K. Natarajan. </author> <title> An algorithmic approach to the automated design of parts orienters. </title> <booktitle> In IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 132-142, </pages> <year> 1986. </year>
Reference-contexts: the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray <ref> [12, 16] </ref>, and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. <p> An important property of the push function is monotonicity, or the order preserving property <ref> [16] </ref>. A sequence s 1 ; : : : ; s n of elements of a set S is ordered if s 1 ; : : : ; s n are encountered in order when the generating cycle of S is traced once, starting from s 1 .
Reference: [17] <author> M.A. </author> <title> Peshkin and A.C. Sanderson. The motion of a pushed sliding workpiece. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(6) </volume> <pages> 569-598, </pages> <year> 1988. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] <p> single pushing jaw <ref> [2, 14, 15, 17] </ref>, a conveyor belt with a sequence of (stationary) fences placed along its sides [7, 18, 21], a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. The problem of sensorless orientation by a pushing jaw is to find a sequence of push directions that will move the part from an arbitrary initial orientation into a single known final orientation. <p> Since any push action acts on the convex hull of the part rather than on the part itself, we assume without loss of generality that the part under consideration is convex. The fences are assumed to be long enough so that the part rotates into a stable pose <ref> [17] </ref>. Furthermore, we assume that the the parts do not have meta-stable edges, i.e. the perpendicular projection of the center-of-mass on an edge does not intersect a vertex of 3 the edge. This paper is organized as follows.
Reference: [18] <author> M.A. </author> <title> Peshkin and A.C. Sanderson. Planning robotic manipulation strategies for work-pieces that slide. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(5) </volume> <pages> 524-531, </pages> <year> 1988. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides <ref> [7, 18, 21] </ref>, a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. <p> The problem of fence design is to determine a sequence of fence orientations (see Figure 1) such that the fences with these orientations align the part as it moves down a conveyor belt and slides along these fences <ref> [7, 18, 21] </ref>. The motion of the belt effectively turns each slide into a push action by the fence in the direction normal to the fence.
Reference: [19] <author> A. Rao and K. Goldberg. </author> <title> Manipulating algebraic parts in the plane. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 11, </volume> <year> 1995. </year>
Reference-contexts: An other open problem is the bound on the length of the fence design. Only an O (n 2 ) upper bound is known at the moment. It is unknown whether this is indeed required ar whether linear length designs always exist. Also, looking into orienting algebraic parts <ref> [19] </ref> using fences is of interest. Finally, we want to mention the problems of dealing with uncertainty (see [8] for a first treatment) and generalization of fence design to 3D. Acknowledgements This research was supported in part by NATO Collaborative Research Grant CRG 951224.
Reference: [20] <author> A.F. van der Stappen, K. Goldberg, and M. Overmars. </author> <title> Geometric eccentricity and the complexity of manipulation plans. </title> <type> Technical report, </type> <institution> UU-CS-1996-49, Dept. of Computer Science, Utrecht University, </institution> <year> 1996. </year> <note> To appear in Algorithmica. </note>
Reference-contexts: In <ref> [4, 20] </ref> we showed that, for a large class of parts, the fence designs have linear length, and for most long and thin parts, the fence design has constant length. This suggests that an output sensitive algorithm, whose running time depends on the length, is to be preferred.
Reference: [21] <author> J. Wiegley, K. Goldberg, M. Peshkin, and M. Brokowski. </author> <title> A complete algorithm for designing passive fences to orient parts. </title> <journal> Assembly Automation, </journal> <volume> 17(2) </volume> <pages> 129-136, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: Among the sensorless part feeders considered in literature are the parallel-jaw gripper [9, 13], a single pushing jaw [2, 14, 15, 17], a conveyor belt with a sequence of (stationary) fences placed along its sides <ref> [7, 18, 21] </ref>, a conveyor belt with a single rotational fence (1JOC) [1], a tilting tray [12, 16], and vibratory plates and programmable vector fields [5, 6]. The pushing jaw [2, 14, 15, 17] orients a part by an alternating sequence of pushes and jaw reorientations. <p> The problem of fence design is to determine a sequence of fence orientations (see Figure 1) such that the fences with these orientations align the part as it moves down a conveyor belt and slides along these fences <ref> [7, 18, 21] </ref>. The motion of the belt effectively turns each slide into a push action by the fence in the direction normal to the fence. <p> Fence design can be regarded as finding a constrained sequence of push directions (see Subsection 2.2 for the actual constraints). The additional constraints make fence design considerably more difficult than sensorless orientation by a pushing jaw. Wiegley et al. <ref> [21] </ref> conjectured that a fence design exists for any polygonal part. They gave an exponential algorithm for computing the shortest sequence of fences for a given part. In [4], we proved the conjecture that a fence design exists for any polygonal part. <p> Application of the same analysis to fences f i1 and f i and reorientation ff i leads to the following definition of a valid fence design <ref> [21] </ref>. <p> We simply pick the midpoint of every such interval as the reorientation, and get a push plan which is a fence design. We can easily compute the fence angles from the reorientation angles on the path, using the properties of the fence framework <ref> [21] </ref>. 11 for a narrower belt. Every line segment emanating from the part represents a possible orientation of the part. 3.2 Implementation We implemented the above algorithm to test its behavior in practice.
References-found: 21

