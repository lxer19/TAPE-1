URL: http://www.csc.ncsu.edu/eos/users/r/rouskas/WWW/Courses/CSC573/Restricted/Projects/red/red.ps
Refering-URL: http://www.csc.ncsu.edu/eos/users/r/rouskas/WWW/Courses/CSC573/project_list.html
Root-URL: http://www.csc.ncsu.edu
Email: E-mail: fhwang3, xliu4g@eos.ncsu.edu  
Title: Refining Random Early Detection Algorithm  
Author: Haining Wang and Xuezhou Liu 
Address: Raleigh, NC 27695  
Affiliation: Department of Computer Science North Carolina State University  
Abstract: Random Early Detection, or RED was proposed as an active queue management algorithm for routers. It randomly drops arriving packets before the buffer of routers is full. The dropping probability increases as the estimated average queue length grows. In this paper, the design baseline of RED that allows the transient congestion is challenged. We show that the transient congestion is harmful. To prevent the buffer overflow at gateways, the parameters of RED are modified so that gateways can detect the transient congestion in time and take actions to quench it. In accordance with the modifications of the parameters of RED, we also refine the framework of the RED algorithm. Simulation is used to evaluate the performance of the refined RED in comparison to the original one. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Brakmo, S. O'Malley, and L. Peterson, </author> <title> "TCP Vegas: New Technique for Congestion Detection and Avoidance", </title> <booktitle> Proceedings of ACM SIGCOMM'94, </booktitle> <address> London, UK, </address> <pages> pp. 24-35, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: The current Implementations of TCP congestion control include Jacobson's congestion control algorithm [6] and Fast Retransmit and Fast Recovery algorithms [7, 8, 15]. In the past years, the congestion control scheme of TCP has evolved significantly. Many new TCP congestion control mechanism, such as TCP Vegas <ref> [1] </ref>, TCP SACK and FACK etc [10, 11], were proposed to improve the performance of end-to-end TCP congestion control. The Drop-Tail gateway used in the current Internet discards arriving packets when the buffer of the gateway is full.
Reference: [2] <author> S. Floyd, and V. Jacobson, </author> <title> "On Traffic Phase Effects in Packet-Switched Gateways", Internetworking: </title> <journal> Research and Experience, V.3 N.3, </journal> <pages> pp. 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: The Drop-Tail gateway used in the current Internet discards arriving packets when the buffer of the gateway is full. It is well known that a Drop Tail gateway often arbitrarily distributes packet losses among TCP connections and also tends to penalize bursty connections <ref> [2] </ref>. With the drop-tail discarding algorithm and FIFO service discipline being used at each router, the effects of global synchronization has been found in one-way TCP traffic and two-way TCP traffic [14, 18], resulting in reduced aggregate throughput.
Reference: [3] <author> S. Floyd, and V. Jacobson, </author> <title> "Random Early Detection gateways for Congestion Avoidance", </title> <journal> IEEE/ACM Transactions on Networking, V.1 N.4, </journal> <pages> pp. 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The Early Random Drop gateway drops each arriving packet with a fixed drop probability if the queue length exceeds a drop level. Based on Early Random Drop algorithm, Random Early Detection algorithm was proposed by Floyd and Jacobson <ref> [3] </ref>. RED gateways detects incipient congestion by computing the average queue size. RED gateways keep the average queue size low, while allowing fluctuations in the actual queue size to accommodate bursty traffic and transient congestion. A RED gateway also decides which connections to notify of congestion at the gateway.
Reference: [4] <author> S. Floyd, </author> <title> TCP and Successive Fast Retransmits, </title> <month> February </month> <year> 1995. </year> <note> Obtain via ftp://ftp.ee.lbl.gov/papers/fastretrans.ps. </note>
Reference: [5] <author> E. Hashem, </author> <title> "Analysis of Random Drop for Gateway Congestion Control", </title> <publisher> MIT-LCS-TR-465. </publisher>
Reference-contexts: To resolve the problems of the Drop-Tail gateways, Early Random Drop Gateways was proposed <ref> [5] </ref>. The Early Random Drop gateway drops each arriving packet with a fixed drop probability if the queue length exceeds a drop level. Based on Early Random Drop algorithm, Random Early Detection algorithm was proposed by Floyd and Jacobson [3].
Reference: [6] <author> V. Jacobson, </author> <title> "Congestion Avoidance and Control", </title> <booktitle> Proceedings of ACM SIGCOMM'88, </booktitle> <address> Stanford, CA, </address> <pages> pp. 314-329, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: 1 Introduction With a rapid growth of packet-switched networks and the widespread usage of TCP/IP protocol suite, TCP congestion control becomes a key factor that influences the performance of packet-switched networks, like the Internet [16]. The current Implementations of TCP congestion control include Jacobson's congestion control algorithm <ref> [6] </ref> and Fast Retransmit and Fast Recovery algorithms [7, 8, 15]. In the past years, the congestion control scheme of TCP has evolved significantly. <p> The following analysis of the dynamics of the TCP window size verifies this. 3 3.1 Analysis of the Dynamics of the TCP Window Size According to the TCP congestion control schemes initiated by Jacobson <ref> [6] </ref>, the TCP window size wnd is set to the minimum of the congestion window size cwnd and the receiver advertised window size cwnd.
Reference: [7] <author> V. Jacobson, </author> <title> Fast Retransmit. Message to the end2end-interest mailing list, </title> <month> April </month> <year> 1990. </year> <institution> 9 packets skip-1 skip-2 drops packet time 0.0000 0.4000 0.8000 1.2000 1.6000 2.0000 2.4000 2.8000 0.0000 2.0000 4.0000 6.0000 8.0000 10.0000 queue ave_queue queue time 0.0000 2.0000 4.0000 6.0000 8.0000 10.0000 12.0000 14.0000 16.0000 18.0000 (a) (b) packets skip-1 skip-2 drops packet time 0.0000 0.4000 0.8000 1.2000 1.6000 2.0000 2.4000 2.8000 0.0000 2.0000 4.0000 6.0000 8.0000 10.0000 queue ave_queue queue time 0.0000 4.0000 8.0000 12.0000 16.0000 20.0000 24.0000 0.0000 2.0000 4.0000 6.0000 8.0000 10.0000 Probe; (d) Average Queue Size with Coarse-grained Probe; 10 </institution>
Reference-contexts: The current Implementations of TCP congestion control include Jacobson's congestion control algorithm [6] and Fast Retransmit and Fast Recovery algorithms <ref> [7, 8, 15] </ref>. In the past years, the congestion control scheme of TCP has evolved significantly. Many new TCP congestion control mechanism, such as TCP Vegas [1], TCP SACK and FACK etc [10, 11], were proposed to improve the performance of end-to-end TCP congestion control.
Reference: [8] <author> V. Jacobson, </author> <title> "Berkeley TCP evolution from 4.3-tahoe to 4.3-reno", </title> <booktitle> Proceedings of the Eighteenth Internet Engineering Task Force, </booktitle> <pages> pp. 365, </pages> <year> 1990 </year>
Reference-contexts: The current Implementations of TCP congestion control include Jacobson's congestion control algorithm [6] and Fast Retransmit and Fast Recovery algorithms <ref> [7, 8, 15] </ref>. In the past years, the congestion control scheme of TCP has evolved significantly. Many new TCP congestion control mechanism, such as TCP Vegas [1], TCP SACK and FACK etc [10, 11], were proposed to improve the performance of end-to-end TCP congestion control.
Reference: [9] <author> D. Lin and R. Morris, </author> <title> "Dynamics of Random Early Detection" Proceedings of ACM SIGCOMM'97, </title> <booktitle> Cannes, France, </booktitle> <pages> pp. 127-137, </pages> <month> September </month> <year> 1997. </year>
Reference-contexts: The probability of marking a packet from a particular connection is roughly proportional to that connection's share of the bandwidth through the gateway. Lin and Morris <ref> [9] </ref> found that RED allows unfair bandwidth sharing when a mixture of different traffics shares a link. Their key observation is that dropping packets from flows in proportion to their bandwidths does not ensure the fairness in sharing bandwidth.
Reference: [10] <author> M. Mathis and J. Mahdavi, "Forward Acknowledgment (FACK): </author> <title> Refining TCP Congestion Control", </title> <booktitle> Proceedings of ACM SIGCOMM'96, </booktitle> <address> Stanford, CA, </address> <pages> pp. 281-291, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: In the past years, the congestion control scheme of TCP has evolved significantly. Many new TCP congestion control mechanism, such as TCP Vegas [1], TCP SACK and FACK etc <ref> [10, 11] </ref>, were proposed to improve the performance of end-to-end TCP congestion control. The Drop-Tail gateway used in the current Internet discards arriving packets when the buffer of the gateway is full.
Reference: [11] <author> M. Mathis, J. Mahdavi, S. Floyd, and A. Romanow, </author> <title> "TCP Selective Acknowledgment Option", Internet Draft, </title> <booktitle> work in progress, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: In the past years, the congestion control scheme of TCP has evolved significantly. Many new TCP congestion control mechanism, such as TCP Vegas [1], TCP SACK and FACK etc <ref> [10, 11] </ref>, were proposed to improve the performance of end-to-end TCP congestion control. The Drop-Tail gateway used in the current Internet discards arriving packets when the buffer of the gateway is full.
Reference: [12] <author> S. McCanne and S. Floyd, </author> <title> ns-LBNL Network Simulator. Obtain via: </title> <address> http://www-nrg.ee.lbl.gov/ns/. </address>
Reference: [13] <author> J. Postel, </author> <title> Transmission control protocol, Request for Comments 793, </title> <institution> DDN Network Information Center, SRI International, </institution> <month> September </month> <year> 1981. </year>
Reference: [14] <author> S. Shenker, L. Zhang, and D. D. Clark, </author> <title> "Some Observations on the Dynamics of a Congestion Control Algorithm", </title> <journal> ACM Computer Communication Review, </journal> <volume> Vol. 20, No. 4, </volume> <pages> pp. 30-39, </pages> <month> October </month> <year> 1990 </year>
Reference-contexts: With the drop-tail discarding algorithm and FIFO service discipline being used at each router, the effects of global synchronization has been found in one-way TCP traffic and two-way TCP traffic <ref> [14, 18] </ref>, resulting in reduced aggregate throughput. To resolve the problems of the Drop-Tail gateways, Early Random Drop Gateways was proposed [5]. The Early Random Drop gateway drops each arriving packet with a fixed drop probability if the queue length exceeds a drop level.
Reference: [15] <author> W. R. </author> <title> Stevens, </title> <journal> TCP/IP Illustrated, </journal> <volume> volume 1. </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1994. </year>
Reference-contexts: The current Implementations of TCP congestion control include Jacobson's congestion control algorithm [6] and Fast Retransmit and Fast Recovery algorithms <ref> [7, 8, 15] </ref>. In the past years, the congestion control scheme of TCP has evolved significantly. Many new TCP congestion control mechanism, such as TCP Vegas [1], TCP SACK and FACK etc [10, 11], were proposed to improve the performance of end-to-end TCP congestion control.
Reference: [16] <author> K. Thompson, G. J. Miller, and R. Wilder, </author> <title> "Wide-Area Internet Traffic Patterns and Characteristics", </title> <journal> IEEE Network, </journal> <volume> Vol. 11, No. 6, </volume> <pages> pp. 10-23, </pages> <month> November/December </month> <year> 1997. </year>
Reference-contexts: 1 Introduction With a rapid growth of packet-switched networks and the widespread usage of TCP/IP protocol suite, TCP congestion control becomes a key factor that influences the performance of packet-switched networks, like the Internet <ref> [16] </ref>. The current Implementations of TCP congestion control include Jacobson's congestion control algorithm [6] and Fast Retransmit and Fast Recovery algorithms [7, 8, 15]. In the past years, the congestion control scheme of TCP has evolved significantly.
Reference: [17] <author> H. Wang, </author> <title> "A Simple Approach to Refine Slow-start of TCP Congestion Control", </title> <note> Submitted for Publication, </note> <month> January, </month> <year> 1998. </year>
Reference-contexts: One way to solve this problem is to increase w q , but if w q is set too high the RED gateway will react too quickly to tiny bursty, which results in underutilization. A better solution is to replace Slow-start with Smooth-start <ref> [17] </ref> at TCP senders. 5 Tame the Slow-start The fundamental problem in the Slow-start algorithm is: when the congestion window size closely approaches to the equilibrium of the connection, the exponential growth of the congestion window size is too aggressive, leading to multiple losses of packets from a window of data. <p> The Smooth-start <ref> [17] </ref> is a new variant of Slow-start, which is inherently less aggressive than Slow-start, getting to the equilibrium of a TCP connection in a more graceful way. <p> Figure 7 shows the simulation results when Fine-4 probe strategy of Smooth-start and Coarse-4 probe strategy of Smooth-start are taken. The interesting thing is that the fine-grained probe strategy has a better performance than coarse-grained probe strategy in RED gateways as we expected. However, in <ref> [17] </ref> a surprised simulation result appears in that the fine-grained probe strategy is worse than that of the coarse-grained probe strategy.
Reference: [18] <author> L. Zhang, S. Shenker, D. D. Clark, </author> <title> "Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two Way Traffic", </title> <booktitle> Proceedings of ACM SIGCOMM'91, </booktitle> <address> Zurich, Switzerland, </address> <pages> pp. 133-148, </pages> <month> September </month> <year> 1991. </year> <month> 11 </month>
Reference-contexts: With the drop-tail discarding algorithm and FIFO service discipline being used at each router, the effects of global synchronization has been found in one-way TCP traffic and two-way TCP traffic <ref> [14, 18] </ref>, resulting in reduced aggregate throughput. To resolve the problems of the Drop-Tail gateways, Early Random Drop Gateways was proposed [5]. The Early Random Drop gateway drops each arriving packet with a fixed drop probability if the queue length exceeds a drop level.
References-found: 18

