URL: ftp://ftp.cs.unc.edu/pub/publications/techreports/98-034.ps.Z
Refering-URL: ftp://ftp.cs.unc.edu/pub/publications/techreports/FILE.html
Root-URL: http://www.cs.unc.edu
Email: fculver,keyser,dmg@cs.unc.edu  
Title: Accurate Computation of the Medial Axis of a Polyhedron  
Author: Tim Culver John Keyser Dinesh Manocha 
Address: Chapel Hill, NC 27599-3175  
Affiliation: Department of Computer Science University of North Carolina  
Abstract: We present an accurate and efficient algorithm to compute the internal Voronoi region and medial axis of a 3-D polyhedron. It uses exact arithmetic and representations for accurate computation of the medial axis. The sheets, seams, and junctions of the medial axis are represented as trimmed quadric surfaces, algebraic space curves, and algebraic numbers, respectively. The algorithm works by recursively finding neighboring junctions along the axis. It utilizes discretization of space and linear programming to speed up the search step. We also present a new algorithm for analysis of the topology of an algebraic plane curve, which is the core of our medial axis algorithm. To speed up the computation, we have designed specialized algorithms for fast computation on implicit geometric structures. These include lazy evaluation based on multivariate Sturm sequences, fast resultant computation, curve topology analysis, and floating-point filters. The algorithm has been implemented and we highlight its performance on a number of examples. 
Abstract-found: 1
Intro-found: 1
Reference: [AAS97] <author> P. Agarwal, B. Aronov, and M. Sharir. </author> <title> Computing envelopes in four dimensions with applications. </title> <journal> SIAM J. Comput., </journal> <volume> 26 </volume> <pages> 1714-1732, </pages> <year> 1997. </year>
Reference-contexts: The algorithm's worst-case behavior is necessarily at least a factor of n larger than optimal O (m) time. A tight upper bound on m, the size of the medial axis, is currently not known. It is known that m = O (n 3+* ) for any * &gt; 0 <ref> [AAS97] </ref>, but we know of no example where m is more than O (n 2 ). Milenkovic [Mil93] proposed the 3-D tracing algorithm, and discusses its complexity. Chiang [Chi92] presented an algorithm for computing the medial axis of a planar region bounded by piecewise C 2 curves.
Reference: [AB88] <author> S.S. Abhyankar and C. Bajaj. </author> <title> Automatic parametrizations of rational curves and surfaces iii: Algebraic plane curves. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 5 </volume> <pages> 309-321, </pages> <year> 1988. </year> <journal> 20 . . Polyhedron Sheets Seams Junctions Ex. </journal> <volume> 1 (5 faces) 15 13 4 Ex. 2 (16 faces) 38 68 44 21 22 </volume>
Reference: [AF88] <author> S. Arnborg and H. Feng. </author> <title> Algebraic decomposition of regular curves. </title> <journal> J. Symbolic Comput., </journal> <volume> 15(1) </volume> <pages> 131-140, </pages> <year> 1988. </year>
Reference-contexts: The algorithm divides an algebraic plane curve into segments which are monotonic in both s and t. Such a division allows points on the curve to be easily ordered along it. Although general algebraic decomposition algorithms (e.g. <ref> [AF88] </ref>) can be used on this problem (after being modified to handle the "root-in-a-box" format), we have developed our own algorithm which is more specialized to ordering points along the seam curve. We will present only a high-level description of the algorithm here.
Reference: [BEPP97] <author> H. Bronnimann, I. Emiris, V. Pan, and S. Pion. </author> <title> Computing exact geometric predicates using modular arithmetic with single precision. </title> <booktitle> In Proc. 13th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 174-182, </pages> <year> 1997. </year>
Reference: [Blu67] <author> H. Blum. </author> <title> A transformation for extracting new descriptors of shape. </title> <editor> In W. Wathen-Dunn, editor, </editor> <booktitle> Models for the Perception of Speech and Visual Form, </booktitle> <pages> pages 362-380. </pages> <publisher> MIT Press, </publisher> <year> 1967. </year>
Reference-contexts: It is a skeletal representation that can be formulated as the locus of the center of a maximal sphere as it rolls around the object interior. The medial axis of an object was first proposed by Blum <ref> [Blu67] </ref> for biological shape measurement. It has also been used for a number of other applications, including path planning, finite element mesh generation, automated injection molding simulation and feature recognition.
Reference: [BMP94] <author> M. Benouamer, D. Michelucci, and B. Peroche. </author> <title> Error-free boundary evaluation based on a lazy rational arithmetic: a detailed implementation. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 26(6), </volume> <year> 1994. </year>
Reference-contexts: One solution to the precision problem is to use exact arithmetic. For example, many algorithms based on exact arithmetic have been proposed for reliable computation for boundary evaluation of boolean combinations of polyhedral models <ref> [SI89, For95, BMP94, Hof89] </ref>. However, medial axis computation involves low-degree nonlinear algebraic curves and surfaces. For such problems, it is difficult to compute tight bounds on the numerical error generated due to floating-point arithmetic. As a result, it is hard to design reliable algorithms using tolerance-based approaches.
Reference: [Bra92] <author> J. W. Brandt. </author> <title> Describing a solid with the three-dimensional skeleton. </title> <editor> In J. D. Warren, editor, </editor> <booktitle> Proceedings of the International Society for Optical Engineering Volume 1830, Curves and Surfaces in Computer Vision and Graphics III, </booktitle> <pages> pages 258-269. </pages> <address> SPIE, Boston, </address> <year> 1992. </year>
Reference-contexts: Medial axis to B-rep Conversion: A number of algorithms have been presented in the literature to convert solids from a representation based on the medial axis to a boundary representation <ref> [Wol92, Chi92, Bra92, Ver94] </ref>. 2.2 Exact arithmetic in geometric computation Exact arithmetic has proven useful in the linear domain. Exact arithmetic means that each number is determined and stored to whatever precision is necessary. By allowing arbitrary bit-lengths any integer or rational number can be computed and stored exactly.
Reference: [BT71] <author> J.S. Brown and J.F. Traub. </author> <title> On euclid's algorithm and the theory of sub-resultant. </title> <journal> Journal of ACM, </journal> <volume> 18(4) </volume> <pages> 505-514, </pages> <year> 1971. </year>
Reference-contexts: But the subresultant polynomial remainder sequence algorithm <ref> [BT71] </ref> avoids the exponential coefficient growth in the polynomial GCD, and tends to be more efficient, especially for high-degree polynomials. The subresul-tant algorithm computes the coefficients of the sequence's polynomials as determinants of matrices.
Reference: [BY97] <author> H. Bronnimann and M. Yvinec. </author> <title> Efficient exact evaluation of signs of determinants. </title> <booktitle> In Proc. 13th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 166-173, </pages> <year> 1997. </year>
Reference-contexts: For root-counting, we need only the signs of the constant terms of the polynomials in the sequence. The problem is thus reduced to computing the signs of determinants of matrices with rational entries, or equivalently, integer entries. The determinant-sign problem has been well-studied in computational geometry ([BEPP97], <ref> [BY97] </ref>, [Cla92]), but most approaches are efficient only for small matrices (order less than 10 and entries of fewer than 53 bits). We find the fastest general-purpose algorithm to be Gaussian elimination over a series of finite fields, followed by reconstruction in accordance with the Chinese remainder theorem.
Reference: [Can88] <author> J.F. Canny. </author> <title> The Complexity of Robot Motion Planning. ACM Doctoral Dissertation Award. </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: This is because computations on non-linear objects often require algebraic numbers, which cannot be explicitly represented by a finite number of bits. Techniques using bit-length estimates may, in the worst case, require bit-lengths which are exponential with respect to the degree of the algebraic functions <ref> [Can88, Yu92] </ref>. One approach to this problem is to use field extensions to allow representations of each new number as it is computed. Many computer algebra systems and symbolic libraries provide support for field extensions. However, computing with such numbers can be quite expensive. <p> Check whether the four bisector surfaces involved actually meet at some point, using a Dixon resultant [Dix10]. 3. If so, either further refine the root to the precision recommended by Canny's gap theorem <ref> [Can88] </ref>, or check for a root of the system ff 1 + f 2 + f 3 + f 4 ; f 1 ; f 2 g inside the overlap of the boxes. The first two steps may be regarded as filters for avoiding step 3 where possible.
Reference: [Chi92] <author> C.-S. Chiang. </author> <title> The Euclidean distance transform. </title> <type> Ph.D. thesis, </type> <institution> Dept. Com-put. Sci., Purdue Univ., West Lafayette, </institution> <note> IN, August 1992. Report CSD-TR 92-050. </note>
Reference-contexts: However, it is hard to accurately and efficiently compute the medial axis based on such a discrete representation. In the last few years, a number of authors have proposed computing the medial axis based on a tracing approach <ref> [Mil93, Chi92, SPB95] </ref>. Starting with a known junction (for instance, a vertex of the polyhedron), they trace along its incident seams and discover the adjacent junction points. <p> In this paper, we present an accurate and efficient algorithm to compute the internal Voronoi region and medial axis of a 3-D polyhedron. Our overall approach is similar to the 3-D tracing algorithm proposed by <ref> [Mil93, Chi92, SPB95] </ref>. However, we use exact arithmetic and representation for accurate computation of the medial axis. The algorithm recursively computes the vertices and edges of the medial axis based on seam-tracing. <p> It is known that m = O (n 3+* ) for any * &gt; 0 [AAS97], but we know of no example where m is more than O (n 2 ). Milenkovic [Mil93] proposed the 3-D tracing algorithm, and discusses its complexity. Chiang <ref> [Chi92] </ref> presented an algorithm for computing the medial axis of a planar region bounded by piecewise C 2 curves. It involves tracing branches using sets of polynomial equations. Sherbrooke, Patrikalakis and Brisson [SPB95] have presented a variation on the algorithm. <p> Medial axis to B-rep Conversion: A number of algorithms have been presented in the literature to convert solids from a representation based on the medial axis to a boundary representation <ref> [Wol92, Chi92, Bra92, Ver94] </ref>. 2.2 Exact arithmetic in geometric computation Exact arithmetic has proven useful in the linear domain. Exact arithmetic means that each number is determined and stored to whatever precision is necessary. By allowing arbitrary bit-lengths any integer or rational number can be computed and stored exactly.
Reference: [Cla92] <author> K. L. Clarkson. </author> <title> Safe and effective determinant evaluation. </title> <booktitle> In Proc. 33rd Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 387-395, </pages> <year> 1992. </year>
Reference-contexts: For root-counting, we need only the signs of the constant terms of the polynomials in the sequence. The problem is thus reduced to computing the signs of determinants of matrices with rational entries, or equivalently, integer entries. The determinant-sign problem has been well-studied in computational geometry ([BEPP97], [BY97], <ref> [Cla92] </ref>), but most approaches are efficient only for small matrices (order less than 10 and entries of fewer than 53 bits). We find the fastest general-purpose algorithm to be Gaussian elimination over a series of finite fields, followed by reconstruction in accordance with the Chinese remainder theorem.
Reference: [Dem89] <author> J. Demmel. </author> <title> LAPACK: A portable linear algebra library for supercomputers. </title> <booktitle> In Proceedings of the 1989 IEEE Control Systems Society Workshop on Computer-Aided Control System Design, </booktitle> <address> Tampa, FL, </address> <month> Dec </month> <year> 1989. </year> <note> IEEE. </note>
Reference-contexts: We use the implementation in the software package LiDIA [Gro97]. The finite-field algorithm is protected by a floating-point filter, based on an idea by James Demmel and implemented using the LAPACK library <ref> [Dem89] </ref>. The filter computes the singular-value decomposition of the matrix in double-precision floating-point, extracts the determinant sign from the decomposition, and examines the singular values to decide whether the sign is dependable. <p> The curve topology algorithm is also fully implemented. Our implementation is based on the data structures for exact arithmetic in Lidia [Gro97] and also takes advantages of routines from LAPACK <ref> [Dem89] </ref>. The current version of the geometric kernel consists of about 20,000 lines of C++ code. The high-level, non-time-critical part of the system is in prototype stage, and is partially implemented in about 3,000 lines of Mathematica code. The Mathematica code has not been interfaced with the C++ implementation.
Reference: [DH90] <author> D. Dutta and C. M. Hoffmann. </author> <title> A geometric investigation of the skeleton of CSG objects. </title> <booktitle> In Proc. ASME Conf. Design Automation, </booktitle> <year> 1990. </year>
Reference-contexts: Reddy and Turkiyyah [RT95] also present a version of the tracing algorithm, and compare it to an algorithm based on the Voronoi diagram of a set of points on the boundary. Medial Axis of CSG Objects: Dutta and Hoffmann <ref> [DH90, DH93] </ref> and Hoff-mann [Hof94] have presented algorithms for computing the medial axis of CSG objects. Their algorithms compute the points of closest approach between pairs of boundary elements.
Reference: [DH93] <author> D. Dutta and C. M. Hoffmann. </author> <title> On the skeleton of simple CSG objects. </title> <journal> Journal of Mechanical Design, ASME Transactions, </journal> <volume> 115(1) </volume> <pages> 87-94, </pages> <year> 1993. </year>
Reference-contexts: Reddy and Turkiyyah [RT95] also present a version of the tracing algorithm, and compare it to an algorithm based on the Voronoi diagram of a set of points on the boundary. Medial Axis of CSG Objects: Dutta and Hoffmann <ref> [DH90, DH93] </ref> and Hoff-mann [Hof94] have presented algorithms for computing the medial axis of CSG objects. Their algorithms compute the points of closest approach between pairs of boundary elements.
Reference: [Dix10] <author> A. L. Dixon. </author> <title> The eliminant of the equations of four quadric surfaces. </title> <journal> Proc. London Math. Soc., </journal> <pages> pages 340-352, </pages> <year> 1910. </year>
Reference-contexts: Check whether the four bisector surfaces involved actually meet at some point, using a Dixon resultant <ref> [Dix10] </ref>. 3. If so, either further refine the root to the precision recommended by Canny's gap theorem [Can88], or check for a root of the system ff 1 + f 2 + f 3 + f 4 ; f 1 ; f 2 g inside the overlap of the boxes.
Reference: [EK96] <author> G. Elber and M-S. Kim. </author> <title> The bisector surface of freeform rational space curves. </title> <type> Technical Report CIS Report #9619, </type> <institution> Technion-Israel Institute of Technology, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: When s and t are rational, the point on the bisector is rational. This plane-intersection technique, presented for rational curves in space in <ref> [EK96] </ref>, works for other bisector types as well. It cannot work, however, for the generic line-plane and plane-plane bisectors, since they are largely devoid of rational points. A seam curve lies on three different sheets; it is represented as the intersection of any two.
Reference: [For87] <author> S. J. Fortune. </author> <title> A sweepline algorithm for Voronoi diagrams. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 153-174, </pages> <year> 1987. </year>
Reference-contexts: A variant of that algo 3 rithm is given in [Hel97]. Fortune has presented a sweepline algorithm <ref> [For87] </ref>. No algorithms are known in the literature that extend these approaches to 3-D. Imai has presented an incremental algorithm for 2-D polygons [Ima96]. Incremental 3-D Algorithm: Milenkovic has presented an an incremental algorithm for computing the voronoi region of a polyhedron.
Reference: [For95] <author> S. Fortune. </author> <title> Polyhedral modeling with exact arithmetic. </title> <booktitle> Proceedings of ACM Solid Modeling, </booktitle> <pages> pages 225-234, </pages> <year> 1995. </year> <month> 23 </month>
Reference-contexts: One solution to the precision problem is to use exact arithmetic. For example, many algorithms based on exact arithmetic have been proposed for reliable computation for boundary evaluation of boolean combinations of polyhedral models <ref> [SI89, For95, BMP94, Hof89] </ref>. However, medial axis computation involves low-degree nonlinear algebraic curves and surfaces. For such problems, it is difficult to compute tight bounds on the numerical error generated due to floating-point arithmetic. As a result, it is hard to design reliable algorithms using tolerance-based approaches. <p> By allowing arbitrary bit-lengths any integer or rational number can be computed and stored exactly. For linear objects, rational numbers are usually all that is required to perform a geometric operation. In the solid modeling community, exact arithmetic has been used successfully for applications involving linear objects (e.g. <ref> [For95] </ref>). Some of 4 the recently developed geometric libraries like LEDA and CGAL also provide support for exact arithmetic. In the nonlinear domain, however, exact arithmetic becomes more difficult to apply effectively.
Reference: [Gro97] <author> LiDIA Group. </author> <title> A library for computational number theory. </title> <type> Technical report, </type> <institution> TH Darmstadt, Fachbereich Informatik, Institut fur Theoretische Informatik, </institution> <year> 1997. </year>
Reference-contexts: We find the fastest general-purpose algorithm to be Gaussian elimination over a series of finite fields, followed by reconstruction in accordance with the Chinese remainder theorem. We use the implementation in the software package LiDIA <ref> [Gro97] </ref>. The finite-field algorithm is protected by a floating-point filter, based on an idea by James Demmel and implemented using the LAPACK library [Dem89]. <p> Routines for root isolation in one, two, and three dimensions take advantage of the efficiency techniques described in sections 5.2 and 5.3. The curve topology algorithm is also fully implemented. Our implementation is based on the data structures for exact arithmetic in Lidia <ref> [Gro97] </ref> and also takes advantages of routines from LAPACK [Dem89]. The current version of the geometric kernel consists of about 20,000 lines of C++ code. The high-level, non-time-critical part of the system is in prototype stage, and is partially implemented in about 3,000 lines of Mathematica code.
Reference: [Hel97] <author> Martin Held. </author> <title> Voronoi diagrams and offset curves of curvilinear polygons. </title> <booktitle> Computer-Aided Design, </booktitle> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: Their topology-resolution routine subdivides adaptively. Thus, like the boundary-discretization method, the complexity is difficult to formulate in terms of the input size. 2-D Continuous Algorithms: The classic divide-and-conquer algorithm for the two-dimensional problem has been presented by Lee [Lee82]. A variant of that algo 3 rithm is given in <ref> [Hel97] </ref>. Fortune has presented a sweepline algorithm [For87]. No algorithms are known in the literature that extend these approaches to 3-D. Imai has presented an incremental algorithm for 2-D polygons [Ima96]. Incremental 3-D Algorithm: Milenkovic has presented an an incremental algorithm for computing the voronoi region of a polyhedron.
Reference: [Hof89] <author> C.M. Hoffmann. </author> <title> Geometric and Solid Modeling. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1989. </year>
Reference-contexts: In practice, it is difficult to accurately compute the medial axis of such a polyhedron using finite precision arithmetic. The problem of accurate and robust computation using finite precision arithmetic is a major open problem in solid modeling <ref> [Hof89] </ref>. One solution to the precision problem is to use exact arithmetic. For example, many algorithms based on exact arithmetic have been proposed for reliable computation for boundary evaluation of boolean combinations of polyhedral models [SI89, For95, BMP94, Hof89]. However, medial axis computation involves low-degree nonlinear algebraic curves and surfaces. <p> One solution to the precision problem is to use exact arithmetic. For example, many algorithms based on exact arithmetic have been proposed for reliable computation for boundary evaluation of boolean combinations of polyhedral models <ref> [SI89, For95, BMP94, Hof89] </ref>. However, medial axis computation involves low-degree nonlinear algebraic curves and surfaces. For such problems, it is difficult to compute tight bounds on the numerical error generated due to floating-point arithmetic. As a result, it is hard to design reliable algorithms using tolerance-based approaches.
Reference: [Hof94] <author> C. M. Hoffmann. </author> <title> How to construct the skeleton of csg objects. </title> <editor> In A. Bowyer and J. Davenport, editors, </editor> <booktitle> Proceedings of the Fourth IMA Conference, The Mathematics of Surfaces, </booktitle> <institution> University of Bath, </institution> <address> UK, September 1990. </address> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: It has also been used for a number of other applications, including path planning, finite element mesh generation, automated injection molding simulation and feature recognition. Many researchers have proposed the medial axis transform as an alternate representation to B-rep and CSG in a design and interrogation system <ref> [Wol92, Hof94, SNTM92] </ref>. The medial axis of a solid is the closure of the locus of all points within the solid that have two or more closest points on the boundary of the solid. <p> Reddy and Turkiyyah [RT95] also present a version of the tracing algorithm, and compare it to an algorithm based on the Voronoi diagram of a set of points on the boundary. Medial Axis of CSG Objects: Dutta and Hoffmann [DH90, DH93] and Hoff-mann <ref> [Hof94] </ref> have presented algorithms for computing the medial axis of CSG objects. Their algorithms compute the points of closest approach between pairs of boundary elements. They have also studied exact representation of bisectors arising in medial axis computation of CSG objects bounded by planes, quadrics and torii.
Reference: [Ima96] <author> T. Imai. </author> <title> A topology oriented algorithm for the Voronoi diagram of polygons. </title> <booktitle> In Proc. 8th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 107-112. </pages> <publisher> Carleton University Press, </publisher> <address> Ottawa, Canada, </address> <year> 1996. </year>
Reference-contexts: A variant of that algo 3 rithm is given in [Hel97]. Fortune has presented a sweepline algorithm [For87]. No algorithms are known in the literature that extend these approaches to 3-D. Imai has presented an incremental algorithm for 2-D polygons <ref> [Ima96] </ref>. Incremental 3-D Algorithm: Milenkovic has presented an an incremental algorithm for computing the voronoi region of a polyhedron. It inserts the boundary elements one at a time. At step k, the entire generalized Voronoi diagram of the first k sites has been constructed.
Reference: [Joh87] <author> J.K. Johnstone. </author> <title> The Sorting of points along an algebraic curve. </title> <type> PhD thesis, </type> <institution> Cornell University, Department of Computer Science, </institution> <year> 1987. </year>
Reference: [KKM97] <author> J. Keyser, S. Krishnan, and D. Manocha. </author> <title> Efficient and accurate b-rep generation of low degree sculptured solids using exact arithmetic. </title> <booktitle> In ACM/SIGGRAPH Symposium on Solid Modeling, </booktitle> <pages> pages 42-55, </pages> <year> 1997. </year>
Reference-contexts: In one dimension, this can be accomplished through the use of Sturm sequences. In higher dimensions, multivariate Sturm sequences are used. Milne [Mil92] and Pedersen [Ped91] have proposed methods for such computations. Keyser et. al. apply these methods to the problem of CSG boundary evaluation <ref> [KKM97] </ref>. The authors demonstrate that the geometric operations for this problem can be computed in rational surfaces using only 1-D and 2-D Sturm sequences.
Reference: [Kri97] <author> Shankar Krishnan. </author> <title> Efficient and Accurate Boundary Evaluation Algorithms for Boolean Combinations of Sculptured Solids. </title> <type> PhD thesis, </type> <institution> University of North Carolina-Chapel Hill, </institution> <year> 1997. </year>
Reference-contexts: This is to be contrasted with, for example, the problem of CSG boundary evaluation (see <ref> [Kri97] </ref> for a treatment) in which one may be faced with a great variety 18 of degenerate situations, some of which have no simple resolution. Only two forms of degeneracy pose a problem to the searching algorithm: the degenerate junction and the degenerate seam.
Reference: [Lee82] <author> D. T. Lee. </author> <title> Medial axis transformation of a planar shape. </title> <journal> IEEE Trans. Pattern Anal. Mach. Intell., </journal> <volume> PAMI-4:363-369, </volume> <year> 1982. </year>
Reference-contexts: Their topology-resolution routine subdivides adaptively. Thus, like the boundary-discretization method, the complexity is difficult to formulate in terms of the input size. 2-D Continuous Algorithms: The classic divide-and-conquer algorithm for the two-dimensional problem has been presented by Lee <ref> [Lee82] </ref>. A variant of that algo 3 rithm is given in [Hel97]. Fortune has presented a sweepline algorithm [For87]. No algorithms are known in the literature that extend these approaches to 3-D. Imai has presented an incremental algorithm for 2-D polygons [Ima96].
Reference: [Mac02] <author> F.S. </author> <title> Macaulay. On some formula in elimination. </title> <journal> Proceedings of London Mathematical Society, </journal> <volume> 1(33) </volume> <pages> 3-27, </pages> <month> May </month> <year> 1902. </year>
Reference-contexts: The elimination process is quick, and the time is spent mainly in the sequence evaluation stage. 16 For three-dimensional systems, repeated use of Sylvester resultants can result in extraneous factors. Instead, we use Macaulay's resultant <ref> [Mac02] </ref>, which gives the volume function as the quotient of the determinant of a matrix M and the determinant of a sub-matrix of M .
Reference: [Mil92] <author> P. S. Milne. </author> <title> On the solutions of a set of polynomial equations. </title> <booktitle> In Symbolic and Numerical Computation for Artificial Intelligence, </booktitle> <pages> pages 89-102, </pages> <year> 1992. </year>
Reference-contexts: As long as the interval containing the root can be tightened or cut on demand, many useful queries can be performed exactly using this representation. In one dimension, this can be accomplished through the use of Sturm sequences. In higher dimensions, multivariate Sturm sequences are used. Milne <ref> [Mil92] </ref> and Pedersen [Ped91] have proposed methods for such computations. Keyser et. al. apply these methods to the problem of CSG boundary evaluation [KKM97]. The authors demonstrate that the geometric operations for this problem can be computed in rational surfaces using only 1-D and 2-D Sturm sequences.
Reference: [Mil93] <author> V. Milenkovic. </author> <title> Robust construction of the Voronoi diagram of a polyhedron. </title> <booktitle> In Proc. 5th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 473-478, </pages> <year> 1993. </year>
Reference-contexts: However, it is hard to accurately and efficiently compute the medial axis based on such a discrete representation. In the last few years, a number of authors have proposed computing the medial axis based on a tracing approach <ref> [Mil93, Chi92, SPB95] </ref>. Starting with a known junction (for instance, a vertex of the polyhedron), they trace along its incident seams and discover the adjacent junction points. <p> In this paper, we present an accurate and efficient algorithm to compute the internal Voronoi region and medial axis of a 3-D polyhedron. Our overall approach is similar to the 3-D tracing algorithm proposed by <ref> [Mil93, Chi92, SPB95] </ref>. However, we use exact arithmetic and representation for accurate computation of the medial axis. The algorithm recursively computes the vertices and edges of the medial axis based on seam-tracing. <p> A tight upper bound on m, the size of the medial axis, is currently not known. It is known that m = O (n 3+* ) for any * &gt; 0 [AAS97], but we know of no example where m is more than O (n 2 ). Milenkovic <ref> [Mil93] </ref> proposed the 3-D tracing algorithm, and discusses its complexity. Chiang [Chi92] presented an algorithm for computing the medial axis of a planar region bounded by piecewise C 2 curves. It involves tracing branches using sets of polynomial equations. <p> The medial axis problem requires the use of either 3-D Sturm sequences or field extensions. 3 Algorithm Overview Our approach builds on the tracing algorithm proposed by <ref> [Mil93] </ref>, [SPB95], and [RT95]. However, instead of computing a piecewise linear approximation, we exactly compute all the components of the medial axis. Essentially, the algorithm constructs the adjacency graph of the medial axis while traversing it. Our terminology is similar to that of [SPB95]. <p> We illustrate two methods for reducing the number of boundary elements considered during the searching step. Neither idea reduces the asymptotic worst-case complexity of the algorithm. Both are essentially culling methods, capable of choosing some elements which cannot govern certain junctions. 5.1.1 Discretization of space Milenkovic <ref> [Mil93] </ref> has proposed the following method for speeding up the search step. As a preprocess, subdivide space recursively, yielding an octree of axis-aligned boxes. A simply-computed predicate, applied to each box, yields a (hopefully small) superset of the set of boundary elements whose Voronoi regions intersect the box. <p> Otherwise, the algorithm moves to the second monotonic section of the seam curve in the domain of S and repeats. This strategy requires a heuristic for the termination of the preprocess. Milenkovic <ref> [Mil93] </ref> essentially recommends letting it run (in breadth-first order, finishing a level entirely before subdividing again) until the running time becomes significant compared to the time which will be spent in computing the medial axis. 5.1.2 Linear programming An alternate pre-process for speeding up the search algorithm is based on linear
Reference: [Ped91] <author> P. Pedersen. </author> <title> Multivariate sturm theory. </title> <booktitle> In Proceedings of AAECC, </booktitle> <pages> pages 318-332. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: In one dimension, this can be accomplished through the use of Sturm sequences. In higher dimensions, multivariate Sturm sequences are used. Milne [Mil92] and Pedersen <ref> [Ped91] </ref> have proposed methods for such computations. Keyser et. al. apply these methods to the problem of CSG boundary evaluation [KKM97]. The authors demonstrate that the geometric operations for this problem can be computed in rational surfaces using only 1-D and 2-D Sturm sequences.
Reference: [RT95] <author> Jayachandra Reddy and George Turkiyyah. </author> <title> Computation of 3D skeletons using a generalized Delaunay triangulation technique. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 27(9) </volume> <pages> 677-694, </pages> <year> 1995. </year>
Reference-contexts: Sherbrooke, Patrikalakis and Brisson [SPB95] have presented a variation on the algorithm. They explicitly trace along the seam, creating a piecewise-linear approximation to the curve. They applied their algorithm to generate the medial axis of a number of polyhedra. Reddy and Turkiyyah <ref> [RT95] </ref> also present a version of the tracing algorithm, and compare it to an algorithm based on the Voronoi diagram of a set of points on the boundary. <p> The medial axis problem requires the use of either 3-D Sturm sequences or field extensions. 3 Algorithm Overview Our approach builds on the tracing algorithm proposed by [Mil93], [SPB95], and <ref> [RT95] </ref>. However, instead of computing a piecewise linear approximation, we exactly compute all the components of the medial axis. Essentially, the algorithm constructs the adjacency graph of the medial axis while traversing it. Our terminology is similar to that of [SPB95]. The input polyhedron consists of faces, edges, and vertices.
Reference: [SAR95] <author> D. J. Sheehy, C. G. Armstrong, and D. J. Robinson. </author> <title> Computing the medial surface of a solid from a domain Delaunay triangulation. </title> <booktitle> In Proc. ACM/IEEE Symp. on Solid Modeling and Applications, </booktitle> <month> may </month> <year> 1995. </year>
Reference-contexts: Many polyhedral medial axis algorithms use either a spatial subdivision or some form of discrete representation of the surface. Sheehy et al. <ref> [SAR95] </ref> claim that because of the inherent complexity of a continuous approach, one has to use some form of discretization. However, it is hard to accurately and efficiently compute the medial axis based on such a discrete representation. <p> Sampling points on the surface: Many authors have computed the medial axis using the Voronoi diagram of a set of points located on the polyhedron's surface. Usually the result is an approximation to the medial axis, though Sheehy et. al. <ref> [SAR95] </ref> adaptively refine the sampling until all adjacency relationships are revealed. From this, the exact medial axis may be constructed. However, the overall complexity of this approach is not understood.
Reference: [Sei90] <author> R. Seidel. </author> <title> Linear programming and convex hulls made easy. </title> <booktitle> In Proc. 6th Ann. ACM Conf. on Computational Geometry, </booktitle> <pages> pages 211-215, </pages> <address> Berkeley, California, </address> <year> 1990. </year> <month> 24 </month>
Reference-contexts: Moreover, the constants in the preprocessing time are much smaller than those in the medial axis implementation, since the linear programming step can be programmed in floating-point. Fast randomized algorithms for linear programming are well known <ref> [Sei90] </ref>. 15 5.2 Reducing the number of kernel operations Roots of systems are only computed to the precision necessary. Our representation is exact, but implicit, and the geometric algorithms usually pay attention only to the rational box containing the root.
Reference: [SI89] <author> K. Sugihara and M. Iri. </author> <title> A solid modeling system free from topological inconsistencies. </title> <journal> J. Inf. Proc., Inf. Proc. Soc. of Japan, </journal> <volume> 12(4) </volume> <pages> 380-393, </pages> <year> 1989. </year>
Reference-contexts: One solution to the precision problem is to use exact arithmetic. For example, many algorithms based on exact arithmetic have been proposed for reliable computation for boundary evaluation of boolean combinations of polyhedral models <ref> [SI89, For95, BMP94, Hof89] </ref>. However, medial axis computation involves low-degree nonlinear algebraic curves and surfaces. For such problems, it is difficult to compute tight bounds on the numerical error generated due to floating-point arithmetic. As a result, it is hard to design reliable algorithms using tolerance-based approaches.
Reference: [SNTM92] <author> V. Srinivasan, L. R. Nackman, J.-M. Tang, and S. N. Meshkat. </author> <title> Automatic mesh generation using the symmetric axis transform of polygonal domains. </title> <journal> Proc. IEEE, </journal> <volume> 80(9) </volume> <pages> 1485-1501, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: It has also been used for a number of other applications, including path planning, finite element mesh generation, automated injection molding simulation and feature recognition. Many researchers have proposed the medial axis transform as an alternate representation to B-rep and CSG in a design and interrogation system <ref> [Wol92, Hof94, SNTM92] </ref>. The medial axis of a solid is the closure of the locus of all points within the solid that have two or more closest points on the boundary of the solid.
Reference: [SPB95] <author> Evan C. Sherbrooke, Nicholas M. Patrikalakis, and Erik Brisson. </author> <title> Computation of the medial axis transform of 3-D polyhedra. </title> <booktitle> In Solid Modeling, </booktitle> <pages> pages 187-199. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: However, it is hard to accurately and efficiently compute the medial axis based on such a discrete representation. In the last few years, a number of authors have proposed computing the medial axis based on a tracing approach <ref> [Mil93, Chi92, SPB95] </ref>. Starting with a known junction (for instance, a vertex of the polyhedron), they trace along its incident seams and discover the adjacent junction points. <p> Starting with a known junction (for instance, a vertex of the polyhedron), they trace along its incident seams and discover the adjacent junction points. In particular, Sherbrooke et al. <ref> [SPB95] </ref> have presented the first implemented algorithm for computing the medial axis based on a continuous representation of the boundary. However, they compute numerical solutions of polynomial equations using floating point arithmetic, and compute piecewise linear approximation of the seam curves. <p> In this paper, we present an accurate and efficient algorithm to compute the internal Voronoi region and medial axis of a 3-D polyhedron. Our overall approach is similar to the 3-D tracing algorithm proposed by <ref> [Mil93, Chi92, SPB95] </ref>. However, we use exact arithmetic and representation for accurate computation of the medial axis. The algorithm recursively computes the vertices and edges of the medial axis based on seam-tracing. <p> Milenkovic [Mil93] proposed the 3-D tracing algorithm, and discusses its complexity. Chiang [Chi92] presented an algorithm for computing the medial axis of a planar region bounded by piecewise C 2 curves. It involves tracing branches using sets of polynomial equations. Sherbrooke, Patrikalakis and Brisson <ref> [SPB95] </ref> have presented a variation on the algorithm. They explicitly trace along the seam, creating a piecewise-linear approximation to the curve. They applied their algorithm to generate the medial axis of a number of polyhedra. <p> The medial axis problem requires the use of either 3-D Sturm sequences or field extensions. 3 Algorithm Overview Our approach builds on the tracing algorithm proposed by [Mil93], <ref> [SPB95] </ref>, and [RT95]. However, instead of computing a piecewise linear approximation, we exactly compute all the components of the medial axis. Essentially, the algorithm constructs the adjacency graph of the medial axis while traversing it. Our terminology is similar to that of [SPB95]. <p> builds on the tracing algorithm proposed by [Mil93], <ref> [SPB95] </ref>, and [RT95]. However, instead of computing a piecewise linear approximation, we exactly compute all the components of the medial axis. Essentially, the algorithm constructs the adjacency graph of the medial axis while traversing it. Our terminology is similar to that of [SPB95]. The input polyhedron consists of faces, edges, and vertices. The coordinates of the vertices are represented in terms of rational numbers. The faces, edges, and vertices are collectively called boundary elements. The medial axis consists of sheets, seams, and junctions. The sheets correspond to trimmed quadric surfaces. <p> It is clearly advantageous to distinguish these two types of junction point in the implementation. It can be argued (see <ref> [SPB95] </ref>) that the connectivity properties of the medial axis make it feasible to avoid searching out of vertex-junctions at all|they serve as "sinks" for the recursion. Doing so typically removes many degenerate junctions from consideration.
Reference: [Ver94] <author> P. J. Vermeer. </author> <title> Medial Axis Transform to Boundary Representation Conversion. </title> <type> PhD thesis, </type> <institution> CS Dept., Purdue University, West Lafayette, Indiana 47907-1398, USA, </institution> <year> 1994. </year>
Reference-contexts: Medial axis to B-rep Conversion: A number of algorithms have been presented in the literature to convert solids from a representation based on the medial axis to a boundary representation <ref> [Wol92, Chi92, Bra92, Ver94] </ref>. 2.2 Exact arithmetic in geometric computation Exact arithmetic has proven useful in the linear domain. Exact arithmetic means that each number is determined and stored to whatever precision is necessary. By allowing arbitrary bit-lengths any integer or rational number can be computed and stored exactly.
Reference: [VO95] <author> Jules Vleugels and Mark Overmars. </author> <title> Approximating generalized Voronoi diagrams in any dimension. </title> <type> Technical Report UU-CS-1995-14, </type> <institution> Department of Computer Science, Utrecht University, </institution> <year> 1995. </year>
Reference-contexts: The approximation can be considered an "image" of the medial axis, and does not contain a complete description of the adjacency relationships. Among implementations of this approach, that of Vleugels and Overmars <ref> [VO95] </ref> is notable in that they guarantee correct topology of the approximate axis. Their topology-resolution routine subdivides adaptively.
Reference: [Wol92] <author> F. E. Wolter. </author> <title> Cut locus and medial axis in global shape interrogation and representation. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <year> 1992. </year>
Reference-contexts: It has also been used for a number of other applications, including path planning, finite element mesh generation, automated injection molding simulation and feature recognition. Many researchers have proposed the medial axis transform as an alternate representation to B-rep and CSG in a design and interrogation system <ref> [Wol92, Hof94, SNTM92] </ref>. The medial axis of a solid is the closure of the locus of all points within the solid that have two or more closest points on the boundary of the solid. <p> Medial axis to B-rep Conversion: A number of algorithms have been presented in the literature to convert solids from a representation based on the medial axis to a boundary representation <ref> [Wol92, Chi92, Bra92, Ver94] </ref>. 2.2 Exact arithmetic in geometric computation Exact arithmetic has proven useful in the linear domain. Exact arithmetic means that each number is determined and stored to whatever precision is necessary. By allowing arbitrary bit-lengths any integer or rational number can be computed and stored exactly.
Reference: [Yu92] <author> J. Yu. </author> <title> Exact arithmetic solid modeling. </title> <type> PhD thesis, </type> <institution> Purdue University, </institution> <year> 1992. </year>
Reference-contexts: This is because computations on non-linear objects often require algebraic numbers, which cannot be explicitly represented by a finite number of bits. Techniques using bit-length estimates may, in the worst case, require bit-lengths which are exponential with respect to the degree of the algebraic functions <ref> [Can88, Yu92] </ref>. One approach to this problem is to use field extensions to allow representations of each new number as it is computed. Many computer algebra systems and symbolic libraries provide support for field extensions. However, computing with such numbers can be quite expensive.
References-found: 42

