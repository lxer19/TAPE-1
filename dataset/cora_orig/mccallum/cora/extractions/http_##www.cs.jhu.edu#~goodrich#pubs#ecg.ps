URL: http://www.cs.jhu.edu/~goodrich/pubs/ecg.ps
Refering-URL: http://www.cs.jhu.edu/~goodrich/pubs/index.html
Root-URL: http://www.cs.jhu.edu
Email: dev@cs.brown.edu jsv@cs.duke.edu goodrich@cs.jhu.edu jjt@cs.ccu.edu.tw  
Title: External-Memory Computational Geometry (Preliminary Version)  
Author: Michael T. Goodrich Jyh-Jong Tsay Darren Erik Vengroff Jeffrey Scott Vitter 
Address: University  
Affiliation: The Johns Hopkins National Chung Cheng Brown University Duke University University  
Abstract: In this paper, we give new techniques for designing efficient algorithms for computational geometry problems that are too large to be solved in internal memory, and we use these techniques to develop optimal and practical algorithms for a number of important large-scale problems. We discuss our algorithms primarily in the context of single processor/single disk machines, a domain in which they are not only the first known optimal results but also of tremendous practical value. Our methods also produce the first known optimal algorithms for a wide range of two-level and hierarchical multilevel memory models, including parallel models. The algorithms are optimal both in terms of I/O cost and internal computation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal, B. Alpern, A. K. Chandra & M. Snir, </author> <title> "A Model for Hierarchical Memory," </title> <booktitle> Proc. 19th ACM STOC, </booktitle> <address> New York, NY (1987). </address>
Reference-contexts: Our results are even more significant, however, because the paradigms described in this paper continue to work even when parallelism is added and D and P increase. Furthermore, they can be made to work optimally on hierarchical models having more than two levels; these include the well known HMM <ref> [1] </ref>, BT [2], and UMH [4] (pictured in Figure 3), and their paral-lelizations [27,37] (pictured in Figure 4). Details of the algorithms for these models are discussed in the full version of this paper.
Reference: [2] <author> A. Aggarwal, A. Chandra & M. Snir, </author> <title> "Hierarchical Memory with Block Transfer," </title> <booktitle> Proc. 28th IEEE FOCS, </booktitle> <address> Los Angeles, CA (1987). </address>
Reference-contexts: Furthermore, they can be made to work optimally on hierarchical models having more than two levels; these include the well known HMM [1], BT <ref> [2] </ref>, and UMH [4] (pictured in Figure 3), and their paral-lelizations [27,37] (pictured in Figure 4). Details of the algorithms for these models are discussed in the full version of this paper.
Reference: [3] <author> A. Aggarwal & J. S. Vitter, </author> <title> "The input/output complexity of sorting and related problems," </title> <booktitle> Comm. ACM 31 (1988), </booktitle> <pages> 1116-1127. </pages>
Reference-contexts: In Sections 2.1 and 2.2 we show how to perform the queries using only O (( + ) log ) I/Os, which is optimal. The lower bound follows by a simple reduction from the sorting problem, which has the same I/O bound as a lower bound <ref> [3] </ref>. Our new method uses an off-line top-down implementation of the sweep, which in turn is based upon a novel application of the subdivision technique used by in the "distribution sort" algorithms of [3,27,37].
Reference: [4] <author> B. Alpern, L. Carter, E. Feig & T. Selker, </author> <title> "The Uniform Memory Hierarchy Model of Computation," </title> <booktitle> Proc. 31st IEEE FOCS, </booktitle> <address> St. Louis, MO (1990), </address> <note> To appear in Algorithmica. </note>
Reference-contexts: Furthermore, they can be made to work optimally on hierarchical models having more than two levels; these include the well known HMM [1], BT [2], and UMH <ref> [4] </ref> (pictured in Figure 3), and their paral-lelizations [27,37] (pictured in Figure 4). Details of the algorithms for these models are discussed in the full version of this paper.
Reference: [5] <author> M. J. Atallah & J. -J. Tsay,, </author> <title> "On the Parallel--Decomposability of Geometric Problems,," </title> <address> Algorith-mica 8 (1992 ), 209-231. </address>
Reference-contexts: To a large extent they are based on modified versions of two of the main paradigms discussed above, namely distribution sweeping and batch filtering. We can also rely on the many-way divide-and-conquer approach of Atallah and Tsay <ref> [5] </ref>, which can be extended to the I/O model. To implement distribution sweeping in these models we take advantage of deterministic distribution techniques recently developed by Nodine and Vitter [27] for optimal deterministic sorting.
Reference: [6] <author> R. Bayer & E. McCreight, </author> <title> "Organization of large ordered indexes," </title> <journal> Acta Informatica 1 (1972), </journal> <pages> 173-189. </pages>
Reference: [7] <author> B. Chazelle & L. J. Guibas, </author> <title> "Fractional Cascading: II. </title> <booktitle> Applications," Algorithmica 1 (1986), </booktitle> <pages> 163-191. </pages>
Reference: [8] <author> B. Chazelle & L. J. Guibas, </author> <title> "Fractional Cascading: I. </title>
References-found: 8

