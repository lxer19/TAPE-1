URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-98-07.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Email: maggiek@cse.ucsc.edu dai@cse.ucsc.edu  
Title: Arbitrary Rectilinear Block Packing Based  
Author: Kang Wayne Dai 
Date: April 28, 1998  
Address: Santa Cruz  
Affiliation: Dept. of Computer Engineering University of California,  
Note: Maggie  
Abstract: On Sequence Pair Structure Technical Report : UCSC-CRL-98-07 Abstract Due to layout or specific physical requirements, macro blocks can be in an arbitrary rectilinear shape. Block packing problem will no longer be limited to the rectangle packing. So far no efficient algorithm has been proposed to solve the general rectilinear block packing problem. This paper presents a novel representation method for arbitrary shaped rectilinear blocks in a sequence pair structure. A sequence pair is feasible if an optimal packing of arbitrary rectilinear blocks can be guaranteed for the given sequence pair regardless of the dimensions of the blocks. In this paper, three conditions are derived on a sequence pair which are necessary and sufficient for a sequence pair to be feasible. Furthermore this paper shows that there always exists a feasible sequence pair for a packing of convex rectilinear blocks. As such, the optimal solution for convex rectilinear block packing can be found by exhausting the finite number of feasible sequence pairs. Three sequence pair operations are developed to incrementally change a solution. Each operation takes linear time and generates a feasible sequence pair. An important theoretical result demonstrates that the optimal solution can always be reachable through a finite times of the sequence pair operations. Therefore a stochastic search based on the three operations can search the feasible solution space both continuously and exhaustively. In such a way, for the first time, the arbitrary shaped rectilinear block packing is solved by using a sequence pair structure.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Otten, </author> <title> "Automatic Floorplan Design," </title> <booktitle> in Proc. of 19th ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 261-267, </pages> <year> 1982. </year>
Reference-contexts: 1 Introduction Most of the traditional floorplanning or placement algorithms considered only rectangular shaped macro blocks. The slicing structure was proposed to represent the block placement by recursively dissecting the rectangular plane into two parts using either horizontal or vertical line <ref> [1] </ref>. Corresponding to the slicing structure, Wong and Liu proposed a data representation called normalized Polish expression, which enables the efficient local search [2]. As the increase of routing layers, most of channel routing is being replaced by area routing. <p> Given macro block A = fa 1 ; a 2 ; ; a n g, rotate (A) switches the height with the width for each unit block of A. The sequence pair is accordingly changed by switching unit a i with a m+1i , i 2 <ref> [1; n] </ref>, in the first sequence (90 0 to 180 0 , 270 0 to 0 0 ) or the second sequence (0 0 to 90 0 , 180 0 to 270 0 ).
Reference: [2] <author> D. F. Wong and C. L. Liu, </author> <title> "A New Algorithm for Floorplan Design," </title> <booktitle> in Proc. of 23rd ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 101-107, </pages> <month> June </month> <year> 1986. </year>
Reference-contexts: The slicing structure was proposed to represent the block placement by recursively dissecting the rectangular plane into two parts using either horizontal or vertical line [1]. Corresponding to the slicing structure, Wong and Liu proposed a data representation called normalized Polish expression, which enables the efficient local search <ref> [2] </ref>. As the increase of routing layers, most of channel routing is being replaced by area routing. A block placement becomes more like a block packing problem, and the wasted 1 area introduced by a slicing structure becomes more evident. As such, the non-slicing block packing becomes more attractive.
Reference: [3] <author> H. Murata, K. Fujiyoshi, S. Nakatake, and Y. Kajitani, </author> <title> "Rectangle-Packing-Based Module Placement," </title> <booktitle> in IEEE/ACM International Conf. on Computer Aided Design, </booktitle> <address> (San Jose, CA), </address> <pages> pp. 472-479, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: A block placement becomes more like a block packing problem, and the wasted 1 area introduced by a slicing structure becomes more evident. As such, the non-slicing block packing becomes more attractive. Murata et al. <ref> [3] </ref> introduced a sequence pair (SP), and Nakatake et al. [4] proposed a bounded slicing grid structure (BSG) to represent the general rectangle packing. Both SP and BSG define the binary relationship for each pair of rectangular blocks, and provide a way to independently compact the x and y direction. <p> corresponding packing of the six blocks. (a b d e c f ; c b f a d e) , in which the transitive arcs are deleted for the simplification. 4 As a coding scheme, sequence pair becomes an ideal data representation of rectangular block packing due to following facts <ref> [3] </ref> : * Quick evaluation of packing area based on sequence pair : O (n 2 ) time where n is the number of unit blocks. * Easy incremental change of packing topology using sequence pair : switch two units in the first or second sequence. * There always exists a
Reference: [4] <author> S. Nakatake, K. Fujiyoshi, H. Murata, and Y. Kajitani, </author> <title> "Module Placement on BSG-Structure and IC Layout Applications," </title> <booktitle> in IEEE/ACM International Cof. on Computer Aided Design, </booktitle> <address> (San Jose, CA), </address> <pages> pp. 484-491, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: A block placement becomes more like a block packing problem, and the wasted 1 area introduced by a slicing structure becomes more evident. As such, the non-slicing block packing becomes more attractive. Murata et al. [3] introduced a sequence pair (SP), and Nakatake et al. <ref> [4] </ref> proposed a bounded slicing grid structure (BSG) to represent the general rectangle packing. Both SP and BSG define the binary relationship for each pair of rectangular blocks, and provide a way to independently compact the x and y direction.
Reference: [5] <author> T. Chang Lee, </author> <title> "A Bounded 2D Contour Searching Algorithm for Floorplan Design with Arbitrarily Shaped Rectilinear and Soft Modules," </title> <booktitle> in Proc. 30th ACM/IEEE Design Automation Conf., </booktitle> <address> (Dallas, TX), </address> <pages> pp. 525-530, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Due to layout or specific physical requirements, macro blocks can be in an arbitrary rectilinear shape. Few previous works have studied the rectilinear shaped blocks where the most noticeable one is the bounded 2D contour searching algorithm proposed by <ref> [5] </ref>. The arbitrarily rectilinear shaped blocks are represented by a set of four linear profiles, each one of them specifies the profile viewed from one side of the block.
Reference: [6] <author> M. Kang and W. W.-M. Dai, </author> <title> "General Floorplanning with L-shaped, T-shaped and Soft Blocks Based on Bounded Slicing Grid Structure," </title> <booktitle> in Proc. of Asia and South Pacific Design Automation Conf. 1997, (Chiba, Japan), </booktitle> <pages> pp. 265-270, </pages> <month> Feburary </month> <year> 1997. </year>
Reference-contexts: As we can see, this compaction method cannot be applied on block packing problem due to the complicated geometrical calculation. A BSG-based method was proposed by <ref> [6] </ref> to pack rectangular, L-shaped, T-shaped, and soft blocks. The complicated relationship among rectilinear blocks was indicated and a SP-based algorithm was presented by [7]. Unfortunately the algorithm does not converge to the feasible solutions, overlaps may exist in the packing solution.
Reference: [7] <author> J. Dufour, R. McBride, P. Zhang, and C. Kuan Cheng, </author> <title> "A Building Block Placement Tool," </title> <booktitle> in Proc. 1997 Aisa and South Pacific Design Automation Conf., (Chiba, Japan), </booktitle> <pages> pp. 271-276, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: A BSG-based method was proposed by [6] to pack rectangular, L-shaped, T-shaped, and soft blocks. The complicated relationship among rectilinear blocks was indicated and a SP-based algorithm was presented by <ref> [7] </ref>. Unfortunately the algorithm does not converge to the feasible solutions, overlaps may exist in the packing solution.
Reference: [8] <author> M. Kang and W. W.-M. Dai, </author> <title> "Topology Constrained Rectilinear Block Packing for Layout Reuse," </title> <booktitle> in International Symposium of Physical Design, </booktitle> <address> (Monterey, CA), </address> <pages> pp. 179-186, </pages> <month> April </month> <year> 1998. </year>
Reference-contexts: The complicated relationship among rectilinear blocks was indicated and a SP-based algorithm was presented by [7]. Unfortunately the algorithm does not converge to the feasible solutions, overlaps may exist in the packing solution. Most recently, an algorithm based on both BSG and SP structures was proposed by <ref> [8] </ref>, in which the topology constrained block packing can be handled given that blocks belong to a specific class of convex rectilinear shapes. An SP-based algorithm was proposed by [9] to pack the mountain-shaped blocks. However it was not guaranteed that the algorithm could always terminate.
Reference: [9] <author> J. Xu and C. Kuan Cheng, </author> <title> "Rectilinear Block Placement Using Permutation-pair," </title> <booktitle> in International Symposium of Physical Design, </booktitle> <address> (Monterey, CA), </address> <pages> pp. 173-178, </pages> <month> April </month> <year> 1998. </year>
Reference-contexts: Most recently, an algorithm based on both BSG and SP structures was proposed by [8], in which the topology constrained block packing can be handled given that blocks belong to a specific class of convex rectilinear shapes. An SP-based algorithm was proposed by <ref> [9] </ref> to pack the mountain-shaped blocks. However it was not guaranteed that the algorithm could always terminate.
Reference: [10] <author> S. Nakatake, M. Furuya, and Y. Kanitani, </author> <title> "Module Placement on BSG-Structure with Pre-Placed Modules and Rectilinear Modules," </title> <booktitle> in Proc. 1998 Asia and South Pacific Design Automation Conf., </booktitle> <address> (Yokohama, Japan), </address> <pages> pp. 571-576, </pages> <month> January </month> <year> 1998. </year> <month> 23 </month>
Reference-contexts: An SP-based algorithm was proposed by [9] to pack the mountain-shaped blocks. However it was not guaranteed that the algorithm could always terminate. Based on BSG structures, an algorithm was proposed by <ref> [10] </ref> where each block is sliced into a set of rectangular sub-blocks, one of them is selected to be a master and the others slaves. Only the master sub-block is assigned into BSG domain. After the compaction, the slaves are attached with the master.
References-found: 10

