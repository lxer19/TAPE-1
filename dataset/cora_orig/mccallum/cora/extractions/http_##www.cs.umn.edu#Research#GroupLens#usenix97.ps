URL: http://www.cs.umn.edu/Research/GroupLens/usenix97.ps
Refering-URL: http://www.cs.umn.edu/Research/GroupLens/research.html
Root-URL: http://www.cs.umn.edu
Email: email: fbmiller,riedl,konstang@cs.umn.edu  
Title: Experiences with GroupLens: Making Usenet Useful Again diction profiles for three newsgroups, and assess the
Author: Bradley N. Miller John T. Riedl Joseph A. Konstan 
Note: Thanks to AT&T Research for their generous support.  
Date: June 18, 1996  
Affiliation: Department of Computer Science University of Minnesota  
Abstract: Collaborative filtering attempts to alleviate information overload by offering recommendations on whether information is valuable based on the opinions of those who have already evaluated it. Usenet news is an information source whose value is being severely diminished by the volume of low-quality and uninteresting information posted in its newsgroups. The Grou-pLens system applies collaborative filtering to Usenet news to demonstrate how we can restore the value of Usenet news by sharing our judgements of articles, with our identities protected by pseudonyms. This paper extends the original GroupLens work by reporting on a significantly enhanced system and the results of a seven week trial with 250 users and over 20,000 news articles. Grou-pLens has an open and flexible architecture that allows easy integration of new newsreader clients and ratings bureaus. We show ratings and pre 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Goldberg, D. Nichols, B.M. Oki, and D. Terry. </author> <title> Using collaborative filtering to weave an information tapestry. </title> <journal> Communications of the ACM, </journal> <volume> 35(12) </volume> <pages> 61-70, </pages> <year> 1992. </year>
Reference-contexts: The 130,000 new messages produced on Usenet each day dwarfs the number of new CDs and movies produced in an entire year. Tapestry The Tapestry system <ref> [1] </ref> is an early collaborative filtering system designed to help small groups of people work together to solve the information overload problem. Tapestry makes sophisticated use of subjective evaluations. It allows filtering of all incoming information streams, including email and Usenet news. <p> Second, users may be known to all other users. In this case the ratings are closely associated with the reputation of the rater, and users seeking recommendations or predictions may specify which other users to use in generating predictions <ref> [1] </ref>. This option requires users to give up the privacy of their ratings. The third option, employed by GroupLens, uses pseudonyms to uniquely identify every user.
Reference: [2] <author> W. Hill, L. Stead, M. Rosenstein, and G. Furnas. </author> <title> Recommending and evaluating choices in a virtual community of use. </title> <booktitle> In Human Factors in Computing Systems (CHI) Conference Proceedings, </booktitle> <pages> pages 194-201. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: The utility of collaborative filtering extends beyond the domain of Usenet news into the realm of movies, videos <ref> [2] </ref>, and audio CDs [13]. Usenet represents a uniquely challenging problem for a collaborative filtering system because of the sheer volume of information items for which ratings must be collected and predictions calculated.
Reference: [3] <author> Kum-Yew Lai and Thomas W. Malone. </author> <title> Object lens: A "spreadsheet" for cooperative work. </title> <booktitle> In Proceedings of International Conference on Computer Supported Cooperative Work, </booktitle> <address> Portland, OR, September 1988. </address> <publisher> ACM Press, </publisher> <address> New York, NY. </address>
Reference-contexts: For instance, the Information Lens system enables even unsophisticated users to automatically perform actions in response to messages [6]. Object Lens extends the Information Lens to other domains, including databases and hypertext <ref> [3] </ref>. Intelligent Agents The July 1994 issue of Communications of the ACM is devoted to the state of the art in intelligent agent research. This issue includes discussions of several agents designed to reduce information overload. [4]. The agents address meeting scheduling, email handling, and netnews filtering.
Reference: [4] <author> P. Maes. </author> <title> Agents that reduce work and information overload. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 30-40, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Object Lens extends the Information Lens to other domains, including databases and hypertext [3]. Intelligent Agents The July 1994 issue of Communications of the ACM is devoted to the state of the art in intelligent agent research. This issue includes discussions of several agents designed to reduce information overload. <ref> [4] </ref>. The agents address meeting scheduling, email handling, and netnews filtering. The netnews agent is known as NewT [14]. A user trains NewT by showing it examples of articles that should and should not be selected.
Reference: [5] <author> Lars Magne-Ingebritson. </author> <note> Gnus 5.0 Reference Manual. Available at: http://www.miranova.com/gnus-man/gnus.html. </note>
Reference-contexts: Recently scorefiles have been introduced as a more general mechanism. A killfile allows a user to specify certain subjects or authors that he never wants to see, while a scorefile allows the user to give interesting subjects and authors high scores and uninteresting subjects and authors low scores <ref> [5] </ref>. The problem with these techniques is their coarseness. Not all articles containing a desired keyword are interesting, and even generally poor writers occasionally produce an article worth reading. Additionally, keywords are difficult to identify in the presence of aliases, synonyms and misspelled words.
Reference: [6] <author> T.W. Malone, K.R. Grant, F.A. Turbak, S.A. Brobst, and M.D. Cohen. </author> <title> Intelligent information-sharing systems. </title> <journal> Communications of the ACM, </journal> <volume> 30(5) </volume> <pages> 390-402, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Programmable agents have been used in information filtering to prioritize messages, gather messages into folders by keyword, or even reply to messages. For instance, the Information Lens system enables even unsophisticated users to automatically perform actions in response to messages <ref> [6] </ref>. Object Lens extends the Information Lens to other domains, including databases and hypertext [3]. Intelligent Agents The July 1994 issue of Communications of the ACM is devoted to the state of the art in intelligent agent research.
Reference: [7] <author> D.A. Maltz. </author> <title> Distributing information for collaborative filtereing on usenet net news. </title> <type> Master's thesis, </type> <institution> MIT Department of EECS, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: To calculate a prediction for an article the prediction daemon requires two inputs: a measure of similarity between pairs of users, and ratings for the article in question. The way in which these two inputs are combined for each prediction is described in <ref> [13, 10, 7] </ref>. Our performance goal for the the prediction algorithm is to be able to calculate and deliver 100 predictions in less than two seconds. In practice we are able to deliver 100 predictions in 4.2 seconds on a Sparc 5 workstation with 32Mb memory, running Solaris 2.4. <p> There are three ways to handle user privacy issues in a collaborative filtering system. First, users may be anonymous so that ratings are submitted without any user identification. When ratings are submitted anonymously, the only operations the system can perform are aggregate operations such as the average rating <ref> [7] </ref>. Second, users may be known to all other users. In this case the ratings are closely associated with the reputation of the rater, and users seeking recommendations or predictions may specify which other users to use in generating predictions [1].
Reference: [8] <author> Philip A. Nelson. </author> <note> gdbm-1.7 Reference Manual. Available from: ftp://prep.ai.mit.edu/pub/gnu/gdbm-1.7.3.tar.gz. </note>
Reference-contexts: Currently we support three back ends: gdbm <ref> [8] </ref>, Illustra, and OBST. 2.2 Protocol The glue that ties all of the modules together, and allows the newsreading clients to talk to the GLRB and other modules, is the GroupLens protocol. The protocol consists of five major commands. We'll give a brief overview of the major commands here.
Reference: [9] <author> D.A. Norman. </author> <title> How might people interact with agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 68-71, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Based on user feedback NewT is able to make weighted judgments about news articles containing keywords. Intelligent agents for information filtering suffer from the same drawbacks as keyword based techniques. An additional problem is that agents must be trained. Norman points out in <ref> [9] </ref> that interaction with and instruction of agents is a difficult problem that has not been solved satisfactorily. 1.3 Collaborative Solutions Collaborative filtering systems make use of the reactions and opinions of people that have already seen a piece of information to make predictions about the value of that piece of
Reference: [10] <author> P. Resnick, N. Iacovou, M. Sushak, P. Bergstrom, and J. Riedl. Grouplens: </author> <title> An open architecture for collaborative filtering of netnews. </title> <booktitle> In Proceedings of CSCW 1994. ACM SIG Computer Supported Cooperative Work, </booktitle> <year> 1994. </year>
Reference-contexts: The GroupLens project seeks to alleviate the problem of information overload by applying collaborative filtering techniques to Usenet news and other Internet resources. In so doing we hope to help restore order to Usenet, and build a renewed sense of community. In an earlier paper <ref> [10] </ref> we reported on the initial GroupLens architecture and a small scale pilot test with approximately 12 participants at our local universities. <p> To calculate a prediction for an article the prediction daemon requires two inputs: a measure of similarity between pairs of users, and ratings for the article in question. The way in which these two inputs are combined for each prediction is described in <ref> [13, 10, 7] </ref>. Our performance goal for the the prediction algorithm is to be able to calculate and deliver 100 predictions in less than two seconds. In practice we are able to deliver 100 predictions in 4.2 seconds on a Sparc 5 workstation with 32Mb memory, running Solaris 2.4. <p> a look at the general question, "does it work?" We'll look at this question from two perspectives: First, do the predictions accurately reflect what the user rated the article? Second, do users find the predictions useful, and do they believe them? We used data collected from the earlier GroupLens trial <ref> [10] </ref> to develop prediction algorithms, and evaluated the performance of the prediction algorithms based on the data from the present trial. The algorithms were not changed during this trial. 4.1 Accuracy of Predictions Our experience has shown that the prediction program behaves differently for different newsgroups. <p> We will calculate a personalized prediction for each user for each article using the Pearson coefficient as a similarity measure between users, as described in <ref> [10] </ref>. For comparison we will calculate the average rating entered for each article. We compare each prediction against the actual ratings entered by the users. It is useful to look at the average because it is fast to calculate and requires very little storage.
Reference: [11] <author> G. Salton and M. McGill. </author> <title> Introduction to Modern Information Retrival. </title> <publisher> McGraw-Hill, </publisher> <year> 1983. </year>
Reference-contexts: The agents address meeting scheduling, email handling, and netnews filtering. The netnews agent is known as NewT [14]. A user trains NewT by showing it examples of articles that should and should not be selected. The agent performs a full text analysis of the article using the vector-space model <ref> [11] </ref>. Once the agent has gone through initial training it starts making recommendations to, and accepting feedback from the user. Based on user feedback NewT is able to make weighted judgments about news articles containing keywords. Intelligent agents for information filtering suffer from the same drawbacks as keyword based techniques.
Reference: [12] <author> Bruce Schneier. </author> <title> Applied Cryptography. </title> <publisher> John Wiley & Sons, </publisher> <year> 1994. </year>
Reference-contexts: In Grou-pLens, pseudonyms and their associated ratings are publicly available. However, we do not associate these pseudonyms with a user's real identity and we use an authentication protocol <ref> [12] </ref> that prevents a user from using another's pseudonym. 3 Filtering Clients 3.1 News Readers The primary user interface for the GroupLens system is a set of newsreaders that are adapted to use the GroupLens server as well as the local NNTP server.
Reference: [13] <author> U. Shardanand and P. Maes. </author> <title> Social information filtering: Algorithms for automating "word of mouth". </title> <booktitle> In Human Factors in Computing Systems CHI '95 Conference Proceedings, </booktitle> <pages> pages 210-217, </pages> <year> 1995. </year>
Reference-contexts: The utility of collaborative filtering extends beyond the domain of Usenet news into the realm of movies, videos [2], and audio CDs <ref> [13] </ref>. Usenet represents a uniquely challenging problem for a collaborative filtering system because of the sheer volume of information items for which ratings must be collected and predictions calculated. <p> To calculate a prediction for an article the prediction daemon requires two inputs: a measure of similarity between pairs of users, and ratings for the article in question. The way in which these two inputs are combined for each prediction is described in <ref> [13, 10, 7] </ref>. Our performance goal for the the prediction algorithm is to be able to calculate and deliver 100 predictions in less than two seconds. In practice we are able to deliver 100 predictions in 4.2 seconds on a Sparc 5 workstation with 32Mb memory, running Solaris 2.4.
Reference: [14] <author> B. Sheth and P. Maes. </author> <title> Evolving agents for personalized information filtering. </title> <booktitle> In Proceedings of 9th IEEE Conference on Artificial Intelligence for Applications. </booktitle> <publisher> IEEE Comput. Soc. Press; Los Alamitos, </publisher> <address> CA, USA, </address> <year> 1993. </year>
Reference-contexts: This issue includes discussions of several agents designed to reduce information overload. [4]. The agents address meeting scheduling, email handling, and netnews filtering. The netnews agent is known as NewT <ref> [14] </ref>. A user trains NewT by showing it examples of articles that should and should not be selected. The agent performs a full text analysis of the article using the vector-space model [11].
Reference: [15] <institution> The grouplens home page. </institution> <note> http://www.cs.umn.edu/Research/GroupLens. 17 </note>
Reference-contexts: The protocol consists of five major commands. We'll give a brief overview of the major commands here. The details of the protocol are available on-line <ref> [15] </ref>. Three key concepts in the protocol are pseudonyms, tokens, and message-ids. Pseudonyms are the secret identifiers selected by users to identify themselves to the GroupLens system while maintaining their privacy. Tokens are integers returned from the server to represent the state of a logged in user.
References-found: 15

