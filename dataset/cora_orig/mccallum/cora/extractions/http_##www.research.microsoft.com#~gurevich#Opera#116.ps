URL: http://www.research.microsoft.com/~gurevich/Opera/116.ps
Refering-URL: http://www.research.microsoft.com/~gurevich/annotated.html
Root-URL: http://www.research.microsoft.com
Title: Normal Forms for Second-Order Logic over Finite Structures, and Classification of NP Optimization Problems formula
Author: Thomas Eiter Georg Gottlob Yuri Gurevich 
Note: 2  1 2 fails if 1 2 is replaced with 1 1 or if infinite structures are allowed.  
Date: March 2, 1995  
Abstract: We start with a simple proof of Leivant's normal form theorem for 1 1 formulas over finite successor structures. Then we use that normal form to prove the following: (i) over all finite structures, every 1 2 formula is equivalent to a 1 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Barwise. </author> <title> Admissible Sets and Structures: An Approach to Definability Theory. </title> <publisher> Springer Verlag, </publisher> <year> 1975. </year>
Reference-contexts: In fact, it remains true if bounded universal quantification is allowed in the first-order part of and if it is required that all universal quantors in are bounded. Barwise attributes the stronger result to Kreisel and proves a generalization of it to countable admissible sets in <ref> [1] </ref>. For reader's convenience, we give a direct proof of our lemma. P roof of Lemma 4.2.
Reference: [2] <author> C. C. Chang and H. J. Keisler. </author> <title> Model Theory. </title> <publisher> North-Holland, </publisher> <address> 2nd edition, </address> <year> 1973. </year>
Reference-contexts: The reason is that every 1 k sentence whose first-order part is purely universal or existential is preserved under submodels or extensions, respectively. Indeed, each universal first-order sentence is preserved under submodels (see <ref> [2] </ref>). An easy induction on k shows that each 1 k formula with universal first-order part is preserved under submodels.
Reference: [3] <author> T. Eiter, G. Gottlob, and H. Mannila. </author> <title> Adding Disjunction to Datalog. </title> <booktitle> In Proceedings of the Thirteenth ACM SIGACT SIGMOD-SIGART Symposium on Principles of Database Systems (PODS-94), </booktitle> <pages> pages 267-278, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: We exhibit a 1 1 formula without individual or predicate variables that does not reduce to any 1 1 (bool) formula. In Section 3, we use Leivant's to prove our main result, announced in <ref> [3] </ref>: Over arbitrary finite structures, every 1 2 formula reduces to a 1 2 (bool) formula. It follows that every 1 k formula (respectively 1 k formula), k 2, reduces to a 1 k (bool) formula (respectively 1 k (bool) formula).
Reference: [4] <author> R. Fagin. </author> <title> Generalized First-Order Spectra and Polynomial-Time Recognizable Sets. </title> <editor> In R. M. Karp, editor, </editor> <booktitle> Complexity of Computation, </booktitle> <pages> pages 43-74. </pages> <publisher> AMS, </publisher> <year> 1974. </year>
Reference-contexts: An example of a maximization problem is MAX CONNECTED COMPONENT: find the size of a largest connected component of an undirected finite graph. In the spirit of Fagin's logical characterization of NP <ref> [4] </ref>, characterizations of NP optimization problems in terms of logical definability have been given e.g. in [11, 10, 6]. <p> This fits Kolaitis and Thakur's observation that ". . . the pattern of the quantifier prefix does not impact on the approximability of minimization problems" [6, p.348]. Theorem 2.1 allows one to strengthen Fagin's theorem <ref> [4] </ref>, that a class of finite structures closed under isomorphisms is recognizable in NP if and only if it is definable in existential second-order logic, as follows. Lemma 5.1 Let K be a class of successor structures of vocabulary closed under isomor-phisms.
Reference: [5] <author> S. C. Kleene. </author> <title> Introduction to Metamathematics. </title> <publisher> North-Holland, </publisher> <year> 1952. </year>
Reference-contexts: A j= G k (x; y 1 ; : : : ; y k ), and, for every sequence (y 1 ; : : : ; y k ), there is a unique x with A j= G k (x; y 1 ; : : : ; y k ) <ref> [5] </ref>. Fix appropriate formulas G k . To make our intentions clearer we write x = Code (y 1 ; : : : ; y k ) instead of G k (x; y 1 ; : : : ; y k ).
Reference: [6] <author> P. Kolaitis and M. N. Thakur. </author> <title> Logical Definability of NP Optimization Problems. </title> <journal> Information and Computation, </journal> <volume> 115 </volume> <pages> 321-353, </pages> <year> 1994. </year>
Reference-contexts: The final Section 5 is devoted to the classification of NP optimization problems. We recall the definition of NP optimization problems and the Kolaitis-Thakur hierarchies of polyno-mially bounded minimization and maximization problems <ref> [6] </ref>. In the context of optimization problems, first-order structures serve as inputs to algorithms. In fact, genuine inputs are representations of structures, e.g, as strings. Such representations order the given structure on one way or another. <p> Lemma 4.2 is proved and thus Theorem 4.1 is proved. 5 On Classification of NP Optimization Problems For brevity, we write k for 0 k and the same for . An NP minimization problem <ref> [10, 6] </ref> is given by a tuple M = (I M ; F M ; f M ) such that * I M is a set of input instances, which is assumed to be recognizable in polynomial time. * F M (I) is a set of so-called feasible solutions for the <p> An example of a maximization problem is MAX CONNECTED COMPONENT: find the size of a largest connected component of an undirected finite graph. In the spirit of Fagin's logical characterization of NP [4], characterizations of NP optimization problems in terms of logical definability have been given e.g. in <ref> [11, 10, 6] </ref>. An NP optimization problem is said to be polynomially bounded if there is a polynomial p such that opt M (I) p (jIj); for all I 2 I M ; where jIj is the length of the input I. <p> MIN PB (respectively MAX PB) denotes the class of all polynomially bounded NP minimization (respectively maximization) problems. We restrict attention to optimization problems whose inputs are finite structures of a fixed vocabulary. As shown in <ref> [6] </ref>, an NP optimization problem M with finite structures A over a vocabulary is polynomially bounded if and only if there is a first-order formula '(w; S) with predicates among those of and S such that for every instance A of M, opt M (A) = jf w : (A; S) <p> first-order formula '(w; S) with predicates among those of and S such that for every instance A of M, opt M (A) = jf w : (A; S) j= '(w; S) gj: (Here and thereafter it is assumed that the universe of A contains at least two elements.) Moreover, in <ref> [6] </ref> hierarchies of classes of NP optimization problems have been analyzed. We start with minimization problems. Denote by MIN k (respectively MIN k ) the class of NP minimization problems definable by a k (respectively k ) formulas, k 0. According to [6], We show that for minimization problems over successor <p> A contains at least two elements.) Moreover, in <ref> [6] </ref> hierarchies of classes of NP optimization problems have been analyzed. We start with minimization problems. Denote by MIN k (respectively MIN k ) the class of NP minimization problems definable by a k (respectively k ) formulas, k 0. According to [6], We show that for minimization problems over successor structures, MIN PB is contained in MIN 1 , so that all polynomially bounded minimization problems can be defined with a quantifier-free first-order formula. <p> This fits Kolaitis and Thakur's observation that ". . . the pattern of the quantifier prefix does not impact on the approximability of minimization problems" <ref> [6, p.348] </ref>. Theorem 2.1 allows one to strengthen Fagin's theorem [4], that a class of finite structures closed under isomorphisms is recognizable in NP if and only if it is definable in existential second-order logic, as follows. <p> The proof is analogous to the proof of Theorem 3 in <ref> [6] </ref>, but uses Lemma 5.1 instead of Fagin's theorem. The if direction is obvious. <p> The classes MIN 1 and MIN 2 are separated in <ref> [6] </ref> by showing that the problem MIN CHROMATIC NUMBER is in MIN 2 but not in MIN 1 (Theorem 4, Part B). The proof in [6] uses the fact that a graph G obtained by taking the direct sum of graphs H 1 and H 2 without common vertices is an <p> The classes MIN 1 and MIN 2 are separated in <ref> [6] </ref> by showing that the problem MIN CHROMATIC NUMBER is in MIN 2 but not in MIN 1 (Theorem 4, Part B). The proof in [6] uses the fact that a graph G obtained by taking the direct sum of graphs H 1 and H 2 without common vertices is an extension of both H 1 and H 2 . <p> Check by induction on k, that kth element of H 1 is the kth element of G. Further, the last element of H 1 is the last element of G. Thus G contains no elements of H 2 which is impossible. Thus, the proof in <ref> [6] </ref> fails for successor structures. We turn our attention to maximization problems. Denote by MAX k (respectively MAX k ) the class of NP maximization problems definable by k (respectively k ) formulas, k 0. According to [6], MAX 0 MAX 1 MAX 2 = MAX 1 MAX 2 = MAX <p> Thus, the proof in <ref> [6] </ref> fails for successor structures. We turn our attention to maximization problems. Denote by MAX k (respectively MAX k ) the class of NP maximization problems definable by k (respectively k ) formulas, k 0. According to [6], MAX 0 MAX 1 MAX 2 = MAX 1 MAX 2 = MAX PB: (9) Over successor structures, MAX 2 collapses to MAX 1 . Theorem 5.4 Let M be a maximization problem over successor structures of vocabulary . <p> The proof is similar to the proof of Theorem 1 in <ref> [6] </ref>. <p> It follows that opt M (A) = max jf w : (A; S) j= '(w; S) gj: Remark. The classes MAX 1 and MAX 2 are separated in <ref> [6] </ref> by showing that the problem MAX CONNECTED COMPONENT is in MAX 2 but not in MAX 1 (Theorem 2, part B). The proof in [6] fails for successor structures, since it uses the fact that certain graphs H i , obtained by removing vertices a i from the input graph <p> The classes MAX 1 and MAX 2 are separated in <ref> [6] </ref> by showing that the problem MAX CONNECTED COMPONENT is in MAX 2 but not in MAX 1 (Theorem 2, part B). The proof in [6] fails for successor structures, since it uses the fact that certain graphs H i , obtained by removing vertices a i from the input graph G, are substructures of G.
Reference: [7] <author> P. Kolaitis and M. Y. Vardi. </author> <title> 0-1 Laws and Decision Problems for Fragments of Second-Order Logic. </title> <journal> Information and Computation, </journal> <volume> 87 </volume> <pages> 302-338, </pages> <year> 1990. </year>
Reference-contexts: There fore, for some tuple X 0 of appropriate relations, hU; X 0 i j= (9x)(8y)'. Choose k appropriate witnesses and let V U contain all k witnesses and be of odd cardinality. It is easy to see that V j= which is impossible. Remark. It is shown in <ref> [7] </ref> that the fragment of 1 1 with first-order parts in 0 2 has a 0-1 law on finite structures. This gives another proof of Theorem 2.2. 3 A 2 Normal Form Now we consider arbitrary finite structures.
Reference: [8] <author> D. Leivant. </author> <title> Descriptive Characterizations of Computational Complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 39 </volume> <pages> 51-83, </pages> <year> 1989. </year>
Reference-contexts: Leivant found a simpler normal form for 1 1 formulas over finite successor structures: every such formula reduces to a 1 1 formula with universal first-order part <ref> [8] </ref>. In Section 2, we give a shorter, simpler and more direct proof of this normal form theorem. Leivant's theorem fails in the case of all finite structures.
Reference: [9] <author> Y. Matijasevich. </author> <title> Hilbert's Tenth Problem. </title> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: Barwise attributes the stronger result to Kreisel and proves a generalization of it to countable admissible sets in [1]. For reader's convenience, we give a direct proof of our lemma. P roof of Lemma 4.2. Since every recursively enumerable relation can be expressed with a first-order existential formula <ref> [9] </ref> over A, there are first-order existential formulas G k (x; y 1 ; : : : ; y k ) such that, for every x, there exists a unique sequence (y 1 ; : : : ; y k ) with A j= G k (x; y 1 ; :
Reference: [10] <author> A. Panconesi and D. Ranjan. </author> <title> Quantifiers and Approximation. </title> <journal> Theoretical Computer Science, </journal> <volume> 107 </volume> <pages> 145-163, </pages> <year> 1993. </year>
Reference-contexts: Lemma 4.2 is proved and thus Theorem 4.1 is proved. 5 On Classification of NP Optimization Problems For brevity, we write k for 0 k and the same for . An NP minimization problem <ref> [10, 6] </ref> is given by a tuple M = (I M ; F M ; f M ) such that * I M is a set of input instances, which is assumed to be recognizable in polynomial time. * F M (I) is a set of so-called feasible solutions for the <p> An example of a maximization problem is MAX CONNECTED COMPONENT: find the size of a largest connected component of an undirected finite graph. In the spirit of Fagin's logical characterization of NP [4], characterizations of NP optimization problems in terms of logical definability have been given e.g. in <ref> [11, 10, 6] </ref>. An NP optimization problem is said to be polynomially bounded if there is a polynomial p such that opt M (I) p (jIj); for all I 2 I M ; where jIj is the length of the input I.
Reference: [11] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, Approximation, and Complexity Classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year>
Reference-contexts: An example of a maximization problem is MAX CONNECTED COMPONENT: find the size of a largest connected component of an undirected finite graph. In the spirit of Fagin's logical characterization of NP [4], characterizations of NP optimization problems in terms of logical definability have been given e.g. in <ref> [11, 10, 6] </ref>. An NP optimization problem is said to be polynomially bounded if there is a polynomial p such that opt M (I) p (jIj); for all I 2 I M ; where jIj is the length of the input I.
Reference: [12] <author> J. van Benthem and K. Doets. </author> <title> Higher Order Logic. </title> <editor> In D. Gabbay and F. Guenthner, editors, </editor> <booktitle> Handbook of Philosophical Logic, Vol.I, chapter I.4, </booktitle> <pages> pages 275-329. </pages> <address> D. </address> <publisher> Reidel Publishing Company, </publisher> <year> 1983. </year> <month> 15 </month>
Reference-contexts: It is well-known that every 1 1 formula reduces to a 1 1 formula with first-order part of the form (8x)(9y)'(x; y) where ' is quantifier-free. The reduction is a simple skolemization <ref> [12, Sec. 2.5.2] </ref>. It follows that every 1 k (respectively 1 k ) formula reduces to a 1 k (respectively 1 k ) formula with only one quantifier alternation in the first-order part. <p> Then 0 and 0 are equivalent over A 0 . Transform 0 to an equivalent 1 2 formula with first-order part in 0 2 about A. Then and are equivalent, which gives the desired contradiction. It is well known (see e.g. <ref> [12, Sec. 3.2] </ref>) that there exists a 1 2 formula without free individual variables that is not equivalent to any 1 1 formula over A. Thus it suffices to prove that every arithmetical 1 2 formula with first-order part in 0 2 is equivalent to an arithmetical 1 1 formula.
References-found: 12

