URL: http://www.cs.dartmouth.edu/~nicol/papers/ides/pads97-ides.ps
Refering-URL: http://www.cs.dartmouth.edu/~nicol/papers/ides/index.html
Root-URL: http://www.cs.dartmouth.edu
Title: Performance Modeling of the IDES Framework  
Author: David M. Nicol Michael M. Johnson 
Address: College Michael E. Goldsby Hanover, NH 03755  Livermore, CA 94550  
Affiliation: Dept. of Computer Science Ann S. Yoshimura Dartmouth  Sandia National Laboratories  
Abstract: The IDES project at Sandia National Laboratories is developing a large scale portable parallel simulator for use in stockpile stewardship. IDES will use the Breathing-Time-Buckets synchronization protocol; to support IDES development, this paper studies a performance model and describes performance experiments on expected workload and architectural parameters. A new parallel algorithm for terminating the window quickly is also described and analyzed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Felderman and L. Kleinrock. </author> <title> Bounds and approximations for self-initiating distributed simulation without lookhead. </title> <journal> ACM Trans. on Modeling and Computer Simulation, </journal> <volume> 1(4), </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: Performance modeling of parallel discrete-event simulations has proven to be a rich area, with a number of models addressing high level aspects of different synchronization protocols, e.g., <ref> [5, 1, 2, 3] </ref>. Our work is unique in this context with its focus on exploring performance on different architectures, using different strategies for communication. 3 A Model of a Parallel Simulation The IDES project aims to be portable across different communication architectures.
Reference: [2] <author> A. Ferscha. </author> <title> Probabilistic adaptive direct optimism control in time warp. </title> <booktitle> In Proceedings of the 1995 Workshop on Parallel and Distributed Simulation, </booktitle> <pages> pages 120-129, </pages> <address> Lake Placid, NY, </address> <year> 1995. </year> <booktitle> The Society of Computer Simulation. </booktitle>
Reference-contexts: Performance modeling of parallel discrete-event simulations has proven to be a rich area, with a number of models addressing high level aspects of different synchronization protocols, e.g., <ref> [5, 1, 2, 3] </ref>. Our work is unique in this context with its focus on exploring performance on different architectures, using different strategies for communication. 3 A Model of a Parallel Simulation The IDES project aims to be portable across different communication architectures.
Reference: [3] <author> M. Gupta, A. Kumar, and R. Shorey. </author> <title> Queueing models and stability of message flows in distributed simulators. </title> <booktitle> In Proceedings of the 1996 Workshop on Parallel and Distributed Simulation, </booktitle> <pages> pages 162-169, </pages> <address> Philadelphia, PA, </address> <year> 1996. </year> <booktitle> The Society of Computer Simulation. </booktitle>
Reference-contexts: Performance modeling of parallel discrete-event simulations has proven to be a rich area, with a number of models addressing high level aspects of different synchronization protocols, e.g., <ref> [5, 1, 2, 3] </ref>. Our work is unique in this context with its focus on exploring performance on different architectures, using different strategies for communication. 3 A Model of a Parallel Simulation The IDES project aims to be portable across different communication architectures.
Reference: [4] <author> W.D. Hillis and Jr. G.L. Steele. </author> <title> Data parallel algorithms. </title> <journal> CACM, </journal> <volume> 29(12) </volume> <pages> 1170-1183, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: In order to establish the end-of-window quickly and yet control the communication overhead of doing so, we have developed a device we call a preemptive min-reduction. It uses the usual reduction-tree organization <ref> [4] </ref> for calculating an associative reduction in dlog P e steps, using P dlog P e messages. Once a processor has a value to reduce, it goes through a sequence of pairwise synchronizations with a selected group of dlog P e other processors.
Reference: [5] <author> D. Nicol. </author> <title> Performance bounds on parallel self-initiating discrete-event simulations. </title> <journal> ACM Trans. on Modeling and Computer Simulation, </journal> <volume> 1(1) </volume> <pages> 24-50, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Two previous analytic efforts shed light on BTB performance, but neither attempted to capture the behavior of the protocol in real time. The first study is a stochastic study of YAWNS <ref> [5, 7] </ref>, that focused on the density of events within a synchronization window. <p> Performance modeling of parallel discrete-event simulations has proven to be a rich area, with a number of models addressing high level aspects of different synchronization protocols, e.g., <ref> [5, 1, 2, 3] </ref>. Our work is unique in this context with its focus on exploring performance on different architectures, using different strategies for communication. 3 A Model of a Parallel Simulation The IDES project aims to be portable across different communication architectures.
Reference: [6] <author> D. Nicol. </author> <title> Conservative parallel simulation of priority class queueing networks. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 3(3) </volume> <pages> 294-303, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: This forces us towards a synchronization strategy that effectively accommodates aggregation of objects. Because of the memory constraint, our original goal was to avoid optimistic methods and their state-saving requirements by using the conservative synchronization method YAWNS <ref> [6, 7] </ref>. We were attracted to YAWNS by its mathematical guarantee of ample parallelism for models containing a certain type of lookahead. However, deeper analysis of IDES model characteristics showed that some objects lack the predictive capability required by YAWNS.
Reference: [7] <author> D. Nicol. </author> <title> The cost of conservative synchronization in parallel discrete-event simulations. </title> <journal> Journal of the ACM, </journal> <volume> 40(2) </volume> <pages> 304-333, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: This forces us towards a synchronization strategy that effectively accommodates aggregation of objects. Because of the memory constraint, our original goal was to avoid optimistic methods and their state-saving requirements by using the conservative synchronization method YAWNS <ref> [6, 7] </ref>. We were attracted to YAWNS by its mathematical guarantee of ample parallelism for models containing a certain type of lookahead. However, deeper analysis of IDES model characteristics showed that some objects lack the predictive capability required by YAWNS. <p> Two previous analytic efforts shed light on BTB performance, but neither attempted to capture the behavior of the protocol in real time. The first study is a stochastic study of YAWNS <ref> [5, 7] </ref>, that focused on the density of events within a synchronization window.
Reference: [8] <author> M. Raynal. </author> <title> Distributed Algorithms and Protocols. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: Since this is an upper bound, performance measures so obtained are no better than measures obtained from a more exact analysis. The preemptive min-reduction can be implemented in a serial communication medium by modifying any distributed termination detection algorithm, e.g. see <ref> [8] </ref>. Details are straightforward. 3.3 Message Transfer The key assumptions in our analysis of message transfer delays are that we account for the cost of communication at the sender's end; we assume that if a machine has K messages to send, then those messages are sent serially.
Reference: [9] <author> J. Steinman. </author> <title> Discrete-event simulation and the event horizon. </title> <booktitle> In Proceedings of the 1994 Workshop on Parallel and Distributed Simulation, </booktitle> <pages> pages 39-49, </pages> <address> Edinburgh, Scotland, </address> <year> 1994. </year> <booktitle> The Society of Computer Simulation. </booktitle>
Reference-contexts: Two previous analytic efforts shed light on BTB performance, but neither attempted to capture the behavior of the protocol in real time. The first study is a stochastic study of YAWNS [5, 7], that focused on the density of events within a synchronization window. The analysis of BTB in <ref> [9] </ref> used differential equations, but came to qualitatively the same conclusion|the density of concurrently simulatable events in a window increases as the number of objects increases, even though the window size is decreasing.
Reference: [10] <author> J. Steinman. </author> <title> SPEEDES:A Multiple Synchronization Environment for Parallel Discrete Event Simulation. </title> <booktitle> In International Journal in Computer Simulation , Vol. </booktitle> <volume> 2, </volume> <pages> pages 251-286, </pages> <year> 1992. </year>
Reference-contexts: However, deeper analysis of IDES model characteristics showed that some objects lack the predictive capability required by YAWNS. The "optimistic" version of YAWNS is Steinman's Breathing Time Buckets (BTB) protocol, used in SPEEDES <ref> [10] </ref>. This paper reports on our work developing a model of BTB, and an algorithm for accelerating its window computation. We are using this model to study the performance ramifications of differing architectural configurations, of differing communication costs, and to investigate the potential for alternative communication and synchronization schemes.
References-found: 10

