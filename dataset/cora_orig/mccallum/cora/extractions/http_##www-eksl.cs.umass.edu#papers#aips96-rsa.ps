URL: http://www-eksl.cs.umass.edu/papers/aips96-rsa.ps
Refering-URL: http://eksl-www.cs.umass.edu/publications.html
Root-URL: 
Email: stamant@cs.umass.edu, cohen@cs.umass.edu  
Phone: (413) 545-3616, fax (413) 545-1249  
Title: A Planner for Exploratory Data Analysis  
Author: Robert St. Amant and Paul R. Cohen 
Keyword: reactive planning, partial hierarchical planning, statistics, exploratory data analysis  
Address: Box 34610 Amherst, MA 01003-4610  
Affiliation: Computer Science Dept., LGRC University of Massachusetts  
Abstract: Statistical exploratory data analysis (EDA) poses a difficult search problem. However, the EDA process lends itself to a planning formulation. We have built a system, called Aide, to help users explore data. Aide relies on partial hierarchical planning, a form of planning appropriate for tasks in complex, uncertain environments. Our description of the EDA task and the Aide system provides a case study of the successful application of planning to a novel domain. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Norman Carver and Victor Lesser. </author> <title> A planner for the control of problem solving sys tems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, special issue on Planning, Scheduling, and Control, </journal> <volume> 23(6), </volume> <month> November </month> <year> 1993. </year>
Reference-contexts: Systems that use the approach include PRS [5], the Phoenix planner [3], the RESUN system <ref> [1] </ref>, and to some extent languages for reactive control such as PROPEL [8]. Our design of the Aide planner is largely based on experience with Phoenix and RESUN. In abstract terms, the Aide planner does little more than manipulate a stack of control units. <p> The RESUN planner establishes focus points during its plan expansion to allow suspension and resumption of in-progress plans, as a way of focusing attention in its search <ref> [1] </ref>. These mechanisms let the planners behave opportunistically. Reactive planning techniques provide a good match for the EDA problem. Though there are no hard time constraints on the process, the space of exploration is highly dynamic, in that each action can provide potentially significant information.
Reference: [2] <author> Paul R. Cohen. </author> <booktitle> Empirical Methods in Artificial Intelligence. </booktitle> <publisher> MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: The process is constructive and opportunistic. A more detailed account of the application of these procedures to the Phoenix data is given in Empirical Methods in Artificial Intelligence <ref> [2] </ref>. 3 Abstractions in Exploration In Exploratory Data Analysis, John Tukey describes EDA in this way: A basic problem about any body of data is to make it more easily and effectively handleable by minds|our minds, her mind, his mind.
Reference: [3] <author> Paul R. Cohen, Michael L. Greenberg, David M. Hart, and Adele E. Howe. </author> <title> Trial by fire: Understanding the design requirements for agents in complex environments. </title> <journal> AI Magazine, </journal> <volume> 10(3) </volume> <pages> 32-48, </pages> <month> Fall </month> <year> 1989. </year>
Reference-contexts: We conclude by showing where Aide fits in the context of approaches to planning. 2 An EDA Example We can best illustrate the EDA process with an example, taken from an experiment with Phoenix, a simulation of forest fires and fire-fighting agents in Yellowstone National Park <ref> [3] </ref>. The experiment involved setting a fire at a fixed location and specified time, and observing the behavior of the fireboss (the planner) and the bulldozers (the agents that put out the fire). <p> Systems that use the approach include PRS [5], the Phoenix planner <ref> [3] </ref>, the RESUN system [1], and to some extent languages for reactive control such as PROPEL [8]. Our design of the Aide planner is largely based on experience with Phoenix and RESUN. In abstract terms, the Aide planner does little more than manipulate a stack of control units.
Reference: [4] <author> Michael P. Georgeff and Amy L. Lansky. </author> <title> Procedural knowledge. </title> <journal> Proceedings of the IEEE Special Issue on Knowledge Representation, </journal> <volume> 74(10) </volume> <pages> 1383-1398, </pages> <year> 1986. </year>
Reference-contexts: A planner for exploration should be able to represent goals, to encode potentially complex control procedures, to adapt opportunistically to new findings, and to generate a structured set of justifications for its actions and support for its results. 4 The Planner A form of reactive planning called partial hierarchical planning <ref> [4] </ref> turns out to be a good match for the task. Systems that use the approach include PRS [5], the Phoenix planner [3], the RESUN system [1], and to some extent languages for reactive control such as PROPEL [8]. <p> We are currently designing a full set of experiments to evaluate its performance. 6 Related Work in Planning Partial hierarchical planning was introduced by Georgeff and Lansky <ref> [4] </ref>. Several characteristics distinguish it from classical planning. In the classical formulation a plan is a partially-ordered sequence of actions, often with annotated links between actions. In partial hierarchical planners, a plan is a procedural specification of a set of subgoals to be achieved.
Reference: [5] <author> Michael P. Georgeff and Amy L. Lansky. </author> <title> Reactive reasoning and planning. </title> <booktitle> In Proceed ings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 677-682. </pages> <booktitle> American Association for Artificial Intelligence, </booktitle> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: Systems that use the approach include PRS <ref> [5] </ref>, the Phoenix planner [3], the RESUN system [1], and to some extent languages for reactive control such as PROPEL [8]. Our design of the Aide planner is largely based on experience with Phoenix and RESUN. <p> Meta-level processing can be handled in different ways. PRS uses meta-level "knowledge areas" that function something like blackboard knowledge sources for control <ref> [5] </ref>. The Phoenix planner maintains a time line of subgoals and pending plans, and gives 11 each plan a degree of meta-level control over the actions remaining to be executed.
Reference: [6] <author> David C. Hoaglin, Frederick Mosteller, and John W. Tukey. </author> <title> Understanding robust and exploratory data analysis. </title> <publisher> Wiley, </publisher> <year> 1983. </year> <month> 12 </month>
Reference-contexts: We need to identify suggestive features of the data, interpret the patterns these features indicate, and generate hypotheses to explain the patterns. Successive steps through the process lead us gradually to a better understanding of underlying structure in the data <ref> [11, 6] </ref>. Exploratory data analysis (EDA) [16] gives us a powerful set of operations for this process: we fit linear and higher-order functions to relationships; we compose and transform variables with arithmetic functions; we separate relationships into partitions and clusters; we extract features through statistical summaries.
Reference: [7] <author> Richard E. Korf. </author> <title> Planning as search: A quantitative approach. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 65-88, </pages> <year> 1987. </year>
Reference-contexts: While sometimes novel procedures are constructed from scratch, variations on existing procedures are much more common. Knowledge of abstraction, problem decomposition, and common combinations of operations lets us restructure the EDA search space, to make it more manageable. These elements identify exploration as a planning problem <ref> [7] </ref>. There are many different approaches to planning, however. Other characteristics of the domain help us refine our understanding of the type of planning involved. Exploratory procedures require control structures more complex than simple sequences of operations.
Reference: [8] <author> Richard Levinson. </author> <title> A general programming language for unified planning and control. </title> <note> To appear in the Artificial Intelligence Journal's special issue on Planning and Scheduling. </note>
Reference-contexts: Systems that use the approach include PRS [5], the Phoenix planner [3], the RESUN system [1], and to some extent languages for reactive control such as PROPEL <ref> [8] </ref>. Our design of the Aide planner is largely based on experience with Phoenix and RESUN. In abstract terms, the Aide planner does little more than manipulate a stack of control units. The planner is essentially a high-level language interpreter, in which the *active-stack* stores the current execution context.
Reference: [9] <author> David Lubinsky and Daryl Pregibon. </author> <title> Data analysis as search. </title> <journal> Journal of Econometrics, </journal> <volume> 38 </volume> <pages> 247-268, </pages> <year> 1988. </year>
Reference-contexts: In its exploration of the Phoenix dataset Aide would spend time exploring relationships that are completely uninteresting to us, or establishing descriptions of factors we are already familiar with. Human knowledge of context can be essential in focusing on interesting or significant areas in the exploration search space <ref> [9, 12] </ref>. To take advantage of this knowledge, Aide pursues a mixed-initiative approach to exploration. Exploration is mixed-initiative in the following sense. Aide explores a dataset by elaborating and executing a hierarchy of plans. Branch points in the hierarchy are associated with explicit focus points.
Reference: [10] <author> Frederick Mosteller and John W. Tukey. </author> <title> Data Analysis and Regression. </title> <publisher> Addison-Wesley, </publisher> <year> 1977. </year>
Reference-contexts: This brief account gives the flavor of EDA. Note our use of indications in the analysis. Indications are suggestive characteristics of the data, most often involving evaluation of a statistic or descriptive structure <ref> [10] </ref>.
Reference: [11] <author> Stanley A. </author> <title> Mulaik. </title> <journal> Exploratory statistics and empiricism. Philosophy of Science, </journal> <volume> 52 </volume> <pages> 410-430, </pages> <year> 1985. </year>
Reference-contexts: We need to identify suggestive features of the data, interpret the patterns these features indicate, and generate hypotheses to explain the patterns. Successive steps through the process lead us gradually to a better understanding of underlying structure in the data <ref> [11, 6] </ref>. Exploratory data analysis (EDA) [16] gives us a powerful set of operations for this process: we fit linear and higher-order functions to relationships; we compose and transform variables with arithmetic functions; we separate relationships into partitions and clusters; we extract features through statistical summaries.
Reference: [12] <author> Cullen Schaffer. </author> <title> Domain-independent scientific function finding. </title> <institution> Department of Com puter Science Technical Report LCSR-TR-149, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <year> 1990. </year> <type> PhD Thesis. </type>
Reference-contexts: In its exploration of the Phoenix dataset Aide would spend time exploring relationships that are completely uninteresting to us, or establishing descriptions of factors we are already familiar with. Human knowledge of context can be essential in focusing on interesting or significant areas in the exploration search space <ref> [9, 12] </ref>. To take advantage of this knowledge, Aide pursues a mixed-initiative approach to exploration. Exploration is mixed-initiative in the following sense. Aide explores a dataset by elaborating and executing a hierarchy of plans. Branch points in the hierarchy are associated with explicit focus points.
Reference: [13] <author> Robert St. Amant and Paul R. Cohen. </author> <title> Toward the integration of exploration and mod eling in a planning framework. </title> <booktitle> In Proceedings of the AAAI-94 Workshop in Knowledge Discovery in Databases, </booktitle> <year> 1994. </year>
Reference-contexts: This example comes from a single analysis, one already performed largely by hand. Aide can reproduce this analysis, and has been applied to other datasets to generate cluster and regression models and in an earlier version causal models in the course of its exploration <ref> [14, 13] </ref>. We are currently designing a full set of experiments to evaluate its performance. 6 Related Work in Planning Partial hierarchical planning was introduced by Georgeff and Lansky [4]. Several characteristics distinguish it from classical planning.
Reference: [14] <author> Robert St. Amant and Paul R. Cohen. </author> <title> A case study in planning for exploratory data analysis. </title> <booktitle> In Proceedings of the First International Symposium on Intelligent Data Analysis, </booktitle> <year> 1995. </year>
Reference-contexts: This example comes from a single analysis, one already performed largely by hand. Aide can reproduce this analysis, and has been applied to other datasets to generate cluster and regression models and in an earlier version causal models in the course of its exploration <ref> [14, 13] </ref>. We are currently designing a full set of experiments to evaluate its performance. 6 Related Work in Planning Partial hierarchical planning was introduced by Georgeff and Lansky [4]. Several characteristics distinguish it from classical planning.
Reference: [15] <author> Robert St. Amant and Paul R. Cohen. </author> <title> Control representation in an EDA assistant. </title> <editor> In Douglas Fisher and Hans Lenz, editors, </editor> <booktitle> Learning from Data: AI and Statistics V. </booktitle> <publisher> Springer, </publisher> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: We have designed and implemented an Assistant for Intelligent Data Exploration, Aide, to help users carry out their exploration <ref> [15] </ref>. In Aide, data-directed mechanisms extract simple observations and suggestive indications from the data. EDA operations then act in a goal-directed fashion to generate more extensive descriptions of the data. The system is mixed-initiative, autonomously pursuing its own goals while still allowing the user to guide or override its decisions. <p> It is easy to see, for example, that constructing a histogram involves the same procedures as constructing a contingency table: the contingency table is a two-dimensional analog of the histogram, with cell counts corresponding to bin heights <ref> [15] </ref>. We can draw similar analogies between procedures for smoothing and for generating kernel density estimates, or between resistant line fitting and locally-weighted regression curves. While sometimes novel procedures are constructed from scratch, variations on existing procedures are much more common.
Reference: [16] <author> John W. Tukey. </author> <title> Exploratory Data Analysis. </title> <publisher> Addison-Wesley, </publisher> <year> 1977. </year> <month> 13 </month>
Reference-contexts: We need to identify suggestive features of the data, interpret the patterns these features indicate, and generate hypotheses to explain the patterns. Successive steps through the process lead us gradually to a better understanding of underlying structure in the data [11, 6]. Exploratory data analysis (EDA) <ref> [16] </ref> gives us a powerful set of operations for this process: we fit linear and higher-order functions to relationships; we compose and transform variables with arithmetic functions; we separate relationships into partitions and clusters; we extract features through statistical summaries. <p> So we shall always be glad (a) to simplify description and (b) to describe one layer deeper <ref> [16, p.v] </ref>. Tukey's account of exploration emphasizes two related aspects: description through abstraction and description by hierarchical problem decomposition. Abstraction is ubiquitous in exploration.
References-found: 16

