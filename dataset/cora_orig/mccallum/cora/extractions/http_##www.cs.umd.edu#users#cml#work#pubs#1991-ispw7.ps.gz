URL: http://www.cs.umd.edu/users/cml/work/pubs/1991-ispw7.ps.gz
Refering-URL: http://www.cs.umd.edu/users/cml/work/pubs/
Root-URL: 
Email: E-mail address: dieter@cs.umd.edu  
Phone: Tel.: (301) 405-2707  
Title: A MVP-L Solution for the Software-Process Modeling Problem  
Author: Christopher M. Lott Marcos Pantelis H. Dieter Rombach 
Date: October 1991  
Note: Presented at ISPW-7, Yountsville, CA,  
Address: College Park, Maryland 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: This paper gives a solution in MVP-L to the Software Process Modeling Example Problem that was presented at the 7th International Software Process Workshop. MVP-L is a prototype process specification and design language developed as part of the MVP project at the University of Maryland. The solution presented here is a revision of the solution submitted for ISPW-6 according to the extensions requested by the program committee for ISPW-7. Changes in the language and the previous solution are discussed, and some future changes to MVP-L are outlined.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. R. Basili. </author> <title> Software Development: A Paradigm for the Future, </title> <booktitle> Proceedings of the Thirteenth Annual International Computer Science and Applications Conference, </booktitle> <address> Orlando, Florida, </address> <month> September </month> <year> 1989, </year> <pages> pp. 471-485. </pages>
Reference-contexts: 1 Introduction The MVP project at the University of Maryland focuses on methods for developing, representing, and using software process models in the context of the quality improvement paradigm <ref> [1, 2] </ref>. MVP-L is a prototype process representation language developed as part of the MVP project.
Reference: [2] <author> V. R. Basili and H. D. Rombach. </author> <title> The TAME Project: Towards Improvement-Oriented Software Environments, </title> <journal> IEEE Transactions on Software Engineering, v. SE-14, n. </journal> <volume> 6, </volume> <month> June </month> <year> 1988, </year> <pages> pp. 758-773. </pages>
Reference-contexts: 1 Introduction The MVP project at the University of Maryland focuses on methods for developing, representing, and using software process models in the context of the quality improvement paradigm <ref> [1, 2] </ref>. MVP-L is a prototype process representation language developed as part of the MVP project.
Reference: [3] <author> C. D. Klingler, C. M. Lott, H. D. Rombach, M. Neviaser, and A. Marmor-Squires. </author> <title> A Process Programming Experiment: Initial Lessons Learned, </title> <type> Technical Report, </type> <institution> TRW Systems Division, Fairfax, </institution> <address> VA 22031. </address> <month> 6 </month>
Reference-contexts: Finally, possible future changes to MVP-L that were motivated in part by the ISPW-7 problem are outlined. 2 Changes Since ISPW-6 We made a number of changes to the MVP-L language that were motivated by our work on the ISPW-6 solution as well as other efforts <ref> [8, 3] </ref>.
Reference: [4] <author> Christopher M. Lott and H. Dieter Rombach. </author> <title> An MVP-L1 Solution for the Software Pro--cess Modeling Problem, </title> <booktitle> Proceedings of the Sixth International Software Process Workshop, </booktitle> <address> Hakodate, Hokkaido, Japan, 29-31 October 1990; publ. </address> <publisher> by IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: The MVP-L solution presented in this paper is a revision of the solution submitted for ISPW-6 <ref> [4] </ref>. This revision reflects some recent changes in the representation language as well as changes made to the example problem. Both kinds of changes are discussed in this paper.
Reference: [5] <author> H. Dieter Rombach. </author> <title> A Specification Framework for Software Processes: Formal Specification and Derivation of Information Base Requirements, </title> <booktitle> Proceedings of the 4th International Software Process Workshop published as ACM Software Enginering Notes v. </booktitle> <volume> 14, </volume> <editor> n. </editor> <volume> 4, </volume> <month> June </month> <year> 1989, </year> <pages> pp. 85-90. </pages>
Reference: [6] <author> H. Dieter Rombach. </author> <title> An Experimental Process Modeling Language: Lessons Learned from Modeling a Maintenance Environment, </title> <booktitle> Proceedings of the Conference on Software Maintenance - 1989, IEEE, </booktitle> <month> October 16-19, </month> <year> 1989. </year>
Reference: [7] <author> H. Dieter Rombach. MVP-L: </author> <title> A Language for Process Modeling In-the-Large, </title> <institution> University of Maryland Institute for Advanced Computer Studies Technical Report UMIACS-TR-91-96, CS-TR-2709, Department of Computer Science, University of Maryland, College Park, MD 20742. </institution>
Reference-contexts: The language was designed to enable specifying and designing real-world software processes, packaging processes into reusable models, instantiating models in the context of new project plans, analyzing project plans, and enacting project plans to guide projects <ref> [7] </ref>. The MVP-L solution presented in this paper is a revision of the solution submitted for ISPW-6 [4]. This revision reflects some recent changes in the representation language as well as changes made to the example problem. Both kinds of changes are discussed in this paper. <p> Among other uses, initial values of object attributes may be specified in this way. For example, parameter to set the initial value of the status attribute for objects instantiated using that type description. 2.2 Execution semantics The execution model for MVP-L is based on the notion of project state <ref> [7] </ref>. This section defines the notion of project state, and discusses how transitions between project states are guided by criteria. 2.2.1 Project state Project state is defined as the union of all attribute values of all objects instantiated within a project plan or as descendants of the plan.
Reference: [8] <author> H. Dieter Rombach and Brad T. Ulery. </author> <title> Improving Software Maintenance Through Measurement, </title> <booktitle> Proceedings of the IEEE, v. </booktitle> <volume> 77, </volume> <editor> n. </editor> <volume> 4, </volume> <month> April </month> <year> 1989, </year> <pages> pp. 581-595. </pages>
Reference-contexts: Finally, possible future changes to MVP-L that were motivated in part by the ISPW-7 problem are outlined. 2 Changes Since ISPW-6 We made a number of changes to the MVP-L language that were motivated by our work on the ISPW-6 solution as well as other efforts <ref> [8, 3] </ref>.
Reference: [9] <author> H. Dieter Rombach and Leo Mark. </author> <title> Software Process and Product Specifications: A Basis for Generating Customized Software Engineering Information Bases, </title> <booktitle> Proceedings of the 22nd Annual Hawaii International Conference on System Sciences, Vol. II Software Track, IEEE, </booktitle> <month> January </month> <year> 1989, </year> <pages> pp. 165-174. 7 </pages>
References-found: 9

