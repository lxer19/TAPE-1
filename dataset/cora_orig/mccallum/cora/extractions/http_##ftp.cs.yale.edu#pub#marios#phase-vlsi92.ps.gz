URL: http://ftp.cs.yale.edu/pub/marios/phase-vlsi92.ps.gz
Refering-URL: http://ftp.cs.yale.edu/pub/marios/
Root-URL: http://www.cs.yale.edu
Title: Optimizing Two-Phase, Level-Clocked Circuitry (Extended Abstract) proper timing: O(V E) time. minimizing the clock period
Author: Alexander T. Ishii Charles E. Leiserson Marios C. Papaefthymiou 
Note: verifying  
Address: Princeton, New Jersey 08540  Cambridge, Massachusetts 02139  
Affiliation: NEC C&C Research Laboratories  MIT Laboratory for Computer Science  
Abstract: We investigate two strategies for reducing the clock period of a two-phase, level-clocked circuit: clock tuning, which adjusts the waveforms that clock the circuit, and retiming, which relocates circuit latches. These methods can be used to convert a circuit with edge-triggered latches into a faster level-clocked one. We model a two-phase circuit as a graph whose vertex set V is a collection of combinational logic blocks, and whose edge set E is a set of interconnections. Each interconnection passes through 0 or more latches, where each latch is clocked by one of two periodic, nonoverlapping waveforms, or phases. We give efficient polynomial-time algorithms for problems involving the timing verification and optimization of two-phase circuitry. Included are algorithms for By characterizing the set of possible clock periods under any retiming of the circuit, we are able to obtain polynomial-time algorithms for clock period minimization by Obviously, this last algorithm is not practical. For this problem, however, we give a fully polynomial-time approximation scheme that achieves the optimal period to within any given relative error bound e &gt; 0 and runs in O(V 3 (1=e) lg(1=e) + (V E + V 2 lg V ) lg(V =e)) time. We also give fully polynomial-time approximation schemes for the first two of these three period-minimization retiming problems. These two algorithms run in O((V E + V 2 lg V ) lg(V =e)) and O(V 3 lg(V =e)) time, respectively, and can be used to obtain the optimum clock period in the special case where all propagation delays are integers. We generalize most of the results for two-phase clocking schemes to simple mul-tiphase clocking disciplines, including ones with overlapping phases. Typically, the 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: In each pass, it first considers the edges with w 0 (e) &gt; 0, and then the edges with w 0 (e) = 0 in topological sort order. Since a topological sort can be computed in O (E) time <ref> [1] </ref>, Step 2 terminates in O (V E) time. Step 3 checks O (V 2 ) constraints in O (V 2 ) time. Finally, Step 4 can be performed in O (V E) time using the Bellman-Ford algorithm [1]. <p> Since a topological sort can be computed in O (E) time <ref> [1] </ref>, Step 2 terminates in O (V E) time. Step 3 checks O (V 2 ) constraints in O (V 2 ) time. Finally, Step 4 can be performed in O (V E) time using the Bellman-Ford algorithm [1]. <p> We can compute these constraints by applying Johnson's O (V E + V 2 lg V )-time algorithm for all-pairs shortest-paths <ref> [1] </ref>. The problem of retiming to achieve a general, two-phase clocking scheme, as described by the set of inequalities (11) and (16), is an instance of a general feasibility problem that we call an integer monotonic program. This problem is defined as follows.
Reference: [2] <author> M. R. Daganais and N. C. Rumin. </author> <title> Automatic determination of optimal clocking parameters in synchronous mos vlsi circuits. </title> <booktitle> In Advanced Research in VLSI: Proc. of the 5th MIT Conference, </booktitle> <pages> pages 19-33, </pages> <year> 1988. </year>
Reference-contexts: We give an O (V E)-time algorithm that computes an optimal clock tuning for any given two-phase circuit. Previous algorithms for clock tuning have either addressed alternate types of clocking methodologies [23, 20, 4], or been uncharacterized with respect to worst-case running time <ref> [2, 21] </ref>. Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit.
Reference: [3] <author> G. B. Dantzig, W. Blattner, and M. R. Rao. </author> <title> Finding a cycle in a graph with minimum cost to times ratio with application to a ship routing problem. Theory of Graphs, 1967. </title> <editor> P. Rosenstiehl, editor, Dunod, Paris, and Gordon and Breach, </editor> <address> New York, </address> <pages> pp. 77-84. </pages>
Reference-contexts: This lower bound can be found in O (V E) time by solving a "tramp steamer" problem. The tramp steamer problem (also known as the minimum cost-to-time ratio cycle problem) was formulated in <ref> [3] </ref> as follows.
Reference: [4] <author> J. P. Fishburn. </author> <title> Clock skew optimization. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(7) </volume> <pages> 945-951, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: We give an O (V E)-time algorithm that computes an optimal clock tuning for any given two-phase circuit. Previous algorithms for clock tuning have either addressed alternate types of clocking methodologies <ref> [23, 20, 4] </ref>, or been uncharacterized with respect to worst-case running time [2, 21]. Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit.
Reference: [5] <author> M. Hartmann and J. Orlin. </author> <title> Finding minimum cost to time ratio cycles with small integral transit times. </title> <type> Technical Report UNC/OR/TR/91-19, </type> <institution> University of North Carolina, Chapel Hill, </institution> <month> October </month> <year> 1991. </year>
Reference-contexts: Let R (G) be the minimum cost-to-time ratio of any cycle in G. Then Inequality (6) is satisfied if and only if 2 fi fi fi : (9) Using the algorithm for the tramp steamer problem given in <ref> [5] </ref>, the cycle constraints can be checked in O (V E) time. In order to obtain this running time, we must guarantee that the transit time of any path with jV j edges is O (V ).
Reference: [6] <author> A. T. Ishii. </author> <title> Timing in Level-Clocked Circuits. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1991. </year> <note> Available as MIT/LCS/TR-522. </note>
Reference-contexts: Each latch is clocked by either 0 or 1 . A general framework for the timing verification of level-clocked circuits has been given in [7]. Extensive details of [7], and some details of this work, appear in <ref> [6] </ref>. An example of a two-phase, level-clocked circuit is given in Figure 2 (a). The integers in the vertices signify propagation delays. <p> It should be noted that, as in <ref> [7, 6] </ref>, the notion of proper timing assumed in this paper is structural, in the sense that we require that a circuit be properly timed regardless of the functions computed by the functional elements. This requirement avoids potential difficulties with computational intractability.
Reference: [7] <author> A. T. Ishii and C. E. Leiserson. </author> <title> A timing analysis of level-clocked circuitry. </title> <booktitle> In Advanced Research in VLSI: Proceedings of the Sixth MIT Conference, </booktitle> <pages> pages 113-130, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Each latch is clocked by either 0 or 1 . A general framework for the timing verification of level-clocked circuits has been given in <ref> [7] </ref>. Extensive details of [7], and some details of this work, appear in [6]. An example of a two-phase, level-clocked circuit is given in Figure 2 (a). The integers in the vertices signify propagation delays. <p> Each latch is clocked by either 0 or 1 . A general framework for the timing verification of level-clocked circuits has been given in <ref> [7] </ref>. Extensive details of [7], and some details of this work, appear in [6]. An example of a two-phase, level-clocked circuit is given in Figure 2 (a). The integers in the vertices signify propagation delays. <p> Our first new result is an O (V E)-time algorithm that verifies whether a level-clocked circuit is properly timed by a given two-phase clocking scheme. This result improves the O (E 2 ) bound obtained when the general algorithm from <ref> [7] </ref> is applied to the special case of two-phase, level-clocked circuits. (The bound in [7] is also O (V E), but the circuit model used in that paper represented both functional elements and latches as vertices, and interconnections between them as edges. <p> This result improves the O (E 2 ) bound obtained when the general algorithm from <ref> [7] </ref> is applied to the special case of two-phase, level-clocked circuits. (The bound in [7] is also O (V E), but the circuit model used in that paper represented both functional elements and latches as vertices, and interconnections between them as edges. Translating their bound to the model presented here yields the O (E 2 ) bound. The algorithm in [7] applies to more general <p> circuits. (The bound in <ref> [7] </ref> is also O (V E), but the circuit model used in that paper represented both functional elements and latches as vertices, and interconnections between them as edges. Translating their bound to the model presented here yields the O (E 2 ) bound. The algorithm in [7] applies to more general circuits than two-phase ones, however.) Our next result deals with modifying, or tuning, the clocking scheme of a circuit|that is, providing the circuit with new clocking waveforms. <p> The set of conditions, or timing constraints, is based on the general formulation from <ref> [7] </ref>, but is substantially simplified by the additional structure inherent in two-phase, level-clocked circuits. A level-clocked circuit is a set of interconnected functional elements, and level-clocked latches. <p> Intuitively, a level-clocked circuit is properly timed if whenever a latch holds a value (i.e., whenever its clock input is low), it holds the same value it would in an identical circuit in which all functional elements have zero propagation delay. Ishii and Leiserson <ref> [7] </ref> give a set of "-constraints" that serve as a necessary and sufficient set of conditions for the proper timing of a general class of level-clocked circuits. <p> It should be noted that, as in <ref> [7, 6] </ref>, the notion of proper timing assumed in this paper is structural, in the sense that we require that a circuit be properly timed regardless of the functions computed by the functional elements. This requirement avoids potential difficulties with computational intractability. <p> This bound is better than the O (E 2 ) bound that one obtains by applying the general verification algorithm in <ref> [7] </ref> to two-phase circuits. The verification algorithm Verify is shown in Figure 4. The algorithm determines whether a circuit is properly timed by checking certain constraints which can be shown to be equivalent to the path constraints in Lemma 2. <p> Nonsimple multiphase circuits also exhibit many subtleties. A path in such circuits may pass through latches in an arbitrary order, rather than the canonical order assumed in a simple multiphase circuit. Though the proper timing of such circuits can be verified using the analysis and algorithms from <ref> [7] </ref>, the timing optimization of such circuits is possibly more complex than even precharged circuits. Whether these problems have efficient solutions is a topic for further research.
Reference: [8] <author> D. B. Johnson. </author> <title> Efficient algorithms for shortest paths in sparse networks. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 24(1) </volume> <pages> 1-13, </pages> <month> January </month> <year> 1977. </year>
Reference: [9] <author> C. E. Leiserson, F. M. Rose, and J. B. Saxe. </author> <title> Optimizing synchronous circuitry by retiming. </title> <booktitle> 3rd Caltech Conference on VLSI, </booktitle> <year> 1983. </year> <editor> R. Bryant, </editor> <publisher> ed., </publisher> <pages> pp. 87-116. </pages>
Reference-contexts: Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit. Retiming has been well studied in the context of edge-triggered circuits <ref> [9, 12, 19] </ref>, and has been the subject of study in the context of single-phase, level-clocked circuits [14, 22]. We extend this technique to encompass the optimization of two-phase, level-clocked circuits. We consider three retiming problems.
Reference: [10] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing synchronous systems. </title> <journal> Journal of VLSI and Computer Systems, </journal> <volume> 1(1) </volume> <pages> 41-67, </pages> <year> 1983. </year>
Reference-contexts: The first algorithm is optimized for the special case of a symmetric clocking scheme, where 0 = 1 and * 0 = * 1 . Like other previous retiming results <ref> [10, 22] </ref> the algorithm casts retiming for a symmetric clocking scheme as a mixed-integer linear program. The overall running time of the algorithm is O (V E + V 2 lg V ). <p> The second algorithm can be applied to arbitrary two-phase clocking schemes and relies on a new technique we call integer monotonic programming. The second algorithm runs in O (V 3 ) time. Adopting the notation from <ref> [10] </ref>, a circuit G r = hV; E; d; w r ; r i is a legal retim-ing of another circuit G = hV; E; d; w; i if, for some retiming function r : V ! Z, we have w (e) + r (v) r (u) 0 (11) for every
Reference: [11] <author> C. E. Leiserson and J. B. Saxe. </author> <title> A mixed-integer programming problem which is efficiently solvable. </title> <journal> Journal of Algorithms, </journal> <volume> 9 </volume> <pages> 114-128, </pages> <year> 1988. </year>
Reference-contexts: the following conditions are satisfied: r (u) r (v) w (e) for all u ! v 2 E R (u) R (v) w (e) 2 e r (v) R (v) 2 2 (15) The constraints defined in Theorem 6 form a mixed-integer linear program of the special form MI from <ref> [11] </ref>. Problem MI can be solved in O (V E + V 2 lg V ) time by applying Algorithm MILP from [11], which gives us an O (V E + V 2 lg V ) algorithm for retiming when the clocking scheme utilized by the circuit is symmetric. <p> w (e) 2 e r (v) R (v) 2 2 (15) The constraints defined in Theorem 6 form a mixed-integer linear program of the special form MI from <ref> [11] </ref>. Problem MI can be solved in O (V E + V 2 lg V ) time by applying Algorithm MILP from [11], which gives us an O (V E + V 2 lg V ) algorithm for retiming when the clocking scheme utilized by the circuit is symmetric. <p> the natural analog of the two-phase constraints (15): r (u) r (v) w (e) for all u ! v 2 E R (u) R (v) w (e) k e r (v) R (v) k As with the two-phase constraints, these constraints can be solved using the algo rithm MILP from <ref> [11] </ref>. Retiming with unequal phases. Even when clock phases are not symmetric, we can retime to achieve a given simple k-phase clocking scheme in O (kV 3 ) time. For simple multiphase circuits, inequalities analogous to Inequality (16) are easily formulated as simple summations.
Reference: [12] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <journal> Algorithmica, </journal> <volume> 6(1), </volume> <year> 1991. </year> <note> Also available as MIT/LCS/TM-372. </note>
Reference-contexts: Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit. Retiming has been well studied in the context of edge-triggered circuits <ref> [9, 12, 19] </ref>, and has been the subject of study in the context of single-phase, level-clocked circuits [14, 22]. We extend this technique to encompass the optimization of two-phase, level-clocked circuits. We consider three retiming problems. <p> There are, however, several topics which appear more amenable to efficient algorithmic solutions. The first of these is the incorporation of functional elements where the propagation delay may differ for different input-output pairs (the "nonuniform propagation delay" model from <ref> [12] </ref>). Incorporating such elements changes the time complexities of our algorithms, but the essential algorithms remain unchanged. Another generalization of the circuit model involves the incorporation of minimum propagation delays (sometimes called "contamination" delays).
Reference: [13] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of multi-phase level-clocked circuits. </title> <type> Technical Report TR 91-10-01, </type> <institution> Dept. of Comp. Sci and Eng., University of Washington, </institution> <address> Seattle, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: Finally, Section 9 presents some concluding remarks. Due to space limitations, most proofs in this extended abstract have been omitted. These will appear in the final version of the paper. In independent work, Lockyear and Ebeling <ref> [13] </ref> have also obtained algorithms for retiming multiphase, level-clocked circuits. Their results include an O (V 3 )-time algorithm to determine whether a given clock period can be achieved by retiming when all clock phases are symmetric.
Reference: [14] <author> S. Malik, E. Sentovich, R. K. Brayton, and A. Sangiovanni-Vincentelli. Re-timing and resynthesis: </author> <title> Optimizing sequential networks with combinational techniques. </title> <booktitle> In Proceedings of the Hawaii International Conference on System Sciences, </booktitle> <year> 1990. </year>
Reference-contexts: Retiming has been well studied in the context of edge-triggered circuits [9, 12, 19], and has been the subject of study in the context of single-phase, level-clocked circuits <ref> [14, 22] </ref>. We extend this technique to encompass the optimization of two-phase, level-clocked circuits. We consider three retiming problems. The first problem asks whether, for a given two-phase circuit G and clocking scheme , the circuit G can be retimed to be properly timed by .
Reference: [15] <author> C. A. Mead and L. A. Conway. </author> <title> Introduction to VLSI Systems. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1980. </year>
Reference-contexts: In order to avoid problems with race conditions, it is common for level-clocked circuits to adopt clocking disciplines which involve multiple clock waveforms, or phases. In a two-phase clocking scheme <ref> [15] </ref>, two clocking waveforms, or phases, denoted 0 and 1 , are employed, as is shown in Figure 1. Formally, we denote a two-phase clocking scheme by a 4-tuple = h 0 ; * 0 ; 1 ; * 1 i of strictly positive real numbers.
Reference: [16] <author> N. Megiddo. </author> <title> Partitioning with two lines in the plane. </title> <journal> Journal of Algorithms, </journal> <volume> 6:430 - 433, </volume> <year> 1985. </year>
Reference-contexts: As we have mentioned, Inequalities (7) and (8) can be reduced to a set of O (V ) constraints, and the remaining three inequalities can each be reduced to a single constraint. Megiddo's algorithm <ref> [16] </ref> can solve such a "two-dimensional" linear program in O (V ) time. Alternatively, one can simply compute the O (V 2 ) intersections between the lines defined by Inequality (7) and the lines defined by Inequalities (8) and (10). <p> Of course, certain special cases can be handled without resorting to a general linear program. For example, a circuit with a three-phase, nonoverlapping clock can be tuned in O (V E) time using the three-dimensional linear programming algorithm of Megiddo <ref> [16] </ref>. Retiming with symmetric clocks. When clock phases are symmetric, simple multiphase circuits can be retimed to achieve a given clock period in O (V E + V 2 lg V ) time.
Reference: [17] <author> C. Papadimitriou and K. Steiglitz. </author> <title> Combinatorial Optimization, Algorithms and Complexity. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1982. </year>
Reference-contexts: Besides these three kinds of constraints, we additionally require the following: * 0 + * 1 + 0 : (10) This inequality guarantees that 1 &gt; 0, and thus that only ( 0 ; ) combinations representing valid clocking schemes are considered. By linear programming theory <ref> [17] </ref>, an optimal ( fl 0 ; fl ) combination can be obtained at a point of intersection of the constraints defined by Inequalities (5), (7), (8), (9), and (10).
Reference: [18] <author> M. C. Papaefthymiou. </author> <title> On retiming synchronous circuitry and mixed-integer optimization. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <note> Septem-ber 1990. Available as MIT/LCS/TR-486. </note>
Reference: [19] <author> M. C. Papaefthymiou. </author> <title> Understanding retiming through maximum average-weight cycles. </title> <booktitle> 3rd ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit. Retiming has been well studied in the context of edge-triggered circuits <ref> [9, 12, 19] </ref>, and has been the subject of study in the context of single-phase, level-clocked circuits [14, 22]. We extend this technique to encompass the optimization of two-phase, level-clocked circuits. We consider three retiming problems.
Reference: [20] <author> N. Park and A. C. Parker. </author> <title> Theory of clocking for maximum execution overlap of high-speed digital systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(6) </volume> <pages> 678-690, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: We give an O (V E)-time algorithm that computes an optimal clock tuning for any given two-phase circuit. Previous algorithms for clock tuning have either addressed alternate types of clocking methodologies <ref> [23, 20, 4] </ref>, or been uncharacterized with respect to worst-case running time [2, 21]. Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit.
Reference: [21] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun. </author> <title> Optimal clocking of synchronous digital circuits. </title> <booktitle> In Proceedings of the 1990 IEEE International Conference on CAD, </booktitle> <pages> pages 552-555, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: We give an O (V E)-time algorithm that computes an optimal clock tuning for any given two-phase circuit. Previous algorithms for clock tuning have either addressed alternate types of clocking methodologies [23, 20, 4], or been uncharacterized with respect to worst-case running time <ref> [2, 21] </ref>. Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit.
Reference: [22] <author> N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Retiming of circuits with single phase level-sensitive latches. </title> <booktitle> In ICCD-91, </booktitle> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: Retiming has been well studied in the context of edge-triggered circuits [9, 12, 19], and has been the subject of study in the context of single-phase, level-clocked circuits <ref> [14, 22] </ref>. We extend this technique to encompass the optimization of two-phase, level-clocked circuits. We consider three retiming problems. The first problem asks whether, for a given two-phase circuit G and clocking scheme , the circuit G can be retimed to be properly timed by . <p> The first algorithm is optimized for the special case of a symmetric clocking scheme, where 0 = 1 and * 0 = * 1 . Like other previous retiming results <ref> [10, 22] </ref> the algorithm casts retiming for a symmetric clocking scheme as a mixed-integer linear program. The overall running time of the algorithm is O (V E + V 2 lg V ).
Reference: [23] <author> S. H. Unger and C. J. Tan. </author> <title> Clocking schemes for high speed digital systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(10):880-895, </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: We give an O (V E)-time algorithm that computes an optimal clock tuning for any given two-phase circuit. Previous algorithms for clock tuning have either addressed alternate types of clocking methodologies <ref> [23, 20, 4] </ref>, or been uncharacterized with respect to worst-case running time [2, 21]. Another way to optimize a circuit is by retiming: a method for relocating latches within the circuit without affecting the functionality of the circuit.
References-found: 23

