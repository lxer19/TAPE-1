URL: ftp://ftp.cs.brown.edu/pub/techreports/93/cs93-30.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-93-30.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L. R. Ford, Jr. and D. R. Fulkerson. </author> <title> Flows in Networks. </title> <publisher> Princeton Univ. Press, </publisher> <address> Princeton, NJ, </address> <year> 1962. </year>
Reference-contexts: A cut whose capacity is below the sum of the demands that are separated by the cut proves that no feasible flow exists. The min-cut max-flow theorem for the single-commodity flow problem <ref> [1] </ref> states that the non-existence of such a bad cut proves that a feasible flow does exist. This theorem serves as the basis for deriving efficient algorithms for finding max-flows and min-cuts.
Reference: [2] <author> N. Garg, V. V. Vazirani, and M. Yannakakis. </author> <title> Approximate max-flow min-(multi)cut theorems and their applications. </title> <booktitle> To appear in Proc. 25th ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Starting with the work of Leighton and Rao [10], significant effort was directed towards finding such approximate min-cut max-flow theorems for undirected multicommodity flow <ref> [8, 2, 13] </ref>. This sequence of results shows that for k-commodity problems, if the capacity of every cut is at least O (log 2 k) times the demand separated by the cut, than a feasible multicommodity flow exists. In this paper we consider two extensions of these results. <p> We show how to find a multicut whose capacity-to separated demand ratio is no more than O (log 3 k) times the maximum throughput. The undirected analog of the max-flow min-cut theorem for the concurrent flow problem <ref> [10, 8, 2, 13] </ref> relates the maximum concurrent flow value to the capacity-to-separated demand ratio of a cut, as opposed to a multicut. Observe, however, that simple cuts do not provide strong enough bounds in the directed case. <p> In the case of the maximum sum symmetric multiflow problem multicuts correspond exactly to the integer solutions to the dual linear program. 4 3 Approximate Min-Multicut Max-Flow Theorems The basic outline of our proof and algorithm is analogous to the outline of the algorithms for the undirected case <ref> [10, 8, 2] </ref>. Given a feasible solution to the linear programming dual of the multiflow problem we can find a multicut with value at most a logarithmic factor above the value of the dual solution. <p> In polynomial time one can find a multicut of capacity at most ffi 1 O (log 2 that separates every terminal pair. We are going to prove the theorem through a sequence of lemmas. The first lemma is a straightforward adaptation of the related undirected graph lemma in <ref> [2] </ref>, and is stated without proof. <p> For a subset of nodes S we use e (S) to denote the set of edges having at least one endpoint in S. The key of the proof is the following lemma due to Garg, Vazirani and Yannakakis <ref> [2] </ref>.
Reference: [3] <author> M. X. Goemans and D. P. Williamson. </author> <title> A new 3 4 -approximation algorithm for MAX SAT. </title> <booktitle> Proc., Third Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> pages 313-322, </pages> <year> 1993. </year>
Reference-contexts: However, in the context of approximation algorithms, these problems seem to differ in difficulty. It is easy to approximate MAX 2-SAT to within a factor of 1=2 [4]. Somewhat more difficult algorithms achieve within a factor of 3=4 <ref> [16, 3] </ref>. However, a large number of clauses may be discarded by these algorithms in obtaining a satisfiable formula, perhaps much larger than necessary.
Reference: [4] <author> D. S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> J. Comput. System Sci. </journal> <volume> vol. 9, </volume> <pages> pages 256-278. </pages>
Reference-contexts: However, in the context of approximation algorithms, these problems seem to differ in difficulty. It is easy to approximate MAX 2-SAT to within a factor of 1=2 <ref> [4] </ref>. Somewhat more difficult algorithms achieve within a factor of 3=4 [16, 3]. However, a large number of clauses may be discarded by these algorithms in obtaining a satisfiable formula, perhaps much larger than necessary.
Reference: [5] <author> N. Kahale. </author> <title> On reducing the cut ratio to the multicut problem. </title> <type> Unpublished manuscript, </type> <year> 1993. </year>
Reference-contexts: Kahale <ref> [5] </ref> has shown that in the undirected case the min-max theorem for concurrent multiflows can be derived essentially directly from the maximum sum multiflow theorem. His proof can easily be adapted to the directed case. The basis of his method is the following lemma.
Reference: [6] <author> P. Klein, S. Plotkin, and S. Rao. </author> <title> Planar graphs, multicommodity flow, and network decomposition. </title> <booktitle> To appear in Proc. 25th ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1991. </year>
Reference: [7] <author> P. Klein, S. Plotkin, C. Stein, and E. Tardos. </author> <title> Faster approximation algorithms for the unit capacity concurrent flow problem with applications to routing and finding sparse cuts. SIAM J. Comput., to appear. Preliminary version appeared as Leighton-Rao might be practical: faster approximation algorithms for concurrent flow with uniform capacities, </title> <booktitle> Proceedings, 22nd ACM Symposium on Theory of Computing, </booktitle> <pages> pages 310-321, </pages> <year> 1990. </year> <month> 11 </month>
Reference: [8] <author> P. N. Klein, S. Rao, A. Agrawal, and R. Ravi. </author> <title> An approximate max-flow min-cut relation for multicommodity flow, with applications. Combinatorica, to appear. Preliminary version appeared as Approximation through multicommodity flow, </title> <booktitle> In Proc. 31th IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 726-727, </pages> <year> 1990. </year>
Reference-contexts: Starting with the work of Leighton and Rao [10], significant effort was directed towards finding such approximate min-cut max-flow theorems for undirected multicommodity flow <ref> [8, 2, 13] </ref>. This sequence of results shows that for k-commodity problems, if the capacity of every cut is at least O (log 2 k) times the demand separated by the cut, than a feasible multicommodity flow exists. In this paper we consider two extensions of these results. <p> We show how to find a multicut whose capacity-to separated demand ratio is no more than O (log 3 k) times the maximum throughput. The undirected analog of the max-flow min-cut theorem for the concurrent flow problem <ref> [10, 8, 2, 13] </ref> relates the maximum concurrent flow value to the capacity-to-separated demand ratio of a cut, as opposed to a multicut. Observe, however, that simple cuts do not provide strong enough bounds in the directed case. <p> In the case of the maximum sum symmetric multiflow problem multicuts correspond exactly to the integer solutions to the dual linear program. 4 3 Approximate Min-Multicut Max-Flow Theorems The basic outline of our proof and algorithm is analogous to the outline of the algorithms for the undirected case <ref> [10, 8, 2] </ref>. Given a feasible solution to the linear programming dual of the multiflow problem we can find a multicut with value at most a logarithmic factor above the value of the dual solution. <p> dual solution satisfies the constraint P i d i weight ` (S i ) 1, it suffices to prove the following inequality: X d i weight ` (S i ) O (log T log D) W We proceed along the lines of the proof of Klein, Rao, Agrawal and Ravi <ref> [8] </ref>. Apply Lemma 5.1 for a source s, q = T , and an appropriately chosen *. Delete the resulting set U from the graph along with all the edges in e (U ), and apply the lemma to another terminal in the remaining graph.
Reference: [9] <author> T. Leighton, F. Makedon, S. Plotkin, C. Stein, S. Tragoudas, and E. Tardos. </author> <title> Fast approximation algorithms for multicommodity flow problem. </title> <booktitle> In Proc. 23th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 101-111, </pages> <month> May </month> <year> 1991. </year>
Reference: [10] <author> T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multi-commodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proc. 29th IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 422-431, </pages> <year> 1988. </year>
Reference-contexts: Starting with the work of Leighton and Rao <ref> [10] </ref>, significant effort was directed towards finding such approximate min-cut max-flow theorems for undirected multicommodity flow [8, 2, 13]. <p> We show how to find a multicut whose capacity-to separated demand ratio is no more than O (log 3 k) times the maximum throughput. The undirected analog of the max-flow min-cut theorem for the concurrent flow problem <ref> [10, 8, 2, 13] </ref> relates the maximum concurrent flow value to the capacity-to-separated demand ratio of a cut, as opposed to a multicut. Observe, however, that simple cuts do not provide strong enough bounds in the directed case. <p> In the case of the maximum sum symmetric multiflow problem multicuts correspond exactly to the integer solutions to the dual linear program. 4 3 Approximate Min-Multicut Max-Flow Theorems The basic outline of our proof and algorithm is analogous to the outline of the algorithms for the undirected case <ref> [10, 8, 2] </ref>. Given a feasible solution to the linear programming dual of the multiflow problem we can find a multicut with value at most a logarithmic factor above the value of the dual solution.
Reference: [11] <author> F. T. Leighton and S. Rao. </author> <title> An Approximate Max-Flow Min-Cut Theorem for Uniform Multicommodity Flow Problems with Applications to Approximation Algorithms. </title> <type> Unpublished Manuscript. </type>
Reference-contexts: Our results yield an O (log 2 n)-approximation algorithm, which matches the best previously known bound for this special case <ref> [11, 14] </ref>. As a further application of our minimum capacity multicut algorithm we obtain an O (log 2 approximation algorithm for finding the minimum-weight set of clauses in a 2-CNF formula whose deletion makes the formula satisfiable, where k is the number of literals in the formula.
Reference: [12] <author> S. Plotkin, D. B. Shmoys, and E. Tardos. </author> <title> Fast approximation algorithms for fractional packing and covering problems. </title> <booktitle> In Proc. 32th IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 495-505, </pages> <year> 1991. </year> <note> Also available as Technical Report 999, </note> <institution> School of Operations Research and Industrial Engineering, Cornell University, Ithaca, </institution> <year> 1992. </year>
Reference-contexts: Finding approximately minimum-ratio Steiner cuts The maximum concurrent Steiner flow problem can be formulated as a linear program, albeit one with an exponential number of variables. In order to find an optimal solution using the ellipsoid algorithm, or the packing algorithm of <ref> [12] </ref>, we would have to solve the minimum-cost Steiner tree problem, which is NP-hard. Instead of working with this linear program, therefore, we work with a closely related one, in which the Steiner trees are restricted.
Reference: [13] <author> S. Plotkin and E. Tardos. </author> <title> Improved bounds on the max-flow min-cut ratio for multicom-modity flows. </title> <booktitle> To appear in Proc. 25th ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Starting with the work of Leighton and Rao [10], significant effort was directed towards finding such approximate min-cut max-flow theorems for undirected multicommodity flow <ref> [8, 2, 13] </ref>. This sequence of results shows that for k-commodity problems, if the capacity of every cut is at least O (log 2 k) times the demand separated by the cut, than a feasible multicommodity flow exists. In this paper we consider two extensions of these results. <p> We show how to find a multicut whose capacity-to separated demand ratio is no more than O (log 3 k) times the maximum throughput. The undirected analog of the max-flow min-cut theorem for the concurrent flow problem <ref> [10, 8, 2, 13] </ref> relates the maximum concurrent flow value to the capacity-to-separated demand ratio of a cut, as opposed to a multicut. Observe, however, that simple cuts do not provide strong enough bounds in the directed case. <p> Next apply Theorem 3.1 to the length function `, the commodities in Q, and ffi = min i2Q ffi i . To get the stronger bound, independent of the size of the demands, we use a modification of the technique of Plotkin and Tardos <ref> [13] </ref>. In essence we prove that up to small constant factors the worst min-cut/max-flow ratios occur in problems with integer demands that are bounded by a small-degree polynomial in k. <p> To improve the weaker bound involving log D to the bound claimed in the theorem we use the technique of Plotkin and Tardos <ref> [13] </ref>. We prove the weaker bound by induction on D. Let fl denote the minimum ratio of a cut. Let ` denote the optimum dual solution to the concurrent Steiner flow problem.
Reference: [14] <author> S. Rao. </author> <title> Finding small cuts: Theory and Applications. </title> <editor> Ph. D. </editor> <booktitle> Thesis, </booktitle> <publisher> MIT, </publisher> <year> 1989. </year>
Reference-contexts: Our results yield an O (log 2 n)-approximation algorithm, which matches the best previously known bound for this special case <ref> [11, 14] </ref>. As a further application of our minimum capacity multicut algorithm we obtain an O (log 2 approximation algorithm for finding the minimum-weight set of clauses in a 2-CNF formula whose deletion makes the formula satisfiable, where k is the number of literals in the formula.
Reference: [15] <author> S. Tragoudas. </author> <title> VLSI partitioning approximation algorithms based on multicommodity flow and other techniques. </title> <type> PhD thesis, </type> <institution> University of Texas at Dallas, </institution> <year> 1991. </year>
Reference: [16] <author> M. Yannakakis. </author> <title> On the approximation of maximum satisfiability. </title> <booktitle> Proc., 3rd ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 1-9, </pages> <year> 1992. </year> <month> 12 </month>
Reference-contexts: However, in the context of approximation algorithms, these problems seem to differ in difficulty. It is easy to approximate MAX 2-SAT to within a factor of 1=2 [4]. Somewhat more difficult algorithms achieve within a factor of 3=4 <ref> [16, 3] </ref>. However, a large number of clauses may be discarded by these algorithms in obtaining a satisfiable formula, perhaps much larger than necessary.
References-found: 16

