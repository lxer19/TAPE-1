URL: http://cs.nyu.edu/cs/faculty/overton/sdppack/v0.8-beta/doc/userman.ps
Refering-URL: http://cs.nyu.edu/cs/faculty/overton/sdppack/sdppack.html
Root-URL: 
Title: SDPPACK USER'S GUIDE VERSION 0:8 BETA  
Author: F. ALIZADEH, J.-P. HAEBERLY, M. V. NAYAKKANKUPPAM, AND M. L. OVERTON 
Date: 734, March 1997.  
Affiliation: NYU Computer Science Dept  
Web: Web: http://www.cs.nyu.edu/phd students/madhu/sdppack/sdppack.html  
Note: This work was supported in part by the National Science Foundation.  
Pubnum: Technical Report  
Abstract: This report describes SDPpack, a package of Matlab files designed to solve semidefinite programs (SDP). SDP is a generalization of linear programming to the space of block diagonal, symmetric, positive semidefinite matrices. The main routine implements a primal-dual Mehrotra predictor-corrector scheme based on the XZ+ZX search direction. We also provide certain specialized routines, one to solve SDP's with only diagonal constraints, and one to compute the Lovasz function of a graph, using the XZ search direction. Routines are also provided to determine whether an SDP is primal or dual degenerate, and to compute the condition number of an SDP. The code optionally uses MEX files for improved performance; binaries are available for several platforms. Benchmarks show that the codes provide highly accurate solutions to a wide variety of problems. Copyright c fl 1997. All rights are reserved by the authors; restrictions in the copyright notice in each release also apply. SDPpack is software provided on an "as is" basis no warranties, express or implied. In particular, the authors make no representation about the merchantability of this software or its fitness for any specific purpose. For research and noncommercial use: (i) this software is available free of charge, (ii) permission is granted to use, copy or distribute this software free of charge provided the copyright message in each release is preserved in each copy or distribution, (iii) permission is granted to modify this software provided every distribution or copy of the modified software contains a clear record of the modifications, and (iv) any publication resulting from research that made use of this software should cite this document. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Alizadeh, J.-P. Haeberly, and M. L. Overton. </author> <title> Primal-dual interior-point methods for semi-definite programming: convergence rates, stability, and numerical methods. </title> <note> In revision for SIAM Journal on Optimization, </note> <year> 1997. </year>
Reference-contexts: SDPPACK USER'S GUIDE VERSION 0:8 BETA 5 3. The script sdp.m and the function fsdp.m The Matlab routines sdp.m and fsdp.m solve block diagonal SDP's using a primal-dual Mehrotra predictor-corrector scheme based on the XZ+ZX search direction <ref> [1] </ref>, or AHO direction as it has been referenced in the literature 2 . The simplest option for the user is to call the script sdp.m, which automatically calls the Matlab function fsdp.m. <p> Upon termination of the script, these variables will be defined in the Matlab workspace. svec.m, smat.m: These routines convert a symmetric block diagonal matrix into its vector representation and vice versa. See Section 3.1. skron.m: This routine computes the symmetric Kronecker product <ref> [1] </ref> of two block diagonal matrices. The calling sequence is K = skron (M,N,blk) This routine is called only by sdpcond.m. preproc.m: This routine can be used to detect inconsistency of the constraints, or to identify and eliminate redundant constraints.
Reference: [2] <author> M. Kojima, M. Shida, and S. Hara. </author> <title> Interior-point methods for the monotone linear complementarity problem in symmetric matrices. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 6 </volume> <pages> 86-125, </pages> <year> 1997. </year>
Reference-contexts: Diagonally constrained problems. For the case of diagonally constrained problems (for example, MAX-CUT relaxations), the Schur complement equations can be formed and solved very efficiently using the XZ search direction <ref> [2, 3] </ref> (sometimes called the KSH/HRVW/M direction in the literature.) The specialized routines dsdp.m and fdsdp.m take advantage of this. As before, the five steps involved in setting up and solving a problem are: preparing the data, setting the parameters, initializing the variables, invoking the solver, and interpreting the output.
Reference: [3] <author> C. Helmberg, F. Rendl, R. J. Vanderbei, and H. Wolkowicz. </author> <title> An interior-point method for semidefinite programming. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 6 </volume> <pages> 342-361, </pages> <year> 1996. </year>
Reference-contexts: Diagonally constrained problems. For the case of diagonally constrained problems (for example, MAX-CUT relaxations), the Schur complement equations can be formed and solved very efficiently using the XZ search direction <ref> [2, 3] </ref> (sometimes called the KSH/HRVW/M direction in the literature.) The specialized routines dsdp.m and fdsdp.m take advantage of this. As before, the five steps involved in setting up and solving a problem are: preparing the data, setting the parameters, initializing the variables, invoking the solver, and interpreting the output.
Reference: [4] <author> F. Alizadeh, J.-P. Haeberly, and M. L. Overton. </author> <title> Complementarity and nondegeneracy in semi-definite programming. </title> <booktitle> Mathematical Programming, </booktitle> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: The calling sequence is: [cndprimal,D] = primalcond (A,blk,X,eigtol) where eigtol is a tolerance used in computing the rank of X. A large value of cndprimal is a strong indication that the problem is primal degenerate <ref> [4] </ref> (type help primalcond for the definition). SDPPACK USER'S GUIDE VERSION 0:8 BETA 13 dualcond.m: Given the constraint matrix of an SDP (A), the block structure (blk) and a dual feasible Z, this routine tests for dual degeneracy. <p> The calling sequence is: [cnddual, B] = dualcond (A,blk,Z,eigtol) where eigtol is a tolerance used in computing the rank of Z. A large value of cnddual is a strong indication that the problem is dual degenerate <ref> [4] </ref> (type help dualcond for the definition). <p> Primal (dual) nondegeneracy implies the uniqueness of dual (primal) solutions. The converse is true if strict comple mentarity holds <ref> [4] </ref>. sdpcond.m: Given the data of an SDP and the solutions X and Z, this routine verifies the optimality conditions and computes a lower bound (in the 1-norm) of the condition number of an SDP [5].
Reference: [5] <author> M. V. Nayakkankuppam and M. L. Overton. </author> <title> Conditioning of semidefinite programs. </title> <type> Technical report, </type> <institution> Courant Institute of Mathematical Sciences, </institution> <address> New York University, </address> <month> March </month> <year> 1997. </year> <note> URL: http://www.cs.nyu.edu/phd students/madhu/sdp/papers.html. </note>
Reference-contexts: The converse is true if strict comple mentarity holds [4]. sdpcond.m: Given the data of an SDP and the solutions X and Z, this routine verifies the optimality conditions and computes a lower bound (in the 1-norm) of the condition number of an SDP <ref> [5] </ref>. The calling sequence is: [cndjac,dgap,pinfeas,dinfeas,blockmat] = sdpcond (A,b,C,blk,X,y,Z) A large value of cndjac is a strong indication of degeneracy (primal, dual or both), or that the solution violates strict complementarity.
Reference: [6] <author> S. Boyd and L. Vandenberghe. </author> <title> SP: Software for semidefinite programming (User's Guide), </title> <note> beta version edition, </note> <month> November </month> <year> 1994. </year> <note> URL: http://www-isl.stanford.edu/ boyd/SP.html. </note>
Reference-contexts: In addition to these routines, the convert subdirectory contains scripts that will convert SDP data to a format recognized by some other popular codes. In particular, there are scripts to sp, to lmitlbx and to sdpa which convert SDP data in the Matlab workspace to formats recognized by SP <ref> [6] </ref>, Matlab's LMI Toolbox, and SDPA [7] respectively. Typing help routine name within Matlab provides some more information on the correspondence between SDPpack variables and those used by the other codes.
Reference: [7] <author> K. Fujisawa, M. Kojima, and K. Nakata. SDPA: </author> <title> Semidefinite programming algorithm. </title> <institution> Department of Mathematical and Computing Sciences, Tokyo Institute of Technology, </institution> <note> revised edition, </note> <month> August </month> <year> 1996. </year>
Reference-contexts: In particular, there are scripts to sp, to lmitlbx and to sdpa which convert SDP data in the Matlab workspace to formats recognized by SP [6], Matlab's LMI Toolbox, and SDPA <ref> [7] </ref> respectively. Typing help routine name within Matlab provides some more information on the correspondence between SDPpack variables and those used by the other codes. This is merely to encourage users to try other codes on the benchmark problems in Appendix C (available from the SDPpack web page).
References-found: 7

