URL: http://www.cs.purdue.edu/homes/sb/socrates/socrates.ps
Refering-URL: http://www.cs.purdue.edu/homes/sb/Projects/Socrates/socrates.html
Root-URL: http://www.cs.purdue.edu
Email: fcostian@cs.purdue.edu, dcm@cs.purdue.edug  
Title: Socrates: An Environment For High Performance Computing  
Author: Calin R. Costian and Dan C. Marinescu 
Note: Socrates environment for structural biology applications is presented.  
Date: December 16, 1994  
Address: West Lafayette, IN 47907  
Affiliation: Computer Sciences Department Purdue University  
Abstract: This paper describes the Socrates system under development in the Computer Sciences Department at Purdue University. Socrates is a generic problem solving environment for high performance computing. It allows consistent management of hardware and software resources in a heterogeneous computing environment. An instance of the 
Abstract-found: 1
Intro-found: 1
Reference: [CLI 92] <author> CLIPS, </author> <title> C Language Integrated Production System, developed by the Software Technology Branch, </title> <editor> NASA / Lyndon B. Johnson Space Center, </editor> <year> 1992. </year>
Reference-contexts: In this case, the user has the freedom to record information in any format (using predefined or user-defined filters to extract the relevant information from the control output file) and then process it using the knowledge processing primitives provided by Socrates, which have been implemented using CLIPS <ref> [CLI 92] </ref>, an AI language designed for writing expert systems. 11 2.4 Collaborative features Users collaborate by forming groups which share resources and can work together in solving a problem.
Reference: [Cor 94] <author> Cornea-Hasegan, M., Costian, C., Marinescu, D. C., Martin, I., Rice, J., </author> <title> Towards Problem Solving Environments for High Performance Computing, </title> <booktitle> Proceedings of the High Performance Computing Conference '94, </booktitle> <address> Singapore, </address> <month> Sep </month> <year> 1994. </year>
Reference: [Cro 90] <author> Crowley, T., Kraut, B., Rein, G., Sproull, L., </author> <title> How can we make groupware practical ?, CHI 1990 Conference Proceedings, </title> <month> April </month> <year> 1990, </year> <pages> pp. 87-89. </pages>
Reference: [Der 90] <author> Dertouzos, M., </author> <title> Redefining tomorrow's user interface, </title> <booktitle> CHI 1990 Conference Proceedings, </booktitle> <month> April </month> <year> 1990, </year> <note> p. 1. </note>
Reference: [Edm 94] <author> Edmonds, E.A., Candy, L., Jones, R., Soufi, B., </author> <title> Support for collaborative design: agents and emergence, Intelligent Agents, </title> <journal> CACM 37, </journal> <volume> vol. 7, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: User collaboration tools, or groupware tools, have become more and more important nowadays as the complexity of the problems has been steadily increasing ([Cro 90], <ref> [Edm 94] </ref>, [Ell 91], [Lau 90]). The sharing of knowledge bases is a powerful way of enhancing the accuracy of the answers provided to each user in the group by the knowledge processing subsystem.
Reference: [Ell 91] <author> Ellis, </author> <title> C.A., Gibbs, S.J., Rein, G.L., Groupware: some issues and experiences, </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, No. 1, </volume> <month> January </month> <year> 1991. </year>
Reference-contexts: User collaboration tools, or groupware tools, have become more and more important nowadays as the complexity of the problems has been steadily increasing ([Cro 90], [Edm 94], <ref> [Ell 91] </ref>, [Lau 90]). The sharing of knowledge bases is a powerful way of enhancing the accuracy of the answers provided to each user in the group by the knowledge processing subsystem.
Reference: [Hel 94] <author> D. Heller, </author> <title> P.M. Ferguson, Motif Programming Manual, The Definitive Guides to the X Window System, Vol. 6 A, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <year> 1994. </year>
Reference-contexts: The graphics user interface, which was implemented using OSF/Motif <ref> [Hel 94] </ref> provides access to a variety of functions supported by the Socrates environment, like project management, knowledge processing, brokerage and resource management, allows a collaborative effort and supports reliable high performance computing in a cluster of workstations, functions to be discussed in the next sections.
Reference: [Lau 90] <author> Lauwers, J.C., Lantz, K.A., </author> <title> Collaboration awareness in support of collaboration transparency: requirements for the next generation of shared window systems, </title> <booktitle> CHI '90 Conference Proceedings, </booktitle> <month> April </month> <year> 1990, </year> <pages> pp. 303-311. </pages>
Reference-contexts: User collaboration tools, or groupware tools, have become more and more important nowadays as the complexity of the problems has been steadily increasing ([Cro 90], [Edm 94], [Ell 91], <ref> [Lau 90] </ref>). The sharing of knowledge bases is a powerful way of enhancing the accuracy of the answers provided to each user in the group by the knowledge processing subsystem.
Reference: [Mae 94] <author> Maes, P., </author> <title> Agents that reduce work and information overload, Intelligent Agents, </title> <journal> CACM 37, </journal> <volume> vol. 7, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Each of the functions mentioned above is discussed in more depth in the sequel. 2.1 Advanced User Interfaces The present trend in GUI design is oriented towards created more and more sophisticated user interfaces, capable to handle intelligently a variety of user requests ([Der 90], <ref> [Mae 94] </ref>, [Min 94], [Mye 90]).
Reference: [Min 94] <author> Minsky, M., Riecken, D., </author> <title> A conversation with Marvin Minsky about agents, Intelligent Agents, </title> <journal> CACM 37, </journal> <volume> vol. 7, </volume> <month> July </month> <year> 1994. </year> <month> 15 </month>
Reference-contexts: Each of the functions mentioned above is discussed in more depth in the sequel. 2.1 Advanced User Interfaces The present trend in GUI design is oriented towards created more and more sophisticated user interfaces, capable to handle intelligently a variety of user requests ([Der 90], [Mae 94], <ref> [Min 94] </ref>, [Mye 90]).
Reference: [MPI 94] <author> MPI: </author> <title> A Message Passing Interface Standard, Message Passing Interface Forum, </title> <institution> Knoxville, Tennessee, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: This interface allows the creation of a host table and supports program execution under the control of PVM. A protocol to allow PVM to work on clusters of workstations with NQS is being designed. Socrates will also support programs communicating using the MPI standard <ref> [MPI 94] </ref>. 2 Overview of Socrates A user of the Socrates system manipulates hardware and software objects using high level primitives which hide the complex actions involved in the manipulation of these objects.
Reference: [Mye 90] <author> Myers, </author> <title> B.A., Creating user interfaces using programming by example, visual programming, and constraints, </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> vol. 12, No 2, </volume> <month> April </month> <year> 1990. </year>
Reference-contexts: Each of the functions mentioned above is discussed in more depth in the sequel. 2.1 Advanced User Interfaces The present trend in GUI design is oriented towards created more and more sophisticated user interfaces, capable to handle intelligently a variety of user requests ([Der 90], [Mae 94], [Min 94], <ref> [Mye 90] </ref>).
Reference: [PVM 94] <author> Geist, A. et al, </author> <title> PVM 3 User's Guide and Reference Manual, </title> <institution> Oak Ridge National Laboratory, Oak Ridge, Tennessee 37831, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: The Socrates environment was designed to complement other efforts in the area of high performance computing. An interface to the PVM system <ref> [PVM 94] </ref> is currently under development. This interface allows the creation of a host table and supports program execution under the control of PVM. A protocol to allow PVM to work on clusters of workstations with NQS is being designed.
Reference: [Rab 91] <author> Rabitti, F., Bertino, E., Kim, W., Woelk, D., </author> <title> A model of authorization for next-generation database systems, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 16, no. 1, </volume> <month> March </month> <year> 1991, </year> <pages> pp 88-131. 16 </pages>
Reference-contexts: The matrix specifying the access right of each user on every shared object can thus grow very rapidly, and one needs to use object-oriented concepts (classes of software and hardware objects, classes of users <ref> [Rab 91] </ref>) in order to keep it compact and easy to maintain. Finally, scientists often need to use the same application in order to manipulate or visualize the same data simultaneously (Computer Supported Cooperative Work).
References-found: 14

