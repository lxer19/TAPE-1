URL: http://www.cs.umd.edu/projects/hermes/publications/postscripts/avisdsqp.ps
Refering-URL: http://www.cs.umd.edu/projects/hermes/publications/abstracts/avisdsqp.html
Root-URL: 
Email: fsibel; candan; kutluhan; vsg@cs.umd.edu, schen@nsf.gov  
Title: Advanced Video Information System: Data Structures and Query Processing  
Author: Sibel Adal, Kasm S. Candan, Su-Shing Chen Kutluhan Erol, and V.S. Subrahmanian 
Address: College Park, MD 20742.  
Affiliation: Institute for Advanced Computer Studies Institute for Systems Research Department of Computer Science University of Maryland,  
Abstract: In this paper, we describe how video data may be organized and structured so as to facilitate queries. We develop a formal model of video data and show how spatial data structures, suitably modified, provide an elegant way of storing such data. We develop algorithms to process various kinds of video queries and show that in most cases, the complexity of these algorithms is linear. We develop algorithms to update these video databases. A prototype system called AVIS ("Advanced Video Information System") has been designed at the University of Maryland based on these concepts.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Arman, A. Hsu and M. Chiu. </author> <title> (1993) Image Processing on Compressed Data for Large Video Databases, </title> <booktitle> First ACM Intl. Conf. on Multimedia, </booktitle> <address> pps 267-272. </address>
Reference-contexts: In contrast, by using segment trees instead, we allow leaves to have whatever granularity is needed to best represent the content of the video being annotated. Other works on video indexing include specific disk-based techniques [3, 2], methods dealing with compression/image processing <ref> [1] </ref>, and synchronization structures [10].
Reference: [2] <author> S. Berson, S. Ghandeharizadeh, R. Muntz and X. Ju. </author> <title> (1994) Staggered Striping in Multimedia Information Systems, </title> <booktitle> Proc. 1994 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> pps 79-90. </address>
Reference-contexts: In contrast, by using segment trees instead, we allow leaves to have whatever granularity is needed to best represent the content of the video being annotated. Other works on video indexing include specific disk-based techniques <ref> [3, 2] </ref>, methods dealing with compression/image processing [1], and synchronization structures [10].
Reference: [3] <author> H.J. Chen and T. Little. </author> <title> (1993) Physical Storage Organizations for Time-Dependent Multimedia Data, </title> <booktitle> Proc. of the Foundations of Data Organization and Algorithms (FODO) Conf., </booktitle> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: In contrast, by using segment trees instead, we allow leaves to have whatever granularity is needed to best represent the content of the video being annotated. Other works on video indexing include specific disk-based techniques <ref> [3, 2] </ref>, methods dealing with compression/image processing [1], and synchronization structures [10].
Reference: [4] <author> G. Davenport, T.A. Smith and N. Pincever. </author> <title> (1991) Cinematic Primitives for Multimedia, </title> <journal> IEEE Comp. Graphics and Applications, </journal> <month> July </month> <year> 1991. </year>
Reference-contexts: In contrast to their effort, in this paper we develop indexing structures and query processing algorithms for querying video data, and use a logical query language (cf. the work on HERMES [16]) to query the data. Other work on video includes work by Davenport et. al. <ref> [4] </ref> who argue that segmenting video should not be done at the frame level. This is consistent with our rendition - segementing video at the frame level corresponds to a well-known data structure called the unit segement tree (cf.
Reference: [5] <author> S. Gibbs, C. Breiteneder and D. Tsichritzis. </author> <title> (1994) Data Modeling of Time-Based Media, </title> <booktitle> Proc. 1994 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> pps 91-102. </address>
Reference-contexts: The primary aim of this paper is to develop techniques by which video may be organized and queried. Two works that are closely related are <ref> [5] </ref> and [9], Gibbs et. al. [5] study how stream-based temporal multimedia data may be modeled using object based methods. <p> The primary aim of this paper is to develop techniques by which video may be organized and queried. Two works that are closely related are <ref> [5] </ref> and [9], Gibbs et. al. [5] study how stream-based temporal multimedia data may be modeled using object based methods.
Reference: [6] <author> S. Gibbs and D. Tsichritzis. </author> <title> (1994) Multimedia Programming: Objects, Environments and Frameworks, </title> <publisher> ACM Press/Addison Wesley. </publisher>
Reference: [7] <author> V.N. Gudivada and V.V. Raghavan. </author> <title> (1993) Design and Evaluation of Algorithms for Image Retrieval by Spatial Similarity, </title> <note> to appear in: ACM Transactions on Information Systems. </note>
Reference-contexts: Other works on video indexing include specific disk-based techniques [3, 2], methods dealing with compression/image processing [1], and synchronization structures [10]. There has also been a good deal of work on picture retrieval systems <ref> [8, 7, 13] </ref> however, these works deal with static images, whereas in contrast we have studied ways of organizing temporal sequences of such images (i.e. video). 9 Conclusions Over the last few years, the ability to deliver movies to homes has increased substantially.
Reference: [8] <author> V.N. Gudivada, V.V. Raghavan and K. Vanapipat. </author> <title> (1994) A Unified Approach to Data Modeling and Retrieval for a Class of Image Database Applications, to appear in: "Multimedia Database Systems" (eds. </title> <editor> S. Jajodia and V.S. Subrahmanian), </editor> <publisher> Springer. </publisher>
Reference-contexts: Other works on video indexing include specific disk-based techniques [3, 2], methods dealing with compression/image processing [1], and synchronization structures [10]. There has also been a good deal of work on picture retrieval systems <ref> [8, 7, 13] </ref> however, these works deal with static images, whereas in contrast we have studied ways of organizing temporal sequences of such images (i.e. video). 9 Conclusions Over the last few years, the ability to deliver movies to homes has increased substantially.
Reference: [9] <author> R. Hjelsvold and R. Midtstraum. </author> <title> (1994) Modeling and Querying Video Data, </title> <booktitle> Proc. 1994 Intl. Conf. on Very Large Databases, </booktitle> <address> pps 686-694, Santiago, Chile. </address>
Reference-contexts: The primary aim of this paper is to develop techniques by which video may be organized and queried. Two works that are closely related are [5] and <ref> [9] </ref>, Gibbs et. al. [5] study how stream-based temporal multimedia data may be modeled using object based methods. <p> However, concepts such as roles and players, the distinction between activities and events, and the integration of such video systems with other traditional database systems are not addressed. 23 24 25 26 27 Hjelsvold and Midtstraum <ref> [9] </ref> develop a "generic" data model for capturing video content and structure. Their idea is that video should be included as a data type in relational databases, i.e. systems such as PARADOX, INGRES, etc. should be augmented to handle video data.
Reference: [10] <author> M. Iino, Y.F. Day and A. Ghafoor. </author> <title> (1994) An Object-Oriented Model for Spatio-Temporal Synchronization of Multimedia Information, </title> <booktitle> Proc. 1994 Intl. Conf. on Multimedia Computing and Systems, </booktitle> <address> pps 110-120, </address> <publisher> IEEE Press. </publisher>
Reference-contexts: The semantics of such queries has not yet been specified by the authors, and will be addressed in 16 a future work. For example, operators such as after, right after, before and overlaps should be included (cf. work of Ghafoor et. al. <ref> [10] </ref>). In addition to this, the semantics of operators such as "before" and "after" has to be established clearly. <p> In contrast, by using segment trees instead, we allow leaves to have whatever granularity is needed to best represent the content of the video being annotated. Other works on video indexing include specific disk-based techniques [3, 2], methods dealing with compression/image processing [1], and synchronization structures <ref> [10] </ref>.
Reference: [11] <author> J. Lu, A. Nerode, </author> <title> V.S. Subrahmanian, Hybrid Knowledge Bases, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <note> 1994. To appear. Available as technical report CS-TR-3037, </note> <institution> University of Maryland. </institution>
Reference: [12] <author> S. Marcus, </author> <title> V.S. Subrahmanian, Multimedia Database Systems, </title> <note> 1994. Submitted for publication. 29 </note>
Reference-contexts: Last but not least, there is an association map, , that specifies which objects occur in which video-frames. Marcus and Subrahmanian <ref> [12] </ref> have, in a series of papers, specified how multimedia database systems may be formally modeled along the lines briefly outlined above.
Reference: [13] <author> W. Niblack, et. al., </author> <title> The QBIC Project: Querying Images by Content Using Color, Texture and Shape, </title> <institution> IBM Research Report, </institution> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: Other works on video indexing include specific disk-based techniques [3, 2], methods dealing with compression/image processing [1], and synchronization structures [10]. There has also been a good deal of work on picture retrieval systems <ref> [8, 7, 13] </ref> however, these works deal with static images, whereas in contrast we have studied ways of organizing temporal sequences of such images (i.e. video). 9 Conclusions Over the last few years, the ability to deliver movies to homes has increased substantially.
Reference: [14] <author> E. Oomoto and K. Tanaka. </author> <year> (1993) </year> <month> OVID: </month> <title> Design and Implementation of a Video-Object Database System, </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 5, 4, </volume> <pages> pps 629-643. </pages>
Reference-contexts: We have used those intuitions to develop techniques for processing queries as well as for updating these video data structures the first algorithms we know of for incorporating updates to video data. Oomoto and Tanaka <ref> [14] </ref> have developed a language called VideoSQL for accessing video data. In contrast to their effort, in this paper we develop indexing structures and query processing algorithms for querying video data, and use a logical query language (cf. the work on HERMES [16]) to query the data.
Reference: [15] <author> H. </author> <title> Samet The Design and Analysis of Spatial Data Structures, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Samet <ref> [15] </ref>). As an example consider the association map depicted in figure 1 corresponding to the movie "The Rope" according to the definitions given earlier in this section. In the figure, two types of entities that were discussed can be seen: video objects and events. <p> As can be seen from the figure, we may represent the set of all line segments associated with RVD as a segment tree. The one difference between these segment trees, and the ordinary segment trees (cf. Samet <ref> [15] </ref>) is that a single object name may label multiple line segments. To differentiate between the two, we will refer to our data structure as a frame segment tree. <p> This is consistent with our rendition - segementing video at the frame level corresponds to a well-known data structure called the unit segement tree (cf. Samiet <ref> [15] </ref>) which is just like the segment tree described here except that leaves always must represent unit intervals, i.e. intervals of the form [i; i + 1).
Reference: [16] <author> V.S. Subrahmanian. </author> <title> (1995) HERMES: A Heterogeneous Reasoning and Mediator System, </title> <note> submitted for journal publication. </note>
Reference-contexts: Subsequently, AVIS has been hooked up to a much more powerful system for software integration called HERMES ("Heterogeneous Reasoning and Mediator System") <ref> [16] </ref>. An advantage of hooking up AVIS and HERMES is that all the parsing capabilities of HERMES are automatically available to AVIS. <p> HERMES is a system that has been developed at the University of Maryland <ref> [16] </ref> for creating mediators. In HERMES, a mediator is a program, written in a logic-based language, that we shall now describe. <p> Oomoto and Tanaka [14] have developed a language called VideoSQL for accessing video data. In contrast to their effort, in this paper we develop indexing structures and query processing algorithms for querying video data, and use a logical query language (cf. the work on HERMES <ref> [16] </ref>) to query the data. Other work on video includes work by Davenport et. al. [4] who argue that segmenting video should not be done at the frame level.
Reference: [17] <author> G. Wiederhold, </author> <booktitle> Mediators in the Architecture of Future Information Systems, IEEE Computer, </booktitle> <pages> pp. 38-49, </pages> <month> March </month> <year> 1992. </year>
Reference: [18] <author> G. Wiederhold, </author> <title> Intelligent Integration of Information, </title> <booktitle> Proceedings of the ACM Conference on Management of Data, </booktitle> <pages> pp. 434-437, </pages> <year> 1993. </year> <month> 30 </month>
References-found: 18

