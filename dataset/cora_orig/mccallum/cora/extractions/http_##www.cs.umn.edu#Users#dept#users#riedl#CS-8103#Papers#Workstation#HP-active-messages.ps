URL: http://www.cs.umn.edu/Users/dept/users/riedl/CS-8103/Papers/Workstation/HP-active-messages.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/riedl/CS-8103/Papers/Workstation/
Root-URL: http://www.cs.umn.edu
Email: rmartin@CS.Berkeley.EDU  
Title: HPAM: An Active Message layer for a Network of HP Workstations  
Author: Richard P. Martin 
Address: Berkeley  
Affiliation: University of California at  
Abstract: Active Messages is a thin, highly optimized communication layer targeted at the library or compiler writer. A primary goal of an Active Message layer is to deliver the minimum latency and peak bandwidth of the network hardware to user programs. Previous work on Active Messages demonstrated a 6-to 12-fold performance improvement over vendor supplied send and receive libraries for Massively Parallel Processors. This document describes an Active Message layer we have constructed on a Network of Workstations. The HPAM layer currently runs on a network of 4 HP 9000/ 735 workstations with Medusa FDDI interface cards. HPAM achieves a round trip time for a 20 byte payload of 29 msec, an order of magnitude better than traditional software, and a maximum bandwidth of 12 MB/s.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. Banks and M. Prudence, </author> <title> A High Performance Network Architecture for a PA-RISC Workstation, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 11, no. 2, </volume> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: The section concludes by explaining how the finite resource model exposed by the HPAM protocol can be used to provide protection. 4.1 Medusa overview The Medusa card was designed for high bandwidth TCP connections <ref> [1] </ref>. The card sits on the graphics bus (SGC bus) in place of the frame buffer, and has one megabyte of on-board VRAM. The VRAM is divided into fixed sized (8 Kbyte) blocks, each of which may contain one packet. <p> The two versions of TCP are the normal version, and the single copy version. The single copy stacks are detailed in <ref> [1] </ref>. The single copy TCP/IP stacks differ from the normal protocol stacks in that they only make one copy of the data, and they take advantage of the Medusas special IP checksum unit.
Reference: 2. <author> D. Clark, V. Jacobson, J. Romkey, H. Salwen, </author> <title> An Analysis of TCP Processing Overhead, </title> <journal> IEEE Communications Magazine. </journal> <volume> Vol. 27, no. 6, </volume> <month> June </month> <year> 1989. </year>
Reference-contexts: Protocol processing consumes substantial time, but still it is only a small fraction of the total cost. The costs of all operations of the communications software, including context switching, buffer and timer management, scheduling, and data copying must be reduced to improve performance <ref> [2] </ref> [6]. The HP Active Message layer (HPAM) is a software layer which delivers close to the hardware performance to user level programs on a NOW without sacrificing essential services of the communication layer. The layer takes positions which differ from typical LAN communications software. <p> Finally, HPAM marks the buffer as in-use and timestamps the request by copying the value of the interval timer register into the descriptor table entry (step 1.c). A cheap timer mechanism 1 is essential to maintain low overhead, as noted in <ref> [2] </ref>. Returning to the remote read example, the HPAM_4 call will store the argument registers of the call frame into the Medusa buffer then send and mark the buffer.
Reference: 3. <author> D. Culler, A. Dusseau, S. Goldstein, A. Krishnamurthy, S. Lumetta, T. von Eicken and K. Yelick, </author> <title> Parallel Programming in Split-C, </title> <booktitle> Supercomputing 93, </booktitle> <address> Portland OR. Nov. 1993. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: We did not view ordering as an essential property because it is not required for all higher level communication abstractions. For example, for a shared memory abstraction with explicit completion events (Split-C) <ref> [3] </ref>, ordering is not as critical a property to support as reliability [9]. Ordering can be implemented cheaply on top of HPAM since the programmer is freed from reliability concerns. 3 3.
Reference: 4. <author> D. Culler, R. Karp, D. Patterson, A. Sahay, K. Schauser, E. Santos, R. Subramonian, T. von Eiken. </author> <title> LogP: Towards a Realistic Model of Parallel Computation, </title> <booktitle> In Proceedings of the 19 Fourth ACM Symp. on Principles and Practice of Parallel Programming, </booktitle> <address> San Diego, CA May 1993. </address>
Reference-contexts: First, the section begins with some quick definitions then presents a performance compari 13 son between HPAM and two TCP implementations. Finally, a detailed measurements of the cost to send and receive a packet are presented. Following LogP <ref> [4] </ref> terminology, overhead is defined as the processor cycles spent preparing to send or receive a message.
Reference: 5. <author> Hewlett Packard Company, </author> <title> PA-RISC 1.1 Architecture and Instruction Set Reference Man ual, Manual Part Number 09740-90039. </title>
Reference-contexts: After the reply handler returns, the corresponding request buffer is marked as free, invalidating the timestamp (step 3.d). Reply handlers which attempt to use the network generate an error. 1. On the HP 735, the PA- RISC interval timer is a 32 bit register updated every cycle <ref> [5] </ref>. <p> Although the current protection mechanisms are adequate in our research environment, they assume a malicious user does not modify the HPAM code or data structures. Mechanisms exist in the PA-RISC hardware for providing both protected code and data without invoking the operating system <ref> [5] </ref>. 5. Performance This section documents the performance of HPAM, and compares it to TCP on the same hardware. First, the section begins with some quick definitions then presents a performance compari 13 son between HPAM and two TCP implementations.
Reference: 6. <author> J. Kay and J. Pasquale, </author> <title> A Performance Analysis of TCP/IP and UDP/IP Networking Soft ware for the DECstation 5000, </title> <type> Sequoia 2000 Technical Report #92/10, </type> <year> 1992. </year>
Reference-contexts: Protocol processing consumes substantial time, but still it is only a small fraction of the total cost. The costs of all operations of the communications software, including context switching, buffer and timer management, scheduling, and data copying must be reduced to improve performance [2] <ref> [6] </ref>. The HP Active Message layer (HPAM) is a software layer which delivers close to the hardware performance to user level programs on a NOW without sacrificing essential services of the communication layer. The layer takes positions which differ from typical LAN communications software.
Reference: 7. <author> S. Lefer, M. McKusick, M Karels, J. Quaterman, </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System, </title> <address> Reading, MA: </address> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1989. </year>
Reference-contexts: HPAM however, does not replace TCP in the contexts of highly unreliable, variable delay networks. Networks which have these characteristics, typically WAN internetworks, require more sophisticated mechanisms. Mechanisms associated with TCP, such as slow start and estimating variance of the round trip time <ref> [7] </ref>, are trying to second guess the network. In addition to sending data, TCP constructs and dynamically maintains a model of the network.
Reference: 8. <author> C. Leiserson, et al. </author> <title> The Network Architechture of the Connection Machine CM-5, </title> <booktitle> In Pro ceedings of the Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1993. </year>
Reference-contexts: Any request-reply protocol must guard against possible deadlock or livelock arising from the two-phased nature of the operation. This problem is described well for networks which guarantee delivery in <ref> [8] </ref>. For networks which may drop packets, the problem manifests itself as follows. Suppose a single pool of buffers holds all in-bound and out-bound data, and all data is buffered at the sender until an acknowledgment is received.
Reference: 9. <author> Luna, Steve. </author> <title> Implementing an Efficient Portable Global Memory Layer on Distributed Mem ory Multiprocessors, </title> <type> UCB Technical report UCB/CSD 94/#810, </type> <year> 1994 </year>
Reference-contexts: We did not view ordering as an essential property because it is not required for all higher level communication abstractions. For example, for a shared memory abstraction with explicit completion events (Split-C) [3], ordering is not as critical a property to support as reliability <ref> [9] </ref>. Ordering can be implemented cheaply on top of HPAM since the programmer is freed from reliability concerns. 3 3.
Reference: 10. <author> T. von Eicken, D. Culler, S. Goldstein, K. Schasuer, </author> <title> Active Messages: A Mechanism for Integrated Communication and Computation, </title> <booktitle> In Proceedings of the 19th International Sym posium on Computer Architecture, </booktitle> <address> Gold Coast, Australia, </address> <month> May </month> <year> 1992 </year>
Reference-contexts: Because handlers run at the priority of the network, blocking the arrival of successive messages, they must run quickly and to completion <ref> [10] </ref>. The role of the handler is to get the message out of the network, either by integrating it into the computation or sending a reply. Programming with active messages is similar to programming interrupt handlers in the operating system.
References-found: 10

