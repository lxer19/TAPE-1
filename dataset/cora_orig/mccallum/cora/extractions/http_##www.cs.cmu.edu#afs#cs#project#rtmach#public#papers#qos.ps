URL: http://www.cs.cmu.edu/afs/cs/project/rtmach/public/papers/qos.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/raj/www/recent-papers.html
Root-URL: 
Email: fraj+, clee, dpsg@cs.cmu.edu, jpl@stat.cmu.edu  
Title: A Resource Allocation Model for QoS Management  
Author: Ragunathan Rajkumar, Chen Lee, John Lehoczky Dan Siewiorek 
Address: Pittsburgh, PA 15213  
Affiliation: Department of Computer Science Department of Statistics Carnegie Mellon University  
Abstract: Quality of service (QoS) has been receiving wide attention in recent years in many research communities including networking, multimedia systems, real-time systems and distributed systems. In large distributed systems such as those used in defense systems, on-demand service and inter-networked systems, applications contending for system resources must satisfy timing, reliability and security constraints as well as application-specific quality requirements. Allocating sufficient resources to different applications in order to satisfy various requirements is a fundamental problem in these situations. A basic yet flexible model for performance-driven resource allocations can therefore be useful in making appropriate tradeoffs. In this paper, we present an analytical model for QoS management in systems which must satisfy application needs along multiple dimensions such as timeliness, reliable delivery schemes, cryptographic security and data quality. We refer to this model as Q-RAM (QoS-based Resource Allocation Model). The model assumes a system with multiple concurrent applications, each of which can operate at different levels of quality based on the system resources available to it. The goal of the model is to be able to allocate resources to the various applications such that the overall system utility is maximized under the constraint that each application can meet its minimum needs. We identify resource profiles of applications which allow such decisions to be made efficiently and in real-time. We also identify application utility functions along different dimensions which are composable to form unique application requirement profiles. We use a video-conferencing system to illustrate the model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Baker. </author> <title> Stack-based scheduling of realtime processes. </title> <journal> Journal of Real-Time Systems, </journal> <volume> 3(1) </volume> <pages> 67-100, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: A large portion of real-time scheduling theory deals with this problem and uses fixed priority schemes [9, 8, 13, 6], dynamic priority schemes <ref> [1, 4] </ref> or heuristic schemes [17]. The basic requirements of a QoS model in high assurance applications are presented in [18]. It proposes that the QoS attributes of timeliness, precision and accuracy can be used for system specification, instrumentation and evaluation.
Reference: [2] <author> K. G. Shin D. D. Kandlur and D. Ferrari. </author> <title> Real-time communication in multi-hop networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <pages> pages 1044-1056, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: The problem of allocating appropriate resource capacity to achieve a specific level of QoS for an application has been studied in various contexts. For example, [3] studies the problem of how to allocate network packet processing capacity assuming bursty traffic and finite buffers. In <ref> [2] </ref>, the problem of the establishment of real-time communication channels is studied as an admission control problem. The Spring Kernel [15] uses on-line admission control to guarantee essential tasks upon arrival. Various system-wide schemes have been studied to arbitrate resource allocation among contending applications.
Reference: [3] <author> R. Guerin, H. Ahmadi, and M. Naghshineh. </author> <title> Equivalent capacity and its application to bandwidth allocation in high-speed networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <month> September </month> <year> 1991. </year>
Reference-contexts: question arises: "How does one allocate resources to those applications when they run concurrently and contend for the same resource types?" This question of resource allocation is traditional in the sense that many papers in the domains of networking, real-time systems and distributed systems have attempted to answer it (e.g. <ref> [3] </ref>) in their own context. However, we are unaware of any significant work which allows requirements such as timeliness, security and reliable data delivery to be addressed and traded off against each other within the same context. <p> Such work can be classified into various categories. The problem of allocating appropriate resource capacity to achieve a specific level of QoS for an application has been studied in various contexts. For example, <ref> [3] </ref> studies the problem of how to allocate network packet processing capacity assuming bursty traffic and finite buffers. In [2], the problem of the establishment of real-time communication channels is studied as an admission control problem. The Spring Kernel [15] uses on-line admission control to guarantee essential tasks upon arrival.
Reference: [4] <author> K. Jeffay. </author> <title> Scheduling sporadic tasks with shared resources in hard real-time systems. </title> <type> Technical report, </type> <institution> TR90-038, Department of Computer Science, University of North Carolina at Chapel Hill, </institution> <month> November </month> <year> 1989. </year>
Reference-contexts: A large portion of real-time scheduling theory deals with this problem and uses fixed priority schemes [9, 8, 13, 6], dynamic priority schemes <ref> [1, 4] </ref> or heuristic schemes [17]. The basic requirements of a QoS model in high assurance applications are presented in [18]. It proposes that the QoS attributes of timeliness, precision and accuracy can be used for system specification, instrumentation and evaluation.
Reference: [5] <author> M. B. Jones and P. J. Leach. </author> <title> Modular real-time resource management in the rialto operating system. </title> <type> Technical Report MSR-TR-95-16, </type> <institution> Microsoft Research, Advanced Technology Division, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Various system-wide schemes have been studied to arbitrate resource allocation among contending applications. In [16], a distributed pool of processors is used to guarantee timeliness for real-time applications using admission control and load-sharing techniques. The Rialto operating system <ref> [5] </ref> presents a modular OS approach, the goal of which is to maximize the user's perceived utility of the system, instead of maximizing the performance of any particular application. No theoretical basis is provided to maximize system utility.
Reference: [6] <author> M. H. Klein, T. Ralya, B. Pollak, R. Obenza, and M. G. </author> <month> Harbour. </month>
Reference-contexts: A CPU resource reservation scheme [11] is used in RT-Mach to guarantee and enforce access to an allocated resource once a resource allocation decision has been made. A large portion of real-time scheduling theory deals with this problem and uses fixed priority schemes <ref> [9, 8, 13, 6] </ref>, dynamic priority schemes [1, 4] or heuristic schemes [17]. The basic requirements of a QoS model in high assurance applications are presented in [18]. It proposes that the QoS attributes of timeliness, precision and accuracy can be used for system specification, instrumentation and evaluation.
References-found: 6

