URL: http://www.eecs.umich.edu/~wuchang/work/internet/tcp/floyd/CBQ.ps.gz
Refering-URL: http://www.eecs.umich.edu/~wuchang/work/internet/
Root-URL: http://www.cs.umich.edu
Title: Link-sharing and Resource Management Models for Packet Networks  
Author: Sally Floyd and Van Jacobson 
Date: 4, August 1995  
Note: To appear in IEEE/ACM Transactions on Networking, Vol. 3 No.  
Abstract: This paper discusses the use of link-sharing mechanisms in packet networks and presents algorithms for hierarchical link-sharing. Hierarchical link-sharing allows multiple agencies, protocol families, or traffic types to share the bandwidth on a link in a controlled fashion. Link-sharing and real-time services both require resource management mechanisms at the gateway. Rather than requiring a gateway to implement separate mechanisms for link-sharing and real-time services, the approach in this paper is to view link-sharing and real-time service requirements as simultaneous, and in some respect complementary, constraints at a gateway that can be implemented with a unified set of mechanisms. While it is not possible to completely predict the requirements that might evolve in the Internet over the next decade, we argue that controlled link-sharing is an essential component that can provide gateways with the flexibility to accommodate emerging applications and network protocols. 
Abstract-found: 1
Intro-found: 1
Reference: [BTW94] <author> J.-C. Bolot, T. Turletti, and I. Wakeman, </author> <title> "Scalable Feedback Control for Multicast Video Distribution in the Internet", </title> <booktitle> Proc. SIGCOMM '94, </booktitle> <month> August </month> <year> 1994, </year> <pages> pp. 58-67. </pages>
Reference-contexts: One possible new application is source- or receiver-based rate-adaptive video, with a congestion control procedure to control the connection's traffic in response to congestion. In source-based rate-adaptive video, the source adjusts its transmission rate in response to feedback from the receivers, possibly using a layered coding scheme [GV93] <ref> [BTW94] </ref>. With receiver-based rate-adaptive video, the video source would partition the signal into separate layers, transmitting each layer in a separate multicast group, and receivers would unsubscribe from higher-bandwidth layers when they are experiencing congestion [M94].
Reference: [BCS94] <author> B. Braden, D. Clark, and S. Shenker, </author> <title> "Integrated Services in the Internet Architecture: an Overview", Request for Comments (RFC) 1633, </title> <type> IETF, </type> <month> June </month> <year> 1994. </year>
Reference-contexts: Appendix A discusses the implementation of CBQ in our simulator, and gives a pointer to publically-available distributions of CBQ implementations. Our paper is in the context of a continuing discussion about resource management in the Internet that involves contributions from many people. As examples, see <ref> [BCS94, CJ91, CSZ92, SCZ93, FBZ94] </ref>. The form of this paper was motivated in part as a response to the scheduling architecture proposed in [SCZ93].
Reference: [CJ91] <author> D. Clark and V. Jacobson, </author> <title> "Flexible and Efficient Resource Management for Datagram Networks", </title> <type> unpublished manuscript, </type> <month> April </month> <year> 1991. </year>
Reference-contexts: The approach to link-sharing in our paper is based on the hierarchical class-based resource management proposed initially by Van Jacobson <ref> [CJ91] </ref>. This approach, now referred to as class-based queueing (CBQ), outlines a set of flexible, efficiently-implemented gateway mechanisms that can meet a range of service and link-sharing requirements. Appendix A discusses the implementation of CBQ in our simulator, and gives a pointer to publically-available distributions of CBQ implementations. <p> Appendix A discusses the implementation of CBQ in our simulator, and gives a pointer to publically-available distributions of CBQ implementations. Our paper is in the context of a continuing discussion about resource management in the Internet that involves contributions from many people. As examples, see <ref> [BCS94, CJ91, CSZ92, SCZ93, FBZ94] </ref>. The form of this paper was motivated in part as a response to the scheduling architecture proposed in [SCZ93]. <p> Such classes could be isolated by being reclassified to a lower-priority or lower-bandwidth class. 8 Related work The approach to link-sharing described in this paper is based on CBQ, an approach proposed by Van Jacobson along with other members of the End-to-end Research Group <ref> [CJ91] </ref>. For CBQ a single set of mechanisms is proposed to implement link-sharing and real-time services.
Reference: [CSZ92] <author> D. Clark, S. Shenker, and L. Zhang, </author> <title> "Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism", </title> <booktitle> Proc. SIGCOMM '92, </booktitle> <month> August </month> <year> 1992, </year> <pages> p. 14-26. </pages>
Reference-contexts: Appendix A discusses the implementation of CBQ in our simulator, and gives a pointer to publically-available distributions of CBQ implementations. Our paper is in the context of a continuing discussion about resource management in the Internet that involves contributions from many people. As examples, see <ref> [BCS94, CJ91, CSZ92, SCZ93, FBZ94] </ref>. The form of this paper was motivated in part as a response to the scheduling architecture proposed in [SCZ93]. <p> Many service models for real-time traffic assume that real-time connections would negotiate for a particular class of service (including, for example, a certain average or maximum delay, or allowing for a certain statistical fraction of packet drops, as in [FBZ94]). A slightly different service model introduced in <ref> [CSZ92] </ref> defines predictive service for loss-tolerant applications with adaptive playback times. This model was motivated in part by the emergence in the Internet of applications for audio- and video-conferencing such as vat, the visual audio tool, where the receiver adapts its playback time to the delay in the network. <p> For a class of video traffic without requirements of a minimum per-connection bandwidth (e.g., where the user would rather receive 1 frame each n seconds than receive no frames at all), admissions control procedures would not be required. 7 Sharing and isolation revisited In <ref> [CSZ92] </ref> the authors propose that the addition of real-time services to packet networks be viewed in terms of the two basic principles of isolation and sharing. In this section we discuss the implications of isolation and sharing within the framework of link-sharing. <p> Within a leaf class, isolation between connections could be provided by a round-robin-based scheduling algorithm such as Fair Queueing [DKS90], or sharing between connections could be provided by a scheduling algorithm such as FIFO. In <ref> [CSZ92] </ref>, the authors propose that a predictive-service class should use FIFO scheduling, because FIFO scheduling reduces the tail of the delay distribution, compared to 15 round-robin scheduling, by reducing the delay of packets that arrive at the gateway at the end of a burst of packets from a single connection.
Reference: [DH90] <author> J. Davin and A. Heybey, </author> <title> "A Simulation Study of Fair Queueing and Policy Enforcement", </title> <journal> ACM Computer Communication Review, </journal> <volume> Vol. 20 No. 5, </volume> <pages> pp. 23-29, </pages> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: Previous research on link-sharing has included simulation studies of Fair Queueing between user classes, where a user class could range from an individual application to a collection of connections associated with a particular corporation or government agency <ref> [DH90] </ref>. 9 Conclusions and future work One of the strengths of the link-sharing framework proposed in this paper is that this framework allows for priority-based or other scheduling algorithms at the gateway for real-time traffic, while incorporating provisions to protect the link-sharing behavior at the gateway.
Reference: [DKS90] <author> A. Demers, S. Keshav, and S. Shenker, </author> <title> "Analysis and Simulation of a Fair Queueing Algorithm", Internetworking: </title> <journal> Research and Experience, </journal> <volume> Vol. 1, </volume> <year> 1990, </year> <pages> pp. 3-26. </pages>
Reference-contexts: Within a leaf class, isolation between connections could be provided by a round-robin-based scheduling algorithm such as Fair Queueing <ref> [DKS90] </ref>, or sharing between connections could be provided by a scheduling algorithm such as FIFO.
Reference: [E94] <author> H. Eriksson, "MBone: </author> <title> The Multicast Backbone," </title> <journal> Communications of the ACM, </journal> <month> August </month> <year> 1994, </year> <note> Vol.37 No.8, pp.54-60. </note>
Reference-contexts: This paper focuses on the role of link-sharing in the resource management framework. As an example of the flexibility afforded by link-sharing, consider the current need in the Internet for some mechanism to protect data traffic from the growing volume of real-time Mbone traffic <ref> [E94] </ref>, as well as the need to protect the real-time traffic from the delays caused by competing data traffic.
Reference: [FBZ94] <author> D. Ferrari, A. Banerjea, and H. Zhang, </author> <title> "Network Support for Multimedia: A Discussion of the Tenet Approach", to appear in Computer Networks and ISDN Systems, </title> <journal> special issue on Multimedia Networking, </journal> <year> 1994. </year>
Reference-contexts: Appendix A discusses the implementation of CBQ in our simulator, and gives a pointer to publically-available distributions of CBQ implementations. Our paper is in the context of a continuing discussion about resource management in the Internet that involves contributions from many people. As examples, see <ref> [BCS94, CJ91, CSZ92, SCZ93, FBZ94] </ref>. The form of this paper was motivated in part as a response to the scheduling architecture proposed in [SCZ93]. <p> One possibility for a scheduler at the gateway would be to consider the needs of the real-time traffic first, and to schedule the non-real-time traffic after the needs of the real-time traffic had been met, without having the sched-uler enforce bandwidth limitations on the real-time traffic <ref> [SCZ93, FBZ94] </ref>. After the needs of the real-time traffic had been met, link-sharing mechanisms would be used to share the remaining bandwidth among the non-real-time classes. We argue, however, that this type of approach to link-sharing is not sufficient. <p> Many service models for real-time traffic assume that real-time connections would negotiate for a particular class of service (including, for example, a certain average or maximum delay, or allowing for a certain statistical fraction of packet drops, as in <ref> [FBZ94] </ref>). A slightly different service model introduced in [CSZ92] defines predictive service for loss-tolerant applications with adaptive playback times.
Reference: [F91] <author> S. Floyd, </author> <title> Connections with Multiple Congested Gateways in Packet-Switched Networks Part 1: One-way Traffic, Computer Communication Re 17 view, </title> <address> V.21 N.5, </address> <month> October </month> <year> 1991, </year> <pages> pp. 30-47. </pages>
Reference-contexts: For a traffic class with a FIFO scheduling algorithm and cooperating connections using compatible congestion control algorithms, the bandwidth distribution between the connections can reflect such characteristics of the overall system as the range of roundtrip times and the number of congested gateways for each connection <ref> [F91] </ref>. Using an end-to-end congestion control algorithm, gateway scheduling algorithm, and gateway congestion feedback algorithm that exploit this interaction with system characteristics could perhaps improve on the purely local fairness of round-robin-based schedulers.
Reference: [F93] <author> S. Floyd, </author> <title> "Notes on Guaranteed Service in Resource Management", </title> <type> unpublished manuscript, </type> <month> March </month> <year> 1993. </year>
Reference: [FJ93] <author> S. Floyd and V. Jacobson, </author> <title> Random Early Detection Gateways for Congestion Avoidance, </title> <journal> IEEE/ACM Transactions on Networking, V.1 N.4, </journal> <month> August </month> <year> 1993, </year> <pages> p. 397-413. </pages>
Reference-contexts: For some classes of video traffic, congestion control within the class could be provided by some form of source- or receiver-based rate-adaptive congestion control. For some classes, the gateway could use RED gateway mechanisms to monitor the average queue size and provide appropriate feedback to the sources <ref> [FJ93] </ref>. The link-sharing goals require a data structure associated with each link, describing the class structure at that link, and giving the link-sharing bandwidth for each class.
Reference: [GV93] <author> M. Garrett and M. Vetterli, </author> <title> "Joint Source/ Channel Coding of Statistically Multiplexed Real-Time Services on Packet Networks", </title> <journal> IEEE/ACM Transactions on Networking, V.1 N.1, </journal> <volume> 2/93, </volume> <pages> pp. 71-80. </pages>
Reference-contexts: One possible new application is source- or receiver-based rate-adaptive video, with a congestion control procedure to control the connection's traffic in response to congestion. In source-based rate-adaptive video, the source adjusts its transmission rate in response to feedback from the receivers, possibly using a layered coding scheme <ref> [GV93] </ref> [BTW94]. With receiver-based rate-adaptive video, the video source would partition the signal into separate layers, transmitting each layer in a separate multicast group, and receivers would unsubscribe from higher-bandwidth layers when they are experiencing congestion [M94].
Reference: [GW94] <author> M. Garrett and W. Willinger, </author> <title> "Analysis, Modeling and Generation of Self-Similar VBR Video Traffic", </title> <booktitle> Proc. SIGCOMM '94, </booktitle> <month> August </month> <year> 1994, </year> <pages> pp. 269-280. </pages>
Reference-contexts: Further, this sole reliance on the admissions control procedure and the policing of real-time traffic at the edge of the network is ill-suited to the needs of rate-adaptive video, and is problematic given the presence of long-range dependence in real-time traffic <ref> [GW94] </ref>. Many service models for real-time traffic assume that real-time connections would negotiate for a particular class of service (including, for example, a certain average or maximum delay, or allowing for a certain statistical fraction of packet drops, as in [FBZ94]).
Reference: [H94] <author> Hoffman, D., </author> <title> "Implementation report on the LBL/UCL/Sun CBQ kernel", Presentation to the RSVP Working Group of the IETF, </title> <type> IETF, </type> <month> July </month> <year> 1994. </year> <note> URL http://www.ietf.cnri.reston. va.us/proceedings/94jul/tsv/rsvp.hoffman.slides. html. "An early access experimental release of Solaris RSVP/CBQ" is at URL ftp://playground.sun.com/pub/rsvp/solaris-rsvp-latest.tar.Z. Warning This consists of 15 Mbytes of compressed code! </note>
Reference: [J88] <author> V. Jacobson, </author> <title> Congestion Avoidance and Control, </title> <booktitle> Proc. SIGCOMM '88, </booktitle> <month> August </month> <year> 1988, </year> <pages> pp. 314-329. </pages>
Reference: [JSZC92] <author> S. Jamin, S. Shenker, L. Zhang, and D. Clark, </author> <title> "An Admission Control Algorithm for Predictive Real-time Service", </title> <booktitle> Proceedings of the Third International Workship on Networking and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, CA, </address> <month> Nov. </month> <year> 1992, </year> <pages> pp. 73-91. </pages>
Reference-contexts: This might be done, for example, for a traffic class consisting of a single high-priority real-time connection where low jitter is more important than low average delay. In our imple 1 The proposal in <ref> [SCZ93, JSZC92] </ref> is for real-time traffic to be exempt, and for the admissions control procedure to be the sole mechanism to ensure that the real-time traffic does not violate the link-sharing goals. mentation of the link-sharing structure each class has both a "parent" field giving that class's parent in the class
Reference: [M94] <author> S. McCanne, </author> <title> private communication, </title> <month> October </month> <year> 1994. </year>
Reference-contexts: With receiver-based rate-adaptive video, the video source would partition the signal into separate layers, transmitting each layer in a separate multicast group, and receivers would unsubscribe from higher-bandwidth layers when they are experiencing congestion <ref> [M94] </ref>. These models of rate-adaptive video could be most easily accommodated in a network with link-sharing, where each gateway allocates a certain (possibly dynamic) link-sharing bandwidth to a class of variable-bit-rate video connections.
Reference: [SCZ93] <author> S. Shenker, D. Clark, and L. Zhang, </author> <title> "A Scheduling Service Model and a Scheduling Architecture for an Integrated Services Packet Network", </title> <note> working paper, Xerox PARC, </note> <month> August </month> <year> 1993. </year>
Reference-contexts: Appendix A discusses the implementation of CBQ in our simulator, and gives a pointer to publically-available distributions of CBQ implementations. Our paper is in the context of a continuing discussion about resource management in the Internet that involves contributions from many people. As examples, see <ref> [BCS94, CJ91, CSZ92, SCZ93, FBZ94] </ref>. The form of this paper was motivated in part as a response to the scheduling architecture proposed in [SCZ93]. <p> Our paper is in the context of a continuing discussion about resource management in the Internet that involves contributions from many people. As examples, see [BCS94, CJ91, CSZ92, SCZ93, FBZ94]. The form of this paper was motivated in part as a response to the scheduling architecture proposed in <ref> [SCZ93] </ref>. We are in substantial agreement with much in [SCZ93]; Section 8 of this paper elaborates on 2 a disagreement over the relationship between link-sharing services and real-time services. Thus, the framework for this paper borrows heavily from the framework in [SCZ93]. <p> As examples, see [BCS94, CJ91, CSZ92, SCZ93, FBZ94]. The form of this paper was motivated in part as a response to the scheduling architecture proposed in <ref> [SCZ93] </ref>. We are in substantial agreement with much in [SCZ93]; Section 8 of this paper elaborates on 2 a disagreement over the relationship between link-sharing services and real-time services. Thus, the framework for this paper borrows heavily from the framework in [SCZ93]. Section 2 describes the link-sharing goals in more detail. <p> as a response to the scheduling architecture proposed in <ref> [SCZ93] </ref>. We are in substantial agreement with much in [SCZ93]; Section 8 of this paper elaborates on 2 a disagreement over the relationship between link-sharing services and real-time services. Thus, the framework for this paper borrows heavily from the framework in [SCZ93]. Section 2 describes the link-sharing goals in more detail. Section 3 gives the general guidelines for implementing hierarchical link-sharing, given a resource management framework consisting of a general scheduler and a link-sharing scheduler. <p> A link-sharing structure could mark some classes as either exempt or bounded, if desired. <ref> [SCZ93] </ref> introduces the notion of exempt traffic that is never restricted by the scheduler to its allocated link-sharing bandwidth, regardless of the level of congestion on the output link. 1 Our link-sharing structure would designate an exempt class by assigning the class a link-sharing bandwidth of 100% of the link bandwidth. <p> This might be done, for example, for a traffic class consisting of a single high-priority real-time connection where low jitter is more important than low average delay. In our imple 1 The proposal in <ref> [SCZ93, JSZC92] </ref> is for real-time traffic to be exempt, and for the admissions control procedure to be the sole mechanism to ensure that the real-time traffic does not violate the link-sharing goals. mentation of the link-sharing structure each class has both a "parent" field giving that class's parent in the class <p> This second set of simulations approximates an idealized fluid flow model of instantaneous link-sharing, such as that proposed in <ref> [SCZ93] </ref> for interactive and ftp traffic. The simulations use the formal link-sharing guidelines. Each class has its own Drop-Tail queue at the congested gateway, where packets arriving to a full queue are dropped. <p> One possibility for a scheduler at the gateway would be to consider the needs of the real-time traffic first, and to schedule the non-real-time traffic after the needs of the real-time traffic had been met, without having the sched-uler enforce bandwidth limitations on the real-time traffic <ref> [SCZ93, FBZ94] </ref>. After the needs of the real-time traffic had been met, link-sharing mechanisms would be used to share the remaining bandwidth among the non-real-time classes. We argue, however, that this type of approach to link-sharing is not sufficient. <p> As discussed in the Introduction, the structure of this paper was motivated in part as a response to the scheduling architecture proposed in <ref> [SCZ93] </ref>. The link-sharing scheme proposed in [SCZ93] has been discussed in Section 6. The approach in [SCZ93], after defining a service model including both quality of service commitments to individual flows and link-sharing commitments to collective entities, is to define a precedence ordering for the various service goals, including the link-sharing <p> As discussed in the Introduction, the structure of this paper was motivated in part as a response to the scheduling architecture proposed in <ref> [SCZ93] </ref>. The link-sharing scheme proposed in [SCZ93] has been discussed in Section 6. The approach in [SCZ93], after defining a service model including both quality of service commitments to individual flows and link-sharing commitments to collective entities, is to define a precedence ordering for the various service goals, including the link-sharing goals, and to use this precedence <p> As discussed in the Introduction, the structure of this paper was motivated in part as a response to the scheduling architecture proposed in <ref> [SCZ93] </ref>. The link-sharing scheme proposed in [SCZ93] has been discussed in Section 6. The approach in [SCZ93], after defining a service model including both quality of service commitments to individual flows and link-sharing commitments to collective entities, is to define a precedence ordering for the various service goals, including the link-sharing goals, and to use this precedence ordering to specify which commitments should be satisfied first at <p> The goals in <ref> [SCZ93] </ref> include guaranteed real-time service, predictive real-time service, several classes of as-soon-as-possible service for non-real-time traffic, and hierarchical link-sharing. Our paper does not attempt to outline a complete service model, but presents an alternate approach to reconciling the quality of service commitments and the link-sharing commitments made by the gateway. <p> Our paper does not attempt to outline a complete service model, but presents an alternate approach to reconciling the quality of service commitments and the link-sharing commitments made by the gateway. The goal of hierarchical link-sharing described in <ref> [SCZ93] </ref> is defined as approximating, as close as possible, the bandwidth shares provided by an idealized fluid flow model of instantaneous link-sharing. There are two significant differences between our approach to link-sharing and the approach in [SCZ93]. First, the link-sharing goal in [SCZ93] is restricted to providing link-sharing between entities (or <p> The goal of hierarchical link-sharing described in <ref> [SCZ93] </ref> is defined as approximating, as close as possible, the bandwidth shares provided by an idealized fluid flow model of instantaneous link-sharing. There are two significant differences between our approach to link-sharing and the approach in [SCZ93]. First, the link-sharing goal in [SCZ93] is restricted to providing link-sharing between entities (or classes) of the same priority. <p> The goal of hierarchical link-sharing described in <ref> [SCZ93] </ref> is defined as approximating, as close as possible, the bandwidth shares provided by an idealized fluid flow model of instantaneous link-sharing. There are two significant differences between our approach to link-sharing and the approach in [SCZ93]. First, the link-sharing goal in [SCZ93] is restricted to providing link-sharing between entities (or classes) of the same priority. <p> The link-sharing goal of approximating an idealized fluid flow model does not allow for explicit link-sharing between two classes with different service priorities, such as between a real-time and a non-real-time class, or between a telnet and a lower-priority ftp class of traffic. Second, the link-sharing in <ref> [SCZ93] </ref> takes into account the bandwidth used by real-time traffic, but the link-sharing algorithm does not affect the scheduling of the real-time traffic. From [SCZ93]: "Our architecture dictates that while the link-sharing goals will affect the admission control decisions for real-time flows, the link-sharing goals have no effect of the scheduling <p> Second, the link-sharing in <ref> [SCZ93] </ref> takes into account the bandwidth used by real-time traffic, but the link-sharing algorithm does not affect the scheduling of the real-time traffic. From [SCZ93]: "Our architecture dictates that while the link-sharing goals will affect the admission control decisions for real-time flows, the link-sharing goals have no effect of the scheduling of the real-time packets and only affect the scheduling of elastic packets. <p> We maintain that this is not just one possible way of scheduling packets, but rather the only way consistent with our service model." <ref> [SCZ93] </ref> In contrast, Section 6 of our paper discusses how the explicit enforcement of link-sharing goals for real-time traffic can aid the gateway in serving loss-tolerant real-time traffic (e.g., real-time traffic with drop-preference, or with rate-adaptive congestion control algorithms) by controlling the bandwidth of such traffic while providing the benefits of <p> 6 of our paper also presents our argument that this explicit enforcement of link-sharing goals for real-time traffic does not violate the goals of guaranteed or predictive real-time service, given 16 appropriate admissions control procedures, and contributes to the flexibility of the resource management architecture in accommodating new service models. <ref> [SCZ93] </ref> discusses the possibility of dropping a small percentage of "preemptable" real-time packets at the gateway when other service commitments are in danger of being violated, but there is little discussion of how this could be accomplished.
Reference: [WGCJF94] <author> I. Wakeman, A. Ghosh, J. Crowcroft, V. Ja-cobson, and S. Floyd, </author> <title> "Implementing Real Time Packet Forwarding Policies using Streams", </title> <booktitle> Usenix 1995 Technical Conference, </booktitle> <month> January </month> <year> 1995, </year> <title> New Orleans, </title> <publisher> Louisiana, </publisher> <pages> pp. 71-82. </pages> <address> URL ftp://cs.ucl.ac.uk/darpa/usenix-cbq.ps. </address>
Reference-contexts: Examples range from the multiple agencies that share the Trans-Atlantic FAT pipe and each pay a fixed share of the costs <ref> [WGCJF94] </ref> to individuals who share a single ISDN line. Another requirement for link-sharing is to share bandwidth on a link between different protocol families (e.g., IP and SNA), where controlled link-sharing is desired because the different protocol families have different responses to congestion. <p> Definitions: classifier, estimator. In addition to the general scheduler and the link-sharing scheduler, required link-sharing mechanisms include a classifier and an estimator. The classifier classifies packets arriving at the gateway to the appropriate class for that output link. <ref> [WGCJF94] </ref> describes an efficient implementation of a classifier. While there are many open questions concerning the guidelines used for the classification of packets, these questions are orthogonal to scheduling issues, and will not be discussed further in this paper.
Reference: [Y84] <author> P. Young, </author> <title> Recursive Estimation and Time-Series Analysis, </title> <publisher> Springer-Verlag, </publisher> <year> 1984, </year> <pages> pp. 60-65. </pages>
Reference: [ZDESZ93] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, RSVP: </author> <title> A New Resource ReSerVaTion Protocol, </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: Given an environment with limited bandwidth, fully meeting the needs of real-time traffic requires a suite of real-time services including flow specifications for the real-time applications, a set-up procedure such as RSVP <ref> [ZDESZ93] </ref>, and admissions control procedures to control the number of admitted real-time connections, in addition to appropriate scheduling mechanisms at the gateway.
References-found: 21

