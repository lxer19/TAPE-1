URL: http://www.eecs.umich.edu/~ashaikh/research/papers/icnp98submit.ps.Z
Refering-URL: http://www.eecs.umich.edu/~ashaikh/research/
Root-URL: http://www.cs.umich.edu
Email: fashaikh,kgshing@eecs.umich.edu jrex@research.att.com  
Title: Evaluating the Overheads of Source-Directed Quality-of-Service Routing  
Author: Anees Shaikhy Jennifer Rexfordz, and Kang G. Shiny 
Keyword: quality-of-service, source-directed routing, explicit routing, signalling, link state, modeling  
Address: Ann Arbor, MI 48109-2122 Florham Park, NJ 07932-0971  
Affiliation: yDepartment of Electrical Engineering zNetwork Mathematics Research and Computer Science Networking and Distributed Systems University of Michigan AT&T Labs Research  
Abstract: Quality-of-service (QoS) routing satisfies application performance requirements and optimizes network resource usage by selecting paths based on connection traffic parameters and link load information. However, effective path-selection schemes require the distribution of link-state information, which can impose a significant burden on the bandwidth and processing resources in the network. We investigate the fundamental trade-off between network overheads and the quality of routing decisions in the context of the source-directed link-state routing protocols proposed for future IP and ATM networks. In contrast to previous work that compares different routing algorithms under specific network configurations, we construct a detailed model of QoS routing that parameterizes the path-selection algorithm, link-cost function, and link-state update policy. Through extensive simulation experiments with several representative network topologies and traffic patterns, we uncover the effects of stale link-state information and random fluctuations in traffic load on the routing and signalling overheads. We then investigate how the inaccuracy of link-state information interacts with the size and connectivity of the underlying topology. Finally, we show that by tuning the coarseness of the link-cost metric to the inaccuracy of underlying link-state information we can reduce the computational complexity of the path-selection algorithm without significantly degrading performance. The paper concludes by summarizing our key results as a list of guidelines for designing efficient quality-of-service routing policies in large backbone networks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. J. Bae and T. Suda, </author> <title> "Survey of traffic control schemes and protocols in ATM networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, </volume> <pages> pp. 170-189, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The migration to integrated networks for voice, data, and multimedia applications introduces new challenges in supporting predictable communication performance. To accommodate diverse traffic characteristics and quality-of-service (QoS) requirements, these emerging networks can employ a variety of mechanisms to control access to shared link, buffer, and processing resources <ref> [1, 2] </ref>. These mechanisms include traffic shaping and flow control to regulate an individual traffic stream, as well as link scheduling and buffer management to coordinate resource sharing at the packet or cell level.
Reference: [2] <author> D. Towsley, </author> <title> "Providing quality of service in packet switched networks," </title> <booktitle> in Performance Evaluation of Computer and Communication Systems, </booktitle> <pages> pp. 560-586, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: 1 Introduction The migration to integrated networks for voice, data, and multimedia applications introduces new challenges in supporting predictable communication performance. To accommodate diverse traffic characteristics and quality-of-service (QoS) requirements, these emerging networks can employ a variety of mechanisms to control access to shared link, buffer, and processing resources <ref> [1, 2] </ref>. These mechanisms include traffic shaping and flow control to regulate an individual traffic stream, as well as link scheduling and buffer management to coordinate resource sharing at the packet or cell level.
Reference: [3] <author> W. C. Lee, M. G. Hluchyj, and P. A. Humblet, </author> <title> "Routing subject to quality of service constraints in integrated communication networks," </title> <journal> IEEE Network Magazine, </journal> <pages> pp. 46-55, </pages> <month> July/August </month> <year> 1995. </year>
Reference: [4] <author> Z. Whang and J. Crowcroft, </author> <title> "Quality-of-service routing for supporting multimedia applications," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 14, </volume> <pages> pp. 1228-1234, </pages> <month> September </month> <year> 1996. </year>
Reference: [5] <author> E. Crawley, R. Nair, B. Rajagopalan, and H. Sandick, </author> <title> "A framework for QoS-based routing in the Internet." Internet Draft (draft-ietf-qosr-framework-04.txt), </title> <booktitle> work in progress, </booktitle> <month> April </month> <year> 1998. </year>
Reference: [6] <author> PNNI Specification Working Group, </author> <title> Private Network-Network Interface Specification Version 1.0. ATM Forum, </title> <month> March </month> <year> 1996. </year> <note> Document available at ftp://ftp.atmforum.com/pub/approved-specs/af-pnni-0055.000. </note>
Reference-contexts: We focus on link-state routing algorithms where the source switch or router selects a path based on the connection traffic parameters and the available resources in the network. For example, the ATM Forum's PNNI standard <ref> [6] </ref> defines a routing protocol for distributing topology and load information throughout the network, and a signalling protocol for processing and forwarding connection-establishment requests from the source. Similarly, proposed QoS extensions to the OSPF protocol include an "explicit routing" mechanism for source-directed IP routing [7, 8]. <p> For example, a QOSPF advertisement for a single link requires approximately 50 bytes [7], whereas a PNNI topology state packet may require up to a few hundred bytes depending on the resource advertisement format and bundling of updates <ref> [6] </ref>. In plotting unitless metrics for overhead, we are able to examine the general scaling trends while still permitting estimation of actual overhead for a particular network and protocol configuration.
Reference: [7] <author> Z. Zhang, C. Sanchez, B. Salkewicz, and E. S. Crawley, </author> <title> "Quality of service extensions to OSPF or quality of service path first routing (QOSPF)." Internet Draft (draft-zhang-qos-ospf-01.txt), </title> <booktitle> work in progress, </booktitle> <month> September </month> <year> 1997. </year>
Reference-contexts: Similarly, proposed QoS extensions to the OSPF protocol include an "explicit routing" mechanism for source-directed IP routing <ref> [7, 8] </ref>. During periods of transient overload, link failure, or general congestion, these schemes are able to find QoS paths for more flows. <p> For example, a QOSPF advertisement for a single link requires approximately 50 bytes <ref> [7] </ref>, whereas a PNNI topology state packet may require up to a few hundred bytes depending on the resource advertisement format and bundling of updates [6].
Reference: [8] <author> R. Guerin, S. Kamat, A. Orda, T. Przygienda, and D. Williams, </author> <title> "QoS routing mechanisms and OSPF extensions." Internet Draft (draft-guerin-qos-routing-ospf-03.txt), </title> <booktitle> work in progress, </booktitle> <month> January </month> <year> 1998. </year> <note> Revised version appeared in Proceedings of IEEE GLOBECOM, </note> <month> November </month> <year> 1997. </year> <month> 22 </month>
Reference-contexts: Similarly, proposed QoS extensions to the OSPF protocol include an "explicit routing" mechanism for source-directed IP routing <ref> [7, 8] </ref>. During periods of transient overload, link failure, or general congestion, these schemes are able to find QoS paths for more flows. <p> Finally, new routing algorithms have been proposed that reduce computation and memory overheads by basing path selection on a small set of discrete bandwidth levels <ref> [8, 12] </ref>; these algorithms attempt to balance the trade-off between accuracy and computational complexity. The performance and implementation trade-offs for QoS routing depend on the interaction between a large and complex set of parameters.
Reference: [9] <author> R. Guerin and A. Orda, </author> <title> "QoS-based routing in networks with inaccurate information," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Several recent studies consider the effects of stale or coarse-grained information on the performance of QoS routing algorithms. For example, analytical models have been developed to evaluate routing in hierarchical networks where a switch has limited information about the aggregate resources available in other peer groups or areas <ref> [9] </ref>. To characterize the effects of stale information, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period [10-12], while other work considers a combination of periodic and triggered updates [13].
Reference: [10] <author> L. Breslau, D. Estrin, and L. Zhang, </author> <title> "A simulation study of adaptive source routing in integrated services networks," </title> <type> Tech. Rep. 93-551, </type> <institution> Computer Science Department, University of Southern California, </institution> <year> 1993. </year>
Reference: [11] <author> Q. Ma and P. Steenkiste, </author> <title> "Quality-of-service routing for traffic with performance guarantees," </title> <booktitle> in Proc. IFIP International Workshop on Quality of Service, </booktitle> <address> (Columbia University, New York), </address> <pages> pp. 115-126, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [11, 15-18, 20] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection. <p> In addition to studying a representative "well-known" core topology (an early representation of the MCI backbone that has appeared in other routing studies <ref> [11, 12] </ref>), we also evaluate both random graphs and regular topologies in order to vary important parameters like size, diameter, and node degree in a controlled fashion.
Reference: [12] <author> Q. Ma and P. Steenkiste, </author> <title> "On path selection for traffic with bandwidth guarantees," </title> <booktitle> in Proceedings of IEEE International Conference on Network Protocols, </booktitle> <address> (Atlanta, GA), </address> <month> October </month> <year> 1997. </year>
Reference-contexts: Finally, new routing algorithms have been proposed that reduce computation and memory overheads by basing path selection on a small set of discrete bandwidth levels <ref> [8, 12] </ref>; these algorithms attempt to balance the trade-off between accuracy and computational complexity. The performance and implementation trade-offs for QoS routing depend on the interaction between a large and complex set of parameters. <p> In addition to studying a representative "well-known" core topology (an early representation of the MCI backbone that has appeared in other routing studies <ref> [11, 12] </ref>), we also evaluate both random graphs and regular topologies in order to vary important parameters like size, diameter, and node degree in a controlled fashion.
Reference: [13] <author> M. Peyravian and R. Onvural, </author> <title> "Algorithm for efficient generation of link-state updates in ATM networks," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 29, </volume> <pages> pp. 237-247, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: To characterize the effects of stale information, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period [10-12], while other work considers a combination of periodic and triggered updates <ref> [13] </ref>. However, these studies have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology.
Reference: [14] <author> S. Rampal and D. Reeves, </author> <title> "Routing and admission control algorithms for multimedia data," </title> <journal> Computer Communications, </journal> <month> October </month> <year> 1995. </year>
Reference: [15] <author> R. Gawlick, A. Kamath, S. Plotkin, and K. Ramakrishnan, </author> <title> "Routing and admission control in general topology networks," </title> <type> Tech. Rep. </type> <institution> CS-TR-95-1548, Stanford University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Biasing toward shortest-path routes is particularly attractive in a large, distributed network, since path length is a relatively stable metric, compared with dynamic measurements of link delay or loss rate <ref> [15] </ref>. In our model, the source selects a route based on the bandwidth requirement b and the destination node in three steps: 1. (Optionally) Prune infeasible links (i.e., links i with u 0 i + b &gt; 1) 2. Compute shortest paths to the destination based on hop-count 3.
Reference: [16] <author> R. Gawlick, C. Kalmanek, and K. Ramakrishnan, </author> <title> "Online routing for virtual private networks," </title> <journal> Computer Communications, </journal> <volume> vol. 19, </volume> <pages> pp. 235-244, </pages> <month> March </month> <year> 1996. </year>
Reference: [17] <author> I. Matta and A. U. Shankar, </author> <title> "Dynamic routing of real-time virtual circuits," </title> <booktitle> in Proceedings of IEEE International Conference on Network Protocols, </booktitle> <address> (Columbus, OH), </address> <pages> pp. 132-139, </pages> <year> 1996. </year>
Reference-contexts: To extend beyond the periodic link-state update policies evaluated in previous performance studies <ref> [10-12, 17] </ref>, we consider a three-parameter model that applies to the routing protocols in PNNI and the proposed QoS extensions to OSPF.
Reference: [18] <author> C. Pornavalai, G. Chakraborty, and N. Shiratori, </author> <title> "QoS based routing in integrated services packet networks," </title> <booktitle> in Proceedings of IEEE International Conference on Network Protocols, </booktitle> <address> (Atlanta, GA), </address> <month> October </month> <year> 1997. </year>
Reference: [19] <author> A. Iwata, R. Izmailov, H. Suzuki, and B. Sengupta, </author> <title> "PNNI routing algorithms for multimedia ATM internet," </title> <journal> NEC Reserach & Development, </journal> <volume> vol. 38, </volume> <month> January </month> <year> 1997. </year>
Reference: [20] <author> H. Ahmadi, J. S. Chen, and R. Guerin, </author> <title> "Dynamic routing and call control in high-speed integrated networks," in Teletraffic and Datatraffic in a Period of Change: </title> <booktitle> Proceedings of the International Teletraffic Congress (A. </booktitle> <editor> Jensen and V. B. Iversen, eds.), </editor> <volume> vol. </volume> <booktitle> 14 of Studies in Telecommunication, </booktitle> <pages> pp. 397-403, </pages> <address> Copenhagen, Denmark: </address> <publisher> North-Holland, </publisher> <month> June </month> <year> 1991. </year>
Reference-contexts: Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [11, 15-18, 20] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection.
Reference: [21] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest, </author> <title> Introduction to Algorithms. </title> <address> Cambridge, MA (New York): </address> <publisher> MIT Press (McGraw-Hill), </publisher> <year> 1990. </year>
Reference-contexts: In an N -node network with L links, pruning has O (L) computational complexity and produces a sparser graph consisting entirely of feasible links. Then, the switch can employ the Dijkstra shortest-path tree algorithm <ref> [21] </ref> to compute a the shortest path with the smallest total cost 1 . The Dijkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap.
Reference: [22] <author> B. V. Cherkassky, A. V. Goldberg, and T. Radzik, </author> <title> "Shortest-path algorithms: Theory and experimental evaluation," </title> <journal> Mathematical Programming, </journal> <volume> vol. 73, </volume> <pages> pp. 129-174, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: The Dijkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap. Although advanced data structures can reduce the average and worst-case complexity <ref> [22] </ref>, the shortest-path computation still incurs significant overhead in large networks. Extracting the route introduces complexity in proportion to the path length. 2.2 Link-Cost Metrics The routing algorithm uses link cost metrics fc i g to distinguish between paths of the same length.
Reference: [23] <author> S. Floyd and V. Jacobson, </author> <title> "Synchronization of periodic routing messages," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 122-136, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Still, the predictable nature of periodic updates simplifies the provisioning of processor and bandwidth resources for the exchange of link-state information. To prevent synchronization of update messages for different links, each link introduces a small random component to the generation of successive updates <ref> [23] </ref>.
Reference: [24] <author> V. Paxson and S. Floyd, </author> <title> "Why we don't know how to simulate the Internet," </title> <booktitle> in Proceedings of the Winter Simulation Conference, </booktitle> <address> (Atlanta, GA), </address> <month> December </month> <year> 1997. </year>
Reference-contexts: The constantly changing and decentralized nature of current networks (in particular, the Internet) results in a poor understanding of these characteristics and makes it difficult to define any "typical" configuration <ref> [24] </ref>. Adding to the challenge are observations that conclusions about algorithm or protocol performance may in fact vary dramatically with the underlying network model. <p> We model connection holding times using a Pareto distribution with shape parameter a = 2:5 to capture the heavy-tailed nature of connection durations 2 <ref> [24] </ref> while still producing a distribution with finite variance making it possible to gain sufficient confidence on the simulation results. For comparison we also conducted experiments with exponentially distributed holding times. We denote the mean holding time as `.
Reference: [25] <author> E. W. Zegura, K. L. Calvert, and S. Bhattacharjee, </author> <title> "How to model an internetwork," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 594-602, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: For example, random graphs can result in unrealistically long paths between certain pairs of nodes, "well-known" topologies may show effects that are unique to particular configurations, and regular graphs may hide important effects of heterogeneity and non-uniformity <ref> [25] </ref>. Consequently, our simulation experiments consider a range of network topologies, and we comment on similarities and differences between the trends in each configuration. <p> Consequently, our simulation experiments consider a range of network topologies, and we comment on similarities and differences between the trends in each configuration. As our study focuses on backbone networks, we consider topologies with relatively high connectivity, an increasingly common feature of emerging core backbone networks <ref> [25, 26] </ref>, that support a dense traffic matrix (with significant traffic between most pairs of core nodes) and are resilient to link failures.
Reference: [26] <author> A. G. Greenberg and R. Srikant, </author> <title> "Computational tecniques for accurate performance evaluation of multirate, multihop communication networks," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 5, </volume> <pages> pp. 266-277, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Consequently, our simulation experiments consider a range of network topologies, and we comment on similarities and differences between the trends in each configuration. As our study focuses on backbone networks, we consider topologies with relatively high connectivity, an increasingly common feature of emerging core backbone networks <ref> [25, 26] </ref>, that support a dense traffic matrix (with significant traffic between most pairs of core nodes) and are resilient to link failures.
Reference: [27] <author> B. M. Waxman, </author> <title> "Routing of multipoint connections," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, </volume> <pages> pp. 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: The random graph is an instance generated using Waxman's model <ref> [27] </ref>. In the regular topology all nodes have identical connectivity. the MCI and random topologies, though we use a set of regular graphs with different degrees of connectivity to evaluate the effects of having multiple shortest-path routes between pairs of nodes.
Reference: [28] <author> R. Guerin, A. Orda, and D. Williams, </author> <title> "QoS routing mechanisms and OSPF extensions," </title> <booktitle> in Proceedings of IEEE GLOBECOM, </booktitle> <month> November </month> <year> 1997. </year>
Reference-contexts: To address staleness more directly, the pruning policy could more conservative or more liberal in removing links to balance the trade-off between minimal and nonminimal routes <ref> [28] </ref>. Route flapping: Although QoS routing performs well for small link-state update periods (significantly outperforming static routing [29]), the blocking probability rises relatively quickly before gradually plateauing for large update periods.
Reference: [29] <author> A. Shaikh, J. Rexford, and K. G. Shin, </author> <title> "Dynamics of quality-of-service routing with inaccurate link-state information," </title> <type> Tech. Rep. </type> <institution> CSE-TR-350-97, Computer Science and Engineering, University of Michigan, </institution> <month> November </month> <year> 1997. </year> <note> (available at http://www.eecs.umich.edu/~ashaikh/research/index.html). 23 </note>
Reference-contexts: To address staleness more directly, the pruning policy could more conservative or more liberal in removing links to balance the trade-off between minimal and nonminimal routes [28]. Route flapping: Although QoS routing performs well for small link-state update periods (significantly outperforming static routing <ref> [29] </ref>), the blocking probability rises relatively quickly before gradually plateauing for large update periods. In Figure 2 (a), even an update period of five time units (five times the average connection interarrival time) shows significant performance degradation. <p> Additional experiments with the well-connected regular topology show the same trend <ref> [29] </ref>. Blocking insensitivity to update trigger: To understand this phenomenon, consider the two possible effects of stale link-state information on the path-selection process when pruning is enabled.
Reference: [30] <author> A. Khanna and J. Zinky, </author> <title> "The revised ARPANET routing metric," </title> <booktitle> in Proceedings of ACM SIGCOMM, </booktitle> <address> (Austin, TX), </address> <pages> pp. 45-56, </pages> <year> 1989. </year>
Reference-contexts: Under large update periods, relative to the arrival rates and holding times, the links can experience dramatic fluctuations in link state between successive update messages, as shown in Figure 3. Such link-state flapping has been observed in packet routing networks <ref> [30] </ref>, where path selection can vary on a packet-by-packet basis; the same phenomenon occurs here since the link-state update period is large relative to the connection arrival rates and holding times.
Reference: [31] <author> K. C. Claffy, H.-W. Braun, and G. C. Polyzos, </author> <title> "A parameterizable methodology for Internet traffic flow profiling," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, </volume> <pages> pp. 1481-1494, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: With some logical separation of resources for short-lived and long-lived traffic, the network could tune the link-state update policies to the arrival rates and holding times of the long-lived connections. With appropriate mechanisms to identify or detect long-lived traffic, such as flow detection schemes for grouping related packets <ref> [31, 32] </ref>, the network can assign this subset of the traffic to QoS routes and achieve good routing performance with a lower link-state update rate. 3.2 Triggered Link-State Updates Although periodic updates introduce a predictable overhead for exchanging link-state information, triggered updates can offer more accurate link-state information for the same
Reference: [32] <author> A. Feldmann, J. Rexford, and R. Caceres, </author> <title> "Reducing overhead in flow-switched networks: An empirical study of web traffic," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1998. </year>
Reference-contexts: With some logical separation of resources for short-lived and long-lived traffic, the network could tune the link-state update policies to the arrival rates and holding times of the long-lived connections. With appropriate mechanisms to identify or detect long-lived traffic, such as flow detection schemes for grouping related packets <ref> [31, 32] </ref>, the network can assign this subset of the traffic to QoS routes and achieve good routing performance with a lower link-state update rate. 3.2 Triggered Link-State Updates Although periodic updates introduce a predictable overhead for exchanging link-state information, triggered updates can offer more accurate link-state information for the same <p> The network can segregate the traffic in short- and long-lived flows by partitioning link bandwidth for the two classes, and detecting long-lived flows at the edge of the network <ref> [32] </ref>. * Triggered link-state updates: Triggered link-state updates do not significantly affect the overall blocking probability, though coarse-grain triggers do increase the amount of blocking that stems from more expensive set-up failures.
Reference: [33] <author> E. Gelenbe, S. Kotia, and D. Krauss, </author> <title> "Call establishment overload in ATM networks," Performance Evaluation, </title> <year> 1997. </year>
Reference-contexts: But the benefit of larger triggers and periods must be weighed against the increase in connection blocking, particularly due to more expensive set-up failures. By blocking connections inside the network, set-up failures consume processing resources and delay the establishment of other connections <ref> [33] </ref>. In addition, a failed connection temporarily holds resources at the upstream links, which may block other connections in the interim [34, 35]. In contrast, routing failures are purely local and do not consume any resources beyond the processing capacity at the source switch.
Reference: [34] <author> R.-H. Hwang, J. Kurose, and D. Towsley, </author> <title> "On call processing delay in high speed networks," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 3, </volume> <pages> pp. 628-639, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: By blocking connections inside the network, set-up failures consume processing resources and delay the establishment of other connections [33]. In addition, a failed connection temporarily holds resources at the upstream links, which may block other connections in the interim <ref> [34, 35] </ref>. In contrast, routing failures are purely local and do not consume any resources beyond the processing capacity at the source switch.
Reference: [35] <author> D. J. Mitzel, D. Estrin, S. Shenker, and L. Zhang, </author> <title> "A study of reservation dynamics in integrated services packet networks," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 871-879, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: By blocking connections inside the network, set-up failures consume processing resources and delay the establishment of other connections [33]. In addition, a failed connection temporarily holds resources at the upstream links, which may block other connections in the interim <ref> [34, 35] </ref>. In contrast, routing failures are purely local and do not consume any resources beyond the processing capacity at the source switch.
Reference: [36] <author> A. Shaikh, J. Rexford, and K. G. Shin, </author> <title> "Efficient precomputation of quality-of-service routes," </title> <booktitle> in Proceedings of Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> July </month> <year> 1998. </year> <note> Postscript available at http://www.eecs.umich.edu/~ashaikh/research/index.html. 24 </note>
Reference-contexts: In addition, coarse-grain link costs have the benefit of increasing the number of equal-cost routes, which improves the effectiveness of alternate routing. We exploit these characteristics in our recent work on precomputation of QoS routes <ref> [36] </ref>. * Exponent alpha: Under fine-grain link costs (large C), routing performance is not very sensitive to the exponent ff; an exponent of 1 or 2 performs well, and larger values do not appear to increase route flapping, even under very stale information.
References-found: 36

