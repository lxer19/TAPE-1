URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/Uniquest.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Title: Uniquest: Determining the Semantics of Complex Uniqueness Constraints Uniquest: Determining the Semantics of Complex Uniqueness
Author: Th.P. van der Weide A.H.M. ter Hofstede P. van Bommel Th.P. van der Weide, A.H.M. ter Hofstede, and P. van Bommel. 
Note: Published as:  
Date: April 28, 1993  April 1992.  
Pubnum: 35(2):148-156,  
Abstract: In this article the Uniquest Algorithm (the "quest for uniqueness"), defined in the Predicator Model, is discussed in depth. The Predicator Model is a general platform for object-role models. The Uniquest Algorithm is a constructive formal definition of the semantics of uniqueness constraints. As such, it facilitates the implementation in so-called CASE-tools. The Uniquest Algorithm provides a systematic approach for the interpretation of complex uniqueness constraints. This interpretation process is easily traced, using an extra formalism, called the Object Relation Network (ORN). The ORN is a directed graph with labelled edges, representing an object-role information structure. Intermediate results that are outside the scope of the information structure at hand, are represented elegantly as an ORN. A number of theoretical and practical examples prove the power of the Uniquest Algorithm. In these examples we will encouter complex uniqueness constraints, that are missed easily. The Uniquest Algorithm provides a handle for recognition.
Abstract-found: 1
Intro-found: 1
Reference: [AFS87] <author> S. Abiteboul, </author> <title> P.C. </title> <editor> Fischer, and H.J. (Eds.) Schek. </editor> <title> Nested Relations and Complex Objects in Databases. </title> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference-contexts: The interpretation (formal semantics) of this type of constraint is a candidate key over a (derived) relation type. This derived relation type will be expressed using Relational Algebra operators, as defined for the Predicator Model (see [BHW91], but also <ref> [AFS87] </ref>). The purpose of the Uniquest Algorithm is to yield this derived relation type. 3.1 Single Fact Type Uniqueness Constraint ~ X 1 - ~ X 3 q f A uniqueness constraint specifies a set of predicators, that may only be populated uniquely.
Reference: [AH87] <author> S. Abiteboul and R. Hull. </author> <title> IFO: a formal semantic database model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(4) </volume> <pages> 525-565, </pages> <month> dec </month> <year> 1987. </year>
Reference-contexts: Problems with such formalisms involve ambiguity and veri-fication of models, and the proof of properties of modelling techniques (see <ref> [AH87] </ref>, [BHW91], [Cre83], [Hal89], [SFMS89] and [Tro86]). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality.
Reference: [BHW91] <author> P. van Bommel, A.H.M. ter Hofstede, and Th.P. van der Weide. </author> <title> Semantics and verification of object-role models. </title> <journal> Information Systems, </journal> <volume> 16(5), </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: Problems with such formalisms involve ambiguity and veri-fication of models, and the proof of properties of modelling techniques (see [AH87], <ref> [BHW91] </ref>, [Cre83], [Hal89], [SFMS89] and [Tro86]). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality. In [BHW91], some of these problems were illustrated and solved, using a general object-role <p> of models, and the proof of properties of modelling techniques (see [AH87], <ref> [BHW91] </ref>, [Cre83], [Hal89], [SFMS89] and [Tro86]). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality. In [BHW91], some of these problems were illustrated and solved, using a general object-role platform, called the Predicator Model. <p> An information structure can alternatively be represented as a directed graph, called the Object Relation Network (see <ref> [BHW91] </ref>). Definition 2.3 Object Relation Network An object relation network N is a tuple hO; Ei, where E O fi O fi P is a set of directed labelled edges. <p> The interpretation (formal semantics) of this type of constraint is a candidate key over a (derived) relation type. This derived relation type will be expressed using Relational Algebra operators, as defined for the Predicator Model (see <ref> [BHW91] </ref>, but also [AFS87]). The purpose of the Uniquest Algorithm is to yield this derived relation type. 3.1 Single Fact Type Uniqueness Constraint ~ X 1 - ~ X 3 q f A uniqueness constraint specifies a set of predicators, that may only be populated uniquely. <p> The definition of candidate keys is based on functional dependency. We assume that the reader is familiar with the concept of functional dependency. For a general introduction we refer to [Mai88]. For a formal definition of functional dependency in terms of populations of object-role information structures, see <ref> [BHW91] </ref>. 3.2 Joinable via Common Object Types If more than one fact type is involved in uniqueness constraint ff, these fact types should be joinable via common object types. 5 Example 3.1 Consider the constraint U (ff), where ff = fp; s; vg, imposed on the information structure from example 1. <p> So, the condition joinable via common object types corresponds in the Object Relation Network to an undirected path connecting all fact types involved. A formal definition can be found in <ref> [BHW91] </ref>. X 2 X 4 f h @I H H H HY 66 @I @I p q r s t u v The constraint ff is represented in the corresponding Object Relation Network by em phasizing the edges from the uniqueness constraint (see figure 4). <p> In order to interpret this uniqueness constraint, we obviously have to unnest fact type g. The resulting relation r r (g) for short, is depicted in figure 7. This figure will also give a good impression of the behaviour of the unnest operator. For more details see <ref> [BHW91] </ref>. 6 ~ X 3 s ~ X 1 ~ X 2 ffi X 1 X 3 g @I @ @I r s X 1 X 3 g @I @ @I @ p q r s -unnest X 1 X 3 r 6 @ @ @I 7 3.4 The Uniquest Algorithm <p> Experiments provide evidence for this. As a result, the Uniquest Algorithm will be useful as an educational tool. The ~-join operator is also very useful for the definition of other types of constraints. These types of constraints were extensively discussed in <ref> [BHW91] </ref>.
Reference: [BM86] <author> F. Bry and R. Manthey. </author> <title> Checking consistency of database constraints: a logical basis. </title> <booktitle> In Proceedings of the Twelfth International Conference on Very Large Data Bases, </booktitle> <pages> pages 13-20, </pages> <year> 1986. </year>
Reference-contexts: It was shown that this platform was powerful enough to prove the NP-completeness of certain constraint inconsistencies. Related results can be found in <ref> [BM86] </ref> and [Kun84]. Another important contribution of the Predicator Model to the support of data modelling was the Uniquest Algorithm, a mechanism for the management of complex uniqueness constraints. This algorithm expresses the formal semantics of a uniqueness constraint as a candidate key for a derived relation.
Reference: [Che76] <author> P.P. Chen. </author> <title> The entity-relationship model: toward a unified view of data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <year> 1976. </year>
Reference: [Cre83] <author> P.N. Creasy. </author> <title> A formalisation of the NIAM conceptual Information Model. </title> <institution> Dept of Computer Science, Australian National University, </institution> <year> 1983. </year>
Reference-contexts: Problems with such formalisms involve ambiguity and veri-fication of models, and the proof of properties of modelling techniques (see [AH87], [BHW91], <ref> [Cre83] </ref>, [Hal89], [SFMS89] and [Tro86]). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality.
Reference: [Dat86] <author> C.J. Date. </author> <title> An Introduction to Data Base Systems. </title> <publisher> Addison Wesley, </publisher> <year> 1986. </year>
Reference-contexts: An example of the occurrence of such a constraint is the well-known supplier-part database (see <ref> [Dat86] </ref>). Consider the schema in figure 13. A part is needed by a project. This need is satisfied by a supplier and it has a certain priority.
Reference: [Hal89] <author> T.A. Halpin. </author> <title> A logical analysis of information systems: static aspects of the data-oriented perspective. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Queensland, Australia, </institution> <year> 1989. </year>
Reference-contexts: Problems with such formalisms involve ambiguity and veri-fication of models, and the proof of properties of modelling techniques (see [AH87], [BHW91], [Cre83], <ref> [Hal89] </ref>, [SFMS89] and [Tro86]). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality.
Reference: [Ind89] <institution> Index Technology Corporation. EXCELERATOR. Index Technology Corporation, </institution> <address> One Main Street, Cambridge, M.A. 02142-9990, </address> <year> 1989. </year>
Reference-contexts: This integrity involves constraints on the possible populations. In this paper, the attention is focussed on the uniqueness constraint, also called candidate key or functional dependency. For theoretical purposes and for the definition of practical tools (such as IEW [Kno87], EXCELERATOR <ref> [Ind89] </ref>, SDW [Pan88] and RIDL* [Tro89]), a powerful formalism is needed fl This work has been partially supported by the ESPRIT project APPED (2499). y This work has been partially supported by SERC project SOCRATES. z Dept. of Information Systems, Faculty of Mathematics and Informatics, University of Nijmegen, Toer nooiveld 1,
Reference: [Kno87] <author> KnowledgeWare. </author> <title> Information Engineering Workbench. </title> <publisher> KnowledgeWare, Inc., </publisher> <address> 3340 Peachtree Road, N.E., Suite 1100, Atlanta, GA 30026, </address> <year> 1987. </year>
Reference-contexts: Data integrity is the central notion in such models. This integrity involves constraints on the possible populations. In this paper, the attention is focussed on the uniqueness constraint, also called candidate key or functional dependency. For theoretical purposes and for the definition of practical tools (such as IEW <ref> [Kno87] </ref>, EXCELERATOR [Ind89], SDW [Pan88] and RIDL* [Tro89]), a powerful formalism is needed fl This work has been partially supported by the ESPRIT project APPED (2499). y This work has been partially supported by SERC project SOCRATES. z Dept. of Information Systems, Faculty of Mathematics and Informatics, University of Nijmegen, Toer
Reference: [Kun84] <author> C.H. Kung. </author> <title> A temporal framework for information systems specification and verification. </title> <type> PhD thesis, </type> <institution> University of Trondheim, Norway, </institution> <year> 1984. </year>
Reference-contexts: It was shown that this platform was powerful enough to prove the NP-completeness of certain constraint inconsistencies. Related results can be found in [BM86] and <ref> [Kun84] </ref>. Another important contribution of the Predicator Model to the support of data modelling was the Uniquest Algorithm, a mechanism for the management of complex uniqueness constraints. This algorithm expresses the formal semantics of a uniqueness constraint as a candidate key for a derived relation.
Reference: [Mai88] <author> D. Maier. </author> <title> The theory of relational databases. </title> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: The uniqueness constraint U (ff) then expresses ff to be a candidate key of f . The definition of candidate keys is based on functional dependency. We assume that the reader is familiar with the concept of functional dependency. For a general introduction we refer to <ref> [Mai88] </ref>.
Reference: [Men87] <author> E. Mendelson. </author> <title> Introduction to Mathematical Logic. </title> <publisher> Wadsworth and Brooks, </publisher> <year> 1987. </year>
Reference-contexts: With respect to the predicators we have: Base (p) = A Fact (p) = f Base (q) = B Fact (q) = f Base (r) = B Fact (r) = g etc. For the population (instantiation) of an information structure we assume some universal domain (see <ref> [Men87] </ref>). Definition 2.2 Population A population Pop of an information structure I = hP; O; Sub; F; Base; ui assigns to each object type in O a set of values of the universal domain, conform the structure as prescribed in P and F .
Reference: [NH89] <author> G.M. Nijssen and T.A. Halpin. </author> <title> Conceptual schema and Relational Database Design: A fact oriented approach. </title> <publisher> Prentice Hall of Australia Pty Ltd, </publisher> <year> 1989. </year>
Reference-contexts: by the operator: Fact : P ! F which is defined by: Fact (p) = f , p 2 f . ~ A ~ C ~ E s f g h Example 2.1 In figure 1 we see an example of an information structure, drawn in the usual fashion (see <ref> [NH89] </ref>). We have: P = fp; q; r; s; t; u; vg F = ff; g; hg where f = fp; qg, g = fr; s; tg and h = fu; vg.
Reference: [Pan88] <author> Pandata. </author> <title> The System Development Workbench. Pandata B.V., Postbus 1923, </title> <type> 2280 DX Rijswijk, </type> <address> The Netherlands, </address> <year> 1988. </year> <month> 18 </month>
Reference-contexts: This integrity involves constraints on the possible populations. In this paper, the attention is focussed on the uniqueness constraint, also called candidate key or functional dependency. For theoretical purposes and for the definition of practical tools (such as IEW [Kno87], EXCELERATOR [Ind89], SDW <ref> [Pan88] </ref> and RIDL* [Tro89]), a powerful formalism is needed fl This work has been partially supported by the ESPRIT project APPED (2499). y This work has been partially supported by SERC project SOCRATES. z Dept. of Information Systems, Faculty of Mathematics and Informatics, University of Nijmegen, Toer nooiveld 1, 6525 ED
Reference: [SFMS89] <author> C. Sernadas, J. Fiadeiro, R. Meersman, and A. Sernadas. </author> <title> Proof-theoretic concep-tual modelling: The NIAM case study. </title> <booktitle> In Proceedings of the IFIP TC 8 / WG 8.1 Working Conference on Information System Concepts: An In-depth Analysis, </booktitle> <pages> pages 1-30, </pages> <year> 1989. </year>
Reference-contexts: Problems with such formalisms involve ambiguity and veri-fication of models, and the proof of properties of modelling techniques (see [AH87], [BHW91], [Cre83], [Hal89], <ref> [SFMS89] </ref> and [Tro86]). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality. <p> This model is not just another data model, but a general platform for data models with an underlying object-role structure, such as the data structure used in the NIAM ([NH89], [VvB82], <ref> [SFMS89] </ref>, [Win90]) modelling technique, and the data structure used in the ER Approach ([Che76]). It was shown that this platform was powerful enough to prove the NP-completeness of certain constraint inconsistencies. Related results can be found in [BM86] and [Kun84].
Reference: [Tro86] <author> O.M.F. de Troyer. </author> <title> On rule-based generation of conceptual database updates. </title> <booktitle> In Proceedings of the IFIP TC 2 Working Conference on Knowledge and Data, </booktitle> <year> 1986. </year>
Reference-contexts: Problems with such formalisms involve ambiguity and veri-fication of models, and the proof of properties of modelling techniques (see [AH87], [BHW91], [Cre83], [Hal89], [SFMS89] and <ref> [Tro86] </ref>). On the other hand, a formal semantics provides a good basis for the development of teaching material. Furthermore, a good understanding of the concepts will lead to models of better quality.
Reference: [Tro89] <author> O.M.F. de Troyer. </author> <title> RIDL*: A Tool for the Computer-Assisted Engineering of Large Databases in the Presence of Integrity Constraints. </title> <type> Technical report, </type> <institution> Institute for Language Technology and Artificial Intelligence ITK, Tilburg University, </institution> <year> 1989. </year> <note> ITK Research Report No. 3. </note>
Reference-contexts: This integrity involves constraints on the possible populations. In this paper, the attention is focussed on the uniqueness constraint, also called candidate key or functional dependency. For theoretical purposes and for the definition of practical tools (such as IEW [Kno87], EXCELERATOR [Ind89], SDW [Pan88] and RIDL* <ref> [Tro89] </ref>), a powerful formalism is needed fl This work has been partially supported by the ESPRIT project APPED (2499). y This work has been partially supported by SERC project SOCRATES. z Dept. of Information Systems, Faculty of Mathematics and Informatics, University of Nijmegen, Toer nooiveld 1, 6525 ED Nijmegen, The Netherlands,
Reference: [Ver91] <author> T.F Verhoef. </author> <title> Structuring Yourdon's modern structured analysis. </title> <editor> In V.-P. Tah-vanainen and K. Lyytinen, editors, </editor> <booktitle> Proceedings of the Second Workshop on the Next Generation of CASE Tools, </booktitle> <pages> pages 219 - 313, </pages> <address> Trondheim, Norway, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: The uniqueness constraint then expresses: No two different projects need the same part, with the same priority, supplied by the same supplier. ~ Name has ~ Direction has @ ~ DFD Object p q Flow connects ffi Another example can be found in the Yourdon meta model (see for example <ref> [Ver91] </ref>), where the constraint was found due to the Uniquest Algorithm. This constraint expresses (see figure 14): Flows originating from, or entering the same DFD-object, should have different names.
Reference: [VvB82] <author> G.M.A. Verheijen and J. van Bekkum. </author> <title> NIAM: an Information Analysis Method. </title> <editor> In T.W. Olle, H.G. Sol, and A.A. Verrijn Stuart, editors, </editor> <booktitle> Information System Design Methodologies: A Comparative Review, </booktitle> <pages> pages 537-590. </pages> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: In [BHW91], some of these problems were illustrated and solved, using a general object-role platform, called the Predicator Model. This model is not just another data model, but a general platform for data models with an underlying object-role structure, such as the data structure used in the NIAM ([NH89], <ref> [VvB82] </ref>, [SFMS89], [Win90]) modelling technique, and the data structure used in the ER Approach ([Che76]). It was shown that this platform was powerful enough to prove the NP-completeness of certain constraint inconsistencies. Related results can be found in [BM86] and [Kun84].
Reference: [Win90] <author> J.J.V.R. Wintraecken. </author> <title> The NIAM Information Analysis Method: Theory and Practice. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1990. </year> <month> 19 </month>
Reference-contexts: This model is not just another data model, but a general platform for data models with an underlying object-role structure, such as the data structure used in the NIAM ([NH89], [VvB82], [SFMS89], <ref> [Win90] </ref>) modelling technique, and the data structure used in the ER Approach ([Che76]). It was shown that this platform was powerful enough to prove the NP-completeness of certain constraint inconsistencies. Related results can be found in [BM86] and [Kun84].
References-found: 21

