URL: http://www.cs.utah.edu/~chitturi/thesis/proposal.ps.gz
Refering-URL: http://www.cs.utah.edu/~chitturi/thesis/index.html
Root-URL: 
Email: chitturi@cs.utah.edu  
Title: A Secure Network Server  
Author: Ajay Chitturi 
Date: August 20, 1997  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> E. Amoroso. </author> <title> Fundamentals of Computer Security Technology. </title> <publisher> Prentice Hall, </publisher> <year> 1994. </year>
Reference-contexts: But trusted system concepts by themselves are insufficient to provide network security solutions [26]. Experience with secure networks has led many researchers to believe that three primary elements of network security exist: encryption, protocols and trusted components <ref> [1] </ref>. The various elements of network security must work together to properly protect information in transit and in storage on a secure network.
Reference: [2] <author> R. Atkinson. </author> <title> IP authentication header. </title> <type> RFC 1826, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: If an intermediary is used for transmission between different nodes, then a clear-text version is available for perusal at the intermediary node. Also the cost of key distribution could be huge. In addition end-to-end measures are more naturally suited to users' perceptions of their security requirements. Network layer: IPsec <ref> [4, 2, 3] </ref> provides a standard for IP layer authentication and encryption. The problem with IP layer cryptographic processing is that it does not support security associations between end users in a direct manner. <p> IPsec depends on ISAKMP for establishing the security associations. Two specific headers are used to provide security services in IPsec: IP Authentication Header (AH) <ref> [2] </ref> and IP Encapsulating Security Payload (ESP) [3]. IP AH is a mechanism for providing integrity and host authentication for IP datagrams. IP ESP is a mechanism for providing confidentiality for IP datagrams.
Reference: [3] <author> R. Atkinson. </author> <title> IP encapsulating security payload (ESP). </title> <type> RFC 1827, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: If an intermediary is used for transmission between different nodes, then a clear-text version is available for perusal at the intermediary node. Also the cost of key distribution could be huge. In addition end-to-end measures are more naturally suited to users' perceptions of their security requirements. Network layer: IPsec <ref> [4, 2, 3] </ref> provides a standard for IP layer authentication and encryption. The problem with IP layer cryptographic processing is that it does not support security associations between end users in a direct manner. <p> IPsec depends on ISAKMP for establishing the security associations. Two specific headers are used to provide security services in IPsec: IP Authentication Header (AH) [2] and IP Encapsulating Security Payload (ESP) <ref> [3] </ref>. IP AH is a mechanism for providing integrity and host authentication for IP datagrams. IP ESP is a mechanism for providing confidentiality for IP datagrams.
Reference: [4] <author> R. Atkinson. </author> <title> Security architecture for the internet protocol. </title> <type> RFC 1825, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: If an intermediary is used for transmission between different nodes, then a clear-text version is available for perusal at the intermediary node. Also the cost of key distribution could be huge. In addition end-to-end measures are more naturally suited to users' perceptions of their security requirements. Network layer: IPsec <ref> [4, 2, 3] </ref> provides a standard for IP layer authentication and encryption. The problem with IP layer cryptographic processing is that it does not support security associations between end users in a direct manner.
Reference: [5] <author> S. M. Bellovin. </author> <title> Problem areas for the IP security protocols. </title> <booktitle> In Proceedings of the Sixth Usenix UNIX Security Symposium, </booktitle> <month> July </month> <year> 1996. </year>
Reference-contexts: The problem with IP layer cryptographic processing is that it does not support security associations between end users in a direct manner. Bellovin in his discussion on the weaknesses of the IP layer security protocols <ref> [5] </ref> recommends moving the cryptographic processing towards the transport layer. He suggests that the semantics for creating security associations are quite clear at the transport layer. Transport layer offers process level communication and hence guarantees a secure pipe between two users rather than between two machines.
Reference: [6] <author> T. Dierks and C. Allen. </author> <title> The TLS protocol. Internet draft, Transport Layer Security Working Group, </title> <month> May </month> <year> 1997. </year>
Reference-contexts: The Transport layer Security (TLS) working group is working on standardizing this protocol with minor changes <ref> [6] </ref>. SSL has the advantages of being application protocol independent and requiring no modification to the operating system.
Reference: [7] <author> T. Fine and S. E. Minear. </author> <title> Assuring distributed trusted mach. </title> <booktitle> In Proceedingsof the 1993 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 206-218, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Introduction The wide-spread use of computers and networks has emphasized the necessity for secure operating systems and network security mechanisms. Security in operating systems has long been a topic of research <ref> [19, 7, 8] </ref> and this has led to the formulation of different security models and policies for operating systems. Some basic differences exist between the security requirements for stand-alone systems and networks. This chapter gives a brief introduction to the concepts related to network security.
Reference: [8] <author> C. Flink and J. Weiss. </author> <title> System V/MLS: Labeling and mandatory policy alternatives. </title> <booktitle> In Proceedings of the 1989 Winter USENIX Conference, </booktitle> <month> Feb. </month> <year> 1988. </year>
Reference-contexts: Introduction The wide-spread use of computers and networks has emphasized the necessity for secure operating systems and network security mechanisms. Security in operating systems has long been a topic of research <ref> [19, 7, 8] </ref> and this has led to the formulation of different security models and policies for operating systems. Some basic differences exist between the security requirements for stand-alone systems and networks. This chapter gives a brief introduction to the concepts related to network security.
Reference: [9] <author> A. O. Freier, P. Karlton, and P. C. Kocher. </author> <title> The SSL protocol. Internet draft, Transport Layer Security Working Group, </title> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: Some IPsec implementations such as the one by NRL [13] support such security associations, but this violates traditional layering by making use of transport layer information at the IP layer. 10 Transport layer: Netscape's Secure Sockets Layer (SSL) <ref> [9] </ref> provides a standard for authentication and encryption at the application layer (i.e. above the transport layer). The Transport layer Security (TLS) working group is working on standardizing this protocol with minor changes [6].
Reference: [10] <author> D. Futcher, R. Sharp, and B. Yasaki. </author> <title> Building a multi-level secure tcp/ip. </title> <booktitle> In Proceedings of the 14th National Computer Security Conference, </booktitle> <pages> pages 78-87, </pages> <year> 1991. </year>
Reference-contexts: Also our network access control design is more comprehensive and involves more finer grain checks. To our knowledge there are no systems which support multi-level TCP/UDP port number spaces (or virtualized port spaces). MLS/TCP <ref> [10] </ref> incorporates security labels into the datagrams making use of the IP-security option (IPSO) [16, 15]. Network access control is implemented by making use of these labels. But they assume that Identification and Authentication will be implemented at a higher layer in the protocol stack.
Reference: [11] <author> M. Gasser. </author> <title> Building a Secure Computer System. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1988. </year>
Reference-contexts: Network subjects could be users, hosts, nodes, subnets, etc. and network objects could be messages, files, packets and connections. For a detailed discussion refer to <ref> [11] </ref>. The following chapters describe the approach we will be taking for implementing network security in the Flask operating system. Chapter 2 goes through some of the related work in network security. Chapter 3 describes the key concepts of the Flask operating system.
Reference: [12] <author> D. Harkins and D. Carrel. </author> <title> The resolution of isakmp with oakley. </title> <type> Internet draft, </type> <institution> IPsec Working Group, </institution> <month> July </month> <year> 1997. </year>
Reference-contexts: IP AH and IP ESP are not bound to specific cryptographic algorithms. 5.3 ISAKMP The Internet Security Association & Key Management Protocol (ISAKMP) [17] provides a framework for Internet key management and specific protocol support for negotiation of security attributes. ISAKMP in combination with the Oakley Key Determination Protocol <ref> [12] </ref> provides full security association attribute negotiation, as well as authentication methods that provide both repudiation and non-repudiation. 11 We will be using Cisco's ISAKMP implementation for key management.
Reference: [13] <author> R. J.Atkinson, D. L. McDonald, B. G. Phan, C. W. Metz, and K. C. Chin. </author> <booktitle> Implementation of IPv6 in 4.4 BSD. In Proceedings of the USENIX 1996 Annual Technical Conference, </booktitle> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: He suggests that the semantics for creating security associations are quite clear at the transport layer. Transport layer offers process level communication and hence guarantees a secure pipe between two users rather than between two machines. Some IPsec implementations such as the one by NRL <ref> [13] </ref> support such security associations, but this violates traditional layering by making use of transport layer information at the IP layer. 10 Transport layer: Netscape's Secure Sockets Layer (SSL) [9] provides a standard for authentication and encryption at the application layer (i.e. above the transport layer). <p> We will be using ISAKMP protocol [17] which works on top of IPsec for providing the key management functionality. 5.2 IPsec We will be using the IPsec implementation provided by NRL <ref> [13] </ref> for providing the encryption and authentication mechanisms. NRL's code was written for NetBSD, BSDI and other operating systems. We will be porting this to the FreeBSD TCP/IP stack that runs in fluke.
Reference: [14] <author> R. J.Atkinson, D. L. McDonald, B. G. Phan, C. W. Metz, and K. C. Chin. </author> <title> A socket-based key management API (and surrounding infrastructure). </title> <booktitle> In Proceedings of the USENIX 1996 Annual Technical Conference, </booktitle> <month> Jan. </month> <year> 1996. </year> <month> 22 </month>
Reference-contexts: NRL's code was written for NetBSD, BSDI and other operating systems. We will be porting this to the FreeBSD TCP/IP stack that runs in fluke. This implementation includes the PF KEY Key Management API <ref> [14] </ref> that application-layer key management daemons, such as Cisco's ISAKMP daemon, can use to configure IP Security Associations (including keys) into the operating system. IPsec depends on ISAKMP for establishing the security associations. <p> ISAKMP in combination with the Oakley Key Determination Protocol [12] provides full security association attribute negotiation, as well as authentication methods that provide both repudiation and non-repudiation. 11 We will be using Cisco's ISAKMP implementation for key management. The Cisco ISAKMP daemon uses the PF KEY Key Management API <ref> [14] </ref> to register with an operating system kernel (which has implemented this API) and the surrounding key management infrastructure. Security associations that have been negotiated by the ISAKMP daemon are inserted into the kernel's key engine and are then available for use by the system's standard IPsec security mechanisms (i.e.
Reference: [15] <author> M. S. </author> <title> Johns. Draft revised IP security option. </title> <type> RFC 1038, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1988. </year>
Reference-contexts: Also our network access control design is more comprehensive and involves more finer grain checks. To our knowledge there are no systems which support multi-level TCP/UDP port number spaces (or virtualized port spaces). MLS/TCP [10] incorporates security labels into the datagrams making use of the IP-security option (IPSO) <ref> [16, 15] </ref>. Network access control is implemented by making use of these labels. But they assume that Identification and Authentication will be implemented at a higher layer in the protocol stack. In other words cryptographic protection is not implemented.
Reference: [16] <author> S. Kent. </author> <title> U.S. department of defense security options for the internet protocol. </title> <type> RFC 1108, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: Also our network access control design is more comprehensive and involves more finer grain checks. To our knowledge there are no systems which support multi-level TCP/UDP port number spaces (or virtualized port spaces). MLS/TCP [10] incorporates security labels into the datagrams making use of the IP-security option (IPSO) <ref> [16, 15] </ref>. Network access control is implemented by making use of these labels. But they assume that Identification and Authentication will be implemented at a higher layer in the protocol stack. In other words cryptographic protection is not implemented.
Reference: [17] <author> D. Maughan, M. Schertler, M. Schneider, and J. Turner. </author> <title> Internet security association and key management protocol (isakmp). </title> <type> Internet draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: After considering the above we have decided to use NRL's implementation of IPsec for providing the cryptographic mechanisms. While this is probably not an ideal solution, we feel this is the one that best suits our needs. We will be using ISAKMP protocol <ref> [17] </ref> which works on top of IPsec for providing the key management functionality. 5.2 IPsec We will be using the IPsec implementation provided by NRL [13] for providing the encryption and authentication mechanisms. NRL's code was written for NetBSD, BSDI and other operating systems. <p> IP AH is a mechanism for providing integrity and host authentication for IP datagrams. IP ESP is a mechanism for providing confidentiality for IP datagrams. IP AH and IP ESP are not bound to specific cryptographic algorithms. 5.3 ISAKMP The Internet Security Association & Key Management Protocol (ISAKMP) <ref> [17] </ref> provides a framework for Internet key management and specific protocol support for negotiation of security attributes.
Reference: [18] <author> J. McHugh and A. P. Moore. </author> <title> A security policy and formal top level specification for a multilevel secure local area network. </title> <booktitle> In Proceedings of the 1986 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 34-39, </pages> <year> 1986. </year>
Reference-contexts: The resulting 27 rating categories are less than useless to an accreditor or a system builder [26]. There have been some theoretical models proposed earlier which are similar in spirit to our work <ref> [24, 18] </ref>. 4 Chapter 3 Synergy/Flask approach The fundamental design principle of Synergy/Flask [22] is to separate enforcement from policy in order to achieve flexibility.
Reference: [19] <author> S. E. Minear. </author> <title> Providing policy control over object operations in a Mach based system. </title> <booktitle> In Proceedings of the 5th USENIX Unix Security Symposium, </booktitle> <pages> pages 141-156, </pages> <address> Salt Lake City, UT, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Introduction The wide-spread use of computers and networks has emphasized the necessity for secure operating systems and network security mechanisms. Security in operating systems has long been a topic of research <ref> [19, 7, 8] </ref> and this has led to the formulation of different security models and policies for operating systems. Some basic differences exist between the security requirements for stand-alone systems and networks. This chapter gives a brief introduction to the concepts related to network security. <p> Chapter 5 deals with the protocols we are making use of for providing cryptographic protection for the network traffic. Chapter 6 presents the schedule for the completion of this work. 3 Chapter 2 Related work Our work is very closely related to the work done in the DTOS <ref> [19] </ref> operating system. DTOS also uses IPsec and ISAKMP for cryptographic protection though we use an implementation of IPsec where security associations can be set up on a per socket basis. Also our network access control design is more comprehensive and involves more finer grain checks.
Reference: [20] <institution> National Computer Security Center. Department of Defense Trusted Computer System Evaluation Criteria. </institution> <year> 1985. </year> <note> DoD 5200.28-STD. </note>
Reference-contexts: Network access control is implemented by making use of these labels. But they assume that Identification and Authentication will be implemented at a higher layer in the protocol stack. In other words cryptographic protection is not implemented. The Trusted Computer System Evaluation Criteria (TCSEC) <ref> [20] </ref> specify the general principles to be applied in any computer system handling sensitive information and specifically detail the features and assurance mechanisms for general purpose host computers.
Reference: [21] <author> National Computer Security Center. </author> <title> Trusted Network Interpretation of the Trusted Computer System Evaluation Criteria. </title> <year> 1987. </year> <month> NCSC-TG-005. </month>
Reference-contexts: In other words cryptographic protection is not implemented. The Trusted Computer System Evaluation Criteria (TCSEC) [20] specify the general principles to be applied in any computer system handling sensitive information and specifically detail the features and assurance mechanisms for general purpose host computers. The Trusted network Interpretation (TNI) <ref> [21] </ref> of the TCSEC extends these principles to network components in order that they may be applied to specific devices with less functionality than full host computers, but the TNI fails to discuss either encryption or protocols [26].
Reference: [22] <author> O. S. Saydjari, S. J. Turner, D. E. Peele, J. F. Farrell, P. A. Loscocco, and W. Kutz. </author> <title> Synergy: A distributed trusted microkernel-based operating system. </title> <type> Technical Report, </type> <institution> Department of Defense, </institution> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: The resulting 27 rating categories are less than useless to an accreditor or a system builder [26]. There have been some theoretical models proposed earlier which are similar in spirit to our work [24, 18]. 4 Chapter 3 Synergy/Flask approach The fundamental design principle of Synergy/Flask <ref> [22] </ref> is to separate enforcement from policy in order to achieve flexibility. The operating system knows when security-relevant decisions are needed and will perform the required enforcement, but relies on a security server to make the actual decision.
Reference: [23] <author> S. D. Smalley. </author> <title> A network access control model for flask. </title> <type> Technical report, </type> <institution> Department of Defense, </institution> <month> July </month> <year> 1997. </year>
Reference: [24] <author> V. Varadharajan. </author> <title> Network security policy models. </title> <editor> In J. Seberry and J. Pieprzyk, editors, </editor> <booktitle> AUSCRYPT90, volume 453 of Lecture Notes in Computer Science, </booktitle> <pages> pages 74-95. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: The resulting 27 rating categories are less than useless to an accreditor or a system builder [26]. There have been some theoretical models proposed earlier which are similar in spirit to our work <ref> [24, 18] </ref>. 4 Chapter 3 Synergy/Flask approach The fundamental design principle of Synergy/Flask [22] is to separate enforcement from policy in order to achieve flexibility.
Reference: [25] <author> V. Voydock and S. Kent. </author> <title> Security mechanisms in high level network protocols. </title> <journal> ACM Computing Surveys, </journal> <pages> pages 135-171, </pages> <month> June </month> <year> 1983. </year>
Reference-contexts: Data link layer: Encryption at the level of the data link layer has the advantages of being transparent to applications running at higher layers and possible use of specialized hardware. But it also suffers from several disadvantages <ref> [25] </ref>. If an intermediary is used for transmission between different nodes, then a clear-text version is available for perusal at the intermediary node. Also the cost of key distribution could be huge. In addition end-to-end measures are more naturally suited to users' perceptions of their security requirements.
Reference: [26] <author> S. T. Walker. </author> <title> Network security: The parts of the sum. </title> <booktitle> In Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 2-9, </pages> <year> 1989. </year> <month> 23 </month>
Reference-contexts: Similarly, trusted computer system principles are vital to the correct operation of network components involved in solving the network security problem, including devices that employ encryption and/or control the security measures contained within network protocols. But trusted system concepts by themselves are insufficient to provide network security solutions <ref> [26] </ref>. Experience with secure networks has led many researchers to believe that three primary elements of network security exist: encryption, protocols and trusted components [1]. The various elements of network security must work together to properly protect information in transit and in storage on a secure network. <p> The Trusted network Interpretation (TNI) [21] of the TCSEC extends these principles to network components in order that they may be applied to specific devices with less functionality than full host computers, but the TNI fails to discuss either encryption or protocols <ref> [26] </ref>. The TNI in part II attempts to list a variety of security services, but when it tries to apply ratings to them, it manages to effectively illustrate the complexity of applying ratings to individual security features. <p> The resulting 27 rating categories are less than useless to an accreditor or a system builder <ref> [26] </ref>. There have been some theoretical models proposed earlier which are similar in spirit to our work [24, 18]. 4 Chapter 3 Synergy/Flask approach The fundamental design principle of Synergy/Flask [22] is to separate enforcement from policy in order to achieve flexibility.
References-found: 26

