URL: http://theory.lcs.mit.edu/~luca/pubs/VertexCover.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~luca/papers.html
Root-URL: 
Email: E-mail: fpiluc,trevisang@dsi.uniroma1.it.  
Title: Minimum Vertex Cover, Distributed Decision-Making, and Communication Complexity Extended abstract  
Author: Pierluigi Crescenzi and Luca Trevisan 
Address: Via Salaria 113, 00198 Roma, Italy  
Affiliation: Dipartimento di Scienze dell'Informazione Universita degli Studi di Roma "La Sapienza"  
Abstract: In this paper we study the problem of computing approximate vertex covers of a graph on the basis of partial information and we consider the distributed decision-making and the communication complexity frameworks. In the first framework we do not allow communication among the processors: in this case, we show an optimal algorithm whose performance ratio is equal to p where p is the number of processors. In the second framework two processors are allowed to communicate in order to find an approximate solution: in this latter case, we show a linear lower bound on the communication complexity of the problem.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Aho, A. V., J.D. Ullman and M. Yannakakis. </author> <title> "On notions of information transfer in VLSI circuits". </title> <booktitle> In Proceedings of 15th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 133-136, </pages> <year> 1983. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 2. <author> Babai, L., P. Frankl and J. Simon. </author> <title> "Complexity classes in communication complexity theory". </title> <booktitle> In Proceedings of 27th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 337-347, </pages> <year> 1986. </year>
Reference-contexts: It has also been studied for its own sake as an interesting model of computation. Indeed, non-deterministic, probabilistic, and alternating variants have been considered and several complexity classes analogous to the more notorius ones in Turing machine complexity have been defined <ref> [2, 14, 18] </ref>. In this paper we consider the communication complexity of computing, for any graph G and for any rational * &gt; 1, a vertex cover for G whose performance ratio is smaller than *.
Reference: 3. <author> Berlekamp, </author> <title> E.R. "Algebraic Coding Theory". </title> <publisher> McGraw-Hill, </publisher> <year> 1968. </year>
Reference-contexts: Such a set C is indeed an error correcting code and a classical result of Gilbert <ref> [3, 6] </ref> allows us to state that, for any * &lt; 17=16, an error correcting code C exists with log jCj &gt; (1 H (8 (*1)))n=8 where H is the entropy function defined as H (x) = x log x (1 x) log (1 x), for 0 &lt; x &lt; 1=2.
Reference: 4. <author> Deng, X. and C. H. Papadimitriou. </author> <title> "Distributed decision-making with incomplete information". </title> <booktitle> In Proceedings of 12th IFIP, </booktitle> <year> 1992. </year>
Reference-contexts: Several other approximation algorithms are presented in the lecture notes of Motwani [13]. In this paper we analyse the complexity of finding approximate solutions for the MVC problem under two basic frameworks. In the first one, we study this problem as one of distributed decision-making with incomplete information <ref> [4, 15, 16, 17] </ref>, that is, we assume that the vertex cover is chosen by independent processors, each knowing only a part of the graph and acting in isolation.
Reference: 5. <author> Garey, M. R. and D. S. Johnson. </author> <title> "Computers and Intractability. A Guide to the Theory of NP-completeness". </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: This is a well-studied problem which appeared in the first list of NP-complete problems presented by Karp [10]. A straightforward approximation algorithm, based on the idea of a maximal matching, was successively developed by Gavril (according to <ref> [5] </ref>) with a performance ratio no greater than 2. Several other approximation algorithms are presented in the lecture notes of Motwani [13]. In this paper we analyse the complexity of finding approximate solutions for the MVC problem under two basic frameworks.
Reference: 6. <author> Gilbert, </author> <title> E.N. "A comparison of signaling alphabets". </title> <journal> Bell System Tech. J., </journal> <volume> 31 </volume> <pages> 504-522, </pages> <year> 1952. </year>
Reference-contexts: Such a set C is indeed an error correcting code and a classical result of Gilbert <ref> [3, 6] </ref> allows us to state that, for any * &lt; 17=16, an error correcting code C exists with log jCj &gt; (1 H (8 (*1)))n=8 where H is the entropy function defined as H (x) = x log x (1 x) log (1 x), for 0 &lt; x &lt; 1=2.
Reference: 7. <author> Hambrusch, S. E. and J. Simon. </author> <title> "Solving undirected graph problems on VLSI". </title> <journal> SIAM Journal of Computing, </journal> <volume> 14 </volume> <pages> 527-544, </pages> <year> 1985. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 8. <author> Ja'Ja', J. </author> <title> "The VLSI complexity of selected graph problems". </title> <journal> Journal of the ACM, </journal> <volume> 31 </volume> <pages> 840-849, </pages> <year> 1984. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 9. <author> Karchmer, M. and A. Wigderson. </author> <title> "Monotone circuits for connectivity require super-logarithmic depth". </title> <booktitle> In Proceedings of 20th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 539-550, </pages> <year> 1988. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI [1, 7, 8, 11, 12, 19, 21], circuit complexity <ref> [9] </ref>, and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation. Indeed, non-deterministic, probabilistic, and alternating variants have been considered and several complexity classes analogous to the more notorius ones in Turing machine complexity have been defined [2, 14, 18].
Reference: 10. <author> Karp, R. M. </author> <title> "Reducibility among combinatorial problems". In Complexity of Computer Computations. </title> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: This is a well-studied problem which appeared in the first list of NP-complete problems presented by Karp <ref> [10] </ref>. A straightforward approximation algorithm, based on the idea of a maximal matching, was successively developed by Gavril (according to [5]) with a performance ratio no greater than 2. Several other approximation algorithms are presented in the lecture notes of Motwani [13].
Reference: 11. <author> Lipton, R. J. and R. Sedgewick. </author> <title> "Lower bounds for VLSI". </title> <booktitle> In Proceedings of 13th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 300-307, </pages> <year> 1981. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 12. <author> Melhorn, K. and E. M. Schmidt. </author> <title> "Las Vegas is better than determinism in VLSI and distributed computing". </title> <booktitle> In Proceedings of 14th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 330-337, </pages> <year> 1982. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 13. <author> Motwani, R. </author> <booktitle> "Lecture notes on approximation algorithms". </booktitle> <year> 1992. </year>
Reference-contexts: A straightforward approximation algorithm, based on the idea of a maximal matching, was successively developed by Gavril (according to [5]) with a performance ratio no greater than 2. Several other approximation algorithms are presented in the lecture notes of Motwani <ref> [13] </ref>. In this paper we analyse the complexity of finding approximate solutions for the MVC problem under two basic frameworks.
Reference: 14. <author> Papadimitriou, C. H. and M. Sipser. </author> <title> "Communication complexity". </title> <booktitle> In Proceedings of 14th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 196-200, </pages> <year> 1982. </year>
Reference-contexts: It has also been studied for its own sake as an interesting model of computation. Indeed, non-deterministic, probabilistic, and alternating variants have been considered and several complexity classes analogous to the more notorius ones in Turing machine complexity have been defined <ref> [2, 14, 18] </ref>. In this paper we consider the communication complexity of computing, for any graph G and for any rational * &gt; 1, a vertex cover for G whose performance ratio is smaller than *.
Reference: 15. <author> Papadimitriou, C.H. </author> <title> "The value of information". </title> <booktitle> In Proceedings of World Congress of Economics, </booktitle> <year> 1992. </year>
Reference-contexts: Several other approximation algorithms are presented in the lecture notes of Motwani [13]. In this paper we analyse the complexity of finding approximate solutions for the MVC problem under two basic frameworks. In the first one, we study this problem as one of distributed decision-making with incomplete information <ref> [4, 15, 16, 17] </ref>, that is, we assume that the vertex cover is chosen by independent processors, each knowing only a part of the graph and acting in isolation.
Reference: 16. <author> Papadimitriou, C.H. and M. Yannakakis. </author> <title> "On the value of information in distributed decision making". </title> <booktitle> In Proceedings of 10th ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 61-64, </pages> <year> 1991. </year>
Reference-contexts: Several other approximation algorithms are presented in the lecture notes of Motwani [13]. In this paper we analyse the complexity of finding approximate solutions for the MVC problem under two basic frameworks. In the first one, we study this problem as one of distributed decision-making with incomplete information <ref> [4, 15, 16, 17] </ref>, that is, we assume that the vertex cover is chosen by independent processors, each knowing only a part of the graph and acting in isolation.
Reference: 17. <author> Papadimitriou, C.H. and M. Yannakakis. </author> <title> "Linear programming without the matrix". </title> <booktitle> In Proceedings of 25th ACM Symposium on Theory of Computing, </booktitle> <year> 1993. </year>
Reference-contexts: Several other approximation algorithms are presented in the lecture notes of Motwani [13]. In this paper we analyse the complexity of finding approximate solutions for the MVC problem under two basic frameworks. In the first one, we study this problem as one of distributed decision-making with incomplete information <ref> [4, 15, 16, 17] </ref>, that is, we assume that the vertex cover is chosen by independent processors, each knowing only a part of the graph and acting in isolation. <p> Moreover, it has been argued that this kind of results `can be seen as part of a larger project aiming at an algorithmic theory of the value of information' <ref> [17] </ref>. Intuitively, this theory should allow to compare in terms of performance ratios two different information regimes, that is, two different ways of distributing the input among the processors. In the second framework, instead, we study the communication complexity of the MVC problem.
Reference: 18. <author> Paturi, R. and J. Simon. </author> <title> "Probabilistic communication complexity". </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 33 </volume> <pages> 106-123, </pages> <year> 1986. </year>
Reference-contexts: It has also been studied for its own sake as an interesting model of computation. Indeed, non-deterministic, probabilistic, and alternating variants have been considered and several complexity classes analogous to the more notorius ones in Turing machine complexity have been defined <ref> [2, 14, 18] </ref>. In this paper we consider the communication complexity of computing, for any graph G and for any rational * &gt; 1, a vertex cover for G whose performance ratio is smaller than *.
Reference: 19. <author> Thompson, C. D. </author> <title> "Area-time complexity for VLSI". </title> <booktitle> In Proceedings of 11th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 81-88, </pages> <year> 1979. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 20. <author> Yannakakis, M. </author> <title> "Expressing combinatorial optimization problems by linear programs". </title> <booktitle> In Proceedings of 29th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 223-228, </pages> <year> 1988. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI [1, 7, 8, 11, 12, 19, 21], circuit complexity [9], and combinatorial optimization <ref> [20] </ref>. It has also been studied for its own sake as an interesting model of computation. Indeed, non-deterministic, probabilistic, and alternating variants have been considered and several complexity classes analogous to the more notorius ones in Turing machine complexity have been defined [2, 14, 18].
Reference: 21. <author> Yao, A. </author> <title> "The entropic limitations of VLSI computation". </title> <booktitle> In Proceedings of 13th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 308-311, </pages> <year> 1981. </year>
Reference-contexts: This complexity measure was introduced by Yao [22] and has been shown to be tightly related to time-area tradeoffs in VLSI <ref> [1, 7, 8, 11, 12, 19, 21] </ref>, circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
Reference: 22. <author> Yao, A. C. </author> <title> "Some complexity questions related to distributive computing". </title> <booktitle> In Proceedings of 11th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 209-213, </pages> <year> 1979. </year>
Reference-contexts: The question is: how much information do the two processors need to exchange to correctly compute the value f (x; y)? The minimum number of bits that must be communicated is the deterministic communication complexity of f. This complexity measure was introduced by Yao <ref> [22] </ref> and has been shown to be tightly related to time-area tradeoffs in VLSI [1, 7, 8, 11, 12, 19, 21], circuit complexity [9], and combinatorial optimization [20]. It has also been studied for its own sake as an interesting model of computation.
References-found: 22

