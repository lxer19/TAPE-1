URL: http://www.math.tau.ac.il/~megiddo/psfiles/kmm2rev.ps.gz
Refering-URL: http://www.math.tau.ac.il/~megiddo/pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 95120-6099,  
Title: Theoretical Convergence of Large-Step Primal-Dual Interior Point Algorithms for Linear Programming 1  
Author: Masakazu Kojima Nimrod Megiddo and Shinji Mizuno 
Keyword: Key words: Primal-Dual Interior Point Algorithm, Linear Program, Large Step, Global Convergence, Polynomial-Time Convergence Abbreviated Title: Large-Step Primal-Dual Interior Point Algorithms  
Address: 2-12-1 Oh-Okayama, Meguro-ku, Tokyo 152, Japan  650 Harry Road, San Jose, California  Tel Aviv, Israel  4-6-7 Minami-Azabu, Minato-ku, Tokyo 106, Japan  
Affiliation: Department of Information Sciences, Tokyo Institute of Technology  IBM Almaden Research Center,  and School of Mathematical Sciences, Tel Aviv University,  The Institute of Statistical Mathematics  
Date: November 1990 Revised September 1991  
Abstract: This paper proposes two sets of rules, Rule G and Rule P, for controlling step lengths in a generic primal-dual interior point method for solving the linear programming problem in standard form and its dual. Theoretically, Rule G ensures the global convergence, while Rule P, which is a special case of Rule G, ensures the O(nL) iteration polynomial-time computational complexity. Both rules depend only on the lengths of the steps from the current iterates in the primal and dual spaces to the respective boundaries of the primal and dual feasible regions. They rely neither on neighborhoods of the central trajectory nor on potential function. These rules allow large steps without performing any line search. Rule G is especially flexible enough for implementation in practically efficient primal-dual interior point algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Adler, M. G. C. Resende, G. Veiga and N. Karmarkar, </author> <title> "An implementation of Kar-markar's algorithm for linear programming," </title> <note> Mathematical Programming 44 (1989) 297-335. </note>
Reference-contexts: (2) We now consider the Newton direction (x; y; z) at the current iterate (x k ; y k ; z k ) 2 S ++ for approximating a point (x (); y (); z ()) with = fif k on the central trajectory S cen , where fi 2 <ref> [0; 1] </ref> denotes a parameter to be specified later. <p> In general, each direction (x; y; z) with a fi 2 <ref> [0; 1] </ref> can be represented as a convex combination of the centering direction (x c ; y c ; z c ) and the affine scaling direction (x a ; y a ; z a ) such that (x; y; z) = (1 fi)(x a ; y a ; z a <p> It follows from this equality that (i) fi has to be less than or equal to 1 in order for the duality gap not to increase, (ii) the smaller fi and the larger ff, the larger the reduction in the duality gap. Theoretically, we can choose any fi 2 <ref> [0; 1] </ref>. <p> The global convergence of the GPD method using Rule G (Theorem 3.2) and its proof remain valid under this generalization. This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods <ref> [ 1; 19; 25; 26 ] </ref> and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques [ 8; 34; 35 ] developed for accelerating the local convergence of the GPD method. We now describe Rule P. <p> g. ff : a common step length in the primal and dual spaces; 0 ff ^ff. ff p : a step length in the primal space; 0 ff p ^ff p . ff d : a step length in the dual space; 0 ff d ^ff d . fi 2 <ref> [0; 1] </ref> : a search direction parameter. fi, !, , fl , ff fl fi fl : constants fixed in Rules G and P. See (7) and (13). : a parameter used in Rules G and P. <p> Hence x k+1 j (fi) ; where : <ref> [0; 1] </ref> ! R and : [0; 1] ! R are functions such that (~) = 1 ff (1 ^ff) ff 2 k + ff ^ff ff 2 ~; We now prove that '(fi) '(0) by showing that ' 0 (~) = (~) 2 0 for every ~ 2 [0; fi] <p> Hence x k+1 j (fi) ; where : <ref> [0; 1] </ref> ! R and : [0; 1] ! R are functions such that (~) = 1 ff (1 ^ff) ff 2 k + ff ^ff ff 2 ~; We now prove that '(fi) '(0) by showing that ' 0 (~) = (~) 2 0 for every ~ 2 [0; fi] whenever the assumptions of the lemma
Reference: [2] <author> E. R. Barnes, </author> <title> "A variation on Karmarkar's algorithm for solving linear programming problems," </title> <note> Mathematical Programming 36 (1986) 174-182. </note>
Reference-contexts: We call the direction (x a ; y a ; z a ) an "affine scaling direction" [ 15; 25 ] since, as in the primal affine scaling algorithm <ref> [ 3; 2; 30 ] </ref> , it does not involve any centering direction.
Reference: [3] <author> I. I. Dikin, </author> <title> "Iterative solution of problems of linear and quadratic programming," </title> <note> Soviet Mathematics Doklady 8 (1967) 674-675. </note>
Reference-contexts: We call the direction (x a ; y a ; z a ) an "affine scaling direction" [ 15; 25 ] since, as in the primal affine scaling algorithm <ref> [ 3; 2; 30 ] </ref> , it does not involve any centering direction.
Reference: [4] <author> J. Ding and T.-Y. Li, </author> <title> "A polynomial-time predictor-corrector algorithm for linear complementarity problems," </title> <note> SIAM Journal on Optimization 1 (1991) 83-92. </note>
Reference-contexts: It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> In Section 4 we establish the polynomial-time convergence of the GPD method using Rule P. In <ref> [ 4; 9; 12; 13; 22 ] </ref> PD algorithms were presented for the complementarity problem, rather than pairs of primal and dual linear programs. All the results obtained there can be easily adapted to the primal-dual pair of linear programs (P) and (D).
Reference: [5] <author> P. D. Domich, P. T. Boggs, J. R. Donaldson and C. Witzgall, </author> <title> "Optimal 3-dimensional methods for linear programming," NISTIR89-4225, </title> <type> U.S. </type> <institution> Department of Commerce, National Institute of Standards and Technology (Gaithersburg, MD, </institution> <year> 1989). </year>
Reference-contexts: This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods [ 1; 19; 25; 26 ] and multidimensional searches <ref> [ 5; 21 ] </ref> . Also, we can incorporate some techniques [ 8; 34; 35 ] developed for accelerating the local convergence of the GPD method. We now describe Rule P.
Reference: [6] <author> R. M. Freund, </author> <title> "Polynomial-time algorithms for linear programming based only on primal scaling and projected gradients of a potential function", </title> <type> Report OR 182-88, </type> <institution> Sloan School of Management, Massachusetts Institute of Technology (Cambridge, Massachusetts, </institution> <year> 1988). </year>
Reference-contexts: Among others, we refer to the following: (i) An O (n 3 L) algorithm using a sequence [ 20 ] . (ii) An O ( nL) iteration potential reduction algorithm [ 31 ] . See also <ref> [ 6 ] </ref> . (iii) A potential reduction algorithm for the linear complementarity problem with P 0 matrices [ 10 ] . We also mention that Tanabe's centered Newton method [ 27; 28 ] is closely related to the GPD method. 2.
Reference: [7] <author> A. V. Fiacco and G. P. McCormick, </author> <title> Nonlinear Programming: Sequential Unconstrained Minimization Technique (John Wiley and Sons, </title> <address> New York, </address> <year> 1968). </year>
Reference-contexts: It was shown by Megiddo [ 18 ] that, as the parameter &gt; 0 tends to zero, x () 2 P ++ and (y (); z ()) 2 D ++ converge to optimal solutions of (P) and (D), respectively. We also refer to the book <ref> [ 7 ] </ref> by Fiacco and McCormick, who described the trajectory in terms of a logarithmic penalty function, and discussed some properties of the trajectory. Thus, optimal solutions of (P) and (D) can be approximated by tracing the trajectory S cen until the parameter becomes sufficiently small.
Reference: [8] <author> M. Kojima, N. Megiddo and T. Noma, </author> <title> "Homotopy continuation methods for nonlinear complementarity problems," </title> <note> Mathematics of Operations Research, to appear. </note>
Reference-contexts: This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods [ 1; 19; 25; 26 ] and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques <ref> [ 8; 34; 35 ] </ref> developed for accelerating the local convergence of the GPD method. We now describe Rule P.
Reference: [9] <author> M. Kojima, N. Megiddo, T. Noma and A. Yoshise, </author> <title> "A unified approach to interior point algorithms for linear complementarity problems," </title> <type> Research Report RJ 7493 (70008), </type> <institution> IBM Almaden Research Center (San Jose, </institution> <address> CA, </address> <year> 1990). </year>
Reference-contexts: It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> Kojima, Megiddo, Noma and Yoshise <ref> [ 9 ] </ref> generalized the PD potential reduction algorithm in a unified way to a wider class of primal-dual potential reduction algorithms including a globally convergent affine scaling PD algorithm. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> different step lengths ff p in the primal space and ff d in the dual space given by (6). (iii) The different step lengths ff p and ff d are usually much larger than the common step length ff used in the theoretical algorithms. (iv) The PD potential reduction algorithm <ref> [ 9; 13 ] </ref> requires a line search to get a larger reduction in the potential function. (v) There has been no proof for the global convergence of the practical implementation [ 16; 17 ] . The goal of the present paper is to fill these gaps. <p> In Section 4 we establish the polynomial-time convergence of the GPD method using Rule P. In <ref> [ 4; 9; 12; 13; 22 ] </ref> PD algorithms were presented for the complementarity problem, rather than pairs of primal and dual linear programs. All the results obtained there can be easily adapted to the primal-dual pair of linear programs (P) and (D). <p> Remark. Kojima, Mizuno and Yoshise [ 11 ] and Lustig [ 14 ] used 1=, which they denoted by , to measure a deviation from the central path S cen . See also <ref> [ 9 ] </ref> for some other quantities to measure a deviation from the central path S cen and their relation to .
Reference: [10] <author> M. Kojima, N. Megiddo and Y. Ye, </author> <title> "An interior point potential reduction algorithm for the linear complementarity problem," </title> <journal> Mathematical Programming, </journal> <note> to appear. </note>
Reference-contexts: See also [ 6 ] . (iii) A potential reduction algorithm for the linear complementarity problem with P 0 matrices <ref> [ 10 ] </ref> . We also mention that Tanabe's centered Newton method [ 27; 28 ] is closely related to the GPD method. 2.
Reference: [11] <author> M. Kojima, S. Mizuno and A. Yoshise, </author> <title> "A primal-dual interior point algorithm for linear programming," </title> <editor> in N. Megiddo, ed., </editor> <booktitle> Progress in Mathematical Programming: Interior-Point and Related Methods (Springer-Verlag, </booktitle> <address> New York, </address> <year> 1989) </year> <month> 29-47. </month>
Reference-contexts: Thus, optimal solutions of (P) and (D) can be approximated by tracing the trajectory S cen until the parameter becomes sufficiently small. The first polynomial-time algorithm based on this idea was given by Kojima, Mizuno and Yoshise <ref> [ 11 ] </ref> . We describe a generic primal-dual interior point method (abbreviated to the GPD method), which provides a general framework for many existing primal-dual interior point algorithms [ 4; 9; 11; 12; 13; 16; 17; 21; 22; 23; 32; 33 ] . <p> Kojima, Mizuno and Yoshise <ref> [ 11 ] </ref> showed that if the same step length ff p = ff d = ff is chosen in the primal and dual spaces, then the new duality gap (x k+1 ) T z k+1 = c T x k+1 b T y k+1 = c T (x k + <p> It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> Kojima, Mizuno and Yoshise <ref> [ 11 ] </ref> used fi = 1=2 and ff p = ff d = ff to generate a sequence f (x k ; y k ; z p )g S ++ which eventually moves into a prescribed neighborhood of the central trajectory S cen . <p> Mizuno, Todd and Ye [ 21 ] proposed an O (nL) iteration PD algorithm where they took fi = fi 0 in every iteration with an arbitrary fixed fi 0 2 (0; 1) and a larger neighborhood of the central trajectory S cen than the ones used in <ref> [ 11; 12; 23 ] </ref> . If fi 0 were of the form n p for some positive number p, we could prove that their PD algorithm would require O (n p+1 L) total iterations. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> We also assume (x k ; y k ; z k ) 2 S ++ , and that fi 2 [0; fi]. We begin by proving the equality (5) which we have used in our discussion in the Introduction. The following results were essentially due to <ref> [ 11 ] </ref> . Lemma 3.1. Assume that we take a common step length ff = ff p = ff d &lt; ^ff. <p> Thus, 1 (x; y; z) represents a deviation from S cen . For simplicity of notation, we use k for (x k ; y k ; z k ). Remark. Kojima, Mizuno and Yoshise <ref> [ 11 ] </ref> and Lustig [ 14 ] used 1=, which they denoted by , to measure a deviation from the central path S cen . See also [ 9 ] for some other quantities to measure a deviation from the central path S cen and their relation to .
Reference: [12] <author> M. Kojima, S. Mizuno and A. Yoshise, </author> <title> "A polynomial-time algorithm for a class of linear complementary problems," </title> <note> Mathematical Programming 44 (1989) 1-26. </note>
Reference-contexts: It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> The algorithm runs in O (nL) iterations. In other papers, Kojima Mizuno and Yoshise <ref> [ 12 ] </ref> and Monteiro and Adler [ 24 ] improved the complexity O (nL) to O ( nL). <p> Mizuno, Todd and Ye [ 21 ] proposed an O (nL) iteration PD algorithm where they took fi = fi 0 in every iteration with an arbitrary fixed fi 0 2 (0; 1) and a larger neighborhood of the central trajectory S cen than the ones used in <ref> [ 11; 12; 23 ] </ref> . If fi 0 were of the form n p for some positive number p, we could prove that their PD algorithm would require O (n p+1 L) total iterations. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> In Section 4 we establish the polynomial-time convergence of the GPD method using Rule P. In <ref> [ 4; 9; 12; 13; 22 ] </ref> PD algorithms were presented for the complementarity problem, rather than pairs of primal and dual linear programs. All the results obtained there can be easily adapted to the primal-dual pair of linear programs (P) and (D). <p> But the details are omitted here. See Kojima, Mizuno, and Yoshise <ref> [ 12 ] </ref> and Monteiro and Adler [ 23 ] for such an artificial initial point. We need the following lemma to prove Theorem 4.1. Lemma 4.3. Let 2 (0; (1 fl )ff fl fi fl =2] be a constant. If k then k+1 .
Reference: [13] <author> M. Kojima, S. Mizuno and A. Yoshise, </author> <title> "An O( p nL) iteration potential reduction algorithm for linear complementarity problems, </title> " <note> Mathematical Programming 50 (1991) 331-342. </note>
Reference-contexts: There has been another development in PD algorithms, namely, an O ( p nL) iteration PD potential reduction algorithm given by Kojima, Mizuno and Yoshise <ref> [ 13 ] </ref> . They have taken a search direction parameter fi = n=(n + p a step length ff such that in each iteration there is at least a constant reduction in the primal-dual potential function of Todd and Ye [ 29 ] , rather than the duality gap. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> different step lengths ff p in the primal space and ff d in the dual space given by (6). (iii) The different step lengths ff p and ff d are usually much larger than the common step length ff used in the theoretical algorithms. (iv) The PD potential reduction algorithm <ref> [ 9; 13 ] </ref> requires a line search to get a larger reduction in the potential function. (v) There has been no proof for the global convergence of the practical implementation [ 16; 17 ] . The goal of the present paper is to fill these gaps. <p> In Section 4 we establish the polynomial-time convergence of the GPD method using Rule P. In <ref> [ 4; 9; 12; 13; 22 ] </ref> PD algorithms were presented for the complementarity problem, rather than pairs of primal and dual linear programs. All the results obtained there can be easily adapted to the primal-dual pair of linear programs (P) and (D). <p> In [ 4; 9; 12; 13; 22 ] PD algorithms were presented for the complementarity problem, rather than pairs of primal and dual linear programs. All the results obtained there can be easily adapted to the primal-dual pair of linear programs (P) and (D). See the concluding remarks of <ref> [ 13 ] </ref> . Many interior point algorithms have been proposed which work on the primal-dual pair of problems (P) and (D) but are not covered by the GPD method.
Reference: [14] <author> I. J. Lustig, </author> <title> "A generic primal-dual interior point algorithm," </title> <type> Technical Report SOR 88-3, </type> <institution> Program in Statistics and Operations Research, Department of Civil Engineering and Operations Research, Princeton University (Princeton, </institution> <address> New Jersey, </address> <year> 1988). </year>
Reference-contexts: Hence, the convergence of the duality gap to zero is too slow in practice when n is large. In view of the above, a smaller search direction parameter fi seems necessary to increase the efficiency of the GPD method. Lustig <ref> [ 14 ] </ref> discussed a region in the space of the search direction and step length parameters in which the GPD method converges globally. <p> Thus, 1 (x; y; z) represents a deviation from S cen . For simplicity of notation, we use k for (x k ; y k ; z k ). Remark. Kojima, Mizuno and Yoshise [ 11 ] and Lustig <ref> [ 14 ] </ref> used 1=, which they denoted by , to measure a deviation from the central path S cen . See also [ 9 ] for some other quantities to measure a deviation from the central path S cen and their relation to .
Reference: [15] <author> I. J. Lustig, </author> <title> Private communication (1989). </title>
Reference-contexts: We call the direction (x a ; y a ; z a ) an "affine scaling direction" <ref> [ 15; 25 ] </ref> since, as in the primal affine scaling algorithm [ 3; 2; 30 ] , it does not involve any centering direction.
Reference: [16] <author> R. Marsten, R. Subramanian, M. Saltzman, I. J. Lustig and D. F. Shanno, </author> <title> "Interior point methods for linear programming: Just call Newton, Lagrange and Fiacco and McCormick!" Interfaces 20 (1990) 105-116. </title>
Reference-contexts: They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also <ref> [ 16 ] </ref> . <p> See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms [ 4; 9; 11; 12; 13; 22; 21; 23 ] which enjoy the global and/or polynomial-time convergence and the practically efficient implementations <ref> [ 16; 17 ] </ref> of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. (ii) Most of the theoretical algorithms use the same step length ff in the primal and dual spaces, while the practical implementations <p> much larger than the common step length ff used in the theoretical algorithms. (iv) The PD potential reduction algorithm [ 9; 13 ] requires a line search to get a larger reduction in the potential function. (v) There has been no proof for the global convergence of the practical implementation <ref> [ 16; 17 ] </ref> . The goal of the present paper is to fill these gaps. We propose two sets of rules for controlling the parameters fi, ff p and ff d in the GPD method.
Reference: [17] <author> K. A. McShane, C. L. Monma and D. F. Shanno, </author> <title> "An implementation of a primal-dual interior point method for linear programming", </title> <note> ORSA Journal on Computing 1 (1989) 70-83. </note>
Reference-contexts: Theoretically, however, it is not clear how large a step length ff we can take even if we perform a line search along a search direction to gain a big reduction in the potential function. McShane, Monma, and Shanno <ref> [ 17 ] </ref> proposed taking fi = 1=n and different step lengths ff p and ff d in the primal and dual spaces such that ff p = ^ff p and ff d = ^ff d (6) for = 0:9995. <p> See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms [ 4; 9; 11; 12; 13; 22; 21; 23 ] which enjoy the global and/or polynomial-time convergence and the practically efficient implementations <ref> [ 16; 17 ] </ref> of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. (ii) Most of the theoretical algorithms use the same step length ff in the primal and dual spaces, while the practical implementations <p> much larger than the common step length ff used in the theoretical algorithms. (iv) The PD potential reduction algorithm [ 9; 13 ] requires a line search to get a larger reduction in the potential function. (v) There has been no proof for the global convergence of the practical implementation <ref> [ 16; 17 ] </ref> . The goal of the present paper is to fill these gaps. We propose two sets of rules for controlling the parameters fi, ff p and ff d in the GPD method. <p> We show in the Appendix that the duality gap may increase with ff p (or ff d ). Furthermore, the step length ff p = ^ff p (or ff d = ^ff d ), used by McShane, Monma and Shanno <ref> [ 17 ] </ref> in the implementation of the GPD method, is not always well-defined because ^ff p (or ^ff d ) can be infinite. Therefore, the last inequality of the condition (8) (or (11)) works as a reasonable safeguard against such a difficulty. <p> If, in addition, the duality gap (10) decreases in both ff p and ff d , we may take ff p = fl ^ff p and ff d = fl ^ff d as in (6) used in <ref> [ 17 ] </ref> . Now, suppose that some step lengths ff p and ff d do not satisfy (8) with a small !. <p> Obviously, Rule P is a special case of Rule G. Compared with Rule G and (6) used by McShane, Monma and Shanno <ref> [ 17 ] </ref> in the implementation of the GPD method, Rule P is restrictive in the sense that it always requires taking a common step length in the primal and dual spaces. In Section 4 we establish the polynomial-time convergence of the GPD method using Rule P. <p> This completes the proof of Theorem 4.1. Appendix. Inconsistency of the step length control rule (6). We will show by an example that the step length control rule (6) used by McShane, Monma and Shanno <ref> [ 17 ] </ref> in the implementation of the GPD method is theoretically incomplete. We consider linear programming problems (P) and (D) with n = 2, m = 1, A = (1; 1), b = 0:9 and c = (1; 1) T . <p> Let x k = (0:1; 1) 2 P ++ and (y k ; z k ) = (0; 1; 1) 2 D ++ . Take fi = 1=n = 0:5 as in <ref> [ 17 ] </ref> . Then the Newton direction calculated as the solution of the system (3) turns out to be x = (41=440; 41=440) T ; z = (9=11; 9=11) T : Since x 0, we have ^ff p = 1.
Reference: [18] <author> N. Megiddo, </author> <title> "Pathways to the optimal set in linear programming," </title> <editor> in N. Megiddo, ed., </editor> <booktitle> Progress in Mathematical Programming: Interior-Point and Related Methods (Springer-Verlag, </booktitle> <address> New York, </address> <year> 1989) </year> <month> 131-158. </month>
Reference-contexts: This paper studies a class of primal-dual interior point algorithms which originated from a fundamental analysis by Megiddo <ref> [ 18 ] </ref> on the central trajectory for the problems (P) and (D). <p> By definition, (x (); y (); z ()) 2 S ++ for every &gt; 0. It was shown by Megiddo <ref> [ 18 ] </ref> that, as the parameter &gt; 0 tends to zero, x () 2 P ++ and (y (); z ()) 2 D ++ converge to optimal solutions of (P) and (D), respectively.
Reference: [19] <author> S. Mehrotra, </author> <title> "On the implementation of a (primal-dual) interior point method," </title> <type> Technical Report 90-03, </type> <institution> Department of Industrial Engineering and Management Sciences, Northwestern University (Evanston, IL, </institution> <year> 1990). </year>
Reference-contexts: The global convergence of the GPD method using Rule G (Theorem 3.2) and its proof remain valid under this generalization. This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods <ref> [ 1; 19; 25; 26 ] </ref> and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques [ 8; 34; 35 ] developed for accelerating the local convergence of the GPD method. We now describe Rule P.
Reference: [20] <author> S. Mizuno, </author> <title> "An O(n 3 L) algorithm using a sequence for a linear complementarity problem," </title> <journal> J. Operations Research Soc. </journal> <note> of Japan 33 (1990) 66-75. </note>
Reference-contexts: Many interior point algorithms have been proposed which work on the primal-dual pair of problems (P) and (D) but are not covered by the GPD method. Among others, we refer to the following: (i) An O (n 3 L) algorithm using a sequence <ref> [ 20 ] </ref> . (ii) An O ( nL) iteration potential reduction algorithm [ 31 ] . See also [ 6 ] . (iii) A potential reduction algorithm for the linear complementarity problem with P 0 matrices [ 10 ] .
Reference: [21] <author> S. Mizuno, M. J. Todd and Y. Ye, </author> <title> "On adaptive-step primal-dual interior-point algorithms for linear programming," </title> <type> Technical Report No. 944, </type> <institution> School of Operations Research and Industrial Engineering, Cornell University (Ithaca, </institution> <address> New York, USA) 1989. </address>
Reference-contexts: It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> Lustig [ 14 ] discussed a region in the space of the search direction and step length parameters in which the GPD method converges globally. Mizuno, Todd and Ye <ref> [ 21 ] </ref> proposed an O (nL) iteration PD algorithm where they took fi = fi 0 in every iteration with an arbitrary fixed fi 0 2 (0; 1) and a larger neighborhood of the central trajectory S cen than the ones used in [ 11; 12; 23 ] . <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods [ 1; 19; 25; 26 ] and multidimensional searches <ref> [ 5; 21 ] </ref> . Also, we can incorporate some techniques [ 8; 34; 35 ] developed for accelerating the local convergence of the GPD method. We now describe Rule P. <p> The next Lemma is a modification of Lemma 5 in <ref> [ 21 ] </ref> Lemma 3.3. ^ff 2 min 1 ; (fi 2 2fi k + k )n min 1 ; n : Proof: It follows from (18) that, for every j = 1; 2; . . . ; n, (z k j z j ) fif k x k j ! <p> If we let fi = 1, the neighborhood f (x; y; z) 2 S ++ : (x; y; z) g coincides with the neighborhood N 1 fi; = x T z=ng introduced by Mizuno, Todd and Ye <ref> [ 21 ] </ref> . Once we know that the sequence lies in the neighborhood N 1 (fi), we can deduce the computational complexity of the algorithm from the results of [ 21 ] . But we will show the entire proof of Theorem 4.1. <p> y; z) g coincides with the neighborhood N 1 fi; = x T z=ng introduced by Mizuno, Todd and Ye <ref> [ 21 ] </ref> . Once we know that the sequence lies in the neighborhood N 1 (fi), we can deduce the computational complexity of the algorithm from the results of [ 21 ] . But we will show the entire proof of Theorem 4.1.
Reference: [22] <author> S. Mizuno, A. Yoshise and T. Kikuchi, </author> <title> "Practical polynomial time algorithms for linear complementarity problems," </title> <journal> J. Operations Research Soc. </journal> <note> of Japan 32 (1989) 75-92. </note>
Reference-contexts: It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> In Section 4 we establish the polynomial-time convergence of the GPD method using Rule P. In <ref> [ 4; 9; 12; 13; 22 ] </ref> PD algorithms were presented for the complementarity problem, rather than pairs of primal and dual linear programs. All the results obtained there can be easily adapted to the primal-dual pair of linear programs (P) and (D).
Reference: [23] <author> R. D. C. Monteiro and I. Adler, </author> <title> "Interior path following primal-dual algorithms, Part I: Linear programming," </title> <note> Mathematical Programming 44 (1989) 27-41. </note>
Reference-contexts: It is known that we can guarantee a large ^ff when the current point (x k ; y k ; z k ) 2 S ++ is not too far from the central trajectory S cen . See Lemma 3.3. In fact, many of the existing PD algorithms <ref> [ 4; 9; 11; 12; 22; 21; 23 ] </ref> generate a sequence f (x k ; y k ; z k )g in a prescribed horn neighborhood of the central trajectory S cen , so that the bound ^ff remains larger than some positive constant. <p> Mizuno, Todd and Ye [ 21 ] proposed an O (nL) iteration PD algorithm where they took fi = fi 0 in every iteration with an arbitrary fixed fi 0 2 (0; 1) and a larger neighborhood of the central trajectory S cen than the ones used in <ref> [ 11; 12; 23 ] </ref> . If fi 0 were of the form n p for some positive number p, we could prove that their PD algorithm would require O (n p+1 L) total iterations. <p> They reported that the GPD method using this choice of the parameters solved the NETLIB set of test problems very efficiently. See also [ 16 ] . The authors feel that there still remain the following differences between the theoretical PD algorithms <ref> [ 4; 9; 11; 12; 13; 22; 21; 23 ] </ref> which enjoy the global and/or polynomial-time convergence and the practically efficient implementations [ 16; 17 ] of PD algorithms: (i) Values of the search direction parameter fi in the practically efficient implementa tions are smaller than those in the theoretical algorithms. <p> But the details are omitted here. See Kojima, Mizuno, and Yoshise [ 12 ] and Monteiro and Adler <ref> [ 23 ] </ref> for such an artificial initial point. We need the following lemma to prove Theorem 4.1. Lemma 4.3. Let 2 (0; (1 fl )ff fl fi fl =2] be a constant. If k then k+1 . Proof: By Lemma 3.1, (1 ^ff (1 fi)) 0.
Reference: [24] <author> R. D. C. Monteiro and I. Adler, </author> <title> "Interior path following primal-dual algorithms, Part II: Convex quadratic programming," </title> <note> Mathematical Programming 44 (1989) 43-66. </note>
Reference-contexts: The algorithm runs in O (nL) iterations. In other papers, Kojima Mizuno and Yoshise [ 12 ] and Monteiro and Adler <ref> [ 24 ] </ref> improved the complexity O (nL) to O ( nL).
Reference: [25] <author> R. D. C. Monteiro, I. Adler and M. G. C. Resende, </author> <title> "A polynomial-time primal-dual affine scaling algorithm for linear and convex quadratic programming and its power series extension," </title> <note> Mathematics of Operations Research 15 (1990) 191-214. </note>
Reference-contexts: We call the direction (x a ; y a ; z a ) an "affine scaling direction" <ref> [ 15; 25 ] </ref> since, as in the primal affine scaling algorithm [ 3; 2; 30 ] , it does not involve any centering direction. <p> The global convergence of the GPD method using Rule G (Theorem 3.2) and its proof remain valid under this generalization. This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods <ref> [ 1; 19; 25; 26 ] </ref> and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques [ 8; 34; 35 ] developed for accelerating the local convergence of the GPD method. We now describe Rule P.
Reference: [26] <author> G. Sonnevend and J. Stoer, </author> <title> "Global ellipsoidal approximations and homotopy methods for solving convex analytic programs," </title> <type> Report No. 40, </type> <institution> Institut fur Angewandte Mathematik und Statistik, Universitat Wurzburg (Wurzburg, Germany, </institution> <year> 1988). </year>
Reference-contexts: The global convergence of the GPD method using Rule G (Theorem 3.2) and its proof remain valid under this generalization. This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods <ref> [ 1; 19; 25; 26 ] </ref> and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques [ 8; 34; 35 ] developed for accelerating the local convergence of the GPD method. We now describe Rule P.
Reference: [27] <author> K. Tanabe, </author> <title> "Complementarity-enforcing centered Newton method for mathematical programming," </title> <editor> in K. Tone, ed., </editor> <title> New Methods for Linear Programming, </title> <institution> The Institute of Statistical Mathematics (Tokyo 106, </institution> <year> 1987) </year> <month> 118-144. </month>
Reference-contexts: See also [ 6 ] . (iii) A potential reduction algorithm for the linear complementarity problem with P 0 matrices [ 10 ] . We also mention that Tanabe's centered Newton method <ref> [ 27; 28 ] </ref> is closely related to the GPD method. 2.
Reference: [28] <author> K. Tanabe, </author> <title> "Centered Newton method for mathematical programming," </title> <editor> in M. Iri and K. Yajima, ed., </editor> <booktitle> Systems Modeling and Optimization (Springer-Verlag, </booktitle> <address> New York, </address> <year> 1988) </year> <month> 197-206. </month>
Reference-contexts: See also [ 6 ] . (iii) A potential reduction algorithm for the linear complementarity problem with P 0 matrices [ 10 ] . We also mention that Tanabe's centered Newton method <ref> [ 27; 28 ] </ref> is closely related to the GPD method. 2.
Reference: [29] <author> M. J. Todd and Y. Ye, </author> <title> "A centered projective algorithm for linear programming," </title> <note> Mathematics of Operations Research 15 (1990)508-529. </note>
Reference-contexts: They have taken a search direction parameter fi = n=(n + p a step length ff such that in each iteration there is at least a constant reduction in the primal-dual potential function of Todd and Ye <ref> [ 29 ] </ref> , rather than the duality gap. Kojima, Megiddo, Noma and Yoshise [ 9 ] generalized the PD potential reduction algorithm in a unified way to a wider class of primal-dual potential reduction algorithms including a globally convergent affine scaling PD algorithm.
Reference: [30] <author> R. J. Vanderbei, M. S. Meketon and B. A. Freedman, </author> <title> "A modification of Karmarkar's linear programming algorithm," </title> <note> Algorithmica 1 (1986) 395-407. </note>
Reference-contexts: We call the direction (x a ; y a ; z a ) an "affine scaling direction" [ 15; 25 ] since, as in the primal affine scaling algorithm <ref> [ 3; 2; 30 ] </ref> , it does not involve any centering direction.
Reference: [31] <author> Y. Ye, </author> <title> "An O(n 3 L) potential reduction algorithm for linear programming," </title> <note> Mathematical Programming 50 (1991) 239-258. </note>
Reference-contexts: Among others, we refer to the following: (i) An O (n 3 L) algorithm using a sequence [ 20 ] . (ii) An O ( nL) iteration potential reduction algorithm <ref> [ 31 ] </ref> . See also [ 6 ] . (iii) A potential reduction algorithm for the linear complementarity problem with P 0 matrices [ 10 ] . We also mention that Tanabe's centered Newton method [ 27; 28 ] is closely related to the GPD method. 2.
Reference: [32] <author> Y. Ye, </author> <title> "Line search in potential reduction algorithms for linear programming," </title> <type> Technical report, </type> <institution> Department of Management Sciences, The University of Iowa (Iowa City, Iowa, </institution> <year> 1989). </year>
Reference-contexts: Kojima, Megiddo, Noma and Yoshise [ 9 ] generalized the PD potential reduction algorithm in a unified way to a wider class of primal-dual potential reduction algorithms including a globally convergent affine scaling PD algorithm. Ye <ref> [ 32; 33 ] </ref> investigated the range of the search direction parameter fi which guarantees the polynomial-time convergence of the PD potential reduction algorithm. <p> Ye <ref> [ 32 ] </ref> discussed the use of different step lengths in the primal and dual spaces for primal-dual potential reduction algorithms.
Reference: [33] <author> Y. Ye, K. O. Kortanek, J. A. Kaliski and S. Huang, </author> <title> "Near-boundary behavior of primal-dual potential reduction algorithms for linear programming," Working Paper Series No. </title> <type> 90-9, </type> <institution> College of Business Administration, The University of Iowa (Iowa City, Iowa, </institution> <year> 1990). </year>
Reference-contexts: Kojima, Megiddo, Noma and Yoshise [ 9 ] generalized the PD potential reduction algorithm in a unified way to a wider class of primal-dual potential reduction algorithms including a globally convergent affine scaling PD algorithm. Ye <ref> [ 32; 33 ] </ref> investigated the range of the search direction parameter fi which guarantees the polynomial-time convergence of the PD potential reduction algorithm.
Reference: [34] <author> Y. Zhang, R. A. Tapia and J. E. Dennis, </author> <title> "On the superlinear and quadratic convergence of primal-dual interior point linear programming algorithms," </title> <type> Technical report, </type> <institution> Department of Mathematical Sciences, Rice University (Houston, Texas, </institution> <year> 1990). </year>
Reference-contexts: This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods [ 1; 19; 25; 26 ] and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques <ref> [ 8; 34; 35 ] </ref> developed for accelerating the local convergence of the GPD method. We now describe Rule P.
Reference: [35] <author> Y. Zhang, R. A. Tapia and F. Potra, </author> <title> "On the superlinear convergence of interior point algorithms for a general class of problems," </title> <institution> TR90-9, Department of Mathematical Sciences, Rice University (Houston, Texas, </institution> <year> 1990). </year>
Reference-contexts: This generalization makes it possible to incorporate various techniques to increase the practical efficiency of the interior point algorithms such as higher order predictor methods [ 1; 19; 25; 26 ] and multidimensional searches [ 5; 21 ] . Also, we can incorporate some techniques <ref> [ 8; 34; 35 ] </ref> developed for accelerating the local convergence of the GPD method. We now describe Rule P.
References-found: 35

