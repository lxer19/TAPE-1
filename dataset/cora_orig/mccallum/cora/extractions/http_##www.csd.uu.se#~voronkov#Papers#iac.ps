URL: http://www.csd.uu.se/~voronkov/Papers/iac.ps
Refering-URL: http://www.csd.uu.se/~voronkov/Papers/abstracts.html
Root-URL: 
Title: Complexity of Query Answering in Logic Databases with Complex Values  
Author: Evgeny Dantsin Andrei Voronkov 
Note: Supported by grants from the Swedish Royal Academy of Sciences, the Swedish Institute, INTAS and RFBR. Supported by a TFR grant.  
Date: March 25, 1998  
Address: Fontanka 27, St.Petersburg 191011 Russia  Box 311, S-751 05 Uppsala Sweden  
Affiliation: Steklov Institute of Mathematics at St.Petersburg  Computing Science Department Uppsala University  
Abstract: This paper characterizes the computational complexity of nonrecur-sive queries in logic databases with complex values. Queries are represented by Horn clause logic programs. Complex values are represented by terms in equational theories (finite sets and multisets are examples of such complex values). We show that the problem of whether a query has a nonempty answer is NEXP-hard for nonrecursive range-restricted queries. We also show that this problem is in NEXP if complex values satisfy the following condition: the solvability problem for equations in the corresponding equational theory is in NP. Since trees, finite sets and multisets satisfy this condition, the query answering problem for logic databases with trees, finite sets and multisets is shown to be NEXP-complete. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul and C. Beeri. </author> <title> The power of languages for the manipulation of complex values. </title> <journal> VLDB Journal, </journal> <volume> 4 </volume> <pages> 727-794, </pages> <year> 1995. </year>
Reference: [2] <author> S. Abiteboul and S. Grumbach. Col: </author> <title> A logic-based language for complex objects. </title> <editor> In J. Schmidt, S. Ceri, and M. Missikoff, editors, </editor> <booktitle> Advances in Database Technology - EDBT'88. Proceedings of the International Conference on Extending Database Technology, volume 303 of Lecture Notes in Computer Science, </booktitle> <pages> pages 271-293, </pages> <address> Venice, Italy, March 1988. </address> <publisher> Springer Verlag. </publisher>
Reference: [3] <author> S. Abiteboul and S. Grumbach. </author> <title> A rule-based language with functions and sets. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 16(1) </volume> <pages> 1-30, </pages> <year> 1991. </year> <month> 12 </month>
Reference: [4] <author> K.R. Apt. </author> <title> Logic programming. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B: Formal Methods and Semantics, chapter 10, </booktitle> <pages> pages 493-574. </pages> <publisher> Elsevier Science, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: We assume that contains at least one constant and does not contain the equality symbol =. Atoms, substitutions, instances, variants etc. are defined in the standard way (see, for example, <ref> [4] </ref>). The Herbrand universe U for is defined as the set of all ground terms over . The set of all ground atoms over is called the Herbrand base B for . <p> Similarly, we use the terms logic programs with bags, trees, etc. Semantics. The semantics of logic programs over equational theories can be defined in many ways by adapting the standard logic programming semantics <ref> [4, 18, 13] </ref> for the corresponding equational theory. For example, one can use the least fixpoint semantics or a generalization of SLD-resolution. We define the semantics by using the least Herbrand model. Let A :- A 1 ; : : : ; A n be a clause without variables.
Reference: [5] <author> C. Beeri and Y. Kornatzky. </author> <title> A logical query language for hypermedia systems. </title> <journal> Information Sciences, </journal> <volume> 77 </volume> <pages> 1-38, </pages> <year> 1994. </year>
Reference: [6] <author> C. Beeri, S. Naqvi, O. Schmueli, and S. Tsur. </author> <title> Set constructors in a logic database language. </title> <journal> Journal of Logic Programming, </journal> <volume> 10 </volume> <pages> 181-232, </pages> <year> 1991. </year>
Reference: [7] <author> E. Borger, E. Gradel, and Y. Gurevich. </author> <title> The Classical Decision Problem. </title> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference: [8] <author> E. Dantsin, T. Eiter, G. Gottlob, and A. Voronkov. </author> <title> Complexity and expressive power of logic programming. </title> <booktitle> In Proceedings Twelfth Annual IEEE Conference on Computational Complexity, </booktitle> <pages> pages 82-101, </pages> <address> Ulm, Germany, </address> <month> June </month> <year> 1997. </year>
Reference: [9] <author> E. Dantsin and A. Voronkov. </author> <title> Bag and set unification. </title> <type> UPMAIL Tech nical Report 150, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: Proof. NEXP-hardness was proved in Theorem 3.2. The paper <ref> [9] </ref> describes a nondeterministic polynomial-time unification algorithm for terms representing any combination of trees, bags and sets. Thereby, the solvability problem for corresponding equational theories is in NP. Therefore, the inclusion in NEXP immediately follows from Theorem 4.1 above and [9]. 2 <p> Proof. NEXP-hardness was proved in Theorem 3.2. The paper <ref> [9] </ref> describes a nondeterministic polynomial-time unification algorithm for terms representing any combination of trees, bags and sets. Thereby, the solvability problem for corresponding equational theories is in NP. Therefore, the inclusion in NEXP immediately follows from Theorem 4.1 above and [9]. 2
Reference: [10] <author> E. Dantsin and A. Voronkov. </author> <title> Complexity of query answering in logic databases with complex values. </title> <editor> In S. Adian and A. Nerode, editors, </editor> <booktitle> Logical Foundations of Computer Science. 4th International Symposium, LFCS'97, volume 1234 of Lecture Notes in Computer Science, </booktitle> <pages> pages 56-66, </pages> <address> Yaroslavl, Russia, </address> <month> July </month> <year> 1997. </year>
Reference: [11] <author> A. Dovier, E.G. Omodeo, E. Pontelli, and G. Rossi. flogg: </author> <title> A language for programming in logic with finite sets. </title> <journal> Journal of Logic Programming, </journal> <volume> 28(1) </volume> <pages> 1-44, </pages> <year> 1996. </year>
Reference-contexts: Note that we defined hereditarily finite sets, i.e. finite sets whose elements can be other (hereditarily finite) sets. There are other ways of integrating finite sets into logic programming. For example, in <ref> [11] </ref> sets are represented by terms fs 1 ; : : : ; s n j tg where t can be any term not necessarily representing a set (the authors call such objects colored sets).
Reference: [12] <author> M. Gabbrielli, G.M. Dore, and G. Levi. </author> <title> Observable semantics for con straint logic programs. </title> <journal> Journal of Logic and Computation, </journal> <volume> 5(2) </volume> <pages> 133-171, </pages> <year> 1995. </year>
Reference-contexts: By the standard technique (see for example <ref> [19, 12] </ref>) one can prove that a goal G succeeds with respect P if and only if there is a constraint SLD-derivation (1) such that (1) G 1 = G; (2) E 1 = ;; (3) G N = 2; and (4) E N is solvable in E.
Reference: [13] <author> J.H. Gallier and S. Raatz. </author> <title> Extending SLD-resolution to equational Horn clauses using E-unification. </title> <journal> Journal of Logic Programming, </journal> <volume> 6(3) </volume> <pages> 3-44, </pages> <year> 1989. </year>
Reference-contexts: Similarly, we use the terms logic programs with bags, trees, etc. Semantics. The semantics of logic programs over equational theories can be defined in many ways by adapting the standard logic programming semantics <ref> [4, 18, 13] </ref> for the corresponding equational theory. For example, one can use the least fixpoint semantics or a generalization of SLD-resolution. We define the semantics by using the least Herbrand model. Let A :- A 1 ; : : : ; A n be a clause without variables.
Reference: [14] <author> S. Grumbach and V. Vianu. </author> <title> Tractable query languages for complex object databases. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 51(2) </volume> <pages> 149-167, </pages> <year> 1995. </year> <month> 13 </month>
Reference: [15] <author> P. Kanellakis, G.M. Kuper, and P.Z. Revesz. </author> <title> Constraint query lan guages. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 51 </volume> <pages> 26-52, </pages> <year> 1995. </year>
Reference: [16] <author> G.M. Kuper. </author> <title> Logic programming with sets. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 41 </volume> <pages> 44-64, </pages> <year> 1990. </year>
Reference: [17] <author> N. Leone and P. Rullo. </author> <title> Ordered logic programming with sets. </title> <journal> Journal of Logic and Computation, </journal> <volume> 3(6) </volume> <pages> 621-642, </pages> <year> 1993. </year>
Reference: [18] <author> J.W. Lloyd. </author> <booktitle> Foundations of Logic Programming (2nd edition). </booktitle> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Similarly, we use the terms logic programs with bags, trees, etc. Semantics. The semantics of logic programs over equational theories can be defined in many ways by adapting the standard logic programming semantics <ref> [4, 18, 13] </ref> for the corresponding equational theory. For example, one can use the least fixpoint semantics or a generalization of SLD-resolution. We define the semantics by using the least Herbrand model. Let A :- A 1 ; : : : ; A n be a clause without variables.
Reference: [19] <author> M.J. Maher. </author> <title> A CLP view of logic programming. </title> <booktitle> In Proc. Conf. on Alge braic and Logic Programming, volume 632 of Lecture Notes in Computer Science, </booktitle> <pages> pages 364-383, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: By the standard technique (see for example <ref> [19, 12] </ref>) one can prove that a goal G succeeds with respect P if and only if there is a constraint SLD-derivation (1) such that (1) G 1 = G; (2) E 1 = ;; (3) G N = 2; and (4) E N is solvable in E.
Reference: [20] <author> C.H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: We reduce the TILING problem, which is known to be NEXP-complete (see for example <ref> [20] </ref>, page 501), to the query answering problem for nonrecursive range-restricted logic programs with lists. Informally, TILING is the problem of tiling the square of size 2 n fi 2 n by tiles (squares of size 1 fi 1).
Reference: [21] <author> O. Shmueli, S. Tsur, and C. Zaniolo. </author> <title> Compilation of set terms in the logic data language (LDL). </title> <journal> Journal of Logic Programming, </journal> <volume> 12(1) </volume> <pages> 89-119, </pages> <year> 1992. </year>
Reference: [22] <author> R.W. Topor. </author> <title> Domain independent formulas and databases. </title> <journal> Theoretical Computer Science, </journal> <volume> 52(3) </volume> <pages> 281-306, </pages> <year> 1987. </year>
Reference-contexts: Range-restricted queries play an important role in databases because they are domain independent (see <ref> [22] </ref> for example). The query answering problem. Consider a set C of logic programs over E.
Reference: [23] <author> K. Vadaparty. </author> <title> On the power of rule-based languages with sets. </title> <booktitle> In ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <pages> pages 26-36, </pages> <year> 1991. </year>
Reference: [24] <author> A. Voronkov. </author> <title> Logic programming with bounded quantifiers. </title> <editor> In A. Voronkov, editor, </editor> <booktitle> Logic Programming, volume 592 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 486-514. </pages> <publisher> Springer Verlag, </publisher> <year> 1992. </year> <month> 14 </month>
References-found: 24

