URL: ftp://rtcl.eecs.umich.edu/outgoing/ccsu/icpp93.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/routing/
Root-URL: http://www.cs.umich.edu
Email: fccsu,kgshing@eecs.umich.edu  
Title: Adaptive Deadlock-Free Routing in Multicomputers Using Only One Extra Virtual Channel  
Author: Chien-Chun Su and Kang G. Shin 
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: We present three protocols defining the relationship between messages and the channel resources requested: request-then-hold, request-then-wait, and request-then-relinquish. Based on the three protocols, we develop an adaptive deadlock-free routing algorithm called the 3P routing. The 3P routing uses shortest paths and is fully-adaptive, so messages can be routed via any of the shortest paths from the source to the destination. Since it is a minimal or shortest routing, the 3P routing guarantees the freedom of livelocks. The 3P routing is not limited to a specific network topology. The main requirement for an applicable network topology is that there exists a deterministic, minimal, deadlock-free routing algorithm. Most existing network topologies are equipped with such an algorithm. In this paper, we present an adaptive deadlock-free routing agorithm for n-dimensional meshes by using the 3P routing. The hardware required by the 3P routing uses only one extra virtual channel as compared to the deterministic routing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. A. Chien and J. H. Kim, </author> <title> "Plannar-adaptive routing: Low-cost adaptive networks for multiprocessors," </title> <booktitle> in 19th Annual International Symposium on Computer Architecture, </booktitle> <pages> pp. 268-277, </pages> <year> 1992. </year>
Reference-contexts: The authors of [5] extended the same concept to n-dimensional meshes, k-ary n-cubes and hypercubes. In k-ary n-cubes, if k &gt; 4, nonminimal routing should be used, thus taking more hops than needed and possibly introducing livelocks. In <ref> [1] </ref>, Chien and Kim proposed a planar-adaptive routing algorithm which limits the routing freedom to two dimensions at a time. The reduced freedom makes it possible to prevent deadlocks with only a fixed number of virtual channels, which is independent of network dimension. <p> The proposed algorithm only needs two virtual channels over each physical link. We can apply the methods proposed in [6] (abbreviated as the L-H algorithm in Fig. 3) to n-dimensional meshes, but it requires 2 n1 virtual channels. The planar-adaptive routing algorithm <ref> [1] </ref> (C-H algorithm in Fig. 3), which is not fully-adaptive, needs three virtual channels. The partially-adaptive routing algorithms in [4, 5] (G-N algorithm in Fig. 3) do not add any virtual channel, but they are not fully-adaptive.
Reference: [2] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: This assumption is reasonable because many popular topologies are equipped with such a routing function, e.g., e-cube routing for the hypercube, xy routing for the mesh, and the virtual-channel routing <ref> [2] </ref> for the torus. Several adaptive, deadlock-free routing algorithms have been proposed in recent years. In [2], Dally and Seitz proposed the concept of virtual channel to develop deadlock-free routing algorithms. Virtual channels are logical abstractions that share the same physical link. <p> This assumption is reasonable because many popular topologies are equipped with such a routing function, e.g., e-cube routing for the hypercube, xy routing for the mesh, and the virtual-channel routing <ref> [2] </ref> for the torus. Several adaptive, deadlock-free routing algorithms have been proposed in recent years. In [2], Dally and Seitz proposed the concept of virtual channel to develop deadlock-free routing algorithms. Virtual channels are logical abstractions that share the same physical link. They are time-multiplexed over a single physical link, so one separate queue must be maintained in a node for each virtual channel. <p> They are time-multiplexed over a single physical link, so one separate queue must be maintained in a node for each virtual channel. Virtual channels are used to remove the cycles in a channel-dependency graph, thus providing deadlock freedom in message transmissions. However, the algorithms in <ref> [2] </ref> are deterministic. In [6], Linder and Harden extended the concept of virtual channel to multiple, virtual interconnection networks that provide adaptability, deadlock-freedom and fault-tolerance. Each link is shared by many virtual channels, and the number of virtual channels used depends on how many virtual networks are needed. <p> For n-dimensional meshes and hyper-cubes, the 3P routing requires two virtual channels on each physical link. For k-ary n-cubes and C-wrapped hexagonal meshes, it requires three virtual channels. As compared to the deterministic routing, such as the xy routing, extended xy routing, e cube routing, and virtual channel routing <ref> [2] </ref>, the 3P routing requires only one additional virtual channel regardless of network size/dimension. In addition to its deadlock freedom, the 3P routing is also minimal and fully-adaptive. The minimal routing ensures livelock-freedom. The fully-adaptiveness enables messages/packets to be transmitted via any of the shortest paths.
Reference: [3] <author> J. Duato, </author> <title> "Improving the efficiency of virtual channels with time-dependent selection functions," </title> <booktitle> in Proc. Parallel Architectures and Languages Europe, </booktitle> <pages> pp. 635-650, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The number of virtual channels required by the 3P routing on H-meshes is the same as that of k-ary n-cubes. The 3P routing turns out to have a flavor somewhat similar to the one proposed in <ref> [3] </ref>, although both have been developed independently. However, the method proposed in [3] dealt only with adaptive routing. The fault-tolerant 3P routing can be derived by changing the protocols of links around the faulty nodes or links. <p> The number of virtual channels required by the 3P routing on H-meshes is the same as that of k-ary n-cubes. The 3P routing turns out to have a flavor somewhat similar to the one proposed in <ref> [3] </ref>, although both have been developed independently. However, the method proposed in [3] dealt only with adaptive routing. The fault-tolerant 3P routing can be derived by changing the protocols of links around the faulty nodes or links.
Reference: [4] <author> C. J. Glass and L. M. Ni, </author> <title> "Adaptive routing in mesh-connected networks," </title> <booktitle> in Proceedings of the 1992 International Conference on Distributed Computing Systems, </booktitle> <pages> pp. 12-19, </pages> <year> 1992. </year>
Reference-contexts: The chief disadvantage of this method is that many virtual channels (in general, an exponential function of the network dimension) are required, e.g., a k-ary n-cube needs 2 n1 (n + 1) virtual channels. In <ref> [4] </ref>, Glass and Ni proposed partially-adaptive routing algorithms for 2D and 3D meshes without adding physical or virtual channels. They first investigated the possible deadlock cycles on 2D and 3D-meshes, then proposed some prohibited turns of these cycles to prevent deadlocks. <p> Thus, each node has from n to 2n neighbors, depending on its location in the mesh <ref> [4] </ref>. If X and Y are neighbors, then the channel of dimension i at node X is in positive direction when x i = y i 1, or in negative direction when x i = y i + 1. The xy routing [4] in meshes can be extended to n-dimensional meshes <p> neighbors, depending on its location in the mesh <ref> [4] </ref>. If X and Y are neighbors, then the channel of dimension i at node X is in positive direction when x i = y i 1, or in negative direction when x i = y i + 1. The xy routing [4] in meshes can be extended to n-dimensional meshes (called extended xy routing). That is, all packets should follow the dimension order, 0 ! 1 ! : : : ! n 2 ! n 1. The extended xy routing is deadlock-free, minimal and deterministic. <p> We can apply the methods proposed in [6] (abbreviated as the L-H algorithm in Fig. 3) to n-dimensional meshes, but it requires 2 n1 virtual channels. The planar-adaptive routing algorithm [1] (C-H algorithm in Fig. 3), which is not fully-adaptive, needs three virtual channels. The partially-adaptive routing algorithms in <ref> [4, 5] </ref> (G-N algorithm in Fig. 3) do not add any virtual channel, but they are not fully-adaptive. Fig. 3 shows a table that compares the virtual-channel requirements of the 3P routing and other adaptive deadlock-free routing algorithms for several topologies.
Reference: [5] <author> C. J. Glass and L. M. Ni, </author> <title> "The turn model for adaptive routing," </title> <booktitle> in Proceedings of the 1992 International Symposium on Computer Architecture, </booktitle> <pages> pp. 278-287, </pages> <year> 1992. </year>
Reference-contexts: Because this algorithm cannot route messages along any of shortest paths in the network, it is called partially-adaptive routing. Also, the higher the network dimension, the more source-destination pairs, each with only a single routing path, will result. The authors of <ref> [5] </ref> extended the same concept to n-dimensional meshes, k-ary n-cubes and hypercubes. In k-ary n-cubes, if k &gt; 4, nonminimal routing should be used, thus taking more hops than needed and possibly introducing livelocks. <p> We can apply the methods proposed in [6] (abbreviated as the L-H algorithm in Fig. 3) to n-dimensional meshes, but it requires 2 n1 virtual channels. The planar-adaptive routing algorithm [1] (C-H algorithm in Fig. 3), which is not fully-adaptive, needs three virtual channels. The partially-adaptive routing algorithms in <ref> [4, 5] </ref> (G-N algorithm in Fig. 3) do not add any virtual channel, but they are not fully-adaptive. Fig. 3 shows a table that compares the virtual-channel requirements of the 3P routing and other adaptive deadlock-free routing algorithms for several topologies.
Reference: [6] <author> D. H. Linder and J. C. Harden, </author> <title> "An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 40, no. 1, </volume> <pages> pp. 2-12, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: They are time-multiplexed over a single physical link, so one separate queue must be maintained in a node for each virtual channel. Virtual channels are used to remove the cycles in a channel-dependency graph, thus providing deadlock freedom in message transmissions. However, the algorithms in [2] are deterministic. In <ref> [6] </ref>, Linder and Harden extended the concept of virtual channel to multiple, virtual interconnection networks that provide adaptability, deadlock-freedom and fault-tolerance. Each link is shared by many virtual channels, and the number of virtual channels used depends on how many virtual networks are needed. <p> The reduced freedom makes it possible to prevent deadlocks with only a fixed number of virtual channels, which is independent of network dimension. The hardware overhead is much less than that of the algorithm in <ref> [6] </ref>. In this paper, we propose an adaptive, deadlock-free, and livelock-free routing algorithm with less hardware overhead (except for partially-adaptive algorithms) and better adaptability than others. Section 2 presents three protocols that will be used to propose an adaptive deadlock-free routing algorithm. <p> The proposed algorithm only needs two virtual channels over each physical link. We can apply the methods proposed in <ref> [6] </ref> (abbreviated as the L-H algorithm in Fig. 3) to n-dimensional meshes, but it requires 2 n1 virtual channels. The planar-adaptive routing algorithm [1] (C-H algorithm in Fig. 3), which is not fully-adaptive, needs three virtual channels.
Reference: [7] <author> K. G. Shin, </author> <title> "HARTS: A distributed real-time architecture," </title> <journal> IEEE Computer, </journal> <volume> vol. 24, no. 5, </volume> <pages> pp. 25-34, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Due to the limited space, we only present an adaptive, deadlock-free routing algorithm for n-dimensional meshes by using the 3P routing. For other topologies, such as k-ary n-cubes, C-wrapped hexagonal meshes <ref> [7] </ref> and so on, a similar method can be used, though the virtual channels required in V IN 1 may be different. <p> The proposed 3P routing requires only one additional virtual channel as compared to the deterministic routing. Furthermore, it is minimal and fully-adaptive. It can also be used to construct an adaptive deadlock-free routing algorithm for C-wrapped H-meshes <ref> [7] </ref>. The number of virtual channels required by the 3P routing on H-meshes is the same as that of k-ary n-cubes. The 3P routing turns out to have a flavor somewhat similar to the one proposed in [3], although both have been developed independently.
References-found: 7

