URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Brajnik+Clancy-AMAI97.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/papers-QR.html
Root-URL: http://www.cs.utexas.edu
Title: Focusing qualitative simulation using temporal logic: theoretical foundations  
Author: Giorgio Brajnik ; and Daniel J. Clancy 
Keyword: qualitative simulation, temporal logic model checking, PLTL, semi quantitative simulation, buondary conditions problems.  
Address: 33100 Udine, Italy  Austin, Austin, Texas 78712  
Affiliation: 1 Dip. di Matematica e Informatica, Universita di Udine,  Dept. of Computer Sciences, University of Texas at  
Note: To appear in The Annals of Mathematics in Artificial Intelligence (AMAI),1997. Baltzer Journals  
Email: E-mail: giorgio@dimi.uniud.it  E-mail: clancy@cs.utexas.edu  
Phone: 2  
Date: April 30, 1997  
Abstract: We illustrate TeQsim, a qualitative simulator for continuous dynamical systems that combines the expressive power of qualitative differential equations with temporal logic to constrain and refine the resulting predicted behaviors. Temporal logic is used to specify constraints that restrict the simulation to a region of the state space and to specify trajectories for input variables. A propositional linear-time temporal logic is adopted, which is extended to a three valued logic that allows a formula to be conditionally entailed when quantitative information specified in the formula can be applied to a behavior to refine it. We present a formalization of the logic with correctness and completeness results for the adopted model checking algorithm. We show an example of the simulation of a non-autonomous dynamical system and illustrate possible application tasks, ranging from simulation to monitoring and control of continuous dynamical systems, where TeQsim can be applied. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. F. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <editor> G. Brajnik and D.J. </editor> <booktitle> Clancy / Focusing qualitative simulation 23 1984. </booktitle>
Reference-contexts: Our work focuses on constraining the simulation as opposed to querying it after the simulation is completed. The trajectory specification language can be compared to other formalisms for specifying temporal constraints. Our language is strictly more expressive than both Allen's interval algebra <ref> [1] </ref> and Dechter, Meiri and Pearl's temporal constraint networks [11] due to the ability to arbitrarily compose path formul using temporal operators. All of the relations defined by Allen can be expressed using the composition of temporal operators in addition to more complex relations.
Reference: [2] <author> R. Alur and T. Henzinger. </author> <title> Real-time logics: complexity and expressiveness. </title> <journal> Information and Computation, </journal> <volume> 104(1) </volume> <pages> 35-77, </pages> <year> 1993. </year>
Reference-contexts: An event is a time-point distinguished within the simulation. The declaration of external events introduces new relevant time-points that are inserted during the simulation. For example the declaration (event open :time (2 4)) defines a time-point called open that is quantitatively constrained to occur at time t 2 <ref> [2; 4] </ref>. References to external events included in both temporal logic and discontinuous change expressions allow the modeler to temporally constrain the information contained within these expressions and specify correlations between external events and other events generated during simulation. <p> Getting a definite answer for formul such as (eventually p) is not always possible when potentially infinite behaviors are encountered since it is always possible for p to occur in the future. Metric temporal logic <ref> [2] </ref> allows the definition of a G. Brajnik and D.J. Clancy / Focusing qualitative simulation 22 horizon for a temporal logic expression. This would allow statements such as "within 50 seconds the tanks level reaches 70 inches." These statements are only expressible within our logic using an external predefined event.
Reference: [3] <author> F. Bacchus and F. Kabanza. </author> <title> Using temporal logic to control search in a forward chaining planner. </title> <booktitle> In Proc of the 3rd European Workshop on Planning (EWSP), </booktitle> <address> Assisi, Italy, Aug. 1995. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: In our case, TL-Guide is embedded in the Qsim architecture which drives the model checking activity. Bacchus and Kabanza utilize temporal logic in a similar manner within the domains of forward chaining planning <ref> [3] </ref> and reactive planning [4]. They use temporal logic G. Brajnik and D.J. Clancy / Focusing qualitative simulation 21 to place constraints on the path selected to reach a goal state and to express search control information.
Reference: [4] <author> F. Bacchus and F. Kabanza. </author> <title> Planning for temporally extended goals. </title> <editor> In B. Clancey and D. Weld, editors, </editor> <booktitle> Proc. of the Thirteenth National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press, </publisher> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: An event is a time-point distinguished within the simulation. The declaration of external events introduces new relevant time-points that are inserted during the simulation. For example the declaration (event open :time (2 4)) defines a time-point called open that is quantitatively constrained to occur at time t 2 <ref> [2; 4] </ref>. References to external events included in both temporal logic and discontinuous change expressions allow the modeler to temporally constrain the information contained within these expressions and specify correlations between external events and other events generated during simulation. <p> In our case, TL-Guide is embedded in the Qsim architecture which drives the model checking activity. Bacchus and Kabanza utilize temporal logic in a similar manner within the domains of forward chaining planning [3] and reactive planning <ref> [4] </ref>. They use temporal logic G. Brajnik and D.J. Clancy / Focusing qualitative simulation 21 to place constraints on the path selected to reach a goal state and to express search control information.
Reference: [5] <author> M. Barbeau, F. Kabanza, and R. St-Denis. </author> <title> Synthesizing plant controllers using real-time goals. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 791-798. </pages> <publisher> IJCAI, Morgan Kaufmann Publishers, Inc., </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [20, 13, 5, 15] </ref>. Qualitative reasoning [17] has been used to reason about continuous change of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables.
Reference: [6] <author> D. Berleant and B.J. Kuipers. </author> <title> Using incomplete quantitative knowledge in qualitative reasoning. </title> <booktitle> In Proc. of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 324-329, </pages> <year> 1988. </year>
Reference-contexts: This would allow statements such as "within 50 seconds the tanks level reaches 70 inches." These statements are only expressible within our logic using an external predefined event. Such an extension offers the modeler more flexibility to express relevant constraints. Functional envelopes | Semi-quantitative reasoning <ref> [6] </ref> within TeQsim uses interval bounds and static functional envelopes for monotonic functions to derive quantitative information about a behavior. NSIM [16] derives dynamic envelopes describing a variable's behavior with respect to time. Currently, only interval information can be specified within TeQsim trajectory constraints.
Reference: [7] <author> G. Bhat, R. Cleaveland, and O. Grumberg. </author> <title> Efficient on-the-fly model checking for CTL*. </title> <booktitle> In Proc. of Conference on Logic in Computer Science (LICS-95), </booktitle> <year> 1995. </year>
Reference-contexts: Bhat et al. <ref> [7] </ref> present an algorithm for CTL* model checking. They use a set of inference rules that compute formula progression in a similar way as we do. Our algorithm differs from theirs for two reasons.
Reference: [8] <author> G. Brajnik. </author> <title> Statistical properties of qualitative behaviors. </title> <booktitle> In Proc. of the Eleventh International Workshop for Qualitative Reasoning, </booktitle> <address> Cortona, Italy, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Due to Qsim incompleteness, the resulting behavior may be a spurious one. Therefore, TeQsim provides a relative guarantee that if there exists a solution, then the solution satisfies the predicted quantitative bounds. Other methods can be applied to ensure that a solution exists, like Monte Carlo simulations <ref> [8] </ref>. G. Brajnik and D.J.
Reference: [9] <author> G. Brajnik and D. J. Clancy. </author> <title> Temporal constraints on trajectories in qualitative simulation. </title> <editor> In B. Clancey and D. Weld, editors, </editor> <booktitle> Proc. of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 979-984. </pages> <publisher> AAAI Press, </publisher> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: To restrict the simulation to behaviors that exhibit the specified discontinuity, discontinuous change expressions are translated into temporal logic constraints. Discontinuous change expressions and their application are discussed in more detail in <ref> [9] </ref>. The TL-Guide performs model checking and behavior refinement using the temporal logic constraints.
Reference: [10] <author> G. Brajnik and D. J. Clancy. </author> <title> Temporal constraints on trajectories in qualitative simulation. </title> <type> Technical Report UDMI-RT-01-96, </type> <institution> Dip. di Matematica e Informatica, University of Udine, Udine, Italy, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: The complete solution is based on an intertwined implementation of and TLG-1 so that the problem is detected and handled efficiently. The report <ref> [10] </ref> contains a detailed description of the algorithm along with soundness and completeness proofs. In this paper we assume that TL-Guide performs a correct detection and application of delayed refinement conditions. The following theorem, proven in the appendix, characterizes the correctness and completeness properties of TL-Guide.
Reference: [11] <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: The trajectory specification language can be compared to other formalisms for specifying temporal constraints. Our language is strictly more expressive than both Allen's interval algebra [1] and Dechter, Meiri and Pearl's temporal constraint networks <ref> [11] </ref> due to the ability to arbitrarily compose path formul using temporal operators. All of the relations defined by Allen can be expressed using the composition of temporal operators in addition to more complex relations.
Reference: [12] <author> D. DeCoste. </author> <title> Goal-directed qualitative reasoning with partial states. </title> <type> Technical Report 57, </type> <institution> The Institute for the Learning Sciences, University of Illinois at Urbana-Champaign, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: DeCoste <ref> [12] </ref> introduces sufficient discriminatory envisionments to determine whether a goal region is possible, impossible or inevitable from each state of the space. This is performed by generating the simplest state description that is sufficient for inferring these discriminations.
Reference: [13] <author> E.A. Emerson. </author> <title> Temporal and modal logic. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 995-1072. </pages> <publisher> Elsevier Science Publishers/MIT Press, </publisher> <year> 1990. </year> <note> Chap. 16. </note>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [20, 13, 5, 15] </ref>. Qualitative reasoning [17] has been used to reason about continuous change of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables. <p> This section provides a formal description of the syntax and semantics for TLCL. The syntax and semantics are derived from work done by Emerson <ref> [13] </ref> and Kuipers and Shults [19]. G. Brajnik and D.J. <p> These structures are extended from their typical definition (e.g. <ref> [13] </ref>) in order to accommodate the refinement process.
Reference: [14] <author> T. A. Henzinger. </author> <title> Half-order modal logic: how to prove real-time properties. </title> <booktitle> In Proceedings of the Ninth Annual Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 281-296. </pages> <publisher> ACM Press, </publisher> <year> 1990. </year>
Reference-contexts: Certain trajectory constraints require the ability to refer to values across states within the behavior. For example, the specification of a decreasing oscillation requires the ability to compare the magnitude of a variable across states. A limited form of first order logic (like the half-order logic proposed in <ref> [14] </ref>) may provide a sufficiently expressive language while still giving satisfactory performance with respect to complexity. Metric temporal logic | Due to the introduction of landmarks during the simulation process, Qsim behaviors are potentially infinite structures.
Reference: [15] <author> D. Jonescu and J.Y. Lin. </author> <title> Optimal supervision of discrete event systems in a temporal logic framework. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 25(12) </volume> <pages> 1595-1605, </pages> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [20, 13, 5, 15] </ref>. Qualitative reasoning [17] has been used to reason about continuous change of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables.
Reference: [16] <author> H. Kay and B.J. Kuipers. </author> <title> Numerical behavior envelopes for qualitative models. </title> <booktitle> In Proc. of the Eleventh National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press/MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: Such an extension offers the modeler more flexibility to express relevant constraints. Functional envelopes | Semi-quantitative reasoning [6] within TeQsim uses interval bounds and static functional envelopes for monotonic functions to derive quantitative information about a behavior. NSIM <ref> [16] </ref> derives dynamic envelopes describing a variable's behavior with respect to time. Currently, only interval information can be specified within TeQsim trajectory constraints.
Reference: [17] <author> B.J. Kuipers. </author> <title> Qualitative Reasoning: modeling and simulation with incomplete knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: Qualitative reasoning <ref> [17] </ref> has been used to reason about continuous change of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables. <p> Qualitative simulation constructs a set of possible behaviors consistent with a model of a dynamical system represented by a qualitative differential equation (QDE). The Qsim algorithm <ref> [17] </ref> represents the behavior of a dynamical system by an incrementally generated tree of qualitative states. Each state describes the system at either a time-point or over a time-interval between two points by a tuple of qualitative values for the variables specified within the QDE.
Reference: [18] <author> B.J. Kuipers and B. Shults. </author> <title> Reasoning in logic about continuous change. </title> <booktitle> In Principles of Knowledge Representation and Reasoning (KR-94). </booktitle> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1994. </year>
Reference-contexts: TeQsim, within a more rigorously formalized framework, provides a more expressive language, it refines behaviors as opposed to just filtering them, and it incorporates discontinuous changes into behaviors. The integration of temporal logic model checking and qualitative simulation was initially investigated by Kuipers and Shults <ref> [18] </ref>. They use a branching-time temporal logic to prove properties about continuous systems by testing the entire behavioral description against a temporal logic expression. The appropriate truth value is returned depending upon whether or not the description satisfies the expression.
Reference: [19] <author> B. Shults and B. Kuipers. </author> <title> Qualitative simulation and temporal logic: proving properties of continuous systems. </title> <type> TR AI96-244, </type> <institution> University of Texas Artificial Intelligence Laboratory, </institution> <month> January </month> <year> 1996. </year> <note> To appear in Artificial Intelligence Journal. </note>
Reference-contexts: Path formul are evaluated against sequences of states (i.e. behaviors). A path formula comprised of a single state formula is true of a behavior if it is true of the first state in the behavior. Following Kuipers and Shults <ref> [19] </ref>, we have adopted as basic temporal operators until, next, and strong-next, and have defined additional ones using boolean operators. <p> This section provides a formal description of the syntax and semantics for TLCL. The syntax and semantics are derived from work done by Emerson [13] and Kuipers and Shults <ref> [19] </ref>. G. Brajnik and D.J. <p> Non-atomic propositions are defined using standard boolean operators (and, not); standard propositional abbreviations are also allowed (true, false, or, implies, iff). Similar to <ref> [19] </ref>, other proposition schema are defined that enable the reference to attributes of states computed by Qsim (like whether a state is quiescent, is stable or occurs at infinite time). Path formul are constructed from state formul by combining them using temporal operators.
Reference: [20] <author> J.G. Thistle and W.M. Wonham. </author> <title> Control problems in a temporal logic framework. </title> <journal> International Journal on Control, </journal> <volume> 44(4) </volume> <pages> 943-976, </pages> <year> 1986. </year> <editor> G. Brajnik and D.J. </editor> <title> Clancy / Focusing qualitative simulation 24 </title>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [20, 13, 5, 15] </ref>. Qualitative reasoning [17] has been used to reason about continuous change of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables.
Reference: [21] <author> T. Washio and M. Kitamura. </author> <title> A fast history-oriented envisioning method introducing temporal logic. </title> <booktitle> In Ninth International Workshop on Qualitative Reasoning (QR-95), </booktitle> <pages> pages 279-288, </pages> <address> Amsterdam, NL, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Though similar in spirit, our work is: (i) more general, because TeQsim enables the user to address a wide category of problems, not limited to determining reachability of a state; (ii) semantically well-founded, based on temporal logic and (iii) formally proven to provide guaranteed results. Washio and Kitamura <ref> [21] </ref> present a technique that uses temporal logic to perform a history oriented envisionment to filter predictions. TeQsim, within a more rigorously formalized framework, provides a more expressive language, it refines behaviors as opposed to just filtering them, and it incorporates discontinuous changes into behaviors.
References-found: 21

