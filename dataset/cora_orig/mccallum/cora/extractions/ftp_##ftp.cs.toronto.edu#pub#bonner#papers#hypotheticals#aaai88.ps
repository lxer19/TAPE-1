URL: ftp://ftp.cs.toronto.edu/pub/bonner/papers/hypotheticals/aaai88.ps
Refering-URL: http://www.cs.toronto.edu/DB/people/bonner/papers.html
Root-URL: 
Email: bonner@paul.rutgers.edu  
Title: A Logic for Hypothetical Reasoning  
Author: Anthony J. Bonner 
Note: This is an expanded version of a paper in the Proceedings of the Seventh National Conference on Artificial Intelligence, pages 480-484. American Association for Artificial Intelligence (AAAI). Conference held  
Date: August, 1988  August 21-26 1988,  
Address: New Brunswick, NJ 08903  
Affiliation: Rutgers University Department of Computer Science  Saint Paul, Minnesota.  
Pubnum: Technical Report DCS-TR-230  
Abstract: This paper shows that classical logic is inappropriate for hypothetical reasoning and develops an alternative logic for this purpose. The paper focuses on a form of hypothetical reasoning which appears computationally tractable. Specifically, Horn-clause logic is augmented with rules, called embedded implications, which can hypothetically add atomic formulas to a rulebase. By introducing the notion of rulebase independence, we show that these rules can express hypothetical queries which classical logic cannot; and by adopting methods from modal logic, we show these rules to be intuitionistic. In particular, they form a subset of intuitionistic logic having semantic properties similar to those of Horn-clause logic. fl This report is an expanded version of a paper published in the Proceedings of the Seventh National Conference on Artificial Intelligence, St. Paul, Minnesota, August 21-26 1988, American Association for Artificial Intelligence (AAAI). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K.R. Apt and M.H. Van Emden. </author> <title> Contributions to the Theory of Logic Programming. </title> <journal> Journal of the ACM, </journal> <volume> 29(3) </volume> <pages> 841-862, </pages> <year> 1982. </year>
Reference-contexts: Recently, Manchanda has considered hypothetical deletions as well as additions, developing a fixpoint semantics based on dynamic logic [9]. The use of fixpoint semantics to establish completeness results has been common in logic programming since the seminal work of <ref> [1] </ref> and [16]. This section presents an alternative development for the propositional case. It is based on completeness techniques used in modal logic. The aim is to add a new perspective, and hopefully gain new insight into the intuitionistic basis of hypothetical reasoning.
Reference: [2] <author> A.J. Bonner. </author> <title> Hypothetical Datalog: Complexity and Expressibility. </title> <type> Technical Report DCS-TR-231, </type> <institution> Department of Computer Science, Rutgers university, </institution> <address> New Brunswick, NJ 08903, </address> <year> 1988. </year> <note> Also published in volume 76 (1990) of Theoretical Computer Science (TCS), pages 3-51. 17 </note>
Reference-contexts: McCarty has extended this work to a larger class of formulas and established interesting semantic results [10]. Bonner has shown that query processing in such systems is PSPACE-complete in the function-free predicate case (EXPTIME-complete when hypothetical deletions are allowed) <ref> [2] </ref>. This paper continues this line of theoretical research in two ways. First, it formulates a precise sense in which classical logic is incapable of expressing hypothetical queries and rules. Specifically, queries are required to be rulebase independent. <p> The use of negation-by-failure in hypothetical reasoning is addressed in <ref> [2] </ref> and [5]. 4 gradseq (s; c) can be defined by the following recursive, hypothetical rules: gradseq (s; c 2 ) prereq (c 1 ; c 2 ); [gradseq (s; c 1 ) take (s; c 2 )]: gradseq (s; c) [grad (s) take (s; c)]: 3 Expressibility This section defines
Reference: [3] <author> B.F. Chellas. </author> <title> Modal Logic: an Introduction. </title> <publisher> Cambridge University Press, </publisher> <year> 1980. </year>
Reference-contexts: In particular, they correspond to modus ponens and the deduction theorem. Proving completeness is more complex. The approach taken here is an adaptation of techniques used in modal logic and centers on the notion of a canonical model <ref> [3] </ref>. Our proof strategy is as follows: Given a set of embedded implications R, 1. Construct an intuitionistic structure M R , called the canonical model of R. 2. Show that M R j= R. 3.
Reference: [4] <author> M.C. </author> <title> Fitting. Intuitionistic Logic, Model Theory and Forcing. </title> <publisher> North-Holland, </publisher> <year> 1969. </year>
Reference-contexts: Indeed, they were introduced precisely to overcome the shortcomings of classical logic described in section 3.2. The next section shows that they have an intuitionistic semantics. This section provides a brief development of propositional intuitionistic logic adapted from <ref> [4] </ref> and [10]. Definition 4 Suppose L is a finite or countably infinite set of propositional atoms. A substate is a subset of L, and an intuitionistic structure is a set of substates.
Reference: [5] <author> D.M. Gabbay. N-Prolog: </author> <title> an Extension of Prolog with Hypothetical Implications. II. Logical Foundations and Negation as Failure. </title> <journal> Journal of Logic Programming (JLP), </journal> <volume> 2(4) </volume> <pages> 251-283, </pages> <year> 1985. </year>
Reference-contexts: The formal properties of hypothetical embedded-implications are still being explored. Gabbay has shown that they have an intuitionistic semantics <ref> [5] </ref>, and Miller has developed fixpoint semantics for the predicate case [13]. McCarty has extended this work to a larger class of formulas and established interesting semantic results [10]. <p> The use of negation-by-failure in hypothetical reasoning is addressed in [2] and <ref> [5] </ref>. 4 gradseq (s; c) can be defined by the following recursive, hypothetical rules: gradseq (s; c 2 ) prereq (c 1 ; c 2 ); [gradseq (s; c 1 ) take (s; c 2 )]: gradseq (s; c) [grad (s) take (s; c)]: 3 Expressibility This section defines a new
Reference: [6] <editor> D.M. Gabbay and U. Reyle. N-Prolog: </editor> <title> an Extension of Prolog with Hypothetical Implications. I. </title> <journal> Journal of Logic Programming (JLP), </journal> <volume> 1(4) </volume> <pages> 319-355, </pages> <year> 1984. </year>
Reference-contexts: Gabbay, for example, has reported a need to augment Prolog with hypothetical rules in order to encode the British Nationality Act. The act contains rules such as, "You are eligible for citizenship if your father would be eligible if he were still alive" <ref> [6] </ref>. In addition, McCarty has developed a wide class of hypothetical rules for the purpose of constructing computer-based legal consultation systems, especially systems for reasoning about contract law and corporate tax law [10, 12]. Hypothetical reasoning is complicated if hypothetical assertions can make the rulebase inconsistent [7]. <p> In particular, R o = fA (C B 1 ); A (C B 2 )g. 4 Hypothetical Inference Because classical logic is inadequate for hypothetical inference, new inference mechanisms are needed, i.e., proof procedures for embedded implications. Such procedures have been developed by several researchers <ref> [6, 13, 11] </ref>, and this section defines a simplified version of them. This propositional version retains the essential properties of the more elaborate systems while admitting a clean theoretical analysis.
Reference: [7] <author> Ginsberg. </author> <title> Counterfactuals. </title> <journal> Artificial Intelligence, </journal> <volume> 30(1) </volume> <pages> 35-79, </pages> <year> 1986. </year>
Reference-contexts: In addition, McCarty has developed a wide class of hypothetical rules for the purpose of constructing computer-based legal consultation systems, especially systems for reasoning about contract law and corporate tax law [10, 12]. Hypothetical reasoning is complicated if hypothetical assertions can make the rulebase inconsistent <ref> [7] </ref>. The work described above, however, focuses on a special case in which inconsistencies do not occur. In particular, Horn-clause logic is augmented with rules called hypothetical embedded-implications.
Reference: [8] <author> R. Kowalski. </author> <title> Logic for Problem Solving. </title> <publisher> North-Holland, </publisher> <year> 1979. </year>
Reference-contexts: That is, (s) is an expression such that R ` (s) iff s satisfies condition (2). 1 See <ref> [8] </ref> for a description of meta-level and object-level reasoning. 3 2.2 Hypothetical Rules Having introduced hypothetical queries, we can use them in the premises of rules. <p> 2 ), prereq (c 2 ; c 3 ), ... prereq (c k ; c) are all true, and if take (s; c 1 ); take (s; c 2 ); :::take (s; c) were all true, then grad (s) would be true. 2 Note that the first rule uses negation-by-failure <ref> [8] </ref>.
Reference: [9] <author> Sanjay Manchanda. </author> <title> A Dynamic Logic Programming Language for Relational Updates. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, State University of New York at Stony Brook, Stony Brook, </institution> <address> New York, </address> <month> December </month> <year> 1987. </year> <note> Also published as Technical Report TR 88-2, </note> <institution> Department of Computer Science, The University of Arizona, Tuscon, Arizona 85721, </institution> <month> January, </month> <year> 1988. </year>
Reference-contexts: Miller, for instance, has shown how such rules can structure the runtime environment of a logic program [13], and Warren and Manchanda have proposed such logics for reasoning about database updates <ref> [17, 9] </ref>. The legal domain has inspired much work into this kind of hypothetical reasoning. Gabbay, for example, has reported a need to augment Prolog with hypothetical rules in order to encode the British Nationality Act. <p> McCarty has considered a larger class of formulas involving negation and embedded universal quantifiers 6 , developing an intuitionistic fixpoint semantics and establishing interesting semantic results [10]. Recently, Manchanda has considered hypothetical deletions as well as additions, developing a fixpoint semantics based on dynamic logic <ref> [9] </ref>. The use of fixpoint semantics to establish completeness results has been common in logic programming since the seminal work of [1] and [16]. This section presents an alternative development for the propositional case. It is based on completeness techniques used in modal logic.
Reference: [10] <author> L.T. McCarty. </author> <title> Clausal Intuitionistic Logic. I. Fixed-Point Semantics. </title> <journal> Journal of Logic Programming (JLP), </journal> <volume> 5(1) </volume> <pages> 1-31, </pages> <year> 1988. </year>
Reference-contexts: In addition, McCarty has developed a wide class of hypothetical rules for the purpose of constructing computer-based legal consultation systems, especially systems for reasoning about contract law and corporate tax law <ref> [10, 12] </ref>. Hypothetical reasoning is complicated if hypothetical assertions can make the rulebase inconsistent [7]. The work described above, however, focuses on a special case in which inconsistencies do not occur. In particular, Horn-clause logic is augmented with rules called hypothetical embedded-implications. <p> The formal properties of hypothetical embedded-implications are still being explored. Gabbay has shown that they have an intuitionistic semantics [5], and Miller has developed fixpoint semantics for the predicate case [13]. McCarty has extended this work to a larger class of formulas and established interesting semantic results <ref> [10] </ref>. Bonner has shown that query processing in such systems is PSPACE-complete in the function-free predicate case (EXPTIME-complete when hypothetical deletions are allowed) [2]. This paper continues this line of theoretical research in two ways. <p> Indeed, they were introduced precisely to overcome the shortcomings of classical logic described in section 3.2. The next section shows that they have an intuitionistic semantics. This section provides a brief development of propositional intuitionistic logic adapted from [4] and <ref> [10] </ref>. Definition 4 Suppose L is a finite or countably infinite set of propositional atoms. A substate is a subset of L, and an intuitionistic structure is a set of substates. <p> Miller, for instance, has developed fixpoints semantics for such rules based on intuition-istic and minimal logic [13]. McCarty has considered a larger class of formulas involving negation and embedded universal quantifiers 6 , developing an intuitionistic fixpoint semantics and establishing interesting semantic results <ref> [10] </ref>. Recently, Manchanda has considered hypothetical deletions as well as additions, developing a fixpoint semantics based on dynamic logic [9]. The use of fixpoint semantics to establish completeness results has been common in logic programming since the seminal work of [1] and [16]. <p> QED Theorems 6 and 4 show that M R is the unique maximal model of R and that M R has a unique minimal substate. The existence of such a model was originally established by McCarty in <ref> [10] </ref>. Indeed, McCarty defines an intuitionistic structure called K fl which he shows is the unique maximal model of a set of embedded implications. Theorem 6 assures us 14 that McCarty's K fl is identical to our M R , at least in the propositional case.
Reference: [11] <author> L.T. McCarty. </author> <title> Clausal Intuitionistic Logic. II. Tableau Proof Procedures. </title> <journal> Journal of Logic Programming (JLP), </journal> <volume> 5(2) </volume> <pages> 93-132, </pages> <year> 1988. </year>
Reference-contexts: In particular, R o = fA (C B 1 ); A (C B 2 )g. 4 Hypothetical Inference Because classical logic is inadequate for hypothetical inference, new inference mechanisms are needed, i.e., proof procedures for embedded implications. Such procedures have been developed by several researchers <ref> [6, 13, 11] </ref>, and this section defines a simplified version of them. This propositional version retains the essential properties of the more elaborate systems while admitting a clean theoretical analysis.
Reference: [12] <author> L.T. McCarty and N.S. Sridharan. </author> <title> The Representation of an Evolving System of Legal Concepts. II. Prototypes and Deformations. </title> <booktitle> In Proceedings of the Seventh IJCAI, </booktitle> <pages> pages 246-253, </pages> <year> 1981. </year>
Reference-contexts: In addition, McCarty has developed a wide class of hypothetical rules for the purpose of constructing computer-based legal consultation systems, especially systems for reasoning about contract law and corporate tax law <ref> [10, 12] </ref>. Hypothetical reasoning is complicated if hypothetical assertions can make the rulebase inconsistent [7]. The work described above, however, focuses on a special case in which inconsistencies do not occur. In particular, Horn-clause logic is augmented with rules called hypothetical embedded-implications.
Reference: [13] <author> D. Miller. </author> <title> A Logical Analysis of Modules in Logic Programming. </title> <booktitle> In Proceedings of the IEEE Symposium on Logic Programming, </booktitle> <pages> pages 106-114, </pages> <month> Sept </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Several researchers in the logic-programming community have pointed out the utility of augmenting Prolog with the ability to hypothetically add facts to a rulebase. Miller, for instance, has shown how such rules can structure the runtime environment of a logic program <ref> [13] </ref>, and Warren and Manchanda have proposed such logics for reasoning about database updates [17, 9]. The legal domain has inspired much work into this kind of hypothetical reasoning. Gabbay, for example, has reported a need to augment Prolog with hypothetical rules in order to encode the British Nationality Act. <p> The formal properties of hypothetical embedded-implications are still being explored. Gabbay has shown that they have an intuitionistic semantics [5], and Miller has developed fixpoint semantics for the predicate case <ref> [13] </ref>. McCarty has extended this work to a larger class of formulas and established interesting semantic results [10]. Bonner has shown that query processing in such systems is PSPACE-complete in the function-free predicate case (EXPTIME-complete when hypothetical deletions are allowed) [2]. <p> In particular, R o = fA (C B 1 ); A (C B 2 )g. 4 Hypothetical Inference Because classical logic is inadequate for hypothetical inference, new inference mechanisms are needed, i.e., proof procedures for embedded implications. Such procedures have been developed by several researchers <ref> [6, 13, 11] </ref>, and this section defines a simplified version of them. This propositional version retains the essential properties of the more elaborate systems while admitting a clean theoretical analysis. <p> Miller, for instance, has developed fixpoints semantics for such rules based on intuition-istic and minimal logic <ref> [13] </ref>. McCarty has considered a larger class of formulas involving negation and embedded universal quantifiers 6 , developing an intuitionistic fixpoint semantics and establishing interesting semantic results [10]. Recently, Manchanda has considered hypothetical deletions as well as additions, developing a fixpoint semantics based on dynamic logic [9].
Reference: [14] <author> H. Rasiowa and R. Sikorski. </author> <title> The Mathematics of Metamathematics. </title> <publisher> Panstwowe Wydawnictwo Naukowe (PWN-Polish Scientific Publishers), </publisher> <address> Warszawa, </address> <year> 1963. </year>
Reference-contexts: it is inflationary: s cl R (s). * it is monotonic: if s 1 s 2 then cl R (s 1 ) cl R (s 2 ). * it is idempotent: cl R (s) = cl R (cl R (s)) These three properties are enjoyed by every (monotonic) inference system <ref> [14] </ref>. The third property, in particular, expresses the fact that cl R is a logical closure operator; that is, cl R (s) contains all the atoms derivable from R and s, so further applications of the inference rules will not derive any more.
Reference: [15] <author> A. Tarski. </author> <title> A Lattice-Theoretical Fixpoint Theorem and its Applications. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 5 </volume> <pages> 285-309, </pages> <year> 1955. </year>
Reference-contexts: In particular, the intersection of all substates of M R is the unique minimal substate. Since cl R is monotonic, this property follows from the proof of the Tarski fixpoint theorem <ref> [15] </ref>; however, because cl R is also inflationary, a short version of this proof exists. Theorem 5 If M M R then "M 2 M R . Proof: If s 2 M then s 2 M R and so s = cl R (s) by lemma 3.
Reference: [16] <author> M.H. Van Emden and R.A. Kowalski. </author> <title> The Semantics of Predicate Logic as a Programming Language. </title> <journal> Journal of the ACM, </journal> <volume> 23(4) </volume> <pages> 733-742, </pages> <year> 1976. </year>
Reference-contexts: Recently, Manchanda has considered hypothetical deletions as well as additions, developing a fixpoint semantics based on dynamic logic [9]. The use of fixpoint semantics to establish completeness results has been common in logic programming since the seminal work of [1] and <ref> [16] </ref>. This section presents an alternative development for the propositional case. It is based on completeness techniques used in modal logic. The aim is to add a new perspective, and hopefully gain new insight into the intuitionistic basis of hypothetical reasoning.
Reference: [17] <author> D.S. Warren. </author> <title> Database Updates in Pure Prolog. </title> <booktitle> In Proceedings of the International Conference on Fifth Generation Computer Systems, </booktitle> <pages> pages 244-253, </pages> <year> 1984. </year> <month> 18 </month>
Reference-contexts: Miller, for instance, has shown how such rules can structure the runtime environment of a logic program [13], and Warren and Manchanda have proposed such logics for reasoning about database updates <ref> [17, 9] </ref>. The legal domain has inspired much work into this kind of hypothetical reasoning. Gabbay, for example, has reported a need to augment Prolog with hypothetical rules in order to encode the British Nationality Act.
References-found: 17

