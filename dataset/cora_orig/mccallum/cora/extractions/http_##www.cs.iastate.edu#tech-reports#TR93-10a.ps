URL: http://www.cs.iastate.edu/tech-reports/TR93-10a.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: 
Title: A Hierarchy of Deterministic Top-down Tree Transformations  
Author: TR -a Giora Slutzki and Sandor Vagvolgyi 
Address: 226 Atanasoff Ames, IA 50011  
Affiliation: Iowa State University of Science and Technology Department of Computer Science  
Date: April 13, 1993  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. V. </author> <title> Book, Confluent and other types of Thue systems, </title> <journal> J. Assoc. Comput. Mach. </journal> <month> 29 </month> <year> (1982) </year> <month> 171-182. </month>
Reference: [2] <author> R. V. </author> <title> Book, Thue systems and the Church-Rosser property: replacement systems, specification of formal languages and presentations of monoids, in Progress in Combinatorics on Words, </title> <editor> (L. Cummings ed.) </editor> <publisher> Academic Press, </publisher> <address> 1983, New York, </address> <pages> pp. 1-38. </pages>
Reference-contexts: S is weight reducing if there is a weight function with respect to which S is weight reducing. It should be clear that each weight reducing string rewriting system is noetherian. The following theorem gives a necessary and sufficient condition for the Church-Rosser property. Theorem 2.5 ([14], <ref> [2] </ref>) A Thue system T (noetherian string rewriting system S) is Church-Rosser if and only if each class of the congruence $ fl T ( $ fl S ) contains exactly one T -irreducible (S-irreducible) element. 7 3 The Outline of the Method In this section we define precisely the problem
Reference: [3] <author> V. Book and P. O'Dunlaing, </author> <title> Testing for the Church-Rosser property, </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 16 </month> <year> (1981) </year> <month> 223-229. </month>
Reference-contexts: Then we give the inclusion diagram of the set f jjujj j u 2 N g, which is, in fact, the set of tree transformation classes represented by the elements of N . In Section 6, we show that the linear time algorithm of <ref> [3] </ref> can be applied such that, given w 2 M fl , it computes a representative u 2 N of the congruence class of w. <p> We will need the following theorem. Theorem 6.1 ([1], <ref> [3] </ref>) For any Thue system T (weight reducing string rewriting system S) there is a linear time algorithm which for every word w computes a T -irreducible (S irreducible) element u such that w $ fl T u (w $ fl Note that if the system T (S) in Theorem 6.1 <p> By using this inclusion diagram we verified that for any u; v 2 N, jjujj = jjvjj if and only if u = v. (V) We have shown that the linear time algorithm of <ref> [3] </ref> can be applied such that for every w 2 M fl the algorithm computes the unique u 2 N such that w $ fl T u. By Lemma 3.2, this implies the following result.
Reference: [4] <author> J. Engelfriet, </author> <title> Bottom-up and top-down tree transformations a comparison, </title> <note> Mathematical Systems Theory 9 (1975) 198-231. </note>
Reference-contexts: It is well known that DR R or equivalently DT A T A; a proof can be found in <ref> [4] </ref> or [13]. Top-down tree transducers with look-ahead, one of the main topics of this paper, were defined in [5]. It transpired that they have a number of nice properties, especially in the deterministic case.
Reference: [5] <author> J. Engelfriet, </author> <title> Top-down tree transducers with regular look-ahead, </title> <journal> Mathematical Systems Theory, </journal> <volume> 10 (1976/1977) 289-303. </volume>
Reference-contexts: It is well known that DR R or equivalently DT A T A; a proof can be found in [4] or [13]. Top-down tree transducers with look-ahead, one of the main topics of this paper, were defined in <ref> [5] </ref>. It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts [6], [7], [8]. Following [5], Fulop and Vagvolgyi <p> were defined in <ref> [5] </ref>. It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts [6], [7], [8]. Following [5], Fulop and Vagvolgyi [9], [10] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C R be a class of tree languages. <p> Obviously, for i &lt; j, we have C i C j . We put C e n = C n " L o . The following result was proved in <ref> [5] </ref>. Proposition 2.3 Let A be a tt R . Then dom (t A ) 2 R: By Proposition 2.3, we can iterate the look-ahead tree languages, without leaving R, as follows. <p> We thus have to prove that (i 0 ) holds for 1 i 13. Almost all these claims are well-known results which we summarize in the following lemma. 10 Lemma 4.1 (a) <ref> [5] </ref> DT T R ffi DT T R = DT T R . <p> By part (f) of Lemma 4.1, for each 1 i n, t A (a i ) ffi I D (L i ) 2 DT T . Thus, by Theorem 3.1 in <ref> [5] </ref>, for each 1 i n, t A (a i ) ffi I D (L i ) 2 DR. As DR is closed under composition, 13 see (g) of Lemma 4.1, for each 1 j m, J j 2 DR. Hence C is a dtt DR . <p> We first discuss and prove some results about the domains of deterministic top-down tree transducers with DR n look-ahead. An early result (without look-ahead) dom (DT T ) = DR is proved in <ref> [5] </ref>. This was extended in [10]: dom (DT T DR ) DR 1 . We generalize these results in the following lemma. Lemma 5.1 For every n 0, dom (DT T DR n ) DR n+1 : Proof. We proceed by an induction on n. <p> Contradiction. 2 We now show (4). Lemma 5.12 S 1 Proof. S 1 S 1 n=0 DR n by Corollary 5.5. R by Theorem 4.6 in [11] = dom (DT T R ) by results in <ref> [5] </ref>. 2 We now summarize the results of this section in the following theorem. Theorem 5.13 The diagram in Figure 1 is an inclusion diagram for f jjujj j u 2 N g.
Reference: [6] <author> J. Engelfriet and H. Vogler, </author> <title> Macro tree transducers, </title> <journal> J. Comput. System Sci. </journal> <month> 31 </month> <year> (1985) </year> <month> 71-146. </month>
Reference-contexts: It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts <ref> [6] </ref>, [7], [8]. Following [5], Fulop and Vagvolgyi [9], [10] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C R be a class of tree languages.
Reference: [7] <author> J. Engelfriet and H. Vogler, </author> <title> Pushdown machines for the macro tree transducer, </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 42 </month> <year> (1986) </year> <month> 251-368. </month>
Reference-contexts: It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts [6], <ref> [7] </ref>, [8]. Following [5], Fulop and Vagvolgyi [9], [10] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C R be a class of tree languages.
Reference: [8] <author> J. Engelfriet and H. Vogler, </author> <title> High level tree transducers and iterated pushdown transducers, </title> <journal> Acta Inform. </journal> <month> 26 </month> <year> (1988) </year> <month> 131-192. </month>
Reference-contexts: It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts [6], [7], <ref> [8] </ref>. Following [5], Fulop and Vagvolgyi [9], [10] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C R be a class of tree languages.
Reference: [9] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Top-down tree transducers with determinstic top-down look-ahead, </title> <journal> Inform. Process. Lett. </journal> <volume> 33 (1989/90) 3-5. </volume>
Reference-contexts: For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts [6], [7], [8]. Following [5], Fulop and Vagvolgyi <ref> [9] </ref>, [10] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C R be a class of tree languages. <p> This follows from (10 0 ) and establishes (8 0 ). (d) DT T DR ffiDT A = DT T DR . This follows by an easy construction and establishes (9 0 ). (e) <ref> [9] </ref> DT T ffi DT T = DT A ffi DT T . This establishes (11 0 ). (f) [12] DT T ffi DT A = DT T . This establishes (12 0 ). (g) [Folklore] DT A ffi DT A = DT A. <p> This hierarchy result is the main technical contribution of this paper. It is displayed in Figure 1. The properness of inclusion for the initial levels of the hierarchy is trivial: I DT A DT T (1) and Rounds [15] and Fulop and Vagvolgyi <ref> [9] </ref>, [10], have shown DT T DT T ffi DT T = DT A ffi DT T DT T DR : (2) To establish the hierarchy result it suffices to prove the two proper inclusions in (DT T DR ) n (DT T DR ) n ffi DT T (DT T
Reference: [10] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Variants of top-down tree transducers with look-ahead, </title> <note> Mathematical Systems Theory 21 (1989) 125-145. 23 </note>
Reference-contexts: For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition. The concept of look-ahead also proved useful in other contexts [6], [7], [8]. Following [5], Fulop and Vagvolgyi [9], <ref> [10] </ref> defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C R be a class of tree languages. <p> This hierarchy result is the main technical contribution of this paper. It is displayed in Figure 1. The properness of inclusion for the initial levels of the hierarchy is trivial: I DT A DT T (1) and Rounds [15] and Fulop and Vagvolgyi [9], <ref> [10] </ref>, have shown DT T DT T ffi DT T = DT A ffi DT T DT T DR : (2) To establish the hierarchy result it suffices to prove the two proper inclusions in (DT T DR ) n (DT T DR ) n ffi DT T (DT T DR <p> We first discuss and prove some results about the domains of deterministic top-down tree transducers with DR n look-ahead. An early result (without look-ahead) dom (DT T ) = DR is proved in [5]. This was extended in <ref> [10] </ref>: dom (DT T DR ) DR 1 . We generalize these results in the following lemma. Lemma 5.1 For every n 0, dom (DT T DR n ) DR n+1 : Proof. We proceed by an induction on n. For n = 0 the result follows from [10]. <p> extended in <ref> [10] </ref>: dom (DT T DR ) DR 1 . We generalize these results in the following lemma. Lemma 5.1 For every n 0, dom (DT T DR n ) DR n+1 : Proof. We proceed by an induction on n. For n = 0 the result follows from [10]. Suppose that the result holds for integers smaller than n. We apply the usual power set construction. Let A =&lt; ; ; A; a 0 ; P &gt; be a dtt DR n .
Reference: [11] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Iterated deterministic top-down look-ahead, </title> <booktitle> in Proc. FCT'89, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 380, </volume> <publisher> Springer-Verlag, </publisher> <address> 1989, Berlin, </address> <pages> pp. 175-184. </pages>
Reference-contexts: Let DR 0 be DR and let, for n 1, DR n be the class of tree languages recognizable by deterministic top-down tree automata with DR n1 look-ahead. By Proposition 2.3, DR n R for every n 0. Fulop and Vagvolgyi <ref> [11] </ref> proved the following result. Proposition 2.4 For each n 1, C e n 2 DR n DR n1 . Moreover, for every n 0, DR n is closed under intersection. 6 2.2 Thue Systems and String Rewriting Systems Let be an alphabet. <p> By the above characterization of C n;k we also observe that S 1 C e n;k = C n;k " L o . Obviously we have ](C e n;k ) = ](C o n;k ). Fulop and Vagvolgyi <ref> [11] </ref> have proved the following helpful result. <p> It should be clear that the tree (u; v) 2 dom () is not in dom (t A ). Contradiction. 2 We now show (4). Lemma 5.12 S 1 Proof. S 1 S 1 n=0 DR n by Corollary 5.5. R by Theorem 4.6 in <ref> [11] </ref> = dom (DT T R ) by results in [5]. 2 We now summarize the results of this section in the following theorem. Theorem 5.13 The diagram in Figure 1 is an inclusion diagram for f jjujj j u 2 N g.
Reference: [12] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Decidability of the inclusion in monoids generated by tree transformation classes, in Tree Automata and Languages, </title> <editor> (M. Nivat and A. Podelski eds.) </editor> <publisher> Elsevier Science Publishers B.V. </publisher> <address> 1992, Amsterdam, </address> <pages> pp. 381-408. </pages>
Reference-contexts: Let be the kernel of jj jj, i.e., the congruence relation induced by the homomorphism jj jj : = ker (jj jj) = f (v; w) 2 M fl fi M fl j jjvjj = jjwjj g : Fulop and Vagvolgyi <ref> [12] </ref> raised the following problem. <p> The elements of N are called normal forms with respect to . Fulop and Vagvolgyi <ref> [12] </ref> posed the problem of constructing an algorithm which, given Y 1 ; : : : ; Y m ; Z 1 ; : : : ; Z n 2 M, decides which one of the following four mutually exclusive conditions holds: (i) Y 1 ffi : : : ffi Y <p> In <ref> [12] </ref> they suggested a methodology, by which such an algorithm can be constructed provided M is not "too general ". <p> Moreover, by (III) and (V), it follows that N is indeed a set of representatives of , hence we have (a). Finally, by (IV), we have (b). 2 Remark Theorem 3.1 and Lemma 3.2 were proved in <ref> [12] </ref>. Because the proofs are short (and relevant) we have reproduced them for the sake of completeness. <p> Our choice of M is motivated by the known composition and decomposition results and by the interesting hierarchy results we obtain in Section 5. We shall follow the approach of Fulop and Vagvolgyi <ref> [12] </ref> and perform the the steps (I)-(V) for the monoid [M ] induced by M . 4 The Thue System T M Consider the set of tree transformations M = f DT A; DT T; DT T DR ; DT T R g. <p> This follows by an easy construction and establishes (9 0 ). (e) [9] DT T ffi DT T = DT A ffi DT T . This establishes (11 0 ). (f) <ref> [12] </ref> DT T ffi DT A = DT T . This establishes (12 0 ). (g) [Folklore] DT A ffi DT A = DT A. This establishes (13 0 ). 2 It remains to prove (10 0 ). We will need the following concept.
Reference: [13] <author> F. Gecseg and M. Steinby, </author> <title> Tree Automata, </title> <publisher> Akademiai Kiado, </publisher> <address> Budapest, </address> <year> 1984. </year>
Reference-contexts: It is well known that DR R or equivalently DT A T A; a proof can be found in [4] or <ref> [13] </ref>. Top-down tree transducers with look-ahead, one of the main topics of this paper, were defined in [5]. It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transformations with regular look-ahead is closed under composition.
Reference: [14] <author> M. </author> <title> Jantzen, Confluent String Rewriting, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference: [15] <author> W. C. </author> <title> Rounds, Mappings and grammars on trees, </title> <journal> Math. </journal> <note> Systems Theory 4 (1970) 257-287. </note>
Reference-contexts: This hierarchy result is the main technical contribution of this paper. It is displayed in Figure 1. The properness of inclusion for the initial levels of the hierarchy is trivial: I DT A DT T (1) and Rounds <ref> [15] </ref> and Fulop and Vagvolgyi [9], [10], have shown DT T DT T ffi DT T = DT A ffi DT T DT T DR : (2) To establish the hierarchy result it suffices to prove the two proper inclusions in (DT T DR ) n (DT T DR ) n
References-found: 15

