URL: http://www.cs.umd.edu/users/sanders/ijcai95.ps
Refering-URL: http://www.cs.umd.edu/users/sanders/pubs.html
Root-URL: 
Email: sanders@cs.umd.edu  
Title: Within the Letter of the Law: open-textured planning  
Author: Kathryn E. Sanders 
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: Most case-based reasoning systems have used a single "best" or "most similar" case as the basis for a solution. For many problems, however, there is no single exact solution. Rather, there is a range of acceptable answers. We use cases not only as a basis for a solution, but also to indicate the boundaries within which a solution can be found. We solve problems by choosing some point within those boundaries. In this paper, I discuss this use of cases with illustrations from chiron, a system I have implemented in the domain of personal income tax planning.
Abstract-found: 1
Intro-found: 1
Reference: [ Alterman, 1986 ] <author> Richard Alterman. </author> <title> An adaptive planner. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <address> Philadelphia, Pennsylvania, </address> <year> 1986. </year> <note> (reprinted in Proceedings of a Workshop on Case-Based Reasoning, 1988, and Readings in Planning, </note> <editor> edited by James Allan, James Hendler, and Austin Tate, </editor> <publisher> Morgan Kaufman, </publisher> <year> 1990). </year>
Reference: [ Ashley, 1991 ] <author> Kevin D. Ashley. </author> <title> Modelling legal argument: reasoning with cases and hypotheticals. </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: Their case representation is more detailed than Gardner's and incorporate dimensions, so that cases can be compared with each other and with the current situation. These comparisons are used as a basis for generating arguments for and against the satisfaction of open-textured concepts, again in a given situation <ref> [ Ashley, 1991; Rissland and Skalak, 1991 ] </ref> .
Reference: [ Bareiss, 1988 ] <author> Ray Bareiss. Protos: </author> <title> a unified approach to concept representation, classification, and learning. </title> <type> Technical Report AI88-83, </type> <institution> University of Texas at Austin, </institution> <year> 1988. </year> <type> (PhD Thesis). </type>
Reference-contexts: These comparisons are used as a basis for generating arguments for and against the satisfaction of open-textured concepts, again in a given situation [ Ashley, 1991; Rissland and Skalak, 1991 ] . Besides using multiple cases, other solutions to the problem of reasoning about open-textured rules have included prototypes <ref> [ Bareiss, 1988; McCarty, 1980; 1989a ] </ref> ; annotating rules with arguments for and against their application in borderline cases [ Bench-Capon and Ser-got, 1988; Sergot et al., 1986 ] ; and the single "best match" from a set of cases with a rich, detailed semantic--net representation [ Branting, 1990 ]
Reference: [ Bench-Capon and Sergot, 1988 ] <author> Trevor Bench-Capon and Marek J. Sergot. </author> <title> Towards a rule-based representation of open texture in law. </title> <booktitle> In Computer power and legal language, </booktitle> <pages> pages 39-60. </pages> <publisher> Quorum Books, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: [ Branting, 1990 ] <author> L. Karl Branting. </author> <title> Integrating rules and precedents for classification and explanation: automating legal analysis. </title> <type> Technical Report AI90-146, </type> <institution> Artificial Intelligence Laboratory, Department of Computer Sciences, University of Texas at Austin, </institution> <year> 1990. </year> <type> (PhD Thesis). </type>
Reference-contexts: have included prototypes [ Bareiss, 1988; McCarty, 1980; 1989a ] ; annotating rules with arguments for and against their application in borderline cases [ Bench-Capon and Ser-got, 1988; Sergot et al., 1986 ] ; and the single "best match" from a set of cases with a rich, detailed semantic--net representation <ref> [ Branting, 1990 ] </ref> . chiron is the first case-based planner to reason about its plans in the context of a group of previous cases. Its solution builds on previous approaches to reasoning about open-textured rules, combining prototypes, cases, dimensions, and arguments for and against the application of the rules.
Reference: [ Cuthill and McCartney, 1993 ] <author> Barbara Cuthill and Robert McCartney. </author> <title> Issue spotting in legal cases. </title> <booktitle> In Proceedings of the Fourth International Conference on Artificial Intelligence and Law, Amsterdam, </booktitle> <pages> pages 245-253, </pages> <year> 1993. </year>
Reference-contexts: Representing this knowledge required features such as space, time, action, permission, obligation, knowledge, belief, and intention, as other researchers in this domain have noted <ref> [ Cuthill and McCartney, 1993; McCarty, 1989b ] </ref> . Particularly characteristic of United States income tax law are transactions: sales, gifts, loans, and other transfers of money or property.
Reference: [ Gardner, 1987 ] <author> Anne v.d.L. Gardner. </author> <title> An artificial intelligence approach to legal reasoning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1987. </year>
Reference-contexts: The CBR systems that place the current situation in the context of a group of past cases have done so in order to reason about open-textured legal concepts. Gard-ner's program retrieves multiple cases and uses them to determine whether in a given situation a contract has been formed <ref> [ Gardner, 1987 ] </ref> . Both hypo and cabaret also retrieve multiple cases. Their case representation is more detailed than Gardner's and incorporate dimensions, so that cases can be compared with each other and with the current situation.
Reference: [ Ghosh et al., 1991 ] <author> Subrata Ghosh, James Hendler, Subbarao Kambhampati, and Brian Kettler. </author> <title> Common Lisp Implementation of NONLIN USER MANUAL. </title> <institution> Computer Science Department, University of Maryland, College Park, Maryland 20742, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: The hierarchical planner (adapted from a version of Nonlin implemented at the University of Maryland <ref> [ Ghosh et al., 1991 ] </ref> ) calls the case-based module for guidance in choosing rules to use in refining its plans and refining the open-textured predicates that remain when the rules run out. The case-based planner uses the hierarchical planner to help with indexing, controlling adaptations, and combining plans.
Reference: [ Hammond, 1986 ] <author> Kristian J. Hammond. </author> <title> Case-based planning: an integrated theory of planning, learning, and memory. </title> <type> Technical Report YALEU/CSD/RR 488, </type> <institution> Yale University Department of Computer Science, </institution> <year> 1986. </year> <type> (PhD Thesis). </type>
Reference-contexts: the user can request any strategy or combination of strategies he or she would like the system to consider; requests will be processed in a similar manner. 5 Related Work Most CBR systems have used a single "best" or "most similar" case as the basis for a solution (see, e.g., <ref> [ Hammond, 1986; Koton, 1988; Sycara, 1989; Kolod-ner, 1989 ] </ref> ).
Reference: [ Hart, 1961 ] <author> H. L. A. Hart. </author> <title> The concept of law. </title> <publisher> Claren-don Press, Oxford, </publisher> <year> 1961. </year>
Reference-contexts: This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as "tiger" or "cup," are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labelled open texture <ref> [ Waismann, 1965; Hart, 1961 ] </ref> . Any planning rule expressed in natural language, such as "be careful," "never get involved in a land war in Asia," or "buy low, sell high," suffers from the same problem. In any domain, open-textured rules can be partially x1034.
Reference: [ Kettler, 1995 ] <author> Brian P. Kettler. </author> <title> Case-based planning with a massively parallel memory. </title> <type> ph.d. dissertation. Technical report, </type> <institution> University of Maryland Department of Computer Science, </institution> <year> 1995. </year> <note> (In preparation). </note>
Reference: [ Kolodner, 1989 ] <author> Janet L. Kolodner. </author> <title> Judging which is the `best' case for a case-based reasoner. </title> <booktitle> In Proceedings of a Workshop on Case-based Reasoning, </booktitle> <pages> pages 77-86, </pages> <year> 1989. </year>
Reference: [ Koton, 1988 ] <author> Phyllis Koton. </author> <title> Reasoning about evidence in causal explanations. </title> <booktitle> In Proceedings of a Workshop on Case-based Reasoning, </booktitle> <pages> pages 260-270, </pages> <year> 1988. </year>
Reference-contexts: the user can request any strategy or combination of strategies he or she would like the system to consider; requests will be processed in a similar manner. 5 Related Work Most CBR systems have used a single "best" or "most similar" case as the basis for a solution (see, e.g., <ref> [ Hammond, 1986; Koton, 1988; Sycara, 1989; Kolod-ner, 1989 ] </ref> ).
Reference: [ McCartney, 1993 ] <author> Robert McCartney. </author> <title> Planning from partial and multiple episodes in a case-based planner. </title> <booktitle> In Proceedings of the 1993 AAAI Workshop on Case-Based Reasoning, </booktitle> <address> Washington, D.C., </address> <pages> pages 94-100, </pages> <year> 1993. </year>
Reference: [ McCarty, 1980 ] <author> L. Thorne McCarty. </author> <title> The taxman project: towards a cognitive theory of legal argument. </title> <editor> In Bryan Niblett, editor, </editor> <booktitle> Computer Science and Law, </booktitle> <pages> pages 23-43. </pages> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England, </address> <year> 1980. </year>
Reference-contexts: These comparisons are used as a basis for generating arguments for and against the satisfaction of open-textured concepts, again in a given situation [ Ashley, 1991; Rissland and Skalak, 1991 ] . Besides using multiple cases, other solutions to the problem of reasoning about open-textured rules have included prototypes <ref> [ Bareiss, 1988; McCarty, 1980; 1989a ] </ref> ; annotating rules with arguments for and against their application in borderline cases [ Bench-Capon and Ser-got, 1988; Sergot et al., 1986 ] ; and the single "best match" from a set of cases with a rich, detailed semantic--net representation [ Branting, 1990 ]
Reference: [ McCarty, 1989a ] <author> L. Thorne McCarty. </author> <title> Computing with prototypes (preliminary report). </title> <booktitle> In Proceedings of the Bar-Ilan Symposium on the Foundations of Artificial Intelligence, </booktitle> <year> 1989. </year>
Reference: [ McCarty, 1989b ] <author> L. Thorne McCarty. </author> <title> A language for legal discourse: I. basic features. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia, </address> <pages> pages 180-189, </pages> <year> 1989. </year>
Reference-contexts: Representing this knowledge required features such as space, time, action, permission, obligation, knowledge, belief, and intention, as other researchers in this domain have noted <ref> [ Cuthill and McCartney, 1993; McCarty, 1989b ] </ref> . Particularly characteristic of United States income tax law are transactions: sales, gifts, loans, and other transfers of money or property. <p> I chose an extension of the temporal logic developed by Shoham in [ Shoham, 1988 ] , modified to incorporate the modal operators "know," "believe," "want" (or "goal"), and "obligated." This language is influenced by McDermott's temporal logic and also by the work of McCarty in representing legal concepts, especially <ref> [ McCarty, 1989b ] </ref> . Part of the representation of one of chiron's cases is given in Figure 3; for the full representation of this case and the original text of the case, see [ Sanders, 1994 ] . Associated with each strategy is a prototype.
Reference: [ Redmond, 1990 ] <author> Michael Redmond. </author> <title> Distributed cases for case-based reasoning; facilitating use of multiple cases. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <address> Boston, Massachusetts, </address> <pages> pages 304-309, </pages> <year> 1990. </year>
Reference: [ Rissland and Skalak, 1991 ] <author> Edwina L. Rissland and David B. Skalak. cabaret: </author> <title> rule interpretation in a hybrid architecture. </title> <journal> International Journal of Man-Machine Studies, </journal> <pages> pages 839-887, </pages> <year> 1991. </year>
Reference-contexts: Their case representation is more detailed than Gardner's and incorporate dimensions, so that cases can be compared with each other and with the current situation. These comparisons are used as a basis for generating arguments for and against the satisfaction of open-textured concepts, again in a given situation <ref> [ Ashley, 1991; Rissland and Skalak, 1991 ] </ref> .
Reference: [ Sanders, 1994 ] <author> Kathryn E. Sanders. Chiron: </author> <title> planning in an open-textured domain. </title> <type> Technical Report 94-38, </type> <institution> Computer Science Department, Brown University, </institution> <year> 1994. </year> <type> (PhD Thesis). </type>
Reference-contexts: In other words, you will extrapolate from the cases in your casebase, rather than interpolating between them. 1 I have implemented this approach in chiron, a system that constructs plans in the domain of personal income tax planning <ref> [ Sanders, 1994 ] </ref> . <p> Part of the representation of one of chiron's cases is given in Figure 3; for the full representation of this case and the original text of the case, see <ref> [ Sanders, 1994 ] </ref> . Associated with each strategy is a prototype. A prototype is represented using the same structure as a case, but with a conservative, safe set of facts, very likely to satisfy the open-textured provisions setting forth that strategy.
Reference: [ Sergot et al., 1986 ] <author> M. J. Sergot, F. Sadri, R. A. Kowal-ski, F. Kriwaczek, P. Hammond, and H. T. Cory. </author> <title> The British Nationality Act as a logic program. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 29(5) </volume> <pages> 370-386, </pages> <year> 1986. </year>
Reference-contexts: Besides using multiple cases, other solutions to the problem of reasoning about open-textured rules have included prototypes [ Bareiss, 1988; McCarty, 1980; 1989a ] ; annotating rules with arguments for and against their application in borderline cases <ref> [ Bench-Capon and Ser-got, 1988; Sergot et al., 1986 ] </ref> ; and the single "best match" from a set of cases with a rich, detailed semantic--net representation [ Branting, 1990 ] . chiron is the first case-based planner to reason about its plans in the context of a group of previous
Reference: [ Shoham, 1988 ] <author> Yoav Shoham. </author> <title> Reasoning about change: time and causation from the standpoint of artificial intelligence. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1988. </year>
Reference-contexts: To represent these facts as accurately as possible, it is necessary to have a representation language that is both flexible and extensible. I chose an extension of the temporal logic developed by Shoham in <ref> [ Shoham, 1988 ] </ref> , modified to incorporate the modal operators "know," "believe," "want" (or "goal"), and "obligated." This language is influenced by McDermott's temporal logic and also by the work of McCarty in representing legal concepts, especially [ McCarty, 1989b ] .
Reference: [ Sycara, 1989 ] <author> Katia Sycara. </author> <title> Using case-based reasoning for plan adaptation and repair. </title> <booktitle> In Proceedings of a Workshop on Case-based Reasoning, </booktitle> <pages> pages 425-434, </pages> <year> 1989. </year>
Reference-contexts: the user can request any strategy or combination of strategies he or she would like the system to consider; requests will be processed in a similar manner. 5 Related Work Most CBR systems have used a single "best" or "most similar" case as the basis for a solution (see, e.g., <ref> [ Hammond, 1986; Koton, 1988; Sycara, 1989; Kolod-ner, 1989 ] </ref> ).
Reference: [ Waismann, 1965 ] <editor> Friedrich Waismann. Verifiability. In Antony Flew, editor, </editor> <booktitle> Logic and language: first and second series, </booktitle> <pages> pages 122-151. </pages> <publisher> Anchor Books, </publisher> <address> Garden City, New Jersey, </address> <year> 1965. </year> <booktitle> (first published in Proceedings of the Aristotelian Society, </booktitle> <address> 119-150 (1945).). </address>
Reference-contexts: This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as "tiger" or "cup," are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labelled open texture <ref> [ Waismann, 1965; Hart, 1961 ] </ref> . Any planning rule expressed in natural language, such as "be careful," "never get involved in a land war in Asia," or "buy low, sell high," suffers from the same problem. In any domain, open-textured rules can be partially x1034.
Reference: [ Zito-Wolf and Alterman, 1992 ] <author> Roland Zito-Wolf and Richard Alterman. Multicases: </author> <title> a case-based representation for procedural knowledge. </title> <booktitle> In Proceedings of the Fourteenth Annual Conference of the Cognitive Science Society, </booktitle> <year> 1992. </year>
References-found: 25

