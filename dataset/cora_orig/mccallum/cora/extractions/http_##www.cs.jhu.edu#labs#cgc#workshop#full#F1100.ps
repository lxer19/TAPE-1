URL: http://www.cs.jhu.edu/labs/cgc/workshop/full/F1100.ps
Refering-URL: http://www.cs.jhu.edu/labs/cgc/cgc_conf.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fguibas,latombe,lavalle,dlin,rajeevg@cs.stanford.edu  
Title: A Visibility-Based Pursuit-Evasion Problem  
Author: Leonidas J. Guibas Jean-Claude Latombe Steven M. LaValle David Lin Rajeev Motwani 
Address: Stanford, CA 94305  
Affiliation: Computer Science Department Stanford University  
Abstract: This paper presents a visibility-based motion planning problem in which the task is to coordinate the motions of one or more robots that have omnidirectional vision sensors, to eventually "see" a target that is unpredictable, has unknown initial position, and is capable of moving arbitrarily fast. A visibility region is associated with each robot, and the goal is to guarantee that the target will ultimately lie in at least one visibility region. Both a formal characterization of the general problem and several interesting problem instances are presented. For a simply-connected free space, a logarithmic bound is established on the minimum of robots needed. A complete algorithm for computing the motion strategy of the robots is also presented, and is based on searching a finite cell complex that is constructed on the basis of critical information changes. A few computed solution strategies are shown. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. S. Arnon. </author> <title> Geometric reasoning with logic and algebra. </title> <booktitle> Artif. Intell., </booktitle> <address> 37(1-3):37-60, </address> <year> 1988. </year>
Reference-contexts: The problem becomes most difficult when the minimum number of pursuers is requested. A standard approach in motion planning is to preserve completeness using a cell decomposition of the configuration space that is constructed by analyzing critical events <ref> [1, 10, ?] </ref>. For example, in [16] a cell decomposition is determined by analyzing the contact manifolds in a composite configuration space that corresponds to the motions of several disks in the plane. We next describe a cell decomposition that is based on critical information changes.
Reference: [2] <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year> <title> 6 a. </title> <editor> b. e. f. </editor> <title> tory for a free space that has three holes, and can be searched by two pursuers. </title>
Reference-contexts: The general problem is an extension or combination of problems that have been considered in several contexts. Pursuit-evasion scenarios have arisen in a variety of applications such as air traffic control <ref> [2] </ref>, military strategy [8], and trajectory tracking [7]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [8]. <p> Let the information space, I, represent the set of possible information states. The information space is a standard representational tool for problems that have imperfect state information, and has been used in opti mal control and dynamic game theory <ref> [2] </ref>, and in motion planning [3, 11]. For discrete spaces, the information states correspond to the knowledge states introduced in [5].
Reference: [3] <author> J. Barraquand and P. Ferbach. </author> <title> Motion planning with uncertainty: The information space approach. </title> <booktitle> In IEEE Int. Conf. Robot. & Autom., </booktitle> <pages> pages 1341-1348, </pages> <year> 1995. </year>
Reference-contexts: Let the information space, I, represent the set of possible information states. The information space is a standard representational tool for problems that have imperfect state information, and has been used in opti mal control and dynamic game theory [2], and in motion planning <ref> [3, 11] </ref>. For discrete spaces, the information states correspond to the knowledge states introduced in [5].
Reference: [4] <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: It is natural to compare the notion of completeness for this problem to completeness for the basic motion planning problem (i.e., the algorithm will find a collision-free path if such a path exists <ref> [4] </ref>). One important difference, however, is that the minimum number of pursuers is crucial, but does not have a correspondence for the basic path planning problem.
Reference: [5] <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 248-291, </pages> <year> 1993. </year>
Reference-contexts: The information space is a standard representational tool for problems that have imperfect state information, and has been used in opti mal control and dynamic game theory [2], and in motion planning [3, 11]. For discrete spaces, the information states correspond to the knowledge states introduced in <ref> [5] </ref>.
Reference: [6] <author> L. J. Guibas, R. Motwani, and P. Raghavan. </author> <title> The robot localization problem. </title> <editor> In K. Goldberg, D. Halperin, J.- C. Latombe, and R. Wilson, editors, </editor> <booktitle> Proc. 1st Workshop on Algorithmic Foundations of Robotics, </booktitle> <pages> pages 269-282. </pages> <address> A.K. Peters, Wellesley, MA, </address> <year> 1995. </year>
Reference-contexts: The first task is to define and construct a conservative cell decomposition. The idea is to partition the free space by identifying 4 critical places at which edge visibility changes. A decomposition of this type has been used for robot localization in <ref> [6, 18] </ref>. A decomposition of F will be described that forms a conservative cell decomposition of X p for the case of a single pursuer.
Reference: [7] <author> O. Hajek. </author> <title> Pursuit Games. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: The general problem is an extension or combination of problems that have been considered in several contexts. Pursuit-evasion scenarios have arisen in a variety of applications such as air traffic control [2], military strategy [8], and trajectory tracking <ref> [7] </ref>. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [8].
Reference: [8] <author> R. Isaacs. </author> <title> Differential Games. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1965. </year>
Reference-contexts: The general problem is an extension or combination of problems that have been considered in several contexts. Pursuit-evasion scenarios have arisen in a variety of applications such as air traffic control [2], military strategy <ref> [8] </ref>, and trajectory tracking [7]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [8]. <p> air traffic control [2], military strategy <ref> [8] </ref>, and trajectory tracking [7]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [8]. For example, in the classical Homicidal Chauffeur game, conditions of inevitable collision can be expressed in terms of the nonholonomic turning-radius constraints of the pursuer and evader. Although interesting decision problems arise 1 through the differential motion models, geometric free--space constraints are usually not considered in classical pursuit-evasion games.
Reference: [9] <author> A. S. Lapaugh. </author> <title> Recontamination does not help to search a graph. </title> <journal> J. ACM, </journal> <volume> 40(2) </volume> <pages> 224-245, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: We also anticipate that recontamination is not necessary, which implies that portions of the workspace that have been eliminated from consideration do not have to be reconsidered. This observation was made and proven for the case of pursuit-evasion of a graph in <ref> [9] </ref>. We are currently in the process of implementing the complete algorithm. 4.3 Computed examples We have implemented a heuristic algorithm that has provided many interesting solutions; however, it does not guarantee that the optimal number of pursuers is used.
Reference: [10] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Likewise, the robots that are equipped with vision or range sensing are termed pursuers. The pursuers and evader are modeled as points in the plane (alternatively general configuration-space representations could be used <ref> [10] </ref>, but only 2-D configuration spaces are addressed in this paper), and only continuous motions are permitted. <p> See Figure 1 for illustrative examples. Let F represent the closure of the collision-free space (referred to as C valid in <ref> [10] </ref>). All pursuer and evader positions must lie in F . Let e (t) 2 F denote the position of the evader at time t 0. <p> The problem becomes most difficult when the minimum number of pursuers is requested. A standard approach in motion planning is to preserve completeness using a cell decomposition of the configuration space that is constructed by analyzing critical events <ref> [1, 10, ?] </ref>. For example, in [16] a cell decomposition is determined by analyzing the contact manifolds in a composite configuration space that corresponds to the motions of several disks in the plane. We next describe a cell decomposition that is based on critical information changes.
Reference: [11] <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Ur-bana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Let the information space, I, represent the set of possible information states. The information space is a standard representational tool for problems that have imperfect state information, and has been used in opti mal control and dynamic game theory [2], and in motion planning <ref> [3, 11] </ref>. For discrete spaces, the information states correspond to the knowledge states introduced in [5].
Reference: [12] <author> N. Megiddo, S. L. Hakimi, M. R. Garey, D. S. Johnson, and C. H. Papadimitriou. </author> <title> The complexity of searching a graph. </title> <journal> J. ACM, </journal> <volume> 35(1) </volume> <pages> 18-44, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [12, 15] </ref>. However, the visibility polygon along with motions in a free space add geometric information that must be utilized, and also leads to connections with the static art gallery problems [14].
Reference: [13] <author> B. Monien and I. H. Sudborough. </author> <title> Min cut is np-complete for edge weighted graphs. </title> <journal> Theoretical Computer Science, </journal> <volume> 58 </volume> <pages> 209-229, </pages> <year> 1988. </year>
Reference-contexts: The complete algorithm is currently being implemented, and some solution strategies were shown that were computed by a heuristic algorithm. The problem, however, appears to be NP-hard because it is shown in <ref> [13] </ref> that pursuit-evasion in a planar graph with maximum vertex degree 3 is NP-complete, and geometric instances of these planar graphs can be constructed using networks of bent corridors as introduced in Section 3.
Reference: [14] <author> J. O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: However, the visibility polygon along with motions in a free space add geometric information that must be utilized, and also leads to connections with the static art gallery problems <ref> [14] </ref>. In the limiting case, art gallery results serve as a loose upper bound on the number of pursuers by allowing a covering of the free space by static guards, guaranteeing that any evader will be immediately visible.
Reference: [15] <author> T. D. Parsons. </author> <title> Pursuit-evasion in a graph. </title> <editor> In Y. Alani and D. R. Lick, editors, </editor> <booktitle> Theory and Applcation of Graphs, </booktitle> <pages> pages 426-441. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1976. </year>
Reference-contexts: Several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [12, 15] </ref>. However, the visibility polygon along with motions in a free space add geometric information that must be utilized, and also leads to connections with the static art gallery problems [14]. <p> Imagine a network of such bent corridors with entrances connected to form junctions. This network of free space that requires (lg n) pursuers. corridors corresponds directly to a graph searching problem that has been considered in <ref> [15] </ref>. For this problem, the edges and vertices of the graph form the free space, and pursuers move from vertex to vertex, eliminating edges from consideration (without any notion of visibility).
Reference: [16] <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: I. The case of a two-dimensional rigid polygonal body moving amidst polygonal barriers. </title> <journal> Communications on Pure and Applied Mathematics, </journal> <volume> 36 </volume> <pages> 345-398, </pages> <year> 1983. </year>
Reference-contexts: The problem becomes most difficult when the minimum number of pursuers is requested. A standard approach in motion planning is to preserve completeness using a cell decomposition of the configuration space that is constructed by analyzing critical events [1, 10, ?]. For example, in <ref> [16] </ref> a cell decomposition is determined by analyzing the contact manifolds in a composite configuration space that corresponds to the motions of several disks in the plane. We next describe a cell decomposition that is based on critical information changes.
Reference: [17] <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: II. General techniqies for computing topological properties of algebraic manifolds. </title> <journal> Communications on Pure and Applied Mathematics, </journal> <volume> 36 </volume> <pages> 345-398, </pages> <year> 1983. </year>
Reference-contexts: With a single pursuer, the evader could always move such that the hole is between the evader and pursuer. Figure 1.a shows an example with somewhat interesting geometry that requires only one pursuer, and Figure 1.b shows one of the simplest examples that requires two pursuers. In <ref> [17] </ref> a class of simple polygons is identified for which a single pursuer suffices. Consider H (F ) for the class of simply-connected free spaces. Let n represent the number of edges in the free space, which is represented by a simple polygon in this case.
Reference: [18] <author> I. Suzuki and M. Yamashita. </author> <title> Searching for a mobile intruder in a polygonal region. </title> <journal> SIAM J. Comput., </journal> <volume> 21(5) </volume> <pages> 863-888, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: The first task is to define and construct a conservative cell decomposition. The idea is to partition the free space by identifying 4 critical places at which edge visibility changes. A decomposition of this type has been used for robot localization in <ref> [6, 18] </ref>. A decomposition of F will be described that forms a conservative cell decomposition of X p for the case of a single pursuer.
Reference: [19] <author> R. Talluri and J. K. Aggarwal. </author> <title> Mobile robot self-location using model-image feature correspondence. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 12(1) </volume> <pages> 63-77, </pages> <month> February </month> <year> 1996. </year> <month> 7 </month>
References-found: 19

