URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-97-08.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: BeeHive: Global Multimedia Database Support for Dependable, Real-Time Applications  
Author: John A. Stankovic Sang H. Son Jorg Liebeherr 
Keyword: Key Words: Real-Time, Databases, Virtual Databases, Global Databases, Multimedia Databases, Multimedia, Quality-of-Service, Resource Reservation, Fault Tolerance, Security.  
Abstract: Technical Report CS-97-08 Department of Computer Science University of Virginia Charlottesville, VA 22903 Email: fstankovic j son j jorgg@cs.virginia.edu Abstract The confluence of computers, communications and databases is quickly creating a global virtual database where many applications require real-time access to both temporally accurate and multimedia data. We are developing a global virtual database, called BeeHive, which is enterprise specific and offers features along real-time, fault tolerance, quality of service for audio and video, and security dimensions. Support of all these features and tradeoffs between them will provide significant improvement in performance and functionality over browsers, browsers connected to databases, and, in general, today's distributed databases. We present a high level design for BeeHive and various novel component technologies that are to be incorporated into BeeHive. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Abbott and H. Garcia-Molina, </author> <title> Scheduling Real-Time Transactions: A Performance Evaluation, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol. 17, No. 3, </volume> <pages> pp. 513-560, </pages> <month> September </month> <year> 1992. </year>
Reference: [2] <author> B. Adelberg, B. Kao, and H. Garcia-Molina, </author> <title> An Overview of the STanford Real-time Information Processor, </title> <journal> ACM SIGMOD Record, </journal> <volume> 25(1), </volume> <year> 1996. </year>
Reference-contexts: However, there are several projects, past and present, that have addressed one or more of the issues of real-time databases, QoS at the network and OS levels, multimedia, fault tolerance, security, and distributed execution platforms. We briefly describe a few of these projects. STRIP (STanford Real-Time Information Processor) <ref> [2] </ref> is a database designed for heterogeneous environments and provides support for value function scheduling and for temporal constraints on data. Its goals include high performance and ability to share data in open systems.
Reference: [3] <author> B. Adelberg, H. Garcia-Molina and B. Kao, </author> <title> Applying Update Streams in a Soft Real-Time Database System, </title> <booktitle> Proceedings of the 1995 ACM SIGMOD, </booktitle> <pages> pp. 245 - 256, </pages> <year> 1995. </year>
Reference: [4] <author> B. Adelberg, H. Garcia-Molina and B. Kao, </author> <title> Database Support for Efficiently Maintaining Derived Data, </title> <type> Technical Report, </type> <institution> Stanford University, </institution> <year> 1995. </year>
Reference: [5] <author> T. E. Anderson, D. E. Culler, and D. A. Patterson, </author> <title> A Case for NOW (Networks of Workstations), </title> <journal> IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 54-64, </pages> <month> February </month> <year> 1995. </year>
Reference: [6] <author> S.F. Andler, J. Hansson, J. Eriksson, J. Mellin, M. Berndtsson, and B. Eftring, DeeDS: </author> <title> Towards a Distributed and Active Real-Time Database Systems, </title> <journal> ACM SIGMOD Record, </journal> <volume> 15(1) </volume> <pages> 38-40, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Its goals include high performance and ability to share data in open systems. It does not 11 support any notion of performance guarantees or hard real-time constraints, and hence cannot be used for the applications we are envisioning in this project. DeeDS (Distributed Active Real-Time Database System) <ref> [6] </ref> prototype is an event-triggered real-time database system, using dynamic scheduling of sets of transactions, being developed in Sweden. The reactive behavior is modeled using ECA rules. In the current prototype, they do not support temporal constraints of data and multimedia information.
Reference: [7] <author> ATM Forum, </author> <title> ATM Traffic Management Specification 4.0, </title> <month> April </month> <year> 1996. </year>
Reference-contexts: XRM is based on previous work on the Magnet-II testbed and shares with it the restriction to a small number of fixed QoS classes. Several QoS standardization efforts are being made by several network communities. The ATM 12 Forum recently completed a traffic management specification <ref> [7] </ref> which supports hard-real time applications via peak rate allocations in the CBR service class. All other ATM service classes only give probabilistic QoS guarantees. The IntServ working group of the IETF is working towards a complete QoS service architecture for the Internet, using RSVP [13] for signaling.
Reference: [8] <author> ATM Forum, </author> <title> ATM User-Network Interface Specification, </title> <note> Version 4.0, </note> <year> 1996. </year>
Reference-contexts: We assume that low-level resource management is available for single low-level system resources, such as operating systems and networks. For networks, resource reservation signaling is based on the RSVP [13] and UNI 4.0 <ref> [8] </ref> protocols for IP networks and ATM networks, respectively. Likewise, we assume that all operating systems are provided with a resource management entity.
Reference: [9] <author> N. Audsley, A. Burns, M. Richardson and A. Wellings, </author> <title> A Database Model for Hard Real-Time Systems, </title> <type> Technical Report, </type> <institution> Real-Time Systems Group, Univ. of York, U.K., </institution> <month> July </month> <year> 1991. </year> <month> 14 </month>
Reference: [10] <author> A. Banerjea, D. Ferrari, B. A. Mah, M. Moran, D. C. Verma, and H. Zhang. </author> <title> The Tenet Real--Time Protocol Suite: Design, Implementation, and Experiences, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(1) </volume> <pages> 1-10, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: However, no existing system can give end-to-end QoS assurances in a large-scale, dynamic, and heterogeneous distributed system. Note that none of the existing QoS network architectures support an integrated approach to QoS that contains the network as well as real-time applications. The Tenet protocol suite <ref> [10] </ref> developed within the context of the BLANCA Gigabit testbed networks presented the first comprehensive service model for internetworks. The work resulted in the design of two transport protocols (CMTP, RMTP), a network protocol (RTIP), and a signaling protocol (RCAP) to support a diverse set of real-time services.
Reference: [11] <author> A. Bondavalli, J. Stankovic, and L. Strigini, </author> <title> Adaptive Fault Tolerance for Real-Time Systems, </title> <booktitle> Third International Workshop on Responsive Computer Systems, </booktitle> <month> September </month> <year> 1993. </year>
Reference: [12] <author> A. Bondavali, J. Stankovic, and L. Strigini, </author> <title> Adaptable Fault Tolerance for Real-Time Systems, Responsive Computer Systems: Towards Integration of Fault Tolerance and Real-Time, </title> <publisher> Kluwer, </publisher> <year> 1995, </year> <pages> pp. 187-205. </pages>
Reference: [13] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin, </author> <title> Resource ReSerVation Protocol (RSVP) Version 1 Functional Specification, </title> <type> Internet Draft, </type> <month> November </month> <year> 1996. </year>
Reference-contexts: We assume that low-level resource management is available for single low-level system resources, such as operating systems and networks. For networks, resource reservation signaling is based on the RSVP <ref> [13] </ref> and UNI 4.0 [8] protocols for IP networks and ATM networks, respectively. Likewise, we assume that all operating systems are provided with a resource management entity. <p> All other ATM service classes only give probabilistic QoS guarantees. The IntServ working group of the IETF is working towards a complete QoS service architecture for the Internet, using RSVP <ref> [13] </ref> for signaling. The draft proposal for a guaranteed service definition will support deterministic end-to-end delays; However, an implementation is not yet available. Our work will take full advantage of the framework provided by ATM.
Reference: [14] <author> M. J. Carey, R. Jauhari and M. Livny, </author> <title> On Transaction Boundaries in Active Databases: A Performance Perspective, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> Vol. 3, No. 3, </volume> <pages> pp. 320-336, </pages> <month> September </month> <year> 1991. </year>
Reference: [15] <author> R. L. Cruz, </author> <title> A Calculus for Network Delay, Part I: Network Elements in Isolation, </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37(1) </volume> <pages> 114-131, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Then the workload that arrives for a task can be characterized by a so-called task envelope A fl which provides an upper bound on A, that is, for all times t 0 and t 0 we have <ref> [15] </ref>: A [t; t + t ] A fl (t ) (1) A task envelope A fl should be subadditive, that is, it should satisfy A fl (t 1 ) + A fl (t 2 ) A fl (t 1 + t 2 ) 8t 1 ; t 2 0 (2)
Reference: [16] <author> U. Dayal et. al., </author> <title> The HIPAC Project: Combining Active Databases and Timing Constraints, </title> <booktitle> SIGMOD Record, </booktitle> <volume> Vol. 17, No. 1, </volume> <pages> pp. 51-70, </pages> <month> March </month> <year> 1988. </year>
Reference: [17] <author> M. Di Natale and J. Stankovic, </author> <title> Dynamic End-to-End Guarantees in Distributed Real-Time Systems, </title> <booktitle> Real-Time Systems Symposium, </booktitle> <month> Dec. </month> <year> 1994. </year>
Reference: [18] <author> I. Foster and C. Kesselman, Globus: </author> <title> A metacomputing infrastructure toolkit, </title> <note> SIAM (to appear), </note> <year> 1997. </year>
Reference-contexts: CORDS develops an extensible suite of protocols for fault isolation and fault management in support of dependable distributed real-time applications. The project is targeted at military embedded real-time applications and focuses on operating systems solutions, in particular IPC primitives. The Globus <ref> [18] </ref> project is developing basic software infrastructure for computations that integrate geographically distributed computational and information resources.
Reference: [19] <author> N. Gehani and K. Ramamritham, </author> <title> Real-Time Concurrent C: A Language for Programming Dynamic Real-Time Systems, </title> <booktitle> Real-Time Systems, </booktitle> <volume> Vol. 3, No. 4, </volume> <month> December </month> <year> 1991. </year>
Reference: [20] <author> A. Grimshaw, W. Wulf, </author> <title> and the Legion Team, The Legion Vision of a Worldwide Virtual Computer, </title> <journal> CACM, </journal> <volume> Vol. 40, No. 1, </volume> <month> January </month> <year> 1997, </year> <pages> pp. 39-45. </pages>
Reference-contexts: For example, BeeHive will have a wrapper that can utilize a distributed computing environment, such as the Legion system <ref> [20] </ref>, to provide significant processing power when needed. 2.2 Native BeeHive Design The basic design of a native BeeHive site is depicted in Figure 2. At the application level, users can submit transactions, analysis programs, general programs, and access audio and video data. <p> The Presto project deals with providing session-based QoS guarantees to continuous multimedia database applications, and does not address the coexistence of control data with the continuous media data. Projects such as Legion <ref> [36, 20] </ref> concentrate on distributed execution platforms but do not deal with multimedia databases and end-to-end QoS guarantees. By providing BeeHive wrappers to Legion we will be able to support Legion objects within BeeHive that satisfy QoS guarantees.
Reference: [21] <author> A. Guha, A. Pavan, J. Liu, A. Rastogi, and T. Steeves, </author> <title> Supporting Real-Time and Multimedia Applications on the Mercuri Testbed, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 13, No. 4, </volume> <month> May </month> <year> 1995. </year>
Reference-contexts: While commercial database systems such as Oracle [31] or Sybase [30] allow for the storage of multimedia data, it is usually done as BLOBs. These systems are not integrated with real-time applications. Also developed in industry is the Mercuri project <ref> [21] </ref> where data from remote video cameras is transferred through an ATM network and displayed using X windows, but they provide only best effort services.
Reference: [22] <author> J.R. Haritsa, M.J. Carey and M. Livny, </author> <title> On Being Optimistic about Real-Time Constraints, </title> <booktitle> Proc. of 9th SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <month> April, </month> <year> 1990. </year>
Reference: [23] <author> J.R. Haritsa, M.J. Carey and M. Livny, </author> <title> Earliest Deadline Scheduling for Real-Time Database Systems, </title> <booktitle> Proceedings of the Real-Time Systems Symposium, </booktitle> <pages> pp. 232-242, </pages> <month> December </month> <year> 1991. </year>
Reference: [24] <author> J.R. Haritsa, M.J. Carey and M. Livny, </author> <title> Data Access Scheduling in Firm Real-Time Database Systems, </title> <journal> The Journal of Real-Time Systems, </journal> <volume> Vol. 4, No. 3, </volume> <pages> pp. 203-241, </pages> <year> 1992. </year> <month> 15 </month>
Reference: [25] <author> J. Huang, J.A. Stankovic, D. Towsley and K. Ramamritham, </author> <title> Experimental Evaluation of Real-Time Transaction Processing, </title> <booktitle> Real-Time Systems Symposium, </booktitle> <pages> pp. 144-153, </pages> <month> December </month> <year> 1989. </year>
Reference: [26] <author> J. Huang, J.A. Stankovic, K. Ramamritham and D. Towsley, </author> <title> Experimental Evaluation of Real-Time Optimistic Concurrency Control Schemes, </title> <booktitle> Proceedings of the 17th Conference on Very Large Databases, </booktitle> <pages> pp. 35-46, </pages> <month> September </month> <year> 1991. </year>
Reference: [27] <author> J. Huang, J.A. Stankovic, K. Ramamritham, D. Towsley and B. Purimetla, </author> <title> On Using Priority Inheritance in Real-Time Databases, </title> <journal> Special Issue of Real-Time Systems Journal, </journal> <volume> Vol. 4. No. 3, </volume> <month> September </month> <year> 1992. </year>
Reference: [28] <author> M. Humphrey and J. Stankovic, CAISARTS: </author> <title> A Tool for Real-Time Scheduling Assistance, </title> <booktitle> IEEE Real-Time Technology and Applications Symposium, </booktitle> <month> June </month> <year> 1996. </year>
Reference: [29] <author> B. Kao and H. Garcia Molina, </author> <title> Subtask Deadline Assignment for Complex Distributed Soft Real-Time Tasks, </title> <type> Technical Report STAN-CS-93-1491, </type> <institution> Stanford University, </institution> <month> Oct. </month> <year> 1993. </year>
Reference: [30] <author> J. E. Kirkwood, </author> <title> Sybase Architecture and Administration, </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year>
Reference-contexts: It mainly deals with the mismatch problem encountered in information representation in heterogeneous databases, but no real-time and fault-tolerance issues are pursued as in BeeHive. While commercial database systems such as Oracle [31] or Sybase <ref> [30] </ref> allow for the storage of multimedia data, it is usually done as BLOBs. These systems are not integrated with real-time applications.
Reference: [31] <author> G. Koch and K. Loney, </author> <title> Oracle: The Complete Reference, </title> <publisher> Mc Graw-Hill, </publisher> <year> 1997. </year>
Reference-contexts: It mainly deals with the mismatch problem encountered in information representation in heterogeneous databases, but no real-time and fault-tolerance issues are pursued as in BeeHive. While commercial database systems such as Oracle <ref> [31] </ref> or Sybase [30] allow for the storage of multimedia data, it is usually done as BLOBs. These systems are not integrated with real-time applications.
Reference: [32] <author> T. Kuo and A. K. Mok, </author> <title> SSP: a Semantics-Based Protocol for Real-Time Data Access, </title> <booktitle> IEEE 14th Real-Time Systems Symposium , December 1993. </booktitle>
Reference: [33] <author> T. Kuo and A. K. Mok, </author> <title> Real-Time Data Semantics and Similarity-Based Concurrency Control, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <year> 1996. </year>
Reference: [34] <author> A. A. Lazar, S. Bhonsle, and K. S. Lim, </author> <title> A Binding Architecture for Multimedia Networks, </title> <booktitle> In Proceedings of COST-237 Conference on Multimedia Transport and Teleservices, </booktitle> <address> Vienna, Austria, </address> <year> 1994. </year>
Reference-contexts: The Tenet protocols do not provide a Middleware layer that can accommodate the needs of applications with special requirements for security or fault tolerance. The Extended Integrated Reference Model (XRM) <ref> [34] </ref> that is being designed and implemented at Columbia University provides a resource management and control systems for multimedia applications over ATM networks. XRM is based on previous work on the Magnet-II testbed and shares with it the restriction to a small number of fixed QoS classes.
Reference: [35] <author> C. Lee, R. Rajkumar, and C. Mercer, </author> <title> Experiences with Processor Reservation and Dynamic QoS in Real-Time Mach, </title> <booktitle> In Proceedings of Multimedia Japan, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: Our work will take full advantage of the framework provided by ATM. Also, any output that comes from the IntServ group [49] at IETF will be applicable to our work. The RT Mach project <ref> [35, 62] </ref> has built distributed real-time operating system services supported by a guaranteed end-to-end resource reservation paradigm. The RT Mach paradigm is complemented by a functionally scalable microkernel along with a performance monitoring infrastructure.
Reference: [36] <author> M. J. Lewis and A. Grimshaw, </author> <title> The Core Legion Object Model, </title> <booktitle> In Proceedings of the Fifth IEEE International Symposium on High Performance Distributed Computing, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: The Presto project deals with providing session-based QoS guarantees to continuous multimedia database applications, and does not address the coexistence of control data with the continuous media data. Projects such as Legion <ref> [36, 20] </ref> concentrate on distributed execution platforms but do not deal with multimedia databases and end-to-end QoS guarantees. By providing BeeHive wrappers to Legion we will be able to support Legion objects within BeeHive that satisfy QoS guarantees.
Reference: [37] <author> J. Liebeherr, D. E. Wrege, and D. Ferrari, </author> <title> Exact Admission Control in Networks with Bounded Delay Services, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 4, No. 6, </volume> <pages> pp. 885-901, </pages> <month> December </month> <year> 1996. </year>
Reference: [38] <author> Y. Lin and S.H. Son, </author> <title> Concurrency Control in Real-Time Databases by Dynamic Adjustment of Serialization Order, </title> <booktitle> Proceedings of the Real-Time Systems Symposium, </booktitle> <pages> pp. 104-112, </pages> <month> December </month> <year> 1990. </year>
Reference: [39] <author> M. Livny, </author> <note> DeNet Users Guide, version 1.5, </note> <institution> Dept. Comp. Science, Univ. of Wisconsin, Madison, WI 1990. </institution>
Reference: [40] <author> H. W. Lockhart, </author> <title> OSF DCE Guide to Developing Distributed Applications, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: By providing BeeHive wrappers to Legion we will be able to support Legion objects within BeeHive that satisfy QoS guarantees. Commercial systems with similar goals as Legion, however, focused exclusively on a client-server model, are OSF/DCE <ref> [40] </ref> and CORBA [64]. The CORBA standards and products based on them also do not have the functionality nor real-time properties that we are developing, although a real-time CORBA is emerging.
Reference: [41] <author> E. McKenzie and R. Snodgrass, </author> <title> Evaluation of Relational Algebras Incorporating the Time Dimension in Databases, </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 23, No. 4, </volume> <pages> pp. 501-543, </pages> <month> December </month> <year> 1991. </year>
Reference: [42] <author> D. Niehaus, K. Ramamritham, J. Stankovic, G. Wallace, C. Weems, W. Burleson, and J. Ko, </author> <title> The Spring Scheduling CO-Processor: Design, Use and Performance, </title> <booktitle> Real-Time Systems Symposium, </booktitle> <month> Dec. </month> <year> 1993. </year>
Reference: [43] <author> H. Pang, M.J. Carey and M. Livny, </author> <title> Multiclass Query Scheduling in Real-Time Database Systems, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> Vol. 7, No. 4, </volume> <month> August </month> <year> 1995. </year>
Reference: [44] <author> B. Purimetla, R. M. Sivasankaran, J.Stankovic and K. Ramamritham, </author> <title> Network Services Databases A Distributed Active Real-Time Database (DARTDB) Applications, </title> <booktitle> IEEE Workshop on Parallel and Distributed Real-time Systems, </booktitle> <month> April </month> <year> 1993. </year>
Reference: [45] <author> K. Ramamritham, </author> <title> Real-Time Databases, </title> <booktitle> Distributed and Parallel Databases 1(1993), </booktitle> <pages> pp. 199-226, </pages> <year> 1993. </year>
Reference: [46] <author> K. Ramamritham, </author> <title> Where Do Deadlines Come from and Where Do They Go? Journal of Database Management, </title> <booktitle> Spring, </booktitle> <year> 1996. </year>
Reference-contexts: entry into specific modes; to trigger the necessary adaptive responses to time constraint violations to effect recovery, to trigger actions if temporal data is (about to become) invalid; and to shed loads as well as adjust deadlines and other parameters, e.g., importance levels and QoS, of actions, when overloads occur <ref> [46] </ref>, and to help support security. The ECA paradigm will be a core component of the BeeHive system. Transactions that process data with validity intervals must use timely and relatively consistent data in order to achieve correct results.
Reference: [47] <author> K. Ramamritham, J. Stankovic and P. Shiah, </author> <title> Efficient Scheduling Algorithms for Real-Time Multiprocessor Systems, </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 1(2) </volume> <pages> 184-94, </pages> <month> April </month> <year> 1990. </year>
Reference: [48] <author> K. Ramamritham, J. Stankovic and W. Zhao, </author> <title> Distributed Scheduling of Tasks with Deadlines and Resource Requirements, </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(8) </volume> <pages> 1110-23, </pages> <month> August </month> <year> 1989. </year>
Reference: [49] <author> S. Shenker, C. Partridge, and R. Guerin, </author> <title> Specification of Guaranteed Quality of Service, IETF, Integrated Services WG, </title> <type> Internet Draft, </type> <month> August </month> <year> 1996. </year>
Reference-contexts: The draft proposal for a guaranteed service definition will support deterministic end-to-end delays; However, an implementation is not yet available. Our work will take full advantage of the framework provided by ATM. Also, any output that comes from the IntServ group <ref> [49] </ref> at IETF will be applicable to our work. The RT Mach project [35, 62] has built distributed real-time operating system services supported by a guaranteed end-to-end resource reservation paradigm. The RT Mach paradigm is complemented by a functionally scalable microkernel along with a performance monitoring infrastructure.
Reference: [50] <author> R.M. Sivasankaran, J.A. Stankovic, D. Towsley, B. Purimetla and K. Ramamritham, </author> <title> Priority Assignment in Real-Time Active Databases, </title> <booktitle> The International Journal on Very Large Data Bases, </booktitle> <volume> Vol. 5, No. 1, </volume> <month> January </month> <year> 1996. </year>
Reference: [51] <author> R. M. Sivasankaran, K. Ramamritham, J. A. Stankovic, and D. Towsley, </author> <title> Data Placement, Logging and Recovery in Real-Time Active Databases, Workshop on Active Real-Time Database Systems, </title> <address> Sweden, </address> <month> June </month> <year> 1995. </year>
Reference: [52] <author> X. Song and J. W. S. Liu, </author> <title> How Well Can Data Temporal Consistency be Maintained? IEEE Symposium on Computer-Aided Control Systems Design, </title> <year> 1992. </year>
Reference: [53] <author> X. Song, </author> <title> Data Temporal Consistency in Hard Real-Time Systems, </title> <type> Technical Report No. </type> <institution> UIUCDCS-R-92-1753, </institution> <year> 1992. </year> <month> 17 </month>
Reference: [54] <author> X. Song and J. W. S. Liu, </author> <title> Maintaining Temporal Consistency: Pessimistic vs. Optimistic Concurrency Control, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> Vol. 7, No. 5, </volume> <pages> pp. 786-796, </pages> <month> October </month> <year> 1995. </year>
Reference: [55] <author> J. Stankovic and K. Ramamritham, </author> <title> The Spring Kernel: A New Paradigm for Hard Real-Time Operating Systems, </title> <journal> IEEE Software, </journal> <volume> 8(3) </volume> <pages> 62-72, </pages> <month> May </month> <year> 1991. </year>
Reference: [56] <author> J. Stankovic, K. Ramamritham, and D. Towsley, </author> <title> Scheduling in Real-Time Transaction Systems, in Foundations of Real-Time Computing: Scheduling and Resource Management, </title> <editor> edited by Andre van Tilborg and Gary Koob, </editor> <publisher> Kluwer Academic Publishers, </publisher> <pages> pp. 157-184, </pages> <year> 1991. </year>
Reference: [57] <author> J. Stankovic, SpringNet: </author> <title> A Scalable Architecture For High Performance, Predictable, Distributed, Real-Time Computing, </title> <institution> Univ. of Massachusetts, </institution> <type> Technical Report, </type> <pages> 91-74, </pages> <month> October </month> <year> 1991. </year>
Reference: [58] <author> J. Stankovic, and K. Ramamritham, </author> <title> Advances in Hard Real-Time Systems, </title> <publisher> IEEE Computer Society Press, </publisher> <address> Washington, DC, </address> <month> September </month> <year> 1993. </year>
Reference: [59] <author> J. Stankovic and K. Ramamritham, </author> <title> Reflective Real-Time Operating Systems, Principles of Real-Time Systems, Sang Son, editor, </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference: [60] <author> J. Stankovic, </author> <title> Strategic Directions: Real-Time and Embedded Systems, </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 28, No. 4, </volume> <month> December </month> <year> 1996. </year>
Reference: [61] <author> J. Stankovic, S. Son, and J. Liebeherr, BeeHive: </author> <title> Global Multimedia Database Support for Dependable, Real-Time Applications, </title> <journal> Proceedings ARTDB-97, </journal> <note> to appear. </note>
Reference: [62] <author> H. Tokuda, T. Nakajima and P. Rao, </author> <title> Real-Time Mach: Towards a Predictable Real-Time System, </title> <booktitle> Proc. Usenix Mach Workshop, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: Our work will take full advantage of the framework provided by ATM. Also, any output that comes from the IntServ group [49] at IETF will be applicable to our work. The RT Mach project <ref> [35, 62] </ref> has built distributed real-time operating system services supported by a guaranteed end-to-end resource reservation paradigm. The RT Mach paradigm is complemented by a functionally scalable microkernel along with a performance monitoring infrastructure.
Reference: [63] <author> F. Travostino and E. Menze III, </author> <title> The CORDS Book, </title> <institution> OSF Research Institute, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: The Open Software's Foundation Research Institute is pursuing several efforts to build configurable real-time operating systems for modular and scalable high-performance computing systems. An important effort in respect to fault-tolerance is the CORDS <ref> [63] </ref> system. CORDS develops an extensible suite of protocols for fault isolation and fault management in support of dependable distributed real-time applications. The project is targeted at military embedded real-time applications and focuses on operating systems solutions, in particular IPC primitives.
Reference: [64] <author> S. Vinoski. </author> <title> CORBA: Integrating Diverse Applications Within Distributed Heterogeneous Environments, </title> <journal> IEEE Communications Magazine, </journal> <volume> 14(2), </volume> <month> February </month> <year> 1997. </year>
Reference-contexts: By providing BeeHive wrappers to Legion we will be able to support Legion objects within BeeHive that satisfy QoS guarantees. Commercial systems with similar goals as Legion, however, focused exclusively on a client-server model, are OSF/DCE [40] and CORBA <ref> [64] </ref>. The CORBA standards and products based on them also do not have the functionality nor real-time properties that we are developing, although a real-time CORBA is emerging. In recent years, considerable progress has been made in the areas of QoS support for operating systems, networks, and open distributed systems. <p> BBN's Corbus [69] is a distributed, object-oriented system that facilitates the development of distributed applications. Corbus provides the middleware that closes the gap between QoS offered by real-time operating systems and networks and the communications researchers and object-oriented applications. Corbus is based on CORBA <ref> [64] </ref> and its object model. 8 Summary We have described the design of BeeHive at a high level. We have identified novel component solutions that will appear in BeeHive. More detailed design is continuing an a prototype system is planned.
Reference: [65] <author> G. Wiederhold, </author> <title> Mediators in the Architecture of Future Information Systems, </title> <journal> IEEE Computer, </journal> <volume> Vol. 25, No. 3, </volume> <month> March </month> <year> 1992, </year> <pages> pp. 38-49. </pages>
Reference-contexts: In the current prototype, they do not support temporal constraints of data and multimedia information. To allow applications to utilize multiple remote databases in dynamic and heterogeneous environments, the notion of mediator was introduced and a prototype was implemented in the PENGUIN system <ref> [65] </ref>. A mediator is a software module that exploits encoded knowledge about certain sets or subsets of data to create information for a higher layer of applications.
Reference: [66] <author> D. E. Wrege, E. W. Knightly, H. Zhang, and J. Liebeherr, </author> <title> Deterministic Delay Bounds for VBR Video in Packet-Switching Networks: Fundamental Limits and Practical Tradeoffs, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(3) </volume> <pages> 352-362, </pages> <month> June </month> <year> 1996. </year>
Reference: [67] <author> M. Xiong, J. Stankovic, K. Ramamritham, D. Towsley and R. M. Sivasankaran, </author> <title> Maintaining Temporal Consistency: Issues and Algorithms, </title> <booktitle> The First International Workshop on Real-Time Databases, </booktitle> <month> March, </month> <year> 1996. </year>
Reference: [68] <author> M. Xiong, R. Sivasankaran, J. Stankovic, K. Ramamritham and D. Towsley, </author> <title> Scheduling Transactions with Temporal Constraints: Exploiting Data Semantics, </title> <booktitle> Real-Time Systems Symposium, </booktitle> <month> December </month> <year> 1996. </year> <month> 18 </month>
Reference: [69] <author> J. A. Zinky, D. E. Bakken, and R. Schantz, </author> <title> Overview of Quality of Service for Objects, </title> <booktitle> In Proceedings of the Fifth IEEE Dual Use Conference, </booktitle> <month> May </month> <year> 1995. </year> <month> 19 </month>
Reference-contexts: Globus emphasizes the importance of heterogeneity and security; however, it does not offer solutions for fault-tolerance and real-time. BBN's Corbus <ref> [69] </ref> is a distributed, object-oriented system that facilitates the development of distributed applications. Corbus provides the middleware that closes the gap between QoS offered by real-time operating systems and networks and the communications researchers and object-oriented applications.
References-found: 69

