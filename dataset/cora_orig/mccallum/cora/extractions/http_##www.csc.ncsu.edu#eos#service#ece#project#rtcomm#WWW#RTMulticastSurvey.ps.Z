URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/RTMulticastSurvey.ps.Z
Refering-URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/routing.html
Root-URL: http://www.csc.ncsu.edu
Title: Multicast Routing Algorithms For High Speed Networks  
Author: Hussein F. Salama Ioannis Viniotis Douglas S. Reeves Tsang-Ling Sheu 
Address: Raleigh, NC 27695  H05A/Bldg. 656 Rtp, NC 27709  
Affiliation: North Carolina State University  IBM Networking Hardware Systems Dept.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Bertsekas and R.G. Gallager, </author> <title> Data Networks, Second Edition, </title> <publisher> Prentice-Hall, </publisher> <year> 1992. </year>
Reference-contexts: Bellman-Ford algorithm (distance-vector routing) and Dijkstra algorithm (link-state routing) <ref> [1] </ref>. Distributed Bellman-Ford algorithms exist [1], but they suffer from exponential message complexity in some scenarios. Approximate distributed Bellman 4 Ford algorithms [2] yield paths lengths that are worse than the shortest paths by at most a constant factor (&lt; 3). <p> Bellman-Ford algorithm (distance-vector routing) and Dijkstra algorithm (link-state routing) <ref> [1] </ref>. Distributed Bellman-Ford algorithms exist [1], but they suffer from exponential message complexity in some scenarios. Approximate distributed Bellman 4 Ford algorithms [2] yield paths lengths that are worse than the shortest paths by at most a constant factor (&lt; 3). <p> We will evaluate the performance of the following algorithms: a static version of the protocol independent multicast (PIM) routing algorithm for sparsely populated networks [22], the constrained multicast routing algorithm [18], and Bellman-Ford algorithm for shortest paths trees <ref> [1] </ref>. The PIM protocol is currently in the final stages of implementation. It will be used for multicast-ing in the Internet. The Internet is a datagram network that offers no performance guarantees, thus it is interesting to study the ability of PIM to fulfil the requirements of real-time applications.
Reference: [2] <author> B. Awerbuch, A. Bar-Noy, and M. Gopal, </author> <title> Approximate Distributed Bellman-Ford Algorithms, </title> <booktitle> Proceedings of INFOCOM '91, </booktitle> <pages> pp. 1206-1213, </pages> <year> 1991. </year>
Reference-contexts: Bellman-Ford algorithm (distance-vector routing) and Dijkstra algorithm (link-state routing) [1]. Distributed Bellman-Ford algorithms exist [1], but they suffer from exponential message complexity in some scenarios. Approximate distributed Bellman 4 Ford algorithms <ref> [2] </ref> yield paths lengths that are worse than the shortest paths by at most a constant factor (&lt; 3).
Reference: [3] <author> R.C. Prim, </author> <title> Shortest Connection Networks and Some Generalizations, </title> <journal> The Bell Systems Technical Journal, </journal> <volume> Vol. 36, </volume> <pages> pp. 1389-1401, </pages> <month> November </month> <year> 1957. </year>
Reference-contexts: Nodes that are not members of the given set are not included in the resulting graph. Prim's heuristic <ref> [3] </ref>. 3.3 Minimum Steiner Tree: A tree that connects a set of nodes N such that the total cost is minimal. In order to achieve the minimal total cost, the Steiner tree may contain nodes that are not in the set N.
Reference: [4] <author> E.N. Gilbert and H.O. Pollak, </author> <title> Steiner Minimal Trees, </title> <journal> SIAM Journal of Applied Physics, </journal> <volume> Vol. 16, No. 1, </volume> <pages> pp. 1-29, </pages> <year> 1968. </year>
Reference-contexts: Prim's heuristic [3]. 3.3 Minimum Steiner Tree: A tree that connects a set of nodes N such that the total cost is minimal. In order to achieve the minimal total cost, the Steiner tree may contain nodes that are not in the set N. Gilbert-Pollak <ref> [4] </ref>, Kou-Markowsky-Berman heuristic (KMB) [5], and the improved Rayward-Smith heuristic (RS) [6].
Reference: [5] <author> D.W. Wall, </author> <title> Selective Broadcast in Packet Switched Networks, </title> <booktitle> Proceedings of Sixth Berke-ley Workshop on Distributed Data Management and Computer Networks, </booktitle> <pages> pp. 239-258, </pages> <month> Febru-ary </month> <year> 1982. </year>
Reference-contexts: Prim's heuristic [3]. 3.3 Minimum Steiner Tree: A tree that connects a set of nodes N such that the total cost is minimal. In order to achieve the minimal total cost, the Steiner tree may contain nodes that are not in the set N. Gilbert-Pollak [4], Kou-Markowsky-Berman heuristic (KMB) <ref> [5] </ref>, and the improved Rayward-Smith heuristic (RS) [6]. In addition, a distributed KMB heuristic has been proposed in [5]. 3.4 Tradeoff between the Minimum Spanning Tree and the Shortest Path Tree [7]: First construct a minimum spanning tree, then find the destination (s) with the largest difference between the cost of <p> In order to achieve the minimal total cost, the Steiner tree may contain nodes that are not in the set N. Gilbert-Pollak [4], Kou-Markowsky-Berman heuristic (KMB) <ref> [5] </ref>, and the improved Rayward-Smith heuristic (RS) [6]. In addition, a distributed KMB heuristic has been proposed in [5]. 3.4 Tradeoff between the Minimum Spanning Tree and the Shortest Path Tree [7]: First construct a minimum spanning tree, then find the destination (s) with the largest difference between the cost of the shortest path and the cost of its path in the minimum spanning tree, and replace the minimum
Reference: [6] <author> V.J. Rayward-Smith and A. Clare, </author> <title> On Finding Steiner Vertices, </title> <journal> Networks, </journal> <volume> Vol. 16, pp.283-294, </volume> <year> 1986. </year>
Reference-contexts: In order to achieve the minimal total cost, the Steiner tree may contain nodes that are not in the set N. Gilbert-Pollak [4], Kou-Markowsky-Berman heuristic (KMB) [5], and the improved Rayward-Smith heuristic (RS) <ref> [6] </ref>.
Reference: [7] <author> B. Kadaba and J.M. Jaffe, </author> <title> Routing to Multiple Destinations in Computer Networks, </title> <journal> IEEE Trans. on Comm., </journal> <volume> Vol. COM-31, No. 3, </volume> <pages> pp. 343-351, </pages> <month> March </month> <year> 1983. </year>
Reference-contexts: Most existing MCR algorithms were designed for nonreal-time networks. They always attempt to minimize a given cost function such as bandwidth cost or link delays. Furthermore, some existing algorithms assume that both the cost function and the delay function are identical <ref> [7] </ref>, which not appropriate in real-time networks. A real-time application, however, requires a certain QoS level described by parameters such as an upper bound on delay, an upper bound on packet loss rate ... etc. These are constraints that must be satisfied by the routing algorithm. <p> Gilbert-Pollak [4], Kou-Markowsky-Berman heuristic (KMB) [5], and the improved Rayward-Smith heuristic (RS) [6]. In addition, a distributed KMB heuristic has been proposed in [5]. 3.4 Tradeoff between the Minimum Spanning Tree and the Shortest Path Tree <ref> [7] </ref>: First construct a minimum spanning tree, then find the destination (s) with the largest difference between the cost of the shortest path and the cost of its path in the minimum spanning tree, and replace the minimum spanning tree path by the shortest path from the source to that destination. <p> This approach may yield good results as concerning the delay variation from one destination to another. 3.5 Heuristics Based on Local Information Only <ref> [7] </ref>: Two heuristics based on information from nearby neighbors are presented in [7]: Nearby Heuristic 1 (NH 1) and Nearby Heuristic 2 (NH 2). 3.6 Minimum Conference Multicast Tree [8]: Packets are routed from all conference nodes to the conference center node on their shortest paths. <p> This approach may yield good results as concerning the delay variation from one destination to another. 3.5 Heuristics Based on Local Information Only <ref> [7] </ref>: Two heuristics based on information from nearby neighbors are presented in [7]: Nearby Heuristic 1 (NH 1) and Nearby Heuristic 2 (NH 2). 3.6 Minimum Conference Multicast Tree [8]: Packets are routed from all conference nodes to the conference center node on their shortest paths. The conference center multicasts the packets using a minimum Steiner tree.
Reference: [8] <author> Y. Leung and T. Yum, </author> <title> Optimum Connection Paths for a Class of Videoconferences, </title> <booktitle> 1991 IEEE International Conference on Communications, </booktitle> <pages> pp. 859-865, </pages> <year> 1991. </year>
Reference-contexts: may yield good results as concerning the delay variation from one destination to another. 3.5 Heuristics Based on Local Information Only [7]: Two heuristics based on information from nearby neighbors are presented in [7]: Nearby Heuristic 1 (NH 1) and Nearby Heuristic 2 (NH 2). 3.6 Minimum Conference Multicast Tree <ref> [8] </ref>: Packets are routed from all conference nodes to the conference center node on their shortest paths. The conference center multicasts the packets using a minimum Steiner tree.
Reference: [9] <author> Y. Leung and T. Yum, </author> <title> Efficient Algorithms for Multiple Destinations Routing, </title> <booktitle> 1991 IEEE International Conference on Communications, </booktitle> <pages> pp. 1311-1317, </pages> <year> 1991. </year>
Reference-contexts: The conference center node may or may not be at a conference node. the problem of choosing the conference center is NP 5 complete. The same authors present three heuristics for obtaining the minimum Steiner tree (referred to as the minimum multicast tree in the papers) in <ref> [9] </ref>, and they show that their algorithms give better solutions than the improved Rayward-Smith heuristic. Heuristic A (k): The path from the source to a destination should not be too much longer than the shortest path between them.
Reference: [10] <author> C. Chow, </author> <title> On Multicast Path Finding Algorithms, </title> <booktitle> Proceedings of INFOCOM '91, </booktitle> <pages> pp. 1284-1288, </pages> <year> 1991. </year>
Reference-contexts: In each iteration it finds a shortest path to connect an unconnected conference node. Heuristic C: Improvements added to heuristic B, by setting additional rules for cases where heuristic B randomly chooses between two or more nodes. 3.7 Reverse Spanning Tree (RST) <ref> [10] </ref>: Works only for networks where all nodes have multicast capability. 1. Use a spanning tree algorithm to find a path P from the source node s to any node in the destina tion set D. Let N be the set of vertices in P. 2. <p> Use the spanning tree which traverses the links in reverse direction to find the shortest path SP from x to any node in N. b. Add SP to the already existing tree P and update N. 6 3.8 Reachable Multicast Vertices (RMV) <ref> [10] </ref>: For networks where not all nodes have multicast capability. It divides the tree into two parts. First, the shortest path from the source node to a node having multicast capability, which can reach all destination nodes.
Reference: [11] <author> H. Tode, Y. Sakai, M. Yamamoto, H. Okada, and Y. Tezuka, </author> <title> Multicast Routing Algorithm for Nodal Load Balancing, </title> <booktitle> Proceedings of INFOCOM '92, </booktitle> <pages> pp. 2086-2095, </pages> <year> 1992. </year> <month> 20 </month>
Reference-contexts: First, the shortest path from the source node to a node having multicast capability, which can reach all destination nodes. The second part is the multicast path from the multicast node to all destinations. Similar to core-based trees. 3.9 Multicast Routing for Nodal Load Balancing <ref> [11] </ref>: The concentration of copy operations at a particular node (switch) causes performance degradation of other calls which go through this node. It is assumed that switches don't have multicast capability. Algorithm A: A link added type algorithm. One destination is added to the tree at a time. <p> Algorithm B: A loop constructed type algorithm. Derive the minimum hop paths with minimum cost for every source-destination pair, and define the tree constructed by the superposition of these paths. This is the initial tree. A tree transformation described in <ref> [11] </ref> is repeatedly executed until the total cost of the tree doesn't change. 3.10 Multicast Routing of Hierarchical Data [12]: The data stream consists of several layers. For example, in video layer 0 may carry the black and white image, while layer 1 carries color information. 7 1st Algorithm: 1.
Reference: [12] <author> N. Shacham, </author> <title> Multicast Routing of Hierarchical Data, </title> <booktitle> 1992 IEEE International Conference on Communications, </booktitle> <pages> pp. 1217-1221, </pages> <year> 1992. </year>
Reference-contexts: This is the initial tree. A tree transformation described in [11] is repeatedly executed until the total cost of the tree doesn't change. 3.10 Multicast Routing of Hierarchical Data <ref> [12] </ref>: The data stream consists of several layers. For example, in video layer 0 may carry the black and white image, while layer 1 carries color information. 7 1st Algorithm: 1. Create the maximum bandwidth tree based only on the bandwidths of the individual links. 2.
Reference: [13] <author> B.M. Waxman, </author> <title> Performance Evaluation of Multipoint Routing Algorithms, </title> <booktitle> Proceedings of INFOCOM '93, </booktitle> <pages> pp. 980-986, </pages> <year> 1993. </year>
Reference-contexts: Disadvantages: worse bandwidth utilization, layers need to be synchronized at the receiver, and more computation is required. 3.11 Dynamic Multicast Routing Algorithms: Individual nodes are allowed to join and leave the tree at any time during the life of that tree. Weighted Greedy Algorithm <ref> [13, 14] </ref>: If a node wants to join the multicast tree, the path connecting it to the source will minimize the following function over all v: W (v) = (1 - w) d (u,v) + w d (v, o), where o is the source node, v is any node in the
Reference: [14] <author> B.M. Waxman, </author> <title> Routing of Multipoint Connections, </title> <journal> IEEE Journal on Selected Areas in Comm., </journal> <volume> Vol. 6, No. 9, </volume> <pages> pp. 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Disadvantages: worse bandwidth utilization, layers need to be synchronized at the receiver, and more computation is required. 3.11 Dynamic Multicast Routing Algorithms: Individual nodes are allowed to join and leave the tree at any time during the life of that tree. Weighted Greedy Algorithm <ref> [13, 14] </ref>: If a node wants to join the multicast tree, the path connecting it to the source will minimize the following function over all v: W (v) = (1 - w) d (u,v) + w d (v, o), where o is the source node, v is any node in the <p> A random network generator according to the technique described in <ref> [14] </ref>. This technique has been adapted in several other papers. Nodes are randomly distributed on a Euclidean plane, and links to interconnect the nodes are generated according to a link probability function de scribed in [14]. 6.5 The Different Events: An event (class Event) holds the following information: The time of <p> A random network generator according to the technique described in <ref> [14] </ref>. This technique has been adapted in several other papers. Nodes are randomly distributed on a Euclidean plane, and links to interconnect the nodes are generated according to a link probability function de scribed in [14]. 6.5 The Different Events: An event (class Event) holds the following information: The time of the event. The type of the event: packet arrival from a source, packet arrival from another node, or packet departure, all the previous can be for real-time, nonreal-time, or background traffic.
Reference: [15] <author> M. Doar and I. Leslie, </author> <title> How Bad is Naive Multicast Routing, </title> <booktitle> Proceedings of INFOCOM '93, </booktitle> <pages> pp. 82-89, </pages> <year> 1993. </year>
Reference-contexts: When w = 0.5, u will be connected using the shortest path to the source. When w = 0, u will be connected using the shortest connection to any node in the tree. 8 Naive Multicast Routing <ref> [15] </ref>: Find the shortest path from the source to the node that is to be added. Add all nodes along the path into the existing multicast connection as Steiner points. 3.12 Multicast Routing Using Virtual Paths in ATM Networks [16, 17]: The routing algorithms themselves are not presented.
Reference: [16] <author> M.H. Ammar, S.Y. Cheung, </author> <title> and C.M. Scoglio, Routing Multipoint Connections Using Virtual Paths in an ATM Network, </title> <booktitle> Proceedings of INFOCOM '93, </booktitle> <pages> pp. 98-105, </pages> <year> 1993. </year>
Reference-contexts: Add all nodes along the path into the existing multicast connection as Steiner points. 3.12 Multicast Routing Using Virtual Paths in ATM Networks <ref> [16, 17] </ref>: The routing algorithms themselves are not presented. A cost function is formulated. It considers bandwidth cost, connection establishment cost, and switching cost.
Reference: [17] <author> M.H. Ammar, S.Y. Cheung, </author> <title> and C.M. Scoglio, Routing Multipoint Connections Using Virtual Paths in an ATM Network, </title> <type> Technical Report GIT-CC-92/37, </type> <institution> Georgia Institute of Technology, </institution> <address> Atlanta, GA., </address> <year> 1992. </year>
Reference-contexts: Add all nodes along the path into the existing multicast connection as Steiner points. 3.12 Multicast Routing Using Virtual Paths in ATM Networks <ref> [16, 17] </ref>: The routing algorithms themselves are not presented. A cost function is formulated. It considers bandwidth cost, connection establishment cost, and switching cost.
Reference: [18] <author> V.P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos, Multicasting for Multimedia Applications, </title> <booktitle> Proceedings of INFOCOM '92, </booktitle> <pages> pp. 2078-2085, </pages> <year> 1992. </year>
Reference-contexts: A cost function is formulated. It considers bandwidth cost, connection establishment cost, and switching cost. The authors also suggest different types of virtual paths which are suitable for multicasting applications. 3.13 The Constrained Multicast Tree Problem <ref> [18, 19, 20] </ref>: An edge cost and an edge delay are associated with each edge in the network. <p> The problem is to construct a tree spanning the destination nodes, such that the total cost is minimum and the delay on the path from the source to each destination is bounded by a maximum delay D. The algorithm in <ref> [18] </ref> follows the steps of the KMB algorithm, being careful not to violate the delay constraint. In [19] the authors present two different cost functions. The first cost function attempts to construct the cheapest tree possible subject to the delay constraint, the same as in [18]. <p> The algorithm in <ref> [18] </ref> follows the steps of the KMB algorithm, being careful not to violate the delay constraint. In [19] the authors present two different cost functions. The first cost function attempts to construct the cheapest tree possible subject to the delay constraint, the same as in [18]. The second cost function chooses low cost edges which maximize the residual delay. In [20] the authors describe two distributed algorithms that compute low cost trees with delay bounded paths from the source to each destination. <p> We will evaluate the performance of the following algorithms: a static version of the protocol independent multicast (PIM) routing algorithm for sparsely populated networks [22], the constrained multicast routing algorithm <ref> [18] </ref>, and Bellman-Ford algorithm for shortest paths trees [1]. The PIM protocol is currently in the final stages of implementation. It will be used for multicast-ing in the Internet.
Reference: [19] <author> V.P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos, Multicast Routing for Multimedia Communication, </title> <journal> IEEE Trans. on Networking, </journal> <volume> Vol. 1, No. 3, </volume> <pages> pp. 286-292, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: A cost function is formulated. It considers bandwidth cost, connection establishment cost, and switching cost. The authors also suggest different types of virtual paths which are suitable for multicasting applications. 3.13 The Constrained Multicast Tree Problem <ref> [18, 19, 20] </ref>: An edge cost and an edge delay are associated with each edge in the network. <p> The algorithm in [18] follows the steps of the KMB algorithm, being careful not to violate the delay constraint. In <ref> [19] </ref> the authors present two different cost functions. The first cost function attempts to construct the cheapest tree possible subject to the delay constraint, the same as in [18]. The second cost function chooses low cost edges which maximize the residual delay. <p> The second cost function chooses low cost edges which maximize the residual delay. In [20] the authors describe two distributed algorithms that compute low cost trees with delay bounded paths from the source to each destination. Either of the cost functions described in <ref> [19] </ref> can be used in the two distributed algorithms. 3.14 Reverse Path Forwarding [21]: It is an algorithm for broadcasting. but some of the algorithms described in section 3.15 are based on it.
Reference: [20] <author> V.P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos, Two Distributed Algorithms for Multicasting Multimedia Information, </title> <booktitle> Proceeding of the Second International Conference on Computer Communications and Networks, </booktitle> <pages> pp. 343-349, </pages> <year> 1993. </year>
Reference-contexts: A cost function is formulated. It considers bandwidth cost, connection establishment cost, and switching cost. The authors also suggest different types of virtual paths which are suitable for multicasting applications. 3.13 The Constrained Multicast Tree Problem <ref> [18, 19, 20] </ref>: An edge cost and an edge delay are associated with each edge in the network. <p> In [19] the authors present two different cost functions. The first cost function attempts to construct the cheapest tree possible subject to the delay constraint, the same as in [18]. The second cost function chooses low cost edges which maximize the residual delay. In <ref> [20] </ref> the authors describe two distributed algorithms that compute low cost trees with delay bounded paths from the source to each destination.
Reference: [21] <author> Y.K. Dalal and R.M. Metcalfe, </author> <title> Reverse Path forwarding of Broadcast Packets, </title> <journal> Communications of the ACM, </journal> <volume> Vol. 21, No. 12, </volume> <pages> pp. 1040-1048, </pages> <month> December </month> <year> 1978. </year>
Reference-contexts: In [20] the authors describe two distributed algorithms that compute low cost trees with delay bounded paths from the source to each destination. Either of the cost functions described in [19] can be used in the two distributed algorithms. 3.14 Reverse Path Forwarding <ref> [21] </ref>: It is an algorithm for broadcasting. but some of the algorithms described in section 3.15 are based on it.
Reference: [22] <author> S. Deering, D. Estrin, D. Farinacci, and V. Jacobson, </author> <title> IGMP Router Extension for Routing in Sparse Multicast Groups, IDMR Internet Draft, </title> <month> October </month> <year> 1993. </year>
Reference-contexts: is accepted by a node for forwarding only if it arrives along a link that is part of the shortest path tree from that node to the source. 3.15 Multicast Routing in Internetworks: Two different algorithms have been proposed to be used in the internet. 9 Protocol Independent Multicasting (PIM) <ref> [22, 23] </ref>: An approximate version of the distributed Bellman-Ford algorithm based on reverse path multicast-ing [24]. The reverse path multicasting algorithm creates a multicast tree for which all the reverse paths from the destinations to the source are the shortest paths. <p> The reverse path multicasting algorithm creates a multicast tree for which all the reverse paths from the destinations to the source are the shortest paths. There are two versions of the PIM protocol, one for sparsely populated networks <ref> [22] </ref> and the other one for densely populated networks [23]. Core Based Trees [25]: A single centered shortest path tree. The core node of a group is responsible for multicasting packets to all members of that group. The performance of core based trees has been evaluated in [26]. <p> They can process group addresses and forward multiple copies of the packet on different links without resorting to protocols at higher layers. We will evaluate the performance of the following algorithms: a static version of the protocol independent multicast (PIM) routing algorithm for sparsely populated networks <ref> [22] </ref>, the constrained multicast routing algorithm [18], and Bellman-Ford algorithm for shortest paths trees [1]. The PIM protocol is currently in the final stages of implementation. It will be used for multicast-ing in the Internet.
Reference: [23] <author> S. Deering, D. Estrin, D. Farinacci, and V. Jacobson, </author> <title> IGMP Router Extension for Routing in Dense Multicast Groups, IDMR Internet Draft, </title> <month> October </month> <year> 1993. </year> <month> 21 </month>
Reference-contexts: is accepted by a node for forwarding only if it arrives along a link that is part of the shortest path tree from that node to the source. 3.15 Multicast Routing in Internetworks: Two different algorithms have been proposed to be used in the internet. 9 Protocol Independent Multicasting (PIM) <ref> [22, 23] </ref>: An approximate version of the distributed Bellman-Ford algorithm based on reverse path multicast-ing [24]. The reverse path multicasting algorithm creates a multicast tree for which all the reverse paths from the destinations to the source are the shortest paths. <p> The reverse path multicasting algorithm creates a multicast tree for which all the reverse paths from the destinations to the source are the shortest paths. There are two versions of the PIM protocol, one for sparsely populated networks [22] and the other one for densely populated networks <ref> [23] </ref>. Core Based Trees [25]: A single centered shortest path tree. The core node of a group is responsible for multicasting packets to all members of that group. The performance of core based trees has been evaluated in [26]. Heuristics where used to choose the core.
Reference: [24] <author> S. Deering and D. Cheriton, </author> <title> Multicast routing in Datagram Internetworks and Extended LANS, </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> Vol. 8, No. 2, </volume> <pages> pp. 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: is part of the shortest path tree from that node to the source. 3.15 Multicast Routing in Internetworks: Two different algorithms have been proposed to be used in the internet. 9 Protocol Independent Multicasting (PIM) [22, 23]: An approximate version of the distributed Bellman-Ford algorithm based on reverse path multicast-ing <ref> [24] </ref>. The reverse path multicasting algorithm creates a multicast tree for which all the reverse paths from the destinations to the source are the shortest paths. There are two versions of the PIM protocol, one for sparsely populated networks [22] and the other one for densely populated networks [23].
Reference: [25] <author> A. Ballardie, P. Tsuchiya, and J. Crowcroft, </author> <title> Core Based Trees, IDMR Internet Draft, </title> <month> March </month> <year> 1993. </year>
Reference-contexts: There are two versions of the PIM protocol, one for sparsely populated networks [22] and the other one for densely populated networks [23]. Core Based Trees <ref> [25] </ref>: A single centered shortest path tree. The core node of a group is responsible for multicasting packets to all members of that group. The performance of core based trees has been evaluated in [26]. Heuristics where used to choose the core.
Reference: [26] <author> L. Wei and D. Estrin, </author> <title> A comparison of Multicast Trees and Algorithms, </title> <note> Draft Submitted to INFOCOM '94. </note>
Reference-contexts: Core Based Trees [25]: A single centered shortest path tree. The core node of a group is responsible for multicasting packets to all members of that group. The performance of core based trees has been evaluated in <ref> [26] </ref>. Heuristics where used to choose the core. Simulations show that choosing any member of the multicast group to be the core yields results that are comparable to those obtained when using heuristics to choose the core. Core based trees result in high traffic concentration.
Reference: [27] <author> J. Turner, </author> <title> Design of Local ATM Networks, Tutorial, </title> <type> INFOCOM '93, </type> <year> 1993. </year>
Reference-contexts: Steiner Tree Complexity Distributed Imple mentation Suitability for Real Time Comments Using VPs in ATM Networks Yes---- Sec. 3.12 Constrained Mul ticast Tree Good Yes Average: &lt; 1.07 Reverse Path Multi casting Average Yes (in PIM) Near optimal results obtained by simulation <ref> [27] </ref> Dynamic Secs. 3.14, 3.15 Core Based Trees Good Yes - Yes, routes are com puted distri butedly - Dynamic Secs. 3.14, 3.15 Table 1 continued: Multicast Routing Algorithms 4.
Reference: [28] <author> A. Frank, L. Wittie, and A. Bernstein, </author> <title> Multicast Communication on Network Computers, </title> <journal> IEEE Software, </journal> <pages> pp. 49-61, </pages> <month> May </month> <year> 1985. </year>
Reference: [29] <author> B. Maglaris, D. Anastassiou, P. Sen, G. Karlsson, and J. Robbins, </author> <title> Performance Models of Statistical Multiplexing in Packet Video Communications, </title> <journal> IEEE Trans. on Comm., </journal> <volume> Vol. 36, No. 7, </volume> <pages> pp. 834-843, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: Different functions are used to generate the packet arrival times according to the required characteristics of the traffic. It is our intention to use: IBP sources for background and nonreal-time traffic, on-off sources for voice, and MMBP and MMPP sources for variable bit rate video <ref> [29, 30] </ref>. 6.4 Network Management: Network management functions and network information are all held in class TheNodeList: It keeps a linked list of pointers to nodes (NodeListEntry); one pointer for each node in the network.
Reference: [30] <author> P. Skelly, M. Schwartz, and S. Dixit, </author> <title> A Histogram-Based Model for Video Traffic Behavior in an ATM Multiplexer, </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> Vol. 1, No. 4, </volume> <pages> pp. 446-459, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Different functions are used to generate the packet arrival times according to the required characteristics of the traffic. It is our intention to use: IBP sources for background and nonreal-time traffic, on-off sources for voice, and MMBP and MMPP sources for variable bit rate video <ref> [29, 30] </ref>. 6.4 Network Management: Network management functions and network information are all held in class TheNodeList: It keeps a linked list of pointers to nodes (NodeListEntry); one pointer for each node in the network.
References-found: 30

