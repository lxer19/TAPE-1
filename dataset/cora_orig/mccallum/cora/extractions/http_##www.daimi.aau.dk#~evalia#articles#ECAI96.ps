URL: http://www.daimi.aau.dk/~evalia/articles/ECAI96.ps
Refering-URL: http://www.daimi.aau.dk/~evalia/
Root-URL: http://www.daimi.aau.dk
Title: Jobshop scheduling in a shipyard  
Author: Thomas Stidsen Lars V. Kragelund and Oana Mateescu 
Abstract: Jobshop scheduling is considered a standard problem to solve by means of Genetic Algorithms (GA) and a number of articles have been written about this subject [1]. In spite of this, only few applications of GA have been published [2], [3] on real jobshop scheduling problems. Even though some applications may not be published for business related reasons, more practical applications seem necessary, in order to convince engineering and planning people of the use of GA for jobshop scheduling. A shipyard is a large and complex organization, including many employees with many specialized functions, many different workshops differentiated over a large area and all dependent on each other in complex ways. Because ships are usually built in small series, the organization needs to be flexible in order to adapt to new needs and for the planning people the demands are huge. If it is possible to establish efficient tools for jobshop scheduling in such an organization, for at least parts of the planning, it will be of significant practical value. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Whitley, T. Starkweather and D. Shaner, </author> <title> `The Traveling Salesman and Sequence Scheduling: Quality Solutions Using Genetic Edge Recombination', Handbook of Genetic Algorithms, chapter 22, </title> <publisher> Van Nos-trand, </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [2] <author> Y. Uckun, S. Bagchi, K. Kawamura and Y. Miyabe, </author> <title> `Managing Genetic Search in Job Shop Scheduling', </title> <journal> IEEE Expert, </journal> <note> 8(Oct.1993) 15-24. </note>
Reference: [3] <author> B. Filipic, </author> <title> `A Genetic Algorithm Applied to Resource Management in Production Systems', Evolutionary Algorithms in Management Applications, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg, </address> <year> 1995. </year>
Reference: [4] <author> L. Davis, </author> <title> Handbook of Genetic Algorithms, </title> <publisher> Van Nostrand, </publisher> <address> New York, </address> <year> 1991. </year> <title> Planning, Scheduling, </title> <booktitle> and Reasoning about Actions 643 Stidsen, Kragelund and Mateescu </booktitle>
Reference-contexts: This kind of GA was chosen in order to avoid premature convergence and to make efficient use of the information supplied by the fitness-function. Further, this steady state is possible because we are working with a deterministic fitness-function <ref> [4] </ref>. The selection pressure is obtained through three different tournament-selection procedures. SelectForMutation performs a binary tournament i.e. randomly selecting two different individuals from the population and returning the fittest. <p> We now have a total of 8 different mutation types, which have to be selected according to a certain probability compared to the other genetic operators. We have not attempted to fine tune these parameters, but an obvious solution would be to use the adaptive probabilities-technique as suggested in <ref> [4] </ref>, chapter 6. 3.6 Crossover The crossover is needed to ensure transfer of high quality parts of the chromosome to other individuals. Unfortunately, it is quite difficult to construct a crossover, which does not create offspring breaking the constraints.
References-found: 4

