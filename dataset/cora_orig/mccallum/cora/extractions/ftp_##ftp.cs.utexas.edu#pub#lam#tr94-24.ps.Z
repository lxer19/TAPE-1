URL: ftp://ftp.cs.utexas.edu/pub/lam/tr94-24.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/lam/seminar/mypapers.html
Root-URL: 
Title: Delay Guarantee of Virtual Clock Server  
Author: Geoffrey G. Xie and Simon S. Lam 
Keyword: virtual clock, rate-based service discipline, priority queue, through put guarantee, delay guarantee, packet switching.  
Date: October 6, 1994 May 30, 1995 (revised) September 24, 1995 (revised)  
Address: Austin, Texas 78712-1188  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Pubnum: TR-94-24  
Abstract: We present and prove a delay guarantee for the Virtual Clock service discipline. The guarantee has several desirable properties, including the following firewall property: The guarantee to a flow is unaffected by the behavior of other flows sharing the same server. There is no assumption that sources are flow-controlled or well-behaved. In this paper, we first introduce and define the concept of an active flow. The delay guarantee is then formally stated as a theorem. We show how to obtain delay bounds from the delay guarantee for a single server. Derivations of end-to-end delay bounds for various networks and source specifications are presented elsewhere. fl Research supported in part by National Science Foundation grants no. NCR-9004464 and NCR-9506048, and in part by NSA INFOSEC University Research Program. This paper was presented at the 9th IEEE Workshop on Computer Communications, Marathon, Florida, October 1994. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Greg M. Bernstein. </author> <title> Reserved bandwidth and reservationless traffic in rate allocating servers. </title> <journal> Computer Communication Review, </journal> <pages> pages 6-24, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: For a flow that has heretofore used up more server capacity than its reserved rate, resetting its virtual clock to zero at the end of a busy period means that its "debt has been forgiven." Such a side effect was actually considered to be desirable in <ref> [1] </ref>, where the idea of virtual clock reset was discussed.
Reference: [2] <author> Alan Demers, Srinivasan Keshav, and Scott Shenker. </author> <title> Analysis and simulation of a fair queuing algorithm. </title> <booktitle> In Proceedings of ACM SIGCOMM '89, </booktitle> <pages> pages 3-12, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: are reset to zero at the end of server busy periods. 7 Conclusions We discovered and proved a delay guarantee for a VC server with a firewall property, namely: the delay guarantee to a flow is independent of the behavior of other flows 5 also known as weighted fair queueing <ref> [2] </ref> 9 sharing the same server. With this property, the impact of source-controller malfunc-tioning is limited, a significant advantage not found in FIFO and other static-priority service disciplines. With both delay and throughput guarantees, and a relatively simple implementation, Virtual Clock is an attractive algorithm for high-speed networks.
Reference: [3] <author> Domenico Ferrari and Dinesh Verma. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <pages> pages 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: The server ensures a priori that the channel capacity cannot be exceeded because for all time t, X r (f ) f2D (t) If statistical guarantees are acceptable <ref> [3, 13] </ref>, a VC server can exploit the fact that flows are not active all the time and overcommit its capacity. The design of admission control techniques to do so requires a priori knowledge of source traffic statistics. <p> can be used for deriving upper bounds on end-to-end delays for different source specifications, and for a class of scheduling algorithms including not only Virtual Clock, but also PGPS [10] and SCFQ [5]. 8 6.2 Comparisons The Delay-EDD service discipline was designed to offer a delay bound to packet arrivals <ref> [3, 13] </ref>. When a flow f packet arrives to a Delay-EDD server, it must depart within d (f ) seconds of its arrival time, where d (f ) is a performance parameter that can be specified.
Reference: [4] <author> Norival R. Figueira and Joseph Pasquale. </author> <title> An upper bound on delay for the Virtual-Clock service discipline. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4), </volume> <month> August </month> <year> 1995. </year>
Reference-contexts: Moreover, VC is a much more efficient algorithm than PGPS, i.e., the computation of virtual clock values for VC scheduling is much simpler than the computation of virtual time finishing times for PGPS scheduling. The delay guarantee in (4) was independently discovered and proved by Figueira and Pasquale <ref> [4] </ref> and by us [12]. We next discuss some of the differences between the two contributions. Firstly, one significant difference is our active flow definition, which is missing in [4]. <p> The delay guarantee in (4) was independently discovered and proved by Figueira and Pasquale <ref> [4] </ref> and by us [12]. We next discuss some of the differences between the two contributions. Firstly, one significant difference is our active flow definition, which is missing in [4]. The condition for their delay guarantee is that sum of the reserved rates of all flows sharing the server does not exceed the server capacity [4]. <p> Firstly, one significant difference is our active flow definition, which is missing in <ref> [4] </ref>. The condition for their delay guarantee is that sum of the reserved rates of all flows sharing the server does not exceed the server capacity [4]. Theorem 1 herein requires that the reserved rates of only those flows that are active at time t be summed to determine whether or not the server capacity is exceeded at time t (see Definitions 1 and 2). <p> Secondly, our proof approach, presented in the Appendix, is very different from the one presented in <ref> [4] </ref>.
Reference: [5] <author> S. J. Golestani. </author> <title> A self-clocked fair queueing scheme for high speed applications. </title> <booktitle> In Proceedings of IEEE INFOCOM '94, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: It was shown that such a delay guarantee can be used for deriving upper bounds on end-to-end delays for different source specifications, and for a class of scheduling algorithms including not only Virtual Clock, but also PGPS [10] and SCFQ <ref> [5] </ref>. 8 6.2 Comparisons The Delay-EDD service discipline was designed to offer a delay bound to packet arrivals [3, 13].
Reference: [6] <author> Pawan Goyal, Simon S. Lam, and Harrick M. Vin. </author> <title> Determining end-to-end delay bounds in heterogeneous networks. In Proceedings Workshop on Network and OS Support for Digital Audio and Video, </title> <address> Durham, New Hampshire, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: With the delay guarantee in (4), different delay bounds can be derived for different methods of source control. As another example, if the source is (; ) leaky-bucket controlled, then P (n) A (n) is bounded by = for all n <ref> [6] </ref>. 5 Generalization and Algorithm Modification Theorem 1 can be made more general by weakening its hypothesis, specifically, by reducing the duration of time when a flow is defined to be active. The proof of Theorem 1 in the Appendix is for an arbitrary busy period. <p> Tight upper bounds on the end-to-end delays of packets and bursts were derived and presented [7, 8, 9]. The idea of a conditional guarantee to a packet based upon the packet's virtual clock value was subsequently extended to an end-to-end network path <ref> [6] </ref>. <p> The packet-by-packet generalized processor sharing (PGPS) service discipline 5 was described and analyzed by Parekh and Gallager [10, 11]. It has been shown that a network path of VC servers has the same delay upper bound as PGPS servers <ref> [6] </ref>. Comparing VC and PGPS, note that if a VC server's capacity is not fully allocated to flows, the remaining unallocated capacity is not shared fairly as defined in [10]. However, a VC server does ensure that each flow receives its allocated throughput rate.
Reference: [7] <author> Simon S. Lam and Geoffrey G. Xie. </author> <title> Burst Scheduling: architecture and algorithm for switching packet video. </title> <type> Technical Report TR-94-20, </type> <institution> Department of Computer Sciences, UT-Austin, </institution> <month> July </month> <year> 1994. </year> <note> An abbreviated version in Proceedings IEEE INFOCOM '95, </note> <month> April </month> <year> 1995. </year>
Reference-contexts: Therefore, a VC server provides the following delay bound to every packet n in the flow: L (n) A (n) + r (f ) l max (5) The above observation was first used in <ref> [7] </ref> to obtain a tight upper bound on end-to-end delays. With the delay guarantee in (4), different delay bounds can be derived for different methods of source control. <p> For a slightly different model, we described how to reset the virtual clock of an active flow whenever there is no packet in the system belonging to another flow <ref> [7] </ref>. 6 Related Work 6.1 Extensions The first application of Theorem 1 was to derive end-to-end delay bounds for a class of packet switching networks, called Burst Scheduling networks. In these networks, each guaranteed flow is modeled as a sequence of bursts (each of which is a sequence of packets). <p> Switches are designed to process flows efficiently in bursts. Tight upper bounds on the end-to-end delays of packets and bursts were derived and presented <ref> [7, 8, 9] </ref>. The idea of a conditional guarantee to a packet based upon the packet's virtual clock value was subsequently extended to an end-to-end network path [6]. <p> With both delay and throughput guarantees, and a relatively simple implementation, Virtual Clock is an attractive algorithm for high-speed networks. We have chosen Virtual Clock as the basis of a packet network architecture, called Burst Scheduling, for switching multimedia traffic <ref> [7] </ref>. Our concept of an active flow in Definition 1 (also Definition 1 0 ) is novel. We are investigating techniques to exploit this concept to increase the number of flows that can share a VC server which provides statistical guarantees.
Reference: [8] <author> Simon S. Lam and Geoffrey G. Xie. </author> <title> Burst Scheduling networks: Flow specification and performance guarantees. In Proceedings Workshop on Network and OS Support for Digital Audio and Video, </title> <address> Durham, New Hampshire, </address> <month> April </month> <year> 1995. </year> <month> 10 </month>
Reference-contexts: Switches are designed to process flows efficiently in bursts. Tight upper bounds on the end-to-end delays of packets and bursts were derived and presented <ref> [7, 8, 9] </ref>. The idea of a conditional guarantee to a packet based upon the packet's virtual clock value was subsequently extended to an end-to-end network path [6].
Reference: [9] <author> Simon S. Lam and Geoffrey G. Xie. </author> <title> Group priority scheduling. </title> <type> Technical Report TR-95-28, </type> <institution> Department of Computer Sciences, UT-Austin, </institution> <month> July </month> <year> 1995. </year> <note> An abbreviated version to appear in Proceedings IEEE INFOCOM '96. </note>
Reference-contexts: Switches are designed to process flows efficiently in bursts. Tight upper bounds on the end-to-end delays of packets and bursts were derived and presented <ref> [7, 8, 9] </ref>. The idea of a conditional guarantee to a packet based upon the packet's virtual clock value was subsequently extended to an end-to-end network path [6].
Reference: [10] <author> Abhay K. Parekh and Robert G. Gallager. </author> <title> A generialized processor sharing approach to flow control in integrated services networks: The single node case. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(3) </volume> <pages> 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: It was shown that such a delay guarantee can be used for deriving upper bounds on end-to-end delays for different source specifications, and for a class of scheduling algorithms including not only Virtual Clock, but also PGPS <ref> [10] </ref> and SCFQ [5]. 8 6.2 Comparisons The Delay-EDD service discipline was designed to offer a delay bound to packet arrivals [3, 13]. <p> Furthermore, Delay-EDD requires a stronger source traffic specification, which includes a minimum packet interarrival time in addition to a reserved rate (average packet interarrival time). The packet-by-packet generalized processor sharing (PGPS) service discipline 5 was described and analyzed by Parekh and Gallager <ref> [10, 11] </ref>. It has been shown that a network path of VC servers has the same delay upper bound as PGPS servers [6]. <p> It has been shown that a network path of VC servers has the same delay upper bound as PGPS servers [6]. Comparing VC and PGPS, note that if a VC server's capacity is not fully allocated to flows, the remaining unallocated capacity is not shared fairly as defined in <ref> [10] </ref>. However, a VC server does ensure that each flow receives its allocated throughput rate. Moreover, VC is a much more efficient algorithm than PGPS, i.e., the computation of virtual clock values for VC scheduling is much simpler than the computation of virtual time finishing times for PGPS scheduling.
Reference: [11] <author> Abhay K. Parekh and Robert G. Gallager. </author> <title> A generialized processor sharing approach to flow control in integrated services networks: The multiple node case. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 2(2) </volume> <pages> 137-150, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Furthermore, Delay-EDD requires a stronger source traffic specification, which includes a minimum packet interarrival time in addition to a reserved rate (average packet interarrival time). The packet-by-packet generalized processor sharing (PGPS) service discipline 5 was described and analyzed by Parekh and Gallager <ref> [10, 11] </ref>. It has been shown that a network path of VC servers has the same delay upper bound as PGPS servers [6].
Reference: [12] <author> Geoffrey G. Xie and Simon S. Lam. </author> <title> Delay guarantee of Virtual Clock server. </title> <type> Technical Report TR-94-24, </type> <institution> Department of Computer Sciences, UT-Austin, </institution> <month> October 6, </month> <year> 1994. </year> <booktitle> Presented at 9th IEEE Workshop on Computer Communications, Marathon, </booktitle> <address> Florida, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: The delay guarantee in (4) was independently discovered and proved by Figueira and Pasquale [4] and by us <ref> [12] </ref>. We next discuss some of the differences between the two contributions. Firstly, one significant difference is our active flow definition, which is missing in [4].
Reference: [13] <author> Hui Zhang and Srinivasan Keshav. </author> <title> Comparison of rated-based service disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM '91, </booktitle> <pages> pages 113-121, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Such throughput, delay, and jitter guarantees, however, are precisely the ones needed to support various multimedia applications. To provide some or all of these guarantees without giving up the flexibility of statistical multiplexing, a variety of rate-based service disciplines have been proposed to be used instead of FCFS <ref> [13] </ref>. <p> No delay guarantee was presented for Virtual Clock in [14, 15]. In a recent survey of rate-based service disciplines, Virtual Clock was classified among those that do not provide a delay guarantee <ref> [13] </ref>. Indeed, Virtual Clock by itself, without any assumption of source control, does not provide a delay bound in the usual sense (namely, a bound on the difference between the departure time and arrival time of each packet). <p> The server ensures a priori that the channel capacity cannot be exceeded because for all time t, X r (f ) f2D (t) If statistical guarantees are acceptable <ref> [3, 13] </ref>, a VC server can exploit the fact that flows are not active all the time and overcommit its capacity. The design of admission control techniques to do so requires a priori knowledge of source traffic statistics. <p> can be used for deriving upper bounds on end-to-end delays for different source specifications, and for a class of scheduling algorithms including not only Virtual Clock, but also PGPS [10] and SCFQ [5]. 8 6.2 Comparisons The Delay-EDD service discipline was designed to offer a delay bound to packet arrivals <ref> [3, 13] </ref>. When a flow f packet arrives to a Delay-EDD server, it must depart within d (f ) seconds of its arrival time, where d (f ) is a performance parameter that can be specified.
Reference: [14] <author> Lixia Zhang. </author> <title> A New Architecture for Packet Switched Network Protocols. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: To provide some or all of these guarantees without giving up the flexibility of statistical multiplexing, a variety of rate-based service disciplines have been proposed to be used instead of FCFS [13]. In particular, the Virtual Clock service discipline <ref> [14, 15] </ref>, inspired by time division multiplexing (TDM), provides firewalls between individual traffic flows in the following sense: Each traffic flow is allocated a reserved rate of throughput, and such throughput guarantee is independent of the behavior of other traffic flows sharing the same server. <p> Thus, compared to TDM, Virtual Clock offers the flexibility to support diverse throughput requirements of different applications, in addition to the flexibility of statistical multiplexing. No delay guarantee was presented for Virtual Clock in <ref> [14, 15] </ref>. In a recent survey of rate-based service disciplines, Virtual Clock was classified among those that do not provide a delay guarantee [13].
Reference: [15] <author> Lixia Zhang. VirtualClock: </author> <title> A new traffic control algorithm for packet switching networks. </title> <booktitle> In Proceedings of ACM SIGCOMM '90, </booktitle> <pages> pages 19-29, </pages> <month> August </month> <year> 1990. </year> <month> 11 </month>
Reference-contexts: To provide some or all of these guarantees without giving up the flexibility of statistical multiplexing, a variety of rate-based service disciplines have been proposed to be used instead of FCFS [13]. In particular, the Virtual Clock service discipline <ref> [14, 15] </ref>, inspired by time division multiplexing (TDM), provides firewalls between individual traffic flows in the following sense: Each traffic flow is allocated a reserved rate of throughput, and such throughput guarantee is independent of the behavior of other traffic flows sharing the same server. <p> Thus, compared to TDM, Virtual Clock offers the flexibility to support diverse throughput requirements of different applications, in addition to the flexibility of statistical multiplexing. No delay guarantee was presented for Virtual Clock in <ref> [14, 15] </ref>. In a recent survey of rate-based service disciplines, Virtual Clock was classified among those that do not provide a delay guarantee [13]. <p> The concept of virtual clock is introduced next. Let priority (f ) denote the virtual clock of flow f . It can be implemented as a variable, which is zero initially and updated as follows whenever a flow f packet, say p, arrives to the facility <ref> [15] </ref>. priority (f ) := maxfpriority (f ); A (p)g + l (p) (1) The new value of priority (f ) above is assigned to packet p as its virtual clock value, denoted by P (p).
References-found: 15

