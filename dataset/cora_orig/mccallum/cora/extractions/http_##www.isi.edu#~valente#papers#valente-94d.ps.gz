URL: http://www.isi.edu/~valente/papers/valente-94d.ps.gz
Refering-URL: http://www.isi.edu/~valente/papers/valente-94d.html
Root-URL: http://www.isi.edu
Email: e-mail: andre@lri.jur.uva.nl,  
Phone: tel: +31-20-5253499, fax: +31-20-5253495  
Title: A Commonsense Theory of Normative Systems  
Author: Andre Valente and Joost Breuker 
Address: Kloveniersburgwal 72, 1012 CZ, Amsterdam, The Netherlands  
Affiliation: Department of Computer Science and Law, University of Amsterdam  
Abstract: Normative systems control the behaviour of a target system within a certain world by using norms, i.e. abstract specifications of which behaviour is to be allowed and which is not. Examples of normative systems range from countries' legal systems to rules of games (e.g. chess) and authorization mechanisms in distributed systems or databases. Because normative systems involve norms, which are commonly seen as deontic sentences, are usually formalized as an adaptation or extension of a modal deontic logic. In this article, we propose a different approach. We will develop a formalism specifically for representing normative systems, based on a small set of commonsense intuitions about how these systems work. The formalism comprises two levels. In the first, norms are applied to situations to obtain their statuses. Possible conflicts between these statuses are solved in the second level. The resulting formalism is able to represent several types of normative systems, and leads to a simple algorithm to find violations of norms given a world description.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. E. Alchourron and E. Bulygin. </author> <title> Normative Systems. </title> <publisher> Springer-Verlag, Wien, </publisher> <year> 1971. </year>
Reference-contexts: 1 Introduction Formalizations of normative systems have been discussed almost exclusively as an application of deontic logics. For instance, Alchourron and Bulygin <ref> [1] </ref> develop a theory of normative systems based on a modal deontic logic; Wieringa et. al. [9] propose the use of deontic logics to specify integrity constraints for databases (i.e. databases as normative systems). The correspondence has been so tight that Lee refers to `deontic systems' [6]. <p> In any case, the modularity of the formalization and of the algorithm opens the interesting possibility of experimenting with algorithms for searching matches, different criteria for solving conflict between norms and even different definitions norm conflicts. 6 Comparison with Other Work Alchourron & Bulygin's formalization of normative systems <ref> [1] </ref> has many similarities with our work. Despite the fact that they start from a modal full deontic logic and formalize ought-to-do norms (in contrast with our ought-to-be formalization), there are several common points.
Reference: [2] <author> P. d'Altan, J.-J. Ch. Meyer, and R.J. Wieringa. </author> <title> An integrated framework for ought-to-be and ought-to-do constraints. </title> <editor> In Y. H. Tan, editor, </editor> <booktitle> Working Papers of the Workshop om Deontic and Non-Monotonic Logics, </booktitle> <pages> pages 14-45, </pages> <address> Rotterdam, </address> <month> October </month> <year> 1993. </year> <institution> Eras-mus University. </institution>
Reference-contexts: A more thorough and rigorous discussion of the conversion between ought-to-be and ought-to-do norms was done in <ref> [2] </ref>. 7 Conclusions In this article, we have proposed a formalization of normative systems which is not based on a full modal deontic logic, but instead tries to formalize the specific way norms are applied and reasoned about in normative systems.
Reference: [3] <author> J. de Kleer, A.K. Mackworth, and R. Reiter. </author> <title> Characterizing diagnoses and systems. </title> <journal> Artificial Intelligence, </journal> <volume> 56(2-3):197-222, </volume> <year> 1992. </year>
Reference-contexts: The original concept was used in switching theory, but recently has gained attention in AI precisely to express this sort of minimality criterion (see e.g. <ref> [3] </ref>).
Reference: [4] <author> N. den Haan. </author> <title> Eliminating Unintentional Legal Conflicts. </title> <editor> In G. Bargellini and S. Bi-nazzi, editors, </editor> <booktitle> Proceedings of the Conference -Towards a Global Expert System in Law. </booktitle> <institution> Instituto per la Documentazione Giuridica del Consiglio Nazionale delle Ricerche, </institution> <year> 1994. </year>
Reference-contexts: An illegal situation is then defined as Illegal (S; fi) $ :Legal (S; fi). As an intermediary concept, let us define the sub-set of fi that does not 6 We will not enter in details about how to do it; for an example of such formalization see <ref> [4] </ref>. 7 yield Silent for a situation S. We call it the positive set of S, denote it by a function P os (fi; S) defined by P os (fi; S) = fN 2 fijN (S) 6= Silentg.
Reference: [5] <author> Hans Kelsen. </author> <title> General Theory of Norms. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1991. </year>
Reference-contexts: However, that works only for simple normative systems. In law, for instance, there are mechanisms for operationalizing the introduction and elimination of norms as time passes. Such mechanisms may be formalized by introducing (as proposed by Kelsen <ref> [5] </ref>) the concept of norm validity: a norm is part of a normative system iff it is a valid norm. For instance, valid norms may be considered to be the ones promulgated by agents empowered to do so.
Reference: [6] <author> R.M. Lee. </author> <title> Bureaucracies as deontic systems. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 6 </volume> <pages> 87-108, </pages> <year> 1988. </year>
Reference-contexts: The correspondence has been so tight that Lee refers to `deontic systems' <ref> [6] </ref>. Most of these deontic logics are modal logics, where the deontic concepts (obligation, permission, prohibition) are formalized as modal operators applied to propositions. Taking a modal deontic logic for granted, however, brings some problems.
Reference: [7] <author> J.-J. Meyer and R. J. Wieringa. </author> <title> Deontic logic: a concise overview. </title> <editor> In J.-J. Meyer and R. J. Wieringa, editors, </editor> <booktitle> Proceedings of the First International Workshop on Deontic Logics in Computer Science, </booktitle> <pages> pages 2-14, </pages> <address> Amsterdam, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: For instance, it is usually accepted that F p, :P p and O:p are equivalent formulas (where P , F and O) are modal operators, p is a proposition and : is logical negation), see for instance <ref> [7] </ref>. In our case, it is easy to prove that for all S F (S) =~ P (S) = O opp () (S). The similarity happens again by `negating' the situation: F (S) =~ P (S) = O (opp (S)).
Reference: [8] <author> J. Slagle, C. Chang, and R. Lee. </author> <title> A new algorithm for generating prime implicants. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-19(4):304-310, </volume> <month> apr </month> <year> 1970. </year>
Reference-contexts: These limitations are, however, not as problematic as they seem at a first glance. Firstly, one of the reasons for choosing the concept of prime implicant in the formalization of match is that there are several algorithms to make these calculations (e.g. <ref> [8] </ref>). Moreover, if we know beforehand what are the norms involved we can use the same algorithms to transform the generic situations into a normal form that makes evident its prime implicants, and store these beforehand.
Reference: [9] <author> R.J. Wieringa, J.-J. Ch. Meyer, and H. Weigand. </author> <title> Specifying dynamic and deontic integrity constraints. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 4 </volume> <pages> 157-189, </pages> <year> 1989. </year> <month> 12 </month>
Reference-contexts: 1 Introduction Formalizations of normative systems have been discussed almost exclusively as an application of deontic logics. For instance, Alchourron and Bulygin [1] develop a theory of normative systems based on a modal deontic logic; Wieringa et. al. <ref> [9] </ref> propose the use of deontic logics to specify integrity constraints for databases (i.e. databases as normative systems). The correspondence has been so tight that Lee refers to `deontic systems' [6].
References-found: 9

