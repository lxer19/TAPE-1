URL: http://www.cs.ucl.ac.uk/staff/S.Bhatti/papers/1995/isinm4/security/saleem-security-isinm-95.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/S.Bhatti/publications.html
Root-URL: http://www.cs.ucl.ac.uk
Email: saleem@cs.ucl.ac.uk, knight@cs.ucl.ac.uk  gurle@sophia.cnet.fr, rodier@sophia.cnet.fr  
Title: Secure remote management  
Author: S. N. Bhatti, G. Knight D. Gurle, P. Rodier 
Keyword: Network Management, Security Management, Distributed Systems Management.  
Note: and  
Address: College London, Gower Street, London WC1E 6BT, England, UK  905 Rue Albert Einstein, 06921 Sophia Antipolis Cedex, France  
Affiliation: Department of Computer Science, University  CNET, France Telecom,  
Abstract: Much of the network management technology today still centres around a remote monitoring approach. One would like to have a more intrusive management capability but in a large distributed system one must have confidence that management activities can not be subverted, whether by accident or by malicious intent. To achieve this goal, one requires the management applications to have security mechanisms that will prevent unprivileged users from altering the system accidentally but also, more importantly, to prevent possible attacks from a third party who may disrupt or misuse services. This paper describes some services and mechanisms with which the authors have experimented to allow secure remote management of a distributed system in a real service environment. Although there are many standards documents describing various security mechanisms, some aspects of these documents are not stable and in other cases we can not apply the mechanisms they describe due to restrictions in our development and deployment environment. In such cases we have had to make some adaptations. 
Abstract-found: 1
Intro-found: 1
Reference: [X.400, 1984] <author> CCITT Recommendation X.400, </author> <title> Message Handling Systems: System Model Service Elements, </title> <address> Geneva, </address> <year> 1984. </year>
Reference-contexts: Part of the motivation in the development of the security services described in this document is that they will be deployed in a real service environment, namely in the management of a large X.400 (84) <ref> [X.400, 1984] </ref> mail network. The mail network also uses a X.500 (88) [X.500, 1988] directory service.
Reference: [Rivest et al, 1978] <author> R. L. Rivest, A. Shamir, L. A. Adleman, </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems, </title> <journal> Communications of the ACM, </journal> <volume> number 21, volume 2, </volume> <pages> pages 120 - 126, </pages> <month> February </month> <year> 1978 </year>
Reference-contexts: This is of particular relevance to the work described in this document which is to be applied in an OSI environment. The ISO mechanisms rely on an infrastructure that uses the RSA system of Public Keys <ref> [Rivest et al, 1978] </ref> distributed by use of the X.500 directory service [X.500, 1988]. A set of standards that are still maturing but may be extremely important are the Generic Upper Layers Security (GULS) documents [GULS, 1992].
Reference: [X.500, 1988] <author> CCITT Recommendation X.500, </author> <title> The Directory Overview of Concepts, Models and Services, </title> <address> Geneva, </address> <month> March </month> <year> 1988. </year>
Reference-contexts: Part of the motivation in the development of the security services described in this document is that they will be deployed in a real service environment, namely in the management of a large X.400 (84) [X.400, 1984] mail network. The mail network also uses a X.500 (88) <ref> [X.500, 1988] </ref> directory service. There are two prime considerations: * Protecting existing security mechanisms If applications are to be controlled remotely then there is a danger that any security services native to the application may be undermined by a third party through subversion of the management exchange. <p> This is of particular relevance to the work described in this document which is to be applied in an OSI environment. The ISO mechanisms rely on an infrastructure that uses the RSA system of Public Keys [Rivest et al, 1978] distributed by use of the X.500 directory service <ref> [X.500, 1988] </ref>. A set of standards that are still maturing but may be extremely important are the Generic Upper Layers Security (GULS) documents [GULS, 1992]. The X.500 documents are stable and use of the infrastructures they describe has been successfully demonstrated in the PASSWORD project [Kirstein et al, 1992].
Reference: [X.509, 1988] <author> CCITT Recommendation X.509, </author> <title> The Directory Authentication Framework, </title> <address> Geneva, </address> <month> March </month> <year> 1988. </year>
Reference-contexts: There has been work from ISO and the ITU <ref> [X.509, 1988] </ref> [X.511, 1988] [X.800, 1991] [CD10183.2, 1992] which includes specific access control features for the purposes of management [CD10164-9, 1992]. This is of particular relevance to the work described in this document which is to be applied in an OSI environment. <p> It is feasible, for example, to use Public Key encryption in association establishment. With these considerations in mind, the following mechanisms and services were chosen: * authenticated associations To authenticate associations through the use of Public Key encryption using the RSA algorithm. This is the mechanism described in <ref> [X.509, 1988] </ref> and [X.511, 1988]. * integrity checks To add cryptographic checksums to all management PDUs calculated according to the MD5 [Rivest, 1992] algorithm. * sequence numbers To use a well-known sequence for the values of the invokeID in ROS PDUs [ROS, 1989]. * confidentiality To use secret key encryption in <p> We use the StrongCredentials syntax [X.511, 1988] for the user certificate and our own Session-Key syntax. (At moment, we use the SessionKey value for protecting PDUs only see note on the implementation of confidentiality later). We also use the ASN.1 macros SIGNED and ENCRYPTED <ref> [X.509, 1988] </ref>. The SessionCredential is sent in the userInfo parameter of CMIPUserInfo syntax (which is in turn passed to the peer as the user-information parameter of the AARQ PDU [ACSE, 1992]). <p> For each PDU sent, the integrity check is evaluated as follows: 1. Encode PDU using DER to produce byte stream The CMIP PDU is encoded using the Distinguished Encoding Rules (DER) <ref> [X.509, 1988] </ref> for ASN.1 to produce a byte stream B. DER ensures that the 'shortest' BER encoding is always used. 2.
Reference: [X.511, 1988] <author> CCITT Recommendation X.511, </author> <title> The Directory Abstract Service Definition, </title> <address> Geneva, </address> <month> March </month> <year> 1988. </year>
Reference-contexts: There has been work from ISO and the ITU [X.509, 1988] <ref> [X.511, 1988] </ref> [X.800, 1991] [CD10183.2, 1992] which includes specific access control features for the purposes of management [CD10164-9, 1992]. This is of particular relevance to the work described in this document which is to be applied in an OSI environment. <p> With these considerations in mind, the following mechanisms and services were chosen: * authenticated associations To authenticate associations through the use of Public Key encryption using the RSA algorithm. This is the mechanism described in [X.509, 1988] and <ref> [X.511, 1988] </ref>. * integrity checks To add cryptographic checksums to all management PDUs calculated according to the MD5 [Rivest, 1992] algorithm. * sequence numbers To use a well-known sequence for the values of the invokeID in ROS PDUs [ROS, 1989]. * confidentiality To use secret key encryption in the form of <p> It would have been more convenient to carry this information in the user certificate, but this is not possible due to the certificate's syntax. An ASN.1 syntax called SessionCredential is used to carry the information listed above. We use the StrongCredentials syntax <ref> [X.511, 1988] </ref> for the user certificate and our own Session-Key syntax. (At moment, we use the SessionKey value for protecting PDUs only see note on the implementation of confidentiality later). We also use the ASN.1 macros SIGNED and ENCRYPTED [X.509, 1988].
Reference: [X.800, 1991] <author> CCITT Recommendation X.800, </author> <title> Security Architecture for Open Systems Interconnection for CCITT Applications, </title> <address> Geneva, </address> <year> 1991 </year>
Reference-contexts: There has been work from ISO and the ITU [X.509, 1988] [X.511, 1988] <ref> [X.800, 1991] </ref> [CD10183.2, 1992] which includes specific access control features for the purposes of management [CD10164-9, 1992]. This is of particular relevance to the work described in this document which is to be applied in an OSI environment.
Reference: [CD10183.2, 1992] <author> ISO/IEC CD 10183.2, </author> <title> Information Technology Open Systems Interconnection Security Frameworks in Open Systems Part 3: Access Control, </title> <month> 16 June </month> <year> 1992. </year>
Reference-contexts: There has been work from ISO and the ITU [X.509, 1988] [X.511, 1988] [X.800, 1991] <ref> [CD10183.2, 1992] </ref> which includes specific access control features for the purposes of management [CD10164-9, 1992]. This is of particular relevance to the work described in this document which is to be applied in an OSI environment. <p> This relied on the use of DNs rather than labels, and has now been supplemented by an access control list scheme implemented by CNET. ISO has standardized in <ref> [CD10183.2, 1992] </ref>, generic access control models and procedures and in [CD10164-9, 1992] has applied these principles to OSI management. We use these documents and draw from [OMNIPoint016, 1992] to specify and implement our access control service based on an access control list (ACL) scheme.
Reference: [CD10164-9, 1992] <author> ISO/IEC CD 10164-9.3, </author> <title> Information Technology Open Systems Interconnection Systems Management Part 9: Objects and attributes for Access Control, </title> <address> Bore-hamwood, UK, </address> <month> December </month> <year> 1992. </year>
Reference-contexts: There has been work from ISO and the ITU [X.509, 1988] [X.511, 1988] [X.800, 1991] [CD10183.2, 1992] which includes specific access control features for the purposes of management <ref> [CD10164-9, 1992] </ref>. This is of particular relevance to the work described in this document which is to be applied in an OSI environment. <p> * sequence numbers To use a well-known sequence for the values of the invokeID in ROS PDUs [ROS, 1989]. * confidentiality To use secret key encryption in the form of the Data Encryption Standard (DES) [DES, 1988] for protecting confidential data. * access control To implement access control as per <ref> [CD10164-9, 1992] </ref>. Initial investigations of these mechanisms are reported in [Knight et al, 1994]. 3.1 Authenticated associations For providing mutual peer authentication, the communicating parties exchange credentials based on the X.509 authentication framework and syntaxes defined in the X.511 Directory protocol. <p> This relied on the use of DNs rather than labels, and has now been supplemented by an access control list scheme implemented by CNET. ISO has standardized in [CD10183.2, 1992], generic access control models and procedures and in <ref> [CD10164-9, 1992] </ref> has applied these principles to OSI management. We use these documents and draw from [OMNIPoint016, 1992] to specify and implement our access control service based on an access control list (ACL) scheme. <p> The MO is an abstract representation of a resource that is to be managed. OSI management essentially revolves around the remote manipulation of the attributes, actions and notifications of MOs. Our ACL based scheme is modeled according to the managed object classes defined in <ref> [CD10164-9, 1992] </ref>. As the policies are themselves realised as managed objects, the same CMIP operations can be used to control and manage the user selected policies. ACI is part of a policy and is expressed as the attributes of a MO. The policies are represented as a set of rules. <p> When expressing access control policy the user must state precisely the level of granularity that is required. Although <ref> [CD10164-9, 1992] </ref> allows very fine granularity we limit the access control to the coarsest granularity, applying it effectively to the association. The reasons for this are mainly concerned with performance and are discussed in [Knight et al, 1994].
Reference: [GULS, 1992] <author> ISO/IEC CD 11586, </author> <title> Information Technology Open Systems Interconnection - Generic Upper Layers Security, </title> <month> December </month> <year> 1992. </year>
Reference-contexts: A set of standards that are still maturing but may be extremely important are the Generic Upper Layers Security (GULS) documents <ref> [GULS, 1992] </ref>. The X.500 documents are stable and use of the infrastructures they describe has been successfully demonstrated in the PASSWORD project [Kirstein et al, 1992]. The ISO/ITU work documents on access control are not fully stable (in the final draft stages).
Reference: [Kirstein et al, 1992] <author> P. T. Kirstein, P. Williams, </author> <title> Piloting Authentication and Security Services Within OSI applications for R&D information (PASSWORD), </title> <institution> UCL Department of Computer Science, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: A set of standards that are still maturing but may be extremely important are the Generic Upper Layers Security (GULS) documents [GULS, 1992]. The X.500 documents are stable and use of the infrastructures they describe has been successfully demonstrated in the PASSWORD project <ref> [Kirstein et al, 1992] </ref>. The ISO/ITU work documents on access control are not fully stable (in the final draft stages). However, they contain mechanisms that were considered to be useful and will probably be present in the final standards, hence it was decided to proceed with their use.
Reference: [Case et al, 1993] <author> J. Case, K. McCloghrie, M. Rose, S. Waldbusser, </author> <title> Introduction to version 2 of the Internet-standard Network Management Framework, Internet RFC 1441, </title> <month> April </month> <year> 1993. </year>
Reference-contexts: In choosing mechanisms we have tried to follow the pattern which prevails in the OSI world but, at the same time, to borrow from the other work (such as that for SNMPv2 <ref> [Case et al, 1993] </ref>) which is geared particularly to the needs of management. The principle difference between OSI and SNMPv2 management services is that the OSI one establishes a long-term, reliable association whilst SNMPv2 does not.
Reference: [OMNIPoint016, 1992] <institution> Network Management Forum, Application Services: Security of Management, </institution> <address> OMNIPoint/NM-Forum 016, Bernardsville, NJ, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: ISO has standardized in [CD10183.2, 1992], generic access control models and procedures and in [CD10164-9, 1992] has applied these principles to OSI management. We use these documents and draw from <ref> [OMNIPoint016, 1992] </ref> to specify and implement our access control service based on an access control list (ACL) scheme. <p> In the context of OSI systems management, control of access to management information may be required in each of the following cases <ref> [OMNIPoint016, 1992] </ref>: * association establishment * request to perform a management operation * the forwarding of notifications as EventReports We describe hereafter access control as applied only to the first of these three. <p> Access control for EventReport emission is not applied for the reasons exposed in <ref> [OMNIPoint016, 1992] </ref>. Also, we separate the activities required to offer access control into OSI management activities involving operations upon management information that relate to access control, and operational activities which are specific to the access control mechanism which acts upon the access control information.
Reference: [Rivest, 1992] <author> R. Rivest, </author> <title> The MD5 Message-Digest Algorithm, Internet RFC 1321, </title> <month> 16 March </month> <year> 1992. </year>
Reference-contexts: This is the mechanism described in [X.509, 1988] and [X.511, 1988]. * integrity checks To add cryptographic checksums to all management PDUs calculated according to the MD5 <ref> [Rivest, 1992] </ref> algorithm. * sequence numbers To use a well-known sequence for the values of the invokeID in ROS PDUs [ROS, 1989]. * confidentiality To use secret key encryption in the form of the Data Encryption Standard (DES) [DES, 1988] for protecting confidential data. * access control To implement access control <p> Knowledge of the session key is required to generate the integrity checks for the CMIP PDUs. The session key information must be accessed by a separate 'sessionKey manager' function. * The MD5 algorithm and checksum generation The implementation of the MD5 algorithm is taken from RFC1321 <ref> [Rivest, 1992] </ref>. * Generating sequence numbers for an association Each of the two sequence number flows is generated by an 'ID-manager' function. Managing the session keys A new session key must be generated for each new association that is set up.
Reference: [ROS, 1989] <author> ISO/IEC 9072, </author> <title> Information processing systems Text Communication Remote Operations, </title> <year> 1989. </year>
Reference-contexts: This is the mechanism described in [X.509, 1988] and [X.511, 1988]. * integrity checks To add cryptographic checksums to all management PDUs calculated according to the MD5 [Rivest, 1992] algorithm. * sequence numbers To use a well-known sequence for the values of the invokeID in ROS PDUs <ref> [ROS, 1989] </ref>. * confidentiality To use secret key encryption in the form of the Data Encryption Standard (DES) [DES, 1988] for protecting confidential data. * access control To implement access control as per [CD10164-9, 1992].
Reference: [DES, 1988] <institution> National Institute of Standards and Technology, </institution> <note> Data Encryption Standard, FIPS Publication 46-1, </note> <month> January </month> <year> 1988. </year>
Reference-contexts: add cryptographic checksums to all management PDUs calculated according to the MD5 [Rivest, 1992] algorithm. * sequence numbers To use a well-known sequence for the values of the invokeID in ROS PDUs [ROS, 1989]. * confidentiality To use secret key encryption in the form of the Data Encryption Standard (DES) <ref> [DES, 1988] </ref> for protecting confidential data. * access control To implement access control as per [CD10164-9, 1992].
Reference: [Knight et al, 1994] <author> G. Knight, S. Bhatti, L. Deri, </author> <title> Secure Remote Management in the ESPRIT MIDAS project, </title> <booktitle> Proceedings of IFIP WG 6.5 International working Conference on Upper Layer Protocols, Architectures and Applications, </booktitle> <address> Barcelona, </address> <month> June </month> <year> 1994 </year>
Reference-contexts: The analysis behind our choices of security services and mechanisms is summarised in Section 2; a much fuller description of them is given in <ref> [Knight et al, 1994] </ref>. Section 3 discusses the mechanisms we used and some of the restrictions that affected our design decisions. <p> A discussion with respect to security threats that an application may be subject to, the requirements of the security services that are to be implemented, and the mechanisms that can be used to realise the services can be found in <ref> [Knight et al, 1994] </ref>. In this paper, we identify managed (server or agent) and managing (client or manager) roles for our applications, and we consider a third party that tries to subvert that exchange of information between remote entities in managed and managing roles. <p> Initial investigations of these mechanisms are reported in <ref> [Knight et al, 1994] </ref>. 3.1 Authenticated associations For providing mutual peer authentication, the communicating parties exchange credentials based on the X.509 authentication framework and syntaxes defined in the X.511 Directory protocol. <p> In the remainder of this paper we concentrate on the services which have been implemented; authentication, integrity and access control. 3.4 Access control Initially, the access control work at UCL used a mechanism based on security labels and is described in <ref> [Knight et al, 1994] </ref>. This relied on the use of DNs rather than labels, and has now been supplemented by an access control list scheme implemented by CNET. <p> Although [CD10164-9, 1992] allows very fine granularity we limit the access control to the coarsest granularity, applying it effectively to the association. The reasons for this are mainly concerned with performance and are discussed in <ref> [Knight et al, 1994] </ref>. Use of access control information We use the managed object class aclInitiators to store target-bound ACI. We use a DN that can be matched against the DN that was authenticated during association set-up.
Reference: [ACSE, 1992] <author> CCITT Recommendation X.227, </author> <title> Connection Oriented Protocol Specification for the Association Control Service Element, </title> <month> September </month> <year> 1992. </year>
Reference-contexts: We also use the ASN.1 macros SIGNED and ENCRYPTED [X.509, 1988]. The SessionCredential is sent in the userInfo parameter of CMIPUserInfo syntax (which is in turn passed to the peer as the user-information parameter of the AARQ PDU <ref> [ACSE, 1992] </ref>). Authenticating an association is a comparatively expensive operation since the RSA algorithm is complex and we must implement it in software; therefore we perform this authentication just once at association set-up time.
Reference: [CMIS, 1990] <author> ISO/IEC 9595, </author> <title> Information technology Open Systems Interconnection Common management information service definition, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Management applications use the OSI Common Management Information Service (CMIS) <ref> [CMIS, 1990] </ref> [CMIP, 1990]. 3 SECURITY MECHANISMS Many of the mechanisms which implement the security services we require are based on encryption techniques.
Reference: [CMIP, 1990] <author> ISO/IEC 9596, </author> <title> Information technology Open Systems Interconnection Common management information protocol specification, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Management applications use the OSI Common Management Information Service (CMIS) [CMIS, 1990] <ref> [CMIP, 1990] </ref>. 3 SECURITY MECHANISMS Many of the mechanisms which implement the security services we require are based on encryption techniques.
Reference: [OSISEC, 1993] <institution> UCL Department of Computer Science, </institution> <note> The OSI Security Package OSISEC User's Manual, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: The globalRules object can grant or deny permissions so with the granularity we have chosen for our access control, we have effectively an all-or-none approach to allowing access to the managed system. 4 DESCRIPTION OF IMPLEMENTATION Authentication services are provided by the OSISEC package <ref> [OSISEC, 1993] </ref>. The CMIP implementation is provided by the MSAP library that is part of the OSIMIS [OSIMIS, 1993] management platform. Upper layer OSI services are provided by the ISODE [ISODE, 1991] package. All these packages are implemented in C and C++, running under UNIX type operating systems.
Reference: [OSIMIS, 1993] <institution> UCL Department of Computer Science, </institution> <note> The OSI Management Information Service User's Manual, Version 1.0 for system version 3.0, </note> <month> February </month> <year> 1993. </year>
Reference-contexts: The CMIP implementation is provided by the MSAP library that is part of the OSIMIS <ref> [OSIMIS, 1993] </ref> management platform. Upper layer OSI services are provided by the ISODE [ISODE, 1991] package. All these packages are implemented in C and C++, running under UNIX type operating systems.

References-found: 21

