URL: ftp://ftp.cs.unc.edu/pub/users/jeffay/dissertations/stone-95/part2.ps.Z
Refering-URL: http://www.cs.unc.edu/~jeffay/students/stone-95/abstract.html
Root-URL: http://www.cs.unc.edu
Title: Chapter III Feasibility Analysis of YARTOS Task Systems  
Note: 3.1 Introduction  
Abstract: The workstation-based conferencing application described in Chapter 2 is subject to a number of timing constraints. One constraint arises from properties of the ActionMedia hardware: to prevent a newly acquired digitized video frame from being overwritten, the application must provide a new digitize buffer to the ActionMedia video subsystem within a well-defined interval (see page 32). Another timing constraint arises from the application requirements: if frames are to be played with acceptable display latency, then the delay experienced by a frame at the acquisition workstation and at the display workstation must be bounded. These constraints are typical in hard real-time systems for which the correctness of a system depends on the system adhering to timing constraints. One useful tool for designing, implementing, and analyzing hard real-time systems is the theory of deterministic scheduling and resource allocation as first developed by Liu and Layland [31]. Liu and Layland defined a formal model of real-time systems in which a real-time system consists of a set of tasks that must execute to completion prior to a deadline. A set of tasks is called feasible if there exists a scheduling discipline that always results in each task in the set executing to completion prior to its deadline. The authors propose two scheduling disciplines for their model; for each discipline they develop sufficient conditions for guaranteeing that a set of tasks scheduled under the discipline is feasible. I refer to these conditions as feasibility conditions and I refer to an algorithm for testing the conditions as a feasibility test. Feasibility is an important concept because the knowledge that tasks in a system will always execute to completion prior to a deadline can be an extremely useful tool for analyzing a real-time system. However, we may often wish to determine if processing performed by a collection of tasks adheres to timing constraints that are not easily expressed in terms of a single deadline. For example, can we show that the time required to process a video frame is bounded given that processing of a video frame is a 
Abstract-found: 1
Intro-found: 1
References-found: 0

