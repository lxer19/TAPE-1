URL: http://www.csl.sri.com/~qian/oakland96-gong.ps.gz
Refering-URL: http://www.csl.sri.com/~qian/early-pubs.html
Root-URL: 
Email: s.foley@cs.ucc.ie  fgong,qiang@csl.sri.com  
Title: A Security Model of Dynamic Labeling Providing a Tiered Approach to Verification  
Author: Simon N. Foley Li Gong and Xiaolei Qian 
Address: Cork, Ireland  Menlo Park, California 94025, USA  
Affiliation: Department of Computer Science University College  Computer Science Laboratory SRI International  
Abstract: In the proposed mandatory access control model, arbitrary label changing policies can be expressed. The relatively simple model can capture a wide variety of security policies, including high-water marks, downgrading, separation of duties, and Chinese Walls. The model forms the basis for a tiered approach to the formal development of secure systems, whereby security verification can be spread across what makes up the reference monitor and the security requirement specification. The advantage of this approach is that once a trusted computing base (TCB) is in place, reconfiguring it for different security requirements requires verification of just the new requirements. We illustrate the approach with a number of examples, including one policy that permits high-level subjects to make relabeling requests on low-level objects; the policy is multilevel secure. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. E. Bell and L. J. L. Padula. </author> <title> Secure computer system: unified exposition and MULTICS. </title> <type> Report ESD-TR-75-306, </type> <institution> The MITRE Corporation, </institution> <month> Mar. </month> <year> 1976. </year>
Reference-contexts: As with the Bell-LaPadula model <ref> [1] </ref>, we implicitly assume that an object does not change from state to state unless someone has write access to it. A transition operation is secure if any changes made to the security state conform to the relabeling policy.
Reference: [2] <author> E. Bertino, L. Mancini, and S. Jajodia. </author> <title> Collecting garbage in multilevel secure object stores. </title> <booktitle> In Proceedings Symposium on Security and Privacy, </booktitle> <pages> pages 106-120, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1994. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: The policy is developed at an abstract level, rather than in the low-level detail of the original implementation in <ref> [2] </ref>. The second policy is a multilevel Chinese Wall policy applied to users who are members of different groups. Both these policies can be verified as upgrade-from-below policies and thus can be enforced by any security kernel verified to support generic upgrade from-below-policies.
Reference: [3] <author> G. Birkoff. </author> <title> Lattice Theory, </title> <journal> volume XXV of American Mathematical Society Colloquium Publications. American Mathematical Society, </journal> <year> 1967. </year>
Reference-contexts: These are order-preserving mappings <ref> [3] </ref>, in the sense that given a; b 2 L, then a b , dae dbe , bac bbc. Thus the new lattice policy preserves the orderings of the base lattice in the sense that (a b) , (a; dae; bac) (b; dbe; bbc).
Reference: [4] <author> M. Branstad et al. </author> <title> Trusted mach design issues. </title> <booktitle> In Proceedings Third Aerospace Computer Security Conference, </booktitle> <year> 1987. </year>
Reference-contexts: an interval from the lattice, vmax (s) (view maximum) gives the highest class of information that the subject is trusted to read, and amin (s) (alter minimum) gives the lowest class of information the subject is permitted to write, that is, subjects may have partial trust in the sense of <ref> [4] </ref>. We have for every subject s : S that amin (s) vmax (s). Let V denote the set of all states. A subject can request that the system moves from one state to another, under a transition operation op.
Reference: [5] <author> S. Foley. </author> <title> Separation of duty using high water marks. </title> <booktitle> In Proceedings Computer Security Foundations Workshop, </booktitle> <address> Fran-conia, New Hampshire, June 1991. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: Other work has shown how constrained dynamic labeling policies can be used to capture specific security requirements. Examples are Chinese Wall policies [6, 13, 15] and segregation of duties <ref> [5] </ref>. Implicit in this work is some form of high water mark mechanism, whereby a subject's label classification rises to access requested information, thereby excluding access to other information. The reader is referred to [14] for a general introduction to, and discussion on, dynamic upgrading policies.
Reference: [6] <author> S. Foley. </author> <title> Aggregation and separation as noninterference properties. </title> <journal> Journal of Computer Security, </journal> <volume> 1(2), </volume> <year> 1992. </year>
Reference-contexts: Other work has shown how constrained dynamic labeling policies can be used to capture specific security requirements. Examples are Chinese Wall policies <ref> [6, 13, 15] </ref> and segregation of duties [5]. Implicit in this work is some form of high water mark mechanism, whereby a subject's label classification rises to access requested information, thereby excluding access to other information. <p> A simple example of this will be considered in Section 5. Some work already exists on noninterference models for particular dynamic labeling policies, including downgrading [17] and Chinese Walls <ref> [6] </ref>. Formulating general relabel policies in terms of noninterference is a topic for future research. 3. <p> This aspect of the security policy (determination of appropriate bindings for subjects) must also be specified as part of the configuration macros. 4.2. General Chinese Wall Policies A variety of approaches have been proposed for implementing Chinese Wall policies using multilevel techniques <ref> [13, 6, 15] </ref>. Implicit in these approaches is some form of high-water mark mechanism, whereby a subject's clearance rises to access organization information, if there is no conflict of interest. Here, we specify a very general relabeling policy that combines Chinese Wall, sensitivity levels and group membership. <p> Analyzing flow policies and macros for sanity checks, or that they meet some more abstract notion of security, is a topic for future research (one could use the definition of noninterference for aggregation and Chinese Walls from <ref> [6] </ref> on the macros). A simple analysis that can be done on the Chinese Wall policy is to check for upgrades requested from above.
Reference: [7] <author> S. Foley. </author> <title> Reasoning about confidentiality requirements. </title> <booktitle> In Proceedings Computer Security Foundations Workshop, </booktitle> <address> Franconia, NH, June 1994. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: Constructing the lattice and relabel policy, constructing configuration macros, and determining appropriate bindings is an arduous task. We should note that we used some of the techniques in <ref> [7] </ref> to help design the policies, but for reasons of space we cannot include a description here. We hope to report on these techniques at a later date. 5.
Reference: [8] <author> S. Foley, L. Gong, and X. Qian. </author> <title> A security model of dynamic labeling providing a tiered approach to verification. </title> <type> Technical Report SRI-CSL-95-15, </type> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA 94025, USA., </address> <year> 1995. </year>
Reference-contexts: with effective class a marked by either b, or by b and c, that is, (a; fa; b; c; dg; fbg) (b;fbg;fa;b;c;dg) (a; fa; b; c; dg; fb; cg) Proof that this policy and label equivalence relation forms a secure canonical upgrade policy is straightforward and can be found in <ref> [8] </ref>. 7. Conclusion We have described a security model for relabeling policies that provides the basis for a tiered approach to verification.
Reference: [9] <author> L. Gong and X. Qian. </author> <title> Enriching the expressive power of security labels. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 7(5) </volume> <pages> 839-841, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Existing models that can be interpreted as having the effect of supporting parameterized relabeling rules include McLean's MAC model [12] and the expressive labels proposed by Gong and Qian <ref> [9] </ref>. With the former, subjects may be given the right to arbitrarily modify particular object labels. In [9] information about future label changes may be encoded into an object's label by subjects. <p> Existing models that can be interpreted as having the effect of supporting parameterized relabeling rules include McLean's MAC model [12] and the expressive labels proposed by Gong and Qian <ref> [9] </ref>. With the former, subjects may be given the right to arbitrarily modify particular object labels. In [9] information about future label changes may be encoded into an object's label by subjects. It is this grouping together of lattice and relabel rules 1 into an abstract security policy that provides the basis for our tiered approach to security verification. <p> A mark-for-upgrade scheme, defined here, that will work for any base policy, and provides upgrade paths similar to those provided by the t operator in <ref> [9] </ref>. Our approach to policy specification is to represent all classes, of information in the system as a datatype. It is in terms of this datatype that the flow relation and relabeling policies are defined. <p> Our approach permits rules about relabeling to be abstractly specified as part of the (easier to reason about) security policy. That such low-level policy details as relabeling could be specified and enforced at an abstract level was proposed by Gong and Qian in <ref> [9] </ref>. Our model generalizes this work: Section 4.1 illustrates how the effect of the t operator can be captured as an upgrade-from-below security policy. The base model proposed in Section 2 does not consider covert channels.
Reference: [10] <author> J. Haigh, R. O'Brien, P. Stachour, and D. Toups. </author> <title> The LDV approach to database security. In Research Directions in Database Security III. </title> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: Meadows [14] notes that the authors of <ref> [10] </ref> believe that such channels are too slow to be harmful; however, they fear that the channel may be harmful if the denial is allowed to be temporary, since the high-level subject could then cause denial of access to the same object over and over again.
Reference: [11] <author> C. Harrold. </author> <title> The Terry-Wiseman security policy model and examples of its use. </title> <type> Technical Report 90001, </type> <institution> Defense Research Agency, </institution> <address> St. Andrew's Road, Malvern, U.K., </address> <year> 1990. </year>
Reference-contexts: Further examples of constraining relabeling include the Compartmented Mode Workstation [20] and SERCUS <ref> [11] </ref>, a secure document-handling system where drafts and private documents can have dynamic labels, but once made public they become static. Other work has shown how constrained dynamic labeling policies can be used to capture specific security requirements.
Reference: [12] <author> J. McLean. </author> <title> The algebra of security. </title> <booktitle> In Proceedings 1988 IEEE Symposium on Security and Privacy. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1988. </year>
Reference-contexts: Existing models that can be interpreted as having the effect of supporting parameterized relabeling rules include McLean's MAC model <ref> [12] </ref> and the expressive labels proposed by Gong and Qian [9]. With the former, subjects may be given the right to arbitrarily modify particular object labels. In [9] information about future label changes may be encoded into an object's label by subjects.
Reference: [13] <author> C. Meadows. </author> <title> Extending the Brewer Nash model to a multilevel context. </title> <booktitle> In Proceedings Symposium on Security and Privacy, </booktitle> <address> Oakland, CA, 1990. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: Other work has shown how constrained dynamic labeling policies can be used to capture specific security requirements. Examples are Chinese Wall policies <ref> [6, 13, 15] </ref> and segregation of duties [5]. Implicit in this work is some form of high water mark mechanism, whereby a subject's label classification rises to access requested information, thereby excluding access to other information. <p> This aspect of the security policy (determination of appropriate bindings for subjects) must also be specified as part of the configuration macros. 4.2. General Chinese Wall Policies A variety of approaches have been proposed for implementing Chinese Wall policies using multilevel techniques <ref> [13, 6, 15] </ref>. Implicit in these approaches is some form of high-water mark mechanism, whereby a subject's clearance rises to access organization information, if there is no conflict of interest. Here, we specify a very general relabeling policy that combines Chinese Wall, sensitivity levels and group membership.
Reference: [14] <author> C. Meadows. </author> <title> Policies for dynamic upgrading. In Database Security: Status and Prospects, IV. </title> <publisher> North Holland, </publisher> <year> 1991. </year>
Reference-contexts: Examples are Chinese Wall policies [6, 13, 15] and segregation of duties [5]. Implicit in this work is some form of high water mark mechanism, whereby a subject's label classification rises to access requested information, thereby excluding access to other information. The reader is referred to <ref> [14] </ref> for a general introduction to, and discussion on, dynamic upgrading policies. We propose a general security model for dynamic label changing. The relatively simple model is of Bell-LaPadula style and can capture all the policies mentioned above. <p> The function GrpAccess specifies upgrades from above and thus is a source of a covert channel: a high-level subject can signal down to a low-level subject by choosing to either consult, or not, for a given organization (and affecting the Chinese Wall around the group). Meadows <ref> [14] </ref> notes that the authors of [10] believe that such channels are too slow to be harmful; however, they fear that the channel may be harmful if the denial is allowed to be temporary, since the high-level subject could then cause denial of access to the same object over and over <p> Our model generalizes this work: Section 4.1 illustrates how the effect of the t operator can be captured as an upgrade-from-below security policy. The base model proposed in Section 2 does not consider covert channels. But given its easily recognizable MAC origins we make the same observation as Meadows <ref> [14] </ref>, The Bell-LaPadula model also does not capture covert channels, and this is actually considered an advantage by many, since it allows one to model a system in its broad outlines and attend to the details later.
Reference: [15] <author> R. Sandhu. </author> <title> Lattice based access control models. </title> <journal> IEEE Computer, </journal> <volume> 26(11) </volume> <pages> 9-19, </pages> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Other work has shown how constrained dynamic labeling policies can be used to capture specific security requirements. Examples are Chinese Wall policies <ref> [6, 13, 15] </ref> and segregation of duties [5]. Implicit in this work is some form of high water mark mechanism, whereby a subject's label classification rises to access requested information, thereby excluding access to other information. <p> This aspect of the security policy (determination of appropriate bindings for subjects) must also be specified as part of the configuration macros. 4.2. General Chinese Wall Policies A variety of approaches have been proposed for implementing Chinese Wall policies using multilevel techniques <ref> [13, 6, 15] </ref>. Implicit in these approaches is some form of high-water mark mechanism, whereby a subject's clearance rises to access organization information, if there is no conflict of interest. Here, we specify a very general relabeling policy that combines Chinese Wall, sensitivity levels and group membership.
Reference: [16] <author> R. Sandhu and S. Jajodia. </author> <title> Honest databases that can keep secrets. </title> <booktitle> In Proceedings of the 14th National Computer Security Conference, </booktitle> <address> Washington, DC, </address> <year> 1991. </year>
Reference-contexts: Department of Defense Advanced Research Projects Agency and the U.S. Air Force Rome Laboratory under contract F30602-94-C-0198, and in part by the U.S. National Science Foundation under grant ECS-94-22688. is constrained. A widely used strategy is to permit only upgrades from below. For example, in <ref> [19, 16] </ref>, requests to upgrade the label of an object may be done only if the classification of the subject is dominated by the current classification of the object; label changes may be based only on information that may already flow to the label classification. <p> Then 8 s : dom f * (8 a : dom (f (s)) * s a f (s)(a)) Providing secure system support for such policies is (relatively) straightforward to implement and examples can be found in <ref> [16, 19] </ref>. However, security policies may require upgrades from above. Consider the mark-for-upgrade policy. Suppose that objects are marked (for upgrading), when a high-level subject (read) accesses the object, where reading an object is interpreted as a desire for future access.
Reference: [17] <author> I. Sutherland, S. Perlo, and R. Varadarajan. </author> <title> Deducibility security with dynamic level assignments. </title> <booktitle> In Computer Security Foundations Workshop 2, </booktitle> <address> Franconia, NH, U.S.A., June 1989. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: A simple example of this will be considered in Section 5. Some work already exists on noninterference models for particular dynamic labeling policies, including downgrading <ref> [17] </ref> and Chinese Walls [6]. Formulating general relabel policies in terms of noninterference is a topic for future research. 3.
Reference: [18] <author> C. Weissman. </author> <title> Security controls in the ADEPT-50 timesharing system. </title> <booktitle> In AFIPS Conference Proceedings, </booktitle> <volume> volume 35, </volume> <pages> pages 119-133. FJCC, </pages> <year> 1969. </year>
Reference-contexts: 1. Introduction Information-flow policy models that support dynamic labeling, where information labels can change in time, have been shown to capture a greater variety of security requirements than can models where labeling is static. One of the earliest examples of a system supporting dynamic labeling is ADEPT-50 <ref> [18] </ref>, where an object's label can rise to reflect the classification of the data written to it by a subject. It is well known that label changes can often be exploited for covert channels.
Reference: [19] <author> S. Wiseman. </author> <title> On the problem of security in databases. In Database Security III: Status and Prospects. </title> <publisher> Springer, </publisher> <year> 1989. </year>
Reference-contexts: Department of Defense Advanced Research Projects Agency and the U.S. Air Force Rome Laboratory under contract F30602-94-C-0198, and in part by the U.S. National Science Foundation under grant ECS-94-22688. is constrained. A widely used strategy is to permit only upgrades from below. For example, in <ref> [19, 16] </ref>, requests to upgrade the label of an object may be done only if the classification of the subject is dominated by the current classification of the object; label changes may be based only on information that may already flow to the label classification. <p> Then 8 s : dom f * (8 a : dom (f (s)) * s a f (s)(a)) Providing secure system support for such policies is (relatively) straightforward to implement and examples can be found in <ref> [16, 19] </ref>. However, security policies may require upgrades from above. Consider the mark-for-upgrade policy. Suppose that objects are marked (for upgrading), when a high-level subject (read) accesses the object, where reading an object is interpreted as a desire for future access.
Reference: [20] <author> J. Woodward. </author> <title> Exploiting the dual nature of sensitivity labels. </title> <booktitle> In Proceedings Symposium on Security and Privacy, </booktitle> <pages> pages 23-30, </pages> <address> Oakland, CA, </address> <month> Apr. </month> <year> 1987. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: Further examples of constraining relabeling include the Compartmented Mode Workstation <ref> [20] </ref> and SERCUS [11], a secure document-handling system where drafts and private documents can have dynamic labels, but once made public they become static. Other work has shown how constrained dynamic labeling policies can be used to capture specific security requirements.
References-found: 20

