URL: ftp://ftp.ai.mit.edu/pub/users/jpratt/hex_paper.ps.Z
Refering-URL: http://www.leglab.ai.mit.edu/leglab/robots/Spring_Flamingo/Spring_Flamingo.html
Root-URL: 
Title: Virtual Actuator Control proposed control method. The virtual actuators allowed textbook control solutions to be
Author: Jerry Pratt, Ann Torres, Peter Dilworth, Gill Pratt 
Web: http://www.ai.mit.edu/projects/leglab/  
Address: Cambridge, MA 02139  
Affiliation: MIT Leg Laboratory,  
Note: In Proceedings of the 1996 International Conference on Intelligent Robots and Systems (IROS '96)  A simulated hexapod robot was developed to test the  
Abstract: Robots typically have an individual actuator at each joint which can result in a non-intuitive and difficult control problem. In this paper we present a control method in which the real joint actuators are used to mimic virtual actuators which can be more intuitive and hence make the control problem more straightforward. Our virtual actuator control method requires a solution to the force distribution problem when applied to parallel mechanisms. An extension of Gardner's Partitioned Actuator Set Control method is presented. This extended method allows for dealing with constrained degrees of freedom in which the torque cannot be specified but can be measured. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> John J. Craig. </author> <title> Introduction to Robotics: Mechanics and Control. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The best tools for determining how to attach the virtual actuator's frames is physical intuition, insight, and experience. 2.2 Deriving the Forward Kinematics Computing the forward kinematic map, A B ~ X, is well documented <ref> [1] </ref>. For any serial manipulator with rev olute and prismatic joints, A B ~ X will be a closed form function of the joint angles and prismatic displace ments, ~ fi, lying between frames fAg and fBg. <p> There are several techniques to compute the Jaco-bian for the 3D case <ref> [6, 1] </ref>. <p> There are several techniques to compute the Jaco-bian for the 3D case [6, 1]. One method described in <ref> [1] </ref> is to recursively compute the joint to cartesian velocity relationship (Equation 3) and extract the Ja cobian Matrix. 2.4 Computing the Joint Torques To compute the joint torques which will successfully emulate the virtual actuator, we use the following equation ~t = A B where ~t is the vector of <p> The generalized force vector will typically consist of a force and moment vector. Equation 5 can be derived starting from the energy balance ~t T ffi ~ fi = ~ F T ffi ~ X <ref> [1] </ref>. It requires that the generalized forces which act on action frame fBg be specified in terms of reaction frame fAg. <p> The Jacobian from the reaction frame to the action frame for a given leg, B ( A i B J ) is determined via an iterative computation of the joint velocity to cartesian velocity mapping, as described in <ref> [1] </ref>.
Reference: [2] <author> J. F. Gardner. </author> <title> Force distribution in walking machines over rough terrain. </title> <journal> J. of Dynamic Systems, Measurement and Control, </journal> <volume> 113 </volume> <pages> 754-758, </pages> <year> 1991. </year>
Reference-contexts: This method is useful for controlling multi-legged creatures or multi-manipulator work cells. Such systems require a solution to the force distribution problem. We present a solution which is an extension to Gardner's Partitioned Actuator Set Control Technique (PASC) <ref> [2, 3] </ref>. Our solution allows for the incorporation of actuator constraints such as unactuated degrees of freedom or degrees of freedom in which the torque cannot be commanded but can still be measured or inferred. We have applied the virtual actuator technique to a simulated hexapod robot. <p> We show here a method for taking advantage of the structure of the constraint matrix, K, in order to reduce computational requirements. The method is an extension of Gardners's Partitioned Actuator Set Control Technique <ref> [3, 2] </ref>. Gardner partitions the actuators into a Minimum Actuator Set (MAS) and a Redundant Actuator Set (RAS). We stress here that we are not dealing with actuators at this level but rather virtual force distribution. Therefore we specify the Minimum Force Set (MFS) and the Redundant Force Set (RFS).
Reference: [3] <author> J. F. Gardner, K. Srinivasan, and K. J. Waldron. </author> <title> A solution for the force distribution problem in redundantly actuated closed kinematic chains. </title> <journal> J. of Dynamic Systems, Measurement and Control, </journal> <volume> 112 </volume> <pages> 523-526, </pages> <year> 1990. </year>
Reference-contexts: This method is useful for controlling multi-legged creatures or multi-manipulator work cells. Such systems require a solution to the force distribution problem. We present a solution which is an extension to Gardner's Partitioned Actuator Set Control Technique (PASC) <ref> [2, 3] </ref>. Our solution allows for the incorporation of actuator constraints such as unactuated degrees of freedom or degrees of freedom in which the torque cannot be commanded but can still be measured or inferred. We have applied the virtual actuator technique to a simulated hexapod robot. <p> We show here a method for taking advantage of the structure of the constraint matrix, K, in order to reduce computational requirements. The method is an extension of Gardners's Partitioned Actuator Set Control Technique <ref> [3, 2] </ref>. Gardner partitions the actuators into a Minimum Actuator Set (MAS) and a Redundant Actuator Set (RAS). We stress here that we are not dealing with actuators at this level but rather virtual force distribution. Therefore we specify the Minimum Force Set (MFS) and the Redundant Force Set (RFS). <p> We could stop here and invert the new dpfi dp matrix, if it were computationally feasible. In order to further reduce the size of the matrix, we can eliminate the Redundant Force Set (RFS) by specifying our design constraints in a proper manner. Similar to <ref> [3] </ref>, we specify the Redundant Force Set, f r , in terms of the Minimum Force Set, f m . f r r = c r B rfin f m n (16) where f r is the Redundant Force Set, f m is the Minimum Force Set, c is a vector
Reference: [4] <author> N. Hogan. </author> <title> Impeadance control: An approach to manipulation: Part i theory, part ii implementation, part iii - applications. </title> <journal> J. of Dynamic Systems, Measurement and Control, </journal> <volume> 107 </volume> <pages> 1-24, </pages> <year> 1985. </year> <title> and balanced a pendulum. The first displays the angle of the pendulum. The second displays the actual velocity of the hexa-pod in the x direction with the desired velocity indicated by the dashed line. The third graph shows the resultant virtual x force due to the virtual components. The final graph shows the steady, periodic nature of the walking cycle. </title>
Reference: [5] <author> O. Khatib. </author> <title> A unified approach for motion and force control of robot manipulators: the operational space formulation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 3(1) </volume> <pages> 43-53, </pages> <year> 1987. </year>
Reference: [6] <author> David E. Orin and W.W. Schrader. </author> <title> Efficient jacobian determination for robot manipulators. </title> <booktitle> Robotics Research: The First International Symposium, </booktitle> <year> 1984. </year>
Reference-contexts: There are several techniques to compute the Jaco-bian for the 3D case <ref> [6, 1] </ref>.
Reference: [7] <author> Gill A. Pratt and Matthew M. Williamson. </author> <title> Series elastic actuators. </title> <booktitle> IEEE International Conference on Intelligent Robots and Systems, </booktitle> <volume> 1 </volume> <pages> 399-406, </pages> <year> 1995. </year>
Reference: [8] <author> Jerry E. Pratt. </author> <title> Virtual model control of a biped walking robot. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: Virtual Actuator Control was applied to the hexapod in order to make it perform a simple walking algorithm as detailed by Torres [14]. Virtual actuators were used to emulate simple linear spring and damper virtual components (i.e. cartesian PD controllers) <ref> [8] </ref>. Movements in the z, roll, and pitch directions were position controlled to a constant desired value using a virtual spring-damper system. A virtual damper was used in the x, y, and yaw directions in order to velocity control the movements in these directions.
Reference: [9] <author> Robert Ringrose. </author> <title> The creature library. Unpublished reference guide to a C library used to create physically realistic simulations, </title> <year> 1992. </year>
Reference-contexts: We now have a relatively small set of equations for coordinating three legs of a hexapod robot. 4 Hexapod Simulation A hexapod robot was created using simulation software which emulates physically based dynamics <ref> [9] </ref>. The simulated hexapod has a mass of approximately 3.8kg, is 45cm in length, and stands 15cm tall. Virtual Actuator Control was applied to the hexapod in order to make it perform a simple walking algorithm as detailed by Torres [14].
Reference: [10] <author> K. Salisbury. </author> <title> Active stiffness control of a manipulator in cartesian coordinates. </title> <booktitle> 19th IEEE Conference on Decision and Control, </booktitle> <pages> pages 83-88, </pages> <month> Dec. </month> <year> 1980. </year>
Reference: [11] <author> Shin-Min Song and Kenneth J. Waldron. </author> <title> Machines That Walk. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA., </address> <year> 1989. </year>
Reference: [12] <author> Gilbert Strang. </author> <title> Introduction to Linear Algebra. </title> <publisher> Wellesley-Cambridge Press, </publisher> <address> Wellesley, MA., </address> <year> 1993. </year>
Reference: [13] <author> C. Sunada, D. Argaez, S. Dubowsky, and C. Mavroidis. </author> <title> A coordinated jacobian transpose control for mobile multi-limbed robotic systems. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <pages> pages 1910-1915, </pages> <year> 1994. </year>
Reference: [14] <author> Ann L. Torres. </author> <title> Implementation of virtual model control on a walking hexapod. </title> <month> May </month> <year> 1996. </year> <type> Undergraduate Thesis, </type> <institution> Massachusetts Institute of Technology. </institution>
Reference-contexts: The simulated hexapod has a mass of approximately 3.8kg, is 45cm in length, and stands 15cm tall. Virtual Actuator Control was applied to the hexapod in order to make it perform a simple walking algorithm as detailed by Torres <ref> [14] </ref>. Virtual actuators were used to emulate simple linear spring and damper virtual components (i.e. cartesian PD controllers) [8]. Movements in the z, roll, and pitch directions were position controlled to a constant desired value using a virtual spring-damper system.
References-found: 14

