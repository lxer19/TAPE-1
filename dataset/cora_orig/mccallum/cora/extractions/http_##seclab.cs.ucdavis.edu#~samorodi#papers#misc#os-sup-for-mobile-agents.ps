URL: http://seclab.cs.ucdavis.edu/~samorodi/papers/misc/os-sup-for-mobile-agents.ps
Refering-URL: http://seclab.cs.ucdavis.edu/~samorodi/papers/misc/
Root-URL: http://www.cs.ucdavis.edu
Title: Operating System Support for Mobile Agents Position paper for 5th IEEE Workshop on Hot Topics
Author: Dag Johansen Robbert van Renesse Fred B. Schneider 
Abstract-found: 0
Intro-found: 1
Reference: [C92] <author> Chaum, D. </author> <title> Achieving Electronic Privacy. </title> <booktitle> Scientific American 267,2 (Aug 1992), </booktitle> <pages> 96-101. </pages>
Reference-contexts: One agent could then transfer money to another by invoking an operation provided by this trusted agent. We must reject solutions based on indirection because they necessarily violate our untraceability requirement for funds transfers. Following <ref> [C92] </ref>, the solution we adopted was to implement each unit of electronic cash (ECU) as a record containing an amount and a large random number. Only certain of these random numbers appear on the records for valid ECUs. Each agent stores records for the ECUs it owns.
Reference: [J93] <author> Johansen, Dag. StormCast: </author> <title> Yet another exercise in distributed computing. Distributed Open Systems F.M.T. </title> <editor> Brazier and D. Johansen, eds. </editor> <publisher> IEEE Computer Society Press, </publisher> <address> California (Oct 1993), </address> <pages> 152-174. </pages>
Reference-contexts: To evaluate the metaphor we are using our prototype to construct a variety of distributed applications. First, we are reimplementing StormCast <ref> [J93] </ref>, which uses a set of expert systems to predict severe storms in the Arctic based on weather data obtained from a distributed network of sensors. Second, we have started to build an interactive mail system where messages are implemented by agents.
Reference: [O94] <author> Ousterhout, John K. </author> <title> Tcl and the Tk Toolkit Addison Wesley, </title> <address> Reading, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: The TACOMA project (Tromso/ And COrnell Moving Agents) has, instead, focused on operating system support for agents and how agents can be used to solve problems traditionally addressed by operating systems. We have implemented prototype systems to support agents using UNIX and using Tcl/Tk <ref> [O94] </ref> on top of Horus [vRHB94]. hhhhhhhhhhhhhhhhhhhhhhhhhhhhh * Department of Computer Science, University of Tromso/ , N-9037 Tromso/ , Norway. Johansen is supported by grant No. 100413/410 from the Norwegian Science Foundation. ** Department of Computer Science, Cornell University, Ithaca, New York 14853, U.S.A. <p> The details of implementing rear guards efficiently are complex, because the sites traversed by an agent computation may be cyclic and because a single agent may clone itself and fan out through a network. 6. Prototype Implementations Our most recent version of TACOMA is based on Tcl <ref> [O94] </ref>. Each site in our system runs a Tcl interpreter, which provides the place where agents execute. An agent is implemented by a Tcl procedure; the text of the procedure is stored in the agent's CODE folder. Folders, briefcases, and file cabinets are Tcl data structures.
Reference: [R94] <author> Riecken, D. </author> <title> (guest editor). Intelligent Agents. </title> <journal> Commun. of the ACM 37,7 (July 1994), </journal> <pages> 19-21. </pages>
Reference-contexts: Most current research on agents has focused on language design (e.g. [W94]) and application issues (e.g. <ref> [R94] </ref>). The TACOMA project (Tromso/ And COrnell Moving Agents) has, instead, focused on operating system support for agents and how agents can be used to solve problems traditionally addressed by operating systems.
Reference: [vRHB94] <author> Van Renesse, Robbert, Takako M. Hickey, and Kenneth P. Birman. </author> <title> Design and Performance of Horus: A Lightweight Group Communications System. </title> <type> Technical Report TR 94-1442, </type> <institution> Department of Computer Science, Cornell University, </institution> <month> Aug </month> <year> 1994. </year>
Reference-contexts: The TACOMA project (Tromso/ And COrnell Moving Agents) has, instead, focused on operating system support for agents and how agents can be used to solve problems traditionally addressed by operating systems. We have implemented prototype systems to support agents using UNIX and using Tcl/Tk [O94] on top of Horus <ref> [vRHB94] </ref>. hhhhhhhhhhhhhhhhhhhhhhhhhhhhh * Department of Computer Science, University of Tromso/ , N-9037 Tromso/ , Norway. Johansen is supported by grant No. 100413/410 from the Norwegian Science Foundation. ** Department of Computer Science, Cornell University, Ithaca, New York 14853, U.S.A. Van Renesse is supported by ARPA/ONR grant N00014-92-J-1866. <p> The second uses Tcl/TCP, an extension to Tcl that allows Tcl processes to set up TCP communication channels. We are now completing a third implementation based on Tcl/Horus, a version of Tcl that uses Horus -5 <ref> [vRHB94] </ref> to support group communication and fault-tolerance. In our first prototype of TACOMA, we implemented the electronic cash of section 3. The implementation used the security mechanisms provided by UNIX; this simplified our implementation, but relies on UNIX for security. We are now investigating alternatives.
Reference: [W94] <author> White, </author> <title> J.E. Telescript Technology: The Foundation for the Electronic Marketplace. General Magic White Paper, </title> <publisher> General Magic Inc., </publisher> <year> 1994. </year> <month> -6 </month>
Reference-contexts: Most current research on agents has focused on language design (e.g. <ref> [W94] </ref>) and application issues (e.g. [R94]). The TACOMA project (Tromso/ And COrnell Moving Agents) has, instead, focused on operating system support for agents and how agents can be used to solve problems traditionally addressed by operating systems. <p> Obtaining and Paying for Services Once agents are employed for commerceas some proponents <ref> [W94] </ref> of the metaphor intendsupport for a negotiable instrument becomes necessary. We, therefore, decided to explore the implementation and use of electronic cash. Electronic cash is nothing more than an unforgeable and untraceable capability that enables its owner to obtain goods and services.
References-found: 6

