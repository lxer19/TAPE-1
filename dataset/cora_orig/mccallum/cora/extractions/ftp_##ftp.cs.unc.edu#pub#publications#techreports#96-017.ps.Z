URL: ftp://ftp.cs.unc.edu/pub/publications/techreports/96-017.ps.Z
Refering-URL: ftp://ftp.cs.unc.edu/pub/publications/techreports/FILE.html
Root-URL: http://www.cs.unc.edu
Email: fcohenj,weberh,manocha,turk,brooks,wrightg@cs.unc.edu  varshney@cs.sunysb.edu  pankaj@cs.duke.edu  
Title: Simplification Envelopes technique providing guaranteed error bounds for genus-preserving simplification Automation of both simplification process
Author: Jonathan Cohen Amitabh Varshney Dinesh Manocha Greg Turk Hans Weber Pankaj Agarwal Frederick Brooks William Wright 
Keyword: CR Categories and Subject Descriptors: I.3.3 [Computer Graphics]: Picture/Image Generation Display algorithms; I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling Curve, surface, solid, and object representations. Additional Key Words and Phrases: hierarchical approximation, model simplification, levels-of-detail generation, shape approximation, geometric modeling, offsets.  
Address: Chapel Hill, NC 27599-3175.  New York, Stony Brook, NY 11794-4400.  Durham, NC 27708-0129.  
Affiliation: Department of Computer Science, University of North Carolina,  Department of Computer Science, State University of  Department of Computer Science, Duke University,  
Note: General  model  
Abstract: We propose the idea of simplification envelopes for generating a hierarchy of level-of-detail approximations for a given polygonal model. Our approach guarantees that all points of an approximation are within a user-specifiable distance * from the original model and all points of the original model are within a distance * from the approximation. Simplification envelopes provide a general framework within which a large collection of existing simplification algorithms can run. We demonstrate this technique in conjunction with two algorithms, one global, the other local. The global algorithm provides a method to compute an estimate of the quality (output size) of its approximations with respect to the optimal approximation satisfying the same constraints. The local algorithm provides a fast method for generating approximations to large input meshes (at least hundreds of thousands of triangles). Each approximation attempts to minimize the total number of polygons required to satisfy the above * constraint. The key advantages of our approach are: 
Abstract-found: 1
Intro-found: 1
Reference: [AS94] <author> P. Agarwal and S. Suri. </author> <title> Surface approximation and geometric partitions. </title> <booktitle> In Proceedings Fifth Symposium on Discrete Algorithms, </booktitle> <pages> pages 24-33, </pages> <year> 1994. </year>
Reference-contexts: This wavelet approach preserves global topology. In computational geometry, it has been shown that computing the minimal-facet *-approximation is NP-hard for both convex polytopes [DJ90] and polyhedral terrains <ref> [AS94] </ref>. Thus, algorithms to solve these problems have evolved around finding polynomial-time approximations that are close to the optimal. Let k o be the size of a min-# approximation. <p> In [BG94] 3 Bronnimann and Goodrich observed that a variant of Clarkson's algorithm yields a polynomial-time deterministic algorithm that computes an approximation of size O (k 0 ). Working with polyhedral terrains, <ref> [AS94] </ref> present a polynomial-time algorithm that computes an *-approximation of size O (k o log k o ) to a polyhedral terrain.
Reference: [BG94] <author> H. Bronnimann and M. Goodrich. </author> <title> Almost optimal set covers in finite VC-dimension. </title> <booktitle> In Proceedings Tenth ACM Symposium on Computational Geometry, </booktitle> <pages> pages 293-302, </pages> <year> 1994. </year> <month> 15 </month>
Reference-contexts: In <ref> [BG94] </ref> 3 Bronnimann and Goodrich observed that a variant of Clarkson's algorithm yields a polynomial-time deterministic algorithm that computes an approximation of size O (k 0 ).
Reference: [Cla93] <author> K. L. Clarkson. </author> <title> Algorithms for polytope covering and approximation. </title> <booktitle> In Proc. 3rd Workshop Algo--rithms Data Struct., Lecture Notes in Computer Science, </booktitle> <year> 1993. </year>
Reference-contexts: Let k o be the size of a min-# approximation. An algorithm has been given in [MS92] for computing an *- approximation of size O (k o log n) for convex polytopes. This has recently been improved by Clarkson in <ref> [Cla93] </ref>; he proposes a randomized algorithm for computing an approximation of size O (k o log k o ) in expected time O (k o n 1+ffi ) for any ffi &gt; 0 (the constant of proportionality depends on ffi, and tends to +1 as ffi tends to 0). <p> So a validity test involves testing a candidate triangle for intersections with the envelopes. We can perform such tests efficiently using a space-partitioning data structure such as an octree. 5.2 Global Algorithm This algorithm extends the algorithm presented in <ref> [Cla93] </ref> to non-convex surfaces. Our major contribution is the use of simplification envelopes to bound the error on a non-convex polygonal surface and the use of fundamental prisms to provide a generalized projection mechanism for testing for regions of multiple covering (overlaps).
Reference: [CS81] <author> M. Cosman and R. Schumacker. </author> <title> System strategies to optimize CIG image content. </title> <booktitle> In Proceedings of the Image II Conference, </booktitle> <address> Scottsdale, Arizona, </address> <month> June 10-12 </month> <year> 1981. </year>
Reference-contexts: These hierarchical representations of an object can be used in several ways in computer graphics. Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates <ref> [CS81, FS93] </ref>. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95]. * Using low-detail approximations of objects for illumination algorithms, especially radiosity
Reference: [DJ90] <author> G. Das and D. Joseph. </author> <title> The complexity of minimum convex nested polyhedra. </title> <booktitle> In Proc. 2nd Canad. Conf. Comput. Geom., </booktitle> <pages> pages 296-301, </pages> <year> 1990. </year>
Reference-contexts: This wavelet approach preserves global topology. In computational geometry, it has been shown that computing the minimal-facet *-approximation is NP-hard for both convex polytopes <ref> [DJ90] </ref> and polyhedral terrains [AS94]. Thus, algorithms to solve these problems have evolved around finding polynomial-time approximations that are close to the optimal. Let k o be the size of a min-# approximation.
Reference: [DLW93] <author> T. D. DeRose, M. Lounsbery, and J. Warren. </author> <title> Multiresolution analysis for surface of arbitrary topological type. </title> <type> Report 93-10-05, </type> <institution> Department of Computer Science, University of Washington, </institution> <address> Seattle, WA, </address> <year> 1993. </year>
Reference-contexts: An interesting and elegant solution to the problem of polygonal simplification by using wavelets has been presented in <ref> [DLW93, EDD + 95] </ref> where arbitrary polygonal meshes are first subdivided into patches with subdivision connectivity and then multiresolution wavelet analysis is used over each patch. This wavelet approach preserves global topology. <p> Additionally, we can simplify bordered meshes and meshes with holes. In terms of direct comparison with the global topology preserving approach presented in <ref> [DLW93, EDD + 95] </ref>, for a given * our algorithm has been empirically able to obtain "reduced" simplifications, which are closer to the optimal (as demonstrated in Section 9). <p> All simplifications were performed on a Hewlett-Packard 735/125 with 80 MB of main memory. Images of these simplifications appear in Figures 10 and 11. It is interesting to compare the results on the bunny and phone models with those of <ref> [DLW93, EDD + 95] </ref>.
Reference: [DZ91] <author> M. J. DeHaemer, Jr. and M. J. Zyda. </author> <title> Simplification of objects rendered by polygonal approximations. </title> <journal> Computers & Graphics, </journal> <volume> 15(2) </volume> <pages> 175-184, </pages> <year> 1991. </year>
Reference-contexts: Previous work in the area of min-# approximations has been done by <ref> [SBD86, DZ91] </ref> where they adaptively subdivide a series of bicubic patches and polygons over a surface until they fit the data within the tolerance levels. In the second category, work has been done by several groups.
Reference: [EBD95] <author> D. Eppstein, G. Barequet, and M. Dickerson. </author> <title> On triangulating three-dimensional polygons. </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: If a hole cannot be filled at any level of the recursion, the entire hole filling attempt is considered a failure. This sort of hole-filling heuristic is employed by most simplification algorithms. Such heuristics are justified, because hole filling in three dimensions is NP-Hard <ref> [EBD95] </ref>. The number of possible ways to fill a three-dimensional hole is bounded above by the Catalan sequence of numbers (C n = (1=(n + 1)) fl (2n!=(n!n!))), which represent the number of ways to triangulate a convex polygon in two dimensions.
Reference: [EDD + 95] <author> M. Eck, T. DeRose, T. Duchamp, H. Hoppe, M. Lounsbery, and W. Stuetzle. </author> <title> Multiresolution analysis of arbitrary meshes. </title> <booktitle> Computer Graphics: Proceedings of SIGGRAPH'95, </booktitle> <pages> pages 173-182, </pages> <year> 1995. </year>
Reference-contexts: An interesting and elegant solution to the problem of polygonal simplification by using wavelets has been presented in <ref> [DLW93, EDD + 95] </ref> where arbitrary polygonal meshes are first subdivided into patches with subdivision connectivity and then multiresolution wavelet analysis is used over each patch. This wavelet approach preserves global topology. <p> Additionally, we can simplify bordered meshes and meshes with holes. In terms of direct comparison with the global topology preserving approach presented in <ref> [DLW93, EDD + 95] </ref>, for a given * our algorithm has been empirically able to obtain "reduced" simplifications, which are closer to the optimal (as demonstrated in Section 9). <p> All simplifications were performed on a Hewlett-Packard 735/125 with 80 MB of main memory. Images of these simplifications appear in Figures 10 and 11. It is interesting to compare the results on the bunny and phone models with those of <ref> [DLW93, EDD + 95] </ref>.
Reference: [FS93] <author> T. A. Funkhouser and C. H. Sequin. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> In Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> volume 27, </volume> <pages> pages 247-254, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: These hierarchical representations of an object can be used in several ways in computer graphics. Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates <ref> [CS81, FS93] </ref>. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95]. * Using low-detail approximations of objects for illumination algorithms, especially radiosity
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> New York, NY, </address> <year> 1979. </year>
Reference-contexts: We can show that the above problem reduces to that of set partitioning with one additional triangle disjointness constraint. However, the set partition problem is known to be NP-complete <ref> [GJ79] </ref>, so we cannot hope to have a polynomial-time algorithm for computing an optimal solution to our polygonal approximation problem. However, there exist several heuristics that generate solutions that have been found, in general, to be reasonably close to the optimal.
Reference: [GKM93] <author> N. Greene, M. Kass, and G. Miller. </author> <title> Hierarchical z-buffer visibility. </title> <booktitle> In Computer Graphics: Proceedings of SIGGRAPH 1993, </booktitle> <pages> pages 231-238. </pages> <publisher> ACM SIGGRAPH, </publisher> <year> 1993. </year>
Reference-contexts: Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates [CS81, FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages <ref> [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95] </ref>. * Using low-detail approximations of objects for illumination algorithms, especially radiosity [RPV93]. Simplification envelopes are a generalization of offset surfaces.
Reference: [HDD + 93] <author> H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, and W. Stuetzle. </author> <title> Mesh optimization. </title> <editor> In James T. Kajiya, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> volume 27, </volume> <pages> pages 19-26, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: A somewhat different local approach is taken in [RB93] where vertices that are close to each other are clustered and a new vertex is generated to represent them. The mesh is suitably updated to reflect this. Hoppe et al. <ref> [HDD + 93] </ref> proceed by iteratively optimizing an energy function over a mesh to minimize both the distance of the approximating mesh from the original, as well as the number of approximating vertices. <p> However, its complexity rises at least quadratically, making it prohibitive for large models. To handle large models within the framework of simplification envelopes we propose a vertex-removal-based local algorithm. This algorithm draws heavily on the work of [SZL92], [Tur92], and <ref> [HDD + 93] </ref>. Its main contributions are the use of envelopes to provide global error bounds as well as topology preservation and non-self-intersection. We have also explored the use of a more exhaustive hole-filling approach than any previous work we have seen.
Reference: [HG94] <author> P. Heckbert and M. </author> <title> Garland. Multiresolution modeling for fast rendering. </title> <booktitle> Proceedings of Graphics Interface, </booktitle> <year> 1994. </year>
Reference: [HH93] <author> P. Hinker and C. Hansen. </author> <title> Geometric optimization. </title> <editor> In Gregory M. Nielson and Dan Bergeron, editors, </editor> <booktitle> Proceedings Visualization '93, </booktitle> <pages> pages 189-195, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates [CS81, FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages <ref> [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95] </ref>. * Using low-detail approximations of objects for illumination algorithms, especially radiosity [RPV93]. Simplification envelopes are a generalization of offset surfaces. <p> In the second category, work has been done by several groups. Turk [Tur92] first distributes a given number of vertices over the surface depending on the curvature and then re-triangulates them to obtain the final mesh. Schroeder et al. [SZL92] and Hinker and Hansen <ref> [HH93] </ref> operate on a set of local rules | such as deleting edges or vertices from almost coplanar adjacent faces, followed by local re-triangulation. These rules are applied iteratively till they are no longer applicable.
Reference: [HHK + 95] <author> T. He, L. Hong, A. Kaufman, A. Varshney, and S. Wang. </author> <title> Voxel-based object simplification. </title> <editor> In G. M. Nielson and D. Silver, editors, </editor> <booktitle> IEEE Visualization '95 Proceedings, </booktitle> <pages> pages 296-303, </pages> <year> 1995. </year>
Reference-contexts: Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates [CS81, FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages <ref> [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95] </ref>. * Using low-detail approximations of objects for illumination algorithms, especially radiosity [RPV93]. Simplification envelopes are a generalization of offset surfaces.
Reference: [KT93] <author> A. D. Kalvin and R. H. Taylor. Superfaces: </author> <title> Polyhedral approximation with bounded error. </title> <type> Technical Report RC 19135 (#82286), </type> <institution> IBM Research Division, T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10958, </address> <year> 1993. </year>
Reference-contexts: Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates [CS81, FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages <ref> [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95] </ref>. * Using low-detail approximations of objects for illumination algorithms, especially radiosity [RPV93]. Simplification envelopes are a generalization of offset surfaces.
Reference: [Lov75] <author> L. Lovasz. </author> <title> On the ratio of optimal integral and fractional covers. </title> <journal> Discrete Mathematics, </journal> <volume> 13 </volume> <pages> 383-390, </pages> <year> 1975. </year>
Reference-contexts: This is repeated until all valid candidate triangles have been tried. It has been shown in the literature <ref> [Lov75] </ref> that the greedy heuristic yields a solution that is guaranteed to be within a factor of (1 + lg d) of the optimal, where d is the maximum number of elements in any set t j , i.e. the maximum number of vertices covered by a candidate triangle.
Reference: [MS92] <author> J. Mitchell and S. Suri. </author> <title> Separation and approximation of polyhedral surfaces. </title> <booktitle> In Proceedings of 3rd ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 296-306, </pages> <year> 1992. </year> <month> 16 </month>
Reference-contexts: Thus, algorithms to solve these problems have evolved around finding polynomial-time approximations that are close to the optimal. Let k o be the size of a min-# approximation. An algorithm has been given in <ref> [MS92] </ref> for computing an *- approximation of size O (k o log n) for convex polytopes.
Reference: [RB93] <author> J. Rossignac and P. Borrel. </author> <title> Multi-resolution 3D approximations for rendering. </title> <booktitle> In Modeling in Com--puter Graphics, </booktitle> <pages> pages 455-465. </pages> <publisher> Springer-Verlag, </publisher> <month> June-July </month> <year> 1993. </year>
Reference-contexts: These rules are applied iteratively till they are no longer applicable. A somewhat different local approach is taken in <ref> [RB93] </ref> where vertices that are close to each other are clustered and a new vertex is generated to represent them. The mesh is suitably updated to reflect this. <p> In terms of direct comparison with the global topology preserving approach presented in [DLW93, EDD + 95], for a given * our algorithm has been empirically able to obtain "reduced" simplifications, which are closer to the optimal (as demonstrated in Section 9). The algorithm in <ref> [RB93] </ref> also guarantees a bound in terms of the Hausdorff metric between the vertices of the original model and the simplified model.
Reference: [RO95] <author> Kevin J. Renze and J. H. Oliver. </author> <title> Generalized surface and volume decimation for unstructured tessellated domains. </title> <booktitle> In Proceedings of SIVE'95, </booktitle> <year> 1995. </year>
Reference: [RPV93] <author> H. E. Rushmeier, C. Patterson, and A. Veerasamy. </author> <title> Geometric simplification for indirect illumination calculations. </title> <booktitle> In Proceedings Graphics Interface '93, </booktitle> <pages> pages 227-236, </pages> <year> 1993. </year>
Reference-contexts: FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95]. * Using low-detail approximations of objects for illumination algorithms, especially radiosity <ref> [RPV93] </ref>. Simplification envelopes are a generalization of offset surfaces. Given a polygonal representation of an object, they allow the generation of minimal approximations that are guaranteed not to deviate from the original by more than a user-specifiable amount while preserving global topology.
Reference: [SBD86] <author> F. J. Schmitt, B. A. Barsky, and W. Du. </author> <title> An adaptive subdivision method for surface-fitting from sampled data. </title> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings), </booktitle> <volume> 20(4) </volume> <pages> 179-188, </pages> <year> 1986. </year>
Reference-contexts: Previous work in the area of min-# approximations has been done by <ref> [SBD86, DZ91] </ref> where they adaptively subdivide a series of bicubic patches and polygons over a surface until they fit the data within the tolerance levels. In the second category, work has been done by several groups.
Reference: [SZL92] <author> W. J. Schroeder, J. A. Zarge, and W. E. Lorensen. </author> <title> Decimation of triangle meshes. </title> <editor> In Edwin E. Catmull, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> volume 26, </volume> <pages> pages 65-70, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates [CS81, FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages <ref> [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95] </ref>. * Using low-detail approximations of objects for illumination algorithms, especially radiosity [RPV93]. Simplification envelopes are a generalization of offset surfaces. <p> In the second category, work has been done by several groups. Turk [Tur92] first distributes a given number of vertices over the surface depending on the curvature and then re-triangulates them to obtain the final mesh. Schroeder et al. <ref> [SZL92] </ref> and Hinker and Hansen [HH93] operate on a set of local rules | such as deleting edges or vertices from almost coplanar adjacent faces, followed by local re-triangulation. These rules are applied iteratively till they are no longer applicable. <p> However, its complexity rises at least quadratically, making it prohibitive for large models. To handle large models within the framework of simplification envelopes we propose a vertex-removal-based local algorithm. This algorithm draws heavily on the work of <ref> [SZL92] </ref>, [Tur92], and [HDD + 93]. Its main contributions are the use of envelopes to provide global error bounds as well as topology preservation and non-self-intersection. We have also explored the use of a more exhaustive hole-filling approach than any previous work we have seen.
Reference: [Tau95] <author> G. Taubin. </author> <title> A signal processing approach to fair surface design. </title> <booktitle> In Proc. of ACM Siggraph, </booktitle> <pages> pages 351-358, </pages> <year> 1995. </year>
Reference: [Tur92] <author> G. Turk. </author> <title> Re-tiling polygonal surfaces. </title> <booktitle> In Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> volume 26, </volume> <pages> pages 55-64, </pages> <month> July </month> <year> 1992. </year> <title> 17 b) 217,058 to c) 120,174. of the bounding box diagonal. </title> <type> 19 </type>
Reference-contexts: Some of these are: * Use in a level-of-detail based rendering algorithm for providing desired frame update rates [CS81, FS93]. * Simplifying traditionally over-sampled models such as those generated from volume datasets, laser scanners, and satellites for storage and reducing CPU cycles during processing, with relatively few or no disadvantages <ref> [Tur92, SZL92, HH93, KT93, GKM93, HHK + 95] </ref>. * Using low-detail approximations of objects for illumination algorithms, especially radiosity [RPV93]. Simplification envelopes are a generalization of offset surfaces. <p> Previous work in the area of min-# approximations has been done by [SBD86, DZ91] where they adaptively subdivide a series of bicubic patches and polygons over a surface until they fit the data within the tolerance levels. In the second category, work has been done by several groups. Turk <ref> [Tur92] </ref> first distributes a given number of vertices over the surface depending on the curvature and then re-triangulates them to obtain the final mesh. <p> However, its complexity rises at least quadratically, making it prohibitive for large models. To handle large models within the framework of simplification envelopes we propose a vertex-removal-based local algorithm. This algorithm draws heavily on the work of [SZL92], <ref> [Tur92] </ref>, and [HDD + 93]. Its main contributions are the use of envelopes to provide global error bounds as well as topology preservation and non-self-intersection. We have also explored the use of a more exhaustive hole-filling approach than any previous work we have seen.
References-found: 26

