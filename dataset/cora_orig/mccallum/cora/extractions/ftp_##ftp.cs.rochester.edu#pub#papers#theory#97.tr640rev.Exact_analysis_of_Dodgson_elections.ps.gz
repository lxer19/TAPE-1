URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/97.tr640rev.Exact_analysis_of_Dodgson_elections.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: Exact Analysis of Dodgson Elections: Lewis Carroll's 1876 Voting System is Complete for Parallel Access
Author: Edith Hemaspaandra Lane A. Hemaspaandra Jorg Rothe 
Keyword: polynomial hierarchy collapses.  
Note: 2 for which it becomes the most natural complete problem known. It follows that determining the winner in Carroll's elections is not NP-complete unless the  Email: edith@bamboo.lemoyne.edu. Supported in part by grant NSF-INT-9513368/DAAD-315-PRO-fo-ab. Work done in part while visiting  Supported in part by grants NSF-CCR-9322513 and NSF-INT-9513368/DAAD-315-PRO-fo-ab, and a University of Rochester Bridging Fellowship. Work done in part while visiting  Supported in part by grant NSF-INT-9513368/DAAD-315-PRO-fo-ab.  
Address: Syracuse, NY 13214, USA  Rochester, NY 14627, USA  07743 Jena, Germany  Amsterdam.  Amsterdam.  
Affiliation: Department of Mathematics Le Moyne College  Department of Computer Science University of Rochester  Institut fur Informatik Friedrich-Schiller-Universitat Jena  Friedrich-Schiller-Universitat Jena and the University of  Friedrich-Schiller-Universitat Jena and the University of  
Pubnum: UR-DCS-TR-96-640;  
Email: Email: lane@cs.rochester.edu.  Email: rothe@mipool.uni-jena.de.  
Date: October 1996, Revised May 1997  
Abstract: In 1876, Lewis Carroll proposed a voting system in which the winner is the candidate who with the fewest changes in voters' preferences becomes a Condorcet winner|a candidate who beats all other candidates in pairwise majority-rule elections. Bartholdi, Tovey, and Trick provided a lower bound| NP-hardness|on the computational complexity of determining the election winner in Carroll's system. We provide a stronger lower bound and an upper bound that matches our lower bound. In particular, determining the winner in Carroll's system is complete for parallel access to NP, i.e., it is complete for fi p 
Abstract-found: 1
Intro-found: 1
Reference: [BC93] <author> D. Bovet and P. Crescenzi. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference: [Bla58] <author> D. Black. </author> <title> Theory of Committees and Elections. </title> <publisher> Cambridge University Press, </publisher> <year> 1958. </year>
Reference-contexts: 1 Introduction The Condorcet criterion is that an election is won by any candidate who defeats all others in pairwise majority-rule elections ([Con85], see <ref> [Bla58] </ref>). <p> In short, individually well-ordered preferences do not necessarily aggregate to a well-ordered societal preference. 2 Carroll did not use this term. Indeed, Black has shown that Carroll "almost beyond a doubt" was unfamiliar with Condorcet's work <ref> [Bla58, p. 193-194] </ref>. 2 NP-complete problem, but since we do not know whether DodgsonRanking is in NP, we can say only that it is NP-hard" [BTT89, p. 161]. From our optimal lower bounds, it follows that neither DodgsonWinner nor DodgsonRanking is NP-complete unless the polynomial hierarchy collapses.
Reference: [BTT89] <author> J. Bartholdi III, C. Tovey, and M. </author> <title> Trick. Voting schemes for which it can be difficult to tell who won the election. Social Choice and Welfare, </title> <booktitle> 6 </booktitle> <pages> 157-165, </pages> <year> 1989. </year>
Reference-contexts: This system admits ties but, as each candidate is assigned an integer score, no strict-preference cycles are possible. Bartholdi, Tovey, and Trick, in their paper "Voting Schemes for which It Can Be Difficult to Tell Who Won the Election" <ref> [BTT89] </ref>, raise a difficulty regarding Carroll's election system. Though the notion of winner (s) in Carroll's election system is mathematically well-defined, Bartholdi et al. raise the issue of what the computational complexity is of determining who is the winner. <p> Indeed, Black has shown that Carroll "almost beyond a doubt" was unfamiliar with Condorcet's work [Bla58, p. 193-194]. 2 NP-complete problem, but since we do not know whether DodgsonRanking is in NP, we can say only that it is NP-hard" <ref> [BTT89, p. 161] </ref>. From our optimal lower bounds, it follows that neither DodgsonWinner nor DodgsonRanking is NP-complete unless the polynomial hierarchy collapses. <p> We say that a candidate c ties-or-defeats a candidate d if the score of d is not less than that of c. (Bartholdi et al. <ref> [BTT89] </ref> use the term "defeats" to denote what we, for clarity, denote by ties-or-defeats; though the notations are different, the sets being defined by Bartholdi et al. and in this paper are identical). A candidate c is said to win the Dodgson-type election if c ties-or-defeats all other candidates. <p> Though Carroll's single "switch" operation is not the richer set of operations most commonly used today when doing string-to-string editing (see, e.g., [SK83]), it does form a valid basis operation for transforming between permutations, which after all are what preferences are.) Bartholdi et al. <ref> [BTT89] </ref> define a number of decision problems related to Carroll's 5 system. <p> Theorem 3.1 DodgsonRanking is fi p 2 -complete. It follows immediately|since (a) fi p m (NP) = NP|that DodgsonRanking, though known to be NP-hard <ref> [BTT89] </ref>, cannot be NP-complete unless the polynomial hierarchy collapses quite dramatically. Corollary 3.2 If DodgsonRanking is NP-complete, then PH = NP. Most of the rest of the paper is devoted to working towards a proof of Theorem 3.1. <p> We now prove these lemmas. Proof of Lemma 3.4. Bartholdi et al. <ref> [BTT89] </ref> prove the NP-hardness of DodgsonScore by reducing ExactCoverByThreeSets to it. However, their reduction doesn't have the 8 additional properties that we need in this lemma. We will construct a reduction from the NP-complete problem ThreeDimensionalMatching (3DM) [GJ79] to DodgsonScore that does have the additional properties we need. <p> This establishes the upper bound, i.e., that DodgsonRanking 2 fi p DodgsonWinner is similarly fi p 2 -complete. Theorem 3.8 DodgsonWinner is fi p 2 -complete. Corollary 3.9 If DodgsonWinner is NP-complete, then PH = NP. Bartholdi et al. <ref> [BTT89] </ref> have stated without proof that DodgsonRanking p m DodgsonWinner. Theorem 3.1 plus this assertion would prove Theorem 3.8. However, as we wish our proof to be complete, we now prove Theorem 3.8. (We note in passing that our paper implicitly provides an indirect proof of their assertion. <p> Proposition 3.10 <ref> [BTT89] </ref> Let k be any fixed positive integer. There is a polynomial-time algorithm A k that computes all Dodgson scores (and thus all Dodgson winners) in Dodgson elections having at most k candidates. Proposition 3.10 in no way conflicts with Theorem 3.8. <p> Finally, it is also known that, for each fixed constant k, there is a polynomial-time algorithm to compute all Dodgson winners in elections having at most k 19 voters <ref> [BTT89] </ref>. Acknowledgments We are indebted to J. Banks and R. Calvert for recommending Dodgson elections to us as an interesting open topic worthy of study, and for providing us with the literature on this topic. We are grateful to M.
Reference: [Con85] <author> M. J. A. N. </author> <title> de Caritat, </title> <institution> Marquis de Condorcet. Essai sur l'Application de L'Analyse a la Probabilite des Decisions Rendues a la Pluraliste des Voix. </institution> <note> 1785. Facsimile reprint of original published in Paris, 1972, by the Imprimerie Royale. </note>
Reference-contexts: 1 Introduction The Condorcet criterion is that an election is won by any candidate who defeats all others in pairwise majority-rule elections (<ref> [Con85] </ref>, see [Bla58]). The Condorcet Paradox, dating from 1785 [Con85], notes that not only is it not always the case that Condorcet winners exist but, far worse, when there are more than two candidates, pairwise majority-rule elections may yield strict cycles in the aggregate preference even if each voter has non-cyclic preferences. 1 This is a widely discussed and troubling
Reference: [Dod76] <author> C. Dodgson. </author> <title> A method of taking votes on more than two issues, 1876. </title> <publisher> Pamphlet printed by the Clarendon Press, </publisher> <address> Oxford, </address> <note> and headed "not yet published" (see the discussions in [MU95,Bla58], both of which reprint this paper). </note>
Reference-contexts: In 1876, Charles Lutwidge Dodgson|more commonly referred to today by his pen name, Lewis Carroll|proposed an election system that is inspired by the Condorcet criterion, 2 yet that sidesteps the abovementioned problem <ref> [Dod76] </ref>. In particular, a Condorcet winner is a candidate who defeats each other candidate in pairwise majority-rule elections. In Carroll's system, an election is won by the candidate who is "closest" to being a Condorcet winner.
Reference: [GJ79] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference-contexts: We now prove these lemmas. Proof of Lemma 3.4. Bartholdi et al. [BTT89] prove the NP-hardness of DodgsonScore by reducing ExactCoverByThreeSets to it. However, their reduction doesn't have the 8 additional properties that we need in this lemma. We will construct a reduction from the NP-complete problem ThreeDimensionalMatching (3DM) <ref> [GJ79] </ref> to DodgsonScore that does have the additional properties we need. Let us first give the definition of 3DM: Decision Problem: ThreeDimensionalMatching (3DM) Instance: A set M W fi X fi Y , where W , X, and Y are disjoint, nonempty sets having the same number of elements.
Reference: [Hem89] <author> L. Hemachandra. </author> <title> The strong exponential hierarchy collapses. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 39(3) </volume> <pages> 299-322, </pages> <year> 1989. </year>
Reference-contexts: Equivalently, and more to the point for the purposes of this paper, fi p 2 equals the class of problems that can be solved via parallel access to NP <ref> [Hem89] </ref>, as explained formally below. fi p 2 falls between the first and second levels of the polynomial hierarchy: NP fi p 2 P NP NP NP . <p> machine, on a given input, asks all its queries in a parallel (also called non-adaptive) manner, the informal statement above that fi p 2 captures the complexity of "parallel access to NP" can now be expressed formally as the claim fi p p tt (NP), which is known to hold <ref> [Hem89] </ref>. As has become the norm, we always use hardness to denote hardness with respect to p m reductions. That is, for any class C and any problem A, we say that A is C-hard if (8C 2 C)[C p m A]. <p> However, the class of languages accepted via polynomial-time truth-table reductions to NP sets coincides with fi 2 <ref> [Hem89] </ref>. This establishes the upper bound, i.e., that DodgsonRanking 2 fi p DodgsonWinner is similarly fi p 2 -complete. Theorem 3.8 DodgsonWinner is fi p 2 -complete. Corollary 3.9 If DodgsonWinner is NP-complete, then PH = NP. Bartholdi et al. [BTT89] have stated without proof that DodgsonRanking p m DodgsonWinner.
Reference: [JT95] <author> B. Jenner and J. Toran. </author> <title> Computing functions with parallel queries to NP. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 141(1-2):175-193, </address> <year> 1995. </year>
Reference-contexts: Kadin [Kad89] has proven that if NP has a sparse Turing-complete set then the polynomial hierarchy collapses to fi p 2 , Wagner [Wag90] has shown that the definition of fi p 2 is extremely robust, and Jenner and Toran <ref> [JT95] </ref> have shown that the robustness of the class fi p 2 seems to fail for its function analogs. 3 Problems are encoded as languages of strings over some fixed alphabet having at least two letters. fl denotes the set of all strings over .
Reference: [Kad89] <author> J. Kadin. </author> <title> P NP[log n] and sparse Turing-complete sets for NP. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 39(3) </volume> <pages> 282-298, </pages> <year> 1989. </year>
Reference-contexts: Kadin <ref> [Kad89] </ref> has proven that if NP has a sparse Turing-complete set then the polynomial hierarchy collapses to fi p 2 , Wagner [Wag90] has shown that the definition of fi p 2 is extremely robust, and Jenner and Toran [JT95] have shown that the robustness of the class fi p 2
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time reducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 1(2) </volume> <pages> 103-124, </pages> <year> 1975. </year>
Reference-contexts: For any a and b such that b a is a defined reduction type, and any complexity class C, let R b a (C) denote fL j (9C 2 C) [L b a C]g. We refer readers to the standard source, Ladner, Lynch, and Selman <ref> [LLS75] </ref>, for definitions and discussion of the standard reductions. However, we briefly and informally present to the reader the definitions of the reductions to be used in this paper.
Reference: [MS72] <author> A. Meyer and L. Stockmeyer. </author> <title> The equivalence problem for regular expressions with squaring requires exponential space. </title> <booktitle> In Proceedings of the 13th IEEE Symposium on Switching and Automata Theory, </booktitle> <pages> pages 125-129, </pages> <year> 1972. </year> <month> 20 </month>
Reference: [MU95] <author> I. McLean and A. Urken. </author> <title> Classics of Social Choice. </title> <publisher> University of Michigan Press, </publisher> <year> 1995. </year>
Reference: [Mue89] <author> D. Mueller. </author> <title> Public Choice II. </title> <publisher> Cambridge University Press, </publisher> <year> 1989. </year>
Reference-contexts: case that Condorcet winners exist but, far worse, when there are more than two candidates, pairwise majority-rule elections may yield strict cycles in the aggregate preference even if each voter has non-cyclic preferences. 1 This is a widely discussed and troubling feature of majority rule (see, e.g., the discussion in <ref> [Mue89] </ref>). In 1876, Charles Lutwidge Dodgson|more commonly referred to today by his pen name, Lewis Carroll|proposed an election system that is inspired by the Condorcet criterion, 2 yet that sidesteps the abovementioned problem [Dod76].
Reference: [NR76] <author> R. Niemi and W. Riker. </author> <title> The choice of voting systems. </title> <journal> Scientific American, </journal> <volume> 234 </volume> <pages> 21-27, </pages> <year> 1976. </year>
Reference: [Pap84] <author> C. Papadimitriou. </author> <title> On the complexity of unique solutions. </title> <journal> Journal of the ACM, </journal> <volume> 31(2) </volume> <pages> 392-400, </pages> <year> 1984. </year>
Reference-contexts: In contrast, the class NP, which is contained in fi p 2 , has countless natural complete problems. Also, we mention that Papadimitriou <ref> [Pap84] </ref> has shown that UniqueOptimalTravelingSalesperson is complete for P NP , which contains fi p 2 Preliminaries In this section, we introduce some standard concepts and notations from computational complexity theory [Pap94,BC93,GJ79]. NP is the class of languages solvable in nondeterministic polynomial time.
Reference: [Pap94] <author> C. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference: [SK83] <author> D. Sankoff and J. Kruskal, </author> <title> editors. Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: Though Carroll's single "switch" operation is not the richer set of operations most commonly used today when doing string-to-string editing (see, e.g., <ref> [SK83] </ref>), it does form a valid basis operation for transforming between permutations, which after all are what preferences are.) Bartholdi et al. [BTT89] define a number of decision problems related to Carroll's 5 system.
Reference: [Sto77] <author> L. Stockmeyer. </author> <title> The polynomial-time hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference: [Wag87] <author> K. Wagner. </author> <title> More complicated questions about maxima and minima, and some closures of NP. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 51(1-2):53-80, </address> <year> 1987. </year>
Reference-contexts: when compared with previously known complete problems for this class, essentially all of which have quite convoluted forms, e.g., asking whether a given list of Boolean formulas has the property that the number of formulas on the list that are satisfiable is itself an odd number (see the discussion in <ref> [Wag87] </ref>). In contrast, the class NP, which is contained in fi p 2 , has countless natural complete problems. <p> Note that Lemma 3.7 gives more than is needed merely to establish Theorem 3.1. In fact, the way this lemma is stated even suffices to provide|jointly with Lemma 3.6|a direct proof of the fi p 2 -hardness of DodgsonWinner. Lemma 3.3 <ref> [Wag87] </ref> Let A be some NP-complete set, and let B be any set.
Reference: [Wag90] <author> K. Wagner. </author> <title> Bounded query classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 19(5) </volume> <pages> 833-846, </pages> <year> 1990. </year>
Reference-contexts: The polynomial hierarchy has a number of intermediate levels. Of particular interest to us will be the level fi p p 2 is the class of all languages that can be solved via O (log n) queries to some NP set (see <ref> [Wag90] </ref>). <p> Kadin [Kad89] has proven that if NP has a sparse Turing-complete set then the polynomial hierarchy collapses to fi p 2 , Wagner <ref> [Wag90] </ref> has shown that the definition of fi p 2 is extremely robust, and Jenner and Toran [JT95] have shown that the robustness of the class fi p 2 seems to fail for its function analogs. 3 Problems are encoded as languages of strings over some fixed alphabet having at least
References-found: 20

