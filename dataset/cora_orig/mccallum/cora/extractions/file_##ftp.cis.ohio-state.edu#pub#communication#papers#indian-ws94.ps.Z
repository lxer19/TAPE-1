URL: file://ftp.cis.ohio-state.edu/pub/communication/papers/indian-ws94.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/cluster_pub.html
Root-URL: 
Email: Email: fpanda,basakg@cis.ohio-state.edu  
Title: Issues in Designing Scalable Systems with k-ary n-cube cluster-c Organization  
Author: Dhabaleswar K. Panda and Debashis Basak 
Address: Columbus, OH 43210-1277  
Affiliation: Department of Computer and Information Science The Ohio State University,  
Date: 1994  
Note: To appear in Proceedings of the First International Workshop on Parallel Processing, India,  
Abstract: This paper emphasizes on design issues to build scalable systems with the upcoming trend of k-ary n-cube cluster-c interconnection. Such organization takes advantage of VLSI integration and advancements in packaging technologies to interconnect multiple processors into a chip or a board in a cost-effective manner. While the cluster organization helps exploiting locality, the clusters are connected through the popular k-ary n-cube topology to achieve scalability. Alternatives and guidelines for selecting intra-cluster interconnection, inter-cluster interconnection, cluster size, routing scheme, and cluster interface design are presented. A comprehensive framework to decide on optimal configuration under varying processor technology, interconnection technology, and packaging constraints is presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Asthana, H. Jagdish, and B. Mathews. </author> <title> Impact of Advanced VLSI packaging on the design of a large parallel computer. </title> <booktitle> In Proc. of the Int. Conf. on Parallel Processing, </booktitle> <month> Aug </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Traditionally, research in interconnection networks have assumed one processing element per node. However advancements in VLSI and packaging technologies are making it cost-effective to integrate multiple processing elements into a chip, multiple chips into a board, and multiple boards into a system <ref> [1] </ref>. Any of these building blocks can represent a processor cluster. Such clusters can be interconnected together to build large-scale systems. This has opened a new vista for building scalable parallel systems using clustered configurations.
Reference: [2] <author> D. Basak and D. K. Panda. </author> <title> Designing Scalable Systems with two-level k-ary n-cube Wormhole-routed Interconnections. </title> <type> Technical Report OSU-CIS 1993/TR29, </type> <month> Aug </month> <year> 1993. </year>
Reference-contexts: Although various deterministic and adaptive routing algorithms using wormhole-routing techniques have been proposed in the literature, these works have focused on one-level k-ary n-cube architectures only. In <ref> [2, 3] </ref>, we have developed a framework of composite-routing of messages in two-level direct networks (k; n; k1; n1) in a deadlock-free manner. The following two routing strategies are proposed to transfer messages across the cluster interfaces (CI). <p> When channel cycle times are similar in both hierarchies, the network with smaller flit size determines the speed of the message. This leads to flit-mismatch problem in the system. In <ref> [2] </ref>, we have suggested the use of virtual channels [6] with demand multiplexing, along with a concatenation scheme, to alleviate this flit mismatch problem. Both AB and NAB are general routing strategies. Actual routing algorithms can be built on top of it.
Reference: [3] <author> D. Basak and D. K. Panda. </author> <title> Scalable Architectures with k-ary n-cube cluster-c organization. </title> <booktitle> In Proc. of the Symposium of Parallel and Distributed Processing, </booktitle> <pages> pages 780-787, </pages> <year> 1993. </year>
Reference-contexts: Such clusters can be interconnected together to build large-scale systems. This has opened a new vista for building scalable parallel systems using clustered configurations. The potential advantages of clustered organizations have already been demonstrated by us in our earlier work <ref> [3] </ref> by introducing and analyzing a two-level clustered organization called k-ary n-cube cluster-c. The upper level k-ary n-cube direct network offers scalability while interconnecting k n clusters with c processors in each cluster. The clusters offer cheap building blocks that effectively exploit locality of communication. <p> We present and illustrate a comprehensive design framework, as shown in Fig. 1, to derive optimal design choices with cluster organization. 2 k-ary n-cube cluster-c organization A popular interconnection being used currently to build large scalable systems is the class of k-ary n-cube cluster-c two-level systems <ref> [3, 4] </ref>. Some examples are Intel Paragon, Stanford DASH, and Cray T3D. The lower level consists of k n clusters of processors interconnected by a higher level direct k-ary n-cube network (also referred to as inter-cluster network or internet). <p> Although various deterministic and adaptive routing algorithms using wormhole-routing techniques have been proposed in the literature, these works have focused on one-level k-ary n-cube architectures only. In <ref> [2, 3] </ref>, we have developed a framework of composite-routing of messages in two-level direct networks (k; n; k1; n1) in a deadlock-free manner. The following two routing strategies are proposed to transfer messages across the cluster interfaces (CI). <p> In [2, 3], we have developed a framework of composite-routing of messages in two-level direct networks (k; n; k1; n1) in a deadlock-free manner. The following two routing strategies are proposed to transfer messages across the cluster interfaces (CI). The readers are requested to refer to <ref> [3] </ref> for details. 5.1 Absorb & retransmit (AB) Strategy This strategy uses a message forwarding mechanism at the CI. An inter-cluster message starting from a source processor travels to the source-CI using intranet routing restrictions. At the source-CI, the message is fully absorbed and then retransmitted into the internet. <p> Both AB and NAB are general routing strategies. Actual routing algorithms can be built on top of it. For the NAB strategy achieving deadlock freedom for routing algorithms is not trivial as worms can simultaneously occupy channels in more than one network. In <ref> [3] </ref> we have provided a solution to design deadlock-free routing schemes by adding just one extra virtual channel for each intranet physical link, while retaining the simplicity and flexibility of the composite-routing scheme. 6 Impact of packaging, processor, and interconnection technologies In this section we emphasize on a demand-supply tradeoff to
Reference: [4] <author> D. Basak and D. K. Panda. </author> <title> Designing Large Hierarchical Multiprocessor Systems under Processor, Interconnection, </title> <booktitle> and Packaging Advancements. In Proc. of the Int'l Conference on Parallel Processing, </booktitle> <pages> pages I:63-66, </pages> <year> 1994. </year>
Reference-contexts: We present and illustrate a comprehensive design framework, as shown in Fig. 1, to derive optimal design choices with cluster organization. 2 k-ary n-cube cluster-c organization A popular interconnection being used currently to build large scalable systems is the class of k-ary n-cube cluster-c two-level systems <ref> [3, 4] </ref>. Some examples are Intel Paragon, Stanford DASH, and Cray T3D. The lower level consists of k n clusters of processors interconnected by a higher level direct k-ary n-cube network (also referred to as inter-cluster network or internet).
Reference: [5] <author> D. Basak and D. K. Panda. </author> <title> Designing Large Hierarchical Multiprocessor Systems under Processor, Interconnection, and Packaging Advancements. </title> <type> Technical Report OSU-CIS 1994/TR01, </type> <month> Jan </month> <year> 1994. </year>
Reference-contexts: under varying technology and packaging constraints. 6.1 Demand vs Supply Although theoretically a large number of alternative configurations are possible to build a proposed system, the configurations which conform to the packaging restrictions, like maximum board size, the pinout and channel width technologies are limited and defined as design-feasible configurations <ref> [5] </ref>. Similarly, limited cluster-bus bandwidth and CI capacity also restrict the maximum cluster size. It is clear that only the design-feasible configurations can be translated into real machines. A design-feasible configuration offers some performance depending on the bisection bandwidth in each hierarchy which is known as the supply side. <p> This corresponds to a channel width W 24 including control wires. Many factors like path-width inside routers, connector technology etc. restrict channel widths from being arbitrarily large. In the near future it is expected that technologies would allow channels to carry 32-bit or 64-bit data <ref> [5] </ref>, corresponding to W 40 and W 72, respectively. 6.5 Processor and Interconnection Tech nologies Let us define D bits/sec as the rate of traffic which each processor injects into the network. Increase in processing power leads to higher values of D leading to greater demands on the bisection. <p> To capture both these technologies together we define a parameter = D fl T c to represent processor demand on network in bits/cycle. In <ref> [5] </ref> it is shown that representative values of lie in the range of 4-10 and under uniform traffic, the demand on internet bisection bandwidth B d can be derived as B d = N =2. 7 Design choices In this section we illustrate our comprehensive framework by considering the problem of <p> The bisection bandwidth in the internet can be derived as B = M (n1=n) P=n <ref> [5] </ref>. Figure 6 shows how the bandwidth B changes for 1D, 2D, 3D, 4D, and hypercube internets as the cluster size gets varied from 1 to 64 under O (A) surface and O ( p A) periphery pinout technologies, respectively. <p> The design-feasible configurations which are above the line of = 6:0 are the good-configurations. These configurations are summarized at the bottom of the figure. This leaves us with around fifteen good choices, amongst which we have to choose the best one. Since larger clusters yield systems with lesser cost <ref> [5] </ref>, we focus on the good configurations having larger cluster the set of feasible configurations under uniform traffic, two pinout technologies, and bisection bandwidth demand of = 6:0 bits/cycle. size. This leaves us with three good candidates.
Reference: [6] <author> W. J. Dally. </author> <title> Performance Analysis of k-ary n-cube Interconnection Networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(6), </volume> <month> June </month> <year> 1990. </year>
Reference-contexts: The CIs can provide support for such mechanism in order to reduce volume of traffic in the internet. 5 Routing alternatives We use wormhole routing switching technique because it offers low-latency point-to-point communication with reduced hardware overhead <ref> [6] </ref>. Although various deterministic and adaptive routing algorithms using wormhole-routing techniques have been proposed in the literature, these works have focused on one-level k-ary n-cube architectures only. <p> When channel cycle times are similar in both hierarchies, the network with smaller flit size determines the speed of the message. This leads to flit-mismatch problem in the system. In [2], we have suggested the use of virtual channels <ref> [6] </ref> with demand multiplexing, along with a concatenation scheme, to alleviate this flit mismatch problem. Both AB and NAB are general routing strategies. Actual routing algorithms can be built on top of it.
Reference: [7] <author> David Kranz, Kirk Johnson, Anant Agrawal, John Ku-biatowicz, and Beng-Hom Lim. </author> <title> Integrating Message-Passing and Shared Memory: Early Experience. </title> <booktitle> In Proceedings of Practice and Principle of Parallel Programming. ACM, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: A message entering on an internet channel also has similar choices. 4.2 Functionality support The current trend in designing massively parallel system is to support flexible programming paradigms <ref> [7] </ref>. In this section we first consider the necessary architectural supports at the CI to implement distributed shared-memory (DSM) programming paradigm. The DSM model can be implemented through 1)software means (using explicit message-passing) or 2)hardware means (transparent cache-coherence support). It has been argued in [7] that the explicit message passing mechanism <p> is to support flexible programming paradigms <ref> [7] </ref>. In this section we first consider the necessary architectural supports at the CI to implement distributed shared-memory (DSM) programming paradigm. The DSM model can be implemented through 1)software means (using explicit message-passing) or 2)hardware means (transparent cache-coherence support). It has been argued in [7] that the explicit message passing mechanism has lesser overheads and is useful for applications which display both static and coarse-grained characteristics. But for a wider spectrum of applications hardware support is crucial. The CI takes an important role in maintain ing cache-coherency across and within the clusters.
Reference: [8] <author> D. K. Panda, S. Singal, and P. Prabhakaran. </author> <title> Multi-destination Message Passing Mechanism Conforming to Base Wormhole Routing Scheme. </title> <booktitle> In Proc. of the Parallel Routing and Communication Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: Similarly, an all-to-one/multigather operation can be implemented by combining messages at the CI. Recently new mechanisms like multidesti-nation message-passing have been proposed <ref> [8] </ref> to implement fast collective communication operations in wormhole-routed systems. The CIs can provide support for such mechanism in order to reduce volume of traffic in the internet. 5 Routing alternatives We use wormhole routing switching technique because it offers low-latency point-to-point communication with reduced hardware overhead [6].
References-found: 8

