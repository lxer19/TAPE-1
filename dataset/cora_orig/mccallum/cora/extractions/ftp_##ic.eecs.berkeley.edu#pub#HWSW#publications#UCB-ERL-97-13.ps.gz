URL: ftp://ic.eecs.berkeley.edu/pub/HWSW/publications/UCB-ERL-97-13.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/research/hsc/publications.html
Root-URL: 
Email: lavagno@polito.it  alberto@eecs.berkeley.edu  
Title: Co-Design of a Fault-Tolerant Communication ProtocolA Case Study  
Author: Reinhard von Hanxleden Daimler-Benz AG vhanx@DBresearch-berlin.de Luciano Lavagno Alberto Sangiovanni-Vincentelli 
Address: (F3S/R)  Torino  Berkeley  
Affiliation: Responsive Systems  Dipartimento di Elettronica Politecnico di  Dept. of EECS University of California,  
Abstract: Hardware/software co-design is a design technology that supports the integrated development of hardware and software components of a system. A special focus of the work described here is the application domain of safety-critical embedded systems. In addition to the raised abstraction level and shortened design time offered by co-design relative to conventional design methods, we are therefore particularly interested in paradigms based on formal models. This paper gives a brief overview of a co-design case study based on an application typical for safety-critical applications. We compared two ways of designing embedded systems: STATEMATE, a commercial system design tool based on Statecharts, and POLIS/Ptolemy, with ESTEREL as a specification language. We describe our design experiences and give preliminary experimental results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Boussinot and R. de Simone. </author> <booktitle> The Esterel language. Proceedings of the IEEE, </booktitle> <pages> pages 12931304, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: The ESTEREL specification language A designer working with the POLIS co-design system has the choice between a graphical input language, which is basically a Finite State Machine (FSM) editor, and a text-based one, which is ESTEREL <ref> [1] </ref>. The graphical input language is similar to Statecharts but without the capabilities for hierarchy and parallelism; we therefore chose the ESTEREL front-end.
Reference: [2] <author> J. Buck, S. Ha, E. Lee, and D. Messerschmitt. Ptolemy: </author> <title> A framework for simulating and prototyping heterogeneous systems. </title> <journal> Interntional Journal of Computer Simulation, special issue on Simulation Software Development, </journal> <month> January </month> <year> 1990. </year>
Reference-contexts: For example, states in ESTEREL are preferably represented as halting points in the program, rather than by explicit variables; this concept is not completely obvious, but quite intuitive once understood. 4.2. The POLIS-Ptolemy interaction The Ptolemy system is a software environment for simulation and prototyping of heterogeneous systems <ref> [2, 6] </ref>.
Reference: [3] <author> M. Chiodo, D. Engels, P. Giusto, H. Hsieh, A. Jurecska, L. Lavagno, K. Suzuki, and A. Sangiovanni-Vincentelli. </author> <title> A case study in computer-aided codesign of embedded controllers. Design Automation for Embedded Systems, </title> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: However, it is an interesting candidate as a front-end embedded into a co-design environment. 4. The POLIS System The POLIS co-design environment is targeted towards real-time control systems composed of software on a micro-controller and semi-custom hardware <ref> [3, 4] </ref>. The POLIS system translates a formal specification of a reactive real-time system written as an asynchronous interconnection of synchronous modules. Asynchronicity is necessary in order to accommodate heterogeneous implementations from a relatively neutral extended FSM specification.
Reference: [4] <author> M. Chiodo, P. Giusto, H. Hsieh, A. Jurecska, L. Lavagno, and A. Sangiovanni-Vincentelli. </author> <title> A formal methodology for hardware/software codesign of embedded systems. </title> <booktitle> IEEE Micro, </booktitle> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: However, it is an interesting candidate as a front-end embedded into a co-design environment. 4. The POLIS System The POLIS co-design environment is targeted towards real-time control systems composed of software on a micro-controller and semi-custom hardware <ref> [3, 4] </ref>. The POLIS system translates a formal specification of a reactive real-time system written as an asynchronous interconnection of synchronous modules. Asynchronicity is necessary in order to accommodate heterogeneous implementations from a relatively neutral extended FSM specification.
Reference: [5] <author> D. Harel. Statecharts: </author> <title> A visual formalism for complex systems. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 8, </volume> <year> 1987. </year>
Reference-contexts: From a natural language description of the protocol we derived a simplified version of PROSA as a starting point for the case study. 3. The baseline: STATEMATE STATEMATE, the official implementation of State-charts <ref> [5] </ref>, is a commercial tool that allows high-level system design and offers synthesis paths to both hardware and software. STATEMATE uses Statecharts to describe the behavior of a component within the system to be specified.
Reference: [6] <author> A. Kalavade and E. A. Lee. </author> <title> Hardware/software co-design using PtolemyA case study. </title> <booktitle> In Proceedings of the International Workshop on Hardware-Software Codesign, </booktitle> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: For example, states in ESTEREL are preferably represented as halting points in the program, rather than by explicit variables; this concept is not completely obvious, but quite intuitive once understood. 4.2. The POLIS-Ptolemy interaction The Ptolemy system is a software environment for simulation and prototyping of heterogeneous systems <ref> [2, 6] </ref>.
References-found: 6

