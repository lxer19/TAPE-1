URL: http://www.cs.washington.edu/homes/mel/abstracts/inputoutput.ps
Refering-URL: http://www.cs.washington.edu/homes/mel/abstracts/inputoutput.html
Root-URL: 
Title: A Comparison of Input and Output Driven Routers  
Author: Melanie L. Fulgham and Lawrence Snyder 
Address: Box 352350  Seattle, WA 98195-2350 USA  
Affiliation: Department of Computer Science and Engineering,  University of Washington,  
Abstract: Communication in parallel computers requires a low latency router. Once a suitable routing algorithm is selected, an implementation must be designed. Issues such as whether the router should be input or output driven need to be considered. In this paper, we use simulations to compare input driven and output driven routing algorithms. Three algorithms, the Dally-Seitz oblivious router, the *-channels router, and the minimal triplex algorithm are evaluated. Each router is implemented as both an input and an output driven router. Experiments are run for each of the router implementations with seven different traffic patterns on both a 256-node two dimensional mesh and torus networks. The results show that in almost all cases, the output driven router matches or outperforms the input driven router. Furthermore, we find that randomization of output buffer selection in the input driven algorithm increases its performance and substantially reduces the performance discrepancy between the input and output driven algorithms. Although the findings apply to the routers considered, we believe the results generalize to other routers.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> P. Berman, L. Gravano, G. Pifarre, and J. Sanz. </author> <title> Adaptive deadlock- and livelock-free routing with all minimal paths in torus networks. </title> <booktitle> In Proc. of SPAA, </booktitle> <year> 1992. </year>
Reference-contexts: Unfortunately some algorithms cannot easily be transformed into output driven algorithms, for example algorithms that take probabilities over the possible output choices. 3 Methodology Three algorithms are simulated as both input and output driven routers: the Dally-Seitz oblivious router [8], the *-channels router <ref> [1] </ref>, and the minimal triplex router [11] using a flit-level simulator of 256-node 2D torus and mesh networks. The number of virtual channels per channel per direction for the routers are 2 (1), 3 (2) and 3 (2), respectively, for the torus (mesh) algorithms.
Reference: 2. <author> M. Blumrich, K. Li, R. Alpert, C. Dubnicki, and E. Felten. </author> <title> Virtual memory mapped network interface for the SHRIMP multicomputer. </title> <booktitle> In Proc. of ISCA, </booktitle> <pages> pages 142-153, </pages> <year> 1994. </year>
Reference-contexts: Initially the communication bottleneck was the large software overhead for sending and receiving messages. Nevertheless, research has reduced this overhead [20] and exposed the network interface. Designing low latency network interfaces has become a hot topic for research <ref> [2, 18] </ref>. Eventually network interfaces will no longer overshadow the routing time in the network. Then, both the routing algorithm and its implementation will have an impact on communication performance.
Reference: 3. <author> K. Bolding. </author> <title> Chaotic Routing: Design and Implementation of an Adaptive Multicomputer Network Router. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <address> Seattle, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Transmission of a flit across a channel from an output buffer to input buffer takes one cycle; the pipelined logic at each node takes 3 cycles for the oblivious, and 4 cycles for the adaptive routers <ref> [3] </ref>. Routing options are computed in parallel, although a router connects at most a single message from an input buffer to an output buffer per cycle. Each buffer holds exactly one 20-flit message, and virtual cut through flow control [14] is used to avoid store-and-forward penalties.
Reference: 4. <author> K. Bolding, M. Fulgham, and L. Snyder. </author> <title> The case for chaotic adaptive routing. </title> <journal> IEEE Transactions on Computers, </journal> <note> to appear. </note>
Reference-contexts: The hot spots are listed in Appendix A. The traffic patterns are found in the literature, and are generally thought to be difficult, useful, or both. See [10] and <ref> [4] </ref> for further details. 4 Results The results are presented in two parts. The first set of experiments compare output driven routers to input driven routers that choose deterministically the first available output buffer from the set of needed output buffers.
Reference: 5. <author> L. Cherkasova and T. Rokicki. </author> <title> Alpha message scheduling for packet-switched interconnects. </title> <type> Technical Report TR HPL-94-72, </type> <institution> Hewlett-Packard Labs, </institution> <year> 1994. </year>
Reference-contexts: Konstantinidou reduced overall message latency in bimodal length traffic by introducing segment routing [15]. Segment routing provides a separate buffer for large messages, allowing small messages to pass larger ones. Cherkasova and Rokicki replaced FIFO injection, the traditional method of introducing messages into the network, with alpha scheduling <ref> [5] </ref>. With variable length messages, alpha scheduling approximates the optimal average message latency of shortest first scheduling without introducing starvation.
Reference: 6. <author> A. Chien and J. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [8, 17, 9, 13, 6, 19] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: 7. <author> W. Dally. </author> <title> Virtual-channel flow control. </title> <booktitle> In Proc. of the Intl. Sym. on Comp. Arch., </booktitle> <month> May </month> <year> 1990. </year>
Reference-contexts: Each node has an injection and delivery buffer in addition to an input and an output buffer for each virtual channel in each dimension in each direction. The oblivious algorithm also has an extra set of virtual lanes <ref> [7] </ref>, yielding a total of 34 (18), 26 (18), and 26 (18) buffers per node for the torus (mesh) routers, re-spectively. <p> Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm. Dally increased throughput of wormhole algorithms by adding virtual channels to separate the buffering resources from the transmission resources of the router <ref> [7] </ref>. Konstantinidou reduced overall message latency in bimodal length traffic by introducing segment routing [15]. Segment routing provides a separate buffer for large messages, allowing small messages to pass larger ones. Cherkasova and Rokicki replaced FIFO injection, the traditional method of introducing messages into the network, with alpha scheduling [5].
Reference: 8. <author> W. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5):547-553, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: Unfortunately some algorithms cannot easily be transformed into output driven algorithms, for example algorithms that take probabilities over the possible output choices. 3 Methodology Three algorithms are simulated as both input and output driven routers: the Dally-Seitz oblivious router <ref> [8] </ref>, the *-channels router [1], and the minimal triplex router [11] using a flit-level simulator of 256-node 2D torus and mesh networks. The number of virtual channels per channel per direction for the routers are 2 (1), 3 (2) and 3 (2), respectively, for the torus (mesh) algorithms. <p> Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [8, 17, 9, 13, 6, 19] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: 9. <author> J. Duato. </author> <title> A new theory of deadlock-free adaptive routing in wormhole networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(4) </volume> <pages> 466-475, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [8, 17, 9, 13, 6, 19] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: 10. <author> M. Fulgham and L. Snyder. </author> <title> A comparison of input and output driven routers. </title> <type> Technical Report UW-CSE-96-06-01, </type> <institution> Univ. of Washington, </institution> <address> Seattle, </address> <year> 1996. </year>
Reference-contexts: The hot spots are listed in Appendix A. The traffic patterns are found in the literature, and are generally thought to be difficult, useful, or both. See <ref> [10] </ref> and [4] for further details. 4 Results The results are presented in two parts. The first set of experiments compare output driven routers to input driven routers that choose deterministically the first available output buffer from the set of needed output buffers. <p> The complement is unusual since dimension order routing helps prevent conflicts in this traffic pattern, i.e. when two messages compete for the same output buffer. See <ref> [10] </ref> for an explanation. For the *-channels algorithm the input driven router has a slight advantage since it prefers the lowest dimension output buffer needed, while the output driven algorithm selects a random message that needs the current output buffer. <p> Due to space limitations, the expected throughput and latency of the input and output driven algorithms on the torus are not presented, but can be found in <ref> [10] </ref>. The oblivious input driven algorithm does not exhibit significant change between the fixed order and random selection of output buffers, except for a decrease in latency for some of the traffic patterns including the complement, perfect shuffle, and transpose.
Reference: 11. <author> M. Fulgham and L. Snyder. </author> <title> Triplex router: a versatile torus routing algorithm. </title> <type> Technical Report UW-CSE-96-01-11, </type> <institution> Univ. of Washington, </institution> <address> Seattle, </address> <year> 1996. </year>
Reference-contexts: Unfortunately some algorithms cannot easily be transformed into output driven algorithms, for example algorithms that take probabilities over the possible output choices. 3 Methodology Three algorithms are simulated as both input and output driven routers: the Dally-Seitz oblivious router [8], the *-channels router [1], and the minimal triplex router <ref> [11] </ref> using a flit-level simulator of 256-node 2D torus and mesh networks. The number of virtual channels per channel per direction for the routers are 2 (1), 3 (2) and 3 (2), respectively, for the torus (mesh) algorithms.
Reference: 12. <author> C. Glass and L. Ni. </author> <title> Adaptive routing in mesh-connected networks. </title> <booktitle> In Proc. of the Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 12-19, </pages> <year> 1992. </year>
Reference-contexts: With variable length messages, alpha scheduling approximates the optimal average message latency of shortest first scheduling without introducing starvation. Finally, a study by Glass and Ni compared the performance of various policies for selecting input and output buffers for two different routing algorithms on the mesh <ref> [12] </ref>. 6 Conclusions We have experimentally compared the performance of input and output driven algorithms on the mesh and torus. Although the two are conceptually similar, for almost all the cases examined, the performance of the output driven algorithms is equivalent or superior to that of the input driven algorithms.
Reference: 13. <author> C. J. Glass and L. M. Ni. </author> <title> The turn model for adaptive routing. </title> <journal> JACM, </journal> <volume> 41(5) </volume> <pages> 874-902, </pages> <year> 1994. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [8, 17, 9, 13, 6, 19] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: 14. <author> P. Kermani and L. Kleinrock. </author> <title> Virtual cut-through: A new computer communication switching technique. </title> <journal> Computer Networks, </journal> <volume> 3 </volume> <pages> 267-286, </pages> <year> 1979. </year>
Reference-contexts: Routing options are computed in parallel, although a router connects at most a single message from an input buffer to an output buffer per cycle. Each buffer holds exactly one 20-flit message, and virtual cut through flow control <ref> [14] </ref> is used to avoid store-and-forward penalties. Results are normalized to the maximum theoretically sustainable load, constrained by the network bisection bandwidth, of one message every 80 (160) cycles for the torus (mesh), respectively.
Reference: 15. <author> S. Konstantinidou. </author> <title> The segment router: a novel router design for parallel computers. </title> <booktitle> In Proc. of the Sym. of Parallel Algorithms and Architectures, </booktitle> <pages> pages 364-373, </pages> <year> 1994. </year>
Reference-contexts: Dally increased throughput of wormhole algorithms by adding virtual channels to separate the buffering resources from the transmission resources of the router [7]. Konstantinidou reduced overall message latency in bimodal length traffic by introducing segment routing <ref> [15] </ref>. Segment routing provides a separate buffer for large messages, allowing small messages to pass larger ones. Cherkasova and Rokicki replaced FIFO injection, the traditional method of introducing messages into the network, with alpha scheduling [5].
Reference: 16. <author> S. Konstantinidou and L. Snyder. </author> <title> The chaos router. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 43(12) </volume> <pages> 1386-97, </pages> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: The router tries to find a message in an input buffer that needs to be routed to the current output buffer. If messages are found, it selects one to be routed to the current output buffer. The Chaos router is a good example of an output driven router <ref> [16] </ref>. Many algorithms can be implemented as either input or output driven algorithms. For these algorithms, it would be advantageous to implement the router with the best performing routing mechanism.
Reference: 17. <author> D. H. Linder and J. C. Harden. </author> <title> An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-40(1):2-12, </volume> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [8, 17, 9, 13, 6, 19] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: 18. <author> N. McKenzie, K. Bolding, C. Ebeling, and L. Snyder. CRANIUM: </author> <title> An interface for message passing on adaptive packet routing networks. </title> <booktitle> In Lecture Notes in Computer Science, </booktitle> <volume> volume 853, </volume> <pages> pages 266-80, </pages> <year> 1994. </year>
Reference-contexts: Initially the communication bottleneck was the large software overhead for sending and receiving messages. Nevertheless, research has reduced this overhead [20] and exposed the network interface. Designing low latency network interfaces has become a hot topic for research <ref> [2, 18] </ref>. Eventually network interfaces will no longer overshadow the routing time in the network. Then, both the routing algorithm and its implementation will have an impact on communication performance.
Reference: 19. <author> L. Schwiebert and D. Jayasimha. </author> <title> A universal proof technique for deadlock-free routing in interconnection networks. </title> <booktitle> In Proc. of the Sym. on Par. Alg. and Arch., </booktitle> <pages> pages 175-184, </pages> <year> 1995. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [8, 17, 9, 13, 6, 19] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: 20. <author> T. von Eicken D.E. Culler, S. Goldstein, and K. Schauser. </author> <title> Active messages: a mechanism for integrated communication and computation. </title> <booktitle> In Proc. of ISCA, </booktitle> <pages> pages 256-266, </pages> <month> May </month> <year> 1992. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Initially the communication bottleneck was the large software overhead for sending and receiving messages. Nevertheless, research has reduced this overhead <ref> [20] </ref> and exposed the network interface. Designing low latency network interfaces has become a hot topic for research [2, 18]. Eventually network interfaces will no longer overshadow the routing time in the network. Then, both the routing algorithm and its implementation will have an impact on communication performance.
References-found: 20

