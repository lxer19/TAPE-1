URL: http://www.cs.toronto.edu/~kabanets/papers/independence.ps.gz
Refering-URL: http://www.cs.toronto.edu/~kabanets/Pubs.html
Root-URL: http://www.cs.toronto.edu
Email: kabanets@cs.toronto.edu  
Title: Almost k-Wise Independence and Boolean Functions Hard for Read-Once Branching Programs  
Author: Valentine Kabanets 
Keyword: almost k-wise independence, derandomization, exponential lower bounds for read-once branching programs, r-mixed Boolean functions.  
Date: February 23, 1999  
Address: Toronto, Canada  
Affiliation: Department of Computer Science University of Toronto  
Abstract: Andreev et al. [ABCR97] give constructions of Boolean functions (computable by polynomial-size circuits) that require large read-once branching program (1-b.p.'s): a function in P that requires 1-b.p. of size at least 2 npolylog(n) , a function in quasipolynomial time that requires 1-b.p. of size at least 2 nO(log n) , and a function in LINSPACE that requires 1-b.p. of size 2 nlognO(1) . We point out alternative, much simpler constructions of such Boolean functions by applying the idea of almost k-wise independence more directly, without the use of discrepancy set generators for large affine subspaces. Our constructions are obtained by derandomizing the probabilistic proofs of existence of the corresponding combinatorial objects. 
Abstract-found: 1
Intro-found: 1
Reference: [ABCR97] <author> A.E. Andreev, J.L. Baskakov, A.E.F. Clementi, and J.D.P. </author> <title> Rolim. Small pseudo-random sets yield hard functions: New tight explicit lower bounds for branching programs. </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <address> TR97-053, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction Andreev et al. <ref> [ABCR97] </ref> construct Boolean functions hard for read-once branching programs. Recall that a branching program is a directed acyclic graph with one source and with each node of out-degree at most 2. <p> Informally, an r-mixed function essentially depends on every set of r variables (see the next section for a precise definition). Andreev et al. <ref> [ABCR97] </ref> show how to construct a Boolean function f n (x 1 ; : : : ; x n ) in LINSPACE" P=poly that is r-mixed for r = n dlog ne 2 for almost all n. <p> Both constructions in <ref> [ABCR97] </ref> use the idea of *-biased sample spaces introduced by Naor and Naor [NN93], who also gave an algorithm for generating small sample spaces; three simpler constructions of such spaces were later given by Alon et al. [AGHP92]. <p> This gives us a DTIME (2 O (log 3 n) )-computable Boolean function of quasilinear circuit-size with the lower bound for 1-b.p.'s slightly better than that for the corresponding quasipolynomial-time computable function in <ref> [ABCR97] </ref>, and a Boolean function in quasilinear time, QL, with the lower bound for 1-b.p.'s at least 2 nO (log 3 n) , which is only slightly worse than the lower bound for the corresponding polynomial-time function in [ABCR97]. <p> 1-b.p.'s slightly better than that for the corresponding quasipolynomial-time computable function in <ref> [ABCR97] </ref>, and a Boolean function in quasilinear time, QL, with the lower bound for 1-b.p.'s at least 2 nO (log 3 n) , which is only slightly worse than the lower bound for the corresponding polynomial-time function in [ABCR97]. In the analysis of our construction, we employ a combinatorial lemma due to Razborov [Raz88], which bounds from above the probability that none of n events occur, given that these events are almost k-wise independent. The remainder of the paper. <p> The remainder of the paper. In the following section, we state the necessary definitions and some auxiliary lemmas. In Section 3, we show how to construct an r-mixed function that has the same lower bound for 1-b.p. as that in <ref> [ABCR97] </ref>. In Section 4, we give a simple derandomiza-tion procedure for a construction in [SZ96], obtaining two more Boolean functions (computable in polynomial time and quasipolynomial time, respectively) that are hard with respect to 1-b.p.'s. 2 2 Preliminaries Below we give the standard definitions of k-wise independence and (*; k)-independence. <p> by "hard-wiring" good advice strings, we get the function f (~x) = x OE (~x) computable by quasilinear-size circuits, while requiring 1-b.p.'s of size at least 2 n (5+*) log n , for any * &gt; 0 and sufficiently large n; these parameters appear to be better than those in <ref> [ABCR97] </ref>. By making the advice strings a part of the input, we obtain a function in QL that requires 1-b.p.'s of size at least 2 nO (log 3 n) . 6 Acknowledgements. I am grateful to Alexander Razborov for referring me to [Raz88].
Reference: [AGHP92] <author> N. Alon, O. Goldreich, J. Hastad, and R. Peralta. </author> <title> Simple constructions of almost kwise independent random variables. Random Structures and Algorithms, </title> <booktitle> 3(3) </booktitle> <pages> 289-304, </pages> <year> 1992. </year> <note> (preliminary version in the 31st FOCS). </note>
Reference-contexts: Both constructions in [ABCR97] use the idea of *-biased sample spaces introduced by Naor and Naor [NN93], who also gave an algorithm for generating small sample spaces; three simpler constructions of such spaces were later given by Alon et al. <ref> [AGHP92] </ref>. Andreev et al. define certain *-discrepancy sets for systems of linear equations over GF (2), and relate these discrepancy sets to the biased sample spaces of Naor and Naor through a reduction lemma. Using a particular construction of a biased sample space (the powering construction from [AGHP92]), Andreev et al. <p> Alon et al. <ref> [AGHP92] </ref>. Andreev et al. define certain *-discrepancy sets for systems of linear equations over GF (2), and relate these discrepancy sets to the biased sample spaces of Naor and Naor through a reduction lemma. Using a particular construction of a biased sample space (the powering construction from [AGHP92]), Andreev et al. give an algorithm for generating *-discrepancy sets, which is then used to derandomize both a probabilistic construction of an r-mixed Boolean function for r = ndlog ne2 and the construction in [SZ96] mentioned above. <p> Naor and Naor [NN93] present an efficient construction of small (*; k)-independent sample spaces; three simpler constructions are given in <ref> [AGHP92] </ref>. Here we recall just one construction from [AGHP92], the powering construction, although any of their three constructions could be used for our purposes. Consider the Galois field GF (2 m ) and the associated m-dimensional vector space over GF (2). <p> Naor and Naor [NN93] present an efficient construction of small (*; k)-independent sample spaces; three simpler constructions are given in <ref> [AGHP92] </ref>. Here we recall just one construction from [AGHP92], the powering construction, although any of their three constructions could be used for our purposes. Consider the Galois field GF (2 m ) and the associated m-dimensional vector space over GF (2). <p> Lemma 1 (<ref> [AGHP92] </ref>) For every k 6 N , the sample space Pow 2m N is 2 m ; k -independent. The proof of the above lemma follows from the results in [AGHP92] (Proposition 3 and Corollary 1). As we have mentioned in the introduction, we shall view the strings of the sample space Pow 2m N as the truth tables of Boolean functions of log N variables. <p> It follows from Theorem 5 that we can find an r-mixed function, for r = n dlog ne 2, in LINSPACE by picking the lexicographically first string of 2m bits that determines such a function. Remark 6 Any of the three constructions of small (*; k)-independent spaces in <ref> [AGHP92] </ref> could be used in the same manner as described above to obtain an r-mixed Boolean function computable in LINSPACE " P=poly, for r = n dlog ne 2. 4 Constructing (s; n; q)-Complete Functions Let us take a look at the probabilistic proof (as presented in [SZ96]) of the existence
Reference: [NN93] <author> J. Naor and M. Naor. </author> <title> Small-bias probability spaces: Efficient constructions and applications. </title> <journal> SIAM Journal on Computing, </journal> <volume> 22(4) </volume> <pages> 838-856, </pages> <year> 1993. </year> <note> (preliminary version in the 22nd STOC). </note>
Reference-contexts: Both constructions in [ABCR97] use the idea of *-biased sample spaces introduced by Naor and Naor <ref> [NN93] </ref>, who also gave an algorithm for generating small sample spaces; three simpler constructions of such spaces were later given by Alon et al. [AGHP92]. <p> In our second construction, we derandomize a probabilistic existence proof in [SZ96]. We proceed along the usual path of derandomizing probabilistic algorithms whose analysis depends only on almost k-wise independence rather than full independence of random bits <ref> [NN93] </ref>. Observing that the construction in [SZ96] is one such algorithm, we reduce its randomness complexity to O (log 3 n) bits (again treating strings of an appropriate sample space as truth tables). <p> Naor and Naor <ref> [NN93] </ref> present an efficient construction of small (*; k)-independent sample spaces; three simpler constructions are given in [AGHP92]. Here we recall just one construction from [AGHP92], the powering construction, although any of their three constructions could be used for our purposes.
Reference: [Raz88] <author> A.A. Razborov. </author> <title> Bounded-depth formulae over f&; g and some combinatorial problems. </title> <editor> In S. I. Adyan, editor, </editor> <booktitle> Problems of Cybernetics. Complexity Theory and Applied Mathematical Logic, </booktitle> <pages> pages 149-166. </pages> <address> VINITI, Moscow, </address> <year> 1988. </year> <note> (in Russian). </note>
Reference-contexts: In the analysis of our construction, we employ a combinatorial lemma due to Razborov <ref> [Raz88] </ref>, which bounds from above the probability that none of n events occur, given that these events are almost k-wise independent. The remainder of the paper. In the following section, we state the necessary definitions and some auxiliary lemmas. <p> By making the advice strings a part of the input, we obtain a function in QL that requires 1-b.p.'s of size at least 2 nO (log 3 n) . 6 Acknowledgements. I am grateful to Alexander Razborov for referring me to <ref> [Raz88] </ref>. I would like to thank Stephen Cook and Petr Savicky for their comments on a preliminary version of this paper, and Dieter van Melkebeek for helpful discussions. Finally, I want to thank my supervisor, Stephen Cook, for his encouragement and support.
Reference: [SS93] <author> J. Simon and M. Szegedy. </author> <title> A new lower bound theorem for read-only-once branching programs and its applications. </title> <editor> In J.-Y. Cai, editor, </editor> <booktitle> Advances in Computational Complexity, </booktitle> <pages> pages 183-193. </pages> <address> AMS-DIMACS Series, </address> <year> 1993. </year>
Reference-contexts: Finally, the size of a branching program is defined as the number of its nodes. Read-once branching programs represent a model of computation for which we can prove strong lower bounds. One way of getting a lower bound is to apply a combinatorial theorem of Simon and Szegedy <ref> [SS93] </ref>, a particular case of which states that any 1-b.p. computing an r-mixed Boolean function has size at least 2 r . Informally, an r-mixed function essentially depends on every set of r variables (see the next section for a precise definition).
Reference: [SZ96] <author> P. Savicky and S. Zak. </author> <title> A large lower bound for 1-branching programs. </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <address> TR96-036, </address> <year> 1996. </year>
Reference-contexts: A Boolean function in DTIME (2 log 2 n ) " P=poly that requires a 1-b.p. of size at least 2 nO (log n) is constructed by derandomizing the probabilistic construction of a certain Boolean function given in <ref> [SZ96] </ref>. <p> Using a particular construction of a biased sample space (the powering construction from [AGHP92]), Andreev et al. give an algorithm for generating *-discrepancy sets, which is then used to derandomize both a probabilistic construction of an r-mixed Boolean function for r = ndlog ne2 and the construction in <ref> [SZ96] </ref> mentioned above. We will show that the known algorithms for generating small *-biased sample spaces can be applied directly to get the r-mixed Boolean function as above, and to derandomize the construction in [SZ96]. <p> probabilistic construction of an r-mixed Boolean function for r = ndlog ne2 and the construction in <ref> [SZ96] </ref> mentioned above. We will show that the known algorithms for generating small *-biased sample spaces can be applied directly to get the r-mixed Boolean function as above, and to derandomize the construction in [SZ96]. The idea of our first construction is very simple: treat the elements (bit strings) of an *-biased sample space as the truth tables of Boolean functions. <p> We mention several possible constructions of an r-mixed Boolean function with r = n dlog ne 2. In our second construction, we derandomize a probabilistic existence proof in <ref> [SZ96] </ref>. We proceed along the usual path of derandomizing probabilistic algorithms whose analysis depends only on almost k-wise independence rather than full independence of random bits [NN93]. Observing that the construction in [SZ96] is one such algorithm, we reduce its randomness complexity to O (log 3 n) bits (again treating strings <p> In our second construction, we derandomize a probabilistic existence proof in <ref> [SZ96] </ref>. We proceed along the usual path of derandomizing probabilistic algorithms whose analysis depends only on almost k-wise independence rather than full independence of random bits [NN93]. Observing that the construction in [SZ96] is one such algorithm, we reduce its randomness complexity to O (log 3 n) bits (again treating strings of an appropriate sample space as truth tables). <p> In the following section, we state the necessary definitions and some auxiliary lemmas. In Section 3, we show how to construct an r-mixed function that has the same lower bound for 1-b.p. as that in [ABCR97]. In Section 4, we give a simple derandomiza-tion procedure for a construction in <ref> [SZ96] </ref>, obtaining two more Boolean functions (computable in polynomial time and quasipolynomial time, respectively) that are hard with respect to 1-b.p.'s. 2 2 Preliminaries Below we give the standard definitions of k-wise independence and (*; k)-independence. <p> We shall see in the following section that an r-mixed function for r = n dlog ne 2 has a nonzero probability in a distribution F n;m , where m 2 O (n). Following Savicky and Zak <ref> [SZ96] </ref>, we call a function OE : f0; 1g n ! f1; 2; : : : ; ng (s; n; q)- complete, for some integers s, n, and q, if for every set I f1; : : :; ng of size n s we have 3 1. for every 0-1 assignment <p> It is proved in <ref> [SZ96] </ref> that a Boolean function f (~x) = x OE (~x) requires 1-b.p.'s of size at least 2 ns =q, provided that OE is an (s; n; q)-complete function. The following lemma can be used to construct an (s; n; q)-complete function. Lemma 3 ([SZ96]) Let A be a t fi <p> k)-independent spaces in [AGHP92] could be used in the same manner as described above to obtain an r-mixed Boolean function computable in LINSPACE " P=poly, for r = n dlog ne 2. 4 Constructing (s; n; q)-Complete Functions Let us take a look at the probabilistic proof (as presented in <ref> [SZ96] </ref>) of the existence of a matrix A and a function with the properties assumed in Lemma 3. Suppose that a t fi n matrix A over GF (2) and a function : f0; 1g t ! f1; 2; : : :; ng are chosen uniformly at random.
References-found: 6

