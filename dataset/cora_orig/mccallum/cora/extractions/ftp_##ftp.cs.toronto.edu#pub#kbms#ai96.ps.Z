URL: ftp://ftp.cs.toronto.edu/pub/kbms/ai96.ps.Z
Refering-URL: ftp://ftp.cs.toronto.edu/pub/kbms/readme.html
Root-URL: 
Title: Efficient Algorithms for Qualitative Reasoning about Imprecise Space  
Author: Thodoros Topaloglou 
Address: Toronto, Ontario, M5S 1A4, Canada  
Affiliation: Department of Computer Science, University of Toronto  
Abstract: This paper addresses the problem of qualitative spatial reasoning and presents efficient algorithms to deal it. We assume a representation which views space as a totality of objects surrounded by a haze area and connected in terms of qualitative spatial relations. Statements relating objects in this represesentation are expressed in terms of haze-order constraints. Reasoning about haze-orders involves, first, determining the consistency of a set of haze-order constraints, and, second, deducing new relations from those that are already known. The developed reasoning algorithms make use of a data structure called haze-order graph which trades space for efficiency. Experimental results illustrate the efficiency of the algorithms.
Abstract-found: 1
Intro-found: 1
Reference: [Fre82] <author> E.C. Freuder. </author> <title> A Sufficient Condition for Backtrack-Free Search. </title> <journal> Journal of ACM, </journal> <volume> 21(11) </volume> <pages> 958-966, </pages> <year> 19982. </year>
Reference-contexts: T 1 &lt; g &gt; g f&lt;; gg f&lt;; g; &gt;g f&gt;; gg T 2 &lt; g fl &gt; &lt; fg; g g ffl; &gt;g fl f&lt;; g g ffl; &gt;g fl &gt; Fig. 5. Transitivity Tables The following definitions are "classics" in constraint networks references [Mac77], <ref> [Fre82] </ref>, [vB92], [GS95], etc.
Reference: [GA89] <author> M. Ghallab and M.A. Alaoui. </author> <title> Managing Efficiently Temporal Relations through Indexed Spanning Trees. </title> <booktitle> In Proceedings of IJCAI-89, </booktitle> <pages> pages 1297-1303, </pages> <year> 1989. </year>
Reference-contexts: The query graph, Q, that corresponds to a tight-order graph, T , is a logically equivalent representation to T that supports constant-time retrievals. The query graph is computed using a ranking process similar to that of <ref> [GA89] </ref> and [GS93] which assigns a rank to each node, thus making query processing a lookup-and-compare operation. In a haze-order graph the assignment of a single ranking value to each node will not produce the desirable result.
Reference: [GS93] <author> A. Gerevini and L. Schubert. </author> <title> Efficient temporal reasoning through timegraphs. </title> <booktitle> In IJCAI-93, </booktitle> <pages> pages 648-654, </pages> <year> 1993. </year>
Reference-contexts: The query graph, Q, that corresponds to a tight-order graph, T , is a logically equivalent representation to T that supports constant-time retrievals. The query graph is computed using a ranking process similar to that of [GA89] and <ref> [GS93] </ref> which assigns a rank to each node, thus making query processing a lookup-and-compare operation. In a haze-order graph the assignment of a single ranking value to each node will not produce the desirable result.
Reference: [GS95] <author> A. Gerevini and L. Schubert. </author> <title> Efficient algorithms for qualitative reasoning about time. </title> <note> Artificial Intelligence (to appear), </note> <year> 1995. </year>
Reference-contexts: T 1 &lt; g &gt; g f&lt;; gg f&lt;; g; &gt;g f&gt;; gg T 2 &lt; g fl &gt; &lt; fg; g g ffl; &gt;g fl f&lt;; g g ffl; &gt;g fl &gt; Fig. 5. Transitivity Tables The following definitions are "classics" in constraint networks references [Mac77], [Fre82], [vB92], <ref> [GS95] </ref>, etc. <p> In the PA without 6= relations the size of the consistent subgraph is 3, etc. [vB92]. Fig. 6. Minimal Graphs Proof. By the counter example of Figure 6. fl Theorem 18. Any consistent haze order graph entails minimal relations. Proof. We follow the same argument line as in <ref> [GS95] </ref>. A minimal relation is the strongest possible relation entailed. We need to show that any stronger relation than the entailed by a haze-order graph is not feasible. We take the case of the haze-order graph with labels f&lt;; g; &gt;g, for which Lemma 12 establishes entailment.
Reference: [Mac77] <author> A.K. Mackworth. </author> <title> Consistency in Networks of Relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8(1) </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: T 1 &lt; g &gt; g f&lt;; gg f&lt;; g; &gt;g f&gt;; gg T 2 &lt; g fl &gt; &lt; fg; g g ffl; &gt;g fl f&lt;; g g ffl; &gt;g fl &gt; Fig. 5. Transitivity Tables The following definitions are "classics" in constraint networks references <ref> [Mac77] </ref>, [Fre82], [vB92], [GS95], etc. <p> Path consistency can be checked in O (n 3 ) time, where n is the number of vertices in the constraint graph, using the Mackworth's path consistency (PC) algorithm <ref> [Mac77] </ref>. A constraint network is minimal if the relations holding between each pairs of its vertices are the strongest possible. Relation R1 is stronger than R2 if R1 implies R2 but not the reverse.
Reference: [Top94] <author> Thodoros Topaloglou. </author> <title> First Order Theories of Approximate Space. </title> <booktitle> In AAAI-94 Workshop on Spatial and Temporal Reasoning, </booktitle> <pages> pages 47-53, </pages> <year> 1994. </year>
Reference-contexts: The discreteness assumption implies that g, the measure of the haze size, takes integer values. The orthogonality assumption implies that spatial entities are interpreted over the cartesian space. In <ref> [Top94, Top96] </ref> we have presented a set of spatial relations on points and regions that are defined in the haze space.
Reference: [Top96] <author> Thodoros Topaloglou. </author> <title> On the Representation of Partial Spatial Infornation in Knowledge Bases. </title> <type> PhD Thesis, </type> <institution> University of Toronto, </institution> <year> 1996. </year>
Reference-contexts: The goal of this research is to develop a representation and a computational model that make the same task possible in a more automated setup. This paper assumes a representation which is based on the haze-point ontology of space proposed in <ref> [Top96] </ref>, and presents efficient algorithms for qualitative spatial reasoning. In the haze-point ontology, space is viewed as a totality of spatial objects connected in terms of spatial relations. A haze point is the most elementary object type since higher order objects are composed of haze points. <p> Relation h is symmetric, reflexive and non-transitive; g is asymmetric and transitive; in addition, h and g are complementary, i.e., 8xy (x g y _ y g x _ h (x; y; g)). A formal presentation of the haze space appears in <ref> [Top96] </ref>. Fig. 1. The haze-point space In the two-dimensional, case points are surrounded by a square-shaped 2 haze. Two points can be combined to form a line, in fact a haze-line. A sequence of connected haze-lines defines a haze, and a closed haze defines a region. <p> The discreteness assumption implies that g, the measure of the haze size, takes integer values. The orthogonality assumption implies that spatial entities are interpreted over the cartesian space. In <ref> [Top94, Top96] </ref> we have presented a set of spatial relations on points and regions that are defined in the haze space. <p> Edges are denoted by triples (x; l; y) and are either directed (l is &lt;) standing for relations or undirected (l is g) standing for h relations. 2 The square-shaped two-dimensional points are justified by the law of independent combination <ref> [Top96] </ref> that is employed to construct thoeries of k-dimensional space out of k one-dimensional coordinate theories. Fig. 2. Inconsistent (a-d) and consistent (e-f) &lt; i ; g j -cycles. Definition 2. <p> We can now outline the steps of the algorithm. A detailed description and an implementation appears in <ref> [Top96] </ref>. Step 1 (reduction) : This step builds a graph. It starts from some initial node, v 0 , and creates a hyper-node h with queue (h) = Alist (v 0 ). <p> At the end of this process we have information about the closest next and closest previous node for each each node v, as well as information about the possible next and possible previous node of v. A detailed description of the "tightening" algorithm is presented in <ref> [Top96] </ref>. The next step is to create a representation of the tight-order graph which is suitable for query processing. 4.3 Computing the Query Graph A query graph is used for answering queries. <p> However, this algorithm can still be used for inconsistency detection. Fig. 7. Performance of Haze-Order Consistency Algorithms Finally, we have implemented and experimentally evaluated the presented algorithms (a detailed study of the performance of the developed algorithms is presented in <ref> [Top96] </ref>). The graph on the left in Figure 7, shows a comparison of the path consistency and the haze-order consistency algorithms on randomly generated common data.
Reference: [vB92] <author> Peter van Beek. </author> <title> Reasoning About Qualitative Temporal Information. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 297-326, </pages> <year> 1992. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: T 1 &lt; g &gt; g f&lt;; gg f&lt;; g; &gt;g f&gt;; gg T 2 &lt; g fl &gt; &lt; fg; g g ffl; &gt;g fl f&lt;; g g ffl; &gt;g fl &gt; Fig. 5. Transitivity Tables The following definitions are "classics" in constraint networks references [Mac77], [Fre82], <ref> [vB92] </ref>, [GS95], etc. <p> In the PA without 6= relations the size of the consistent subgraph is 3, etc. <ref> [vB92] </ref>. Fig. 6. Minimal Graphs Proof. By the counter example of Figure 6. fl Theorem 18. Any consistent haze order graph entails minimal relations. Proof. We follow the same argument line as in [GS95]. A minimal relation is the strongest possible relation entailed.
References-found: 8

