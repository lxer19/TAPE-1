URL: http://www.cs.uchicago.edu/publications/tech-reports/TR-96-16.ps
Refering-URL: http://cs-www.uchicago.edu/publications/tech-reports/
Root-URL: 
Author: Stephen Fenner Lance Fortnow 
Affiliation: Harry Buhrman Centrum voor Wiskunde en Informatica  University of Southern Maine  Centrum voor Wiskunde en Informatica University of Chicago  
Abstract: Two Results on Resource-Bounded Measure Abstract We construct an oracle relative to which NP has p-measure 0 but D p has measure 1 in EXP. This gives a strong relativized negative answer to a question posed by Lutz [Lut96]. Secondly, we give strong evidence that BPP is small. We show that BPP has p-measure 0 unless EXP = MA and the polynomial-time hierarchy collapses. This contrasts the work of Regan et al. [RSC95], where it is shown that P=poly does not have p-measure 0 unless strong pseudorandom generators do not exist.
Abstract-found: 1
Intro-found: 1
Reference: [ASMZ96] <author> K. Ambos-Spies, E. Mayordomo, and Xizhong Zheng. </author> <title> A comparison of weak completeness notions. </title> <booktitle> In Proeceedings of Eleventh Annual Conference on Computational Complexity, </booktitle> <pages> pages 171 - 178, </pages> <year> 1996. </year>
Reference-contexts: The next theorem discards with this possibility. Theorem 2 If p (P NP [1] ) 6= 0 then p (NP) 6= 0. Proof. p (P NP [1] ) 6= 0 implies that SAT is weakly p 1tt -complete for EXP. Ambos-Spies, Mayordomo, and Zheng <ref> [ASMZ96] </ref> have shown that the weakly p 1tt -completeness notion coincides with weakly p m -completeness for EXP. Hence SAT is weakly p m -complete for EXP and thus p (NP) 6= 0.
Reference: [BFNW93] <author> L. Babai, L. Fortnow, N. Nisan, and A. Wigderson. </author> <title> BPP has subexponential simulations unless EXPTIME has publishable proofs. </title> <journal> Computational Complexity, </journal> <volume> 3 </volume> <pages> 307-318, </pages> <year> 1993. </year>
Reference-contexts: We will see that this is unlikely since it would collapse the polynomial-time hierarchy. Hence we provide strong evidence that p (BPP) = 0. Theorem 3 If p (BPP) 6= 0 then EXP = MA. We will use the following Theorem from Babai, Fortnow, Nisan, and Wigderson <ref> [BFNW93] </ref> that states that if EXP 6= MA then BPP can be simulated in subexponential time for infinitely many input lengths. Theorem 4 ([BFNW93]) If EXP 6= MA then for all L 2 BPP, and for all * there exists a set L 0 2 DTIME (2 n * ) such
Reference: [BT94] <author> Buhrman and Torenvliet. </author> <title> On the cutting edge of relativization: The resource bounded injury method. </title> <booktitle> In Annual International Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 263-273, </pages> <year> 1994. </year>
Reference-contexts: Some diagonalization will also be necessary to force certain NP computations. To mix coding with diagonalization, we employ a simplified version of the trick used to construct an oracle for P NP = NEXP <ref> [BT94, FF95] </ref>. For each x, we reserve two potential regions|left and right|in which to code M A (x), only one of which will actually be used. To code correctly in a region we must let exactly one string in the region enter A.
Reference: [FF95] <author> S. Fenner and L. Fortnow. </author> <title> Beyond P NP = N EXP . In STACS 95, </title> <booktitle> volume 900 of Lecture Notes in Computer Science, </booktitle> <pages> pages 619-627. </pages> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: Some diagonalization will also be necessary to force certain NP computations. To mix coding with diagonalization, we employ a simplified version of the trick used to construct an oracle for P NP = NEXP <ref> [BT94, FF95] </ref>. For each x, we reserve two potential regions|left and right|in which to code M A (x), only one of which will actually be used. To code correctly in a region we must let exactly one string in the region enter A.
Reference: [LM96] <author> J. Lutz and E. Mayordomo. </author> <title> Cook versus Karp-Levin: Separating completeness notions if np is not small. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 164(1-2):141-163, </address> <year> 1996. </year>
Reference-contexts: Recent results have shown that many reasonable conjectures in computational complexity theory follow from the hypothesis that NP is not small (i.e., p (NP) 6= 0), and hence it seems to be a plausible scientific hypothesis <ref> [LM96, Lut96] </ref>. In [Lut96], Lutz shows that if p (NP) 6= 0 then BPP is low for P 2 . He shows that this even follows from the seemingly weaker hypothesis that p ( P 2 ) 6= 0.
Reference: [Lut92] <author> J.H. Lutz. </author> <title> Almost everywhere high nonuniform complexity. </title> <journal> J. Computer and System Sciences, </journal> <volume> 44 </volume> <pages> 220-258, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Since the introduction of resource-bounded measure by Lutz <ref> [Lut92] </ref>, many researchers investigated the size (measure) of complexity classes in exponential time (EXP). A particular point of interest is the hypothesis that NP does not have p-measure 0. <p> The above strategy works for one single language in BPP. To make the construction work uniformly for all L 2 BPP we simulate all the DTIME (2 n ) machines with a single DTIME (2 2n ) machine allocating 2 i of our capital to machine i (see <ref> [Lut92, May94b] </ref>). QED This contrasts the result by Regan et. al. [RSC95]. There it is shown that p (P=poly) 6= 0, unless strong pseudorandom generators do not exist.
Reference: [Lut96] <author> J. Lutz. </author> <title> Observations on measure and lowness for P 2 . In STACS 96, </title> <booktitle> volume 1046 of Lecture Notes in Computer Science, </booktitle> <pages> pages 87 - 98. </pages> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: Recent results have shown that many reasonable conjectures in computational complexity theory follow from the hypothesis that NP is not small (i.e., p (NP) 6= 0), and hence it seems to be a plausible scientific hypothesis <ref> [LM96, Lut96] </ref>. In [Lut96], Lutz shows that if p (NP) 6= 0 then BPP is low for P 2 . He shows that this even follows from the seemingly weaker hypothesis that p ( P 2 ) 6= 0. <p> Recent results have shown that many reasonable conjectures in computational complexity theory follow from the hypothesis that NP is not small (i.e., p (NP) 6= 0), and hence it seems to be a plausible scientific hypothesis [LM96, Lut96]. In <ref> [Lut96] </ref>, Lutz shows that if p (NP) 6= 0 then BPP is low for P 2 . He shows that this even follows from the seemingly weaker hypothesis that p ( P 2 ) 6= 0. <p> A set is in D p if it can be expressed as the difference of two sets in NP. 3 Measure of NP versus Measure of P NP In this section we concentrate on the question posed by Lutz <ref> [Lut96] </ref>. We show that relative to some oracle p (NP) = 0 does not imply that p (P NP ) = 0. We do this in a very strong way by constructing an oracle such that NP does not contain P-bi-immune sets and D p = EXP.
Reference: [May94a] <author> E. Mayordomo. </author> <title> Almost every set in exponential time is p-bi-immune. </title> <journal> Theoret ical Computer Science, </journal> <volume> 136(2) </volume> <pages> 487-506, </pages> <year> 1994. </year> <month> 6 </month>
Reference-contexts: In this paper we show that, relative to some oracle, the two assumptions are not equivalent. We show a relativized world where D p = EXP whereas NP has no P-bi-immune sets. This immediately implies, via a result of Mayordomo <ref> [May94a] </ref>, that in this relativized world, NP has p-measure 0 and D p , and hence P 2 , has measure 1 in EXP, and thus does not have p-measure 0, or even p 2 -measure 0. fl P.O.
Reference: [May94b] <author> E. Mayordomo. </author> <title> Contributions to the study of resource-bounded measure. </title> <type> PhD thesis, </type> <institution> Universitat Politecnica de Catalunya, </institution> <year> 1994. </year>
Reference-contexts: At this length we will have lost at most n times and we will win 5 2 n times. This shows that for the above betting strategy the lim-sup of our capital goes to infinity. However using the idea from Mayordomo <ref> [May94b] </ref> we save some money when we have doubled our capital and thus the lim-inf also goes to infinity. The above strategy works for one single language in BPP. <p> The above strategy works for one single language in BPP. To make the construction work uniformly for all L 2 BPP we simulate all the DTIME (2 n ) machines with a single DTIME (2 2n ) machine allocating 2 i of our capital to machine i (see <ref> [Lut92, May94b] </ref>). QED This contrasts the result by Regan et. al. [RSC95]. There it is shown that p (P=poly) 6= 0, unless strong pseudorandom generators do not exist.
Reference: [RSC95] <author> K. Regan, D. Sivakumar, and J. Cai. </author> <title> Pseudorandom generators, measure theory, and natural proofs. </title> <booktitle> In 36th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 26 - 35, </pages> <year> 1995. </year> <month> 7 </month>
Reference-contexts: We give very strong evidence supporting this intuition. We show that p (BPP) = 0 unless EXP = MA and the polynomial-time hierarchy collapses. Since BPP 2 P=poly our result contrasts the one by Regan, Sivakumar and Cai <ref> [RSC95] </ref>, where it is shown that p (P=poly) 6= 0, unless strong pseudorandom generators do not exist. 2 Preliminaries We let = f0; 1g and identify strings in fl with natural numbers via the usual binary representation. <p> To make the construction work uniformly for all L 2 BPP we simulate all the DTIME (2 n ) machines with a single DTIME (2 2n ) machine allocating 2 i of our capital to machine i (see [Lut92, May94b]). QED This contrasts the result by Regan et. al. <ref> [RSC95] </ref>. There it is shown that p (P=poly) 6= 0, unless strong pseudorandom generators do not exist.
References-found: 10

