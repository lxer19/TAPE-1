URL: http://www.crs4.it/~cmn/GeoComp/Papers/ParComp/ParLib++.ps.gz
Refering-URL: http://www.crs4.it/~cmn/Parcomp/pcg_papers.html
Root-URL: 
Email: e-mail greco@crs4.it  
Title: ParLib++  
Author: David Greco 
Date: March 25, 1994  
Address: Via Nazario Sauro 10 I-09123 Cagliari Italy  
Affiliation: Parallel Computing Group Centre for Advanced Studies, Research and Development in Sardinia  
Abstract: This paper describes a C++ library to perform general operations on arrays distributed onto different machines following the Single Pro gram Multiple Data model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> PVM3.0 User's Guide and Reference Manual Oak Ridge National Laboratory Oak Ridge, Tennessee, </institution> <month> February </month> <year> 1993 </year>
Reference-contexts: Introduction ParLib++ is a C++ library to distribute arrays transparently onto parallel processes. ParLib++ is built on top of the message passing library PVM (Parallel Virtual Machine) <ref> [1] </ref>. PVM offers a simple mechanism of communication, message passing, between different processes running on different machines. Only PVM's send and receive constructs are utilized, therefore it is easy to port this library onto additional architectures.
Reference: [2] <institution> CM Fortran Reference Manual Thinking Machines Corporation Cambridge, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: Only PVM's send and receive constructs are utilized, therefore it is easy to port this library onto additional architectures. Using this library, a user can write a program in a CM Fortran (Connection Machine Fortran <ref> [2] </ref>) style without worrying about the distribution of arrays on the processes involved in the computation. [2] ParLib++ is based on the SPMD (Single Program Multiple Data) paradigm, which means that there is a single program which is duplicated onto all the processors. <p> Using this library, a user can write a program in a CM Fortran (Connection Machine Fortran <ref> [2] </ref>) style without worrying about the distribution of arrays on the processes involved in the computation. [2] ParLib++ is based on the SPMD (Single Program Multiple Data) paradigm, which means that there is a single program which is duplicated onto all the processors.
Reference: [3] <institution> CMSSL Release Notes for the CM-200 Thinking Machines Corporation Cambridge, Massachusetts, </institution> <month> June </month> <year> 1992. </year>
Reference: [4] <institution> Vienna Fortran A Language Specification NASA Contract No. NAS1-18605, Langley Research Center Hampton, Virginia, </institution> <month> March </month> <year> 1992 </year> <month> 13 </month>
Reference-contexts: Since this relation is unequivocally determined by the shape of the array (rank and the axis dimensions), the arrays with the same shape share the same geometry <ref> [4] </ref>. Using ParLib++ The user writes the program in C++ using the array classes. He must put at the begin of the program the function StartProcess () and at the end, the function StopProcess (). These two functions permit linking/detaching the 2 program to/from the PVM system.
References-found: 4

