URL: http://ballade.cs.ucla.edu:8080/~cong/papers/fpga95.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: On Nominal Delay Minimization in LUT-Based FPGA Technology Mapping  
Author: Jason Cong and Yuzheng Ding 
Address: Los Angeles, CA 90024  
Affiliation: UCLA Computer Science Department,  
Abstract: We study the nominal delay minimization problem in LUT-based FPGA technology mapping, where interconnect delay is assumed proportional to net fanout size. We prove that the delay-optimal K-LUT mapping problem under the nominal delay model is NP-hard when K 3, and remains NP-hard for duplication-free mapping and tree-based mapping for K 5 (but is polynomial time solvable for K = 2). We also present a simple heuristic to take nominal delay into consideration during LUT mapping for delay minimization. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Cong and Y. Ding, </author> <title> An Optimal Technology Mapping Algorithm for Delay Optimization in Lookup-Table Based FPGA Designs, </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 13, No. 1, </volume> <month> Jan. </month> <year> 1994, </year> <pages> 1-12. </pages>
Reference-contexts: For general K-bounded Boolean networks, it is shown that the depth minimum mapping problem can be solved optimally in strong polynomial time <ref> [1] </ref>, while the area minimum mapping problem is NP-hard for K 5 [5]. <p> These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) [5] [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] <ref> [1] </ref> [1] Table 1: Summary of previous complexity results on K-LUT mapping of n-node m-edge network Delay minimization has been an important optimization objective in FPGA mapping because the speed of FPGA designs is usually slower than that of the gate array or standard cell designs due to the extra delay <p> These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) [5] [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] <ref> [1] </ref> [1] Table 1: Summary of previous complexity results on K-LUT mapping of n-node m-edge network Delay minimization has been an important optimization objective in FPGA mapping because the speed of FPGA designs is usually slower than that of the gate array or standard cell designs due to the extra delay introduced <p> Most previous mapping algorithms for delay minimization use the depth of the mapping solution as the measurement of delay, i.e. based on the unit delay model, which assumes uniform delay at every logic level. As shown in <ref> [1] </ref>, the depth minimization problem can be solved optimally in polynomial time by efficient network flow computation. However, the assumption made by the unit delay model is usually over-simplified. <p> The proof of its optimality, omitted due to page limit, is based on the fact that for K = 2 and in the absence of the cuts of size one, any K-feasible cut is a min-cut; and the following property of the maximum-volume min-cut proved in <ref> [1] </ref>, Lemma 7 For any cone C v of a node v, there exists a unique maximum-volume 3 min-cut (X; X ) of C v such that for any other min-cut (X 0 ; X 0 ) of C v , X 0 X . <p> The cut computation in step 2.1 can be implemented using the augmenting path algorithm as used in FlowMap <ref> [1] </ref>, which takes linear time in terms of the number of edges. In he worst case the mapping for Q (n) nodes must be computed, so the complexity is O (mn). <p> We use the dynamic programming approach similar to that used in FlowMap <ref> [1] </ref>. We compute the delay-minimal mapping of each node according to a topological ordering of nodes starting from the PIs. <p> Note that H (X v ; X v ) corresponds to the maximum delay to the input of X v (which will be the LUT implementing v). Such a cut can be computed using the minimum-height K-feasible cut algorithm introduced in FlowMap <ref> [1] </ref>. The minimum-height K-feasible cut algorithm was originally used in FlowMap for depth-optimal mapping under the unit delay model. The minimum-height K-feasible cut at each node can be found in O (Km) time, where m is the number of edges in the network. <p> the same design with different choices of ff in the D N (u) estimation to obtain the best result. 5 Experimental Results We have implemented the heuristic algorithm described in the preceding section and tested it on a set of six midsize MCNC benchmark circuits which were also used in <ref> [1] </ref>.
Reference: [2] <author> J. Cong and Y. Ding, </author> <title> On Area/Depth Trade-off in LUT-Based FPGA Technology Mapping, </title> <journal> IEEE Trans. on VLSI Systems, </journal> <volume> Vol. 2, No. 2, </volume> <month> June </month> <year> 1994, </year> <pages> 137-148. </pages>
Reference-contexts: from AT&T, Fujitsu Laboratories of America, Hewlett-Packard, and Xilinx under the 1993-94 California MICRO Program and NYI matching program. tion during mapping), it has been shown that both the depth minimum mapping problem and the area minimum mapping problem can be solved optimally in polynomial time for any fixed K <ref> [2] </ref>. These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) [5] [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] [1] [1] Table <p> problem and the area minimum mapping problem can be solved optimally in polynomial time for any fixed K <ref> [2] </ref>. These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) [5] [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] [1] [1] Table 1: Summary of previous complexity results on K-LUT mapping of n-node m-edge network Delay minimization has been an important optimization objective in FPGA mapping because the speed of FPGA designs is usually <p> For K &lt; 5, the complexity problem is open except for K = 2, which will be solved in polynomial time in the next subsection. 3.3 Optimal Duplication-Free Mapping for K = 2 As defined in <ref> [2] </ref>, the maximum fanout-free cone (MFFC) of a node v, denoted M F F C v , is an FFC of v such that for any node w 6= v, w 2 M F F C v if output (w) M F F C v . <p> In the case of area minimization, this property allows us to map each MFFC independently and compose an optimal solution of the entire network from the optimal solutions of the MFFCs <ref> [2] </ref>. In the case of nominal delay minimization, in general this method no longer works because the delay of some input nets to an MFFC can be changed due to the mapping of other MFFCs that share the same input net.
Reference: [3] <author> J. Cong and Y. Ding, </author> <title> On Nominal Delay Minimization in LUT-Based FPGA Technology Mapping, </title> <type> Tech. Report 940022, </type> <institution> Computer Science Department, UCLA, USA, </institution> <note> May 1994; to appear in INTEGRATION the VLSI Journal. </note>
Reference-contexts: In this paper we will also present a simple heuristic to demonstrate the improvement of mapping quality over the depth-optimal mapping by taking nominal delay into consideration. Due to page limit most of the proofs will be omitted. Interested readers may refer to <ref> [3] </ref> for details. 2 Problem Formulation A combinational Boolean network is represented as a directed acyclic graph in which nodes represent logic gates, and edges represent interconnects. <p> Such connections are illustrated in Figure 3, and also in Figures 2 (a-c) (in dashed lines). It is clear that the transformation defined above takes O (K (m + n)) time. Examples of transformations can be found in <ref> [3] </ref>.
Reference: [4] <author> J. Cong, Y. Ding, T. Gao, and K. C. Chen, </author> <title> An Optimal Performance-Driven Technology Mapping Algorithm for LUT based FPGAs under Arbitrary Net-Delay Models, </title> <booktitle> Proc. Int'l Conf. on CAD and Computer Graphics, </booktitle> <address> Beijing, China, </address> <month> Aug. </month> <year> 1993, </year> <pages> 599-603. </pages>
Reference-contexts: The minimum-height K-feasible cut at each node can be found in O (Km) time, where m is the number of edges in the network. Later on, the algorithm was generalized to delay-minimum mapping when each net has a fixed pre-assigned delay of arbitrary value <ref> [4] </ref>. The generalized minimum-height K-feasible cut algorithm runs in O (Km log n) time, where m and n are the number of edges and nodes in the network, respectively.
Reference: [5] <author> A. Farrahi and M. Sarrafzadeh, </author> <title> Complexity of the Lookup-Table Minimization Problem for FPGA Technology Mapping, </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 13, No. 11, </volume> <month> Nov. </month> <year> 1994, </year> <pages> 1319-1332. </pages>
Reference-contexts: It has been shown that if the network is a tree, or if we use tree-based mapping (i.e. by decomposing a general network into trees and mapping each tree separately), both the area minimum mapping problem and the depth minimum mapping problem can be solved optimally in strong polynomial time <ref> [5, 6] </ref>. For general K-bounded Boolean networks, it is shown that the depth minimum mapping problem can be solved optimally in strong polynomial time [1], while the area minimum mapping problem is NP-hard for K 5 [5]. <p> For general K-bounded Boolean networks, it is shown that the depth minimum mapping problem can be solved optimally in strong polynomial time [1], while the area minimum mapping problem is NP-hard for K 5 <ref> [5] </ref>. <p> These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) <ref> [5] </ref> [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] [1] [1] Table 1: Summary of previous complexity results on K-LUT mapping of n-node m-edge network Delay minimization has been an important optimization objective in FPGA mapping because the speed of FPGA designs is <p> These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) <ref> [5] </ref> [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] [1] [1] Table 1: Summary of previous complexity results on K-LUT mapping of n-node m-edge network Delay minimization has been an important optimization objective in FPGA mapping because the speed of FPGA designs is usually slower than that <p> These results are summarized in Table 1. tree-based dup-free general mapping mapping mapping area O (minfnK; O (n K+1 ) 2 K &lt; 5 K 5 min. n log ng) <ref> [5] </ref> [2] open NP-hard [5] depth O (minfnK; O (Kmn) O (Kmn) min. n log ng) [5] [1] [1] Table 1: Summary of previous complexity results on K-LUT mapping of n-node m-edge network Delay minimization has been an important optimization objective in FPGA mapping because the speed of FPGA designs is usually slower than that of the gate array or standard cell designs due to the extra
Reference: [6] <author> R. J. Francis, J. Rose, and Z. Vranesic, </author> <title> Fast Technology Mapping for Lookup Table-Based FPGAs, </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <address> San Francisco, CA, USA, </address> <month> June </month> <year> 1991, </year> <pages> 613-619. </pages>
Reference-contexts: It has been shown that if the network is a tree, or if we use tree-based mapping (i.e. by decomposing a general network into trees and mapping each tree separately), both the area minimum mapping problem and the depth minimum mapping problem can be solved optimally in strong polynomial time <ref> [5, 6] </ref>. For general K-bounded Boolean networks, it is shown that the depth minimum mapping problem can be solved optimally in strong polynomial time [1], while the area minimum mapping problem is NP-hard for K 5 [5].
Reference: [7] <author> M. Garey and D. Johnson, </author> <title> Computer and Intractability: A Guide to the Theory of NP-Completeness, </title> <publisher> Freeman and Company, </publisher> <address> San Francisco, CA, USA, </address> <year> 1979. </year>
Reference: [8] <author> D. Hill, </author> <title> A CAD System for the Design of Field Programmable Gate Arrays, </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <address> San Francisco, CA, USA, </address> <month> June </month> <year> 1991, </year> <pages> 187-192. </pages>
Reference-contexts: 1 Introduction Lookup-table (LUT) based FPGA <ref> [8, 10] </ref> is a popular architecture in which the basic programmable logic block is a K-input lookup-table (K-LUT), built in SRAM, which can implement any Boolean function of up to K variables.
Reference: [9] <author> M. Schlag, P. Chan, and J. Kong, </author> <title> Empirical Evaluation of Multilevel Logic Minimization Tools for a Field Programmable Gate Array Technology, </title> <booktitle> Proc. 1st Int'l Workshop on Field Programmable Logic and Applications, </booktitle> <address> Oxford, UK, </address> <month> Sept. </month> <year> 1991, </year> <pages> 201-213. </pages>
Reference-contexts: Since interconnect delay contributes a significant portion to the total delay, it is natural to ask whether this portion of delay can be more accurately estimated during mapping. Experiments in <ref> [9] </ref> have shown that the interconnect delay in an FPGA chip is closely related to the number of fanouts of the net.
Reference: [10] <institution> The Programmable Gate Array Data Book, Xilinx, Inc., </institution> <address> San Jose, CA, USA, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Lookup-table (LUT) based FPGA <ref> [8, 10] </ref> is a popular architecture in which the basic programmable logic block is a K-input lookup-table (K-LUT), built in SRAM, which can implement any Boolean function of up to K variables. <p> These circuits were chosen because each of them can be mapped into a single Xilinx XC3000 series FPGA chip <ref> [10] </ref>, and be placed and routed using Xilinx design tools, so that we were able to measure the real delays of the mapping solutions (the second entry in Table 3 shows the type of Xil-inx XC3000 chip used for each example).
References-found: 10

