URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Berleant-PhD-91.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/abstracts.html
Root-URL: http://www.cs.utexas.edu
Title: THE USE OF PARTIAL QUANTITATIVE INFORMATION WITH QUALITATIVE REASONING  
Degree: APPROVED BY SUPERVISORY COMMITTEE:  
Abstract-found: 0
Intro-found: 1
Reference: [1] <editor> Proceedings, </editor> <booktitle> Second Annual Conference on AI, Simulation and Planning in High Autonomy Systems, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: An ordinary numerical simulator will be unable to represent the interval or conclude that qualitatively different behaviors can occur; an interval simulator will not automatically find and represent qualitively distinct behaviors, thus correctly | but crudely | pre dicting a final height in the interval <ref> [0; 1] </ref> if run forever or [0; f (t)] if run for finite time; a Monte Carlo-based simulation analysis [Kalos and Whitlock 86] will not automatically classify the results of its many runs into qualitative categories and may not even find an example of an unlikely but possible behavior; and finally, <p> An alternative to these simulation techniques is intelligent matching of specialized numerical analysis methods to the particular problem at hand. These two methodologies, intelligent numerical analysis and simulation, are both active research areas <ref> [1] </ref>. We will describe a method that can successfully simulate, given initial or other boundary values described anywhere on a spectrum from numerical values, through interval values, to qualitative values, depending on the specifications available. <p> T020040060080010001200140016001800200022002400260028003000320034003600T1T2 0 D0 [-9.86,-9.8] MINF T 1 2 <ref> [3671; 1] </ref>, was [1014; 1] Since escape velocity is 11 km=sec:, The rocket may possibly fall back to Earth (behavior 1, shown) although it will most likely escape. 6 2. Reasoning about classes of systems. <p> T020040060080010001200140016001800200022002400260028003000320034003600T1T2 0 D0 [-9.86,-9.8] MINF T 1 2 [3671; 1], was <ref> [1014; 1] </ref> Since escape velocity is 11 km=sec:, The rocket may possibly fall back to Earth (behavior 1, shown) although it will most likely escape. 6 2. Reasoning about classes of systems. <p> As a trivial example, we know that X X = 0, but the straightforward interval-based evaluation method gives a weaker answer for non-numerical X's. For example, <ref> [1; 2] </ref> [1; 2] = [1; 1]. The excess width problem occurs whenever dependencies exist among inputs or intermediate values when evaluating an interval expression. <p> As a trivial example, we know that X X = 0, but the straightforward interval-based evaluation method gives a weaker answer for non-numerical X's. For example, <ref> [1; 2] </ref> [1; 2] = [1; 1]. The excess width problem occurs whenever dependencies exist among inputs or intermediate values when evaluating an interval expression. In artificial intelligence, interval inference has been reviewed by Davis [1987], whose discussion of interval inference by constraint propagation describes the Waltz filtering algorithm used by Q3. <p> As a trivial example, we know that X X = 0, but the straightforward interval-based evaluation method gives a weaker answer for non-numerical X's. For example, [1; 2] [1; 2] = <ref> [1; 1] </ref>. The excess width problem occurs whenever dependencies exist among inputs or intermediate values when evaluating an interval expression. In artificial intelligence, interval inference has been reviewed by Davis [1987], whose discussion of interval inference by constraint propagation describes the Waltz filtering algorithm used by Q3. <p> envelopes constraining the relation between amount and level if its function relating amount and level falls within those envelopes. 23 Waltz Filtering an Addition Constraint * Uses intervals as labels * Correct | won't rule out possible values * Example: * Z := (X + Y ) " Z = <ref> [1; 1] </ref> + [3; 4] " [1; 5] = [4; 5]: * Y := (Z X) " Y = [4; 5] [1; 2] " [3; 4] = [3; 4]: [Waltz 75; Davis 87]. |||||| 24 Pasteup here: Range propagation across an M+ function. shown graphically. <p> and level if its function relating amount and level falls within those envelopes. 23 Waltz Filtering an Addition Constraint * Uses intervals as labels * Correct | won't rule out possible values * Example: * Z := (X + Y ) " Z = [1; 1] + [3; 4] " <ref> [1; 5] </ref> = [4; 5]: * Y := (Z X) " Y = [4; 5] [1; 2] " [3; 4] = [3; 4]: [Waltz 75; Davis 87]. |||||| 24 Pasteup here: Range propagation across an M+ function. shown graphically. <p> Filtering an Addition Constraint * Uses intervals as labels * Correct | won't rule out possible values * Example: * Z := (X + Y ) " Z = [1; 1] + [3; 4] " [1; 5] = [4; 5]: * Y := (Z X) " Y = [4; 5] <ref> [1; 2] </ref> " [3; 4] = [3; 4]: [Waltz 75; Davis 87]. |||||| 24 Pasteup here: Range propagation across an M+ function. shown graphically. Shaded regions of the axes represent numerical intervals, and the upper and lower envelopes represent numerical envelope functions. <p> the constraint processing code. ||||||||| 25 (a) An ADD constraint: netflow = inflow outflow (b) Landmark values at time t 1 : netflow (t 1 ) = inflow (t 1 ) outflow (t 1 ) i.e., NF1 = IF fl OF2 (c) in terms of known ranges: [0:0525; 0:146] = <ref> [1; 1:01] </ref> [0; 9999] (d) The ADD narrows the range for OF2 = outflow (t 1 ): [0:0525; 0:146] = [1; 1:01] [0:864; 0:948] Propagation narrows the bounds for OF2 = outflow (t 1 ). <p> 1 : netflow (t 1 ) = inflow (t 1 ) outflow (t 1 ) i.e., NF1 = IF fl OF2 (c) in terms of known ranges: [0:0525; 0:146] = <ref> [1; 1:01] </ref> [0; 9999] (d) The ADD narrows the range for OF2 = outflow (t 1 ): [0:0525; 0:146] = [1; 1:01] [0:864; 0:948] Propagation narrows the bounds for OF2 = outflow (t 1 ). <p> As a trivial example, Y = X X = 0 yet, if X 2 <ref> [0; 1] </ref>, a straightforward calculation of [0; 1] [0; 1] gives Y 2 [1; 1] which is true but contains excess width and so is not an optimal answer. <p> As a trivial example, Y = X X = 0 yet, if X 2 <ref> [0; 1] </ref>, a straightforward calculation of [0; 1] [0; 1] gives Y 2 [1; 1] which is true but contains excess width and so is not an optimal answer. <p> As a trivial example, Y = X X = 0 yet, if X 2 <ref> [0; 1] </ref>, a straightforward calculation of [0; 1] [0; 1] gives Y 2 [1; 1] which is true but contains excess width and so is not an optimal answer. <p> As a trivial example, Y = X X = 0 yet, if X 2 [0; 1], a straightforward calculation of [0; 1] [0; 1] gives Y 2 <ref> [1; 1] </ref> which is true but contains excess width and so is not an optimal answer. <p> Sub-intervals that lead to an inconsistency may be eliminated from the target interval, thereby narrowing it. For example, if Y = X 2 X and X is given an initial interval of <ref> [0; 1] </ref>, ordinary Waltz filtering concludes Y 2 [1; 1] (see figure 3.1, top). <p> Sub-intervals that lead to an inconsistency may be eliminated from the target interval, thereby narrowing it. For example, if Y = X 2 X and X is given an initial interval of [0; 1], ordinary Waltz filtering concludes Y 2 <ref> [1; 1] </ref> (see figure 3.1, top). However if Y , the target interval, has its subinterval [1; :5] tested by propagating through the constraint network representing Y = X 2 X using ordinary Waltz filtering, it turns out that there is no consistent way to label the network. <p> For example, if Y = X 2 X and X is given an initial interval of [0; 1], ordinary Waltz filtering concludes Y 2 [1; 1] (see figure 3.1, top). However if Y , the target interval, has its subinterval <ref> [1; :5] </ref> tested by propagating through the constraint network representing Y = X 2 X using ordinary Waltz filtering, it turns out that there is no consistent way to label the network. Thus [1; :5] can be removed from consideration for possible values of Y . <p> However if Y , the target interval, has its subinterval <ref> [1; :5] </ref> tested by propagating through the constraint network representing Y = X 2 X using ordinary Waltz filtering, it turns out that there is no consistent way to label the network. Thus [1; :5] can be removed from consideration for possible values of Y . We can do the same partitioning procedure on [:5; 0]. Eventually TIP will conclude that the low bound of Y is :25. <p> Thus [1; :5] can be removed from consideration for possible values of Y . We can do the same partitioning procedure on [:5; 0]. Eventually TIP will conclude that the low bound of Y is :25. The same procedure, oriented this time to reducing the high end of <ref> [:25; 1] </ref> finally concludes that Y 2 (:25; 0). The algorithm may be described as follows, exemplified by figure 3.1. 1. Represent the equation as a network of constraints. For example f+; ; fi; ffi;exponentiationg are constraints among three values, whereas f=; &lt;; &gt;g exemplify binary constraints. <p> Yet such an expanded capability would be useful only very occasionally, as when a constraint such as a square root "splits" an interval at one terminal into two at another: q <ref> [1; 4] </ref> = f [2; 1]; [1; 2]g. Even then, the sign will usually have been determined by the qualitative component of the simulation, ruling out one of the two intervals in the set. <p> Yet such an expanded capability would be useful only very occasionally, as when a constraint such as a square root "splits" an interval at one terminal into two at another: q [1; 4] = f <ref> [2; 1] </ref>; [1; 2]g. Even then, the sign will usually have been determined by the qualitative component of the simulation, ruling out one of the two intervals in the set. <p> Yet such an expanded capability would be useful only very occasionally, as when a constraint such as a square root "splits" an interval at one terminal into two at another: q [1; 4] = f [2; 1]; <ref> [1; 2] </ref>g. Even then, the sign will usually have been determined by the qualitative component of the simulation, ruling out one of the two intervals in the set. <p> EXAMPLE: Y = X 2 X X H H H H H H @ H H H H H H @ H H H H H H @ [0,1] % % % [-1,1] <ref> [-1, 1] </ref> [-1,-.5] [-.5,0] [0,.5] [.5,1] [-.5,-.25] [-.25,0] [0,.25] [.25,.5] [-.5,-.375] [-.375,-.25] [0,.125] [.125,.25] . . . X Test the lower half of a target interval for consistency, using Waltz filtering. If it is consistent, then test the lower quarter, eighth, etc., until an inconsistent sub-interval is detected. <p> Clearly, however, a very skewed partitioning will tend to be slow because only small sub-intervals could be ruled out at each iteration. 2. Halving a target interval into two sub-intervals implicitly assumes the number line is linearly scaled | that, for example, the midpoint of the interval <ref> [1; 100] </ref> is 50:5, both arithmetically and in principle. Logarithmic scaling however would dictate a midpoint of 10. Pragmatically, choosing a midpoint of 50:5 is preferable if sub-interval [1; 10] is more likely to be ruled out than sub-interval [50:5; 100], and vice versa. <p> Logarithmic scaling however would dictate a midpoint of 10. Pragmatically, choosing a midpoint of 50:5 is preferable if sub-interval <ref> [1; 10] </ref> is more likely to be ruled out than sub-interval [50:5; 100], and vice versa. I have not established whether linear or the logarithmic scaling provides a better ontology in general, and regardless of any general tendency different problems will have different characteristics. <p> Sometimes TIP will be faced with a target or other parent interval with an infinite endpoint. Then, neither the linear nor the logarithmic ontology provides guidance in partitioning into sub-intervals. Q3 simply uses a predefined constant to add to the finite bound of a parent interval <ref> [l; 1] </ref> (or subtract from the finite bound of [1; h]) to get a partition point. Due to insufficient ontological guidance, the value of this constant is necessarily somewhat arbitrary. 4. <p> Then, neither the linear nor the logarithmic ontology provides guidance in partitioning into sub-intervals. Q3 simply uses a predefined constant to add to the finite bound of a parent interval [l; 1] (or subtract from the finite bound of <ref> [1; h] </ref>) to get a partition point. Due to insufficient ontological guidance, the value of this constant is necessarily somewhat arbitrary. 4. One case where the linear ontology is clearly superior to the logarithmic, is when a bound of a parent interval is zero. <p> For example, consider the familiar simple case of calculating X X, which we know to be 0. Given X 2 <ref> [0; 1] </ref>, we could calculate X X 2 [0; 1] [0; 1] = [1; 1] which is true but too wide. If instead we split X = [0; 1] into two cases X 1 = [0; 1 2 ] and X 2 = [ 1 2 ; 1] we can calculate <p> For example, consider the familiar simple case of calculating X X, which we know to be 0. Given X 2 <ref> [0; 1] </ref>, we could calculate X X 2 [0; 1] [0; 1] = [1; 1] which is true but too wide. If instead we split X = [0; 1] into two cases X 1 = [0; 1 2 ] and X 2 = [ 1 2 ; 1] we can calculate X X = (X 1 X 1 ) <p> For example, consider the familiar simple case of calculating X X, which we know to be 0. Given X 2 <ref> [0; 1] </ref>, we could calculate X X 2 [0; 1] [0; 1] = [1; 1] which is true but too wide. If instead we split X = [0; 1] into two cases X 1 = [0; 1 2 ] and X 2 = [ 1 2 ; 1] we can calculate X X = (X 1 X 1 ) [ (X <p> For example, consider the familiar simple case of calculating X X, which we know to be 0. Given X 2 [0; 1], we could calculate X X 2 [0; 1] [0; 1] = <ref> [1; 1] </ref> which is true but too wide. <p> For example, consider the familiar simple case of calculating X X, which we know to be 0. Given X 2 <ref> [0; 1] </ref>, we could calculate X X 2 [0; 1] [0; 1] = [1; 1] which is true but too wide. If instead we split X = [0; 1] into two cases X 1 = [0; 1 2 ] and X 2 = [ 1 2 ; 1] we can calculate X X = (X 1 X 1 ) [ (X 2 X 2 ) 1 ] [0; 2 1 ; 1] [ 2 = [ 2 1 <p> Given X 2 [0; 1], we could calculate X X 2 [0; 1] [0; 1] = [1; 1] which is true but too wide. If instead we split X = [0; 1] into two cases X 1 = [0; 1 2 ] and X 2 = <ref> [ 1 2 ; 1] </ref> we can calculate X X = (X 1 X 1 ) [ (X 2 X 2 ) 1 ] [0; 2 1 ; 1] [ 2 = [ 2 1 ] [ [ 2 1 ] 1 ; 2 thus inferring X 2 [ 1 2 <p> If instead we split X = [0; 1] into two cases X 1 = [0; 1 2 ] and X 2 = [ 1 2 ; 1] we can calculate X X = (X 1 X 1 ) [ (X 2 X 2 ) 1 ] <ref> [0; 2 1 ; 1] </ref> [ 2 = [ 2 1 ] [ [ 2 1 ] 1 ; 2 thus inferring X 2 [ 1 2 ; 1 2 ] instead of X 2 [1; 1]. <p> X = (X 1 X 1 ) [ (X 2 X 2 ) 1 ] [0; 2 1 ; 1] [ 2 = [ 2 1 ] [ [ 2 1 ] 1 ; 2 thus inferring X 2 [ 1 2 ; 1 2 ] instead of X 2 <ref> [1; 1] </ref>. Taking this further, we could split X = [0; 1] into smaller, more nu merous cases. For example, suppose we split X into 10 cases each of width 1 10 . <p> Taking this further, we could split X = <ref> [0; 1] </ref> into smaller, more nu merous cases. For example, suppose we split X into 10 cases each of width 1 10 . <p> Thus in many cases purely symbolic approaches are insufficient, yet behavior splitting, like many numerical techniques, may still be used. 39 3.2.1 Behavior splitting in simulation Behavior splitting has been found useful for helping to rule out bounds of 1. A behavior with landmark L 2 <ref> [lo; 1] </ref> can be split into two behaviors, one with L 2 [lo; hi] and one with L 2 [hi; 1]. The behaviors would otherwise be identical. Further processing would address each behavior individually, with the result that one of them could end up being ruled out. <p> A behavior with landmark L 2 [lo; 1] can be split into two behaviors, one with L 2 [lo; hi] and one with L 2 <ref> [hi; 1] </ref>. The behaviors would otherwise be identical. Further processing would address each behavior individually, with the result that one of them could end up being ruled out. An example of this appears in section 5.2. <p> T038.076.0114153174194235276303T1382420454479506533557578T2 MINF T 2 2 <ref> [305; 1] </ref> T 2 2 [610; 759] 17 time points were interpolated, and the TIP and behavior splitting algorithms were also used when necessary (see text). <p> Once a time step has been chosen the algorithm looks for a gap, or region where the time points on either side of the time step do not overlap, to interpolate a new time point. Consider the step from time 3600 to time T1= <ref> [3671; 1] </ref> in figure 1.1. While the step size is potentially as great as w ([3600; 1]) = 1, there is a gap where 3600 and [3671; 1] do not overlap. This gap is [3600; 3671]. <p> Consider the step from time 3600 to time T1= <ref> [3671; 1] </ref> in figure 1.1. While the step size is potentially as great as w ([3600; 1]) = 1, there is a gap where 3600 and [3671; 1] do not overlap. This gap is [3600; 3671]. <p> In a few cases both the maximum step size and the gap it encloses have infinite width. For example, the system of figure 5.2 has the qualitative time point T1=1, making both a gap and a step size between T0 and T1 of <ref> [0; 1] </ref>. In such a case, the first interpolated time point must be somewhat arbitrary. This time point is 1:0 in figure 5.2. <p> A small expert system module would be useful in choosing and invoking method (s) for dealing with lack of a gap. This would be consistent with the current emphasis in the computer simulation community on seeking AI methods for increased autonomy in simulation <ref> [1] </ref>. 5.1.4 Interpolating a state This is what reduces the average step size of the simulation. By interpolating a new state between a pair of adjacent states we instantiate the constraint templates of the model definition, thereby creating more constraints. <p> A switch in Q3 also allows use of rational instead of floating point numbers, with any desired round-off proportion. Use of rationals slows processing by a factor in <ref> [1; 10] </ref>, depending on the problem. Rounding can also be turned off entirely. 58 which decreases with distance. The qualitative constraints in the model appear in table 5.1. Table 5.2 and figure 5.1 provide simulation results. <p> Before successfully ruling out [318; 449], Q3 unsuccessfully tested [318; 32102], [318; 10912], [318; 3849], [318; 1495], and finally [318; 710], choosing smaller and smaller sub-intervals to test in accordance with Q3's version of TIP (see section 3.1.1). Since TIP has inferred T262 [318; 449], therefore T22 <ref> [449; 1] </ref>. TIP then tried unsuccessfully to rule out [449; 633] and [449; 510], successfully ruled out [449; 469], etc., trying smaller and smaller pieces, eventually inferring T 2 2 [489; 1]. The final results are shown in table 5.2, row d. <p> Since TIP has inferred T262 [318; 449], therefore T22 [449; 1]. TIP then tried unsuccessfully to rule out [449; 633] and [449; 510], successfully ruled out [449; 469], etc., trying smaller and smaller pieces, eventually inferring T 2 2 <ref> [489; 1] </ref>. The final results are shown in table 5.2, row d. Note that TIP did not succeed in reducing highBound (T 1) from 1 although it tried ruling out some sub-intervals [x; 1] with large x. <p> The final results are shown in table 5.2, row d. Note that TIP did not succeed in reducing highBound (T 1) from 1 although it tried ruling out some sub-intervals <ref> [x; 1] </ref> with large x. Since TIP did not succeed in reducing highBound (T 1) from 1 there is still no gap between T 1 and T 2. Since TIP produced no gap, the other technique for creating a gap, behavior splitting, is used. <p> Since TIP produced no gap, the other technique for creating a gap, behavior splitting, is used. Behavior splitting (chapter 3) involves "splitting" a behavior into two qualitatively identical, numerically different, independently represented behaviors, and processing each of them (section 3.2.1). In this example, T 1 = <ref> [318; 1] </ref> was split into the two cases [318; 10 6 ] and [10 6 ; 1] (where 10 6 is some arbitrary high number), because infinite interval bounds often have a deleterious effect on quantitative inference. <p> Behavior splitting (chapter 3) involves "splitting" a behavior into two qualitatively identical, numerically different, independently represented behaviors, and processing each of them (section 3.2.1). In this example, T 1 = [318; 1] was split into the two cases [318; 10 6 ] and <ref> [10 6 ; 1] </ref> (where 10 6 is some arbitrary high number), because infinite interval bounds often have a deleterious effect on quantitative inference. <p> Thus, the user chose further step size refinement and an expert simulation manager should do the same. After two new time points were interpolated into the <ref> [10 6 ; 1] </ref> behavior (not shown) it was found inconsistent. So we can conclude that T 1 must be in [318; 10 6 ], row e. 4 Having reached a simulation subgoal of ruling out a behavior, the simulation needs to be reevaluated to decide what to do next. <p> This particular system suffers from excess width problems. For example, if x 2 <ref> [1; 2] </ref> then x + 1 = [ 2 but straightforward calculation, doing the division operation by hand or in Q3, gives [1; 2] + 1 = [1; 3] Thus this system exemplifies the fact that convergence occurs even in systems suffering from excess width in individual calcuations (see appendix B). <p> This particular system suffers from excess width problems. For example, if x 2 <ref> [1; 2] </ref> then x + 1 = [ 2 but straightforward calculation, doing the division operation by hand or in Q3, gives [1; 2] + 1 = [1; 3] Thus this system exemplifies the fact that convergence occurs even in systems suffering from excess width in individual calcuations (see appendix B). Round-off error. <p> This particular system suffers from excess width problems. For example, if x 2 [1; 2] then x + 1 = [ 2 but straightforward calculation, doing the division operation by hand or in Q3, gives [1; 2] + 1 = <ref> [1; 3] </ref> Thus this system exemplifies the fact that convergence occurs even in systems suffering from excess width in individual calcuations (see appendix B). Round-off error. In simulation, round-off error can build up from one time step to the next leading to accumulated error called discretization error. <p> not defined by the algorithm. (b) Now calculate the areas of the histogram bars delimited by the par tition: 1 The histogram may also represent the probabilistic knowledge in itself instead of being merely an approximation to it. 86 1/2 1/2 fi 1/4 1/2 1/4 result operand1 operand2 collection interval <ref> [1; 2] </ref> [2; 3] [2; 6] probability 1=2 1=4 1=8 interval [1; 2] [3; 4] [3; 8] probability 1=2 1=2 1=4 interval [1; 2] [4; 5] [4; 10] probability 1=2 1=4 1=8 interval [2; 4] [2; 3] [4; 12] probability 1=2 1=4 1=8 interval [2; 4] [3; 4] [6; 16] probability <p> the histogram bars delimited by the par tition: 1 The histogram may also represent the probabilistic knowledge in itself instead of being merely an approximation to it. 86 1/2 1/2 fi 1/4 1/2 1/4 result operand1 operand2 collection interval <ref> [1; 2] </ref> [2; 3] [2; 6] probability 1=2 1=4 1=8 interval [1; 2] [3; 4] [3; 8] probability 1=2 1=2 1=4 interval [1; 2] [4; 5] [4; 10] probability 1=2 1=4 1=8 interval [2; 4] [2; 3] [4; 12] probability 1=2 1=4 1=8 interval [2; 4] [3; 4] [6; 16] probability 1=2 1=2 1=4 interval [2; 4] [4; 5] [8; 20] probability <p> may also represent the probabilistic knowledge in itself instead of being merely an approximation to it. 86 1/2 1/2 fi 1/4 1/2 1/4 result operand1 operand2 collection interval <ref> [1; 2] </ref> [2; 3] [2; 6] probability 1=2 1=4 1=8 interval [1; 2] [3; 4] [3; 8] probability 1=2 1=2 1=4 interval [1; 2] [4; 5] [4; 10] probability 1=2 1=4 1=8 interval [2; 4] [2; 3] [4; 12] probability 1=2 1=4 1=8 interval [2; 4] [3; 4] [6; 16] probability 1=2 1=2 1=4 interval [2; 4] [4; 5] [8; 20] probability 1=2 1=4 1=8 of the bars are indicated in their interiors. <p> Doing the subtraction operation using the histogram discretization method would yield a result collection containing Y 2 [4; 5] [2; 3] = <ref> [1; 3] </ref>; p = p 1 p 2 which is not right, since X X must in fact be 0 with p = 1. This source of error also applies to Kaplan [1981]. Thus: * Observe that this source of error is due to dependence (or partial dependence) between operands. <p> If result collections representing X and V are combined, the resultant result collection for dX=dt will contain this dependence distortion, even if input variables X and Y are independent. For example, suppose the histogram discretization for X contains <ref> [1; 2] </ref>; p = :5 and [8; 9]; p = :5. <p> Storing the result collection for X + 1 in a variable V and then calculating X V from X and V would result in the probability estimate p (X 2 [1;2] [8;9]+1 ) = 0:25, clearly wrong since X can't be in <ref> [1; 2] </ref> and [8; 9] simultaneously. Hence dependence distortion applies even though inputs X and Y may be independent, because of dependence between X and V . Dependence distortion may be handled by avoiding doing operations on result collections for intermediate variables. <p> @ @ @ @ @ @ @ @ @ @ @ @ @ @ d Element failure rate .33 .399 .40 .47 t t t t Crash - Dependable - Probabilities .49 - .51 - Behaviors Depend able - Dependable or crash - p (Dependable)= .49 + [0, .51] = <ref> [.49, 1] </ref> p (Crash)= 0 + [0, .51] = [0, .51] of a system. <p> The boundary conditions in figure 8.3 are, T 1 = K 1 and #failed elements T 1 = M axT olerance; sample values for K 1 and MaxTolerance as well as other model inputs are given in table 8.1. (Note that an interval may be quite weak, e.g. <ref> [0; 1] </ref>.) 3.
Reference: [Abelson et al. 90] <author> Abelson, H., M. Eisenberg, M. Halfant, J. Katzenelson, E. Sacks, G. Sussman, J. Wisdom, and K. Yip, </author> <booktitle> Intelligence in Scientific Computing, Communications of the ACM 32: </booktitle> <pages> 546-562, </pages> <month> May </month> <year> 1989. </year> <note> Reprinted in Weld and de Kleer [1990]. </note>
Reference: [Abelson and Sussman 85] <author> Abelson, H. and G. Sussman, </author> <title> Structure and Interpretation of Computer Programs, </title> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference: [Alefeld and Herzberger 83] <author> Alefeld, G. and Jurgen Herzberger, </author> <title> Introduction to Interval Computations, </title> <publisher> Academic Press, </publisher> <year> 1983. </year>
Reference-contexts: Of course, correctness of Waltz filtering in any but the most formal sense requires that the individual constraints be semantically correct. The arithmetic constraints used by Q3 are taken directly from the standard interval extensions of common operations like +, , fi and ffi <ref> [Moore 79; Alefeld and Herzberger 83] </ref>. The careful reader may, however, wonder about the semantic correctness of the mean value constraint (equation 2.2).
Reference: [Asaithambi et al. 82] <author> Asaithambi, N.S., Shen Zuhe and R.E. Moore, </author> <title> On Computing the Range of Values, </title> <journal> Computing, </journal> <volume> 28 </volume> <pages> 225-237, </pages> <year> 1982. </year>
Reference-contexts: One of the sub-problems in applying interval mathematics techniques to applications such as qualitative-quantitative simulation is finding the variation in the value of a function given known variation in one or more of its parameters <ref> [Kolev et al. 88; Asaithambi et al. 82] </ref>. This can be difficult because the RHS of a function is an expression, and excess width is a well-known problem in evaluating interval expressions [Moore 79; Abelson and Sussman, 1985:84-88].
Reference: [Bavuso 87] <author> S. J. Bavuso, B. Dugan, K. S. Trivedi, E. M. Rothmann, and W. E. Smith, </author> <title> Analysis of Typical Fault-Tolerant Architectures using HARP, </title> <journal> IEEE Transactions on Reliability R-26(2):176-185, </journal> <year> 1987. </year>
Reference-contexts: The simplest analytical techniques use combinatorics while the complex analytical evaluation techniques make use of Markov models. Petri net modeling is a popular simulation dependability analysis technique. Another simulation technique for dependability analysis is Monte Carlo simulation. Many dependability analysis tools like HARP <ref> [Bavuso 87] </ref>, ARIES [Makam 82] and SHARPE [Sahner and Trivedi 86] have been developed and are available. All of these tools support one or more of the major dependability 104 analysis techniques. See Johnson [1988] and Mullazini [1986] for a thorough comparison of the available dependability analysis tools.
Reference: [Berleant 90] <author> Daniel Berleant, </author> <title> Constraint Propagation by Waltz Filtering is Sound, </title> <booktitle> in AAAI-90 Constraint Directed Reasoning Workshop Notes, </booktitle> <pages> pp. 2-10. </pages>
Reference-contexts: This is so because quantitative inference is based on Waltz filtering, which is known to be safe <ref> [Davis 87; Berleant 90] </ref>). Numerical simulation is in general incapable of correctness guarantees, although interval simulation can provide them [Eijgenraam 81]. Finally, this technique is well suited to working with non-linear systems since no distinction is made between linear and non-linear systems. <p> When an interval is narrowed, the improvement tends to ripple outward to other states. The overall settling of the values describing the states of the simulation is a Waltz filtering process [Waltz 75] over interval values [Davis 87] and hence is guaranteed <ref> [Davis 87; Cooper 89; Berleant 90] </ref> not to narrow any interval too much. 2 5.1.6 Iteration The algorithm iterates by continuing to divide gaps by interpolating new states. While the user currently specifies the number of iterations, it will be straight-forward to apply goal-oriented termination criteria. <p> Let us look at correctness, convergence and stability in more detail. 5.3.1 Correctness The Q3 program uses Waltz filtering [Waltz 75] on interval labels, as in chapter 2 for interval inference, a method discussed by Davis [1987]. Waltz filtering has been proven correct <ref> [Cooper 89; Berleant 90] </ref>. Therefore the results provided by Q3 are correct, meaning: An inferred interval for any model variable at any point in the simu lation contains all possible values that could be exhibited by a system conforming to the model and its quantitative specifications.
Reference: [Berleant 91] <author> Daniel Berleant, </author> <title> Combining Qualitative and Quantitative Simualation: in Brief, </title> <booktitle> in Proceedings of the Second Annual Conference on AI, Simulation and Planning in High Autonomy Systems, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference: [Berleant 90a] <author> Daniel Berleant, </author> <title> Probabilities of Qualitative Behaviors from Probability Distributions on Inputs. </title> <type> Technical report AI90-136, </type> <institution> Artificial Intelligence Laboratory, Dept. of Computer Science, University of Texas at Austin, </institution> <month> August </month> <year> 1990. </year>
Reference: [Berleant and Chandra 91] <author> Daniel Berleant and Arun Chandra, </author> <title> Probabilities of Qualitative Behaviors for Dependability Analysis, </title> <booktitle> in AAAI-91 Model Based Reasoning Workshop Notes. </booktitle> <volume> 123 124 </volume>
Reference-contexts: A more 2 Cheeseman [1986] argues for the measure of rational belief semantics. However, the semantics of probability remains a topic of some controversy. 112 detailed discussion of previous work appears in the longer version of this paper <ref> [Berleant and Chandra 91] </ref>. The need for dependability analysis has become necessary for the development of next generation, high-performance computer systems. We have described a technique for bounding the probabilities of qualitatively meaningful behaviors.
Reference: [Berleant and Kuipers 91a] <author> Daniel Berleant and Benjamin Kuipers, </author> <title> Bridging the Gap from Qualitative to Numerical Simulation. </title> <type> Technical report, forthcoming, </type> <institution> Artificial Intelligence Laboratory, Dept. of Computer Science, University of Texas at Austin, </institution> <year> 1991. </year>
Reference: [Berleant and Kuipers 91b] <author> Daniel Berleant and Benjamin Kuipers, </author> <title> Qualitative-Quantitative Simulation with Q3, </title> <note> to appear in B. </note> <editor> Faltings and P. Struss, eds., </editor> <booktitle> Recent Advances in Qualitative Physics, </booktitle> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [Bobrow 85] <author> Bobrow, D. G., ed., </author> <title> Qualitative Reasoning about Physical Systems, </title> <publisher> MIT Press, </publisher> <year> 1985. </year> <note> Reprinted from Artificial Intelligence 24 (1984) special volume. </note>
Reference-contexts: Much work has been done on quantitative simulation. This includes both numerical simulation work, well known and in general use, as well as interval simulation [Eijgenraam 81]. More recently, artificial intelligence has given rise to the area of qualitative simulation <ref> [Bobrow 85; Weld and de Kleer 90] </ref>. However, neither qualitative nor quantitative simulation do everything the 1 The existence of phase space attractors makes the idea of simulation with partial information much more plausible.
Reference: [Brandt 77] <author> Brandt, Achi, </author> <title> Multi-Level Adaptive Solutions to Boundary-Value Problems, </title> <booktitle> Mathematics of Computation 31(138) </booktitle> <pages> 333-390, </pages> <month> April </month> <year> 1977. </year>
Reference-contexts: Two adaptive discretization methods that have been previously reported are adaptive stepsize control [Press et al. 86; Gear 71], and multigrid methods <ref> [Brandt 77; Briggs 87] </ref>. 5.1 Step Size Refinement First we overview the stages of the step size refinement algorithm. Each stage is discussed in more detail in the following subsections, which are each titled with the name of the stage given in this overview: 1.
Reference: [Briggs 87] <author> W. L. Briggs, </author> <title> A Multigrid Tutorial. </title> <institution> Society for Industrial and Applied Mathematics, </institution> <year> 1987. </year>
Reference-contexts: Two adaptive discretization methods that have been previously reported are adaptive stepsize control [Press et al. 86; Gear 71], and multigrid methods <ref> [Brandt 77; Briggs 87] </ref>. 5.1 Step Size Refinement First we overview the stages of the step size refinement algorithm. Each stage is discussed in more detail in the following subsections, which are each titled with the name of the stage given in this overview: 1.
Reference: [Brooks 81] <author> Rodney A. Brooks, </author> <title> Symbolic Reasoning Among 3-D Models and 2-D images, </title> <booktitle> Artificial Intelligence 17 (1981) 285-348. </booktitle>
Reference-contexts: For example, Brooks' ACRONYM system combined qualitative information about the geometric properties of objects with approximate quantitative information to do qualitative-quantitative reasoning for model based processing in the computer vision area <ref> [Brooks 81; Cohen and Feigenbaum 82] </ref>. In another area of the spatial domain, McDermott and Davis' [1984] navigation program SPAM did qualitative-quantitative reasoning, combining qualitative features with partial numeric information in the form of intervals to produce qualitative-quantitative maps of the terrain.
Reference: [Bryant 81] <author> R. E. Bryant, MOSSIM: </author> <title> A Switch-Level Simulator for MOS LSI, </title> <booktitle> in Proceedings of the 18th Design Automation Conference (July 1981) 786-790. </booktitle>
Reference-contexts: that have been taken, often in apparent disregard of each other. 1.3.1 Qualitative-quantitative work in VLSI At the qualitative end of the spectrum, when the transistor is viewed as a primitive unit its logic state can be represented qualitatively as being in 8 f0; 1; Xg, where X means "unknown" <ref> [Bryant 81] </ref>. Given input vectors, the stable state of the circuit is derived by relaxation. At the numerical end of the spectrum are simulators such as SPICE [Tuinenga 88] which are numerical. There is a variety of systems in between that do qualitative-quantitative reasoning [Hon 87].
Reference: [Chawla et al. 75] <author> B. R. Chawla, H. K. Gummel and P. Kozak, </author> <title> MOTIS | An MOS Timing Simulator, </title> <journal> IEEE Transactions on Circuits and Systems CAS-22 (12) (Dec. </journal> <year> 1975) </year> <month> 901-910. </month>
Reference-contexts: Given input vectors, the stable state of the circuit is derived by relaxation. At the numerical end of the spectrum are simulators such as SPICE [Tuinenga 88] which are numerical. There is a variety of systems in between that do qualitative-quantitative reasoning [Hon 87]. For example, timing simulators <ref> [Terman 83; Chawla et al. 75] </ref> combine numerical circuit information with qualitative information about logic state, and multilevel simulators simulate at different levels of abstraction within a single integrated circuit design [Insinga 84].
Reference: [Cheeseman 86] <author> Peter Cheeseman, </author> <title> Probabilistic Versus Fuzzy Reasoning. </title> <booktitle> In Uncertainty in Artificial Intelligence, </booktitle> <editor> L. N. Kanal and J. F. Lemmer, eds., </editor> <publisher> Elsevier Science Publishers B. V. (North-Holland), </publisher> <year> 1986, </year> <pages> pp. 85-102. </pages>
Reference-contexts: Intervals are not the only representation for partial numeric information. Another recent approach is the use of fuzzy values and intervals [Zadeh 65; Dubois and Prade 80] for simulation. While fuzzy reasoning has been criticized <ref> [Cheeseman 86] </ref>, it has also been used in qualitative-quantitative simulation by Shen and Leitch [1990]. They generalize intervals, which have sharp boundaries, to have fuzzy boundaries (figure 1.3).
Reference: [Cherkassky 84] <author> V. Cherkassky, E. Opper, and M. Malek, </author> <title> Reliability and Fault Diagnosis Analysis of Fault-Tolerant Multistage Interconnection Networks, </title> <booktitle> in Proceedings IEEE 14th Fault-Tolerant Computing Symposium, </booktitle> <year> 1984, </year> <pages> pp. 246-251. </pages>
Reference: [Cohen and Feigenbaum 82] <editor> Paul R. Cohen and Edward A. Feigenbaum, eds., </editor> <booktitle> Handbook of Artificial Intelligence, </booktitle> <volume> vol. 3, </volume> <publisher> William Kaufmann Inc., </publisher> <year> 1982, </year> <pages> pp. 313-321. 125 </pages>
Reference-contexts: For example, Brooks' ACRONYM system combined qualitative information about the geometric properties of objects with approximate quantitative information to do qualitative-quantitative reasoning for model based processing in the computer vision area <ref> [Brooks 81; Cohen and Feigenbaum 82] </ref>. In another area of the spatial domain, McDermott and Davis' [1984] navigation program SPAM did qualitative-quantitative reasoning, combining qualitative features with partial numeric information in the form of intervals to produce qualitative-quantitative maps of the terrain.
Reference: [Colombo and Jaarsma 80] <author> A.G. Colombo and R.J. Jaarsma, </author> <title> A Powerful Numerical Method to Combine Random Variables, </title> <journal> IEEE Transactions of Reliability, </journal> <volume> R-29(2):126-129, </volume> <month> June </month> <year> 1980. </year>
Reference-contexts: In effect, what we used there was the Cartesian product of one value, the constant inflow. Combining pdfs from different independent values by expressing each as a set of histogram bars, and using their Cartesian product has been shown to be practical <ref> [Colombo and Jaarsma 80] </ref>. Unfortunately the number of elements in the Cartesian product increases exponentially with the number of pdf-described values, so there is a complexity problem that occurs in the case of models with many such values. <p> By quantitative model specifications we mean quantitative aspects of the a model such as parameters, inputs, and initial conditions. Our technique for bounding the probabilities of qualitatively meaningful behaviors given partial quantitative model specifications uses a modification of the histogram discretization method <ref> [Ingram et al. 68; Colombo and Jaarsma 80] </ref>. Critical applications like the Space Shuttle Program have contributed to the computer industry's quest for highly dependable computers. Such applications have increased the importance of dependability analysis in computer system development.
Reference: [Cooper 89] <author> M. C. Cooper, </author> <title> An Optimal k-consistency Algorithm, </title> <booktitle> Artificial Intelligence 41(1) (November 1989) 89-95. </booktitle>
Reference-contexts: When an interval is narrowed, the improvement tends to ripple outward to other states. The overall settling of the values describing the states of the simulation is a Waltz filtering process [Waltz 75] over interval values [Davis 87] and hence is guaranteed <ref> [Davis 87; Cooper 89; Berleant 90] </ref> not to narrow any interval too much. 2 5.1.6 Iteration The algorithm iterates by continuing to divide gaps by interpolating new states. While the user currently specifies the number of iterations, it will be straight-forward to apply goal-oriented termination criteria. <p> Let us look at correctness, convergence and stability in more detail. 5.3.1 Correctness The Q3 program uses Waltz filtering [Waltz 75] on interval labels, as in chapter 2 for interval inference, a method discussed by Davis [1987]. Waltz filtering has been proven correct <ref> [Cooper 89; Berleant 90] </ref>. Therefore the results provided by Q3 are correct, meaning: An inferred interval for any model variable at any point in the simu lation contains all possible values that could be exhibited by a system conforming to the model and its quantitative specifications.
Reference: [Dalle Molle 89] <author> D. Dalle Molle, </author> <title> Qualitative Simulation of Dynamic Chemical Processes, </title> <institution> Chemical Engineering Dept. dissertation, University of Texas Artificial Intelligence Laboratory report AI89-107, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: The exact values of such input parameters often cannot be known ahead of time with desired precision, so qualitative-quantitative simulation could be beneficial. A subset of Q3 called Q2 has been applied in the field of chemical engineering <ref> [Dalle Molle 89] </ref>. Chapter 7 Application: Probabilities of Qualitative Behaviors 7.1 Overview Research on finding the different behaviors that an incompletely specified model can exhibit has concentrated on finding the plausible behaviors, and ruling out implausible ones. However, it would also be useful to estimate the probabilities of different behaviors.
Reference: [Das et al. 90] <author> C. R. Das, J. Kreulen, and M. Thazhuthaveetil, </author> <title> Dependability Modeling for Multiprocessors, </title> <journal> IEEE Computer, </journal> <volume> 23(10) </volume> <pages> 7-19, </pages> <month> October </month> <year> 1990. </year>
Reference: [Davis 84] <author> Randall Davis, </author> <title> Diagnostic Reasoning Based on Structure and Behavior, </title> <journal> Artificial Intelligence, 1984, </journal> <volume> 24: </volume> <pages> pages 347-410. </pages>
Reference: [Davis 87] <author> Ernest Davis, </author> <title> Constraint Propagation with Interval Labels, </title> <note> Artificial Intelligence 32 (July 1987) 281-331. </note>
Reference-contexts: labels * Correct | won't rule out possible values * Example: * Z := (X + Y ) " Z = [1; 1] + [3; 4] " [1; 5] = [4; 5]: * Y := (Z X) " Y = [4; 5] [1; 2] " [3; 4] = [3; 4]: <ref> [Waltz 75; Davis 87] </ref>. |||||| 24 Pasteup here: Range propagation across an M+ function. shown graphically. Shaded regions of the axes represent numerical intervals, and the upper and lower envelopes represent numerical envelope functions. <p> These include sophisticated interval analysis techniques, linear and non-linear programming, and inequality reasoning (section 1.3.4). For this work, the well known AI technique of Waltz filtering <ref> [Davis 87; Waltz 75] </ref> has been applied, supplemented with other methods to be described in later chapters. <p> Chapter 3 Supplemental Algorithms for Interval Inference: Target Interval Partitioning and Behavior Splitting So far, results have depended upon Waltz filtering with interval labels <ref> [Davis 87] </ref> (see figure 2.6). However, the need for additional methods for deriving better inferences has motivated the development of more powerful techniques. These are called target interval partitioning (TIP) and behavior splitting and are explained in this chapter. <p> Repeat until no further significant change occurs: 35 (a) Set the target to a sub-interval (the test interval) of its current interval, as illustrated in figure 3.1. (b) Propagate the effects of this change throughout the network <ref> [Davis 87] </ref>, using appropriate interval operations to process each constraint. For example, processing Z = X + Y is shown in figure 2.6. If there is no consistent labeling for the network given the test interval, the test interval may be removed from the current interval. <p> This is so because quantitative inference is based on Waltz filtering, which is known to be safe <ref> [Davis 87; Berleant 90] </ref>). Numerical simulation is in general incapable of correctness guarantees, although interval simulation can provide them [Eijgenraam 81]. Finally, this technique is well suited to working with non-linear systems since no distinction is made between linear and non-linear systems. <p> When an interval is narrowed, the improvement tends to ripple outward to other states. The overall settling of the values describing the states of the simulation is a Waltz filtering process [Waltz 75] over interval values <ref> [Davis 87] </ref> and hence is guaranteed [Davis 87; Cooper 89; Berleant 90] not to narrow any interval too much. 2 5.1.6 Iteration The algorithm iterates by continuing to divide gaps by interpolating new states. <p> When an interval is narrowed, the improvement tends to ripple outward to other states. The overall settling of the values describing the states of the simulation is a Waltz filtering process [Waltz 75] over interval values [Davis 87] and hence is guaranteed <ref> [Davis 87; Cooper 89; Berleant 90] </ref> not to narrow any interval too much. 2 5.1.6 Iteration The algorithm iterates by continuing to divide gaps by interpolating new states. While the user currently specifies the number of iterations, it will be straight-forward to apply goal-oriented termination criteria. <p> Settling of such a network may approach a steady state asymptotically, or worse, one or a few nodes may settle asymptotically while others starve, i.e. are queued for filtering after the asymptotically settling ones and so are never serviced. Thus termination may in theory never 64 occur <ref> [Davis 87] </ref>. Theoretically, termination is ensured by the use of machine arithmetic because the graininess means only a finite number of values are representable. Use of rational numbers, supported by Common Lisp [Steele 90], has been found occasionally useful for testing but does not ensure termination. <p> Use of rational numbers, supported by Common Lisp [Steele 90], has been found occasionally useful for testing but does not ensure termination. The policy of narrowing intervals only if they can be narrowed by a percentage greater than some suitable * can ensure termination in reasonable time <ref> [Davis 87] </ref> in either machine or rational arithmetic 5 . 5.3.2 Convergence There are two aspects to convergence. One is theoretical and assumes machine arithmetic is perfect. The other deals with the round-off error inherent in real computers. <p> Propagate the quantitative information throughout the constraint net work, allowing it to settle using Waltz filtering <ref> [chapter 2; Davis 87] </ref>. 1 Q3 derives from a previous program Q2 [Kuipers and Berleant 88] which in turn derives from QSIM [Kuipers 84]. 108 Constraint Network Representation (for System Crash at Time T 1) #failed elements T 1 (=MaxTolerance) net element failure rate T 1 (=K n ) element repair
Reference: [Dean and Boddy 88] <author> Tom Dean and Mark Boddy, </author> <title> Reasoning About Partially Ordered Events, </title> <booktitle> Artificial Intelligence 36 (3) (1988) 375-399. </booktitle>
Reference: [Dean and McDermott 87] <author> Tom Dean and Drew McDermott, </author> <title> Temporal Database Management, </title> <note> Artifical Intelligence 32 (1) (1987) 1-55. </note>
Reference: [DeCoste 90] <author> Dennis DeCoste, </author> <title> Dynamic Across-Time Measurement Interpretation, </title> <booktitle> in Proceedings of the Eight National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pp. 373-379, </pages> <year> 1990. </year>
Reference: [de Kleer 75] <author> Johan de Kleer, </author> <title> Qualitative and Quantitative Knowledge in Classical Mechanics, </title> <type> technical report AI-TR-352, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1975. </year>
Reference: [de Kleer 90] <author> Johan de Kleer, </author> <title> Multiple Representations of Knowledge in a Mechanics Problem-Solver, </title> <note> in Proceedings IJCAI-77, also reprinted in Weld and de Kleer [1990]. </note>
Reference: [de Kleer and Brown 85] <author> Johan de Kleer and John Seely Brown, </author> <title> A Qualitative Physics Based on Confluences, </title> <note> in Artificial Intelligence 24, reprinted as Bobrow [1985]. </note>
Reference: [Derrick and Grossman 78] <author> W. Derrick and S. Grossman, </author> <title> Elementary Differential Equations with Applications, </title> <publisher> Addison-Wesley, </publisher> <year> 1978. </year> <month> 126 </month>
Reference-contexts: We discuss these two issues below. 5.4.1 Alternatives to the Mean Value Constraint The mean value constraint used in Q3 is a generalization of Euler's method <ref> [Derrick and Grossman 78] </ref> in numerical simulation. While Euler's method is geared toward finding the next state in a simulation of a system of differential equations, the mean value constraint also works backwards from a state to the adjacent previous state. <p> to any one interval of non-zero width (an interval of zero width, i.e. a number, would correspond to the single pdf described by a unit impulse, or Dirac ffi 83 function, which is non-zero only at a single point yet has a definite integral of precisely one over (1; 1) <ref> [Derrick and Grossman 78] </ref>). A representation method utilizing pdfs instead of intervals has been shown to enable bounding the probabilities of different qualitative behaviors in chapters 7, 8, Berleant [1990] and Berleant and Chandra [1991].
Reference: [Doyle et al. 89] <author> R. Doyle, D. Berleant, L. Falcone, and U. Fayyad, </author> <title> Selective Simulation and Selective Sensor Interpretation in Monitoring, </title> <booktitle> in Proceedings of AIAA Computers in Aerospace VII, American Institute of Aeronautics and Astronautics, </booktitle> <address> 370 L'Enfant Promenade, S.W., Washington, D.C., </address> <month> October </month> <year> 1989. </year>
Reference-contexts: A natural next step in the development of Q3 would be to simulate a large, useful system. The scaling problems that would certainly arise could then drive further developments to the simulation technique. One application for simulating complex systems is in monitoring <ref> [Doyle et al. 89] </ref>. This could form the context for using Q3 to simulate a complex system. Methods for qualitative-quantitative simulation other than that of Q3 are plausible. It seems certain that Monte Carlo simulation could be used as a front end for a qualitative-quantitative simulator.
Reference: [Doyle and Sacks 89] <author> Doyle, J. and E. P. Sacks, </author> <title> Stochastic Analysis of Qualitative Dynamics, </title> <booktitle> in Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 1187-1192, </pages> <year> 1989. </year>
Reference: [Dubois and Prade 80] <author> D. Dubois and H. Prade, </author> <title> Fuzzy Sets and Systems: Theory and Applications, </title> <publisher> Academic Press, </publisher> <year> 1980. </year>
Reference-contexts: Domain independent work in artificial intelligence includes Sacks' [1987] work on hierarchical inequality reasoning. There are also other representations for partial numeric information such as probability (e.g. Pearl [1988], Wellman [1990] and chapter 7) and Zadeh's fuzzy mathematics <ref> [Dubois and Prade 80, Shen and Leitch 90] </ref>. 10 1.3.5 Qualitative-quantitative simulation work Simulation of models to predict behavior of real systems has a long history and much practical use. Discrete event simulation, used e.g. in computer engineering, simulates models whose state variables change discretely. <p> The fuzzy mathematics approach Much of the qualitative-quantitative simulation work has utilized intervals as a representation for partial numeric knowledge. Intervals are not the only representation for partial numeric information. Another recent approach is the use of fuzzy values and intervals <ref> [Zadeh 65; Dubois and Prade 80] </ref> for simulation. While fuzzy reasoning has been criticized [Cheeseman 86], it has also been used in qualitative-quantitative simulation by Shen and Leitch [1990]. They generalize intervals, which have sharp boundaries, to have fuzzy boundaries (figure 1.3).
Reference: [Eijgeraam 81] <author> P. Eijgenraam, </author> <title> The solution of Initial Value Problems Using Interval Arithmetic: Formulation and Analysis of an Algorithm, </title> <publisher> Mathe-matisch Centrum, </publisher> <address> Amsterdam, </address> <year> 1981. </year>
Reference: [Feng 86] <author> T. Feng, </author> <title> Development of a Fault-Tolerant Computer System for Ballistic Missile Defense, </title> <note> Technical Report to RADC, </note> <institution> The Pennsylvania State University, </institution> <year> 1986. </year>
Reference: [Finizio and Ladas 82] <author> N. Finizio and G. Ladas, </author> <title> Ordinary Differential Equations with Modern Applications, </title> <publisher> Wadsworth Publishing Co., </publisher> <year> 1982. </year>
Reference: [Fishwick and Zeigler 90] <author> Paul A. Fishwick and Bernard P. Zeigler, </author> <title> Qualitative Physics: Towards the Automation of Systems Problem Solving, </title> <booktitle> in Proceedings of the First AI, Simulation and Planning Conference, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <address> Washington, DC, </address> <year> 1990, </year> <pages> pp. 118-134. </pages>
Reference: [Forbus 83] <author> Kenneth D. Forbus, </author> <title> Measurement Interpretation in Qualitative Process Theory, </title> <booktitle> in Proceedings IJCAI-8, </booktitle> <year> 1983, </year> <pages> pp. 315-320. </pages>
Reference: [Forbus 85] <author> Kenneth Forbus, </author> <title> Qualitative Process Theory, </title> <note> in Artificial Intelligence 24, reprinted in Bobrow [1985]. </note>
Reference: [Forbus 86] <author> Kenneth D. Forbus, </author> <title> Interpreting Measurements of Physical Systems, </title> <booktitle> in Proceedings AAAI-86, </booktitle> <year> 1986, </year> <pages> pp. 113-117. </pages>
Reference-contexts: However, the present approach is quite different. The present method differs from Forbus' approach in the handling of quantitative information. In the more complete formulation <ref> [Forbus 86] </ref>, a continuous stream of quantitative data is mapped into a stream of qualitative descriptions; in his example directions of change, or Ds values f+1; 0; 1g.
Reference: [Forbus 90] <author> Kenneth Forbus and Brian Falkenhainer, </author> <title> Self-Explanatory Simulations: an Integration of Qualitative and Quantitative Knowledge, </title> <booktitle> Proceedings AAAI-90 (380-387). </booktitle>
Reference: [Forrester 61] <author> Jay W. </author> <title> Forrester, Industrial Dynamics, </title> <publisher> M.I.T. Press, </publisher> <year> 1961. </year> <month> 127 </month>
Reference: [Gear 71] <author> William Gear, </author> <title> Numerical Initial Value Problems in Ordinary Differential Equations, </title> <publisher> Prentice-Hall, </publisher> <year> 1971. </year>
Reference-contexts: Two adaptive discretization methods that have been previously reported are adaptive stepsize control <ref> [Press et al. 86; Gear 71] </ref>, and multigrid methods [Brandt 77; Briggs 87]. 5.1 Step Size Refinement First we overview the stages of the step size refinement algorithm. <p> One is theoretical and assumes machine arithmetic is perfect. The other deals with the round-off error inherent in real computers. Theoretical convergence in the interval domain is analogous to the convergence concept familiar in discussions of numerical simulation <ref> [Gear 71] </ref>. In the interval domain, convergence means fully precise predictions, that is, intervals of zero width, in the limit as the maximum step size approaches zero, given precise initial conditions and model parameters and ignoring round-off effects. <p> While real machines are subject to round-off which prevents complete convergence, convergence is nevertheless an important tool in analyzing simulation techniques. The analysis here is based on traditional proofs of convergence for numerical simulation methods such as Euler's method <ref> [Gear 71] </ref>, also found in basic texts on ODEs such as Derrick and Grossman [1978]. <p> The proof assumes a system description in the form of a set of first order differential equations, the standard form for convergence proofs <ref> [Gear 71] </ref>. Q3, however, utilizes a constraint network. Fortunately any set of first order differential equations can be easily converted into the constraint network representation, by expressing all binary operations as ternary constraints and all unary operations as binary constraints. <p> This set of equations can then be converted into a set of first order dif ferential equations by standard means <ref> [Gear 71] </ref>. 3. The Lemma shows bounded uncertainty for each fixed time t = nh, but the constants K 1 and K 2 are exponential functions of t. This reflects the "uncertainty explosion" in traditional interval simulators.
Reference: [Genesereth 84] <author> Michael R. Genesereth, </author> <title> The Use of Design Descriptions in Automated Diagnosis, </title> <booktitle> in Artificial Intelligence, 1984, </booktitle> <volume> 24: </volume> <pages> pp. 411-436. </pages>
Reference: [Gleick 87] <author> James Gleick, </author> <title> Chaos: Making a New Science, </title> <publisher> Viking Penguin Inc., </publisher> <year> 1987. </year>
Reference-contexts: an outline of the remaining chapters, each of which is intended to be largely self-contained and independently readable. 1.1 Motivating Overview The often noted Lorenz attractor showed the impossibility of long term weather forecasting and provided the first milestone in the discovery of the theory of chaos, or nonlinear dynamics <ref> [Gleick 87] </ref>. The path Lorenz' set of 3 simple equations takes through its 3-D parameter space has 2 qualitatively distinct "wings". Each wing contains infinitely many paths, yet the space containing those paths remains bounded in extent (figure, appendix A).
Reference: [Henrici 62] <author> P. Henrici, </author> <title> Discrete Variable Methods for Ordinary Differential Equations, </title> <publisher> John Wiley and Sons, </publisher> <year> 1962. </year>
Reference: [Hon 87] <author> Robert W. Hon, </author> <title> Dynamic Analysis Tools, chapter 6 of Steven M. Rubin, Computer Aids for VLSI Design, </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: Given input vectors, the stable state of the circuit is derived by relaxation. At the numerical end of the spectrum are simulators such as SPICE [Tuinenga 88] which are numerical. There is a variety of systems in between that do qualitative-quantitative reasoning <ref> [Hon 87] </ref>. For example, timing simulators [Terman 83; Chawla et al. 75] combine numerical circuit information with qualitative information about logic state, and multilevel simulators simulate at different levels of abstraction within a single integrated circuit design [Insinga 84].
Reference: [Ingram et al. 68] <author> G. E. Ingram, E. L. Welker, and C. R. Herrmann, </author> <title> Designing for Reliability based on Probabilistic Modeling using Remote Access Computer Systems, </title> <booktitle> in Proceedings ASME 7th Reliability and Maintainability Conference, </booktitle> <year> 1968, </year> <pages> pp. 492-500. </pages>
Reference-contexts: By quantitative model specifications we mean quantitative aspects of the a model such as parameters, inputs, and initial conditions. Our technique for bounding the probabilities of qualitatively meaningful behaviors given partial quantitative model specifications uses a modification of the histogram discretization method <ref> [Ingram et al. 68; Colombo and Jaarsma 80] </ref>. Critical applications like the Space Shuttle Program have contributed to the computer industry's quest for highly dependable computers. Such applications have increased the importance of dependability analysis in computer system development.
Reference: [Insinga 84] <author> Aron K. Insinga, </author> <title> Behavioral Modeling in a Structural Logic Simulator, </title> <month> ICCAD '84 (November </month> <year> 1984) </year> <month> 42-44. </month>
Reference-contexts: There is a variety of systems in between that do qualitative-quantitative reasoning [Hon 87]. For example, timing simulators [Terman 83; Chawla et al. 75] combine numerical circuit information with qualitative information about logic state, and multilevel simulators simulate at different levels of abstraction within a single integrated circuit design <ref> [Insinga 84] </ref>. Qualitative-quantitative work in the VLSI domain is specialized and lacks generality, because simulators take advantage of special properties of the domain. For example, component states may be modeled with a quantity space of discrete values with simulation done discretely [VLSI 86]. These are called multiple-state simulators.
Reference: [Iwasaki 88] <author> Yumi Iwasaki, </author> <title> Causal Ordering in a Mixed Structure, </title> <booktitle> Proceedings AAAI-88 (313-318). </booktitle>
Reference: [Iwasaki and Simon 86] <author> Yumi Iwasaki and Herbert Simon, </author> <title> Causality in Device Behavior, </title> <note> Artificial Intelligence 29 (July 1986). </note>
Reference: [Jackson 82] <author> Jackson, P. S., </author> <title> A Second-Order Moments Method for Uncertainty Analysis, </title> <journal> IEEE Transactions on Reliability, </journal> <volume> R-31(4)382-384, </volume> <year> 1982. </year>
Reference: [Jackson et al. 81] <author> P. Jackson, R. Hockenbury and M. Yeater, </author> <title> Uncertainty Analysis of System Reliability and Availability Assessment, </title> <booktitle> Nuclear Engineering and Design 68 </booktitle> <pages> 5-29, </pages> <year> 1981. </year>
Reference-contexts: Thus, to use pdfs we need to be able to do arithmetic operations on them. One approach to doing operations on pdfs is analytical. However this approach becomes intractable or impossible for problems involving more than a few operations <ref> [Jackson et al. 81] </ref>. Another approach is the numerical combination of random variables using histogram approximations to their pdfs 1 , what we will call the histogram discretization method.
Reference: [Johnson 89] <author> B. Johnson, </author> <title> Design and Analysis of Fault Tolerant Digital Systems, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference: [Johnson and Malek 88] <author> A. Johnson, and M. Malek, </author> <title> Survey of Software Tools for Evaluating Reliability, Availability, and Serviceability, </title> <type> IBM Technical Report, TR 51.0404-1, </type> <year> 1988. </year>
Reference: [Kalos and Whitlock 86] <author> M. H. Kalos and P. Whitlock, </author> <title> Monte Carlo Methods, </title> <editor> J. </editor> <publisher> Wiley and sons, </publisher> <year> 1986. </year> <month> 128 </month>
Reference-contexts: qualitatively different behaviors can occur; an interval simulator will not automatically find and represent qualitively distinct behaviors, thus correctly | but crudely | pre dicting a final height in the interval [0; 1] if run forever or [0; f (t)] if run for finite time; a Monte Carlo-based simulation analysis <ref> [Kalos and Whitlock 86] </ref> will not automatically classify the results of its many runs into qualitative categories and may not even find an example of an unlikely but possible behavior; and finally, qualitative simulation will not use the interval but rather return all behaviors even when the interval is consistent with <p> The potential shortcomings of qualitative simulation, such as a profusion of behaviors, are alleviated substantially by the numerical component of Q3. Monte Carlo simulation Inferring intervals for the possible ranges of model variables can be done with Monte Carlo simulation. However, Monte Carlo simulation <ref> [Kalos and Whitlock 86] </ref> lacks some desirable characteristics: 1. Monte Carlo simulation relies on random sampling of the input space, so portions of the input space could be missed by chance, leading to predictions that do not include possible values. 2.
Reference: [Kaplan 81] <author> Stanley Kaplan, </author> <title> On the Method of Discrete Probability Distributions in Risk and Reliability Calculations | Application to Seismic Risk Assessment, Risk Analysis, </title> <type> 1(3), </type> <year> 1981. </year>
Reference-contexts: So far, the algorithm is as described in Ingram et al. [1968] and Colombo and Jaarsma [1980]. A modified version approximates the bars with their midpoints and probability masses <ref> [Kaplan 81] </ref>. A number of observations may be made on the histogram discretiza tion technique. These include: 1. The histogram discretization of a pdf could easily be described the same way as a result collection, since a result collection is simply a list of intervals and probability masses.
Reference: [Karp and Friedland 87] <author> Peter D. Karp and Peter Friedland. </author> <title> Coordinating the Use of Qualitative and Quantitative Knowledge in Declarative Device Modeling, Knowledge Systems Lab. </title> <type> Report KSL 87-09, </type> <institution> Stanford Computer Science Dept., </institution> <year> 1987. </year>
Reference: [Kolev et al. 88] <author> Lubomir V. Kolev, Valeri M. Mladenov, and Simeon S. Vladov, </author> <title> Interval Mathematics Algorithms for Tolerance Analysis, </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> 35(8) </volume> <pages> 967-975, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: One of the sub-problems in applying interval mathematics techniques to applications such as qualitative-quantitative simulation is finding the variation in the value of a function given known variation in one or more of its parameters <ref> [Kolev et al. 88; Asaithambi et al. 82] </ref>. This can be difficult because the RHS of a function is an expression, and excess width is a well-known problem in evaluating interval expressions [Moore 79; Abelson and Sussman, 1985:84-88].
Reference: [Kuipers 85] <author> Benjamin Kuipers, </author> <title> Commonsense Reasoning about Causality: Deriving Behavior from Structure, </title> <note> in Artificial Intelligence 24, reprinted in Bobrow [1985]. </note>
Reference: [Kuipers 85] <author> Benjamin Kuipers, </author> <title> Qualitative Simulation, </title> <booktitle> in Artificial Intelligence 32 (1986) 57-95. </booktitle>
Reference: [Kuipers 86] <author> Benjamin J. Kuipers, </author> <title> Qualitative Simulation, </title> <booktitle> in Artificial Intelligence, 1986, </booktitle> <volume> 29: </volume> <pages> pp. 289-338. </pages>
Reference-contexts: Conversely, adding numerical inference to qualitative simulation tends to retain a different set of shortcomings, those found in qualitative simulation. Thus these two major categories of research in qualitative-quantitative simulation are complementary. Q3 utilizes partial numerical information in the form of intervals, and provides correctness guarantees, both qualitative <ref> [Kuipers 86, 88] </ref> and quantitative. The quantitative correctness of Q3 derives from the correctness of Waltz filtering, which is the underlying basis for quantitative inference in Q3. The potential shortcomings of qualitative simulation, such as a profusion of behaviors, are alleviated substantially by the numerical component of Q3. <p> Because the representation in figure 4.2 contains a quantitative description of the path of the system that is not limited to qualitatively significant values, it constitutes a quantitative simulation. * Figure 4.2 is also a qualitative simulation: all qualitatively distinct values in the simulation <ref> [Kuipers 86] </ref> are present. For example, T0 is when the object is dropped, T1 is when it hits the ground, H is the initial height from which it is dropped, G is gravitational acceleration, and V0 is the final, maximum velocity. <p> The simulation was refined by interpolating states whose times are numbers, between preexisting qualitatively significant states whose times are symbolically labeled T0, T1, T2, T3 and T4 and were found by qualitative simulation using QSIM <ref> [Kuipers 86] </ref> (the particular values of time inserted were determined by hand in an ad hoc way, however an algorithm for determining them is the subject of the next chapter). As the number of interpolated states increases, inferred intervals for model variable values in other states tend to become narrower. <p> Each stage is discussed in more detail in the following subsections, which are each titled with the name of the stage given in this overview: 1. Qualitative simulation: Simulate the model with the QSIM qualitative simulator <ref> [Kuipers 86] </ref> or any simulator that produces qualitatively distinct behaviors encoded as networks of constraints on the values of model variables at the qualitative time points. 2. <p> Let us now explain each of these steps in more detail. 5.1.1 Qualitative simulation QSIM predicts a set of behaviors guaranteed to include a description of the actual behavior of any system described by the given QDE <ref> [Kuipers 86] </ref>. The qualitative simulation produces a representation of each qualitatively distinct behavior that a system conforming to the model might exhibit. Each behavior is represented as a constraint network, which will be used to propagate partial quantitative information in the form of intervals. <p> If a solution exists, it will be consistent with some qualitative behavior generated by the QSIM algorithm because QSIM provides that guarantee <ref> [Kuipers 86] </ref>, and the solution will be within the interval bounds specified by equation B.2 because Waltz filtering with interval labels is correct (section 5.3.1). 3. Since F is a natural interval extension, F is inclusion monotonic, meaning F (A) F (B) if A B [Moore 79].
Reference: [Kuipers 88] <author> Benjamin Kuipers, </author> <title> The Qualitative Calculus is Sound but Incomplete: a Reply to Peter Struss, </title> <booktitle> Int. J. Artificial Intelligence in Engineering 3(3) </booktitle> <pages> 170-173, </pages> <year> 1988. </year>
Reference: [Kuipers and Berleant 88] <author> Benjamin J. Kuipers and Daniel Berleant, </author> <title> Using Incomplete Quantitative Knowledge in Qualitative Reasoning, </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence (AAAI-88), </booktitle> <year> 1988. </year>
Reference-contexts: Propagate the quantitative information throughout the constraint net work, allowing it to settle using Waltz filtering [chapter 2; Davis 87]. 1 Q3 derives from a previous program Q2 <ref> [Kuipers and Berleant 88] </ref> which in turn derives from QSIM [Kuipers 84]. 108 Constraint Network Representation (for System Crash at Time T 1) #failed elements T 1 (=MaxTolerance) net element failure rate T 1 (=K n ) element repair rate T 1 (=K r ) ! ! ! element failure rate
Reference: [Kuipers and Berleant 90] <author> Benjamin Kuipers and Daniel Berleant, </author> <title> A Smooth Integration of Incomplete Quantitative Knowledge into Qualitative Simulation, </title> <institution> Artificial Intelligence Laboratory tech. report AI90-122, University of Texas at Austin, </institution> <month> Jan. </month> <year> 1990. </year>
Reference: [Laprie 85] <author> J. C. Laprie, </author> <title> Dependable Computing and Fault-Tolerance: Concepts and Terminology, </title> <booktitle> Proceedings IEEE 15th Fault-Tolerant Computing Symposium, </booktitle> <pages> pp. 18-21, </pages> <year> 1985. </year>
Reference: [Lasota and Mackey 85] <author> A. Lasota, and M. C. Mackey, </author> <title> Probabilistic Properties of Deterministic Systems, </title> <publisher> Cambridge University Press, </publisher> <year> 1985. </year> <month> 129 </month>
Reference-contexts: Yet this was the situation for the 1-tank "bathtub" model used as an example, as 101 the inflow was a pdf but the drain aperture was described as an interval 2 . Stochastic differential equations is a topic that can arise in connection with models with uncertain inputs <ref> [Lasota and Mackey 85] </ref>. Two major differences between that and the current work are: 1. inputs to stochastic differential equations vary randomly, often due to a random "noise" term, whereas the present work assumes no noise.
Reference: [Luenberger 73] <author> D. G. Luenberger, </author> <title> Introduction to Linear and Nonlinear Programming, </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: Powerful qualitative-quantitative constraint reasoning modules might profitably be employed in Q3 and in future qualitative-quantitative simulators. Inequality reasoning, such as by linear and nonlinear programming, is a large area in its own right <ref> [Luenberger 73] </ref>. In artificial intelligence it has been applied in a number of areas including some previously mentioned. Domain independent work in artificial intelligence includes Sacks' [1987] work on hierarchical inequality reasoning. There are also other representations for partial numeric information such as probability (e.g.
Reference: [Makam 82] <author> S. V. Makam and A. Avizienis, </author> <title> ARIES 81: A Reliability and Life-Cycle Evaluation Tool for Fault-Tolerant Systems, </title> <booktitle> in Proceedings IEEE 12th Fault-Tolerant Symposium, </booktitle> <pages> pp. 267-274, </pages> <year> 1982. </year>
Reference-contexts: The simplest analytical techniques use combinatorics while the complex analytical evaluation techniques make use of Markov models. Petri net modeling is a popular simulation dependability analysis technique. Another simulation technique for dependability analysis is Monte Carlo simulation. Many dependability analysis tools like HARP [Bavuso 87], ARIES <ref> [Makam 82] </ref> and SHARPE [Sahner and Trivedi 86] have been developed and are available. All of these tools support one or more of the major dependability 104 analysis techniques. See Johnson [1988] and Mullazini [1986] for a thorough comparison of the available dependability analysis tools.
Reference: [McDermott and Davis 84] <author> Drew McDermott and Ernest Davis, </author> <title> Planning Routes Through Uncertain Territory, </title> <booktitle> Artificial Intelligence 22 (March 1984) 107-156. </booktitle>
Reference: [Moore 66] <author> Ramon E. Moore, </author> <title> Interval Analysis, </title> <publisher> Prentice-Hall, </publisher> <address> NJ, </address> <year> 1966. </year>
Reference-contexts: Inferences based on the model will then entail mathematical operations on intervals instead of on numbers. While individual arithmetic operations such as those in f+; ; fi; =g are defined on intervals with little difficulty <ref> [Moore 66; 79] </ref>, solving for an interval valued variable in an equation so as to achieve a result that does not have excess width is, as pointed out above, not straightforward. <p> The simplicity of this method for maintaining cor rectness derives from the fact that interval arithmetic became an active area of mathematical research precisely because it was observed to be well suited to dealing with machine arithmetic error <ref> [Moore 66] </ref>. Termination. Settling of a Waltz filtered network is guaranteed when the label sets containing candidate values have a finite number of elements. However, in the case of intervals or other label sets containing an infinite number of elements, termination may not occur.
Reference: [Moore 79] <author> Ramon E. Moore, </author> <title> Methods and Applications of Interval Arithmetic, </title> <booktitle> SIAM Studies in Applied Mathematics, </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1979. </year>
Reference-contexts: This can be difficult because the RHS of a function is an expression, and excess width is a well-known problem in evaluating interval expressions <ref> [Moore 79; Abelson and Sussman, 1985:84-88] </ref>. As a trivial example, we know that X X = 0, but the straightforward interval-based evaluation method gives a weaker answer for non-numerical X's. For example, [1; 2] [1; 2] = [1; 1]. <p> The amount of excess width can often be reduced (or eliminated) by algebraic rearrangement of an expression to be calculated. For the "natural interval extension" form of an expression <ref> [Moore 79] </ref>, excess width can increase as o (w (X)), where X is an operand in the expression and w (X) is its width. For the "centered normal form" and "mean value form" [Moore 79] excess width is as high as o (w (X) 2 ). <p> For the "natural interval extension" form of an expression <ref> [Moore 79] </ref>, excess width can increase as o (w (X)), where X is an operand in the expression and w (X) is its width. For the "centered normal form" and "mean value form" [Moore 79] excess width is as high as o (w (X) 2 ). This means that for wide X, the natural interval extension tends to give better results, and for narrow X, the o (w (X) 2 ) forms are better. <p> Quantitative knowledge was expressed as intervals within which the values of model variables in a qualitative simulation are known to lie at given qualitative time points. Inference about the possible ranges of values of other model variables at various qualitatively significant times is done by applying interval arithmetic <ref> [Moore 79] </ref> to evaluate expressions. The work described in chapter 2 has been applied to several domains including reasoning about process control in the chemical engineering domain [Dalle-Molle 89]. Previous simulation work on combining quantitative and qualitative information has treated quantitative and qualitative information as distinct types of knowledge. <p> Of course, correctness of Waltz filtering in any but the most formal sense requires that the individual constraints be semantically correct. The arithmetic constraints used by Q3 are taken directly from the standard interval extensions of common operations like +, , fi and ffi <ref> [Moore 79; Alefeld and Herzberger 83] </ref>. The careful reader may, however, wonder about the semantic correctness of the mean value constraint (equation 2.2). <p> theorem of appendix B tells us that w (Y n ) K 1 w (Y 0 ) + K 2 h (5:1) where w (Y 0 ) represents the width of the interval vector describing the initial conditions, defined as the width of the widest interval component of the vector <ref> [Moore 79] </ref>. w (Y n ) is the width of the interval representing the uncertainty in y after n steps of simulation. K 1 and K 2 are constants and the maximum step size is h. <p> Note that the shape of the pdf makes a difference in the results. With repair rate also described by a pdf (not shown) there was no further improvement in inference due to excess width in interval calculations <ref> [Moore 79] </ref>. However, application of the previous algorithm of chapter 7 to the output of the current algorithm, in conjunction if necessary with step size refinement, is expected to provide arbitrarily good results | given arbitrary amounts of computation. ||||||||| 4. <p> A second improvement over the use of the mean value theorem would utilize Moore's Taylor Series method of interval simulation <ref> [Moore 79] </ref>. Applications of simulation are the major reason for doing simulation. Thus applying Q3 or other forms of qualitative-quantitative simulation is a relevant direction for further work. Some potential applications are discussed in chapter 6, which also describes how Q3 may be applied to measurement interpretation and diagnosis. <p> Then, for any fixed time t = nh, there are constants K 1 and K 2 such that w (Y n ) K 1 w (Y 0 ) + K 2 h: (B:1) Proof: The proof follows the standard proofs for convergence and stability for interval simulation <ref> [Moore 79] </ref>. 1 A function f satisfies the Lipschitz condition if there is a constant L such that jf (y 1 ) f (y 2 )j Ljy 1 y 2 j for all y 1 , y 2 in the domain of f. <p> Since F is a natural interval extension, F is inclusion monotonic, meaning F (A) F (B) if A B <ref> [Moore 79] </ref>. Hence F (Y n ) F (Y n t Y n+1 ) and F (Y n+1 ) F (Y n t Y n+1 ). <p> Since f is Lipschitz and F is a natural interval extension, F ([M; M ]) is bounded, by Moore's theorem 4.1 with N = 1 <ref> [Moore 79] </ref>. (In cases of division by zero see note 1.) Let M F =j F ([M; M ]) j, where the absolute value of an interval is the maximum of the absolute values of its endpoints. <p> The third step, correct for a single F , generalizes to the function vector case by application to each component. Then we discuss widths, step 4, which must be redefined for vectors. The width of an interval vector is the width of its widest component <ref> [Moore 79] </ref>. Since Moore proves his theorem 4.1 and lemma 4.2 for interval vectors, and widths are single numbers whether their arguments are numbers or vectors, the remaining steps work for vectors as stated. 2. The proof as stated takes all steps as having the same size h.
Reference: [Mullazini 86] <author> M. Mullazini, </author> <title> Dependability Prediction: Comparisons of Tools and Techniques, </title> <type> Technical Report CS-1986-20, </type> <institution> Duke University, </institution> <year> 1986. </year>
Reference: [Nishida and Doshita 91] <author> T. Nishida and S. Doshita, </author> <title> Reasoning about Global Behavior of Ordianry Differential Equations by Combining Qualitative and Quantitative Analysis, </title> <booktitle> in Proceedings, Second Annual Conference on AI, Simulation and Planning in High Autonomy Systems, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: Among the exceptions, Williams [1986] integrated qualitative and numeric information about time in his qualitative-quantitative simulator. Domain independent work on augmenting numerical simulation with AI techniques (item (2) above) has emphasized phase-space analysis <ref> [Yip 88, Sacks 90a, Nishida and Doshita 91, Zhao 91] </ref>. An overview of some of that work appears in Abelson [1989].
Reference: [Pearl 88] <author> Judea Pearl, </author> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference, </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1988. </year>
Reference: [Press et al. 86] <author> W. Press, B. Flannery, S. Teukolsky, W. Vetterling, </author> <title> Numerical Recipes, </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: Two adaptive discretization methods that have been previously reported are adaptive stepsize control <ref> [Press et al. 86; Gear 71] </ref>, and multigrid methods [Brandt 77; Briggs 87]. 5.1 Step Size Refinement First we overview the stages of the step size refinement algorithm.
Reference: [Pritsker 84] <author> A. Pritsker. </author> <title> Introduction to Simulation and SLAM II, </title> <publisher> Halsted Press, Div. of John Wiley & Sons, Inc., </publisher> <address> NY, </address> <year> 1984. </year>
Reference-contexts: Simulation of continuous systems also has a history of practical use. Such simulation has traditionally come under the heading of numerical methods. Combined simulators handle both discrete and continuous changes in state. In the mainstream computer simulation field, simulators such as SLAM <ref> [Pritsker 84] </ref> are combined simulators. Q3 is a combined simulator, as illustrated by the simulation of an air conditioned dwelling in figure 1.2.
Reference: [Raiffa 70] <author> H. Raiffa, </author> <title> Decision Analysis: Introductory Lectures on Choices under Uncertainty, </title> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1970. </year>
Reference-contexts: Work on diagnosis from first principles by Davis [1984], Genesereth [1984] and Reiter [1987] provides methods for optimizing the selection of new tests. An example is given in chapter 6. It should also be possible to perform a sensitivity analysis <ref> [Raiffa 70] </ref> on the results of the propagation, to assess the sensitivity of Q2's conclusions 31 to variations in the quantitative observations. This may be a fruitful direction for future work.
Reference: [Reiter 87] <author> Raymond Reiter, </author> <title> A Theory of Diagnosis from First Principles, </title> <booktitle> In Artificial Intelligence, 1987 32 </booktitle> <pages> 57-95. </pages>
Reference: [Sacks 87] <author> Elisha Sacks, </author> <title> Hierarchical Reasoning About Inequalities, </title> <booktitle> in Proceedings AAAI-87 (649-654). </booktitle>
Reference: [Sacks 90a] <author> Elisha Sacks, </author> <title> Automatic Qualitative Analysis of Dynamic Systems Using Piecewise Linear Approximations, </title> <booktitle> Artificial Intelligence 41 (3) (Jan. </booktitle> <year> 1990) </year> <month> 313-364. 130 </month>
Reference-contexts: Among the exceptions, Williams [1986] integrated qualitative and numeric information about time in his qualitative-quantitative simulator. Domain independent work on augmenting numerical simulation with AI techniques (item (2) above) has emphasized phase-space analysis <ref> [Yip 88, Sacks 90a, Nishida and Doshita 91, Zhao 91] </ref>. An overview of some of that work appears in Abelson [1989].
Reference: [Sacks 90b] <author> Elisha Sacks, </author> <title> A Dynamic Systems Perspective on Qualitative Simulation, </title> <note> Artificial Intelligence 42 (2-3) (March 1990) 349-362. </note>
Reference: [Sahner and Trivedi 86] <author> R. A. Sahner and K. S. Trivedi, </author> <title> Reliability Modeling Using SHARPE, </title> <journal> IEEE Transactions on Reliability R-36(2):186-193, </journal> <year> 1986. </year>
Reference-contexts: Petri net modeling is a popular simulation dependability analysis technique. Another simulation technique for dependability analysis is Monte Carlo simulation. Many dependability analysis tools like HARP [Bavuso 87], ARIES [Makam 82] and SHARPE <ref> [Sahner and Trivedi 86] </ref> have been developed and are available. All of these tools support one or more of the major dependability 104 analysis techniques. See Johnson [1988] and Mullazini [1986] for a thorough comparison of the available dependability analysis tools.
Reference: [Shen and Leitch 91] <author> Qiang Shen and Roy Leitch, </author> <title> Integrating Common-Sense and Qualitative Simulation by the Use of Fuzzy Sets, To appear in Current Work in Qualitative Physics, </title> <publisher> MIT Press, </publisher> <year> 1991. </year> <booktitle> Also in Proceedings of the 4th International Workshop on Qualitative Physics, Lugano, </booktitle> <address> Switzer-land, </address> <month> July </month> <year> 1990, </year> <pages> 220-232. </pages>
Reference-contexts: Figure 8.2 shows an iscosceles pdf representing a failure rate such as might be obtained subjectively from an expert. Triangular and trapezoidal shapes are often assumed, e.g. by work in fuzzy reasoning <ref> [Shen and Leitch 91] </ref>. Gaussian (bell) curves with clipped 105 Model for Dependability Analysis #failed elements Time net element failure rate element repair rate element failure rate faster than they are repaired, eventually the failed element tolerance is exceeded and the system crashes.
Reference: [Simmons 83] <author> Reid Simmons, </author> <title> The Use of Qualitative and Quantitative Simulations, </title> <booktitle> in Proceedings AAAI-83 (364-368). </booktitle>
Reference: [Simmons 86] <author> Reid Simmons, </author> <title> "Commonsense" Arithmetic Reasoning, </title> <booktitle> in Proceedings AAAI-86 (118-124). </booktitle>
Reference: [Simmons 88] <author> Reid Simmons, </author> <title> A Theory of Debugging Plans and Interpretations, </title> <booktitle> in Proceedings AAAI-88 (94-99). </booktitle>
Reference-contexts: Simmons' imagining technique [1983], later used in the GORDIUS program <ref> [Simmons and Davis 87; Simmons 88] </ref> combined qualitative and quantitative simulation in a discrete simulator using most notably the geological domain, showing that using both types of simulation together can produce results neither alone can produce in a discrete simulation.
Reference: [Simmons and Davis 87] <author> Reid Simmons and Randall Davis, </author> <title> Generate, Test and Debug: Combining Associational Rules and Causal Models, </title> <booktitle> in Proceedings IJCAI-87 (1071-1078). </booktitle>
Reference-contexts: Simmons' imagining technique [1983], later used in the GORDIUS program <ref> [Simmons and Davis 87; Simmons 88] </ref> combined qualitative and quantitative simulation in a discrete simulator using most notably the geological domain, showing that using both types of simulation together can produce results neither alone can produce in a discrete simulation.
Reference: [Skorstad and Forbus 89] <author> G. Skorstad and K. Forbus, </author> <title> Qualitative and Quantitative Reasoning about Thermodynamics, </title> <booktitle> in proceedings of the 3rd Qualitative Physics Workshop, </booktitle> <year> 1989. </year>
Reference: [Snow 86] <author> Paul Snow, </author> <title> Bayesian Inference Without Point Estimates, </title> <booktitle> in Proceedings, AAAI-86, </booktitle> <address> pp.233-237. </address>
Reference-contexts: This polytope may may be conveniently operated on with Bayes' theorem to produce useful conclusions <ref> [Snow 86] </ref>. 8.5 Conclusions This work has described a method for bounding probabilities of qualitative behaviors, given partial quantitative model specifications in the form of intervals and pdfs. Previous work on finding probabilities of behaviors has appeared in Yeh [1990], Doyle and Sacks [1989], and DeCoste [1990].
Reference: [Steele 90] <author> Guy L. Steele, Jr. </author> <title> Common Lisp: The Language, </title> <publisher> Digital Press, </publisher> <year> 1984 </year> <month> and </month> <year> 1990. </year>
Reference-contexts: Thus termination may in theory never 64 occur [Davis 87]. Theoretically, termination is ensured by the use of machine arithmetic because the graininess means only a finite number of values are representable. Use of rational numbers, supported by Common Lisp <ref> [Steele 90] </ref>, has been found occasionally useful for testing but does not ensure termination.
Reference: [Terman 83] <author> C. J. Terman, </author> <title> RSIM | A Logic-Level Timing Simulator, </title> <booktitle> in Proceedings IEEE International Conference on Computer Design (October 1983) 437-440. </booktitle>
Reference-contexts: Given input vectors, the stable state of the circuit is derived by relaxation. At the numerical end of the spectrum are simulators such as SPICE [Tuinenga 88] which are numerical. There is a variety of systems in between that do qualitative-quantitative reasoning [Hon 87]. For example, timing simulators <ref> [Terman 83; Chawla et al. 75] </ref> combine numerical circuit information with qualitative information about logic state, and multilevel simulators simulate at different levels of abstraction within a single integrated circuit design [Insinga 84].
Reference: [Tufte 83] <author> Edward R. Tufte, </author> <title> The Visual Display of Quantitative Information, </title> <publisher> Graphics Press, </publisher> <address> Box 430, Cheshire CT 06410, </address> <year> 1983. </year>
Reference-contexts: This helps reduce clutter in the display in order to better communicate with the reader <ref> [Tufte 83] </ref>. Empirically, this makes simulations more readable without interfering with convergence. 55 toward infinity. An example of this occurs in figure 1.1, for which the region of convergence starts out as [0; 1014] but ends up [0; 3671], as shown by the beginning and ending values of T1.
Reference: [Tuinenga 88] <author> P. W. Tuinenga, SPICE: </author> <title> A Guide to Circuit Simulations and Analysis Using PSpice, </title> <publisher> Prentice-Hall, </publisher> <year> 1988. </year> <month> 131 </month>
Reference-contexts: Given input vectors, the stable state of the circuit is derived by relaxation. At the numerical end of the spectrum are simulators such as SPICE <ref> [Tuinenga 88] </ref> which are numerical. There is a variety of systems in between that do qualitative-quantitative reasoning [Hon 87].
Reference: [VLSI 86] <author> VLSI Systems Design Staff, </author> <title> 1986 Survey of Logic Simulators, VLSI Systems Design, </title> <address> VII(2):32-40, </address> <month> Feb. </month> <year> 1986. </year>
Reference-contexts: Qualitative-quantitative work in the VLSI domain is specialized and lacks generality, because simulators take advantage of special properties of the domain. For example, component states may be modeled with a quantity space of discrete values with simulation done discretely <ref> [VLSI 86] </ref>. These are called multiple-state simulators. Some VLSI simulation systems can simulate large systems and are quite valuable commercially. 1.3.2 Qualitative-quantitative spatial reasoning Spatial domain work in artificial intelligence has also utilized qualitative-quantitative reasoning.
Reference: [Waltz 75] <author> David Waltz, </author> <title> Understanding Line Drawings of Scenes With Shadows, </title> <editor> in P. Winston, ed., </editor> <booktitle> The Psychology of Computer Vision, </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1975. </year>
Reference-contexts: labels * Correct | won't rule out possible values * Example: * Z := (X + Y ) " Z = [1; 1] + [3; 4] " [1; 5] = [4; 5]: * Y := (Z X) " Y = [4; 5] [1; 2] " [3; 4] = [3; 4]: <ref> [Waltz 75; Davis 87] </ref>. |||||| 24 Pasteup here: Range propagation across an M+ function. shown graphically. Shaded regions of the axes represent numerical intervals, and the upper and lower envelopes represent numerical envelope functions. <p> These include sophisticated interval analysis techniques, linear and non-linear programming, and inequality reasoning (section 1.3.4). For this work, the well known AI technique of Waltz filtering <ref> [Davis 87; Waltz 75] </ref> has been applied, supplemented with other methods to be described in later chapters. <p> When an interval is narrowed, the improvement tends to ripple outward to other states. The overall settling of the values describing the states of the simulation is a Waltz filtering process <ref> [Waltz 75] </ref> over interval values [Davis 87] and hence is guaranteed [Davis 87; Cooper 89; Berleant 90] not to narrow any interval too much. 2 5.1.6 Iteration The algorithm iterates by continuing to divide gaps by interpolating new states. <p> Let us look at correctness, convergence and stability in more detail. 5.3.1 Correctness The Q3 program uses Waltz filtering <ref> [Waltz 75] </ref> on interval labels, as in chapter 2 for interval inference, a method discussed by Davis [1987]. Waltz filtering has been proven correct [Cooper 89; Berleant 90].
Reference: [Weld and de Kleer 90] <author> Daniel Weld and Johan de Kleer, eds., </author> <title> Readings in Qualitative Reasoning about Physical Systems, </title> <publisher> Morgan Kaufmann Inc., </publisher> <year> 1990. </year>
Reference-contexts: Much work has been done on quantitative simulation. This includes both numerical simulation work, well known and in general use, as well as interval simulation [Eijgenraam 81]. More recently, artificial intelligence has given rise to the area of qualitative simulation <ref> [Bobrow 85; Weld and de Kleer 90] </ref>. However, neither qualitative nor quantitative simulation do everything the 1 The existence of phase space attractors makes the idea of simulation with partial information much more plausible.
Reference: [Wellman 90] <author> Michael Wellman, </author> <title> Foundations of Qualitative Probabilistic Networks, </title> <booktitle> Artificial Intelligence (1990). </booktitle>
Reference: [Whitmore and Findlay 78] <author> G. A. Whitmore and M. C. Findlay, </author> <title> Stochastic Dominance: an Approach to Decision-making Under Risk, </title> <publisher> Lexington Books, </publisher> <year> 1978. </year>
Reference: [Williams 86] <author> Brian Williams, </author> <title> Doing Time: Putting Qualitative Reasoning on Firmer Ground, </title> <booktitle> in Proceedings of the National conference on Artificial Intelligence (AAAI-86), </booktitle> <pages> pp. 105-112. </pages>
Reference: [Williams 88] <author> Brian Williams, </author> <title> MINIMA: a Symbolic Approach to Qualitative Algebraic Reasoning, </title> <booktitle> in Proceedings AAAI-88 (264-269). </booktitle>
Reference: [Yeh 90] <author> Yeh, A., </author> <title> Finding the Likely Behaviors of Static Continuous Nonlinear Systems, </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> Vol. 2, </volume> <year> 1990. </year>
Reference: [Yip 88] <author> Kenneth M. Yip, </author> <title> Generating Global Behaviors Using Deep Knowledge of Local Dynamics, </title> <booktitle> In Proceedings AAAI-88. </booktitle>
Reference-contexts: Among the exceptions, Williams [1986] integrated qualitative and numeric information about time in his qualitative-quantitative simulator. Domain independent work on augmenting numerical simulation with AI techniques (item (2) above) has emphasized phase-space analysis <ref> [Yip 88, Sacks 90a, Nishida and Doshita 91, Zhao 91] </ref>. An overview of some of that work appears in Abelson [1989].
Reference: [Young 78] <author> David M. Young, </author> <title> Stability (h ! 0 and h &gt; 0) for Systems, </title> <note> Course notes supplement 78.6 superseding pp. 566-573 of Young and Gregory [1972], </note> <author> D. Young, </author> <title> Center for Numerical Analysis, </title> <institution> University of Texas at Austin, </institution> <year> 1978. </year>
Reference: [Young and Gregory 72] <author> D. M. Young and R. T. Gregory, </author> <title> A Survey of Numerical Mathematics, vol. II, </title> <publisher> Addison-Wesley Pub. Co., </publisher> <year> 1972. </year>

References-found: 109

