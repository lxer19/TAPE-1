URL: http://www.cs.toronto.edu/~avigal/hck.ps
Refering-URL: http://www.cs.toronto.edu/~avigal/publications.html
Root-URL: http://www.cs.toronto.edu
Title: Representation of HighlyOEComplex Knowledge in a Database  
Author: AVIGDOR GAL OPHER ETZION ARIE SEGEV 
Keyword: Complex Information Modeling, Intelligent information systems, Temporal databases, Active databases  
Address: 32000, Israel  Berkeley, CA 94720, USA  
Affiliation: Information Systems Engineering Group, Faculty of Industrial Engineering and Management, TechnionOEIsrael Institute of Technology, Haifa  Haas School of Business, University of California and Information Computing Sciences Division, Lawrence Berkeley Laboratory,  
Note: Journal of Intelligent Information Systems,  c 1994 Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  
Email: avigal@ie.technion.ac.il  ieretzn@ie.technion.ac.il  segev@csr.lbl.gov  Editor:  
Date: 3, 185-204 (1994)  
Abstract: This paper presents a unified framework for representing highlyOEcomplex knowledge in a database as a new paradigm for handling large and complex information in an easy and efficient manner. The framework provides a database with the capabilities to support next generation databases for decision support systems through the use of derivation rules, temporal information, knowledge from multiple sources with different measures of quality and epistemic knowledge. The model integrates concepts from both the database and the artificial intelligence disciplines. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Abiteboul S.OE Update, </author> <title> The New Frontier, </title> <booktitle> Lecture Notes on Computer Science, </booktitle> <volume> 326, </volume> <pages> pp. </pages> <address> 1OE18, </address> <year> 1988. </year>
Reference-contexts: Unfortunately, the active part uses an imperative language, thus reasoning about the application's flow is not possible. Furthermore, the well documented problems of imperative programming (time consuming, difficult to verify etc.), <ref> [1] </ref> and [15], are still present in this model. An interesting work regarding performance issues is presented in [10]; it extends a technique for incremental recomputations of active relations [25] to handle temporal active relations. An example of a combination of several aspects of the data is given in ([14]).
Reference: 2. <editor> Ariav G.OE A Temporally Oriented Data Model, </editor> <booktitle> ACM Transactions on Database Systems, </booktitle> <volume> 11(4), </volume> <pages> pp. </pages> <address> 499OE527, </address> <month> Dec </month> <year> 1986. </year>
Reference-contexts: Most of the research in this area focused on the structural semantics, assuming that the update process is applied either in a procedural manner [37] or as part of the retrieval language. Some models (such as <ref> [2] </ref>; [28] and [36]) enforce a single value for each time point. As a result, a mechanism to handle retroactive and proactive updates is either disabled or applied in an unnatural manner.
Reference: 3. <editor> Bonoma T.V.OE Case Research in Marketing: </editor> <title> Opportunities, Problems and a Process, </title> <journal> Journal of Marketing Research, </journal> <volume> 22, </volume> <pages> pp. </pages> <address> 199OE208, </address> <year> 1985. </year>
Reference: 4. <author> Chandra R., Segev A., </author> <title> OE Managing Temporal Financial Data in Extensible Databases, </title> <booktitle> Proceedings of the 19th International Conference on Very Large Databases, </booktitle> <address> Dublin, Ireland, </address> <month> Aug </month> <year> 1993. </year>
Reference-contexts: The update is done by replacing the current value with a new one, HIGHLY-COMPLEX KNOWLEDGE IN A DATABASE 189 adding the old one to the history of the variable. Issues related to processing rules where the event component is a temporal calendric expression are discussed in <ref> [4] </ref> and [5]. The model presented in [37] describes a database supporting a planning system; it is based on the EER model in which the database components change states as a result of external events.
Reference: 5. <author> Chandra R., Segev A., </author> <title> Stonebraker M.OE Implementing Calendars and Temporal Rules in Next Generation Databases, </title> <booktitle> Proceedings of the IEEE Conference on Data Engineering, </booktitle> <address> Houston, Texas, </address> <month> February </month> <year> 1994. </year> <note> HIGHLY-COMPLEX KNOWLEDGE IN A DATABASE 203 </note>
Reference-contexts: The update is done by replacing the current value with a new one, HIGHLY-COMPLEX KNOWLEDGE IN A DATABASE 189 adding the old one to the history of the variable. Issues related to processing rules where the event component is a temporal calendric expression are discussed in [4] and <ref> [5] </ref>. The model presented in [37] describes a database supporting a planning system; it is based on the EER model in which the database components change states as a result of external events. Unfortunately, the active part uses an imperative language, thus reasoning about the application's flow is not possible.
Reference: 6. <author> Chankong V., </author> <title> Haimes Y.Y.OE Multiobjective Decision Making: Theory and Methodology, </title> <address> New York, N.Y.: </address> <publisher> Elsevier Science, </publisher> <year> 1983. </year>
Reference-contexts: The majority of research efforts on information quality has focused on providing quality indicators [17], data about data, from which the information quality can be derived. The decisionOEanalytic approach (e.g., [19]) and utility analysis under multiple objectives (e.g., <ref> [6] </ref>) describe solution approaches for specifying preferences and resolving multiple objectives. The preference structure of the user is specified using an hierarchy of objectives. Through decomposition of objectives the hierarchy is reduced to a single value. The decisionOEanalytic approach assumes the existence of continuous utility function.
Reference: 7. <author> Clifford J., Crocker A. </author> <title> OE The Historical Relational Data Model (HRDM) and Algebra Based on Lifespans, </title> <booktitle> Proc. International Conference on Data Engineering, </booktitle> <pages> pp. </pages> <address> 528OE537, </address> <month> Feb </month> <year> 1987. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: <ref> [7] </ref>; [23]; [13]; [31]; [27]; [34]; [26] and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated.
Reference: 8. <author> Cournot A. </author> <title> OE Researches into the Mathematical Principles of the Theory of Wealth (ed. </title> <editor> N. </editor> <publisher> Bacon), Macmillan, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: A motivating Example As a motivating example we present an application that requires the combination of both active and multiOEdimensional knowledge in a database. The case study is based on the Cournot game [35]; <ref> [8] </ref>: There are three manufacturers of instant coffee (Snowhite, LRR (Little Red Riding-hood) and Goldilox) that have to decide each month on the quantity to be produced for the following month.
Reference: 9. <author> Dayal U., Buchmann A.P., McCarthy D.R. </author> <title> OE Rules Are Objects Too: A Knowledge Model for an Active ObjectOEOriented Database Model, </title> <booktitle> Proc. 2nd Int'l Workshop on ObjectOEOriented Databases, </booktitle> <pages> pp. </pages> <address> 140OE149, </address> <month> Sep </month> <year> 1988. </year>
Reference-contexts: LRR is believed to refer to ff as a fact, while Goldilox is believed to assign ff a certainty value of 0.5. 1.2. Related work The active aspects of databases have been investigated in research such as <ref> [9] </ref>, [11], and [32]. Active databases extend the modelling capability of a database schema by adding the rule construct. A rule is a database element consisting of two major components: the trigger component and the action component.
Reference: 10. <author> Edara M.L., </author> <title> Gadia S.K.OE Updates and Incremental Recomputation of Active Relational Expressions in Temporal Databases, </title> <booktitle> Proceedings of the International Workshop on an Infrastructure for Temporal Database, </booktitle> <address> Arlington,TX, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: These operators are used to develop a proof theory, by which derived knowledge is maintained, based on epistemic knowledge. The combination of the temporal and active aspects has been investigated in [34]; [37]; <ref> [10] </ref> and [29]. The OSAM*/T presented in [34] is an objectOEbased temporal knowledge representation model which combines update rules with temporal characteristics, extending the object oriented model OSAM* [33]. Rules are used to capture temporal semantics other than the valid start and end times of a tuple. <p> Unfortunately, the active part uses an imperative language, thus reasoning about the application's flow is not possible. Furthermore, the well documented problems of imperative programming (time consuming, difficult to verify etc.), [1] and [15], are still present in this model. An interesting work regarding performance issues is presented in <ref> [10] </ref>; it extends a technique for incremental recomputations of active relations [25] to handle temporal active relations. An example of a combination of several aspects of the data is given in ([14]). In that paper data has spatial, temporal and belief aspects organized in a relational database.
Reference: 11. <author> Etzion O. </author> <title> OE PARDESOEA DataOEDriven Oriented Active Database Model, </title> <booktitle> SIGMOD RECORD, </booktitle> <volume> 22(1), </volume> <pages> pp. </pages> <address> 7OE14, </address> <month> Mar </month> <year> 1993. </year>
Reference-contexts: This extension enables to capture complex decision support systems in a more natural fashion using high level language and structure. The model presented in this paper is aimed to support the different elements discussed above, where each element is called a dimension. The PARDES model <ref> [11] </ref> that supports the first requirement (derivation rules), was chosen as a basis, while other requirements are extensions of this model. <p> Any of those changes can also be retroactive or proactive. The active property of the model is more general than the common active databases approach of EventOEConditionOEAction (ECA) [22] in that it allows a general definition of statements called invariants <ref> [11] </ref>. These statements enforce the database to maintain consistency at all times without the need to explicitly define the triggering events. <p> LRR is believed to refer to ff as a fact, while Goldilox is believed to assign ff a certainty value of 0.5. 1.2. Related work The active aspects of databases have been investigated in research such as [9], <ref> [11] </ref>, and [32]. Active databases extend the modelling capability of a database schema by adding the rule construct. A rule is a database element consisting of two major components: the trigger component and the action component. <p> The data model 2.1. The basic model This Section introduces briefly an active objectOEoriented database model that follows the ideas of the PARDES model <ref> [11] </ref> as a basis for the temporal extension. A database consists of a collection of objects. Similar objects are instances of the same class, while classes are organized in a generalization lattice. A class definition contains the specification of properties that are applicable to its instances, along with their types.
Reference: 12. <author> Etzion O., Gal A., </author> <title> Segev A.OE Rule and Transaction Processing in Temporal Active Databases, </title> <institution> Lawrence Berkeley Laboratory Technical Report ???, 1993. </institution>
Reference-contexts: The construction of a model supporting all these elements is not a trivial extension of existing models. This was demonstrated in <ref> [12] </ref>, where the combination of active and temporal database functionalities are discussed. 1.1. A motivating Example As a motivating example we present an application that requires the combination of both active and multiOEdimensional knowledge in a database. <p> Preference relations may be defined according to various criteria: the source of information, a confidence value that is associated with the information, temporal information etc. For example, a preference relation with respect to the temporal dimension, introduced in the context of active temporal databases <ref> [12] </ref>, is based on the assumption that a data item ff is preferred to a data item fi if it was decided at a later time. <p> In this section we describe the different dimensional variables: 194 GAL, ETZION AND SEGEV The Temporal Dimension: The fundamental assumption is that for each object, several time types [30] are required to model the desired functionality. A basic set of time types, as defined in <ref> [12] </ref> consists of: Transaction Time (t x )OE The commit time of the transaction which updates the variable state. Decision Time (t d ) OE The time in which the variable's value has been de cided in the database's domain of discourse. <p> An example of such a query language in the temporal active context is discussed in <ref> [12] </ref>. 3.1. MultiOEdimensional Filters A substantial amount of work has been done on the optimization of queries in databases. Alas, these optimizers assume the simple structure of the relational model, whereas optimizers for databases that support complex objects are still evolving [20]. <p> Extending the model to support adaptable extension, by eliminating some di mensions and defining new ones (such as space). 2. Devising a complete query language and inference mechanism using the data and the dimensional variable. 3. Extending the active temporal database update algorithm <ref> [12] </ref> to support multiOEdimensional update. 4. Dealing with performance issues. This includes a variety of optimization problems, such as: storage management, detecting possible cases of incremental updates, using flexible transaction protocol to allow asynchronous subtransactions and query optimization based on the observations given in Section 3.2.
Reference: 13. <institution> Gadia S.K.OE The Role of Temporal Elements in Temporal Databases, Data Engineering Bulletin, </institution> <month> 7, </month> <pages> pp. </pages> <address> 197OE203, </address> <year> 1988. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: [7]; [23]; <ref> [13] </ref>; [31]; [27]; [34]; [26] and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated. <p> Valid Time (t v ) OE The time points in which the decision maker believes that this value reflects the object's value in the real world. t v is expressed by a temporal element <ref> [13] </ref> which is a timeOEpoint or an interval [t s , t e ] or a collection of intervals and timeOEpoints. If t v is an interval, it is believed that the object value is constant in this interval. This case has been classified as stepwise change [27].
Reference: 14. <author> Gadia S.K. </author> <title> OE Parametric Databases: Seamless Integration of Spatial, Temporal, Belief and Ordinary Data , SIGMOD RECORD, </title> <booktitle> 22(1), </booktitle> <pages> pp. </pages> <address> 15OE20, </address> <month> Mar </month> <year> 1993. </year>
Reference: 15. <author> Gal A., </author> <title> Etzion O.OE Updating Databases with an Invariant Language, </title> <institution> TechnionOEIsrael Institute of Technology, </institution> <type> Technical Report ISEOETROE92OE4, </type> <month> Feb </month> <year> 1992. </year>
Reference-contexts: Unfortunately, the active part uses an imperative language, thus reasoning about the application's flow is not possible. Furthermore, the well documented problems of imperative programming (time consuming, difficult to verify etc.), [1] and <ref> [15] </ref>, are still present in this model. An interesting work regarding performance issues is presented in [10]; it extends a technique for incremental recomputations of active relations [25] to handle temporal active relations. An example of a combination of several aspects of the data is given in ([14]).
Reference: 16. <author> Gardenfors P., </author> <title> Makinson D.OE Revisions of Knowledge Systems Using Epistemic Entrenchment, </title> <booktitle> Proc. 2nd Conference on Theoretical Reasoning About Knowledge, </booktitle> <year> 1988. </year>
Reference: 17. <author> Jang Y., Kon H.B., </author> <title> Wang R.Y.OE A KnowledgeOEBased Approach to Assisting in Data Quality Judgment, </title> <booktitle> Proc. </booktitle> <volume> WITS '92, </volume> <pages> pp. </pages> <month> 179OE188 , Sep </month> <year> 1992. </year>
Reference-contexts: Information quality has been discussed in the context of AI, motivated by the fact that in the absence of information quality, decisions are taken based on an inaccurate or an outOEofOEdate data ([3]; [18] etc.). The majority of research efforts on information quality has focused on providing quality indicators <ref> [17] </ref>, data about data, from which the information quality can be derived. The decisionOEanalytic approach (e.g., [19]) and utility analysis under multiple objectives (e.g., [6]) describe solution approaches for specifying preferences and resolving multiple objectives. The preference structure of the user is specified using an hierarchy of objectives. <p> The preference structure of the user is specified using an hierarchy of objectives. Through decomposition of objectives the hierarchy is reduced to a single value. The decisionOEanalytic approach assumes the existence of continuous utility function. Later research <ref> [17] </ref> lessens this requirement to local dominance relationships between quality parameters. Reasoning about the world is contingent on the reasoner's knowledge known to those who process the reasoning. This knowledge is referred to as epistemic knowledge.
Reference: 18. <author> Johnson J.R. </author> <title> OE Hallmark's Formula for Quality, </title> <journal> Datamation, </journal> <pages> pp. </pages> <address> 119OE122, </address> <year> 1990. </year>
Reference-contexts: Information quality has been discussed in the context of AI, motivated by the fact that in the absence of information quality, decisions are taken based on an inaccurate or an outOEofOEdate data ([3]; <ref> [18] </ref> etc.). The majority of research efforts on information quality has focused on providing quality indicators [17], data about data, from which the information quality can be derived.
Reference: 19. <author> Keeney R.L., </author> <title> Raiffa H.OE Decision with Multiple Objectives: Preferences and Value Tradeoff, </title> <address> New York: </address> <publisher> John Wiley & Son, </publisher> <year> 1976. </year>
Reference-contexts: The majority of research efforts on information quality has focused on providing quality indicators [17], data about data, from which the information quality can be derived. The decisionOEanalytic approach (e.g., <ref> [19] </ref>) and utility analysis under multiple objectives (e.g., [6]) describe solution approaches for specifying preferences and resolving multiple objectives. The preference structure of the user is specified using an hierarchy of objectives. Through decomposition of objectives the hierarchy is reduced to a single value.
Reference: 20. <author> Lanzelotte R.S.G., Valduriez P., </author> <title> Zait M.OE Optimizing of ObjectOEOriented Recursive Queries Using CostOEControlled Strategies, </title> <booktitle> Proc ACM SIGMOD 1992, </booktitle> <pages> pp. </pages> <address> 256OE265, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: MultiOEdimensional Filters A substantial amount of work has been done on the optimization of queries in databases. Alas, these optimizers assume the simple structure of the relational model, whereas optimizers for databases that support complex objects are still evolving <ref> [20] </ref>. Since our model employs a very complex structure, our goal is to simplify the retrieval mechanism in order to ease the task of optimizing queries. In this section we shaw a retrieval mechanism that is based on a single retrieval primitive, called filter.
Reference: 21. <editor> Levesque H.J.OE All I Know: </editor> <title> A Study in Autoepistemic Logic, </title> <institution> University of Toronto, </institution> <type> Technical Report KRROETROE89OE3, </type> <month> Jan </month> <year> 1989. </year>
Reference-contexts: This knowledge is referred to as epistemic knowledge. Research of the ability to identify the epistemic knowledge and to maintain conclusions based on this knowledge, are mostly based on different versions of nonOEmonotonic logic ([16]; [24]; <ref> [21] </ref> etc.). For example, in [21], two modal operators are defined, B and O, where Bff is read as "ff is believed" and Off is read as "ff is all that is believed". <p> This knowledge is referred to as epistemic knowledge. Research of the ability to identify the epistemic knowledge and to maintain conclusions based on this knowledge, are mostly based on different versions of nonOEmonotonic logic ([16]; [24]; <ref> [21] </ref> etc.). For example, in [21], two modal operators are defined, B and O, where Bff is read as "ff is believed" and Off is read as "ff is all that is believed". These operators are used to develop a proof theory, by which derived knowledge is maintained, based on epistemic knowledge.
Reference: 22. <author> McCarthy D., </author> <title> Dayal U.OE The Architecture of an Active Data Base Management System, </title> <booktitle> Proc. ACM SIGMOD 89, </booktitle> <pages> pp. </pages> <month> 215OE224 , June </month> <year> 1989. </year>
Reference-contexts: We assume an appendOEonly database where changes can occur to data, metaOEdata, rules and constraints. Any of those changes can also be retroactive or proactive. The active property of the model is more general than the common active databases approach of EventOEConditionOEAction (ECA) <ref> [22] </ref> in that it allows a general definition of statements called invariants [11]. These statements enforce the database to maintain consistency at all times without the need to explicitly define the triggering events. <p> A rule is a database element consisting of two major components: the trigger component and the action component. The trigger component 188 GAL, ETZION AND SEGEV defines the prerequisites for the execution of the rule's operational part. Most of the current active database research follow the EOECOEA (EventOEConditionOEAction) architecture <ref> [22] </ref> in which the triggering component consists of two parts: event detection and condition evaluation. The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program.
Reference: 23. <author> Navathe S.B., </author> <title> Ahmed R.OE A Temporal Relational Model and Query Language, </title> <journal> Information Sciences, </journal> <volume> 49, </volume> <pages> pp. </pages> <address> 147OE175, </address> <year> 1989. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: [7]; <ref> [23] </ref>; [13]; [31]; [27]; [34]; [26] and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated.
Reference: 24. <editor> Poole D.OE A Logical Framework for Default Reasoning, </editor> <booktitle> Artificial Intelligence, </booktitle> <volume> Vol. 36, </volume> <year> 1988. </year>
Reference-contexts: This knowledge is referred to as epistemic knowledge. Research of the ability to identify the epistemic knowledge and to maintain conclusions based on this knowledge, are mostly based on different versions of nonOEmonotonic logic ([16]; <ref> [24] </ref>; [21] etc.). For example, in [21], two modal operators are defined, B and O, where Bff is read as "ff is believed" and Off is read as "ff is all that is believed".
Reference: 25. <author> Qian X., </author> <title> Wiederhold G.OE Incremental Computations of Active Relational Expressions, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 3(3), </volume> <pages> pp. </pages> <address> 337OE341, </address> <year> 1991. </year>
Reference-contexts: Furthermore, the well documented problems of imperative programming (time consuming, difficult to verify etc.), [1] and [15], are still present in this model. An interesting work regarding performance issues is presented in [10]; it extends a technique for incremental recomputations of active relations <ref> [25] </ref> to handle temporal active relations. An example of a combination of several aspects of the data is given in ([14]). In that paper data has spatial, temporal and belief aspects organized in a relational database.
Reference: 26. <author> Rose E., </author> <title> Segev A.OE TOODMOEa Temporal, ObjectOEOriented Data Model with Temporal Constraints, </title> <booktitle> Proc. International Conference on the EntityOERelationship Approach, </booktitle> <address> San Mateo, California, </address> <pages> pp. </pages> <address> 205OE229, </address> <year> 1991. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: [7]; [23]; [13]; [31]; [27]; [34]; <ref> [26] </ref> and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated.
Reference: 27. <author> Segev A., </author> <title> Shoshani A.OE Logical Modeling of Temporal Data, </title> <booktitle> Proc. ACM SIGMOD 87, </booktitle> <pages> pp. </pages> <address> 454OE466, </address> <month> May </month> <year> 1987. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: [7]; [23]; [13]; [31]; <ref> [27] </ref>; [34]; [26] and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated. <p> If t v is an interval, it is believed that the object value is constant in this interval. This case has been classified as stepwise change <ref> [27] </ref>. Other possible cases are discrete events change where the value is defined only in given timeOEpoints and continuous change where the value changes continuously according to some function. In this paper we consider the stepwise case only, while the other cases are natural extension of this discussion.
Reference: 28. <author> Shoshani A., </author> <title> Kawagoe K.OE Temporal Data Management, </title> <booktitle> Proc VLDB 86, </booktitle> <pages> pp. </pages> <address> 79OE88, </address> <month> Aug </month> <year> 1986. </year>
Reference-contexts: Most of the research in this area focused on the structural semantics, assuming that the update process is applied either in a procedural manner [37] or as part of the retrieval language. Some models (such as [2]; <ref> [28] </ref> and [36]) enforce a single value for each time point. As a result, a mechanism to handle retroactive and proactive updates is either disabled or applied in an unnatural manner.
Reference: 29. <author> Sistla A.P., </author> <title> Wolfson O.OE Specification and Management of Temporal Triggers in Active Databases, </title> <type> Technical Report, </type> <institution> Univ of Il at Chicago, </institution> <year> 1993. </year>
Reference-contexts: These operators are used to develop a proof theory, by which derived knowledge is maintained, based on epistemic knowledge. The combination of the temporal and active aspects has been investigated in [34]; [37]; [10] and <ref> [29] </ref>. The OSAM*/T presented in [34] is an objectOEbased temporal knowledge representation model which combines update rules with temporal characteristics, extending the object oriented model OSAM* [33]. Rules are used to capture temporal semantics other than the valid start and end times of a tuple. <p> Corrections result in overwrites or deletions so in this model information may be lost. The combination employs restricted update protocol, with no proactive and retroactive updates. Another model which do not allow proactive and retroactive updates is the model presented in <ref> [29] </ref>, which combines temporal triggers in a database. The update is done by replacing the current value with a new one, HIGHLY-COMPLEX KNOWLEDGE IN A DATABASE 189 adding the old one to the history of the variable.
Reference: 30. <author> Snodgrass R., </author> <title> Ahn I.OE Temporal Databases, </title> <booktitle> IEEE Computer 19, </booktitle> <pages> pp. </pages> <address> 35OE42, </address> <month> Sep </month> <year> 1986. </year>
Reference-contexts: In this section we describe the different dimensional variables: 194 GAL, ETZION AND SEGEV The Temporal Dimension: The fundamental assumption is that for each object, several time types <ref> [30] </ref> are required to model the desired functionality. A basic set of time types, as defined in [12] consists of: Transaction Time (t x )OE The commit time of the transaction which updates the variable state.
Reference: 31. <editor> Snodgrass R.OE The Temporal Query Language TQUEL, </editor> <booktitle> ACM Transactions on Database Systems, </booktitle> <pages> pp. </pages> <month> 247OE298 , June </month> <year> 1987. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: [7]; [23]; [13]; <ref> [31] </ref>; [27]; [34]; [26] and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated.
Reference: 32. <author> Stonebraker M., </author> <title> Kemnits G.OE The POSTGRES NextOEGeneration Database Management System, </title> <journal> CACM, </journal> <volume> 34(10), </volume> <pages> pp. </pages> <address> 78OE93, </address> <month> Oct </month> <year> 1991. </year> <note> 204 GAL, ETZION AND SEGEV </note>
Reference-contexts: LRR is believed to refer to ff as a fact, while Goldilox is believed to assign ff a certainty value of 0.5. 1.2. Related work The active aspects of databases have been investigated in research such as [9], [11], and <ref> [32] </ref>. Active databases extend the modelling capability of a database schema by adding the rule construct. A rule is a database element consisting of two major components: the trigger component and the action component.
Reference: 33. <author> Su S.Y.W, Lam H., Krishnamurthy V. </author> <title> OE An ObjectOEOriented Semantic Association Model (OSAM*), </title> <editor> in: S.T. Kumera et al. (eds)OEAI: </editor> <booktitle> Manufacturing Theory and Practice, </booktitle> <address> Chap. 17, Norcross, GA, </address> <year> 1989. </year>
Reference-contexts: The combination of the temporal and active aspects has been investigated in [34]; [37]; [10] and [29]. The OSAM*/T presented in [34] is an objectOEbased temporal knowledge representation model which combines update rules with temporal characteristics, extending the object oriented model OSAM* <ref> [33] </ref>. Rules are used to capture temporal semantics other than the valid start and end times of a tuple. Corrections result in overwrites or deletions so in this model information may be lost. The combination employs restricted update protocol, with no proactive and retroactive updates.
Reference: 34. <author> Su S.Y.W., </author> <title> Chen H.M.OE A Temporal Knowledge Representation Model OSAM*/T and its Query Language OQL/T, </title> <booktitle> Proc VLDB, </booktitle> <year> 1991. </year>
Reference-contexts: The action component contains the operational part of the rule applied in most contemporary active database models as a database operation or a user defined program. Temporal semantics was dealt with in works on temporal databases, such as: [7]; [23]; [13]; [31]; [27]; <ref> [34] </ref>; [26] and many others, yet the capabilities of the model with the presence of retroactive and proactive updates have not been investigated. <p> These operators are used to develop a proof theory, by which derived knowledge is maintained, based on epistemic knowledge. The combination of the temporal and active aspects has been investigated in <ref> [34] </ref>; [37]; [10] and [29]. The OSAM*/T presented in [34] is an objectOEbased temporal knowledge representation model which combines update rules with temporal characteristics, extending the object oriented model OSAM* [33]. Rules are used to capture temporal semantics other than the valid start and end times of a tuple. <p> These operators are used to develop a proof theory, by which derived knowledge is maintained, based on epistemic knowledge. The combination of the temporal and active aspects has been investigated in <ref> [34] </ref>; [37]; [10] and [29]. The OSAM*/T presented in [34] is an objectOEbased temporal knowledge representation model which combines update rules with temporal characteristics, extending the object oriented model OSAM* [33]. Rules are used to capture temporal semantics other than the valid start and end times of a tuple.
Reference: 35. <institution> Tirole J.OE The Theory of Industrial Organization, the MIT press, </institution> <year> 1989. </year>
Reference-contexts: A motivating Example As a motivating example we present an application that requires the combination of both active and multiOEdimensional knowledge in a database. The case study is based on the Cournot game <ref> [35] </ref>; [8]: There are three manufacturers of instant coffee (Snowhite, LRR (Little Red Riding-hood) and Goldilox) that have to decide each month on the quantity to be produced for the following month.
Reference: 36. <author> Wiederhold G., Jajodia S., Litwin W. </author> <title> OE Dealing with Granularity of Time in Temporal Databases, </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> 498, </volume> <editor> (R. Anderson et al. eds.), </editor> <booktitle> SpringerOEVerlag, </booktitle> <pages> pp. </pages> <address> 124OE140, </address> <year> 1991. </year>
Reference-contexts: Most of the research in this area focused on the structural semantics, assuming that the update process is applied either in a procedural manner [37] or as part of the retrieval language. Some models (such as [2]; [28] and <ref> [36] </ref>) enforce a single value for each time point. As a result, a mechanism to handle retroactive and proactive updates is either disabled or applied in an unnatural manner.
Reference: 37. <author> Wuu G., </author> <title> Dayal G.U.OE A Uniform Model for Temporal ObjectOEOriented Databases, </title> <booktitle> Proc. International Conference on Data Engineering, </booktitle> <year> 1992. </year>
Reference-contexts: Most of the research in this area focused on the structural semantics, assuming that the update process is applied either in a procedural manner <ref> [37] </ref> or as part of the retrieval language. Some models (such as [2]; [28] and [36]) enforce a single value for each time point. As a result, a mechanism to handle retroactive and proactive updates is either disabled or applied in an unnatural manner. <p> These operators are used to develop a proof theory, by which derived knowledge is maintained, based on epistemic knowledge. The combination of the temporal and active aspects has been investigated in [34]; <ref> [37] </ref>; [10] and [29]. The OSAM*/T presented in [34] is an objectOEbased temporal knowledge representation model which combines update rules with temporal characteristics, extending the object oriented model OSAM* [33]. Rules are used to capture temporal semantics other than the valid start and end times of a tuple. <p> Issues related to processing rules where the event component is a temporal calendric expression are discussed in [4] and [5]. The model presented in <ref> [37] </ref> describes a database supporting a planning system; it is based on the EER model in which the database components change states as a result of external events. Unfortunately, the active part uses an imperative language, thus reasoning about the application's flow is not possible.
References-found: 37

