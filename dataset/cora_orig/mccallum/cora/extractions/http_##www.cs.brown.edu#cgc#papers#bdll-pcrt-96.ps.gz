URL: http://www.cs.brown.edu/cgc/papers/bdll-pcrt-96.ps.gz
Refering-URL: http://www.cs.brown.edu/cgc/cgc-papers/cgc-papers.html
Root-URL: http://www.cs.brown.edu
Title: Representable Trees  
Author: Prosenjit Bose Giuseppe Di Battista William Lenhart Giuseppe Liotta 
Date: 1996  
Note: Proximity Constraints and  
Address: Via della Vasca Navale, 84 00146 Roma, Italy.  Via della Vasca Navale, 84 00146 Roma, Italy.  Williamstown, MA 01267, USA.  
Affiliation: Universit a degli Studi di Roma Tre Dipartimento di Discipline Scientifiche  Department of Computer Science, University of British Columbia Vancouver, British Columbia,  Universita di Roma Tre,  Department of Computer Science, Williams College  Center for Geometric Computing Department of Computer Science, Brown University  
Pubnum: RT-INF-9-96 Giugno  V6T 1Z4.  
Abstract: 115 Waterman Street, Providence, RI 02912-1910, USA. An extended abstract of this paper was presented at the DIMACS International Workshop on Graph Drawing, GD94, New Jersey, USA, October 1994. Research supported in part by NSERC and FCAR, by the National Science Foundation under grant CCCR-9423847, by the U.S. Army Research Office under grant 34990-MA-MUR, by the "Progetto Ambienti di Supporto all Progettazione di sistemi Informativi" and Grant 94.23.CT07 of the Italian 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. A. Bondy and U. S. R. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> Elsevier Science, </publisher> <address> New York, New York, </address> <year> 1976. </year>
Reference-contexts: R [x; y; fi] is the intersection of the two corresponding closed disks. 3. R (x; y; 1) is the open infinite strip perpendicular to the line segment xy and R <ref> [x; y; 1] </ref> is the closed infinite strip perpendicular to the line segment xy. 4. Finally, R (x; y; 0) is the empty set and R [x; y; 0] is the line segment connecting x and y. <p> Finally, R (x; y; 0) is the empty set and R [x; y; 0] is the line segment connecting x and y. In Figure 1, R (x; z; 2), R <ref> [u; y; 1] </ref>, and R [w; v; 1] are examples of the relative neighborhood region, Gabriel region, and closed strip region, respectively. 1.1 Applications The problem of testing whether a tree has a proximity drawing and, if so, of constructing such a drawing has applications in the area of graph drawing. <p> Finally, R (x; y; 0) is the empty set and R [x; y; 0] is the line segment connecting x and y. In Figure 1, R (x; z; 2), R [u; y; 1], and R <ref> [w; v; 1] </ref> are examples of the relative neighborhood region, Gabriel region, and closed strip region, respectively. 1.1 Applications The problem of testing whether a tree has a proximity drawing and, if so, of constructing such a drawing has applications in the area of graph drawing. <p> 1:45 &lt; fi &lt; 3:23. * We discuss the relationships between the proximity drawings presented in this paper, Delaunay triangulations, and minimum spanning trees and exploit these relation ships in our proof techniques. * Furthermore, we show that the class of graphs that can be drawn with proximity region R <ref> [x; y; 1] </ref> consists of all binary forests. <p> Finally, Section 7 discusses conclusions and open problems. 2 Preliminaries We assume familiarity with the basic terminology of graph theory and computational geometry (see also <ref> [1] </ref>, [20]). Let T be a tree, v a vertex of T , and x a neighbor of v; T x (v) denotes the connected component of T fvg which contains x. <p> Property 3.2 For fi &gt; 1, G (P; fi) and G [P; fi] are planar; also, G <ref> [P; 1] </ref> is planar, but G (P; 1) is not necessarily planar. For fi &lt; 1, G (P; fi) and G [P; fi] are not necessarily planar. Proof: The first part easily follows from the planarity of G [P; 1] that is proved in [18] and from Property 3.1. <p> 1, G (P; fi) and G [P; fi] are planar; also, G <ref> [P; 1] </ref> is planar, but G (P; 1) is not necessarily planar. For fi &lt; 1, G (P; fi) and G [P; fi] are not necessarily planar. Proof: The first part easily follows from the planarity of G [P; 1] that is proved in [18] and from Property 3.1. The second part is proved as follows. Suppose P consists of exactly six points and that they are placed at the vertices of a regular hexagon (see Figure 6.a). <p> Also, G <ref> [P; 1] </ref> is a subgraph of DT (P ). Proof: The fact that G [P; 1] is a subgraph of DT (P ) is proved in [18]. <p> Also, G <ref> [P; 1] </ref> is a subgraph of DT (P ). Proof: The fact that G [P; 1] is a subgraph of DT (P ) is proved in [18]. The rest follows from Property 3.1. 2 From Property 3.2 and from the planarity of DT (P ) it follows that for fi &lt; 1 the above property, in general, does not hold. <p> Clearly d (y; u) &lt; d (x; v), so the drawing is not a minimum spanning tree. 2 The relationship between G <ref> [P; 1] </ref> and M ST (P ) is discussed in Section 6. Furthermore, the following property is proved in [15]. Lemma 3.3 [15] For each edge e 2 G (P; 1), there exists a minimum spanning tree of P containing e. <p> Property 4.2 There exists a disk D 2 centered at z such that, for every point p 2 D 2 and every fu; vg P fzg, if z 62 R <ref> [u; v; 1] </ref>, then p 62 R [u; v; 1]. <p> Property 4.2 There exists a disk D 2 centered at z such that, for every point p 2 D 2 and every fu; vg P fzg, if z 62 R <ref> [u; v; 1] </ref>, then p 62 R [u; v; 1]. <p> To guarantee that the edges f (x; z); (y; z)g exist, it suffices to ensure that the closed strips R <ref> [x; z; 1] </ref> and R [y; z; 1] contain no point of P other than z. To guarantee that the other three edges mentioned do not exist, choose x and y so that 6 xzy &gt; maxf=2; ff (fi 0 )g, 6 xzz 0 2=3, and 6 yzz 0 2=3. <p> To guarantee that the edges f (x; z); (y; z)g exist, it suffices to ensure that the closed strips R [x; z; 1] and R <ref> [y; z; 1] </ref> contain no point of P other than z. To guarantee that the other three edges mentioned do not exist, choose x and y so that 6 xzy &gt; maxf=2; ff (fi 0 )g, 6 xzz 0 2=3, and 6 yzz 0 2=3. <p> Now x and y can be positioned along r 1 and r 2 so that the strips R <ref> [x; z; 1] </ref> and R [y; z; 1] contain no point of P other than z. 2 Theorem 4.2 Class T 3 is (both open and closed) fi-drawable for all fi such that p 2 &lt; fi 1. <p> Now x and y can be positioned along r 1 and r 2 so that the strips R [x; z; 1] and R <ref> [y; z; 1] </ref> contain no point of P other than z. 2 Theorem 4.2 Class T 3 is (both open and closed) fi-drawable for all fi such that p 2 &lt; fi 1. <p> Proof: First observe that G [P; p 2 ] is a subgraph of DT (P ) since G [P; p 2 ] = G <ref> [P; 1] </ref> by Lemma 3.1 and since G [P; 1] DT (P ) by Property 3.4. Thus (a; b) and (b; c) are in DT (P ), so we need only show that DT (P ) also contains (a; c). <p> Proof: First observe that G [P; p 2 ] is a subgraph of DT (P ) since G [P; p 2 ] = G <ref> [P; 1] </ref> by Lemma 3.1 and since G [P; 1] DT (P ) by Property 3.4. Thus (a; b) and (b; c) are in DT (P ), so we need only show that DT (P ) also contains (a; c). <p> There exist angles ~ 1 &gt; 0, ~ 2 &gt; 0, vectors d 1 , d 2 , and radii 1 &gt; 0, 2 &gt; 0 such that P separates S 1 = S <ref> [p 1 ; ~ 1 ; d 1 ; 1 ] </ref> and S 2 = S [p 2 ; ~ 2 ; d 2 ; 2 ]. Proof: See Figure 12. <p> Similarly, denote by x 1 and y 1 the points at which s 2 intersects r 1 and l 1 . Choose i such that sector S i = S <ref> [p i ; ~ 1 ; d 1 ; 1 ] </ref> is inside 4p i x i y i . <p> Lemma 3.1, along with the results on T (1) of [2], imply the truth statements S (4) and S [4]. Statement S [3] is just Corollary 5.1. Theorem 4.1 and Theorem 3.3 directly imply statements S (3) down to S <ref> [1] </ref>. <p> Finally, statement S (1) can be proved by observing that every graph which is (0)-drawable is a clique, and the only trees which are cliques are the trees on 1 and 2 vertices. 2 6 A Characterization of G <ref> [P; 1] </ref> We begin by describing a relation between G [P; 1] and minimum spanning trees of P . 25 Lemma 6.1 For each finite set P of points in the plane, G [P; 1] is a subgraph of the intersection of all minimum spanning trees of P . <p> Finally, statement S (1) can be proved by observing that every graph which is (0)-drawable is a clique, and the only trees which are cliques are the trees on 1 and 2 vertices. 2 6 A Characterization of G <ref> [P; 1] </ref> We begin by describing a relation between G [P; 1] and minimum spanning trees of P . 25 Lemma 6.1 For each finite set P of points in the plane, G [P; 1] is a subgraph of the intersection of all minimum spanning trees of P . Thus G [P; 1] is a forest. <p> which are cliques are the trees on 1 and 2 vertices. 2 6 A Characterization of G <ref> [P; 1] </ref> We begin by describing a relation between G [P; 1] and minimum spanning trees of P . 25 Lemma 6.1 For each finite set P of points in the plane, G [P; 1] is a subgraph of the intersection of all minimum spanning trees of P . Thus G [P; 1] is a forest. Proof: Consider an edge (x; y) of G [P; 1]. Suppose there exists a minimum spanning tree T of G [P; 1] not containing (x; y). <p> 1] We begin by describing a relation between G <ref> [P; 1] </ref> and minimum spanning trees of P . 25 Lemma 6.1 For each finite set P of points in the plane, G [P; 1] is a subgraph of the intersection of all minimum spanning trees of P . Thus G [P; 1] is a forest. Proof: Consider an edge (x; y) of G [P; 1]. Suppose there exists a minimum spanning tree T of G [P; 1] not containing (x; y). Consider the path in T between x and y. <p> spanning trees of P . 25 Lemma 6.1 For each finite set P of points in the plane, G <ref> [P; 1] </ref> is a subgraph of the intersection of all minimum spanning trees of P . Thus G [P; 1] is a forest. Proof: Consider an edge (x; y) of G [P; 1]. Suppose there exists a minimum spanning tree T of G [P; 1] not containing (x; y). Consider the path in T between x and y. <p> P of points in the plane, G <ref> [P; 1] </ref> is a subgraph of the intersection of all minimum spanning trees of P . Thus G [P; 1] is a forest. Proof: Consider an edge (x; y) of G [P; 1]. Suppose there exists a minimum spanning tree T of G [P; 1] not containing (x; y). Consider the path in T between x and y. Some edge (u; v) of the path must cross R [x; y; 1], but neither u nor v are in R [x; y; 1]. <p> Proof: Consider an edge (x; y) of G [P; 1]. Suppose there exists a minimum spanning tree T of G [P; 1] not containing (x; y). Consider the path in T between x and y. Some edge (u; v) of the path must cross R <ref> [x; y; 1] </ref>, but neither u nor v are in R [x; y; 1]. This implies that (u; v) is longer than (x; y), a contradiction. 2 An interesting consequence of Lemma 6.1 is the following: Corollary 6.1 For every P , G [P; 1] is a stable drawing. <p> Suppose there exists a minimum spanning tree T of G [P; 1] not containing (x; y). Consider the path in T between x and y. Some edge (u; v) of the path must cross R <ref> [x; y; 1] </ref>, but neither u nor v are in R [x; y; 1]. This implies that (u; v) is longer than (x; y), a contradiction. 2 An interesting consequence of Lemma 6.1 is the following: Corollary 6.1 For every P , G [P; 1] is a stable drawing. <p> This implies that (u; v) is longer than (x; y), a contradiction. 2 An interesting consequence of Lemma 6.1 is the following: Corollary 6.1 For every P , G <ref> [P; 1] </ref> is a stable drawing. Proof: Consider a non-edge (u; v) of an [1]-drawing of a tree T . <p> Proof: Consider a non-edge (u; v) of an [1]-drawing of a tree T . Every edge on the path between u and v in T is shorter than d (u; v), thus some point on the path must be in R <ref> [u; v; 1] </ref>. 2 Theorem 6.1 A graph G is [1]-drawable if and only if every connected component of G is in T 3 and G is not one of the following graphs: two non-adjacent vertices, a vertex and a non-adjacent edge, or a pair of non-adjacent edges. <p> Proof: By Theorem 3.3, G can have no vertices of degree greater than three. Also, it can easily be checked that none of the three graphs mentioned in the theorem are <ref> [1] </ref>- drawable. All that remains is to show that any other forest each of whose components is in T 3 is [1]-drawable. We do this by describing two constructions for creating [1]-drawings: the first will be used when the forest has at least three components, the second when the forest has <p> If there is only one component, the construction of Lemma 4.1 can be used. Suppose that T has at least k 3 components. Choose a set C of k points such that for each pair x; y 2 C, R <ref> [x; y; 1] </ref> contains some point z 2 C fx; yg in its interior (for example, one can suitably choose C as a subset of the vertices of a triangular grid). <p> C, one can define a disk D p having center p and with the following property: For each pair of points x; y 2 C, there exists a z 2 C fx; yg such that for every x 0 2 D x and y 0 2 D y , R <ref> [x 0 ; y 0 ; 1] </ref> contains D z . Using the construction of Lemma 4.1, the components of T can be drawn one in each of the disks D and there will be no edges between components. <p> Let D = D 1 " D 2 . If there exists a non-neighbor v of z such that v is not collinear with the edge (z; z 0 ), then there exists a disk D 0 D such that no point of D 0 is in R <ref> [z; z 0 ; 1] </ref> and for every point p 2 D 0 , R [p; z; 1] contains v (see Figure 14.b). It is now possible to draw T 00 inside D 0 , obtaining a [1]-drawing of T . <p> non-neighbor v of z such that v is not collinear with the edge (z; z 0 ), then there exists a disk D 0 D such that no point of D 0 is in R [z; z 0 ; 1] and for every point p 2 D 0 , R <ref> [p; z; 1] </ref> contains v (see Figure 14.b). It is now possible to draw T 00 inside D 0 , obtaining a [1]-drawing of T .
Reference: [2] <author> P. Bose, W. Lenhart, and G. Liotta. </author> <title> Characterizing Proximity Trees. </title> <journal> Algorithmica, </journal> <note> Special Issue on Graph Drawing (to appear). Also available as TR-SOCS 93.9, </note> <institution> School of Computer Science, McGill University, </institution> <year> 1993. </year>
Reference-contexts: A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes [11, 12, 13, 14, 23]. Increasing attention has been given recently to proximity drawings <ref> [2, 16, 10, 19, 9] </ref>; for a survey on proximity drawings the reader is referred to [5]. Loosely speaking, a proximity drawing is one in which adjacent vertices are drawn relatively close together and non-adjacent vertices are drawn relatively far apart. <p> The design of algorithms for straight-line drawings of trees is a field of growing interest given the ubiquity of trees as models. For a small sample of papers that show algorithms for straight-line drawings of trees see <ref> [8, 7, 2] </ref>. Proximity drawings of trees have several interesting characteristics for visualization: 1. Neighbors of a given vertex cluster around that vertex; 2. The angles between consecutive edges are "large" (each angle is at least =3); and 3. <p> We denote with T k the set of all finite trees of maximum vertex degree at most k. Class T is defined in Section 5 and class T are the so-called "forbidden" graphs defined in <ref> [2] </ref>. The results presented in this paper are listed below. Table 1 summarizes the characterization results and compares them with previous results, showing how the set of drawable trees changes as fi changes. Columns of the table labelled "new" describe results of this paper; Columns labelled "previous" describe known results. <p> Clearly, G (P; 1) is a K 3;3 ; from Property 3.1 the statement follows. 2 Property 3.3 For fi &lt; 2, G (P; fi) and G [P; fi] are connected. Also, G (P; 2) is connected, but G <ref> [P; 2] </ref> is not necessarily connected. For fi &gt; 2, G (P; fi) and G [P; fi] are not necessarily connected. Proof: The first part easily follows from the connectivity of G (P; 2) that is proved in [22] and from Property 3.1. The second part is proved as follows. <p> The second part is proved as follows. Suppose P consists of six points placed at the vertices of a regular hexagon plus a seventh point at the center 11 of the hexagon (see Figure 6.b). Clearly, G <ref> [P; 2] </ref> is disconnected; from Property 3.1 the statement follows. 2 The following lemma deals with the fi-drawability of trees. It gives a tool to extend the result on the fi-drawability of a tree for a given value of fi to infinitely many other values of fi. <p> Lemma 3.2 and Theorem 3.1 generalize to infinitely many values of fi similar results that have been given in <ref> [2] </ref> for fi = 1. Since the proofs are based on an analogous reasoning as in [2], we only briefly sketch them. Lemma 3.2 Let 0 fi 1 and let (u; v) be an edge of DT (P ). <p> Lemma 3.2 and Theorem 3.1 generalize to infinitely many values of fi similar results that have been given in <ref> [2] </ref> for fi = 1. Since the proofs are based on an analogous reasoning as in [2], we only briefly sketch them. Lemma 3.2 Let 0 fi 1 and let (u; v) be an edge of DT (P ). Edge (u; v) 2 G [P; fi] if and only if for each triangle 4uxv in DT (P ), 6 uxv &lt; ff (fi). <p> M ST (P ) G (P; fi) and M ST (P ) G [P; fi] for 0 fi &lt; 2. Also M ST (P ) G (P; 2). 2. There exists a set P such that for all fi such that 2 &lt; fi &lt; 1, G <ref> [P; 2] </ref> = G [P; fi] = G (P; fi) = G (P; 1) is a tree but is not M ST (P ). Proof: The first part of Statement 1 is a consequence of Property 3.1; the second part is proved in [22]. <p> To prove the last statement, consider the tree T of Figure 9.b consisting of two adjacent vertices of degree 4. The characterization of Gabriel trees from <ref> [2] </ref> shows that T is not [1]-drawable. Therefore, by Lemma 3.1, T has no (fi)-drawing (or [fi]-drawing) for any fi 1. T has no [1]-drawing, since by Theorem 3.3, the minimum angle between any two consecutive edges must be greater than =2. <p> In <ref> [2] </ref>, it is shown that T 5 is both (2)- and [2]-drawable. As immediate consequences of Theorem 3.3, no trees having any vertices of degree 5 can be fi-drawn for any fi &lt; 1 1cos ( 2 fi &gt; 1 5 ) . <p> There exist angles ~ 1 &gt; 0, ~ 2 &gt; 0, vectors d 1 , d 2 , and radii 1 &gt; 0, 2 &gt; 0 such that P separates S 1 = S [p 1 ; ~ 1 ; d 1 ; 1 ] and S 2 = S <ref> [p 2 ; ~ 2 ; d 2 ; 2 ] </ref>. Proof: See Figure 12. <p> The proof of statement S [7] is similar to that of S (11); statements S (7) down to S (6) follow from Lemma 3.4. Lemma 3.1, along with the results on T (1) of <ref> [2] </ref>, imply the truth statements S (4) and S [4]. Statement S [3] is just Corollary 5.1. Theorem 4.1 and Theorem 3.3 directly imply statements S (3) down to S [1]. <p> To date, this is the first complete characterization of proximity drawable graphs. For 1 5 ) fi 1 5 ) fi-trees are only partially characterized. In this interval, we prove that all trees with maximum vertex degree at most four are both (fi)- and [fi]- drawable. In <ref> [2] </ref> it is shown that all trees of class T 5 admit both (fi)- and [fi]-drawings when fi = 2. We provide a negative result for the stable fi-drawability of T 5 when 1 5 ) &lt; fi &lt; 2.
Reference: [3] <author> R. J. Cimikowski. </author> <title> Properties of Some Euclidean Proximity Graphs. </title> <journal> Pattern Recognition Letters, </journal> <volume> 13, </volume> <year> 1992, </year> <pages> pp. 417-423. </pages>
Reference-contexts: T [fi] = T 2 p 2 | | T (fi) = T 2 T [fi] = T 3 T p 2 &lt; fi &lt; 1 | | T (fi) = T 3 T [fi] = T 3 6 1 &lt; fi &lt; 1 5 ) T 3 T (fi) <ref> [3, 15] </ref> T 3 T [fi] [24, 15] T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] <p> T [fi] = T 3 6 1 &lt; fi &lt; 1 5 ) T 3 T (fi) <ref> [3, 15] </ref> T 3 T [fi] [24, 15] T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] T 5 10 2 &lt; fi &lt; 1 5 ) | | T 4 T (fi) T 5 T 4 T [fi] T 5 cos ( 2 12 1 5 ) &lt; fi <p> The proof of statement S [7] is similar to that of S (11); statements S (7) down to S (6) follow from Lemma 3.4. Lemma 3.1, along with the results on T (1) of [2], imply the truth statements S (4) and S [4]. Statement S <ref> [3] </ref> is just Corollary 5.1. Theorem 4.1 and Theorem 3.3 directly imply statements S (3) down to S [1].
Reference: [4] <author> G. Di Battista, P. Eades, R. Tamassia and I.G. Tollis. </author> <title> Algorithms for Automatic Graph Drawing: An Annotated Bibliography. Computational Geometry: </title> <booktitle> Theory and Applications 4, </booktitle> <year> 1994, </year> <pages> pp. 235-282. </pages>
Reference-contexts: For an up to date overview on graph drawing problems, applications, and algorithms, the reader is referred to <ref> [4] </ref>. Finally, proximity drawing problems may be viewed as visibility problems: two points are mutually visible if a certain region between them contains no other point. <p> The proof of statement S [7] is similar to that of S (11); statements S (7) down to S (6) follow from Lemma 3.4. Lemma 3.1, along with the results on T (1) of [2], imply the truth statements S (4) and S <ref> [4] </ref>. Statement S [3] is just Corollary 5.1. Theorem 4.1 and Theorem 3.3 directly imply statements S (3) down to S [1].
Reference: [5] <author> G. Di Battista, W. Lenhart, and G. Liotta. </author> <title> Proximity Drawability: a Survey. Graph Drawing, </title> <booktitle> Proc. of the DIMACS International Workshop GD94, </booktitle> <address> New Jersey, USA, </address> <month> October </month> <year> 1994, </year> <note> Lecture Notes in Computer Science LNCS 894, </note> <editor> R. Tamassia and I.G. Tollis eds., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 328-339. </pages>
Reference-contexts: Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes [11, 12, 13, 14, 23]. Increasing attention has been given recently to proximity drawings [2, 16, 10, 19, 9]; for a survey on proximity drawings the reader is referred to <ref> [5] </ref>. Loosely speaking, a proximity drawing is one in which adjacent vertices are drawn relatively close together and non-adjacent vertices are drawn relatively far apart.
Reference: [6] <author> G. Di Battista and L. Vismara. </author> <title> Angles of Planar Triangular Graphs. </title> <booktitle> Proceedings STOC '93, </booktitle> <year> 1993, </year> <pages> pp. 431-437. </pages>
Reference-contexts: Proximity drawings of trees, as we will see later, are related to minimum spanning trees, another well studied class of tree-drawings [19, 9]. 5 Note that the problem of constructing drawings with large angles (high-resolution drawings) has been studied in <ref> [17, 6] </ref>. For an up to date overview on graph drawing problems, applications, and algorithms, the reader is referred to [4]. Finally, proximity drawing problems may be viewed as visibility problems: two points are mutually visible if a certain region between them contains no other point.
Reference: [7] <author> P. Eades, T. Lin, and X. Lin. </author> <title> Two Tree Drawing Conventions. </title> <journal> International Journal of Computational Geometry and Applications, </journal> <volume> 3, </volume> <year> 1993, </year> <pages> pp. 133-153. </pages>
Reference-contexts: The design of algorithms for straight-line drawings of trees is a field of growing interest given the ubiquity of trees as models. For a small sample of papers that show algorithms for straight-line drawings of trees see <ref> [8, 7, 2] </ref>. Proximity drawings of trees have several interesting characteristics for visualization: 1. Neighbors of a given vertex cluster around that vertex; 2. The angles between consecutive edges are "large" (each angle is at least =3); and 3. <p> To verify statements S [10] to S (8), it suffices to observe that the tree consisting of a single vertex of degree 5 and its neighbors is both (fi)- and [fi]-drawable for these ranges of fi. The proof of statement S <ref> [7] </ref> is similar to that of S (11); statements S (7) down to S (6) follow from Lemma 3.4. Lemma 3.1, along with the results on T (1) of [2], imply the truth statements S (4) and S [4]. Statement S [3] is just Corollary 5.1.
Reference: [8] <author> P. Eades. </author> <title> Drawing Free Trees. </title> <booktitle> Bullettin of the Institute of Combinatorics and its Applications, </booktitle> <year> 1992, </year> <pages> pp. 10-36. </pages>
Reference-contexts: The design of algorithms for straight-line drawings of trees is a field of growing interest given the ubiquity of trees as models. For a small sample of papers that show algorithms for straight-line drawings of trees see <ref> [8, 7, 2] </ref>. Proximity drawings of trees have several interesting characteristics for visualization: 1. Neighbors of a given vertex cluster around that vertex; 2. The angles between consecutive edges are "large" (each angle is at least =3); and 3.
Reference: [9] <author> P. Eades and S. Whitesides. </author> <title> The Realization Problem for Euclidean Minimum Spanning Tree is NP-hard. </title> <booktitle> Proceedings 10th ACM Symposium on Computational Geometry, </booktitle> <pages> pp. 49-56, </pages> <year> 1994. </year>
Reference-contexts: A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes [11, 12, 13, 14, 23]. Increasing attention has been given recently to proximity drawings <ref> [2, 16, 10, 19, 9] </ref>; for a survey on proximity drawings the reader is referred to [5]. Loosely speaking, a proximity drawing is one in which adjacent vertices are drawn relatively close together and non-adjacent vertices are drawn relatively far apart. <p> Neighbors of a given vertex cluster around that vertex; 2. The angles between consecutive edges are "large" (each angle is at least =3); and 3. Proximity drawings of trees, as we will see later, are related to minimum spanning trees, another well studied class of tree-drawings <ref> [19, 9] </ref>. 5 Note that the problem of constructing drawings with large angles (high-resolution drawings) has been studied in [17, 6]. For an up to date overview on graph drawing problems, applications, and algorithms, the reader is referred to [4].
Reference: [10] <author> H. ElGindy, G. Liotta, A. Lubiw, H. Meijer, S.H. Whitesides. </author> <title> Recognizing Rectangle of Influence Drawable Graphs. Graph Drawing, </title> <booktitle> Proc. of the DIMACS International Workshop GD94, </booktitle> <address> New Jersey, USA, </address> <month> October </month> <year> 1994, </year> <note> Lecture Notes in Computer Science LNCS 894, </note> <editor> R. Tamassia and I.G. Tollis eds., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 352-363. </pages>
Reference-contexts: A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes [11, 12, 13, 14, 23]. Increasing attention has been given recently to proximity drawings <ref> [2, 16, 10, 19, 9] </ref>; for a survey on proximity drawings the reader is referred to [5]. Loosely speaking, a proximity drawing is one in which adjacent vertices are drawn relatively close together and non-adjacent vertices are drawn relatively far apart. <p> Now it suffices to note that since R (x; y; 1) contains no other vertices of T , neither does R (x; y; 1 cos ( 2 5 ) ). This contradicts the fact that T does not contain the edge (x; y). To verify statements S <ref> [10] </ref> to S (8), it suffices to observe that the tree consisting of a single vertex of degree 5 and its neighbors is both (fi)- and [fi]-drawable for these ranges of fi.
Reference: [11] <author> I. Fary. </author> <title> On Straight Lines Representation of Planar Graphs. </title> <journal> Acta Sci. Math. Szeged, </journal> <volume> 11, </volume> <year> 1948, </year> <pages> pp. 229-233. </pages>
Reference-contexts: Graph drawing algorithms and tools usually adopt given graphic standards. A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes <ref> [11, 12, 13, 14, 23] </ref>. Increasing attention has been given recently to proximity drawings [2, 16, 10, 19, 9]; for a survey on proximity drawings the reader is referred to [5]. <p> By Theorem 4.3, both T (fi) and T [fi] contain T 4 for the values of fi in rows 6 to 12 of the Table. Thus, statements S [12] and S <ref> [11] </ref> hold by Lemma 3.5 and statement S (12) holds by Lemma 3.4. To verify the containments in S (11), first observe that the tree consisting of a single vertex of degree 5 and its neighbors is ( 1 cos ( 2 5 ) )-drawable.
Reference: [12] <author> H. de Fraysseix, J. Pach, and R. Pollack. </author> <title> Small Sets Supporting Fary Embbeddings of Planar Graphs. </title> <booktitle> Proceedings ACM Symposium on Theory of Computing '88, </booktitle> <year> 1988, </year> <pages> pp. 426-433. </pages>
Reference-contexts: Graph drawing algorithms and tools usually adopt given graphic standards. A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes <ref> [11, 12, 13, 14, 23] </ref>. Increasing attention has been given recently to proximity drawings [2, 16, 10, 19, 9]; for a survey on proximity drawings the reader is referred to [5]. <p> By Theorem 4.3, both T (fi) and T [fi] contain T 4 for the values of fi in rows 6 to 12 of the Table. Thus, statements S <ref> [12] </ref> and S [11] hold by Lemma 3.5 and statement S (12) holds by Lemma 3.4. To verify the containments in S (11), first observe that the tree consisting of a single vertex of degree 5 and its neighbors is ( 1 cos ( 2 5 ) )-drawable.
Reference: [13] <author> H. de Fraysseix, J. Pach, and R. Pollack. </author> <title> How to Draw a Planar Graph on a Grid. </title> <journal> Combinatorica, </journal> <volume> 10, </volume> <year> 1990, </year> <pages> pp. 41-51. </pages>
Reference-contexts: Graph drawing algorithms and tools usually adopt given graphic standards. A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes <ref> [11, 12, 13, 14, 23] </ref>. Increasing attention has been given recently to proximity drawings [2, 16, 10, 19, 9]; for a survey on proximity drawings the reader is referred to [5]. <p> We prove the statements in order of decreasing value of k. Recall that by Corollary 3.1, we need not consider trees containing vertices of degree greater than five. The proof of statement S <ref> [13] </ref> is just Theorem 5.1. To show S (13), observe first that by Theorem 4.2, T 3 T (1). Now note that the tree consisting of a single vertex of degree 4 and its neighbors is (1)-drawable and the tree in Figure 9.b is not (see Theorem 4.3).
Reference: [14] <author> G. Kant. </author> <title> Drawing Planar Graphs Using the lmc-ordering. </title> <booktitle> Proceedings IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1992, </year> <pages> pp. 101-110. 28 </pages>
Reference-contexts: Graph drawing algorithms and tools usually adopt given graphic standards. A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes <ref> [11, 12, 13, 14, 23] </ref>. Increasing attention has been given recently to proximity drawings [2, 16, 10, 19, 9]; for a survey on proximity drawings the reader is referred to [5].
Reference: [15] <author> D. G. Kirkpatrick and J. D. Radke. </author> <title> A Framework for Computational Morphology. Computational Geometry, </title> <editor> ed. G. T. Toussaint, </editor> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1985, </year> <pages> pp. 217-248. </pages>
Reference-contexts: In this paper we study the proximity-drawability testing problem: the problem of deciding whether a graph has a proximity drawing with a given type of proximity region. In particular we study the proximity-drawability of trees. We consider an infinite parametrized family of proximity regions, first introduced in <ref> [15, 21] </ref>, that includes several of the most well-known proximity regions from the literature. <p> T [fi] = T 2 p 2 | | T (fi) = T 2 T [fi] = T 3 T p 2 &lt; fi &lt; 1 | | T (fi) = T 3 T [fi] = T 3 6 1 &lt; fi &lt; 1 5 ) T 3 T (fi) <ref> [3, 15] </ref> T 3 T [fi] [24, 15] T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] <p> 2 | | T (fi) = T 2 T [fi] = T 3 T p 2 &lt; fi &lt; 1 | | T (fi) = T 3 T [fi] = T 3 6 1 &lt; fi &lt; 1 5 ) T 3 T (fi) [3, 15] T 3 T [fi] <ref> [24, 15] </ref> T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] T 5 10 2 &lt; fi <p> T [fi] = T 3 6 1 &lt; fi &lt; 1 5 ) T 3 T (fi) <ref> [3, 15] </ref> T 3 T [fi] [24, 15] T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] T 5 10 2 &lt; fi &lt; 1 5 ) | | T 4 T (fi) T 5 T 4 T [fi] T 5 cos ( 2 12 1 5 ) &lt; fi <p> 1 &lt; fi &lt; 1 5 ) T 3 T (fi) [3, 15] T 3 T [fi] <ref> [24, 15] </ref> T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] T 5 10 2 &lt; fi &lt; 1 5 ) | | T 4 T (fi) T 5 T 4 T [fi] T 5 cos ( 2 12 1 5 ) &lt; fi &lt; 1 | | T (fi) <p> Clearly d (y; u) &lt; d (x; v), so the drawing is not a minimum spanning tree. 2 The relationship between G [P; 1] and M ST (P ) is discussed in Section 6. Furthermore, the following property is proved in <ref> [15] </ref>. Lemma 3.3 [15] For each edge e 2 G (P; 1), there exists a minimum spanning tree of P containing e. <p> Clearly d (y; u) &lt; d (x; v), so the drawing is not a minimum spanning tree. 2 The relationship between G [P; 1] and M ST (P ) is discussed in Section 6. Furthermore, the following property is proved in <ref> [15] </ref>. Lemma 3.3 [15] For each edge e 2 G (P; 1), there exists a minimum spanning tree of P containing e. The relationship between fi-graphs and minimum spanning trees can be exploited to give a lower bound for the minimum angle between consecutive edges in a fi-drawing of a tree.
Reference: [16] <author> A. Lubiw, and N. Sleumer. </author> <title> All Maximal Outerplanar Graphs are Relative Neighborhood Graphs. </title> <booktitle> Proceedings fifth Canadian Conference on Computational Geometry, </booktitle> <address> Waterloo, </address> <year> 1993, </year> <pages> pp. 198-203. </pages>
Reference-contexts: A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes [11, 12, 13, 14, 23]. Increasing attention has been given recently to proximity drawings <ref> [2, 16, 10, 19, 9] </ref>; for a survey on proximity drawings the reader is referred to [5]. Loosely speaking, a proximity drawing is one in which adjacent vertices are drawn relatively close together and non-adjacent vertices are drawn relatively far apart. <p> Question 7.2 Does every fi-tree admit a stable fi-drawing?. To date, little work has been done on the problem of characterizing families of fi-drawable graphs other than trees. Lubiw and Sleumer <ref> [16] </ref> show that maximal outerplanar graphs admit both [1]-drawings (Gabriel drawings) and (2)-drawings (relative neighborhood drawings). They also prove that all biconnected outerplanar graphs are (2)-drawable. It is easy to see that a triangulated planar graph is not fi-drawable for fi &gt; 2.
Reference: [17] <author> S. Malitz and A. Papakostas. </author> <title> On the Angular Resolution of Planar Graphs. </title> <booktitle> Proceedings ACM Symposium on Theory of Computing, </booktitle> <year> 1992, </year> <pages> pp. 527-538. </pages>
Reference-contexts: Proximity drawings of trees, as we will see later, are related to minimum spanning trees, another well studied class of tree-drawings [19, 9]. 5 Note that the problem of constructing drawings with large angles (high-resolution drawings) has been studied in <ref> [17, 6] </ref>. For an up to date overview on graph drawing problems, applications, and algorithms, the reader is referred to [4]. Finally, proximity drawing problems may be viewed as visibility problems: two points are mutually visible if a certain region between them contains no other point.
Reference: [18] <author> D. W. Matula and R. R. Sokal. </author> <title> Properties of Gabriel Graphs Relevant to Geographic Variation Research and the Clustering of Points in the Plane. </title> <journal> Geographical Analysis, </journal> <volume> 12, </volume> <year> 1980, </year> <pages> pp. 205-222. </pages>
Reference-contexts: For fi &lt; 1, G (P; fi) and G [P; fi] are not necessarily planar. Proof: The first part easily follows from the planarity of G [P; 1] that is proved in <ref> [18] </ref> and from Property 3.1. The second part is proved as follows. Suppose P consists of exactly six points and that they are placed at the vertices of a regular hexagon (see Figure 6.a). <p> Also, G [P; 1] is a subgraph of DT (P ). Proof: The fact that G [P; 1] is a subgraph of DT (P ) is proved in <ref> [18] </ref>. The rest follows from Property 3.1. 2 From Property 3.2 and from the planarity of DT (P ) it follows that for fi &lt; 1 the above property, in general, does not hold.
Reference: [19] <author> C. Monma and S. Suri. </author> <title> Transitions in Geometric Minimum Spanning Trees. </title> <booktitle> Proc. 7th ACM Symposium on Computational Geometry, </booktitle> <year> 1991, </year> <pages> pp. 239-249. </pages>
Reference-contexts: A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes [11, 12, 13, 14, 23]. Increasing attention has been given recently to proximity drawings <ref> [2, 16, 10, 19, 9] </ref>; for a survey on proximity drawings the reader is referred to [5]. Loosely speaking, a proximity drawing is one in which adjacent vertices are drawn relatively close together and non-adjacent vertices are drawn relatively far apart. <p> Neighbors of a given vertex cluster around that vertex; 2. The angles between consecutive edges are "large" (each angle is at least =3); and 3. Proximity drawings of trees, as we will see later, are related to minimum spanning trees, another well studied class of tree-drawings <ref> [19, 9] </ref>. 5 Note that the problem of constructing drawings with large angles (high-resolution drawings) has been studied in [17, 6]. For an up to date overview on graph drawing problems, applications, and algorithms, the reader is referred to [4].
Reference: [20] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry an Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: Finally, Section 7 discusses conclusions and open problems. 2 Preliminaries We assume familiarity with the basic terminology of graph theory and computational geometry (see also [1], <ref> [20] </ref>). Let T be a tree, v a vertex of T , and x a neighbor of v; T x (v) denotes the connected component of T fvg which contains x.
Reference: [21] <author> J. D. Radke. </author> <title> On the shape of a set of points. Computational Morphology, </title> <editor> ed. G. T. Toussaint, </editor> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1988, </year> <pages> pp. 105-136. </pages>
Reference-contexts: In this paper we study the proximity-drawability testing problem: the problem of deciding whether a graph has a proximity drawing with a given type of proximity region. In particular we study the proximity-drawability of trees. We consider an infinite parametrized family of proximity regions, first introduced in <ref> [15, 21] </ref>, that includes several of the most well-known proximity regions from the literature.
Reference: [22] <author> G. T. Toussaint. </author> <title> The Relative Neighborhood Graph of a Finite Planar Set. </title> <journal> Pattern Recognition, </journal> <volume> 12, </volume> <year> 1980, </year> <pages> pp. 261-268. </pages>
Reference-contexts: Also, G (P; 2) is connected, but G [P; 2] is not necessarily connected. For fi &gt; 2, G (P; fi) and G [P; fi] are not necessarily connected. Proof: The first part easily follows from the connectivity of G (P; 2) that is proved in <ref> [22] </ref> and from Property 3.1. The second part is proved as follows. Suppose P consists of six points placed at the vertices of a regular hexagon plus a seventh point at the center 11 of the hexagon (see Figure 6.b). <p> Proof: The first part of Statement 1 is a consequence of Property 3.1; the second part is proved in <ref> [22] </ref>. To prove Statement 2, consider the drawing in Figure 7. Observe that this is a fi-drawing for any 2 &lt; fi &lt; 1 and that it is both a [2]-drawing and a (1)-drawing. Vertices y; z; u form an equilateral triangle.
Reference: [23] <author> W. T. Tutte. </author> <title> Convex Representations of Graphs. </title> <journal> Proceedings London Math. Society, </journal> <volume> 10, </volume> <year> 1960, </year> <pages> pp. 304-320. </pages>
Reference-contexts: Graph drawing algorithms and tools usually adopt given graphic standards. A widely used graphic standard represents all the edges as straight-line segments. Drawings within this standard are called straight-line drawings. A limited list of work on straight-line drawings includes <ref> [11, 12, 13, 14, 23] </ref>. Increasing attention has been given recently to proximity drawings [2, 16, 10, 19, 9]; for a survey on proximity drawings the reader is referred to [5].
Reference: [24] <author> R. B. Urquhart. </author> <title> Some Properties of the Planar Euclidean Relative Neighborhood Graph. </title> <journal> Pattern Recognition Letters, </journal> <volume> 1, </volume> <year> 1983, </year> <pages> pp. 317-322. 29 </pages>
Reference-contexts: 2 | | T (fi) = T 2 T [fi] = T 3 T p 2 &lt; fi &lt; 1 | | T (fi) = T 3 T [fi] = T 3 6 1 &lt; fi &lt; 1 5 ) T 3 T (fi) [3, 15] T 3 T [fi] <ref> [24, 15] </ref> T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] T 5 10 2 &lt; fi <p> 1 &lt; fi &lt; 1 5 ) T 3 T (fi) [3, 15] T 3 T [fi] <ref> [24, 15] </ref> T (fi) = T 4 T [fi] = T 4 1cos ( 2 8 1 5 ) &lt; fi &lt; 2 T 3 T (fi) [3, 15] T 3 T [fi] [24, 15] T 4 T (fi) T 5 T 4 T [fi] T 5 10 2 &lt; fi &lt; 1 5 ) | | T 4 T (fi) T 5 T 4 T [fi] T 5 cos ( 2 12 1 5 ) &lt; fi &lt; 1 | | T (fi)
References-found: 24

