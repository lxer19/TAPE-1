URL: file://ftp.cs.princeton.edu/pub/people/arora/tsp1.ps
Refering-URL: http://www.cs.princeton.edu/~arora/publist.html
Root-URL: http://www.cs.princeton.edu
Title: Polynomial Time Approximation Schemes for Euclidean TSP and other Geometric Problems best approximation algorithm for
Author: Sanjeev Arora 
Note: The previous  (such as p for p 1 or other Minkowski norms).  
Affiliation: Princeton University  
Abstract: We present a polynomial time approximation scheme for Euclidean TSP in &lt; 2 . Given any n nodes in the plane and * &gt; 0, the scheme finds a (1 + *)-approximation to the optimum traveling salesman tour in time n O(1=*) . When the nodes are in &lt; d , the running time increases to n We also give similar approximation schemes for a host of other Euclidean problems, including Steiner Tree, k-TSP, Minimum degree-k spanning tree, k-MST, etc. (This list may get longer; our techniques are fairly general.) The previous best approximation algorithms for all these problems achieved a constant-factor approximation. All our algorithms also work, with almost no modification, when distance is measured using any geometric norm 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Applegate, R. Bixby, V. Chvatal, and W. Cook. </author> <title> Finding cuts in the TSP (A preliminary report). </title> <type> Report 95-05, </type> <institution> DIMACS, Rutgers University, NJ. </institution>
Reference: [2] <author> S. Arora. </author> <title> Polynomial-time approximation schemes for Eu-clidean TSP and other geometric problems. </title> <note> Preliminary manuscript (with quasipolynomial" in the title), January 20, 1996. Final version, </note> <month> March 30, </month> <year> 1996. </year> <note> Circulated widely on April 10, </note> <year> 1996. </year>
Reference-contexts: Interestingly, his reduction (owing to its dependence on [21]) also seems to break down for norms other than ` 2 . Finally, we mention that a few weeks after the circulation of the complete version of our paper <ref> [2] </ref>, Mitchell [34] noticed that some ideas in his earlier paper [33] can be used to derive a PTAS for most of the problems we have considered. Like our PTAS, his PTAS also relies on a geometric partitioning scheme.
Reference: [3] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and intractability of approximation problems. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 13-22, </pages> <year> 1992. </year>
Reference-contexts: Recently Arora, Lund, Motwani, Sudan, and Szegedy <ref> [3] </ref> showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS. <p> Thus the running time is 2 O (m) poly (n) as before. 4 Conclusions Our original goal was to extend the inapproximability results in <ref> [3] </ref> to Euclidean TSP. Doing this seemed to call for a reduction that produces instances in which every near-optimal tour encodes the complicated code-like objects of [3]. Then we realized (upon discovering an early version of Theorem 5) that such an encoding may be impossible. <p> Thus the running time is 2 O (m) poly (n) as before. 4 Conclusions Our original goal was to extend the inapproximability results in <ref> [3] </ref> to Euclidean TSP. Doing this seemed to call for a reduction that produces instances in which every near-optimal tour encodes the complicated code-like objects of [3]. Then we realized (upon discovering an early version of Theorem 5) that such an encoding may be impossible. This realization led to an approximation algorithm in a natural way. <p> Thus if the running time of our approximation scheme in &lt; d could be improved to n d=* for each d &gt; 0, then the running time for d = O (log n) would be n O (log n=*) . Using a well-known reduction of <ref> [3] </ref>, such a scheme could be used to solve every NP problem probabilistically in n O (log n) time, which contradicts a well-known conjecture about NP. Note, however, that Trevisan's result does not rule out a running time like poly (n)2 2 d =* .
Reference: [4] <author> S. Arora and S. Safra. </author> <title> Probabilistic Checking of Proofs: A new characterization of NP. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1992. </year> <month> 8 </month>
Reference-contexts: Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis [38]), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy [11], Arora and Safra <ref> [4] </ref>), and the connection between PCPs and hardness of approximation [11]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS.
Reference: [5] <author> J. Bentley. </author> <title> Fast algorithms for geometric traveling salesman problem. </title> <journal> ORSA J. on Computing, </journal> <volume> 4 </volume> <pages> 387-411, </pages> <year> 1992. </year>
Reference-contexts: The most well-known of them, such as K-OPT or Lin-Kernighan [31], date to the 1960s and 70s. Using simple local-exchange rules, they quickly come up with very good salesman tours on real-life" TSP instances <ref> [19, 5] </ref>.
Reference: [6] <author> M. Bern and D. Eppstein. </author> <title> Approximation Algorithms for Geometric Problems. </title> <booktitle> In [16]. </booktitle>
Reference-contexts: Below, we define some of them. We will restrict attention to the Euclidean (or geometric) versions of these problems. The best approximation algorithms for all of them achieve a constant factor approximation in polynomial time (see the survey by Bern and Eppstein <ref> [6] </ref>). We are able to design PTAS's for the planar versions, and n O (log d2 n log log n)=* d1 time approximation schemes for the &lt; d versions. Minimum Steiner Tree: Given n nodes in &lt; d , find the minimum cost tree connecting them 2 .
Reference: [7] <author> A. Blum, P. Chalasani, and S. Vempala. </author> <title> A constant-factor approximation for the k-MST problem in the plane. </title> <booktitle> In Proc. 27th ACM Symposium on Theorem of Computing, </booktitle> <year> 1995. </year>
Reference-contexts: An approximation algorithm due to Mata and Mitchell [32] achieves a constant factor approximation in &lt; 2 . k-MST: Given n nodes in &lt; d and an integer k 2, find k nodes with the shortest MST. Blum, Chalasani, and Vempala <ref> [7] </ref> gave the first O (1)-factor approximation algorithm for points in &lt; 2 ; there has been much other work before and since.
Reference: [8] <author> B. Chandra, H. Karloff, and C. Tovey. </author> <title> New results for the old K-OPT algorithm for the TSP. </title> <booktitle> In Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp 150-159, </pages> <year> 1994. </year>
Reference-contexts: The few published results in fact suggest quite the opposite. With an adversarially-chosen starting tour, K-OPT (for any constant K) may produce a tour whose cost is W (log n= log log n) times the cost of the optimum tour, even when the n nodes lie in &lt; 2 <ref> [8] </ref>. In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete [26]. (This strongly suggests that no polynomial-time algorithm can find such a local optimum; see [20].) Many variants of Lin-Kernighan are also PLS-complete [36]. 1.1 Steiner Tree and other geometric problems.
Reference: [9] <author> N. Christofides. </author> <title> Worst-case analysis of a new heuristic for the traveling salesman problem. </title> <type> Report 388, </type> <institution> Grad School of Industrial Administration, </institution> <address> CMU, </address> <year> 1976. </year>
Reference-contexts: Christofides <ref> [9] </ref> designed an approximation algorithm that on every instance of metric TSP computes a tour of cost at most 1:5 times the optimum. Two decades of research failed to improve upon Christofides' algorithm for metric TSP. But some researchers continued to hope that even a PTAS might exist. <p> Proof:The reduction involves perturbing the n-node instance a little. Let T be the cost of the minimum spanning tree. Note that the optimum salesman tour has cost at least T and at most 1:5T <ref> [9] </ref>. So the size of the bounding box is at most 0:75T . Construct a new instance by placing a grid of granularity T =2n 2 in the plane and moving each node to its nearest gridpoint (this may cause some nodes to merge).
Reference: [10] <author> D. Z. Du and F. K. Hwang. </author> <title> A proof of Gilbert-Pollak's conjecture on the Steiner ratio. </title> <journal> Algorithmica, </journal> <volume> 7: </volume> <pages> 121-135, </pages> <year> 1992. </year>
Reference-contexts: In &lt; 2 the cost of the MST can be as far as a factor 2= p 3 from the optimum. (Furthermore, the famous Gilbert-Pollak [13] conjecture said it can't be any further from the optimum; the conjecture was proved by Du and Hwang <ref> [10] </ref>). A spate of research activity in recent years (starting with the work of Zelikovsky [42]) has provided better algorithms; with an approximation ratio approaching 1:10. The metric case is MAX-SNP-hard. Degree-restricted-MST.
Reference: [11] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1991. </year>
Reference-contexts: Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis [38]), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy <ref> [11] </ref>, Arora and Safra [4]), and the connection between PCPs and hardness of approximation [11]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS. <p> Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis [38]), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy <ref> [11] </ref>, Arora and Safra [4]), and the connection between PCPs and hardness of approximation [11]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS. For 1 every * &gt; 0, the PTAS computes a (1 + *)-approximation to the optimal tour in n O (1=*) time.
Reference: [12] <author> M. R. Garey, R. L. Graham, and D. S. Johnson. </author> <title> Some NP-complete geometric problems. </title> <booktitle> In Proc. ACM Symposium on Theory of Computing, </booktitle> <pages> pp 10-22, </pages> <year> 1976. </year>
Reference-contexts: In Euclidean TSP the nodes lie in &lt; 2 (or more generally, in &lt; d for some d) and distance is defined using the ` 2 norm. Note that Euclidean TSP is a subcase of metric TSP. Unfortunately, even Euclidean TSP is NP-hard (Papadim-itriou [35], Garey, Graham, and Johnson <ref> [12] </ref>). Therefore algorithm designers were left with no choice but to consider more modest notions of a good" solution.
Reference: [13] <author> E. N. Gilbert and R. O. Pollak. </author> <title> Steiner minimal trees. </title> <journal> SIAM J. Appl. Math. </journal> <volume> 16 </volume> <pages> 1-29, </pages> <year> 1968. </year>
Reference-contexts: In general, the minimum spanning tree is not an optimal solution (as observed many decades ago). In &lt; 2 the cost of the MST can be as far as a factor 2= p 3 from the optimum. (Furthermore, the famous Gilbert-Pollak <ref> [13] </ref> conjecture said it can't be any further from the optimum; the conjecture was proved by Du and Hwang [10]). A spate of research activity in recent years (starting with the work of Zelikovsky [42]) has provided better algorithms; with an approximation ratio approaching 1:10. The metric case is MAX-SNP-hard.
Reference: [14] <author> R. L. Graham. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Tech. J., </journal> <volume> 45: </volume> <year> 1563-1581.1966. </year>
Reference: [15] <author> R. L. Graham. </author> <type> Personal communication, </type> <year> 1996. </year>
Reference-contexts: But recent algorithms discovered independently of our paper work for any metric space. 2 It appears that this problem was first posed by Gauss in a letter to Schumacher <ref> [15] </ref>. 2 2 The TSP Algorithm As mentioned in the introduction, we design our PTAS for Euclidean TSP in &lt; 2 by showing that there is a way to recursively partition the plane so that there exists a (1 + *)- approximate tour that crosses each line of this partition very
Reference: [16] <author> D. Hochbaum, ed. </author> <title> Approximation Algorithms for NP-hard problems. </title> <publisher> PWS Publishing, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference: [17] <author> O. H. Ibarra and C. E. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> JACM, </journal> <volume> 22(4) </volume> <pages> 463-468, </pages> <year> 1975. </year>
Reference-contexts: algorithms that, for each fixed * &gt; 0, can approximate the problem within a factor 1 + *. (The running time could depend upon *, but for each fixed * has to be polynomial in the input size.) PTAS's are known for very few problems; two important ones are in <ref> [17, 22] </ref>. Recently Arora, Lund, Motwani, Sudan, and Szegedy [3] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS.
Reference: [18] <author> D. S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> J. Computer and Systems Sci. </journal> <volume> 9 (1974), </volume> <pages> 256-278. </pages>
Reference: [19] <author> D. S. Johnson and Lyle A. McGeoch. </author> <title> The Traveling Salesman Problem: A Case Study in Local Optimization. Chapter in Local Search in Combinatorial Optimization, </title> <editor> E.H.L. Aarts and J.K. Lenstra (eds.), </editor> <publisher> John Wiley and Sons, </publisher> <address> NY. </address> <note> (To appear.) </note>
Reference-contexts: The most well-known of them, such as K-OPT or Lin-Kernighan [31], date to the 1960s and 70s. Using simple local-exchange rules, they quickly come up with very good salesman tours on real-life" TSP instances <ref> [19, 5] </ref>.
Reference: [20] <author> D. S. Johnson, C. Papadimitriou and M. Yannakakis. </author> <title> How easy is local search? J. </title> <institution> Computer and Systems Sci. </institution> <month> 37 </month> <year> (1988), </year> <pages> 79-100. </pages>
Reference-contexts: So is approximating the optimum within any constant factor (Sahni and Gonzalez [40]). There are also other reasons to believe in fl Supported by NSF CAREER award NSF CCR-9502747 and an Alfred Sloan Fellowship. Email: arora@cs.princeton.edu the TSP's nastiness (cf. D P completeness [37] and P LS-completeness <ref> [20] </ref>). But TSP instances arising in practice are usually quite special, so the hardness results may not necessarily apply to them. In metric TSP the nodes lie in a metric space (i.e., the distances satisfy the triangle inequality). <p> In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete [26]. (This strongly suggests that no polynomial-time algorithm can find such a local optimum; see <ref> [20] </ref>.) Many variants of Lin-Kernighan are also PLS-complete [36]. 1.1 Steiner Tree and other geometric problems. Many network problems identified in the past few decades are very similar to the TSP. Below, we define some of them. We will restrict attention to the Euclidean (or geometric) versions of these problems.
Reference: [21] <author> W. B. Johnson and J. Lindenstrauss. </author> <title> Extensions of Lipschitz mappings into Hilbert space. </title> <note> Contemporary Mathematics 26 (1984) 189-206. </note>
Reference-contexts: Note, however, that Trevisan's result does not rule out a running time like poly (n)2 2 d =* . Interestingly, his reduction (owing to its dependence on <ref> [21] </ref>) also seems to break down for norms other than ` 2 .
Reference: [22] <author> N. Karmarkar and R.M. Karp. </author> <title> An efficient approximation scheme for the one-dimensional bin-packing problem. </title> <booktitle> In Proc. 23 rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 312-320, </pages> <year> 1982. </year>
Reference-contexts: algorithms that, for each fixed * &gt; 0, can approximate the problem within a factor 1 + *. (The running time could depend upon *, but for each fixed * has to be polynomial in the input size.) PTAS's are known for very few problems; two important ones are in <ref> [17, 22] </ref>. Recently Arora, Lund, Motwani, Sudan, and Szegedy [3] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS.
Reference: [23] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In R. E. Miller and J. W. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, Advances in Computing Research, </booktitle> <pages> pages 85-103. </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: For a fascinating history, see Lawler et al. [29]. Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp <ref> [23] </ref>). So is approximating the optimum within any constant factor (Sahni and Gonzalez [40]). There are also other reasons to believe in fl Supported by NSF CAREER award NSF CCR-9502747 and an Alfred Sloan Fellowship. Email: arora@cs.princeton.edu the TSP's nastiness (cf. D P completeness [37] and P LS-completeness [20]).
Reference: [24] <author> R. M. Karp. </author> <title> Probabilistic analysis of partitioning algorithms for the TSP in the plane. </title> <journal> Math. Oper. Res. </journal> <volume> 2 (1977), </volume> <pages> 209-224. </pages>
Reference-contexts: Note that Euclidean TSP is a subcase of metric TSP. Unfortunately, even Euclidean TSP is NP-hard (Papadim-itriou [35], Garey, Graham, and Johnson [12]). Therefore algorithm designers were left with no choice but to consider more modest notions of a good" solution. Karp <ref> [24] </ref>, in a seminal work on probabilistic analysis of algorithms, showed that when the n nodes are picked uniformly and independently from unit square, then the fixed dissection heuristic with high probability finds tours whose cost is within 1 + * of optimal (where * &gt; 0 is arbitrarily small). <p> A tour with such simple structure can be found using dynamic programming. We remark that the idea of partitioning a TSP instance into smaller instances has been used before, most famously in <ref> [24] </ref>. Dynamic programming has also been used before, most recently in an approximation scheme for planar graph TSP [28]. Our Structure Theorem about near-optimal tours also seems to shed some light at least at an intuitive level on one mysterious aspect of the TSP: the remarkable performance of simple heuristics. <p> The lemma lets us prove exactly this; it has probably been known for a long time (for example, it is implicit in the calculations of <ref> [24] </ref>). Lemma 6 (Patching Lemma) There is a constant b &gt; 0 such that the following is true. Let S be any line segment of length l and be a closed path that crosses S at least thrice.
Reference: [25] <author> P. Klein and D. Karger. </author> <type> Personal communication, </type> <month> March </month> <year> 1996. </year>
Reference-contexts: We don't have any formal characterization of this class of problems. Two major open problems now remain: (i) Design an approximation algorithm better than Christofides' for general metric spaces. Some progress has been made by Karger and Klein <ref> [25] </ref>, who extended our ideas to design a quasi-polynomial time approximation scheme for any metric that is the shortest-path metric of a weighted planar graph. (ii) Design a more efficient version of our algorithm. Now we discuss this in more detail.
Reference: [26] <author> M. W. Krentel. </author> <title> Structure in locally optimal solutions. </title> <booktitle> Proc. 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 216-221, </pages> <year> 1989. </year>
Reference-contexts: In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete <ref> [26] </ref>. (This strongly suggests that no polynomial-time algorithm can find such a local optimum; see [20].) Many variants of Lin-Kernighan are also PLS-complete [36]. 1.1 Steiner Tree and other geometric problems. Many network problems identified in the past few decades are very similar to the TSP.
Reference: [27] <author> S. Khuller, B. Raghavachari, and N. Young. </author> <title> Low degree spanning tree of small weight. </title> <booktitle> In Proc. 26th ACM Symposium on Theory of Computing, </booktitle> <year> 1994. </year>
Reference-contexts: The case k = 3 is NP-hard; k = 4 is open, and when k 5 the problem can be solved optimally in polynomial time. For the cases k = 3; 4 in &lt; 2 , a constant-factor approximation algorithm is given by Khuller, Raghavachari, and Young <ref> [27] </ref>. k-TSP: Given n nodes in &lt; d and an integer k &gt; 1, find the smallest tour that visits at least k nodes.
Reference: [28] <author> E. Koutsoupias, M. Grigni, and C. H. Papadimitriou. </author> <title> An Approximation Scheme for Planar Graph TSP. </title> <booktitle> In Proc. IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 640-645, </pages> <year> 1995. </year>
Reference-contexts: We remark that the idea of partitioning a TSP instance into smaller instances has been used before, most famously in [24]. Dynamic programming has also been used before, most recently in an approximation scheme for planar graph TSP <ref> [28] </ref>. Our Structure Theorem about near-optimal tours also seems to shed some light at least at an intuitive level on one mysterious aspect of the TSP: the remarkable performance of simple heuristics. The most well-known of them, such as K-OPT or Lin-Kernighan [31], date to the 1960s and 70s.
Reference: [29] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, D. B. Shmoys. </author> <title> The traveling salesman problem. </title> <publisher> John Wiley, </publisher> <year> 1985 </year>
Reference-contexts: This classic problem has proved a rich testing ground for most important algorithmic ideas during the past few decades, and influenced the emergence of fields such as operations research, polyhedral theory and complexity theory. For a fascinating history, see Lawler et al. <ref> [29] </ref>. Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp [23]). So is approximating the optimum within any constant factor (Sahni and Gonzalez [40]).
Reference: [30] <author> S. Lin. </author> <title> Computer solutions for the traveling salesman problem. </title> <journal> Bell System Tech. J., </journal> <volume> 44, </volume> <pages> 2245-2269. </pages>
Reference: [31] <author> S. Lin and B. W. Kernighan. </author> <title> An effective heuristic algorithm for the traveling salesman problem. </title> <journal> Operations Research 21 </journal> <pages> 498-516, </pages> <year> 1973. </year>
Reference-contexts: Our Structure Theorem about near-optimal tours also seems to shed some light at least at an intuitive level on one mysterious aspect of the TSP: the remarkable performance of simple heuristics. The most well-known of them, such as K-OPT or Lin-Kernighan <ref> [31] </ref>, date to the 1960s and 70s. Using simple local-exchange rules, they quickly come up with very good salesman tours on real-life" TSP instances [19, 5].
Reference: [32] <author> C.S. Mata and J. Mitchell. </author> <title> Approximation Algorithms for Geometric tour and network problems. </title> <booktitle> In Proc. 11th ACM Symp. Comp. Geom., </booktitle> <pages> pp 360-369, </pages> <year> 1995. </year>
Reference-contexts: An approximation algorithm due to Mata and Mitchell <ref> [32] </ref> achieves a constant factor approximation in &lt; 2 . k-MST: Given n nodes in &lt; d and an integer k 2, find k nodes with the shortest MST.
Reference: [33] <author> J. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple new method for the geometric k-MST problem. </title> <booktitle> In Proc. ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp. 402-208, </pages> <year> 1996. </year>
Reference-contexts: Interestingly, his reduction (owing to its dependence on [21]) also seems to break down for norms other than ` 2 . Finally, we mention that a few weeks after the circulation of the complete version of our paper [2], Mitchell [34] noticed that some ideas in his earlier paper <ref> [33] </ref> can be used to derive a PTAS for most of the problems we have considered. Like our PTAS, his PTAS also relies on a geometric partitioning scheme.
Reference: [34] <author> J. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: Part II- A simple PTAS for geometric k-MST, TSP, and related problems. </title> <type> Preliminary manuscript, </type> <month> April 30, </month> <year> 1996. </year>
Reference-contexts: Interestingly, his reduction (owing to its dependence on [21]) also seems to break down for norms other than ` 2 . Finally, we mention that a few weeks after the circulation of the complete version of our paper [2], Mitchell <ref> [34] </ref> noticed that some ideas in his earlier paper [33] can be used to derive a PTAS for most of the problems we have considered. Like our PTAS, his PTAS also relies on a geometric partitioning scheme.
Reference: [35] <author> C. H. Papadimitriou. </author> <title> Euclidean TSP is NP-complete. </title> <journal> TCS, </journal> <volume> 4, </volume> <pages> pp 237-244, </pages> <year> 1977. </year>
Reference-contexts: In Euclidean TSP the nodes lie in &lt; 2 (or more generally, in &lt; d for some d) and distance is defined using the ` 2 norm. Note that Euclidean TSP is a subcase of metric TSP. Unfortunately, even Euclidean TSP is NP-hard (Papadim-itriou <ref> [35] </ref>, Garey, Graham, and Johnson [12]). Therefore algorithm designers were left with no choice but to consider more modest notions of a good" solution.
Reference: [36] <author> C. H. Papadimitriou. </author> <title> The complexity of the Lin-Kernighan heuristic for the traveling salesman problem. </title> <type> Manuscript, </type> <year> 1990. </year>
Reference-contexts: In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete [26]. (This strongly suggests that no polynomial-time algorithm can find such a local optimum; see [20].) Many variants of Lin-Kernighan are also PLS-complete <ref> [36] </ref>. 1.1 Steiner Tree and other geometric problems. Many network problems identified in the past few decades are very similar to the TSP. Below, we define some of them. We will restrict attention to the Euclidean (or geometric) versions of these problems.
Reference: [37] <author> C. Papadimitriou and M. Yannakakis. </author> <title> The complexity of facets (and some facets of complexity). </title> <editor> In J. </editor> <booktitle> of Computer and System Sciences 28, </booktitle> <pages> pp 244-259, </pages> <note> 1984 (prelim. version in Proc. 24th ACM STOC, </note> <year> 1982). </year>
Reference-contexts: Exact optimization is NP-hard (Karp [23]). So is approximating the optimum within any constant factor (Sahni and Gonzalez [40]). There are also other reasons to believe in fl Supported by NSF CAREER award NSF CCR-9502747 and an Alfred Sloan Fellowship. Email: arora@cs.princeton.edu the TSP's nastiness (cf. D P completeness <ref> [37] </ref> and P LS-completeness [20]). But TSP instances arising in practice are usually quite special, so the hardness results may not necessarily apply to them. In metric TSP the nodes lie in a metric space (i.e., the distances satisfy the triangle inequality).
Reference: [38] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation and complexity classes. </title> <journal> J. of Computer and System Sciences 43, </journal> <pages> pp. 425-440, </pages> <year> 1991. </year>
Reference-contexts: Recently Arora, Lund, Motwani, Sudan, and Szegedy [3] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS. Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis <ref> [38] </ref>), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy [11], Arora and Safra [4]), and the connection between PCPs and hardness of approximation [11]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS.
Reference: [39] <author> G. Reinelt. </author> <title> TSPLIB-A travelling salesman problem library. </title> <journal> ORSA J. Computing, </journal> <volume> 3, </volume> <pages> pp 376-384, </pages> <year> (1991). </year>
Reference-contexts: Using simple local-exchange rules, they quickly come up with very good salesman tours on real-life" TSP instances [19, 5]. But many of these real-life" instances are either Euclidean or derived from Euclidean instances! (See for example the TSPLIB library <ref> [39] </ref>.) Since our structure theorem shows that such instances have near-optimal salesman tours with a very simple structure, the fact that simple heuristics can find such tours should be no mystery. We cannot show, however, that any known heuristic is a PTAS 1 .
Reference: [40] <author> S. Sahni and T. Gonzales. </author> <title> P-complete approximation problems. </title> <journal> JACM, </journal> <volume> 23 </volume> <pages> 555-565, </pages> <year> 1976. </year> <month> 9 </month>
Reference-contexts: For a fascinating history, see Lawler et al. [29]. Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp [23]). So is approximating the optimum within any constant factor (Sahni and Gonzalez <ref> [40] </ref>). There are also other reasons to believe in fl Supported by NSF CAREER award NSF CCR-9502747 and an Alfred Sloan Fellowship. Email: arora@cs.princeton.edu the TSP's nastiness (cf. D P completeness [37] and P LS-completeness [20]).
Reference: [41] <author> L. Trevisan. </author> <title> The n-dimensional Euclidean TSP is Max SNP-hard, </title> <type> Manuscript, </type> <month> May </month> <year> 1996. </year> <note> Available from trevisan@dsi.uniroma1.it. </note>
Reference-contexts: But a running time of 2 O (1=*) poly (n) may be achievable. Can the running time in &lt; d be improved to n O (1=*) or even n O (d=*) ? This question was posed in an earlier draft of this paper. Recently, Trevisan <ref> [41] </ref> has shown that the answer to these questions is probably No." He shows that Euclidean TSP in &lt; O (log n) (n = number of nodes) is MAXSNP-hard under randomized reductions.
Reference: [42] <author> A.Z. Zelikovsky. </author> <title> An 11=6-approximation algorithm for the network Steiner Problem. </title> <journal> Algorithmica, </journal> <volume> 9: </volume> <pages> 463-470, </pages> <year> 1993. </year>
Reference-contexts: A spate of research activity in recent years (starting with the work of Zelikovsky <ref> [42] </ref>) has provided better algorithms; with an approximation ratio approaching 1:10. The metric case is MAX-SNP-hard. Degree-restricted-MST. Given n nodes in &lt; d and an integer k 2, find the minimum cost spanning tree in which every node has degree at most k.
References-found: 42

