URL: http://www.frc.ri.cmu.edu/~axs/doc/ijcai95.ps
Refering-URL: http://www.frc.ri.cmu.edu/~axs/
Root-URL: 
Title: The Focussed D* Algorithm for Real-Time Replanning of A* for dynamic environments, where arc costs
Author: Anthony Stentz U. S. A. 
Address: Pittsburgh, Pennsylvania 15213  
Affiliation: Robotics Institute Carnegie Mellon University  
Date: August 1995.  
Note: In Proceedings of the International Joint Conference on Artificial Intelligence,  generalization  1  
Abstract: Finding the lowest-cost path through a graph is central to many problems, including route planning for a mobile robot. If arc costs change during the traverse, then the remainder of the path may need to be replanned. This is the case for a sensor-equipped mobile robot with imperfect information about its environment. As the robot acquires additional information via its sensors, it can revise its plan to reduce the total cost of the traverse. If the prior information is grossly incomplete, the robot may discover useful information in every piece of sensor data. During replanning, the robot must either wait for the new path to be computed or move in the wrong direction; therefore, rapid replanning is essential. The D* algorithm (Dynamic A*) plans optimal traverses in real-time by incrementally r e p a i r i n g p a t h s t o t h e r o b o t s s t a t e a s n e w information is discovered. This paper describes an extension to D* that focusses the repairs to significantly reduce the total time required for the initial path calculation and subsequent replanning o p e r a t i o n s . T h i s e x t e n s i o n c o m p l e t e s t h e 
Abstract-found: 1
Intro-found: 1
Reference: [Boult, 1987] <author> T. Boult. </author> <title> Updating distance maps when objects move. </title> <booktitle> In Proceedings of the SPIE Conference on Mobile Robots, </booktitle> <year> 1987. </year>
Reference: [Jarvis, 1985] <author> R. A. Jarvis. </author> <title> Collision-free trajectory planning using the distance transforms. </title> <journal> Mechanical Engineering Trans. of the Institution of Engineers, </journal> <volume> ME10(3), </volume> <month> September </month> <year> 1985. </year>
Reference-contexts: A number of algorithms exist for producing optimal traverses given changing arc costs. One algorithm plans an initial path with A* [Nilsson, 1980] or the distance transform <ref> [Jarvis, 1985] </ref> using the prior map information, moves the robot along the path until either it reaches the goal or its sensor discovers a discrepancy between the map and the environment, updates the map, and then replans a new path from the robots current state to the goal [Zelinsky , 1992].
Reference: [Korf, 1987] <author> R. E. Korf. </author> <title> Real-time heuristic search: first results. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <month> July </month> <year> 1987. </year>
Reference-contexts: Likewise, repair of the cost map is generally partial and re-entrant, thus reducing computational costs and enabling real-time performance. Other algorithms exist for addressing the problem of path planning in unknown or dynamic environments <ref> [Korf, 1987; Lumelsky and Stepanov, 1986; Pirzadeh and Snyder, 1990] </ref>, but these algorithms emphasize fast operation and/or low memory usage at the expense of optimality. This paper describes an extension to D* which focusses the cost updates to minimize state expansions and further reduce computational costs.
Reference: [Lumelsky and Stepanov, 1986] <author> V. J. Lumelsky and A. A. Stepanov. </author> <title> Dynamic path planning for a mobile automaton with limited information on the environment. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-31(11), </volume> <month> November </month> <year> 1986. </year>
Reference-contexts: Likewise, repair of the cost map is generally partial and re-entrant, thus reducing computational costs and enabling real-time performance. Other algorithms exist for addressing the problem of path planning in unknown or dynamic environments <ref> [Korf, 1987; Lumelsky and Stepanov, 1986; Pirzadeh and Snyder, 1990] </ref>, but these algorithms emphasize fast operation and/or low memory usage at the expense of optimality. This paper describes an extension to D* which focusses the cost updates to minimize state expansions and further reduce computational costs.
Reference: [Nilsson, 1980] <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence, </booktitle> <publisher> Tioga Publishing Company, </publisher> <year> 1980, </year> <pages> pp. 72-88. </pages>
Reference-contexts: It is important that this replanning be fast, since during this time the robot must either stop or continue to move along a suboptimal path. A number of algorithms exist for producing optimal traverses given changing arc costs. One algorithm plans an initial path with A* <ref> [Nilsson, 1980] </ref> or the distance transform [Jarvis, 1985] using the prior map information, moves the robot along the path until either it reaches the goal or its sensor discovers a discrepancy between the map and the environment, updates the map, and then replans a new path from the robots current state <p> The function is the estimated path cost from the state through to . Provided that satisfies the monotone restriction, then since is optimal when state is removed from the list, an optimal path will be computed to <ref> [Nilsson, 1980] </ref>. The notation is used to refer to a function independent of its domain.
Reference: [Pirzadeh and Snyder, 1990] <author> A. Pirzadeh and W. Snyder. </author> <title> A unified solution to coverage and search in explored and unexplored terrains using indirect control. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1990. </year>
Reference-contexts: Likewise, repair of the cost map is generally partial and re-entrant, thus reducing computational costs and enabling real-time performance. Other algorithms exist for addressing the problem of path planning in unknown or dynamic environments <ref> [Korf, 1987; Lumelsky and Stepanov, 1986; Pirzadeh and Snyder, 1990] </ref>, but these algorithms emphasize fast operation and/or low memory usage at the expense of optimality. This paper describes an extension to D* which focusses the cost updates to minimize state expansions and further reduce computational costs.
Reference: [Ramalingam and Reps, 1992] <author> G. Ramalingam and T. Reps. </author> <title> An incremental algorithm for a generalization of the shortest-path problem. </title> <institution> University of Wisconsin Technical Report #1087, </institution> <month> May </month> <year> 1992. </year>
Reference: [Stentz, 1993] <author> A. Stentz. </author> <title> Optimal and efficient path planning for unknown and dynamic environments. </title> <institution> Carnegie Mellon Robotics Institute Technical Report CMU-RI-TR-93-20, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: But sinc e for states, the state definition for suffices for both kinds of states. T o avoid cycles in the backpointers, it should be noted that ties in are sorted by increasing on the list <ref> [Stentz, 1993] </ref>. <p> If is able to lower the path cost of a state that is not an immediate descendant (lines L21 through L23), is placed back on the list for future expansion. This action is required to avoid creating a closed loop in the backpointers <ref> [Stentz, 1993] </ref>. If the path cost of is able to be reduced by a suboptimal neighbor (lines L25 through L28), the neighbor is placed back on the list. Thus, the update is postponed until the neighbor has an optimal path cost.
Reference: [Stentz, 1994] <author> A. Stentz. </author> <title> Optimal and efficient path planning for partially-known environments. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1994. </year>
Reference: [Trovato, 1990] <author> K. I. Trovato. </author> <title> Differential A*: an adaptive search method illustrated with robot path planning for moving obstacles and goals, and an uncertain environment. </title> <journal> Journal of Pattern Recognition and Artificial Intelligence, </journal> <volume> 4(2), </volume> <year> 1990. </year>
Reference: [Zelinsky, 1992] <author> A. Zelinsky. </author> <title> A mobile robot exploration algorithm. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 8(6), </volume> <month> December </month> <year> 1992. </year>
References-found: 11

