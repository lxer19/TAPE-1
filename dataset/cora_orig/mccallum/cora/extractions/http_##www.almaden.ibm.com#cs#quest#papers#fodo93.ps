URL: http://www.almaden.ibm.com/cs/quest/papers/fodo93.ps
Refering-URL: http://www.almaden.ibm.com/cs/quest/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fragrawal,arun@almaden.ibm.comg  
Title: Efficient Similarity Search In Sequence Databases  
Author: Rakesh Agrawal and Christos Faloutsos and Arun Swami 
Date: March 4, 1994  
Address: 650 Harry Road, San Jose, CA 95120  
Affiliation: IBM Almaden Research Center  
Abstract: We propose an indexing method for time sequences for processing similarity queries. We use the Discrete Fourier Transform (DFT) to map time sequences to the frequency domain, the crucial observation being that, for most sequences of practical interest, only the first few frequencies are strong. Another important observation is Parseval's theorem, which specifies that the Fourier transform preserves the Euclidean distance in the time or frequency domain. Having thus mapped sequences to a lower-dimensionality space by using only the first few Fourier coefficients, we use R fl -trees to index the sequences and efficiently answer similarity queries. We provide experimental results which show that our method is superior to search based on sequential scanning. Our experiments show that a few coefficients (1-3) are adequate to provide good performance. The performance gain of our method increases with the number and length of sequences.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal, T. Imielinski, and A. Swami, </author> <title> "Database Mining: A Performance Perspective", </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <note> Special issue on Learning and Discovery in Knowledge-Based Databases, (to appear). </note>
Reference-contexts: There have been several efforts to model time-sequenced data, to design languages to query such data, and to develop access structures to efficiently process such queries (see [28] for a bibliography). Most of the work, however, has focussed on "exact" queries. New emerging applications, particularly database mining applications <ref> [1] </ref>, require that databases be enhanced with the capability to process "similarity" queries. <p> The work reported in this paper has been done in the context of the Quest project <ref> [1] </ref> at the IBM Almaden Research Center. In Quest, we are exploring the various aspects of the database mining problem.
Reference: [2] <author> R. Agrawal, S. Ghosh, T. Imielinski, B. Iyer, and A. Swami, </author> <title> "An Interval Classifier for Database Mining Applications", </title> <booktitle> VLDB 92 , Vancouver, </booktitle> <month> August </month> <year> 1992. </year>
Reference-contexts: In Quest, we are exploring the various aspects of the database mining problem. Besides the problem of queries over large sequences, some other problems that we have looked into include the enhancement of the database capability with the classification queries <ref> [2] </ref> and with "what goes together" kinds of association queries [3]. The eventual goal is to build an experimental system that can be used for mining rules embedded in massive databases. We believe that database mining is an important application area, combining commercial interest with intriguing theoretical questions.
Reference: [3] <author> R. Agrawal, T. Imielinski, and A. Swami, </author> <title> "Mining Association Rules between Sets of Items in Large Databases", </title> <booktitle> ACM SIGMOD, </booktitle> <address> Washington D.C., </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Besides the problem of queries over large sequences, some other problems that we have looked into include the enhancement of the database capability with the classification queries [2] and with "what goes together" kinds of association queries <ref> [3] </ref>. The eventual goal is to build an experimental system that can be used for mining rules embedded in massive databases. We believe that database mining is an important application area, combining commercial interest with intriguing theoretical questions.
Reference: [4] <author> S.F. Altschul, W. Gish, W. Miller, </author> <title> E.W. Myers and D.J. Lipman, "A Basic Local Alignment Search Tool" Journal of Molecular Biology, </title> <year> 1990. </year>
Reference-contexts: Related efforts, but not directly applicable to numerical sequences, include algorithms for approximate string searching [30, 6] with full text scanning, approximate searching methods for DNA sequences <ref> [4] </ref>, and clustering algorithms in information retrieval and library science [24]. For numerical sequences, we propose extracting k features from every sequence, mapping it to k-dimensional space, and then using a multidimensional index to store and search these points.
Reference: [5] <author> F. Aurenhammer, </author> <title> "Voronoi Diagrams A Survey of a Fundamental Geometric Data Structure" ACM Computing Surveys 23(3) </title> <type> 345-405, </type> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Shasha and Wang [27] proposed an indexing method that uses the triangular inequality and some precomputed distances to prune the search. However, the space overhead of the method seems quadratic on the number of objects, which may make it prohibitive for large databases. Aurenhammer <ref> [5] </ref> surveyed recent research on Voronoi diagrams, along with their use for nearest neighbor queries. Although Voronoi diagrams work well for approximate matches in 2-dimensional spaces, they need intricate transformations to work for a 3-d space, and they do not work at all for higher dimensionalities.
Reference: [6] <author> Ricardo Baeza-Yates and Gaston H. Gonnet, </author> <title> "A New Approach to Text Searching", </title> <journal> Comm. of ACM, </journal> <volume> 35 10, </volume> <month> Oct. </month> <year> 1992, </year> <pages> 74-82. </pages>
Reference-contexts: Jagadish [17] suggested using a few minimum bounding rectangles to extract features from shapes and subsequently managing the resulting vectors using a spatial access method, like k-d-B-trees, grid files, etc. Related efforts, but not directly applicable to numerical sequences, include algorithms for approximate string searching <ref> [30, 6] </ref> with full text scanning, approximate searching methods for DNA sequences [4], and clustering algorithms in information retrieval and library science [24].
Reference: [7] <author> N. Beckmann, H.-P. Kriegel, R. Schneider, and B. Seeger, </author> <title> "The R*-tree: an efficient and robust access method for points and rectangles", </title> <booktitle> ACM SIGMOD, </booktitle> <pages> pages 322-331, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: For numerical sequences, we propose extracting k features from every sequence, mapping it to k-dimensional space, and then using a multidimensional index to store and search these points. The multidimensional indexing methods currently in use are R fl -trees <ref> [7] </ref> and the rest of the R-tree and k-d-Btree family [13, 16, 18]; linear quadtrees [25]; and grid-files [21].
Reference: [8] <author> L. G. Brown, </author> <title> "A Survey of Image Registration Techniques", </title> <journal> ACM Computing Surveys, </journal> <volume> 24(4), </volume> <pages> pages 325-376, </pages> <month> December </month> <year> 1992. </year>
Reference: [9] <author> C. Chatfield, </author> <title> The Analysis of Time Series: an Introduction, </title> <publisher> Chapman and Hall, </publisher> <address> London & New York, </address> <year> 1984, </year> <note> Third Edition. </note>
Reference-contexts: For example, random walks (also known as brown noise or brownian walks) exhibit an energy spectrum of O (f 2 ) [26], and therefore an amplitude spectrum of O (f 1 ). Stock movements and exchange rates have been successfully modeled as random walks (e.g., <ref> [9, 19] </ref>). Figure 1 illustrates a synthetically generated random walk and its amplitude spectrum in doubly logarithmic plot | notice the close approximation of the 1=f line.
Reference: [10] <author> R. D. Edwards and J. Magee, </author> <title> Technical Analysis of Stock Trends, </title> <publisher> John Magee, </publisher> <address> Springfield, Massachusetts, </address> <year> 1966, </year> <note> 5th Edition, second printing. </note>
Reference-contexts: Our mathematical argument for keeping the first few Fourier coefficients agrees with the intuitive 7 argument of the Dow Jones theory for stock price movement (see, for example, <ref> [10] </ref>). This theory tries to detect primary and secondary trends in the stock market movement, and ignores minor trends.
Reference: [11] <author> K. Fukunaga, </author> <title> Introduction to Statistical Pattern Recognition, </title> <publisher> Academic Press, </publisher> <year> 1990, </year> <note> 2nd Edition. 15 </note>
Reference-contexts: The distance-preservation requirement is met by any orthonormal transform <ref> [11] </ref>, DFT being one of them.
Reference: [12] <author> A. Gelb, </author> <title> Applied Optimal Estimation, </title> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: In fact, the Euclidean distance is the optimal distance measure for estimation <ref> [12] </ref>, if signals are corrupted by Gaussian, additive noise. Thus, if ~q is our query and ~x is a corrupted version of it in the database, a searching method using the Euclidean distance should produce good results.
Reference: [13] <author> A. Guttman, "R-trees: </author> <title> a dynamic index structure for spatial searching", </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 47-57, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: For numerical sequences, we propose extracting k features from every sequence, mapping it to k-dimensional space, and then using a multidimensional index to store and search these points. The multidimensional indexing methods currently in use are R fl -trees [7] and the rest of the R-tree and k-d-Btree family <ref> [13, 16, 18] </ref>; linear quadtrees [25]; and grid-files [21]. There are two subtle problems with this approach that must be addressed: * Completeness of feature extraction: How to extract features, and how to guarantee that we do not miss any qualifying object (time sequence, in our case).
Reference: [14] <author> Richard Wesley Hamming, </author> <title> Digital Filters, </title> <booktitle> Prentice-Hall Signal Processing Series, </booktitle> <address> Englewood Cliffs, N.J., </address> <year> 1977. </year>
Reference-contexts: Experiments [23] indicate that R fl -trees work well for up to 20 dimensions. The feature extraction method should therefore be such that a few features are sufficient to differentiate between objects. We propose to use the Discrete Fourier Transform <ref> [22, 14] </ref> for feature extraction. Given a sequence, we transform it from the time domain to the frequency domain. We then index only on the first few frequencies, dropping all other frequencies. <p> The importance of the DFT is the existence of a fast algorithm, the Fast Fourier Transform (FFT), that can calculate the DFT coefficients in O (n log n) time. Further information on the Fourier transform can be found in any digital signal processing textbook, for example, <ref> [22, 14] </ref>.
Reference: [15] <author> G. M. Hunter and K. Steiglitz, </author> <title> "Operations on images using quad trees", </title> <journal> IEEE Trans. on PAMI, </journal> <volume> PAMI-1(2):145-153, </volume> <month> April </month> <year> 1979. </year>
Reference-contexts: For linear quadtrees, the effort is proportional to the hyper surface of the query region <ref> [15] </ref>; the hyper surface grows exponentially with the dimensionality. Grid files face similar problems, since they require a directory that grows exponentially with the dimensionality. The R-tree based methods seem to be most robust for higher dimensions, provided that the fanout of the R-tree nodes remains &gt; 2.
Reference: [16] <author> H. V. Jagadish, </author> <title> "Spatial search with polyhedra", </title> <booktitle> Proc. Sixth IEEE Int'l Conf. on Data Engineering, </booktitle> <month> February </month> <year> 1990. </year>
Reference-contexts: For numerical sequences, we propose extracting k features from every sequence, mapping it to k-dimensional space, and then using a multidimensional index to store and search these points. The multidimensional indexing methods currently in use are R fl -trees [7] and the rest of the R-tree and k-d-Btree family <ref> [13, 16, 18] </ref>; linear quadtrees [25]; and grid-files [21]. There are two subtle problems with this approach that must be addressed: * Completeness of feature extraction: How to extract features, and how to guarantee that we do not miss any qualifying object (time sequence, in our case).
Reference: [17] <author> H. V. Jagadish, </author> <title> "A retrieval technique for similar shapes", </title> <booktitle> Proc. ACM SIGMOD Conf., </booktitle> <pages> pages 208-217, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Aurenhammer [5] surveyed recent research on Voronoi diagrams, along with their use for nearest neighbor queries. Although Voronoi diagrams work well for approximate matches in 2-dimensional spaces, they need intricate transformations to work for a 3-d space, and they do not work at all for higher dimensionalities. Jagadish <ref> [17] </ref> suggested using a few minimum bounding rectangles to extract features from shapes and subsequently managing the resulting vectors using a spatial access method, like k-d-B-trees, grid files, etc.
Reference: [18] <author> D. Lomet and B. Salzberg, </author> <title> "The Hb-Tree: a Multiattribute Indexing Method with Good Guaranteed Performance", </title> <journal> ACM TODS, </journal> <volume> 15(4), </volume> <pages> pages 625-658, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: For numerical sequences, we propose extracting k features from every sequence, mapping it to k-dimensional space, and then using a multidimensional index to store and search these points. The multidimensional indexing methods currently in use are R fl -trees [7] and the rest of the R-tree and k-d-Btree family <ref> [13, 16, 18] </ref>; linear quadtrees [25]; and grid-files [21]. There are two subtle problems with this approach that must be addressed: * Completeness of feature extraction: How to extract features, and how to guarantee that we do not miss any qualifying object (time sequence, in our case).
Reference: [19] <author> B. Mandelbrot. </author> <title> Fractal Geometry of Nature, W.H. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: For example, random walks (also known as brown noise or brownian walks) exhibit an energy spectrum of O (f 2 ) [26], and therefore an amplitude spectrum of O (f 1 ). Stock movements and exchange rates have been successfully modeled as random walks (e.g., <ref> [9, 19] </ref>). Figure 1 illustrates a synthetically generated random walk and its amplitude spectrum in doubly logarithmic plot | notice the close approximation of the 1=f line. <p> There is another group of signals, called black noise [26]. Their energy spectrum follow O (f b ), b &gt; 2, which is even more skewed than the spectrum of the brown noise. Such signals model successfully, for example, the water level of rivers as they vary over time <ref> [19] </ref>. 4 Performance Experiments To determine the effectiveness of our proposed method (the F -index method), we compared it to a sequential scanning method. We used the R fl -tree for the index.
Reference: [20] <author> A. Motro, </author> <title> "VAGUE: A User Interface to Relational Databases that Permits Vague Queries," </title> <journal> ACM Trans. on Information Systems (TOIS), </journal> <volume> 6(3), </volume> <pages> pages 187-214, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: It could be either user-defined, or determined automatically (eg., *=10% of the 'energy' of the query sequence; see Eq. 3 for the definition of 'energy'). Approximate matching has been attracting increasing interest lately. Motro described a user interface for vague queries <ref> [20] </ref>. Shasha and Wang [27] proposed an indexing method that uses the triangular inequality and some precomputed distances to prune the search. However, the space overhead of the method seems quadratic on the number of objects, which may make it prohibitive for large databases.
Reference: [21] <author> J. Nievergelt, H. Hinterberger, and K. C. Sevcik, </author> <title> "The grid file: an adaptable, symmetric multikey file structure", </title> <journal> ACM TODS, </journal> <volume> 9(1) </volume> <pages> 38-71, </pages> <month> March </month> <year> 1984. </year>
Reference-contexts: The multidimensional indexing methods currently in use are R fl -trees [7] and the rest of the R-tree and k-d-Btree family [13, 16, 18]; linear quadtrees [25]; and grid-files <ref> [21] </ref>. There are two subtle problems with this approach that must be addressed: * Completeness of feature extraction: How to extract features, and how to guarantee that we do not miss any qualifying object (time sequence, in our case).
Reference: [22] <author> A. V. Oppenheim and R. W. Schafer, </author> <title> Digital Signal Processing, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1975. </year>
Reference-contexts: Experiments [23] indicate that R fl -trees work well for up to 20 dimensions. The feature extraction method should therefore be such that a few features are sufficient to differentiate between objects. We propose to use the Discrete Fourier Transform <ref> [22, 14] </ref> for feature extraction. Given a sequence, we transform it from the time domain to the frequency domain. We then index only on the first few frequencies, dropping all other frequencies. <p> Given a sequence, we transform it from the time domain to the frequency domain. We then index only on the first few frequencies, dropping all other frequencies. This approach addresses the two problems cited above as follows: 2 * Completeness of feature extraction: Parseval's theorem <ref> [22] </ref>, discussed in Section 2, guarantees that the distance between two sequences in the frequency domain is the same as the distance between them in the time domain. * Dimensionality curse: As we discuss in subsection 3.3, a large family of interesting sequences exhibit strong amplitudes for the first few frequencies. <p> The importance of the DFT is the existence of a fast algorithm, the Fast Fourier Transform (FFT), that can calculate the DFT coefficients in O (n log n) time. Further information on the Fourier transform can be found in any digital signal processing textbook, for example, <ref> [22, 14] </ref>. <p> Further information on the Fourier transform can be found in any digital signal processing textbook, for example, [22, 14]. The n-point Discrete Fourier Transform <ref> [22] </ref> of a signal ~x = [x t ], t = 0; . . . ; n 1 is defined to be a sequence ~ X of n complex numbers X f , f = 0; . . . ; n 1, given by X f = 1= n t=0 where <p> square of the amplitude (E (c) jcj 2 c c fl ). * The energy E (~x) of a sequence ~x is defined as the sum of energies at every point of the sequence: E (~x) k ~x k 2 t=0 A fundamental observation for this paper is Parseval's theorem <ref> [22] </ref>: 3 Theorem 1 (Parseval) Let ~ X be the Discrete Fourier Transform of the sequence ~x. Then we have n1 X jx t j 2 = f=0 That is, the energy in the time domain is the same as the energy in the frequency domain.
Reference: [23] <author> M. Otterman, </author> <title> "Approximate Matching with High Dimensionality R-trees", M.Sc. </title> <type> scholarly paper, </type> <institution> Dept. of Computer Science, Univ. of Maryland, College Park, MD, </institution> <year> 1992. </year>
Reference-contexts: Grid files face similar problems, since they require a directory that grows exponentially with the dimensionality. The R-tree based methods seem to be most robust for higher dimensions, provided that the fanout of the R-tree nodes remains &gt; 2. Experiments <ref> [23] </ref> indicate that R fl -trees work well for up to 20 dimensions. The feature extraction method should therefore be such that a few features are sufficient to differentiate between objects. We propose to use the Discrete Fourier Transform [22, 14] for feature extraction. <p> We discuss in subsection 3.3 why f c can be taken to be small (&lt; 5). As discussed earlier, we recommend the R fl -trees as the indexing structure, since it has been shown to work well for at least up to 20 dimensions <ref> [23] </ref>. This index will be called `F -index' henceforth. 3. For a range query, obtain the first f c Fourier coefficients of the query sequence. Use the F - index to retrieve the set of matching sequences that are at most * distance away from the query sequence. 4.
Reference: [24] <author> G. Salton and M.J. McGill, </author> <title> Introduction to Modern Information Retrieval, </title> <publisher> McGraw-Hill, </publisher> <year> 1983. </year>
Reference-contexts: Related efforts, but not directly applicable to numerical sequences, include algorithms for approximate string searching [30, 6] with full text scanning, approximate searching methods for DNA sequences [4], and clustering algorithms in information retrieval and library science <ref> [24] </ref>. For numerical sequences, we propose extracting k features from every sequence, mapping it to k-dimensional space, and then using a multidimensional index to store and search these points.
Reference: [25] <author> H. Samet, </author> <title> The Design and Analysis of Spatial Data Structures, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The multidimensional indexing methods currently in use are R fl -trees [7] and the rest of the R-tree and k-d-Btree family [13, 16, 18]; linear quadtrees <ref> [25] </ref>; and grid-files [21]. There are two subtle problems with this approach that must be addressed: * Completeness of feature extraction: How to extract features, and how to guarantee that we do not miss any qualifying object (time sequence, in our case).
Reference: [26] <author> M. Schroeder, </author> <title> Fractals, Chaos, Power Laws: Minutes From an Infinite Paradise, W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: The energy spectrum of white noise follows O (f 0 ) <ref> [26] </ref>, that is, it has the same energy in every frequency. This is bad for the F -index, because it implies that all the frequencies are equally important. However, we have strong reasons to believe that real signals have a skewed energy spectrum. <p> However, we have strong reasons to believe that real signals have a skewed energy spectrum. For example, random walks (also known as brown noise or brownian walks) exhibit an energy spectrum of O (f 2 ) <ref> [26] </ref>, and therefore an amplitude spectrum of O (f 1 ). Stock movements and exchange rates have been successfully modeled as random walks (e.g., [9, 19]). <p> The JPEG image compression standard [29] exactly exploits this phenomenon, effectively ignoring the high-frequency components of the Discrete Cosine Transform, which is closely related to the Fourier transform. If the image consisted of white noise, no compression would be possible at all. Birkhoff's theory <ref> [26] </ref> claims that `interesting' signals, such as musical scores and other works of art, consist of pink noise, whose energy spectrum follows O (f 1 ). <p> The energy spectrum of pink noise lies in-between. Signals with pink noise also have their energy concentrated in the first few frequencies (but not as few as in the random walk). There is another group of signals, called black noise <ref> [26] </ref>. Their energy spectrum follow O (f b ), b &gt; 2, which is even more skewed than the spectrum of the brown noise.
Reference: [27] <author> D. Shasha and T-L. Wang, </author> <title> "New techniques for best-match retrieval", </title> <journal> ACM TOIS, </journal> <volume> 8(2) </volume> <pages> 140-158, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: It could be either user-defined, or determined automatically (eg., *=10% of the 'energy' of the query sequence; see Eq. 3 for the definition of 'energy'). Approximate matching has been attracting increasing interest lately. Motro described a user interface for vague queries [20]. Shasha and Wang <ref> [27] </ref> proposed an indexing method that uses the triangular inequality and some precomputed distances to prune the search. However, the space overhead of the method seems quadratic on the number of objects, which may make it prohibitive for large databases.
Reference: [28] <author> R. Stam and R. Snodgrass, </author> <title> "A Bibliography on Temporal Databases", </title> <journal> IEEE Bulletin on Data Engineering, </journal> <volume> 11(4), </volume> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: 1 Introduction Sequences constitute a large portion of data stored in computers. There have been several efforts to model time-sequenced data, to design languages to query such data, and to develop access structures to efficiently process such queries (see <ref> [28] </ref> for a bibliography). Most of the work, however, has focussed on "exact" queries. New emerging applications, particularly database mining applications [1], require that databases be enhanced with the capability to process "similarity" queries.
Reference: [29] <author> G. K. </author> <title> Wallace "The JPEG Still Picture Compression Standard", </title> <journal> CACM, </journal> <volume> 34(4) </volume> <pages> 31-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: In addition to the above, it is believed that several other families of real signals are not white noise. For example, 2-d signals, like photographs, are far from white noise, exhibiting a few strong coefficients in the lower spatial frequencies. The JPEG image compression standard <ref> [29] </ref> exactly exploits this phenomenon, effectively ignoring the high-frequency components of the Discrete Cosine Transform, which is closely related to the Fourier transform. If the image consisted of white noise, no compression would be possible at all.
Reference: [30] <author> Sun Wu and Udi Manber, </author> <title> "Text searching allowing errors", </title> <journal> Comm. of ACM (CACM), </journal> <volume> 35(10) </volume> <pages> 83-91, </pages> <month> October </month> <year> 1992. </year> <month> 16 </month>
Reference-contexts: Jagadish [17] suggested using a few minimum bounding rectangles to extract features from shapes and subsequently managing the resulting vectors using a spatial access method, like k-d-B-trees, grid files, etc. Related efforts, but not directly applicable to numerical sequences, include algorithms for approximate string searching <ref> [30, 6] </ref> with full text scanning, approximate searching methods for DNA sequences [4], and clustering algorithms in information retrieval and library science [24].
References-found: 30

