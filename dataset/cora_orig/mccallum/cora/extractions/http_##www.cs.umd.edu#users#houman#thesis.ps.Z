URL: http://www.cs.umd.edu/users/houman/thesis.ps.Z
Refering-URL: http://www.cs.umd.edu/users/houman/academic.html
Root-URL: 
Title: Permuted Substring Matching, with Applications to Computational Biology By Houman Alborzi An Abstract of A Thesis  
Degree: Submitted to  in partial fulfillment of the requirements for the degree of Master of Science Department of Computer Science 1997 Professor Eric Torng  
Affiliation: Michigan State University  
Abstract-found: 0
Intro-found: 1
Reference: <institution> Bibliography </institution>
Reference: [Aoe94] <author> Jun-ichi Aoe. </author> <title> Computer Algorithms: String Pattern Matching Strategies. </title> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: We denote this attribute of a restriction pattern as its resolution with respect to the genome. 8 1.5 Background on Searching The problem of pattern matching has been extensively studied. The basic problem is to search a text for all the locations that match a given search pattern <ref> [Aoe94] </ref>. This match could be an exact or an approximate one. For an exact match algorithm, the result will be all the locations in the text which match the pattern exactly. In most approximate matching contexts, the text and pattern can have up to k mismatches. <p> In most approximate matching contexts, the text and pattern can have up to k mismatches. The search pattern is usually a sequence of characters. However variants where the pattern is a regular expression, a sequence of characters, or even a context free grammar have been investigated <ref> [Aoe94, LW95] </ref>. In these pattern matching variants, the characters of the search pattern and the text are usually from a finite alphabet. Also, the characters have an equivalence relation, under which any two characters that are matched together will equivalently match or not match any third character.
Reference: [BM77] <author> Robert S. Boyer and J. Strother Moore. </author> <title> A fast string matching algorithm. </title> <journal> Communications of the ACM, </journal> 20(10) 62-72, October 1977. 
Reference-contexts: Their algorithm takes O (n + m) time, where n is size of the text and m is length of the pattern. In <ref> [BM77] </ref>, Boyer and Moore, provide a faster algorithm that basically skips some parts of the text while scanning it. It is another O (n + m) algorithm. This work assumes the input text will be stored in random access memory, so the cost of skipping text is zero.
Reference: [Dev95] <author> Jay L. Devore. </author> <title> Probability and statistics for engineering and the sciences. </title> <publisher> Duxbury Press, </publisher> <address> 4th edition, </address> <year> 1995. </year>
Reference-contexts: If we consider l to be continuous rather than discrete variable, we obtain, p (l) = e l (2.1) where = ln (1 p) (2.2) 11 The same model for restriction sites has been proposed before in [Wat95]. We attempted to confirm the model by running the Chi-Square test <ref> [Dev95] </ref> for the Haemophilus influenzae Rd genome [FAW + 95] with different recognition sites. The results of the Chi-Square test (Table 2.1) show that in most cases, the hypothesis that restriction sites are uniformly distributed is rejected with a high confidence level.
Reference: [FAW + 95] <author> R. D. Fleischmann, M. D. Adams, O. White, R.A. Clayton, E. F. Kirkness, A. R. Kerlavage, C. J. Bult, J. F. Tomb, B. A. Dougherty, J. M. Merrick, et al. </author> <title> Whole-genome random sequencing and assembly of haemophilus infuenzae Rd. </title> <journal> Science, </journal> <volume> 269(5223) </volume> <pages> 496-512, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: We attempted to confirm the model by running the Chi-Square test [Dev95] for the Haemophilus influenzae Rd genome <ref> [FAW + 95] </ref> with different recognition sites. The results of the Chi-Square test (Table 2.1) show that in most cases, the hypothesis that restriction sites are uniformly distributed is rejected with a high confidence level.
Reference: [FGW + 95] <author> C. M. Fraser, J. D. Goycayne, O. White, M. D. Adams, R. A. Clayton, R. D. Fleischmann, C. J. Bult, A. R. Kerlavage, G. Sutton, J. M. Kelley, et al. </author> <title> The minimal gene complement of mycoplasma genitalium. </title> <journal> Science, </journal> <volume> 270(5235) </volume> <pages> 397-403, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: An isolate receives a score of l 0 l . Note that all isolates in category 1 have a score of 1, and those in category 3 have a score of 0. 3.2 Resolution Metric We experimentally measured the resolution of isolates for the Mycoplasma geni-talium genome <ref> [FGW + 95] </ref> using the TGATCA recognition site which cuts the genome into 500 fragments. We plotted them in Figure 3.2 for ffi = 0:04 and Figure 3.3 for ffi = 0:10. In both cases the resolution of isolates increases with the length of the isolate. <p> Lower Bound non-overlapping isolates of the genome. P (N; k; 3) 1 1 ffi k In Figure 3.4, the lower bound and the real percentage of isolates in category 3 is shown. The genome is Mycoplasma genitalium genome <ref> [FGW + 95] </ref>, and the recognition site is TGATCA which cuts the genome into 500 fragments. As it can be seen, if the isolate has more than 8 fragments, we don't have any isolate in category 3 even for a big error value of 20%.
Reference: [GB91] <author> Gaston H. Gonnet and Ricardo Baeza-Yates. </author> <title> Handbook of Algorithms and Data Structures. </title> <booktitle> Assison-Wesley, 2nd edition, </booktitle> <year> 1991. </year>
Reference-contexts: By this assumption, the Boyer-Moore algorithm and its variants are considered to be the fastest algorithms available with an average running time of O ( log m m n) which is optimal <ref> [GB91] </ref>. Karp and Rabin [KR87] proposed a randomized algorithm to improve the brute force search. In their algorithm, a hash function is 9 used to compare the pattern and substrings of the text. Whenever these two match, the algorithm performs a character by character matching. <p> Mainly we need to search and sort restriction pattern data. If the data has a uniform distribution, we can use interpolation sort with time complexity of O (n) and interpolation search with time complexity of O (log log n) <ref> [GB91] </ref>. In order to use these fast sort and search algorithms, we should build a key of restriction pattern data that has uniform distri 13 bution. For any distribution, the function needed to make it a uniform distribution is its CDF function.
Reference: [KCTP96] <author> Jin Kim, James R. Cole, Eric Trong, and Sakti Pramanik. </author> <title> Inferring relatedness of a macromolecule to a sequence database without sequencing. </title> <booktitle> In Proceedings of the Fourth International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 125-133, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: The next section formally defines the terms described before. It can be skipped in a first reading. 1.3 Formal Definitions Most definitions in this section are based on those in <ref> [KCTP96] </ref>. Nevertheless, we use more definitions to facilitate the communication. Definition 1.1.
Reference: [KMP77] <author> Donald E. Knuth, James H. Morris, and Vaughan R. Pratt. </author> <title> Fast pattern matching in strings. </title> <journal> SIAM Journal on Computing, </journal> <volume> 6(2) </volume> <pages> 323-350, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: In these pattern matching variants, the characters of the search pattern and the text are usually from a finite alphabet. Also, the characters have an equivalence relation, under which any two characters that are matched together will equivalently match or not match any third character. In <ref> [KMP77] </ref>, Knuth, Morris and Pratt propose an algorithm that solves the problem in only one scan of the text by building a finite state automata from the search pattern.
Reference: [KR87] <author> Richard M. Karp and Michael O. Rabin. </author> <title> Efficient randomized pattern-macthing algorithms. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 31(2) </volume> <pages> 249-260, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: By this assumption, the Boyer-Moore algorithm and its variants are considered to be the fastest algorithms available with an average running time of O ( log m m n) which is optimal [GB91]. Karp and Rabin <ref> [KR87] </ref> proposed a randomized algorithm to improve the brute force search. In their algorithm, a hash function is 9 used to compare the pattern and substrings of the text. Whenever these two match, the algorithm performs a character by character matching.
Reference: [LW95] <author> Eric S. Lander and Michael S. Waterman. </author> <title> Calculating the Secrets of Life. </title> <publisher> National Academy Press, </publisher> <year> 1995. </year> <pages> 38 39 </pages>
Reference-contexts: since the particular DNA sequence is part of our previously sequenced genome, the problem of finding the DNA sequence of the gene reduces to finding the location of the gene on the genome. 1.1 Genome, Genes, and DNA Genetics goes back to the pioneering work of Gregor Mendel in 1865 <ref> [LW95] </ref>. Mendel hypothesized that traits are affected by discrete factors, which an offspring inherits from its parents. Today, we call those factors genes. In 1952, Alfred Hershey and Martha Chase showed that genes are encoded in DNA molecules which exist in any living organism's cells. <p> In most approximate matching contexts, the text and pattern can have up to k mismatches. The search pattern is usually a sequence of characters. However variants where the pattern is a regular expression, a sequence of characters, or even a context free grammar have been investigated <ref> [Aoe94, LW95] </ref>. In these pattern matching variants, the characters of the search pattern and the text are usually from a finite alphabet. Also, the characters have an equivalence relation, under which any two characters that are matched together will equivalently match or not match any third character.
Reference: [Wat95] <author> Michael S. Waterman. </author> <title> Introduction to Computational Biology. </title> <publisher> Chapman and Hall, </publisher> <year> 1995. </year>
Reference-contexts: If we consider l to be continuous rather than discrete variable, we obtain, p (l) = e l (2.1) where = ln (1 p) (2.2) 11 The same model for restriction sites has been proposed before in <ref> [Wat95] </ref>. We attempted to confirm the model by running the Chi-Square test [Dev95] for the Haemophilus influenzae Rd genome [FAW + 95] with different recognition sites.
References-found: 12

