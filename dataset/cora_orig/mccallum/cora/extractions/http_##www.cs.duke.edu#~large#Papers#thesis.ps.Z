URL: http://www.cs.duke.edu/~large/Papers/thesis.ps.Z
Refering-URL: http://www.cs.duke.edu/~large/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Efficient External-Memory Data Structures and Applications  
Author: Lars Arge 
Degree: Ph.D. Dissertation  
Address: Denmark  
Affiliation: Department of Computer Science University of Aarhus  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Aggarwal, B. Alpern, A. K. Chandra, and M. Snir. </author> <title> A model for hierarchical memory. </title> <booktitle> In Proc. ACM Symp. on Theory of Computation, </booktitle> <pages> pages 305-314, </pages> <year> 1987. </year>
Reference-contexts: The internal memory and the secondary storage device together are viewed as an extended memory with at least M + N locations. The first M locations in the extended memory constitute the internal memory | we denote these s <ref> [1] </ref>; s [2]; : : :; s [M ] | and the rest of the extended memory constitute secondary storage.
Reference: [2] <author> A. Aggarwal and A. K. Chandra. </author> <title> Virtual memory algorithms. </title> <booktitle> In Proc. ACM Symp. on Theory of Computation, </booktitle> <pages> pages 173-185, </pages> <year> 1988. </year>
Reference-contexts: The internal memory and the secondary storage device together are viewed as an extended memory with at least M + N locations. The first M locations in the extended memory constitute the internal memory | we denote these s [1]; s <ref> [2] </ref>; : : :; s [M ] | and the rest of the extended memory constitute secondary storage.
Reference: [3] <author> A. Aggarwal, A. K. Chandra, and M. Snir. </author> <title> Hierarchical memory with block transfer. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Comp. Sci., </booktitle> <pages> pages 204-216, </pages> <year> 1987. </year>
Reference: [4] <author> A. Aggarwal and G. Plaxton. </author> <title> Optimal parallel sorting in multi-level storage. </title> <booktitle> Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 659-668, </pages> <year> 1994. </year>
Reference: [5] <author> A. Aggarwal and J. S. Vitter. </author> <title> The Input/Output complexity of sorting and related problems. </title> <journal> Communications of the ACM, </journal> <volume> 31(9) </volume> <pages> 1116-1127, </pages> <year> 1988. </year>
Reference-contexts: In this paper we work in a model introduced by Aggarwal and Vitter <ref> [5] </ref> where an I/O-operation swaps B records between external storage and the internal memory, capable of holding M records. An algorithm for this model is called an I/O-algorithm. Aggarwal and Vitter [5] consider the I/O-complexity of a number of specific sorting-related problems, namely sorting, fast Fourier transformation, permutation networks, permuting and <p> In this paper we work in a model introduced by Aggarwal and Vitter <ref> [5] </ref> where an I/O-operation swaps B records between external storage and the internal memory, capable of holding M records. An algorithm for this model is called an I/O-algorithm. Aggarwal and Vitter [5] consider the I/O-complexity of a number of specific sorting-related problems, namely sorting, fast Fourier transformation, permutation networks, permuting and matrix transposition. They give asymptotically matching upper and lower bounds for these problems. The fl This paper is a slightly revised version of DAIMI PB-407. <p> T merge (n; m) denotes the number of comparisons needed to merge two sorted lists, of size n and m respectively. While <ref> [5] </ref> shows lower bounds for a number of specific problems, our result enables one to show lower bounds on the number of I/O-operations needed to solve a problem for any problem where a lower bound on the number of comparisons needed is known. <p> Among these is sorting where we obtain the same lower bound as in <ref> [5] </ref>. We use the result to show lower bounds on a number of problems not formerly considered with respect to I/O-complexity. <p> We develop non-trivial algorithms for these problems in order to show that the lower bounds are tight. The basic idea in the lower bound proofs in <ref> [5] </ref> is to count how many permutations can be generated with a given number of I/O-operations and to compare this to the number of permutations needed to solve a problem. This technique, however, is not generally applicable. <p> This is because such manipulations cannot save any comparisons. The differences between our model and the model presented in <ref> [5] </ref> are, apart from ours being restricted to a comparison model, mainly three things. Firstly, Aggarwal and Vitter only assume that a transfer involves B contiguous records in secondary storage, whereas we assume that the B records constitute a track. <p> Of course lower bounds in the Aggarwal and Vitter model also apply in the more realistic model. As using multiple disks is a very popular way of speeding up e.g. external sorting, extensive research has recently been done in this area [99] [131]. 5 Optimal Algorithms Aggarwal and Vitter <ref> [5] </ref> show the following lower bound on the I/O-complexity of sorting: N log N B log M ! They also give two algorithms based on mergesort and bucketsort that are asymptotically optimal. As mentioned earlier our result provides the same lower bound. <p> We use one block in internal memory for the ingoing records, and c blocks, one for each segment, for the outgoing records (this means c b M B c 1). Aggarwal and Vitter <ref> [5] </ref> describe an algorithm to find q B pivot elements in a set in O ( N B ) I/O's. <p> As mentioned in the introduction, previously known techniques <ref> [5] </ref> give only trivial lower bounds on these problems. On the other hand our theorem is also limited in the sense that there are problems for which it is useless. One example is the problem of permuting N records according to a given permutation . <p> An interesting and important problem "lying between" duplicate removal and permuting is multiset sorting. This problem is analyzed in [81], and lower bounds are given, both using our theorem and a (reduction-) variant of the technique from <ref> [5] </ref>. The obtained lower bounds are quite good, but we believe there is room for improvement. Another interesting problem is to extend the model in which the lower bounds apply. Especially it would be interesting to extend our theorem to an I/O version of algebraic decision trees thus allowing arithmetic.
Reference: [6] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1974. </year>
Reference: [7] <author> B. Alpern, L. Carter, and E. Feig. </author> <title> Uniform memory hierarchies. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Comp. Sci., </booktitle> <pages> pages 600-608, </pages> <year> 1990. </year>
Reference: [8] <author> R. J. Anderson and G. L. Miller. </author> <title> A simple randomized parallel algorithm for list-ranking. </title> <journal> Information Processing Letters, </journal> <volume> 33 </volume> <pages> 269-273, </pages> <year> 1990. </year>
Reference: [9] <author> D. S. Andrews, J. Snoeyink, J. Boritz, T. Chan, G. Denham, J. Harrison, and C. Zhu. </author> <title> Further comparisons of algorithms for geometric intersection problems. </title> <booktitle> In Proc. 6th Int'l. Symp. on Spatial Data Handling, </booktitle> <year> 1994. </year>
Reference: [10] <author> ARC/INFO. </author> <title> Understanding GIS|the ARC/INFO method. </title> <address> ARC/INFO, </address> <year> 1993. </year> <note> Rev. 6 for workstations. </note>
Reference: [11] <author> L. Arge. </author> <title> The buffer tree: A new technique for optimal I/O-algorithms. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <volume> LNCS 955, </volume> <pages> pages 334-345, </pages> <year> 1995. </year>
Reference: [12] <author> L. Arge. </author> <title> The I/O-complexity of ordered binary-decision diagram manipulation. </title> <booktitle> In Proc. Int. Symp. on Algorithms and Computation, </booktitle> <volume> LNCS 1004, </volume> <pages> pages 82-91, </pages> <year> 1995. </year>
Reference: [13] <author> L. Arge, M. Knudsen, and K. Larsen. </author> <title> A general lower bound on the I/O-complexity of comparison-based algorithms. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <volume> LNCS 709, </volume> <pages> pages 83-94, </pages> <year> 1993. </year> <month> 161 </month>
Reference: [14] <author> L. Arge and P. B. Miltersen. </author> <title> On the indivisibility assumption in the theory of external--memory algorithms. </title> <note> In preparation. </note>
Reference: [15] <author> L. Arge, D. E. Vengroff, and J. S. Vitter. </author> <title> External-memory algorithms for processing line segments in geographic information systems. </title> <booktitle> In Proc. Annual European Symposium on Algorithms, </booktitle> <volume> LNCS 979, </volume> <pages> pages 295-310, </pages> <year> 1995. </year> <note> A full version is to appear in special issue of Algorithmica. </note>
Reference: [16] <author> L. Arge and J. S. Vitter. </author> <title> Optimal dynamic interval management in external memory. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Comp. Sci., </booktitle> <year> 1996. </year>
Reference: [17] <author> P. Ashar and M. Cheong. </author> <title> Efficient breadth-first manipulation of binary decision diagrams. </title> <booktitle> In Proc. IEEE International Conference on CAD, </booktitle> <year> 1994. </year>
Reference: [18] <author> M. J. Atallah, R. Cole, and M. T. Goodrich. </author> <title> Cascading divide-and-conquer: A technique for designing parallel algorithms. </title> <journal> SIAM Journal of Computing, </journal> <volume> 18(3) </volume> <pages> 499-532, </pages> <year> 1989. </year>
Reference: [19] <author> R. D. Barve, E. F. Grove, and J. S. Vitter. </author> <title> Simple randomized mergesort on parallel disks. </title> <booktitle> In Proc. ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1996. </year>
Reference: [20] <author> H. Baumgarten, H. Jung, and K. Mehlhorn. </author> <title> Dynamic point location in general subdivisions. </title> <journal> Journal of Algorithms, </journal> <volume> 17 </volume> <pages> 342-380, </pages> <year> 1994. </year>
Reference: [21] <author> R. Bayer and E. McCreight. </author> <title> Organization and maintenance of large ordered indizes. </title> <journal> Acta Informatica, </journal> <volume> 1 </volume> <pages> 173-189, </pages> <year> 1972. </year>
Reference: [22] <author> M. Ben-Or. </author> <title> Lower bounds for algebraic computation trees. </title> <booktitle> In Proc. ACM Symp. on Theory of Computation, </booktitle> <pages> pages 80-86, </pages> <year> 1983. </year>
Reference-contexts: It can easily be shown (see e.g. <ref> [22] </ref>) that a lower bound on the number of comparisons for each of these problems is N log N O (N ). 155 An optimal algorithm is, therefore, to sort the two sets independently, and then solving the problem by "merging" them.
Reference: [23] <author> J. L. Bentley. </author> <title> Algorithms for klee's rectangle problems. </title> <institution> Dept. of Computer Science, Carnegie Mellon Univ., </institution> <note> unpublished notes, </note> <year> 1977. </year>
Reference: [24] <author> J. L. Bentley. </author> <title> Multidimensional divide and conquer. </title> <journal> Communications of the ACM, </journal> <volume> 23(6) </volume> <pages> 214-229, </pages> <year> 1980. </year>
Reference: [25] <author> J. L. Bentley and T. A. Ottmann. </author> <title> Algorithms for reporting and counting geometric intersections. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-28(9):643-647, </volume> <year> 1979. </year>
Reference: [26] <author> J. L. Bentley and D. Wood. </author> <title> An optimal worst case algorithm for reporting intersections of rectangles. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 29 </volume> <pages> 571-577, </pages> <year> 1980. </year>
Reference: [27] <author> G. Blankenagel and R. Guting. </author> <title> XP-trees | External priority search trees. </title> <type> Technical report, </type> <institution> FernUniversitat Hagen, </institution> <note> Informatik-Bericht Nr. 92, </note> <year> 1990. </year>
Reference: [28] <author> G. Blankenagel and R. Guting. </author> <title> External segment trees. </title> <journal> Algorithmica, </journal> <volume> 12 </volume> <pages> 498-532, </pages> <year> 1994. </year>
Reference: [29] <author> M. Blum, R. W. Floyd, V. Pratt, R. L. Rievest, and R. E. Tarjan. </author> <title> Time bounds for selection. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 7 </volume> <pages> 448-461, </pages> <year> 1973. </year>
Reference-contexts: We start by using the algorithm by Aggarwal and Vitter. This algorithm depends almost exclusively on the k-selection algorithm that finds the kth smallest element in a multiset in linear time <ref> [29] </ref>. This means that if we implicitly assume an order of equal records, namely the order in which we meet them, the resulting pivot elements define segments that satisfy (?). Some of the pivot elements might be equal, and we therefore use some slightly different elements.
Reference: [30] <author> N. Blum and K. Mehlhorn. </author> <title> On the average number of rebalancing operations in weight-balanced trees. </title> <journal> Theoretical Computer Science, </journal> <volume> 11 </volume> <pages> 303-320, </pages> <year> 1980. </year> <month> 162 </month>
Reference: [31] <author> S. K. Brace, R. L. Rudell, and R. E. Bryant. </author> <title> Efficient implementation of a BDD package. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1990. </year>
Reference: [32] <author> R. Bryant. </author> <title> Graph-based algorithms for boolean function manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8), </volume> <year> 1986. </year>
Reference: [33] <author> R. Bryant. </author> <title> Symbolic boolean manipulation with ordered binary-decision diagrams. </title> <journal> ACM Computing Surveys, </journal> <volume> 24(3), </volume> <year> 1992. </year>
Reference: [34] <author> P. Callahan, M. T. Goodrich, and K. Ramaiyer. </author> <title> Topology B-trees and their applications. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <volume> LNCS 955, </volume> <pages> pages 381-392, </pages> <year> 1995. </year>
Reference: [35] <author> T. M. Chan. </author> <title> A simple trapezoid sweep algorithm for reporting red/blue segment intersections. </title> <booktitle> In Proc. of 6th Canadian Conference on Computational Geometry, </booktitle> <year> 1994. </year>
Reference: [36] <author> B. Chazelle. </author> <title> Triangulating a simple polygon in linear time. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Comp. Sci., </booktitle> <year> 1990. </year>
Reference: [37] <author> B. Chazelle and H. Edelsbrunner. </author> <title> An optimal algorithm for intersecting line segments in the plane. </title> <journal> Journal of the ACM, </journal> <volume> 39 </volume> <pages> 1-54, </pages> <year> 1992. </year>
Reference: [38] <author> B. Chazelle, H. Edelsbrunner, L. J. Guibas, and M. Sharir. </author> <title> Algorithms for bichromatic line-segment problems and polyhedral terrains. </title> <journal> Algorithmica, </journal> <volume> 11 </volume> <pages> 116-132, </pages> <year> 1994. </year>
Reference: [39] <author> B. Chazelle and L. J. Guibas. Fractional cascading: I. </author> <title> A data structuring technique. </title> <journal> Algorithmica, </journal> <volume> 1 </volume> <pages> 133-162, </pages> <year> 1986. </year>
Reference: [40] <author> Y.-J. Chiang. </author> <title> Dynamic and I/O-Efficient Algorithms for Computational Geometry and Graph Problems: Theoretical and Experimental Results. </title> <type> PhD thesis, </type> <institution> Brown University, </institution> <month> August </month> <year> 1995. </year>
Reference: [41] <author> Y.-J. Chiang. </author> <title> Experiments on the practical I/O efficiency of geometric algorithms: Distribution sweep vs. plane sweep. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <volume> LNCS 955, </volume> <pages> pages 346-357, </pages> <year> 1995. </year>
Reference: [42] <author> Y.-J. Chiang, M. T. Goodrich, E. F. Grove, R. Tamassia, D. E. Vengroff, and J. S. Vitter. </author> <title> External-memory graph algorithms. </title> <booktitle> In Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 139-149, </pages> <year> 1995. </year>
Reference: [43] <author> Y.-J. Chiang and R. Tamassia. </author> <title> Dynamic algorithms in computational geometry. </title> <journal> Proceedings of IEEE, Special Issue on Computational Geometry, </journal> <volume> 80(9) </volume> <pages> 362-381, </pages> <year> 1992. </year>
Reference: [44] <author> D. R. Clark and J. I. Munro. </author> <title> Efficient suffix trees on secondary storage. </title> <booktitle> In Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 383-391, </pages> <year> 1996. </year>
Reference: [45] <author> A. Cockcroft. </author> <title> Sun Performance and Tuning. SPARC & Solaris. </title> <publisher> Sun Microsystems Inc., </publisher> <year> 1995. </year>
Reference: [46] <author> R. Cole and U. Vishkin. </author> <title> Deterministic coin tossing with applications to optimal list-ranking. </title> <journal> Information and Control, </journal> <volume> 70(1) </volume> <pages> 32-53, </pages> <year> 1986. </year> <month> 163 </month>
Reference: [47] <author> T. H. Cormen. </author> <title> Virtual Memory for Data Parallel Computing. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <year> 1992. </year>
Reference: [48] <author> T. H. Cormen. </author> <title> Fast permuting in disk arrays. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 17(1-2):41-57, </volume> <year> 1993. </year>
Reference: [49] <author> T. H. Cormen, T. Sundquist, and L. F. Wisniewski. </author> <title> Asymptotically tight bounds for performing BMMC permutations on parallel disk systems. </title> <type> Technical Report PCS-TR94-223, </type> <institution> Dartmouth College Dept. of Computer Science, </institution> <month> July </month> <year> 1994. </year>
Reference: [50] <author> T. H. Cormen and L. F. Wisniewski. </author> <title> Asymptotically tight bounds for performing BMMC permutations on parallel disk systems. </title> <booktitle> In Proc. ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 130-139, </pages> <year> 1993. </year>
Reference: [51] <author> D. Cormer. </author> <title> The ubiquitous B-tree. </title> <journal> ACM Computing Surveys, </journal> <volume> 11(2) </volume> <pages> 121-137, </pages> <year> 1979. </year>
Reference: [52] <author> R. F. Cromp. </author> <title> An intellegent information fusion system for handling the archiving and querying of terabyte-sized spatial databases. </title> <editor> In S. R. Tate ed., </editor> <title> Report on the Workshop on Data and Image Compression Needs and Uses in the Scientific Community, </title> <type> CESDIS Technical Report Series, </type> <month> TR-93-99, </month> <pages> pages 75-84, </pages> <year> 1993. </year>
Reference: [53] <author> H. Edelsbrunner. </author> <title> A new approach to rectangle intersections, part I. </title> <journal> Int. J. Computer Mathematics, </journal> <volume> 13 </volume> <pages> 209-219, </pages> <year> 1983. </year>
Reference: [54] <author> H. Edelsbrunner. </author> <title> A new approach to rectangle intersections, part II. </title> <journal> Int. J. Computer Mathematics, </journal> <volume> 13 </volume> <pages> 221-229, </pages> <year> 1983. </year>
Reference: [55] <author> H. Edelsbrunner and M. Overmars. </author> <title> Batched dynamic solutions to decomposable searching problems. </title> <journal> Journal of Algorithms, </journal> <volume> 6 </volume> <pages> 515-542, </pages> <year> 1985. </year>
Reference: [56] <author> P. Ferragina and R. Grossi. </author> <title> A fully-dynamic data structure for external substring search. </title> <booktitle> In Proc. ACM Symp. on Theory of Computation, </booktitle> <pages> pages 693-702, </pages> <year> 1995. </year>
Reference: [57] <author> P. Ferragina and R. Grossi. </author> <title> Fast string searching in secondary storage: Theoretical developments and experimental results. </title> <booktitle> In Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 373-382, </pages> <year> 1996. </year>
Reference: [58] <author> E. Feuerstein and A. Marchetti-Spaccamela. </author> <title> Memory paging for connectivity and path problems in graphs. </title> <booktitle> In Proc. Int. Symp. on Algorithms and Computation, </booktitle> <year> 1993. </year>
Reference: [59] <author> R. W. Floyd. </author> <title> Permuting information in idealized two-level storage. </title> <booktitle> In Complexity of Computer Calculations, </booktitle> <pages> pages 105-109, </pages> <year> 1972. </year> <editor> R. Miller and J. Thatcher, Eds. </editor> <publisher> Plenum, </publisher> <address> New York. </address>
Reference: [60] <author> J. Foley, A. van Dam, S. Feiner, and J. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference: [61] <author> A. Fournier and D. Y. Montuno. </author> <title> Triangulating simple polygons and equivalent problems. </title> <journal> ACM Trans. on Graphics, </journal> <volume> 3(2) </volume> <pages> 153-174, </pages> <year> 1984. </year> <month> 164 </month>
Reference: [62] <author> P. G. Franciosa and M. Talamo. </author> <title> Orders, implicit k-sets representation and fast halfplane searching. </title> <booktitle> In Proc. Workshop on Orders, Algorithms and Applications (ORDAL'94), </booktitle> <pages> pages 117-127, </pages> <year> 1994. </year>
Reference: [63] <author> G. R. Ganger, B. L. Worthington, R. Y. Hou, and Y. N. Patt. </author> <title> Disk arrays. high-performance, high-reliability storage subsystems. </title> <journal> IEEE Computer, </journal> <volume> 27(3) </volume> <pages> 30-46, </pages> <year> 1994. </year>
Reference: [64] <author> J. Gergov and C. Meinel. </author> <title> Frontiers of feasible and probabilistic feasible boolean manipulation with branching programs. </title> <booktitle> In Symposium on Theoretical Aspects of Computer Science, LNCS 665, </booktitle> <year> 1993. </year>
Reference: [65] <author> D. Gifford and A. Spector. </author> <title> The TWA reservation system. </title> <journal> Communications of the ACM, </journal> <volume> 27 </volume> <pages> 650-665, </pages> <year> 1984. </year>
Reference: [66] <author> J. Gil and A. Itai. </author> <title> Packing trees. </title> <booktitle> In Proc. Annual European Symposium on Algorithms, </booktitle> <volume> LNCS 979, </volume> <pages> pages 113-127, </pages> <year> 1995. </year>
Reference: [67] <author> M. T. Goodrich, J.-J. Tsay, D. E. Vengroff, and J. S. Vitter. </author> <title> External-memory computational geometry. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Comp. Sci., </booktitle> <pages> pages 714-723, </pages> <year> 1993. </year>
Reference: [68] <author> O. Gunther. </author> <title> The design of the cell tree: An object-oriented index structure for geometric databases. </title> <booktitle> In Proc. of the fifth Int. Conf. on Data Engineering, </booktitle> <pages> pages 598-605, </pages> <year> 1989. </year>
Reference: [69] <author> A. Guttman. R-trees: </author> <title> A dynamic index structure for spatial searching. </title> <booktitle> In Proc. ACM Conf. on Management of Data, </booktitle> <pages> pages 47-57, </pages> <year> 1985. </year>
Reference: [70] <author> L. M. Haas and W. F. Cody. </author> <title> Exploiting extensible dbms in integrated geographic information systems. </title> <booktitle> In Proc. of Advances in Spatial Databases, LNCS 525, </booktitle> <year> 1991. </year>
Reference: [71] <author> A. Henrich, H.-W. Six, and P. Widmayer. </author> <title> Paging binary trees with external balancing. </title> <booktitle> In Proc. Graph-Theoretic Concepts in Computer Science, </booktitle> <volume> LNCS 411, </volume> <pages> pages 260-276, </pages> <year> 1989. </year>
Reference: [72] <author> J. W. Hong and H. T. Kung. </author> <title> I/O complexity: The red-blue pebble game. </title> <booktitle> In Proc. ACM Symp. on Theory of Computation, </booktitle> <pages> pages 326-333, </pages> <year> 1981. </year>
Reference: [73] <author> S. Huddleston and K. Mehlhorn. </author> <title> A new data structure for representing sorted lists. </title> <journal> Acta Informatica, </journal> <volume> 17 </volume> <pages> 157-184, </pages> <year> 1982. </year>
Reference: [74] <author> C. Icking, R. Klein, and T. Ottmann. </author> <title> Priority search trees in secondary memory. </title> <booktitle> In Proc. Graph-Theoretic Concepts in Computer Science, </booktitle> <volume> LNCS 314, </volume> <pages> pages 84-93, </pages> <year> 1987. </year>
Reference: [75] <author> B. Jiang. </author> <title> Traversing graphs in a paging environment BFS or DFS? Information Processing Letters, </title> <booktitle> 37 </booktitle> <pages> 143-147, </pages> <year> 1991. </year>
Reference: [76] <author> B. Jiang. </author> <title> I/O and CPU-optimal recorgnition of strongly connected components. </title> <journal> Information Processing Letters, </journal> <volume> 45 </volume> <pages> 111-115, </pages> <year> 1993. </year>
Reference: [77] <author> B. H. H. Juurlink and H. A. G. Wijshoff. </author> <title> The parallel hierarchical memory model. </title> <booktitle> In Proc. Scandinavian Workshop on Algorithms Theory, </booktitle> <volume> LNCS 824, </volume> <pages> pages 240-251, </pages> <year> 1993. </year> <month> 165 </month>
Reference: [78] <author> P. C. Kanellakis, G. Kuper, and P. Revesz. </author> <title> Constraint query languages. </title> <booktitle> In Proc. ACM Symp. Principles of Database Systems, </booktitle> <pages> pages 299-313, </pages> <year> 1990. </year>
Reference: [79] <author> P. C. Kanellakis, S. Ramaswamy, D. E. Vengroff, and J. S. Vitter. </author> <title> Indexing for data models with constraints and classes. </title> <booktitle> In Proc. ACM Symp. Principles of Database Systems, </booktitle> <year> 1993. </year> <note> Invited to special issue of JCSS on Principles of Database Systems (to appear). A complete version appears as technical report 90-31, </note> <institution> Brown University. </institution>
Reference: [80] <author> N. Klarlund and T. Rauhe. </author> <title> BDD algorithms and cache misses. </title> <type> Technical Report RS-96-26, BRICS, </type> <institution> University of Aarhus, </institution> <year> 1996. </year>
Reference: [81] <author> M. Knudsen and K. Larsen. </author> <title> I/O-complexity of comparison and permutation problems. </title> <type> Master's thesis, </type> <institution> Aarhus University, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: One example is the problem of permuting N records according to a given permutation . An interesting and important problem "lying between" duplicate removal and permuting is multiset sorting. This problem is analyzed in <ref> [81] </ref>, and lower bounds are given, both using our theorem and a (reduction-) variant of the technique from [5]. The obtained lower bounds are quite good, but we believe there is room for improvement. Another interesting problem is to extend the model in which the lower bounds apply.
Reference: [82] <author> D. Knuth. </author> <title> The Art of Computer Programming, Vol. 3 Sorting and Searching. </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: N B B log B + I=O T 0 (x) T merge (M B; B) + jpath T c (x)j N log B + I=O T (x) T merge (M B; B) 2 Two lists of length n and m (where n &gt; m) can be merged using binary merging <ref> [82] </ref> in m + b n 2 t c 1 + t m comparisons where t = blog n m c.
Reference: [83] <author> V. Kumar and E. Schwabe. </author> <title> Improved algorithms and data structures for solving graph problems in external memory. </title> <booktitle> In Proc. IEEE Symp. on Parallel and Distributed Processing, </booktitle> <year> 1996. </year>
Reference: [84] <author> R. Laurini and A. D. Thompson. </author> <title> Fundamentals of Spatial Information Systems. A.P.I.C. Series, </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1992. </year>
Reference: [85] <author> C. E. Leiserson, S. Rao, and S. Toledo. </author> <title> Efficient out-of-core algorithms for linear relaxation using blocking covers. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Comp. Sci., </booktitle> <pages> pages 704-713, </pages> <year> 1993. </year>
Reference: [86] <author> D. Lomet and B. Salzberg. </author> <title> The hB-tree: A multiattribute indexing method with good guaranteed performance. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 15(4) </volume> <pages> 625-658, </pages> <year> 1990. </year>
Reference: [87] <author> H. G. Mairson and J. Stolfi. </author> <title> Reporting and counting intersections between two sets of line segments. </title> <editor> In R. Earnshaw (ed.), </editor> <booktitle> Theoretical Foundation of Computer Graphics and CAD, NATO ASI Series, </booktitle> <volume> Vol. F40, </volume> <pages> pages 307-326, </pages> <year> 1988. </year>
Reference: [88] <author> S. Malik, A. R. Wang, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Logic verification using binary decision diagrams in a logic synthesis environment. </title> <booktitle> In Proc. IEEE International Conference on CAD, </booktitle> <year> 1988. </year>
Reference: [89] <author> E. McCreight. </author> <title> Priority search trees. </title> <journal> SIAM Journal of Computing, </journal> <volume> 14(2) </volume> <pages> 257-276, </pages> <year> 1985. </year>
Reference: [90] <author> K. Mehlhorn. </author> <title> Data Structures and Algorithms 3: Multi-dimensional Searching and Computational Geometry. </title> <note> Springer-Verlag, EATCS Monographs on Theoretical Computer Science, </note> <year> 1984. </year>
Reference: [91] <author> J. Misra and D. Gries. </author> <title> Finding repeated elements. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 2 </volume> <pages> 143-152, </pages> <year> 1982. </year>
Reference-contexts: We now argue that both the division into segments and the determination of l-majorants can be done in a constant number of sequential runs through each segment. To determine l-majorants we use an algorithm due to Misra and Gries <ref> [91] </ref>. First, l 1 candidates are found in a sequential run through the segment in the following way: For each record it is checked whether it is among the present l 1 candidates (initially each of the l 1 candidates are just "empty").
Reference: [92] <author> K. Mulmuley. </author> <title> Computational Geometry. An introduction through randomized algorithms. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference: [93] <author> J. I. Munro and V. Raman. </author> <title> Sorting multisets and vectors in-place. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <volume> LNCS 519, </volume> <pages> pages 473-479, </pages> <year> 1991. </year> <month> 166 </month>
Reference-contexts: Any other record (i.e. one of the duplicates) equals one in the set. As the total order is known, the number of comparisons made must be at least the number needed to sort the initial multiset. A lower bound on this has been shown <ref> [93] </ref> to be N log N P k Combining a trivial lower bound of N B (we have to look at each record at least once) with an application of our theorem to the above comparison lower bound, we obtain: I=O (DuplicateRemoval N ) 2 ( B i=1 N i log <p> Formally this corresponds to the following predicate: Q P (y) = 8j 1 j N : jfi j y i = y 1 ; 1 i N gj jfi j y i = y j ; 1 i N gj Munro and Raman <ref> [93] </ref> showed that N log N a O (N ) is a lower bound on the number of ternary comparisons needed to determine the mode, where a denotes the frequency of the mode.
Reference: [94] <author> J. I. Munro and P. M. Spira. </author> <title> Sorting and searching in multisets. </title> <journal> SIAM Journal of Computing, </journal> <volume> 5(1) </volume> <pages> 1-8, </pages> <year> 1976. </year>
Reference-contexts: again combined with a trivial lower bound of N B , gives the following lower bound on 157 the number of I/O-operations: I=O (mode N ) 2 ( aB B N )! The algorithm that matches this bound is inspired by the distribution sort algorithm presented by Munro and Spira <ref> [94] </ref>. First, we divide the multiset into c disjoint segments of roughly equal size (a segment is a sub-multiset which contains all elements within a given range).
Reference: [95] <author> J. Nievergelt, H. Hinterberger, and K. Sevcik. </author> <title> The grid file: An adaptable, symmetric multikey file structure. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 9(1) </volume> <pages> 257-276, </pages> <year> 1984. </year>
Reference: [96] <author> J. Nievergelt and E. M. Reingold. </author> <title> Binary search tree of bounded balance. </title> <journal> SIAM Journal of Computing, </journal> <volume> 2(1), </volume> <year> 1973. </year>
Reference: [97] <author> M. H. Nodine, M. T. Goodrich, and J. S. Vitter. </author> <title> Blocking for external graph searching. </title> <journal> Algorithmica, </journal> <volume> 16(2) </volume> <pages> 181-214, </pages> <year> 1996. </year>
Reference: [98] <author> M. H. Nodine and J. S. Vitter. </author> <title> Large-scale sorting in parallel memories. </title> <booktitle> In Proc. ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 29-39, </pages> <year> 1991. </year>
Reference: [99] <author> M. H. Nodine and J. S. Vitter. </author> <title> Deterministic distribution sort in shared and distributed memory multiprocessors. </title> <booktitle> In Proc. ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 120-129, </pages> <year> 1993. </year>
Reference-contexts: Of course lower bounds in the Aggarwal and Vitter model also apply in the more realistic model. As using multiple disks is a very popular way of speeding up e.g. external sorting, extensive research has recently been done in this area <ref> [99] </ref> [131]. 5 Optimal Algorithms Aggarwal and Vitter [5] show the following lower bound on the I/O-complexity of sorting: N log N B log M ! They also give two algorithms based on mergesort and bucketsort that are asymptotically optimal. As mentioned earlier our result provides the same lower bound.
Reference: [100] <author> M. H. Nodine and J. S. Vitter. </author> <title> Paradigms for optimal sorting with multiple disks. </title> <booktitle> In Proc. of the 26th Hawaii Int. Conf. on Systems Sciences, </booktitle> <year> 1993. </year>
Reference: [101] <author> H. Ochi, N. Ishiura, and S. Yajima. </author> <title> Breadth-first manipulation of sbdd of boolean functions for vector processing. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1991. </year>
Reference: [102] <author> H. Ochi, K. Yasuoka, and S. Yajima. </author> <title> Breadth-first manipulation of very large binary-decision diagrams. </title> <booktitle> In Proc. IEEE International Conference on CAD, </booktitle> <year> 1993. </year>
Reference: [103] <author> J. Orenstein. </author> <title> Spatial query processing in an object-oriented database system. </title> <booktitle> In Proc. ACM Conf. on Management of Data, </booktitle> <pages> pages 326-336, </pages> <year> 1986. </year>
Reference: [104] <author> M. Overmars, M. Smid, M. de Berg, and M. van Kreveld. </author> <title> Maintaining range trees in secundary memory. Part I: Partitions. </title> <journal> Acta Informatica, </journal> <volume> 27 </volume> <pages> 423-452, </pages> <year> 1990. </year>
Reference: [105] <author> M. H. Overmars. </author> <title> The Design of Dynamic Data Structures. </title> <publisher> Springer-Verlag, LNCS 156, </publisher> <year> 1983. </year>
Reference: [106] <author> L. Palazzi and J. Snoeyink. </author> <title> Counting and reporting red/blue segment intersections. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <volume> LNCS 709, </volume> <pages> pages 530-540, </pages> <year> 1993. </year>
Reference: [107] <author> Y. N. Patt. </author> <title> The I/O subsystem | a candidate for improvement. Guest Editor's Introduction in IEEE Computer, </title> <booktitle> 27(3) </booktitle> <pages> 15-16, </pages> <year> 1994. </year>
Reference: [108] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference: [109] <author> S. Ramaswamy and P. Kanellakis. </author> <title> OOBD indexing by class division. </title> <booktitle> In A.P.I.C. Series, </booktitle> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1995. </year>
Reference: [110] <author> S. Ramaswamy and S. Subramanian. </author> <title> Path caching: A technique for optimal external searching. </title> <booktitle> In Proc. ACM Symp. Principles of Database Systems, </booktitle> <year> 1994. </year> <month> 167 </month>
Reference: [111] <author> J. Robinson. </author> <title> The K-D-B tree: A search structure for large multidimensional dynamic indexes. </title> <booktitle> In Proc. ACM Conf. on Management of Data, </booktitle> <pages> pages 10-18, </pages> <year> 1984. </year>
Reference: [112] <author> R. Rudell. </author> <title> Dynamic variable ordering for ordered binary decision diagrams. </title> <booktitle> In Proc. IEEE International Conference on CAD, </booktitle> <year> 1993. </year>
Reference: [113] <author> C. Ruemmler and J. Wilkes. </author> <title> An introduction to disk drive modeling. </title> <journal> IEEE Computer, </journal> <volume> 27(3) </volume> <pages> 17-28, </pages> <year> 1994. </year>
Reference: [114] <author> H. Samet. </author> <title> Applications of Spatial Data Structures: Computer Graphics, Image Processing, and GIS. </title> <publisher> Addison Wesley, </publisher> <address> MA, </address> <year> 1989. </year>
Reference: [115] <author> H. Samet. </author> <title> The Design and Analyses of Spatial Data Structures. </title> <publisher> Addison Wesley, </publisher> <address> MA, </address> <year> 1989. </year>
Reference: [116] <author> J. E. Savage. </author> <title> Space-time tradeoffs in memory hierarchies. </title> <type> Technical Report CS-93-08, </type> <institution> Brown University, </institution> <year> 1993. </year>
Reference: [117] <author> T. Sellis, N. Roussopoulos, and C. Faloutsos. </author> <title> The R + -tree: A dynamic index for multidimensional objects. </title> <booktitle> In Proc. IEEE International Conf. on Very Large Databases, </booktitle> <year> 1987. </year>
Reference: [118] <author> D. Sieling and I. Wegener. </author> <title> Reduction of obdds in linear time. </title> <journal> Information Processing Letters, </journal> <volume> 48, </volume> <year> 1993. </year>
Reference: [119] <author> M. Smid. </author> <title> Dynamic Data Structures on Multiple Storage Media. </title> <type> PhD thesis, </type> <institution> University of Amsterdam, </institution> <year> 1989. </year>
Reference: [120] <author> M. Smid and M. Overmars. </author> <title> Maintaining range trees in secundary memory. Part II: Lower bounds. </title> <journal> Acta Informatica, </journal> <volume> 27 </volume> <pages> 453-480, </pages> <year> 1990. </year>
Reference: [121] <author> S. Subramanian and S. Ramaswamy. </author> <title> The p-range tree: A new data structure for range searching in secondary memory. </title> <booktitle> In Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 378-387, </pages> <year> 1995. </year>
Reference: [122] <author> J. D. Ullman and M. Yannakakis. </author> <title> The input/output complexity of transitive closure. </title> <journal> Annals of Mathematics and Artificial Intellegence, </journal> <volume> 3 </volume> <pages> 331-360, </pages> <year> 1991. </year>
Reference: [123] <author> V. K. Vaishnavi and D. Wood. </author> <title> Rectilinear line segment intersection, layered segment trees, </title> <journal> and dynamization. Journal of Algorithms, </journal> <volume> 3 </volume> <pages> 160-176, </pages> <year> 1982. </year>
Reference: [124] <author> M. van Kreveld. </author> <title> Geographic information systems. </title> <institution> Utrecht University, INF/DOC-95-01, </institution> <year> 1995. </year>
Reference: [125] <editor> J. van Leeuwen. </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Complexity. </booktitle> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference: [126] <author> D. E. Vengroff. </author> <title> A transparent parallel I/O environment. </title> <booktitle> In Proc. 1994 DAGS Symposium on Parallel Computation, </booktitle> <year> 1994. </year>
Reference: [127] <author> D. E. Vengroff. </author> <title> Private communication, </title> <year> 1995. </year>
Reference: [128] <author> D. E. Vengroff. </author> <title> Private communication, </title> <booktitle> 1996. </booktitle> <pages> 168 </pages>
Reference: [129] <author> D. E. Vengroff and J. S. Vitter. </author> <title> I/O-efficient scientific computation using TPIE. </title> <booktitle> In Proc. IEEE Symp. on Parallel and Distributed Computing, </booktitle> <year> 1995. </year> <note> Appears also as Duke University Dept. of Computer Science technical report CS-1995-18. </note>
Reference: [130] <author> D. E. Vengroff and J. S. Vitter. </author> <title> Efficient 3-d range searching in external memory. </title> <booktitle> In Proc. ACM Symp. on Theory of Computation, </booktitle> <pages> pages 192-201, </pages> <year> 1996. </year>
Reference: [131] <author> J. S. Vitter. </author> <title> Efficient memory access in large-scale computation (invited paper). </title> <booktitle> In Symposium on Theoretical Aspects of Computer Science, </booktitle> <volume> LNCS 480, </volume> <pages> pages 26-41, </pages> <year> 1991. </year>
Reference-contexts: Of course lower bounds in the Aggarwal and Vitter model also apply in the more realistic model. As using multiple disks is a very popular way of speeding up e.g. external sorting, extensive research has recently been done in this area [99] <ref> [131] </ref>. 5 Optimal Algorithms Aggarwal and Vitter [5] show the following lower bound on the I/O-complexity of sorting: N log N B log M ! They also give two algorithms based on mergesort and bucketsort that are asymptotically optimal. As mentioned earlier our result provides the same lower bound.
Reference: [132] <author> J. S. Vitter and M. H. Nodine. </author> <title> Large-scale sorting in uniform memory hierarchies. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 17 </volume> <pages> 107-114, </pages> <year> 1993. </year>
Reference: [133] <author> J. S. Vitter and E. A. M. Shriver. </author> <title> Algorithms for parallel memory, I: Two-level memories. </title> <journal> Algorithmica, </journal> <volume> 12(2-3):110-147, </volume> <year> 1994. </year>
Reference-contexts: It should be clear that we can get lower bounds in the same model by dividing lower bounds proved in our model by P . It is worth noting that this parallel model is not especially realistic. A more realistic model was considered in <ref> [133] </ref> in which the secondary storage is partitioned into P distinct disk drives. In each I/O-operation, each of the P disks can simultaneously transfer one block. Thus, P blocks can be transferred per I/O, but only if no two blocks come from the same disk.
Reference: [134] <author> J. S. Vitter and E. A. M. Shriver. </author> <title> Algorithms for parallel memory, II: Hierarchical multilevel memories. </title> <journal> Algorithmica, </journal> <volume> 12(2-3):148-169, </volume> <year> 1994. </year>
Reference: [135] <author> J. D. Watson. </author> <title> The human genome projekt: Past, present, and future. </title> <journal> Science, </journal> <volume> 248 </volume> <pages> 44-49, </pages> <year> 1990. </year>
Reference: [136] <author> D. Willard and G. Lueker. </author> <title> Adding range restriction capability to dynamic data structures. </title> <journal> Journal of the ACM, </journal> <volume> 32(3) </volume> <pages> 597-617, </pages> <year> 1985. </year>
Reference: [137] <author> B. Zhu. </author> <title> Further computational geometry in secondary memory. </title> <booktitle> In Proc. Int. Symp. on Algorithms and Computation, </booktitle> <pages> pages 514-522, </pages> <year> 1994. </year> <month> 169 </month>
References-found: 137

