URL: http://www.cs.ucsd.edu/users/crosin/tr.cs97-522.ps
Refering-URL: http://www.cs.ucsd.edu/users/crosin/
Root-URL: http://www.cs.ucsd.edu
Email: fcrosin,halliday,rikg@cs.ucsd.edu  
Title: A Comparison of Global and Local Search Methods in Drug Docking  
Author: Christopher D. Rosin, R. Scott Halliday, Richard K. Belew 
Date: January 23, 1997  
Address: La Jolla, CA 92093-0114  
Affiliation: Cognitive Computer Science Research Group Department of Computer Science and Engineering University of California, San Diego  
Pubnum: UCSD CSE Technical Report #CS97-522  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Clark, David E., and Westhead, David R. </author> <year> (1996). </year> <title> "Evolutionary algorithms in computer-aided molecular design." </title> <journal> Journal of Computer-Aided Molecular Design 10 </journal> <pages> 337-358. </pages>
Reference-contexts: More recent efforts often employ an energy function such as that described for Autodock, and use heuristic search to minimize energy. The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications <ref> [1] </ref>. Earlier versions of Autodock used simulated annealing for heuristic optimization [9, 3].
Reference: [2] <author> Goodsell, D.S., Lauble, H., Stout, C.D., and Olson, A.J. </author> <year> (1993). </year> <title> "Automated Docking in Crystallography: Analysis of the Substrates of Aconitase." Proteins: Structure, Function, </title> <booktitle> and Genetics 17 </booktitle> <pages> 1-10. </pages>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications [1]. Earlier versions of Autodock used simulated annealing for heuristic optimization [9, 3]. There have been several successful applications of Autodock with simulated annealing <ref> [2, 7, 13, 12] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [3] <author> David S. Goodsell and Arthur J. Olson. </author> <year> (1990). </year> <title> "Automated docking of substrates to proteins by simulated annealing." Proteins: Structure, Function, </title> <journal> and Genetics, </journal> <volume> 8 </volume> <pages> 195-202. </pages>
Reference-contexts: More recent efforts often employ an energy function such as that described for Autodock, and use heuristic search to minimize energy. The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications [1]. Earlier versions of Autodock used simulated annealing for heuristic optimization <ref> [9, 3] </ref>. There have been several successful applications of Autodock with simulated annealing [2, 7, 13, 12], and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [4] <author> William E. Hart. </author> <title> Adaptive global optimization with local search. </title> <type> PhD thesis, </type> <institution> Computer Science & Engineering Department University of California, </institution> <address> San Diego, </address> <year> 1994. </year> <month> ftp://ftp.cs.sandia.gov/pub/papers/wehart/thesis.ps.gz </month>
Reference-contexts: William Hart did the original comparison of genetic algorithms and simulated annealing in Autodock <ref> [4] </ref>; we present more extensive comparisons on several test problems. 3 Global and Local Search Methods Docking is a difficult optimization problem, and successful search requires efficient local search of each attractor basin, as well as effective global sampling across the entire range of possible docking orientations. <p> For most problems where this mapping is available, Lamarckian search seems to be more efficient than non-Lamarckian hybrids that use local search only to evaluate fitness <ref> [4] </ref>. In Autodock, the GA and local search operate on the same representation, so we use Lamarckian GA-LS hybrids. In a GA-LS hybrid, mutation plays a somewhat different role than it does in a GA without explicit local search [4]. <p> than non-Lamarckian hybrids that use local search only to evaluate fitness <ref> [4] </ref>. In Autodock, the GA and local search operate on the same representation, so we use Lamarckian GA-LS hybrids. In a GA-LS hybrid, mutation plays a somewhat different role than it does in a GA without explicit local search [4]. Without an explicit local search operator, it must be the mutation operator that makes small, refining moves that are not efficiently made using crossover and selection alone. With an explicit local search operator, however, the local-refinement requirement becomes unnecessary. <p> Mutation is still necessary for its other role in the GA: replacing alleles that might have disappeared. With only this function, mutation can take on a more exploratory role. Following Hart, we use Cauchy deviates for mutations in our GA-LS hybrids <ref> [4] </ref>. Cauchy deviates are a compromise between radical jumps to completely arbitrary sections of the solution space and exploring the local richness of the current point. There are good reasons to believe that global-local search hybrids may perform better on optimization problems than either type separately [4, 5]. <p> Cauchy deviates are a compromise between radical jumps to completely arbitrary sections of the solution space and exploring the local richness of the current point. There are good reasons to believe that global-local search hybrids may perform better on optimization problems than either type separately <ref> [4, 5] </ref>. This is due in part to the smoothing performed by local search. Global search methods are good at identifying promising areas of the solution space, while local search methods do well at refining a good solution. <p> Following Hart <ref> [4] </ref>, we use a Solis & Wets local search algorithm in our GA-local search hybrid. This local search algorithm is a randomized hillclimber with an adaptive step size. Each step starts with a current point x. <p> failures &gt;= max failures failures = 0 successes = 0 = contraction factor fl 3.3 Genetic Algorithm and Global-Local Search Hybrids We combine both GA and local search techniques into hybrids which perform a generation of the GA followed (at some frequency) by (some number of iterations of) local search <ref> [4] </ref>. Our local search operator uses Solis & Wets search. The GA-local search hybrids here are Lamarckian. We can usually save evaluations by not doing local search on every individual every generation [4]. Here, when local search is used it is done on 7% of individuals each generation. <p> perform a generation of the GA followed (at some frequency) by (some number of iterations of) local search <ref> [4] </ref>. Our local search operator uses Solis & Wets search. The GA-local search hybrids here are Lamarckian. We can usually save evaluations by not doing local search on every individual every generation [4]. Here, when local search is used it is done on 7% of individuals each generation. Local search is done just before each GA generation (except for the initial one). We use a fairly standard genetic algorithm with stochastic remainder selection. <p> Since each gene is real-valued, the standard bit-flip type mutation is no longer appropriate. In this implementation, mutation is performed by adding a Cauchy deviate to the particular gene to be mutated <ref> [4] </ref>. The Cauchy distribution has the form: C (x; ff; fi) = fi 2 + (x ff) 2 4 Test Methods and Experiments A test suite of six cases was used in all of the experiments. Each test case consists of a macromolecule and a small substrate molecule. <p> Acknowledgements Garrett Morris, David Goodsell, Ruth Huey and Arthur Olson wrote the simulated annealing version of Autodock at the Scripps Research Institute, and did the SA runs used in this paper [9]. William Hart originally explored the use of GA-local search hybrids in Autodock <ref> [4] </ref>.
Reference: [5] <author> William E. Hart, Thomas E. Kammeyer, and Richard K. Belew. </author> <title> "The role of development in genetic algorithms." </title> <editor> In D. Whitley and M. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms III. </booktitle> <publisher> Morgan Kaufman, </publisher> <year> 1994. </year> <month> 8 </month>
Reference-contexts: Cauchy deviates are a compromise between radical jumps to completely arbitrary sections of the solution space and exploring the local richness of the current point. There are good reasons to believe that global-local search hybrids may perform better on optimization problems than either type separately <ref> [4, 5] </ref>. This is due in part to the smoothing performed by local search. Global search methods are good at identifying promising areas of the solution space, while local search methods do well at refining a good solution.
Reference: [6] <author> Kuntz, I.D., Blaney, J.M., Oatley, S.J., Langridge, R., and Ferrin, T.E. </author> <year> (1982). </year> <title> "A Geometric Approach to Macromolecule-Ligand Interactions." </title> <journal> Journal of Molecular Biology 161 </journal> <pages> 269-288. </pages>
Reference-contexts: This makes Autodock an important computational tool in the initial stages of drug design. 2.2 Prior Work Molecular docking has received much attention in computational biology. The DOCK program <ref> [6] </ref> was one of the first approaches to this problem, and current versions of it are still used. It attempts to find binding sites based on physical properties of the docking molecules, without doing a complete heuristic search of possible docked configurations.
Reference: [7] <author> Lunney, E.A., Hagen, S.E. et al. </author> <year> (1994). </year> <title> "A Novel Nonpeptide HIV-1 Protease Inhibitor: Elucidation of the Binding Mode and its Application in the Design of Related Analogs." </title> <journal> Journal of Medicinal Chemistry 37 </journal> <pages> 2664-2677. </pages>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications [1]. Earlier versions of Autodock used simulated annealing for heuristic optimization [9, 3]. There have been several successful applications of Autodock with simulated annealing <ref> [2, 7, 13, 12] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [8] <institution> MOPAC molecular modelling software. </institution> <note> See tutorial at http://www.kncv.nl/tutorials/studs/mopac </note>
Reference-contexts: Partial charges are required to calculate electrostatic interaction potentials, but these partial charges can be computed from the structure with molecular modelling software such as MOPAC <ref> [8] </ref>. So, it is possible to use Autodock to test many candidate small molecules against a single target protein, after obtaining the structure of this protein experimentally.
Reference: [9] <author> Garrett M. Morris, David S. Goodsell, Ruth Huey and Arthur Olson. </author> <year> (1996). </year> <title> "Distributed Automated Docking of Flexible Ligands to Proteins: </title> <booktitle> Parallel Applications of Autodock 2.4." The Journal of Computer-Aided Molecular Design 10 </booktitle> <pages> 293-304. </pages>
Reference-contexts: More recent efforts often employ an energy function such as that described for Autodock, and use heuristic search to minimize energy. The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications [1]. Earlier versions of Autodock used simulated annealing for heuristic optimization <ref> [9, 3] </ref>. There have been several successful applications of Autodock with simulated annealing [2, 7, 13, 12], and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters. <p> Each cycle begins with the lowest-energy configuration from the previous cycle. Translational maximum step sizes are reduced from 3.0 to 0.2 angstroms linearly during from first cycle to last cycle, and angle maximum step sizes are similarly reduced from 24 to 5 degrees during the run <ref> [9] </ref>. 3.2 Solis and Wets' Algorithm Solis and Wets have described a class of local and global search algorithms [11] with proofs of convergence in the limit of infinite search time. Following Hart [4], we use a Solis & Wets local search algorithm in our GA-local search hybrid. <p> Each test case consists of a macromolecule and a small substrate molecule. The salient features of the six test cases are summarized in Table 1. The different test cases were selected to test various aspects of the energy function <ref> [9] </ref>. <p> We are currently looking at using a genetic algorithm for this outer loop. Acknowledgements Garrett Morris, David Goodsell, Ruth Huey and Arthur Olson wrote the simulated annealing version of Autodock at the Scripps Research Institute, and did the SA runs used in this paper <ref> [9] </ref>. William Hart originally explored the use of GA-local search hybrids in Autodock [4].
Reference: [10] <author> Arthur J. Olson, David S. Goodsell, Garrett M. Morris, and Ruth Huey. </author> <title> Autodock User Guide: Automated Docking of Flexible Ligands to Receptors, </title> <type> Version 2.4. </type> <institution> Scripps Research Institute, Department of Molecular Biology, </institution> <year> 1995. </year> <note> http://www.scripps.edu/pub/olson-web/doc/autodock/documentation.html </note>
Reference-contexts: C 12 and C 6 are chosen appropriately for the atom types involved in the pairwise interaction (for example, carbon with nitrogen or hydrogen with oxygen); see <ref> [10] </ref> for details. Hydrogen bonds use a longer-range 12-10 potential. Finally, an additional contribution is added for electrostatic interactions. Due to bond asymmetries, atoms in a molecule act as if they have partial charges. Electrostatic potentials are based on these partial charges.
Reference: [11] <author> F. J. Solis and R. J-B. Wets. </author> <year> (1981). </year> <title> "Minimization by random search techniques." </title> <journal> Mathematical Operations Research, </journal> <volume> 6 </volume> <pages> 19-30. </pages>
Reference-contexts: are reduced from 3.0 to 0.2 angstroms linearly during from first cycle to last cycle, and angle maximum step sizes are similarly reduced from 24 to 5 degrees during the run [9]. 3.2 Solis and Wets' Algorithm Solis and Wets have described a class of local and global search algorithms <ref> [11] </ref> with proofs of convergence in the limit of infinite search time. Following Hart [4], we use a Solis & Wets local search algorithm in our GA-local search hybrid. This local search algorithm is a randomized hillclimber with an adaptive step size. Each step starts with a current point x.
Reference: [12] <author> Stoddard, B.L., and Koshland, D.E. </author> <year> (1992). </year> <title> "Prediction of the Structure of a Receptor-Protein Complex Using a Binary Docking Method." </title> <booktitle> Nature 358 </booktitle> <pages> 774-776. </pages>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications [1]. Earlier versions of Autodock used simulated annealing for heuristic optimization [9, 3]. There have been several successful applications of Autodock with simulated annealing <ref> [2, 7, 13, 12] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [13] <author> Vara Prasad, J.V.N., </author> <title> Para, K.S. </title> <editor> et al. </editor> <year> (1994). </year> <title> "Novel Series of Achiral, Low Molecular Weight, </title> <journal> and Potent HIV-1 Protease Inhibitors." Journal of the American Chemical Society 116 </journal> <pages> 6989-6990. </pages> <address> 9 2cpp 3ptb 2mcp 1stp 1hvr 4hmg 10 </address>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications [1]. Earlier versions of Autodock used simulated annealing for heuristic optimization [9, 3]. There have been several successful applications of Autodock with simulated annealing <ref> [2, 7, 13, 12] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
References-found: 13

