URL: http://www.eecs.umich.edu/UMichMP/Publications/3-95.ps
Refering-URL: http://www.eecs.umich.edu/UMichMP/abstracts.html
Root-URL: http://www.cs.umich.edu
Title: Systematic Objective-driven Computer Architecture Optimization  
Author: Timothy J. Stanley Trevor Mudge 
Note: 1: Introduction This work supported by Advanced Research Projects Agency under ARPA-AASERT Contract Number DAAH04-93-G-0249  
Address: Beal Street  Ann Arbor, MI 48109  
Affiliation: 1301  Advanced Computer Architecture Laboratory University of Michigan  
Abstract: Computer designers now have more transistors and architectural alternatives than at any time. Computer-aided design tools automate much of the physical design process. However, few tools have been developed to help the computer architect specify near-optimal microarchitectural configurations in the early design stages. Such tools are needed to systematically guide the early design specifications subject to multiple objectives such as cost, performance, and power consumption. This paper illustrates an objective-driven microarchitectural design methodology that couples the specification design phase with an optimization technique. The design of a memory hierarchy with multiple performance objectives is used as a case study. This is a directed search problem with a high dimensionality. We show that the genetic algorithm, a global optimization technique based on the metaphor of natural selection and survival of the fittest, is an ideal candidate for such an objective-driven search in a high dimensional space. The paper concludes that search techniques such as genetic algorithms are necessary to systematically and efficiently drive architectural optimizations for multiple objectives such as dynamic power, and performance in the early, high-impact stages of the design process. Computer designers now have more transistors and microarchitectural alternatives than have been available at any time. 1 The hardware available to computer designers as measured by devices on a single chip has increased thirteen orders of magnitude since 1960 [18]. Architects have eagerly awaited the time when so many inexpensive hardware resources would be available for design [21]. However, this abundance has only served to emphasize the lack of systematic design procedures for optimally partitioning hardware resources among many competing architectural structures. The continued advance of CAD tools has made the design process from the microarchitecture to chip layout highly automated we can expect this to trend to continue. In contrast, the specification of the microarchitecture is neither automated nor driven by traditional optimization techniques. This is particularly unfortunate because early microarchitectural design decisions have a dramatic impact on final system performance. A great deal of computer architecture work in the 1980s promoted a quantitative approach to computer architecture and design [12]. Much computer architecture research proposes a novel idea requiring additional hardware, quantifies the value of the idea with respect to a baseline design, and concludes that the idea has merit because the performance of the baseline improves. Questions 1 In this paper, the words architecture and microarchitecture refer to the selection and organization of 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. R. Altman, V. K. Agarwal, and G. R. Gao. </author> <title> A Novel Methodology using Genetic Algorithms for the Design of Caches and Cache Replacement Policy. </title> <booktitle> In Proc. of the 5 th Int. Conf. on Genetic Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: More recently, he has used similar techniques to investigate the impact of power and area on processor design [5]. 3: The Genetic Algorithm 2 The genetic algorithm (GA) [13] is a global search technique that has been successfully applied to many real-world optimization problems [10] [6] <ref> [1] </ref> and to similar NP-complete problem spaces in other disciplines [16]. The GA is based on the metaphor of natural selection and survival of the 2 As applied to the computer architecture optimization problem.
Reference: [2] <author> B.K. Bray and M.J. Flynn. </author> <title> Writes caches as an alternative to write buffers. </title> <type> Technical Report CSL-TR-91-470, </type> <institution> Stanford University, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: Usually on-chip in contemporary microproces sor implementations. Often split for instruction- and data-stream. Write cache or buffer Holds data writes. Decouples upper portion of memory hierarchy from lower portion of hierarchy. Can collate multiple writes to same line (s) <ref> [2] </ref>. Miss Cache, Victim cache Holds most recent cache miss (es) of the preceding cache in the hierarchy. Conceptually offers an extra degree of associativity to preceding cache with ability to "move" this associativity to cache hot spots to reduce conflict misses [14]. Prefetch and stream buffers Holds prefetched data.
Reference: [3] <author> C. Chen and A. K. Somani. </author> <title> A unified architectural tradeoff methodology. </title> <booktitle> In Proc. of the 21 st Ann. Int. Symp. on Computer Architecture, </booktitle> <year> 1994. </year>
Reference-contexts: The total amount of hardware expended on local memories can not exceed the hardware or power budget. Recently, researchers have considered the problem of optimizing the cache hierarchy when very large numbers of transistors are available [15] [7] as well as "unified" strategies to do so <ref> [3] </ref>.
Reference: [4] <author> T. M. Conte. </author> <title> Systematic Computer Architecture Prototyping. </title> <type> PhD thesis, </type> <institution> University of Illinois, Urbana-Champaign IL USA, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: These researchers noticed that computer design methods were not systematic or efficient. They pruned the search space, and used a limited number of design parameters. Their method had problems distinguishing between locally versus globally optimal design points. Conte <ref> [4] </ref> has partitioned the computer specification problem into two parts, memory hierarchy specification and functional unit specification. Exhaustive, single-pass simulation techniques were applied to the memory hierarchy partition. Simulated annealing runs of 150 simulations were applied to the functional unit partition. <p> The advantage of the genetic algorithm over other methods is that it purposefully uses information from previous optimizations attempts to direct future attempts, much like a human architect. GAs converge upon a solution, rather than pruning the design space [17] or partitioning the design space <ref> [4] </ref>. At the same time, the genetic algorithm explores the search space widely and is regarded as a good global optimization technique on difficult multi-modal solution spaces. A splice from a computer architecture chromosome string is shown in Figure 3.
Reference: [5] <author> T. M. Conte, K. N. P. Menezes, and S. W. Sathaye. </author> <title> The impact of power and area efficiency on superscalar processor design. </title> <type> Technical report, </type> <institution> University of South Carolina, </institution> <year> 1993. </year>
Reference-contexts: Simulated annealing runs of 150 simulations were applied to the functional unit partition. Performance interaction between the memory hierarchy and the functional units was not addressed. More recently, he has used similar techniques to investigate the impact of power and area on processor design <ref> [5] </ref>. 3: The Genetic Algorithm 2 The genetic algorithm (GA) [13] is a global search technique that has been successfully applied to many real-world optimization problems [10] [6] [1] and to similar NP-complete problem spaces in other disciplines [16].
Reference: [6] <author> L. Davis. </author> <title> Handbook of Genetic Algorithms. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1991. </year>
Reference-contexts: However, the architectural specification and optimization portion of the design process remains non-systematic and human-intensive. The genetic algorithm, a global optimization technique useful in other fields of research [13] [10] <ref> [6] </ref> and based on the metaphor of natural selection and survival of the fittest, appears well-suited to the architectural specification problem for the following reasons: 1. it can be extended to consider multiple design objectives, 2. it widely explores large and complex design spaces in a systematic manner, 3. it is <p> More recently, he has used similar techniques to investigate the impact of power and area on processor design [5]. 3: The Genetic Algorithm 2 The genetic algorithm (GA) [13] is a global search technique that has been successfully applied to many real-world optimization problems [10] <ref> [6] </ref> [1] and to similar NP-complete problem spaces in other disciplines [16]. The GA is based on the metaphor of natural selection and survival of the 2 As applied to the computer architecture optimization problem.
Reference: [7] <author> M. Farrens, G. Tyson, and A. R. Plezkun. </author> <title> A study of single-chip processor/cache organizations for large numbers of transistors. </title> <booktitle> In Proc. of the 21 st Ann. Int. Symp. on Computer Architecture, </booktitle> <year> 1994. </year>
Reference-contexts: The total amount of hardware expended on local memories can not exceed the hardware or power budget. Recently, researchers have considered the problem of optimizing the cache hierarchy when very large numbers of transistors are available [15] <ref> [7] </ref> as well as "unified" strategies to do so [3].
Reference: [8] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> San Fransisco, CA, </address> <year> 1979. </year>
Reference-contexts: Local memories can be dedicated to the instruction-stream, the data-stream, or unified to satisfy both streams. Further, all of the structures described above can be organized to form a "memory hierarchy" and could reside at virtually any position in this hierarchy. imize some objective function is obvious <ref> [8] </ref>. The architectural optimization problem is composed of two parts. First is the NP-complete problem of enumerating all possible hardware partitions. Second is the problem of efficiently directing the search through these partitions toward an optimal solution based on a set of specified objectives.
Reference: [9] <author> C. H. Gebotys. </author> <title> An Optimization Approach to the Synthesis of Multichip Architectures. </title> <journal> IEEE Transactions on Very Large Scale Integration Systems, </journal> <volume> 2(1) </volume> <pages> 11-20, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Rather, the architect must purposefully gravitate toward an optimum point in the design space to study performance. 2.2: Computer-aided Design for Architecture Considerable computer-aided design (CAD) research continues in optimal synthesis of architectures (e.g. <ref> [9] </ref>), i.e., given an architectural specification (cache list and parameters, functional unit list and parameters, etc.), generate an optimally partitioned hardware representation. Far less research has been conducted on CAD techniques to optimally identify exactly what architectural structures should be used in the starting architectural specification.
Reference: [10] <author> D. E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, & Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: However, the architectural specification and optimization portion of the design process remains non-systematic and human-intensive. The genetic algorithm, a global optimization technique useful in other fields of research [13] <ref> [10] </ref> [6] and based on the metaphor of natural selection and survival of the fittest, appears well-suited to the architectural specification problem for the following reasons: 1. it can be extended to consider multiple design objectives, 2. it widely explores large and complex design spaces in a systematic manner, 3. it <p> More recently, he has used similar techniques to investigate the impact of power and area on processor design [5]. 3: The Genetic Algorithm 2 The genetic algorithm (GA) [13] is a global search technique that has been successfully applied to many real-world optimization problems <ref> [10] </ref> [6] [1] and to similar NP-complete problem spaces in other disciplines [16]. The GA is based on the metaphor of natural selection and survival of the 2 As applied to the computer architecture optimization problem. <p> However, assigning weights to each objective is problematic how do we determine what the relative weights should be? A formal method to rank such competing design points uses the concept of Pareto optimality <ref> [10] </ref>. Consider multiple competing points in the design space. A point is considered nondominated if Published in the 16 th Conference on Advanced Research in VLSI. 8 and only if there is no other point in the design space that better satisfies all of the objectives.
Reference: [11] <author> Linley Gwennap. </author> <title> ARM250 Integrates RISC System on a Chip. </title> <type> MicroProcessor Report, 6(14) </type> <pages> 22-24, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Application-Specific Optimization of Similar Microarchitectures. Different applications have dif ferent architectural requirements. The embedded system market is particularly cost-driven and typ ically has a narrow, well-defined workload. Some vendors claim that they are capable of fabricating application-specific microprocessors for customers <ref> [11] </ref>. We envision a baseline core microprocessor design that is architecturally optimized (cache size selection, functional unit selection) on a rapid, application-specific basis using architectural CAD tools. Power management. Low-power applications have become very important.
Reference: [12] <author> J.L. Hennessy and D.A. Patterson. </author> <title> Computer Architecture, A Quantitative Approach. </title> <publisher> Morgan Kauf-man, </publisher> <address> San Mateo, California, </address> <year> 1990. </year>
Reference-contexts: This is particularly unfortunate because early microarchitectural design decisions have a dramatic impact on final system performance. A great deal of computer architecture work in the 1980s promoted a quantitative approach to computer architecture and design <ref> [12] </ref>. Much computer architecture research proposes a novel idea requiring additional hardware, quantifies the value of the idea with respect to a baseline design, and concludes that the idea has merit because the performance of the baseline improves.
Reference: [13] <author> J. H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> MIT Press, </publisher> <year> 1992. </year> <note> (First edition 1975, </note> <institution> Ann Arbor: University of Michigan Press). </institution>
Reference-contexts: However, the architectural specification and optimization portion of the design process remains non-systematic and human-intensive. The genetic algorithm, a global optimization technique useful in other fields of research <ref> [13] </ref> [10] [6] and based on the metaphor of natural selection and survival of the fittest, appears well-suited to the architectural specification problem for the following reasons: 1. it can be extended to consider multiple design objectives, 2. it widely explores large and complex design spaces in a systematic manner, 3. <p> Performance interaction between the memory hierarchy and the functional units was not addressed. More recently, he has used similar techniques to investigate the impact of power and area on processor design [5]. 3: The Genetic Algorithm 2 The genetic algorithm (GA) <ref> [13] </ref> is a global search technique that has been successfully applied to many real-world optimization problems [10] [6] [1] and to similar NP-complete problem spaces in other disciplines [16]. <p> During each generation, the GA combines the characteristics of the best candidates. In successive generations, good characteristics receive exponentially increasing reproductive opportunities leading to a convergence of the gene values. This is known as "reproduction with emphasis" <ref> [13] </ref>. As time proceeds, better candidate solutions are evolved and the fitness of the population increases. of area consumed by 1 bit of a register file. Models are presented that express the area of an on-chip memory structure in RBEs as a function of its size, associativity, and bandwidth.
Reference: [14] <author> N. Jouppi. </author> <title> Improving direct-mapped cache performance by the addition of a small fully-associative cache and prefetch buffers. </title> <booktitle> In Proc. of the 17 th Ann. Int. Symp. on Computer Architecture, </booktitle> <pages> pages 364-373, </pages> <address> New York NY (USA), </address> <month> May </month> <year> 1990. </year> <note> IEEE. </note>
Reference-contexts: Miss Cache, Victim cache Holds most recent cache miss (es) of the preceding cache in the hierarchy. Conceptually offers an extra degree of associativity to preceding cache with ability to "move" this associativity to cache hot spots to reduce conflict misses <ref> [14] </ref>. Prefetch and stream buffers Holds prefetched data. Secondary (L2) A larger and slower backup to the L1 caches. Could be implemented off-chip in SRAM, or any of the several new DRAM technologies, as well as on-chip [15]. Table 2. Partial taxonomy of local memories in microprocessor implementations.
Reference: [15] <author> N. P. Jouppi and S. J. E. Wilton. </author> <title> Tradeoffs in two-level on-chip caching. </title> <booktitle> In Proc. of the 21 st Ann. Int. Symp. on Computer Architecture, </booktitle> <year> 1994. </year>
Reference-contexts: The total amount of hardware expended on local memories can not exceed the hardware or power budget. Recently, researchers have considered the problem of optimizing the cache hierarchy when very large numbers of transistors are available <ref> [15] </ref> [7] as well as "unified" strategies to do so [3]. <p> Prefetch and stream buffers Holds prefetched data. Secondary (L2) A larger and slower backup to the L1 caches. Could be implemented off-chip in SRAM, or any of the several new DRAM technologies, as well as on-chip <ref> [15] </ref>. Table 2. Partial taxonomy of local memories in microprocessor implementations. This list is not intended to be inclusive, merely representative of the local memories included in the architecture studied in this paper. Local memories can be dedicated to the instruction-stream, the data-stream, or unified to satisfy both streams.
Reference: [16] <author> K. Juliff. </author> <title> A Multi-chromosone Genetic Algorithm for Pallet Loading. </title> <booktitle> In Proc. of the 5 th Int. Conf. on Genetic Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: techniques to investigate the impact of power and area on processor design [5]. 3: The Genetic Algorithm 2 The genetic algorithm (GA) [13] is a global search technique that has been successfully applied to many real-world optimization problems [10] [6] [1] and to similar NP-complete problem spaces in other disciplines <ref> [16] </ref>. The GA is based on the metaphor of natural selection and survival of the 2 As applied to the computer architecture optimization problem. Published in the 16 th Conference on Advanced Research in VLSI. 5 Cache Parameter Range of values Block size (bytes). Also called line size.
Reference: [17] <author> B. Kumar and E. S. Davidson. </author> <title> Computer system design using a hierarchical approach to performance evaluation. </title> <journal> Communications of the ACM, </journal> <volume> 23(9) </volume> <pages> 511-521, </pages> <month> September </month> <year> 1980. </year>
Reference-contexts: Far less research has been conducted on CAD techniques to optimally identify exactly what architectural structures should be used in the starting architectural specification. Kumar and Davidson developed a hierarchical approach to computer system design and performance evaluation <ref> [17] </ref>. These researchers noticed that computer design methods were not systematic or efficient. They pruned the search space, and used a limited number of design parameters. Their method had problems distinguishing between locally versus globally optimal design points. <p> The advantage of the genetic algorithm over other methods is that it purposefully uses information from previous optimizations attempts to direct future attempts, much like a human architect. GAs converge upon a solution, rather than pruning the design space <ref> [17] </ref> or partitioning the design space [4]. At the same time, the genetic algorithm explores the search space widely and is regarded as a good global optimization technique on difficult multi-modal solution spaces. A splice from a computer architecture chromosome string is shown in Figure 3.
Reference: [18] <author> Don Lindsay. </author> <title> The Limits of Chip Technology. </title> <type> Microprocessor Report, 7(1) </type> <pages> 21-24, </pages> <month> January 25 </month> <year> 1993. </year>
Reference-contexts: 1: Introduction Computer designers now have more transistors and microarchitectural alternatives than have been available at any time. 1 The hardware available to computer designers as measured by devices on a single chip has increased thirteen orders of magnitude since 1960 <ref> [18] </ref>. Architects have eagerly awaited the time when so many inexpensive hardware resources would be available for design [21]. However, this abundance has only served to emphasize the lack of systematic design procedures for optimally partitioning hardware resources among many competing architectural structures.
Reference: [19] <author> J. M. Mulder, N. T. Quach, and M. J. Flynn. </author> <title> An Area Model for On-Chip Memories and its Application. </title> <journal> IEEE Journal of Solid-state Circuits, </journal> <volume> 26(2) </volume> <pages> 98-105, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Hardware Budget. Mulder et. al. have developed an analytical model to compute the area of an on-chip memory structure <ref> [19] </ref> as a function of its size and organization (see Table 3). This work defines a technology-independent unit called the register bit equivalent (RBE), as the amount Published in the 16 th Conference on Advanced Research in VLSI. 6 The genetic algorithm works with a population of candidate solutions.
Reference: [20] <author> D. Nagle, R. Uhlig, T. Mudge, and S. Sechrest. </author> <title> Optimal allocation of on-chip memory for multiple-api operating systems. </title> <booktitle> In Proc. of the 21 st Ann. Int. Symp. on Computer Architecture, </booktitle> <year> 1994. </year>
Reference-contexts: Second is the problem of efficiently directing the search through these partitions toward an optimal solution based on a set of specified objectives. The exhaustive search methods often used to identify optimal hardware partitions for small design spaces, e.g. <ref> [20] </ref>, are not possible given the size of the design space in Tables 1, 2, and 3.
Reference: [21] <author> R.L. </author> <title> Sites. How to use 1000 registers. </title> <booktitle> In CalTech Conf. on VLSI, </booktitle> <year> 1979. </year>
Reference-contexts: Architects have eagerly awaited the time when so many inexpensive hardware resources would be available for design <ref> [21] </ref>. However, this abundance has only served to emphasize the lack of systematic design procedures for optimally partitioning hardware resources among many competing architectural structures.
References-found: 21

