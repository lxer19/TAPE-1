URL: http://www.cs.purdue.edu/homes/axa/publi/sequal.ps
Refering-URL: http://www.cs.purdue.edu/homes/axa/690home.html
Root-URL: http://www.cs.purdue.edu
Email: raf-faele@altair.math.unipa.it;  
Title: Sequence Alignment in Molecular Biology  
Author: Alberto Apostolico Raffaele Giancarlo 
Note: partially supported by MURST Grant "Algoritmi, Strutture  In-formativi" and by the National Research Council of Italy; part of this work was done while the author was visiting  
Address: TR 95-075  Palermo, Via Archirafi 34, 90123 Palermo, Italy.  Murray Hill, N.J. U.S.A..  
Affiliation: Purdue University and Universita di Padova Universita di Palermo PURDUE CS  Dipartimento di Matematica, Universita di  di Calcolo e Sistemi  AT&T Bell Labs.,  
Abstract: Molecular biology is becoming a computationally intense realm of contemporary science and faces some of the current grand scientific challenges. In its context, tools that identify, store, compare and analyze effectively large and growing numbers of bio-sequences are found of increasingly crucial importance. Biosequences are routinely compared or aligned, in a variety of ways, to infer common ancestry, to detect functional equivalence, or simply while searching for similar entries in a database. A considerable body of knowledge has accumulated on sequence alignment during the past few decades. Without pretending to be exhaustive, this paper attempts a survey of some criteria of wide use in sequence alignment and comparison problems, and of the corresponding solutions. The paper is based on presentations and literature given at the Workshop on Sequence Alignment held at Princeton, N.J., in November 1994, as part of the DIMACS Special Year on Mathematical Support for Molecular Biology. fl Dipartimento di Elettronica e Informatica, Universita di Padova, Via Gradenigo 6/A, 35131 Padova, Italy. axa@art.dei.unipd.it; partially supported by NSF grant CCR-92-01078, by NATO grant CRG 900293, by the National Research Council of Italy, and by the ESPRIT III Basic Research Programme of the EC under contract No. 9072 (Project GEPPCOM). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahuja and T. Magnanti and J. </author> <title> Orlin Network Flows: Theory, </title> <publisher> Algorithms and Applications Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: Unfortunately, that quantity is not know to us. However, in order to investigate the "structure of weights", let us assume that it is known. Moreover, to simplify notation, we assume that all letters of the alphabet are integers in <ref> [1; jj] </ref>. Let p i be the probability that symbol i appears in a randomly chosen string from fl . We refer to the p i 's as the background probability distribution of the symbols of the alphabet. <p> In this representation, the problem of finding suboptimal alignments then becomes one of enumerating the K shortest paths in a weighted graph, for some fixed K. This latter problem is a very well known combinatorial problem for which many algorithms already exist (for references, see <ref> [84, 1] </ref>). Unfortunately, none of those algorithms is customized to exploit the special topology of the graphs we are interested in. <p> Surprisingly, the signed case can be solved in polynomial time [55]. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. Its relevance to biology is addressed in [54]. Again, the two genomes are (unsigned) permutations and t of the integers in <ref> [1; n] </ref>. A transposition (i; j; k) exchanges the "place of the integers" [i; j 1] and [j; k 1] in the interval [i; k 1]. For instance (2; 4; 6) transforms (1; 2; 3; 4; 5) into (1; 4; 5; 2; 3).
Reference: [2] <author> S.F. Altschul. </author> <title> Amino acid substitution matrices from an information theoretic perspective. </title> <journal> J. Mol. Bio., </journal> <volume> 219 </volume> <pages> 555-565, </pages> <year> 1991. </year>
Reference-contexts: Unfortunately, that distance is not known to us, 10 even though we may have some idea about it. Up until recently, one would resort to use the PAM 250 matrix since experimentally it seemed the best suited to align distantly related strings [31]. Recently, Altschul <ref> [2] </ref> has proposed an interpretation of substitution matrices in information theoretic terms. <p> Now, to align the two chosen strings, we should choose a substitution matrix with relative entropy close to H 0 . Since we do not know H 0 , we have to resort to approximate it. That is done as follows. Altschul <ref> [2] </ref> has shown that, in order for an MSP alignment to be meaningful, its score must be of at least log N bits, where N is the product of the lengths of the two strings being aligned. <p> So, the amount of bits each position must contribute to the score of that alignment is log N=f . Therefore, we choose a substitution matrix with relative entropy close to log N=f . Based on this criterion, Altschul <ref> [2] </ref> provides a set of guidelines on which PAM matrices to use in which contexts. Further studies are reported in [3, 126]. <p> Therefore, any of the matrices described in Section 4.2 qualifies in principle. Unfortunately, such a choice is based on heuristics only, since no theory was developed so far stating that a substitution matrix for SW-local should take that form. Moreover, it has been argued in <ref> [2] </ref> that a result analogous to equation (3) may not be possible to prove for the case of alignments with gaps. For the time being, one resorts to extensive experiments to establish how well a set of weights performs. <p> Applying to by the composition has the effect of reversing the order of the genes i ; : : :; j . For instance, let = (2; 4; 3; 1). A reversal <ref> [2; 3] </ref> applied to would yield the new permutation (2; 3; 4; 1). We are interested in the following problem.
Reference: [3] <author> S.F. Altschul. </author> <title> A protein alignment scoring system sensitive to all evolutionary distances. </title> <journal> J. Mol. Evol., </journal> <volume> 36 </volume> <pages> 290-300, </pages> <year> 1993. </year>
Reference-contexts: Therefore, we choose a substitution matrix with relative entropy close to log N=f . Based on this criterion, Altschul [2] provides a set of guidelines on which PAM matrices to use in which contexts. Further studies are reported in <ref> [3, 126] </ref>. The relative entropy of a substitution matrix is also very important to establish a criterion on which to base the comparison of the performance (in terms of parameters such as sensitivity and selectivity, to be discussed below) of two different substitution matrices. <p> Applying to by the composition has the effect of reversing the order of the genes i ; : : :; j . For instance, let = (2; 4; 3; 1). A reversal <ref> [2; 3] </ref> applied to would yield the new permutation (2; 3; 4; 1). We are interested in the following problem. <p> Now, a reversal [i; j] is defined as above, but it changes also the signs of the elements i ; i+1 ; : : : ; j . For instance, <ref> [3; 4] </ref> applied to (+1; 5; +4; 3; +2) yields (+1; 5; +3; 4; +2). We are interested in finding the shortest sequence of reversals that transforms into the identity signed permutation = (+1; +2; : : :; +n).
Reference: [4] <author> S.F. Altschul, W. Gish, W. Miller, </author> <title> E.W. Myers, and D.J. Lipman. Basic local alignment search tool. </title> <journal> J. Mol. Bio., </journal> <volume> 215 </volume> <pages> 403-410, </pages> <year> 1990. </year>
Reference-contexts: Examples are the algorithms reported in <ref> [4, 89, 149, 150] </ref>. For the interested reader, an overview of some algorithmic issues related to such a speed-optimality trade-off, as well as to the impact of weights on the computational speed can be found in [43]. As mentioned, alignment methods are also routinely used in data base searches. <p> In some cases, one may be interested in all locally optimal alignments. This simple method is the base for the BLAST program, one of the fastest programs for local sequence alignment <ref> [4] </ref>. Other methods of this kind have also been proposed (see, for instance, [13, 15, 74, 122]). Beginning in the late sixties, measures of similarity based on Levenshtein distances were independently proposed in such diverse fields as speech processing, text editing and, of course, molecular biology. <p> Now, a reversal [i; j] is defined as above, but it changes also the signs of the elements i ; i+1 ; : : : ; j . For instance, <ref> [3; 4] </ref> applied to (+1; 5; +4; 3; +2) yields (+1; 5; +3; 4; +2). We are interested in finding the shortest sequence of reversals that transforms into the identity signed permutation = (+1; +2; : : :; +n).
Reference: [5] <author> S.F. Altschul and D.J. Lipman. </author> <title> Trees, stars, and multiple biological sequence alignment. </title> <journal> SIAM J. Appl. Math, </journal> <volume> 49(1) </volume> <pages> 197-209, </pages> <year> 1989. </year>
Reference-contexts: Because of this property, the method is useful in multiple alignments of biological sequences, e.g., proteins, where we want to measure the "variability" of the sequences rather than identify plausible ancestors <ref> [5, 23] </ref>. In principle, it is not difficult to set up a solution in O (k 2 2 k n k ) time and O (n k ) space. However, SP alignment is NP-complete [136]. <p> When the tree is fixed, Sankoff [113] provided an exact algorithm. Studies that generalize to this problem some of the ideas of Carrillo and Lipman for SP alignment are reported in Altschul and Lipman <ref> [5] </ref> and Pevzner [107]. An approximation with performance ratio of 2 for fixed tree with triangle inequality was afforded in time O (k 2 n 2 + k 3 ) [65].
Reference: [6] <author> A. Apostolico, M. J. Atallah, and S. Hambrusch. </author> <title> New clique and independent set algorithms for circle graphs. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 37 </volume> <pages> 1-24, </pages> <year> 1992. </year>
Reference-contexts: Algorithms dealing with similar "incremental" versions of string editing and longest common subsequences were produced in the mid 80's by Myers [97] and, in a distant context of searching for cliques on some special classes of graphs, Apostolico et al. <ref> [6] </ref>. A recent paper by Landau, Myers and Schmidt [81] combines the incremental methods for edit distance 16 without mismatches of [97] with the incremental methods for the Levenshtein edit distance and discusses a number biological applications where this is useful.
Reference: [7] <author> A. Apostolico, M.J. Atallah, L.L. Larmore, and S. McFaddin. </author> <title> Efficient parallel algorithms for string editing and related problems. </title> <journal> Siam J. on Computing, </journal> <volume> 19 </volume> <pages> 968-988, </pages> <year> 1990. </year>
Reference-contexts: Kannan and Myers [69] subsequently devised an algorithm with an O (n 2 log 2 n) time performance, by combining some of the ideas in [95] and <ref> [7] </ref>. More recently, Schmidt [118] generalized the notion of locally optimal alignment for strings (the one due to Sellers [121]) to locally optimal (non-overlapping) repeats and to locally optimal tandem repeats. She also devised an O (n 2 log n) time algorithm that computes all such locally optimal repeats.
Reference: [8] <author> A. Apostolico, S. Browne, and C. Guerra. </author> <title> Fast linear space computations of longest common subsequences. </title> <journal> Theoretical Computer Science, </journal> <volume> 92 </volume> <pages> 3-17, </pages> <year> 1992. </year>
Reference-contexts: For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space. Solutions where linear space was not necessarily accompanied by fi (nm) time began with [9]. Further work in this area is found in <ref> [8, 27, 98, 99] </ref> and others. As mentioned, not all of the genetic material seems equally crucial to the functionality of organisms, so that the process of evolution tends to preserve some segments of DNA while accepting more liberally changes to others.
Reference: [9] <author> A. Apostolico and C. Guerra. </author> <title> A fast linear space algorithm for computing longest common subsequences. </title> <booktitle> In Proceedings of the 23rd Allerton Conference, </booktitle> <address> Monticello, Ill., </address> <year> 1985. </year>
Reference-contexts: Space saving techniques are often crucial in molecular sequence alignment. For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space. Solutions where linear space was not necessarily accompanied by fi (nm) time began with <ref> [9] </ref>. Further work in this area is found in [8, 27, 98, 99] and others.
Reference: [10] <author> A. Apostolico and C. Guerra. </author> <title> The longest common subsequence problem revisited. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 315-336, </pages> <year> 1987. </year>
Reference-contexts: Several LCS algorithms that do not require quadratic time on all inputs have been proposed over the years. Most fall in one of two basic paradigms due to Hirschberg [58] and Hunt and Szymanski [61], respectively, and improve on them in various ways (see, e.g., <ref> [10] </ref>). Other approaches, e.g. in [98, 100], are especially suitable for similar strings. Space saving techniques are often crucial in molecular sequence alignment. For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space.
Reference: [11] <author> A. Apostolico and F.P. Preparata. </author> <title> Optimal off-line detection of repetitions in a string. </title> <journal> Theoretical Computer Science, </journal> <volume> 22 </volume> <pages> 297-315, </pages> <year> 1983. </year>
Reference-contexts: A natural question to ask is how to find patterns that (approximately) repeat a certain number of times. This is a generalization of the well known problem in combinatorial algorithms on words that consists of finding all repetitions in a string (cf., e.g., <ref> [11, 30] </ref>) There are two heuristics to identify (approximate) repeated patterns. The one by Milosavljevic and Jurka [96] uses data compression algorithms in order to capture the repeatedness of the given sequence.
Reference: [12] <author> P. Argos, M. Vingron, and G. Vogt. </author> <title> Protein sequence comparison: Methods and significance. </title> <journal> Protein Engineering, </journal> <volume> 4 </volume> <pages> 375-383, </pages> <year> 1991. </year>
Reference-contexts: Other notable variants are the minimum sum of pair and the multiple alignment under a fixed evolutionary tree, both to be discussed below. Additional discussion of the available methods can be found in <ref> [12, 25, 143] </ref>. It should also be pointed out up-front that the current methods may not yield biologically adequate alignments [127]. The problem in its general form gives rise to a recurrence that is computed through an obvious generalization of the dynamic programming algorithm for two-sequence alignment.
Reference: [13] <author> R. Arratia, L. Gordon, </author> <title> and M.S. Waterman. An extreme value theory for sequence matching. </title> <journal> Ann. Stat., </journal> <volume> 14 </volume> <pages> 971-993, </pages> <year> 1986. </year>
Reference-contexts: In some cases, one may be interested in all locally optimal alignments. This simple method is the base for the BLAST program, one of the fastest programs for local sequence alignment [4]. Other methods of this kind have also been proposed (see, for instance, <ref> [13, 15, 74, 122] </ref>). Beginning in the late sixties, measures of similarity based on Levenshtein distances were independently proposed in such diverse fields as speech processing, text editing and, of course, molecular biology. Early solutions were also supplied at that time, based mostly on dynamic programming.
Reference: [14] <author> R. Arratia and M.S. Waterman. </author> <title> A phase transition for the score of matching random sequences allowing deletions. </title> <journal> Ann. Appl. Prob. </journal> <volume> 4 </volume> <pages> 200-225, </pages> <year> 1994. </year>
Reference-contexts: Those two regions of growth are referred to as the "log region" and as the "linear region". In <ref> [14] </ref>, Arratia and Waterman provide some statistical tools to establish how meaningful a given alignment is for choices of alignment parameters in the linear region.
Reference: [15] <author> R. Arratia and M.S. Waterman. </author> <title> The Erdos-Renyi strong law for pattern matching with a given proportion of mismatches. </title> <journal> Ann. Prob., </journal> <volume> 17 </volume> <pages> 1152-1169, </pages> <year> 1989. </year>
Reference-contexts: In some cases, one may be interested in all locally optimal alignments. This simple method is the base for the BLAST program, one of the fastest programs for local sequence alignment [4]. Other methods of this kind have also been proposed (see, for instance, <ref> [13, 15, 74, 122] </ref>). Beginning in the late sixties, measures of similarity based on Levenshtein distances were independently proposed in such diverse fields as speech processing, text editing and, of course, molecular biology. Early solutions were also supplied at that time, based mostly on dynamic programming. <p> For the time being, the available results are limited to some important families of "random" strings (see <ref> [83, 145, 15, 144, 139, 146] </ref>). Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance [34, 89, 106]. <p> We are interested in the statistical properties of such a score. The problem is not trivial and one of the major findings in this area is that those statistical properties depend heavily on the choice of indel and mismatch costs. Indeed, Arratia and Waterman <ref> [15, 139] </ref> have studied the asymptotic growth of the random variable "local alignment score of two sequences", and they have discovered that, as a function of indel and mismatch costs, it first grows logarithmically and then linearly.
Reference: [16] <author> V. Bafna, G. Lancia, and R. Ravi. </author> <title> A polynomial-time approximation scheme for tree driven SP alignment problem. </title> <type> manuscript, </type> <year> 1996. </year>
Reference-contexts: Specifically, this consists of computing a matrix A, again, not necessarily optimal, but for which one can prove "a priori" how close it is to the optimal solution. The first polynomial-time approximation scheme for this problem has been devised recently by Bafna et al. <ref> [16] </ref>. They have shown how to obtain a performance ratio of c=(c2) in time O ((kc) O (c) ). The best performance ratio previously available is 2 l=k, for any fixed l. <p> By elaborating on the Feng-Doolittle [36] heuristics mentioned earlier and on further observations by Gusfield [49], Bafna et al. <ref> [16] </ref>, have reduced the problem of finding a good approximation algorithm for SP alignment to that of finding a good approximation algorithm for the problem of computing a spanning tree of G with minimum routing cost.
Reference: [17] <author> V. Bafna, E. Lawler, </author> <title> and P.A. Pevzner. Approximation algorithms for multiple sequence alignment. </title> <editor> In M. Crochemore and D. Gusfield, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 94 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 807 ), pages 43-53, </pages> <address> Berlin, 1994. </address> <publisher> Springer-Verlag. </publisher> <pages> 24 </pages>
Reference-contexts: In fact, many multiple sequence alignment problems are NP-Hard (see for instance [136]), or too time consuming (see [63]). Also in the case of multiple sequence alignment, there is a trend to develop fast algorithms that trade-off optimality of the required solution for speed (see for instance <ref> [17] </ref>). However, in some cases, even the computation of approximate solutions is hard (see for instance [136]). The notion of distance between strings that uses symbol-based edit operations models evolution in terms of very local changes to the genomes. <p> They have shown how to obtain a performance ratio of c=(c2) in time O ((kc) O (c) ). The best performance ratio previously available is 2 l=k, for any fixed l. The algorithm that achieves it, due to Bafna, Lawler and Pevzner <ref> [17] </ref>, has a running time that increases exponentially with increasing l. Additional early work in this area is due to Pevzner [107], Gusfield [49] and Bafna and Pevzner [19]. <p> Another type of investigation in the design of good approximation algorithms for SP is based on a careful analysis of the connection between the compatibility of pairwise alignments to form multiple alignment of k strings and the choice of which pairwise alignments to use (see, for instance, <ref> [17, 107] </ref>). Along this line, first the notion of compatibility has been extended from pairwise alignment to multiple alignments involving l strings, l &lt; k.
Reference: [18] <author> V. Bafna and P. Pevzner. </author> <title> Genome rearrangments and sorting by reversals. </title> <journal> Siam J. on Computing, </journal> <note> to appear. </note>
Reference-contexts: In order to have a fast convergence of the branch and bound search, one needs to come up with nontrivial lower and upper bounds on the reversal distance d. Both algorithms have been shown to perform well on biologically important data [79]. Bafna and Pevzner <ref> [18] </ref> have recently obtained a 7=4 approximation algorithm. In order to obtain that result, they had to study some combinatorial and probabilistic problems on S n that are interesting in their own right and relevant to molecular biology as well. <p> In order to obtain that result, they had to study some combinatorial and probabilistic problems on S n that are interesting in their own right and relevant to molecular biology as well. They proved that d (n) = n 1, settling a conjecture by Gollan (see <ref> [18, 79] </ref>). They also studied the problem of expected reversal distance between random permutations and showed that it is very close to d (n). That is an indication of the fact that reversal distance provides a good separation between related 22 and non-related sequences in molecular evolution studies. <p> We limit ourselves to mention that an optimal solution to the signed case gives an excellent approximation of the reversal distance for the case of unsigned permutations presented earlier [55, 77]. As in the unsigned case, approximation algorithms were developed first (see <ref> [18, 77] </ref>). Surprisingly, the signed case can be solved in polynomial time [55]. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. Its relevance to biology is addressed in [54].
Reference: [19] <author> V. Bafna and P. Pevzner. </author> <title> Approximate methods for sequence alignment. </title> <type> manuscript, </type> <year> 1993. </year>
Reference-contexts: The algorithm that achieves it, due to Bafna, Lawler and Pevzner [17], has a running time that increases exponentially with increasing l. Additional early work in this area is due to Pevzner [107], Gusfield [49] and Bafna and Pevzner <ref> [19] </ref>. From the practical point of view, it seems that the method by Gusfield is the one that, so far, yields biologically plausible solutions that are only 2% away from optimal [107]. We now briefly outline the main ideas at the heart of those approximation algorithms.
Reference: [20] <author> V. Bafna and P. Pevzner. </author> <title> Sorting permutations by transpositions. </title> <booktitle> In Proc. 6th Symposium on Discrete Algorithms, </booktitle> <pages> pages 614-621. ACM-SIAM, </pages> <year> 1995. </year>
Reference-contexts: This problem is referred to as sorting by transposition. Again, as in the case of sorting by reversal, it has been conjectured that it is NP-Hard. The first provably good approximation algorithm has been obtained in <ref> [20] </ref>. The distances that we have defined so far use only one kind of operation, i.e., either reversal or transposition. Kececioglu and Ravi [78] have developed a model for translocation that allows them to define a distance in terms of that operation.
Reference: [21] <author> G. Benson and M.S. Waterman. </author> <title> A method for fast database searches for all k-nucleotide repeats. </title> <journal> Nucleic Acids Research, </journal> <volume> 22 </volume> <pages> 4828-4836, </pages> <year> 1994. </year>
Reference-contexts: Such regions are useful in localizing genes in a chromosome. The first algorithmic studies in this area are due to Miller [95], Kannan and Myers [69] and Landau and Schmidt [82]. Additional algorithms based on heuristics are provided in <ref> [21, 96] </ref>. We will briefly review this kind of algorithms in Section 8. One more important and very active area of Sequence Alignment is the one that deals with the alignment of multiple sequences. <p> The one by Milosavljevic and Jurka [96] uses data compression algorithms in order to capture the repeatedness of the given sequence. Another one, due to Benson and Waterman <ref> [21] </ref>, first looks for "suspicious patterns" within the sequence, i.e., patterns that may give rise to repeats and then tries to validated such patterns through a wrap-around dynamic programming scheme.
Reference: [22] <author> H.L. </author> <title> Bodlaender and M.R. Fellows amd M.T. Hallett. Beyond NP-completeness for problems of bounded width: Hardness for the w hierarchy (extended abstract). </title> <journal> ACM Sympos. Theory Comput., </journal> <volume> 26 </volume> <pages> 449-458, </pages> <year> 1994. </year>
Reference-contexts: The general multiple alignment problem inherits NP-completeness from its LCS and SCS specializations. In fact, NP-completeness results relative to LCS and SCS problems were first achieved by Maier [90]. More recent results are in [128] and <ref> [22] </ref>. 9.1 Minimum Sum of Pairs For this version of the multiple sequence alignment problem, the cost function d in (7) is given by: d (a 1j a 2j :::a kj ) = 1f&lt;gk c (a fj ; a gj ) (8) where c (; ) = 0, c (a; b)
Reference: [23] <author> H. Carrillo and D. Lipman. </author> <title> The multiple sequence alignment problem in biology. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 48(5) </volume> <pages> 1073-1082, </pages> <year> 1988. </year>
Reference-contexts: Because of this property, the method is useful in multiple alignments of biological sequences, e.g., proteins, where we want to measure the "variability" of the sequences rather than identify plausible ancestors <ref> [5, 23] </ref>. In principle, it is not difficult to set up a solution in O (k 2 2 k n k ) time and O (n k ) space. However, SP alignment is NP-complete [136]. <p> Now, let's see how the above observations are used. 18 Carrillo and Lipman have proposed a method that "cuts down" the search space in which the optimal solution lies <ref> [23] </ref>. Indeed, they give a method to compute upper bounds on the cost of pairwise alignments induced by the optimal alignment we are seeking. Then, the reduction of the search space is achieved by limiting the search to alignment matrices that induce pairwise alignments of cost within the upper bounds.
Reference: [24] <author> L. Carrol. </author> <title> A new puzzle. Vanity Fair, </title> <type> 1879. </type>
Reference-contexts: It consists of a puzzle due to Lewis Carrol <ref> [24] </ref>, that works as follows: two English words of equal length are given, and one is asked to transform one into the other by going through a series of intermediate (English) words where each word differs from the next in only one letter.
Reference: [25] <author> S.C. Chan, A.K.C. Wong, and D.K.Y. Chui. </author> <title> A survey of multiple sequence comparison methods. </title> <journal> Bull. Math. Biol., </journal> <volume> 54 </volume> <pages> 563-598, </pages> <year> 1992. </year>
Reference-contexts: Other notable variants are the minimum sum of pair and the multiple alignment under a fixed evolutionary tree, both to be discussed below. Additional discussion of the available methods can be found in <ref> [12, 25, 143] </ref>. It should also be pointed out up-front that the current methods may not yield biologically adequate alignments [127]. The problem in its general form gives rise to a recurrence that is computed through an obvious generalization of the dynamic programming algorithm for two-sequence alignment.
Reference: [26] <author> K.M. Chao, R.C. Hardison, and W. Miller. </author> <title> Locating well-conserved regions within a pairwise alignment CABIOS, </title> <booktitle> 4 </booktitle> <pages> 387-396, </pages> <year> 1993. </year>
Reference-contexts: Moreover, based on suboptimal alignment, one can define and compute robustness measures indicating how confident one can be about the biological correctness of two symbols (one from each sequence) being aligned in an optimal alignment <ref> [26, 94] </ref>. It is well known that the computation of equation (2) can be regarded as the identification of an optimum path on a special type of directed graph (called grid graph) on nm vertices having a single source s, a single sink t and 3nm edges.
Reference: [27] <author> K.M. Chao. </author> <title> Computing all suboptimal alignments in linear space. </title> <editor> In M. Crochemore and D. Gusfield, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 94 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 807 ), pages 1-14, </pages> <address> Berlin, 1994. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space. Solutions where linear space was not necessarily accompanied by fi (nm) time began with [9]. Further work in this area is found in <ref> [8, 27, 98, 99] </ref> and others. As mentioned, not all of the genetic material seems equally crucial to the functionality of organisms, so that the process of evolution tends to preserve some segments of DNA while accepting more liberally changes to others. <p> For this reason, researchers have considered the problem of extracting suboptimal alignments that are acceptably close to the optimal one ( <ref> [27, 101, 131, 140, 141, 151] </ref>). <p> It is interesting to point out that this powerful transformation is related to the one devised by Edmonds and Karp [75] for general weighted graphs and that is at the basis of fast and simple shortest path algorithms. Chao <ref> [27] </ref> provides algorithms that compute suboptimal alignments in linear space. 14 7 Sensitivity and Selectivity of Alignment Methods Good algorithms for sequence alignment must show a good balance between sensitivity and selectivity.
Reference: [28] <author> V. Chvatal and D. Sankoff. </author> <title> Longest common subsequence of two random sequences. </title> <journal> J. of Appl. Probab., </journal> <volume> 12 </volume> <pages> 306-315, </pages> <year> 1975. </year>
Reference-contexts: The mathematical tractability of those statistical questions seems to depend on two main factors: (1) the particular type of alignment being considered, and (2) the weights that we assign to the edit operations. Early results in this area are reported in <ref> [28, 72, 125] </ref>. A closely related issue is a quantification of the "sensitivity" and "selectivity" of sequence alignment methods. In loose terms, sensitivity is the ability to detect distant evolutionary relationships between two strings, while selectivity is the ability to avoid the assignment of high scores to unrelated strings.
Reference: [29] <author> J.F. Collins and A.F.W. Coulson. </author> <title> Molecular sequence comparison and alignment. </title> <editor> In M.J. Bishop and C.J. Rawlings, editors, </editor> <title> Nucleic Acid and Protein Sequence Analysis: </title> <booktitle> A Practical Approach, </booktitle> <pages> pages 323-358. </pages> <publisher> IRL Press, Oxford, </publisher> <year> 1987. </year>
Reference-contexts: A reduction of this time to O (k 2 n 2 + k 2 ), along with a much improved approximation scheme, has appeared quite recently in [135]. 20 9.4 Dot-Plots Multiple sequence comparisons may also be based on measures other than edit scripts, e.g., dot-plots <ref> [29] </ref>. In its simplest version, the dot-plot associated with a pair of strings is the raw binary matrix of matches between those two strings, i.e., entry (i; j) = 1 iff the ith symbol of the first string is identical to the jth symbol of the second string.
Reference: [30] <author> M. Crochemore, and W. Rytter. </author> <title> Text Algorithms. </title> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: A natural question to ask is how to find patterns that (approximately) repeat a certain number of times. This is a generalization of the well known problem in combinatorial algorithms on words that consists of finding all repetitions in a string (cf., e.g., <ref> [11, 30] </ref>) There are two heuristics to identify (approximate) repeated patterns. The one by Milosavljevic and Jurka [96] uses data compression algorithms in order to capture the repeatedness of the given sequence.
Reference: [31] <author> M. O. Dayhoff and R. V. Eck. </author> <title> Atlas of Protein Sequences and Structures. </title> <publisher> National Biomedical Res. Foundation, </publisher> <year> 1968. </year>
Reference-contexts: Finally, and not entirely disjointly from the above, ancillary alignments are performed in data base searches, typically, in order to detect homology of proteins. The corresponding available computational methods have developed considerably since the pioneering work by M. O. Dayhoff <ref> [31] </ref> and others. Since 1982, Nucleic Acids Research has routinely devoted special issues of 600 pages or more to the latest developments in this area. By 1983, enough original material had accumulated on sequence comparison techniques to warrant dedication of a full volume [116]. <p> Unfortunately, that distance is not known to us, 10 even though we may have some idea about it. Up until recently, one would resort to use the PAM 250 matrix since experimentally it seemed the best suited to align distantly related strings <ref> [31] </ref>. Recently, Altschul [2] has proposed an interpretation of substitution matrices in information theoretic terms.
Reference: [32] <author> M.O. Dayhoff, R.M. Schwartz, and B.C. Orcutt. </author> <title> A model of evolutionary change in proteins. In M.O. Dayhoff, editor, Atlas of Protein Sequence and Structure, </title> <type> pages 345-352. </type> <institution> Nat. Biomed. Res. Found., </institution> <address> 5, supp. 3, </address> <year> 1978. </year>
Reference-contexts: The most commonly used weights for DNA are the ones by Fitch and Margoliash [39]. For amino acids, many weight systems have been proposed (see for instance [37, 92, 110, 111, 123]). However, for a long time the ones by Dayhoff et al. <ref> [32] </ref> have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins [57]. A very important aspect of sequence alignment is to establish how "meaningful" a given alignment is. <p> The hard part is the computation of the target probabilities in (3). We will briefly discuss two methods, one due to Dayhoff et al. <ref> [32] </ref> and the other one due to S. and J. Henikoff [56]. The PAM Matrices. Dayhoff et al. [32] use a stochastic process to model the evolution of proteins: at each discrete time instant, a symbol (an amino acid) has a certain fixed probability of substituting another symbol. <p> The hard part is the computation of the target probabilities in (3). We will briefly discuss two methods, one due to Dayhoff et al. <ref> [32] </ref> and the other one due to S. and J. Henikoff [56]. The PAM Matrices. Dayhoff et al. [32] use a stochastic process to model the evolution of proteins: at each discrete time instant, a symbol (an amino acid) has a certain fixed probability of substituting another symbol. <p> Let M 1 be the stochastic matrix giving the target probability distribution at one PAM. That is, M 1 [i; j] = q i;j at one PAM. M 1 is a matrix that has been experimentally determined by studying a group of closely related proteins <ref> [32] </ref>. M n = (M 1 ) n is the target probability distribution at n PAM's. Now, for a given evolutionary distance (expressed in PAM's), we can use the corresponding M matrix to compute the substitution matrix as given by (3).
Reference: [33] <author> T. Dobzhanski and A.H. Sturtvant. </author> <title> Inversions in the chromosomes of drosophila pseudoscura. </title> <journal> Genetics, </journal> <volume> 23 </volume> <pages> 28-64, </pages> <year> 1938. </year>
Reference-contexts: This approach (gene rearrangement) has been pioneered by Palmer and Herbon [103] even though the earliest application of gene rearrangement to genome comparison seems to date back to 1938 <ref> [33] </ref>. From the combinatorial point of view, gene rearrangement requires the definition of new distances between the DNA sequences that encode genomes. Moreover, it gives rise to a set of very interesting and challenging combinatorial problems.
Reference: [34] <author> R.F. Doolittle. </author> <title> Similar amino acid sequences: Chance or common ancestry? Science, </title> <booktitle> 214 </booktitle> <pages> 149-159, </pages> <year> 1981. </year>
Reference-contexts: Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance <ref> [34, 89, 106] </ref>. We now briefly mention some results from the available statistical theory of local sequence alignment. Assume that the alphabet symbols are iid and consider two sequences x and y randomly drawn from this "information source".
Reference: [35] <author> M. Eisner and D. Severance. </author> <title> Mathematical techniques for efficient record segmentation in large shared databases. </title> <journal> J. of ACM, </journal> <volume> 23 </volume> <pages> 619-635, </pages> <year> 1976. </year>
Reference-contexts: In another family [50, 51], several alternative techniques are used in a nonobviuos way to find regional boundaries. The techniques are related to algorithms for record segmentation in shared databases <ref> [35] </ref>, Combinatorial Optimization [48, 93] and Newton's zero finding method [51].
Reference: [36] <author> D. Feng and R. Doolittle. </author> <title> Progressive sequence alignment as a prerequisite to correct phylogenetic trees. </title> <journal> Journal of Molecular Evolution, </journal> <volume> 25 </volume> <pages> 351-360, </pages> <year> 1987. </year>
Reference-contexts: So, one usually resorts to the less ambitious task of choosing a subset of pairwise alignments (usually k 1) that are compatible, i.e., they can be combined into a multiple alignment. For instance, in the Feng and Doolittle alignment algorithm <ref> [36] </ref>, one chooses a spanning tree from the complete graph of all pairwise alignments. Now, let's see how the above observations are used. 18 Carrillo and Lipman have proposed a method that "cuts down" the search space in which the optimal solution lies [23]. <p> Now, let G be the complete graph naturally associated with all pairwise alignments of the k sequences and, for each edge, let its weight be the edit distance of the sequences at its end points. By elaborating on the Feng-Doolittle <ref> [36] </ref> heuristics mentioned earlier and on further observations by Gusfield [49], Bafna et al. [16], have reduced the problem of finding a good approximation algorithm for SP alignment to that of finding a good approximation algorithm for the problem of computing a spanning tree of G with minimum routing cost.
Reference: [37] <author> D.F. Feng, M.S. Johnson, </author> <title> and R.F. Doolittle. Aligning amino acid sequences: Comparison of commonly used methods. </title> <journal> J. Mol. Evol., </journal> <volume> 21 </volume> <pages> 112-125, </pages> <year> 1985. </year>
Reference-contexts: Each such operation carries a cost or "weight", and one would like to perform the transformation at the cheapest possible overall cost. The most commonly used weights for DNA are the ones by Fitch and Margoliash [39]. For amino acids, many weight systems have been proposed (see for instance <ref> [37, 92, 110, 111, 123] </ref>). However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins [57].
Reference: [38] <author> V. Fischetti, G. Landau, J. Schmidt, and P. Sellers. </author> <booktitle> In Third Annual Symposium, CPM 92, </booktitle> <address> Tucson, Arizona, </address> <month> April 29 May 1, </month> <year> 1992. </year> <booktitle> Proceedings. (Lecture Notes in Computer Science, </booktitle> <volume> Vol. 644), </volume> <pages> pages 111-120, </pages> <year> 1992. </year>
Reference-contexts: Intuitively, this is a method that computes an alignment of sequences according to recurrence (1) or (2), except that one can view the computation as taking place on a torus rather than a matrix. This variation of dynamic programming seems to be due to <ref> [38, 99] </ref>. 9 Multiple Sequence Alignment Given a set of strings x 1 ; x 2 ; :::; x k over an alphabet , a multiple alignment for those strings is a two-dimensional matrix of k rows satisfying the following conditions.
Reference: [39] <author> W.M. Fitch and E. Margoliash. </author> <title> Construction of phylogenetic trees. </title> <journal> Science, </journal> <volume> 155 </volume> <pages> 279-284, </pages> <year> 1967. </year>
Reference-contexts: Each such operation carries a cost or "weight", and one would like to perform the transformation at the cheapest possible overall cost. The most commonly used weights for DNA are the ones by Fitch and Margoliash <ref> [39] </ref>. For amino acids, many weight systems have been proposed (see for instance [37, 92, 110, 111, 123]).
Reference: [40] <author> W. Fitch and T.F. Smith. </author> <title> Optimal sequence alignment. </title> <journal> Proc Nat Acad Sci USA, </journal> <volume> 80 </volume> <pages> 1382-1386, </pages> <year> 1983. </year>
Reference-contexts: Which weights for DNA sequence alignment are best suited in order not to miss biologically meaningful alignments is reported in <ref> [40] </ref>. In the alignment of proteins sequences, weights are given in form of a substitution matrix and a gap penalty ffi. <p> In the next three sections we will review the state of the art on those topics. However, it should be kept in mind that results in those areas may have a fall-out on the issues treated in the present Section (see for instance discussions in <ref> [40, 51, 147] </ref>). 5 Parametric Sequence Alignment In Parametric Sequence Alignment (PS alignment for short), the two input sequences are assumed to be fixed and the problem is to compute optimal alignments as a function of varying edit costs. <p> The idea is to partition the parameter space into (necessarily convex) maximal regions with the property that a same alignment is optimal throughout each region. This approach was pioneered by Fitch and Smith <ref> [40] </ref> for the alignment of two hemoglobin genes, but they gave no general algorithm for PS alignment. At about the same time, in the realm of Computer Science, Gusfield [48] considered algorithms for the closely related problem of computing two-dimensional parametric decompositions.
Reference: [41] <author> R.G. Gallager. </author> <title> Information Theory and Reliable Communication. </title> <publisher> John Wiley and Sons, </publisher> <year> 1968. </year>
Reference-contexts: Decades later, in the development of coding theory, this simple notion of distance would be more formally introduced by Hamming [52] and used extensively for the design of good codes for data transmission <ref> [41] </ref>. A richer notion of distance between sequences was defined by Levenshtein in 1965 [87]. It can be described as follows. Given two strings, transform one into the other by using a sequence of the following operations: insertion of a symbol, deletion, substitution of a symbol with another one.
Reference: [42] <author> L.L. Gatlin. </author> <title> The information content of DNA. </title> <journal> J. Theor. Biol., </journal> <volume> 10 </volume> <pages> 281-300, </pages> <year> 1966. </year>
Reference-contexts: Quantitative definitions and measures of such information seem to be at the heart of sequence comparison methods, and have been attempted in various ways over the years. On one hand, this information seems to be relatable to Shannon's notion of uncertainty and may be measured as such (see, e.g., <ref> [42] </ref>). On the other, this information is used at the cellular level for the synthesis of structure (for function), hence for departure from chaos. While Shannon's classical measure applies to the information in transmission, structural information possibly stored in biosequences seems related instead to the notion of redundancy.
Reference: [43] <author> R. Giancarlo. </author> <title> Dynamic programming-special cases. </title> <editor> In A. Apostolico and Z. Galil, editors, </editor> <title> Pattern Matching Algorithms, </title> <address> New York, </address> <note> to appear. Oxford University Press. </note>
Reference-contexts: Examples are the algorithms reported in [4, 89, 149, 150]. For the interested reader, an overview of some algorithmic issues related to such a speed-optimality trade-off, as well as to the impact of weights on the computational speed can be found in <ref> [43] </ref>. As mentioned, alignment methods are also routinely used in data base searches. That is, we are given a data base of proteins and we want to establish whether a query sequence is biologically related to strings in the data base.
Reference: [44] <author> W.M. Goad. </author> <title> Sequence analysis- contributions by Ulam to molecular genetics. in: From Cardinals to Chaos. Reflections on the life and legacy of of Stanislaw Ulam N.G. </title> <editor> Cooper, editor, </editor> <publisher> Cambridge University Press, </publisher> <pages> pages 288-291, </pages> <year> 1989. </year>
Reference-contexts: Early solutions were also supplied at that time, based mostly on dynamic programming. In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others <ref> [44, 130, 129, 120, 102, 112] </ref>. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115].
Reference: [45] <author> L. Goldstein and M.S. Waterman. </author> <title> Approximations to profile score distributions. </title> <journal> J. Comp. Biol., </journal> <volume> 1 </volume> <pages> 93-104, </pages> <year> 1994. </year>
Reference: [46] <author> O. Gotoh. </author> <title> An improved algorithm for matching of biological sequences. </title> <journal> Journal of Molecular Biology, </journal> <volume> 162 </volume> <pages> 705-708, </pages> <year> 1982. </year>
Reference-contexts: Conversely, we can change (2) and its initial conditions getting back a method for the computation of the global similarity between two strings. SW-local (with modifications by Gotoh <ref> [46] </ref>) is the base of the SSEARCH program for local alignment (Pearson [105]). 4 The Structure and Choice of Weights In the two alignment methods we have outlined in the previous Section, the values assigned to the weights or costs of insertions, deletions and substitutions are extremely important in obtaining alignments
Reference: [47] <author> A.M. Griffin and M.E.G. Boursnell. </author> <title> Analysis of the nucleotide sequence of DNA from the region of the thymidine kinage gene of infectious laryngotracheitis virus; potential evolutionary relationships between the herpes virus subfamilies. </title> <journal> J. Gen. Virol., </journal> <volume> 71 </volume> <pages> 841-850, </pages> <year> 1990. </year>
Reference-contexts: Indeed, evolution at the genomic level 5 seems to involve also non-local, large scale operations, which can rearrange a whole segment of a chromosome in one evolutionary event. Such non-local changes are hard to detect using a distance based on local edit operations (see, for instance, discussions in <ref> [47, 73, 103, 114, 117, 148] </ref>), and require taking into acccount more global structure and information. One approach is as follows. Assume that we can write both genomes we want to compare as two strings of genes.
Reference: [48] <author> D. Gusfield. </author> <title> Parametric combinatorial computing and a problem of program module decomposition. </title> <journal> J. of ACM, </journal> <volume> 30 </volume> <pages> 551-563, </pages> <year> 1983. </year>
Reference-contexts: This approach was pioneered by Fitch and Smith [40] for the alignment of two hemoglobin genes, but they gave no general algorithm for PS alignment. At about the same time, in the realm of Computer Science, Gusfield <ref> [48] </ref> considered algorithms for the closely related problem of computing two-dimensional parametric decompositions. It was only later, however, that both mathematical formulations and algorithms for PS alignment were obtained by Gusfield et al. <p> In another family [50, 51], several alternative techniques are used in a nonobviuos way to find regional boundaries. The techniques are related to algorithms for record segmentation in shared databases [35], Combinatorial Optimization <ref> [48, 93] </ref> and Newton's zero finding method [51]. Letting R be the number of regions in a particular partition, the time complexity of those families of algorithms ranges from O (Rnm) to O (nm 2 log n) time [50, 51], depending on which technique is used to find region boundaries.
Reference: [49] <author> D. Gusfield. </author> <title> Efficient methods for multiple sequence alignment with guaranteed error bounds. </title> <journal> Bull Math. Biol., </journal> <volume> 55(1) </volume> <pages> 141-154, </pages> <year> 1993. </year>
Reference-contexts: The best performance ratio previously available is 2 l=k, for any fixed l. The algorithm that achieves it, due to Bafna, Lawler and Pevzner [17], has a running time that increases exponentially with increasing l. Additional early work in this area is due to Pevzner [107], Gusfield <ref> [49] </ref> and Bafna and Pevzner [19]. From the practical point of view, it seems that the method by Gusfield is the one that, so far, yields biologically plausible solutions that are only 2% away from optimal [107]. <p> By elaborating on the Feng-Doolittle [36] heuristics mentioned earlier and on further observations by Gusfield <ref> [49] </ref>, Bafna et al. [16], have reduced the problem of finding a good approximation algorithm for SP alignment to that of finding a good approximation algorithm for the problem of computing a spanning tree of G with minimum routing cost. <p> Without any tree being assumed, an approximation with a performance ratio of 2 in O (k 2 n 2 ) time has been established by Gusfield <ref> [49] </ref>. When the tree is fixed, Sankoff [113] provided an exact algorithm. Studies that generalize to this problem some of the ideas of Carrillo and Lipman for SP alignment are reported in Altschul and Lipman [5] and Pevzner [107].
Reference: [50] <author> D. Gusfield, K. Balasubramanian, and D. Naor. </author> <title> Parametric optimization of sequence alignment. </title> <journal> Algorithmica, </journal> <volume> 12 </volume> <pages> 312-326, </pages> <year> 1994. </year>
Reference-contexts: It was only later, however, that both mathematical formulations and algorithms for PS alignment were obtained by Gusfield et al. Additional work is found in [147, 138], and software has been developed specifically for this kind of alignment <ref> [50, 51, 142] </ref>. Before proceeding further, we need to make some preliminary observations. Till noted differently, we refer to the "global" sequence alignment. Implicit in the discussion of Section 3 is the following interpretation of sequence alignment. <p> The parameter space reduces then to two dimensions. Gusfield et al. have shown that the number of regions is bounded by n 2=3 for global alignment and n 2 for local alignment. There are two families of efficient algorithms available here <ref> [50, 51, 142] </ref>. They all use sequence alignment algorithms as subroutines but differ on how the boundaries of the regions are found. In one family [142], one uses the novel idea of infinitesimal sequence alignment in which the computation of equation (2) is carried out as a symbolic computation. <p> They all use sequence alignment algorithms as subroutines but differ on how the boundaries of the regions are found. In one family [142], one uses the novel idea of infinitesimal sequence alignment in which the computation of equation (2) is carried out as a symbolic computation. In another family <ref> [50, 51] </ref>, several alternative techniques are used in a nonobviuos way to find regional boundaries. The techniques are related to algorithms for record segmentation in shared databases [35], Combinatorial Optimization [48, 93] and Newton's zero finding method [51]. <p> Letting R be the number of regions in a particular partition, the time complexity of those families of algorithms ranges from O (Rnm) to O (nm 2 log n) time <ref> [50, 51] </ref>, depending on which technique is used to find region boundaries. Consider now the problem in 3-parameter space. For global alignment, Gusfield et al. [50] have shown that the number of regions is bounded by n 2 and, for local alignment, this number increases to n 3 . <p> Consider now the problem in 3-parameter space. For global alignment, Gusfield et al. <ref> [50] </ref> have shown that the number of regions is bounded by n 2 and, for local alignment, this number increases to n 3 . The algorithms for the 2-parameter generalize to 3-parameter space. The time complexity of the algorithms increases accordingly. Finally, we consider parametric alignment of protein sequences. <p> Again, consider an alignment A of two sequences. Let MT denote the total weight given to the matches in A and let MS be the total weight given to mismatches. Then, one can define the value of alignment A as <ref> [50, 51] </ref>: W A = ffMT + fiMS ffiIN flGP (5) The term MS is added rather than substracted because, in substitution matrices, the entries corresponding to mismatches already have negative values. Now, it is possible to study (5) as a function of the parameters ff; fi; fl and ffi. <p> Now, it is possible to study (5) as a function of the parameters ff; fi; fl and ffi. However, no nontrivial bound is know for the number of regions, even when the parameter space is reduced to three (for discussion and related results-see <ref> [50] </ref>).
Reference: [51] <author> D. Gusfield and P. Stelling. </author> <title> Parametric and inverse-parametric sequence alignment with xparal. </title> <editor> In R. Doolittle, editor, </editor> <booktitle> Methods in Enzymology vol. 266. Computer Methods for Macromolecular Sequence Analysis, </booktitle> <pages> pages 481-494. </pages> <publisher> Academic Press, </publisher> <year> 1996. </year>
Reference-contexts: In the next three sections we will review the state of the art on those topics. However, it should be kept in mind that results in those areas may have a fall-out on the issues treated in the present Section (see for instance discussions in <ref> [40, 51, 147] </ref>). 5 Parametric Sequence Alignment In Parametric Sequence Alignment (PS alignment for short), the two input sequences are assumed to be fixed and the problem is to compute optimal alignments as a function of varying edit costs. <p> It was only later, however, that both mathematical formulations and algorithms for PS alignment were obtained by Gusfield et al. Additional work is found in [147, 138], and software has been developed specifically for this kind of alignment <ref> [50, 51, 142] </ref>. Before proceeding further, we need to make some preliminary observations. Till noted differently, we refer to the "global" sequence alignment. Implicit in the discussion of Section 3 is the following interpretation of sequence alignment. <p> The parameter space reduces then to two dimensions. Gusfield et al. have shown that the number of regions is bounded by n 2=3 for global alignment and n 2 for local alignment. There are two families of efficient algorithms available here <ref> [50, 51, 142] </ref>. They all use sequence alignment algorithms as subroutines but differ on how the boundaries of the regions are found. In one family [142], one uses the novel idea of infinitesimal sequence alignment in which the computation of equation (2) is carried out as a symbolic computation. <p> They all use sequence alignment algorithms as subroutines but differ on how the boundaries of the regions are found. In one family [142], one uses the novel idea of infinitesimal sequence alignment in which the computation of equation (2) is carried out as a symbolic computation. In another family <ref> [50, 51] </ref>, several alternative techniques are used in a nonobviuos way to find regional boundaries. The techniques are related to algorithms for record segmentation in shared databases [35], Combinatorial Optimization [48, 93] and Newton's zero finding method [51]. <p> In another family [50, 51], several alternative techniques are used in a nonobviuos way to find regional boundaries. The techniques are related to algorithms for record segmentation in shared databases [35], Combinatorial Optimization [48, 93] and Newton's zero finding method <ref> [51] </ref>. Letting R be the number of regions in a particular partition, the time complexity of those families of algorithms ranges from O (Rnm) to O (nm 2 log n) time [50, 51], depending on which technique is used to find region boundaries. Consider now the problem in 3-parameter space. <p> Letting R be the number of regions in a particular partition, the time complexity of those families of algorithms ranges from O (Rnm) to O (nm 2 log n) time <ref> [50, 51] </ref>, depending on which technique is used to find region boundaries. Consider now the problem in 3-parameter space. For global alignment, Gusfield et al. [50] have shown that the number of regions is bounded by n 2 and, for local alignment, this number increases to n 3 . <p> Again, consider an alignment A of two sequences. Let MT denote the total weight given to the matches in A and let MS be the total weight given to mismatches. Then, one can define the value of alignment A as <ref> [50, 51] </ref>: W A = ffMT + fiMS ffiIN flGP (5) The term MS is added rather than substracted because, in substitution matrices, the entries corresponding to mismatches already have negative values. Now, it is possible to study (5) as a function of the parameters ff; fi; fl and ffi.
Reference: [52] <author> R. W. </author> <title> Hamming. Error detecting and error correcting codes. </title> <journal> Bell System Tech. J., </journal> <volume> 29 </volume> <pages> 147-160, </pages> <year> 1950. </year>
Reference-contexts: Decades later, in the development of coding theory, this simple notion of distance would be more formally introduced by Hamming <ref> [52] </ref> and used extensively for the design of good codes for data transmission [41]. A richer notion of distance between sequences was defined by Levenshtein in 1965 [87]. It can be described as follows.
Reference: [53] <author> S. Hannenhalli and P. Pevzner. </author> <title> Towards a computational theory of genome rearrangement. </title> <editor> In I. van Leeuwen, editor, </editor> <booktitle> Computer Science Today. </booktitle>
Reference-contexts: Notions of distance can be defined that quantify the "evolutionary change" of one genome into the other by means of (subsets of) the above operations (see <ref> [114, 53] </ref> and references therein). The mechanism through which one can define a distance between genomes is the same used to define any other metric on strings (see Section 2). One formally defines and assigns weights to the operations of interest (say, inversion, transposition and translocation).
Reference: [54] <author> S. Hannenhalli, C. Chappey, E. Koonin, and P. Pevzner. </author> <title> Algorithms for genome rearrangments: Herpesvirus evolution as a test case. </title> <booktitle> In 3rd Int. Conference on Bioinformatics and Complex Genome Analysis, </booktitle> <year> 1994. </year>
Reference-contexts: As in the unsigned case, approximation algorithms were developed first (see [18, 77]). Surprisingly, the signed case can be solved in polynomial time [55]. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. Its relevance to biology is addressed in <ref> [54] </ref>. Again, the two genomes are (unsigned) permutations and t of the integers in [1; n]. A transposition (i; j; k) exchanges the "place of the integers" [i; j 1] and [j; k 1] in the interval [i; k 1].
Reference: [55] <author> S. Hannenhalli and P. Pevzner. </author> <title> Transforming cabbage into turnip (polynomial algorithm for sorting signed permutations by reversals). </title> <booktitle> In Proc. 27th Symposium on Theory of Computing, </booktitle> <pages> pages 178-187. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: Sometimes, the genes have an orientation on the map (the reader is referred to <ref> [77, 55] </ref> for motivation). In that case, each gene is assigned a sign: + or -. So, the oriented version of our example "chromosome" could be (+2; 5; +3; +1). For the time being, we will concentrate mainly on maps in which there is no orientation. <p> We are interested in finding the shortest sequence of reversals that transforms into the identity signed permutation = (+1; +2; : : :; +n). The motivation and biological relevance of this problem, highlighted at the beginning of this Section, can be found in more detail in <ref> [55, 77] </ref>. We limit ourselves to mention that an optimal solution to the signed case gives an excellent approximation of the reversal distance for the case of unsigned permutations presented earlier [55, 77]. As in the unsigned case, approximation algorithms were developed first (see [18, 77]). <p> biological relevance of this problem, highlighted at the beginning of this Section, can be found in more detail in <ref> [55, 77] </ref>. We limit ourselves to mention that an optimal solution to the signed case gives an excellent approximation of the reversal distance for the case of unsigned permutations presented earlier [55, 77]. As in the unsigned case, approximation algorithms were developed first (see [18, 77]). Surprisingly, the signed case can be solved in polynomial time [55]. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. <p> As in the unsigned case, approximation algorithms were developed first (see [18, 77]). Surprisingly, the signed case can be solved in polynomial time <ref> [55] </ref>. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. Its relevance to biology is addressed in [54]. Again, the two genomes are (unsigned) permutations and t of the integers in [1; n].
Reference: [56] <author> S. Henikoff and J. Henikoff. </author> <title> Amino acid substitution matrices from protein blocks. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. of Sci., USA, </institution> <month> 89 </month> <pages> 10915-10919, </pages> <year> 1992. </year>
Reference-contexts: For amino acids, many weight systems have been proposed (see for instance [37, 92, 110, 111, 123]). However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff <ref> [56] </ref> seem to be superior for the alignment of distantly related proteins [57]. A very important aspect of sequence alignment is to establish how "meaningful" a given alignment is. This basic question applies both to global and to local alignments. <p> The hard part is the computation of the target probabilities in (3). We will briefly discuss two methods, one due to Dayhoff et al. [32] and the other one due to S. and J. Henikoff <ref> [56] </ref>. The PAM Matrices. Dayhoff et al. [32] use a stochastic process to model the evolution of proteins: at each discrete time instant, a symbol (an amino acid) has a certain fixed probability of substituting another symbol. <p> That may lead to inaccuracies since we are not estimating the target probabilities directly from samples of distantly related strings. Henikoff and Henikoff <ref> [56] </ref> have recently proposed a different method to obtain target probabilities for distantly related strings. The idea is to infer those probabilities from a large set of representative families of proteins. Here we outline the main ideas of the method. The BLOSUM Matrices. <p> We estimate those frequencies and therefore the corresponding probabilities using a data base of proteins. That is done as follows. The proteins in the database are divided into blocks, following the criteria specified in <ref> [56] </ref>. A block is a set of s strings, each of length w. So, we can think of a block as an s fi w matrix. <p> We use those new blocks to estimate target frequencies. We remark that the similarity of proteins within blocks is obtained by other methods <ref> [56] </ref>. The above approach gives rise to a family of target probability distribution matrices, the BLO-SUM family. Each BLOSUM matrix has also a number attached to it that refers to the percentage that one has used for clustering. <p> Using relative entropy, it seems reasonable to compare the performance of two matrices that have the same entropy. Using this criterion, S. and J. Henikoff <ref> [56] </ref> have compared those two families of matrices and they showed that the BLOSUM matrices seem to perform much better than the PAM matrices. Additional extensive studies are reported in [57]. <p> In this context, it is important to come up with good methodologies on which to base the design of those experiments. Some steps in that direction have been taken (see for instance <ref> [56, 104] </ref>). We will see one of those methodologies in Section 7. In conclusion, quite some progress has been made in the quest for sound criteria on which to base the choice of weights for sequence alignment. <p> The method uses the same weights as the ones used by SSEARCH to precompute statistical information. We remark that the above experimental methodology (or similar ones see <ref> [56] </ref>) can also be used to evaluate the performance of substitution matrices.
Reference: [57] <author> S. Henikoff and J. Henikoff. </author> <title> Performance evaluation of amino acid substitution matrices. Proteins: Structure, function and genetics, </title> <booktitle> 17 </booktitle> <pages> 49-61, </pages> <year> 1993. </year>
Reference-contexts: However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins <ref> [57] </ref>. A very important aspect of sequence alignment is to establish how "meaningful" a given alignment is. This basic question applies both to global and to local alignments. <p> Using this criterion, S. and J. Henikoff [56] have compared those two families of matrices and they showed that the BLOSUM matrices seem to perform much better than the PAM matrices. Additional extensive studies are reported in <ref> [57] </ref>. For completeness, we point out that those experimental studies have been carried out for local alignment methods that allow gaps.
Reference: [58] <author> D.S. Hirschberg. </author> <title> Algorithms for the longest common subsequence problem. </title> <journal> JACM, </journal> <volume> 24,4:664-675, </volume> <year> 1977. </year>
Reference-contexts: Several LCS algorithms that do not require quadratic time on all inputs have been proposed over the years. Most fall in one of two basic paradigms due to Hirschberg <ref> [58] </ref> and Hunt and Szymanski [61], respectively, and improve on them in various ways (see, e.g., [10]). Other approaches, e.g. in [98, 100], are especially suitable for similar strings. Space saving techniques are often crucial in molecular sequence alignment.
Reference: [59] <author> D.S. Hirschberg. </author> <title> A linear space algorithm for computing maximal common subsequences. </title> <journal> CACM, </journal> 18/6:341-343, 1985. 
Reference-contexts: Other approaches, e.g. in [98, 100], are especially suitable for similar strings. Space saving techniques are often crucial in molecular sequence alignment. For some time, the early fi (nm) algorithm by Hirschberg <ref> [59] </ref> was the only one to require linear space. Solutions where linear space was not necessarily accompanied by fi (nm) time began with [9]. Further work in this area is found in [8, 27, 98, 99] and others.
Reference: [60] <author> W.J. Hsu and Du M.W. </author> <title> Computing a longest common subsequence for a set of strings. </title> <journal> BIT, </journal> <volume> 24 </volume> <pages> 45-59, </pages> <year> 1984. </year>
Reference-contexts: There are many ways in which this problem can be stated, but at this point we will only highlight a few of them. For instance, one obvious multiple sequence alignment problem is the one that asks for the longest common subsequence of a set of strings (see, e.g., <ref> [60] </ref>). Perhaps more significant from a biological perspective is the following problem originally stated by Sankoff, and now referred to as multiple alignment under an evolutionary tree [113]. We are given a set of strings (typically, DNA) labeling the leaves of a given tree. <p> Some versions of the multiple sequence alignment problem were motivated precisely by the biologists' need to settle for suboptimal, biologically plausible solutions, in exchange for computational affordability. Exact solutions for the LCS are given in [63], <ref> [60] </ref>, [62], [64]. Their typical form is exponential in the number k of strings. In some cases, such a complexity does not even degrade gracefully to 17 the corresponding complexities for the case of 2 strings.
Reference: [61] <author> J.W. Hunt and T.G. Szymanski. </author> <title> A fast algorithm for computing longest common subsequences. </title> <journal> CACM, </journal> <volume> 20,5:350-353, </volume> <year> 1977. </year>
Reference-contexts: Several LCS algorithms that do not require quadratic time on all inputs have been proposed over the years. Most fall in one of two basic paradigms due to Hirschberg [58] and Hunt and Szymanski <ref> [61] </ref>, respectively, and improve on them in various ways (see, e.g., [10]). Other approaches, e.g. in [98, 100], are especially suitable for similar strings. Space saving techniques are often crucial in molecular sequence alignment.
Reference: [62] <author> R.W. Irving and C.B. Fraser. </author> <title> Two algorithms for the longest common subsequence of three (or more) strings. </title> <booktitle> In Third Annual Symposium, CPM 92, </booktitle> <address> Tucson, Arizona, </address> <month> April 29 May 1, </month> <year> 1992. </year> <booktitle> Proceedings. (Lecture Notes in Computer Science, </booktitle> <volume> Vol. 644), </volume> <pages> pages 214-229, </pages> <year> 1992. </year>
Reference-contexts: Some versions of the multiple sequence alignment problem were motivated precisely by the biologists' need to settle for suboptimal, biologically plausible solutions, in exchange for computational affordability. Exact solutions for the LCS are given in [63], [60], <ref> [62] </ref>, [64]. Their typical form is exponential in the number k of strings. In some cases, such a complexity does not even degrade gracefully to 17 the corresponding complexities for the case of 2 strings.
Reference: [63] <author> S. J. Itoga. </author> <title> The string merging problem. </title> <journal> BIT, </journal> <volume> 21 </volume> <pages> 20-30, </pages> <year> 1981. </year>
Reference-contexts: In fact, many multiple sequence alignment problems are NP-Hard (see for instance [136]), or too time consuming (see <ref> [63] </ref>). Also in the case of multiple sequence alignment, there is a trend to develop fast algorithms that trade-off optimality of the required solution for speed (see for instance [17]). However, in some cases, even the computation of approximate solutions is hard (see for instance [136]). <p> Some versions of the multiple sequence alignment problem were motivated precisely by the biologists' need to settle for suboptimal, biologically plausible solutions, in exchange for computational affordability. Exact solutions for the LCS are given in <ref> [63] </ref>, [60], [62], [64]. Their typical form is exponential in the number k of strings. In some cases, such a complexity does not even degrade gracefully to 17 the corresponding complexities for the case of 2 strings.
Reference: [64] <author> G. Jacobson and K.P. Vo. </author> <title> Heaviest increasing/common subsequence problems. </title> <editor> In A. Apostolico, M. Crochemore, Z. Galil, and U. Manber, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 92 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 644 ), pages 52-66, </pages> <address> Berlin, 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Some versions of the multiple sequence alignment problem were motivated precisely by the biologists' need to settle for suboptimal, biologically plausible solutions, in exchange for computational affordability. Exact solutions for the LCS are given in [63], [60], [62], <ref> [64] </ref>. Their typical form is exponential in the number k of strings. In some cases, such a complexity does not even degrade gracefully to 17 the corresponding complexities for the case of 2 strings.
Reference: [65] <author> T. Jiang, E.L. Lawler, and L. Wang. </author> <title> Aligning sequences via an evolutionary tree: Complexity and approximation. </title> <journal> ACM Sympos. Theory Comput., </journal> <volume> 26 </volume> <pages> 760-760, </pages> <year> 1994. </year>
Reference-contexts: An approximation with performance ratio of 2 for fixed tree with triangle inequality was afforded in time O (k 2 n 2 + k 3 ) <ref> [65] </ref>. A reduction of this time to O (k 2 n 2 + k 2 ), along with a much improved approximation scheme, has appeared quite recently in [135]. 20 9.4 Dot-Plots Multiple sequence comparisons may also be based on measures other than edit scripts, e.g., dot-plots [29].
Reference: [66] <author> T. Jiang and M. Li. </author> <title> Optimization problems in molecular biology. </title> <editor> In D.Z. Du and J. Sun, editors, </editor> <booktitle> Advances in Optimization and Approximation, </booktitle> <year> 1993. </year>
Reference-contexts: In some cases, such a complexity does not even degrade gracefully to 17 the corresponding complexities for the case of 2 strings. While simple greedy algorithms achieve a performance of Opt + O (Opt 1= p the existence of acceptable approximation algorithms can be confuted <ref> [66] </ref>. The general multiple alignment problem inherits NP-completeness from its LCS and SCS specializations. In fact, NP-completeness results relative to LCS and SCS problems were first achieved by Maier [90].
Reference: [67] <author> D.S. Johnson, J.K. Lenstra, and A.H.G. Rinnooy Kan. </author> <title> The complexity of the Network Design Problem. </title> <journal> Networks, </journal> <volume> 8 </volume> <pages> 279-285, </pages> <year> 1978. </year>
Reference-contexts: Even though this latter problem is also known to be NP-complete <ref> [67] </ref>, Bafna et al. were able to set up an approximation scheme for it.
Reference: [68] <author> M.I. Kanehisa and W.B. Goad. </author> <title> Pattern recognition in nucleic acid sequences I: A general method for finding local homologies and simmetries. Nucl. </title> <journal> Acid Res., </journal> <volume> 10 </volume> <pages> 247-264, </pages> <year> 1982. </year>
Reference: [69] <author> S.K. Kannan and E.W. Myers. </author> <title> An algorithm for locating non-overlapping regions of maximum alignment score. </title> <editor> In A. Apostolico, M. Crochemore, Z. Galil, and U. Manber, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 93 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 684 ), pages 74-86, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Indeed, the number of times a particular pattern repeats in a DNA sequence varies from individual to individual. Such regions are useful in localizing genes in a chromosome. The first algorithmic studies in this area are due to Miller [95], Kannan and Myers <ref> [69] </ref> and Landau and Schmidt [82]. Additional algorithms based on heuristics are provided in [21, 96]. We will briefly review this kind of algorithms in Section 8. One more important and very active area of Sequence Alignment is the one that deals with the alignment of multiple sequences. <p> However, the computation of that recurrence needs to be modified to account for the facts that we are aligning a string with itself and that we are interested in non-overlapping regions of similarity. Kannan and Myers <ref> [69] </ref> subsequently devised an algorithm with an O (n 2 log 2 n) time performance, by combining some of the ideas in [95] and [7].
Reference: [70] <author> S. Karlin and S.F. Altschul. </author> <title> Methods for assessing the statistical significance of molecular sequence features by using general scoring systems. </title> <journal> In Proc. Nat. Acad. of Sci., U.S.A., </journal> <volume> volume 87, </volume> <pages> pages 2264-2268, </pages> <year> 1990. </year>
Reference-contexts: Let q i;j be the probability that, for the amount of evolutionary change we have fixed, symbol i is substituted by symbol j. We refer to q i;j 's as the target probability distribution of two symbols of the alphabet substituting each other. In <ref> [70] </ref>, it is argued that the best weights one can use to capture the given amount of evolutionary change are of the form S (i; j) = where is a normalization constant. A few remarks are in order. <p> Consider two protein strings that are random in the sense that they satisfy the probabilistic assumptions stated in Section 4.1. How many distinct locally optimal alignments with score at least s are expected to occur simply by chance? Karlin and Althschul <ref> [70] </ref> have shown that such a number is well approximated by the formula KN exp s (6) where is the same normalization constant of equation (3), N is the product of the lengths of the strings we are aligning and K is a parameter that can be explicitly computed [70, 71]. <p> Althschul [70] have shown that such a number is well approximated by the formula KN exp s (6) where is the same normalization constant of equation (3), N is the product of the lengths of the strings we are aligning and K is a parameter that can be explicitly computed <ref> [70, 71] </ref>. Once we know the score s of a locally optimal alignment, we can use (6) to establish how meaningful it is (the smaller the number given by (6), the more meaningful the alignment is). <p> Based on that approximation, one can derive estimates on the number of alignments with scores exceeding some bound. This is in analogy, although more general, than what Karlin and Althshul <ref> [70] </ref> have obtained for "mismatches only" (see equation (4) above). The famous Chen-Stein Poisson approximation is key to all this. Another approach that has been recently proposed is to come up with a methodology for the empirical assessment of the selectivity and sensitivity of alignment methods.
Reference: [71] <author> S. Karlin, A. Dembo, and T. Kawabata. </author> <title> Statistical significance of high scoring segments from molecular sequences. </title> <journal> Ann. Stat., </journal> <volume> 18 </volume> <pages> 571-581, </pages> <year> 1990. </year>
Reference-contexts: Althschul [70] have shown that such a number is well approximated by the formula KN exp s (6) where is the same normalization constant of equation (3), N is the product of the lengths of the strings we are aligning and K is a parameter that can be explicitly computed <ref> [70, 71] </ref>. Once we know the score s of a locally optimal alignment, we can use (6) to establish how meaningful it is (the smaller the number given by (6), the more meaningful the alignment is).
Reference: [72] <author> S. Karlin, G. Glandour, F. Ost, S. Tavare, and L.J Korn. </author> <title> New approaches for computer analysis of nucleic acid sequences. </title> <journal> Proc Nat Acad Sci USA, </journal> <volume> 80 </volume> <pages> 5660-5664, </pages> <year> 1983. </year>
Reference-contexts: The mathematical tractability of those statistical questions seems to depend on two main factors: (1) the particular type of alignment being considered, and (2) the weights that we assign to the edit operations. Early results in this area are reported in <ref> [28, 72, 125] </ref>. A closely related issue is a quantification of the "sensitivity" and "selectivity" of sequence alignment methods. In loose terms, sensitivity is the ability to detect distant evolutionary relationships between two strings, while selectivity is the ability to avoid the assignment of high scores to unrelated strings.
Reference: [73] <author> S. Karlin, E.S. Mocarski, and G.A. Schachtel. </author> <title> Molecular evolution of herpesviruses: genomic and protein sequence comparison. </title> <journal> J. Virol., </journal> <volume> 68 </volume> <pages> 1886-1902, </pages> <year> 1994. </year>
Reference-contexts: Indeed, evolution at the genomic level 5 seems to involve also non-local, large scale operations, which can rearrange a whole segment of a chromosome in one evolutionary event. Such non-local changes are hard to detect using a distance based on local edit operations (see, for instance, discussions in <ref> [47, 73, 103, 114, 117, 148] </ref>), and require taking into acccount more global structure and information. One approach is as follows. Assume that we can write both genomes we want to compare as two strings of genes.
Reference: [74] <author> S. Karlin and F. </author> <title> Ost. Maximum length of common words among random letter sequences. </title> <journal> Ann. Prob., </journal> <volume> 16 </volume> <pages> 535-563, </pages> <year> 1988. </year>
Reference-contexts: In some cases, one may be interested in all locally optimal alignments. This simple method is the base for the BLAST program, one of the fastest programs for local sequence alignment [4]. Other methods of this kind have also been proposed (see, for instance, <ref> [13, 15, 74, 122] </ref>). Beginning in the late sixties, measures of similarity based on Levenshtein distances were independently proposed in such diverse fields as speech processing, text editing and, of course, molecular biology. Early solutions were also supplied at that time, based mostly on dynamic programming.
Reference: [75] <author> J. Edmonds and R.M. </author> <title> Karp Theoretical improvements in algorithmic efficiency for network flow problems J. </title> <journal> of ACM, </journal> <volume> 19 </volume> <pages> 248-264, </pages> <year> 1972. </year>
Reference-contexts: Another key ingredient to this algorithm is the definition of a transformation of edge weights of the grid graph achieving that no edge has a negative weight. It is interesting to point out that this powerful transformation is related to the one devised by Edmonds and Karp <ref> [75] </ref> for general weighted graphs and that is at the basis of fast and simple shortest path algorithms.
Reference: [76] <author> J. Kececioglu. </author> <title> The maximum weight trace problem in multiple sequence alignment. </title> <editor> In A. Apostolico, M. Crochemore, Z. Galil, and U. Manber, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 93 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 684 ), pages 106-119, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: the observation in the previous Subsection, there is a fundamental question that needs to be addressed: Given a set of pairwise alignments, how can we find a multiple alignment that is as close as possible to all pairwise alignments in the set? This question was brought to light by Kececioglu <ref> [76] </ref>, who formalized it and gave algorithms solving it. We briefly review this multiple alignment method. 19 Given k strings x 1 ; x 2 ; ; x k , fix a set F of pairwise alignments of those strings. <p> Optimality is defined so as to "maximize" the use of the information available from the pairwise alignments in F . This problem can be formally stated so as to satisfy formulation (7). Moreover, it contains Minimum Sum of Pairs as a special case <ref> [76] </ref>. Kececioglu showed that the general problem is N P -complete and he devised a branch and bound solution for it. 9.3 Multiple Sequence Alignment under an Evolutionary Tree Fix a set X of k strings and let Y be a set of hypothetical ancestral strings.
Reference: [77] <author> J. Kececioglu and D. Sankoff. </author> <title> Efficient bounds for oriented chromosome inversion distance. </title> <editor> In A. Apos-tolico, M. Crochemore, Z. Galil, and U. Manber, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 94 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 807 ), pages 307-325, </pages> <address> Berlin, 1994. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Sometimes, the genes have an orientation on the map (the reader is referred to <ref> [77, 55] </ref> for motivation). In that case, each gene is assigned a sign: + or -. So, the oriented version of our example "chromosome" could be (+2; 5; +3; +1). For the time being, we will concentrate mainly on maps in which there is no orientation. <p> We are interested in finding the shortest sequence of reversals that transforms into the identity signed permutation = (+1; +2; : : :; +n). The motivation and biological relevance of this problem, highlighted at the beginning of this Section, can be found in more detail in <ref> [55, 77] </ref>. We limit ourselves to mention that an optimal solution to the signed case gives an excellent approximation of the reversal distance for the case of unsigned permutations presented earlier [55, 77]. As in the unsigned case, approximation algorithms were developed first (see [18, 77]). <p> biological relevance of this problem, highlighted at the beginning of this Section, can be found in more detail in <ref> [55, 77] </ref>. We limit ourselves to mention that an optimal solution to the signed case gives an excellent approximation of the reversal distance for the case of unsigned permutations presented earlier [55, 77]. As in the unsigned case, approximation algorithms were developed first (see [18, 77]). Surprisingly, the signed case can be solved in polynomial time [55]. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. <p> We limit ourselves to mention that an optimal solution to the signed case gives an excellent approximation of the reversal distance for the case of unsigned permutations presented earlier [55, 77]. As in the unsigned case, approximation algorithms were developed first (see <ref> [18, 77] </ref>). Surprisingly, the signed case can be solved in polynomial time [55]. 10.2 Some Other Notions of Distance Another operation for which a distance has been defined is transposition. Its relevance to biology is addressed in [54].
Reference: [78] <author> J.D. Kececioglu and R. Ravi. </author> <title> Of Mice and Men: Algorithms for evolutionary distances between genomes with translocation. </title> <booktitle> In Proc. 6th Symposium on Discrete Algorithms, </booktitle> <pages> pages 604-613. ACM-SIAM, </pages> <year> 1995. </year>
Reference-contexts: The first provably good approximation algorithm has been obtained in [20]. The distances that we have defined so far use only one kind of operation, i.e., either reversal or transposition. Kececioglu and Ravi <ref> [78] </ref> have developed a model for translocation that allows them to define a distance in terms of that operation. They also defined a distance using two operations: inversion and translocation. The computational complexity of those new distances is also an open problem. For the time being, approximation algorithms are available [78]. <p> <ref> [78] </ref> have developed a model for translocation that allows them to define a distance in terms of that operation. They also defined a distance using two operations: inversion and translocation. The computational complexity of those new distances is also an open problem. For the time being, approximation algorithms are available [78]. Much work remains to be done in this area. For instance, our discussion has been restricted to distance problems in which the elementary operations have unit weight.
Reference: [79] <author> J. Kececiouglu and D. Sankoff. </author> <title> Exact and approximation algorithms for sorting by reversal. </title> <journal> Algorith-mica, </journal> <note> to appear. 27 </note>
Reference-contexts: In this context, the first formulation of a new distance and of an algorithm computing it seems to be due to [148]. Very recently, there has been quite a bit of work, initiated by Kececiouglu and Sankoff <ref> [79] </ref>, for the formal investigation of the computational complexity of various distances between genomes. <p> We let d (n) = max 2S n d (), where d () is the reversal distance of from the identity permutation. Sorting by reversal was posed in 1982 by Wattenson et al. [148], who devised also an heuristic algorithm computing it. Very recently, Kececioglu and Sankoff <ref> [79] </ref> begun a formal study of the computational complexity of this problem and conjectured that it is NP-Hard. The relationship between sorting by reversal and other fairly well understood problems in Computer Science, which might help settle this question, is discussed in [79]. Kececioglu and Sankoff also devised two algorithms. <p> Very recently, Kececioglu and Sankoff <ref> [79] </ref> begun a formal study of the computational complexity of this problem and conjectured that it is NP-Hard. The relationship between sorting by reversal and other fairly well understood problems in Computer Science, which might help settle this question, is discussed in [79]. Kececioglu and Sankoff also devised two algorithms. One is a polynomial time approximation algorithm that finds a solution within a factor of two from the optimum. It is the first algorithm for which one can show a performance guarantee bound on the solution. <p> In order to have a fast convergence of the branch and bound search, one needs to come up with nontrivial lower and upper bounds on the reversal distance d. Both algorithms have been shown to perform well on biologically important data <ref> [79] </ref>. Bafna and Pevzner [18] have recently obtained a 7=4 approximation algorithm. In order to obtain that result, they had to study some combinatorial and probabilistic problems on S n that are interesting in their own right and relevant to molecular biology as well. <p> In order to obtain that result, they had to study some combinatorial and probabilistic problems on S n that are interesting in their own right and relevant to molecular biology as well. They proved that d (n) = n 1, settling a conjecture by Gollan (see <ref> [18, 79] </ref>). They also studied the problem of expected reversal distance between random permutations and showed that it is very close to d (n). That is an indication of the fact that reversal distance provides a good separation between related 22 and non-related sequences in molecular evolution studies. <p> For instance, our discussion has been restricted to distance problems in which the elementary operations have unit weight. It would be interesting to consider the case in which those operation are assigned a weight (limiting consideration to reversal distance, this problem has been proposed by <ref> [79] </ref>).
Reference: [80] <author> A. N. </author> <title> Kolmogorov. Three approaches to the quantitative definition of information. </title> <journal> Problemi Pederachi Inf., </journal> <volume> 1, </volume> <year> 1965. </year>
Reference-contexts: One of the 2 deepest acquisitions in this domain is linked to Kolmogorov's innovative approach to the definition of information <ref> [80] </ref> (see also [91]).
Reference: [81] <author> G. M. Landau, G. Myers, and J. P. Schmidt. </author> <title> Incremental string comparison. </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: Algorithms dealing with similar "incremental" versions of string editing and longest common subsequences were produced in the mid 80's by Myers [97] and, in a distant context of searching for cliques on some special classes of graphs, Apostolico et al. [6]. A recent paper by Landau, Myers and Schmidt <ref> [81] </ref> combines the incremental methods for edit distance 16 without mismatches of [97] with the incremental methods for the Levenshtein edit distance and discusses a number biological applications where this is useful.
Reference: [82] <author> G.M. Landau and J.P. Schmidt. </author> <title> An algorithm for locating tandem repeats. </title> <editor> In A. Apostolico, M. Crochemore, Z. Galil, and U. Manber, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 93 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 684 ), pages 120-133, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Indeed, the number of times a particular pattern repeats in a DNA sequence varies from individual to individual. Such regions are useful in localizing genes in a chromosome. The first algorithmic studies in this area are due to Miller [95], Kannan and Myers [69] and Landau and Schmidt <ref> [82] </ref>. Additional algorithms based on heuristics are provided in [21, 96]. We will briefly review this kind of algorithms in Section 8. One more important and very active area of Sequence Alignment is the one that deals with the alignment of multiple sequences. <p> Intuitively, such data structures support fast answers to queries on shortest paths in the grid graphs associated with the dynamic programming recurrence (2). For completeness, we mention that a simplified version of the problem of finding all locally optimal tandem repeats had been considered in <ref> [82] </ref>. Algorithms dealing with similar "incremental" versions of string editing and longest common subsequences were produced in the mid 80's by Myers [97] and, in a distant context of searching for cliques on some special classes of graphs, Apostolico et al. [6].
Reference: [83] <author> E. Lander, J.P. Mesirov, and W. Taylor. </author> <title> Study of protein sequence comparison metrics on the Connection Machine CM-2. </title> <journal> J. Supercomputing, </journal> <volume> 3 </volume> <pages> 255-269, </pages> <year> 1989. </year>
Reference-contexts: For the time being, the available results are limited to some important families of "random" strings (see <ref> [83, 145, 15, 144, 139, 146] </ref>). Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance [34, 89, 106].
Reference: [84] <author> E.L. Lawler. </author> <title> Combinatorial Optimization, Networks and Matroids. </title> <publisher> Holt, Rinehart and Winston, </publisher> <year> 1976. </year>
Reference-contexts: In this representation, the problem of finding suboptimal alignments then becomes one of enumerating the K shortest paths in a weighted graph, for some fixed K. This latter problem is a very well known combinatorial problem for which many algorithms already exist (for references, see <ref> [84, 1] </ref>). Unfortunately, none of those algorithms is customized to exploit the special topology of the graphs we are interested in.
Reference: [85] <author> A. Lempel and J. Ziv. </author> <title> On the complexity of finite sequences. </title> <journal> IEEE Trans. on Information Theory, </journal> <volume> 22 </volume> <pages> 75-81, </pages> <year> 1976. </year>
Reference-contexts: It appears thus that we can measure and study randomness (whence also structure) in finite objects (see, in particular, <ref> [85] </ref>) only to the extent that we can legitimately privilege (i.e., assign a high weight to) certain regularities and neglect others, a principle that seems to be pendant, in syntactic pattern recognition, to the statistical paradox of the ugly duckling.
Reference: [86] <author> A.M. Lesk, M. Levitt, and C. Chothia. </author> <title> Alignment of amino acid sequences of distantly related proteins using variable gap penalties. </title> <journal> Protein Engineering, </journal> <volume> 1 </volume> <pages> 77-78, </pages> <year> 1986. </year>
Reference: [87] <author> V.I. Levenshtein. </author> <title> Binary codes capable of correcting deletions, </title> <journal> insertions and reversals. Soviet Phys. Dokl., </journal> <volume> 6 </volume> <pages> 707-710, </pages> <year> 1966. </year>
Reference-contexts: Decades later, in the development of coding theory, this simple notion of distance would be more formally introduced by Hamming [52] and used extensively for the design of good codes for data transmission [41]. A richer notion of distance between sequences was defined by Levenshtein in 1965 <ref> [87] </ref>. It can be described as follows. Given two strings, transform one into the other by using a sequence of the following operations: insertion of a symbol, deletion, substitution of a symbol with another one.
Reference: [88] <author> D.J. Lipman, S.F. Altschul, and J.D. Kececioglu. </author> <title> A tool for multiple sequence alignment. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. Sci. (USA), </institution> <month> 86 </month> <pages> 4412-4415, </pages> <year> 1989. </year>
Reference-contexts: We also point out that, dispite the expensiveness of this alignment method, it is used in several available software systems for multiple sequence alignment <ref> [88, 119] </ref> Even before the computational complexity of SP was settled, there have been two lines of research aiming at the design of fast algorithms for the problem. A common feature of both efforts is to find a good matrix A. <p> Essential for the determination of those bounds is to find a good, although not optimal, multiple alignment A. Significant reductions of the computational effort have been reported in <ref> [88] </ref>. Another line of research tries to devise approximation algorithms that guarantee a provably good solution. Specifically, this consists of computing a matrix A, again, not necessarily optimal, but for which one can prove "a priori" how close it is to the optimal solution.
Reference: [89] <author> D.J. Lipman and W.L. Pearson. </author> <title> Rapid and sensitive protein similarity searches. </title> <journal> Science, </journal> <volume> 2 </volume> <pages> 1435-1441, </pages> <year> 1985. </year>
Reference-contexts: Examples are the algorithms reported in <ref> [4, 89, 149, 150] </ref>. For the interested reader, an overview of some algorithmic issues related to such a speed-optimality trade-off, as well as to the impact of weights on the computational speed can be found in [43]. As mentioned, alignment methods are also routinely used in data base searches. <p> Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance <ref> [34, 89, 106] </ref>. We now briefly mention some results from the available statistical theory of local sequence alignment. Assume that the alphabet symbols are iid and consider two sequences x and y randomly drawn from this "information source".
Reference: [90] <author> D. Maier. </author> <title> The complexity of some problems on subsequences and supersequences. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 25(2) </volume> <pages> 322-336, </pages> <year> 1978. </year>
Reference-contexts: The general multiple alignment problem inherits NP-completeness from its LCS and SCS specializations. In fact, NP-completeness results relative to LCS and SCS problems were first achieved by Maier <ref> [90] </ref>.
Reference: [91] <author> P. Martin-Lof. </author> <title> The definition of random sequences. </title> <journal> Information and Control, </journal> <volume> 9, </volume> <year> 1966. </year>
Reference-contexts: One of the 2 deepest acquisitions in this domain is linked to Kolmogorov's innovative approach to the definition of information [80] (see also <ref> [91] </ref>).
Reference: [92] <author> A.D. McLachlan. </author> <title> Tests for comparing related amino acid sequences. </title> <journal> cytochrome c and cytochrome c551. J. Mol. Biol., </journal> <volume> 61 </volume> <pages> 409-424, </pages> <year> 1971. </year>
Reference-contexts: Each such operation carries a cost or "weight", and one would like to perform the transformation at the cheapest possible overall cost. The most commonly used weights for DNA are the ones by Fitch and Margoliash [39]. For amino acids, many weight systems have been proposed (see for instance <ref> [37, 92, 110, 111, 123] </ref>). However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins [57].
Reference: [93] <author> N. Meggiddo. </author> <title> Combinatorial optimization with rational objective functions. </title> <journal> Math. Oper. Res., </journal> <volume> 4 </volume> <pages> 414-424, </pages> <year> 1979. </year>
Reference-contexts: In another family [50, 51], several alternative techniques are used in a nonobviuos way to find regional boundaries. The techniques are related to algorithms for record segmentation in shared databases [35], Combinatorial Optimization <ref> [48, 93] </ref> and Newton's zero finding method [51]. Letting R be the number of regions in a particular partition, the time complexity of those families of algorithms ranges from O (Rnm) to O (nm 2 log n) time [50, 51], depending on which technique is used to find region boundaries.
Reference: [94] <author> H.T. Mevissen and M. Vingron. </author> <title> Quantifying the local reliability of a sequence alignment. Protein Engin., </title> <note> to appear. </note>
Reference-contexts: Moreover, based on suboptimal alignment, one can define and compute robustness measures indicating how confident one can be about the biological correctness of two symbols (one from each sequence) being aligned in an optimal alignment <ref> [26, 94] </ref>. It is well known that the computation of equation (2) can be regarded as the identification of an optimum path on a special type of directed graph (called grid graph) on nm vertices having a single source s, a single sink t and 3nm edges.
Reference: [95] <author> W. Miller. </author> <title> An algorithm for locating a repeated region. </title> <type> manuscript, </type> <year> 1992. </year>
Reference-contexts: Repeating patterns are also useful laboratory tool. Indeed, the number of times a particular pattern repeats in a DNA sequence varies from individual to individual. Such regions are useful in localizing genes in a chromosome. The first algorithmic studies in this area are due to Miller <ref> [95] </ref>, Kannan and Myers [69] and Landau and Schmidt [82]. Additional algorithms based on heuristics are provided in [21, 96]. We will briefly review this kind of algorithms in Section 8. <p> A repeat is a tandem repeat if ` = r + 1. To keep things simple, let us assume that, among all possible repeats, we are interested in finding the best one, that is, the one of maximum score. This problem has been proposed by Miller <ref> [95] </ref>, who also gave a practical algorithm to solve it. The heart of the algorithm is the dynamic programming recurrence (2) that is used for local alignment. <p> Kannan and Myers [69] subsequently devised an algorithm with an O (n 2 log 2 n) time performance, by combining some of the ideas in <ref> [95] </ref> and [7]. More recently, Schmidt [118] generalized the notion of locally optimal alignment for strings (the one due to Sellers [121]) to locally optimal (non-overlapping) repeats and to locally optimal tandem repeats.
Reference: [96] <editor> A. Milosavljevic and J. Jurka. CABIOS, </editor> <volume> 4 </volume> <pages> 407-411, </pages> <year> 1993. </year>
Reference-contexts: Such regions are useful in localizing genes in a chromosome. The first algorithmic studies in this area are due to Miller [95], Kannan and Myers [69] and Landau and Schmidt [82]. Additional algorithms based on heuristics are provided in <ref> [21, 96] </ref>. We will briefly review this kind of algorithms in Section 8. One more important and very active area of Sequence Alignment is the one that deals with the alignment of multiple sequences. <p> This is a generalization of the well known problem in combinatorial algorithms on words that consists of finding all repetitions in a string (cf., e.g., [11, 30]) There are two heuristics to identify (approximate) repeated patterns. The one by Milosavljevic and Jurka <ref> [96] </ref> uses data compression algorithms in order to capture the repeatedness of the given sequence.
Reference: [97] <author> E. W. Myers. </author> <title> Incremental alignment algorithms and their applications. </title> <type> Technical Report, </type> <institution> U. Az.:1-23, </institution> <year> 1986. </year>
Reference-contexts: For completeness, we mention that a simplified version of the problem of finding all locally optimal tandem repeats had been considered in [82]. Algorithms dealing with similar "incremental" versions of string editing and longest common subsequences were produced in the mid 80's by Myers <ref> [97] </ref> and, in a distant context of searching for cliques on some special classes of graphs, Apostolico et al. [6]. A recent paper by Landau, Myers and Schmidt [81] combines the incremental methods for edit distance 16 without mismatches of [97] with the incremental methods for the Levenshtein edit distance and <p> common subsequences were produced in the mid 80's by Myers <ref> [97] </ref> and, in a distant context of searching for cliques on some special classes of graphs, Apostolico et al. [6]. A recent paper by Landau, Myers and Schmidt [81] combines the incremental methods for edit distance 16 without mismatches of [97] with the incremental methods for the Levenshtein edit distance and discusses a number biological applications where this is useful. In all the algorithms mentioned above, "tandem repeat" is used to indicate that a certain (perhaps approximate) pattern repeats twice in the given sequence.
Reference: [98] <author> E.W. Myers. </author> <title> An O(N D) difference algorithm and its variations. </title> <journal> Algorithmica, </journal> <volume> 1 </volume> <pages> 251-266, </pages> <year> 1986. </year>
Reference-contexts: Most fall in one of two basic paradigms due to Hirschberg [58] and Hunt and Szymanski [61], respectively, and improve on them in various ways (see, e.g., [10]). Other approaches, e.g. in <ref> [98, 100] </ref>, are especially suitable for similar strings. Space saving techniques are often crucial in molecular sequence alignment. For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space. <p> For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space. Solutions where linear space was not necessarily accompanied by fi (nm) time began with [9]. Further work in this area is found in <ref> [8, 27, 98, 99] </ref> and others. As mentioned, not all of the genetic material seems equally crucial to the functionality of organisms, so that the process of evolution tends to preserve some segments of DNA while accepting more liberally changes to others.
Reference: [99] <author> E.W. Myers and W. Miller. </author> <title> Optimal alignment in linear space. </title> <journal> Comput. Appl. Biosci., </journal> <volume> 4 </volume> <pages> 11-17, </pages> <year> 1988. </year>
Reference-contexts: For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space. Solutions where linear space was not necessarily accompanied by fi (nm) time began with [9]. Further work in this area is found in <ref> [8, 27, 98, 99] </ref> and others. As mentioned, not all of the genetic material seems equally crucial to the functionality of organisms, so that the process of evolution tends to preserve some segments of DNA while accepting more liberally changes to others. <p> Intuitively, this is a method that computes an alignment of sequences according to recurrence (1) or (2), except that one can view the computation as taking place on a torus rather than a matrix. This variation of dynamic programming seems to be due to <ref> [38, 99] </ref>. 9 Multiple Sequence Alignment Given a set of strings x 1 ; x 2 ; :::; x k over an alphabet , a multiple alignment for those strings is a two-dimensional matrix of k rows satisfying the following conditions.
Reference: [100] <author> Y. Kambayashi N. Nakatsu and S. Yajima. </author> <title> A longest common subsequence algorithm suitable for similar text strings. </title> <journal> Acta Informatica, </journal> <volume> 18 </volume> <pages> 171-179, </pages> <year> 1982. </year>
Reference-contexts: Most fall in one of two basic paradigms due to Hirschberg [58] and Hunt and Szymanski [61], respectively, and improve on them in various ways (see, e.g., [10]). Other approaches, e.g. in <ref> [98, 100] </ref>, are especially suitable for similar strings. Space saving techniques are often crucial in molecular sequence alignment. For some time, the early fi (nm) algorithm by Hirschberg [59] was the only one to require linear space.
Reference: [101] <author> D. Naor and D. Brutlag. </author> <title> On suboptimal alignments of biological sequences. </title> <booktitle> In Fourth Annual Symposium, CPM 93, Padova, Italy. Proceedings. (Lecture Notes in Computer Science, </booktitle> <volume> Vol. 684), </volume> <pages> pages 179-196, </pages> <year> 1993. </year>
Reference-contexts: For this reason, researchers have considered the problem of extracting suboptimal alignments that are acceptably close to the optimal one ( <ref> [27, 101, 131, 140, 141, 151] </ref>). <p> This latter problem is a very well known combinatorial problem for which many algorithms already exist (for references, see [84, 1]). Unfortunately, none of those algorithms is customized to exploit the special topology of the graphs we are interested in. Recently, Naor and Brutlag <ref> [101] </ref> devised an algorithm such that, given an alignment (a path in the grid graph) of some cost, it outputs the next best alignment in O (m) time (assuming that m n).
Reference: [102] <author> S.B. Needleman and C.D. Wunsch. </author> <title> A general method applicable to the search for similarities in the amino acid sequence of two proteins. </title> <journal> J. Mol. Biol., </journal> <volume> 48 </volume> <pages> 433-443, </pages> <year> 1970. </year>
Reference-contexts: Over the years, as strings to be aligned got longer, the objective of alignment shifted from that of the basic Needleman and Wunch method <ref> [102] </ref> (which computes an optimal global alignment) to those of methods that trade the optimality of the computed alignment for speed. Examples are the algorithms reported in [4, 89, 149, 150]. <p> Early solutions were also supplied at that time, based mostly on dynamic programming. In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others <ref> [44, 130, 129, 120, 102, 112] </ref>. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115]. <p> A few special cases of the recurrence above are of interest in various applications. Among them, the longest (or heaviest) common subsequences appears also among the earliest attempts at defining similarity among bio-sequences <ref> [102] </ref>. A subsequence of x is any string w that can be obtained from x by deleting zero or more (not necessarily consecutive) symbols.
Reference: [103] <author> J. Palmer and L. Herbon. </author> <title> Plant mitochondrial DNA evolves rapidly in structure, but slowly in sequence. </title> <journal> J. Mol. Evol., </journal> <volume> 27 </volume> <pages> 87-97, </pages> <year> 1988. </year> <month> 28 </month>
Reference-contexts: Indeed, evolution at the genomic level 5 seems to involve also non-local, large scale operations, which can rearrange a whole segment of a chromosome in one evolutionary event. Such non-local changes are hard to detect using a distance based on local edit operations (see, for instance, discussions in <ref> [47, 73, 103, 114, 117, 148] </ref>), and require taking into acccount more global structure and information. One approach is as follows. Assume that we can write both genomes we want to compare as two strings of genes. <p> Now, molecular biology suggests that if the two genomes are related, one should be obtainable from the other by a suitable rearrangement of its genes. This approach (gene rearrangement) has been pioneered by Palmer and Herbon <ref> [103] </ref> even though the earliest application of gene rearrangement to genome comparison seems to date back to 1938 [33]. From the combinatorial point of view, gene rearrangement requires the definition of new distances between the DNA sequences that encode genomes.
Reference: [104] <author> S. Pascarella and P. Argos. </author> <title> Analysis of insertion/deletion in proteins. </title> <journal> J. Mol. Biol., </journal> <volume> 224 </volume> <pages> 461-471, </pages> <year> 1992. </year>
Reference-contexts: In this context, it is important to come up with good methodologies on which to base the design of those experiments. Some steps in that direction have been taken (see for instance <ref> [56, 104] </ref>). We will see one of those methodologies in Section 7. In conclusion, quite some progress has been made in the quest for sound criteria on which to base the choice of weights for sequence alignment.
Reference: [105] <author> W.L. Pearson. </author> <title> Searching protein sequence libraries: Comparison of the sensitivity and selectivity of the Smith-Waterman and FASTA algorithms. </title> <journal> Genomics, </journal> <volume> 11 </volume> <pages> 635-650, </pages> <year> 1991. </year>
Reference-contexts: Conversely, we can change (2) and its initial conditions getting back a method for the computation of the global similarity between two strings. SW-local (with modifications by Gotoh [46]) is the base of the SSEARCH program for local alignment (Pearson <ref> [105] </ref>). 4 The Structure and Choice of Weights In the two alignment methods we have outlined in the previous Section, the values assigned to the weights or costs of insertions, deletions and substitutions are extremely important in obtaining alignments that are biologically meaningful. <p> However, numerical values may be different than the ones used for DNA (see, for instance, the values suggested by Pearson <ref> [105] </ref>). We also point out the interplay between a good choice of gap penalties and the substitution matrix used. Vingron and Waterman [147] discuss criteria on which to base these choices. In general, it is an open problem to determine a provably optimal set of values for gap penalties. <p> The famous Chen-Stein Poisson approximation is key to all this. Another approach that has been recently proposed is to come up with a methodology for the empirical assessment of the selectivity and sensitivity of alignment methods. Pearson <ref> [105] </ref> has proposed one such methodology and he has applied it to the comparison of some alignment programs for data base searches. We will briefly outline the main points of that methodology. The sensitivity and selectivity of a method is quantified by two parameters. <p> Moreover, sensitivity and selectivity of an alignment method is evaluated with respect to the SSEARCH program. As for establishing when a string in the data base has been found or missed, Pearson has suggested several statistical criteria <ref> [105] </ref>. In principle, those criteria would need the a priori knowledge of the statistical distribution of scores. That knowledge is experimentally precomputed as follows.
Reference: [106] <author> W.L. Pearson and W.R. Lipman. </author> <title> Improved tools for biological sequence comparison. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. Sci., USA, </institution> <month> 85 </month> <pages> 2444-2448, </pages> <year> 1988. </year>
Reference-contexts: Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance <ref> [34, 89, 106] </ref>. We now briefly mention some results from the available statistical theory of local sequence alignment. Assume that the alphabet symbols are iid and consider two sequences x and y randomly drawn from this "information source".
Reference: [107] <author> P. Pevzner. </author> <title> Multiple alignment, communication cost, and graph matching. </title> <journal> Siam J. on Applied Math., </journal> <volume> 52 </volume> <pages> 1763-1779, </pages> <year> 1992. </year>
Reference-contexts: The best performance ratio previously available is 2 l=k, for any fixed l. The algorithm that achieves it, due to Bafna, Lawler and Pevzner [17], has a running time that increases exponentially with increasing l. Additional early work in this area is due to Pevzner <ref> [107] </ref>, Gusfield [49] and Bafna and Pevzner [19]. From the practical point of view, it seems that the method by Gusfield is the one that, so far, yields biologically plausible solutions that are only 2% away from optimal [107]. <p> Additional early work in this area is due to Pevzner <ref> [107] </ref>, Gusfield [49] and Bafna and Pevzner [19]. From the practical point of view, it seems that the method by Gusfield is the one that, so far, yields biologically plausible solutions that are only 2% away from optimal [107]. We now briefly outline the main ideas at the heart of those approximation algorithms. Consider an undirected weighted graph G. Let T be a spanning tree for G. <p> Another type of investigation in the design of good approximation algorithms for SP is based on a careful analysis of the connection between the compatibility of pairwise alignments to form multiple alignment of k strings and the choice of which pairwise alignments to use (see, for instance, <ref> [17, 107] </ref>). Along this line, first the notion of compatibility has been extended from pairwise alignment to multiple alignments involving l strings, l &lt; k. <p> That is, the optimal alignments from which we try to build A consist of l strings each (so, now we have k possible alignments to choose from). Moreover, that notion has been formalized in terms of a graph having some specific topological constraints (such graphs are called configurations in <ref> [107] </ref>). Finally, the problem of finding a good multiple alignment A has been reduced to that of finding an optimal configuration satisfying some additional topological constraints. This latter task can be done in polynomial time. <p> When the tree is fixed, Sankoff [113] provided an exact algorithm. Studies that generalize to this problem some of the ideas of Carrillo and Lipman for SP alignment are reported in Altschul and Lipman [5] and Pevzner <ref> [107] </ref>. An approximation with performance ratio of 2 for fixed tree with triangle inequality was afforded in time O (k 2 n 2 + k 3 ) [65].
Reference: [108] <author> P. Pevzner and M. Vingron. </author> <title> Multiple sequence comparison and consistency on multipartite graphs. </title> <journal> Adv. Appl. Math., </journal> <volume> 16 </volume> <pages> 1-22, </pages> <year> 1995. </year>
Reference-contexts: The result is a filtered dot-matrix which is now consistent with the other two, according to this criterion. Filtration of the triple is obtained by subjecting the other two plots to the same treatment. For many strings, the problem reduces to iteration over sets of 3 strings. In <ref> [108] </ref>, the problem is modeled as a multipartite graph, and "having a similarity in common" is interpreted in terms of a suitably introduced notion of consistency on multipartite graphs.
Reference: [109] <author> K.R. </author> <title> Popper. The Logic of Scientific Discovery. </title> <publisher> Hutchinson, </publisher> <address> London, </address> <year> 1959. </year>
Reference-contexts: Measuring structure in finite objects, however, presupposes the accomplishment of the "intuitive program" of "analyzing randomness as far as it is possible within the region of finite sequences" <ref> [109] </ref>, a goal cultivated already by Von Mises [133] and other statisticians at the turn of the century. One of the 2 deepest acquisitions in this domain is linked to Kolmogorov's innovative approach to the definition of information [80] (see also [91]).
Reference: [110] <author> J.K. Mohana Rao. </author> <title> New scoring matrix for amino acid residue exchanges based on residue characteristic physical parameters. </title> <journal> Int. J. Pept. Protein Res., </journal> <volume> 29 </volume> <pages> 276-281, </pages> <year> 1987. </year>
Reference-contexts: Each such operation carries a cost or "weight", and one would like to perform the transformation at the cheapest possible overall cost. The most commonly used weights for DNA are the ones by Fitch and Margoliash [39]. For amino acids, many weight systems have been proposed (see for instance <ref> [37, 92, 110, 111, 123] </ref>). However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins [57].
Reference: [111] <author> J.L. Risler, M.O. Delorme, H. Delacroix, and A. Henaut. </author> <title> Amino acid substitutions in structurally related proteins: A pattern recognition approach. Determination of a new and efficient scoring matrix. </title> <journal> J. Mol. Biol., </journal> <volume> 204 </volume> <pages> 1019-1029, </pages> <year> 1988. </year>
Reference-contexts: Each such operation carries a cost or "weight", and one would like to perform the transformation at the cheapest possible overall cost. The most commonly used weights for DNA are the ones by Fitch and Margoliash [39]. For amino acids, many weight systems have been proposed (see for instance <ref> [37, 92, 110, 111, 123] </ref>). However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins [57].
Reference: [112] <author> D. Sankoff. </author> <title> Matching sequences under deletion/insertion constraints. </title> <journal> In Proc. Nat. Acad. of Sci., U.S.A., </journal> <volume> volume 69, </volume> <pages> pages 4-6, </pages> <year> 1972. </year>
Reference-contexts: Early solutions were also supplied at that time, based mostly on dynamic programming. In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others <ref> [44, 130, 129, 120, 102, 112] </ref>. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115].
Reference: [113] <author> D. Sankoff. </author> <title> Minimal mutation trees of sequences. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 28(1) </volume> <pages> 35-42, </pages> <year> 1975. </year>
Reference-contexts: Perhaps more significant from a biological perspective is the following problem originally stated by Sankoff, and now referred to as multiple alignment under an evolutionary tree <ref> [113] </ref>. We are given a set of strings (typically, DNA) labeling the leaves of a given tree. We want to find ancestral strings to label the internal nodes of the tree and such that a given score function is minimized. <p> Intuitively, one is trying to establish whether a set of strings have common ancestors and how those ancestors look like. Sankoff also provided algorithms for this problem <ref> [113] </ref>. In multiple sequence alignment problems one faces the same difficulties and issues already mentioned for the alignment of two sequences, i.e., choice of weights, statistical significance, etc., except that here computations become overwhelmingly demanding. <p> The optimal multiple alignment matrix A can be recovered from the optimal tree since any tree of pairwise alignment can be merged into a multiple alignment that complies with the alignments in the tree. An important special case, due to Sankoff <ref> [113] </ref> and which was the first formulation of this kind of alignment, is for a fixed tree. That is, the topology of the tree is fixed and we must optimize over the strings in Y only. Following Sankoff [113], this "family" of multiple sequence alignments can be cast in the form <p> An important special case, due to Sankoff <ref> [113] </ref> and which was the first formulation of this kind of alignment, is for a fixed tree. That is, the topology of the tree is fixed and we must optimize over the strings in Y only. Following Sankoff [113], this "family" of multiple sequence alignments can be cast in the form given by (7). We also point out that this type of alignment tries to minimize the number of mutations from the species represented by strings in X to their ancestors, represented by the strings in Y . <p> Without any tree being assumed, an approximation with a performance ratio of 2 in O (k 2 n 2 ) time has been established by Gusfield [49]. When the tree is fixed, Sankoff <ref> [113] </ref> provided an exact algorithm. Studies that generalize to this problem some of the ideas of Carrillo and Lipman for SP alignment are reported in Altschul and Lipman [5] and Pevzner [107].
Reference: [114] <author> D. Sankoff. </author> <title> Edit distance for genome comparison based on non-local operations. </title> <editor> In A. Apostolico, M. Crochemore, Z. Galil, and U. Manber, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 92 (Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 644 ), pages 121-135, </pages> <address> Berlin, 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Indeed, evolution at the genomic level 5 seems to involve also non-local, large scale operations, which can rearrange a whole segment of a chromosome in one evolutionary event. Such non-local changes are hard to detect using a distance based on local edit operations (see, for instance, discussions in <ref> [47, 73, 103, 114, 117, 148] </ref>), and require taking into acccount more global structure and information. One approach is as follows. Assume that we can write both genomes we want to compare as two strings of genes. <p> Notions of distance can be defined that quantify the "evolutionary change" of one genome into the other by means of (subsets of) the above operations (see <ref> [114, 53] </ref> and references therein). The mechanism through which one can define a distance between genomes is the same used to define any other metric on strings (see Section 2). One formally defines and assigns weights to the operations of interest (say, inversion, transposition and translocation). <p> Such an investigation would lead immediately to two new areas of research: How to assign weights to the chosen operations (for a brief discussion of this topic see <ref> [114] </ref>) and how to compute those distances. 11 Acknowledgments This paper is based on presentations and literature given at the Workshop on "Sequence Alignment" which was held in Princeton, N.J., Nov 10-12, 1995, as part of the DIMACS Special Year on Mathematical Support for Molecular Biology.
Reference: [115] <author> D. Sankoff. </author> <title> The early introduction of dynamic programming into Computational Biology. </title> <type> manuscript, </type> <year> 1996. </year>
Reference-contexts: In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others [44, 130, 129, 120, 102, 112]. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff <ref> [115] </ref>. In computer science, the problem was dubbed "the string to string correction problem" by Wagner and Fischer [134], who gave it the following formalization.
Reference: [116] <editor> D. Sankoff and J.B. Kruskal editors. </editor> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, U.S.A., </address> <year> 1983. </year>
Reference-contexts: O. Dayhoff [31] and others. Since 1982, Nucleic Acids Research has routinely devoted special issues of 600 pages or more to the latest developments in this area. By 1983, enough original material had accumulated on sequence comparison techniques to warrant dedication of a full volume <ref> [116] </ref>. Part of these developments occurred in parallel with algorithmics on strings, thus contributing some remarkable challenges to algorithmic design. In general, however, the two endeavors conserved rather distinctive individual flavors.
Reference: [117] <author> D. Sankoff, G. Leduc, N. Antoine, B. Paquin, B. Franz Lang, and R. Cedergren. </author> <title> Gene order comparison for phylogenetic inference: evolution of the mitochondrial genome. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. Sci., USA, </institution> <month> 89 </month> <pages> 6575-6579, </pages> <year> 1992. </year>
Reference-contexts: Indeed, evolution at the genomic level 5 seems to involve also non-local, large scale operations, which can rearrange a whole segment of a chromosome in one evolutionary event. Such non-local changes are hard to detect using a distance based on local edit operations (see, for instance, discussions in <ref> [47, 73, 103, 114, 117, 148] </ref>), and require taking into acccount more global structure and information. One approach is as follows. Assume that we can write both genomes we want to compare as two strings of genes.
Reference: [118] <author> J.P. Schmidt. </author> <title> All highest scoring paths in weighted grid graphs and its application to finding all approximate repeats in strings. </title> <booktitle> In Proc. Third Israel Symposium on Theory of Computing and Systems), </booktitle> <pages> pages 67-77, </pages> <address> New York, 1995. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Kannan and Myers [69] subsequently devised an algorithm with an O (n 2 log 2 n) time performance, by combining some of the ideas in [95] and [7]. More recently, Schmidt <ref> [118] </ref> generalized the notion of locally optimal alignment for strings (the one due to Sellers [121]) to locally optimal (non-overlapping) repeats and to locally optimal tandem repeats. She also devised an O (n 2 log n) time algorithm that computes all such locally optimal repeats.
Reference: [119] <author> G.D. Schuler, </author> <title> S.F. Altschul, and D.J. Lipman. A workbench for multiple sequence alignment. In Protein: Structure, Function and Genetics, </title> <year> 1992. </year>
Reference-contexts: We also point out that, dispite the expensiveness of this alignment method, it is used in several available software systems for multiple sequence alignment <ref> [88, 119] </ref> Even before the computational complexity of SP was settled, there have been two lines of research aiming at the design of fast algorithms for the problem. A common feature of both efforts is to find a good matrix A.
Reference: [120] <author> P.H. Sellers. </author> <title> On the theory and computation of evolutionary distance. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 26 </volume> <pages> 787-793, </pages> <year> 1974. </year>
Reference-contexts: Early solutions were also supplied at that time, based mostly on dynamic programming. In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others <ref> [44, 130, 129, 120, 102, 112] </ref>. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115].
Reference: [121] <author> P.H. Sellers. </author> <title> The theory and computation of evolutionary distances: </title> <journal> Pattern recognition. J. of Alg., </journal> <volume> 1 </volume> <pages> 359-373, </pages> <year> 1980. </year>
Reference-contexts: Kannan and Myers [69] subsequently devised an algorithm with an O (n 2 log 2 n) time performance, by combining some of the ideas in [95] and [7]. More recently, Schmidt [118] generalized the notion of locally optimal alignment for strings (the one due to Sellers <ref> [121] </ref>) to locally optimal (non-overlapping) repeats and to locally optimal tandem repeats. She also devised an O (n 2 log n) time algorithm that computes all such locally optimal repeats. The data structures she devised may be useful in other sequence alignment contexts.
Reference: [122] <author> P.H. Sellers. </author> <title> Pattern recognition in genetic sequences by mismatch density. </title> <journal> Bull. Math. Biol., </journal> <volume> 46 </volume> <pages> 501-514, </pages> <year> 1984. </year>
Reference-contexts: In some cases, one may be interested in all locally optimal alignments. This simple method is the base for the BLAST program, one of the fastest programs for local sequence alignment [4]. Other methods of this kind have also been proposed (see, for instance, <ref> [13, 15, 74, 122] </ref>). Beginning in the late sixties, measures of similarity based on Levenshtein distances were independently proposed in such diverse fields as speech processing, text editing and, of course, molecular biology. Early solutions were also supplied at that time, based mostly on dynamic programming.
Reference: [123] <author> R.F. Smith and T.F. Smith. </author> <title> Automatic generation of primary sequence patterns from sets of related protein sequences. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. of Sci., USA, </institution> <month> 87 </month> <pages> 118-122, </pages> <year> 1990. </year>
Reference-contexts: Each such operation carries a cost or "weight", and one would like to perform the transformation at the cheapest possible overall cost. The most commonly used weights for DNA are the ones by Fitch and Margoliash [39]. For amino acids, many weight systems have been proposed (see for instance <ref> [37, 92, 110, 111, 123] </ref>). However, for a long time the ones by Dayhoff et al. [32] have been the standard and, very recently, the ones by Henikoff and Henikoff [56] seem to be superior for the alignment of distantly related proteins [57].
Reference: [124] <author> T. Smith and M.S. Waterman. </author> <title> Identification of common molecular subsequences. </title> <journal> J. Mol. Biol., </journal> <volume> 147 </volume> <pages> 195-197, </pages> <year> 1981. </year>
Reference-contexts: That can be done by means of the following dynamic programming recurrence <ref> [124] </ref>: LA (i; j) = maxfLA (i 1; j 1) + S (x i ; y j ); LA (i 1; j) + ffi; LA (i; j 1) + ffi; 0g (2) where ffi is the weight of deleting or inserting a symbol, 1 i n and 1 j m, and
Reference: [125] <author> T. Smith, M.S. Waterman, and Burks. </author> <title> The statistical distribution of nucleic acid similarities. </title> <journal> Nucleic Acid Research, </journal> <volume> 13 </volume> <pages> 645-656, </pages> <year> 1985. </year>
Reference-contexts: The mathematical tractability of those statistical questions seems to depend on two main factors: (1) the particular type of alignment being considered, and (2) the weights that we assign to the edit operations. Early results in this area are reported in <ref> [28, 72, 125] </ref>. A closely related issue is a quantification of the "sensitivity" and "selectivity" of sequence alignment methods. In loose terms, sensitivity is the ability to detect distant evolutionary relationships between two strings, while selectivity is the ability to avoid the assignment of high scores to unrelated strings.
Reference: [126] <author> D.J. States, W. Gish, and S.F. Altschul. </author> <title> Improved sensitivity of nucleic acid databases searches using application specific scoring matrices. METHODS: A companion to Method. </title> <booktitle> in Enzim.., </booktitle> <volume> 3 </volume> <pages> 66-70, </pages> <year> 1991. </year>
Reference-contexts: Therefore, we choose a substitution matrix with relative entropy close to log N=f . Based on this criterion, Altschul [2] provides a set of guidelines on which PAM matrices to use in which contexts. Further studies are reported in <ref> [3, 126] </ref>. The relative entropy of a substitution matrix is also very important to establish a criterion on which to base the comparison of the performance (in terms of parameters such as sensitivity and selectivity, to be discussed below) of two different substitution matrices.
Reference: [127] <author> W.R. Taylor. </author> <title> The classification of amino acid conservation. </title> <journal> J. of Theor. Biol., </journal> <volume> 119 </volume> <pages> 205-218, </pages> <year> 1986. </year>
Reference-contexts: Additional discussion of the available methods can be found in [12, 25, 143]. It should also be pointed out up-front that the current methods may not yield biologically adequate alignments <ref> [127] </ref>. The problem in its general form gives rise to a recurrence that is computed through an obvious generalization of the dynamic programming algorithm for two-sequence alignment.
Reference: [128] <author> V.G. Timkovskii. </author> <title> Complexity of common subsequence and supersequence problems and related problems. </title> <journal> Cybernetics, </journal> <volume> 25(5) </volume> <pages> 565-580, </pages> <year> 1990. </year>
Reference-contexts: The general multiple alignment problem inherits NP-completeness from its LCS and SCS specializations. In fact, NP-completeness results relative to LCS and SCS problems were first achieved by Maier [90]. More recent results are in <ref> [128] </ref> and [22]. 9.1 Minimum Sum of Pairs For this version of the multiple sequence alignment problem, the cost function d in (7) is given by: d (a 1j a 2j :::a kj ) = 1f&lt;gk c (a fj ; a gj ) (8) where c (; ) = 0, c
Reference: [129] <author> S.M. Ulam. </author> <title> Some combinatorial problems studied experimentally on computing machines. in: Applications of Number THeory to Numerical Analysis S.K. Zaremba, editor, </title> <publisher> Academic Press, </publisher> <pages> pages 1-10, </pages> <year> 1972. </year>
Reference-contexts: Early solutions were also supplied at that time, based mostly on dynamic programming. In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others <ref> [44, 130, 129, 120, 102, 112] </ref>. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115].
Reference: [130] <author> S.M. Ulam. </author> <title> Some ideas and prospects in biomathematics. </title> <journal> Annual Review of Biophysics and Bioengi-neering, </journal> <volume> 1 </volume> <pages> 277-291, </pages> <year> 1972. </year>
Reference-contexts: Early solutions were also supplied at that time, based mostly on dynamic programming. In molecular biology, distances and related computations were proposed by Ulam, Needleman and Wunsch, Sellers, Sankoff and others <ref> [44, 130, 129, 120, 102, 112] </ref>. For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115].
Reference: [131] <author> M. Vingron and P. Argos. </author> <title> Determination of reliable regions in protein sequence alignment. </title> <journal> Protein Engin., </journal> <volume> 7 </volume> <pages> 565-569, </pages> <year> 1990. </year>
Reference-contexts: For this reason, researchers have considered the problem of extracting suboptimal alignments that are acceptably close to the optimal one ( <ref> [27, 101, 131, 140, 141, 151] </ref>).
Reference: [132] <author> M. Vingron and P. Argos. </author> <title> Motif recognition and alignment for many sequences by comparison of dot-matrices. </title> <journal> J. Mol. Biol., </journal> <volume> 218 </volume> <pages> 33-43, </pages> <year> 1991. </year>
Reference-contexts: Dot-plots cannot be simply superimposed, because of deletions and insertions in the various alignment pairs. The alternative proposed in <ref> [132] </ref> consists of filtering the individual original plots according to a consistency criterion that results in an easy and elegant algebraic computation. Specifically, assume 3 strings are given and let A (1;2) ; A (1;3) and A (2;3) be the pairwise plots, with obvious meaning.
Reference: [133] <author> R. </author> <title> von Mises. Probability, Statistics and Truth. </title> <publisher> MacMillan, </publisher> <address> New York, </address> <year> 1939. </year>
Reference-contexts: Measuring structure in finite objects, however, presupposes the accomplishment of the "intuitive program" of "analyzing randomness as far as it is possible within the region of finite sequences" [109], a goal cultivated already by Von Mises <ref> [133] </ref> and other statisticians at the turn of the century. One of the 2 deepest acquisitions in this domain is linked to Kolmogorov's innovative approach to the definition of information [80] (see also [91]).
Reference: [134] <author> R.A. Wagner and M. J. Fischer. </author> <title> The string to string correction problem. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 21 </volume> <pages> 168-173, </pages> <year> 1974. </year>
Reference-contexts: For a recollection of how the 6 idea of dynamic programming became a standard tool in many problems of computational biology is provided by Sankoff [115]. In computer science, the problem was dubbed "the string to string correction problem" by Wagner and Fischer <ref> [134] </ref>, who gave it the following formalization. Given two strings x and y, the problem is to transform x into y by performing a series of weighted edit operations on x of overall minimum cost.
Reference: [135] <author> L. Wang and D. Gusfield. </author> <title> Improved approximation algorithms for tree alignment. </title> <editor> In D. Hirschberg and G. Myers, editors, </editor> <booktitle> Proc. Combinatorial Pattern Matching 96 (Lecture Notes in Computer Science), </booktitle> <address> pages -, Berlin, 1996. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A reduction of this time to O (k 2 n 2 + k 2 ), along with a much improved approximation scheme, has appeared quite recently in <ref> [135] </ref>. 20 9.4 Dot-Plots Multiple sequence comparisons may also be based on measures other than edit scripts, e.g., dot-plots [29].
Reference: [136] <author> L. Wang and T. Jiang. </author> <title> On the complexity of multiple sequence alignment. </title> <journal> Journal of Computational Biology, </journal> <volume> 1 </volume> <pages> 337-348, </pages> <year> 1994. </year>
Reference-contexts: In multiple sequence alignment problems one faces the same difficulties and issues already mentioned for the alignment of two sequences, i.e., choice of weights, statistical significance, etc., except that here computations become overwhelmingly demanding. In fact, many multiple sequence alignment problems are NP-Hard (see for instance <ref> [136] </ref>), or too time consuming (see [63]). Also in the case of multiple sequence alignment, there is a trend to develop fast algorithms that trade-off optimality of the required solution for speed (see for instance [17]). <p> Also in the case of multiple sequence alignment, there is a trend to develop fast algorithms that trade-off optimality of the required solution for speed (see for instance [17]). However, in some cases, even the computation of approximate solutions is hard (see for instance <ref> [136] </ref>). The notion of distance between strings that uses symbol-based edit operations models evolution in terms of very local changes to the genomes. <p> In principle, it is not difficult to set up a solution in O (k 2 2 k n k ) time and O (n k ) space. However, SP alignment is NP-complete <ref> [136] </ref>. We point out that NP-completeness of this problem cannot be directly inferred from the NP-completeness of the general alignment problem given by (7), since the cost function d is now specified. <p> For this class of problems, there are a set of negative results stating that the existence of approximation algorithms that can get arbitrarily close to the optimum is unlikely, even if the topology of the tree is given <ref> [136] </ref>. Without any tree being assumed, an approximation with a performance ratio of 2 in O (k 2 n 2 ) time has been established by Gusfield [49]. When the tree is fixed, Sankoff [113] provided an exact algorithm.
Reference: [137] <editor> S. Watanabe. Knowing and Guessing. </editor> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1969. </year>
Reference-contexts: At the empirical level, such a validation is made impossible by the uniqueness of the evolutionary experiment. At the epistemological level, the notion of a class of similar objects does not rest on very firm grounds. For instance, a claim known as the "Theorem of the Ugly Duckling" <ref> [137] </ref> states that as long as all of the predicates characterizing the objects to be classified are given the same importance or "weight", then a swan will be found to be just as similar to a duck as to another swan.
Reference: [138] <author> M.S. Waterman. </author> <title> Parametric and ensemble sequence alignment. </title> <journal> Bull. Math. Biol., </journal> <volume> 56 </volume> <pages> 743-767, </pages> <year> 1994. </year>
Reference-contexts: It was only later, however, that both mathematical formulations and algorithms for PS alignment were obtained by Gusfield et al. Additional work is found in <ref> [147, 138] </ref>, and software has been developed specifically for this kind of alignment [50, 51, 142]. Before proceeding further, we need to make some preliminary observations. Till noted differently, we refer to the "global" sequence alignment. Implicit in the discussion of Section 3 is the following interpretation of sequence alignment.
Reference: [139] <author> M. S. Waterman. </author> <title> Introduction to Computational Biology. Maps, Sequences and Genomes. </title> <publisher> Chapman Hall, </publisher> <year> 1995. </year>
Reference-contexts: Early studies on methods and tools for the automated analysis and comparisons of biosequences were stimulated by the identification of the aminoacid sequences of a number of proteins in the 1960s. Activity in this area has been growing ever since, and culminates with the considerable outburst of computational biology <ref> [139] </ref> in recent years, as more and more sequences accumulate from the genome sequencing of humans and other species. Despite some key conceptual acquisitions and substantial practical progress, we still do not have consolidated methods for every sequence alignment task. <p> For the time being, the available results are limited to some important families of "random" strings (see <ref> [83, 145, 15, 144, 139, 146] </ref>). Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance [34, 89, 106]. <p> We are interested in the statistical properties of such a score. The problem is not trivial and one of the major findings in this area is that those statistical properties depend heavily on the choice of indel and mismatch costs. Indeed, Arratia and Waterman <ref> [15, 139] </ref> have studied the asymptotic growth of the random variable "local alignment score of two sequences", and they have discovered that, as a function of indel and mismatch costs, it first grows logarithmically and then linearly.
Reference: [140] <author> M.S. Waterman and T.H. Byers. </author> <title> A dynamic programming algorithm to find all solutions in a neighborhood of the optimum. </title> <journal> Math. Biosci., </journal> <volume> 77 </volume> <pages> 179-188, </pages> <year> 1985. </year>
Reference-contexts: For this reason, researchers have considered the problem of extracting suboptimal alignments that are acceptably close to the optimal one ( <ref> [27, 101, 131, 140, 141, 151] </ref>).
Reference: [141] <author> M.S. Waterman and M. Eggert. </author> <title> A new algorithm for best subsequence alignments with applications to tRNA-rRNA comparisons. </title> <journal> J. Mol. Biol., </journal> <volume> 197 </volume> <pages> 723-728, </pages> <year> 1987. </year>
Reference-contexts: For this reason, researchers have considered the problem of extracting suboptimal alignments that are acceptably close to the optimal one ( <ref> [27, 101, 131, 140, 141, 151] </ref>).
Reference: [142] <author> M. S. Waterman, M. Eggert, and E. Lander. </author> <title> Parametric sequence comparisons. </title> <booktitle> Proceedings of the National Academy of Sciences of the USA, </booktitle> <volume> 89 </volume> <pages> 6090-6093, </pages> <year> 1992. </year>
Reference-contexts: It was only later, however, that both mathematical formulations and algorithms for PS alignment were obtained by Gusfield et al. Additional work is found in [147, 138], and software has been developed specifically for this kind of alignment <ref> [50, 51, 142] </ref>. Before proceeding further, we need to make some preliminary observations. Till noted differently, we refer to the "global" sequence alignment. Implicit in the discussion of Section 3 is the following interpretation of sequence alignment. <p> The parameter space reduces then to two dimensions. Gusfield et al. have shown that the number of regions is bounded by n 2=3 for global alignment and n 2 for local alignment. There are two families of efficient algorithms available here <ref> [50, 51, 142] </ref>. They all use sequence alignment algorithms as subroutines but differ on how the boundaries of the regions are found. In one family [142], one uses the novel idea of infinitesimal sequence alignment in which the computation of equation (2) is carried out as a symbolic computation. <p> There are two families of efficient algorithms available here [50, 51, 142]. They all use sequence alignment algorithms as subroutines but differ on how the boundaries of the regions are found. In one family <ref> [142] </ref>, one uses the novel idea of infinitesimal sequence alignment in which the computation of equation (2) is carried out as a symbolic computation. In another family [50, 51], several alternative techniques are used in a nonobviuos way to find regional boundaries.
Reference: [143] <editor> M.S. Waterman. Sequence alignments. In M.S. Waterman, editor, </editor> <booktitle> Mathematical Analysis of DNA Sequences, </booktitle> <pages> pages 53-92. </pages> <publisher> CRC, </publisher> <year> 1989. </year>
Reference-contexts: Other notable variants are the minimum sum of pair and the multiple alignment under a fixed evolutionary tree, both to be discussed below. Additional discussion of the available methods can be found in <ref> [12, 25, 143] </ref>. It should also be pointed out up-front that the current methods may not yield biologically adequate alignments [127]. The problem in its general form gives rise to a recurrence that is computed through an obvious generalization of the dynamic programming algorithm for two-sequence alignment.
Reference: [144] <author> M.S. Waterman. </author> <title> Estimating of statistical significance of sequence alignments. </title> <journal> Phil. Trans. R. Soc. London (B), </journal> <volume> 344 </volume> <pages> 383-390, </pages> <year> 1994. </year>
Reference-contexts: For the time being, the available results are limited to some important families of "random" strings (see <ref> [83, 145, 15, 144, 139, 146] </ref>). Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance [34, 89, 106].
Reference: [145] <author> M.S. Waterman, L. Gordan, and R. Arratia. </author> <title> Phase transition in sequence matches and nucleic acid structure. </title> <booktitle> Proc. </booktitle> <institution> Natl. Acad. Sci., USA, </institution> <month> 84 </month> <pages> 1239-1243, </pages> <year> 1987. </year>
Reference-contexts: For the time being, the available results are limited to some important families of "random" strings (see <ref> [83, 145, 15, 144, 139, 146] </ref>). Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance [34, 89, 106].
Reference: [146] <author> M.S. Waterman and M. Vingron. </author> <title> Sequence comparison significance and Poisson approximation. </title> <journal> Statistical Sciences, </journal> <volume> 9 </volume> <pages> 367-381, </pages> <year> 1994. </year>
Reference-contexts: For the time being, the available results are limited to some important families of "random" strings (see <ref> [83, 145, 15, 144, 139, 146] </ref>). Lacking a general statistical theory, Monte Carlo techniques are used sometimes to establish how likely it is for a given alignment score to be due to chance [34, 89, 106]. <p> As for choices of parameters in the "log region", the probability that a score shall exceed some constant can be estimated through a Poisson approximation <ref> [146] </ref>, provided that some heuristic considerations are applied. Based on that approximation, one can derive estimates on the number of alignments with scores exceeding some bound. This is in analogy, although more general, than what Karlin and Althshul [70] have obtained for "mismatches only" (see equation (4) above).
Reference: [147] <author> M. Vingron and M.S. Waterman. </author> <title> Sequence Alignment and Penalty Choice. Review of Concepts, Case Studies and Implications J. Mol. </title> <journal> Biol., </journal> <volume> 235 </volume> <pages> 1-12, </pages> <year> 1994. </year> <month> 30 </month>
Reference-contexts: However, numerical values may be different than the ones used for DNA (see, for instance, the values suggested by Pearson [105]). We also point out the interplay between a good choice of gap penalties and the substitution matrix used. Vingron and Waterman <ref> [147] </ref> discuss criteria on which to base these choices. In general, it is an open problem to determine a provably optimal set of values for gap penalties. The substitution matrix is usually chosen to be a log-likelihood matrix, i.e., a matrix with entries in the form prescribed by (3). <p> In the next three sections we will review the state of the art on those topics. However, it should be kept in mind that results in those areas may have a fall-out on the issues treated in the present Section (see for instance discussions in <ref> [40, 51, 147] </ref>). 5 Parametric Sequence Alignment In Parametric Sequence Alignment (PS alignment for short), the two input sequences are assumed to be fixed and the problem is to compute optimal alignments as a function of varying edit costs. <p> It was only later, however, that both mathematical formulations and algorithms for PS alignment were obtained by Gusfield et al. Additional work is found in <ref> [147, 138] </ref>, and software has been developed specifically for this kind of alignment [50, 51, 142]. Before proceeding further, we need to make some preliminary observations. Till noted differently, we refer to the "global" sequence alignment. Implicit in the discussion of Section 3 is the following interpretation of sequence alignment.
Reference: [148] <author> G.A. Wattenson, W.J. Ewens, T.E. Hall, and A. Morgan. </author> <title> The chromosome inversion problem. </title> <journal> J. of Theor. Biol., </journal> <volume> 99 </volume> <pages> 1-7, </pages> <year> 1982. </year>
Reference-contexts: Indeed, evolution at the genomic level 5 seems to involve also non-local, large scale operations, which can rearrange a whole segment of a chromosome in one evolutionary event. Such non-local changes are hard to detect using a distance based on local edit operations (see, for instance, discussions in <ref> [47, 73, 103, 114, 117, 148] </ref>), and require taking into acccount more global structure and information. One approach is as follows. Assume that we can write both genomes we want to compare as two strings of genes. <p> Moreover, it gives rise to a set of very interesting and challenging combinatorial problems. In this context, the first formulation of a new distance and of an algorithm computing it seems to be due to <ref> [148] </ref>. Very recently, there has been quite a bit of work, initiated by Kececiouglu and Sankoff [79], for the formal investigation of the computational complexity of various distances between genomes. <p> We let d (n) = max 2S n d (), where d () is the reversal distance of from the identity permutation. Sorting by reversal was posed in 1982 by Wattenson et al. <ref> [148] </ref>, who devised also an heuristic algorithm computing it. Very recently, Kececioglu and Sankoff [79] begun a formal study of the computational complexity of this problem and conjectured that it is NP-Hard.
Reference: [149] <author> W.J. Wilbur and D. J. Lipman. </author> <title> The context dependent comparison of biological sequences. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 44 </volume> <pages> 557-567, </pages> <year> 1984. </year>
Reference-contexts: Examples are the algorithms reported in <ref> [4, 89, 149, 150] </ref>. For the interested reader, an overview of some algorithmic issues related to such a speed-optimality trade-off, as well as to the impact of weights on the computational speed can be found in [43]. As mentioned, alignment methods are also routinely used in data base searches.
Reference: [150] <author> W.J. </author> <title> Wilbur and D.J. Lipman. Rapid similarity searches of nucleic acid and protein data banks. </title> <booktitle> In Proc. </booktitle> <institution> Nat. Acad. Sci. </institution> <address> USA 80, </address> <pages> pages 726-730, </pages> <year> 1983. </year>
Reference-contexts: Examples are the algorithms reported in <ref> [4, 89, 149, 150] </ref>. For the interested reader, an overview of some algorithmic issues related to such a speed-optimality trade-off, as well as to the impact of weights on the computational speed can be found in [43]. As mentioned, alignment methods are also routinely used in data base searches.
Reference: [151] <author> M. Zuker. </author> <title> Suboptimal sequence alignment in Molecular Biology, alignment with error analysis. </title> <journal> J. Mol. Biol., </journal> <volume> 221 </volume> <pages> 403-420, </pages> <year> 1991. </year> <month> 31 </month>
Reference-contexts: For this reason, researchers have considered the problem of extracting suboptimal alignments that are acceptably close to the optimal one ( <ref> [27, 101, 131, 140, 141, 151] </ref>).
References-found: 151

