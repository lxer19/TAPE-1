URL: http://www.iro.umontreal.ca/~drissi/ttt3.ps
Refering-URL: http://www.iro.umontreal.ca/~drissi/
Root-URL: http://www.iro.umontreal.ca
Email: drissi@iro.umontreal.ca  bochmann@site.uottawa.ca  
Phone: Phone: (514) 343-6161, Fax: (514) 343-5834,  2  Phone (613) 562-5800 ext. 6205, Fax 562-5175  
Title: Submodule construction for systems of I/O automata  
Author: J. Drissi G. v. Bochmann 
Note: Colonnel By  
Address: Montral, CP. 6128, Succ. Centre-Ville, Montral, H3C 3J7, Canada,  Ottawa  Hall (A510), P.O.Box 450 Stn A,Ottawa,Ont.,K1N 6N5, Canada,  
Affiliation: 1 Dept. d'IRO, Universit de  School of Information Technology Engineering, University of  
Abstract: This paper addresses the problem of designing a submodule of a given system of communicating I/O automata. The problem may be formulated mathematically by the equation (C||X)r A under the constraint I X =In, where C represents the specification of the known part of the system, called the context, A represents the specification of the whole system, X represents the specification of the submodule to be constructed, || is a composition operator, r is a conformance relation and In is the required set of inputs for X . As conformance relation, we consider the safe realization and the subtype relation. The subtype relation is a generalization of the well known criteria of trace equivalence, complete trace equivalence, quasi equivalence and reduction, while the weaker safe realization relation is implied by all those criteria. We propose two algorithms for solving the problem with respect to the safe realization and the subtype relation and we characterize the set of solutions in each case. 
Abstract-found: 1
Intro-found: 1
Reference: [Aziz 95] <author> A. Aziz, F. Balarin, R. K. Brayton, M. D. DiBenedetto and A. Saldanha, </author> <title> Supervisory Control of Finite State Machines, </title> <booktitle> Proceedings of the 7th International Conference, </booktitle> <address> CAV'95, Lige, Belgium., </address> <pages> pp. 279-292, </pages> <month> July 3-5, </month> <year> 1995. </year>
Reference-contexts: works it was necessary to check whether there is no livelock, i.e. cycle labelled only with internal actions, when combining a candidate solution with the context C [Watanabe 93][Drissi 98b][Petrenko 98], or to assume that at least one of the FSMs, context or solution, has to be a Moore FSM <ref> [Aziz 95] </ref>. 8 Conclusion We have presented in this paper an approach to solve the problem of submodule construction in the realm of I/O automata.
Reference: [Black 87] <author> A. Black, N. Hutchinson, E. Jul, H. Levy and L. Carter, </author> <title> Distribution and Abstract Types in Emerald, </title> <journal> IEEE Transaction on Software Engineering, </journal> <volume> vol. SE-13, no. 1, </volume> <pages> pp. 65-76, </pages> <month> January </month> <year> 1987. </year>
Reference: [Drissi 98a] <author> J. Drissi and G. v. Bochmann, </author> <title> Submodule construction tool, </title> <booktitle> in the proceeding of CIMCA'99, </booktitle> <address> Vienna, Austria, </address> <year> 1999. </year>
Reference-contexts: We also show that the submodule construction problem for nondeterministic partially specified input/output Finite State Machines is a particular case of this work for various criteria. The algorithms proposed in this paper were implemented in Java in the context of a tool for the construction of submodules <ref> [Drissi 98a] </ref>. 29
Reference: [Drissi 98b] <author> J. Drissi, N. Yevtushenko, A. Petrenko and G. v. Bochmann, </author> <title> On the design of a submodule based on the input/output FSM model, </title> <type> Technical Report no. 1120, </type> <institution> DIRO, University of Montreal, </institution> <year> 1998. </year>
Reference-contexts: In <ref> [Drissi 98b] </ref>, we consider this problem in the context of the input/output Finite State Machine model (I/O FSM) [Gill 62]. The direct application of an approach based on the LTS model is not possible since the solutions obtained are not in general I/O FSMs.
Reference: [Gill 62] <author> A. Gill, </author> <title> Introduction to the theory of FiniteState Machines, </title> <publisher> Mc Graw-Hill Book Company, Inc, </publisher> <year> 1962. </year>
Reference-contexts: In [Drissi 98b], we consider this problem in the context of the input/output Finite State Machine model (I/O FSM) <ref> [Gill 62] </ref>. The direct application of an approach based on the LTS model is not possible since the solutions obtained are not in general I/O FSMs. We have to add constraints on the environment behavior to obtain the system's behavior in the form of an I/O Finite State Machine.
Reference: [Glabbeek 90] <author> R. J. v. Glabbeek, </author> <title> The Linear Time-Branching Time Spectrum, </title> <booktitle> Proceedings of CONCUR'90, Theories of Consurrency : Unification and Extension, </booktitle> <pages> pp. 278-297, </pages> <address> Amsterdam, The Netherlands, </address> <month> August 27-30, </month> <year> 1990. </year>
Reference-contexts: The set of complete traces is denoted CTr A . The IOA B is said to be complete trace-equivalent to the IOA A, written B= cte A, iff Tr A =Tr B and CTr A =CTr B <ref> [Glabbeek 90] </ref>. In the case of deterministic IOAs, the complete trace-equivalence reduces to the trace-equivalence. Lemma 3: Given two deterministic IOAs A and B, with I A =I B and O A =O B .
Reference: [Haghverdi 96] <author> E. Haghverdi and H. Ural, </author> <title> An Algorithm for Submodule Construcyion, </title> <institution> Technical report of the Department of computer Science, University of Ottawa, </institution> <year> 1996. </year>
Reference: [Kelekar 94] <author> S. G. H. Kelekar George W., </author> <title> Synthesis of protocols and protocol converters using the submodule construction approach, Proceedings of Protocol Specification, Testing and Verification, XIII, </title> <editor> A. Danthine, G. Leduc, P. Wolper (Editors), </editor> <year> 1994. </year>
Reference: [Larsen 89] <author> K. G. Larsen, </author> <title> Modal Specification, </title> <booktitle> Proceedings of International Workshop, Automatic Verification Methods for Finite State Machines, </booktitle> <pages> pp. 232-246, </pages> <address> Grenoble, France, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: In the paper "Modal Specifications" <ref> [Larsen 89] </ref>, the author presents a theory of Modal Specifications which imposes restrictions on the transitions of possible implementations by telling which transitions are mandatory and which are admissible. This allows a refinement ordering between Modal Specifications to be defined.
Reference: [Lin 95] <author> B. Lin, G. de Jong and T. Kolks, </author> <title> Hierarchical Optimization of Asynchronous Circuits, </title> <booktitle> Proceedings of the 32nd Design Automation Conference, </booktitle> <pages> pp 712-717, </pages> <year> 1995. </year>
Reference: [Luo 93] <author> G. Luo, A. Petrenko and G. v. Bochmann, </author> <title> Selecting test sequences for partially-specified nondeterministic finite state machines, </title> <type> Technical report #864, </type> <institution> University of Montreal, </institution> <year> 1993. </year>
Reference: [Lynch 88] <author> N. A. Lynch and M. R. Tuttle, </author> <title> AN INTRODUCTION TO INPUT/OUTPUT AUTOMATA, </title> <institution> MIT/LCS/TM-373, Laboratory for computer science, Massachusetts Institute of Technology, </institution> <month> Nov. </month> <year> 1998. </year> <month> 30 </month>
Reference-contexts: The composition of IOAs is defined in the case of complete IOAs in <ref> [Lynch 88] </ref>, and in the case of partial IOAs in [Negulescu 95][Kelekar 94]. In the second case problems due to unspecified reception may appear when a receiving IOA does not have an input transition originating from the present state when the sending IOA executes a corresponding output transition.
Reference: [Merlin 83] <author> P. Merlin and G. v. Bochmann, </author> <title> On the Construction of Submodule Specifications and Communication Protocols, </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> Vol. 5, No. 1, </volume> <pages> pp. 1-25, </pages> <month> Jan. </month> <year> 1983. </year>
Reference-contexts: The SCP was first formulated and treated in <ref> [Merlin 83] </ref>, where specifications are expressed in terms of execution sequences, and trace equivalence was used as conformance relation. In [Shields 89], the author uses Milner's Calculus of Communicating Systems to model the same problem.
Reference: [Negulescu 95] <author> R. Negulescu and J. A. Brzozowski, </author> <title> Relative Liveness : from intuition to automated verification, </title> <institution> Research report CS-95-32, University of Waterloo, Canada, </institution> <year> 1995. </year>
Reference-contexts: A composition of a collection of I/O automata is said to be safe if it does not contains unspecified receptions <ref> [Negulescu 95] </ref>[Kelekar 94]. <p> The composition of IOAs is defined in the case of complete IOAs in [Lynch 88], and in the case of partial IOAs in <ref> [Negulescu 95] </ref>[Kelekar 94]. In the second case problems due to unspecified reception may appear when a receiving IOA does not have an input transition originating from the present state when the sending IOA executes a corresponding output transition. <p> The composition of IOAs is commutative and associative. This composition allows a number of IOAs to accept the same input simultaneously. Following the work of <ref> [Negulescu 95] </ref>, we define a safety property which formalizes the nonoccurrence of an unspecified reception in the composition A of a collection of IOA (A i =(S A i , I A i , O A i , T A i , s oi )) 1in .
Reference: [Petrenko 94] <author> A. Petrenko, N. Yevtushenko and G. v. Bochmann, </author> <title> Experiments on Nondeterministic Systems for the Reduction Relation, </title> <publisher> IWTCS'96. </publisher>
Reference: [Petrenko 98] <author> A. Petrenko and N. Yevtushenko, </author> <title> Solving asynchronous equations, </title> <booktitle> in the proceeding of FORTE/PSTV'98, </booktitle> <address> Paris, </address> <year> 1998. </year>
Reference-contexts: We have developed a method for constructing all the solutions when the specifications are given in the form of deterministic completely specified input/output Finite State Machines and the trace equivalence relation is used as conformance relation. This work was generalized in <ref> [Petrenko 98] </ref> to the case where the specifications are given in the form of nondeterministic completely specified input/output Finite State Machines and the reduction relation is used as conformance relation.
Reference: [Phalippou 94] <author> M. Phalippou, </author> <title> Relations d'implantation et hypothses de test sur des automates entres et sorties, </title> <address> Thse de Doctorat, Bordeaux, France, </address> <year> 1994. </year>
Reference: [Qin 91] <author> H. Qin and P. Lewis, </author> <title> Factorisation of Finite State Machines under Strong and Observational Equivalences, </title> <journal> Journal of Formal Aspects of Computing, </journal> <volume> Vol. 3, </volume> <pages> pp 284-307, </pages> <month> July-Sept. </month> <year> 1991. </year>
Reference-contexts: The SCP was first formulated and treated in [Merlin 83], where specifications are expressed in terms of execution sequences, and trace equivalence was used as conformance relation. In [Shields 89], the author uses Milner's Calculus of Communicating Systems to model the same problem. Many other works <ref> [Qin 91] </ref> [Haghverdi 95] have been done using labelled transition systems as a * This work was partially supported by the NSERC Strategic grant SRTGP200 "Methods for the systematic testing of distributed software systems" and an NSERC Research grant. 2 model for the specifications and the strong and/or the observational equivalences
Reference: [Shields 89] <author> M. W. Shields, </author> <title> Implicit System Specification and the Interface Equation, </title> <journal> Computer Journal, </journal> <volume> Vol. 32, 5, </volume> <pages> pp. 399-412, </pages> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: The SCP was first formulated and treated in [Merlin 83], where specifications are expressed in terms of execution sequences, and trace equivalence was used as conformance relation. In <ref> [Shields 89] </ref>, the author uses Milner's Calculus of Communicating Systems to model the same problem.
Reference: [Starke 72] <author> P. H. Starke, </author> <title> Abstract automata, </title> <publisher> American Elsevier Publishing Company, </publisher> <address> Inc-New York, </address> <year> 1972. </year>
Reference: [Unger 69] <author> S. H. Unger, </author> <title> Asynchronous Sequential Switching Circuits, </title> <address> New York, </address> <publisher> Wiley-Interscience, </publisher> <year> 1969. </year>
Reference: [Watanabe 93] <author> Y. Watanabe and R. K. Brayton, </author> <title> The maximal set of permissible behaviors for fsm networks, </title> <booktitle> Proc. of the IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <pages> pp 316-320, </pages> <year> 1993. </year>
Reference-contexts: We note that Theorem 4 of Section 6 provides a new exact characterization of the set of solutions. In previous works it was necessary to check whether there is no livelock, i.e. cycle labelled only with internal actions, when combining a candidate solution with the context C <ref> [Watanabe 93] </ref>[Drissi 98b][Petrenko 98], or to assume that at least one of the FSMs, context or solution, has to be a Moore FSM [Aziz 95]. 8 Conclusion We have presented in this paper an approach to solve the problem of submodule construction in the realm of I/O automata.

References-found: 22

