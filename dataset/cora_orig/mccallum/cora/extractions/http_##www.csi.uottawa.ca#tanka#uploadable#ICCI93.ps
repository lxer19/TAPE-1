URL: http://www.csi.uottawa.ca/tanka/uploadable/ICCI93.ps
Refering-URL: http://www.csi.uottawa.ca/tanka/papers.html
Root-URL: 
Email: Sylvain_Delisle@uqtr.uquebec.ca -terry, szpak, kbarker-@csi.uottawa.ca  
Title: Pattern Matching for Case Analysis: A Computational Definition of Closeness  
Author: Sylvain Delisle, Terry Copeck, Stan Szpakowicz, Ken Barker 
Address: Ottawa, Ontario, Canada K1N 6N5  
Affiliation: Department of Computer Science, University of Ottawa  
Abstract: We propose a conceptually and technically neat method to identify known semantic patterns close to a novel pattern. This occurs in the context of a system to acquire knowledge incrementally from systema tically processed expository technical text. This semiautomatic system requires the user to respond to specific multiple-choice questions about the current sentence. The questions are prepared from linguistic elements previously encountered in the text similar to elements in the new sentence. We present a metric to characterize the similarity between semantic Case patterns. The computation is based on syntactic indicators of semantic relations and is defined in terms of symbolic pattern matching. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Barker, K., T.Copeck, S. Delisle, & S. </author> <title> Szpakowicz (1993) An Empirically Grounded Case System, </title> <type> TR-93 - 08, </type> <institution> Department of Computer Science, University of Ottawa. </institution>
Reference-contexts: The list of Cases used in TANKA, as well as an extensive list of Case markers, can be found in <ref> [1] </ref>. 1.3. Case analysis in HAIKU The Case Analyzer begins by searching its databases for the CP that exactly or most closely matches the CP of the input clause. It then looks for an example sentence to illustrate this matching CP. <p> CF 12 and CF 21 are multiplied to obtain the highest ranking for patterns closest to the input pattern. Addition might be used instead of multiplication. Multiplying numbers from the interval <ref> [0, 1] </ref> resembles finding the joint probability of independent events. It is a matter of experiment to see whether using addition would drastically change the behavior of the compute_CC algorithm. CC is computed as follows.
Reference: [2] <author> Delisle, S., K.Barker, T.Copeck, </author> & <month> S.Szpakowicz </month> <year> (1992), </year> <title> Interactive Semantic Analysis in TANKA: Designing HAIKU, </title> <institution> TR-92-32, Department of Computer Science, University of Ottawa. </institution>
Reference: [3] <author> Copeck, T., S. Delisle & S. </author> <title> Szpakowicz (1992) Parsing and Case Analysis in TANKA. </title> <booktitle> Proc 15th Intl Conf on Computational Linguistics COLING-92, </booktitle> <address> Nantes, </address> <month> July </month> <year> 1992, </year> <pages> 1008-1012. </pages>
Reference: [4] <author> Delisle, S. & S. </author> <title> Szpakowicz (1991) A Broad-Coverage Parser for Knowledge Acquisition from Technical Texts. </title> <editor> E. Johnson (ed.) </editor> <booktitle> Proc Fifth Int Conf on Symbolic and Logical Computing, </booktitle> <institution> Dakota State University, </institution> <month> 169-183. </month>
Reference: [5] <author> Szpakowicz, S. </author> & <title> Z.Koperczak (1990) Mixed-Strategy Matching in Conceptual Networks. </title> <editor> Z. W. Ras, M. Zemankova & M. L. Emrich (eds.), </editor> <booktitle> Methodologies for Intelligent Systems 5. </booktitle> <publisher> North-Holland, </publisher> <pages> 321-328. </pages>
Reference: [6] <author> Szpakowicz, S. </author> <title> (1990) Semiautomatic Acquisi tion of Conceptual Structure from Technical Texts. </title> <journal> Int J Man - Machine Studies, </journal> <volume> 33, </volume> <pages> 385-397. </pages>
Reference-contexts: It is invoked whenever the input does not match any previously processed pattern. The TANKA project is a long-term research initiative of the Knowledge Acquisition Lab at our Department. Previously we pre sented the overall design <ref> [6] </ref>, discussed aspects of the knowledge representation used in TANKA [5,7,8], and described the parser and the HAIKU Case Analyzer [4,3,2]. 1.2.
Reference: [7] <author> Yang, L. </author> & <title> S.Szpakowicz (1991a) Inheritance in Conceptual Networks. </title> <editor> Karen S. Harber (ed.) </editor> <booktitle> Proc Sixth Int Symposium on Methodologies for Intelligent Systems (Poster Session). </booktitle> <address> Charlotte, NC, </address> <month> Oct. </month> <year> 1991, </year> <pages> 191-202. </pages>
Reference: [8] <author> Yang, L. </author> & <title> S.Szpakowicz (1991b) Planning in Conceptual Networks. </title> <editor> F.Dehne, F.Fiala & W.W.Koczkodaj (eds.) </editor> <booktitle> Advances in Computing and Information ICCI 91 . Lecture Notes in Computer Science, </booktitle> <volume> 497, </volume> <publisher> Springer-Verlag, </publisher> <pages> 669-671. </pages>
Reference: [9] <author> Belad, A. & Y. </author> <month> Belad </month> <year> (1992), </year> <title> Reconnaissance des Formes (mthodes et applications), Interditions. * This work is supported by the Natural Sciences and Engineering Research Council of Canada. 1 The three positional Case markers are the syntactic subject (psubj), object (pobj), and indirect object (piobj). 2 In fact, npum has two versions. One, npum_u, is used by best_under_match_npum and uses the test LS1 LS2. The other, npum_o, is used by best_over_match_npum and uses LS1 &lt; LS2. </title>
Reference-contexts: The algorithm to compute the closeness of two patterns is based on notions of under - matching and overmatching among CMPs. It is similar in spirit to some methods used in pattern recognition for computing distances between patterns <ref> [9] </ref>. A CMP is a set, represented here as a Prolog list e.g. [psubj,pobj,at]. Intuitively, an undermatch occurs when a given CMP is completely or partially contained in another CMP. The computation of closeness is described in Prolog; predicates not defined here come from the Quintus Prolog library. 2.
References-found: 9

