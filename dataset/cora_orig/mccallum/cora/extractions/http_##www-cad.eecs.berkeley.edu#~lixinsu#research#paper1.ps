URL: http://www-cad.eecs.berkeley.edu/~lixinsu/research/paper1.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/~lixinsu/
Root-URL: http://www.cs.berkeley.edu
Title: Learning As Applied to Simulated Annealing  
Author: Lixin Su, Wray Buntine, and Richard Newton 
Address: Berkeley, CA94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California,  
Abstract: Stochastic combinatorial optimization techniques, such as simulated annealing and genetic algorithms, have become increasingly important in design automation as the size of design problems have grown and the design objectives have become increasingly complex. However, stochastic algorithms are often slow since a large number of random design perturbations are required to achieve an acceptable result they have no built-in intelligence. In this paper, we show that incremental, statistical learning techniques can improve the quality of results and reduce the number of expensive cost-function evaluations for stochastic optimization for a particular solution quality. In particular, simulated annealing was selected as representative stochastic optimization approach and the cell-based layout placement problem was used to evaluate the utility of such a learning-based approach. In this work, we used regression to learn the properties of the solution space and have tested the trained algorithm on a number of examples to demonstrate the improvement gained. A general response model is constructed by learning from the annealing of benchmark circuits. This model is then used in the trained simulated annealing, which returns much better annealing quality than the untrained one for the same number of moves in the solution space. The annealing quality improvement was 15% ~ 43% for the set of examples used in training and 7% ~ 21% when the trained algorithm was applied to new examples. With the same amount of CPU time, the TSA could improve the annealing quality by up to 28% for some benchmark circuits we tested. In addition, the use of the response model successfully predicted the effect of the windowed sampling technique and derived the informally accepted advantages of windowing from the test set automatically. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Kirkpatrick, C. D. Gelatt, and Jr., M. P. Vecchi, </author> <title> Optimization by simulated annealing, </title> <booktitle> Science, </booktitle> <address> vol.220, pp.671-880, </address> <month> 13 May </month> <year> 1983 </year>
Reference-contexts: Stochastic placement algorithms have evolved significantly since their initial application in the EDA area more than a decade ago <ref> [1] </ref>. Over that period, the qualities of results they can produce have improved significantly. For example, in the development of TimberWolf system [6-8], which is a general purpose placement and routing package based on simulated annealing, many approaches have been tried to speed up the algorithm.
Reference: [2] <author> D. Mitra, F. Romeo, and A. Sangiovanni-Vincentelli, </author> <title> Convergence and finite time behavior of simulated annealing, </title> <booktitle> Advances in Applied Probability, </booktitle> <volume> 18 </volume> <pages> 747-771, </pages> <year> 1986 </year>
Reference: [3] <author> P. J. M. van Laarhoven and E. H. L. </author> <title> Arts, Simulated annealing: theory and applications, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1987 </year>
Reference: [4] <author> Alistair Sinclair and Mark Jerrum, </author> <title> Approximate counting, uniform generation and rapidly mixing markov chains, </title> <journal> Information and Computation, </journal> <volume> 82 </volume> <month> 93-133 </month> <year> (1989) </year>
Reference: [5] <author> Brian D. Ripley, </author> <title> Stochastic Simulation, </title> <publisher> John Wiley & Sons, </publisher> <year> 1987 </year>
Reference-contexts: For this experiment, our moveset consists only of all possible pairwise swaps, however single cell translations, multi-cell interchange, and other moves can be used in general placement. The way of generating a move is referred to as proposal distribution <ref> [5] </ref>. The computation of p, r, and their comparison comprises the socalled Boltzmann test. The inner while loop is also called a Metropolis procedure [16,9]. In fact the simulated annealing is a series of Metropolis procedures with decreasing temperatures.
Reference: [6] <author> Carl Sechen and Alberto Sangiovanni-Vincentelli, </author> <title> The TimberWolf placement and routing package, </title> <journal> IEEE Journal of SolidState Circuits, </journal> <volume> vol. sc-20, No. 2, </volume> <month> April </month> <year> 1985 </year>
Reference-contexts: Each of them was synthesized using MISSII and MSU standard cell library, run through Wolfe in the Octtools <ref> [6] </ref> to obtain the .cel (TimberWolf) format which is also the input format for our program. The circuits from Source 2 were taken from http://www.cbl.ncsu.edu/benchmarks in .vpnr format together with their libraries, each of them was then translated to the .cel format using v2.
Reference: [7] <author> Wern-Jieh Sun and Carl Sechen, </author> <title> Efficient and effective placement for very large circuits, </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, vol.14, </journal> <volume> No.3, </volume> <month> March </month> <year> 1995 </year>
Reference: [8] <author> William Swartz and Carl Sechen, </author> <title> Timing driven placement for large standard cell circuits, </title> <booktitle> Proceedings of the 32nd Design Automation Conference, </booktitle> <address> pp.211-215, </address> <note> 1995 Page 18 </note>
Reference: [9] <author> D. F. Wong, H. W. Leong and C. L. Liu, </author> <title> Simulated annealing for VLSI design, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988 </year>
Reference: [10] <author> Bradley S. Peters, Lixin Su and Richard Newton, </author> <title> Improvement of stochastic optimization through the use of learning, </title> <note> UC-Berkeley SRC Review, </note> <month> October </month> <year> 1995 </year>
Reference-contexts: Hence the model tries to correlate each accepted swap with the final solution quality. In order to have more flexibility and reduce the number of predictors, we evenly divide the temperatures into r = 10 ranges <ref> [10] </ref>, and assume that g i jk bb = if temperature i belongs to group g. <p> In the results presented in the next section, the choose set size is selected to be 5. This value was selected after experimenting with a variety of values from 2 to 175 <ref> [10] </ref> and noting that the results of many hundreds of thousands of runs seemed relatively insensitive to ChooseSetSize when it is larger than 5. Page 10 4.
Reference: [11] <author> L. G. Valiant, </author> <title> A theory of the learnable, </title> <journal> Communications of the ACM, </journal> <volume> vol.27, </volume> <month> November </month> <year> 1984 </year>
Reference-contexts: Then scaling the jth parameter by a is equivalent to: bbbb aaaa )( rr r rr PIPIyIPIP jjjj =fififififi - . Hence the response is unchanged. Page 5 3. LEARNING Learning <ref> [11] </ref>, as implied in this paper, is the construction of the evaluation function of the swaps within each temperature range based on the past annealing experience. Given a swap (characterized by a set of its properties) and the temperature range it belongs to, the evaluation function returns a real number.
Reference: [12] <author> G. A. F. Seber, </author> <title> Linear Regression Analysis, </title> <publisher> John Wiley & Sons, </publisher> <year> 1977 </year>
Reference-contexts: By linear regression, we estimate b r as yPPP = -1 r , which makes the Residual Sum of Squares ) r r r r PyPyRSS - -= minimum, where ^ indicates an estimated value. For additional properties of this estimate, we refer the reader to <ref> [12] </ref>. The following facts will used in the discussions later in this paper.
Reference: [13] <author> Kai-Fu Lee and Sanjoy Mahajan, </author> <title> A pattern classification approach to evaluation function learning, </title> <journal> Artificial Intelligence, </journal> <month> 36 </month> <year> (1988) </year> <month> 1-25 </month>
Reference: [14] <author> David Aldous and Umesh Vazirani, </author> <title> Go with the winners algorithms, </title> <booktitle> Proceedings. 35th Annual Symposium on Foundations of Computer Science, </booktitle> <address> pp.492-501, </address> <year> 1994 </year>
Reference-contexts: SIMULATED ANNEALING AND REGRESSION A number of definitions are introduced below for use in presenting the overall approach. Page 3 2.1 Simulated Annealing There are many versions of the simulated annealing <ref> [14, 17-19] </ref>. We will outline the basic framework of the algorithm below.
Reference: [15] <author> M. Hannan, P. K. Wolff and B. Agule, </author> <title> Some experimental results on placement technique, </title> <booktitle> Proc. 12th Design Automation Conference, </booktitle> <year> 1976, </year> <pages> pp. 214-244 </pages>
Reference-contexts: Each node in CG is a cell, and two cells, say cell i and cell j are connected by an undirected edge, ij e if they share at least one common net. The weight for the edge njinw n net <ref> [15] </ref>. The maximum edge weight is denoted as )( max ijij wMaxw = . For cell i, its connectivity is defined as = j iji ww . The maximum connectivity of all the cells )( max ii wMaxW = .
Reference: [16] <author> N. Metropolis, A. W. Rosenbluth, M. N. Rosenbluth, A. H. Teller and E. Teller, </author> <title> Equations of state calculations by fast computing machines, </title> <journal> J. Chem. Phys. </journal> <volume> 21(1953), </volume> <pages> 1087-92 </pages>
Reference: [17] <author> J. W. Greene and K. J. Supowit, </author> <title> Simulated annealing without rejected moves, </title> <booktitle> International Conference on Computer Design, </booktitle> <year> 1984, </year> <pages> 658-63 </pages>
Reference: [18] <author> T. P. Moore and Aart J. de Geus, </author> <title> Simulated annealing controlled by a rule-based expert system, </title> <booktitle> International Conference on Computer Aided Design, </booktitle> <year> 1985, </year> <pages> 200-202 </pages>
Reference: [19] <author> S. Mallela and Lov K. Grover, </author> <title> Clustering based simulated annealing for standard cell placement, </title> <booktitle> 25 th ACM/IEEE Design Automation Conference, </booktitle> <year> 1988, </year> <pages> 312-317 </pages>
Reference: [20] <author> E. H. L. Aarts and P. J. M. van Laarhoven, </author> <title> A new polynomial-time cooling schedule, </title> <booktitle> International Conference on Computer Aided Design, </booktitle> <year> 1985, </year> <pages> 206-208 </pages>
Reference: [21] <author> S. James Press, </author> <title> Bayesian statistics: </title> <booktitle> principles, models, and applications, </booktitle> <address> New York: </address> <publisher> Wiley, c1989 </publisher>
Reference: [22] <author> M. D. Huang, F. Romeo and A. Sangiovanni-Vincentelli, </author> <title> An efficient general cooling schedule for simulated annealing, </title> <booktitle> International Conference on Computer Aided Design, </booktitle> <year> 1986, </year> <pages> 381-384 </pages>
Reference: [23] <author> Jimmy Lam, Jean-Marc Delosme, </author> <title> Performance of a new annealing schedule, </title> <booktitle> 25 th ACM/IEEE Design Automation Conference, </booktitle> <year> 1988, </year> <pages> 306-311 </pages>
References-found: 23

