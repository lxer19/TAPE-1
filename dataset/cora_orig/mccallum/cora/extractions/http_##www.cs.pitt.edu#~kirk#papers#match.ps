URL: http://www.cs.pitt.edu/~kirk/papers/match.ps
Refering-URL: http://www.cs.pitt.edu/~kirk/papers/index.html
Root-URL: 
Phone: 2  
Title: Online Weighted Matching  
Author: Bala Kalyanasundaram Kirk Pruhs 
Address: Pittsburgh  
Web: CCR-9009318  
Note: Supported in part by NSF under grant  
Affiliation: 1 University of Pittsburgh  University of  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Avis, </author> <title> A survey of heuristics for the weighted matching problem, Networks, </title> <booktitle> 13 (1983), </booktitle> <pages> pp. 475-493, </pages> <year> 1983. </year>
Reference-contexts: Perhaps, this is not surprising since such behavior has been shown for the o*ine greedy algorithm that chooses the largest available edge as the next matched edge. The o*ine greedy algorithm for maximum matching produces a matching of weight at least half the maximum matching <ref> [1] </ref>.
Reference: [2] <author> B. Carre, </author> <title> Graphs and Networks, </title> <publisher> Clarendon Press, </publisher> <year> 1979. </year>
Reference-contexts: 1 Introduction The assignment problem, finding a bipartite matching of minimum weight, is one of the archetypical problems in algorithmic graph theory and in combinatorial optimization <ref> [2, 10] </ref>. We introduce a natural online version of this problem, which we call online min-matching. Let G be a complete bipartite graph with one bipartition designated as the server vertices, and the other bipartition designated as the request vertices. Each bipartition has cardi-nality k. <p> In section 3, we consider the online version of the maximum weight bipartite matching problem <ref> [2, 10] </ref>. We call this problem online max-matching. Once again we must assume that the weights are nonnegative and satisfy the triangle inequality. We show that the greedy algorithm Farthest Neighbor, which services a request with the farthest available server, is 3-competitive. <p> The combinatorics of online bottleneck matching seem to be somewhat different from those of regular bipartite matching. Preliminary results for this problem have been reported by Idury and Schaffer [5]. One might also consider online transportation problems <ref> [2, 10] </ref>. A transportation is generalization of the assignment problem in that each server vertex is allowed to handle an arbitrary, but fixed, number of requests.
Reference: [3] <author> A. Fiat, Y. Rabani, and Y. Ravid, </author> <title> Competitive k-server algorithms, </title> <booktitle> Proceedings of the 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 454-463. </pages>
Reference-contexts: The difference is that in the k-server problem a server handles a request instantaneously, and is available to handle the next request. This difference makes the underlying combinatorics of the two problem quite disparate. A recent survey of results for the k-server problem can be found in <ref> [3] </ref>. Our investigation into online weighted matching complements the study by Karp, Vazirani, and Vazirani [7] on online unweighted maximum cardinality matching. 2 Online Min-Matching We begin with some basic definitions.
Reference: [4] <author> M. Fredman, and R. Tarjan, </author> <title> Fibonacci heaps and their uses in improved network optimization algorithms, </title> <journal> J. ACM, </journal> <volume> 34 (1877), </volume> <pages> pp. 596-615. </pages>
Reference-contexts: This problem can be solved in time O (ki + k log n) <ref> [4] </ref>. If some of the k requests arrive simultaneously we can modify Permutation to obtain a better competitive factor. More precisely, if the requests come in t groups we obtain a (2t 1)-competitive algorithm, which is optimal.
Reference: [5] <author> R. Idury, and A. Schaffer, </author> <title> A better lower bound for online bottleneck matching, </title> <type> manuscript. </type>
Reference-contexts: The combinatorics of online bottleneck matching seem to be somewhat different from those of regular bipartite matching. Preliminary results for this problem have been reported by Idury and Schaffer <ref> [5] </ref>. One might also consider online transportation problems [2, 10]. A transportation is generalization of the assignment problem in that each server vertex is allowed to handle an arbitrary, but fixed, number of requests.
Reference: [6] <author> B. Kalyanasundaram, and K. </author> <title> Pruhs Online Weighted Matching, </title> <booktitle> Proceedings of the 2nd SIAM Conference on Discrete Algorithms, </booktitle> <year> 1991, </year> <pages> pp. 234-240. </pages>
Reference-contexts: Randomization has been shown to be very helpful in designing online algorithms. However, harnessing the full power of randomization is often not easy. It would be interesting to study randomized algorithms for online min-matching. The conference version of this paper <ref> [6] </ref> contains some results comparing the optimal competitive factor for the k-server problem to the optimal 14 competitive factor for online min-matching. In between these two extreme problems lie a range of server problems in which the time required to service a request is between zero and infinity.
Reference: [7] <author> R. Karp, U. Vazirani, and V. Vazirani, </author> <title> An optimal algorithm for online bipartite matching, </title> <booktitle> Proceedings of the 22nd ACM Symposium on Theory of Computing, </booktitle> <year> 1990, </year> <pages> pp. 352-358. </pages>
Reference-contexts: This difference makes the underlying combinatorics of the two problem quite disparate. A recent survey of results for the k-server problem can be found in [3]. Our investigation into online weighted matching complements the study by Karp, Vazirani, and Vazirani <ref> [7] </ref> on online unweighted maximum cardinality matching. 2 Online Min-Matching We begin with some basic definitions. We use R to denote the set of requested points, with r i being the ith requested point, and R i denoting the set fr 1 ; . . . ; r i g.
Reference: [8] <author> S. Khuller, S. Mitchell, and V. Vazirani, </author> <title> Online algorithms for weighted matching and stable marriages, </title> <type> Tech. Report 90-1143, </type> <institution> Department of Computer Science, Cornell University, </institution> <year> 1990. </year> <month> 16 </month>
Reference-contexts: This spectrum of problems seems worthy of further investigation. Acknowledgements: It has recently been brought to our attention that some of the results presented in this paper for online min-matching were obtained independently by Khuller, Mitchell and Vazirani <ref> [8] </ref>. 15
Reference: [9] <author> M. Manasse, L. McGeoch, and D. Sleator, </author> <title> Competitive algorithms for online problems, </title> <booktitle> Proceedings of the 20th ACM Symposium on Theory of Computing, </booktitle> <year> 1988, </year> <pages> pp. 322-333. </pages>
Reference-contexts: Unfortunately, this is not the case. We show, in section 2, that Nearest Neighbor is only (2 k 1)-competitive for online min-matching, an exponential blowup from the optimal value. Online min-matching is similar to the recently much investigated k-server problem, introduced by Manasse, McGeoch and Sleator <ref> [9] </ref>. The difference is that in the k-server problem a server handles a request instantaneously, and is available to handle the next request. This difference makes the underlying combinatorics of the two problem quite disparate. A recent survey of results for the k-server problem can be found in [3].
Reference: [10] <author> C. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization, </title> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: 1 Introduction The assignment problem, finding a bipartite matching of minimum weight, is one of the archetypical problems in algorithmic graph theory and in combinatorial optimization <ref> [2, 10] </ref>. We introduce a natural online version of this problem, which we call online min-matching. Let G be a complete bipartite graph with one bipartition designated as the server vertices, and the other bipartition designated as the request vertices. Each bipartition has cardi-nality k. <p> In section 3, we consider the online version of the maximum weight bipartite matching problem <ref> [2, 10] </ref>. We call this problem online max-matching. Once again we must assume that the weights are nonnegative and satisfy the triangle inequality. We show that the greedy algorithm Farthest Neighbor, which services a request with the farthest available server, is 3-competitive. <p> This area is filled with many interesting open problems. We conclude by presenting several of these problems. One common variant of weighted matching is bottleneck matching <ref> [10] </ref>. In bottleneck matching, the cost of a matching is the weight of the largest edge and the goal is to find the matching with minimum bottleneck weight. <p> The combinatorics of online bottleneck matching seem to be somewhat different from those of regular bipartite matching. Preliminary results for this problem have been reported by Idury and Schaffer [5]. One might also consider online transportation problems <ref> [2, 10] </ref>. A transportation is generalization of the assignment problem in that each server vertex is allowed to handle an arbitrary, but fixed, number of requests.
Reference: [11] <author> E. Reingold and R. Tarjan, </author> <title> On a greedy heuristic for complete matching, </title> <journal> SIAM J. Comp., </journal> <volume> 10 (1981), </volume> <pages> pp. 676-681. </pages>
Reference-contexts: The o*ine greedy algorithm for maximum matching produces a matching of weight at least half the maximum matching [1]. For o*ine min-matching, Reingold and Tarjan <ref> [11] </ref> have shown that a greedy algorithm, which chooses the smallest available edge, produces a matching of weight at most a linear factor larger than the minimum matching. (Their actual result is stronger and shows that the factor is fi (k 0:58496 ).) We have already shown that a linear factor
Reference: [12] <author> D. Sleator and R. Tarjan, </author> <title> Amortized efficiency of list update and paging rules, </title> <journal> Communications of the ACM, </journal> <volume> 28 (1985), </volume> <pages> pp. 202-208. 17 </pages>
Reference-contexts: The goal of the online algorithm is to minimize the weight of the matching being produced. Since this is an online problem, we adopt the paradigm of competitive analysis <ref> [12] </ref>. That is, we want to minimize the worst-case ratio of the weight of the online matching to the weight of the minimum weight perfect matching. An online algorithm is ff-competitive, or alternatively, has a competitive factor of ff, if this ratio is at most ff for all possible instances.
References-found: 12

