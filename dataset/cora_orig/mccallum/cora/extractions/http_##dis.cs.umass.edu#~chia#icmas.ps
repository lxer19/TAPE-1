URL: http://dis.cs.umass.edu/~chia/icmas.ps
Refering-URL: http://www.cs.umass.edu/~chia/
Root-URL: 
Email: chia@cs.umass.edu, dann@cs.umass.edu, lesser@cs.umass.edu  
Title: Coordinating Asynchronous Agent Activities in a Distributed Scheduling System  
Author: Mike H. Chia, Daniel E. Neiman, Victor R. Lesser 
Keyword: Topic areas: Distributed resource allocation Evaluation of multi-agent systems  
Date: November 1997  
Address: Amherst, MA 01003  
Affiliation: Computer Science Department University of Massachusetts  
Abstract: In this paper we investigate issues of agent coordination in a distributed job-shop scheduling system in which agents schedule potentially contentious activities asynchronously in parallel. Agents in such a system will in general have a limited view of the global state of resources and must exchange appropriate state information with other agents in order to schedule effectively. However, even given perfect instantaneous knowledge of other agents' resource requirements, agents may still not be able schedule effectively if they do not also model the possible actions of other agents and the effects of their own actions. We describe two types of agent behaviors, poaching and distraction, arising from the asynchronous nature of distributed systems that decrease scheduling effectiveness and present the results of experiments testing new coordination mechanisms for preventing such behaviors. fl This material is based upon work supported by the National Science Foundation under Grants No. IRI-9321324 and No. IRI-9523419. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Keith S. Decker, Alan J. Garvey, Marty A. Humphrey, and Victor R. Lesser. </author> <title> Control heuristics for scheduling in a parallel blackboard system. </title> <journal> International Journal of Pattern Recognition and Artificial Intelligence, </journal> <volume> 7(2), </volume> <year> 1993. </year>
Reference-contexts: Heuristics from the single agent DSS system cannot be applied unchanged to a multi-agent system, an observation also made by Decker, et. al. in their work on developing control paradigms for a parallel blackboard system <ref> [1] </ref>. Our test-bed system built on top of Dis-DSS is the Distributed Airport Resource Management (Dis-ARM) system. Dis-ARM solves airport ground 3 service scheduling (AGSS) problems.
Reference: [2] <author> Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill. </author> <title> Coherent cooperation among communicating problem solvers. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 36(11), </volume> <year> 1987. </year> <month> 17 </month>
Reference-contexts: We show that when agents are not able to model the state and possible future activities of other agents, they cannot schedule effectively <ref> [2] </ref>. We investigate two types of behavior resulting from this lack of coordination: poaching and distraction. In the following section, we give a brief overview of our experimental system, the Distributed Dynamic Scheduling System (Dis-DSS) and our problem domain, airport ground service scheduling. <p> However, even with complete information about the state of resource availability, agents may not be able to schedule in a globally optimal manner if they do not explicitly account for the possible actions of other agents in the 4 system <ref> [2] </ref>. In the following sections, we describe two agent behaviors, poaching and distraction, that may decrease scheduling performance. We use the following notation for describing the conditions under which these behaviors can occur.
Reference: [3] <author> Mark S. Fox. </author> <title> Constraint-Directed Search: A Case Study of Job-Shop Scheduling. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> December </month> <year> 1983. </year>
Reference-contexts: 1 Introduction The scheduling of resources and activities is known to be an extremely difficult problem <ref> [4, 3, 9, 10] </ref>. In a distributed scheduling system, the complexity increases due to the possibility of interactions between scheduling agents such as when agents are allowed to borrow resources from each other to satisfy local goals.
Reference: [4] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability: </title>
Reference-contexts: 1 Introduction The scheduling of resources and activities is known to be an extremely difficult problem <ref> [4, 3, 9, 10] </ref>. In a distributed scheduling system, the complexity increases due to the possibility of interactions between scheduling agents such as when agents are allowed to borrow resources from each other to satisfy local goals.
References-found: 4

