URL: http://www.math.tau.ac.il/~ddorit/sokoban.ps.gz
Refering-URL: http://www.ics.uci.edu/~eppstein/cgt/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: SOKOBAN and other motion planning problems (extended abstract)  
Author: Dorit Dor Uri Zwick 
Note: Raghavan, Sudan and Tamaki.  
Date: June 28, 1995  
Abstract: We consider a natural family of motion planning problems with movable obstacles and obtain hardness results for them. Some members of the family are shown to be PSPACE-complete thus improving and extending (and also simplifying) a previous NP-hardness result of Wilfong. The family considered includes a motion planning problem which forms the basis of a popular computer game called SOKOBAN. The decision problem corresponding to SOKOBAN is shown to be NP-hard. The motion planning problems considered are related to the "warehouseman's problem" considered by Hopcroft, Schwartz and Sharir, and to geometric versions of the motion planning problem on graphs considered by Papadimitriou, 
Abstract-found: 1
Intro-found: 1
Reference: [CG94] <author> D.A. Chalcraft and M.T. Greene. </author> <title> Train sets. </title> <journal> Eureka, </journal> <volume> 53 </volume> <pages> 5-12, </pages> <year> 1994. </year>
Reference-contexts: It is easy to verify that the porter may reach her terminal position while leaving all crossovers in their original position and all gates in their closed position. The general structure of the above construction is similar to the general structure of a construction by Chalcraft and Greene <ref> [CG94] </ref> (see also [Ste94]). Chalcraft and Greene describe a simulation of a Turing machine using train sets. 3 NP-hardness of SOKOBAN (1; 1) In this section we show that SOKOBAN (5,1) is NP-hard.
Reference: [FG95] <author> M. Fryers and M.T. Greene. Sokoban. Eureka, </author> <month> 54, </month> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: A different NP-harness proof for SOKOBAN (1; 0) was independently obtained recently by Fryers and Greene <ref> [FG95] </ref>. The P3SAT problem is a sub-problem of the 3SAT problem.
Reference: [HSS84] <author> J.E. Hopcroft, J.T. Schwartz, and M. Sharir. </author> <title> On the complexity of motion planning for multiple indepandant objects; PSPACE-hardness of the "Warehouseman's problem". </title> <journal> The International Journal of Robotics Research, </journal> <volume> 3 </volume> <pages> 76-88, </pages> <year> 1984. </year>
Reference-contexts: A constraint that is almost always used is that objects and obstacles should never overlap. Various forms of motion planning problems were already considered by many researchers. Geometric motion planning problems were considered, among others, by Reif [Rei79], Hopcroft, Schwartz and Sharir <ref> [HSS84] </ref> and Wilfong [Wil88]. A motion planning on graphs which forms an abstraction of such problems was considered by Papadimitriou, Raghavan, Sudan and Tamaki [PRST94]. <p> In his NP-hardness results, Wilfong uses objects of several different shapes, not all of them rectangles. Our proof uses only 1 fi 2 rectangles. Our proof holds even if grasping is allowed and hence Wilfong's original problem is also PSPACE-complete. Hopcroft, Schwartz and Sharir <ref> [HSS84] </ref> consider a problem they call the "Warehouseman's problem". The problem considered by Hopcroft et al. is a generalization of the famous 15-puzzle. A large rectangle contains many small rectangles of many different sizes, together with some gaps between them. Recangles may be slid, either horizontally or vertically, into gaps.
Reference: [Lic82] <author> D. Lichtenstein. </author> <title> Planar formulae and their uses. </title> <journal> SIAM Journal on Computing, </journal> <volume> 11 </volume> <pages> 329-343, </pages> <year> 1982. </year>
Reference-contexts: The graph G I contains an edge between each variable x and each clause that contain either x or x. It also contains a simple cycle passing through all the variables. Lichtenstein <ref> [Lic82] </ref> showed that the P3SAT problem is NPC. Moreover, he showed [Lic82] that the P3SAT problem is NPC even when, at every variable vertex x, all edges representing positive instances of the variable are incident to one `side' of the node and all edges representing negative instances of the variable are <p> The graph G I contains an edge between each variable x and each clause that contain either x or x. It also contains a simple cycle passing through all the variables. Lichtenstein <ref> [Lic82] </ref> showed that the P3SAT problem is NPC. Moreover, he showed [Lic82] that the P3SAT problem is NPC even when, at every variable vertex x, all edges representing positive instances of the variable are incident to one `side' of the node and all edges representing negative instances of the variable are incident to the other `side' of the node, or more precisely,
Reference: [PRST94] <author> C.H. Papadimitriou, P. Raghavan, M. Sudan, and H. Tamaki. </author> <title> Motion planning on a graph (extended abstract). </title> <booktitle> In Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <address> Santa Fe, New Mexico, </address> <pages> pages 511-520, </pages> <year> 1994. </year>
Reference-contexts: Geometric motion planning problems were considered, among others, by Reif [Rei79], Hopcroft, Schwartz and Sharir [HSS84] and Wilfong [Wil88]. A motion planning on graphs which forms an abstraction of such problems was considered by Papadimitriou, Raghavan, Sudan and Tamaki <ref> [PRST94] </ref>. In this work we consider a family of motion planning problems obtained by generalising the rules of a computer game called SOKOBAN. 1 A typical level of SOKOBAN is shown in Figure 1. <p> The rectangles are moved by an agent which is, in 10 x i x 1 x i+1 x n a sense, outside the system. The techniques used by Hopcroft et al. and the techniques used by us in the PSPACE-completeness proofs are completely different. Papadimitriou, Raghavan, Sudan and Tamaki <ref> [PRST94] </ref> consider a natural motion planning problem on graphs. An instance of the problem is an undirected graph. There is robot in one of the vertices of the graph. Several other vertices contain movable obstacles.
Reference: [Rei79] <author> J. Reif. </author> <title> Complexity of the movers' problem and generalizations. </title> <booktitle> In Proceedings of the 20th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <address> San Juan, Puerto Rico, </address> <pages> pages 421-427, </pages> <year> 1979. </year>
Reference-contexts: The constraints imposed depend on the exact nature of the problem. A constraint that is almost always used is that objects and obstacles should never overlap. Various forms of motion planning problems were already considered by many researchers. Geometric motion planning problems were considered, among others, by Reif <ref> [Rei79] </ref>, Hopcroft, Schwartz and Sharir [HSS84] and Wilfong [Wil88]. A motion planning on graphs which forms an abstraction of such problems was considered by Papadimitriou, Raghavan, Sudan and Tamaki [PRST94].
Reference: [Sav70] <author> W.J. Savitch. </author> <title> Relationship between nondeterministic and deterministic tape complexities. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 4 </volume> <pages> 177-192, </pages> <year> 1970. </year>
Reference-contexts: We are looking at the problem of deciding whether a given SOKOBAN puzzle has a solution. We show that this problem is NP-hard. It is an interesting open problem whether this problem is in NP. It is clearly contained in nondeterministic PSPACE and therefore, by Savitch's result <ref> [Sav70] </ref>, also in PSPACE. We let SOKOBAN (k; `) be the following generalisation of SOKOBAN. The packets are still 1 fi 1 squares but the porter is now powerful enough to push up to k packets at once. She can also pull up to ` packets.
Reference: [Ste94] <author> I. Stewart. </author> <title> A subway named Turing. </title> <publisher> Scientific American, </publisher> <pages> pages 104-107, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: The general structure of the above construction is similar to the general structure of a construction by Chalcraft and Greene [CG94] (see also <ref> [Ste94] </ref>). Chalcraft and Greene describe a simulation of a Turing machine using train sets. 3 NP-hardness of SOKOBAN (1; 1) In this section we show that SOKOBAN (5,1) is NP-hard.
Reference: [Wil88] <author> G. Wilfong. </author> <title> Motion planning in the presence of movable obstacles. </title> <booktitle> In Proceedings of the 4th Annual ACM Symposium on Computatioanl Geometry, </booktitle> <pages> pages 279-288, </pages> <year> 1988. </year> <month> 12 </month>
Reference-contexts: A constraint that is almost always used is that objects and obstacles should never overlap. Various forms of motion planning problems were already considered by many researchers. Geometric motion planning problems were considered, among others, by Reif [Rei79], Hopcroft, Schwartz and Sharir [HSS84] and Wilfong <ref> [Wil88] </ref>. A motion planning on graphs which forms an abstraction of such problems was considered by Papadimitriou, Raghavan, Sudan and Tamaki [PRST94]. <p> Recall that in this version of SOKOBAN the packets are 1 fi 1 squares and the porter may push up to five packets and pull one. The construction this time is very similar to the construction of Wilfong <ref> [Wil88] </ref>. The gadgets used, however, are completely different. While Wilfong uses objects of many different shapes, some of them not even rectangular, all the objects we use are squares of the same size. Four basic gadgets are used this time. A one-way corridor is shown in Figure 8. <p> Each solution of the SOKOBAN puzzle yields therefore a satisfying assignment of the P3SAT formula. 5 Comparion with related works As mentioned, SOKOBAN is similar to a motion planning problem with `movable obstacels' studied by Wilfong <ref> [Wil88] </ref>. In Wilfong's problem the porter (or robot, as she is called there) is allowed to push obstacles. She is also allowed to grasp an obstacle and move along with it, as though they were a single object.
References-found: 9

