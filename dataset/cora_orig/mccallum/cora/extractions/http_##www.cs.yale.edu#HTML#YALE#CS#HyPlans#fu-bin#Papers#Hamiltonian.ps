URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/fu-bin/Papers/Hamiltonian.ps
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/fu-bin/research.html
Root-URL: http://www.cs.yale.edu
Email: Email: fu.bin@erd.epson.com.  
Phone: Fax: (650) 843-9106.  
Title: An O(2 n Volume Molecular Algorithm for Hamiltonian Path  
Note: Research performed in part as a student at Yale University while visiting the  Email: fxzhou@pantheon.yale.edu.  
Address: Palo Alto Laboratory, 3145 Porter Drive, Suite 104, Palo Alto, CA 94304.  
Affiliation: Epson  University of Maryland Institute for Advanced Computer Studies.  
Abstract: Bin Fu y Richard Beigel z Fang Xiao Zhou x fl Supported in part by the National Science Foundation under grants CCR-9700417 and CCR-9796317. This paper has been prepaired for DNA 4 Proceedings. z Department of Electrical Engineering and Computer Science University of Illinois at Chicago Rm. 1116, SEO Building, M/C 154 851 S. Morgan St. Chicago, IL 60607-7053. Email: beigel@eecs.uic.edu. Fax: (312)413-0024. Research performed in part during a sabbatical visit from Yale University to the University of Maryland's Human-Computer Interaction Lab. x Address: Dept. of Molecular Biophysics and Biochemistry, Yale University, New Haven, CT 06520-8114.
Abstract-found: 1
Intro-found: 1
Reference: <author> Adleman, L., </author> <year> 1994, </year> <title> Molecular computation of solutions to combinatorial problems, </title> <journal> Science, </journal> <volume> 266, </volume> <pages> 1021-1024. </pages>
Reference-contexts: 1. Introduction Molecular computation was first proposed by Feynman (Feynman 1961), but his idea was not implemented by experiment for a few decades. In 1994 Adleman <ref> (Adleman 1994) </ref> succeeded to practically solve an instance of the Hamiltonian path problem in a test tube, just by handling DNA strings. DNA is the storage medium for genetic information. It is composed of units called nucleotides, distinguished by the chemical group (base) attached to them. <p> The running time for a molecular algorithm is proportional to the number of operations on test tubes. An important complexity measure is the size of the solution space (also called simply volume), which is the maximum number of strings in all test tubes at any time, counting multiplicities. Adleman <ref> (Adleman 1994) </ref> has speculated that molecular 2 computation with a solution space of size 2 70 (about 0:002 moles) might be possible. Re--cent papers (Bach et al 1996, Ogihara 1996) attempt to optimize solution volume size for particular combinatorial problems. 2.1. <p> The following implementation method for the Sep operation is paraphrased from <ref> (Adleman et al 1994) </ref> : We first create many copies of s. To these oligos we attach biotin molecules, which are in turn anchored to an avidin bead matrix. We then melt the double strands in our test tube and pour them over this matrix. <p> In the next section we will design a molecular algorithm with volume only O (2 n n 2 log 2 n). 5. An O (2 n log n)-Volume Molecular Algorithm for the Hamiltonian Path Problem Adleman <ref> (Adleman 1994) </ref> solved the Hamiltonian path problem by operating on DNA sequences. He used exhaustive search for the solution of a 7-cities instance. For a general n-cities instance, exhaustive search involves n! cases.
Reference: <author> Adleman, L., </author> <year> 1995, </year> <title> On constructing a molecular computer, </title> <booktitle> In proceeding of the 1st DI-MACS workshop on DNA based computers, </booktitle> <publisher> American Mathematical society, </publisher> <pages> 1-21. </pages>
Reference: <author> Bach, E., Condon, A., Glaser, E., and Tanguay C., </author> <year> 1996, </year> <title> DNA models and algorithms for NP-complete problems. </title> <booktitle> In proceedings of the 11th annual conference on structure in complexity theory, </booktitle> <pages> 290-299. </pages>
Reference-contexts: DNA Computation Model Laboratory techniques for recombinant DNA and RNA manipulation are becoming highly standardized. Basic principles about recombinant DNA can be found in (Watson et al 1987, Watson et al 1992). The computational models we define in this section were inspired by the work of <ref> (Bach et al 1996) </ref> A test tube is a multiset of binary strings. We describe the allowable operations formally below. Where set notation is applied to multisets, multiplicities are respected. <p> Adleman (Adleman 1994) has speculated that molecular 2 computation with a solution space of size 2 70 (about 0:002 moles) might be possible. Re--cent papers <ref> (Bach et al 1996, Ogihara 1996) </ref> attempt to optimize solution volume size for particular combinatorial problems. 2.1. Encoding Let x 1 x n be an n-bit binary string.
Reference: <author> Baum, E., </author> <year> 1996, </year> <title> DNA sequences useful for computation, </title> <type> Technical report, </type> <institution> NEC. </institution>
Reference-contexts: Long common subsequences might cause DNA strands to be misclassified in Separation by subsequence. For in-depth discussion and a construction of the encoding, see Baum <ref> (Baum 1996) </ref>.
Reference: <author> Bax, E., </author> <year> 1993, </year> <title> Inclusion and exclusion algorithm for the Hamiltonian path problem, </title> <journal> Information processing letters, </journal> <volume> 47, </volume> <pages> 203-207. </pages> <address> 16 Beaver, D, </address> <year> 1995, </year> <title> A universal molecular computer, </title> <booktitle> In proceedings of the 1st DIMACS work-shop on DNA based computers, </booktitle> <publisher> American Mathematical Society. </publisher>
Reference-contexts: Held and Karp (Held and Karp 1962) give a 2 n n O (1) -time dynamic-programming algorithm that uses exponential space. We cannot transform their dynamic programming algorithm into a molecular algorithm. The best known algorithm for the Hamiltonian path problem is Bax's algorithm <ref> (Bax 1993) </ref> which uses n O (1) 2 n steps and polynomial space. The techniques used in (Beigel and Fu 1997, Bach et al 1996, Ogihara 1996), cannot be applied in transforming Bax's algorithm (Bax 1993) into a molecular algorithm. <p> The best known algorithm for the Hamiltonian path problem is Bax's algorithm <ref> (Bax 1993) </ref> which uses n O (1) 2 n steps and polynomial space. The techniques used in (Beigel and Fu 1997, Bach et al 1996, Ogihara 1996), cannot be applied in transforming Bax's algorithm (Bax 1993) into a molecular algorithm. Our new method 14 transforms Bax's algorithm into a molecular algorithm. The number of DNA sequences used in our algorithm is O (2 n n 2 log 2 n), which is much less than n!.
Reference: <author> Beaver, D., </author> <year> 1995, </year> <title> Computer with DNA, </title> <journal> Journal of Computational Biology, </journal> <volume> 2(1). </volume>
Reference: <author> Beigel, R., and Fu, B., </author> <year> 1997, </year> <title> Molecular computing, bounded nondeterminism, and efficient recursion, </title> <booktitle> In ICALP'97, </booktitle> <volume> LNCS 1256, </volume> <pages> 816-826. </pages>
Reference-contexts: The following lemma is due to Boneh et al (Boneh et al 1996). This version is given by Beigel and Fu in <ref> (Beigel and Fu 1997) </ref>. Lemma 7. Let be a circuit with m gates. <p> PP-MOL [v (n)] PPinit [v (n)]. ii. PP-MOL 0 [c; v (n)] PPinit 0 [c; v (n)]. Proof: (i) This is similar to the proof of [Theorem 1] <ref> (Beigel and Fu 1997) </ref>. The first operation of a PP-MOL [v (n)] computation is Init (T 0 ; v (n)), which produces v (n) DNA sequences encoding 1; 2; :::; v (n). Construct an NPinit (v (n)) Turing machine such that path i simulates the DNA sequence that encodes i. <p> We cannot transform their dynamic programming algorithm into a molecular algorithm. The best known algorithm for the Hamiltonian path problem is Bax's algorithm (Bax 1993) which uses n O (1) 2 n steps and polynomial space. The techniques used in <ref> (Beigel and Fu 1997, Bach et al 1996, Ogihara 1996) </ref>, cannot be applied in transforming Bax's algorithm (Bax 1993) into a molecular algorithm. Our new method 14 transforms Bax's algorithm into a molecular algorithm.
Reference: <author> Boneh, D., Dunworth, C., and Lipton, R., </author> <year> 1995, </year> <title> Breaking DES using a molecular computer, </title> <booktitle> In Proceedings of the 1st DIMACS workshop on DNA Based Computers, </booktitle> <publisher> American Mathematics Society. </publisher>
Reference: <author> Boneh, D., Dunworth, C., Lipton, R., and Sgall, J., </author> <year> 1996, </year> <title> On the computational power of DNA, </title> <journal> Discrete applied mathematics, </journal> <volume> 71, </volume> <pages> 79-94. </pages>
Reference-contexts: The following lemma is due to Boneh et al <ref> (Boneh et al 1996) </ref>. This version is given by Beigel and Fu in (Beigel and Fu 1997). Lemma 7. Let be a circuit with m gates.
Reference: <author> Fu, B., and Beigel, R., </author> <year> 1997, </year> <title> A comparison of resource-bounded molecular computation models, </title> <booktitle> In proceedings of the 5th Israel symposium on theory of computing and systems, </booktitle> <pages> 6-11. </pages>
Reference-contexts: The following lemma is due to Boneh et al (Boneh et al 1996). This version is given by Beigel and Fu in <ref> (Beigel and Fu 1997) </ref>. Lemma 7. Let be a circuit with m gates. <p> PP-MOL [v (n)] PPinit [v (n)]. ii. PP-MOL 0 [c; v (n)] PPinit 0 [c; v (n)]. Proof: (i) This is similar to the proof of [Theorem 1] <ref> (Beigel and Fu 1997) </ref>. The first operation of a PP-MOL [v (n)] computation is Init (T 0 ; v (n)), which produces v (n) DNA sequences encoding 1; 2; :::; v (n). Construct an NPinit (v (n)) Turing machine such that path i simulates the DNA sequence that encodes i. <p> We cannot transform their dynamic programming algorithm into a molecular algorithm. The best known algorithm for the Hamiltonian path problem is Bax's algorithm (Bax 1993) which uses n O (1) 2 n steps and polynomial space. The techniques used in <ref> (Beigel and Fu 1997, Bach et al 1996, Ogihara 1996) </ref>, cannot be applied in transforming Bax's algorithm (Bax 1993) into a molecular algorithm. Our new method 14 transforms Bax's algorithm into a molecular algorithm.
Reference: <author> Held, M., and Kapr, R., </author> <year> 1962, </year> <title> A dynamic programming approach to sequencing problem, </title> <journal> J. Soc. Indust. App. Math., </journal> <volume> 10, </volume> <pages> 196-210. </pages>
Reference-contexts: He used exhaustive search for the solution of a 7-cities instance. For a general n-cities instance, exhaustive search involves n! cases. Held and Karp <ref> (Held and Karp 1962) </ref> give a 2 n n O (1) -time dynamic-programming algorithm that uses exponential space. We cannot transform their dynamic programming algorithm into a molecular algorithm.
Reference: <author> Lipton, R., </author> <year> 1995, </year> <title> Using DNA to solve NP-complete problems, </title> <journal> Science, </journal> <volume> 268, </volume> <pages> 542-545. </pages>
Reference-contexts: Two complementary single strands can pair up and twist around each other, forming the famous double helix structure discovered by Watson and Crick. Following Adleman's groundbreaking experiment, Lipton <ref> (Lipton 1995) </ref> designed a simple molecular algorithm to solve the boolean satisfiability problem (SAT). The boolean 1 satisfiability problem is to determine whether a boolean formula has a truth assignment that makes the formula true.
Reference: <author> Morimoto, N., Arita, M., and Suyama, A., </author> <year> 1996, </year> <title> Solide phase DNA solution to the Hamilto-nian path problem, </title> <booktitle> In proceedings of third annual DIMACS workshop on DNA computation, </booktitle> <pages> 93-101. </pages>
Reference: <author> Ogihara, M., </author> <year> 1996, </year> <title> Breadth first search 3SAT algorithms for DNA computers, </title> <type> Technical report 629, </type> <institution> University of Rochester. </institution>
Reference-contexts: Adleman (Adleman 1994) has speculated that molecular 2 computation with a solution space of size 2 70 (about 0:002 moles) might be possible. Re--cent papers <ref> (Bach et al 1996, Ogihara 1996) </ref> attempt to optimize solution volume size for particular combinatorial problems. 2.1. Encoding Let x 1 x n be an n-bit binary string.
Reference: <author> Pippenger, N., and Fischer, M, </author> <year> 1979, </year> <title> Relations among complexity measures, </title> <journal> J. ACM, </journal> <volume> 26. </volume>
Reference: <author> Reif, J., </author> <year> 1995, </year> <title> Parallel molecular computation, </title> <booktitle> In proceedings of the 7th annual ACM symposium on parallel algorithms and architectures, </booktitle> <pages> 213-223. </pages>
Reference: <author> Roos, D., and Wagner, K., </author> <year> 1996, </year> <title> On the power of DNA-computing, </title> <journal> Information and Computation, </journal> <volume> 13, </volume> <pages> 95-109. </pages>
Reference-contexts: Various papers (Roweis et al 1996, Beaver 1995, Reif 1995, Boneh et al 1995) apply molecular computing to solve standard computational problems. Beaver (Beaver 1995a) and Roos and Wagner <ref> (Roos and Wagner 1996) </ref> designed DNA algorithms to solve a PSPACE-complete problem, but they used an operation that requires every strand of DNA in a test tube to anneal with its exact counterpart.
Reference: <author> Roweis, S., Winfree, E., Burgoyne, R., Chelyapov, N., Goodman, M., Rothemund, P., and Adleman, L., </author> <year> 1996, </year> <title> A sticker based model for DNA computation, </title> <booktitle> In proceedings of the second annual meeting on DNA based computers. </booktitle>
Reference: <author> Toda, S., </author> <year> 1991, </year> <title> PP is as hard as the polynomial-time hierarchy, </title> <journal> SIAM Journal of computing, </journal> <volume> 20(5), </volume> <pages> 865-877. </pages>
Reference-contexts: Given a boolean formula f , #SAT (f ) is the number of satisfying assignments of f . #SAT plays a very important role in complexity theory. For example, the polynomial time hierarchy can be reduced to #SAT via polynomial time Turing reductions <ref> (Toda 1991) </ref>. We design a molecular algorithm for #SAT that uses only practical operations. This greatly improves on what was previously known to be possible using practical molecular operations.
Reference: <author> Watson, J., and Gilman, M., Witkowski, J., Zoller, M., </author> <title> Recombinant DNA, 2nd edition, </title> <publisher> 17 Scientific American Books, W.H. Freeman and Co., </publisher> <year> 1992. </year>
Reference: <author> Watson, J., Hoplins, N., Roberts, J., et al, </author> <year> 1987, </year> <title> Molecular Biology of the Gene, </title> <address> Ben-jamin/Cummings, Menlo Park, CA. </address> <month> 18 </month>
Reference-contexts: DNA Computation Model Laboratory techniques for recombinant DNA and RNA manipulation are becoming highly standardized. Basic principles about recombinant DNA can be found in <ref> (Watson et al 1987, Watson et al 1992) </ref>. The computational models we define in this section were inspired by the work of (Bach et al 1996) A test tube is a multiset of binary strings. We describe the allowable operations formally below.
References-found: 21

