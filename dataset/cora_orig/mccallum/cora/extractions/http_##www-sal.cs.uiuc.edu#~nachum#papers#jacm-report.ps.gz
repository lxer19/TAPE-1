URL: http://www-sal.cs.uiuc.edu/~nachum/papers/jacm-report.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Title: EQUATIONAL INFERENCE, CANONICAL PROOFS, AND PROOF ORDERINGS  
Author: Leo Bachmair Nachum Dershowitz 
Date: April 14, 1992  
Address: New York 11794, U.S.A.  Urbana, Illinois 61801, U.S.A.  
Affiliation: Department of Computer Science State University of New York at Stony Brook Stony Brook,  Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: We describe the application of proof orderings|a technique for reasoning about inference systems|to various rewrite-based theorem-proving methods, including refinements of the standard Knuth-Bendix completion procedure based on critical pair criteria; Huet's procedure for rewriting modulo a congruence; ordered completion (a refutationally complete extension of stan dard completion); and a proof by consistency procedure for proving inductive theorems. fl This is a substantially revised version of the paper, "Orderings for equational proofs," co-authored with J. Hsiang and presented at the Symp. on Logic in Computer Science (Boston, Massachusetts, June 1986). It includes material from the paper "Proof by consistency in equational theories," by the first author, presented at the Third Annual Symp. on Logic in Computer Science (Edinburgh, Scotland, July 1988). This research was supported in part by the National Science Foundation under grants CCR-89-01322, CCR-90-07195, and CCR-90-24271. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Anantharaman and J. Hsiang. </author> <title> Automated proofs of the Moufang identities in alternative rings. </title> <journal> J. Automated Reasoning, </journal> <volume> 6 </volume> <pages> 79-109, </pages> <year> 1990. </year>
Reference-contexts: Implementations of ordered completion procedures have been reported in [50, 51]. Experiments with a procedure that combines ordered completion with associative-commutative completion are described in <ref> [1] </ref>. 7. Proof by Consistency In many applications, such as algebraic data type specifications and equational programming, equations are intended to define a certain standard model, called the "initial model." Reasoning about algebraic data types and equational programs thus requires proof methods that reflect this initial algebra semantics.
Reference: [2] <author> L. Bachmair. </author> <title> Proof methods for equational theories. </title> <type> PhD thesis, </type> <institution> University of Illinois, Urbana-Champaign, </institution> <year> 1987. </year>
Reference-contexts: The application of completion to a set of equations is viewed as a process of proof simplification, the goal of which is the derivation of rewrite proofs. A detailed exposition of this approach is contained in the first author's dissertation <ref> [2] </ref>; see also [3]. What distinguishes completion from ordinary logical inference is the incorporation of rules for removing redundant items from the set of inferred equations. In this context, an inference rule is a binary relation on sets of equations. <p> For each specific notion of normal form and transformation relation, we will have to prove an Existence Lemma. Finally, we will endeavor to give sufficient, practical conditions for fairness. 3.1. Standard Completion Let be a reduction ordering on terms. The inference system C, which was introduced in <ref> [2, 3] </ref> and which we call standard completion because it is inspired by Knuth and Bendix [42], contains six rules operating on mixed sets E [ R of rules R and equations E, where R is contained in . Normal-form proofs are rewrite proofs that use rules in R only. <p> Proofs are compared according to their complexity, using the extension of the above lexicographic ordering to multisets. This ordering, which is a proof reduction ordering, contains the proof transformation relation ). For details of a similar proof, see <ref> [2, 3] </ref>. It remains to be shown that every identity eventually has a (persisting) rewrite proof. If no unoriented equations persist, that is, if the procedure does not fail, this is the same as saying that the result R 1 is Church-Rosser.
Reference: [3] <author> L. Bachmair and N. Dershowitz. </author> <title> Critical pair criteria for completion. </title> <journal> J. Symbolic Computation, </journal> <volume> 6 </volume> <pages> 1-18, </pages> <year> 1988. </year>
Reference-contexts: The application of completion to a set of equations is viewed as a process of proof simplification, the goal of which is the derivation of rewrite proofs. A detailed exposition of this approach is contained in the first author's dissertation [2]; see also <ref> [3] </ref>. What distinguishes completion from ordinary logical inference is the incorporation of rules for removing redundant items from the set of inferred equations. In this context, an inference rule is a binary relation on sets of equations. <p> For each specific notion of normal form and transformation relation, we will have to prove an Existence Lemma. Finally, we will endeavor to give sufficient, practical conditions for fairness. 3.1. Standard Completion Let be a reduction ordering on terms. The inference system C, which was introduced in <ref> [2, 3] </ref> and which we call standard completion because it is inspired by Knuth and Bendix [42], contains six rules operating on mixed sets E [ R of rules R and equations E, where R is contained in . Normal-form proofs are rewrite proofs that use rules in R only. <p> Proofs are compared according to their complexity, using the extension of the above lexicographic ordering to multisets. This ordering, which is a proof reduction ordering, contains the proof transformation relation ). For details of a similar proof, see <ref> [2, 3] </ref>. It remains to be shown that every identity eventually has a (persisting) rewrite proof. If no unoriented equations persist, that is, if the procedure does not fail, this is the same as saying that the result R 1 is Church-Rosser. <p> Clearly, if a non-failing derivation is fair with respect to a correct criterion CP C, then its limit R 1 is convergent. Every correct criterion is sound <ref> [3] </ref> but not vice versa.
Reference: [4] <author> L. Bachmair and H. Ganzinger. </author> <title> On restrictions of ordered paramodulation with simplification. </title> <booktitle> In Proc. 10th Int. Conf. on Automated Deduction, Lect. Notes in Comput. Sci., </booktitle> <pages> pages 427-441, </pages> <address> Berlin, 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Our approach was found to be of advantage in describing rewrite techniques for program synthesis [55]. Many of the rewrite techniques, which we have discussed in the context of equational theories, can also be applied in the more general setting of first-order clausal theorem proving, as described in <ref> [4, 5] </ref>. Acknowledgements We thank Jieh Hsiang for thinking with us about these issues and Jean-Pierre Jouannaud for his enthusiasm and clarifying comments.
Reference: [5] <author> L. Bachmair and H. Ganzinger. </author> <title> Rewrite-based equational theorem proving with selection and simplification. </title> <type> Technical Report MPI-I-91-208, </type> <institution> Max-Planck-Institut fur Informatik, Saarbrucken, Germany, </institution> <year> 1991. </year> <note> To appear in Journal of Logic and Computation. </note>
Reference-contexts: Our approach was found to be of advantage in describing rewrite techniques for program synthesis [55]. Many of the rewrite techniques, which we have discussed in the context of equational theories, can also be applied in the more general setting of first-order clausal theorem proving, as described in <ref> [4, 5] </ref>. Acknowledgements We thank Jieh Hsiang for thinking with us about these issues and Jean-Pierre Jouannaud for his enthusiasm and clarifying comments.
Reference: [6] <author> Leo Bachmair and Nachum Dershowitz. </author> <title> Inference rules for rewrite-based first-order theorem proving. </title> <booktitle> In Proceedings of the Second IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 331-337, </pages> <address> Ithaca, NY, </address> <month> June </month> <year> 1987. </year>
Reference-contexts: The inference system cum proof complexity approach is by no means limited to purely equational theories. In [27, 9, 18], completion procedures for conditional equations (Horn clauses) have been described in this framework. Applications to first-order theorem proving (with or without equality) are described in <ref> [6] </ref>. The techniques underlying ordered completion have also been applied to other forms of unification of importance in theorem provers based on equational matings; see [26, 25]. For another interesting application, to unification in Boolean rings and Abelian groups, see [10].
Reference: [7] <author> Leo Bachmair and Nachum Dershowitz. </author> <title> Completion for rewriting modulo a congruence. </title> <journal> Theoretical Computer Science, </journal> <volume> 67(2 & 3), </volume> <month> October </month> <year> 1989. </year>
Reference-contexts: Such overlaps can be effectively dealt with if a finite, complete A-unification algorithm is given. An associative commutative completion procedure based on this approach has been described by Peterson and Stickel [53]; for a formulation within the inference rule cum proof normalization approach, see <ref> [7] </ref> 6. Ordered Completion Standard completion fails whenever an equation s t between persistently irreducible, yet incomparable terms s and t is generated. <p> An important class of procedures we have not discussed are completion procedures based on semantic unification. For a formalization of such procedures within the proof ordering framework, see <ref> [7] </ref>. The inference system cum proof complexity approach is by no means limited to purely equational theories. In [27, 9, 18], completion procedures for conditional equations (Horn clauses) have been described in this framework. Applications to first-order theorem proving (with or without equality) are described in [6].
Reference: [8] <author> Leo Bachmair, Nachum Dershowitz, and David A. Plaisted. </author> <title> Completion without failure. </title> <editor> In H. At-Kaci and M. Nivat, editors, </editor> <title> Resolution of Equations in Algebraic Structures 2: Rewriting Techniques, </title> <booktitle> chapter 1, </booktitle> <pages> pages 1-30. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: It can be shown that, under certain reasonable assumptions, ordered completion actually succeeds in constructing a convergent rewrite system, if such a system exists. For details see <ref> [8] </ref>. Ordered completion is a refutationally complete theorem proving method for equational theories. Let E be a set of equations and s t be an equation provable in E, that is, s $ fl E t.
Reference: [9] <author> H. Bertling and H. Ganzinger. </author> <title> Completion-time optimization of rewrite-time goal solving. </title> <booktitle> In Proc. 3rd Int Conf. Rewriting Techniques and Applications, Lect. Notes in Comput. Sci., </booktitle> <address> Berlin, 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: An important class of procedures we have not discussed are completion procedures based on semantic unification. For a formalization of such procedures within the proof ordering framework, see [7]. The inference system cum proof complexity approach is by no means limited to purely equational theories. In <ref> [27, 9, 18] </ref>, completion procedures for conditional equations (Horn clauses) have been described in this framework. Applications to first-order theorem proving (with or without equality) are described in [6].
Reference: [10] <author> A. Boudet, J. P. Jouannaud, and M. Schmidt-Schau. </author> <title> Unification in free extensions of Boolean rings and Abelian groups. </title> <booktitle> In Proc. Third Annual Symp. on Logic in Computer Science, </booktitle> <pages> pages 121-130, </pages> <address> Edinburgh, Scotland, </address> <year> 1988. </year>
Reference-contexts: The techniques underlying ordered completion have also been applied to other forms of unification of importance in theorem provers based on equational matings; see [26, 25]. For another interesting application, to unification in Boolean rings and Abelian groups, see <ref> [10] </ref>. Our approach was found to be of advantage in describing rewrite techniques for program synthesis [55].
Reference: [11] <author> T. Brown. </author> <title> A structured design-method for specialized proof procedures. </title> <type> PhD thesis, </type> <institution> California Institute of Technology, Pasadena, </institution> <year> 1975. </year>
Reference-contexts: In sum, ordered completion provides a semi-decision procedure for the validity problem in equational theories. Ordered completion is in essence a restricted version of paramodulation, enriched by contraction rules (including simplification by rewriting). Computation of equational consequences from unorientable equations already appears in the work of Brown <ref> [11] </ref> and Lankford [46] on integrating resolution and simplification by rewriting.
Reference: [12] <author> B. </author> <title> Buchberger. A critical-pair/completion algorithm for finitely generated ideals in rings. In Logic and Machines: Decision Problems and Complexity, </title> <booktitle> Lect. Notes in Comput. Sci., </booktitle> <pages> pages 137-161, </pages> <address> Berlin, 1984. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: CP (E 0 [ R 0 ) and therefore is superfluous according to the criterion.) All of the correct criteria that have been suggested in the literature can be viewed as applications of compositeness, a concept that is the analogue, on the proof level, of the term-based notion of "connectedness" <ref> [12] </ref>.
Reference: [13] <author> R. Bundgen and Wolfgang Kuchlin. </author> <title> Computing ground reducibility and inductively complete positions. </title> <booktitle> In Proc. 3rd Int Conf. Rewriting Techniques and Applications, Lect. Notes in Com-put. Sci., </booktitle> <pages> pages 59-75, </pages> <address> Berlin, 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A set fp 1 ; : : : ; p n g of non-variable positions in a term t is said to be inductive if every ground instance t is reducible by R at some position p i , whenever is irreducible (cf. <ref> [44, 13] </ref>). For example, in x + (y + z) the subterm y + z is rooted at an inductive position (the rightmost occurrence of + or fi is reducible by R, as we have pointed out above).
Reference: [14] <author> George Butler and Dallas S. Lankford. </author> <title> Experiments with computer implementations of procedures which often derive decision algorithms for the word problem in abstract algebras. </title> <institution> Memo MTP-7, Department of Mathematics, Louisiana Tech. University, Ruston, LA, </institution> <month> August </month> <year> 1980. </year>
Reference-contexts: It has been shown <ref> [14, 48] </ref> that there is exactly one (finite or infinite) reduced convergent rewrite system (up to renaming of variables) contained in any given reduction ordering. The contraction rules we have suffice for reducing rules in this way.
Reference: [15] <author> H. Comon. </author> <title> Solving inequations in term algebras. </title> <booktitle> In Proc. Fifth Annual Symp. on Logic in Computer Science, </booktitle> <pages> pages 62-69, </pages> <address> Philadelphia, Pennsylvania, </address> <year> 1990. </year>
Reference-contexts: This question is decidable, for instance, if is a path ordering based on a total precedence <ref> [15, 37] </ref>. If inequations can not be solved in general for the given ordering , or if the decision procedure is prohibitively expensive, then completion may have to deduce more equations than are actually necessary to ensure fairness.
Reference: [16] <author> Nachum Dershowitz. </author> <title> Applications of the Knuth-Bendix completion procedure. </title> <booktitle> In Proceedings of the Seminaire d'Informatique Theorique, </booktitle> <pages> pages 95-111, </pages> <address> Paris, France, </address> <month> December </month> <year> 1982. </year>
Reference-contexts: (involving unification) called "superposition": When the left-hand side of an instance of a rule can be rewritten by another rule, the two possible results of rewriting the left-hand side instance form what is called a "critical pair." (Precise definitions will be given in Section 2.3.) The following version of completion <ref> [16] </ref> takes as input a set of equations E 0 and a well-founded ordering . It generates all new critical pairs at once; more practical versions (notably the one in [33]) do this incrementally. Let E be E 0 and R be the empty set. <p> Associativity and commutativity of + and fi are inductive theorems of R 0 , but not equational theorems, as there are non-standard models in which the functions denoted by + and fi are not associative and commutative. Dershowitz <ref> [16] </ref> has pointed out that an equation s t is an inductive theorem of a (ground) convergent rewrite system R if and only if no equation u v between distinct ground terms irreducible by R, is provable by R [ fs tg. <p> In contrast with Musser's method, an explicit axiomatization of equality is not required in this context. Dershowitz <ref> [16] </ref> and Jouannaud and Kounalis [36] designed inductive completion procedures based on ground reducibility of terms. An inconsistency is signified by a rewrite rule u ! v the left-hand side of which is not ground reducible. In a similar procedure [41], "test sets" are used to check for consistency.
Reference: [17] <author> Nachum Dershowitz. </author> <title> Termination of rewriting. </title> <journal> J. of Symbolic Computation, </journal> 3(1&2):69-115, February/April 1987. Corrigendum: <volume> 4, </volume> 3 (December 1987), <pages> 409-410. </pages> 36 
Reference-contexts: + (x z) (y + z) x ! (y x) + (z x) The rules with double-headed arrows are used only in the direction that results in a decrease in a specific ordering (in this case, the lexicographic path ordering with a total ordering of the operators and constants; see <ref> [17] </ref>). Ordered completion, starting with this system and (the Skolemized negation of) a theorem in first-order predicate calculus with equality (taking + to be exclusive-or and to be conjunction), can be used (by Herbrand's Theorem) as the basis of a refutationally complete prover (cf. [30]). <p> In other words, according to the multiset ordering, any element of a multiset can be replaced by any finite number of elements that are smaller with respect to . The multiset ordering mul is well-founded (on finite multisets) if and only if the ordering is well-founded [20]. See <ref> [17] </ref> for a survey of termination. 2.2. <p> terms above smaller ones), and illustrate the proof normalization process with the axioms of group theory: e x x (x y) z x (y z): The equation z e z is provable: z e $ E z (z z) $ E e z Let be the recursive path ordering (see <ref> [17] </ref>) corresponding to a precedence ordering in which is greater than , which is greater than e. <p> This, however, can not always be done without losing correctness. Consider the following initial system of oriented equations: c ! a f (x; b) ! x f (b; z) ! c along with a lexicographic path ordering (see <ref> [17] </ref>) in which the function symbols in order of decreasing precedence are f , c, g, b, a, and in which the first argument of f is more significant than the second. Deduction generates the rules c ! b and f (g (b); z) ! c.
Reference: [18] <author> Nachum Dershowitz. </author> <title> Ordering-based strategies for Horn clauses. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 118-124, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: An important class of procedures we have not discussed are completion procedures based on semantic unification. For a formalization of such procedures within the proof ordering framework, see [7]. The inference system cum proof complexity approach is by no means limited to purely equational theories. In <ref> [27, 9, 18] </ref>, completion procedures for conditional equations (Horn clauses) have been described in this framework. Applications to first-order theorem proving (with or without equality) are described in [6].
Reference: [19] <author> Nachum Dershowitz and Jean-Pierre Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science B: Formal Methods and Semantics, chapter 6, </booktitle> <pages> pages 243-320. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: The first rewriting-based decision procedure (for loops) was given by Evans [22], in 1951. See <ref> [19] </ref> for a survey of the field. In 1970, Knuth and Bendix [42] proposed a procedure that attempts to construct a convergent rewrite system from a finite axiomatization of an equational theory. <p> Therefore, there is also a proof s ! fl R v fl A rewrite system R is reduced if, for each rule l ! r in R, the right-hand side r is irreducible by R and no term s less than l in the encompassment ordering is reducible <ref> [19] </ref>. It has been shown [14, 48] that there is exactly one (finite or infinite) reduced convergent rewrite system (up to renaming of variables) contained in any given reduction ordering. The contraction rules we have suffice for reducing rules in this way.
Reference: [20] <author> Nachum Dershowitz and Zohar Manna. </author> <title> Proving termination with multiset orderings. </title> <journal> Communications of the ACM, </journal> <volume> 22(8) </volume> <pages> 465-476, </pages> <month> August </month> <year> 1979. </year>
Reference-contexts: In other words, according to the multiset ordering, any element of a multiset can be replaced by any finite number of elements that are smaller with respect to . The multiset ordering mul is well-founded (on finite multisets) if and only if the ordering is well-founded <ref> [20] </ref>. See [17] for a survey of termination. 2.2.
Reference: [21] <author> Nachum Dershowitz, Leo Marcus, and Andrzej Tarlecki. </author> <title> Existence, uniqueness, and construction of rewrite systems. </title> <journal> SIAM J. on Computing, </journal> <volume> 17(4) </volume> <pages> 629-639, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: The strategy used by a completion procedure to construct a derivation may determine whether or not an unorientable equation is generated <ref> [21] </ref>. To avoid failure a procedure may have to systematically enumerate all possible derivations (for example, via backtracking). In some cases, standard completion is bound to fail even with backtracking.
Reference: [22] <author> T. Evans. </author> <title> On multiplicative systems defined by generators and relations, I. </title> <booktitle> Proceedings of the Cambridge Philosophical Society, </booktitle> <volume> 47 </volume> <pages> 637-649, </pages> <year> 1951. </year>
Reference-contexts: The first rewriting-based decision procedure (for loops) was given by Evans <ref> [22] </ref>, in 1951. See [19] for a survey of the field. In 1970, Knuth and Bendix [42] proposed a procedure that attempts to construct a convergent rewrite system from a finite axiomatization of an equational theory.
Reference: [23] <author> L. </author> <title> Fribourg. A superposition oriented theorem prover. </title> <journal> Theoretical Computer Science, </journal> <volume> 35 </volume> <pages> 129-164, </pages> <year> 1985. </year>
Reference-contexts: Peterson [52] proved the refutation completeness of an inference system combining resolution, paramodulation, and simplification with respect to order-ings on ground terms that are order-isomorphic to the natural numbers. (This class of orderings excludes many important orderings, though, such as most path orderings.) Fribourg <ref> [23] </ref> proved 27 the completeness of a restricted version of paramodulation with locking resolution.
Reference: [24] <author> L. </author> <title> Fribourg. A strong restriction of the inductive completion procedure. </title> <journal> J. Symbolic Computation, </journal> <volume> 8 </volume> <pages> 253-276, </pages> <year> 1989. </year>
Reference-contexts: Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in [41, 36]. In theories with free constructors ground reducibility is trivially decidable: a term is ground reducible if and only if it contains a non-constructor symbol (cf. the discussion of constructors in <ref> [34, 36, 24] </ref>). In the example above, the function symbols 0 and 0 are constructors: all ground normal-form terms are built from these two symbols only. The constructors are also free: no two ground terms built solely from these two symbols are equivalent. <p> cover sets is based on the following notion: We say that p is an inductive position in a term t (with respect to R) if tj p is not a variable and each ground term tj p for which is irreducible, is an instance of some left-hand side of R <ref> [24] </ref>. In other words, if p is an inductive position in t, then each ground instance t can be rewritten either within the variable part of t or at position p. <p> That is, 32 there is a finite fair derivation where no verifiably inconsistent equation has been derived; hence all derived equations are inductive theorems. The proof in this example in essence corresponds to an "induction on the variable z." As Fribourg <ref> [24] </ref> points out, choosing an inductive position in a term essentially corresponds to selecting an "induction schema" for a proof by induction. <p> As a consequence, there are finite derivations from consistent sets of conjectures for which inductive completion fails, see <ref> [24] </ref>. On the other hand, it is also possible that inductive completion deduces equations that are useful for simplification but can not be obtained by the more restrictive deduction rule of P.
Reference: [25] <author> J. Gallier, W. Snyder, P. Narendran, and D. Plaisted. </author> <title> Rigid E-unification is NP-complete. </title> <booktitle> In Proc. Third Annual Symp. Logic in Computer Science, </booktitle> <pages> pages 218-227, </pages> <address> Edinburgh, Scotland, </address> <year> 1988. </year>
Reference-contexts: Applications to first-order theorem proving (with or without equality) are described in [6]. The techniques underlying ordered completion have also been applied to other forms of unification of importance in theorem provers based on equational matings; see <ref> [26, 25] </ref>. For another interesting application, to unification in Boolean rings and Abelian groups, see [10]. Our approach was found to be of advantage in describing rewrite techniques for program synthesis [55].
Reference: [26] <author> J. Gallier, W. Snyder, and S. Raatz. </author> <title> Rigid E-unification and its application to equational matings. </title> <editor> In H. A it-Kaci and M. Nivat, editors, </editor> <title> Resolution of Equations in Algebraic Structures (Vol. </title> <booktitle> 1: Algebraic techniques), </booktitle> <pages> pages 151-216. </pages> <address> Boston, </address> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: Applications to first-order theorem proving (with or without equality) are described in [6]. The techniques underlying ordered completion have also been applied to other forms of unification of importance in theorem provers based on equational matings; see <ref> [26, 25] </ref>. For another interesting application, to unification in Boolean rings and Abelian groups, see [10]. Our approach was found to be of advantage in describing rewrite techniques for program synthesis [55].
Reference: [27] <author> H. Ganzinger. </author> <title> A completion procedure for conditional equations. </title> <journal> J. Symbolic Computation, </journal> <note> 1988. To appear. </note>
Reference-contexts: An important class of procedures we have not discussed are completion procedures based on semantic unification. For a formalization of such procedures within the proof ordering framework, see [7]. The inference system cum proof complexity approach is by no means limited to purely equational theories. In <ref> [27, 9, 18] </ref>, completion procedures for conditional equations (Horn clauses) have been described in this framework. Applications to first-order theorem proving (with or without equality) are described in [6].
Reference: [28] <author> J. A. Goguen. </author> <title> How to prove algebraic inductive hypotheses without induction. </title> <editor> In W. Bibel and R. Kowalski, editors, </editor> <booktitle> Proc. 5th Conf. Automated Deduction, Lect. Notes in Comput. Sci., </booktitle> <pages> pages 356-373, </pages> <address> Berlin, 1980. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A set of equations C is consistent with a ground convergent rewrite system R if and only if all equations in C are inductive theorems of R. 2 If R is ground convergent, then the algebra defined on the set of ground normal-form terms is an initial model of R <ref> [28] </ref>. It is isomorphic to the quotient of the set of ground terms by the congruence $ fl R . Consistency in this sense is not decidable (not even semi-decidable). However, we will show that any inconsistent set of equations can be transformed so that its inconsistency can be verified.
Reference: [29] <author> B. Gramlich. </author> <title> Completion based inductive theorem proving: An abstract framework and its applications. </title> <booktitle> In Proc. ECAI-90, </booktitle> <pages> pages 314-319, </pages> <address> Stockholm, Sweden, </address> <year> 1990. </year>
Reference-contexts: Finally, let us point out that the ground convergence of the given theory R is only needed for the purpose of refutation completeness. The same techniques can also be applied to non-convergent sets of equations. Gramlich <ref> [29] </ref> describes a more refined proof by consistency system along lines similar to ordered completion. The relation of completion-based approaches to well-founded induction has been studied in [56]. 8.
Reference: [30] <author> Jieh Hsiang and Nachum Dershowitz. </author> <title> Rewrite methods for clausal and non-clausal theorem proving. </title> <booktitle> In Proceedings of the Tenth International Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 331-346, </pages> <address> Barcelona, Spain, </address> <month> July </month> <year> 1983. </year> <booktitle> European Association of Theoretical Computer Science. Vol. 154 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Ordered completion, starting with this system and (the Skolemized negation of) a theorem in first-order predicate calculus with equality (taking + to be exclusive-or and to be conjunction), can be used (by Herbrand's Theorem) as the basis of a refutationally complete prover (cf. <ref> [30] </ref>).
Reference: [31] <author> Jieh Hsiang and Michael Rusinowitch. </author> <title> On word problems in equational theories. </title> <editor> In T. Ottmann, editor, </editor> <booktitle> Proceedings of the Fourteenth EATCS International Conference on Automata, Languages and Programming, </booktitle> <pages> pages 54-71, </pages> <address> Karlsruhe, West Germany, </address> <month> July </month> <year> 1987. </year> <title> Vol. </title> <booktitle> 267 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address> <month> 37 </month>
Reference-contexts: Standard completion will fail for this set of equations, whereas with ordered completion we can obtain a set of equations (x y) z (x w) z x (y z) ! x z <ref> [31] </ref>, which is ground convergent with respect to the lexicographic path ordering, and therefore provides a decision procedure for the word problem in the above theory. It can be shown that, under certain reasonable assumptions, ordered completion actually succeeds in constructing a convergent rewrite system, if such a system exists. <p> Hsiang and Rusinowitch <ref> [31] </ref> used their transfinite semantic tree method to prove the refutation completeness of a restricted version of ordered completion, albeit with weaker simplification than even standard completion, as with semantic trees it is difficult to account for simplification rules depending on the encompassment ordering.
Reference: [32] <author> G. Huet. </author> <title> Confluent reductions: Abstract properties and applications to term rewriting systems. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 27 </volume> <pages> 797-821, </pages> <year> 1980. </year>
Reference-contexts: In the past, Church-Rosser properties for rewrite systems have been proved by induction with respect to various orderings on terms. Some particularly elegant proofs are given by Huet in <ref> [32] </ref>. An intricate and rather complicated proof of correctness of a specific completion procedure can be found in [33]. We believe that simplification and deletion mechanisms are best discussed in a proof-theoretic setting, where correctness of completion can be formulated as a proof normalization property. <p> In Section 4, we discuss the concept of "critical pair criterion" for weakening the conditions for fairness to require that only a subset of the critical deductions be 4 performed. In Section 5, we formalize Huet's <ref> [32] </ref> method for handling equations, such as commu--tativity, that can not be oriented. Then, in Section 6, we describe a method, called "ordered completion," that extends standard completion to a complete equational proof method. <p> In this case, s $ p c t, where c is a critical pair of e and e 0 . For details, see <ref> [42, 32] </ref>. 3. Equational Inference Knuth and Bendix [42] presented a procedure that attempts to construct a convergent rewrite system for a given equational theory. <p> Consider, for example the set A of associativity and commutativity axioms x + y y + x x fi y y fi x and the set R <ref> [32] </ref> of rules x + 0 ! x x fi 1 ! x f (0) ! 1 f (x + y) ! f (x) fi f (y) The system R=A is terminating, for if ground terms are evaluated by -(0) = 2 -(s + t) = -(s) + -(t) -(f (s)) <p> Since the derivation is unfailing, E 1 = ;, and we may conclude that any non-normal persisting proof can be transformed to a simpler proof. The assertion follows by persistence. The above completion method has been suggested by Huet <ref> [32] </ref>.
Reference: [33] <author> G. Huet. </author> <title> A complete proof of correctness of the Knuth and Bendix completion algorithm. </title> <journal> J. Computer and System Sciences, </journal> <volume> 23 </volume> <pages> 11-21, </pages> <year> 1981. </year>
Reference-contexts: It generates all new critical pairs at once; more practical versions (notably the one in <ref> [33] </ref>) do this incrementally. Let E be E 0 and R be the empty set. Then repeat the following six steps as long as equations are left in E; if none remain, terminate successfully: 2 1. Remove an equation s t (or t s) from E such that s t. <p> This notion 3 of correctness is crucial for the use of completion as a (relatively efficient) semi-decision procedure for validity in equational theories, as proposed by Lankford [46] and Huet <ref> [33] </ref>. <p> In the past, Church-Rosser properties for rewrite systems have been proved by induction with respect to various orderings on terms. Some particularly elegant proofs are given by Huet in [32]. An intricate and rather complicated proof of correctness of a specific completion procedure can be found in <ref> [33] </ref>. We believe that simplification and deletion mechanisms are best discussed in a proof-theoretic setting, where correctness of completion can be formulated as a proof normalization property. <p> two inference rules: Composition: E [ R [ fs ! tg if t ! R u Collapse: E [ R [ fs ! tg if there is a proof s ! p v!w u in R, where s &gt; v The symbol &gt; denotes the encompassment ordering (called "containment" in <ref> [33] </ref>): s &gt; v if some subterm of s is an instance of v, but not vice versa. Composition allows simplification of right-hand sides of rewrite rules; collapsing simplifies left-hand sides. <p> This change should be made in the inference rule, transformation rule, and proof ordering; see also Section 6. Correctness, in our sense, of a specific completion procedure was first proved in <ref> [33] </ref>. By formulating completion as an equational inference system and deriving corresponding completeness 16 results, we obtain correctness of a wide class of different completion procedures. The proof ordering approach is comparatively simple and intuitive, especially for dealing with simplification inferences.
Reference: [34] <author> G. Huet and J.-M. Hullot. </author> <title> Proofs by induction in equational theories with constructors. </title> <journal> J. Computer and System Sciences, </journal> <volume> 25 </volume> <pages> 239-266, </pages> <year> 1982. </year>
Reference-contexts: Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in [41, 36]. In theories with free constructors ground reducibility is trivially decidable: a term is ground reducible if and only if it contains a non-constructor symbol (cf. the discussion of constructors in <ref> [34, 36, 24] </ref>). In the example above, the function symbols 0 and 0 are constructors: all ground normal-form terms are built from these two symbols only. The constructors are also free: no two ground terms built solely from these two symbols are equivalent. <p> ; : : : ; s n t n g can be shown to be a cover set for any equation f (s 1 ; : : : ; s n ) f (t 1 ; : : :; t n ) for which f is a constructor symbol (cf. <ref> [34] </ref>). For if f is a free constructor, then a ground instance f (s 1 ; : : : ; s n ) f (t 1 ; : : : ; t n ) is inconsistent if and only if one of the equations s i t i is inconsistent. <p> The equation true false indicates an inconsistency. Various improvements of the basic scheme have been suggested. The various approaches mainly differ in the respective notions of consistency they employ. 33 Huet and Hullot <ref> [34] </ref> studied the case of theories with (free) constructors, in which case an inconsistency is signified by an equation between two distinct ground terms built solely from constructor symbols. In contrast with Musser's method, an explicit axiomatization of equality is not required in this context.
Reference: [35] <author> Jean-Pierre Jouannaud. </author> <title> A set of eleven important open problems in term rewriting based theorem proving. </title> <journal> Bulletin of the European Association for Theoretical Computer Science, </journal> (31):272-273, February 1987. 
Reference-contexts: An important advantage of our approach is the capability of handling unorientable equations and the flexibility in the choice of a reduction ordering. The inference system P also provides a complete method for disproving inductive theorems, and thus solves a problem posed by Jouannaud in <ref> [35] </ref>. Finally, let us point out that the ground convergence of the given theory R is only needed for the purpose of refutation completeness. The same techniques can also be applied to non-convergent sets of equations.
Reference: [36] <author> Jean-Pierre Jouannaud and Emmanuel Kounalis. </author> <title> Automatic proofs by induction in equational theories without constructors. </title> <journal> Information and Computation, </journal> <volume> 81(1) </volume> <pages> 1-33, </pages> <year> 1989. </year>
Reference-contexts: This case of inconsistency is indeed decidable. The key here is the notion of "ground reducibility." A term t is called ground reducible by R if all its ground instances are reducible by R (see <ref> [36] </ref>). For example, every term in which the function symbol + or fi occurs is ground reducible by the system R 0 , since in any ground term the subterm rooted at the rightmost occurrence of + or fi can be rewritten by one of the four rules. Lemma 7.2. <p> Ground reducibility is decidable for finite rewrite systems [54, 39], but, according to [38] is in exponential time even for left-linear rewrite systems. Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in <ref> [41, 36] </ref>. In theories with free constructors ground reducibility is trivially decidable: a term is ground reducible if and only if it contains a non-constructor symbol (cf. the discussion of constructors in [34, 36, 24]). <p> Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in [41, 36]. In theories with free constructors ground reducibility is trivially decidable: a term is ground reducible if and only if it contains a non-constructor symbol (cf. the discussion of constructors in <ref> [34, 36, 24] </ref>). In the example above, the function symbols 0 and 0 are constructors: all ground normal-form terms are built from these two symbols only. The constructors are also free: no two ground terms built solely from these two symbols are equivalent. <p> Moreover, simplification does not require every associative-commutative rewrite step to be reducing, but only that the final term in the rewrite sequence be smaller than the initial term. This possibility of incorporating associativity and commutativity is in marked contrast with the approach, advocated by Jouannaud and Kounalis <ref> [36] </ref>, of extending associative-commutative completion by a suitable inconsistency test. The latter approach mandates the use of associative-commutative unification for deduction, but allows only for weaker simplification in which every single rewrite step is reducing. <p> In contrast with Musser's method, an explicit axiomatization of equality is not required in this context. Dershowitz [16] and Jouannaud and Kounalis <ref> [36] </ref> designed inductive completion procedures based on ground reducibility of terms. An inconsistency is signified by a rewrite rule u ! v the left-hand side of which is not ground reducible. In a similar procedure [41], "test sets" are used to check for consistency.
Reference: [37] <author> Jean-Pierre Jouannaud and Mitsuhiro Okada. </author> <title> Satisfiability of systems of ordinal notations with the subterm property is decidable. </title> <booktitle> In Proceedings of the Eighteenth EATCS Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 455-468, </pages> <address> Madrid, Spain, </address> <month> July </month> <year> 1991. </year> <title> Vol. </title> <booktitle> 510 in Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: This question is decidable, for instance, if is a path ordering based on a total precedence <ref> [15, 37] </ref>. If inequations can not be solved in general for the given ordering , or if the decision procedure is prohibitively expensive, then completion may have to deduce more equations than are actually necessary to ensure fairness.
Reference: [38] <author> D. Kapur, P. Narendran, D. J. Rosenkrantz, and H. Zhang. Sufficient-completeness, </author> <title> quasi-reducibility and their complexity. </title> <type> Tech. Rep., </type> <institution> Dept. of Computer Science, SUNY at Albany, </institution> <year> 1987. </year>
Reference-contexts: Ground reducibility is decidable for finite rewrite systems [54, 39], but, according to <ref> [38] </ref> is in exponential time even for left-linear rewrite systems. Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in [41, 36].
Reference: [39] <author> D. Kapur, P. Narendran, and H. Zhang. </author> <title> On sufficient-completeness and related properties of term rewriting systems. </title> <journal> Acta Informatica, </journal> <volume> 24 </volume> <pages> 395-415, </pages> <year> 1987. </year>
Reference-contexts: Ground reducibility is decidable for finite rewrite systems <ref> [54, 39] </ref>, but, according to [38] is in exponential time even for left-linear rewrite systems. Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in [41, 36].
Reference: [40] <author> Deepak Kapur, D. R. Musser, and P. Narendran. </author> <title> Only prime superpositions need be considered for the Knuth-Bendix procedure. </title> <journal> J. Symbolic Computation, </journal> <volume> 4 </volume> <pages> 19-36, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: This special case of compositeness was introduced by Kapur, Musser, and Narendran <ref> [40] </ref>.
Reference: [41] <author> Deepak Kapur, Paliath Narendran, and Hantao Zhang. </author> <title> Automating inductionless induction using test sets. </title> <journal> J. Symbolic Computation, </journal> <volume> 11 </volume> <pages> 83-112, </pages> <year> 1991. </year>
Reference-contexts: Ground reducibility is decidable for finite rewrite systems [54, 39], but, according to [38] is in exponential time even for left-linear rewrite systems. Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in <ref> [41, 36] </ref>. In theories with free constructors ground reducibility is trivially decidable: a term is ground reducible if and only if it contains a non-constructor symbol (cf. the discussion of constructors in [34, 36, 24]). <p> Dershowitz [16] and Jouannaud and Kounalis [36] designed inductive completion procedures based on ground reducibility of terms. An inconsistency is signified by a rewrite rule u ! v the left-hand side of which is not ground reducible. In a similar procedure <ref> [41] </ref>, "test sets" are used to check for consistency.
Reference: [42] <author> Donald E. Knuth and P. B. Bendix. </author> <title> Simple word problems in universal algebras. </title> <editor> In J. Leech, editor, </editor> <booktitle> Computational Problems in Abstract Algebra, </booktitle> <pages> pages 263-297. </pages> <publisher> Pergamon Press, Oxford, </publisher> <editor> U. K., </editor> <booktitle> 1970. Reprinted in Automation of Reasoning 2, </booktitle> <publisher> Springer, Berlin, </publisher> <pages> pp. </pages> <month> 342-376 </month> <year> (1983). </year>
Reference-contexts: The first rewriting-based decision procedure (for loops) was given by Evans [22], in 1951. See [19] for a survey of the field. In 1970, Knuth and Bendix <ref> [42] </ref> proposed a procedure that attempts to construct a convergent rewrite system from a finite axiomatization of an equational theory. <p> By CP (E) we denote the set of all critical pairs between equations in E, formed from overlapping left-hand sides. The set of critical pairs CP (E) is finite whenever E is finite. Lemma 2.1 (Critical Pair Lemma <ref> [42] </ref>). Let E be a set of equations fe; e 0 g. <p> In this case, s $ p c t, where c is a critical pair of e and e 0 . For details, see <ref> [42, 32] </ref>. 3. Equational Inference Knuth and Bendix [42] presented a procedure that attempts to construct a convergent rewrite system for a given equational theory. <p> In this case, s $ p c t, where c is a critical pair of e and e 0 . For details, see [42, 32]. 3. Equational Inference Knuth and Bendix <ref> [42] </ref> presented a procedure that attempts to construct a convergent rewrite system for a given equational theory. This completion procedure has been reformulated as an equational inference system in which new equations and new rewrite rules are derived, while old ones are simplified and/or deleted. <p> Finally, we will endeavor to give sufficient, practical conditions for fairness. 3.1. Standard Completion Let be a reduction ordering on terms. The inference system C, which was introduced in [2, 3] and which we call standard completion because it is inspired by Knuth and Bendix <ref> [42] </ref>, contains six rules operating on mixed sets E [ R of rules R and equations E, where R is contained in . Normal-form proofs are rewrite proofs that use rules in R only. <p> Unorientable equations, in which one side contains a variable not occurring in the other side, can sometimes be dealt with by introducing new function symbols, a technique suggested in <ref> [42] </ref>.
Reference: [43] <author> W. Kuchlin. </author> <title> A confluence criterion based on the generalised Newman lemma. </title> <editor> In B. Caviness, editor, </editor> <booktitle> Proc. Eurocal '85, Lect. Notes in Comput. Sci., </booktitle> <pages> pages 390-399, </pages> <address> Berlin, 1985. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Techniques for keeping track of previously computed critical pairs have been described by Kuchlin <ref> [43] </ref>, for instance. We conclude this section by using compositeness to establish a new Church-Rosser result. Suppose u ! v and u 0 ! v 0 can both be superposed on the same rule s ! t, at positions p and p 0 , respectively.
Reference: [44] <author> W. Kuchlin. </author> <title> Inductive completion by ground proof transformation. </title> <editor> In H. A it-Kaci and M. Ni-vat, editors, </editor> <title> Resolution of Equations in Algebraic Structures (Vol. </title> <booktitle> 2: Rewriting Techniques), </booktitle> <pages> pages 211-244. </pages> <address> Boston, </address> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: A set fp 1 ; : : : ; p n g of non-variable positions in a term t is said to be inductive if every ground instance t is reducible by R at some position p i , whenever is irreducible (cf. <ref> [44, 13] </ref>). For example, in x + (y + z) the subterm y + z is rooted at an inductive position (the rightmost occurrence of + or fi is reducible by R, as we have pointed out above). <p> On the other hand, it is also possible that inductive completion deduces equations that are useful for simplification but can not be obtained by the more restrictive deduction rule of P. Consider the following example <ref> [44] </ref>: Let R be the ground convergent rewrite system app (nil; x) ! x app (cons (x; y); z) ! cons (x; app (y; z)) rev (nil) ! nil rev (cons (x; y)) ! app (rev (y); cons (x; nil)) and rev (rev (x)) x be a conjectured inductive theorem of
Reference: [45] <author> Wolfgang Kuchlin. </author> <title> Equational completion by proof transformation. </title> <type> PhD thesis, </type> <institution> Department of Mathematics, Swiss Federal Institute of Technology, </institution> <address> Zurich, Switzerland, </address> <month> June </month> <year> 1986. </year>
Reference-contexts: But once we include composition and collapsing, this ordering must be refined: the second component was designed to handle the two steps that replace a collapsed step, while the third component makes using a composed rule smaller than using the original. Kuchlin <ref> [45] </ref> has also discussed completion from the point of view of simplification. 3.4. Completeness of Completion We can show the following: Theorem 3.9. Suppose there exists some finite convergent rewrite system that is contained in a reduction order and which has the same equational theory as E 0 .
Reference: [46] <author> D. Lankford. </author> <title> Canonical inference. </title> <type> Technical Report ATP-32, </type> <institution> Dept. of Mathematics and Computer Science, University of Texas, Austin, </institution> <year> 1975. </year> <month> 38 </month>
Reference-contexts: This notion 3 of correctness is crucial for the use of completion as a (relatively efficient) semi-decision procedure for validity in equational theories, as proposed by Lankford <ref> [46] </ref> and Huet [33]. <p> The Critical Pair Lemma can be adapted to ordered critical pairs without much difficulty: Lemma 6.1 (Ordered Critical Pair Lemma <ref> [46] </ref>). Let be a complete reduction ordering with re spect to E. <p> This indicates that E 1 is ground convergent. The theorem applies to reduction orderings that are total on equivalent ground terms. All general-purpose term orderings used in practice can be extended to complete orderings. For instance, any ordering based on polynomial interpretations <ref> [46, 47] </ref> can be extended to a complete ordering by combining it with a well-founded ordering to distinguish ground terms having the same interpretations. <p> Ordered completion is in essence a restricted version of paramodulation, enriched by contraction rules (including simplification by rewriting). Computation of equational consequences from unorientable equations already appears in the work of Brown [11] and Lankford <ref> [46] </ref> on integrating resolution and simplification by rewriting.
Reference: [47] <author> D. Lankford. </author> <title> On proving term rewriting systems are Noetherian. </title> <type> Technical Report MTP-3, </type> <institution> Mathematics Department, Louisiana Tech. Univ., Ruston, </institution> <year> 1979. </year>
Reference-contexts: This indicates that E 1 is ground convergent. The theorem applies to reduction orderings that are total on equivalent ground terms. All general-purpose term orderings used in practice can be extended to complete orderings. For instance, any ordering based on polynomial interpretations <ref> [46, 47] </ref> can be extended to a complete ordering by combining it with a well-founded ordering to distinguish ground terms having the same interpretations.
Reference: [48] <author> Yves Metivier. </author> <title> About the rewriting systems produced by the Knuth-Bendix completion algorithm. </title> <journal> Information Processing Letters, </journal> <volume> 16(1) </volume> <pages> 31-34, </pages> <month> January </month> <year> 1983. </year>
Reference-contexts: It has been shown <ref> [14, 48] </ref> that there is exactly one (finite or infinite) reduced convergent rewrite system (up to renaming of variables) contained in any given reduction ordering. The contraction rules we have suffice for reducing rules in this way.
Reference: [49] <author> D. R. Musser. </author> <title> On proving inductive properties of abstract data types. </title> <booktitle> In Proc. 7th ACM Symp. on Principles of Programming Languages, </booktitle> <pages> pages 154-162, </pages> <address> Las Vegas, Nevada, </address> <year> 1980. </year>
Reference-contexts: Finally, in Section 7, we present, within the same proof-transformation framework, a method for proving inductive theorems, due originally to Musser <ref> [49] </ref>, based on the concept of "proof by consistency." With this method, it is easy to prove automatically from the definition of multiplication given at the outset that 0 fi x 0. We end with a brief conclusion. 2. <p> Critical pairs between conjectures need not be considered. This also distinguishes the inference system P from inductive completion procedures, which are essentially standard completion procedures augmented by some inconsistency test and compute all critical pairs in CP (R [ C). Musser <ref> [49] </ref> was the first to describe an inductive completion procedure.
Reference: [50] <institution> J. Mzali. Methodes de filtrage equationnel et de preuve automatique de theoremes. </institution> <type> PhD thesis, </type> <institution> Universite de Nancy, </institution> <year> 1986. </year>
Reference-contexts: For example, in their inference system the equation (x y) (y z) x z can not be simplified by x (y z) ! (x y) z. Implementations of ordered completion procedures have been reported in <ref> [50, 51] </ref>. Experiments with a procedure that combines ordered completion with associative-commutative completion are described in [1]. 7.
Reference: [51] <author> A. Ohsuga and K. Sakai. Metis: </author> <title> A term rewriting system generator. </title> <type> Technical report, </type> <institution> ICOT Research Center, </institution> <address> Tokyo, Japan, </address> <year> 1986. </year>
Reference-contexts: For example, in their inference system the equation (x y) (y z) x z can not be simplified by x (y z) ! (x y) z. Implementations of ordered completion procedures have been reported in <ref> [50, 51] </ref>. Experiments with a procedure that combines ordered completion with associative-commutative completion are described in [1]. 7.
Reference: [52] <author> G. E. Peterson. </author> <title> A technique for establishing completeness results in theorem proving with equality. </title> <journal> SIAM J. Comput., </journal> <volume> 12 </volume> <pages> 82-100, </pages> <year> 1983. </year>
Reference-contexts: Ordered completion is in essence a restricted version of paramodulation, enriched by contraction rules (including simplification by rewriting). Computation of equational consequences from unorientable equations already appears in the work of Brown [11] and Lankford [46] on integrating resolution and simplification by rewriting. Peterson <ref> [52] </ref> proved the refutation completeness of an inference system combining resolution, paramodulation, and simplification with respect to order-ings on ground terms that are order-isomorphic to the natural numbers. (This class of orderings excludes many important orderings, though, such as most path orderings.) Fribourg [23] proved 27 the completeness of a restricted
Reference: [53] <author> Gerald E. Peterson and Mark E. Stickel. </author> <title> Complete sets of reductions for some equational theories. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 233-264, </pages> <month> April </month> <year> 1981. </year>
Reference-contexts: Such overlaps can be effectively dealt with if a finite, complete A-unification algorithm is given. An associative commutative completion procedure based on this approach has been described by Peterson and Stickel <ref> [53] </ref>; for a formulation within the inference rule cum proof normalization approach, see [7] 6. Ordered Completion Standard completion fails whenever an equation s t between persistently irreducible, yet incomparable terms s and t is generated.
Reference: [54] <author> D. A. Plaisted. </author> <title> Semantic confluence tests and completion methods. </title> <journal> Information and Computation, </journal> <volume> 65 </volume> <pages> 182-215, </pages> <year> 1985. </year>
Reference-contexts: Ground reducibility is decidable for finite rewrite systems <ref> [54, 39] </ref>, but, according to [38] is in exponential time even for left-linear rewrite systems. Algorithms for deciding ground-reducibility with respect to left-linear rewrite systems have been described in [41, 36].
Reference: [55] <author> U. Reddy. </author> <title> Rewriting techniques for program synthesis. </title> <booktitle> In Proc. 3rd Int Conf. on Rewriting Techniques and Applications, Lect. Notes in Comput. Sci., </booktitle> <pages> pages 388-403, </pages> <address> Berlin, 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: For another interesting application, to unification in Boolean rings and Abelian groups, see [10]. Our approach was found to be of advantage in describing rewrite techniques for program synthesis <ref> [55] </ref>. Many of the rewrite techniques, which we have discussed in the context of equational theories, can also be applied in the more general setting of first-order clausal theorem proving, as described in [4, 5].
Reference: [56] <author> U. Reddy. </author> <title> Term rewriting induction. </title> <booktitle> In Proc. 10th Int. Conf. on Automated Deduction, Lect. Notes in Comput. Sci., </booktitle> <pages> pages 162-177, </pages> <address> Berlin, 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The same techniques can also be applied to non-convergent sets of equations. Gramlich [29] describes a more refined proof by consistency system along lines similar to ordered completion. The relation of completion-based approaches to well-founded induction has been studied in <ref> [56] </ref>. 8. Conclusion We have represented completion and related rewrite methods as equational inference systems and have described techniques, based on proof reduction orderings, for reasoning about such proof systems.
Reference: [57] <author> G. Robinson and L. Wos. </author> <title> Paramodulation and theorem-proving in first order theories with equality. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 4, </booktitle> <pages> pages 135-150. </pages> <publisher> Edin-burgh University Press, Edinburgh, </publisher> <address> Scotland, </address> <year> 1969. </year>
Reference-contexts: We pursue a different approach for dealing with unorientable equations, called ordered completion, which is a refutationally complete theorem prover for equational theories. The method requires neither backtracking, nor introduction of new function symbols. As an equational theorem prover, it has the advantage over paramodulation <ref> [57] </ref> that equations can always be kept in fully simplified form and fewer equational consequences need to be considered, since the ordering supplied to the procedure gives some measure of direction to the prover. A convergent rewrite system defines unique normal forms for all terms.
Reference: [58] <author> F. Winkler and B. </author> <title> Buchberger. A criterion for eliminating unnecesssary reductions in the Knuth-Bendix algorithm. </title> <booktitle> In Proc. Coll. on Algebra, Combinatorics and Logic in Computer Science, </booktitle> <address> Gyor, Hungary, </address> <year> 1983. </year>
Reference-contexts: a critical pair may be redundant at some stage during the completion process, but non-redundant at a later stage. (Note, in particular, that the critical pair 0 p 0 + 0 obtained by superposing 0 ! 0 on 1 Zhang and Kapur [59] attribute the criterion to Winkler and Buchberger <ref> [58] </ref>, but the latters' actual, more subtle criterion is a specific instance of the composite criterion described below and is correct. 18 p x + x ! 0 is in P CP (E 0 [ R 0 ) and therefore is superfluous according to the criterion.) All of the correct criteria
Reference: [59] <author> H. Zhang and D. Kapur. </author> <title> Consider only general superpositions in completion procedures. </title> <booktitle> In Proc. 3rd Int Conf. on Rewriting Techniques and Applications, Lect. Notes in Comput. Sci., </booktitle> <pages> pages 513-527, </pages> <address> Berlin, 1989. </address> <publisher> Springer-Verlag. </publisher> <pages> 39 </pages>
Reference-contexts: Clearly, if a non-failing derivation is fair with respect to a correct criterion CP C, then its limit R 1 is convergent. Every correct criterion is sound [3] but not vice versa. For instance, Zhang and Kapur <ref> [59] </ref> suggest a criterion P CP , where P CP (R) consists of all critical pairs of a rule u ! v on another rule s ! t at a position pq, such that p; q 6= fl and the overlapped term s is reducible at position p. <p> The problem with the criterion is that a critical pair may be redundant at some stage during the completion process, but non-redundant at a later stage. (Note, in particular, that the critical pair 0 p 0 + 0 obtained by superposing 0 ! 0 on 1 Zhang and Kapur <ref> [59] </ref> attribute the criterion to Winkler and Buchberger [58], but the latters' actual, more subtle criterion is a specific instance of the composite criterion described below and is correct. 18 p x + x ! 0 is in P CP (E 0 [ R 0 ) and therefore is superfluous according
References-found: 59

