URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-95-12-5.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-95-12-5.html
Root-URL: http://www.cs.man.ac.uk
Title: Algebra over Process Structure, Part I.  
Author: Kohei Honda 
Note: Notes on P-Algebra (4):  
Address: Manchester  
Affiliation: Computer Science University of  
Pubnum: ISSN 1361 6161  
Abstract: Department of Computer Science University of Manchester Technical Report Series UMCS-95-12-5 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abramsky, S., </author> <title> Interaction Categories, Theory and Formal Methods 1993, </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <month> 29 </month>
Reference-contexts: of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as <ref> [1, 5, 12] </ref>. Specifically what [7] showed is that a coherent theory of maps and relations, with which we manipulate processes collectively, can be constructed based on such notions, just like a set theory is a convenient means to manipulate a collection of elements.
Reference: [2] <author> Aczel, P., </author> <title> Replacement Systems and the axiomatisation of Situation Theory, Sit--uation Theory and Applications, </title> <publisher> CSLI Lecture Notes No.22, Stanford University, </publisher> <year> 1990. </year>
Reference-contexts: Two processes (corresponding to two elements) may be related in diverse ways, considering how interface points of processes are connected to each other. This was implicit in the study of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations <ref> [2, 3, 13] </ref>, embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as [1, 5, 12]. <p> As proved in [7], this structure has an equivalent presentation which directly underlies many mathematical and computational structures studied so far. In this form, the structure relates to a series of study of Aczel <ref> [2, 3] </ref> and Nerode [13] where algebra of open terms involving general substitution is considered.
Reference: [3] <author> Aczel, P., </author> <title> Term Declaration Logic and Generalised Composita, </title> <booktitle> IEEE Symposium on Logic in Computer Science, </booktitle> <year> 1991. </year>
Reference-contexts: Two processes (corresponding to two elements) may be related in diverse ways, considering how interface points of processes are connected to each other. This was implicit in the study of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations <ref> [2, 3, 13] </ref>, embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as [1, 5, 12]. <p> As proved in [7], this structure has an equivalent presentation which directly underlies many mathematical and computational structures studied so far. In this form, the structure relates to a series of study of Aczel <ref> [2, 3] </ref> and Nerode [13] where algebra of open terms involving general substitution is considered. <p> In this form, the structure relates to a series of study of Aczel [2, 3] and Nerode [13] where algebra of open terms involving general substitution is considered. We shall discuss their theory (especially that of <ref> [3] </ref>) in comparison with our algebraic theory over process structures in Part II. (iii) A process structure on Perm generalises the above to the case when there can be infinite connection points in each process.
Reference: [4] <author> Freyd, P. and Scedrov, </author> <title> Categories, </title> <publisher> Allegories, North Holland, </publisher> <year> 1990. </year>
Reference-contexts: In this section and the next, we develop an abstract framework which allows such development. We can list relational algebra in <ref> [4] </ref> as a predecessor of the theory in this section, though the orientation and certain essential technicalities are quite different. <p> One may also find it interesting to see the difference in ways of deriving maps from arrows in a relational universe between here and in <ref> [4] </ref>. As may be expected, two maps compose to yield another map. 2.5 Proposition. If f : p ! q and g : q ! r are maps, then g ffi f is again a map. <p> At the same time, it is notable that it is not the case every "standard" construction gives us precisely what we want. One symptomatic fact is that the "relational universe" which can be constructed from the topos PS C in the standard way <ref> [4, 10] </ref> does not give PS C rel in general (even though all p-relations can be presented as monic pairs).
Reference: [5] <author> Girard, J.-Y., </author> <title> Linear Logic, </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 50, pp.1-102, </volume> <year> 1987. </year>
Reference-contexts: of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as <ref> [1, 5, 12] </ref>. Specifically what [7] showed is that a coherent theory of maps and relations, with which we manipulate processes collectively, can be constructed based on such notions, just like a set theory is a convenient means to manipulate a collection of elements.
Reference: [6] <author> Hoare, C. A. R., </author> <title> Communicating Sequential Processes, </title> <publisher> Prentice Hall, </publisher> <year> 1985. </year>
Reference-contexts: In the theory of processes, this simple scheme is no longer valid. Two processes (corresponding to two elements) may be related in diverse ways, considering how interface points of processes are connected to each other. This was implicit in the study of process algebra <ref> [11, 6] </ref>, embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as [1, 5, 12].
Reference: [7] <author> Honda, K. </author> <title> Notes on P-Algebra (1): Process Structure. </title> <publisher> Proc.TPPP'94, LNCS 907, Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: The second aim concerns the framework in which these notions and results are presented. We develop theory of algebra in an abstract framework unlike in the preceding Notes <ref> [7, 8, 9] </ref>. Thus, rather than relying on concrete construction of permutation groups and partial injections over finite sets, we base our development on a pair of categories conforming to certain conditions, by which all essential results and constructions of the preceding notes are guaranteed. <p> This was implicit in the study of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure <ref> [7] </ref>, as well as by such works as [1, 5, 12]. Specifically what [7] showed is that a coherent theory of maps and relations, with which we manipulate processes collectively, can be constructed based on such notions, just like a set theory is a convenient means to manipulate a collection of <p> embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure <ref> [7] </ref>, as well as by such works as [1, 5, 12]. Specifically what [7] showed is that a coherent theory of maps and relations, with which we manipulate processes collectively, can be constructed based on such notions, just like a set theory is a convenient means to manipulate a collection of elements. <p> As proved in <ref> [7] </ref>, this structure has an equivalent presentation which directly underlies many mathematical and computational structures studied so far. In this form, the structure relates to a series of study of Aczel [2, 3] and Nerode [13] where algebra of open terms involving general substitution is considered. <p> The class of all process structures with base C and p-relations between them form a category where the identity on P is given by fhp; ae; pi j ae 2 S (p); p 2 Pg, written ID P . The category is denoted PS C rel . As in <ref> [7] </ref>, we may equip each homset of such a category with relational operations of Definition 3.4. Some examples: 3.6 Examples. 18 (i) PS Elm rel is essentially the familiar category of relations. <p> We have shown in <ref> [7] </ref> that this category is equivalent to the category of compatible relations over so-called rooted process structures, which often underlies the foregoing study of semantics of processes, or more generally that of computation. (iii) If we take Top as a base category, a correspondence relates two processes by their "parts" injectively. <p> Indeed we know, by Definition 3.7 and comments in (i) of Example 3.6, that a p-map between two sets is precisely a function in the usual sense. (ii) PS FinPerm is what we have known as PS in the preceding study of process structures, cf. <ref> [7] </ref>. (iii) We can similarly consider PS Top as an example. Note here a map maps a "part of" a topological process to the "whole of" another topological process, preserving the original symmetry (and perhaps adding some more).
Reference: [8] <author> Honda, K., </author> <title> Notes on P-Algebra (2): Group Presentation of Process Structure. </title> <month> March, </month> <year> 1995. </year> <note> A typescript, 15pp. To appear as a CS technical report, </note> <institution> Manchester University. </institution>
Reference-contexts: The second aim concerns the framework in which these notions and results are presented. We develop theory of algebra in an abstract framework unlike in the preceding Notes <ref> [7, 8, 9] </ref>. Thus, rather than relying on concrete construction of permutation groups and partial injections over finite sets, we base our development on a pair of categories conforming to certain conditions, by which all essential results and constructions of the preceding notes are guaranteed. <p> Thus we write P=&lt; for a selected quotient of P by &lt;, without any loss of generality. 1 1 Note we depend on Axiom of Choice in this way. We can avoid this by using "group presentation" as developed for a special case of FinPerm in <ref> [8] </ref>. We prefer the present approach since the ideas can be presented more intuitively in this way. Mathematically they just give the equivalent theory. 26 3.26 Remark. Unlike in the case of a set, several equivalence p-relations would induce a single quotient in the present setting. <p> This is because, when p ffi q and ffi ffi 0 hold, adding p ffi 0 q does not change the situation since, in that case, neither h&lt;jpi nor h&lt;jqi does not change (this has already been discussed in <ref> [8] </ref> in the setting of FinPerm).
Reference: [9] <author> Honda, K., </author> <title> Notes on P-Algebra (3): Product of Process Structures. </title> <month> March </month> <year> 1995. </year> <note> A typescript, 17pp. To appear as a CS technical report, </note> <institution> Manchester University. </institution>
Reference-contexts: The second aim concerns the framework in which these notions and results are presented. We develop theory of algebra in an abstract framework unlike in the preceding Notes <ref> [7, 8, 9] </ref>. Thus, rather than relying on concrete construction of permutation groups and partial injections over finite sets, we base our development on a pair of categories conforming to certain conditions, by which all essential results and constructions of the preceding notes are guaranteed. <p> Another notable aspect is that the proofs in the present chapter is no more complex, and sometimes more lucid, than our preceding "concrete" developments. For example, the proof of Proposition 3.14 is strikingly much shorter than that in <ref> [9] </ref>. Moreover the abstract theory opens ways to think about concrete structures of processes beyond those which have been treated in the foregoing study of concurrency.
Reference: [10] <author> McLarty, C., </author> <title> Elementary Categories, Elementary Toposes, </title> <publisher> Oxford University Press, </publisher> <year> 1992. </year>
Reference-contexts: At the same time, it is notable that it is not the case every "standard" construction gives us precisely what we want. One symptomatic fact is that the "relational universe" which can be constructed from the topos PS C in the standard way <ref> [4, 10] </ref> does not give PS C rel in general (even though all p-relations can be presented as monic pairs).
Reference: [11] <author> Milner, R., </author> <title> A Calculus of Communicating Systems, </title> <publisher> LNCS 76, Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: In the theory of processes, this simple scheme is no longer valid. Two processes (corresponding to two elements) may be related in diverse ways, considering how interface points of processes are connected to each other. This was implicit in the study of process algebra <ref> [11, 6] </ref>, embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as [1, 5, 12].
Reference: [12] <author> Milner, R., </author> <title> Action Structures. </title> <institution> Research Report LFCS-92-249, Computer Science Department, Edinburgh University, </institution> <year> 1992. </year>
Reference-contexts: of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations [2, 3, 13], embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as <ref> [1, 5, 12] </ref>. Specifically what [7] showed is that a coherent theory of maps and relations, with which we manipulate processes collectively, can be constructed based on such notions, just like a set theory is a convenient means to manipulate a collection of elements.
Reference: [13] <author> Nerode, A., Composita, </author> <title> Equations, and Freely Generated Algebras, </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> pp.139-151, </volume> <year> 1959. </year> <month> 30 </month>
Reference-contexts: Two processes (corresponding to two elements) may be related in diverse ways, considering how interface points of processes are connected to each other. This was implicit in the study of process algebra [11, 6], embodied in the notion of free names, or study of composita and its generalisations <ref> [2, 3, 13] </ref>, embodied in the notion of "variables" (of, say, open terms), and is made explicit by the study of process structure [7], as well as by such works as [1, 5, 12]. <p> As proved in [7], this structure has an equivalent presentation which directly underlies many mathematical and computational structures studied so far. In this form, the structure relates to a series of study of Aczel [2, 3] and Nerode <ref> [13] </ref> where algebra of open terms involving general substitution is considered.
References-found: 13

