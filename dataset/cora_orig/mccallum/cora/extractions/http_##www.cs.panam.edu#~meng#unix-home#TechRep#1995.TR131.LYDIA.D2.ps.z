URL: http://www.cs.panam.edu/~meng/unix-home/TechRep/1995.TR131.LYDIA.D2.ps.z
Refering-URL: http://www.cs.panam.edu/~meng/unix-home/TechRep/
Root-URL: http://www.cs.panam.edu
Title: Title: Balancing Networks: State-of-the-Art Authors: M. Mavronicolas FORTH  FORTH Type: Deliverable  Status: Deliverable Confidentiality: Public  
Author: Editors: M. Karavassili, C. Nikolaou LYDIA Id: 
Date: December 1994  
Note: LYDIA/WP.1/T1.1/D2 Date:  
Abstract-found: 0
Intro-found: 1
Reference: [AA92] <author> E. Aharonson and H. Attiya. </author> <title> "Counting Networks with Arbitrary Fan-Out". </title> <booktitle> In Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 104-113, </pages> <year> 1992. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means <ref> [AA92] </ref>, [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks <ref> [AA92] </ref>, [AHS91], [BHM94], [FLL93], [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> It is trivial to establish that depth (B (p2 k ) p ) 2 fi (k 2 ) and size (B (w) ) 2 fi (2 k k 2 ). This amounts to a significant improvement over a corresponding construction by Aharonson and Attiya <ref> [AA92] </ref> (not based on the AKS network [AKS83]) that achieves depth and size of fi (k 3 ) and fi (2 k k 3 ), respectively. 3.3 A Periodic kp-Smoothing Network with Width p k We describe a general construction of a kp-smoothing network P (p k ) , for any <p> Set p 0 = max p2P p and P = p 0 p 1 : : : p m1 . 5.1 Constructible Widths The first impossibility results for balancing networks have been presented by Aharonson and Attiya. Theorem 5.1.1 (Aharonson and Attiya <ref> [AA92] </ref>) Assume there exists a prime factor f of w such that, for each p 2 P, f does not divide p. Then, for any integer K 1, there is no K-smoothing network of output width w over P. <p> Theorem 5.1.1 has been shown using a Lemma which is a special case of the general Theorem 4.2.2. Since for any integer K 1, a counting network is also a K-smoothing network, Theorem 5.1.1 immediately implies: Corollary 5.1.2 (Aharonson and Attiya <ref> [AA92] </ref>) Assume there exists a prime factor f of w such that, for each p 2 P, f does not divide p. Then, there is no counting network of output width w over P.
Reference: [AC89] <author> A. Agarwal and M. Cherian. </author> <title> "Adaptive Backoff Synchronization Techniques". </title> <booktitle> In Proceedings of the 16th Annual ACM Symposium on Computer Architecture, </booktitle> <pages> pages 396-406, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: Arguing that dynamic load balancing can have a dramatic effect on the performance of parallel programs, Herlihy et al. investigate the performance of basic techniques for dynamic load balancing on large-scale multiprocessors; more specifically, they consider concurrent data structures based on: (1) spin locks with exponential backoff <ref> [AC89] </ref>, (2) "queue" locks [MCS90], (3) software combining trees [GVW89], and (4) the bitonic counting network of Aspnes et al. (Section 3.1). Herlihy et al. run a series of simple bentchmarks on a simulated 64-processor Alewife machine, a distributed-memory multiprocessor currently under development at MIT. <p> Work is still needed to derive lower and upper bounds, to develop other primitives and define new performance measures. Work is also needed in experimental directions, comparing balancing networks to other techniques for load balancing, for example, those based on exponential backoff <ref> [AC89] </ref>, and for understanding their behavior in architectures other than the single-bus architecture provided by Encore. (The results in [HLS92] discussed in Section 6 that use the ASIM simulator of the MIT Alewife machine assert that there is a substantial gain in performance due to parallelism on such distributed memory machines.)
Reference: [AHS91] <author> J. Aspnes, M. Herlihy, and N. Shavit. </author> <title> "Counting Networks and MultiProcessor Coordination". </title> <booktitle> In Proceedings of the 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 348-358, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: A counter can be easily implemented using a single shared Fetch&Increment variable. However, empirically, the time to access a shared variable grows at least linearly with the contention, the extent to which concurrent processors simultaneously access the variable. fl In a seminal paper, Aspnes, Herlihy and Shavit <ref> [AHS91] </ref> suggest a completely different approach to such counting problems. Their idea is to use a collection of shared variables, called balancers, each having low expected contention, in a way that a processor needs to access only a few variables in order to obtain a value from the counter. <p> Counting and K-smoothing networks are the most well-studied classes of balancing networks. Counting networks have been proven suitable for implementing shared counters and producer/consumer buffers for multiprocessor architectures <ref> [AHS91] </ref>. [HLS92], while K-smoothing networks are appropriate as hardware solutions to load balancing problems [AHS91], [HLS92], [PU89]. <p> Counting and K-smoothing networks are the most well-studied classes of balancing networks. Counting networks have been proven suitable for implementing shared counters and producer/consumer buffers for multiprocessor architectures <ref> [AHS91] </ref>. [HLS92], while K-smoothing networks are appropriate as hardware solutions to load balancing problems [AHS91], [HLS92], [PU89]. A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> [HLS92], while K-smoothing networks are appropriate as hardware solutions to load balancing problems <ref> [AHS91] </ref>, [HLS92], [PU89]. A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> An important objective of recent research on balancing networks has been to minimize the depth of counting and K-smoothing networks, as a function of the output width w. While a reduction to sorting reveals that depth (lg w) is necessary <ref> [AHS91] </ref>, [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], [BMb], [FLL93], [HKM93], [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. <p> While a reduction to sorting reveals that depth (lg w) is necessary <ref> [AHS91] </ref>, [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], [BMb], [FLL93], [HKM93], [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. Not so many constructions come close to the fi (lg w) lower bound on depth. <p> However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks [AA92], <ref> [AHS91] </ref>, [BHM94], [FLL93], [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> In all known previous constructions of counting networks [AA92], <ref> [AHS91] </ref>, [BHM94], [FLL93], [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks <ref> [AHS91] </ref>, [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> Page 3 4 Chapter 2 Definitions and Preliminaries In this Section, we provide a brief introduction to balancing networks; a more complete discussion of the properties of balancing networks may be found in <ref> [AHS91] </ref>, [BM94a]. 2.1 Balancers and Balancing Networks The construction of balancing networks is similar to that of comparison networks from wires and comparators (see, e.g., [Knu73]). We begin by describing balancers. A balancer is a computing element with a number of input and output wires. <p> Definition 2.2.1 (Aspnes, Herlihy and Shavit <ref> [AHS91] </ref>) A counting network of input width t and output width w is a balancing network of these widths for which, in any quiescent state, 0 y j y k 1, for any j; k, 0 j &lt; k w 1. Page 6 2.2. <p> Page 6 2.2. CLASSES OF BALANCING NETWORKS That is, the output of a counting network has the step property. Definition 2.2.2 (Aharonson and Attiya <ref> [AHS91] </ref>) A K-smoothing network of input width t and output width w is a balancing network of these widths for which, in any quiescent state, jy j y k j K, for any j; k, 0 j; k w 1. <p> Notice that for any K 1, a counting network is also a K-smoothing network. An alternative way of relaxing Definition 2.2.1 is to require the step property for the output to hold only if the input has some kind of a step property. Definition 2.2.3 (Aspnes, Herlihy and Shavit <ref> [AHS91] </ref>) A merging network of input width t and output width w is a balancing network of these widths for which, in any quiescent state, if 0 x i x k 1 for any i; k, 0 i &lt; k t=2 1, and 0 x i x k 1 for any <p> : : : ; w2g, o [w] = f1; 3; : : : ; w1g, eo [w] = f0; 2; : : : ; w=22; w=2+1; w=2+ 3.1 The Bitonic Counting Network with Width 2 k We describe an inductive construction of the bitonic counting network B (w) , following <ref> [AHS91] </ref>; it uses the bitonic merger network BM (w) , whose construction is described next, as a basic module. 9 CHAPTER 3. <p> The bitonic network has been one of the two counting networks discovered first <ref> [AHS91] </ref>. A straightforward proof by induction shows that the bitonic merger network preserves the step property on its inputs shows: Theorem 3.1.1 (Aspnes, Herlihy and Shavit [AHS91]) The network BM (w) is a merging network. By construction of B (w) , it immediately follows: Corollary 3.1.2 (Aspnes, Herlihy and Shavit [AHS91]) <p> The bitonic network has been one of the two counting networks discovered first <ref> [AHS91] </ref>. A straightforward proof by induction shows that the bitonic merger network preserves the step property on its inputs shows: Theorem 3.1.1 (Aspnes, Herlihy and Shavit [AHS91]) The network BM (w) is a merging network. By construction of B (w) , it immediately follows: Corollary 3.1.2 (Aspnes, Herlihy and Shavit [AHS91]) The network B (w) is a counting network. An alternative proof of Theorem 3.1.2 has been carried out in [BM94b]. <p> <ref> [AHS91] </ref>. A straightforward proof by induction shows that the bitonic merger network preserves the step property on its inputs shows: Theorem 3.1.1 (Aspnes, Herlihy and Shavit [AHS91]) The network BM (w) is a merging network. By construction of B (w) , it immediately follows: Corollary 3.1.2 (Aspnes, Herlihy and Shavit [AHS91]) The network B (w) is a counting network. An alternative proof of Theorem 3.1.2 has been carried out in [BM94b]. <p> The new proof provides an interesting complement to the one of Aspnes et al. <ref> [AHS91] </ref> in terms of modularity and simplicity. It is trivial to establish that depth (B (w) ) 2 fi (lg 2 w) and size (B (w) ) 2 fi (w lg 2 w). Page 10 3.2. <p> This network uses p-balancers only and achieves depth fi (k 2 ). The periodic counting network introduced by Aspnes, Herlihy and Shavit <ref> [AHS91] </ref> is the special case where p = 2. p-Chains and p-Cochains We present definitions for p-chains and p-cochains, patterned after those in [DPRS89] modified to accomodate p-balancers. Consider a sequence X = x 0 ; x 1 ; : : : ; x n1 . <p> r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r Theorem 3.3.3 (Aspnes, Herlihy and Shavit <ref> [AHS91] </ref>) The network P (2 k ) is a counting network. It is an important open question to precisely determine those values of p for which the network P (p k ) is a counting network. <p> For t = w, S w;w provides a counting network alternative to the bitonic and periodic counting networks presented in <ref> [AHS91] </ref>. This Page 18 3.4. <p> For suitably "small" t, the depth of the network S t;w is fi (lg w): logarithmic in the output width w. This is the first construction achieving logarithmic depth, and represents a vast improvement over previous constructions (e.g., <ref> [AHS91] </ref> [KP92]). Page 19 20 Chapter 4 Combinatorial Properties In this Section, we provide a brief outline of a cambinatorial theory of balancing networks developed by Busch and Mavronicolas [BM94b] and its applications. 4.1 Notation We start with some notation. <p> Then, for all i; j 2 [w], dist B (i; j) log p 0 w. Corollary 5.2.2 implies that, for counting or K-smoothing networks, every every path from an input wire to an output wire must have length at least log p 0 w. In <ref> [AHS91] </ref> (Corollary 2.5), it is shown that the depth of any counting network of width w over f2g is at least log 2 w; i.e., there exists some path from an input wire to an output wire of length at least log 2 w. <p> Given the practical motivations that led to the invention of balancing networks, it is quite natural that the work introducing balancing networks <ref> [AHS91] </ref> already provides experimental evidence that balancing networks significantly outperform conventional synchronization techniques under a variety of circumstances. More specifically, Aspnes et al. [AHS91] analyze the throughput of counting networks for computations in which tokens are eventually spread through the network; they compare the performance of several implementations of shared counters, <p> Given the practical motivations that led to the invention of balancing networks, it is quite natural that the work introducing balancing networks <ref> [AHS91] </ref> already provides experimental evidence that balancing networks significantly outperform conventional synchronization techniques under a variety of circumstances. More specifically, Aspnes et al. [AHS91] analyze the throughput of counting networks for computations in which tokens are eventually spread through the network; they compare the performance of several implementations of shared counters, producers/consumers buffers and barrier synchronization on a shared memory multiprocessor.
Reference: [AKS83] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> "Sorting in "c log n steps. </title> <journal> Combina-torica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference-contexts: However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network <ref> [AKS83] </ref>, and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks [AA92], [AHS91], [BHM94], [FLL93], [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> In all known previous constructions of counting networks [AA92], [AHS91], [BHM94], [FLL93], [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. Since the only known to date sorting network with depth fi (lg w) <ref> [AKS83] </ref> is highly impractical due to large hidden coefficients, insisting that t and w be equal reduces the problem of constructing a "practical" counting network with depth fi (lg w) to the problem of constructing a "practical" sorting network with depth fi (lg w), remaining open for about twenty five years <p> This amounts to a significant improvement over a corresponding construction by Aharonson and Attiya [AA92] (not based on the AKS network <ref> [AKS83] </ref>) that achieves depth and size of fi (k 3 ) and fi (2 k k 3 ), respectively. 3.3 A Periodic kp-Smoothing Network with Width p k We describe a general construction of a kp-smoothing network P (p k ) , for any integers p 2 and k 1, following
Reference: [And90] <author> T. E. Anderson. </author> <title> "The Performance of Spin Lock Alternatives for Shared-Memory Multiprocessors". </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 1(1) </volume> <pages> 6-16, </pages> <month> jan </month> <year> 1990. </year>
Reference-contexts: Each request for a value corresponds to a traversal of the network by a token, starting from some input wire, following the pointer fl The cost of contention varies according to the architecture of the system and the specific arbitration protocols used (cf. <ref> [And90] </ref>). 1 CHAPTER 1. INTRODUCTION obtained by accessing the first balancer to the next one, and so on. Let x i denote the number of tokens that have entered the network on the ith input wire, 0 i t 1, where t is the input width of the network.
Reference: [AVY94] <author> W. Aiello, R. Venkatesan, and M. Yung. </author> <title> "Coins, weights and contention in balancing networks". </title> <booktitle> In 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1994. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], <ref> [AVY94] </ref>, [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], <ref> [AVY94] </ref> and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], <ref> [AVY94] </ref> and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. These formal studies of the performance of balancing networks study the contention as a function of the number n of concurrent processors and the network input and output widths t and w, respectively.
Reference: [BHM94] <author> C. Busch, N. Hardavellas, and M. Mavronicolas. </author> <title> "Contention in Counting Networks". </title> <booktitle> In 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], <ref> [BHM94] </ref>, [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> While a reduction to sorting reveals that depth (lg w) is necessary [AHS91], [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], <ref> [BHM94] </ref>, [BMb], [FLL93], [HKM93], [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. Not so many constructions come close to the fi (lg w) lower bound on depth. <p> However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks [AA92], [AHS91], <ref> [BHM94] </ref>, [FLL93], [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], <ref> [BHM94] </ref>, [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> been conducted to account for the actual performance of balancing networks [AHS91], <ref> [BHM94] </ref>, [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. These formal studies of the performance of balancing networks study the contention as a function of the number n of concurrent processors and the network input and output widths t and w, respectively. <p> Page 10 3.2. A BITONIC COUNTING NETWORK WITH WIDTH P 2 K 3.2 A Bitonic Counting Network with Width p2 k We describe an inductive construction of the bitonic counting network B p : X (p2 k ) ! Y (p2 k ) , following Busch et al. <ref> [BHM94] </ref>, for any integers p 2 and k 0. The construction uses the bitonic merger network BM (p2 k ) p , whose construction is described next, as a basic module. <p> Theorem 3.2.1 (Busch, Hardavellas and Mavronicolas <ref> [BHM94] </ref>) The network BM (p2 k ) p is a counting network. By construction of the network B (p2 k ) p , it immediately follows: Corollary 3.2.2 (Busch, Hardavellas and Mavronicolas [BHM94]) The network B (p2 k ) p is a counting network. <p> Theorem 3.2.1 (Busch, Hardavellas and Mavronicolas <ref> [BHM94] </ref>) The network BM (p2 k ) p is a counting network. By construction of the network B (p2 k ) p , it immediately follows: Corollary 3.2.2 (Busch, Hardavellas and Mavronicolas [BHM94]) The network B (p2 k ) p is a counting network. It is trivial to establish that depth (B (p2 k ) p ) 2 fi (k 2 ) and size (B (w) ) 2 fi (2 k k 2 ). <p> For other instances where the recurrence relation method has been used, we quote: Theorem 6.0.7 (Busch, Hardavellas and Mavronicolas <ref> [BHM94] </ref>) For any k 1, cont (n; B (p2 k ) p ) 2 k1 ( p k (k + 1) + k) + k) 2 Theorem 6.0.8 (Busch and Mavronicolas [BMa]) cont (n; S t;w ) 2 fi (n lg t (1=t + lg t=w)) Kapidakis and Mavronicolas [KM] generalize
Reference: [BMa] <author> C. Busch and M. Mavronicolas. </author> <title> "A Logarithmic-Depth Counting Network". </title> <note> Submitted for publication. </note>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], <ref> [BMa] </ref>, [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> Busch and Mavronicolas use this observation to provide the first simple, deterministic Page 2 construction of a counting network with depth fi (lg w) <ref> [BMa] </ref>. Depth is not the only parameter affecting the actual performance of balancing networks. <p> conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], <ref> [BMa] </ref>, [BMb], [DHW93], [HKM93]. These formal studies of the performance of balancing networks study the contention as a function of the number n of concurrent processors and the network input and output widths t and w, respectively. <p> The construction follows that presented by Busch and Mavronicolas <ref> [BMa] </ref>; it uses the bounded difference ffi-merging network M w (ffi), whose construction is described next, as a basic module. Page 15 CHAPTER 3. <p> A simple induction shows: Page 16 3.4. A LOGARITHMIC-DEPTH COUNTING NETWORK r r r r x 7 x 5 x 3 x 1 y 7 y 5 y 3 y 1 Theorem 3.4.1 (Busch and Mavronicolas <ref> [BMa] </ref>) The network M (w) (ffi) is a bounded difference ffi-merging network. The Logarithmic-Depth Network S t;w We continue with the construction, for any integers t and w which are powers of 2, 1 t w and 2 w, of the network S t;w . <p> Notice that since t 4, the induction is grounded on t = 2. As an example, Figure 3.4 depicts the counting network S 4;16 : X (4) ! Y (16) , using the same conventions as in Figure 3.3. An inductive proof shows: Theorem 3.4.2 (Busch and Mavronicolas <ref> [BMa] </ref>) The network S t;w is a counting network. <p> For other instances where the recurrence relation method has been used, we quote: Theorem 6.0.7 (Busch, Hardavellas and Mavronicolas [BHM94]) For any k 1, cont (n; B (p2 k ) p ) 2 k1 ( p k (k + 1) + k) + k) 2 Theorem 6.0.8 (Busch and Mavronicolas <ref> [BMa] </ref>) cont (n; S t;w ) 2 fi (n lg t (1=t + lg t=w)) Kapidakis and Mavronicolas [KM] generalize balancing networks to load balancing networks that accomodate jobs of varying completion times; they formalize criteria for the performance of load balancing networks and presents and check two constructions against these
Reference: [BMb] <author> C. Busch and M. Mavronicolas. </author> <title> "Odd-Even Counting Networks". </title> <note> In preparation. </note>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], <ref> [BMb] </ref>, [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> While a reduction to sorting reveals that depth (lg w) is necessary [AHS91], [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], <ref> [BMb] </ref>, [FLL93], [HKM93], [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. Not so many constructions come close to the fi (lg w) lower bound on depth. <p> to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], <ref> [BMb] </ref>, [DHW93], [HKM93]. These formal studies of the performance of balancing networks study the contention as a function of the number n of concurrent processors and the network input and output widths t and w, respectively.
Reference: [BM94a] <author> C. Busch and M. Mavronicolas. </author> <title> "A Combinatorial Treatment of Balancing Networks". </title> <booktitle> In 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: An important objective of recent research on balancing networks has been to minimize the depth of counting and K-smoothing networks, as a function of the output width w. While a reduction to sorting reveals that depth (lg w) is necessary [AHS91], <ref> [BM94a] </ref>, there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], [BMb], [FLL93], [HKM93], [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. <p> Busch and Mavronicolas <ref> [BM94a] </ref> develop an elegant, mathematical theory of the combinatorial structure of balancing networks. <p> In Section 2, we present definitions and preliminary facts about balancing networks. In Section 3, we survey constructions of counting networks known so far and their properties. We continue, in Section 4, with an overview of the combinatorial theory of balancing networks presented by Busch and Mavronicolas <ref> [BM94a] </ref>. Section 5 includes negative results on balancing networks (incon-structibility results and lower bounds). Section 6 surveys experimental and theoretical research on performance of balancing networks. We conclude, in Section 7, with a discussion of the results on balancing networks obtained so far and some directions for further research. <p> Page 3 4 Chapter 2 Definitions and Preliminaries In this Section, we provide a brief introduction to balancing networks; a more complete discussion of the properties of balancing networks may be found in [AHS91], <ref> [BM94a] </ref>. 2.1 Balancers and Balancing Networks The construction of balancing networks is similar to that of comparison networks from wires and comparators (see, e.g., [Knu73]). We begin by describing balancers. A balancer is a computing element with a number of input and output wires. <p> An alternative proof of Theorem 3.1.2 has been carried out in [BM94b]. This proof is a concrete instance of a paradigmatic methodology for proving correctness of balancing networks developed in [BM94b]; this methodology is a direct consequence of the combinatorial theory of balancing networks proposed in <ref> [BM94a] </ref> (see Section 4). The new proof provides an interesting complement to the one of Aspnes et al. [AHS91] in terms of modularity and simplicity. <p> B @ 0 1=2 0 1=2 0 0 0 1=2 0 1=2 0 0 1=2 0 0 0 0 1=2 C C C C A and: By definitions of balancers, the connection matrix C B and the order vector O B , it immediately follows: Proposition 4.2.1 (Busch and Mavronicolas <ref> [BM94a] </ref>) For a layer B : X (w) ! Y (w) , If depth (B) = d &gt; 1, then B can be uniquely partitioned into layers B 1 ; B 2 ; : : : ; B d from left to right in the obvious way. <p> The next Theorem shows that for any balancing network, the outputs take a particular algebraic form as a function of the inputs, depending on the type of balancers used, the network's depth, and the topology of the network. Page 22 4.2. A MATRIX REPRESENTATION Theorem 4.2.2 (Busch and Mavronicolas <ref> [BM94a] </ref>) Let B : X (w) ! Y (w) be a balancing network of depth d with associated connection matrices and order vectors C B 1 ; C B 2 ; : : : ; C B d and O B 1 ; O B 2 ; : : : ; <p> Then, there is no counting network of output width w over P. For counting and K-smoothing networks of depth d over P, Busch and Mavronico-las <ref> [BM94a] </ref> show that the only constructible widths are the divisors of P d . Theorem 5.1.3 (Busch and Mavronicolas [BM94a]) Assume B : X (w) ! Y (w) is a counting or K-smoothing network of depth d over P. <p> Then, there is no counting network of output width w over P. For counting and K-smoothing networks of depth d over P, Busch and Mavronico-las <ref> [BM94a] </ref> show that the only constructible widths are the divisors of P d . Theorem 5.1.3 (Busch and Mavronicolas [BM94a]) Assume B : X (w) ! Y (w) is a counting or K-smoothing network of depth d over P. Then, w divides P d . 25 We remark that the proof of Theorem 5.1.3 [BM94a] relies on a property of the steady transfer matrix that is necessary for smoothing networks, <p> Theorem 5.1.3 (Busch and Mavronicolas <ref> [BM94a] </ref>) Assume B : X (w) ! Y (w) is a counting or K-smoothing network of depth d over P. Then, w divides P d . 25 We remark that the proof of Theorem 5.1.3 [BM94a] relies on a property of the steady transfer matrix that is necessary for smoothing networks, but not on any property of the transient transfer function. This suggests that width limitations are, in general, consequences of the steady response of a balancing network. <p> Theorem 5.2.1 (Busch and Mavronicolas <ref> [BM94a] </ref>) For a balancing network B : X (w) ! Y (w) over P, assume, for any indices i; j 2 [w], that C B [ji] = 1=w. Then, dist B (i; j) log p 0 w. <p> Then, dist B (i; j) log p 0 w. By Theorem 4.2.2 and Definitions 2.2.1 and 2.2.2, for any counting or K-smoothing network, C B [ji] = 1=w for all i; j 2 [w]. Hence, Theorem 5.2.1 implies: Corollary 5.2.2 (Busch and Mavronicolas <ref> [BM94a] </ref>) Assume B : X (w) ! Y (w) is a counting or K-smoothing network over P. Then, for all i; j 2 [w], dist B (i; j) log p 0 w. <p> We continue to mention that Corollary 5.2.1 implies a lower bound on size for counting and K-smoothing networks over P. Theorem 5.2.3 (Busch and Mavronicolas <ref> [BM94a] </ref>) Assume B : X (w) ! Y (w) is a counting or K-smoothing network over P. Then, size (B) w log p 0 w : Chapter 6 Performance In this Section, we survey results on evaluating the performance of balancing networks by both theoretical and experimental means.
Reference: [BM94b] <author> C. Busch and M. Mavronicolas. </author> <title> "Proving Correctness of Balancing Networks". </title> <booktitle> In Proceedings of the DIMACS Workshop on Parallel Processing of Discrete Optimization Problems, </booktitle> <institution> DIMACS (Center for Discrete Mathematics and Theoretical Computer Science), Rutgers University, </institution> <month> April </month> <year> 1994. </year> <month> 33 </month>
Reference-contexts: This theory proves useful for formally showing constructibility and performance (as measured by depth and size) limitations, developing precise algorithms for mathematically verifying that a balancing network meets its specifications, and developing a paradigmatic methodology for showing correctness of general constructions of balancing networks <ref> [BM94b] </ref>. The rest of this paper is organized as follows. In Section 2, we present definitions and preliminary facts about balancing networks. In Section 3, we survey constructions of counting networks known so far and their properties. <p> By construction of B (w) , it immediately follows: Corollary 3.1.2 (Aspnes, Herlihy and Shavit [AHS91]) The network B (w) is a counting network. An alternative proof of Theorem 3.1.2 has been carried out in <ref> [BM94b] </ref>. This proof is a concrete instance of a paradigmatic methodology for proving correctness of balancing networks developed in [BM94b]; this methodology is a direct consequence of the combinatorial theory of balancing networks proposed in [BM94a] (see Section 4). <p> An alternative proof of Theorem 3.1.2 has been carried out in <ref> [BM94b] </ref>. This proof is a concrete instance of a paradigmatic methodology for proving correctness of balancing networks developed in [BM94b]; this methodology is a direct consequence of the combinatorial theory of balancing networks proposed in [BM94a] (see Section 4). The new proof provides an interesting complement to the one of Aspnes et al. [AHS91] in terms of modularity and simplicity. <p> (p2 k1 ) down ! Y (p2 k1 ) down ; * a bitonic merger network BM (p2 k ) p : Z (p2 k ) ! Y (p2 k ) The following Theorem has been shown following the paradigmatic methodology for prov ing correctness of balancing networks developed in <ref> [BM94b] </ref> (see also Section 4). Theorem 3.2.1 (Busch, Hardavellas and Mavronicolas [BHM94]) The network BM (p2 k ) p is a counting network. <p> This is the first construction achieving logarithmic depth, and represents a vast improvement over previous constructions (e.g., [AHS91] [KP92]). Page 19 20 Chapter 4 Combinatorial Properties In this Section, we provide a brief outline of a cambinatorial theory of balancing networks developed by Busch and Mavronicolas <ref> [BM94b] </ref> and its applications. 4.1 Notation We start with some notation.
Reference: [DHW93] <author> C. Dwork, M. Herlihy, and O. Waarts. </author> <title> "Contention in Shared Memory Algo--rithms". </title> <booktitle> In Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 174-183, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], <ref> [DHW93] </ref>, [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed <ref> [DHW93] </ref>, [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed <ref> [DHW93] </ref>, [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. These formal studies of the performance of balancing networks study the contention as a function of the number n of concurrent processors and the network input and output widths t and w, respectively. <p> This is so because two requests arriving at a node must arrive within a small time window for combining to occur. Additionally, locks that are held for a significant amount of time at the combining tree nodes may block progress up the tree. Dwork, Herlihy and Waarts <ref> [DHW93] </ref> pursue the first formal study of performance for balancing networks. Dwork et al. introduce for the first time a formal complexity model 27 CHAPTER 6. <p> Experiments discussed earlier have provided evidence that certain counting networks outperform conventional single-variable counters at high levels of concurrency. The results of Dwork et al. <ref> [DHW93] </ref> formally explain this phenomenon. On an MIMD shared memory multiprocessor machine, a balancing network is implemented as a shared data structure, where balancers are records and wires are pointers from one record to another. <p> Each time a token passes through a balancer, all tokens pending at this balancer incur a stall step, modeling their delay due to contention with each other. The number of stall steps has been introduced in <ref> [DHW93] </ref> as a measure of contention. The contention incurred by the traversal of m tokens through the network B at concurrency n, denoted cont (m; n; B), is the maximum number of stalls, over all possible executions, induced by an adversary scheduler. <p> The amortized contention of the network B at concurrency n, denoted cont (n; B), is the limit of cont (m; n; B) divided by m, as m goes to infinity. Dwork et al. <ref> [DHW93] </ref> use ad-hoc techniques, relying on execution patterns of the bitonic fl Recall that a read-modify-write operation atomically reads a value v from a memory location, writes back f (v), where f is a predefined function, and returns v back to the caller. <p> Nearly all modern processor architectures support some form of read-modify-write for interprocess synchronization. Common read-modify write instructions include test-and-set, memory-to-register swap, fetch-and-add, compare-and swap, and load-linked/store-conditional instructions. Page 28 counting network, to show: Theorem 6.0.4 (Dwork, Herlihy and Waarts <ref> [DHW93] </ref>) cont (n; B (w) ) 2 fi (n lg 2 w=w) Dwork et al. [DHW93] also claim: Theorem 6.0.5 (Dwork, Herlihy and Waarts [DHW93]) cont (n; P (2 k ) ) 2 O (nk 3 =2 k ) Hardavellas et al [HKM93] introduce the so called recurrence relation method for <p> Common read-modify write instructions include test-and-set, memory-to-register swap, fetch-and-add, compare-and swap, and load-linked/store-conditional instructions. Page 28 counting network, to show: Theorem 6.0.4 (Dwork, Herlihy and Waarts <ref> [DHW93] </ref>) cont (n; B (w) ) 2 fi (n lg 2 w=w) Dwork et al. [DHW93] also claim: Theorem 6.0.5 (Dwork, Herlihy and Waarts [DHW93]) cont (n; P (2 k ) ) 2 O (nk 3 =2 k ) Hardavellas et al [HKM93] introduce the so called recurrence relation method for analyzing the contention of constructions of balancing networks. <p> Page 28 counting network, to show: Theorem 6.0.4 (Dwork, Herlihy and Waarts <ref> [DHW93] </ref>) cont (n; B (w) ) 2 fi (n lg 2 w=w) Dwork et al. [DHW93] also claim: Theorem 6.0.5 (Dwork, Herlihy and Waarts [DHW93]) cont (n; P (2 k ) ) 2 O (nk 3 =2 k ) Hardavellas et al [HKM93] introduce the so called recurrence relation method for analyzing the contention of constructions of balancing networks. <p> Hardavellas et al. apply their method on their periodic, kp-smoothing network and show: smFor the sfor p = 2, this analysis yields a bound improving one in <ref> [DHW93] </ref>. Theorem 6.0.6 (Hardavellas, Karakos and Mavronicolas [HKM93]) cont (n; P (p k ) ) 2 fi (nk 2 =2 k ) Notice that for p = 2, Theorem 6.0.6 improves Theorem 6.0.5.
Reference: [DPRS89] <author> M. Dowd, Y. Perl, L. Rudolph, and M. Saks. </author> <title> "The Periodic Balanced Sorting Network". </title> <journal> Journal of the ACM, </journal> <volume> 36(4) </volume> <pages> 738-757, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: This network uses p-balancers only and achieves depth fi (k 2 ). The periodic counting network introduced by Aspnes, Herlihy and Shavit [AHS91] is the special case where p = 2. p-Chains and p-Cochains We present definitions for p-chains and p-cochains, patterned after those in <ref> [DPRS89] </ref> modified to accomodate p-balancers. Consider a sequence X = x 0 ; x 1 ; : : : ; x n1 .
Reference: [FLL93] <author> E. W. Felten, A. LaMarca, and R. Ladner. </author> <title> "Building Counting Networks from Larger Balancers". </title> <type> Technical Report 93-04-09, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], <ref> [FLL93] </ref>, [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> While a reduction to sorting reveals that depth (lg w) is necessary [AHS91], [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], [BMb], <ref> [FLL93] </ref>, [HKM93], [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. Not so many constructions come close to the fi (lg w) lower bound on depth. <p> However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks [AA92], [AHS91], [BHM94], <ref> [FLL93] </ref>, [HKM93], [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], <ref> [FLL93] </ref>, [HKM93], [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93].
Reference: [GVW89] <author> J. R. Goodman, M. K. Vernon, and P. J. Woest. </author> <title> "Efficient Synchronization Primitives for Large-Scale Cache-Coherent Multiprocessors". </title> <booktitle> In Proceedings of the 3rd Annual ACM-SIAM Symposium on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pages 64-75, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: have a dramatic effect on the performance of parallel programs, Herlihy et al. investigate the performance of basic techniques for dynamic load balancing on large-scale multiprocessors; more specifically, they consider concurrent data structures based on: (1) spin locks with exponential backoff [AC89], (2) "queue" locks [MCS90], (3) software combining trees <ref> [GVW89] </ref>, and (4) the bitonic counting network of Aspnes et al. (Section 3.1). Herlihy et al. run a series of simple bentchmarks on a simulated 64-processor Alewife machine, a distributed-memory multiprocessor currently under development at MIT. This machine supports the shared-memory programming model.
Reference: [HKM93] <author> N. Hardavellas, D. Karakos, and M. Mavronicolas. </author> <title> "Notes on Sorting and Counting Networks". </title> <editor> In A. Schiper, editor, </editor> <booktitle> Proceedings of the 7th International Workshop on Distributed Algorithms (WDAG-93), Lecture Notes in Computer Science, </booktitle> <volume> volume 725, </volume> <pages> pages 234-248, </pages> <publisher> Springer-Verlag, </publisher> <address> Lausanne, Switzerland, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], <ref> [HKM93] </ref>, [HLS92], [HSW91], [KP92], [SZ94]. <p> While a reduction to sorting reveals that depth (lg w) is necessary [AHS91], [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], [BMb], [FLL93], <ref> [HKM93] </ref>, [HSW91]; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. Not so many constructions come close to the fi (lg w) lower bound on depth. <p> However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks [AA92], [AHS91], [BHM94], [FLL93], <ref> [HKM93] </ref>, [KP92], the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], <ref> [HKM93] </ref>, [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], <ref> [HKM93] </ref>, [HLS92], [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. These formal studies of the performance of balancing networks study the contention as a function of the number n of concurrent processors and the network input and output widths t and w, respectively. <p> and size of fi (k 3 ) and fi (2 k k 3 ), respectively. 3.3 A Periodic kp-Smoothing Network with Width p k We describe a general construction of a kp-smoothing network P (p k ) , for any integers p 2 and k 1, following Hardavellas et al. <ref> [HKM93] </ref>. This network uses p-balancers only and achieves depth fi (k 2 ). <p> The first lemma reveals the close relationship between p-chains and p-cochains. Lemma 3.3.1 (Hardavellas, Karakos and Mavronicolas <ref> [HKM93] </ref>) For each integer i &gt; 1, a subsequence of X is a level i p-chain of X if and only if it is a level i 1 p-chain of one of the special p-cochains of X. <p> Figure 3.2 shows the balancing network P (27) . Through a series of lemmas providing interesting combinatorial properties of p-chains and p-cochains, it is shown: Theorem 3.3.2 (Hardavellas, Karakos and Mavronicolas <ref> [HKM93] </ref>) The network P (p k ) is a pk-smoothing network. Hardavellas et al. provide counterexample executions to show that for several values of p 3, the network P (p k ) is not a counting network. <p> to show: Theorem 6.0.4 (Dwork, Herlihy and Waarts [DHW93]) cont (n; B (w) ) 2 fi (n lg 2 w=w) Dwork et al. [DHW93] also claim: Theorem 6.0.5 (Dwork, Herlihy and Waarts [DHW93]) cont (n; P (2 k ) ) 2 O (nk 3 =2 k ) Hardavellas et al <ref> [HKM93] </ref> introduce the so called recurrence relation method for analyzing the contention of constructions of balancing networks. Roughly speaking, this method amounts to exploiting recursiveness in the construction of balancing networks in order to derive and solve a recurrence relation for contention. <p> Hardavellas et al. apply their method on their periodic, kp-smoothing network and show: smFor the sfor p = 2, this analysis yields a bound improving one in [DHW93]. Theorem 6.0.6 (Hardavellas, Karakos and Mavronicolas <ref> [HKM93] </ref>) cont (n; P (p k ) ) 2 fi (nk 2 =2 k ) Notice that for p = 2, Theorem 6.0.6 improves Theorem 6.0.5.
Reference: [HLS92] <author> M. Herlihy, B.-C. Lim, and N. Shavit. </author> <title> "Low Contention Load Balancing on Large-Scale Multiprocessors". </title> <booktitle> In Proceedings of the 4th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 219-227, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Counting and K-smoothing networks are the most well-studied classes of balancing networks. Counting networks have been proven suitable for implementing shared counters and producer/consumer buffers for multiprocessor architectures [AHS91]. <ref> [HLS92] </ref>, while K-smoothing networks are appropriate as hardware solutions to load balancing problems [AHS91], [HLS92], [PU89]. <p> Counting and K-smoothing networks are the most well-studied classes of balancing networks. Counting networks have been proven suitable for implementing shared counters and producer/consumer buffers for multiprocessor architectures [AHS91]. <ref> [HLS92] </ref>, while K-smoothing networks are appropriate as hardware solutions to load balancing problems [AHS91], [HLS92], [PU89]. A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> hardware solutions to load balancing problems [AHS91], <ref> [HLS92] </ref>, [PU89]. A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94]. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], <ref> [HLS92] </ref>, [HSW91], [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> Aspnes et al. report that under a sufficiently high levels of concurrency, implementations based on the bitonic and periodic networks outperform conventional implementations based on spin locks, sometimes dramatically. Herlihy, Lim and Shavit <ref> [HLS92] </ref> take the next step in studying the actual performance of balancing networks. <p> Experimental results are also presented in [KM], where load balancing networks are compared against a modification of the "queue" lock algorithm, studied in <ref> [HLS92] </ref>. <p> Work is also needed in experimental directions, comparing balancing networks to other techniques for load balancing, for example, those based on exponential backoff [AC89], and for understanding their behavior in architectures other than the single-bus architecture provided by Encore. (The results in <ref> [HLS92] </ref> discussed in Section 6 that use the ASIM simulator of the MIT Alewife machine assert that there is a substantial gain in performance due to parallelism on such distributed memory machines.) 31 Acknowledgements I am indebted to Costas Busch for sharing with me his invaluable insights into balancing networks during
Reference: [HSW91] <author> M. Herlihy, N. Shavit, and O. Waarts. </author> <title> "Low Contention Linearizable Counting Networks". </title> <booktitle> In Proceedings of the 32nd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 526-535, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], <ref> [HSW91] </ref>, [KP92], [SZ94]. <p> While a reduction to sorting reveals that depth (lg w) is necessary [AHS91], [BM94a], there have been plenty of constructions that achieve depth fi (lg 2 w) [AHS91], [BHM94], [BMb], [FLL93], [HKM93], <ref> [HSW91] </ref>; corresponding experimental evidence suggests that these constructions, although not optimal in depth, perform reasonably well in practice. Not so many constructions come close to the fi (lg w) lower bound on depth. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], <ref> [HSW91] </ref>, [KM], [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93].
Reference: [KM] <author> S. Kapidakis and M. Mavronicolas. </author> <title> "Load Balancing Networks". </title> <note> Submitted for publication. </note>
Reference-contexts: Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], <ref> [KM] </ref>, [SZ94]; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> Mavronicolas [BHM94]) For any k 1, cont (n; B (p2 k ) p ) 2 k1 ( p k (k + 1) + k) + k) 2 Theorem 6.0.8 (Busch and Mavronicolas [BMa]) cont (n; S t;w ) 2 fi (n lg t (1=t + lg t=w)) Kapidakis and Mavronicolas <ref> [KM] </ref> generalize balancing networks to load balancing networks that accomodate jobs of varying completion times; they formalize criteria for the performance of load balancing networks and presents and check two constructions against these criteria. Experimental results are also presented in [KM], where load balancing networks are compared against a modification of <p> (n lg t (1=t + lg t=w)) Kapidakis and Mavronicolas <ref> [KM] </ref> generalize balancing networks to load balancing networks that accomodate jobs of varying completion times; they formalize criteria for the performance of load balancing networks and presents and check two constructions against these criteria. Experimental results are also presented in [KM], where load balancing networks are compared against a modification of the "queue" lock algorithm, studied in [HLS92].
Reference: [Knu73] <author> D. Knuth. </author> <title> "The Art of Computer Programming", chapter Sorting and Searching. </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: One can "connect" a collection of balancers to form a balancing network much in the same way a sorting network is obtained by connecting a collection of comparators (see, e.g., <ref> [Knu73] </ref>). This is done by connecting output wires from some balancers to input wires of others. The remaining unconnected input and output wires are the input and output wires, respectively, of the network. <p> In this Section, we provide a brief introduction to balancing networks; a more complete discussion of the properties of balancing networks may be found in [AHS91], [BM94a]. 2.1 Balancers and Balancing Networks The construction of balancing networks is similar to that of comparison networks from wires and comparators (see, e.g., <ref> [Knu73] </ref>). We begin by describing balancers. A balancer is a computing element with a number of input and output wires. Tokens may arrive on an input wire of the balancer and at arbitrary times. <p> That is, the inputs are partitioned into two "blocks", each of size t=2, and the output has the step property whenever each of the two input subsequences, one for each of the "blocks," does. Note the resemblance of Definition 2.2.3 to that of the "classical" comparison-merging networks <ref> [Knu73] </ref>. Page 7 8 Chapter 3 Constructions In this Section, we briefly survey some of the main constructions of counting and K-smoothing networks known to date. Fix throughout w to be any power of two. We first establish some notation.
Reference: [KP92] <author> M. Klugerman and C. Plaxton. </author> <title> "Small-Depth Counting Networks". </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 417-428, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], <ref> [KP92] </ref>, [SZ94]. <p> Not so many constructions come close to the fi (lg w) lower bound on depth. The first explicit, deterministic construction of a counting network with input and output width w is one presented by Klugerman and Plaxton <ref> [KP92] </ref>, achieving depth fi (c lg fl w lg w) for some constant c. However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. <p> However, this construction is truly impractical and out of the question to use for practical purposes since it employs the impractical AKS network [AKS83], and this makes the hidden coefficients forbiddenly large. In all known previous constructions of counting networks [AA92], [AHS91], [BHM94], [FLL93], [HKM93], <ref> [KP92] </ref>, the output width w is equal to the input width t, and the constructed counting networks are also sorting networks [AHS91]. <p> For suitably "small" t, the depth of the network S t;w is fi (lg w): logarithmic in the output width w. This is the first construction achieving logarithmic depth, and represents a vast improvement over previous constructions (e.g., [AHS91] <ref> [KP92] </ref>). Page 19 20 Chapter 4 Combinatorial Properties In this Section, we provide a brief outline of a cambinatorial theory of balancing networks developed by Busch and Mavronicolas [BM94b] and its applications. 4.1 Notation We start with some notation.
Reference: [MCS90] <author> J. M. Mellor-Crummey and M. L. Scott. </author> <title> "Algorithms for Scalable Synchronization on Shared-Memory Multiprocessors". </title> <type> Technical Report 342, </type> <institution> Department of Computer Science, University of Rochester, </institution> <month> April </month> <year> 1990. </year>
Reference-contexts: that dynamic load balancing can have a dramatic effect on the performance of parallel programs, Herlihy et al. investigate the performance of basic techniques for dynamic load balancing on large-scale multiprocessors; more specifically, they consider concurrent data structures based on: (1) spin locks with exponential backoff [AC89], (2) "queue" locks <ref> [MCS90] </ref>, (3) software combining trees [GVW89], and (4) the bitonic counting network of Aspnes et al. (Section 3.1). Herlihy et al. run a series of simple bentchmarks on a simulated 64-processor Alewife machine, a distributed-memory multiprocessor currently under development at MIT. This machine supports the shared-memory programming model.
Reference: [MT93] <author> S. Moran and G. Taubenfeld. </author> <title> "A Lower Bound on Wait-Free Counting". </title> <booktitle> In Proceedings of the 12th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 251-259, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Notice also that the necessary condition in Theorem 5.1.3 does not involve K. Theorem 5.1.3 strictly strengthens Theorem 5.1.1 and Corollary 5.1.2. Also, Theorem 5.1.3 represents a generalization to an arbitrary set of balancer types of a Theorem shown by Moran and Taubenfeld <ref> [MT93] </ref> for the special case where P = f2g. 5.2 Lower Bounds on Network Size We start by showing a general lower bound on the distance between any given pair of input and output wires in a balancing network under a condition on the corresponding entry of the connection matrix. <p> Clearly, Corollary 5.2.2 strictly strengthens and generalizes this to an arbitrary set of balancer types. Moreover, Corollary 5.2.2 represents a corresponding improvement to an observation in <ref> [MT93] </ref> (Section 5) that the depth of a K-smoothing network over f2g is at least log 2 w. We continue to mention that Corollary 5.2.1 implies a lower bound on size for counting and K-smoothing networks over P.
Reference: [PU89] <author> D. Peleg and E. Upfal. </author> <title> "The Token Distribution Problem". </title> <journal> SIAM Journal on Computing, </journal> <volume> 18 </volume> <pages> 229-241, </pages> <year> 1989. </year> <month> 34 </month>
Reference-contexts: Counting and K-smoothing networks are the most well-studied classes of balancing networks. Counting networks have been proven suitable for implementing shared counters and producer/consumer buffers for multiprocessor architectures [AHS91]. [HLS92], while K-smoothing networks are appropriate as hardware solutions to load balancing problems [AHS91], [HLS92], <ref> [PU89] </ref>. A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], [SZ94].
Reference: [SZ94] <author> N. Shavit and A. Zemach. </author> <title> "Diffracting Trees". </title> <booktitle> In Proceedings of the 6th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: A large amount of research on balancing networks has attempted to provide constructions of counting and K-smoothing networks and analyze the actual performance of such networks by both theoretical and experimental means [AA92], [AVY94], [AHS91], [BHM94], [BMa], [BMb], [DHW93], [FLL93], [HKM93], [HLS92], [HSW91], [KP92], <ref> [SZ94] </ref>. <p> Recent research has studied the effect of contention, the extent to which concurrent processors concurrently access a balancing network by both experimental and theoretical means. Carefully designed experiments have been conducted to account for the actual performance of balancing networks [AHS91], [BHM94], [FLL93], [HKM93], [HLS92], [HSW91], [KM], <ref> [SZ94] </ref>; in a more formal setting, formal complexity models for contention in shared memory algorithms have been proposed [DHW93], [AVY94] and used to formally explain the reported experimental results (see, e.g., [AVY94], [BHM94], [BMa], [BMb], [DHW93], [HKM93]. <p> Experimental results are also presented in [KM], where load balancing networks are compared against a modification of the "queue" lock algorithm, studied in [HLS92]. Page 29 Finally, Shavit and Zemach <ref> [SZ94] </ref> introduce diffracting trees as a new counting structure, consisting of a binary tree shown to be a counting network and a collection of "prisms," one in front of each balancer, serving to combine tokens in a randomized way in order to reduce memory contention. <p> Since the construction is trivial, the only contribution of Shavit and Zemach lies in the idea of using "prisms". Nevertheless, this idea has not been exploited in full and no theoretical analysis has been provided for the expected behavior of prisms, even though Shavit and Zemach <ref> [SZ94] </ref> present several experimental results on the actual performance of diffracting trees. 30 Chapter 7 Concluding Remarks Balancing networks deserve further study. We believe that they represent just a start toward a theory of low contention data structures suitable for solving load balancing problems.
Reference: [Unk68] <author> Unknown. </author> <title> "Sorting Networks and Their Applications". </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference, </booktitle> <pages> pages 307-314, </pages> <year> 1968. </year> <month> 35 </month>
Reference-contexts: is highly impractical due to large hidden coefficients, insisting that t and w be equal reduces the problem of constructing a "practical" counting network with depth fi (lg w) to the problem of constructing a "practical" sorting network with depth fi (lg w), remaining open for about twenty five years <ref> [Unk68] </ref>. However, insisting that t and w be equal is not really a consequence of the specification of a counting network with w output wires, namely that it "counts" modulo w.
References-found: 26

