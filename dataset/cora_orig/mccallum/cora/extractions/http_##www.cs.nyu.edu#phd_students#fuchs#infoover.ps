URL: http://www.cs.nyu.edu/phd_students/fuchs/infoover.ps
Refering-URL: http://www.cs.nyu.edu/phd_students/fuchs/index.html
Root-URL: http://www.cs.nyu.edu
Email: matt@wdi.disney.com  
Title: Building an Information System from the Web  
Author: Matthew Fuchs Walt Disney Imagineering 
Address: Flower St., POB 25020 Glendale, CA 91221-5020  
Affiliation: 1401  
Abstract: To allow users to truly use the Web to construct personal information systems, users must be able to write their own applications to retrieve, massage, combine, and store information from Web servers. Information providers cannot know all the ways their information can be used; that is determined by the collectivity of users. If users cannot write their own applications, then Web access will remain a tedious and manual process. After describing two small applications we show that the Web architecture, based on HTML, a display-oriented language for describing pictures, does not support client applications very well; the structure and markup of a page does not describe its information in a way easily understood by software. Nevertheless, because the information is mostly textual and was designed to convey that information to a human, it is often possible to retrieve needed information from a page. We describe our implementation, written in Scheme, which queries pages using set predicates, extracts information, and uses that to query further Web pages. Extensions of this approach can combine this information with the clients other local resources. Finally, the same tools are applicable to more sophisticated markup systems, such as SGML or its Web-oriented offspring XML. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arijit Sengupta and Dirk Van Gucht. </author> <title> A polynomial-time query language for hierarchically structured databases. </title> <type> Technical report, </type> <institution> Indiana University, Computer Science Dept., </institution> <year> 1997. </year>
Reference-contexts: The query language we have used is based on predicates that work from a node of the document towards other node (s) of interest. Web query languages based on SQL are also starting to appear. The language in [2] is based directly on HTML, while <ref> [11, 1] </ref> and [15] (only announced days before this paper was submitted) both target SGML. SQL was intended for a very different kind of data than trees, so it is an open question whether it is an appropriate syntax.
Reference: [2] <author> Gustavo Arocena et al. </author> <title> Applications of a web query language. </title> <booktitle> In Sixth International World Wide Web Conference. World Wide Web Consortium, </booktitle> <year> 1997. </year>
Reference-contexts: The query language we have used is based on predicates that work from a node of the document towards other node (s) of interest. Web query languages based on SQL are also starting to appear. The language in <ref> [2] </ref> is based directly on HTML, while [11, 1] and [15] (only announced days before this paper was submitted) both target SGML. SQL was intended for a very different kind of data than trees, so it is an open question whether it is an appropriate syntax.
Reference: [3] <author> Tim Bray and Michael Sperberg-McQueen. </author> <title> Xml language. </title> <type> Technical report, </type> <note> World Wide Web Consortium, 1997. http://www.w3.org/pub/WWW/TR/WD-xml-lang-970331.html. </note>
Reference: [4] <author> James Clark. </author> <title> Document Style Semantics and Specification Language,ISO/IEC 10179:1996. </title> <type> Technical report, ISO, </type> <year> 1996. </year>
Reference: [5] <editor> John Davies et al. </editor> <title> Jasper: Communicating information agents for www. In Fourth International World Wide Web Conference. World Wide Web Consortium, </title> <year> 1996. </year>
Reference-contexts: However, mobile agents require significant support from the server. It is inherently limited to servers willing to accept and run agent. There may be ubiquitous support for mobile agents in the future. Our approach requires no awareness from the server; all the action occurs at the client. Recommender systems <ref> [13, 5] </ref>, such as Webdog-gie [20], which attempts to recommend pages similar to ones you have previously express rated highly may work on behalf of the client, but cannot be used to create applications. Shopbot [6], an automated shopping agent, has very similar, if more limited goals.
Reference: [6] <author> Robert Doorenbos et al. </author> <title> A scalable comparison-shopping agent for the world-wide web. </title> <booktitle> In Agents 97 Conference Proceedings. ACM, </booktitle> <year> 1997. </year>
Reference-contexts: Recommender systems [13, 5], such as Webdog-gie [20], which attempts to recommend pages similar to ones you have previously express rated highly may work on behalf of the client, but cannot be used to create applications. Shopbot <ref> [6] </ref>, an automated shopping agent, has very similar, if more limited goals. Given a set of storefront Web sites, Shopbot can learn how to query the stores for information, i.e. price, about particular product categories (such as CDs or software).
Reference: [7] <author> Matthew Fuchs. </author> <title> Let's Talk: extending the Web to support collaboration. </title> <booktitle> In Proceedings of the Workshops on Enabling Technologies: Infrastructure for Collabortive Enterprises. IEEE, </booktitle> <year> 1996. </year>
Reference-contexts: In other words, the markup is the model, or, alternatively, the syntax and vocabulary easily map into the semantics <ref> [7] </ref>.
Reference: [8] <author> Matthew Fuchs. </author> <title> Why isn't DSSSL a Tree. </title> <booktitle> In Proceedings of SGML 96. </booktitle> <address> GCA, </address> <year> 1996. </year>
Reference-contexts: It has a very powerful query language and could certainly be used for this kind of work. However it has a few drawbacks. Our concerns with DSSSL syntax and semantics, particularly, for transformations are stated in <ref> [8] </ref>. Beyond that, DSSSL is a totally functional language with no side effects and (as implemented) no interface to the outside world. In the final analysis, decisions among languages are often based on factors other than pure ca-pabilities.
Reference: [9] <author> Charles Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Oxford University Press, </publisher> <year> 1990. </year>
Reference-contexts: Much of this problem is inherent in the current architecture of the Web, particularly HTML. It would be easy to find fault here, but this is the architecture which bootstrapped the Web. More sophisticated tools, such as SGML <ref> [9] </ref> and CORBA, were available even at the beginning; they were not able to command anywhere near the popularity of the Web.
Reference: [10] <author> James E. White. </author> <title> Telescript technology: The foundation of the electronic martketplac. </title> <type> Technical report, </type> <institution> General Magic, </institution> <year> 1994. </year>
Reference: [11] <author> Arijit Sengupta and Andrew Dillon. </author> <title> Query by templates: A generalized approach for visual query formulation for text dominated databases. </title> <booktitle> In Proceedings of the Advances in Digital Libraries Conference (ADL97). IEEE, </booktitle> <year> 1997. </year>
Reference-contexts: The query language we have used is based on predicates that work from a node of the document towards other node (s) of interest. Web query languages based on SQL are also starting to appear. The language in [2] is based directly on HTML, while <ref> [11, 1] </ref> and [15] (only announced days before this paper was submitted) both target SGML. SQL was intended for a very different kind of data than trees, so it is an open question whether it is an appropriate syntax.
Reference: [12] <author> C.M. Sperberg-McQueen and Lou Burnard. </author> <title> Guidelines for electronic text encoding and interchange. </title> <type> Technical report, </type> <institution> ACH/ACL/ALLC Text Encoding Initiative, </institution> <year> 1993. </year>
Reference-contexts: A query can be used to return a set of subtrees which the application then walks. In this paper we will concentrate on the query aspects. To query pages, we developed a very simple, tree oriented query language, closely related to the XPOINTER specification from the Text Encoding Initiative <ref> [12] </ref>. The current XML linking proposal has a subset of these features. A query is essentially a list of set predicates on . Starting with the current node, the statement will determine which adjacent node to move to whether parent, child, or sibling based on characteristics of those nodes.
Reference: [13] <author> Ellen Spertus. Parasite: </author> <title> Mining structural information on the web. </title> <booktitle> In Sixth International World Wide Web Conference. World Wide Web Consortium, </booktitle> <year> 1997. </year>
Reference-contexts: However, mobile agents require significant support from the server. It is inherently limited to servers willing to accept and run agent. There may be ubiquitous support for mobile agents in the future. Our approach requires no awareness from the server; all the action occurs at the client. Recommender systems <ref> [13, 5] </ref>, such as Webdog-gie [20], which attempts to recommend pages similar to ones you have previously express rated highly may work on behalf of the client, but cannot be used to create applications. Shopbot [6], an automated shopping agent, has very similar, if more limited goals.
Reference: [14] <author> Duane Szafron and Brian Wilkerson. </author> <title> The smalltalk-80 mvc paradigm with plugable views. </title> <type> Technical Report TR88-8, </type> <institution> University of Alberta, Deparment of CS, </institution> <year> 1988. </year> <note> [15] http://www.lpl.univ-aix.fr/projects/SgmlQL. [16] http://www.imdb.com. [17] http://www.unitedmedia.com/comics. [18] http://www.ffg.com/wwstrt.html. [19] http://www.jclark.com. [20] http://webhound.www.media.mit.edu/projects/webhound. </note>
Reference-contexts: Since all of these require pulling information out of the screen description, they are all essentially screen-scraping, an old technique used to allow PCs to build applications using mainframe information by emulating terminals through software and pulling off different pieces. The model-view-controller (MVC) <ref> [14] </ref> user interface paradigm familiar from Smalltalk provides an interesting perspective. In MVC, the model represents the underlying data and operations, the view represents the user interface, and the controler is the set of routines which map between the other two.
Reference: [21] <author> Channel Definition Format (CDF). </author> <type> Technical report, </type> <institution> Microsoft, </institution> <year> 1996. </year> <note> www.microsoft.com/standards/cdf.htm. </note>
References-found: 15

