URL: http://www.genetic-programming.com/AAAI92.ps
Refering-URL: http://www.genetic-programming.com/jkpubs72to93.html
Root-URL: http://www.genetic-programming.com/jkpubs72to93.html
Email: EMAIL: Koza@Sunburn.Stanford.Edu  
Phone: PHONE: 415-941-0336 FAX: 415-941-9430  Rice@Sumex-Aim.Stanford.Edu 415-723-8405  
Title: Automatic Programming of Robots using Genetic Programming  
Author: John R. Koza James P. Rice 
Address: Stanford, CA 94305 USA  701 Welch Road Palo Alto, CA 94304 USA  
Affiliation: Stanford University Computer Science Department  Stanford University Knowledge Systems Laboratory  
Abstract: The goal in automatic programming is to get a computer to perform a task by telling it what needs to be done, rather than by explicitly programming it. This paper considers the task of automatically generating a computer program to enable an autonomous mobile robot to perform the task of moving a box from the middle of an irregular shaped room to the wall. We compare the ability of the recently developed genetic programming paradigm to produce such a program to the reported ability of reinforcement learning techniques, such as Q learning, to produce such a program in the style of the subsumption architecture. The computational requirements of reinforcement learning necessitates considerable human knowledge and intervention, whereas genetic programming comes much closer to achieving the goal of getting the computer to perform the task without explicitly programming it. The solution produced by genetic programming emerges as a result of Darwinian natural selection and genetic crossover (sexual recombination) in a population of computer programs. The process is driven by a fitness measure which communicates the nature of the task to the computer and its learning paradigm. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Brooks, Rodney. </author> <year> 1986. </year> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation. </journal> <month> 2(1) March </month> <year> 1986. </year>
Reference-contexts: In an AAAI-91 paper entitled "Automatic Programming of Behavior-Based Robots using Reinforcement Learning" Mahadevan and Connell (1991) reported on using reinforcement learning techniques, such as Q learning (Watkins 1989), in producing a program to control an autonomous mobile robot in the style of the subsumption architecture <ref> (Brooks 1986, Connell 1990, Mataric 1990) </ref>. In particular, the program produced by reinforcement learning techniques enabled an autonomous mobile robot to perform the task of moving a box from the middle of a room to the wall.
Reference: <author> Connell, Jonanthan. </author> <year> 1990. </year> <booktitle> Minimalist Mobile Robotics. </booktitle> <address> Boston, MA: </address> <publisher> Academic Press 1990. </publisher> <editor> Davis, Lawrence (editor). </editor> <year> 1987. </year> <title> Genetic Algorithms and Simulated Annealing. </title> <publisher> London: Pittman l987. </publisher>
Reference: <author> Davis, Lawrence. </author> <year> 1991. </year> <title> Handbook of Genetic Algorithms. </title> <address> New York: </address> <publisher> Van Nostrand Reinhold.1991. </publisher>
Reference: <author> Goldberg, David E. </author> <year> 1989. </year> <title> Genetic Algorithms in Search, Optimization, </title> <booktitle> and Machine Learning. </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley l989. </publisher>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press 1975. </publisher>
Reference-contexts: Background on Genetic Algorithms John Holland's pioneering 1975 Adaptation in Natural and Artificial Systems described how the evolutionary process in nature can be applied to artificial systems using the genetic algorithm operating on fixed length character strings <ref> (Holland 1975) </ref>. Holland demonstrated that a population of fixed length character strings (each representing a proposed solution to a problem) can be genetically bred using the Darwinian operation of fitness proportionate reproduction and the genetic operation of recombination.
Reference: <author> Koza, John R. </author> <year> 1989. </year> <title> Hierarchical genetic algorithms operating on populations of computer programs. </title> <booktitle> In Proceedings of the 11th International Joint Conference on Artificial Intelligence. </booktitle> <pages> 768-774. </pages> <address> San Mateo, CA: </address> <publisher> Morgan Kaufman 1989. </publisher>
Reference: <author> Koza, John R. </author> <year> 1992a. </year> <title> Genetic Programming: On Programming Computers by Means of Natural Selection and Genetics. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year> <month> Forthcoming. </month>
Reference-contexts: Our choice of population size reflected an estimate on our part as to the likely complexity of the solution to this problem; however, we have used a population of 500 on about half of the numerous other problems on which we have applied genetic programming <ref> (Koza 1992a, 1992b, 1992c) </ref>. In addition, each run is controlled by a number of minor parameters. The values of these minor parameters were chosen in the same way as described in the above references and were not chosen especially for this problem.
Reference: <author> Koza, John R. </author> <year> 1992b. </year> <title> Evolution of subsumption using genetic programming. </title> <editor> In Bourgine, Paul and Varela, Francisco (editors). </editor> <booktitle> Proceedings of European Conference on Artificial Life. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press 1992. </publisher>
Reference-contexts: This slinky movement reflects the improvement of the population as a whole. We have also employed genetic programming to evolve a computer program to control a wall following robot using the subsumption architecture <ref> (Koza 1992b) </ref> based on impressive work successfully done by Mataric (1990) in programming an autonomous mobile robot called TOTO.
Reference: <author> Koza, John R. </author> <year> 1992c. </year> <title> The genetic programming paradigm: Genetically breeding populations of computer programs to solve problems. In Soucek, Branko and the IRIS Group (editors). Dynamic, Genetic, and Chaotic Programming. </title> <address> New York: </address> <publisher> John Wiley 1992. </publisher>
Reference: <author> Koza, John R. </author> <year> 1992d. </year> <title> A genetic approach to finding a controller to back up a tractor-trailer truck. </title> <booktitle> In Proceedings of the 1992 American Control Conference. American Automatic Control Council 1992. </booktitle>
Reference: <author> Koza, John R. </author> <year> 1992e. </year> <title> A genetic approach to the truck backer upper problem and the intertwined spirals problem. </title> <booktitle> In Proceedings of International Joint Conference on Neural Networks, </booktitle> <address> Washington, June 1992. </address> <publisher> IEEE Press. </publisher>
Reference: <author> Koza, John R. and Keane, Martin A. </author> <year> 1990. </year> <title> Genetic breeding of nonlinear optimal control strategies for broom balancing. </title> <booktitle> In Proceedings of the Ninth International Conference on Analysis and Optimization of Systems. </booktitle> <address> Antibes,France, </address> <month> June, </month> <year> 1990. </year> <pages> 47-56. </pages> <address> Berlin: </address> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: <author> Koza, John R. and Rice, James P. </author> <year> 1991. </year> <title> A genetic approach to artificial intelligence. </title> <editor> In Langton, C. G. (editor). </editor> <booktitle> Artificial Life II Video Proceedings. </booktitle> <address> Redwood City, CA: </address> <publisher> Addison-Wesley 1991. </publisher>
Reference: <author> Mahadevan, Sridhar and Connell, Jonanthan. </author> <year> 1990. </year> <title> Automatic Programming of Behavior-based Robots using Reinforcement Learning. </title> <type> IBM Technical Report RC 16359. </type> <institution> IBM Research Division 1990. </institution>
Reference: <author> Mahadevan, Sridhar and Connell, Jonanthan. </author> <year> 1991. </year> <title> Automatic programming of behavior-based robots using reinforcement learning. </title> <booktitle> In Proceedings of Ninth National Conference on Artificial Intelligence. </booktitle> <pages> 768-773. </pages> <booktitle> Volume 2. </booktitle> <address> Menlo Park, CA: </address> <publisher> AAAI Press / MIT Press 1991. </publisher>
Reference: <author> Mataric, Maja J. </author> <year> 1990. </year> <title> A Distributed Model for Mobile Robot Environment-Learning and Navigation. </title> <institution> MIT Artificial Intelligence Lab report AI-TR-1228. </institution> <month> May </month> <year> 1990. </year>
Reference: <author> Watkins, Christopher. </author> <year> 1989. </year> <title> Learning from Delayed Rewards. </title> <type> PhD Thesis. </type> <institution> King's College, </institution> <address> Cambridge 1989. </address>
Reference-contexts: In an AAAI-91 paper entitled "Automatic Programming of Behavior-Based Robots using Reinforcement Learning" Mahadevan and Connell (1991) reported on using reinforcement learning techniques, such as Q learning <ref> (Watkins 1989) </ref>, in producing a program to control an autonomous mobile robot in the style of the subsumption architecture (Brooks 1986, Connell 1990, Mataric 1990).
References-found: 17

