URL: ftp://ftp.cs.umd.edu/pub/cim/papers/ISR_TR_94-81.ps
Refering-URL: http://www.cs.umd.edu/users/nau/imacs/IMACS.html
Root-URL: 
Title: Manufacturing Feature Instances: Which Ones to Recognize?  
Author: Satyandra K. Gupta William C. Regli Dana S. Nau 
Keyword: Feature Recognition, Manufacturing Planning, and Feature-Based Representations.  
Note: Available as  Also affiliated with:  
Address: College Park, MD 20742 USA  Building 220, Room A-127 Gaithersburg, MD 20899  College Park, MD 20742 USA  Park.  
Affiliation: Mechanical Engineering Department Institute for Systems Research University of Maryland  National Institute of Standards and Technology Manufacturing Systems Integration Division  Computer Science Department Institute for Advanced Computer Studies Institute for Systems Research University of Maryland  Computer Science Department and Institute for Systems Research, University of Maryland, College  
Email: skgupta@src.umd.edu  regli@cme.nist.gov  nau@cs.umd.edu  
Web: CS-TR-3376, UMIACS-TR-94-127, ISR-TR-94-81.  
Abstract: Manufacturing features and feature-based representations have become an integral part of research on manufacturing systems, largely due to their ability to model correspondences between design information and manufacturing operations. However, several research challenges still must be addressed in order to place feature technologies into a solid scientific and mathematical framework. One challenge is the issue of alternatives in feature-based planning. Even after one has decided upon an abstract set of features to use for representing manufacturing operations, the set of feature instances used to represent a complex part is by no means unique. For a complex part, many (sometimes infinitely many) different manufacturing operations can potentially be used to manufacture various portions of the part|and thus many different feature instances can be used to represent these portions of the part. Some of these feature instances will appear in useful manufacturing plans, and others will not. If the latter feature instances can be discarded at the outset, this will reduce the number of alternative manufacturing plans to be examined in order to find a useful one. Thus, what is required is a systematic means of specifying which feature instances are of interest. This paper addresses the issue of alternatives by introducing the notion of primary feature instances, which we contend are sufficient to generate all manufacturing plans of interest. To substantiate our argument, we describe how various instances in the primary feature set can be used to produce the desired plans. Furthermore, we discuss how this formulation overcomes computational difficulties faced by previous work, and present some complexity results for this approach in the domain of machined parts. fl This work was supported in part by NSF Grants IRI9306580, DDM-9201779, EEC 94-02384 and a forgivable loan from General Electric Corporation awarded to the first author. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Butterfield, M. Green, D. Scott, and W. Stoker. </author> <title> Part features for process planning. </title> <type> Technical Report R-86-PPP-01, </type> <institution> Computer Aided Manufacturing-International, Arlington, TX, USA, </institution> <month> November </month> <year> 1986. </year>
Reference-contexts: Finally, in Section 7, we present our conclusions and describe the benefits that can be achieved by using our formulation. 2 Manufacturing Features A number of attempts have been made to define and classify manufacturing features <ref> [1, 7, 11, 24, 2] </ref>. Although there are differences among these approaches, many of them share important similarities. For example, a machining feature usually corresponds to the volume of material that can be removed by a machining operation.
Reference: [2] <author> Tien-Chien Chang. </author> <title> Expert Process Planning for Manufacturing. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1990. </year>
Reference-contexts: Finally, in Section 7, we present our conclusions and describe the benefits that can be achieved by using our formulation. 2 Manufacturing Features A number of attempts have been made to define and classify manufacturing features <ref> [1, 7, 11, 24, 2] </ref>. Although there are differences among these approaches, many of them share important similarities. For example, a machining feature usually corresponds to the volume of material that can be removed by a machining operation.
Reference: [3] <author> S. H. Chuang and M. R. Henderson. </author> <title> Three-dimensional shape pattern recognition using vertex classification and the vertex-edge graph. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 377-387, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching <ref> [4, 9, 22, 3, 13] </ref>, or geometric algorithms [10, 6, 19]. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized.
Reference: [4] <author> Leila De Floriani. </author> <title> Feature extraction from boundary models of three-dimensional objects. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 11(8), </volume> <month> August </month> <year> 1989. </year> <month> 14 </month>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching <ref> [4, 9, 22, 3, 13] </ref>, or geometric algorithms [10, 6, 19]. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized.
Reference: [5] <author> Xin Dong. </author> <title> Geometric Feature Extraction for Computer-Aided Process Planning. </title> <type> PhD thesis, </type> <institution> Rensselaer Polytechnic Institute, </institution> <address> Troy, NY, USA, </address> <year> 1988. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) <ref> [8, 16, 5, 12, 24] </ref>, pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19].
Reference: [6] <author> R. Gadh and F. B. Prinz. </author> <title> Recognition of geometric forms using the differential depth filter. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(11) </volume> <pages> 583-598, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms <ref> [10, 6, 19] </ref>. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized.
Reference: [7] <author> N. N. Z. Gindy. </author> <title> A hierarchical structure for form features. </title> <journal> International Journal of Production Research, </journal> <volume> 27(12) </volume> <pages> 2089-2103, </pages> <year> 1989. </year>
Reference-contexts: Finally, in Section 7, we present our conclusions and describe the benefits that can be achieved by using our formulation. 2 Manufacturing Features A number of attempts have been made to define and classify manufacturing features <ref> [1, 7, 11, 24, 2] </ref>. Although there are differences among these approaches, many of them share important similarities. For example, a machining feature usually corresponds to the volume of material that can be removed by a machining operation.
Reference: [8] <author> Mark R. Henderson. </author> <title> Extraction of Feature Information from Three-Dimensional CAD Data. </title> <type> PhD thesis, </type> <institution> Purdue University, West Lafayette, IN, USA, </institution> <year> 1984. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) <ref> [8, 16, 5, 12, 24] </ref>, pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19].
Reference: [9] <author> S. Joshi and T. C. Chang. </author> <title> Graph-based heuristics for recognition of machined features from a 3D solid model. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 20(2) </volume> <pages> 58-66, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching <ref> [4, 9, 22, 3, 13] </ref>, or geometric algorithms [10, 6, 19]. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized.
Reference: [10] <author> Y. S. Kim. </author> <title> Recognition of form features using convex decomposition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(9) </volume> <pages> 461-476, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms <ref> [10, 6, 19] </ref>. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized.
Reference: [11] <author> T. R. Kramer. </author> <title> A library of material removal shape element volumes (MRSEVs). </title> <type> Technical Report NSTIR 4809, NIST, </type> <address> Gaithersburg, MD, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: Finally, in Section 7, we present our conclusions and describe the benefits that can be achieved by using our formulation. 2 Manufacturing Features A number of attempts have been made to define and classify manufacturing features <ref> [1, 7, 11, 24, 2] </ref>. Although there are differences among these approaches, many of them share important similarities. For example, a machining feature usually corresponds to the volume of material that can be removed by a machining operation.
Reference: [12] <author> Timo Laakko and Martti Mantyla. </author> <title> Feature modelling by incremental feature recognition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(8) </volume> <pages> 479-492, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) <ref> [8, 16, 5, 12, 24] </ref>, pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19].
Reference: [13] <author> M. Marefat and R. L. Kashyap. </author> <title> Geometric reasoning for recognition of three-dimensional object features. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(10) </volume> <pages> 949-965, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching <ref> [4, 9, 22, 3, 13] </ref>, or geometric algorithms [10, 6, 19]. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized. <p> Whether or not a system produces correct results will depend on the set of features recognized in Step 1. 4.2 Computational Problems in Generating Alternative Feature Instances It has been pointed out previously by Marefat <ref> [13, 14] </ref> that existing feature recognition methodologies have had only limited success in identifying and describing alternative feature instances. There are several reasons for this. <p> Sakurai [21] presents a system that decomposes the volume to be machined into disjoint cells and then recombines them to form compound feature instances. This method is complete over the class of features that can be built from compositions of these primitive cells. Similarly, Marefat <ref> [13] </ref> states that his hypothesis testing approach is complete over his class of hypothesis generators for features. Above mentioned systems were capable of producing a well-specified subset of the valid feature set. <p> In the feature recognition literature, there are many approaches capable of producing the set of primary features for machined parts. Perhaps the best suited of these are the trace-based methodologies <ref> [24, 18, 13] </ref>. In such an approach, machining features are identified by matching the geometric characteristics of various part faces with various types of features. The boundary of a feature is comprised of different types of surfaces.
Reference: [14] <author> Michael Marefat and R. L. Kashyap. </author> <title> Automatic construction of process plans from solid model representations. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 22(5) </volume> <pages> 1097-1115, </pages> <month> September/October </month> <year> 1992. </year>
Reference-contexts: Whether or not a system produces correct results will depend on the set of features recognized in Step 1. 4.2 Computational Problems in Generating Alternative Feature Instances It has been pointed out previously by Marefat <ref> [13, 14] </ref> that existing feature recognition methodologies have had only limited success in identifying and describing alternative feature instances. There are several reasons for this.
Reference: [15] <author> J. Miguel Pinilla, Susan Finger, and Friedrich B. Prinz. </author> <title> Shape feature description using an augmented topology graph grammar. </title> <booktitle> In Proceedings NSF Engineering Design Research Conference, </booktitle> <pages> pages 285-300. </pages> <institution> National Science Foundation, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching <ref> [15, 20] </ref>, graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19].
Reference: [16] <author> S. Prabhakar and M. R. Henderson. </author> <title> Automatic form-feature recognition using neural-network-based techniques on boundary representations of solid models. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(7) </volume> <pages> 381-393, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) <ref> [8, 16, 5, 12, 24] </ref>, pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19].
Reference: [17] <author> M. J. Pratt. </author> <title> Application of feature recognition in the product life-cycle. </title> <journal> International Journal of Computer Integrated Manufacturing, </journal> 6(1&2):13-19, 1993. 
Reference-contexts: Within these domains, different researchers use different definitions of manufacturing features, but these different definitions usually have a number things in common (cf. <ref> [17, 23] </ref>). In particular, in these domains a manufacturing feature is normally considered to be a parameterized geometric object that corresponds to a particular kind of manufacturing operation. Thus, specific manufacturing operations for a particular manufactured part correspond to feature instances, which are specified by giving values for the parameters.
Reference: [18] <author> William C. Regli, Satyandra K. Gupta, and Dana S. Nau. </author> <title> Extracting alternative machining features: An algorithmic approach. </title> <type> Technical Report ISR-TR94-55, </type> <institution> The University of Maryland, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: In the feature recognition literature, there are many approaches capable of producing the set of primary features for machined parts. Perhaps the best suited of these are the trace-based methodologies <ref> [24, 18, 13] </ref>. In such an approach, machining features are identified by matching the geometric characteristics of various part faces with various types of features. The boundary of a feature is comprised of different types of surfaces. <p> For example, in the case of a cylindrical face, we want to try to instantiate both drilling feature and end-milling features. Any feature instance that intersects with the part is not valid and is discarded. In our previous work <ref> [19, 18] </ref>, we have developed trace-based algorithms for identifying the set of primary feature instances. 6 Using The Primary Feature Set to Generate FBRs Efficiently Each primary instance is representative of its equivalence class.
Reference: [19] <author> William C. Regli and Dana S. Nau. </author> <title> Recognition of volumetric features from CAD models: Problem formalization and algorithms. </title> <type> Technical Report TR 93-41, </type> <institution> The University of Maryland, Institute for Systems Research, College Park, MD 20742, USA, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms <ref> [10, 6, 19] </ref>. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized. <p> For example, in the case of a cylindrical face, we want to try to instantiate both drilling feature and end-milling features. Any feature instance that intersects with the part is not valid and is discarded. In our previous work <ref> [19, 18] </ref>, we have developed trace-based algorithms for identifying the set of primary feature instances. 6 Using The Primary Feature Set to Generate FBRs Efficiently Each primary instance is representative of its equivalence class.
Reference: [20] <author> Scott A. Safier and Susan Finger. </author> <title> Parsing features in solid geometric models. </title> <booktitle> In European Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching <ref> [15, 20] </ref>, graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19].
Reference: [21] <author> Hiroshi Sakurai and Chia-Wei Chin. </author> <title> Definition and recognition of volume features for process planning. </title> <editor> In Jami Shah, Martti Mantyla, and Dana Nau, editors, </editor> <booktitle> Advances in Feature Based Manufacturing, chapter 4, </booktitle> <pages> pages 65-80. </pages> <address> Elsevier/North Holland, </address> <year> 1994. </year> <month> 15 </month>
Reference-contexts: If a system produces all features in a given class C, then we say that the system is complete over C. In the existing literature, there have been several efforts toward guaranteeing completeness. Sakurai <ref> [21] </ref> presents a system that decomposes the volume to be machined into disjoint cells and then recombines them to form compound feature instances. This method is complete over the class of features that can be built from compositions of these primitive cells.
Reference: [22] <author> Hiroshi Sakurai and David C. Gossard. </author> <title> Recognizing shape features in solid models. </title> <journal> IEEE Computer Graphics & Applications, </journal> <month> September </month> <year> 1990. </year>
Reference-contexts: Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) [8, 16, 5, 12, 24], pattern matching [15, 20], graph searching <ref> [4, 9, 22, 3, 13] </ref>, or geometric algorithms [10, 6, 19]. Feature instances recognized by these systems are grouped into FBRs using the two approaches described in the next two sections. 4.1.1 Generating FBRs Directly In this approach, FBRs are generated "on the fly," as the feature instances are recognized.
Reference: [23] <author> Jami Shah, Martti Mantyla, and Dana Nau, </author> <title> editors. Advances in Feature Based Manufacturing. </title> <publisher> Else-vier/North Holland, </publisher> <year> 1994. </year>
Reference-contexts: Within these domains, different researchers use different definitions of manufacturing features, but these different definitions usually have a number things in common (cf. <ref> [17, 23] </ref>). In particular, in these domains a manufacturing feature is normally considered to be a parameterized geometric object that corresponds to a particular kind of manufacturing operation. Thus, specific manufacturing operations for a particular manufactured part correspond to feature instances, which are specified by giving values for the parameters.
Reference: [24] <author> J. H. Vandenbrande and A. A. G. Requicha. </author> <title> Spatial reasoning for the automatic recognition of machinable features in solid models. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 15(12):1269, </volume> <month> December </month> <year> 1993. </year> <month> 16 </month>
Reference-contexts: Finally, in Section 7, we present our conclusions and describe the benefits that can be achieved by using our formulation. 2 Manufacturing Features A number of attempts have been made to define and classify manufacturing features <ref> [1, 7, 11, 24, 2] </ref>. Although there are differences among these approaches, many of them share important similarities. For example, a machining feature usually corresponds to the volume of material that can be removed by a machining operation. <p> Many of the existing approaches to recognizing feature instances address the problem as one in 3-dimensional geometric pattern recognition to be approached with techniques from AI (such as frame-based reasoning, graph- and plex-grammars, expert systems, neural nets etc.) <ref> [8, 16, 5, 12, 24] </ref>, pattern matching [15, 20], graph searching [4, 9, 22, 3, 13], or geometric algorithms [10, 6, 19]. <p> In the feature recognition literature, there are many approaches capable of producing the set of primary features for machined parts. Perhaps the best suited of these are the trace-based methodologies <ref> [24, 18, 13] </ref>. In such an approach, machining features are identified by matching the geometric characteristics of various part faces with various types of features. The boundary of a feature is comprised of different types of surfaces.
References-found: 24

