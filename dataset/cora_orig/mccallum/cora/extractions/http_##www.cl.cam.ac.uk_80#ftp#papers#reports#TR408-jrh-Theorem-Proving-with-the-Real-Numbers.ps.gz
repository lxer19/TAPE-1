URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/TR408-jrh-Theorem-Proving-with-the-Real-Numbers.ps.gz
Refering-URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/
Root-URL: 
Title: Theorem Proving with the Real Numbers  
Author: John Robert Harrison Churchill College 
Degree: A dissertation submitted for the degree of Doctor of Philosophy in the  
Affiliation: University of Cambridge  
Abstract-found: 0
Intro-found: 1
Reference: <author> Aagaard, M. D. and Seger, C.-J. H. </author> <title> (1995) The formal verification of a pipelined double-precision IEEE floating-point multiplier. </title> <booktitle> In Proceedings of the 1995 International Conference on Computer-Aided Design, </booktitle> <address> San Jose, CA. </address>
Reference: <author> Abian, A. </author> <title> (1979) An ultimate proof of Rolle's theorem. </title> <journal> The American Mathematical Monthly, </journal> <volume> 86, </volume> <pages> 484-485. </pages>
Reference: <author> Abian, A. </author> <title> (1981) Calculus must consist of the study of real numbers in their decimal representation and not of the study of an abstract complete ordered field or nonstandard real numbers. </title> <journal> International Journal of Mathematical Education in Science and Technology, </journal> <volume> 12, </volume> <pages> 465-472. </pages>
Reference: <author> Agerholm, S. </author> <title> (1994) Formalising a model of the -calculus in HOL-ST. </title> <type> Technical Report 354, </type> <institution> University of Cambridge Computer Laboratory. </institution>
Reference: <author> Andersen, F., Petersen, K. D., and Pettersson, J. S. </author> <title> (1993) Program verification using HOL-UNITY. </title> <booktitle> See Joyce and Seger (1993), </booktitle> <pages> pp. 1-15. </pages>
Reference-contexts: (1976), that a programming language should be thought of first and foremost as an algorithm-oriented system of mathematical notation, and only secondarily as something to be run on a machine.) Other formalisms embedded in HOL in this way include CCS (Nesi 1993), CSP (Camilleri 1990), TLA (von Wright 1991), UNITY <ref> (Andersen, Petersen, and Pettersson 1993) </ref> and Z (Bowen and Gordon 1995). 4 These approaches ascribe a denotational semantics in terms of higher order logic, where the denotation function is extra-logical, essentially a syntactic sugaring.
Reference: <author> Archer, M., Fink, G., and Yang, L. </author> <title> (1992) Linking other theorem provers to HOL using PM: Proof manager. </title> <booktitle> See Claesen and Gordon (1992), </booktitle> <pages> pp. 539-548. </pages>
Reference-contexts: As well as our own experiments with a computer algebra system, detailed below, HOL has for example been linked to other theorem provers <ref> (Archer, Fink, and Yang 1992) </ref> and to model checkers (Seger and Joyce 1991). Methodologies for cooperation between systems are classified by Calmet and Homann (1996) according to several different properties.
Reference: <author> Archer, M., Joyce, J. J., Levitt, K. N., and Windley, P. J. </author> <title> (eds.) </title> <booktitle> (1991) Proceedings of the 1991 International Workshop on the HOL theorem proving system and its Applications. </booktitle> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Archer, M. and Linz, P. </author> <title> (1991) On the verification of numerical software. </title> <editor> In Kaucher, E., Markov, S. M., and Mayer, G. (eds.), </editor> <booktitle> Computer Arithmetic: scientific computation and mathematical modelling, </booktitle> <pages> pp. 117-131. </pages> <editor> J. C. </editor> <title> Baltzer AG Scientific Publishing Co. Argonne National Laboratories (1995) A summary of new results in mathematics obtained with Argonne's automated deduction software. </title> <note> Unpublished; available on the Web as http://www.mcs.anl.gov/home/mccune/ar/new_results/. </note>
Reference: <author> Arthan, R. D. </author> <title> (1996) Undefinedness in Z: Issues for specification and proof. </title> <editor> In Kerber, M. (ed.), </editor> <title> CADE-13 Workshop on Mechanization of Partial Functions. </title> <note> Available on the Web as ftp://ftp.cs.bham.ac.uk/pub/authors/M.Kerber/96-CADE-WS/Arthan.ps.gz. </note>
Reference: <author> Artmann, B. </author> <title> (1988) The Concept of Number: From Quaternions to Monads and Topological Fields. Ellis Horwood series in Mathematics and its Applications. Ellis Horwood. Original German edition, </title> <journal> `Der Zahlbegriff', </journal> <note> published in 1983 by Vandenhoeck and Rupprecht, Gottigen. Translated with additional exercises and material by H.B. Griffiths. </note>
Reference: <author> Baker, A. </author> <title> (1975) Transcendental Number Theory. </title> <publisher> Cambridge University Press. 135 136 BIBLIOGRAPHY Ballarin, </publisher> <editor> C., Homann, K., and Calmet, J. </editor> <title> (1995) Theorems and algorithms: An interface between Isabelle and Maple. </title> <booktitle> See Staples and Moffat (1995), </booktitle> <pages> pp. 150-157. </pages>
Reference: <author> Barratt, M. </author> <title> (1989) Formal methods applied to a floating-point system. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 15, </volume> <pages> 611-621. </pages>
Reference: <author> Beeson, M. J. </author> <booktitle> (1984) Foundations of constructive mathematics: metamathematical studies, Volume 3 of Ergebnisse der Mathematik und ihrer Grenzgebiete. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: <author> Beeson, M. J. </author> <year> (1992) </year> <month> Mathpert: </month> <title> Computer support for learning algebra, trig, and calculus. </title> <editor> In Voronkov, A. (ed.), </editor> <booktitle> Logic programming and automated reasoning: international conference LPAR '92, Volume 624 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 454-456. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Behrend, F. A. </author> <title> (1956) A contribution to the theory of magnitudes and the foundations of analysis. </title> <journal> Mathematische Zeitschrift , 63, </journal> <pages> 345-362. </pages>
Reference: <author> Bishop, E. and Bridges, D. </author> <title> (1985) Constructive analysis, Volume 279 of Grundlehren der mathematischen Wissenschaften. </title> <publisher> Springer-Verlag. </publisher>
Reference: <author> Blum, M. </author> <title> (1993) Program result checking: A new approach to making programs more reliable. </title> <editor> In Lingas, A., Karlsson, R., and Carlsson, S. (eds.), </editor> <booktitle> Automata, Languages and Programming, 20th International Colloquium, ICALP93, Proceedings, Volume 700 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 1-14. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Boehm, H. J., Cartwright, R., O'Donnel, M. J., and Riggle, M. </author> <title> (1986) Exact real arithmetic: a case study in higher order programming. </title> <booktitle> In Conference Record of the 1986 ACM Symposium on LISP and Functional Programming, </booktitle> <pages> pp. 162-173. </pages> <institution> Association for Computing Machinery. </institution>
Reference: <author> Boulton, R. J. </author> <title> (1992) A lazy approach to fully-expansive theorem proving. </title> <booktitle> See Claesen and Gordon (1992), </booktitle> <pages> pp. 19-38. </pages>
Reference: <author> Boulton, R. J. </author> <title> (1993) Efficiency in a fully-expansive theorem prover. </title> <type> Technical Report 337, </type> <institution> University of Cambridge Computer Laboratory. </institution> <type> Author's PhD thesis. </type>
Reference: <author> Boulton, R. J. et al. </author> <title> (1993) Experience with embedding hardware description languages in HOL. </title> <editor> In Stavridou, V., Melham, T. F., and Boute, R. T. (eds.), </editor> <booktitle> Proceedings of the IFIP TC10/WG 10.2 International Conference on Theorem Provers in Circuit Design: Theory, Practice and Experience, Volume A-10 of IFIP Transactions A: Computer Science and Technology, </booktitle> <pages> pp. 129-156. </pages> <publisher> North-Holland. </publisher>
Reference: <author> Bourbaki, N. </author> <title> (1966) General topology, Volume 1 of Elements of mathematics. Addison-Wesley. Translated from French `Topologie Generale' in the series `Elements de mathematique', </title> <note> originally published by Hermann in 1966. </note>
Reference: <author> Bowen, J. P. and Gordon, M. J. C. </author> <title> (1995) A shallow embedding of Z in HOL. </title> <journal> Information and Software Technology, </journal> <volume> 37, </volume> <pages> 269-276. </pages>
Reference-contexts: thought of first and foremost as an algorithm-oriented system of mathematical notation, and only secondarily as something to be run on a machine.) Other formalisms embedded in HOL in this way include CCS (Nesi 1993), CSP (Camilleri 1990), TLA (von Wright 1991), UNITY (Andersen, Petersen, and Pettersson 1993) and Z <ref> (Bowen and Gordon 1995) </ref>. 4 These approaches ascribe a denotational semantics in terms of higher order logic, where the denotation function is extra-logical, essentially a syntactic sugaring.
Reference: <author> Boyer, R. S. and Moore, J S. </author> <title> (1979) A Computational Logic. </title> <booktitle> ACM Monograph Series. </booktitle> <publisher> Academic Press. </publisher>
Reference-contexts: So attempts at complete automation seem likely to founder on quite simple problems. In fact, some impressive results have been achieved with automatic provers for first order logic (Argonne National Laboratories 1995), but these are still not problems of real practical significance. The NQTHM theorem prover <ref> (Boyer and Moore 1979) </ref> is more successful in practical cases; by restricting the logic, it becomes possible to offer some quite powerful automation.
Reference: <author> Brent, R. P. </author> <title> (1976) Fast multiple-precision evaluation of elementary functions. </title> <journal> Journal of the ACM , 23, </journal> <month> 242-251. </month> <title> BIBLIOGRAPHY 137 de Bruijn, </title> <editor> N. G. </editor> <title> (1976) Defining reals without the use of rationals. </title> <journal> Indagationes Mathematicae, </journal> <volume> 38, </volume> <pages> 100-108. </pages> <editor> de Bruijn, N. G. </editor> <title> (1980) A survey of the project AUTOMATH. </title> <editor> In Seldin, J. P. and Hindley, J. R. (eds.), To H. B. </editor> <booktitle> Curry: Essays in Combinatory Logic, Lambda Calculus, and Formalism, </booktitle> <pages> pp. 589-606. </pages> <publisher> Academic Press. </publisher>
Reference: <author> Bryant, R. E. </author> <title> (1986) Graph-based algorithms for Boolean function manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35, </volume> <pages> 677-691. </pages>
Reference-contexts: Such approaches have the benefit of being essentially automatic: one pushes a button and waits. However they also have two defects. First, theoretical decidability does not imply practical feasibility; it often happens that large examples are impossible. (Though using better algorithms, e.g. Binary Decision Diagrams <ref> (Bryant 1986) </ref> or a patented algorithm due to St-almarck (1994), one can tackle surprisingly large examples.) Second, they usually require us to restrict the specification to use rather simple and low-level mathematical ideas, which militates against our wish to have a high-level, readable specification.
Reference: <author> Bryant, R. E. </author> <title> (1995) Bit-level analysis of an SRT divide circuit. </title> <type> Technical Report CMU-CS-95-140, </type> <institution> CMU School of Computer Science. </institution>
Reference: <author> Bundy, A., van Harmelen, F., Hesketh, J., and Smaill, A. </author> <title> (1991) Experiments with proof plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7, </volume> <pages> 303-323. </pages>
Reference: <author> Burkill, J. C. </author> <title> (1962) A first course in mathematical analysis. </title> <publisher> Cambridge University Press. </publisher> <address> New printing 1978. </address>
Reference: <author> Burkill, J. C. </author> <title> (1965) The Lebesgue Integral, </title> <booktitle> Volume 44 of Cambridge Tracts in Mathematics and Mathematical Physics. </booktitle> <publisher> Cambridge University Press. </publisher>
Reference: <author> Burkill, J. C. and Burkill, H. </author> <title> (1970) A second course in mathematical analysis. </title> <publisher> Cambridge University Press. </publisher> <address> New printing 1980. </address>
Reference: <author> Burrill, C. W. </author> <title> (1967) Foundations of Real Numbers. </title> <publisher> McGraw-Hill. </publisher>
Reference: <author> Calmet, J. and Homann, K. </author> <title> (1996) Classification of communication and cooperation mechanisms for logical and symbolic computation systems. </title> <editor> In Baader, F. and Schulz, K. U. (eds.), </editor> <booktitle> Proceedings of the First International Workshop `Frontiers of Combining Systems' (FroCoS'96), Kluwer Series on Applied Logic, </booktitle> <pages> pp. 133-146. </pages> <publisher> Kluwer. </publisher>
Reference: <author> Camilleri, A. J. </author> <title> (1990) Mechanizing CSP trace theory in higher order logic. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16, </volume> <pages> 993-1004. </pages>
Reference-contexts: the view, expressed for example by Dijkstra (1976), that a programming language should be thought of first and foremost as an algorithm-oriented system of mathematical notation, and only secondarily as something to be run on a machine.) Other formalisms embedded in HOL in this way include CCS (Nesi 1993), CSP <ref> (Camilleri 1990) </ref>, TLA (von Wright 1991), UNITY (Andersen, Petersen, and Pettersson 1993) and Z (Bowen and Gordon 1995). 4 These approaches ascribe a denotational semantics in terms of higher order logic, where the denotation function is extra-logical, essentially a syntactic sugaring.
Reference: <author> Cantor, D. G. </author> <title> (1981) Irreducible polynomials with integer coefficients have succinct certificates. </title> <journal> Journal of Algorithms, </journal> <volume> 2, </volume> <pages> 385-392. </pages>
Reference: <author> Carnap, R. </author> <title> (1937) The Logical Syntax of Language. International library of psychology, philosophy and scientific method. Routledge &Kegan Paul. Translated from `Logische Syntax der Sprache' by Amethe Smeaton (Countess von Zeppelin), with some new sections not in the German original. </title>
Reference: <author> Chirimar, J. and Howe, D. J. </author> <title> (1992) Implementing constructive real analysis: Preliminary report. </title> <editor> In Myers, J. P. and O'Donnell, M. J. (eds.), </editor> <booktitle> Constructivity in Computer Science: Proceedings of Summer Symposium, Volume 613 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 165-178. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Church, A. </author> <title> (1940) A formulation of the Simple Theory of Types. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 5, </volume> <pages> 56-68. </pages>
Reference: <editor> Claesen, L. J. M. and Gordon, M. J. C. (eds.) </editor> <booktitle> (1992) Proceedings of the IFIP TC10/WG10.2 International Workshop on Higher Order Logic Theorem Proving and its Applications, Volume A-20 of IFIP Transactions A: </booktitle> <institution> Computer Science and Technology. </institution> <note> North-Holland. 138 BIBLIOGRAPHY Clarke, </note> <author> E. M. and Emerson, E. A. </author> <title> (1981) Design and synthesis of synchronization skeletons using branching-time temporal logic. </title> <editor> In Kozen, D. (ed.), </editor> <booktitle> Logics of Programs, Volume 131 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 52-71. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Clarke, E. M. and Zhao, X. </author> <title> (1991) Analytica | a theorem prover for Mathematica. </title> <type> Technical report, </type> <institution> CMU School of Computer Science. </institution>
Reference: <author> Clement, D., Montagnac, F., and Prunet, V. </author> <title> (1991) Integrated software components: a paradigm for control integration. </title> <editor> In Endres, A. and Weber, H. (eds.), </editor> <booktitle> Software development environments and CASE technology: European symposium, Volume 509 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 167-177. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Clenshaw, C. W. and Olver, F. W. J. </author> <title> (1984) Beyond floating point. </title> <journal> Journal of the ACM , 31, </journal> <pages> 319-328. </pages>
Reference: <author> Cohen, L. W. and Ehrlich, G. </author> <title> (1963) The Structure of the Real Number System. The University Series in Undergraduate Mathematics. </title> <publisher> Van Nostrand. </publisher>
Reference: <author> Cohen, P. J. </author> <title> (1969) Decision procedures for real and p-adic fields. </title> <journal> Communications in Pure and Applied Mathematics, </journal> <volume> 22, </volume> <pages> 131-151. </pages>
Reference: <author> Collins, G. E. </author> <title> (1976) Quantifier elimination for real closed fields by cylindrical algebraic decomposition. </title> <editor> In Brakhage, H. (ed.), </editor> <booktitle> Second GI Conference on Automata Theory and Formal Languages, Volume 33 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 134-183. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Conway, J. H. </author> <title> (1976) On Numbers and Games, Volume 6 of L. </title> <editor> M. S. Monographs. </editor> <publisher> Academic Press. </publisher>
Reference: <author> Coquand, T. </author> <title> (1992) An intuitionistic proof of Tychonoff's theorem. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 57, </volume> <pages> 28-32. </pages>
Reference: <author> Corbett, J. C. and Avrunin, G. S. </author> <title> (1995) Using integer programming to verify general safety and liveness properties. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 6, </volume> <pages> 97-123. </pages>
Reference: <author> Corless, R. M. and Jeffrey, D. J. </author> <title> (1992) Well. . . it isn't quite that simple. </title> <journal> SIGSAM Bulletin, </journal> <volume> 26(3), </volume> <pages> 2-6. </pages> <editor> van Dalen, D. and Monna, A. F. </editor> <title> (1972) Sets and Integration: an Outline of the Development. </title> <publisher> Wolters-Noordhoff. </publisher>
Reference: <author> Dantzig, G. B. </author> <title> (1963) Linear Programming and Extensions. </title> <publisher> Princeton University Press. </publisher>
Reference-contexts: In linear programming terminology our derived decision procedure for the integers, mentioned in passing above, solves integer problems by considering the real-number `LP relaxation'. 5.7. SUMMARY AND RELATED WORK 93 many efficient algorithms for the latter. The classic simplex method <ref> (Dantzig 1963) </ref> often works well in practice, and recently new algorithms have been developed that have polynomial complexity; the first was due to Khachian (1979) and a version that looks practically promising is given by (Karmarkar 1984).
Reference: <author> Davenport, J. H. </author> <title> (1981) On the integration of algebraic functions, </title> <booktitle> Volume 102 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: <author> Davenport, J. H., Siret, Y., and Tournier, E. </author> <title> (1988) Computer algebra: systems and algorithms for algebraic computation. </title> <publisher> Academic Press. </publisher>
Reference: <author> Davis, M. </author> <title> (1957) A computer program for Presburger's algorithm. </title> <booktitle> In Summaries of talks presented at the Summer Institute for Symbolic Logic, </booktitle> <publisher> Cornell University, </publisher> <pages> pp. 215-233. </pages> <institution> Institute for Defense Analyses, Princeton, NJ. </institution> <note> Reprinted in Siekmann and Wrightson (1983), pp. 41-48. </note>
Reference: <author> Dedekind, R. </author> <title> (1872) Stetigkeit und Irrationalzahlen. Braunschweig. BIBLIOGRAPHY 139 Denjoy, A. (1912) Une extension de l'integrale de M. </title> <type> Lebesgue. </type> <institution> Comptes Rendus de l'Academie des Sciences, Paris, </institution> <month> 154. </month>
Reference: <author> DePree, J. and Swartz, C. </author> <title> (1988) Introduction to Real Analysis. </title> <publisher> Wiley. </publisher>
Reference: <author> Dijkstra, E. W. </author> <title> (1976) A Discipline of Programming. </title> <publisher> Prentice-Hall. </publisher> <editor> van den Dries, L. </editor> <title> (1988) Alfred Tarski's elimination theory for real closed fields. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 53, </volume> <pages> 7-19. </pages>
Reference: <editor> Dutertre, B. </editor> <booktitle> (1996) Elements of mathematical analysis in PVS. Unpublished; to appear in the Proceedings of the 1996 International Conference on Theorem Proving in Higher Order Logics, published by Springer-Verlag in the Lecture Notes in Computer Science series. </booktitle>
Reference: <editor> Ebbinghaus, H.-D. et al. </editor> <title> (1990) Numbers, Volume 123 of Graduate Texts in Mathematics. Springer-Verlag. </title> <booktitle> Translation of the 2nd edition of `Zahlen', </booktitle> <year> 1988. </year>
Reference: <author> Ehrlich, P. (ed.) </author> <title> (1994) Real numbers, Generalizations of the Reals, and Theories of Continua, Volume 242 of Synthese Library. </title> <publisher> Kluwer. </publisher>
Reference: <author> Einwohner, T. H. and Fateman, R. J. </author> <title> (1995) Searching techniques for integral tables. </title> <booktitle> See Staples and Moffat (1995), </booktitle> <pages> pp. 133-139. </pages>
Reference: <author> Elbers, H. </author> <title> (1996) Construction of short formal proofs of primality. </title> <type> Preprint. </type>
Reference: <author> Enderton, H. B. </author> <title> (1972) A Mathematical Introduction to Logic. </title> <publisher> Academic Press. </publisher>
Reference: <author> Engeler, E. </author> <title> (1993) Foundations of Mathematics: Questions of Analysis, Geometry and Algorithmics. Springer-Verlag. Original German edition Metamathematik der Elementarmathematik in the Series Hochschultext. </title>
Reference: <author> Engelking, R. </author> <title> (1989) General Topology, Volume 6 of Sigma series in pure mathematics. </title> <publisher> Heldermann Verlag. </publisher>
Reference: <author> Erdos, P. and Szekeres, G. </author> <title> (1935) On a combinatorial problem in geometry. </title> <journal> Com-positio Mathematica, </journal> <volume> 2, </volume> <pages> 463-470. </pages>
Reference: <author> Ernst, G. W. and Hookway, R. J. </author> <title> (1976) The use of higher order logic in program verification. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-25, </volume> <pages> 844-851. </pages>
Reference: <author> Fagin, R. </author> <title> (1974) Generalized first-order spectra and polynomial-time recognizable sets. </title> <editor> In Karp, R. M. (ed.), </editor> <booktitle> Complexity of Computation, Volume 7 of SIAM-AMS Proceedings, </booktitle> <pages> pp. 43-73. </pages> <publisher> American Mathematical Society. </publisher>
Reference: <author> Faltin, F., Metropolis, N., Ross, B., and Rota, G.-C. </author> <title> (1975) The real numbers as a wreath product. </title> <booktitle> Advances in Mathematics, </booktitle> <volume> 16, </volume> <pages> 278-304. </pages>
Reference: <author> Farmer, W., Guttman, J., and Thayer, J. </author> <year> (1990) </year> <month> IMPS: </month> <title> an interactive mathematical proof system. </title> <editor> In Stickel, M. E. (ed.), </editor> <booktitle> 10th International Conference on Automated Deduction, Volume 449 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 653-654. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Much of the construction, as well as some work on completing a general metric space, has been done by Jones (1991) in the LEGO prover (which is also based on a constructive logic). Mizar (Trybulec 1978), IMPS <ref> (Farmer, Guttman, and Thayer 1990) </ref> and PVS (Owre, Rushby, and Shankar 1992), among other systems, assume axioms for the real numbers in their initial theory. This is clearly a reasonable policy if the objective is to get quickly to some more interesting high-level mathematics. <p> Then, on the understanding that s = t means `s and t are defined and equal', the statement lim s = l would, assuming that l is defined, incorporate the information that s does actually converge. Such a logic is implemented by the IMPS system <ref> (Farmer, Guttman, and Thayer 1990) </ref>, which was expressly designed for the formalization of mathematics, and otherwise has a type theory not dissimilar to HOL's. <p> Many of these are established using an automated tool which we discuss later. A number of theorem provers have been used to formalize significant parts of analysis. Many Mizar articles in the Journal of Formalized Mathematics are devoted to such topics. 11 The IMPS system <ref> (Farmer, Guttman, and Thayer 1990) </ref> was designed with a view to doing analysis at a fairly abstract level, and several examples are described by Farmer and Thayer (1991).
Reference: <author> Farmer, W. M. and Thayer, F. J. </author> <title> (1991) Two computer-supported proofs in metric space topology. </title> <journal> Notices of the American Mathematical Society, </journal> <volume> 38, </volume> <pages> 1133-1138. </pages>
Reference: <author> Feferman, S. </author> <title> (1964) The Number Systems: Foundations of Algebra and Analysis. </title> <publisher> Addison-Wesley Series in Mathematics. Addison-Wesley. </publisher>
Reference: <author> Fike, C. T. </author> <title> (1968) Computer Evaluation of Mathematical Functions. Series in Automatic Computation. Prentice-Hall. 140 BIBLIOGRAPHY Forester, </title> <editor> M. B. </editor> <title> (1993) Formalizing constructive real analysis. </title> <type> Technical Report CORNELLCS:TR93-1382, </type> <institution> Cornell University Department of Computer Science. </institution>
Reference: <author> Freyd, P. J. and Scedrov, A. </author> <title> (1990) Categories, </title> <publisher> allegories. North-Holland. </publisher>
Reference: <author> Gabbay, D. </author> <title> (1973) The undecidability of intuitionistic theories of algebraically closed fields and real closed fields. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 38, </volume> <pages> 86-92. </pages>
Reference: <author> Goldberg, D. </author> <title> (1991) What every computer scientist should know about floating point arithmetic. </title> <journal> ACM Computing Surveys, </journal> <volume> 23, </volume> <pages> 5-48. </pages>
Reference: <author> Gordon, M. J. C. </author> <title> (1985) Why higher-order logic is a good formalism for specifying and verifying hardware. </title> <type> Technical Report 77, </type> <institution> University of Cambridge Computer Laboratory. </institution>
Reference: <author> Gordon, M. J. C. </author> <title> (1989) Mechanizing programming logics in higher order logic. </title>
Reference: <editor> In Birtwistle, G. and Subrahmanyam, P. A. (eds.), </editor> <booktitle> Current Trends in Hardware Verification and Automated Theorem Proving, </booktitle> <pages> pp. 387-439. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Gordon, M. J. C. </author> <title> (1994) Merging HOL with set theory: preliminary experiments. </title> <type> Technical Report 353, </type> <institution> University of Cambridge Computer Laboratory Gordon, </institution> <note> M. </note> <author> J. C. </author> <title> (1996) From LCF to HOL and beyond. Festschrift for Robin Milner, </title> <note> to appear. </note>
Reference: <author> Gordon, M. J. C. and Melham, T. F. </author> <title> (1993) Introduction to HOL: a theorem proving environment for higher order logic. </title> <publisher> Cambridge University Press. </publisher>
Reference-contexts: However these primitive inference rules are functions in the ML programming language 6 and users may write arbitrary ML programs that automate common inference patterns, and even mimic automatic proof procedures, breaking them down to the primitive inferences. For example, the HOL system <ref> (Gordon and Melham 1993) </ref> has derived rules for rewriting, associative-commutative rearrangement, linear arithmetic, tautology checking, inductive definitions and free recursive type definitions, among others. Should users require application-specific proof procedures, they can implement them using the same methodology.
Reference: <author> Gordon, M. J. C., Milner, R., and Wadsworth, C. P. </author> <title> (1979) Edinburgh LCF: A Mechanised Logic of Computation, </title> <booktitle> Volume 78 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: For example, simple algebraic steps such as rearrangements under associative-commutative laws need to be justified by a detailed series of applications of those laws. It seems, then, that there are reasons for dissatisfaction with both approaches, and the Edinburgh LCF project <ref> (Gordon, Milner, and Wadsworth 1979) </ref> attempted to combine their best features. In LCF-style systems, a repertoire of simple logical primitives is provided, which users may invoke manually.
Reference: <author> Grothendieck, A., Artin, M., and Verdier, J. L. </author> <title> (1972) Theorie des Topos et Co-homologie Etale des Schemas (SGA 4), </title> <booktitle> vol. 1, Volume 269 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It was introduced by Tarski (1938), and subsequently popularized by Grothendieck in the 60s | SGA 4 <ref> (Grothendieck, Artin, and Verdier 1972) </ref> has an appendix on this topic attributed to `N. Bourbaki'. 8.4. COMPUTER ALGEBRA SYSTEMS 129 theory has certainly been hard work, but only needed to be done once. We can now have complete confidence in the soundness of the resulting theory.
Reference: <author> Haggarty, R. </author> <title> (1989) Fundamentals of Mathematical Analysis. </title> <publisher> Addison-Wesley. </publisher>
Reference: <author> Hanna, F. K. and Daeche, N. </author> <title> (1986) Specification and verification using higher-order logic: A case study. </title> <editor> In Milne, G. and Subrahmanyam, P. A. (eds.), </editor> <booktitle> Formal Aspects of VLSI Design: Proceedings of the 1985 Edinburgh Workshop on VLSI, </booktitle> <pages> pp. 179-213. </pages>
Reference: <author> Hanna, K. </author> <title> (1994) Reasoning about real circuits. </title> <editor> In Melham, T. F. and Camilleri, J. (eds.), </editor> <title> Higher Order Logic Theorem Proving and Its Applications: </title> <booktitle> Proceedings of the 7th International Workshop, Volume 859 of Lecture Notes in Computer Science, Valletta, Malta, </booktitle> <pages> pp. 235-253. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: We could try formalizing many interesting and relevant branches of mathematics such as complex analysis, differential equations, integral transforms, approximation methods and classical dynamics. As for applications, we could for example use our work to link high-level verification efforts with analogue signal-level details <ref> (Hanna 1994) </ref>.
Reference: <author> Harrison, J. R. </author> <title> (1991) The HOL reduce library. Distributed with HOL system. </title>
Reference-contexts: By programming in the usual LCF manner, it's possible to implement conversions that will repeatedly use the definitions of the numerals and the arithmetic operators to give the answer. Actually, the first such system was programmed by the present author relatively recently <ref> (Harrison 1991) </ref> as the so-called reduce library. For example given `3 + 5' it might evaluate it as follows (in fact it uses a slightly more efficient variant): 55 56 CHAPTER 4.
Reference: <author> Harrison, J. R. </author> <title> (1994) Constructing the real numbers in HOL. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 5, </volume> <pages> 35-59. </pages>
Reference-contexts: The Dedekind method involves a bit of work verifying the cut properties, and again we have to construct the rationals first. On the other hand the proofs are all fairly routine, and it's fairly easy to chug through them in HOL. In fact a previous version of this work <ref> (Harrison 1994) </ref> was based on Dedekind cuts. With hindsight, we have decided that an alternative approach is slightly easier. This has been formalized in HOL, and turned out to be a bit better (at least based on size of proof) than the Dedekind construction. <p> His effort took much longer than ours, which though a long time in the planning, took only a few days to translate into HOL. Even an early version of the work <ref> (Harrison 1994) </ref> done when the author was still a relative novice, took only 2 weeks. The comparison is rather unfair in that Jutting did much on Automath itself during his work, and advances in computer technology must have made things easier.
Reference: <author> Harrison, J. R. </author> <title> (1995a) Inductive definitions: automation and application. </title> <editor> In Wind-ley, P. J., Schubert, T., and Alves-Foss, J. (eds.), </editor> <title> Higher Order Logic Theorem Proving and Its Applications: </title> <booktitle> Proceedings of the 8th International Workshop, Volume 971 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 200-213. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: That concludes the logic proper, and in fact quite a bit of interesting mathematics, e.g. infinitary inductive definitions can be developed just from that basis, without, moreover, using the " operator <ref> (Harrison 1995a) </ref>. But for general use we adopt three more axioms. First there is an axiom of extensionality, which we encode as an -conversion theorem: ` (x: t x) = t.
References-found: 88

