URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/jblythe/papers/oopsla92.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/usr/jblythe/Mosaic/papers.html
Root-URL: 
Abstract: We describe our experience with the object-oriented design methodology OMT [19] applied to a project in an undergraduate software engineering course at Carnegie Mellon University. The project involved 30 students previously unfamiliar with object-oriented modeling. They designed and implemented a system of 125 classes (27,000 lines of C++ and C code) in the relatively short time of 15 weeks. We describe the overall structure of the project and the system model, the usefulness of OMT and its impact on communication, and discuss some of the problems encoun tered during the development of the system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arnold, S. Bodoff, D. Coleman, H. Gilchrist and F. Hayes. </author> <title> An Evaluation of Five Object-Oriented Development Methods , Journal of Object-Oriented Programming, </title> <journal> Special issue on Analysis & Design, </journal> <pages> 107-121, </pages> <year> 1991. </year>
Reference-contexts: Werth [23] describes a project course with project teams of 5-6 students using the MPW/ MacApp programming environment. The course was given high marks by the students, but no experience in the use of analysis or design tools is reported. A comparison of recent object-oriented methods <ref> [1] </ref> bases the comparison on features such as concepts, models, and support of the process concept, but not on the actual experience with the methodologies. <p> Recently there has been a profusion of object-oriented analysis and design methods <ref> [1] </ref>, and with so many methodologies emerging, we need to know which one of the methodologies to choose, how much it will cost us, and whether it will eventually improve our effectiveness in producing complex software systems.
Reference: [2] <author> G. Booch. </author> <title> Object-Oriented Design with Applications, </title> <publisher> Benjamin Cummings, </publisher> <year> 1991. </year>
Reference-contexts: Most of the students entering our course dont have extensive programming experience in Ada and, while the same could be said for C++, we felt the use of Ada would lead to a steeper learning curve. HOOD [11] still relies on SA/SD for the requirements analysis. Boochs methodology <ref> [2] </ref> looked more powerful than OMT, but we chose OMT because it seemed to strike the right balance between simplicity and expressive power, which implied that it would be teachable within a semester and yet still be useful as a design tool for a moderately complex project The other problems we <p> The task of the Tools group was to develop and extract reusable objects. The Tools group was the most interesting group from an object-oriented point of view. Booch <ref> [2] </ref> recommends a toolsmith as a new specific position in a object-oriented software development team, and Gibson [8] advocates the framework team focus on abstractions and mechanisms. We were eager to apply these concepts in the classroom setting. <p> It was therefore very important that the modeling technique and its associated editor be easy to learn. We found this to be the case. OMT, while not as complex as Boochs object modeling methodology <ref> [2] </ref> and lacking expressive power in some circum START Initialize System Load Databases do: Realize Default Naviga do: determine do: Enter window event loop tional object No event available queries Navigational Object Mouse click on Graphical object Select function more.... no multiple select do: unselect currently selected graphical objects do: highlight
Reference: [3] <author> G. Booch. </author> <title> The Booch Method: Notation , Rational, </title> <publisher> Inc., </publisher> <address> Santa Clara, CA, </address> <year> 1992. </year>
Reference-contexts: Bulletin boards have proven to be very powerful communication tools that add significantly to the ability to realize single project courses. 1. Booch has recently introduced an extended notation of the Booch method which includes a subset (Booch lite) <ref> [3] </ref>. The extended notation comes with a tool called ROSE. In the following we report on our experience with OMT in developing a moderately large system, Inter active Pittsburgh , in a single project course in the Fall of 1991.
Reference: [4] <author> G. Booch. </author> <title> The Booch Method: Process and Pragmatics , Rational,Inc.,Santa Clara, </title> <publisher> CA,1992. </publisher>
Reference-contexts: In particular, we advised them to be ready to deviate from the above approach in case difficulties arose. As Booch points out, There is no tool and no methodology that magically replaces the basic human creativity that is necessary to successfully design, implement and deploy a complex software system <ref> [4] </ref>. We found that such a pragmatic attitude towards the system modeling process worked very well with the students.
Reference: [5] <author> R. Buhr. </author> <title> Practical Visual Techniques in System Design: with Applications to Ada , Prentice Hall, </title> <address> Englewood Cliffs, NJ, </address> <year> 1991. </year>
Reference-contexts: We did not choose the other methods for various reasons. Wirfs-Brocks methodology [24] also looked very attractive but is not supported by a tool. Buhrs methodology <ref> [5] </ref> is tied to Ada packages. Most of the students entering our course dont have extensive programming experience in Ada and, while the same could be said for C++, we felt the use of Ada would lead to a steeper learning curve.
Reference: [6] <author> B. Bruegge, J. Cheng and M. </author> <note> Shaw. </note>
Reference-contexts: This document was created with FrameMaker 4.0.4 stantly experimenting with different answers to and levels of importance of each of these questions. In the fall of 1989, for example, we used object-based design without any formal design tools at all <ref> [6] </ref>. Instead we asked our students to reuse existing software facilities as much as possible to create a bridge between electronic mail and facsimile transmission provided by a special fax board running on a personal computer. <p> In Interactive Maps we had encouraged the students to switch all of the roles among the group members. The idea was to make it possible for every student to learn about the problems associated with each role, but the concept turned out to be unmanageable <ref> [6] </ref>. Some intergroup interface problems persisted across a personnel change, but students who had switched roles for example, from liaison to document editor often did not feel responsible for the liaison problems after their switch.
References-found: 6

