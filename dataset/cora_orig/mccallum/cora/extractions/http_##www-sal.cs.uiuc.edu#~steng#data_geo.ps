URL: http://www-sal.cs.uiuc.edu/~steng/data_geo.ps
Refering-URL: http://www-sal.cs.uiuc.edu/~steng/data_geo.html
Root-URL: http://www.cs.uiuc.edu
Title: A Data-Parallel Implementation of the Geometric Partitioning Algorithm  
Author: Yu Charlie Hu Shang-Hua Teng S. Lennart Johnsson 
Date: March 1997.  
Address: Minneapolis, MN,  
Affiliation: Computing,  
Note: 8th SIAM Conference on Parallel Processing for Scientific  
Abstract: We present a data-parallel, High Performance Fortran (HPF) implementation of the geometric partitioning algorithm. The geometric partitioning algorithm has provably good partitioning quality. To our knowledge, our implementation is the first data-parallel implementation of the algorithm. Our data-parallel formulation makes extensive use of segmented prefix sums and parallel selections, and provide a data-parallel procedure for geometric sampling. Experiments in partitioning particles for load-balance and data interactions as required in hierarchical N-body algorithms and iterative algorithms for the solution of equilibrium equations on unstructured meshes by the finite element method have shown that the geometric partitioning algorithm has an efficient data-parallel formulation. Moreover, the quality of the generated partitions is competitive with that offered by the spectral bisection technique and better than the quality offered by other partitioning heuristics.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, P. Seymour, and R. Thomas. </author> <title> A separator theorem for graphs with an excluded minor and applications. </title> <booktitle> In Proc. of the 22th Annual Symp. on Theory of Computing. ACM, </booktitle> <year> 1990. </year>
Reference-contexts: The quality of the partition measured in terms of evenness of workload among partitions and need for interpartition references affects the efficiency in using the system resources. Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically <ref> [1, 4, 12, 13, 14, 16] </ref>, and experimentally [5, 18, 8, 11]. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. <p> Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. 2 Heuristic partitioning algorithms that provide strong guarantees for the quality of the partitioning have been developed for certain classes of graphs, such as planar graphs [13], bounded genus graphs [4], bounded forbidden minor graphs <ref> [1] </ref>, nearest neighbor graphs, well-shaped meshes [16, 20], and hierarchical N-body simulation graphs [23]. The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis [16] has a practical data-parallel formulation/implementation.
Reference: [2] <author> K. Clarkson, D. Eppstein, G. L. Miller, C. Sturtivant, and S.-H. Teng. </author> <title> Approximating center points with and without linear programming. </title> <booktitle> In Proc. of 9th ACM Symp. on Computational Geometry, </booktitle> <pages> pages 91-98, </pages> <year> 1993. </year>
Reference-contexts: We repeat the grouping and reduction. Eventually the set is reduced to a single point which is the approximate centerpoint. The above reduction process forms a complete d + 2-way tree and can be naturally expressed in data-parallel paradigm as a tree reduction. We refer readers to <ref> [2] </ref> for a proof of the quality of the above reduction process for centerpoint approximation. For 2-way partitioning, we only need to compute a single approximate centerpoint from 1000 sample points. We perform this on a single processor and broadcast the result to all other processors.
Reference: [3] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <address> NY, </address> <year> 1987. </year>
Reference-contexts: Every finite point set in IR d has a centerpoint <ref> [3, Section 4] </ref>. We now describe the algorithm of Miller-Teng-Thurston-Vavasis [15, 16]. Algorithm Geometric Partitioning Input M = (A; xyz); 1. Project Up. Let xyzw = (xyz): 2. Find Centerpoint. Find a centerpoint c of xyzw. 3. Conformal Map: Rotate and Dilate.
Reference: [4] <author> J. R. Gilbert, J. P. Hutchinson, and R. E. Tarjan. </author> <title> A separator theorem for graphs of bounded genus. </title> <journal> J. Algorithms, </journal> <volume> 5 pp391-407, </volume> <year> 1984. </year>
Reference-contexts: The quality of the partition measured in terms of evenness of workload among partitions and need for interpartition references affects the efficiency in using the system resources. Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically <ref> [1, 4, 12, 13, 14, 16] </ref>, and experimentally [5, 18, 8, 11]. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. <p> Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. 2 Heuristic partitioning algorithms that provide strong guarantees for the quality of the partitioning have been developed for certain classes of graphs, such as planar graphs [13], bounded genus graphs <ref> [4] </ref>, bounded forbidden minor graphs [1], nearest neighbor graphs, well-shaped meshes [16, 20], and hierarchical N-body simulation graphs [23]. The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis [16] has a practical data-parallel formulation/implementation.
Reference: [5] <author> J. R. Gilbert, G. L. Miller, and S.-H. Teng. </author> <title> Geometric mesh partitioning: Implementation and experiments. </title> <note> In SIAM J. Sci. Comput., to appear 1997. </note>
Reference-contexts: Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically [1, 4, 12, 13, 14, 16], and experimentally <ref> [5, 18, 8, 11] </ref>. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. y Department of Computer Science, University of Minnesota, Minneapolis, MN 55455. <p> The geometric partitioning algorithm, as its name suggests, is based on the geometric structure of a mesh. The geometric information is used not only for proving the guaranteed quality of the partitioning of the algorithm, but also, as shown by Gilbert, Miller, and Teng <ref> [5] </ref>, for efficient algorithm design and implementation. <p> Then jxyz I j; jxyz E j (d + 1)=(d + 2) n, and with probability at least 1=2, the number of edges between M I and M E is O (n 11=d ). 3 Data-Parallel Formulations A Matlab <ref> [5] </ref> implementation of the geometric partitioning algorithm has shown that the algorithm generates partitionings competitive with those rendered by other partitioning algorithms. <p> Once we decide the final partition, we can apply gather and scatter to construct arrays xyz I , xyz E , A I , and A E . We now discuss Step 2. As suggested in [15] and implemented in <ref> [5] </ref>, an efficient way to find a centerpoint of a point set P is to use geometric sampling. To find an approximate centerpoint, we first choose a uniform sample W of P . For practical applications, the size of W is about 1000. <p> Therefore sampling can be used to drastically reduce the amount of calculations for centerpoint computation. However, finding the centerpoint for 1000 points is still expensive. We, as in <ref> [5] </ref>, use an additional idea from [15] for finding an approximate centerpoint. This idea is based on a concept called Radon point. <p> This work positively answers the question posed by Gilbert, Miller, and Teng <ref> [5] </ref> "A chief application of graph partitioning is to distribute a computational mesh across a distributed-memory parallel machine.
Reference: [6] <author> T. Hagerup and C. Rub. </author> <title> A guided tour of Chernoff bounds. </title> <journal> Info. Proc. Let., </journal> <volume> 33 </volume> <pages> 305-308, </pages> <year> 1990. </year>
Reference-contexts: A single permutation of all mesh data at the end of the partitioning procedure suffice to order submeshes into consecutive sub-array locations. The basic idea is sampling. It is based on the following simple probabilistic fact. Lemma 3.2 (Chernoff-Hoeffding <ref> [6] </ref>). There is a constant c &gt; 1 such that the following is true: Suppose there are L red balls in a set of n balls.

Reference: [8] <author> B. Hendrickson and R. Leland. </author> <title> The Chaco user's guide, Version 2.0. </title> <type> Technical Report SAND93-2339, </type> <institution> Sandia National Laboratories, </institution> <address> Albuquerque, NM, </address> <year> 1993. </year>
Reference-contexts: Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically [1, 4, 12, 13, 14, 16], and experimentally <ref> [5, 18, 8, 11] </ref>. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. y Department of Computer Science, University of Minnesota, Minneapolis, MN 55455.
Reference: [9] <author> HPF Forum. </author> <title> HPF Language Specification, </title> <type> version 1.0. </type> <institution> Sci. Prog., 2(1-2):1-170, </institution> <year> 1993. </year>
Reference-contexts: From the scan information and the local indices on each processor, determine the indices of all mesh vertices and edges in the final rearranged array for the k-way partitioned mesh. Permute the mesh according to these indices. 4 HPF Implementation and Experiments High Performance Fortran <ref> [9] </ref> consists of Fortran 90 with extensions mainly for data management.
Reference: [10] <author> Y. C. Hu and S. L. Johnsson and S.-H. Teng. </author> <title> A data-parallel adaptive N-body method. </title> <booktitle> In Proc. of the 8th SIAM Conf. on Parallel Processing for Scientific Computing, </booktitle> <month> March </month> <year> 1997. </year>
Reference-contexts: The HPF implementation of the geometric partitioning (GEO) algorithm is incorporated into a data-parallel adaptive O (N ) N-body code (also in HPF) <ref> [10] </ref>. Table 1 compares the partitioning results of GEO and various other partitioning algorithms in simulations of one million particles having a 2-D Plummer distribution and at most 64 particles per leaf-level box. Two separate arrays representing active boxes in List-1 and List-2 interactions of the adaptive Anderson's method [10] are <p> HPF) <ref> [10] </ref>. Table 1 compares the partitioning results of GEO and various other partitioning algorithms in simulations of one million particles having a 2-D Plummer distribution and at most 64 particles per leaf-level box. Two separate arrays representing active boxes in List-1 and List-2 interactions of the adaptive Anderson's method [10] are partitioned. The number of remote references and floating-point operations per partition are shown. The recursive spectral bisection (RSB) [18, 22] results are based on the RSB routine in the Connection Machine Scientific Software Library, CMSSL [24], which does not perform weighted partitioning. <p> The other partitioning algorithms are heuristic, including orthogonal recursive bisection (ORB), partitioning based on the Morton and Peano-Hilbert ordering [25], rotational recursive bisection (RRB), and the level-by-level ordering (LBL) <ref> [10] </ref>. From Table 1, GEO with ten trials of great circles gives slightly more balanced computation than with two trials, but the edge cut is actually worse. Compared with Morton, GEO gives better partitions for List-1, and almost the same ones for List-2, but is much more expensive.
Reference: [11] <author> G. Karypis and V. Kumar. METIS: </author> <title> Unstructured Graph Partitioning and Sparse Matrix Ordering System, </title> <note> Version 2.0 (1995), </note> <institution> Dept. of Computer Science, University of Minnesota. </institution>
Reference-contexts: Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically [1, 4, 12, 13, 14, 16], and experimentally <ref> [5, 18, 8, 11] </ref>. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. y Department of Computer Science, University of Minnesota, Minneapolis, MN 55455.
Reference: [12] <author> F. T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multi commodity flow problems with applications to approximation algorithms. </title> <booktitle> In 29th Annual Symp. on Foundations of Computer Science, </booktitle> <pages> pp 422-431, </pages> <year> 1988. </year>
Reference-contexts: The quality of the partition measured in terms of evenness of workload among partitions and need for interpartition references affects the efficiency in using the system resources. Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically <ref> [1, 4, 12, 13, 14, 16] </ref>, and experimentally [5, 18, 8, 11]. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138.
Reference: [13] <author> R. J. Lipton and R. E. Tarjan. </author> <title> A separator theorem for planar graphs. </title> <journal> SIAM J. of Appl. Math., </journal> <volume> 36 </volume> <pages> 177-189, </pages> <month> April </month> <year> 1979. </year>
Reference-contexts: The quality of the partition measured in terms of evenness of workload among partitions and need for interpartition references affects the efficiency in using the system resources. Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically <ref> [1, 4, 12, 13, 14, 16] </ref>, and experimentally [5, 18, 8, 11]. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. <p> Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. 2 Heuristic partitioning algorithms that provide strong guarantees for the quality of the partitioning have been developed for certain classes of graphs, such as planar graphs <ref> [13] </ref>, bounded genus graphs [4], bounded forbidden minor graphs [1], nearest neighbor graphs, well-shaped meshes [16, 20], and hierarchical N-body simulation graphs [23]. The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis [16] has a practical data-parallel formulation/implementation.
Reference: [14] <author> G. L. Miller. </author> <title> Finding small simple cycle separators for 2-connected planar graphs. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 32(3) </volume> <pages> 265-279, </pages> <month> June </month> <year> 1986. </year>
Reference-contexts: The quality of the partition measured in terms of evenness of workload among partitions and need for interpartition references affects the efficiency in using the system resources. Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically <ref> [1, 4, 12, 13, 14, 16] </ref>, and experimentally [5, 18, 8, 11]. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138.
Reference: [15] <author> G. L. Miller, S.-H. Teng, W. Thurston, and S. A. Vavasis. </author> <title> Automatic mesh partitioning. </title> <editor> In A. George, J. Gilbert, and J. Liu, editors, </editor> <title> Sparse Matrix Computations: Graph Theory Issues and Algorithms, IMA Volumes in Mathematics and its Applications. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Every finite point set in IR d has a centerpoint [3, Section 4]. We now describe the algorithm of Miller-Teng-Thurston-Vavasis <ref> [15, 16] </ref>. Algorithm Geometric Partitioning Input M = (A; xyz); 1. Project Up. Let xyzw = (xyz): 2. Find Centerpoint. Find a centerpoint c of xyzw. 3. Conformal Map: Rotate and Dilate. <p> Once we decide the final partition, we can apply gather and scatter to construct arrays xyz I , xyz E , A I , and A E . We now discuss Step 2. As suggested in <ref> [15] </ref> and implemented in [5], an efficient way to find a centerpoint of a point set P is to use geometric sampling. To find an approximate centerpoint, we first choose a uniform sample W of P . For practical applications, the size of W is about 1000. <p> Therefore sampling can be used to drastically reduce the amount of calculations for centerpoint computation. However, finding the centerpoint for 1000 points is still expensive. We, as in [5], use an additional idea from <ref> [15] </ref> for finding an approximate centerpoint. This idea is based on a concept called Radon point.
Reference: [16] <author> G. L. Miller, S.-H. Teng, W. Thurston, and S. A. Vavasis. </author> <title> Finite element meshes and geometric separators. </title> <journal> SIAM J. Scientific Computing, </journal> <note> to appear, </note> <year> 1997. </year>
Reference-contexts: The quality of the partition measured in terms of evenness of workload among partitions and need for interpartition references affects the efficiency in using the system resources. Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically <ref> [1, 4, 12, 13, 14, 16] </ref>, and experimentally [5, 18, 8, 11]. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. <p> Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. 2 Heuristic partitioning algorithms that provide strong guarantees for the quality of the partitioning have been developed for certain classes of graphs, such as planar graphs [13], bounded genus graphs [4], bounded forbidden minor graphs [1], nearest neighbor graphs, well-shaped meshes <ref> [16, 20] </ref>, and hierarchical N-body simulation graphs [23]. The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis [16] has a practical data-parallel formulation/implementation. The geometric partitioning algorithm, as its name suggests, is based on the geometric structure of a mesh. <p> The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis <ref> [16] </ref> has a practical data-parallel formulation/implementation. The geometric partitioning algorithm, as its name suggests, is based on the geometric structure of a mesh. <p> Then, compute the intersection of S d with the line in IR d+1 passing through p 0 and (0; 0; : : : ; 0; 1) T . This intersection point is (p). The formula for and the inverse of are very simple and can be found in <ref> [16] </ref>. The second concept is that of a centerpoint. A centerpoint of a given set of points is a point (not necessarily one of the given points) such that every (hyper)plane through the centerpoint divides the given points approximately evenly (in the ratio d:1 or better, in IR d ). <p> Every finite point set in IR d has a centerpoint [3, Section 4]. We now describe the algorithm of Miller-Teng-Thurston-Vavasis <ref> [15, 16] </ref>. Algorithm Geometric Partitioning Input M = (A; xyz); 1. Project Up. Let xyzw = (xyz): 2. Find Centerpoint. Find a centerpoint c of xyzw. 3. Conformal Map: Rotate and Dilate. <p> Therefore the mapped vertices are divided approximately evenly by every plane through the origin|that is, by every great circle on the unit sphere in IR d+1 . Miller, Teng, Thurston, and Vavasis <ref> [16] </ref> proved the following mathematical result on the performance of the algorithm given above for the class of well-shaped meshes. We refer the reader to [16] for the detailed definition of well-shaped meshes. For this paper, well-shaped meshes include all structured and unstructured finite element meshes. Theorem 2.1 (Geometric Partitioning [16]). <p> Miller, Teng, Thurston, and Vavasis <ref> [16] </ref> proved the following mathematical result on the performance of the algorithm given above for the class of well-shaped meshes. We refer the reader to [16] for the detailed definition of well-shaped meshes. For this paper, well-shaped meshes include all structured and unstructured finite element meshes. Theorem 2.1 (Geometric Partitioning [16]). Let M = (A; xyz) be a well-shaped mesh in IR d of n vertices and e edges. <p> <ref> [16] </ref> proved the following mathematical result on the performance of the algorithm given above for the class of well-shaped meshes. We refer the reader to [16] for the detailed definition of well-shaped meshes. For this paper, well-shaped meshes include all structured and unstructured finite element meshes. Theorem 2.1 (Geometric Partitioning [16]). Let M = (A; xyz) be a well-shaped mesh in IR d of n vertices and e edges. <p> Every set of d + 2 points has a Radon point and can be found by solving a linear system on d + 2 variables. The basic strategy from <ref> [16] </ref> is to repeatedly replace randomly chosen groups of d + 2 points with their Radon points. We can first randomly permute the sample array and then divide the sample into groups of d + 2 points and apply the Radon reduction to each group. <p> The partition number of a mesh vertex is the label of the submesh that contains the mesh vertex. In our formulation, we will recursively apply the 2-way partitioning method. For simplicity, we assume that k is a power of 2. Theorem 3.1 (Multi-Way Geometry Partitioning <ref> [16, 19] </ref>). Let M = (A; xyz) be a well-shaped mesh in IR d of n vertices and e edges. For any positive integer k, the recursive application of the geometry partitioning algorithm finds a k-way partitioning which cuts O (k 1=d n 11=d ) edges.
Reference: [17] <institution> The Portland Group, Inc. </institution> <note> pghpf Reference Manual, Version 2.1, </note> <year> 1996. </year>
Reference-contexts: We have chosen pghpf <ref> [17] </ref>, the PGI HPF compiler, for our implementation mainly because it supports the complete set of HPF prefix functions which are heavily used in our data-parallel formulation.
Reference: [18] <author> A. Pothen, H. D. Simon, K.-P. Liou. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <journal> SIAM J. Matrix Anal. Appl. </journal> <volume> 11 (3): </volume> <pages> 430-452, </pages> <month> July, </month> <year> 1990. </year>
Reference-contexts: Mesh partitioning is an important case of general graph partitioning. General graph partitioning has been an active field of research, both theoretically [1, 4, 12, 13, 14, 16], and experimentally <ref> [5, 18, 8, 11] </ref>. Finding an optimal partitioning is an NP-hard problem. fl Aiken Computation Laboratory, Harvard University, Cambridge, MA 02138. Supported by the Air Force Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. y Department of Computer Science, University of Minnesota, Minneapolis, MN 55455. <p> Two separate arrays representing active boxes in List-1 and List-2 interactions of the adaptive Anderson's method [10] are partitioned. The number of remote references and floating-point operations per partition are shown. The recursive spectral bisection (RSB) <ref> [18, 22] </ref> results are based on the RSB routine in the Connection Machine Scientific Software Library, CMSSL [24], which does not perform weighted partitioning.
Reference: [19] <author> H. D. Simon and S.-H. Teng. </author> <title> How good is recursive bisection? SIAM J. </title> <institution> Sci. Comput., </institution> <year> 1997. </year>
Reference-contexts: The partition number of a mesh vertex is the label of the submesh that contains the mesh vertex. In our formulation, we will recursively apply the 2-way partitioning method. For simplicity, we assume that k is a power of 2. Theorem 3.1 (Multi-Way Geometry Partitioning <ref> [16, 19] </ref>). Let M = (A; xyz) be a well-shaped mesh in IR d of n vertices and e edges. For any positive integer k, the recursive application of the geometry partitioning algorithm finds a k-way partitioning which cuts O (k 1=d n 11=d ) edges.
Reference: [20] <author> D. A. Spielman and S.-H. Teng. </author> <title> Spectral partitioning works: planar graphs and finite element meshes. </title> <booktitle> In Proc. of the 37th Annual Symp. on Foundation of Computer Science, </booktitle> <pages> 96-107, </pages> <publisher> IEEE. </publisher>
Reference-contexts: Office of Scientific Research through grants F49620-93-1-0480 and F49620-96-1-0289. 2 Heuristic partitioning algorithms that provide strong guarantees for the quality of the partitioning have been developed for certain classes of graphs, such as planar graphs [13], bounded genus graphs [4], bounded forbidden minor graphs [1], nearest neighbor graphs, well-shaped meshes <ref> [16, 20] </ref>, and hierarchical N-body simulation graphs [23]. The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis [16] has a practical data-parallel formulation/implementation. The geometric partitioning algorithm, as its name suggests, is based on the geometric structure of a mesh.
Reference: [21] <author> S.-H. Teng. </author> <title> Points, Spheres, and Separators: a unified geometric approach to graph partitioning. </title> <type> PhD thesis, </type> <institution> Carnegie-Mellon University, </institution> <year> 1991. </year> <month> CMU-CS-91-184. </month>
Reference-contexts: To find an approximate centerpoint, we first choose a uniform sample W of P . For practical applications, the size of W is about 1000. It has been shown <ref> [21] </ref> that with high probability the centerpoint of W is a point whose worst hyperplane separation ratio for P is 1 : d + * for a very small *, 0 &lt; * &lt; 1. Therefore sampling can be used to drastically reduce the amount of calculations for centerpoint computation.
Reference: [22] <author> D. A. Spielman and S.-H. Teng. </author> <title> Spectral partitioning works: planar graphs and finite element meshes. </title> <booktitle> In 37th Annual Symp. on Foundation of Computer Science, </booktitle> <pages> pages 96-107, </pages> <year> 1996. </year>
Reference-contexts: Two separate arrays representing active boxes in List-1 and List-2 interactions of the adaptive Anderson's method [10] are partitioned. The number of remote references and floating-point operations per partition are shown. The recursive spectral bisection (RSB) <ref> [18, 22] </ref> results are based on the RSB routine in the Connection Machine Scientific Software Library, CMSSL [24], which does not perform weighted partitioning.
Reference: [23] <author> S.-H. Teng. </author> <title> Provably good partitioning and load balancing algorithms for parallel adaptive N-body simulation. </title> <note> to appear SIAM J. Scientific Computing, </note> <year> 1997. </year>
Reference-contexts: and F49620-96-1-0289. 2 Heuristic partitioning algorithms that provide strong guarantees for the quality of the partitioning have been developed for certain classes of graphs, such as planar graphs [13], bounded genus graphs [4], bounded forbidden minor graphs [1], nearest neighbor graphs, well-shaped meshes [16, 20], and hierarchical N-body simulation graphs <ref> [23] </ref>. The main objective of this work is to show that the geometric partitioning algorithm of Miller-Teng-Thurston-Vavasis [16] has a practical data-parallel formulation/implementation. The geometric partitioning algorithm, as its name suggests, is based on the geometric structure of a mesh.
Reference: [24] <institution> Thinking Machines Corp. CMSSL for CM Fortran, </institution> <note> Version 3.1, </note> <year> 1993. </year>
Reference-contexts: The number of remote references and floating-point operations per partition are shown. The recursive spectral bisection (RSB) [18, 22] results are based on the RSB routine in the Connection Machine Scientific Software Library, CMSSL <ref> [24] </ref>, which does not perform weighted partitioning. The other partitioning algorithms are heuristic, including orthogonal recursive bisection (ORB), partitioning based on the Morton and Peano-Hilbert ordering [25], rotational recursive bisection (RRB), and the level-by-level ordering (LBL) [10].
Reference: [25] <author> M. Warren and J. Salmon. </author> <title> A parallel hashed oct-tree N-body algorithm. </title> <booktitle> In Supercomputing'93, </booktitle> <pages> pages 12 - 21. </pages> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <year> 1993. </year>
Reference-contexts: The recursive spectral bisection (RSB) [18, 22] results are based on the RSB routine in the Connection Machine Scientific Software Library, CMSSL [24], which does not perform weighted partitioning. The other partitioning algorithms are heuristic, including orthogonal recursive bisection (ORB), partitioning based on the Morton and Peano-Hilbert ordering <ref> [25] </ref>, rotational recursive bisection (RRB), and the level-by-level ordering (LBL) [10]. From Table 1, GEO with ten trials of great circles gives slightly more balanced computation than with two trials, but the edge cut is actually worse.
References-found: 24

