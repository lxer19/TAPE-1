URL: http://www.cs.berkeley.edu/~iang/isaac/hardware/paper.ps
Refering-URL: http://www.cs.berkeley.edu/~iang/isaac/hardware/
Root-URL: 
Email: fiang,dawg@cs.berkeley.edu  
Title: Architectural considerations for cryptanalytic hardware  
Author: Ian Goldberg and David Wagner 
Abstract: We examine issues in high-performance cryptanalysis, focusing on the use of programmable logic. Several standard techniques from computer architecture are adapted and applied to this application. We present performance measurements for RC4, A5, DES, and CDMF; these measurements were taken from actual implementations. We conclude by estimating the resources needed to break these encryption algorithms.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ross Anderson. A5, </author> <month> June </month> <year> 1994. </year> <note> Post to sci.crypt newsgroup. Available on the Internet as http://chem.leeds.ac.uk/ICAMS/people/jon/a5.html. </note>
Reference-contexts: The details of the A5 algorithm were only recently revealed to the public <ref> [1] </ref>, so it is perhaps not surprising that it has received less attention. Several cryptographers' initial reaction was that there must be a trivial brute-force attack on A5 requiring 2 40 operations [26, 1]. <p> The details of the A5 algorithm were only recently revealed to the public [1], so it is perhaps not surprising that it has received less attention. Several cryptographers' initial reaction was that there must be a trivial brute-force attack on A5 requiring 2 40 operations <ref> [26, 1] </ref>. No such attack ever materialized, and it became clear that the matter was not so trivial as initially imagined [26, 2]. The current consensus appears to be that A5's strength is possibly somewhat more than a 40-bit cipher but less than its 64-bit key might indicate. <p> From this, we can determine evenly separated starting positions for each device in the search engine. We will now describe the design issues and analysis that were performed when we implemented various encryption algorithms in programmable logic. 5.2 A5 A5 <ref> [1] </ref> is the encryption algorithm used in GSM, the European standard for digital cellular telephones. It consists of three Fibonacci LFSRs of sizes 19, 22, and 23 respectively, which are initially loaded with the contents of the 64-bit key.
Reference: [2] <author> Ross Anderson, </author> <month> April </month> <year> 1996. </year> <type> Personal communication. </type>
Reference-contexts: Several cryptographers' initial reaction was that there must be a trivial brute-force attack on A5 requiring 2 40 operations [26, 1]. No such attack ever materialized, and it became clear that the matter was not so trivial as initially imagined <ref> [26, 2] </ref>. The current consensus appears to be that A5's strength is possibly somewhat more than a 40-bit cipher but less than its 64-bit key might indicate. There have not been any reports on CDMF exhaustive keysearch in the literature, either.
Reference: [3] <author> Adam Back. Another SSL breakage..., </author> <month> August </month> <year> 1995. </year> <note> Post to cypherpunks mailing list. Available on the Internet as http://dcs.ex.ac.uk/~aba/ssl/. </note>
Reference-contexts: To demonstrate the need for more secure encryption, Hal Finney challenged his fellow cypherpunks to break 40-bit RC4 [16]. Soon Adam Back, David Byers, and Eric Young announced <ref> [3] </ref> that they had successfully searched the 40-bit keyspace with a software implementation running on the idle cycles of several workstations. At the same time, Damien Doligez had also independently finished a succesful sweep of the RC4 40-bit keys [12], with the same software implementation. <p> Therefore, we concentrate on algorithms to break A5, RC4, CDMF, and DES. Software implementations running on general-purpose microcomputers have received perhaps the most attention <ref> [3, 12, 5, 10, 4] </ref>. To achieve maximum performance, though, we must also consider the tradeoffs associated with customizable hardware. We will focus mainly on hardware implementations of cryptanalytic algorithms; we then compare the tradeoffs between the hardware and software approaches.
Reference: [4] <author> Matt Blaze, Whitfield Diffie, Ronald L. Rivest, Bruce Schneier, Tsutomu Shimomura, Eric Thompson, and Michael Wiener. </author> <title> Minimal key lengths for symmetric ciphers to provide adequate commercial security: A report by an ad hoc group of cryptographers and computer scientists, </title> <month> January </month> <year> 1996. </year> <note> Available on the Internet as http://www.bsa.org/policy/encryption/cryptographers.html. </note>
Reference-contexts: Most of the experience with weak encryption systems has been with software cryptanalysis; yet programmable logic may be the most cost-effective method of assembling computational power for this problem. A recent paper <ref> [4] </ref> did briefly address the cost-effectiveness of programmable logic, but their estimate appears to be based on flawed assumptions. <p> This year an ad-hoc group of experts was convened to recommend appropriate cryptographic key lengths for corporate security; their report <ref> [4] </ref> was very influential. In this larger context, they very briefly surveyed the application of software, reconfigurable logic, and custom hardware to the brute-force cryptanalysis of 40-bit RC4 and (56-bit) DES. <p> Therefore, we concentrate on algorithms to break A5, RC4, CDMF, and DES. Software implementations running on general-purpose microcomputers have received perhaps the most attention <ref> [3, 12, 5, 10, 4] </ref>. To achieve maximum performance, though, we must also consider the tradeoffs associated with customizable hardware. We will focus mainly on hardware implementations of cryptanalytic algorithms; we then compare the tradeoffs between the hardware and software approaches. <p> Since RC4 was specifically designed for efficiency on general-purpose computers, it is not entirely surprising that programmable logic fares so poorly. We showed that the estimate in <ref> [4] </ref> (which inspired the term "8-cent encryption" for 40-bit RC4) is over-optimistic and unrealistic. On the other hand, Netscape's $10,000 estimate was far too large. 15 Programmable logic devices are very efficient at CDMF cryptanalysis.
Reference: [5] <author> Piete Brooks. </author> <title> Hal's second challenge, </title> <month> August </month> <year> 1995. </year> <note> Available on the Internet as http://www.brute.cl.cam.ac.uk/brute/. </note>
Reference-contexts: At the same time, Damien Doligez had also independently finished a succesful sweep of the RC4 40-bit keys [12], with the same software implementation. Not long later, Piete Brooks, Adam Back, Andrew Roos, and Andy Brown organized a distributed effort <ref> [5] </ref> which used donated idle cycles from many machines across the Internet to finish a second challenge in 31 hours, again using a similar software implementation. <p> Therefore, we concentrate on algorithms to break A5, RC4, CDMF, and DES. Software implementations running on general-purpose microcomputers have received perhaps the most attention <ref> [3, 12, 5, 10, 4] </ref>. To achieve maximum performance, though, we must also consider the tradeoffs associated with customizable hardware. We will focus mainly on hardware implementations of cryptanalytic algorithms; we then compare the tradeoffs between the hardware and software approaches.
Reference: [6] <author> Albert G. Broscius and Jonathan M. Smith. </author> <title> Exploiting parallelism in hardware implementation of the DES. </title> <booktitle> In Advances in Cryptology: Proceedings of CRYPTO '91, </booktitle> <pages> pages 367-376. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Even more writing on the subject of hardware DES keysearch can be found in [25], and some issues in DES chip design can be found in <ref> [21, 15, 6] </ref>. All these estimates were superseded by a compelling 1993 paper [31] from Michael Wiener.
Reference: [7] <author> Altera Corporation. </author> <title> Altera components North America price list, </title> <month> May </month> <year> 1996. </year>
Reference-contexts: First, we directly implemented the relevant cryptanalytic algorithms for the Altera FLEX8000 platform. Once this is done, it is easy to do several small time trials to measure performance. Finally, we used technical data sheets [8] and price lists <ref> [7, 24] </ref> from Altera to assess the cost of the system. We also implemented the applications in software. <p> The figure shows throughput graphed against the initial investment required; the chips with the best performance-to-cost (y=x) ratio are the best buy. The prices are taken from a very recent Altera price list <ref> [7, 24] </ref>. As there are discounts in large quantities, we have plotted price points for small quantities with a red line and for large batches with a blue line. We also measured the performance for the 81188GC232-3 chip directly|it is the only one we had access to.
Reference: [8] <institution> Altera Corporation. Altera home page, </institution> <year> 1996. </year> <note> Available on the Internet as http://www.altera.com/. 16 </note>
Reference-contexts: First, we directly implemented the relevant cryptanalytic algorithms for the Altera FLEX8000 platform. Once this is done, it is easy to do several small time trials to measure performance. Finally, we used technical data sheets <ref> [8] </ref> and price lists [7, 24] from Altera to assess the cost of the system. We also implemented the applications in software.
Reference: [9] <author> Netscape Communications Corporation. </author> <title> Key challenge, </title> <note> 1995. Available on the Internet as http://www.netscape.com/newsref/std/key challenge.html. </note>
Reference-contexts: The first successful keysearch used idle cycles on 120 workstations for 8 days. Netscape claimed that this was $10,000 worth of computing power, concluding that messages worth less than $10,000 can be safely protected with 40-bit RC4 encryption <ref> [9] </ref>. Exposing the invalidity of this estimate was another motivating force for us. One unpublished work [22] has studied in depth the relevance of reconfigurable logic to cryptologic applications. They assessed the complexity of a keysearch of DES and RC4 (as well as many other non-cryptanalytic problems).
Reference: [10] <author> Wei Dai. </author> <title> Speed benchmarks, </title> <note> 1996. Post to cypherpunks mailing list. Available on the Internet as http://www.eskimo.com/~weidai/benchmarks.txt. </note>
Reference-contexts: Therefore, we concentrate on algorithms to break A5, RC4, CDMF, and DES. Software implementations running on general-purpose microcomputers have received perhaps the most attention <ref> [3, 12, 5, 10, 4] </ref>. To achieve maximum performance, though, we must also consider the tradeoffs associated with customizable hardware. We will focus mainly on hardware implementations of cryptanalytic algorithms; we then compare the tradeoffs between the hardware and software approaches.
Reference: [11] <author> Whitfield Diffie and Martin E. Hellman. </author> <title> Exhaustive cryptanalysis of the NBS data encryption standard. </title> <journal> Computer, </journal> <volume> 10(6) </volume> <pages> 74-84, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: Whit Diffie and Martin Hellman designed a system containing a large number of custom-designed chips <ref> [11] </ref>. They estimated that their $20 million architecture could recover a DES key each day. After their paper appeared, great controversy ensued.
Reference: [12] <author> Damien Doligez. SSL challenge|broken, </author> <month> August </month> <year> 1995. </year> <note> Post to cypherpunks mailing list. Available on the Internet as http://pauillac.inria.fr/~doligez/ssl/. </note>
Reference-contexts: Soon Adam Back, David Byers, and Eric Young announced [3] that they had successfully searched the 40-bit keyspace with a software implementation running on the idle cycles of several workstations. At the same time, Damien Doligez had also independently finished a succesful sweep of the RC4 40-bit keys <ref> [12] </ref>, with the same software implementation. Not long later, Piete Brooks, Adam Back, Andrew Roos, and Andy Brown organized a distributed effort [5] which used donated idle cycles from many machines across the Internet to finish a second challenge in 31 hours, again using a similar software implementation. <p> Therefore, we concentrate on algorithms to break A5, RC4, CDMF, and DES. Software implementations running on general-purpose microcomputers have received perhaps the most attention <ref> [3, 12, 5, 10, 4] </ref>. To achieve maximum performance, though, we must also consider the tradeoffs associated with customizable hardware. We will focus mainly on hardware implementations of cryptanalytic algorithms; we then compare the tradeoffs between the hardware and software approaches.
Reference: [13] <author> H. Eberle and C. P. Thacker. </author> <title> A 1 Gbit/second GaAs DES chip. </title> <booktitle> In Proceedings of the IEEE 1992 Custom Integrated Circuits Conference, pages 19.7/1-4. IEEE, </booktitle> <month> May </month> <year> 1992. </year>
Reference-contexts: Another more recent estimate took advantage of an extremely fast DES chip (designed for normal cryptographic use, not cryptanalysis), concluding that a $1 million assembly could search the DES key space in 8 days <ref> [31, 13, 14] </ref>. Yet another study examined the feasibility of using existing general-purpose content-addressable processors, and concluded that a DES keysearch would take 30 days on them with a $1 million investment [30].
Reference: [14] <author> Hans Eberle. </author> <title> A high-speed DES implementation for network applications. </title> <type> Technical Report 90, </type> <institution> DEC SRC, </institution> <month> September </month> <year> 1992. </year>
Reference-contexts: Another more recent estimate took advantage of an extremely fast DES chip (designed for normal cryptographic use, not cryptanalysis), concluding that a $1 million assembly could search the DES key space in 8 days <ref> [31, 13, 14] </ref>. Yet another study examined the feasibility of using existing general-purpose content-addressable processors, and concluded that a DES keysearch would take 30 days on them with a $1 million investment [30].
Reference: [15] <author> R. C. Fairfield, A. Matusevich, and J. Plany. </author> <title> An LSI digital encryption processor (DEP). </title> <booktitle> In Advances in Cryptology: Proceedings of CRYPTO '84, </booktitle> <pages> pages 115-143. </pages> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Even more writing on the subject of hardware DES keysearch can be found in [25], and some issues in DES chip design can be found in <ref> [21, 15, 6] </ref>. All these estimates were superseded by a compelling 1993 paper [31] from Michael Wiener.
Reference: [16] <author> Hal Finney. SSL RC4 challenge, </author> <month> July </month> <year> 1995. </year> <note> Post to cypherpunks mailing list. Available on the Internet as http://www.portal.com/~hfinney/sslchallong.html. </note>
Reference-contexts: To demonstrate the need for more secure encryption, Hal Finney challenged his fellow cypherpunks to break 40-bit RC4 <ref> [16] </ref>. Soon Adam Back, David Byers, and Eric Young announced [3] that they had successfully searched the 40-bit keyspace with a software implementation running on the idle cycles of several workstations.
Reference: [17] <author> A.O. Freier, P. Karlton, </author> <title> and P.C. </title> <type> Kocher. </type> <note> SSL version 3.0, 1995. Internet-Draft draft-freier-ssl-version3-00.txt, work in progress. </note>
Reference-contexts: Thus, the total number of cycles per key for A5 is CPK = KeySetup + Comparison = 1 + 2 = 3. 7 5.3 RC4 RC4 [27] is the encryption algorithm used in, among other things, the Secure Sockets Layer (SSL) protocol <ref> [17] </ref> used by Netscape and other World Wide Web browsers to transmit encrypted information (such as banking transactions) over the Internet.
Reference: [18] <author> Gilles Garon and Richard Outerbridge. </author> <title> DES Watch: An examination of the sufficiency of the data encryption standard for financial institution information security in the 1990's. </title> <journal> Cryptologia, </journal> <volume> XV(3):177-193, </volume> <month> July </month> <year> 1991. </year>
Reference-contexts: After the controversy died down, the final estimate was that DES would be insecure by the year 1990 [19]. A later paper suggested that a $1 million custom-designed hardware architecture could break DES in 9 days with technology forecasted to be available by 1995 <ref> [18] </ref>. Another more recent estimate took advantage of an extremely fast DES chip (designed for normal cryptographic use, not cryptanalysis), concluding that a $1 million assembly could search the DES key space in 8 days [31, 13, 14].
Reference: [19] <author> Martin E. Hellman. </author> <title> DES will be totally insecure within ten years. </title> <journal> IEEE Spectrum, </journal> <volume> 16(7) </volume> <pages> 32-39, </pages> <month> July </month> <year> 1979. </year>
Reference-contexts: After the controversy died down, the final estimate was that DES would be insecure by the year 1990 <ref> [19] </ref>. A later paper suggested that a $1 million custom-designed hardware architecture could break DES in 9 days with technology forecasted to be available by 1995 [18].
Reference: [20] <author> John L. Hennessy and David A. Patterson. </author> <title> Computer Architecture: A Quantitative Approach. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Francisco, 2nd edition, </address> <year> 1996. </year>
Reference-contexts: We investigate the benefits of various forms of parallelism, including pipelining and superscalar architectures. We also examine and identify critical structural hazards and data hazards, as well as the crucial performance bottlenecks. This paper focuses especially on an analogue of the central "CPU time" formula from <ref> [20] </ref>. By framing the problem from the perspective of system architects, we were able to take advantage of the extensive knowledge base available in the architecture literature. This paper is organized as follows. <p> Similar to the formula for CPU time found in <ref> [20] </ref>: CPU time = Instruction Count x CPI x Clock cycle time we have a formula for brute-force searching a keyspace: Search time = Keys to check x CPK x Clock cycle time As with the [20] equation, we ignore CPU time. <p> Similar to the formula for CPU time found in <ref> [20] </ref>: CPU time = Instruction Count x CPI x Clock cycle time we have a formula for brute-force searching a keyspace: Search time = Keys to check x CPK x Clock cycle time As with the [20] equation, we ignore CPU time. This is valid because we take care to avoid I/O as much as possible. Cryptanalytic applications are typically compute-bound, so this is an important optimization. <p> Tricks such as carry-save arithmetic <ref> [20] </ref> are usually not useful here, because keys are usually not used by the encryption algorithms as numbers, but rather, as bit strings. <p> Several architectural techniques from the design of general-purpose processors were useful in this project. Adding parallelism, identifying structural and data hazards, identifying performance bottlenecks, and other techniques helped maximize the performance of our design. The cryptanalytic analogue to the "CPU time" equation from <ref> [20] </ref> was surprisingly useful, lending structure to our analysis. We also identified several important aspects found only with cryptanalytic applications on programmable logic. In this application, superscalar parallelism is more effective than pipelining.
Reference: [21] <author> Frank Hoornaert, Jo Goubert, and Yvo Desmedt. </author> <title> Efficient hardware implementation of the DES. </title> <booktitle> In Advances in Cryptology: Proceedings of CRYPTO '84, </booktitle> <pages> pages 147-173. </pages> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Even more writing on the subject of hardware DES keysearch can be found in [25], and some issues in DES chip design can be found in <ref> [21, 15, 6] </ref>. All these estimates were superseded by a compelling 1993 paper [31] from Michael Wiener.
Reference: [22] <author> Eric Hughes and Bruce Koball. </author> <title> Cryptography and the Altera FLEX 81188, </title> <month> December </month> <year> 1994. </year> <type> Unpublished manuscript. </type>
Reference-contexts: A recent paper [4] did briefly address the cost-effectiveness of programmable logic, but their estimate appears to be based on flawed assumptions. The one work which investigated the problem most closely <ref> [22] </ref> was a good start, but it didn't go far enough: their estimates were based on theoretical calculations, instead of real implementations and measurements. Therefore, there is new ground to cover, and previous work to validate. <p> Netscape claimed that this was $10,000 worth of computing power, concluding that messages worth less than $10,000 can be safely protected with 40-bit RC4 encryption [9]. Exposing the invalidity of this estimate was another motivating force for us. One unpublished work <ref> [22] </ref> has studied in depth the relevance of reconfigurable logic to cryptologic applications. They assessed the complexity of a keysearch of DES and RC4 (as well as many other non-cryptanalytic problems).
Reference: [23] <author> D.B. Johnson, Sm.M. Matyas, A.V. Le, and J.D. Wilkins. </author> <title> Design of the commercial data masking facility data privacy algorithm. </title> <booktitle> In 1st ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 93-96. </pages> <publisher> ACM Press, </publisher> <year> 1993. </year>
Reference-contexts: The key is stored in a shift register, rotated before each round, and exclusive-or-ed into the block during each round. This is also straightforward to implement in hardware. CDMF (Commercial Data Masking Facility) <ref> [23] </ref> is a related algorithm which uses DES as the underlying transformation; the only difference is that it weakens the key to meet US export restrictions. CDMF has an effective 40-bit keylength, which is then expanded to a 56 bit DES key by using another DES transformation.
Reference: [24] <author> Clive McCarthy. </author> <type> Personal communication, </type> <month> April </month> <year> 1996. </year>
Reference-contexts: First, we directly implemented the relevant cryptanalytic algorithms for the Altera FLEX8000 platform. Once this is done, it is easy to do several small time trials to measure performance. Finally, we used technical data sheets [8] and price lists <ref> [7, 24] </ref> from Altera to assess the cost of the system. We also implemented the applications in software. <p> The figure shows throughput graphed against the initial investment required; the chips with the best performance-to-cost (y=x) ratio are the best buy. The prices are taken from a very recent Altera price list <ref> [7, 24] </ref>. As there are discounts in large quantities, we have plotted price points for small quantities with a red line and for large batches with a blue line. We also measured the performance for the 81188GC232-3 chip directly|it is the only one we had access to.
Reference: [25] <author> Robert McLaughlin. </author> <title> Yet another machine to break DES. </title> <journal> Cryptologia, </journal> <volume> XVI(2):136-144, </volume> <month> April </month> <year> 1992. </year>
Reference-contexts: Yet another study examined the feasibility of using existing general-purpose content-addressable processors, and concluded that a DES keysearch would take 30 days on them with a $1 million investment [30]. Even more writing on the subject of hardware DES keysearch can be found in <ref> [25] </ref>, and some issues in DES chip design can be found in [21, 15, 6]. All these estimates were superseded by a compelling 1993 paper [31] from Michael Wiener.
Reference: [26] <author> Michael Roe, </author> <month> April </month> <year> 1996. </year> <type> Personal communication. </type>
Reference-contexts: The details of the A5 algorithm were only recently revealed to the public [1], so it is perhaps not surprising that it has received less attention. Several cryptographers' initial reaction was that there must be a trivial brute-force attack on A5 requiring 2 40 operations <ref> [26, 1] </ref>. No such attack ever materialized, and it became clear that the matter was not so trivial as initially imagined [26, 2]. The current consensus appears to be that A5's strength is possibly somewhat more than a 40-bit cipher but less than its 64-bit key might indicate. <p> Several cryptographers' initial reaction was that there must be a trivial brute-force attack on A5 requiring 2 40 operations [26, 1]. No such attack ever materialized, and it became clear that the matter was not so trivial as initially imagined <ref> [26, 2] </ref>. The current consensus appears to be that A5's strength is possibly somewhat more than a 40-bit cipher but less than its 64-bit key might indicate. There have not been any reports on CDMF exhaustive keysearch in the literature, either. <p> No figures for A5 are included, because at the moment, there is no consensus among cryptographers as to the size of the keyspace <ref> [26] </ref>. 6 Future work Due to time and resource limitations, we were only able to examine the Altera FLEX8000 series of programmable logic devices.
Reference: [27] <author> Bruce Schneier. </author> <title> Applied Cryptography. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, 2nd edition, </address> <year> 1994. </year>
Reference-contexts: After their paper appeared, great controversy ensued. Some argued that the mean time between failures would be inherently so small that the machine could never work; Diffie and Hellman refuted these objections, although they also increased their cost estimate somewhat <ref> [27, p. 283] </ref>. After the controversy died down, the final estimate was that DES would be insecure by the year 1990 [19]. A later paper suggested that a $1 million custom-designed hardware architecture could break DES in 9 days with technology forecasted to be available by 1995 [18]. <p> A better solution [31], which uses the fact that the keys need not be checked in sequential order, is to use a linear feedback shift register <ref> [27] </ref>, or LFSR. An LFSR is a register that can either be loaded (to set the register's value), or have its existing value shifted (in order to output 1 bit, and to change the register's value). Of the two styles of LFSR, the usual style is called a Fibonacci LFSR. <p> Since incorrect keys produce essentially random data, the expected number of bits we need to check before rejecting a key is 2. Thus, the total number of cycles per key for A5 is CPK = KeySetup + Comparison = 1 + 2 = 3. 7 5.3 RC4 RC4 <ref> [27] </ref> is the encryption algorithm used in, among other things, the Secure Sockets Layer (SSL) protocol [17] used by Netscape and other World Wide Web browsers to transmit encrypted information (such as banking transactions) over the Internet.
Reference: [28] <author> Bruce Schneier, </author> <month> April </month> <year> 1996. </year> <type> Personal communication. </type>
Reference-contexts: Apparently AccessData, a business that specializes in recovering lost data (i.e. cryptanalysis) for the corporate and law enforcement industries, prefers programmable logic over custom hardware for exactly these reasons <ref> [28] </ref>. Let us summarize what the charts recommend to one in need of cryptanalytic computational power. RC4 keysearches appear to be most efficiently performed in general-purpose distributed systems.
Reference: [29] <author> David Wagner and Steven M. Bellovin. </author> <title> A probable plaintext recognizer, </title> <month> September </month> <year> 1994. </year> <type> Unpublished manuscript. </type>
Reference-contexts: The goal of the adversary is to determine the key necessary to decrypt the ciphertext into the known plaintext. He can then use this key to decrypt the rest of the encrypted message. Other models of cryptanalysis, such as "ciphertext only" or "probabilistic plaintext" <ref> [29] </ref> are more complicated to use, but do not require an adversary to have specific knowledge of part of the original message.
Reference: [30] <author> Peter C. Wayner. </author> <title> Content-addressable search engines and DES-like systems. </title> <booktitle> In Advances in Cryptology: Proceedings of CRYPTO '92, </booktitle> <pages> pages 575-586. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <month> 17 </month>
Reference-contexts: Yet another study examined the feasibility of using existing general-purpose content-addressable processors, and concluded that a DES keysearch would take 30 days on them with a $1 million investment <ref> [30] </ref>. Even more writing on the subject of hardware DES keysearch can be found in [25], and some issues in DES chip design can be found in [21, 15, 6]. All these estimates were superseded by a compelling 1993 paper [31] from Michael Wiener.
Reference: [31] <author> Michael J. Wiener. </author> <title> Efficient DES key search. </title> <booktitle> In Advances in Cryptology: Proceedings of CRYPTO '93, </booktitle> <address> Santa Barbara, CA, 1994. </address> <publisher> Springer. </publisher> <pages> 18 </pages>
Reference-contexts: Another more recent estimate took advantage of an extremely fast DES chip (designed for normal cryptographic use, not cryptanalysis), concluding that a $1 million assembly could search the DES key space in 8 days <ref> [31, 13, 14] </ref>. Yet another study examined the feasibility of using existing general-purpose content-addressable processors, and concluded that a DES keysearch would take 30 days on them with a $1 million investment [30]. <p> Even more writing on the subject of hardware DES keysearch can be found in [25], and some issues in DES chip design can be found in [21, 15, 6]. All these estimates were superseded by a compelling 1993 paper <ref> [31] </ref> from Michael Wiener. He went to the effort of assembling a very comprehensive design (extending for a hefty 42 pages!) of a custom-hardware DES keysearch machine, including low-level chip schematics as well as detailed plans for controllers and shelving. <p> Tricks such as carry-save arithmetic [20] are usually not useful here, because keys are usually not used by the encryption algorithms as numbers, but rather, as bit strings. A better solution <ref> [31] </ref>, which uses the fact that the keys need not be checked in sequential order, is to use a linear feedback shift register [27], or LFSR.
References-found: 31

