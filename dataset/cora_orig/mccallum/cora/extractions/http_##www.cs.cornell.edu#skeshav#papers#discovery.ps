URL: http://www.cs.cornell.edu/skeshav/papers/discovery.ps
Refering-URL: http://www.cs.cornell.edu/skeshav/papers.html
Root-URL: http://www.cs.brown.edu/
Email: skeshav-@cs.cornell.edu  
Title: Discovering Internet Topology  
Author: flfl R. Siamwalla, R. Sharma, and S. Keshav -rachit, sharma, 
Address: Ithaca, NY 14853  
Affiliation: Cornell Network Research Group Department of Computer Science Cornell University,  
Abstract: In large and constantly evolving networks, it is difficult to determine how the network is actually laid out. Yet this information is invaluable for network management, simulation, and server siting. Traditional topology discovery algorithms are based on SNMP, which is not universally deployed. We describe several heuristics and algorithms to discover both intra-domain and Internet backbone topology while making as few assumptions about the network as possible. We quantitatively evaluate their performance and also present a new technique for visualizing Internet backbone topology. 
Abstract-found: 1
Intro-found: 1
Reference: [Actualit 98] <institution> Actualit Corp., Optimal Surveyor home page www.actualit.com/products/optimal /optimal_surveyor/optimal_surveyor.html </institution>
Reference-contexts: The main focus of this product appears to be a user friendly GUI to browse the topology [NetViz 98]. Optimal Surveyor: Optimal Surveyor uses SNMP and Novell network queries to discover network topology <ref> [Actualit 98] </ref>. X X Source Number of routers Hop count Source X Number of routers Hop count (a) (b) 14 Dartmouth Intermapper: Intermapper discovers topology using SNMP queries and Appletalk broadcast calls. Intermapper also discovers and displays link and server load [ Intermapper 98].
Reference: [Atlas 98] <institution> An Atlas of Cyberspace, </institution> <address> http://www.geog.ucl.ac.uk/casa/martin/atlas /atlas.html </address>
Reference-contexts: Related work Network topology information is often disclosed by ISPs. Two notable collections of known topologies can be found at References <ref> [Atlas 98, CAIDA 98] </ref>. These topologies, however, are neither automatically discovered, nor updated. Automatic network discovery is a feature of many common network management tools, such as HPs OpenView, and IBMs Tivoli. These tools, however, assume that SNMP is universally deployed.
Reference: [CAIDA 98] <editor> CAIDA Mapnet viewer, </editor> <address> http://www.caida.org/Tools/Mapnet/ </address>
Reference-contexts: Related work Network topology information is often disclosed by ISPs. Two notable collections of known topologies can be found at References <ref> [Atlas 98, CAIDA 98] </ref>. These topologies, however, are neither automatically discovered, nor updated. Automatic network discovery is a feature of many common network management tools, such as HPs OpenView, and IBMs Tivoli. These tools, however, assume that SNMP is universally deployed.
Reference: [FJPZ 98] <author> P. Francis, S. Jamin, V. Paxson, L. </author> <title> Zhang ,, Internet Distance Maps, </title> <note> Presentation available from http://idmaps.eecs.umich.edu/ </note>
Reference-contexts: A detailed critique of several other algorithms that perform network probing for determining expected performance and server selection can be found in Reference [SSK 97]. The IDMaps project <ref> [FJPZ 98] </ref> seeks to provide client applications with approximate hop counts and expected performance between pairs of IP subnet numbers to allow them to suitably adapt their behavior. The focus of this work is primarily on creating a virtual topology that accurate represents performance characteristics between subnets.
Reference: [IETF 97] <institution> IETF Physical Topology MIB Working Group, </institution> <note> PTOPO Discovery Protocol and MIB, Internet draft available from http://www.ietf.org/internet-drafts/draft-ietf-ptopomib-pdp-02.txt </note>
Reference-contexts: This concisely represents topology information in an easily retrievable form. Better yet, simple shell scripts allow us to perform complex operations on the topology. Recently the IETF has proposed the PTOPO MIB information structure to store physical topology information <ref> [IETF 97] </ref>. Information in our directory structure can be easily converted to this format. We now present a suite of discovery algorithms derived from the basic algorithm.
Reference: [Intermapper 98] <institution> Intermapper home page, </institution> <note> http://intermapper.dartmouth.edu </note>
Reference-contexts: X X Source Number of routers Hop count Source X Number of routers Hop count (a) (b) 14 Dartmouth Intermapper: Intermapper discovers topology using SNMP queries and Appletalk broadcast calls. Intermapper also discovers and displays link and server load <ref> [ Intermapper 98] </ref>. To sum up, these tools exploit network-specific protocols, such as Windows Networking, Novell Networking, and Appletalk to augment the information provided by SNMP. From this perspective, our work can be viewed as augmenting SNMP in a protocol-independent fashion.
Reference: [Jacobson 97] <author> V. Jacobson, </author> <title> Pathchar binary, </title> <publisher> ftp://ftp.ee.lbl.gov/pathchar/ </publisher>
Reference-contexts: Link characteristics: Currently, we do not discover link characteristics such as capacity and mean delay. Existing tools such as pathchar <ref> [Jacobson 97] </ref> and PBM [Paxson 97] can discover these automatically. In future work, we plan to integrate these tools with ours. Exploit other sources of information: At the moment, our tools do not exploit routing information within a domain.
Reference: [MJ 98] <author> G.R. Malan and F. Jahanian. </author> <title> An extensible probe architecture for network protocol performance measurement, </title> <booktitle> Proceedings of SIGCOMM'98, </booktitle> <month> Sept. </month> <year> 1998, </year> <note> Online version available from http://www.merit. edu/ipma/docs/paper.html </note>
Reference: [NetViz 98] <institution> NetViz home page, </institution> <note> http://www.netviz.com </note>
Reference-contexts: These include: netViz: netViz exploits Microsoft Windows internal network calls to discover servers running Windows 95, 98 or NT, volumes and printers in a Microsoft network. The main focus of this product appears to be a user friendly GUI to browse the topology <ref> [NetViz 98] </ref>. Optimal Surveyor: Optimal Surveyor uses SNMP and Novell network queries to discover network topology [Actualit 98]. X X Source Number of routers Hop count Source X Number of routers Hop count (a) (b) 14 Dartmouth Intermapper: Intermapper discovers topology using SNMP queries and Appletalk broadcast calls.
Reference: [Paxson 97] <author> V. Paxson, </author> <title> Measurements and Analysis of End-to-End Internet Dynamics, </title> <type> Ph.D. Thesis, </type> <institution> UC Berkeley, </institution> <month> May </month> <year> 1997. </year>
Reference-contexts: Link characteristics: Currently, we do not discover link characteristics such as capacity and mean delay. Existing tools such as pathchar [Jacobson 97] and PBM <ref> [Paxson 97] </ref> can discover these automatically. In future work, we plan to integrate these tools with ours. Exploit other sources of information: At the moment, our tools do not exploit routing information within a domain.
Reference: [SSK 97] <author> S. Seshan, M. Stemm, and R.H. Katz, SPAND: </author> <booktitle> Shared Passive Network Performance Discovery , Proc 1st Usenix Symposium on Internet Technologies and Systems (USITS '97), </booktitle> <address> Monterey, CA, </address> <month> December </month> <year> 1997. </year> <month> 16 </month>
Reference-contexts: Thus, it can be used to improve the functionality of any of these tools. The idea of discovering network characteristics to help improve protocol performance is at the heart of several recent studies. For example, in the SPAND approach <ref> [SSK 97] </ref>, network characteristics passively discovered by a cluster of hosts are shared through a performance server. This helps in decisions such as choosing the closest web site that contains a copy of the desired information, and choosing a data format that is consistent with the available capacity. <p> Our work differs from this in that we perform active probing, and we do not discover network performance characteristics, only network topology. A detailed critique of several other algorithms that perform network probing for determining expected performance and server selection can be found in Reference <ref> [SSK 97] </ref>. The IDMaps project [FJPZ 98] seeks to provide client applications with approximate hop counts and expected performance between pairs of IP subnet numbers to allow them to suitably adapt their behavior.
References-found: 11

