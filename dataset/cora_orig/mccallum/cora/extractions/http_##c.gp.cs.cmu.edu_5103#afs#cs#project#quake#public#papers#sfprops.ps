URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/quake/public/papers/sfprops.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/project/quake/public/www/meshsuite.html
Root-URL: http://www.cs.cmu.edu
Title: Properties of a Family of Parallel Finite Element Simulations  
Author: David R. O'Hallaron and Jonathan Richard Shewchuk 
Address: Pittsburgh, PA 15213  
Affiliation: School of Computer Science Carnegie Mellon University  
Date: December 23, 1996  
Pubnum: CMU-CS-96-141  
Abstract: This report characterizes a family of unstructured 3D finite element simulations that are partitioned for execution on a parallel system. The simulations, which estimate earthquake-induced ground motion in the San Fernando Valley of Southern California, range in size from 10,0001,000,000 nodes and are partitioned for execution on 4128 processors. The purpose of the report is to help researchers better understand the properties of unstructured tetrahedral finite element meshes and the sparse matrix vector product (SMVP) operations that are induced from them. The report is designed to serve as a comprehensive reference that researchers can consult for answers to the following kinds of questions: For a tetrahedral mesh with a particular number of nodes, how many elements and edges does it have? What is the distribution of node degrees in a tetrahedral mesh? What fraction of nodes in a partitioned mesh are interface nodes? What is the communication volume in a typical parallel SMVP? How many messages are there? How big are the messages? How many nonzeros are contained in the rows of a sparse matrices induced from tetrahedral meshes? The partitioned meshes described in the paper are available electronically. Supported in part by the National Science Foundation under Grant CMS-9318163, by the Advanced Research Projects Agency/CSTO monitored by SPAWAR under contract N00039-93-C-0152, and by a grant from the Intel Corporation. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either express or implied, of the U.S. government. Authors' email addresses: droh@cs.cmu.edu, jrs@cs.cmu.edu 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> BAO, H., BIELAK, J., GHATTAS, O., O'HALLARON, D. R., KALLIVOKAS, L. F., SHEWCHUK, J. R., AND XU, J. </author> <title> Earthquake ground motion modeling on parallel computers. </title> <booktitle> In Proceedings of Supercomputing '96 (Pittsburgh, </booktitle> <address> PA, </address> <month> Nov. </month> <year> 1996). </year>
Reference-contexts: This report describes the properties of four unstructured tetrahedral finite element meshes partitioned for execution on 4, 8, 16, 32, 64, and 128 PEs. The meshes come from finite element simulations of earthquake-induced ground motion in the San Fernando Valley <ref> [1] </ref> and are partitioned using a recursive geometric bisection algorithm [7, 8]. Because the simulations model earthquakes, we refer to them as the Quake simulations and their corresponding meshes as the Quake meshes. <p> The simulations are parallelized using a domain-specific tool chain for finite element problems called Archimedes <ref> [1] </ref>. To generate a simulation that will run on p PEs, Archimedes partitions the mesh into p disjoint sets of elements. Each set is called a subdomain and is assigned to some PE (We will use the terms subdomain and PE interchangeably).
Reference: [2] <author> BARNARD, S., AND SIMON, H. </author> <title> A fast multilevel implementation of recursive spectral bisection for partitioning unstructured problems. </title> <type> Tech. Rep. </type> <institution> RNR-92-033, NASA Ames Research Center, </institution> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
Reference: [3] <author> FARHAT, C. </author> <title> A simple and efficient automatic FEM domain decomposer. </title> <journal> Comp. & Struct. </journal> <volume> 28, </volume> <month> 5 </month> <year> (1988), </year> <month> 579602. </month>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
Reference: [4] <author> GILBERT, J., MILLER, G., AND TENG, S.-H. </author> <title> Geometric mesh partitioning: Implementation and experiments. </title> <booktitle> In 9th International Parallel Processing Symposium (Santa Barbara, </booktitle> <month> April </month> <year> 1995), </year> <journal> IEEE, </journal> <pages> pp. 418427. </pages>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
Reference: [5] <author> HENDRICKSON, B., AND LELAND, R. </author> <title> The Chaco user's guide Version 2.0. </title> <type> Tech. Rep. </type> <institution> SAND95-2344, Sandia National Laboratories, </institution> <month> July </month> <year> 1995. </year> <note> 18 David R. O'Hallaron and Jonathan Richard Shewchuk </note>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
Reference: [6] <author> HENDRICKSON, B., AND LELAND, R. </author> <title> An improved spectral graph partitioning algorithm for mapping parallel computations. </title> <journal> SIAM J. Sci. Comput. </journal> <volume> 16, </volume> <month> 2 </month> <year> (1995), </year> <month> 452469. </month>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
Reference: [7] <author> MILLER, G., AND THURSTON, W. </author> <title> Separators in two and three dimensions. </title> <booktitle> In Proceedings of the 22th Annual ACM Symposium on Theory of Computing (Maryland, </booktitle> <month> May </month> <year> 1990), </year> <booktitle> ACM, </booktitle> <pages> pp. 300309. </pages>
Reference-contexts: The meshes come from finite element simulations of earthquake-induced ground motion in the San Fernando Valley [1] and are partitioned using a recursive geometric bisection algorithm <ref> [7, 8] </ref>. Because the simulations model earthquakes, we refer to them as the Quake simulations and their corresponding meshes as the Quake meshes. Our purpose is to help researchers better understand the properties of unstructured tetrahedral finite element meshes and the SMVP operations that are induced from them. <p> Each set is called a subdomain and is assigned to some PE (We will use the terms subdomain and PE interchangeably). The partitioner is based on a recursive geometric bisection algorithm <ref> [7, 8] </ref> that divides the elements equally among the subdomains while attempting to minimize the total number of nodes that are shared by subdomains, and hence the total communication volume.
Reference: [8] <author> MILLER, G. L., TENG, S.-H., AND VAVASIS, S. A. </author> <title> A unified geometric approach to graph separators. </title> <booktitle> In Proceedings of the 32nd Anuual Symposium on Foundations of Computer Science (Puerto Rico, Oct 1991), IEEE, </booktitle> <pages> pp. 538547. </pages>
Reference-contexts: The meshes come from finite element simulations of earthquake-induced ground motion in the San Fernando Valley [1] and are partitioned using a recursive geometric bisection algorithm <ref> [7, 8] </ref>. Because the simulations model earthquakes, we refer to them as the Quake simulations and their corresponding meshes as the Quake meshes. Our purpose is to help researchers better understand the properties of unstructured tetrahedral finite element meshes and the SMVP operations that are induced from them. <p> Each set is called a subdomain and is assigned to some PE (We will use the terms subdomain and PE interchangeably). The partitioner is based on a recursive geometric bisection algorithm <ref> [7, 8] </ref> that divides the elements equally among the subdomains while attempting to minimize the total number of nodes that are shared by subdomains, and hence the total communication volume.
Reference: [9] <author> POTHEN, A., SIMON, H., AND LIOU, K. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <note> SIAM Journal on Matrix Analysis and Applications 11 (1990), 430452. </note>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
Reference: [10] <author> SIMON, H. </author> <title> Partitioning of unstructured problems for parallel processing. </title> <journal> Comput. Sys. Engr. </journal> <volume> 2, </volume> <month> 3 </month> <year> (1991), </year> <month> 135148. </month>
Reference-contexts: The geometric partitioning algorithm has provable upper bounds on the separator sizes and in practice usually generates partitions that are as good as those produced by other modern partitioning algorithms <ref> [2, 3, 4, 5, 6, 9, 10] </ref>. To compute y = Kx on a set of PEs, we must consider the data distribution by which vectors and matrices are stored.
References-found: 10

