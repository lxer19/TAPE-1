URL: http://www.isi.edu/~rdv/sleds/sleds.ps
Refering-URL: http://www.isi.edu/~rdv/sleds/index.html
Root-URL: http://www.isi.edu
Email: rdv@ISI.Edu  
Title: SLEDs: Storage Latency Estimation Descriptors  
Author: Rodney Van Meter 
Date: March 19, 1997  
Address: Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute University of Southern California  
Abstract: Managing the latency of storage systems is a key to creating effective very large scale information systems, such as web interfaces to satellite image databases and video-on-demand servers. Storage Latency Estimation Descriptors (SLEDs) are architecture-independent descriptions of the retrieval time of a unit of data. They describe the latency to the first byte, and the bandwidth expected. SLEDs are an important enabling technology for true end-to-end quality of service (QoS) because they can be used to predict and schedule data transfer with multimedia (guaranteed I/O rate) file systems. SLEDs provide the interface that allows database management systems (DBMS) and clients of hierarchical storage management (HSM) systems to optimize their data access patterns by choosing to read data in specific sequences or not at all. SLEDs are designed to work in intra-machine, local-area network (LAN) and wide-area network (WAN) storage systems, and to scale through twelve orders of magnitude in latency, from thousands of seconds down to nanoseconds. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> High performance storage system design specification for client api delivery 2.0 draft 3.0, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: SLEDs are similar, but are more closely tied to the concept of data objects with storage and system state. Hints are used by file systems to order disk accesses and make caching decisions. These hints can be provided explicitly <ref> [17, 1, 6] </ref> or determined by the system based on information such as file name or access history [10]. However, hints are typically one-way information; there is no way for the application to base its I/O patterns on the current state of the file system cache and storage devices.
Reference: [2] <author> D. P. Anderson, Y. Osawa, and R. Govindan. </author> <title> A file system for continuous media. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 10(4) </volume> <pages> 311-337, </pages> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: For applications unable to reorder or reduce their I/O requests, SLEDs will provide only a means for estimating the performance that can be achieved, a useful feature for admissions control in real-time environments and evaluation of potential execution in multimedia file systems <ref> [18, 2] </ref>. As mentioned above, applications such as web browsers may find SLEDs' performance prediction useful, in order to let the user know how long a particular request might take, possibly giving the user the option to cancel requests for which he is unwilling to wait. <p> SLEDs for distributed file systems will require real-time network protocols and techniques such as RSVP to create a complete end-to-end quality of service. This will create, effectively, NFS with the guaranteed I/O rates now provided by multimedia file systems <ref> [18, 2, 21] </ref>. In a distributed environment, clients have less knowledge and control of activity at the server, and unpredictable network traffic can interfere.
Reference: [3] <author> E. Borowsky, R. Golding, A. Merchant, E. Shriver, M. Spasojevic, and J. Wilkes. </author> <title> Eliminating storage headaches through self-management. </title> <booktitle> In Proc. Second USENIX Symp. on Operating Systems Design and Implementation. USENIX, </booktitle> <month> Oct. </month> <year> 1996. </year> <note> work-in-progress abstract. </note>
Reference-contexts: Sorting algorithms based on tape's sequential access method have also been used for many years [14]. SLEDs may provide the infrastructure for understanding the delay in retrieval necessary to support economic query optimization models in database systems [20]. HP's attribute-managed storage <ref> [3] </ref> incorporates performance descriptions of the storage devices to be integrated into a storage system.
Reference: [4] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin. </author> <title> Resource reservation protocol (rsvp) - version 1 functional specification. </title> <type> Internet draft, </type> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: SLEDs provide the infrastructure to optimize record access ordering in free-range I/O. 7 Related Work RSVP is the ReSerVation Protocol under development for supporting Integrated Services on the Internet <ref> [4] </ref>. Smooth integration of SLEDs with RSVP is paramount, but there are some important differences. RSVP is designed to support policing mechanisms and packet-based network jitter control, which are complementary to the problems SLEDs solves but perhaps not necessary in SLEDs themselves.
Reference: [5] <author> P. Cao, E. E. Felten, A. R. Karlin, and K. Li. </author> <title> Implemention and performance of integrated application-controlled file caching, prefetching, and disk scheduling. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 14(4) </volume> <pages> 311-343, </pages> <month> Nov. </month> <year> 1996. </year> <month> 7 </month>
Reference-contexts: However, hints are typically one-way information; there is no way for the application to base its I/O patterns on the current state of the file system cache and storage devices. Systems as far back as Tops-10 [7] have supported user-definable pagers, as does Mach. Application-controlled file caching <ref> [5] </ref> is most like SLEDs, but is tied to the concept of on-disk file systems, with no support for multiple storage hierarchy levels, and no ability to predict performance.
Reference: [6] <author> P. Corbett, D. Feitelson, S. Fineberg, Y. Hsu, B. Nitzberg, J.-P. Prost, M. Snir, B. Traversat, and P. Wong. </author> <title> Overview of the MPI-IO parallel I/O interface. </title> <editor> In R. Jain, J. Werth, and J. C. Browne, editors, </editor> <booktitle> Input/Output in Parallel and Distributed Computer Systems, chapter 5, </booktitle> <pages> pages 127-146. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1996. </year>
Reference-contexts: SLEDs are similar, but are more closely tied to the concept of data objects with storage and system state. Hints are used by file systems to order disk accesses and make caching decisions. These hints can be provided explicitly <ref> [17, 1, 6] </ref> or determined by the system based on information such as file name or access history [10]. However, hints are typically one-way information; there is no way for the application to base its I/O patterns on the current state of the file system cache and storage devices.
Reference: [7] <institution> Digital Equipment Corporation. decsystem10 Monitor Calls, </institution> <month> June </month> <year> 1976. </year>
Reference-contexts: However, hints are typically one-way information; there is no way for the application to base its I/O patterns on the current state of the file system cache and storage devices. Systems as far back as Tops-10 <ref> [7] </ref> have supported user-definable pagers, as does Mach. Application-controlled file caching [5] is most like SLEDs, but is tied to the concept of on-disk file systems, with no support for multiple storage hierarchy levels, and no ability to predict performance.
Reference: [8] <author> C. Federighi and L. A. Rowe. </author> <title> A distributed hierarchical storage manager for a video-on-demand system. In Proc. Storage and Retrieval for Image and Video Databases II, </title> <booktitle> IS&T/SPIE Symp. </booktitle> <institution> on Elec. Imaging Sci. & Tech., </institution> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: Servers can also utilize performance predictions to manage movement of data among levels of a hierarchy for HSM-based video-on-demand environments <ref> [15, 8] </ref>.
Reference: [9] <author> J. J. Gniewek. </author> <title> Evolving requirements for magnetic tape data storage systems. </title> <editor> In B. Kobler, editor, </editor> <booktitle> Proc. Fifth NASA Goddard Conference on Mass Storage Systems and Technologies, </booktitle> <pages> pages 477-491, </pages> <month> Sept. </month> <year> 1996. </year>
Reference-contexts: It is here that SLEDs offer the largest potential gains, with three orders of magnitude or more improvement possible. In HSM systems, optimizing the access patterns for tape drives is closely tied to the ability to ability to predict their performance <ref> [11, 9, 12] </ref>. SLEDs will incorporate such information, allowing applications to explore different request sequences. When processing datasets that exceed the size of hard disk cache available, successive passes across the data are likely to find the cache in different states.
Reference: [10] <author> J. Griffioen and R. Appleton. </author> <title> Performance measurements of automatic prefetching. </title> <booktitle> In ISCA International Conference on Parallel and Distributed Computing Systems, </booktitle> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: Hints are used by file systems to order disk accesses and make caching decisions. These hints can be provided explicitly [17, 1, 6] or determined by the system based on information such as file name or access history <ref> [10] </ref>. However, hints are typically one-way information; there is no way for the application to base its I/O patterns on the current state of the file system cache and storage devices. Systems as far back as Tops-10 [7] have supported user-definable pagers, as does Mach.
Reference: [11] <author> B. Hillyer and A. Silberschatz. </author> <title> On the modeling and performance characteristics of a serpentine tape drive. </title> <booktitle> In Proc. ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 170-179. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1996. </year>
Reference-contexts: It is here that SLEDs offer the largest potential gains, with three orders of magnitude or more improvement possible. In HSM systems, optimizing the access patterns for tape drives is closely tied to the ability to ability to predict their performance <ref> [11, 9, 12] </ref>. SLEDs will incorporate such information, allowing applications to explore different request sequences. When processing datasets that exceed the size of hard disk cache available, successive passes across the data are likely to find the cache in different states.
Reference: [12] <author> B. K. Hillyer and A. Silberschatz. </author> <title> Random I/O scheduling in online tertiary storage systems. </title> <booktitle> In Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 195-204, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: It is here that SLEDs offer the largest potential gains, with three orders of magnitude or more improvement possible. In HSM systems, optimizing the access patterns for tape drives is closely tied to the ability to ability to predict their performance <ref> [11, 9, 12] </ref>. SLEDs will incorporate such information, allowing applications to explore different request sequences. When processing datasets that exceed the size of hard disk cache available, successive passes across the data are likely to find the cache in different states.
Reference: [13] <author> IEEE P1244. </author> <title> Reference Model for Open Storage Systems Interconnection Mass Storage System Reference Model Version 5, </title> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: This will allow direct estimation of the completion time for specific request sequences. The High Performance Storage System [24] provides an interface for hints, but it is currently unim-plemented; SLEDs could be incorporated as well. Systems based on the Open Storage Systems Interconnect model <ref> [13] </ref> provide virtual stores, and SLEDs can be used to model their characteristics. 4.3 Distributed File Systems Applying SLEDs to distributed file systems is an interesting problem, due to the cooperation required between client and server.
Reference: [14] <author> D. E. Knuth. </author> <title> The Art of Computer Programming, volume 3 / Sorting and Searching. </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: Mainframe systems 5 have explicitly made the distinction between data on tape and data on disk for years, while actively using tape to manipulate (as opposed to backup and restore) data. Sorting algorithms based on tape's sequential access method have also been used for many years <ref> [14] </ref>. SLEDs may provide the infrastructure for understanding the delay in retrieval necessary to support economic query optimization models in database systems [20]. HP's attribute-managed storage [3] incorporates performance descriptions of the storage devices to be integrated into a storage system.
Reference: [15] <author> T. Mori, K. Nishimura, Y. Ishibashi, and H. Nakano. </author> <title> Video-on-demand system architecture using an optical mass storage system. </title> <booktitle> In Proc. Joint International Symposium on Optical Memory and Optical Data Storage, </booktitle> <pages> pages 41-42, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Servers can also utilize performance predictions to manage movement of data among levels of a hierarchy for HSM-based video-on-demand environments <ref> [15, 8] </ref>.
Reference: [16] <author> J. Myllymaki and M. Livny. </author> <title> Disk-tape joins: Synchronizing disk and tape access. </title> <booktitle> In Proc. ACM SIGMETRICS Conference, </booktitle> <month> May </month> <year> 1995. </year> <note> Expanded version retrieved via ftp. </note>
Reference-contexts: In some database systems the data is laid out explicitly on both disk and tape, and access methods must explicitly refer to one or the other <ref> [16] </ref>. Mainframe systems 5 have explicitly made the distinction between data on tape and data on disk for years, while actively using tape to manipulate (as opposed to backup and restore) data. Sorting algorithms based on tape's sequential access method have also been used for many years [14].
Reference: [17] <author> R. H. Patterson, G. A. Gibson, E. Ginting, D. Stodolsky, and J. Zelenka. </author> <title> Informed prefetch-ing and caching. </title> <booktitle> In Proc. 15th Annual ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 79-95. </pages> <publisher> ACM, </publisher> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: SLEDs are similar, but are more closely tied to the concept of data objects with storage and system state. Hints are used by file systems to order disk accesses and make caching decisions. These hints can be provided explicitly <ref> [17, 1, 6] </ref> or determined by the system based on information such as file name or access history [10]. However, hints are typically one-way information; there is no way for the application to base its I/O patterns on the current state of the file system cache and storage devices.
Reference: [18] <author> P. V. Rangan and H. M. Vin. </author> <title> Designing file systems for digital video and audio. </title> <booktitle> In Proc. Thirteenth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 81-94, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: For applications unable to reorder or reduce their I/O requests, SLEDs will provide only a means for estimating the performance that can be achieved, a useful feature for admissions control in real-time environments and evaluation of potential execution in multimedia file systems <ref> [18, 2] </ref>. As mentioned above, applications such as web browsers may find SLEDs' performance prediction useful, in order to let the user know how long a particular request might take, possibly giving the user the option to cancel requests for which he is unwilling to wait. <p> SLEDs for distributed file systems will require real-time network protocols and techniques such as RSVP to create a complete end-to-end quality of service. This will create, effectively, NFS with the guaranteed I/O rates now provided by multimedia file systems <ref> [18, 2, 21] </ref>. In a distributed environment, clients have less knowledge and control of activity at the server, and unpredictable network traffic can interfere.
Reference: [19] <author> C. Ruemmler and J. Wilkes. </author> <title> An introduction to disk drive modeling. </title> <journal> Computer, </journal> <volume> 27(3) </volume> <pages> 17-28, </pages> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: A second-generation SLEDs implementation will understand the page replacement algorithm so that varying request sequences can be explored. Third-generation models will incorporate physical characteristics such as head position (seek) times and zoning <ref> [19, 26, 23] </ref>, while in the distant future, it could ultimately become important to model the rotational position of a drive.
Reference: [20] <author> M. Stonebraker, R. Devine, M. Kornacker, W. Litwin, A. Pfeffer, A. Sah, and C. Staelin. </author> <title> An economic paradigm for query processing and data migration in mariposa. In Parallel and Distributed Information Systems, </title> <institution> page xxx, Austin, Texas, </institution> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: Sorting algorithms based on tape's sequential access method have also been used for many years [14]. SLEDs may provide the infrastructure for understanding the delay in retrieval necessary to support economic query optimization models in database systems <ref> [20] </ref>. HP's attribute-managed storage [3] incorporates performance descriptions of the storage devices to be integrated into a storage system.
Reference: [21] <author> A. Sweeney, D. Doucette, W. Hu, C. Anderson, M. Nishimoto, and G. Peck. </author> <title> Scalability in the XFS file system. </title> <booktitle> In Proc. 1996 USENIX Technical Conference, </booktitle> <pages> pages 1-14. </pages> <publisher> USENIX, </publisher> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: SLEDs for distributed file systems will require real-time network protocols and techniques such as RSVP to create a complete end-to-end quality of service. This will create, effectively, NFS with the guaranteed I/O rates now provided by multimedia file systems <ref> [18, 2, 21] </ref>. In a distributed environment, clients have less knowledge and control of activity at the server, and unpredictable network traffic can interfere.
Reference: [22] <author> J. </author> <title> Touch. A view of communication middleware. </title> <booktitle> presentation at Sigcomm '95 invited workshop on middleware, </booktitle> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: RSVP has no "state change function" associated with accessing certain data, and deals with streams of data rather than the specific data objects of SLEDs. Joe Touch has suggested a Resource Descriptor Interface <ref> [22] </ref>, which proposes a model for representing all system resources as communications links. SLEDs are similar, but are more closely tied to the concept of data objects with storage and system state. Hints are used by file systems to order disk accesses and make caching decisions.
Reference: [23] <author> R. Van Meter. </author> <title> Observing the effects of multi-zone disks. </title> <booktitle> In Proc. USENIX '97 Technical Conference, </booktitle> <pages> pages 19-30. </pages> <publisher> USENIX, </publisher> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: A second-generation SLEDs implementation will understand the page replacement algorithm so that varying request sequences can be explored. Third-generation models will incorporate physical characteristics such as head position (seek) times and zoning <ref> [19, 26, 23] </ref>, while in the distant future, it could ultimately become important to model the rotational position of a drive.
Reference: [24] <author> R. W. Watson and R. A. Coyne. </author> <title> The parallel I/O architecture of the high-performance storage system (HPSS). </title> <booktitle> In Proc. Fourteenth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 27-44. </pages> <publisher> IEEE, </publisher> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: The third generation of SLED will incorporate mechanical knowledge of the complex devices, such as autochangers and tape drives, involved. This will allow direct estimation of the completion time for specific request sequences. The High Performance Storage System <ref> [24] </ref> provides an interface for hints, but it is currently unim-plemented; SLEDs could be incorporated as well.
Reference: [25] <author> T. S. Woodrow. </author> <title> Hierarchical storage management system evaluation. </title> <editor> In B. Kobler and P. Hariharan, editors, </editor> <booktitle> Proc. Third NASA God-dard Conference on Mass Storage Systems and Technologies, </booktitle> <pages> pages 187-216, </pages> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: Application-controlled file caching [5] is most like SLEDs, but is tied to the concept of on-disk file systems, with no support for multiple storage hierarchy levels, and no ability to predict performance. Tops-20, NAStore and Cray's Data Migration Facility <ref> [25] </ref> support a single-bit addition to the file system's inode to indicate that files are in archival storage rather than on disk. This aproach can be viewed as very simple SLEDs.
Reference: [26] <author> B. L. Worthington, G. R. Ganger, and Y. N. Patt. </author> <title> Scheduling for modern disk drives and nonrandom workloads. </title> <type> Technical Report CSE-TR-194-94, </type> <institution> University of Michigan, </institution> <month> Mar. </month> <year> 1994. </year> <month> 8 </month>
Reference-contexts: A second-generation SLEDs implementation will understand the page replacement algorithm so that varying request sequences can be explored. Third-generation models will incorporate physical characteristics such as head position (seek) times and zoning <ref> [19, 26, 23] </ref>, while in the distant future, it could ultimately become important to model the rotational position of a drive.
References-found: 26

