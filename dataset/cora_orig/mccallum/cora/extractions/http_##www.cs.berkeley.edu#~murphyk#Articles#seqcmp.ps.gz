URL: http://www.cs.berkeley.edu/~murphyk/Articles/seqcmp.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~murphyk/publ.html
Root-URL: http://www.cs.berkeley.edu
Title: Biological Sequence Comparison: An Overview of Techniques  
Author: Kevin P Murphy 
Date: 9 May 1994  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. V. Aho, D. Hirschberg, and J. Ullman. </author> <title> Bounds on the complexity of the longest common subsequence problem. </title> <journal> J. of the ACM, </journal> <volume> 23(1) </volume> <pages> 1-12, </pages> <year> 1976. </year>
Reference-contexts: in the relevant range, evaluate L at each chosen (p; q) point, and find the maximum; "zoom in" on some *-region around the maximum and sample more finely; repeat until the desired precision has been achieved. (Since p; q are probability values, the relevant range we need to sample is <ref> [0; 1] </ref> fi [0; 1]. <p> range, evaluate L at each chosen (p; q) point, and find the maximum; "zoom in" on some *-region around the maximum and sample more finely; repeat until the desired precision has been achieved. (Since p; q are probability values, the relevant range we need to sample is <ref> [0; 1] </ref> fi [0; 1]. <p> The unit cost and integer nature of the scoring function actually offers algorithmic leverage not obtainable in the general (real-valued scoring function) case. (In the following discussion, we assume m n to simplify notation.) In 1976 it was shown <ref> [1] </ref> that the lcs problem is (mn) for any algorithm which can only compare symbols to see if they are equal or unequal. However, if one assumes that symbols are ordered can be compared in this order, the lower bound is only (n log n) [29].
Reference: [2] <author> S. F. Altschul. </author> <title> Amino acid substitution matrices from an information theoretic perspective. </title> <journal> J. of Molecular Biology, </journal> <volume> 219(3) </volume> <pages> 555-565, </pages> <year> 1991. </year>
Reference-contexts: Also, p s =p d yields an estimate of the relative rates of substitution 11 and deletion, for a given t and . (Substitutions are much more common than indels, unless the sequences are very dissimilar.) Unfortunately, Altschul <ref> [2] </ref> writes "It has been observed that, in general, the mutations along the genes coding for proteins are not Poisson-distributed." 4.3 Information-theoretic methods of computing substitution scores The Bishop and Thompson model allows us to estimate the relative importance of substitution and indels. <p> This turns out to be the relative entropy of the target and background distributions: H = i;j X q ij log 2 p i p j Using this fact it can be shown <ref> [2] </ref> that in fact the PAM120 matrix is more suitable for searching protein databases, while for comparing two specific proteins with suspected homology, the PAM200 matrix is better. 5 Faster methods for computing the similarity of two sequences The classic dynamic programming methods just described are considered the most sensitive tests
Reference: [3] <author> S. F. Altschul and B. W. Erikson. </author> <title> Significance of nucleotide sequence alignments: a method for random sequence permuation. Molecular Biology and Evolution, </title> <booktitle> 2(6) </booktitle> <pages> 526-538, </pages> <year> 1985. </year>
Reference-contexts: He presents an algorithm to do this, but does not prove that it uniformly samples the space of alternative permutations. A method to generate random permutations which preserves di- and tri-nucleotide frequencies is described in <ref> [3] </ref>. 3.3 Searching databases When searching a large database there isn't time to generate sets of random sequences for each potential match. An alternative is to regard the database itself as a set of sequences which are effectively random with respect to the query [18].
Reference: [4] <author> S. F. Altschul and B. W. Erikson. </author> <title> A nonlinear measure of subalignment similarity and its significance levels. </title> <journal> Bulletin of Mathematical Biology, </journal> <volume> 48 </volume> <pages> 617-632, </pages> <year> 1986. </year>
Reference-contexts: Many other biological features can be captured in this way. We hope to examine the effect of going beyond a finite number of states (for instance, by allowing stacks). (See also <ref> [4, 6] </ref>.) 2.3 Sensitive dependence on initial parameters One problem with the above method is that there is no principled way of choosing the cost parameters; often they have to be "tweaked" to get the desired alignment, which is usually the one that best accords with other biological facts about the
Reference: [5] <author> S. F. Altschul, W. Gish, W. Miller, E. W. Myers, and D. J. Lipman. </author> <title> A basic local alignment search tool. </title> <journal> J. of Molecular Biology, </journal> <volume> 215 </volume> <pages> 403-410, </pages> <year> 1990. </year>
Reference-contexts: As k increases, the optimal restricted alignment becomes less optimal, but jP k j becomes rapidly smaller (the size is about mn=jj k in expectation) and hence the process becomes much quicker. 3 Another widely used program is called BLASTA <ref> [5] </ref> which works on similar principles to FASTA, except that it disallows gaps. Thus it tries to find the longest pair of segements which, when aligned, has maximal score (a Maximal Segment Pair).
Reference: [6] <author> P. Argos. </author> <title> A sensitive procedure to compare amino acid sequences. </title> <journal> J. of Molecular Biology, </journal> <volume> 193 </volume> <pages> 385-396, </pages> <year> 1987. </year>
Reference-contexts: Many other biological features can be captured in this way. We hope to examine the effect of going beyond a finite number of states (for instance, by allowing stacks). (See also <ref> [4, 6] </ref>.) 2.3 Sensitive dependence on initial parameters One problem with the above method is that there is no principled way of choosing the cost parameters; often they have to be "tweaked" to get the desired alignment, which is usually the one that best accords with other biological facts about the
Reference: [7] <author> R. Arratia, P. Morris, and M. S. Waterman. </author> <title> Stochastic scrabble: large deviations for sequences with scores. </title> <journal> J. of Applied Probability, </journal> <volume> 25 </volume> <pages> 106-199, </pages> <year> 1988. </year>
Reference-contexts: If the similarity is actually the logarithm of the probability that x mutates into y, then the sum of the scores of each column will give the log-probability that one sequence mutated to the other. More precisely, it has been shown <ref> [7, 31, 32, 22] </ref> that q ij = p i p j e s ij , where p i (p j ) is the probability of x i (y j ) (the background distribution), s ij is the score for substituting x i for y j , q ij is the
Reference: [8] <author> R. Arratia and M. S. Waterman. </author> <title> An erdos-renyi law with shifts. </title> <booktitle> Advances in Mathematics, </booktitle> <volume> 55 </volume> <pages> 13-23, </pages> <year> 1985. </year>
Reference-contexts: However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem). It can be shown <ref> [8, 55, 56, 33] </ref> that the longest region L found for two sequences of length n has approximate mean L = log (1=P ) and variance 2 1 ( log (1=p) 1 where P is the probability that a random base from one sequence is the same as the base from
Reference: [9] <author> V. Bafna and Pavel Pevzner. </author> <title> Approximate methods for multiple sequence alignment. </title> <type> Technical report, </type> <institution> Penn. State. </institution> <type> Manuscript. </type>
Reference-contexts: In particular, it has been shown to be NP-complete [53]. Consequently many of the techniques used in practice are heuristic (see for example the review in [13]) and lack a sound theoretical basis (although a number of approximation results with provable bounds have recently appeared: see for example <ref> [9] </ref>). I clearly cannot hope to do justice to such a vast subject in a short term paper. What I do hope to do is to demonstrate the relevance of the techniques I have learnt in the class CIS 628 and LING 525/CIS 899 to this domain.
Reference: [10] <author> Donald C. Benson. </author> <title> Fourier methods for biosequence analysis. </title> <journal> Nucleic Acids Research, </journal> <volume> 18(21) </volume> <pages> 6305-6310, </pages> <year> 1990. </year>
Reference-contexts: Thus p matches are more significant if they occur together in a local run than if they are spread out all along the diagonal (in which case they could have arisen by chance). Benson <ref> [10] </ref> has devised a method of performing some kind of localilty check using FFTs. He suggests regarding a bead on a string being placed at each location where two bases match in the alignment.
Reference: [11] <author> M. J. Bishop and E. A. Thompson. </author> <title> Maximum likelihood alignment of DNA sequences. </title> <journal> J. of Molecular Biology, </journal> (190):159-165, 1986. 
Reference-contexts: In this section we describe the model of Bishop and Thompson <ref> [11] </ref>. We have two sequences B, C which are assumed to have evolved from a common ancestor A time t in the past.
Reference: [12] <author> B. E. </author> <title> Blaisdell. Markov chain analysis finds a significant influence of neighboring bases on the occurnce of a base in eucaryotic nuclear dna sequences both protein-coding and noncoding. </title> <journal> J. of Molecular Evolution, </journal> <volume> 21 </volume> <pages> 278-288, </pages> <year> 1985. </year>
Reference-contexts: It has been found, however, that second or third order Markov models (in which a base depends on one or two neighbors, respectively) are adequate to capture most <ref> [12, 51] </ref> but not all [25] of DNA's regularity. Consequently, if the transition probabilities can be inferred from related sequences, then one can generate random strings according to this distribution and use this to test significance of a score.
Reference: [13] <author> S. C. Chan, A. K. C. Wong, and D. K. Y. Chiu. </author> <title> A survey of multiple sequence comparison techniques. </title> <journal> Bulletin of Mathematical Biology, </journal> <volume> 54(4) </volume> <pages> 563-598, </pages> <year> 1992. </year>
Reference-contexts: In particular, it has been shown to be NP-complete [53]. Consequently many of the techniques used in practice are heuristic (see for example the review in <ref> [13] </ref>) and lack a sound theoretical basis (although a number of approximation results with provable bounds have recently appeared: see for example [9]). I clearly cannot hope to do justice to such a vast subject in a short term paper.
Reference: [14] <author> W. L. Chang and E. L. Lawler. </author> <title> Approximate matching in sublinear expected time. </title> <booktitle> IEEE Symposium on the Foundations of Computer Science, </booktitle> <address> 31st:116-124, </address> <year> 1990. </year>
Reference-contexts: A variety of simpler O (nk) worst-case algorithms are known (which work by only computing a "zone" of size k around the main diagonal in the m fi n matrix). Recently a number of algorithms have been proposed that are sub-linear in expectation. Chang and Lawler <ref> [14] </ref> have devised an algorithm that takes O ((nk log m)=m) expected time provided k is less than m=(log m + O (1)). (That is, the mismatch ratio * = k=m, which is the maximum fraction of errors permitted per unit length of the query, must be less than 1= log
Reference: [15] <author> William I. Chang and Jordan Lampe. </author> <title> Theoretical and empirical comparisons of approximate string matching algorithms. In Combinatorial Pattern Matching. </title> <publisher> Springer, </publisher> <year> 1992. </year>
Reference-contexts: (Query lengths m tend to be constant, about 250 amino acids coding for a typical protein, for example). 12 5.1 Theoretical complexity results How fast can we do sequence comparison? Theoretical computer scientists have come up with some complexity results on a simplified version of the problem (see review in <ref> [15] </ref>). The longest common subsequence (lcs) problem is to find an alignment which maximizes the number of identical aligned pairs i.e. c (x; y) = 1 if x = y and 0 otherwise.
Reference: [16] <author> Erik A. Cheever, G. Christian Overton, and David B. </author> <title> Searls. Fast fourier transform-based correlation of DNA sequences using complex plane encoding. </title> <journal> Computer Applications in the Biological Sciences, </journal> <volume> 7(2) </volume> <pages> 143-154, </pages> <year> 1991. </year>
Reference-contexts: This requires 8 forward FFTs (4 for each base in ~x and 4 for each base in ~y), 4 element-wise multiplications, one summation and then one inverse FFT (since the sum of the transforms is the transform of the sum, by linearity). Cheever et al. <ref> [16] </ref> made the observation that we can reduce the number of forward FFTs by a factor of 2 by encoding the sequences in the complex plane. <p> We can achieve further savings by using more points around the unit circle in the complex plane, but then we start to get interference because the codings are non-orthogonal; this reduces the signal to noise ratio (see <ref> [16] </ref> for details). 6.3 Computing other features with the fourier transform We can use this technique to search for other features quite cheaply. For instance, we can check for inverted complementary repeats within a sequence by looking for negative peaks in Re (~x ~x Rfl ) (using the 1-vector encoding). <p> However, hardware implementations of the dynamic programming algorithm, using systolic arrays [35], are also being developed, and these would obviously be preferable. 6.5 Comparison with k-tuple filtering k-tuple filtering has time complexity O (mn=jj k ) which sounds worse than O (n log n). However, empirical results <ref> [16] </ref> have found it to be better in practice, especially if m t n, which is usually the case when searching databases.
Reference: [17] <author> J. F. Collins and A. F. W. Coulson. </author> <title> Molecular sequence comparison and alignment. </title> <editor> In M. J. Bishop and C. J. Rawlings, editors, </editor> <title> Nucleic Acid and Protein Sequence Analysis: a Practical Approach. </title> <publisher> IRL Press, </publisher> <year> 1987. </year>
Reference-contexts: By increasing k we can extend this linear phase, although this is at the expense of signal strength <ref> [17] </ref>, especially for highly substituted sequences. By contrast, the fourier method is O (n log n) no matter how short the other sequence is, and increasing k actually slows the system down because it increases the number of FFTs that need to be carried out.
Reference: [18] <author> John F. Collins and Andrew F. W. Coulson. </author> <title> Significance of protein sequence similarities. </title> <editor> In R. F. Doolittle, editor, </editor> <title> Molecular Evolution: Computer Analysis of Protein and Nucleic Acid Sequences. Methods in Enzymology (83). </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: An alternative is to regard the database itself as a set of sequences which are effectively random with respect to the query <ref> [18] </ref>. This is the approach used in the Wilbur-Lipman procedure for searching databases, which will be described more fully in Section 5.2. It looks for matches between k-tuples rather than individual symbols, and then counts the number of matches in each diagonal.
Reference: [19] <author> William H. E. Day and F. R. McMorris. </author> <title> Alignment, comparison and consensus of molecular sequences. </title> <booktitle> In International Federation of Classification Societies, </booktitle> <year> 1993. </year>
Reference-contexts: Furthermore, by using dynamic programming, the "optimal" alignment can be found in O (mn) time. This technique is very widely used, and many extensive reviews on it are available [55, 57, 40]; see especially the recent (1993) literature survey in <ref> [19] </ref>, which contains an annotated bibliography of over 600 entries. 1 Aligning multiple sequences at a time can be useful in detecting weak homologies, but the problem is inherently more complex. In particular, it has been shown to be NP-complete [53].
Reference: [20] <author> Margaret O. Dayhoff, R. M. Schwartz, and B. C. </author> <title> Orcutt. </title> <editor> In Margaret O. Dayhoff, editor, </editor> <title> Atlas of Protein Sequence and Structure, Volume 5, Supplement 3. </title> <booktitle> National Biomedical Research Foundation, </booktitle> <year> 1978. </year>
Reference-contexts: Dayhoff et al. <ref> [20] </ref> have proposed a model of molecular evolution in which they estimate the probabilities p i , p j and q ij for differing amounts of evolutionary divergence t , which is usually measured in PAMs. (The amount of evolutionary change that yields, on average, one substitution per 100 amino acid
Reference: [21] <author> C. DeLisi. </author> <title> Computers in molecular biology: </title> <booktitle> Current applications and emerging trends. Science, </booktitle> <volume> 240 </volume> <pages> 47-52, </pages> <year> 1988. </year>
Reference-contexts: As a result, identical bases in coding regions tend to be in identical codon positions, and this in turn implies the occurrence of sequence periodicities in the coding regions which are missing in the noncoding regions <ref> [21] </ref>. It might also be useful to compare sequences for regions of similar base classes (i.e. purines versus pyrimidines); this might indicate a region of local helical geometry [21]. <p> positions, and this in turn implies the occurrence of sequence periodicities in the coding regions which are missing in the noncoding regions <ref> [21] </ref>. It might also be useful to compare sequences for regions of similar base classes (i.e. purines versus pyrimidines); this might indicate a region of local helical geometry [21]. We can either do this by encoding using a smaller alphabet (producing equivalence classes), or we can make use of our existing complex-plane encoding: the number of equivalent bases is Re (~x ~y R ) + Im (~x ~y).
Reference: [22] <author> A. Dembo and S. Karlin. </author> <title> String limit laws of empirical functionals for large exceedences of partial sums of iid variables. </title> <journal> Annals of Probability, </journal> <note> 1991. In press. </note>
Reference-contexts: If the similarity is actually the logarithm of the probability that x mutates into y, then the sum of the scores of each column will give the log-probability that one sequence mutated to the other. More precisely, it has been shown <ref> [7, 31, 32, 22] </ref> that q ij = p i p j e s ij , where p i (p j ) is the probability of x i (y j ) (the background distribution), s ij is the score for substituting x i for y j , q ij is the
Reference: [23] <author> J. Felsenstein, S. Sawyer, and R. Kochin. </author> <title> An efficient method for matching nucleic acid sequences. </title> <journal> Nucleic Acids Research, </journal> <volume> 10 </volume> <pages> 133-139, </pages> <year> 1982. </year>
Reference-contexts: Another method, based on the fast fourier transform, gives us even less information, but runs in O (n log n) time and hence is of some interest. This technique was originally developed by Felsenstein et al. <ref> [23] </ref>.
Reference: [24] <author> W. M. Fitch. </author> <title> Random sequences. </title> <journal> J. of Molecular Biology, </journal> <volume> 163 </volume> <pages> 171-176, </pages> <year> 1983. </year>
Reference-contexts: For independent bases this is very straightforward. Fitch has suggested a method for generating permutations which preserve dinucleotide constraints <ref> [24] </ref>. He does this by constructing a graph in which each node corresponds to a pair of consecutive symbols, and each directed arc connects one pair to its following pair (with the last pair connected to the first).
Reference: [25] <author> Michael S. Gelfand, Constantine G. Kozhukhin, and Pavel A. Pevzner. </author> <title> Extendable words in nucleotide sequences. </title> <journal> Computer Applications in the Biological Sciences, </journal> (2):129-135, 1992. 
Reference-contexts: It has been found, however, that second or third order Markov models (in which a base depends on one or two neighbors, respectively) are adequate to capture most [12, 51] but not all <ref> [25] </ref> of DNA's regularity. Consequently, if the transition probabilities can be inferred from related sequences, then one can generate random strings according to this distribution and use this to test significance of a score.
Reference: [26] <author> W. B. Goad and M. I. Kanehisa. </author> <title> Pattern recognition in nucleic acid sequences, i: A general method for finding local homologies and symmetries. </title> <journal> Nucleic Acids Research, </journal> <volume> 10 </volume> <pages> 247-263, </pages> <year> 1982. </year>
Reference-contexts: And if one is searching a large database, it is a sensible policy to check the statistically significant matches first. 3.1 Analytical results Approximate analytic results for the statistical distributions of similarity scores have been obtained for the Needleman-Wunsch global alignment method <ref> [26, 30, 49] </ref>. However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem).
Reference: [27] <author> Dan Gusfield. </author> <title> Algorithms on Strings. </title> <note> 1994. In preparation. </note>
Reference-contexts: of DNA: one can compare the query sequence with a database of sequences whose function is known, and predict the function of the query sequence based on the most similar match. (This highlights the relevance of various string searching techniques which have been developed in computer science; see for example <ref> [27] </ref>.) The question of how to define similarity is still controversial.
Reference: [28] <author> Dan Gusfield, K. Balasubramanian, and Dalit Naor. </author> <title> Parametric optimization of sequence alignment. </title> <booktitle> SIAM Symposium on Discrete Algorithms, 3rd, </booktitle> <year> 1992. </year>
Reference-contexts: Rather than repeatedly varying the parameters and running the DP algorithm, it is desirable to use parametric methods to produce all the optimal alignments at once <ref> [58, 28] </ref>. Gusfield et al. have characterised the maximal convex regions of the parameter space inside of which one alignment is optimal throughout.
Reference: [29] <author> D. S. Hirschberg. </author> <title> An information-theoretic lower bound for the longest common subsequence problem. </title> <journal> Information Processing Letters, </journal> <volume> 7(1) </volume> <pages> 40-41, </pages> <year> 1978. </year>
Reference-contexts: However, if one assumes that symbols are ordered can be compared in this order, the lower bound is only (n log n) <ref> [29] </ref>. The best known algorithm [37], which uses the "Four Russians Paradigm", takes O (mn= log 2 n) time.
Reference: [30] <author> M. Kanehisa. </author> <title> Use of statistical criteria for screening potential homologies in nucleic acid sequences. </title> <journal> Nucleic Acids Research, </journal> <pages> pages 203-213, </pages> <year> 1984. </year>
Reference-contexts: And if one is searching a large database, it is a sensible policy to check the statistically significant matches first. 3.1 Analytical results Approximate analytic results for the statistical distributions of similarity scores have been obtained for the Needleman-Wunsch global alignment method <ref> [26, 30, 49] </ref>. However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem).
Reference: [31] <author> S. Karlin and S. F. Altschul. </author> <title> Methods for assessing the statistical significance of molecular sequence features by using general scoring schemes. </title> <booktitle> Proceedings of the National Academy of Science, USA, </booktitle> <pages> pages 2264-2268, </pages> <year> 1990. </year>
Reference-contexts: If the similarity is actually the logarithm of the probability that x mutates into y, then the sum of the scores of each column will give the log-probability that one sequence mutated to the other. More precisely, it has been shown <ref> [7, 31, 32, 22] </ref> that q ij = p i p j e s ij , where p i (p j ) is the probability of x i (y j ) (the background distribution), s ij is the score for substituting x i for y j , q ij is the
Reference: [32] <author> S. Karlin, A. Dembo, and T. Kawabata. </author> <title> Statistical composition of high-scoring segements from molecular sequences. </title> <journal> Annals of Statistics, </journal> <volume> 18 </volume> <pages> 571-581, </pages> <year> 1990. </year>
Reference-contexts: If the similarity is actually the logarithm of the probability that x mutates into y, then the sum of the scores of each column will give the log-probability that one sequence mutated to the other. More precisely, it has been shown <ref> [7, 31, 32, 22] </ref> that q ij = p i p j e s ij , where p i (p j ) is the probability of x i (y j ) (the background distribution), s ij is the score for substituting x i for y j , q ij is the
Reference: [33] <author> S. Karlin and G. Ghandour. </author> <title> Comparitive statistics for DNA and protein sequences: single sequence analysis. </title> <booktitle> Proceedings of the National Academy of Science, USA, </booktitle> <volume> 82 </volume> <pages> 5800-5804, </pages> <year> 1985. </year>
Reference-contexts: However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem). It can be shown <ref> [8, 55, 56, 33] </ref> that the longest region L found for two sequences of length n has approximate mean L = log (1=P ) and variance 2 1 ( log (1=p) 1 where P is the probability that a random base from one sequence is the same as the base from
Reference: [34] <author> D. J. Lipman and W. R. Pearson. </author> <title> Rapid and sensitive protein similarity searches. </title> <journal> Science, </journal> <volume> 227 </volume> <pages> 1435-1441, </pages> <year> 1985. </year>
Reference-contexts: O (pkm) additional time will be spent on these matches, and since p is O (n=m), we are no better off than before. 5.2 k-tuple filtering methods The method of computing similarity for use in database searching which is most widely used in pratice is due to Wilbur and Lipman <ref> [59, 34, 43] </ref>. Instead of trying to match individual bases one at a time, we match k of them at a time (k is usually taken between 3 and 6). Their FASTA 13 algorithm 3 counts the number of matching k-tuples on each diagonal.
Reference: [35] <author> R. J. Lipton and D. Lopresti. </author> <title> A systolic array for rapid string comparison. </title> <editor> In Henry Fuchs, editor, </editor> <booktitle> Chapel Hill Conference on VLSI, </booktitle> <pages> pages 363-376. </pages> <publisher> Computer Science Press, </publisher> <year> 1985. </year>
Reference-contexts: It is also possible to use various off-the-shelf DSP chips to perform the FFT. However, hardware implementations of the dynamic programming algorithm, using systolic arrays <ref> [35] </ref>, are also being developed, and these would obviously be preferable. 6.5 Comparison with k-tuple filtering k-tuple filtering has time complexity O (mn=jj k ) which sounds worse than O (n log n).
Reference: [36] <author> A. M. Liquori, A. Ripamonti, C. Sadun, S. Ottani, and D. Braga. </author> <title> Pattern recognition of sequence similarities in globular proteins by fourier analysis: A novel approach to molecular evolution. </title> <journal> J. of Molecular Evolution, </journal> <volume> 23 </volume> <pages> 80-87, </pages> <year> 1986. </year>
Reference-contexts: This might indicate that we are looking at a piece of tRNA, which tends to fold on itself in a hairpin-like arrangement. We can check for periodicity by computing the autocorrelation function ~x ? ~x; this seems to be essentially what is done in <ref> [36] </ref>, although they apply it to proteins. This can be used to distinguish coding from non-coding regions of DNA. It is well known that codons that specify the same amino acid tend to be used with unequal frequencies.
Reference: [37] <author> W. J. Masek and M. S. Patterson. </author> <title> A faster algorithm for computing string-edit distances. </title> <journal> J. of Computing Systems Science, </journal> <volume> 20(1) </volume> <pages> 18-31, </pages> <year> 1980. </year>
Reference-contexts: However, if one assumes that symbols are ordered can be compared in this order, the lower bound is only (n log n) [29]. The best known algorithm <ref> [37] </ref>, which uses the "Four Russians Paradigm", takes O (mn= log 2 n) time. A recent O (nk= log n) algorithm [60] is better in practice, where k is the actual number of differences between the two strings (in the worst case, k is O (m)).
Reference: [38] <author> R. F. Mott, T. B. L. Kirkwood, and R. N. Curnow. </author> <title> A test for the statistical significance of dna sequence similarities for application in databbank searches. </title> <journal> Computer Applications in the Biological Sciences, </journal> <volume> 5(2) </volume> <pages> 123-131, </pages> <year> 1989. </year> <month> 22 </month>
Reference-contexts: Secondly, the distribution is influenced by the relative frequencies of ngrams (nucleotides, dinucleotides, trinucleotides, etc.). And thirdly it is necessary to take into account the length of the diagonal in assessing its significance. Mott, Kirkwood and Curnow <ref> [38] </ref> have calculated an approximate distribution of k-tuple scores which meets these objections. Their null hypothesis is that the pattern of matches and mismatches along each diagonal can be modelled by a first-order Markov chain.
Reference: [39] <author> Eugene W. Myers. </author> <title> A sublinear algorithm for approximate keyword searching. </title> <type> Technical Report 25, </type> <institution> Dept. of Comp. Sci., Uni. Arizona, </institution> <year> 1990. </year> <note> To appear in Algorithmica. </note>
Reference-contexts: A truly sublinear algorithm has recently been proposed by Myers <ref> [39] </ref>. This takes expected time O (kn ff log n), where ff = ff (*) is an increasing and concave function which is less than 1 for * &lt; 33% when jj = 4 (DNA) and for * &lt; 56% when jj = 20 (amino acids).
Reference: [40] <author> Eugene W. Myers. </author> <title> An overview of sequence comparison algorithms in molecular biology. </title> <type> Technical Report 29, </type> <institution> Dept. of Computer Science, Uni. of Arizona, </institution> <year> 1991. </year>
Reference-contexts: Furthermore, by using dynamic programming, the "optimal" alignment can be found in O (mn) time. This technique is very widely used, and many extensive reviews on it are available <ref> [55, 57, 40] </ref>; see especially the recent (1993) literature survey in [19], which contains an annotated bibliography of over 600 entries. 1 Aligning multiple sequences at a time can be useful in detecting weak homologies, but the problem is inherently more complex.
Reference: [41] <author> Dalit Naor and Douglas Brutlag. </author> <title> On suboptimal alignments of biological sequences. </title> <type> Technical report, </type> <institution> Stanford Uni. Medical Center, Dept. of Biochemistry, </institution> <year> 1992. </year>
Reference-contexts: We might therefore want to examine near-optimal solutions in order of decreasing optimality. A way of defining all non-optimal alignments in terms of a small set of "canonical" alignments is given in <ref> [41] </ref>, and this can be used to count and efficiently enumerate the near-optimal solutions. 5 3 Assessing the significance of an alignment Any two sequences can be aligned.
Reference: [42] <author> S. B. Needleman and C. D. Wunsch. </author> <title> A general method applicable to the searc fror the similarities in the amino acid sequences of two proteins. </title> <journal> J. of Molecular Biology, </journal> <volume> 48 </volume> <pages> 443-453, </pages> <year> 1970. </year>
Reference-contexts: Figure 1 is the first one listed in the eamples in the introduction. 2 We can of course use any generic shortest path algorithm, but we can do better by exploiting the lattice structure of the graph and using dynamic programming. (This technique is originally due to Needleman and Wunsch <ref> [42] </ref>; Sankoff [44] and Sellers [45, 46] also made early contributions.) We observe that any alignment between two sequences must end in one of three ways: ... x ... - ... x Thus if we define C (i; j) to be the cost of aligning X 1 : : : X
Reference: [43] <author> W. R. Pearson and D. J. Lipman. </author> <title> Improved tools for biological sequence comparisons. </title> <booktitle> Proceedings of the National Academy of Science, </booktitle> <address> USA, 85:2444, </address> <year> 1988. </year>
Reference-contexts: O (pkm) additional time will be spent on these matches, and since p is O (n=m), we are no better off than before. 5.2 k-tuple filtering methods The method of computing similarity for use in database searching which is most widely used in pratice is due to Wilbur and Lipman <ref> [59, 34, 43] </ref>. Instead of trying to match individual bases one at a time, we match k of them at a time (k is usually taken between 3 and 6). Their FASTA 13 algorithm 3 counts the number of matching k-tuples on each diagonal.
Reference: [44] <author> D. Sankoff. </author> <title> Matching sequences under deletion-insertion constraints. </title> <booktitle> Proceedings of the National Academy of Science, USA, </booktitle> <volume> 68 </volume> <pages> 4-6, </pages> <year> 1972. </year>
Reference-contexts: is the first one listed in the eamples in the introduction. 2 We can of course use any generic shortest path algorithm, but we can do better by exploiting the lattice structure of the graph and using dynamic programming. (This technique is originally due to Needleman and Wunsch [42]; Sankoff <ref> [44] </ref> and Sellers [45, 46] also made early contributions.) We observe that any alignment between two sequences must end in one of three ways: ... x ... - ... x Thus if we define C (i; j) to be the cost of aligning X 1 : : : X i with
Reference: [45] <author> P. H. Sellers. </author> <title> An algorithm for the distance between two sequences. </title> <journal> J. of Combinatorics Theory, </journal> <volume> 16 </volume> <pages> 253-258, </pages> <year> 1974. </year>
Reference-contexts: one listed in the eamples in the introduction. 2 We can of course use any generic shortest path algorithm, but we can do better by exploiting the lattice structure of the graph and using dynamic programming. (This technique is originally due to Needleman and Wunsch [42]; Sankoff [44] and Sellers <ref> [45, 46] </ref> also made early contributions.) We observe that any alignment between two sequences must end in one of three ways: ... x ... - ... x Thus if we define C (i; j) to be the cost of aligning X 1 : : : X i with Y 1 :
Reference: [46] <author> P. H. Sellers. </author> <title> On the theory and computation of evolutionary distances. </title> <journal> SIAM J. of Applied Math, </journal> <volume> 26 </volume> <pages> 787-793, </pages> <year> 1974. </year>
Reference-contexts: one listed in the eamples in the introduction. 2 We can of course use any generic shortest path algorithm, but we can do better by exploiting the lattice structure of the graph and using dynamic programming. (This technique is originally due to Needleman and Wunsch [42]; Sankoff [44] and Sellers <ref> [45, 46] </ref> also made early contributions.) We observe that any alignment between two sequences must end in one of three ways: ... x ... - ... x Thus if we define C (i; j) to be the cost of aligning X 1 : : : X i with Y 1 :
Reference: [47] <author> P. H. Sellers. </author> <title> The theory and computation of evolutionary distances: </title> <journal> pattern recognition. J. of Algorithms, </journal> <volume> 1 </volume> <pages> 359-373, </pages> <year> 1980. </year>
Reference-contexts: What this means in practice is discussed in <ref> [47] </ref>. (For example, if c s &gt; 2c d , it is easy to see that the triangle inequality is violated.) It is very common to write the two sequences X; Y to be aligned along the edges of a (m+1)fi (n+1) matrix, and to put a dot at each point
Reference: [48] <author> Temple F. Smith and Michael S. Waterman. </author> <title> Identification of common molecular sequences. </title> <journal> J. of Molecular Biology, </journal> <volume> 147 </volume> <pages> 195-197, </pages> <year> 1981. </year>
Reference-contexts: So now we are looking for paths in the matrix which not only can start and finish in any column, but can also start and finish in any row. A simple way to do this (due to Smith and Waterman <ref> [48] </ref>) is to use a similarity maximizing framework in which the expected score (between random bases) is negative, and in which there is at least one positive matching score. 1 Then modify the above recurrence to be C (i; j) = maxf0; C (i 1; j 1) + c (X i
Reference: [49] <author> Temple F. Smith, Michael S. Waterman, and C. Burks. </author> <title> The statistical distribution of nucleic acid similarities. </title> <journal> Nucleic Acids Research, </journal> <volume> 13(2) </volume> <pages> 645-656, </pages> <year> 1985. </year>
Reference-contexts: And if one is searching a large database, it is a sensible policy to check the statistically significant matches first. 3.1 Analytical results Approximate analytic results for the statistical distributions of similarity scores have been obtained for the Needleman-Wunsch global alignment method <ref> [26, 30, 49] </ref>. However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem).
Reference: [50] <author> Temple F. Smith, Michael S. Waterman, and W. M. Fitch. </author> <title> Comparative biosequence metrics. </title> <journal> J. of Molecular Evolution, </journal> <volume> 18(1) </volume> <pages> 38-46, </pages> <year> 1981. </year>
Reference-contexts: The conditions under which these are the same are discussed in <ref> [50] </ref>; we shall use the terms interchangeably.
Reference: [51] <author> S. Tavare and B. W. Giddings. </author> <title> Some statistical aspects of the primary structure of nucleotide sequences. </title> <editor> In Michael S. Waterman, editor, </editor> <title> Mathematical Methods for DNA Sequences. </title> <publisher> CRC Press, </publisher> <year> 1989. </year>
Reference-contexts: It has been found, however, that second or third order Markov models (in which a base depends on one or two neighbors, respectively) are adequate to capture most <ref> [12, 51] </ref> but not all [25] of DNA's regularity. Consequently, if the transition probabilities can be inferred from related sequences, then one can generate random strings according to this distribution and use this to test significance of a score.
Reference: [52] <author> V. Veljkovic, I. Cosic, B. Dimitrijevic, and D. Lalovic. </author> <title> Is it possible to analyze DNA and protein sequences by the methods of digital signal processing? IEEE Trans. </title> <journal> Biomedical Engineering, </journal> <volume> 32 </volume> <pages> 337-341, </pages> <year> 1985. </year>
Reference-contexts: We can either do this by encoding using a smaller alphabet (producing equivalence classes), or we can make use of our existing complex-plane encoding: the number of equivalent bases is Re (~x ~y R ) + Im (~x ~y). Velijkovic et al <ref> [52] </ref> remark that many sequences can show homology without sharing biological function, and conversely. They therefore adopt a different encoding scheme, and set x i to the PEII (potential of electron-ion interaction) value of the corresponding base or amino acid at position i.
Reference: [53] <author> Lusheng Wang and Tao Jiang. </author> <title> On the complexity of multiple sequence alignment. </title> <type> Manuscript. </type>
Reference-contexts: In particular, it has been shown to be NP-complete <ref> [53] </ref>. Consequently many of the techniques used in practice are heuristic (see for example the review in [13]) and lack a sound theoretical basis (although a number of approximation results with provable bounds have recently appeared: see for example [9]).
Reference: [54] <author> M. S. Waterman, L. Gordon, and R. Arratia. </author> <title> Phase transitions in sequence matches and nucleic acid structure. </title> <booktitle> Proceedings of the National Academy of Science, USA, </booktitle> <volume> 85(5) </volume> <pages> 1239-1243, </pages> <year> 1987. </year> <month> 23 </month>
Reference-contexts: we assume the scores are distributed normally (a poor assumption!), we can define an approximate critical value L 0:95 = L + 1:64 L That is, for a 5% significance level, we reject the random hypothesis if a similar region longer than L 0:95 is found. (It was shown in <ref> [54] </ref> that for some regions of the (c s =c r ) fi (c d =c r ) parameter space, L grows as O (n 2 ) rather than O (log n).) 2 The use of parametric techniques, to see how much an alignment varies as the costs are changed, would
Reference: [55] <author> Michael S. Waterman. </author> <title> General methods of sequence comparison. </title> <journal> Bulletin of Mathematical Biology, </journal> <volume> 46(4) </volume> <pages> 473-500, </pages> <year> 1984. </year>
Reference-contexts: Furthermore, by using dynamic programming, the "optimal" alignment can be found in O (mn) time. This technique is very widely used, and many extensive reviews on it are available <ref> [55, 57, 40] </ref>; see especially the recent (1993) literature survey in [19], which contains an annotated bibliography of over 600 entries. 1 Aligning multiple sequences at a time can be useful in detecting weak homologies, but the problem is inherently more complex. <p> However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem). It can be shown <ref> [8, 55, 56, 33] </ref> that the longest region L found for two sequences of length n has approximate mean L = log (1=P ) and variance 2 1 ( log (1=p) 1 where P is the probability that a random base from one sequence is the same as the base from
Reference: [56] <author> Michael S. Waterman. </author> <title> Probability distributions for dna sequence comparisons. </title> <editor> In R. M. Miura, editor, </editor> <title> Some Mathematical Questions in Biology: DNA Sequence Analysis. </title> <publisher> American Mathematical Society, </publisher> <year> 1986. </year>
Reference-contexts: However, this is much harder for the Smith-Waterman local alignment method mentioned above. Nevertheless, some results have been obtained for a special case of this, namely exact matching (i.e. the longest common subsequence problem). It can be shown <ref> [8, 55, 56, 33] </ref> that the longest region L found for two sequences of length n has approximate mean L = log (1=P ) and variance 2 1 ( log (1=p) 1 where P is the probability that a random base from one sequence is the same as the base from
Reference: [57] <author> Michael S. Waterman. </author> <title> Sequence alignments. </title> <editor> In Michael S. Waterman, editor, </editor> <title> Mathematical Methods for DNA Sequences. </title> <publisher> CRC Press, </publisher> <year> 1989. </year>
Reference-contexts: For example, the very short DNA sequences ACGC and ACT may be aligned as ACGC ACGC ACGC--- || || .... It can be shown <ref> [57] </ref> that there are O (2 2n ) possible alignments. However, it is possible to represent them all compactly in a O (m fi n) matrix, where m; n are the lengths of the two sequences. <p> Furthermore, by using dynamic programming, the "optimal" alignment can be found in O (mn) time. This technique is very widely used, and many extensive reviews on it are available <ref> [55, 57, 40] </ref>; see especially the recent (1993) literature survey in [19], which contains an annotated bibliography of over 600 entries. 1 Aligning multiple sequences at a time can be useful in detecting weak homologies, but the problem is inherently more complex.
Reference: [58] <author> Michael S. Waterman, Mark Eggert, and Eric Lander. </author> <title> Parametric sequence comparison. </title> <booktitle> Proceedings of the National Academy of Science, USA, </booktitle> <volume> 89 </volume> <pages> 6090-6093, </pages> <year> 1992. </year>
Reference-contexts: Rather than repeatedly varying the parameters and running the DP algorithm, it is desirable to use parametric methods to produce all the optimal alignments at once <ref> [58, 28] </ref>. Gusfield et al. have characterised the maximal convex regions of the parameter space inside of which one alignment is optimal throughout.
Reference: [59] <author> W. J. Wilbur and D. J. Lipman. </author> <title> Rapid similarity searches of nucleic acid and protein data banks. </title> <booktitle> Proceedings of the National Academy of Science, USA, </booktitle> <volume> 80 </volume> <pages> 726-730, </pages> <year> 1983. </year>
Reference-contexts: O (pkm) additional time will be spent on these matches, and since p is O (n=m), we are no better off than before. 5.2 k-tuple filtering methods The method of computing similarity for use in database searching which is most widely used in pratice is due to Wilbur and Lipman <ref> [59, 34, 43] </ref>. Instead of trying to match individual bases one at a time, we match k of them at a time (k is usually taken between 3 and 6). Their FASTA 13 algorithm 3 counts the number of matching k-tuples on each diagonal.
Reference: [60] <author> Sun Wu, Udi Manber, and Gene Myers. </author> <title> A sub-quadratic algorithm for approximate limited expression matching. </title> <type> Technical report, </type> <institution> Dept. of Comp. Sci., Uni. Arizona, </institution> <year> 1992. </year> <month> 24 </month>
Reference-contexts: However, if one assumes that symbols are ordered can be compared in this order, the lower bound is only (n log n) [29]. The best known algorithm [37], which uses the "Four Russians Paradigm", takes O (mn= log 2 n) time. A recent O (nk= log n) algorithm <ref> [60] </ref> is better in practice, where k is the actual number of differences between the two strings (in the worst case, k is O (m)).
References-found: 60

