URL: http://www.iiia.csic.es/Reports/bolero.ps.Z
Refering-URL: http://www.iiia.csic.es/People/enric-work.html
Root-URL: 
Email: e-mail: blopez@etse.urv.es,enric@iiia.csic.es  
Phone: Tel.: 34 3 580 95 70  
Author: Beatriz Lopez, Enric Plaza 
Keyword: in medical diagnosis case-based reasoning, adaptive planning, medical diagnosis, goal state learning,  
Address: Rovira i Virgili, Carretera de Salou, s/n, 43006 Tarragona, Spain.  Barcelona, 08193 Bellaterra, Spain  
Affiliation: Informatica, Escola Tecnica Superior d'Enginyeria, Universitat  Institut d'Investigacio en Intel ligencia Artificial, CSIC Campus Universitat Autonoma de  
Note: learning from experience. Current address: Departament d'Enginyeria  
Abstract: We introduce a case-based system, BOLERO, that learns both plans and goal states, with the aim of improving the performance of a rule-based system by adapting the rule-based system behavior to the most recent information available about a patient. On the one hand, BOLERO gets knowledge from cases in the form of plans that are represented as sequences of decision steps. The advantages of this representation include: 1) retrieval and adaptation of parts of plans (steps) appropriate to the current problem state; 2) generation of new plans not previously available in memory; and 3) learning from experience, either from successful or failed plans. On the other hand, goal states are sets of diagnosis likelihoods and are not known beforehand. For this reason BOLERO uses solutions of past cases to recognize a state as a goal state of a new planning problem. BOLERO and a rule-based system are integrated into a meta-level architecture in which we emphasize the collaboration of both systems in solving problems. The rule-based system executes the plans generated by BOLERO. As a consequence of the execution of plans, the rule-based system furnishes BOLERO with new information with which BOLERO can generate a new plan to adapt the reasoning process of the rule-based system into correspondence with the recent available data. All the methods have been designed to be useful for medical diagnosis and have been tested in the domain of diagnosing pneumonia. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agust, J., Esteva, F., Garca, P., Godo, L., , Lopez de Mantaras, R., Puyol, J., Sierra, C., and Murgui, L., </author> <year> (1992). </year> <title> Structured Local Fuzzy Logics in MILORD. </title> <editor> In Zadeh, L. and Kacprzyk, J., editors, </editor> , <booktitle> Wiley-Inter Science, Wiley Professional Computing Series, </booktitle> <pages> pages 523-551. </pages> <publisher> John Wiley & Sons, Inc. </publisher>
Reference-contexts: Uncertainty and incompleteness typical in medical diagnosis is handled in a traditional approach to the rule-based system with fuzzy methods <ref> (Agust et al., 1992) </ref> or certainty factors (Pearl, 1988) whereas re-planning offers a new approach to fit the diagnostic procedure to the last relevant information available. Finally, we have developed a case-based method to learn and recognize goal states. <p> Facts can be boolean ( ), set-valued ( ), numerical ( ), or fuzzy ( ). In particular, fuzzy facts are important since they are strictly related to the diagnosis finally achieved for a given patient. The approach taken in BOLERO follows from the shell MILORD <ref> (Agust et al., 1992) </ref>, where fuzzy values for medical diagnosis are the following set of linguistic labels: . Two fuzzy facts can be compared according to the position of their certainty value inside this set of linguistic labels.
Reference: <author> Aha, D., </author> <year> (1989). </year> <title> Incremental Instance-Based Learning of Independent and Graded Concept Descriptions. </title> <booktitle> In </booktitle> . 
Reference-contexts: In spite of the fact that similarity functions are often defined ad hoc in each system, it is important to observe that, as we have done in BOLERO, most of the authors use the strategic relevance of facts to evaluate the similarity among cases (Bonissone, Bloom <ref> (Aha, 1989) </ref>, CABOT (Callan et al., 1991), Cain (Cain et al., 1991)). Regarding the learning from experience methods, all systems have the same problem: to determine which cases to store.
Reference: <author> Ashley, K. and Rissland, E., </author> <year> (1988). </year> <title> Waiting on Weighting: A Symbolic Least Commitment Approach. </title> <booktitle> In </booktitle> . 
Reference-contexts: Bonissone and Ayud (1992) propose the use of linguistic values associated with semantic values in order to index and retrieve cases from memory. In HYPO <ref> (Ashley & Rissland, 1988) </ref> a credit assignment process is employed. In BOLERO, we have used numerical values to compare cases because either the use of linguistic labels or a credit assignment process require an additional effort in knowledge acquisition as well as in the treatment.
Reference: <author> Belew, R., </author> <year> (1992). </year> <title> Paradigmatic over-fitting. </title> <type> Personal communication. </type>
Reference-contexts: As a consequence, the generalization process builds disjunctive descriptions of plans. In this sense, we argue that disjunctive characterizations help to face the problem that most of the conjunctive algorithms suffer <ref> (Belew, 1992) </ref>. The overfitting problem relates the number of training cases with the predictivity of the description learned (and so, the probability that future examples of the same concept fit in the learned description).
Reference: <author> Belmonte, M., </author> <month> December </month> <year> 1990. </year> . <type> PhD thesis, </type> <institution> Universitat Autonoma de Barcelona. </institution>
Reference-contexts: Applications where BOLERO could be useful are fault diagnosis: finding which component of a circuit does not work, which part of a car is causing problems, etc. Currently, we are applying BOLERO to the diagnosis of connective tissue diseases and inflammatory arthropathies (rheumatology <ref> (Belmonte, 1990) </ref>, for more details see (Lopez, 1993)). The development of two different medical applications, together with the fact that BOLERO could be useful for diagnostic task applications, allows us to hypothesize about the utility of BOLERO for several domains where the monotonicity hypothesis holds.
Reference: <author> Bonissone, P. and Ayud, S., </author> <year> (1992). </year> <title> Similarity Measures for Case-Based Reasoning Systems. In , pages 483-487. </title> <institution> Universitat de les Illes Balears. </institution>
Reference: <author> Bonissone, P. and Decker, K., </author> <year> (1986). </year> <title> Selecting Uncertainty Calculi and Granularity: An Experiment in Trading-off Precision and Complexity. </title> <editor> In Kanal, L. and Lemmer, J., editors, </editor> , <address> pages 217-247. </address> <publisher> Elseview Science Publishers B.V., North-Holland. </publisher>
Reference-contexts: possible) (mycoplasma-pneumonia, quite-possible) (chlamydiae-spp, possible) ( ) = ( ( )) where is a parameter ( [0 1]) that regulates the suddenness of the updating ; is the strategic relevance degree of ; and ( ) is a t-norm and ( ) is a t-conorm dual to ( ) (see <ref> (Bonissone & Decker, 1986) </ref>) that are the functions we use to combine the evidence found about . Particularly, we have chosen: ( ) = + and ( ) = . To end this section, we want to stress that all the learning from experience is performed automatically.

Reference: <author> Carbonell, J., </author> <year> (1991). </year> <title> Scaling up Knowledge Based Systems via Machine Learning. </title> <booktitle> Key-note presentation in the European Working Session on Learning, </booktitle> <year> 1991. </year>
Reference-contexts: An empirical study made at Carnegie Mellon University <ref> (Carbonell, 1991) </ref> points out that the knowledge engineer spends about 30% to 60% of the time performing such "tuning". It seems convenient to provide methods that acquire the strategic knowledge required to plan, eliminating the hand-made tuning phase.
Reference: <author> Cohen, P. and Howe, A., </author> <year> (1988). </year> <title> How Evaluation Guides AI Research. </title> , <type> 9(4). </type>
Reference: <author> Compton, P., Edwards, G., Karg, B., Lazarus, L., Malor, R., Preston, P., and Srinivasan, A., </author> <year> (1992). </year> <title> Ripple Down Rules: Turning Knowledge Acquisition into Knowledge Maintenance. </title> , <booktitle> 4(6) </booktitle> <pages> 463-475. </pages>
Reference-contexts: Therefore, BOLERO increases its knowledge about plans monotonically, as other CBR systems do <ref> (Compton et al., 1992) </ref>. We continue this section by describing the learning from a teacher, retrieval, adaptation, evaluation and learning from experience methods.
Reference: <author> Cornuejols, A., </author> <year> (1993). </year> <title> Memory Limitations and Optimization of Training Sequences for Incremental Learning. </title> <editor> In de Velde, W. V., </editor> <publisher> editor, </publisher> . 
Reference-contexts: Those cases are used to train the system in problem solving. The quality and complexity of the training cases, as well as the order in which they are proportioned to the system, are really relevant, as shown in <ref> (Cornuejols, 1993) </ref>. In the introduction, we have shown how a physician diagnoses a patient by following a sequence of decision steps in which the physician successively adapts plans.
Reference: <author> Dubois, D. and Koning, J. L., </author> <year> (1991). </year> <title> Social Choice Axioms for Fuzzy Set Aggregation. </title> , <type> 43(3). </type>
Reference: <author> Elio, R. and Scharf, P., </author> <year> (1990). </year> <title> Modeling Novice-to-Expert Shifts in Problem-Solving Strategy and Knowledge Organization. </title> , (14):579-639. 
Reference-contexts: If ( ) such that = 4. Then = ( ) 5. = 7. Otherwise = ([ ] ) 8. = built-nodes (:episodes, N:node) ; = [ ] 2. While 3. = new-node 4. ( ) = ( ) 6. = This has also been found in EUREKA <ref> (Elio & Scharf, 1990) </ref>. Table 1: Algorithm to incorporate a case in memory. Input: a new case and a memory of cases. Output: an updated memory of cases LAMDA (Piera et al., 1989)).
Reference: <author> Gennari, J., Langley, P., and Fisher, D., </author> <year> (1990). </year> <title> Models of Incremental Concept Formation. </title> <editor> In Carbonell, J., </editor> <booktitle> editor, </booktitle> , <pages> pages 11-61. </pages> <month> MIT/Elsevier. </month>
Reference-contexts: The strategic relevance degree plays an important role in the retrieval process, and differentiates BOLERO's learning method from other machine learning systems which rely on frequency of facts (COBWEB <ref> (Gennari et al., 1990) </ref>, 11 0 5 1 0 0 0 h i 9 2 " f g [f g built-nodes n i i i i i n k j j k i i j j i i i s s at ; : : : ; at at C ffi
Reference: <author> Gruber, T., </author> <year> (1989). </year> <title> Automated Knowledge Acquisition for Strategic Knowledge. </title> , <booktitle> 4 </booktitle> <pages> 293-336. </pages>
Reference-contexts: Moreover, the knowledge acquisition tools provided in PROT EG E-II are based on a fixed sequence of tasks, whereas the purpose of BOLERO is precisely to organize the task (goals to validate) dynamically according to the most recent information available. ASK <ref> (Gruber, 1989) </ref> is a system designed to learn strategic knowledge to plan. The experimental evaluation of ASK has demonstrated that it is not quite efficient in learning from scratch. BOLERO however, is able to learn from scratch by means of the learning by observation procedure introduced in this paper.
Reference: <author> Hammond, K., </author> <year> (1988). </year> <title> Opportunistic Memory: Storing and Recalling Suspended Goals. </title> <booktitle> In . DARPA. </booktitle>
Reference-contexts: In this sense, BOLERO planning is based on actions while Prodigy/Analogy is based on operators. Other interesting case-based planning systems related to BOLERO are TRUCKER and RUNNER <ref> (Hammond, 1988) </ref>. Planning in TRUCKER and RUNNER means to re-use previous plans. When a goal cannot be achieved, it is suspended and no other alternative method is used. When executing other plans, new information can recall the suspended goals.
Reference: <author> Hammond, K., </author> <title> (1989). </title> , <publisher> volume 1 of . Academic Press, Inc. </publisher>
Reference-contexts: 7.2 Case-based planning 7.3 Planning There is a big variety of case-based planners but it is interesting to note that most of them work on a two-phase scenario: first a plan is elaborated, and then this plan is repaired if it has failed (NEGOTIATOR (Kolodner & Simpson Jr., 1986), CHEF <ref> (Hammond, 1989) </ref>). In contrast to them, BOLERO is able to replan dynamically whenever the current plan is not adequate to the current situation. This adaptive capability is a consequence of integrating BOLERO with a rule-based system in a meta-level architecture.
Reference: <author> Kibler, D. and Langley, P., </author> <month> October </month> <year> 1988. </year> <title> Machine Learning as an Experimental Science. </title> <editor> In Sleeman, D., </editor> <booktitle> editor, </booktitle> , <pages> pages 81-92, </pages> <address> Glasgow, UK. </address> <publisher> Turing Institute, Pitman. </publisher>
Reference-contexts: The last lesion study of the system consists of evaluating the impact of the vocabulary used by BOLERO, that is, in the quantity and quality of the domain knowledge. It is well known that an important fact that affects learning is the presence of irrelevant facts <ref> (Kibler & Langley, 1988) </ref>. Irrelevant facts are those facts of cases that are not relevant for the diagnosis of the patient. For example, the name of the patient is an irrelevant fact, while the X-ray data are relevant.
Reference: <author> Kolodner, J. and Simpson Jr., R., </author> <year> (1986). </year> <title> Problem Solving and Dynamic Memory. </title> <editor> In Kolodner, J. L. and Riesbeck, C., editors, </editor> , <booktitle> chapter 6. </booktitle> <publisher> Lawrence Erlbaum Associates, Publishers, </publisher> <address> Hillsdale, N.J. </address>
Reference-contexts: learn and recognize goal states. 29 7.2 Case-based planning 7.3 Planning There is a big variety of case-based planners but it is interesting to note that most of them work on a two-phase scenario: first a plan is elaborated, and then this plan is repaired if it has failed (NEGOTIATOR <ref> (Kolodner & Simpson Jr., 1986) </ref>, CHEF (Hammond, 1989)). In contrast to them, BOLERO is able to replan dynamically whenever the current plan is not adequate to the current situation. This adaptive capability is a consequence of integrating BOLERO with a rule-based system in a meta-level architecture.
Reference: <author> Kolodner, J., </author> <year> (1987). </year> <title> Extending Problem Solver Capabilities Through Case-based Inference. </title> <booktitle> In </booktitle> . 
Reference-contexts: However, each system uses a particular case representation adequate to the task at hand, and each system uses specific retrieval, adaptation and learning methods. In order to store cases most of the case-based systems go beyond representing generalized cases in memory and represent individual, concrete cases (JULIA <ref> (Kolodner, 1987) </ref>). In BOLERO we have represented generalizations of situations, specific plans (individual), and the solutions to cases in leaf nodes. Regarding the generalization method, any case-based system presents its own procedure.
Reference: <author> Koton, P., </author> <year> (1988). </year> <title> Reasoning About Evidence in Causal Explanation. </title> <booktitle> In </booktitle> . 
Reference-contexts: The results of BOLERO show it is possible to improve a rule-based system by acquiring planning knowledge from cases. The cost of hours of work that a knowledge engineer would required to hand-code rules to implement such planning knowledge is saved. CASEY <ref> (Koton, 1988) </ref> was one of the first systems that shows this improvement by integrating a case-based system with a causal reasoning system in order to diagnose heart failures.
Reference: <author> Lenhert, W., </author> <month> october </month> <year> 1987. </year> <title> Case-based Reasoning as a Paradigm for Heuristic Search. </title> <type> Technical Report 107, </type> <institution> Department of Computer and Information Science, Univ. Massachussets. </institution>
Reference-contexts: Regarding the learning from experience methods, all systems have the same problem: to determine which cases to store. Lenhert <ref> (Lenhert, 1987) </ref>, for example, has concluded that the increment of cases in the system can worsen the system performance rather than improve it. Utility measures has been studied better in other machine learning methods (as in PRODIGY-EBL (Minton, 1988)) than in CBR.
Reference: <author> Lopez, B. and Plaza, E., </author> <month> November </month> <year> 1989. </year> <institution> Aprendizaje de Conocimientos de Control para Sistemes Expertos. </institution> <note> In , Madrid,. </note>
Reference-contexts: And the solution from the domain point of view is the set of possible diagnoses ( . To capture the adaptive behavior shown by the physician when diagnosing a patient, some recent works, as for example <ref> (Lopez & Plaza, 1989) </ref>,(Redmond, 1990) and (Veloso, 1992) explore the representation of cases based on (pieces of cases) and episodes.
Reference: <author> Lopez, B., </author> <year> (1991). </year> <title> CONKRET: A Control Knowledge Refinement Tool. </title> <editor> In Ayel, M. and Laurent, J., editors, </editor> , <volume> chapter 13, </volume> <pages> pages 191-203. </pages> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: It is a model of functionality that registers the domain solutions (i.e. the diagnosis) as well as the optimal plan (that is, the sequence of actions that leads to the achievement of the diagnosis). The difficulties of determining such a gold standard have been already shown elsewhere <ref> (Lopez, 1991) </ref>, and are emphasized in a medical domain where the solution of a problem may be not unique. The approximation taken in BOLERO has been to define an evaluation standard (ES) composed by an admissible plan and a set of domain solutions .
Reference: <author> Lopez, B., </author> <year> (1993). </year> . <type> PhD thesis, </type> <institution> Universitat Politecnica de Catalunya, Facultat d'Informatica de Barcelona. </institution>
Reference-contexts: If and have the same attribute (otherwise ( ) = 0), then where ( ) is a function defined in [0,1] that measures the distance between two fuzzy values similar to the one defined in section 2.4 (see also <ref> (Lopez, 1993) </ref>). Fuzzy values are ordered and their relative distance can be established. Set-valued facts can be compared by a membership relation that outputs 1 (the value belongs to the set of possible values) or 0 (otherwise). <p> While 3. If 4. Then = 5. return ( ) In case of having more than one node with the same similarity degree, we have also developed another kind of heuristic adaptation rules (as for example: choose common actions of plans) that can be found in <ref> (Lopez, 1993) </ref>. respect to the number of facts ( ) that are expected to be present in the current situation in order to apply the plan associated to the node that indexes. <p> The correct order of an action is determined by the degree of evidence with which its execution contributes to the solution of the problem (see <ref> (Lopez, 1993) </ref>). Actions that offer more evidence should ideally be performed first. To sum up, we say that a plan succeeds completely if the degree of success is 100%, the degree of focus is 100%, and the degree of disorder is 0%. Otherwise we say that the plan is imperfect. <p> Then, the set is composed by an unique node whose plan is or, failing it, by the nodes whose plan is similar to (for further details see <ref> (Lopez, 1993) </ref>). Since the plan is either an existing plan in memory or the result of the adaptation of different plans of different retrieved nodes = , the set is composed by the retrieved nodes except the nodes that also belong to (i.e. = ). <p> In <ref> (Lopez, 1993) </ref> there is an ablation study on the effects of this parameter. Part of Medicine that studies the agents causing illness. 0.89 and the second highest one is 0.88. <p> We have completed the experimental evaluation of BOLERO by modifying some features of the system and then studying their impact on the results. We have performed several variations. The more representative results are shown in this paper (for the rest see <ref> (Lopez, 1993) </ref>). To evaluate the effects of the evaluation procedure we have replaced the evaluation standard (ES) obtained from the consensus of several experts as explained in section 4.3 (multiexpert evaluation) by a ES based exclusively on the teacher's advice. <p> Applications where BOLERO could be useful are fault diagnosis: finding which component of a circuit does not work, which part of a car is causing problems, etc. Currently, we are applying BOLERO to the diagnosis of connective tissue diseases and inflammatory arthropathies (rheumatology (Belmonte, 1990), for more details see <ref> (Lopez, 1993) </ref>). The development of two different medical applications, together with the fact that BOLERO could be useful for diagnostic task applications, allows us to hypothesize about the utility of BOLERO for several domains where the monotonicity hypothesis holds.
Reference: <author> Maes, P., </author> <year> (1988). </year> <title> Issues in Computational Reflection. </title> <editor> In Maes, P. and Nardi, D., editors, </editor> , <address> pages 21-35. </address> <publisher> Elsevier Science Pub. B. V. </publisher>
Reference-contexts: BOLERO-RBS has a set of reflection rules, as any meta-level system, that assures the causal connection between both levels, and that determine when the control of the overall system changes from one level to the other <ref> (Maes, 1988) </ref>. Reflection rules are the following: The upwards reflection rules, and , carry up the information present at the object-level to the meta-level, information needed by BOLERO in order to evaluate the state of the problem solution at the object-level and to be able to plan in consequence.
Reference: <author> Minton, S., </author> <year> (1988). </year> . <type> PhD thesis, </type> <institution> Computer Science Department, Carnegie Mellon University. </institution> <note> Technical Report CMU-CS-88-133. </note>
Reference-contexts: Lenhert (Lenhert, 1987), for example, has concluded that the increment of cases in the system can worsen the system performance rather than improve it. Utility measures has been studied better in other machine learning methods (as in PRODIGY-EBL <ref> (Minton, 1988) </ref>) than in CBR. We want to stress that in BOLERO we distinguish a learning phase different from learning from experience, that we call learning from a teacher. In BOLERO the acquisition of precedents is explicitly distinguished in a learning phase in which it learns from a teacher. <p> However, the learning from experience method developed in BOLERO leads to an accumulation of cases in memory that punishes the efficiency of the system. In this sense we think that we need to incorporate utility measures like the procedures given in PRODIGY/EBL <ref> (Minton, 1988) </ref>. The utility measures of PRODIGY/EBL are based on the applicability of the control rules learned.
Reference: <author> Mitchell, T., </author> <year> (1990). </year> <note> Becoming Increasingly Reactive. In , pages 1051-1058. THEO. </note>
Reference-contexts: It is possible that in this sense TRUCKER and RUNNER have a better retrieval time than BOLERO. Among some planning system we distinguish four interesting ones from the point of view of our research: Theo-Agent, PROT EG E, ASK and PRODIGY/EBL. Theo-Agent <ref> (Mitchell, 1990) </ref> is a reactive planner that learns from experience. Our system differs from Theo-Agent in that BOLERO is able to react to the environment by adapting the reasoning process to changes, i.e. by replanning.
Reference: <author> Pazzani, M. and Sarrett, W., </author> <year> (1992). </year> <title> A Framework for Average Case Analysis of Conjuntctive Learning Algorithms. </title> , <booktitle> 9(4) </booktitle> <pages> 349-372. </pages>
Reference-contexts: : : : : : : pneumococcus, ,branhamella] [gather-information,bact-atyp N15 [gather-information,bact-atyp, pneumococcus] N6 [gather-information,bact-atyp,mycoplasma,virus,chlamydia] (viral-pneumonia,quite-possible) (perihilars,unknown) (mycoplasma-pneumonia,somewhat-possible) N5 [gather-information,bact-atyp,mycoplasma,virus] (mycoplasma-pneumonia,somewhat-possible) (contact-with-pneumonia,no) (atypical-pneumonia,very-possible) N4 [gather-information,bact-atyp,mycoplasma] (atypical-pneumocia,very-possible) (headache,unknown) (RX-data,[bad-def-bound,interstitial) N3 (RX-data,[bad-def-bound,confluents,interstitial]) [gather-information,bact-atyp] (asylum,unknown) (age,[27-85]) (severity,[somewhat-serious,light]) (onset-form,sudden) N2 [gather-information] (onset-form,sudden) (sex,man) (community-acquired, yes) N1 (i.e. algorithms that only take into account common features <ref> (Pazzani & Sarrett, 1992) </ref>) tend to be less predictive when the number of cases increases. In a dynamic environment, acquired data is incomplete and there is a need to develop a technique that mitigates the missing information.
Reference: <author> Pearl, J., </author> <year> (1988). </year> <title> Evidential Reasoning Under Uncertainty. </title> <editor> In Shrobe, H. and AAAI, , editors, </editor> , <volume> chapter 10, </volume> <pages> pages 381-418. </pages> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: Uncertainty and incompleteness typical in medical diagnosis is handled in a traditional approach to the rule-based system with fuzzy methods (Agust et al., 1992) or certainty factors <ref> (Pearl, 1988) </ref> whereas re-planning offers a new approach to fit the diagnostic procedure to the last relevant information available. Finally, we have developed a case-based method to learn and recognize goal states. In medical diagnosis a goal state is defined as a sufficiently accurate set of diagnoses.
Reference: <author> Piera, N., Desroches, P., and Aguilar-Martin, J., </author> <year> (1989). </year> <title> LAMDA: An Incremental Conceptual 33 Artifical Intelligence Proc. AAAI 90 Proc. EWSL Readings in Planning Knowledge Acquisition Meta-level Inference Systems Learning by Analogical Reasoning in General Problem Solving PNEUMON-IA: Desenvolupament i Validacio d'un Sistema Expert d'Ajuda al Diagnostic Medic Computers and Biomedical Research Clustering Method. </title> <type> Technical Report 89420, </type> <institution> Laboratoire d'Automatique et d'Analyse des Systemes (LAAS), </institution> <address> 7, Avenue du Colonel Roche, 31077 Toulouse Cedex., France. </address>
Reference-contexts: While 3. = new-node 4. ( ) = ( ) 6. = This has also been found in EUREKA (Elio & Scharf, 1990). Table 1: Algorithm to incorporate a case in memory. Input: a new case and a memory of cases. Output: an updated memory of cases LAMDA <ref> (Piera et al., 1989) </ref>). The indexing mechanism of those systems rely on how often facts occur, but in medical diagnosis we found that a fact with a low frequency can be quite relevant . Generalized facts are built on the incremental generalization procedure.
Reference: <author> Porter, B., Bareiss, R., and Holte, R., </author> <month> September </month> <year> 1990. </year> <title> Concept Learning and Heuristic Classification in Weak-Theory Domains. </title> , <publisher> 45(1-2):229-263. </publisher>
Reference-contexts: With respect to the learning from experience mechanism, the method for updating strategic relevance degree of facts implemented in BOLERO is related to the modification process of the relevance of indexes in PROTOS <ref> (Porter et al., 1990) </ref>. PROTOS is quite different from BOLERO. Firstly, instead of learning plans, its main objective is to learn concepts from cases provided by a teacher and a different organization of memory is required to deal with such different kind of problems.
Reference: <author> Redmond, M., </author> <year> (1990). </year> <title> Distributed Cases for Case-Based Reasoning; Facilitating Use of Multiple Cases. </title> <booktitle> In , volume 1, </booktitle> <pages> pages 304-309, </pages> <address> Boston, Massachussets. </address> <publisher> AAAI Press/ The MIT Press. </publisher>
Reference: <author> Sharma, S. and Sleeman, D., </author> <year> (1988). </year> <title> REFINER: A Case-Based Differential Diagnosis Aide for Knowledge Acquisition and Knowledge Refinement. </title> <editor> In Sleeman, D., </editor> <booktitle> editor, </booktitle> , <pages> pages 201-210. </pages>
Reference-contexts: In BOLERO we have represented generalizations of situations, specific plans (individual), and the solutions to cases in leaf nodes. Regarding the generalization method, any case-based system presents its own procedure. In this way, for example, it is interesting to note that REFINER <ref> (Sharma & Sleeman, 1988) </ref> generalize the facts by using a semantic net, in the same way as BOLERO (i.e., the facts and are generalized in the fact ). 28 The similarity metric used in the retrieval process is crucial, but there are few formal studies performed on this topic.
Reference: <author> Tate, A., </author> <year> (1990). </year> <title> A Review of Planning Techniques. </title> <editor> In Allen, J. and Tate, A., editors, </editor> , <address> pages 26-49. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: In knowledge-based systems (KBS) of this sort, planning plays an important role insofar as plans can make problem solving more efficient, controlling the resources needed to solve a problem and adapting the problem solving process to changes in the environment <ref> (Tate, 1990) </ref>. An adaptation to environmental changes is especially important in KBS's in medical domains where the data available is usually incomplete and uncertain. The physician copes with incompleteness and uncertainty by dynamically generating and executing plans .
Reference: <author> Tu, S., Shahar, Y., Dawes, J., Winkles, J., Puerta, A., and Musen, M., </author> <year> (1992). </year> <title> A problem-solving model for episodic skeletan-plan refinement. </title> , (4):197-216. van Harmelen, F., (1991). . Pitman, London. 
Reference-contexts: Another drawback typical of reactive planners that our system does not have is that Theo-Agent does not become necessarily more correct given that stimulus-response rules does not reflect the effects of the actions. PROT EG E <ref> (Tu et al., 1992) </ref> is a system that provides knowledge acquisition tools for the development of knowledge based systems applied to the medical domain.
Reference: <author> Veloso, M., </author> <month> August </month> <year> 1992. </year> . <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie Mellon University. </institution>
Reference-contexts: And the solution from the domain point of view is the set of possible diagnoses ( . To capture the adaptive behavior shown by the physician when diagnosing a patient, some recent works, as for example (Lopez & Plaza, 1989),(Redmond, 1990) and <ref> (Veloso, 1992) </ref> explore the representation of cases based on (pieces of cases) and episodes. <p> This adaptive capability is a consequence of integrating BOLERO with a rule-based system in a meta-level architecture. Prodigy/Analogy brings efficiency to NoLimit, in the same way that BOLERO does to RBS. Prodigy/Analogy interacts with NoLimit, a nonlinear planner ascribed to the PRODIGY architecture <ref> (Veloso, 1992) </ref>, to solve problems. Plan representation in Prodigy/Analogy is richer than the representation chosen in BOLERO. Prodigy/Analogy uses a tree to represent plans in which it is shown the nonlinearity of plans and it keeps track of the conditions that support past plans.
Reference: <author> Verdaguer, A., </author> <month> July </month> <year> 1989. </year> . <type> PhD thesis, </type> <institution> Universitat Autonoma de Barcelona. </institution>
Reference-contexts: The current state is considered the goal state of the current problem. We have applied BOLERO to learning and generating plans to diagnose the agent causing a pneumonia in patients that acquired the illness outside the hospital environment. Pneumoniae are diseases that frequently need an urgent treatment <ref> (Verdaguer, 1989) </ref>. An urgent treatment means that the physician has to diagnose the agent that causes the infection taking advantage of the known information about the patient, and before knowing the results of some lab tests. <p> We need to make decisions and the experience of the physician in solving past cases plays a fundamental role in the patient diagnosis. To develop the application we used 79 cases provided by a teacher that correspond to real cases from four hospitals <ref> (Verdaguer, 1989) </ref>. The selection of cases has been done by the teacher, and follows a stratified random procedure based on the diagnostic groups of the WHO (Verdaguer et al., 1992). We used 460 attributes to represent the domain of pneumonia.
Reference: <author> Verdaguer, A., Patak, A., Sancho, J., Sierra, C., and Sanz, F., </author> <year> (1992). </year> <title> Validation of the Medical Expert System PNEUMON-IA. </title> , <type> 25(6). 34 </type>
Reference-contexts: To develop the application we used 79 cases provided by a teacher that correspond to real cases from four hospitals (Verdaguer, 1989). The selection of cases has been done by the teacher, and follows a stratified random procedure based on the diagnostic groups of the WHO <ref> (Verdaguer et al., 1992) </ref>. We used 460 attributes to represent the domain of pneumonia. Each case has, on average, 88.23 attributes, 33% of which are attributes with unknown value. Unknown values (a.k.a. incomplete information) are thus an essential feature of this domain.
References-found: 39

