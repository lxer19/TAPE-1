URL: ftp://ftp.cs.colorado.edu/users/doppke/papers/promo-tr.ps.gz
Refering-URL: http://www.cs.colorado.edu/users/serl/process/Papers.html
Root-URL: http://www.cs.colorado.edu
Email: doppke@cs.colorado.edu  
Title: Software Process Modeling and Execution Within Virtual Environments  
Author: John C. Doppke 
Address: Boulder  
Affiliation: ffi University of Colorado at  
Date: July 1996  
Pubnum: CU-CS-805-96  
Abstract: Technical Report CU-CS-805-96 Department of Computer Science Campus Box 430 University of Colorado Boulder, Colorado 80309 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bandinelli, M. Braga, A. Fuggetta, and L. </author> <title> Lavazza. </title> <booktitle> The architecture of the SPADE-1 process-centered SEE. In Proc. 3rd European Workshop on Software Process Technology, </booktitle> <address> Grenoble, France, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: While many actions within a process must be carried out by a human agent, others may often be carried out in automatic fashion. A system that supports this degree of automation is considered proactive; various techniques exist for implementing this automation, including rule bases [25] and events and triggers <ref> [1] </ref>. Systems that provide little or no proactivity may afford the user a great deal of flexibility in executing the process, but it is interesting to note that this flexibility may be a liability in many cases. <p> Accordingly, one potential avenue of research would investigate the possibility of incorporating a greater degree of automation within the process. Other systems <ref> [25, 1] </ref> do provide this facility, and so using their approaches|or perhaps integrating Promo at an architectural level with one of these systems|would be an interesting experiment in proactivity within a metaphor. 8.1.3 Integration of Promo with the environment As described in chapter 6, Promo does communicate with the environment outside
Reference: [2] <author> S. Bandinelli et al. </author> <title> Modeling and Improving an Industrial Software Process. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 21(5) </volume> <pages> 440-454, </pages> <year> 1995. </year>
Reference-contexts: For example, a verb :modify trigger on a source module could be used to notify the corresponding object module that it is out of date. 25 Chapter 7 Example Process As an illustration of the use of Promo, we have taken a problem report process from the literature <ref> [2] </ref> and implemented it using Promo.
Reference: [3] <author> Dr. Richard Bartle. </author> <title> Interactive multi-user computer games. </title> <note> Research report commissioned by British Telecom plc., December 1990. ftp://parcftp.xerox.com/pub/MOO/papers/ mudreport.ps.Z. </note>
Reference-contexts: Trubshaw's interest in the game was mostly technical: MUD1 was the first MUD to have been designed as a multi-user game, as opposed to the multi-user variants of Adventure-style games; and MUD1 had a database design language whose development was one of Trub-shaw's chief interests in the system <ref> [3] </ref>. Richard Bartle became involved in the effort shortly after it was created and was primary in designing the game-oriented aspects of MUD1. <p> MUD1 thus became quite seminal in this field|in fact, as of 1990, a version of MUD1 was still running on the online service CompuServe. The popularity accorded to MUD1 led to the creation of numerous MUDs derivative of MUD1; Bartle's 1990 survey <ref> [3] </ref> lists some 47 types of MUDs. Many of these MUDs were essentially similar, both in features and in spirit, to MUD1. However, a turning point occurred in 1989 with the release of two new independent systems, LPMUD and TinyMUD, that both featured greatly enhanced world-building facilities. <p> Fans of MUDs as games (such as the creators of game-like MUDs <ref> [3] </ref>) reviled TinyMUD for its lack of adventure and for its chaos. TinyMUD, however, thrived as a new kind of MUD and gained popularity among a new set of people|as with MUD1, much more popularity than its creator, Jim Aspnes, expected.
Reference: [4] <author> Richard Bartle. </author> <note> Early MUD history. Article posted to USENET group rec.games.mud, </note> <month> 15 November </month> <year> 1990. </year> <note> http://www.utopia.com/talent/lpb/muddex/bartle.txt. </note>
Reference-contexts: study of MUDs: first, in terms of details particular to MUDs, and second, in terms of virtual environments in general. 3.1 History The original MUD, entitled "Multi-User Dungeon" (and originally abbreviated MUD but referred to as MUD1 in the literature), was created by Roy Trubshaw at Essex University in 1978 <ref> [4, 11] </ref>.
Reference: [5] <author> T. Berners-Lee, L. Masinter, and M. McCahill. </author> <title> Uniform resource locators (URL). Proposed as Network Working Group Request for Comments 1738, </title> <month> December </month> <year> 1994. </year> <note> http:// www.w3.org/pub/WWW/Addressing/rfc1738.txt. </note>
Reference-contexts: That is, while the data of the artifact is assumed to exist outside the MOO (presumably in the file system), every artifact to be manipulated within the process is represented by a corresponding object within Promo. The Promo object contains a URL <ref> [5] </ref> that acts as a pointer to the actual artifact; beyond that, the object may contain as much or as little information about the actual artifact as is desired by the modeler (i.e., as much as is needed for the process).
Reference: [6] <author> BioMOO. bioinfo.weizmann.ac.il, </author> <title> port 8888. The biologists' virtual meeting place. </title> <address> http://bioinfo.weizmann.ac.il/BioMOO. </address>
Reference-contexts: A diagram of this architecture is given in Figure 2. MUDs began as text-only systems, and nearly all are still essentially text-based; however, many now are beginning to offer more sophisticated interfaces of various kinds <ref> [20, 26, 35, 6] </ref>. The world that the MUD provides to the user consists of a set of rooms and, within those rooms, myriad objects, including other players. The MUD's world represents space by means of spatial relationships among objects|for example, connections between rooms|but not specific distances or directions. <p> Systems of this latter kind are often as social in focus as technical; many MUDs are devoted to a certain topic (e.g., biology <ref> [6] </ref> or media research [30]), and such MUDs serve as sites for virtual collocation and collaboration. <p> One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs <ref> [6, 35, 26] </ref> now offer such interfaces. However, it is not clear that these interfaces typically offer major improvements over the older interfaces; since the data in MOOs are still largely textual, the WWW interface provides hypertext links but few graphics. <p> Furthermore, WWW technology does not permit these interfaces to be as interactive as their textual counterparts, and this has a severe negative impact on the collaborative character of MUDs. An interface recently added to BioMOO <ref> [6] </ref> may provide an exception to this rule; the interface combines a traditional textual connection with a WWW interface.
Reference: [7] <author> N. Borenstein and N. Freed. </author> <title> MIME (Multipurpose Internet Mail Extensions): Mechanisms for specifying and describing the format of internet message bodies. Network Working Group Request for Comments 1341, </title> <month> June </month> <year> 1992. </year>
Reference-contexts: The types used, however, are not to be confused with officially registered MIME types <ref> [7] </ref>. 24 from the client; it then consults its mapping file to find the Tcl procedure that encapsulates the desired tool. Creating these encapsulations is fairly straightforward; we have currently encapsulated the editors vi and emacs, the C compiler gcc, and a script used to run programs against input files.
Reference: [8] <author> Amy Bruckman. </author> <title> Programming for fun: MUDs as a context for collaborative learning. </title> <booktitle> In Proceedings of the National Educational Computing Conference, </booktitle> <address> Boston, MA, </address> <month> June </month> <year> 1994. </year> <booktitle> National Education Computing Association. </booktitle>
Reference-contexts: Accordingly, we shall use the more generic and less loaded term virtual environment to refer to any system that presents a (possibly unrealistic) world or space for users to visit and inhabit. 3.3.1 Constructionism Bruckman <ref> [8, 9, 10] </ref> has contributed a great deal to the field of virtual environment research, particularly in the use of MOOs for educational purposes. In particular, Bruckman and Resnick [9] argue that the construction and reconstruction of the virtual world leads to a heightened effectiveness in collaborative learning and interaction.
Reference: [9] <author> Amy Bruckman and Mitchel Resnick. </author> <title> The MediaMOO project: Constructionism and professional community. Convergence, </title> <type> 1(1), </type> <month> Spring </month> <year> 1995. </year>
Reference-contexts: Accordingly, we shall use the more generic and less loaded term virtual environment to refer to any system that presents a (possibly unrealistic) world or space for users to visit and inhabit. 3.3.1 Constructionism Bruckman <ref> [8, 9, 10] </ref> has contributed a great deal to the field of virtual environment research, particularly in the use of MOOs for educational purposes. In particular, Bruckman and Resnick [9] argue that the construction and reconstruction of the virtual world leads to a heightened effectiveness in collaborative learning and interaction. <p> In particular, Bruckman and Resnick <ref> [9] </ref> argue that the construction and reconstruction of the virtual world leads to a heightened effectiveness in collaborative learning and interaction.
Reference: [10] <author> Amy Susan Bruckman. </author> <title> Moose crossing: Creating a learning culture. </title> <type> PhD thesis proposal, </type> <month> December </month> <year> 1994. </year> <note> ftp://ftp.media.mit.edu/pub/asb/papers/ moose-crossing-proposal.ps. </note>
Reference-contexts: Accordingly, we shall use the more generic and less loaded term virtual environment to refer to any system that presents a (possibly unrealistic) world or space for users to visit and inhabit. 3.3.1 Constructionism Bruckman <ref> [8, 9, 10] </ref> has contributed a great deal to the field of virtual environment research, particularly in the use of MOOs for educational purposes. In particular, Bruckman and Resnick [9] argue that the construction and reconstruction of the virtual world leads to a heightened effectiveness in collaborative learning and interaction.
Reference: [11] <author> Lauren P. Burka. </author> <note> The MUDline. Published on the WWW, 1995. http:// www.utopia.com/talent/lpb/muddex/mudline.html. </note>
Reference-contexts: study of MUDs: first, in terms of details particular to MUDs, and second, in terms of virtual environments in general. 3.1 History The original MUD, entitled "Multi-User Dungeon" (and originally abbreviated MUD but referred to as MUD1 in the literature), was created by Roy Trubshaw at Essex University in 1978 <ref> [4, 11] </ref>. <p> Despite the programmer's technical intentions, MUD1 became wildly popular as a game and is generally recognized as the ancestor of nearly every MUD in existence (a notable exception being Klietz's "Scepter of Goth" <ref> [11] </ref>). <p> In May 1990, Stephen White created TinyMOO as a derivative of TinyMUCK, where MOO stood for "MUD, Object-Oriented." TinyMOO provided a C-like language along with some object-oriented features such as a class hierarchy and inheritance. 3.2 LambdaMOO In October 1990 <ref> [11] </ref>, Pavel Curtis of XEROX PARC brought up his new system, LambdaMOO, for the first time. Based on TinyMOO, LambdaMOO provided a fully object-oriented language tightly coupled with an object-oriented database.
Reference: [12] <author> Eva-Lise Carlstrom. </author> <title> The communicative implications of a text-only virtual environment, or, </title> <note> Welcome to LambdaMOO! Published on the WWW, 15 May 1992. ftp:// parcftp.xerox.com/pub/MOO/papers/communicative.txt. </note>
Reference-contexts: In MUDs this is often not the case: the absence of a real-world-like spatial metaphor, the ability to perform tasks that are impossible in real life (e.g., teleporting objects), and the MUD-specific communicative and social forms <ref> [12] </ref> all point to a major difference between MUDs and reality. <p> While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists <ref> [13, 14, 12, 33, 16] </ref>, the interface is considered by some to be adequate at best in terms of usability [21, 27]. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [13] <author> Lynn Cherny. </author> <title> The modal compleixty of speech events in a social MUD. </title> <journal> Electronic Journal of Communication, </journal> <volume> 5(4), </volume> <month> November </month> <year> 1995. </year>
Reference-contexts: While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists <ref> [13, 14, 12, 33, 16] </ref>, the interface is considered by some to be adequate at best in terms of usability [21, 27]. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [14] <author> Lynn Cherny. </author> <title> The situated behavior of MUD back channels. </title> <booktitle> In Proceedings of the AAAI Spring Symposium, </booktitle> <month> March </month> <year> 1995. </year> <month> 35 </month>
Reference-contexts: While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists <ref> [13, 14, 12, 33, 16] </ref>, the interface is considered by some to be adequate at best in terms of usability [21, 27]. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [15] <author> B. Curtis, M. Kellner, and J. </author> <title> Over. Process Modeling. </title> <journal> Communications of the ACM, </journal> <volume> 35(9) </volume> <pages> 75-90, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: When multiple people collaborate in carrying out a set of activities, the issue of who performs which activity is an extremely important question. Many accounts of software process include the notion of a role, a unit of functional responsibility <ref> [15] </ref>; in such models, a role is assigned to each activity, and one or more of the human agents who are authorized to take on this role must do so in order to complete the activity.
Reference: [16] <author> Pavel Curtis. Mudding: </author> <title> Social phenomena in text-based virtual realities. </title> <note> Published on the WWW, 3 March 1992. ftp://parcftp.xerox.com/pub/MOO/papers/DIAC92.ps.Z. </note>
Reference-contexts: While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists <ref> [13, 14, 12, 33, 16] </ref>, the interface is considered by some to be adequate at best in terms of usability [21, 27]. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [17] <author> Pavel Curtis. LambdaCore, </author> <month> 25 December </month> <year> 1995. </year> <title> The "core" database distributed along with LambdaMOO. </title> <publisher> ftp://parcftp.xerox.com/pub/MOO/LambdaCore-25Dec95.db.Z. </publisher>
Reference-contexts: As a result, a LambdaMOO is seldom started from scratch; usually, the MOO administrator ("archwizard") downloads a database of core objects as the starting point for the MOO. The most common core database is the database distributed along with the LambdaMOO system itself, called LambdaCore <ref> [17] </ref>; the objects in this database, numbering about 100-150, comprise some basic MUD-related objects (player, room, exit, etc.) along with some utility functions (string and list manipulation, coding and network utilities, etc.). <p> The metaphor used in Promo is the task-centered metaphor described in section 4.2.1. Promo is based on and extends the LambdaMOO system [18] and its core database, LambdaCore <ref> [17] </ref>. In this chapter we shall discuss the design decisions made in creating Promo in light of the discussion of issues in the previous chapter. In doing so, we shall evaluate the specifics of the metaphor using the criteria set out in section 4.1.
Reference: [18] <author> Pavel Curtis. LambdaMOO, </author> <month> May </month> <year> 1996. </year> <title> The server code for the multi-user game Lamb-daMOO, </title> <note> version 1.8.0p5. ftp://parcftp.xerox.com/pub/MOO/LambdaMOO-1.8.0p5. </note>
Reference-contexts: The term LambdaMOO thus refers both to the MOO system and to its original incarnation, though generally we shall use it to refer to the system. 3.2.1 Architecture A LambdaMOO system consists of two parts: the server program <ref> [18] </ref> and the database. The server provides the low-level functionality for the system|in particular, it provides the MOO code interpreter and database engine. However, much of the functionality actually used by the LambdaMOO is encapsulated within objects in the database. <p> The metaphor used in Promo is the task-centered metaphor described in section 4.2.1. Promo is based on and extends the LambdaMOO system <ref> [18] </ref> and its core database, LambdaCore [17]. In this chapter we shall discuss the design decisions made in creating Promo in light of the discussion of issues in the previous chapter. In doing so, we shall evaluate the specifics of the metaphor using the criteria set out in section 4.1.
Reference: [19] <author> Pavel Curtis. </author> <title> LambdaMOO Programmer's Manual. </title> <institution> XEROX Palo Alto Research Center, </institution> <month> May </month> <year> 1996. </year> <note> For LambdaMOO version 1.8.0p5. ftp://parcftp.xerox.com/pub/MOO/ LambdaMOO-1.8.0p5. </note>
Reference-contexts: exist, and recently new "core" databases have been offered by MOOs besides the LambdaMOO at XEROX PARC (for example, JHM [26]). 3.2.2 Object structure Objects in LambdaMOO are identified by their object identifiers and are characterized by their attributes, properties, and verbs (akin to methods in more conventional OO systems) <ref> [19] </ref>. The attributes on each object consist of a flag designating the object as a player, the object ID of the object's parent, and the object IDs of its children.
Reference: [20] <author> Pavel Curtis, Michael Dixon, Ron Frederick, and David A. Nichols. </author> <title> The Jupiter audio/video architecture: Secure multimedia in network places. </title> <booktitle> In Proceedings of the Third Annual ACM International Multimedia Conference and Exposition, </booktitle> <address> San Francisco, CA, </address> <month> 5-9 November </month> <year> 1995. </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: A diagram of this architecture is given in Figure 2. MUDs began as text-only systems, and nearly all are still essentially text-based; however, many now are beginning to offer more sophisticated interfaces of various kinds <ref> [20, 26, 35, 6] </ref>. The world that the MUD provides to the user consists of a set of rooms and, within those rooms, myriad objects, including other players. The MUD's world represents space by means of spatial relationships among objects|for example, connections between rooms|but not specific distances or directions. <p> The fact that containment, possession, and object status differ from one another semantically does not cause any difficulty with respect to the use of these properties. 3.3 Virtual environment research Our interest in MUDs focuses on their place in the more general field of virtual environments. While some researchers <ref> [20] </ref> have used the term virtual reality to describe systems such as MUDs, this term typically refers to systems that attempt to represent the real world accurately (using three dimensions, etc.).
Reference: [21] <author> Pavel Curtis and David Nichols. </author> <title> MUDs grow up: Social virtual reality in the real world. </title> <booktitle> In Proceedings of the Third International Conference on Cyberspace. </booktitle> <institution> XEROX Palo Alto Research Center, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists [13, 14, 12, 33, 16], the interface is considered by some to be adequate at best in terms of usability <ref> [21, 27] </ref>. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [22] <author> Geraldine Fitzpatrick, Simon Kaplan, and Tim Mansfield. </author> <title> Physical spaces, virtual places and social worlds: A study of work in the virtual. </title> <booktitle> Submitted to the 1996 ACM Conference on Computer Supported Cooperative Work (CSCW '96), </booktitle> <year> 1996. </year> <note> http:// acsl.cs.uiuc.edu/kaplan/Papers/cscw-96-study.ps. </note>
Reference-contexts: Based on their experience in running MediaMOO [30], the paper illustrates the effectiveness of the constructive aspect of the virtual in encouraging interaction within a professional community. 3.3.2 Work in the virtual Kaplan's work <ref> [22] </ref> on the use of virtual environments to accomplish work in the real world makes some useful distinctions.
Reference: [23] <author> Carlo Ghezzi, Mehdi Jazayeri, and Dino Mandrioli. </author> <title> Fundamentals of Software Engineering. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1991. </year>
Reference-contexts: environments and software process, we shall examine each domain separately. 4 Chapter 2 Software Process A software process is typically defined as a set of activities carried out to build, deliver, and evolve a software product, from the inception of an idea to the delivery and retirement of a system <ref> [23] </ref>. However, this seemingly simple definition requires a great deal of elucidation in order to determine what pieces make up a process and how they interact. Software process has become an area of active research.
Reference: [24] <author> Dennis Heimbigner and Leon Osterweil. </author> <title> An argument for the elimination of roles. </title> <booktitle> Position paper for the 9th Int Software Process Workshop, </booktitle> <month> 5 March </month> <year> 1994. </year>
Reference-contexts: Other accounts of process <ref> [24] </ref> eschew this notion of roles because of its tendency to conflate issues that should remain separate: threads of control, unification of similar activities, and access control. 2.1.3 Artifacts Software process also governs the definition of artifacts within a system. <p> While some systems use the notion of roles to solve this issue, we eschew this solution, since the notion of role implied by such an approach conflates too many issues that should be separated <ref> [24] </ref>. Instead, we identify each of the person's threads as a persona: that is, a persona corresponds to a person within a certain process at a certain stage (i.e., working on a certain task) with respect to one or more artifacts.
Reference: [25] <author> George T. Heineman, Gail E. Kaiser, Naser S. Barghouti, and Israel Z. Ben-Shaul. </author> <title> Rule chaining in Marvel: Dynamic binding of parameters. </title> <journal> IEEE Expert, </journal> <volume> 7(6) </volume> <pages> 26-32, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: While many actions within a process must be carried out by a human agent, others may often be carried out in automatic fashion. A system that supports this degree of automation is considered proactive; various techniques exist for implementing this automation, including rule bases <ref> [25] </ref> and events and triggers [1]. Systems that provide little or no proactivity may afford the user a great deal of flexibility in executing the process, but it is interesting to note that this flexibility may be a liability in many cases. <p> Accordingly, one potential avenue of research would investigate the possibility of incorporating a greater degree of automation within the process. Other systems <ref> [25, 1] </ref> do provide this facility, and so using their approaches|or perhaps integrating Promo at an architectural level with one of these systems|would be an interesting experiment in proactivity within a metaphor. 8.1.3 Integration of Promo with the environment As described in chapter 6, Promo does communicate with the environment outside
Reference: [26] <author> Jay's House MOO (JHM). jhm.ccs.neu.edu, </author> <note> port 1709. Research-oriented MOO. http://jhm.moo.mud.org:7043/. </note>
Reference-contexts: A diagram of this architecture is given in Figure 2. MUDs began as text-only systems, and nearly all are still essentially text-based; however, many now are beginning to offer more sophisticated interfaces of various kinds <ref> [20, 26, 35, 6] </ref>. The world that the MUD provides to the user consists of a set of rooms and, within those rooms, myriad objects, including other players. The MUD's world represents space by means of spatial relationships among objects|for example, connections between rooms|but not specific distances or directions. <p> Some server patches and modifications do exist, and recently new "core" databases have been offered by MOOs besides the LambdaMOO at XEROX PARC (for example, JHM <ref> [26] </ref>). 3.2.2 Object structure Objects in LambdaMOO are identified by their object identifiers and are characterized by their attributes, properties, and verbs (akin to methods in more conventional OO systems) [19]. <p> One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs <ref> [6, 35, 26] </ref> now offer such interfaces. However, it is not clear that these interfaces typically offer major improvements over the older interfaces; since the data in MOOs are still largely textual, the WWW interface provides hypertext links but few graphics.
Reference: [27] <author> Simon M. Kaplan, Geraldine Fitzpatrick, Tim Mansfield, and William J. Tolone. </author> <title> MUDdling through. </title> <booktitle> Submitted to the 1996 ACM Conference on Computer Supported Cooperative Work (CSCW '96), </booktitle> <month> 19 March </month> <year> 1996. </year> <note> http://acsl.cs.uiuc.edu/kaplan/Papers/ cscw-96-mud.ps. </note>
Reference-contexts: That is, one can list what actions have been taken on a given artifact. While this may not provide enough information to the user about the history of the collective process, the problem of providing information about process history is one found in most process systems <ref> [27] </ref>. 5.2.4 User Interface One common criticism of MUDs is their basis in textual communication. <p> While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists [13, 14, 12, 33, 16], the interface is considered by some to be adequate at best in terms of usability <ref> [21, 27] </ref>. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [28] <author> Ken Keys. TinyFugue, </author> <month> 28 May </month> <year> 1996. </year> <title> Software package used as a "smart client" to MUDs, </title> <note> version 3.5alpha19. http://glia.biostr.washington.edu/%7Ehawkeye/tf/. 36 </note>
Reference-contexts: Currently, the only client supported by Promo is TinyFugue <ref> [28] </ref>.
Reference: [29] <author> Larry Masinter and Erik Ostrom. </author> <title> Collaborative information retrieval: Gopher from MOO. </title> <booktitle> In Proceedings of INET'93. The Internet Society, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: The same criticism applies to a tool-centered metaphor, since we may easily consider a tool to be an artifact of a process. Work done by Masinter and Ostrom <ref> [29] </ref> in integrating Gopher into a MOO seems to bear out our hypothesis about stationary artifacts. Their first attempt at providing access to Gopher within a MOO was a "Gopher room" that acted much like a traditional Gopher client. <p> While we have not implemented this metaphor within Promo, it is conceivable that this would be desirable (as in <ref> [29] </ref>). In particular, tool reification could provide the ability to subclass tools: the process modeler could design, for example, a generic editor tool, and then subclass that with platform- and artifact-type-specific editors. 5.1.4 Task: Room The centerpiece of the metaphor used in Promo is the identification of tasks with rooms.
Reference: [30] <author> MediaMOO. mediamoo.media.mit.edu, </author> <title> port 8888, maintained by Amy Bruckman. Private MOO restricted to people doing media research. </title> <address> http://lcs.www.media.mit.edu/ people/asb/MediaMOO/. </address>
Reference-contexts: Systems of this latter kind are often as social in focus as technical; many MUDs are devoted to a certain topic (e.g., biology [6] or media research <ref> [30] </ref>), and such MUDs serve as sites for virtual collocation and collaboration. <p> In particular, Bruckman and Resnick [9] argue that the construction and reconstruction of the virtual world leads to a heightened effectiveness in collaborative learning and interaction. Based on their experience in running MediaMOO <ref> [30] </ref>, the paper illustrates the effectiveness of the constructive aspect of the virtual in encouraging interaction within a professional community. 3.3.2 Work in the virtual Kaplan's work [22] on the use of virtual environments to accomplish work in the real world makes some useful distinctions.
Reference: [31] <author> Pueblo. </author> <title> A text-based virtual learning community. </title> <address> http://pc2.pc.maricopa.edu/. </address>
Reference-contexts: Since MOOs are text-based and typically foster a great facility with textual description <ref> [31] </ref>, Promo places the onus of describing the process on the shoulders of the process modeler. However, the structure of rooms and exits in Promo does provide a convenient structure on which to place process documentation.
Reference: [32] <author> Eric S. Raymond. </author> <title> The Jargon File. </title> <note> Published on the WWW, 25 January 1996. http:// www.fwi.uva.nl/%7Emes/jargon/t/Top.html. </note>
Reference-contexts: An example of interaction with a MUD is given in Figure 3. Noticeable differences of opinion exist on the "point" of a MUD. While MUDs were begun as multi-user games in the spirit of text-adventure games (such as ADVENT <ref> [32] </ref>), the concept of what constitutes a MUD has grown over time to encompass the general field of virtual environments.
Reference: [33] <author> Elizabeth Reid. </author> <title> Cultural formations in text-based virtual realities. </title> <type> Master's thesis, </type> <institution> University of Melbourne, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: While this textual foundation often leads to forms of communication that are of interest to sociologists and linguists <ref> [13, 14, 12, 33, 16] </ref>, the interface is considered by some to be adequate at best in terms of usability [21, 27]. One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs [6, 35, 26] now offer such interfaces.
Reference: [34] <author> Graeme Smith. </author> <title> hiding .location. Message sent to mailing list MOO-Cows, </title> <address> message-ID &lt;Pine.A32.3.91.960707010709.42700B-100000@fn1.freenet.edmonton.ab.ca&gt;, </address> <month> 7 July </month> <year> 1996. </year>
Reference-contexts: would preserve the feel of the MOO as a conceivable (if slightly implausible) extension of the real world, satisfy the technical constraints of implementing software process, and still maintain the consistency of the metaphor. (A possible implementation for this concept is suggested by Smith's solution to an unrelated problem in <ref> [34] </ref>.) 5.1.2 Human agent: Player As suggested by the description of artifacts above, the human agents in the process are represented as players in Promo.
Reference: [35] <author> WWW5 Discussion Forum MOO. spsyc.ac.nott.uk, </author> <title> port 5555. MOO used to facilitate two ongoing online workshops: "Virtual Environments and the WWW" and "Artificial Intelligence-based tools to help W3 users.". </title> <type> 37 </type>
Reference-contexts: A diagram of this architecture is given in Figure 2. MUDs began as text-only systems, and nearly all are still essentially text-based; however, many now are beginning to offer more sophisticated interfaces of various kinds <ref> [20, 26, 35, 6] </ref>. The world that the MUD provides to the user consists of a set of rooms and, within those rooms, myriad objects, including other players. The MUD's world represents space by means of spatial relationships among objects|for example, connections between rooms|but not specific distances or directions. <p> One of the main moves in MOO interface work has involved a push for WWW interfaces; several MOOs <ref> [6, 35, 26] </ref> now offer such interfaces. However, it is not clear that these interfaces typically offer major improvements over the older interfaces; since the data in MOOs are still largely textual, the WWW interface provides hypertext links but few graphics.
References-found: 35

