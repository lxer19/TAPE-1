URL: http://www.csd.uu.se/~svenolof/TE.ps
Refering-URL: http://www.csd.uu.se/~svenolof/
Root-URL: 
Email: svenolof@csd.uu.se  
Title: Easy Polymorphic Type Inference for Concurrent Programming  
Author: Sven-Olof Nystrom 
Address: Sweden  
Affiliation: Computing Science Department, Uppsala University,  
Abstract: Suppose we want to take advantage of the safety and flexibility of polymorphic type inference in a concurrent language. We present a concurrent language with a system of concurrency primitives based on the con-currency primitives of Erlang, but extended with a request/answer mechanism which allows a receiver of a message to direct a message (an answer) directly to the original sender. The result is a concurrent language with polymorphic typing which is much simpler than (for example) the ML-based ones, but which is still sufficiently powerful to be a realistic programming language. Unlike previous type inference systems for Erlang, like for example Marlow and Wadler's system [12], the type system developed in this paper assigns types to processes and communication, and checks that all forms of process communication are type-correct. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Johan Agat and Lennart Dahlstrom. En under-sokning av tv-a deklarativa programspr-ak. </author> <type> Master's thesis, </type> <institution> Chalmers Tekniska Hogskola and Goteborgs 8 Universitet, </institution> <year> 1995. </year> <title> In Swedish. English title: An examination of two declarative programming languages (Erlang and Haskell). </title> <institution> Found at agat/ EvsH xjobb.ps.gz, </institution> <month> July, </month> <year> 1996. </year>
Reference: [2] <author> Joe Armstrong, Robert Virding, and Mike Williams. </author> <title> Concurrent Programming in ERLANG. </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year>
Reference: [3] <author> Tomas Aronsson and Johan Grafstrom. </author> <title> A comparison between Erlang and C++ for implementation of telecom applications. </title> <type> Master's thesis, </type> <institution> Chalmers Tekniska Hogskola, </institution> <year> 1995. </year> <note> Available at the Erlang home page http://www.ericsson.se/erlang. </note>
Reference: [4] <author> Arvind, Rishiyur S. Nikhil, and Keshav K. Pingali. I-structures: </author> <title> Data structures for parallel computing. </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> 11(4) </volume> <pages> 598-632, </pages> <month> October </month> <year> 1989. </year>
Reference: [5] <author> Per Brinch Hansen. </author> <title> The nucleus of a multipro-grammed system. </title> <journal> Communications of the ACM, </journal> <volume> 13(4) </volume> <pages> 238-250, </pages> <month> April </month> <year> 1970. </year>
Reference: [6] <author> Per Brinch Hansen. </author> <title> The Architecture of Concurrent Programs. </title> <publisher> Prentice-Hall, </publisher> <year> 1977. </year>
Reference: [7] <author> Johan Carleson. Industriella erfarenheter av Er-lang. </author> <type> Master's thesis, </type> <institution> Linkopings Universitet, </institution> <year> 1996. </year> <note> In Swedish. English title: Industrial expreriences of Erlang. Available at the Erlang home page http://www.ericsson.se/erlang. </note>
Reference: [8] <author> Keith Clark and Steve Gregory. </author> <title> Parlog: Parallel programming in logic. </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> 8(1) </volume> <pages> 1-49, </pages> <year> 1986. </year>
Reference: [9] <author> Ian Foster and Stephen Taylor. Strand: </author> <title> A practical programming tool. </title> <editor> In Ewing L. Lusk and Ross A. Overbeek, editors, </editor> <booktitle> North American Conference on Logic Programming, </booktitle> <pages> pages 497-512. </pages> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference: [10] <author> Ian Foster and Stephen Taylor. Strand: </author> <title> New Concepts in Parallel Programming. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference: [11] <author> Anders Lindgren. </author> <title> A prototype of a soft type system for Erlang. </title> <type> Master's thesis, </type> <institution> Uppsala University, </institution> <month> April </month> <year> 1996. </year> <note> http://www.csd.uu.se/ ~andersl/d-thesis/report.dvi. </note>
Reference: [12] <author> Simon Marlow and Philip Wadler. Erltc: </author> <title> A type checker for Erlang. </title> <note> Found at http:// www.dcs.gla.ac.uk/~simonm/erltc toc.html, </note> <month> June </month> <year> 1996. </year>
Reference: [13] <author> Eric Nocker, Sjaak Smetsers, Marko van Eeke-len, and Rinus Plasmeijer. </author> <title> Concurrent Clean. </title> <booktitle> In Proc. PARLE '91, volume 505 of Lecture Notes in Computer Science, </booktitle> <pages> pages 202-219. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference: [14] <author> Simon Peyton Jones, Andrew Gordon, and Sig-bjorn Finne. </author> <title> Concurrent Haskell. </title> <booktitle> In Conference Record of the 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL'96), </booktitle> <pages> pages 295-308, </pages> <address> St. Petersburg, Florida, </address> <month> January 21-24, </month> <year> 1996. </year> <note> ACM Press. </note>
Reference: [15] <author> John H. Reppy. </author> <title> First-class synchronous operations. </title> <booktitle> In Theory and Practice of Parallel Programming (TPPP), volume 907 of Lecture Notes in Computer Science, </booktitle> <pages> pages 235-252. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [16] <author> John Hamilton Reppy. </author> <title> Higher-order Concurrency. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <year> 1992. </year>
Reference: [17] <author> Mads Tofte. </author> <title> Type inference for polymorphic references. </title> <journal> Information and Computation, </journal> <volume> 89 </volume> <pages> 1-34, </pages> <year> 1990. </year>
Reference: [18] <author> Kazunori Ueda. </author> <title> Guarded Horn Clauses. </title> <type> Technical Report 103, </type> <institution> Institute for New Generation Computer Technology, </institution> <address> Tokyo, </address> <year> 1985. </year>
Reference: [19] <author> Kazunori Ueda. </author> <title> Guarded Horn Clauses. </title> <type> PhD thesis, </type> <institution> University of Tokyo, </institution> <month> March </month> <year> 1986. </year>
Reference: [20] <author> Kazunori Ueda. </author> <title> I/O mode analysis in concurrent logic programming. </title> <booktitle> In Theory and Practice of Parallel Programming (TPPP), volume 907 of LNCS, </booktitle> <pages> pages 356-368. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [21] <author> Kazunori Ueda and Masao Morita. </author> <title> Moded flat GHC and its message-oriented implementation technique. </title> <journal> New Generation Comupting, </journal> <volume> 13 </volume> <pages> 3-43, </pages> <year> 1994. </year>
Reference: [22] <author> Akiniro Yonezawa, Jean-Pierre Briot, and Etsuya Shibayama. </author> <booktitle> Object-oriented concurrent programming in ABCL/1. In OOPSLA'86, </booktitle> <pages> pages 258-268, </pages> <year> 1986. </year>
References-found: 22

