URL: http://www.cs.duke.edu/~ola/papers/internet.ps
Refering-URL: http://www.cs.duke.edu/~ola/ipc.html
Root-URL: 
Email: ola@cs.duke.edu  khera@cs.duke.edu  David.Kotz@dartmouth.edu  
Author: Vivek Khera David Kotz 
Keyword: Owen Astrachan  
Web: (listed aphabetically)  
Address: College  
Affiliation: Duke University  Duke University  Dartmouth  
Abstract: The Internet Programming Contest: A Report and Philosophy Abstract Programming contests can provide a high-profile method for attracting interest in computer science. We describe our philosophy as it pertains to the purpose and merits of programming contests as well as their implementation. We believe that we have successfully combined the theoretical and practical aspects of computer science in an enjoyable contest in which many people can participate. The contests we describe have distinct advantages over contests such as the ACM scholastic programming contest. The primary advantage is that there is no travel required|the whole contest is held in cyberspace. All interaction between participants and judges is via electronic mail. Of course all contests build on and learn from others, and ours is no exception. This paper is intended to provide a description and philosophy of programming contests that will foster discussion, that will provide a model, and that will increase interest in programming as an essential aspect of computer science. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> KSR Anjeneyulu. </author> <title> Report on the 2nd internet programming contest. </title> <journal> The Software Bulletin, </journal> <volume> Number 1, </volume> <month> January </month> <year> 1992. </year> <note> Published by the National Centre for Software Technology (NCST) in Bombay, India. </note>
Reference-contexts: This contest was announced much earlier and to a wider group of people. This resulted in a drastic increase in the number of participants, again more than we expected. Additional countries represented included Finland, the United Kingdom, India <ref> [1] </ref>, Guatemala, and Belgium. There were over 200 teams from more than 100 sites (including one high school). This contest lasted three and a half hours during which there were 713 program submissions.
Reference: [2] <author> Owen Astrachan, Vivek Khera, and David Kotz. </author> <title> The duke internet programming contest. </title> <type> Technical Report CS-1990-21, </type> <institution> Duke University, Durham, </institution> <address> NC 27706, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: In this paper we report on a philosophy of programming contests and its realization in a global contest open to any individual and group with access to electronic mail. Participation in this contest has grown considerably since its inception two years ago. The first contest <ref> [2] </ref> was only "advertised" on one Usenet news group (comp.edu) one week prior to the contest date in Oc-tober, 1990. Even with this short notice the contest was truly global; teams participated from the United States, Canada, Sweden, Australia, and New Zealand.
Reference: [3] <author> J. Comer, J. Perry, B. Poucher, R. Rinewald, and S. Wileman. </author> <title> Results and problems from the 1991 acm scholastic programming contest finals. </title> <journal> SIGCSE Bulletin, </journal> <volume> 24(2) </volume> <pages> 48-54, </pages> <year> 1991. </year>
Reference-contexts: During the three hour contest, 890 program submissions were judged. 2 A Contest Rationale and Man- ifesto The Internet Programming Contest (IPC) was inspired by and modeled after the ACM scholastic programming contest <ref> [6, 4, 3, 5] </ref>, but designed with a different philosophy than that contest. Our primary purpose was to foster interest in the contest, to allow anyone to compete, and to have fun. <p> Although the description of the 1988 ACM contest [6] included a methodological description of problem selection, such descriptions have been absent from the reports on the most recent contests <ref> [4, 3] </ref> (no report on the 1989 contest appeared in a SIGCSE bulletin).
Reference: [4] <author> J. Comer, J. Perry, B. Poucher, R. Rinewalt, and S. Wileman. </author> <title> Results and problems from the 1990 acm scholastic programming contest finals. </title> <journal> SIGCSE Bulletin, </journal> <volume> 22(4) </volume> <pages> 15-22, </pages> <year> 1990. </year>
Reference-contexts: During the three hour contest, 890 program submissions were judged. 2 A Contest Rationale and Man- ifesto The Internet Programming Contest (IPC) was inspired by and modeled after the ACM scholastic programming contest <ref> [6, 4, 3, 5] </ref>, but designed with a different philosophy than that contest. Our primary purpose was to foster interest in the contest, to allow anyone to compete, and to have fun. <p> Although the description of the 1988 ACM contest [6] included a methodological description of problem selection, such descriptions have been absent from the reports on the most recent contests <ref> [4, 3] </ref> (no report on the 1989 contest appeared in a SIGCSE bulletin).
Reference: [5] <author> J. Comer, R. Rinewalt, P. Ryan, and W.B. Poucher. </author> <booktitle> The ACM scholastic programming contest | 1977 to 1990. In The Papers of the Twenty-first Technical Symposium on Computer Science Education, </booktitle> <pages> page 256. </pages> <publisher> ACM Press, </publisher> <month> February </month> <year> 1990. </year> <note> SIGCSE Bulletin V. 22 N. 1. </note>
Reference-contexts: During the three hour contest, 890 program submissions were judged. 2 A Contest Rationale and Man- ifesto The Internet Programming Contest (IPC) was inspired by and modeled after the ACM scholastic programming contest <ref> [6, 4, 3, 5] </ref>, but designed with a different philosophy than that contest. Our primary purpose was to foster interest in the contest, to allow anyone to compete, and to have fun.
Reference: [6] <author> L.E. Deimel. </author> <title> Problems from the 12th annual ACM scholastic programming contest. </title> <journal> SIGCSE Bulletin, </journal> <volume> 20(4) </volume> <pages> 19-28, </pages> <year> 1988. </year>
Reference-contexts: During the three hour contest, 890 program submissions were judged. 2 A Contest Rationale and Man- ifesto The Internet Programming Contest (IPC) was inspired by and modeled after the ACM scholastic programming contest <ref> [6, 4, 3, 5] </ref>, but designed with a different philosophy than that contest. Our primary purpose was to foster interest in the contest, to allow anyone to compete, and to have fun. <p> Perhaps this is because we are free to be second-guessed by contestants when the contest is over since not as much is at stake. Although the description of the 1988 ACM contest <ref> [6] </ref> included a methodological description of problem selection, such descriptions have been absent from the reports on the most recent contests [4, 3] (no report on the 1989 contest appeared in a SIGCSE bulletin).
Reference: [7] <author> Edsger Dijkstra, David Parnas, William Scherlis, M.H. van Emden, Jacques Cohen, Richard Hamming, Richard M. Karp, and Terry Winograd. </author> <title> A Debate on Teaching Computer Science. </title> <journal> Communications of the ACM, </journal> <volume> 32(12) </volume> <pages> 1397-1414, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Programming contests can provide a way of attracting interest in computer science, of honing analytical skills, and of having fun. Contrary to methodologies espoused in [8] and debated in <ref> [7] </ref>, we hold the view that programming computers is an integral part of computer science accessible to beginning students. Programming can be used to develop theoretical concepts in an environment that provides immediate and useful feedback.
Reference: [8] <author> Edsger W. Dijkstra. </author> <booktitle> On the Cruelty of Really Teaching Computer Science. In SIGSCE Technical Symposium on Computer Science Education, </booktitle> <pages> pages xxv-xxxix, </pages> <year> 1989. </year>
Reference-contexts: 1 Introduction Programming contests can provide a way of attracting interest in computer science, of honing analytical skills, and of having fun. Contrary to methodologies espoused in <ref> [8] </ref> and debated in [7], we hold the view that programming computers is an integral part of computer science accessible to beginning students. Programming can be used to develop theoretical concepts in an environment that provides immediate and useful feedback.
Reference: [9] <author> Dr. Seuss. </author> <title> The Cat in the Hat Comes Back. Basic Books. Random House, </title> <year> 1958. </year>
Reference-contexts: Other problems involve solving algebraic or geometric problems, financial calculations, simplified VLSI tasks, robotics, automatic program generation, and artificial intelligence. None of our problems require tricky input or output processing. We do have some problems that are of the "just-for-fun" variety such as "The Cat in the Hat" <ref> [9] </ref> problem, which appeared in the 1991 contest in memory of the late Theodore Seuss Geisel. 1 The Fall 1992 Mid-Atlantic regional contest was conducted in a distributed manner using the software we developed for the Internet Programming Contest.
References-found: 9

