URL: http://www.cs.purdue.edu/homes/spaf/tech-reps/9429.ps
Refering-URL: http://www.cs.purdue.edu/coast/coast-tools.html
Root-URL: http://www.cs.purdue.edu
Email: fschuba,spafg@cs.purdue.edu  
Title: Countering Abuse of Name-Based Authentication 1 distributed database system: the Domain Name System (DNS). Dynamic
Author: Christoph L. Schuba and Eugene H. Spafford 
Note: In the Internet this name resolution is provided by a widely-implemented  1 submitted to the twenty-second annual Telecommunications Policy Research Conference  
Address: West Lafayette, IN 47907-1398  
Affiliation: COAST Laboratory Department of Computer Sciences Purdue University  
Abstract: Authentication for access control procedures is usually based on the identity of participating entities. In some communications systems, identities are partially or wholly resolved using hostnames or machine addresses in the underlying protocol suite. Access control lists and revocation lists are often defined on the basis of hostnames, whereby the communication subsystem at runtime utilizes machine addresses. After communications between two machines are established, hosts identify each other by their protocol addresses. To map this address to a high-level name, which can then be compared with access control or revocation lists to grant or deny access, a resolution process is initiated. The abstraction from protocol addresses to high-level hostnames is necessary to hide details of heterogeneous communication subsystems, and of dynamic network configurations from the application layer where a uniform, high-level naming scheme is desired. If cryptographic capabilities are used that identify subject-object interactions, authentication usually does not depend on host identification. Where host identification is part of the authentication, a crucial link in the chain of authentication is the association between hostnames and their respective addresses. The validity of the authentication can be trusted only as much as the binding process itself. 
Abstract-found: 1
Intro-found: 1
Reference: [Bel89] <author> Steven M. Bellovin. </author> <title> Security Problems in the TCP/IP Protocol Suite. </title> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, New Jersey, </address> <month> April </month> <year> 1989. </year>
Reference-contexts: The repeated resolution attempts are performed by the local resolver. Many security problems of the TCP/IP protocol suite build on the ability of the attacker to spoof the IP address of a trusted machine, as described in <ref> [Bel89] </ref>. As 4 hosts trust each other, usually on the basis of hostnames, an attacker can take the easier approach and spoof a host's name instead of its IP address. The process is depicted in figure 1. Assume that user alice@aragorn.defend.dom trusts user bob@boromir.defend. dom via the .rhosts mechanism.
Reference: [Bel90] <author> Steven M. Bellovin. </author> <title> Using the Domain Name System for System Break-ins. </title> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, New Jersey, </address> <year> 1990. </year> <note> (unpublished technical report). </note>
Reference-contexts: This paper investigates policies and mechanisms to solve the problem of trust in the Domain Name System. Some of these policies and mechanisms might be abstractable to distributed naming services in general. Although this problem has been known for some years now, not many publications deal with it. <ref> [Bel90] </ref> and [Sch93] are the principal accounts that we can mention as related work. [Bel90] demonstrates the subversion of system security using the DNS and discusses possible defenses against the attack and limitations on their applicability. The paper follows suggestions from Paul V. Mockapetris, the designer of the DNS. <p> Some of these policies and mechanisms might be abstractable to distributed naming services in general. Although this problem has been known for some years now, not many publications deal with it. <ref> [Bel90] </ref> and [Sch93] are the principal accounts that we can mention as related work. [Bel90] demonstrates the subversion of system security using the DNS and discusses possible defenses against the attack and limitations on their applicability. The paper follows suggestions from Paul V. Mockapetris, the designer of the DNS.
Reference: [Bel92] <author> Steven M. Bellovin. </author> <title> There Be Dragons. </title> <booktitle> In UNIX Security Symposium III Proceedings, </booktitle> <pages> pages 1-16, </pages> <address> Baltimore, MD, </address> <year> 1992. </year>
Reference-contexts: This first attempted defense, developed at the University of Berkeley, CA , consists of modifications of the r-command daemons. The idea is to validate the inverse mapping tree by looking at the corresponding node on the forward mapping tree. S. Bellovin describes the method used by the patch in <ref> [Bel92] </ref> as follows: To detect this, we perform a cross-check; using the returned name, we do a forward check to learn the legal address for that host. If that name is not listed, or if the addresses do not match, alarms, gongs, and tocsins are sounded.
Reference: [Com91] <author> Douglas E. Comer. </author> <title> Internetworking with TCP/IP. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <note> second edition, </note> <year> 1991. </year>
Reference-contexts: does not deal with the mapping between addresses on the physical layer and transport layer, which is solved by ARP 3 in the TCP/IP Internet Protocol Suite, but with the mapping between hostnames and IP addresses. 2 "32-bit addresses assigned to hosts that want to participate in a TCP/IP internet" <ref> [Com91] </ref> 3 "Address Resolution Protocol used to dynamically bind a high-level IP address to a low-level physical hardware address" [Com91] 2 This higher-level binding effort went through different stages of development up to the currently used Domain Name System (DNS). <p> ARP 3 in the TCP/IP Internet Protocol Suite, but with the mapping between hostnames and IP addresses. 2 "32-bit addresses assigned to hosts that want to participate in a TCP/IP internet" <ref> [Com91] </ref> 3 "Address Resolution Protocol used to dynamically bind a high-level IP address to a low-level physical hardware address" [Com91] 2 This higher-level binding effort went through different stages of development up to the currently used Domain Name System (DNS). The DNS is a distributed naming resolution system used by most network services available throughout the Internet.
Reference: [Den82] <author> Dorothy E. Denning. </author> <title> Cryptography and Data Security. </title> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <year> 1982. </year>
Reference-contexts: However they are not perfect. Most of the algorithms rely at some point on conjectures in number theory that are neither 15 proven nor contradicted, or on the fact that brute force attacks are computationally infeasible. For a discussion of this see <ref> [Den82] </ref>. We have to meet the requirements of data integrity of the message and of originator authentication. In the following we will elaborate on these two requirements and present techniques for their possible implementation.
Reference: [GS91] <author> Simson Garfinkel and Gene Spafford. </author> <title> Practical UNIX Security. </title> <publisher> O'Reilley & Associates, Inc. </publisher> <address> Sebastopol, CA., </address> <year> 1991. </year> <month> 20 </month>
Reference-contexts: In paragraph 2.3.2, we discussed the Trusted Network concept. R-commands such as remote login and remote shell offer the possibility to extend trust to other machines. Users and system administrators can build individual networks of trust. This proves dangerous in some cases. <ref> [GS91, chapter 11] </ref> discusses security problems with the UNIX trust mechanism. The existence of these structures of trust is necessary for the break-in to happen. Obviously, the break-in is prevented if we prohibit the usage of trusted hosts or trusted users completely. <p> Although Kerberos is an excellent solution to several difficult problems, it has shortcomings that limit its usefulness in respect to our problem. A discussion of its shortcomings can be found in <ref> [GS91] </ref>. Overall, a very weak point in Berkeley derived UNIX systems is the usage of trust. This paper exploits only one of several known flaws based upon trust. Using trust-based mechanisms requires thinking about a change in individual policies in dealing with granting trust to others.
Reference: [Ken93] <author> Stephen T. Kent. </author> <title> RFC-1422 Privacy Enhancement for Internet Elec--tronic Mail: Part II: Certificate-Based Key Management. </title> <institution> Network Working Group, </institution> <month> February </month> <year> 1993. </year>
Reference-contexts: The keys must be obtained before they can be used. S. Kent describes in <ref> [Ken93] </ref> certificate based key management for usage in Privacy Enhanced Mail (PEM). We will not go into more detail regarding the key distribution process. The registration process that has to occur out-of-band is rather cumbersome.
Reference: [Lot94] <author> Mark Lottor. </author> <title> Internet Domain Survey Jan 94. </title> <booktitle> SRI International, </booktitle> <month> January </month> <year> 1994. </year>
Reference-contexts: HOSTS.TXT was abandoned because 200,000 hosts was too much to be managed. Are currently over 2.2 million (see <ref> [Lot94] </ref>) easier to handle? Certainly not. Abandoning the DNS would drag the name resolution task in the Internet out of a functioning state with a not easily exploitable security breach, into an unmanageable, not working state of prehistoric system design.
Reference: [Mer89] <author> Ralph C. </author> <type> Merkle. </type> <institution> Snefru. Xerox Corporation, </institution> <address> Palo Alto, CA, </address> <year> 1989. </year>
Reference-contexts: Our approach is based on message digest algorithms. Message digests, or synonymously fingerprints or signatures, are the result of the application of a one-way hash functions that computes a checksum of its input data. MD5 and the Snefru algorithm are examples for message digest algorithms (see <ref> [Riv92, Mer89] </ref>.) Message digest algorithms are easy to compute, are only a few bytes per message, are computationally hard to invert, and usually require a certain size of input data. An originator would calculate the message digest of a DNS message immediately before it is sent out.
Reference: [Moc87] <author> Paul Mockapetris. </author> <title> RFC-1034 Domain Names Concepts and Facilities. </title> <institution> Network Working Group, </institution> <month> November </month> <year> 1987. </year>
Reference-contexts: The selection of which name server to contact depends on the name or address to be resolved. The decision process about this choice is specified in <ref> [Moc87, sections 4.3.2, 5.3.3] </ref>. Queries to name servers from a resolver come in two flavors: recursive and iterative. In recursive resolution, a resolver sends a recursive query to a name server.
Reference: [Mor85] <author> R. T. Morris. </author> <title> A Weakness in the 4.2BSD UNIX TCP/IP Software. </title> <note> Computing Science Technical Report No. 117, </note> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, New Jersey, </address> <month> February </month> <year> 1985. </year>
Reference-contexts: This would not solve the problem, because the problem is not the DNS, but inadequate methods of host authentication. IP addresses of trusted machines could still be imitated. This is a somewhat harder task, but the techniques have been known for quite some time (see <ref> [Mor85] </ref>). Would it be safer to transmit updates to a central site? Electronic mail, telephone calls, or conventional paper are not necessarily a reliable way to transmit mapping information updates.
Reference: [NBS77] <author> NBS. </author> <title> Data Encryption Standard. </title> <institution> National Bureau of Standards, </institution> <address> Washing-ton D.C., </address> <month> Jan. </month> <year> 1977. </year> <note> FIPS PUB 46. </note>
Reference-contexts: Electronic mail depends on the DNS. The Massachusetts Institute of Technology, together with IBM and Digital Equipment Corporation developed in 1983 Kerberos, an authentication system that uses Data Encryption Standard (see <ref> [NBS77] </ref>) cryptography to transmit sensitive information on a network, such as clear-text passwords. Although Kerberos is an excellent solution to several difficult problems, it has shortcomings that limit its usefulness in respect to our problem. A discussion of its shortcomings can be found in [GS91].
Reference: [PH78] <author> S. Pohlig and M. Hellman. </author> <title> An Improved Algorithm for Computing Logarithms over GF(p) and its Cryptographic Significance. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-24(1):106-10, </volume> <month> January </month> <year> 1978. </year>
Reference-contexts: Data encrypted with a sender's private key can be decrypted using his public key, and vice versa. These keys are usually large integer numbers, several hundred decimal digits long with special, mathematical properties. Pohlig-Hellman and RSA are examples of asymmetric cryptosystems (see <ref> [PH78, RSA78] </ref>). by encrypting the hash value s of the data using his private key component K priv and sends (E K priv (s),m). The receiver validates the data in a three step process.
Reference: [PL91] <author> R. Paans and H. de Lange. </author> <title> Auditing the SNA/SNI Environment. </title> <journal> Computer & Security, </journal> <volume> 10(3) </volume> <pages> 251-61, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Networks (as well 6 as systems in general) may be classified into different partitions: Closed Networks, Open Networks, and Trusted Networks <ref> [PL91] </ref>. Closed Networks can be accessed only within certain boundaries. Sessions are controlled and secured in accordance with the rules implied by an organization's policy. In a Closed Network, the locations of all resources are well known and specified.
Reference: [Riv92] <author> Ronald L. Rivest. </author> <title> RFC-1321 The MD5 Message-Digest Algorithm. </title> <institution> Network Working Group, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: Our approach is based on message digest algorithms. Message digests, or synonymously fingerprints or signatures, are the result of the application of a one-way hash functions that computes a checksum of its input data. MD5 and the Snefru algorithm are examples for message digest algorithms (see <ref> [Riv92, Mer89] </ref>.) Message digest algorithms are easy to compute, are only a few bytes per message, are computationally hard to invert, and usually require a certain size of input data. An originator would calculate the message digest of a DNS message immediately before it is sent out.
Reference: [RSA78] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-6, </pages> <month> February </month> <year> 1978. </year>
Reference-contexts: Data encrypted with a sender's private key can be decrypted using his public key, and vice versa. These keys are usually large integer numbers, several hundred decimal digits long with special, mathematical properties. Pohlig-Hellman and RSA are examples of asymmetric cryptosystems (see <ref> [PH78, RSA78] </ref>). by encrypting the hash value s of the data using his private key component K priv and sends (E K priv (s),m). The receiver validates the data in a three step process.
Reference: [Sch93] <author> Christoph L. Schuba. </author> <title> Addressing Weaknesses in the Domain Name System Protocol. </title> <type> Master's thesis, </type> <institution> Purdue University, West Lafayette, IN, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: Some of these policies and mechanisms might be abstractable to distributed naming services in general. Although this problem has been known for some years now, not many publications deal with it. [Bel90] and <ref> [Sch93] </ref> are the principal accounts that we can mention as related work. [Bel90] demonstrates the subversion of system security using the DNS and discusses possible defenses against the attack and limitations on their applicability. The paper follows suggestions from Paul V. Mockapetris, the designer of the DNS. In [Sch93] the details <p> [Bel90] and <ref> [Sch93] </ref> are the principal accounts that we can mention as related work. [Bel90] demonstrates the subversion of system security using the DNS and discusses possible defenses against the attack and limitations on their applicability. The paper follows suggestions from Paul V. Mockapetris, the designer of the DNS. In [Sch93] the details of the exploitation of the weakness are worked out and several approaches to solve the weakness in the DNS are discussed with emphasis on hardening the name server implementations and the usage of strong cryptographic methods for authentication. 4 UNIX is a trademark of Novell 3 2 The <p> Although we regard this patch as an obligatory modification to daemons like rlogind and rshd, it is limited in its scope. The cache of a running name server can still be poisoned by supplying additional unrequested records as the experiments described in <ref> [Sch93, section 3.5] </ref> prove. The Berkeley patch utilizes a principle that can be applied outside of the UNIX domain. The idea is to perform a cross-check of the first mapping in the reverse order. In a consistent state, forward and backward mapping data are managed by the same 9 authority.
Reference: [Sch94] <author> Bruce Schneier. </author> <title> Applied Cryptography. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1994. </year>
Reference: [Ste90] <author> Richard W. Stevens. </author> <title> UNIX Network Programming. </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliffs, New Jersey, </address> <year> 1990. </year>
Reference-contexts: There are many notions on how access rights can be specified. Examinations can be based on identification by hostname, login name, and login password. In some cases it suffices to provide the right names, and access is granted without specifying any password at all. Some Berkeley r-commands (see <ref> [Ste90, chapter 14] </ref>) offer network services for which it is sufficient to verify user name and hostname to gain complete access. As the remote user name is specified by the connecting site, the authentication is additionally based upon the name of the connecting machine.
Reference: [Tol65] <author> John R. R. Tolkien. </author> <title> The Lord of the Rings. </title> <publisher> Houghton Mi*in, </publisher> <address> Boston, </address> <note> second edition, 1965. 21 </note>
References-found: 20

