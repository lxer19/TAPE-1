URL: http://www.eecs.umich.edu/~radu/papers/EDOC98.ps.gz
Refering-URL: http://www.eecs.umich.edu/~radu/research/research.html
Root-URL: http://www.eecs.umich.edu
Email: E-mail: fradu,aprakashg@eecs.umich.edu  
Title: Adaptive Group Communication Services for Groupware Systems  
Author: Radu Litiu and Atul Prakash 
Address: Ann Arbor, MI 48109-2122, USA  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Abstract: Collaborative, multi-user applications require group multicast services that provide ordering guarantees for maintaining consistency of replicated shared context as well as provide a high degree of interactivity, even under varying load on the communication servers. While the most common view of the quality of service (QoS) in a distributed system is in terms of the guarantee of the network connection parameters (bandwidth, end-to-end delay) for audio and video, in this paper we investigate the various requirements placed on group communication servers for reliable data communication among diverse groups of collaborative users. We show that in the absence of such considerations in the design of a group communication service, some groups or individual users can be severely affected by bursty traffic or increase in the size of other groups. We present the design of a best-effort adaptive group communication service for supporting reliable data communication in CSCW systems, which addresses both group's requirements and individual user's requirements, balancing the needs of multiple groups of users by taking into account their priorities and needs when resources are constrained at the communication server. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. Transis: </author> <title> A Communication Sub-System for High Availability. </title> <booktitle> In Proceedings of the 22nd International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 76-84. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1992. </year>
Reference-contexts: Since the coordinator manages only a reduced number of connections, it is not heavily loaded (not more than a server) and thus it does not represent a performance bottleneck. The scheme for recovery after a server crash can be based on one of the existing algorithms ( <ref> [1] </ref>, [2], [18]). The solution we chose is based on the assumptions on the number of simultaneous server crashes tolerated and it is not the subject of this paper. The QoS-based strategy previously discussed can be applied to each copy of the server.
Reference: [2] <author> K.P. Birman. </author> <title> The Process Group Approach to Reliable Distributed Computing. </title> <journal> Comm. of the ACM, </journal> <volume> 36(12) </volume> <pages> 37-53, </pages> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: Figure 1 shows the graphical interfaces of some of the Corona-based collaboration Chat Box Instrument Data Viewers Chat Membership/Notification window tools. 2.1 Overview of Corona Group Communication: The basic unit of communication in Corona is the group <ref> [2] </ref>. A group is defined to be a set of processes, termed members. A group has a shared state and the members of the group operate on the shared state by accessing and modifying the shared objects in the shared state. <p> Since the coordinator manages only a reduced number of connections, it is not heavily loaded (not more than a server) and thus it does not represent a performance bottleneck. The scheme for recovery after a server crash can be based on one of the existing algorithms ( [1], <ref> [2] </ref>, [18]). The solution we chose is based on the assumptions on the number of simultaneous server crashes tolerated and it is not the subject of this paper. The QoS-based strategy previously discussed can be applied to each copy of the server.
Reference: [3] <author> A. Bricker, M. Gien, M. Guillemont, J. Lipskis, D. Orr, and M Rozier. </author> <title> Architectural Issues in Microkernel-based Operating Systems: </title> <journal> the CHORUS Experience. Computer Communication, </journal> <volume> 14(6) </volume> <pages> 345-357, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Robin et al. [17] address both the network and host QoS control problem in a system based on the Chorus <ref> [3] </ref> micro-kernel. Several distinct policies for admission control and dynamic quality control are outlined in [11], based on the experience with using Real-Time Mach [20], a micro-kernel architecture which supports the notion of processor capacity reserve.
Reference: [4] <author> S. Chatterjee, J. Sydir, B. Sabata, and T. Lawrence. </author> <title> Modeling Applications for Adaptive QoS-based Resource Management. </title> <booktitle> In Proceedings of the 2nd IEEE High-Assurance System Engineering Workshop (HASE97), </booktitle> <address> Bethesda, Mary-land, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: They introduce the QoS Broker as an intermediary who performs services such as translation, admission and negotiation in order to properly configure the system to application needs. Chaterjee et al. <ref> [4] </ref> present two models to facilitate adaptive QoS-driven resource management in heterogeneous distributed systems and propose a graceful degradation of the application QoS under certain circumstances. Mathur et al. [12] address the QoS problem in group collaboration systems by means of a protocol composition approach.
Reference: [5] <author> M. Cortes and P. Mishra. DCWPL: </author> <title> A Programming Language for Describing Collaborative Work. </title> <booktitle> In Proceedings of the Conference on Computer-Supported Cooperative Work, </booktitle> <pages> pages 21-29, </pages> <address> Cambridge, Mass, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: Greenberg [8] uses roles as a distinction among categories of users, as well as among individual users within a group. Edwards [6] presents a specification language for Intermezzo, a collaborative framework which supports static and dynamic roles assigned to users. Roles and priorities are introduced in DCWPL <ref> [5] </ref>, a programming language used to develop user-customizable groupware applications.
Reference: [6] <author> W. Keith Edwards. </author> <title> Policies and Roles in Collaborative applications. </title> <booktitle> In Proceedings of the Conference on Computer-Supported Cooperative Work, </booktitle> <pages> pages 11-20, </pages> <address> Cam-bridge, Mass, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: Mathur et al. [12] address the QoS problem in group collaboration systems by means of a protocol composition approach. Greenberg [8] uses roles as a distinction among categories of users, as well as among individual users within a group. Edwards <ref> [6] </ref> presents a specification language for Intermezzo, a collaborative framework which supports static and dynamic roles assigned to users. Roles and priorities are introduced in DCWPL [5], a programming language used to develop user-customizable groupware applications.
Reference: [7] <author> C.R. Clauer et al. </author> <title> A Prototype Upper Atmospheric Research Collaboratory (UARC). </title> <journal> EOS, Trans. Amer. Geo-phys. Union, </journal> <volume> 74, </volume> <year> 1993. </year>
Reference-contexts: Section 7 concludes the paper with a brief summary of our work and our future plans. 2 Background Our work on adaptive services for computer-supported synchronous collaboration has its origin in a NSF-sponsored project, called the Upper Atmospheric Research Collaboratory (UARC) <ref> [7] </ref>. The UARC project focuses on developing an experimental testbed for wide-area scientific collaboratory work.
Reference: [8] <author> S. Greenberg. </author> <title> Personalizable Groupware: Accomodating individual roles and Group Differences. </title> <booktitle> In Proceedings of the European Conference on Computer-Supported Cooperative Work(ECSCW), </booktitle> <address> Amsterdam, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: A client joins a group and receives the shared state of the group or leaves a group unobtrusively; the existing processes in the group are able to carry on with their operations in the presence of multiple, concurrent joins and leaves. The Corona server allows clients to specify roles <ref> [8] </ref> when joining a group. The group multicast service provides interfaces for broadcasting updates on shared state. Messages from members of a group are multicast as point-to-point messages in the order of arrival to all the members, thus ensuring total order. <p> Chaterjee et al. [4] present two models to facilitate adaptive QoS-driven resource management in heterogeneous distributed systems and propose a graceful degradation of the application QoS under certain circumstances. Mathur et al. [12] address the QoS problem in group collaboration systems by means of a protocol composition approach. Greenberg <ref> [8] </ref> uses roles as a distinction among categories of users, as well as among individual users within a group. Edwards [6] presents a specification language for Intermezzo, a collaborative framework which supports static and dynamic roles assigned to users.
Reference: [9] <author> R. W. Hall, A. Mathur, F. Jahanian, A. Prakash, and C. Rasmussen. Corona: </author> <title> A Communication Service for Scalable, Reliable Group Collaboration Systems. </title> <booktitle> In Proc. of the Sixth ACM Conference on Computer-Supported Cooperative Work. </booktitle> <publisher> ACM Press, </publisher> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: This community of scientists has extensively used our system over the last few years. The current design of the system is an applet-based architecture implemented in Java, taking advantage of the accessibility and ubiquity of the World Wide Web and Java platform-independence. A server, called Corona ( <ref> [9] </ref>, [19]), provides multicast services to support various collaboration tools. These include various shared data viewers for graphically displaying instrument data, a multi-party chat box for exchanging textual messages, and a notebook-like draw tool for saving and sharing notes, images and drawings.
Reference: [10] <author> J Kurose. </author> <title> Open Issues and Challenges in Providing Quality of Service Guarantees in High-Speed Networks. </title> <journal> ACM Computer Comm Review, </journal> <volume> 23(1) </volume> <pages> 6-15, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Section 4 discusses our approach to incorporating the above requirements into Corona. 3 Related Work There exists a great deal of interest in providing QoS guarantees of the network communication ( [22], <ref> [10] </ref>). Robin et al. [17] address both the network and host QoS control problem in a system based on the Chorus [3] micro-kernel.
Reference: [11] <author> C. Lee, R. Rajkumar, and C. Mercer. </author> <title> Experiences with Processor Reservation and Dynamic QOS in Real-Time Mach. </title> <booktitle> In Proceedings of the Third IEEE International Conference on Multimedia Computing and Systems, </booktitle> <address> Hiroshima, Japan, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Also, in a long-duration collaboration, there can be long periods of inactivity followed by bursts of activity, e.g., depending on the interest in the evolving scientific data. So, a-priori reservation of resources at the servers ( <ref> [11] </ref>) can be difficult for the clients to do or can be inefficient. Service based on group characteristics: Some multicast groups can be more important than others. <p> Robin et al. [17] address both the network and host QoS control problem in a system based on the Chorus [3] micro-kernel. Several distinct policies for admission control and dynamic quality control are outlined in <ref> [11] </ref>, based on the experience with using Real-Time Mach [20], a micro-kernel architecture which supports the notion of processor capacity reserve. Mehra et al. [13] introduce the real-time channel as a paradigm for guaranteed-QoS communication services in packet-switched networks.
Reference: [12] <author> A.G. Mathur and A. Prakash. </author> <title> A Protocol Composition-Based Approach to QoS Control in Collaboration Systems. </title> <booktitle> In Proceedings of the Third IEEE International Conference on Multimedia Computing and Systems, </booktitle> <address> Hiroshima, Japan, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Chaterjee et al. [4] present two models to facilitate adaptive QoS-driven resource management in heterogeneous distributed systems and propose a graceful degradation of the application QoS under certain circumstances. Mathur et al. <ref> [12] </ref> address the QoS problem in group collaboration systems by means of a protocol composition approach. Greenberg [8] uses roles as a distinction among categories of users, as well as among individual users within a group.
Reference: [13] <author> A. Mehra, A. Indiresan, and Kang G. Shin. </author> <title> Structuring Communication Software for Quality-of-Service Guarantees. </title> <booktitle> In Proceedings of 17th Real-Time Systems Symposium, </booktitle> <month> De-cember </month> <year> 1996. </year>
Reference-contexts: Several distinct policies for admission control and dynamic quality control are outlined in [11], based on the experience with using Real-Time Mach [20], a micro-kernel architecture which supports the notion of processor capacity reserve. Mehra et al. <ref> [13] </ref> introduce the real-time channel as a paradigm for guaranteed-QoS communication services in packet-switched networks. The architecture proposed provides services such as admission control, traffic enforcement, buffer management, and CPU and link scheduling.
Reference: [14] <author> K. Nahrstedt and J.M. Smith. </author> <title> The QoS Broker. </title> <journal> IEEE Multimedia, </journal> <volume> 2(1), </volume> <month> Spring </month> <year> 1995. </year>
Reference-contexts: An overview of the QoS issues involved in distributed multimedia communication is presented by Vogel et al. [21] from the perspective of communication protocols, operating systems, multimedia databases, and file servers. Nahrstedt and Smith <ref> [14] </ref> point out that in order to provide applications with end-to-end guarantees, network resource management alone is not sufficient and indicate a need to balance resources among the application, network, and operating system at the endpoints, and between endpoints and the network.
Reference: [15] <editor> C.M. Newirth, D. S. Kaufer, R. Chandhok, and J. Morris. </editor> <booktitle> Issues in the Design of Computer Support for Co-authoring and Commenting. In Proceedings of the Conference on Computer-Supported Cooperative Work, </booktitle> <pages> pages 183-195, </pages> <address> Los Angeles, CA, </address> <year> 1990. </year>
Reference-contexts: Users may want events occurring in real-time to be given higher priority at the server than archived events. 4.2 Client Roles and Client Priority Users may have roles in a group, requiring better service for some members than others. As noted in <ref> [15] </ref>, the assignment of roles has a social meaning, the ones who are making a more important contribution being assigned more important roles.
Reference: [16] <author> S. Rajan, P.V. Rangan, and H.M. Vin. </author> <title> A Formal Basis for Structured Multimedia Collaborations. </title> <booktitle> In Proceedings of the 2nd IEEE International Conference on Multimedia Computing and Systems, </booktitle> <address> Washington, D.C., </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Mehra et al. [13] introduce the real-time channel as a paradigm for guaranteed-QoS communication services in packet-switched networks. The architecture proposed provides services such as admission control, traffic enforcement, buffer management, and CPU and link scheduling. Rajan et al. <ref> [16] </ref> propose a formal framework for multimedia collaboration, which distinguishes three levels of abstraction: streams at the lowest level, for media communication, sessions at the next level, representing collections of semantically related media streams, and conferences as temporally related sequences of sessions.
Reference: [17] <author> P. Robin, G. Coulson, A. Campbell, G. Blair, and M. Pap-athomas. </author> <title> Implementing a QoS Controlled ATM-Based Communication System in Chorus. </title> <type> Technical Report MPG-94-05, </type> <institution> Dept. of Computing, Lancaster University, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: Section 4 discusses our approach to incorporating the above requirements into Corona. 3 Related Work There exists a great deal of interest in providing QoS guarantees of the network communication ( [22], [10]). Robin et al. <ref> [17] </ref> address both the network and host QoS control problem in a system based on the Chorus [3] micro-kernel.
Reference: [18] <author> R.D. Schlichting and F.B. Schneider. </author> <title> Fail-Stop Processors: an Approach to Designing Fault-Tolerant Computing Systems. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 1(3) </volume> <pages> 222-238, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Since the coordinator manages only a reduced number of connections, it is not heavily loaded (not more than a server) and thus it does not represent a performance bottleneck. The scheme for recovery after a server crash can be based on one of the existing algorithms ( [1], [2], <ref> [18] </ref>). The solution we chose is based on the assumptions on the number of simultaneous server crashes tolerated and it is not the subject of this paper. The QoS-based strategy previously discussed can be applied to each copy of the server.
Reference: [19] <author> H.S. Shim, R. W. Hall, A. Prakash, and F. Jahanian. </author> <title> Providing Flexible Services for Managing Shared State in Collaboration Systems. </title> <booktitle> In Proceedings of the Fifth European Conference on Computer Supported Cooperative Work, </booktitle> <pages> pages 237-252, </pages> <year> 1997. </year>
Reference-contexts: This community of scientists has extensively used our system over the last few years. The current design of the system is an applet-based architecture implemented in Java, taking advantage of the accessibility and ubiquity of the World Wide Web and Java platform-independence. A server, called Corona ( [9], <ref> [19] </ref>), provides multicast services to support various collaboration tools. These include various shared data viewers for graphically displaying instrument data, a multi-party chat box for exchanging textual messages, and a notebook-like draw tool for saving and sharing notes, images and drawings.
Reference: [20] <author> H. Tokuda, T. Nakajima, and P. Rao. </author> <title> Real-Time Mach: Towards a Predictable Real-Time System. </title> <booktitle> In Proceedings of USENIX Mach Workshop, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: Robin et al. [17] address both the network and host QoS control problem in a system based on the Chorus [3] micro-kernel. Several distinct policies for admission control and dynamic quality control are outlined in [11], based on the experience with using Real-Time Mach <ref> [20] </ref>, a micro-kernel architecture which supports the notion of processor capacity reserve. Mehra et al. [13] introduce the real-time channel as a paradigm for guaranteed-QoS communication services in packet-switched networks. The architecture proposed provides services such as admission control, traffic enforcement, buffer management, and CPU and link scheduling.
Reference: [21] <author> A. Vogel, B. Kerherve, G. von Bochman, and J. Gecsei. </author> <title> Distributed Multimedia and QoS: A survey. </title> <journal> IEEE Multimedia, </journal> <volume> 2(2) </volume> <pages> 10-19, </pages> <month> Summer </month> <year> 1995. </year>
Reference-contexts: An overview of the QoS issues involved in distributed multimedia communication is presented by Vogel et al. <ref> [21] </ref> from the perspective of communication protocols, operating systems, multimedia databases, and file servers.
Reference: [22] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zap-pala. RSVP: </author> <title> A New Resource ReSerVation Protocol. </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: Section 4 discusses our approach to incorporating the above requirements into Corona. 3 Related Work There exists a great deal of interest in providing QoS guarantees of the network communication ( <ref> [22] </ref>, [10]). Robin et al. [17] address both the network and host QoS control problem in a system based on the Chorus [3] micro-kernel.
References-found: 22

