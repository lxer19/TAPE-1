URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1993/GIT-CC-93-41.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.93.html
Root-URL: 
Email: amir@cc.gatech.edu;  dmitry@cc.gatech.edu.  
Title: MAXIMUM AGREEMENT SUBTREE IN A SET OF EVOLUTIONARY TREES  
Author: Amihood Amir Dmitry Keselman 
Note: Partially supported by NSF grant IRI-90-13055 and CCR-92-23699.  
Date: July 1993  
Address: GIT-CC-93/41  Atlanta, Georgia 30332-0280  Atlanta, GA 30332-0280; (404) 853-0083;  Atlanta, GA 30332-0280; (404) 894-9678;  
Affiliation: Georgia Tech Georgia Tech  College of Computing Georgia Institute of Technology  College of Computing, Georgia Institute of Technology,  College of Computing, Georgia Institute of Technology,  
Abstract: The maximum agreement subtree approach is one method of reconciling different evolution trees for the same set of species. Recently, dynamic programming ideas were used by Steele and Warnow to provide polynomial time algorithms for finding a maximum agreement subtree of two trees. Their methods do not generalize to sets of more than two trees. In this paper we prove that the maximum agreement subtree problem is NP-complete for three trees with unbounded degrees. We also develop a new method for finding the maximum agreement subtree of k trees of degree d. This new method enables us to find the maximum agreement subtree in time O(n d + kn 3 ). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Farach and M. </author> <title> Thorup. Sparse dynamic programming for evolutionary tree comparison. </title> <type> personal communication, </type> <year> 1993. </year>
Reference-contexts: This result was improved by Warnow and Steele [8] to finding M HT (T 1 ; T 2 ) in time O (n 2 ) for bounded degree trees and O (n 4 :5) for unbounded degree trees. Farach and Thorup <ref> [1] </ref> claim that they further improved these results to O (n p log n) for bounded degree 1 2 Amir and Keselman trees and O (n 1:5 log n) for unbounded degree trees. <p> Farach and Thorup [1] claim that they further improved these results to O (n p log n) for bounded degree 1 2 Amir and Keselman trees and O (n 1:5 log n) for unbounded degree trees. The algorithms of <ref> [8, 1] </ref> are dynamic programing based and do not seem readily adaptable to the MWT problem. Moreover it is not clear that they can handle more than the restricted case of two trees. <p> Let = (1 e 1 ; . . . ; 1 e k ). For every 2 f0; 1g k we need to consider M IT () = M IT (T (x 1 <ref> [1] </ref> ); T (x 2 [2] ); . . .; T (x k [k] )) and M IT () = M IT (T (x 1 [1] ); T (x 2 [2] ); . . . ; T (x k [k] )). <p> For every 2 f0; 1g k we need to consider M IT () = M IT (T (x 1 <ref> [1] </ref> ); T (x 2 [2] ); . . .; T (x k [k] )) and M IT () = M IT (T (x 1 [1] ); T (x 2 [2] ); . . . ; T (x k [k] )). Lemma 4: If 1 6= 2 then M IT ( 1 ) and M IT ( 2 ) do not have any common labels.
Reference: [2] <author> C. R. Finden and A. D. Gordon. </author> <title> Obtaining common pruned trees. </title> <journal> Journal of Classification, </journal> <volume> 2 </volume> <pages> 255-276, </pages> <year> 1985. </year>
Reference-contexts: This method, introduced by Gordon [4], involves obtaining a maximum agreement subtree. There are several alternate way to define the maximal agreement subtree. One approach was taken by Findey and Gordon <ref> [2] </ref>. Definition: Let S = fs 1 ; . . . ; s n g be a set of labels. An S labeled tree T is a tree with n leaves, each labeled with a distinct element of S, i.e. no two leaves have the same label. <p> We call this the maximum isomorphic agreement subtree problem (the MIT problem) and denote the maximum isomorphic agreement subtree of trees T 1 ; . . .; T k by M IT (T 1 ; . . . ; T k ). Finden and Gordon <ref> [2] </ref> gave a heuristic algorithm for the MHT problem for two trees T 1 ; T 2 . Their result is not guaranteed to be the M HT (T 1 ; T 2 ). <p> Let = (1 e 1 ; . . . ; 1 e k ). For every 2 f0; 1g k we need to consider M IT () = M IT (T (x 1 [1] ); T (x 2 <ref> [2] </ref> ); . . .; T (x k [k] )) and M IT () = M IT (T (x 1 [1] ); T (x 2 [2] ); . . . ; T (x k [k] )). <p> For every 2 f0; 1g k we need to consider M IT () = M IT (T (x 1 [1] ); T (x 2 <ref> [2] </ref> ); . . .; T (x k [k] )) and M IT () = M IT (T (x 1 [1] ); T (x 2 [2] ); . . . ; T (x k [k] )). Lemma 4: If 1 6= 2 then M IT ( 1 ) and M IT ( 2 ) do not have any common labels.
Reference: [3] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <address> New York: </address> <publisher> W. H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: Proof: It is clearly in N P . We will reduce the 3-Dimensional Matching problem (3DM) <ref> [3] </ref> to 3-HUT. In 3DM the input is a set M W fi X fi Y where W; X; Y are disjoint q element sets.
Reference: [4] <author> A. D. Gordon. </author> <title> A measure of the agreement between rankings. </title> <journal> Biometrika, </journal> <volume> 66 </volume> <pages> 7-15, </pages> <year> 1979. </year>
Reference-contexts: This direction was taken by several researchers (e.g. [7]). Another direction, the one that concerns us in this paper, is extracting the maximum set of species about whom we are confident. This method, introduced by Gordon <ref> [4] </ref>, involves obtaining a maximum agreement subtree. There are several alternate way to define the maximal agreement subtree. One approach was taken by Findey and Gordon [2]. Definition: Let S = fs 1 ; . . . ; s n g be a set of labels.
Reference: [5] <author> J. A. Hartigan. </author> <title> Clustering algorithms. </title> <address> New York: </address> <publisher> John Wiley, </publisher> <year> 1975. </year>
Reference-contexts: 1 Introduction One of the methods for classifying hierarchical relations between different objects is by representing them in a tree <ref> [5] </ref>. In particular, trees have been used to represent evolutionary splits among species. Different methods of classification may lead to different trees. It is natural to try to resolve differing evolutionary trees in a manner that will increase our confidence in the results.
Reference: [6] <author> E. Kubicka, G. Kubicki, and F. R. McMorris. </author> <title> An algorithm to find agreement subtrees. </title> <journal> Journal of Classification, </journal> <year> 1992. </year>
Reference-contexts: Their result is not guaranteed to be the M HT (T 1 ; T 2 ). An algorithm of complexity O (n 1=2+* log 2 n ) was presented by Kubicka et. al. <ref> [6] </ref>. This algorithm is also for the MHT problem of two trees. This result was improved by Warnow and Steele [8] to finding M HT (T 1 ; T 2 ) in time O (n 2 ) for bounded degree trees and O (n 4 :5) for unbounded degree trees.
Reference: [7] <author> D. A. Neumann. </author> <title> Faithful consensus methods for n-trees. </title> <journal> Bulletin of Mathematical Biology, </journal> <volume> 63 </volume> <pages> 271-287, </pages> <year> 1983. </year>
Reference-contexts: There are two ways one can go about handling different evolutionary trees for the same species. One may try to construct a consensus tree that is "close" to all given trees. This direction was taken by several researchers (e.g. <ref> [7] </ref>). Another direction, the one that concerns us in this paper, is extracting the maximum set of species about whom we are confident. This method, introduced by Gordon [4], involves obtaining a maximum agreement subtree. There are several alternate way to define the maximal agreement subtree.
Reference: [8] <author> T. Warnow and M. Steel. </author> <title> Kaikoura tree theorems: Computing the maximum agreement subtree. </title> <type> manuscript, </type> <year> 1993. </year>
Reference-contexts: An algorithm of complexity O (n 1=2+* log 2 n ) was presented by Kubicka et. al. [6]. This algorithm is also for the MHT problem of two trees. This result was improved by Warnow and Steele <ref> [8] </ref> to finding M HT (T 1 ; T 2 ) in time O (n 2 ) for bounded degree trees and O (n 4 :5) for unbounded degree trees. <p> Farach and Thorup [1] claim that they further improved these results to O (n p log n) for bounded degree 1 2 Amir and Keselman trees and O (n 1:5 log n) for unbounded degree trees. The algorithms of <ref> [8, 1] </ref> are dynamic programing based and do not seem readily adaptable to the MWT problem. Moreover it is not clear that they can handle more than the restricted case of two trees.
References-found: 8

