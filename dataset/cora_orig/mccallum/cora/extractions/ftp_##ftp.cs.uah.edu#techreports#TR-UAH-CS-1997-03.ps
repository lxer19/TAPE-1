URL: ftp://ftp.cs.uah.edu/techreports/TR-UAH-CS-1997-03.ps
Refering-URL: http://www.cs.uah.edu/~delugach/cs-tech-reports.html
Root-URL: 
Title: 1 Conceptual Integration In Multiple Viewed Requirements Development  
Author: Harry S. Delugach 
Keyword: software requirements engineering, requirements acquisition, requirements elicitation, conceptual graphs, conceptual feedback.  
Address: Huntsville, AL 35899 U.S.A.  
Affiliation: Computer Science Department Univ. of Alabama in Huntsville  
Email: Email: delugach@cs.uah.edu  
Phone: phone: (205) 895-6614 fax: (205) 895-6239  
Web: WWW: http://www.cs.uah.edu/~delugach  
Abstract: This paper addresses software requirements development, and how it can be supported by combining multiple views of participants with the ability for the participants to gain feedback from other views. We include a brief justification for the inclusion of multiple views, a brief summary of multiple-viewed approaches, and introduce conceptual graphs as a representation method for requirements. We use some simple techniques, using a brief example, along with the Wordnet database to show how conceptual feedback supports elicitation and acquisition. We finally outline some future work we will undertake to further explore the techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> ACM SIGSOFT, </editor> <booktitle> Viewpoints 96: International Workshop on Multiple Perspectives in Software Development, published in Joint Proc. of the SIGSOFT96 Workshops, </booktitle> <address> ISBN 0-89791-867-3, </address> <month> Oct. </month> <pages> 14-15, </pages> <address> 1996, San Francisco </address>
Reference-contexts: Researchers no longer have to argue the efficacy of explicitly including and defining multiple views. There is a body of work, as suggested by a recent ACM workshop <ref> [1] </ref> to support further pursuit and development of multiple viewed approaches. This section summarizes the current state of multiple-viewed research and suggests enhancements to the current approaches.
Reference: [2] <editor> Bischofberger, W., and G. Pomberger, eds., </editor> <booktitle> Prototype-Oriented Software Development, </booktitle> <address> Berlin, Germany, </address> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: There is now widespread agreement that software requirements play a crucial role in developing effective and reliable software applications [5]. A variety of techniques to enhance requirements have been developed over the years: object-oriented analysis [3] [32], rapid prototyping <ref> [2] </ref> [33], etc. Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] [23] [27] [28].
Reference: [3] <author> Booch, Grady, </author> <title> Object-Oriented Analysis and Design, </title> <address> Redwood City, California: Benjamin/Cummings, </address> <year> 1994. </year>
Reference-contexts: There is now widespread agreement that software requirements play a crucial role in developing effective and reliable software applications [5]. A variety of techniques to enhance requirements have been developed over the years: object-oriented analysis <ref> [3] </ref> [32], rapid prototyping [2] [33], etc. Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] [23] [27] [28].
Reference: [4] <author> Carbonneill, Boris and Haemmerle, Ollivier, </author> <title> Standardizing and Inferfacing Relational Databases Using Conceptual Graphs, </title> <editor> in Tepfenhart, William M., Dick, Judith P., and Sowa, John F., eds., </editor> <title> Conceptual Structures: Current Practices, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 835, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1994, </year> <pages> pp. 311-330. </pages>
Reference-contexts: S. Peirce. Conceptual graphs have a rich base of previous study [11, 12, 13, 25, 29, 34, 36] and have already been used in representing information systems concepts <ref> [4] </ref> [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31]. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or [35]. 4 4.
Reference: [5] <author> Davis, Alan M., </author> <title> Software Requirements: Object, Functions and States, </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year>
Reference-contexts: There is now widespread agreement that software requirements play a crucial role in developing effective and reliable software applications <ref> [5] </ref>. A variety of techniques to enhance requirements have been developed over the years: object-oriented analysis [3] [32], rapid prototyping [2] [33], etc. <p> Underlying these efforts is the assumption that an effective development process will produce a quality product. Considering a requirements specification as a product in that sense, researchers and practitioners alike have focused on understanding and improving the software requirements development process <ref> [5] </ref> [15]. This work follows in the spirit of others in pursuing a synthesis of these three notions leveraging requirements, incorporating multiple views, and focusing on the process in order to gain a better understanding of systems requirements.
Reference: [6] <author> Delugach, Harry S., </author> <title> A Multiple Viewed Approach to Software Requirements, </title> <type> Ph.D. dissertation, </type> <institution> Dept. of Computer Science, University of Virginia, </institution> <month> May, </month> <year> 1991. </year>
Reference-contexts: Some extensions have already been made to the original conceptual graph formulation in [34] that address issues of non-monotonic logic and second-order logic <ref> [6] </ref> [7]. 3 3. <p> Some earlier ideas along these lines are found in <ref> [6] </ref> and [10]. An important aim of this research in dealing with shared views is that the collective requirements will be representable as a whole. That is, we intend to capture all requirements in a repository such that they are all represented in a common notation. <p> S. Peirce. Conceptual graphs have a rich base of previous study [11, 12, 13, 25, 29, 34, 36] and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development <ref> [6] </ref> [7] [19] [31]. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or [35]. 4 4. Supporting A Multiple-Viewed Analysis Process van Lamsweerde has identified three important problems in resolving differences between views [21].
Reference: [7] <author> Delugach, Harry S., </author> <title> Specifying Multiple-Viewed Software Requirements With Conceptual Graphs, </title> <journal> Jour. Systems and Software, </journal> <volume> vol. 19, </volume> <pages> pp. 207-224, </pages> <year> 1992. </year>
Reference-contexts: Some extensions have already been made to the original conceptual graph formulation in [34] that address issues of non-monotonic logic and second-order logic [6] <ref> [7] </ref>. 3 3. Are Multiple Views Really Separate Views? A major problem with previous approaches to multiple viewed software requirements (including my own [7] [8]) is that they often assume that separate multiple views have somehow been acquired and are then to be analyzed for their consistency, conflicts, etc. (e.g., [16]) <p> Some extensions have already been made to the original conceptual graph formulation in [34] that address issues of non-monotonic logic and second-order logic [6] <ref> [7] </ref>. 3 3. Are Multiple Views Really Separate Views? A major problem with previous approaches to multiple viewed software requirements (including my own [7] [8]) is that they often assume that separate multiple views have somehow been acquired and are then to be analyzed for their consistency, conflicts, etc. (e.g., [16]) To be sure, there are probably a few environments in which such a situation holds; e.g., a company that has several divisions involved <p> S. Peirce. Conceptual graphs have a rich base of previous study [11, 12, 13, 25, 29, 34, 36] and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] <ref> [7] </ref> [19] [31]. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or [35]. 4 4. Supporting A Multiple-Viewed Analysis Process van Lamsweerde has identified three important problems in resolving differences between views [21]. There are, however, several other issues that can arise. <p> This simple example illustrates the difference between these two processes. Diagrams from different paradigms can be represented under the single formalism of conceptual graphs. For example, Figure 1 is expressed as the conceptual graph in Figure 3 (see <ref> [7] </ref> for details). Note that Wordnets database is a descriptive one, not a proscriptive one, so that included words and meanings are obtained from large samples of writing in the English language.
Reference: [8] <author> Delugach, H.S. </author> <title> Analyzing Multiple Views Of Software Requirements, in Conceptual Structures: Current Research and Practice, </title> <editor> Eklund, P., Nagle, T., Nagle, J. & Gerholz, L. eds., </editor> <year> 1992, </year> <pages> 391-410, </pages> <publisher> Ellis Horwood. </publisher>
Reference-contexts: Some extensions have already been made to the original conceptual graph formulation in [34] that address issues of non-monotonic logic and second-order logic [6] [7]. 3 3. Are Multiple Views Really Separate Views? A major problem with previous approaches to multiple viewed software requirements (including my own [7] <ref> [8] </ref>) is that they often assume that separate multiple views have somehow been acquired and are then to be analyzed for their consistency, conflicts, etc. (e.g., [16]) To be sure, there are probably a few environments in which such a situation holds; e.g., a company that has several divisions involved in
Reference: [9] <author> Delugach, Harry S. and Hinke, Thomas H., Microanalysis: </author> <title> Acquiring Database Semantics In Conceptual Graphs, in Conceptual Structures: Knowledge Representation as Interlingua, </title> <editor> P.W. Eklund, G. Ellis and G. Mann, eds., </editor> <booktitle> Lecture Notes on Artificial Intelligence LNAI 1115, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996, </year> <booktitle> presented at ICCS 96, 4th Intl. Conf. on Conceptual Structures, </booktitle> <institution> University of New South Wales, </institution> <address> Sydney, Australia, </address> <month> Aug. </month> <pages> 19-23, </pages> <year> 1996. </year>
Reference-contexts: S. Peirce. Conceptual graphs have a rich base of previous study [11, 12, 13, 25, 29, 34, 36] and have already been used in representing information systems concepts [4] <ref> [9] </ref> . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31]. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or [35]. 4 4.
Reference: [10] <author> Delugach, Harry S., </author> <title> An Approach To Conceptual Feedback In Multiple Viewed Software Requirements Modeling, presented at Viewpoints 96: </title> <booktitle> International Workshop on Multiple Perspectives in Software Development, Joint Proc. of the SIGSOFT96 Workshops, ISBN 0-89791-867-3, </booktitle> <pages> pp. 242-246, </pages> <month> Oct. </month> <pages> 14-15, </pages> <address> 1996, San Francisco. </address>
Reference-contexts: Some earlier ideas along these lines are found in [6] and <ref> [10] </ref>. An important aim of this research in dealing with shared views is that the collective requirements will be representable as a whole. That is, we intend to capture all requirements in a repository such that they are all represented in a common notation. <p> We consider these to be important first steps in building a complete specification; however, as a product in themselves, they would constitute only a section of the complete document. Paraphrasing a conceptual graph is generally straightforward; see <ref> [10] </ref> for examples of how such graphs would be portrayed in English. Given that the terms are obtained from an inheritance hierarchy in the first place, the specification process can include the presentation of a derived ontology, using only the classes of the terms that were used.
Reference: [11] <author> P.W. Eklund, G. Ellis and G. Mann, eds., </author> <title> Conceptual Structures: Knowledge Representation as Interlingua, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 1115, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [12] <author> Eklund, P., Nagle, T., Nagle, J. & Gerholz, L. [Eds.], </author> <title> Conceptual Structures: Current Research and Practice, </title> <publisher> Ellis Horwood, </publisher> <year> 1992. </year>
Reference-contexts: This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [13] <author> Ellis, Gerard, Levinson, Robert, Rich, William, and Sowa, John F., eds., </author> <title> Conceptual Structures: Applications, Implementations and Theory, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 954, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [14] <author> Finkelstein, A., Kramer, J., Nuseibeh, B., Finkelstein, L. & Goedicke, M. </author> <title> Viewpoints: a framework for integrating multiple perspectives in system development, </title> <journal> Intl. Jour of Software Engineering and Knowledge Engineering, </journal> <volume> 2 (1), </volume> <year> 1992, </year> <pages> 31-57. </pages>
Reference-contexts: Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements <ref> [14] </ref> [22] [23] [27] [28]. Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered [20]. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) [17] [18]. <p> Its biggest drawbacks are (a) it depends upon having a skilled (human) facilitator, thus allowing for possible biases to appear and (b) there is no formal way of modeling negotiation or overlap. Viewpoints <ref> [14] </ref> [28] describes a partitioning of each viewpoint to provide a small number of categories for viewpoint content. These categories have been determined manually to be useful in examining multiple viewpoints for consistency and completeness via a rule-based approach.
Reference: [15] <author> Gause, Donald C. and Weinberg, </author> <title> Gerald M.,Exploring Requirements: Quality Before Design, </title> <year> 1989. </year>
Reference-contexts: Underlying these efforts is the assumption that an effective development process will produce a quality product. Considering a requirements specification as a product in that sense, researchers and practitioners alike have focused on understanding and improving the software requirements development process [5] <ref> [15] </ref>. This work follows in the spirit of others in pursuing a synthesis of these three notions leveraging requirements, incorporating multiple views, and focusing on the process in order to gain a better understanding of systems requirements.
Reference: [16] <author> Heitmeyer, Constance L., Jeffords, Ralph D., and Labaw, Bruce G., </author> <title> Automated Consistency Checking of Requirements Specifications, </title> <journal> ACM Trans. Softw. Engr. Methodology, </journal> <volume> 5(3), </volume> <month> July, </month> <year> 1996, </year> <pages> pp. 231-261. </pages>
Reference-contexts: Are Multiple Views Really Separate Views? A major problem with previous approaches to multiple viewed software requirements (including my own [7] [8]) is that they often assume that separate multiple views have somehow been acquired and are then to be analyzed for their consistency, conflicts, etc. (e.g., <ref> [16] </ref>) To be sure, there are probably a few environments in which such a situation holds; e.g., a company that has several divisions involved in development, or more likely, a project being supported by several different development organizations, each with their own methodology, corporate culture, personnel experience, and so on.
Reference: [17] <author> Humphrey, Watts S., </author> <title> Characterizing the Software Process, </title> <journal> IEEE Software, </journal> <volume> Vol. 5, No. 2, </volume> <month> March, </month> <year> 1988, </year> <pages> pp. 73-79. </pages>
Reference-contexts: Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered [20]. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) <ref> [17] </ref> [18]. Underlying these efforts is the assumption that an effective development process will produce a quality product. Considering a requirements specification as a product in that sense, researchers and practitioners alike have focused on understanding and improving the software requirements development process [5] [15].
Reference: [18] <author> Humphrey, Watts S.,, </author> <title> Managing the Software Process, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered [20]. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) [17] <ref> [18] </ref>. Underlying these efforts is the assumption that an effective development process will produce a quality product. Considering a requirements specification as a product in that sense, researchers and practitioners alike have focused on understanding and improving the software requirements development process [5] [15].
Reference: [19] <author> Kamath, R.Y., and Cyre, W. R., </author> <title> Automatic Integration of Digital System Requirements using Schemata, </title> <editor> in Ellis, Gerard, Levinson, Robert, Rich, William, and Sowa, John F., eds., </editor> <title> Conceptual Structures: Applications, Implementations and Theory, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 954, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995, </year> <pages> pp. 44-58. </pages>
Reference-contexts: S. Peirce. Conceptual graphs have a rich base of previous study [11, 12, 13, 25, 29, 34, 36] and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] <ref> [19] </ref> [31]. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or [35]. 4 4. Supporting A Multiple-Viewed Analysis Process van Lamsweerde has identified three important problems in resolving differences between views [21]. There are, however, several other issues that can arise.
Reference: [20] <author> Keil, Mark and Carmel, Erran, </author> <title> Customer-Developer Links in Software Development, </title> <journal> Comm. ACM, </journal> <volume> 38(5), </volume> <month> May, </month> <year> 1995, </year> <pages> pp. </pages> <month> 33-44. </month> <title> [21] van Lamsweerde, Axel, Divergent Views in Goal-Driven Requirements Engineering, presented at Viewpoints 96: </title> <booktitle> International Workshop on Multiple Perspectives in Software Development, Joint Proc. of the SIGSOFT96 Workshops, ISBN 0-89791-867-3, </booktitle> <pages> pp. 252-256, </pages> <month> Oct. </month> <pages> 14-15, </pages> <address> 1996, San Francisco. </address> <publisher> [22] van Lamsweerde, </publisher> <editor> Axel, Darimont, R., and Massonet, </editor> <title> P, Goal-Directed Elaboration of Requirements for a Meeting Scheduler: Problems and Lessons Learned, </title> <booktitle> Proc. RE95, 2nd Intl. Symposium on Requirements Engineering, </booktitle> <address> York, </address> <publisher> IEEE, </publisher> <year> 1995. </year> <month> 14 </month>
Reference-contexts: Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered <ref> [20] </ref>. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) [17] [18]. Underlying these efforts is the assumption that an effective development process will produce a quality product.
Reference: [23] <author> Leite, J.C.S.P. and Freeman, </author> <title> P.A. Requirements Validation through Viewpoint Resolution, </title> <journal> IEEE Trans. on Software Eng., 1991, </journal> <volume> 17 (12), </volume> <pages> 1253-69. </pages>
Reference-contexts: Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] <ref> [23] </ref> [27] [28]. Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered [20]. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) [17] [18]. <p> This section summarizes the current state of multiple-viewed research and suggests enhancements to the current approaches. In this work, we assume that a view originates with an individual person, typically as a result of their job responsibility in the context of a project. Our terminology follows from Leites <ref> [23] </ref>. We call a person involved in requirements development a participant in the development. Their particular job responsibility constitutes a viewpoint, e.g., the implementers viewpoint or the user manual authors viewpoint. <p> Viewpoints [14] [28] describes a partitioning of each viewpoint to provide a small number of categories for viewpoint content. These categories have been determined manually to be useful in examining multiple viewpoints for consistency and completeness via a rule-based approach. The work of Leite <ref> [23] </ref> addresses the question of eliciting different opinions about what a system's requirements are, and supports the negotiation process whereby the differing opinions may be reconciled. The terminology and framework of Leite's work are related to the current proposal.
Reference: [24] <author> Miller, </author> <title> G.A., WordNet: A Lexical database for English Comm. </title> <publisher> ACM, </publisher> <month> November </month> <year> 1995, </year> <pages> pp. 39-41. </pages>
Reference-contexts: The two features are concept definitions and an inheritance hierarchy of concept types. Rather than construct a toy conceptual type hierarchy for the purposes of this paper, I have used Wordnet, a database of word meanings and their position in a type hierarchy <ref> [24] </ref>. In Wordnet, a word is classed as one or more parts of speech (i.e., noun, verb, or adjective) and within each part of speech, a words meaning can be further divided as to its sense, thus effectively providing homonyms.
Reference: [25] <editor> Mineau, Guy W., Moulin, Bernard, and Sowa, John F., eds., </editor> <title> Conceptual Graphs for Knowledge Representation, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 699, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [26] <author> XXXX Tim Nagle and Jan Nagle and Laurie Gerholz and Peter Eklund, eds, </author> <title> Conceptual Structures: Current Research and Practice, </title> <publisher> Ellis Horwood, </publisher> <year> 1992. </year>
Reference: [27] <author> Hans Nissen, Manfred Jeusfeld, Matthias Jarke, Georg Zemanek and Harald Huber, </author> <title> Managing Multiple Requirements Perspectives with Metamodels, </title> <journal> IEEE Software, </journal> <volume> 12(6), </volume> <pages> pp. 37-48, </pages> <year> 1996. </year>
Reference-contexts: Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] [23] <ref> [27] </ref> [28]. Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered [20]. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) [17] [18]. <p> Many recent researchers have acknowledged the presence of multiple views, and a few have even explicitly modeled them as distinct views. Some representative work is as follows. The work of Nissen, et al <ref> [27] </ref> is an example of a practical technique that is used in commercial settings to form a framework for discussion and negotiation among participants.
Reference: [28] <author> Nuseibeh, B., Kramer, J. and Finkelstein, A. </author> <title> A Framework for Expressing the Relationships between Multiple Views in Requirements Specifications, </title> <journal> IEEE Trans. on Software Eng., </journal> <volume> 20 (10), </volume> <pages> 760-73, </pages> <year> 1994. </year>
Reference-contexts: Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] [23] [27] <ref> [28] </ref>. Communication between the stakeholders (particularly including customers) also leads to more successful software being delivered [20]. A third current trend is to focus on the process of software development, as well as its products. A prime example is the CMM (Capability Maturity Model) [17] [18]. <p> Its biggest drawbacks are (a) it depends upon having a skilled (human) facilitator, thus allowing for possible biases to appear and (b) there is no formal way of modeling negotiation or overlap. Viewpoints [14] <ref> [28] </ref> describes a partitioning of each viewpoint to provide a small number of categories for viewpoint content. These categories have been determined manually to be useful in examining multiple viewpoints for consistency and completeness via a rule-based approach. <p> That is, we intend to capture all requirements in a repository such that they are all represented in a common notation. We have chosen the representation of conceptual graphs [34]. Not all researchers agree that there should be a single repository of requirements knowledge. For example, Nuseibeh and Finkelstein <ref> [28] </ref> have developed an approach whereby features of each relevant viewpoint are mapped directly to features in other viewpoints. This has some advantages, e.g., not all features in every viewpoint are relevant to features in every single other viewpoint, and it also allows tailoring of specific constraints within each viewpoint.
Reference: [29] <author> Pfeiffer, Heather D., and Nagle, Timothy E., eds., </author> <title> Conceptual Structures: Theory and Implementation, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 754, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [30] <author> Polovina, Simon and Heaton, John, </author> <title> An Introduction to Conceptual Graphs, </title> <journal> AI Expert, </journal> <pages> pp. 36-43, </pages> <year> 1992. </year>
Reference-contexts: Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31]. We will not go into details of conceptual graphs here, for a concise introduction, see <ref> [30] </ref> or [35]. 4 4. Supporting A Multiple-Viewed Analysis Process van Lamsweerde has identified three important problems in resolving differences between views [21]. There are, however, several other issues that can arise. Consider that in developing specifications, stakeholders use names for things.
Reference: [31] <author> Puder, A., Markwitz, S., and Gudermann, F., </author> <title> Service Trading Using Conceptual Structures, </title> <editor> in Ellis, Gerard, Levinson, Robert, Rich, William, and Sowa, John F., eds., </editor> <title> Conceptual Structures: Applications, Implementations and Theory, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 954, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995, </year> <pages> pp. 59-73. </pages>
Reference-contexts: S. Peirce. Conceptual graphs have a rich base of previous study [11, 12, 13, 25, 29, 34, 36] and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] <ref> [31] </ref>. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or [35]. 4 4. Supporting A Multiple-Viewed Analysis Process van Lamsweerde has identified three important problems in resolving differences between views [21]. There are, however, several other issues that can arise.
Reference: [32] <author> Rumbaugh, James, et al., </author> <title> Object-Oriented Modeling and Design, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1991. </year>
Reference-contexts: There is now widespread agreement that software requirements play a crucial role in developing effective and reliable software applications [5]. A variety of techniques to enhance requirements have been developed over the years: object-oriented analysis [3] <ref> [32] </ref>, rapid prototyping [2] [33], etc. Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] [23] [27] [28].
Reference: [33] <author> Smith, M., </author> <title> Software Prototyping, </title> <address> New York, New York: McGraw Hill, </address> <year> 1991. </year>
Reference-contexts: There is now widespread agreement that software requirements play a crucial role in developing effective and reliable software applications [5]. A variety of techniques to enhance requirements have been developed over the years: object-oriented analysis [3] [32], rapid prototyping [2] <ref> [33] </ref>, etc. Another current notion in computer system development is the acknowledgment that multiple participants (stakeholders) are necessarily involved in systems development, and that multiple views of the stakeholders must be accommodated in some fashion into the requirements [14] [22] [23] [27] [28].
Reference: [34] <editor> Sowa, John F., </editor> <booktitle> Information Processing in Mind and Machine, </booktitle> <publisher> Addison-Wesley Publ., </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: This paper proposes an approach that can be supported by conceptual graphs, based on semantic networks and predicate logic, and does not require any other representations, thereby offering the opportunity for a single unified internal representation. Some extensions have already been made to the original conceptual graph formulation in <ref> [34] </ref> that address issues of non-monotonic logic and second-order logic [6] [7]. 3 3. <p> That is, we intend to capture all requirements in a repository such that they are all represented in a common notation. We have chosen the representation of conceptual graphs <ref> [34] </ref>. Not all researchers agree that there should be a single repository of requirements knowledge. For example, Nuseibeh and Finkelstein [28] have developed an approach whereby features of each relevant viewpoint are mapped directly to features in other viewpoints. <p> This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [35] <author> Sowa, J. F. </author> <title> Conceptual Graphs Summary, in Conceptual Structures: Current Research and Practice, </title> <editor> Tim Nagle, Jan Nagle, Laurie Gerholz and Peter Eklund, eds., </editor> <publisher> Ellis Horwood, </publisher> <year> 1992, </year> <pages> pp. 3-52. </pages>
Reference-contexts: Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31]. We will not go into details of conceptual graphs here, for a concise introduction, see [30] or <ref> [35] </ref>. 4 4. Supporting A Multiple-Viewed Analysis Process van Lamsweerde has identified three important problems in resolving differences between views [21]. There are, however, several other issues that can arise. Consider that in developing specifications, stakeholders use names for things.
Reference: [36] <author> Tepfenhart, William M., Dick, Judith P., and Sowa, John F., eds., </author> <title> Conceptual Structures: Current Practices, </title> <booktitle> Lecture Notes on Artificial Intelligence LNAI 835, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: This knowledge-based approach is centered around the principles of logic and semantic networks. For our common representation, we have chosen conceptual graphs, a semantic network representation based on first-order logic as originally proposed by the philosopher C. S. Peirce. Conceptual graphs have a rich base of previous study <ref> [11, 12, 13, 25, 29, 34, 36] </ref> and have already been used in representing information systems concepts [4] [9] . Indeed there is some previous work in applying conceptual graphs to computer system development [6] [7] [19] [31].
Reference: [37] <author> Wolf, Randy P. and Delugach, </author> <title> Harry S.,Knowledge Acquisition via the Integration of Repertory Grids and Conceptual Graphs, </title> <booktitle> Supplemental Proceedings, ICCS 96, 4th Intl. Conf. on Conceptual Structures, </booktitle> <editor> P.W. Eklund, G. Ellis and G. Mann, eds., </editor> <address> University of New South Wales, Sydney, Australia, </address> <month> Aug. </month> <pages> 19-23, </pages> <year> 1996. </year>
Reference-contexts: One promising technique is that of tracked repertory grids <ref> [37] </ref> that is a self-organizing, relatively un-biased, free-form acquisition technique.
References-found: 35

