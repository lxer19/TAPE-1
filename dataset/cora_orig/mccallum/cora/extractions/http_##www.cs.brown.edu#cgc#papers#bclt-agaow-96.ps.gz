URL: http://www.cs.brown.edu/cgc/papers/bclt-agaow-96.ps.gz
Refering-URL: http://www.cs.brown.edu/people/rt/papers/recent-papers/recent-papers.html
Root-URL: http://www.cs.brown.edu
Email: fjib,gl,rtg@cs.brown.edu  isabel@cs.tufts.edu  
Title: Animating Geometric Algorithms Over the Web From the user's viewpoint, interacting with GS is as
Author: James E. Baker Isabel F. Cruz Giuseppe Liotta Roberto Tamassia 
Keyword: quite high.  
Address: 115 Waterman Street, Providence, RI 02912-1910, USA.  161 College Avenue, Medford, MA 02155, USA.  
Affiliation: Department of Computer Science, Brown University,  Department of Electrical Engineering and Computer Science Tufts University,  
Note: Research supported in part by the National Science Foundation under grant CCR-9423847, by the U.S. Army Research Office under grants DAAH04-93-0134 and DAAH04-96-1-0013, and by the N.A.T.O.-C.N.R. Advanced Fellowships Programme.  
Abstract: Extensive work has been done on the animation of geometric algorithms, as confirmed by the videos and demonstrations presented at the ACM Computational Geometry Symposium. Mocha is a new distributed model for algorithm animation over the World Wide Web with a client-server architecture that optimally partitions the software components of a typical algorithm animation system, and leverages the power of the Java language, an emerging standard for distributing interactive platform-independent applications across the Web. Algorithm Animation on the Internet Following the event-driven approach advocated by Brown and the conceptual framework pioneered by Stasko we view algorithm animation as an event driven system of communicating processes: the algorithm augmented with annotations of interesting events, called algorithm operations, and the animation component that provides the multimedia visualization of the the algorithm operations. We further subdivide the animation component into the GUI, which handles the interaction with the user, and the animator, which maps algorithm operations and user requests into dynamic multimedia scenes. The X Window system provides a basic client-server mechanism for algorithm animation over the Internet, which we shall call X model. Namely, an animation program running on a remote machine can interact with the X server on the local user's machine by opening there a window, sending graphic output and receiving the user's keyboard and mouse actions. While this mechanism is simple to implement, there are significant security problems associated with remote X sessions, and the communication load placed on the Internet is The arrival of the HotJava browser and of the Java language opens the possibility of embedding interactive applications in HTML documents, which are executed on the user machine after their code has been transferred. This a very attractive possibility provided that the user machine is powerful enough to run a sophisticated animation algorithm and that the provider of the animation does not mind sharing the code with the rest of the world. To overcome the problems inherent in the X and the Java model, we have proposed a new model, called Mocha, for algorithm animation over the World Wide Web [1]. Mocha is a distributed model with a client-server architecture that optimally partitions the software components of a typical algorithm animation system, and leverages the power of the Java language. In the Mocha model, only the interface code is exported to the user machine, while the algorithm is executed on a server that runs on the provider's machine. See Figure 1. Mocha provides high levels of security, protects the algorithm code, places a light communication load on the Internet, and allows users with limited computing resources to access animations of computationally expensive algorithms. The user interface combines fast responsiveness and user friendliness with the powerful authoring capabilities of hypertext narratives. We employ multithreading in the implementation of the GUI and animator to provide more responsive feedback to the user. Also, we use an object-oriented container/component software architecture that guarantees expandability. Finally, we have mediators that isolate the commonality between the interaction of the clients and servers and provide a high degree of interoperability. Animating Geometric Algorithms with Mocha We have implemented a prototype of an animation system for geometric algorithms based on the Mocha model that can be accessed by any user with a WWW browser supporting Java (currently Netscape 2.0 and HotJava) at URL http://www.cs.brown.edu/people/jib/ Mocha.html. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> J. E. Baker, I. F. Cruz, G. Liotta, and R. Tamassia. </author> <title> A new model for algorithm animation over the WWW. ACM Computing Surveys, </title> <booktitle> 27(4) </booktitle> <pages> 568-572, </pages> <year> 1995. </year> <title> (a) (b) Proximity graph animation. </title>
Reference-contexts: To overcome the problems inherent in the X and the Java model, we have proposed a new model, called Mocha, for algorithm animation over the World Wide Web <ref> [1] </ref>. Mocha is a distributed model with a client-server architecture that optimally partitions the software components of a typical algorithm animation system, and leverages the power of the Java language.
References-found: 1

