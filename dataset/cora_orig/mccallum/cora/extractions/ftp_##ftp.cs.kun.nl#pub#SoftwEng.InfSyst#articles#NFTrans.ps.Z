URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/NFTrans.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Title: Reducing the Search Space for Conceptual Schema Transformation Reducing the Search Space for Conceptual Schema
Author: P. van Bommel Th.P. van der Weide P. van Bommel and Th.P. van der Weide. 
Keyword: Conceptual schema, internal schema, schema transforma tion, relational data model, NF 2 data model.  
Note: Published as:  
Date: July 7, 1993  1992.  
Pubnum: 4(8):269-292,  
Abstract: In this paper we focus on the transformation of a conceptual schema into an internal schema. For a given conceptual schema, quite a number of internal schemata can be derived. This number can be reduced by imposing restrictions on internal schemata. We present a transformation algorithm that can generate internal schemata of several types (including the relational model and the NF 2 model). Guidance parameters are used to impose further restrictions. We harmonise the different types of schemata by extending the conceptual language, such that both the conceptual and the internal models can be represented within the same language. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul, </author> <title> P.C. </title> <editor> Fischer, and H.J. (Eds.) Schek. </editor> <title> Nested Relations and Complex Objects in Databases. </title> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Various implementation oriented modelling techniques exist. A classical distinction can be made between relational, network and hierarchical models. Recently a lot of research has been done on nested relational models, also called non first normal form or NF 2 models (see <ref> [1] </ref>, [6] and [19]). These models are interesting for special database applications, involving e.g. textual data, computer aided design or image processing. Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model.
Reference: [2] <author> A.D. Atri and D. Sacca. </author> <title> Equivalence and mapping of database schemes. </title> <booktitle> In Proceedings of the Tenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 187-195, </pages> <year> 1984. </year>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], [21], [22] and [24]). Other approaches can be found in <ref> [2] </ref>, [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [3] <author> P. van Bommel, A.H.M. ter Hofstede, and Th.P. van der Weide. </author> <title> Semantics and verification of object-role models. </title> <journal> Information Systems, </journal> <volume> 16(5), </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: Our approach however, is applicable in any model with an underlying object-role structure. 2 The Predicator Model In the Predicator Model a schema = hI; Ci consists of an information structure I and a set of constraints C (see <ref> [3] </ref>, [8] and [27]). The semantics of a schema is expressed in terms of populations (instantiations) of the information structure. Such a population should fit in the structure I and satisfy the requirements specified in C. <p> With respect to the separation of the information structure I and the constraints C, note that constraints can also be seen as structural rules. However, constraints are usually expressed in a language that is derived from the components in I (see for example <ref> [3] </ref>). We will first introduce the information structure, and then define the concept of population. <p> It is also possible to define uniqueness constraints over more than one fact type, or total role constraints over more than one predicator (with the same base). For a formal definition of syntax and semantics of these (and other) constraints, we refer to <ref> [3] </ref> and [27]. Example 2.4 Consider the information structure in figure 1. We see a uniqueness constraint unique (fpg). The population of fact type f given in figure 2 satisfies this constraint, since every instance of object type A occurs at most once in a tuple of f. <p> In this situation the constraint unique (r) means that each instance of f can be associated at most once with an instance of C. ~ C ? g r - ~ B r For more examples of objectification and the meaning of constraints over objec tification, see <ref> [3] </ref>, [15] and [27]. 2.3 Defoliation In section 2.1 two kinds of atomic object types were distinguished: entity types and label types. The difference is that labels can, in contrast with entities, be 6 reproduced on a communication medium. <p> A house can be identified by the unique combination of its street (f 5 ) and its number (f 6 ). These naming references fulfil the requirements for structural identification (see <ref> [3] </ref>). In internal models the distinction between label types and entity types is not made. Therefore, an information structure must be defoliated before it is transformed into an internal structure. The term "defoliation" is based on the Object Relation Network view of an information structure (see [3]). <p> for structural identification (see <ref> [3] </ref>). In internal models the distinction between label types and entity types is not made. Therefore, an information structure must be defoliated before it is transformed into an internal structure. The term "defoliation" is based on the Object Relation Network view of an information structure (see [3]). The effect of defoliation is the restriction of the 7 information structure to the fact types that are not bridge types: F d (I) = f 2 F j 8 p2f [Base (p) 62 L] Example 2.7 Consider the schema in figure 4 again.
Reference: [4] <author> P. van Bommel and Th.P. van der Weide. </author> <title> Towards database optimization by evolution. </title> <booktitle> In Proceedings Computing Science in The Netherlands (CSN) 1991, </booktitle> <pages> pages 109-123, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: For example, if the application is to be stored on CD-ROM, the parameter NoRedundancy can be switched off. In a relational target environment, the parameter NoNesting obviously should be set to true. For more details, see <ref> [4] </ref>. 5.1 Size preference without redundancy Suppose we aim at a tree structure where the maximal number of fact types per tree is 2 and redundancy can not occur.
Reference: [5] <author> P.P. Chen. </author> <title> The entity-relationship model: toward a unified view of data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <year> 1976. </year>
Reference-contexts: Several conceptual modelling techniques have an underlying object-role structure (e.g. ER <ref> [5] </ref> and NIAM [11], [15]). In these techniques a model consists of fact types, defined in terms of object types and roles. Depending on the power of the technique, fact types may be of any degree and can be treated as object types (objectified fact types).
Reference: [6] <author> L.S. Colby. </author> <title> A recursive algebra for nested relations. </title> <journal> Information Systems, </journal> <volume> 15(5) </volume> <pages> 567-582, </pages> <year> 1990. </year>
Reference-contexts: Various implementation oriented modelling techniques exist. A classical distinction can be made between relational, network and hierarchical models. Recently a lot of research has been done on nested relational models, also called non first normal form or NF 2 models (see [1], <ref> [6] </ref> and [19]). These models are interesting for special database applications, involving e.g. textual data, computer aided design or image processing. Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. <p> They form the basis of the generation algorithm described in section 4. 3.1 The underlying data structure An NF 2 model consists of relation types, where a relation type consists of atomic attribute types and other relation types, called relation-valued attribute types (see <ref> [6] </ref> and [19]). NF 2 relation types may be in one of the classical relational normal forms (see e.g. [26]), but they do not necessarily have to. In this way the relational theory can be exploited in a wider area. <p> NF 2 relation types may be in one of the classical relational normal forms (see e.g. [26]), but they do not necessarily have to. In this way the relational theory can be exploited in a wider area. Recent research involves the definition of a recursive relational algebra (see <ref> [6] </ref>, [18] and [19]) and the introduction of nested normal forms (see e.g. [7] and [16]). Furthermore, the relationship with other modelling approaches is investigated. 8 Several representations have been introduced for NF 2 relation types, for in-stance a linear form, a tree representation and a tabular representation (see [19]).
Reference: [7] <author> H.M. Dreizen and S.K. Chang. </author> <title> Imprecise schema: a rationale for relations with embedded subrelations. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 14(4) </volume> <pages> 447-479, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: In this way the relational theory can be exploited in a wider area. Recent research involves the definition of a recursive relational algebra (see [6], [18] and [19]) and the introduction of nested normal forms (see e.g. <ref> [7] </ref> and [16]). Furthermore, the relationship with other modelling approaches is investigated. 8 Several representations have been introduced for NF 2 relation types, for in-stance a linear form, a tree representation and a tabular representation (see [19]).
Reference: [8] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Formalisation of techniques: Chopping down the methodology jungle. </title> <type> Technical report, </type> <institution> Department of Information Systems, University of Nijmegen, </institution> <address> The Netherlands, </address> <month> dec </month> <year> 1990. </year> <note> To be published. </note>
Reference-contexts: Our approach however, is applicable in any model with an underlying object-role structure. 2 The Predicator Model In the Predicator Model a schema = hI; Ci consists of an information structure I and a set of constraints C (see [3], <ref> [8] </ref> and [27]). The semantics of a schema is expressed in terms of populations (instantiations) of the information structure. Such a population should fit in the structure I and satisfy the requirements specified in C.
Reference: [9] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Expressiveness in Data Modelling. </title> <type> Technical Report 91/07, </type> <institution> SERC, Software Engineering Research Centrum, </institution> <address> Utrecht, The Netherlands, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: Another problem that can be addressed is finding suitable candidate keys for the generated internal representation. In a complicated schema, that might be a problem. Finally, future research will consist of: (1) the incorporation of object-orientation and complex objects in terms of object-role models (see also [23] and <ref> [9] </ref>) and (2) the incorporation of additional background in database storage structures. Acknowledgement We would like to thank the anonymous referees for their contributive remarks.
Reference: [10] <author> Isamu Kobayashi. </author> <title> Classification and transformations of binary relationship relation schemata. </title> <journal> Information Systems, </journal> <volume> 11(2) </volume> <pages> 109-122, </pages> <year> 1986. </year>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], [21], [22] and [24]). Other approaches can be found in [2], <ref> [10] </ref>, [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [11] <author> C.M.R. Leung and G.M. Nijssen. </author> <title> Relational database design using the NIAM conceptual schema. </title> <journal> Information Systems, </journal> <volume> 13(2) </volume> <pages> 219-227, </pages> <year> 1988. </year>
Reference-contexts: Several conceptual modelling techniques have an underlying object-role structure (e.g. ER [5] and NIAM <ref> [11] </ref>, [15]). In these techniques a model consists of fact types, defined in terms of object types and roles. Depending on the power of the technique, fact types may be of any degree and can be treated as object types (objectified fact types). <p> Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance <ref> [11] </ref>, [13], [17], [21], [22] and [24]). Other approaches can be found in [2], [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [12] <author> Luqi. </author> <title> Automated prototyping and data translation. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 5 </volume> <pages> 167-177, </pages> <year> 1990. </year>
Reference-contexts: Our aim is to describe a mechanism for the reduction of the search space, setting a context for more sophisticated search algorithms. Furthermore, this reduction provides a base for structural translations in automated proto-typing (see e.g. <ref> [12] </ref>). As design tools are becoming more important, the need for automatic translation becomes more pressing. Various implementation oriented modelling techniques exist. A classical distinction can be made between relational, network and hierarchical models.
Reference: [13] <author> P Lyngbaek and V. Vianu. </author> <title> Mapping a semantic database model to the relational model. </title> <booktitle> In ACM SIGMOD, </booktitle> <pages> pages 132-142, </pages> <year> 1987. </year>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], <ref> [13] </ref>, [17], [21], [22] and [24]). Other approaches can be found in [2], [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [14] <author> E. Mendelson. </author> <title> Introduction to Mathematical Logic. </title> <publisher> Wadsworth and Brooks, </publisher> <year> 1987. </year>
Reference-contexts: Before these constraints are introduced, we first define the concept of population. 4 ~ A r f ~ B r g ~ C r 2.2 Population For the population of an information structure we assume some universal domain (see <ref> [14] </ref>).
Reference: [15] <author> G.M. Nijssen and T.A. Halpin. </author> <title> Conceptual schema and Relational Database Design: A fact oriented approach. </title> <publisher> Prentice Hall of Australia Pty Ltd, </publisher> <year> 1989. </year>
Reference-contexts: Several conceptual modelling techniques have an underlying object-role structure (e.g. ER [5] and NIAM [11], <ref> [15] </ref>). In these techniques a model consists of fact types, defined in terms of object types and roles. Depending on the power of the technique, fact types may be of any degree and can be treated as object types (objectified fact types). <p> In this situation the constraint unique (r) means that each instance of f can be associated at most once with an instance of C. ~ C ? g r - ~ B r For more examples of objectification and the meaning of constraints over objec tification, see [3], <ref> [15] </ref> and [27]. 2.3 Defoliation In section 2.1 two kinds of atomic object types were distinguished: entity types and label types. The difference is that labels can, in contrast with entities, be 6 reproduced on a communication medium.
Reference: [16] <author> Z.M. Ozsoyoglu and L.Y. Yuan. </author> <title> A new normal form for nested relations. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(1) </volume> <pages> 111-136, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: In this way the relational theory can be exploited in a wider area. Recent research involves the definition of a recursive relational algebra (see [6], [18] and [19]) and the introduction of nested normal forms (see e.g. [7] and <ref> [16] </ref>). Furthermore, the relationship with other modelling approaches is investigated. 8 Several representations have been introduced for NF 2 relation types, for in-stance a linear form, a tree representation and a tabular representation (see [19]). In this section we give some examples of the linear form and the tabular representation.
Reference: [17] <author> N. Prabhakaran. </author> <title> Generation of Relational Database Schemata and its Applications. </title> <type> PhD thesis, </type> <institution> Department of Computer Science University of Queensland, Australia, </institution> <year> 1984. </year>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], <ref> [17] </ref>, [21], [22] and [24]). Other approaches can be found in [2], [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [18] <author> M.A. Roth, H.F. Korth, and A. Silberschatz. </author> <title> Extended algebra and calculus for nested relational databases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 13(4) </volume> <pages> 389-417, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: NF 2 relation types may be in one of the classical relational normal forms (see e.g. [26]), but they do not necessarily have to. In this way the relational theory can be exploited in a wider area. Recent research involves the definition of a recursive relational algebra (see [6], <ref> [18] </ref> and [19]) and the introduction of nested normal forms (see e.g. [7] and [16]). Furthermore, the relationship with other modelling approaches is investigated. 8 Several representations have been introduced for NF 2 relation types, for in-stance a linear form, a tree representation and a tabular representation (see [19]). <p> With this basic normal form it can be guaranteed that nest is always the inverse operator for unnest, an important property for e.g. query optimization. For more details see <ref> [18] </ref>). In this paper we restrict ourselves to relation types in PNF. As a further refinement, we use the keyword op to denote an optional attribute type. Example 3.2 The schema in figure 1 can be represented by the following alternative relation types: 1. A ; B; C op 2.
Reference: [19] <author> H.J. Schek and M.H. Scholl. </author> <title> The relational model with relation-valued attributes. </title> <journal> Information Systems, </journal> <volume> 11(2) </volume> <pages> 137-147, </pages> <year> 1986. </year>
Reference-contexts: Various implementation oriented modelling techniques exist. A classical distinction can be made between relational, network and hierarchical models. Recently a lot of research has been done on nested relational models, also called non first normal form or NF 2 models (see [1], [6] and <ref> [19] </ref>). These models are interesting for special database applications, involving e.g. textual data, computer aided design or image processing. Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. <p> They form the basis of the generation algorithm described in section 4. 3.1 The underlying data structure An NF 2 model consists of relation types, where a relation type consists of atomic attribute types and other relation types, called relation-valued attribute types (see [6] and <ref> [19] </ref>). NF 2 relation types may be in one of the classical relational normal forms (see e.g. [26]), but they do not necessarily have to. In this way the relational theory can be exploited in a wider area. <p> In this way the relational theory can be exploited in a wider area. Recent research involves the definition of a recursive relational algebra (see [6], [18] and <ref> [19] </ref>) and the introduction of nested normal forms (see e.g. [7] and [16]). Furthermore, the relationship with other modelling approaches is investigated. 8 Several representations have been introduced for NF 2 relation types, for in-stance a linear form, a tree representation and a tabular representation (see [19]). <p> (see [6], [18] and <ref> [19] </ref>) and the introduction of nested normal forms (see e.g. [7] and [16]). Furthermore, the relationship with other modelling approaches is investigated. 8 Several representations have been introduced for NF 2 relation types, for in-stance a linear form, a tree representation and a tabular representation (see [19]). In this section we give some examples of the linear form and the tabular representation. In section 3.2 we give a formal definition of tree structures, consisting of nodes of predicators.
Reference: [20] <author> M.H. Scholl. </author> <title> Theoretical foundation of algebraic optimization utilizing un-normalized relations. </title> <type> Technical report, </type> <institution> Fachbereich Informatik, Technische Hochschule Darmstadt, West Germany, </institution> <year> 1986. </year> <note> DVSI-1986-T3. 32 </note>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], [21], [22] and [24]). Other approaches can be found in [2], [10], <ref> [20] </ref> and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [21] <author> P. Shoval and M. Even-Chaime. </author> <title> ADDS: A system for automatic database schema design based on the binary-relationship model. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 3(2) </volume> <pages> 123-144, </pages> <year> 1987. </year>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], <ref> [21] </ref>, [22] and [24]). Other approaches can be found in [2], [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [22] <author> T.J. Teory, D. Yang, and J.P. Fry. </author> <title> A logical design methodology for relational databases using the extended entity-relationship model. </title> <journal> Computing Surveys, </journal> <volume> 18(2) </volume> <pages> 197-222, </pages> <year> 1986. </year>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], [21], <ref> [22] </ref> and [24]). Other approaches can be found in [2], [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [23] <author> O. de Troyer. </author> <title> The OO-Binary Relationship Model: A Truly Object Oriented Conceptual Model. </title> <editor> In R. Andersen, J.A. Bubenko, and A. Stlvberg, editors, </editor> <booktitle> Proceedings of the Third International Conference CAiSE'91 on Advanced Information Systems Engineering, </booktitle> <pages> pages 561 - 578, </pages> <address> Trondheim, Norway, </address> <month> May </month> <year> 1991. </year> <note> Lecture Notes in Computer Science 498. </note>
Reference-contexts: Another problem that can be addressed is finding suitable candidate keys for the generated internal representation. In a complicated schema, that might be a problem. Finally, future research will consist of: (1) the incorporation of object-orientation and complex objects in terms of object-role models (see also <ref> [23] </ref> and [9]) and (2) the incorporation of additional background in database storage structures. Acknowledgement We would like to thank the anonymous referees for their contributive remarks.
Reference: [24] <author> O.M.F. de Troyer. </author> <title> RIDL*: A Tool for the Computer-Assisted Engineering of Large Databases in the Presence of Integrity Constraints. </title> <type> Technical report, </type> <institution> Institute for Language Technology and Artificial Intelligence ITK, Tilburg University, </institution> <year> 1989. </year> <note> ITK Research Report No. 3. </note>
Reference-contexts: Current approaches to the transformation of conceptual models into internal models focus mainly on the relational model. The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], [21], [22] and <ref> [24] </ref>). Other approaches can be found in [2], [10], [20] and [25]. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [25] <author> S. Twine. </author> <title> Mapping between a NIAM conceptual schema and KEE frames. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 4(2) </volume> <pages> 125-155, </pages> <year> 1989. </year>
Reference-contexts: The result of the transformation is a relational schema in a certain normal form (see for instance [11], [13], [17], [21], [22] and [24]). Other approaches can be found in [2], [10], [20] and <ref> [25] </ref>. In this paper we present a framework for the transformation of object-role models. We describe a representation mechanism for internal structures, such that the conventional internal models can be represented.
Reference: [26] <author> J.D. Ullman. </author> <title> Principles of Database Systems. </title> <publisher> Computer Science Press, </publisher> <year> 1982. </year>
Reference-contexts: NF 2 relation types may be in one of the classical relational normal forms (see e.g. <ref> [26] </ref>), but they do not necessarily have to. In this way the relational theory can be exploited in a wider area. Recent research involves the definition of a recursive relational algebra (see [6], [18] and [19]) and the introduction of nested normal forms (see e.g. [7] and [16]).
Reference: [27] <author> Th.P. van der Weide, A.H.M. ter Hofstede, and P. van Bommel. </author> <title> The uniquest algorithm: A formal semantics of complex uniqueness constraints. </title> <type> Technical Report 90-19, </type> <institution> Department of Information Systems, University of Nijmegen, </institution> <address> The Netherlands, </address> <month> October </month> <year> 1990. </year> <note> To be published. 33 </note>
Reference-contexts: Our approach however, is applicable in any model with an underlying object-role structure. 2 The Predicator Model In the Predicator Model a schema = hI; Ci consists of an information structure I and a set of constraints C (see [3], [8] and <ref> [27] </ref>). The semantics of a schema is expressed in terms of populations (instantiations) of the information structure. Such a population should fit in the structure I and satisfy the requirements specified in C. <p> It is also possible to define uniqueness constraints over more than one fact type, or total role constraints over more than one predicator (with the same base). For a formal definition of syntax and semantics of these (and other) constraints, we refer to [3] and <ref> [27] </ref>. Example 2.4 Consider the information structure in figure 1. We see a uniqueness constraint unique (fpg). The population of fact type f given in figure 2 satisfies this constraint, since every instance of object type A occurs at most once in a tuple of f. <p> In this situation the constraint unique (r) means that each instance of f can be associated at most once with an instance of C. ~ C ? g r - ~ B r For more examples of objectification and the meaning of constraints over objec tification, see [3], [15] and <ref> [27] </ref>. 2.3 Defoliation In section 2.1 two kinds of atomic object types were distinguished: entity types and label types. The difference is that labels can, in contrast with entities, be 6 reproduced on a communication medium.
References-found: 27

