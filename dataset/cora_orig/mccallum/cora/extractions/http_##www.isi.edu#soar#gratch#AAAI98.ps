URL: http://www.isi.edu/soar/gratch/AAAI98.ps
Refering-URL: http://www.isi.edu/soar/gratch/home.html
Root-URL: 
Email: gratch@isi.edu  
Title: Metaplanning for Multiple Agents  
Author: Jonathan Gratch 
Address: 4676 Admiralty Way, Marina del Rey, CA, 90292  
Affiliation: University of Southern California, Information Sciences Institute  
Abstract: We present an extension to classical planning techniques that facilitates their use in complex multi-agent domains. The approach implements a form of metaplanning that e n-ables a planner to reason about properties of multiple plans in a single plan network. With this approach, a planning agent can simultaneously generate an individual plan, repair a second, and, together with a group, execute a third. This provides some of the key functionality of sophist i-cated multi-agent reasoning techniques, such as Grosz and Kraus shared plans, but within the context of better unde r-stood classical planning techniques. As such, it helps bridge the gap between planning and multi-agent research. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ambros-Ingerson, J. A. and Steel, S. </author> <year> 1988. </year> <title> Integrating Planning, Execution and Monitoring, </title> <booktitle> in AAAI-88. </booktitle>
Reference: <author> Cohen, P. and Levesque, H., </author> <year> 1990. </year> <title> Intention is choice with commitment, </title> <journal> Artificial Intelligence, </journal> <volume> 42(3). </volume>
Reference: <author> Firby, J. </author> <year> 1987. </year> <title> An investigation into reactive planning in complex domains, </title> <note> In AAAI-87. </note>
Reference-contexts: The indivi d ual vehicle agents execute the commanders high-level plans, making appropriate reactions based on the current state of the environment (Tambe 1997). 2 The commander agent is based on the planning architecture described above, whereas the vehicle agents can be viewed as RAP-like execution systems <ref> (Firby 1987) </ref> supplemented with Tambes teamwork and agent tracking techniques. We illustrate the capabilities of metareasoning by examining the planning performed by the commander agent in the course of a typical exercise. During such an exercise, the command agent receives orders from its commanding unit (a battalion command agent).
Reference: <author> Golden, K., Etzioni, O., and Weld, D. </author> <year> 1994. </year> <title> Omnipotence without Omniscience: Efficient Sensor Management for Planning. </title> <booktitle> in AAAI-94, </booktitle> <address> Seattle, WA. </address>
Reference-contexts: Our planner incorporates a number of novel feat ures, but for the purposes of this article it may be considered equivalent to IPEM (Ambros-Ingerson and Steel 1988), which shares many features with the more recent XII planner <ref> (Golden et al. 1994) </ref>. Some differences between our approach and IPEM are briefly considered later in the article. IPEM was designed to support planning, execution and replanning for environments where actions have duration and the world can change in surprising ways.
Reference: <author> Grosz, B., and Kraus, S. </author> <year> 1996. </year> <title> Collaborative Plans for Complex Group Action, </title> <journal> Artificial Intelligence, </journal> <volume> 86(2). </volume>
Reference-contexts: Coordinating the relationships between plans and between plans and other agents requires sophisticated reasoning techniques. Indeed, some multi-agent research has pr o-posed building elaborate representations systems around a classical planner to support this type of inference <ref> (e.g., shared plans, Grosz and Kraus 1996) </ref>. Reasoning about multiple plans is a form of metaplan-ning. In this paper, we propose a surprisingly simple extension to classical planning techniques that allows the planner itself to cleanly perform this type of reasoning using a single plan .
Reference: <author> Hill, R., Chen, J., Gratch, G., Rosenbloom, P., and Tambe, M. </author> <year> 1997. </year> <title> Intelligent Agents for the Synthetic Battlefield, </title> <booktitle> in AAAI-97/IAAI-97, </booktitle> <pages> pp. 1006-1012. </pages>
Reference-contexts: Introduction Recent applications have illustrated the power of planning techniques in remarkably complex virtual environments such as information gathering (Knoblock, 1995), intelligent tutoring (Rickel and Johnson, 1997) and military simulations <ref> (Hill, 1997) </ref>. In these domains, planning systems dont simply develop plans but also monitor their execution and replan when things go awry. <p> Example We illustrate the approach by working through an example of how metaplanning works in an application domain. The approach has been tested in the context of large-scale military simulations <ref> (Hill et. al. 1997) </ref> and we use this domain as a basis for discussion. Our system participated in a simulated military exercises known as Synthetic Theater of War '97 (Stow-97).
Reference: <author> Kautz, H. and Selman, B. </author> <year> 1996. </year> <title> Pushing the Envelope: Planning, Propositional Logic, and Stochastic Search, </title> <booktitle> in AAAI-96, </booktitle> <address> Portland, OR, </address> <pages> pp. 1194-1201. </pages>
Reference-contexts: One key issue is how the planner searches the space of plans. Maintaining multiple (roughly independent) plans in the same network may favor different search methods than those commonly used. A novel feature of our planner is that it generates plans via local iterative repair search <ref> (Kautz and Selman 1996) </ref>, rather than conventional systematic backtracking search of IPEM and other classical planners. We believe that iterative repair search is more appropriate for planners that perform replanning and it also interacts well with the notion of multiple plans, but this conjecture needs further evaluation.
Reference: <author> Knoblock, C. </author> <year> 1995. </year> <title> Planning, executing, </title> <booktitle> sensing, and replanning for information gathering, in Proceedings of IJCAI-95, Montreal, </booktitle> <pages> pp. 1686-1693. </pages>
Reference-contexts: Introduction Recent applications have illustrated the power of planning techniques in remarkably complex virtual environments such as information gathering <ref> (Knoblock, 1995) </ref>, intelligent tutoring (Rickel and Johnson, 1997) and military simulations (Hill, 1997). In these domains, planning systems dont simply develop plans but also monitor their execution and replan when things go awry.
Reference: <author> McAllester, D. and Rosenblitt, D. </author> <year> 1991. </year> <title> Systematic Nonlinear Planning, </title> <booktitle> in AAAI-91. </booktitle>
Reference-contexts: IPEM was designed to support planning, execution and replanning for environments where actions have duration and the world can change in surprising ways. IPEM plans by posting constraints to a task network in the same fashion as other classical planners such as SNLP <ref> (McAllester and Rosenblitt 1991) </ref>. Constraints are added in response to flaws in the current network.
Reference: <author> Minton, S., </author> <year> 1990. </year> <title> Quantitative Results Concerning the Utility of Explanation-Based Learning, </title> <booktitle> Artificial Intell i-gence, </booktitle> <pages> 42. </pages>
Reference-contexts: A drawback is that meta-plans can become quite detailed and the approach seems more cumbersome than alternate methods of search control, particularly learning techniques <ref> (Minton 1990) </ref>. In contrast, we dont attempt to control the details of how a plan is generated, and instead focus on the relationships that plans have with each other and with other domain objects.
Reference: <author> Newell, A. </author> <year> 1990. </year> <title> Unified Theories of Cognition. </title> <address> Cam-bridge, MA: </address> <publisher> Harvard University Press. </publisher>
Reference-contexts: If a plan has no flaws and is common knowledge to a group, then that group can execute the plan. Finally, flawed plans can be repaired by 2 The commander and vehicle agents are all implemented within the Soar agent architecture <ref> (Newell 1990) </ref>.
Reference: <author> Rickel, J. and Johnson, L. </author> <year> 1997. </year> <title> Intelligent tutoring in virtual reality, </title> <booktitle> in Proceedings of Eighth World Confe r-ence on AI in Education, </booktitle> <pages> pp. 294-301. </pages>
Reference-contexts: Introduction Recent applications have illustrated the power of planning techniques in remarkably complex virtual environments such as information gathering (Knoblock, 1995), intelligent tutoring <ref> (Rickel and Johnson, 1997) </ref> and military simulations (Hill, 1997). In these domains, planning systems dont simply develop plans but also monitor their execution and replan when things go awry.
Reference: <author> Stefik, M. </author> <year> 1981. </year> <note> Planning and Metaplanning, in Rea dings in Artificial Intelligence, </note> <editor> Nilsson and Webber, eds., </editor> <publisher> Tioga Publishing, </publisher> <address> Palo Alto, CA, </address> <pages> pp. 272-286. </pages>
Reference: <author> Tambe, M. </author> <year> 1997. </year> <title> Agent Architectures for Flexible, Practical Teamwork, </title> <booktitle> in AAAI-97, </booktitle> <pages> pp. 22-28. </pages>
Reference-contexts: The indivi d ual vehicle agents execute the commanders high-level plans, making appropriate reactions based on the current state of the environment <ref> (Tambe 1997) </ref>. 2 The commander agent is based on the planning architecture described above, whereas the vehicle agents can be viewed as RAP-like execution systems (Firby 1987) supplemented with Tambes teamwork and agent tracking techniques.
Reference: <author> Wilensky, R. </author> <year> 1980. </year> <title> Meta-Planning, </title> <booktitle> Proceedings AAAI-80, </booktitle> <address> Stanford, CA, </address> <pages> pp. 334-336. </pages>
Reference-contexts: Metaplanning has been explored in the past but our focus differs from that earlier work. Previously, metaplanning was seen as a form of search control <ref> (Wilensky 1980, Stefik 1981) </ref>. Such meta-planners treat plan modifiers (such as promotion or step addition) as steps in a meta-space whos sequence of application is to be determined by planning.
References-found: 15

