URL: http://www.icsi.berkeley.edu/ftp/global/pub/speech/stolcke/neuralcomp.ps.Z
Refering-URL: http://www.icsi.berkeley.edu/ftp/global/pub/speech/stolcke/
Root-URL: http://www.icsi.berkeley.edu
Title: Unification as Constraint Satisfaction in Structured Connectionist Networks  
Author: Andreas Stolcke and 
Address: Berkeley, CA 94720,  1947 Center Street, Suite 600, Berkeley, CA 94704  
Affiliation: Computer Science Division, University of California,  International Computer Science Institute,  
Date: 4, 558-566, 1989  
Note: Neural Computation, vol. 1, no.  
Abstract: Unification is a basic concept in several traditional symbolic formalisms that should be well-suited for a connectionist implementation due to the intuitive nature of the notions it formalizes. It is shown that by approaching unification from a graph matching and constraint satisfaction perspective a natural and efficient realization in a structured connectionist network can be found.
Abstract-found: 1
Intro-found: 1
Reference: <author> Ballard, D. H. </author> <year> (1986). </year> <title> Parallel Logical Inference and Energy Minimization. </title> <booktitle> In Proceedings of the 5th National Conference on Artificial Intelligence, </booktitle> <pages> pp. 203-208, </pages> <address> Philadelphia, Pa. </address>
Reference-contexts: In the connectionist literature unification is addressed in the context of resolution theorem proving <ref> (Ballard, 1986) </ref>, although considering only a simple special case.
Reference: <author> Colmerauer, A. </author> <year> (1982). </year> <title> Prolog and infinite trees. </title> <editor> In Clark, K. L. & Tarnlund, S.-A., eds., </editor> <booktitle> Logic Programming, </booktitle> <pages> pp. 231-251. </pages> <publisher> Academic Press, </publisher> <address> New York. </address>
Reference-contexts: By adding controlled noise the network might be used to search stochastically through a space of mutually exclusive unifications. Conventional algorithms usually do not allow f-structures to be cyclic, although unification is well-defined on such structures <ref> (Colmerauer, 1982) </ref>. Incidentally our model naturally represents and processes cyclic structures. It is encouraging (and maybe surprising) that a formalism prototypical for highly structured, symbolic processing lends itself to a relatively straightforward connectionist implementation, namely when approached from the point of view of constraint satisfaction.
Reference: <author> Dwork, C., Kanellakis, P. C., & Mitchell, J. C. </author> <year> (1984). </year> <title> On the sequential nature of unification. </title> <journal> Journal of Logic Programming, </journal> <volume> 1 </volume> <pages> 35-50. </pages>
Reference-contexts: The author is currently an IBM Graduate Fellow. 2 Note, however, that in the worst case reentrancies can prevent effective parallelization causing the network to degenerate into sequential behavior <ref> (cf. Dwork et al. 1984) </ref>. 5
Reference: <author> Martelli, A. & Montanari, U. </author> <year> (1982). </year> <title> An efficient unification algorithm. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 4 </volume> <pages> 258-282. </pages>
Reference-contexts: 1 Introduction Unification is a special matching operation on recursive symbolic structures widely usedin a number of variantsin fields related to symbolic artificial intelligence, most prominently theorem proving <ref> (Martelli & Montanari, 1982) </ref> and computational linguistics (Shieber, 1986). In the connectionist literature unification is addressed in the context of resolution theorem proving (Ballard, 1986), although considering only a simple special case.
Reference: <author> Mjolness, E., Gindi, G., & Anandan, P. </author> <year> (1989). </year> <title> Optimization in model matching and perceptual organization. </title> <journal> Neural Computation, </journal> <volume> 1(2) </volume> <pages> 258-282. </pages>
Reference: <author> Paterson, M. S. & Wegman, M. N. </author> <year> (1976). </year> <title> Linear Unification. </title> <type> Report RC 5904 (#25518), </type> <institution> IBM Thomas J. Watson Research Center, Yorktown Heights, N.Y. </institution>
Reference-contexts: Therefore the network will arrive at a solution (or negative result) in time proportional to the depth of the f-structures processed if the structures are essentially tree-like, giving time complexity of the order of the log of the structure sizes. [Known serial algorithms are linear in the structure size <ref> (Paterson & Wegman, 1976) </ref>.] 2 The number of units and links required for this speedup is quadratic in the number of edges and cubic in the number of nodes. Typical applications, however, often include a fair number of fixed edges.
Reference: <author> Pollack, J. B. </author> <year> (1988). </year> <title> Recursive Auto-Associative Memory: Devising Compositional Distributed Representations. </title> <booktitle> In Proceedings of the 10th Annual Conference of the Cognitive Science Society, </booktitle> <pages> pp. 33-39, </pages> <address> Montreal, Quebec, Canada. </address>
Reference-contexts: Related to this issue, and a subject of ongoing research, is the question of how unification can deal with distributed and/or non-discrete forms of connectionist encoding of compositional structures, such as coarse-coding (Touretzky, 1986) and recursive auto-association <ref> (Pollack, 1988) </ref>. Acknowledgments I wish to thank Steffen H olldobler and Jerome Feldman for their helpful comments and the International Computer Science Institute for general support.
Reference: <author> Shastri, L. </author> <year> (1988). </year> <title> A Connectionist Approach to Knowledge Representation and Limited Inference. </title> <journal> Cognitive Science, </journal> <volume> 12 </volume> <pages> 331-392. </pages>
Reference: <author> Shieber, S. M. </author> <year> (1986). </year> <title> An Introduction to Unification-Based Approaches to Grammar. No. 4 in CSLI Lecture Note Series. Center for the Study of Language and Information, </title> <publisher> Stanford, </publisher> <address> Ca. </address>
Reference-contexts: 1 Introduction Unification is a special matching operation on recursive symbolic structures widely usedin a number of variantsin fields related to symbolic artificial intelligence, most prominently theorem proving (Martelli & Montanari, 1982) and computational linguistics <ref> (Shieber, 1986) </ref>. In the connectionist literature unification is addressed in the context of resolution theorem proving (Ballard, 1986), although considering only a simple special case.
Reference: <author> Stolcke, A. </author> <year> (1989a). </year> <title> A Connectionist Model of Unification. </title> <type> Technical Report TR-89-032, </type> <institution> International Computer Science Institute, Berkeley, Calif. </institution>
Reference: <author> Stolcke, A. </author> <year> (1989b). </year> <title> Processing Unification-based Grammars in a Connectionist Framework. </title> <booktitle> In Proceedings of the 11th Annual Conference of the Cognitive Science Society, </booktitle> <pages> pp. 908-915, </pages> <institution> University of Michigan, Ann Arbor, Mich. </institution>
Reference: <author> Touretzky, D. S. </author> <year> (1986). </year> <title> BoltzCONS: Reconciling Connectionism with the Recursive Nature of Stacks and Trees. </title> <booktitle> In Proceedings of the 8th Annual Conference of the Cognitive Science Society, </booktitle> <pages> pp. 522-530, </pages> <address> Amherst, Mass. </address>
Reference-contexts: Related to this issue, and a subject of ongoing research, is the question of how unification can deal with distributed and/or non-discrete forms of connectionist encoding of compositional structures, such as coarse-coding <ref> (Touretzky, 1986) </ref> and recursive auto-association (Pollack, 1988). Acknowledgments I wish to thank Steffen H olldobler and Jerome Feldman for their helpful comments and the International Computer Science Institute for general support.
Reference: <author> Touretzky, D. S. </author> <year> (1987). </year> <title> Representing Conceptual Structures in a Neural Network. </title>

References-found: 13

