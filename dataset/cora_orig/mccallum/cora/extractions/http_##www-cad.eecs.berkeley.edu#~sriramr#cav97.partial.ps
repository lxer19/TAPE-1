URL: http://www-cad.eecs.berkeley.edu/~sriramr/cav97.partial.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/~sriramr/research.html
Root-URL: 
Email: Email: falur, brayton, tah, shaz, sriramrg@ic.eecs.berkeley.edu  (email: shaz@ic.eecs.berkeley.edu)  
Title: Partial Order Reduction in Symbolic State Space Exploration  
Author: R. Alur R. K. Brayton T. A. Henzinger S. Qadeer S. Rajamani Shaz Qadeer 
Address: Berkeley, Berkeley, CA 94720-1770, U.S.A.  
Affiliation: EECS Department, UC  
Note: CAV 1997 Submission: Category A  Contact Author:  
Abstract: State space explosion is a fundamental obstacle in formal verification of designs and protocols. Several techniques for combating this problem have emerged in the past few years, among which two are significant: symbolic state space search using BDDs and partial order reductions. In asynchronous systems, interleavings of independent concurrent events are equivalent, and only a representative interleaving needs to be explored to verify local properties. Partial order methods exploit this redundancy and visit only a subset of the reachable states. Symbolic techniques, on the other hand, capture the transition relation of the system and the set of reachable states as boolean functions. In many cases, these functions can be represented compactly using binary decision diagrams (BDDs). Traditionally, the two techniques have been practiced by two different schools partial order methods with enumerative depth first search for the analysis of asynchronous network protocols, and symbolic breadth first search for the analysis of synchronous hardware systems. We combine both approaches by presenting a method in which partial order reduction techniques are used in symbolic BDD based invariant checking. We present theoretical results to prove the correctness of the method, and experimental results to demonstrate its efficiency. 
Abstract-found: 1
Intro-found: 1
Reference: [B + 96] <author> R. K. Brayton et al. </author> <title> VIS: A System for Verification and Synthesis. </title> <booktitle> In Proc. of the 8th International Conference on Computer Aided Verification, volume 1102 of Lecture Notes in Computer Science, </booktitle> <pages> pages 428-432. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <month> 12 </month>
Reference-contexts: To impose interleaving semantics on a Verilog description, we added a scheduler to the model which nondeterministically schedules one process in the description at a time. The symbolic reachability computation was performed with VIS <ref> [B + 96] </ref> 1 . The ample sets were manually computed as functions of global states and implemented using an "ample scheduler" that nondeterministically chooses one among a subset of enabled processes (corresponding to the ample set) at each state.
Reference: [BCL91] <author> J. R. Burch, E. M. Clarke, and D. E. </author> <title> Long. Symbolic Model Checking with Partitioned Tran--sition Relations. </title> <booktitle> In IFIP International Conference on Very Large Scale Integration, </booktitle> <address> Edinburgh, Scotland, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: Instead of computing images with the whole transition relation, it suffices to compute symbolically the ample set of successor states, or any set of successor states that contains the ample set. This flexibility adds a new dimension to heuristic techniques like modified search order <ref> [BCL91] </ref> and use of don't cares [RAP + 95], in symbolic state space exploration. 1 The following toy example illustrates the advantage of combining symbolic methods with partial order methods. Consider n processes P 1 ; P 2 ; : : : ; P n .
Reference: [BCMD92] <author> J. R. Burch, E. M. Clarke, K. L. McMillan, and D. L. Dill. </author> <title> Symbolic Model Checking: 10 20 States and Beyond. </title> <journal> Information and Computation, </journal> <volume> 98(2) </volume> <pages> 142-170, </pages> <year> 1992. </year>
Reference-contexts: Two significant solutions that are supported by the existing tools are symbolic model checking and partial order reduction: * In synchronous hardware designs, state space explosion manifests itself in the number of states growing exponentially with the number of state variables in the design. Symbolic model checking <ref> [BCMD92, McM93] </ref> avoids explicit construction of the state space. The transition relation of the system and state sets are modeled as boolean functions and represented using Binary Decision Diagrams (BDDs).
Reference: [CP96] <author> C.-T. Chou and D. A. Peled. </author> <title> Formal Verification of a Partial-Order Reduction Technique for Model Checking. </title> <booktitle> In Proc. of the Second International Workshop on Tools and Algorithms for the Construction and Analysis of Systems, volume 1055 of Lecture Notes in Computer Science, </booktitle> <pages> pages 241-257, </pages> <address> Passau, Germany, 1996. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Breadth first search is shown to have this property. Consequently, partial order reductions can be applied to symbolic search (which is inherently breadth first). A generalization of partial order reductions to breadth first search was obtained by <ref> [CP96] </ref> also in a different context. Partial order methods work by exploring only a subset of enabled transitions at each state called ample sets. For automatic implementation of our method, ample sets have to be computed automatically in a symbolic setting. <p> We generalize their results to get a modified breadth first search algorithm which 2 can then be used to explore the reduced state space symbolically. A similar generalization was also obtained by <ref> [CP96] </ref> in the context of mechanically verifying the partial order reduction techniques implemented in the model checker SPIN [HP94].
Reference: [Dil89] <author> D. L. Dill. </author> <title> Trace Theory for Automatic Hierarchical Verification of Speed-Independent Circuits. </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: We model the arbiter cells as interacting asynchronously with each other. Four-phase signaling is used on each of the interface signals of the arbiter cells for communication. This circuit has been verified before in <ref> [Dil89] </ref>. Label the processes (processors and arbiters) by levels, starting at the leaves | in the lowest level label the processors from left to right with the left most processor having the least label. Then label the first level of arbiters from left to right.
Reference: [DKR82] <author> D. Dolev, M. Klawe, and M. Rodeh. </author> <title> An O(n log n) unidirectional distributed algorithm for extrema finding in a circle. </title> <journal> Journal of Algorithms, </journal> <volume> 3 </volume> <pages> 245-260, </pages> <year> 1982. </year>
Reference-contexts: the affirmative and we plan to implement our method for symbolic state space traversal along with the algorithm for computing ample sets in VIS. 1 The Verilog models and a VIS patch are available at http://www-cad.eecs.berkeley.edu/~ sriramr/research.html. 9 4.1 Leader election protocol We consider the leader election protocol described in <ref> [DKR82] </ref>. Extensive reduction in reachable state space sizes for this problem was reported by [HP94], using partial order reductions with enumerative depth first search of the state space. There are N processes connected in a circular ring, with a finite FIFO unidirectional queue between adjacent processes. <p> In fact, there are certain lines of code in the model that are never exercised in the former case and are exercised in the latter case. Our method verifies the correctness claim in <ref> [DKR82] </ref> for all initial states. Two curves are shown one for the entire transition relation and another for the ample transition relation. Note that the reachability with the entire transition relation runs out of memory for 5 processes.
Reference: [God96] <author> P. Godefroid. </author> <title> Partial-Order Methods for the Verification of Concurrent Systems: An Approach to the State-Explosion Problem, </title> <booktitle> volume 1032 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Consequently, during state space exploration, in each state it suffices to search an ample subset of enabled transitions, rather than all of them, leading to significant reduction in the explored state space for some asynchronous protocols <ref> [God96, HP94] </ref>. In this work, we address the problem of combining partial order reduction methods with symbolic state space traversal. While for simplicity, we will only consider invariant checking, our method can be extended to model check other temporal logic properties as well. <p> G B is a partial order reduction of G. We note that depth first search can also be used to construct a partial order reduction. The set of states in the stack can be used as the history function for this <ref> [God96] </ref>. 3 Symbolic Computation of Ample Sets Symbolic techniques capture transition sets and state sets of a system as boolean functions. The boolean functions are represented and manipulated as BDDs [McM93]. <p> We now show that a heuristic to compute persistent sets in <ref> [God96] </ref> can be implemented symbolically to yield a persistent transition relation. For this purpose, we assume to be given an annotation of the transition system with processes. A process structure is a structured description of a labeled transition graph.
Reference: [GW94] <author> P. Godefroid and P. Wolper. </author> <title> A Partial Approach to Model Checking. </title> <journal> Information and Computation, </journal> <volume> 110(2) </volume> <pages> 305-326, </pages> <year> 1994. </year>
Reference-contexts: Partial order semantics described in [Maz88] for the composition of concurrent processes group equivalent interleavings of concurrent events together into traces. It has been shown that sometimes it suffices to explore just one representative interleaving from each trace for verifying temporal logic properties <ref> [Val91, Pel93, GW94] </ref>. Consequently, during state space exploration, in each state it suffices to search an ample subset of enabled transitions, rather than all of them, leading to significant reduction in the explored state space for some asynchronous protocols [God96, HP94]. <p> For automatic implementation of our method, ample sets have to be computed automatically in a symbolic setting. In Section 3, we present a symbolic version of a known algorithm for computing ample sets. 2 Partial Order Reduction for Breadth First Search In <ref> [Val91, GW94, Pel93] </ref>, partial order reductions are obtained by a modified depth first search of the state space. We generalize their results to get a modified breadth first search algorithm which 2 can then be used to explore the reduced state space symbolically.
Reference: [HP94] <author> G. J. Holzmann and D. A. Peled. </author> <title> An Improvement in Formal Verification. </title> <booktitle> In Proc. of 7th International Conference on Formal Description Techniques, FORTE94, </booktitle> <pages> pages 197-211, </pages> <address> Bern, Switzerland, 1994. </address> <publisher> Chapman & Hall. </publisher>
Reference-contexts: Consequently, during state space exploration, in each state it suffices to search an ample subset of enabled transitions, rather than all of them, leading to significant reduction in the explored state space for some asynchronous protocols <ref> [God96, HP94] </ref>. In this work, we address the problem of combining partial order reduction methods with symbolic state space traversal. While for simplicity, we will only consider invariant checking, our method can be extended to model check other temporal logic properties as well. <p> A similar generalization was also obtained by [CP96] in the context of mechanically verifying the partial order reduction techniques implemented in the model checker SPIN <ref> [HP94] </ref>. <p> Extensive reduction in reachable state space sizes for this problem was reported by <ref> [HP94] </ref>, using partial order reductions with enumerative depth first search of the state space. There are N processes connected in a circular ring, with a finite FIFO unidirectional queue between adjacent processes. <p> Consequently, this set is a non-empty persistent set. It turns out that this set is also an ample set. Exponential partial order reductions on this example were reported in <ref> [HP94] </ref>. However, the processes were assumed to be initialized to 0,1,2,3 and 4 in a circular order around the ring. Though 10 the protocol is verified for this initial state, it is not verified for all initial states.
Reference: [Maz88] <author> A. Mazurkiewicz. </author> <title> Basic Notions of Trace Theory. In Workshop on Linear Time, Branching Time and Partial Order in Logics and Models for Concurrency, </title> <booktitle> volume 354 of Lecture Notes in Computer Science, </booktitle> <pages> pages 285-363. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: One source of state space explosion is due the n! possible interleavings for n concurrent events. If the concurrent actions are independent then all interleavings are equivalent in that they lead to the same state. Partial order semantics described in <ref> [Maz88] </ref> for the composition of concurrent processes group equivalent interleavings of concurrent events together into traces. It has been shown that sometimes it suffices to explore just one representative interleaving from each trace for verifying temporal logic properties [Val91, Pel93, GW94].
Reference: [McM93] <author> Kenneth L. McMillan. </author> <title> Symbolic Model Checking. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Two significant solutions that are supported by the existing tools are symbolic model checking and partial order reduction: * In synchronous hardware designs, state space explosion manifests itself in the number of states growing exponentially with the number of state variables in the design. Symbolic model checking <ref> [BCMD92, McM93] </ref> avoids explicit construction of the state space. The transition relation of the system and state sets are modeled as boolean functions and represented using Binary Decision Diagrams (BDDs). <p> The set of states in the stack can be used as the history function for this [God96]. 3 Symbolic Computation of Ample Sets Symbolic techniques capture transition sets and state sets of a system as boolean functions. The boolean functions are represented and manipulated as BDDs <ref> [McM93] </ref>. The functional representation of the set of all transitions is called the transition relation and usually denoted by T , where T (s; ff; t) is true iff s ff ! t.
Reference: [OCVSV96] <author> A. L. Oliviera, L. Carloni, T. Villa, and A. L. Sangiovanni-Vincentelli. </author> <title> Exact Minimization of Binary Decision Diagrams Using Implicit Techniques. </title> <type> Technical Report UCB/ERL M96/16, </type> <institution> Electronics Research Lab, Univ. of California, Berkeley, </institution> <address> CA 94720, </address> <month> April </month> <year> 1996. </year>
Reference: [Pel93] <author> D. A. Peled. </author> <title> All from One, One for All: On Model Checking Using Representatives. </title> <booktitle> In Proc. of 5th International Conference on Computer Aided Verification, volume 697 of Lecture Notes in Computer Science, </booktitle> <pages> pages 409-423. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Partial order semantics described in [Maz88] for the composition of concurrent processes group equivalent interleavings of concurrent events together into traces. It has been shown that sometimes it suffices to explore just one representative interleaving from each trace for verifying temporal logic properties <ref> [Val91, Pel93, GW94] </ref>. Consequently, during state space exploration, in each state it suffices to search an ample subset of enabled transitions, rather than all of them, leading to significant reduction in the explored state space for some asynchronous protocols [God96, HP94]. <p> For automatic implementation of our method, ample sets have to be computed automatically in a symbolic setting. In Section 3, we present a symbolic version of a known algorithm for computing ample sets. 2 Partial Order Reduction for Breadth First Search In <ref> [Val91, GW94, Pel93] </ref>, partial order reductions are obtained by a modified depth first search of the state space. We generalize their results to get a modified breadth first search algorithm which 2 can then be used to explore the reduced state space symbolically.
Reference: [RAP + 95] <author> R. K. Ranjan, A. Aziz, B. Plessier, C. Pixley, and R. K. Brayton. </author> <title> Efficient Formal Design Verification: Data Structure + Algorithms. </title> <booktitle> In Workshop Notes of the Intl. Workshop on Logic Synthesis, </booktitle> <address> Tahoe City, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: This flexibility adds a new dimension to heuristic techniques like modified search order [BCL91] and use of don't cares <ref> [RAP + 95] </ref>, in symbolic state space exploration. 1 The following toy example illustrates the advantage of combining symbolic methods with partial order methods. Consider n processes P 1 ; P 2 ; : : : ; P n .
Reference: [SHSVB93] <author> T. R. Shiple, R. Hojati, A. L. Sangiovanni-Vincentelli, and R. K. Brayton. </author> <title> Heuristic Minimization of BDDs Using Don't Cares. </title> <type> Technical Report UCB/ERL M93/58, </type> <institution> Electronics Research Lab, Univ. of California, Berkeley, </institution> <address> CA 94720, </address> <month> July </month> <year> 1993. </year>
Reference: [Val91] <author> A. Valmari. </author> <title> Stubborn Sets for Reduced State Space Generation. </title> <booktitle> In Advances in Petri Nets 1990, volume 483 of Lecture Notes in Computer Science, </booktitle> <pages> pages 491-515. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year> <month> 13 </month>
Reference-contexts: Partial order semantics described in [Maz88] for the composition of concurrent processes group equivalent interleavings of concurrent events together into traces. It has been shown that sometimes it suffices to explore just one representative interleaving from each trace for verifying temporal logic properties <ref> [Val91, Pel93, GW94] </ref>. Consequently, during state space exploration, in each state it suffices to search an ample subset of enabled transitions, rather than all of them, leading to significant reduction in the explored state space for some asynchronous protocols [God96, HP94]. <p> For automatic implementation of our method, ample sets have to be computed automatically in a symbolic setting. In Section 3, we present a symbolic version of a known algorithm for computing ample sets. 2 Partial Order Reduction for Breadth First Search In <ref> [Val91, GW94, Pel93] </ref>, partial order reductions are obtained by a modified depth first search of the state space. We generalize their results to get a modified breadth first search algorithm which 2 can then be used to explore the reduced state space symbolically.
References-found: 16

