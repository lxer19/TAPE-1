URL: ftp://cs.mtu.edu/pub/carr/toplas1736.ps.gz
Refering-URL: http://wwwipd.ira.uka.de/~hopp/seminar97.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Improving Data Locality with Loop Transformations  
Author: KATHRYN S. McKINLEY and STEVE CARR CHAU-WEN TSENG 
Keyword: Categories and Subject Descriptors: D.3.4 [Programming Languages]: Processors|compilers; optimization General Terms: Languages, Performance Additional Key Words and Phrases: Cache, compiler optimization, data locality, loop distribution, loop fusion, loop permutation, loop reversal, loop transformations, microprocessors, simulation  
Address: Amherst  College Park  
Affiliation: University of Massachusetts at  Michigan Technological University and  University of Maryland at  
Abstract: In the past decade, processor speed has become significantly faster than memory speed. Small, fast cache memories are designed to overcome this discrepancy, but they are only effective when programs exhibit data locality. In this article, we present compiler optimizations to improve data locality based on a simple yet accurate cost model. The model computes both temporal and spatial reuse of cache lines to find desirable loop organizations. The cost model drives the application of compound transformations consisting of loop permutation, loop fusion, loop distribution, and loop reversal. We demonstrate that these program transformations are useful for optimizing many programs. To validate our optimization strategy, we implemented our algorithms and ran experiments on a large collection of scientific programs and kernels. Experiments illustrate that for kernels our model and algorithm can select and achieve the best loop structure for a nest. For over 30 complete applications, we executed the original and transformed versions and simulated cache hit rates. We collected statistics about the inherent characteristics of these programs and our ability to improve their data locality. To our knowledge, these studies are the first of such breadth and depth. We found performance improvements were difficult to achieve because benchmark programs typically have high hit rates even for small data caches; however, our optimizations significantly improved several programs. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abu-Sufah, W. </author> <year> 1979. </year> <title> Improving the performance of virtual memory computers. </title> <type> Ph.D. thesis, </type> <institution> Dept. of Computer Science, Univ. of Illinois at Urbana-Champaign. </institution>
Reference: <author> Allen, J. R. and Kennedy, K. </author> <year> 1984. </year> <title> Automatic loop interchange. </title> <booktitle> In Proceedings of the SIG-PLAN '84 Symposium on Compiler Construction. ACM, </booktitle> <address> New York. </address>
Reference: <author> Allen, J. R. and Kennedy, K. </author> <year> 1987. </year> <title> Automatic translation of Fortran programs to vector form. </title> <journal> ACM Trans. on Program. Lang. Syst. </journal> <volume> 9, 4 (Oct.), </volume> <pages> 491-542. </pages>
Reference: <author> Banerjee, U. </author> <year> 1990. </year> <title> A theory of loop permutations. In Languages and Compilers for Parallel Computing, </title> <editor> D. Gelernter, A. Nicolau, and D. Padua, Eds. </editor> <publisher> The MIT Press, </publisher> <address> Cambridge, Mass., </address> <pages> 54-74. </pages>
Reference: <author> Callahan, D., Carr, S., and Kennedy, K. </author> <year> 1990. </year> <title> Improving register allocation for subscripted variables. </title> <booktitle> In Proceedings of the SIGPLAN '90 Conference on Programming Language Design and Implementation. ACM, </booktitle> <address> New York. </address>
Reference: <author> Callahan, D., Cocke, J., and Kennedy, K. </author> <year> 1988. </year> <title> Estimating interlock and improving balance for pipelined machines. </title> <journal> J. Parall. Distrib. Comput. </journal> <volume> 5, 4 (Aug.), </volume> <pages> 334-358. </pages>
Reference: <author> Carr, S. </author> <year> 1992. </year> <title> Memory-hierarchy management. </title> <type> Ph.D. thesis, </type> <institution> Dept. of Computer Science, Rice Univ., Houston, Tex. </institution>
Reference: <author> Carr, S. and Kennedy, K. </author> <year> 1994a. </year> <title> Improving the ratio of memory operations to floating-point operations in loops. </title> <journal> ACM Trans. on Program. Lang. Syst. </journal> <volume> 16, 6 (Nov.), </volume> <pages> 1769-1810. </pages>
Reference: <author> Carr, S. and Kennedy, K. </author> <year> 1994b. </year> <title> Scalar replacement in the presence of conditional control flow. </title> <journal> Softw. Prac. Exper. </journal> <volume> 24, 1 (Jan.), </volume> <pages> 51-77. </pages>
Reference: <author> Carr, S. and Wu, Q. </author> <year> 1995. </year> <title> An analysis of loop permutation on the HP PA-RISC. </title> <type> Tech. Rep. </type> <institution> TR95-03, Michigan Technological Univ., Houghton, Mich. </institution> <month> Feb. </month>
Reference: <author> Coleman, S. and McKinley, K. S. </author> <year> 1995. </year> <title> Tile size selection using cache organization and data layout. </title> <booktitle> In Proceedings of the SIGPLAN '95 Conference on Programming Language Design and Implementation. ACM, </booktitle> <address> New York. </address>
Reference: <author> Cooper, K., Hall, M. W., Hood, R. T., Kennedy, K., McKinley, K. S., Mellor-Crummey, J. M., Torczon, L., and Warren, S. K. </author> <year> 1993. </year> <title> The ParaScope parallel programming environment. </title> <booktitle> Proc. IEEE 81, </booktitle> <month> 2 (Feb.), </month> <pages> 244-263. </pages>
Reference: <author> Cooper, K., Hall, M. W., and Kennedy, K. </author> <year> 1993. </year> <title> A methodology for procedure cloning. </title> <journal> Comput. Lang. </journal> <volume> 19, 2 (Feb.), </volume> <pages> 105-117. </pages>
Reference: <author> Ferrante, J., Sarkar, V., and Thrash, W. </author> <year> 1991. </year> <title> On estimating and enhancing cache effectiveness. </title> <booktitle> In Languages and Compilers for Parallel Computing, 4th International Workshop, </booktitle> <editor> U. Banerjee, D. Gelernter, A. Nicolau, and D. Padua, Eds. </editor> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 328-343. </pages>
Reference: <author> Gannon, D., Jalby, W., and Gallivan, K. </author> <year> 1988. </year> <title> Strategies for cache and local memory management by global program transformation. </title> <journal> J. Parall. Distrib. Comput. </journal> <volume> 5, 5 (Oct.), </volume> <pages> 587-616. </pages>
Reference: <author> Goff, G., Kennedy, K., and Tseng, C. </author> <year> 1991. </year> <title> Practical dependence testing. </title> <booktitle> In Proceedings of the SIGPLAN '91 Conference on Programming Language Design and Implementation. ACM, </booktitle> <address> New York. </address>
Reference: <author> Hall, M. W., Kennedy, K., and McKinley, K. S. </author> <year> 1991. </year> <title> Interprocedural transformations for parallel code generation. </title> <booktitle> In Proceedings of Supercomputing '91. IEEE, </booktitle> <address> New York. </address>
Reference: <author> Irigoin, F. and Triolet, R. </author> <year> 1988. </year> <title> Supernode partitioning. </title> <booktitle> In Proceedings of the Fifteenth Annual ACM Symposium on the Principles of Programming Languages. ACM, </booktitle> <address> New York. </address>
Reference: <author> Kennedy, K. and McKinley, K. S. </author> <year> 1992. </year> <title> Optimizing for parallelism and data locality. </title> <booktitle> In Proceedings of the 1992 ACM International Conference on Supercomputing. ACM, </booktitle> <address> New York. </address>
Reference: <author> Kennedy, K. and McKinley, K. S. </author> <year> 1993. </year> <title> Maximizing loop parallelism and improving data locality via loop fusion and distribution. In Languages and Compilers for Parallel Computing, </title> <editor> U. Banerjee, D. Gelernter, A. Nicolau, and D. Padua, Eds. </editor> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 301-321. </pages>
Reference: <author> Kennedy, K., McKinley, K. S., and Tseng, C. </author> <year> 1993. </year> <title> Analysis and transformation in an interactive parallel programming tool. </title> <journal> Concurrency: Prac. Exper. </journal> <volume> 5, 7 (Oct.), </volume> <pages> 575-602. </pages>
Reference: <author> Kuck, D., Kuhn, R., Padua, D., Leasure, B., and Wolfe, M. J. </author> <year> 1981. </year> <title> Dependence graphs and compiler optimizations. </title> <booktitle> In Conference Record of the 8th Annual ACM Symposium on the Principles of Programming Languages. ACM, </booktitle> <address> New York. </address> <note> 32 McKinley, et al. </note>
Reference: <author> Lam, M., Rothberg, E., and Wolf, M. E. </author> <year> 1991. </year> <title> The cache performance and optimizations of blocked algorithms. </title> <booktitle> In Proceedings of the 4th International Conference on Architectural Support for Programming Languages and Operating Systems. ACM, </booktitle> <address> New York. </address>
Reference: <author> Li, W. and Pingali, K. </author> <year> 1992. </year> <title> Access normalization: Loop restructuring for NUMA compilers. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems. ACM, </booktitle> <address> New York. </address>
Reference: <author> McKinley, K. S. </author> <year> 1992. </year> <title> Automatic and interactive parallelization. </title> <type> Ph.D. thesis, </type> <institution> Dept. of Computer Science, Rice Univ., Houston, Tex. </institution>
Reference: <author> Warren, J. </author> <year> 1984. </year> <title> A hierachical basis for reordering transformations. </title> <booktitle> In Conference Record of the Eleventh Annual ACM Symposium on the Principles of Programming Languages. ACM, </booktitle> <address> New York. </address>
Reference: <author> Wolf, M. E. </author> <year> 1992. </year> <title> Improving locality and parallelism in nested loops. </title> <type> Ph.D. thesis, </type> <institution> Dept. of Computer Science, Stanford Univ., Stanford, Calif. </institution>
Reference: <author> Wolf, M. E. and Lam, M. </author> <year> 1991. </year> <title> A data locality optimizing algorithm. </title> <booktitle> In Proceedings of the SIGPLAN '91 Conference on Programming Language Design and Implementation. ACM, </booktitle> <address> New York. </address>
Reference: <author> Wolfe, M. J. </author> <year> 1986. </year> <title> Advanced loop interchanging. </title> <booktitle> In Proceedings of the 1986 International Conference on Parallel Processing. </booktitle> <publisher> CRC Press, </publisher> <address> Boca Raton, Flor. </address>
Reference: <author> Wolfe, M. J. </author> <year> 1987. </year> <title> Iteration space tiling for memory hierarchies. </title> <booktitle> In Proceedings of the 3rd SIAM Conference on Parallel Processing. </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, Penn. </address>
Reference: <author> Wolfe, M. J. </author> <year> 1991. </year> <title> The Tiny loop restructuring research tool. </title> <booktitle> In Proceedings of the 1991 International Conference on Parallel Processing. </booktitle> <publisher> CRC Press, </publisher> <address> Boca Raton, </address> <note> Flor. Received August 1995, revised January 1996, accepted March 1996 </note>
References-found: 31

