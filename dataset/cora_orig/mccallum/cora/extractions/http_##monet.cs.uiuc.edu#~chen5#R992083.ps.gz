URL: http://monet.cs.uiuc.edu/~chen5/R992083.ps.gz
Refering-URL: http://monet.cs.uiuc.edu/~chen5/
Root-URL: http://www.cs.uiuc.edu
Email: chen5@cs.uiuc.edu, klara@cs.uiuc.edu  
Title: Feedback Consolidation and Timeout Algorithms for Point-to-Multipoint ABR Service  
Author: Hung-Shiun Alex Chen, Klara Nahrstedt 
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: The "wait-for-all" feedback consolidation algorithm avoids consolidation noise, but suffers from a slow transient response. Probabilistic Aggregation and Fast Overload Indication techniques have been proposed to preserve the advantages of the "wait-for-all" algorithm and improve its slow transient response. However, these techniques introduce a new "threshold setting" problem. We developed a new consolidation algorithm to provide a fast transient response, a low consolidation noise and flexibility in determining the threshold. In addition, we developed a dynamic timeout mechanism to handle the non-responsive branches where the membership within a multicast session changes due to frequent joining/leaving of members (leaves). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Jiang, E. W. Zegura, and M. H. Ammar, </author> <title> "Improved Consolidation Algorithms for Point-to-Multipoint ABR Service," </title> <booktitle> Proceedings of ATM'98 Workshop, </booktitle> <month> May </month> <year> 1998. </year>
Reference-contexts: It is called the consolidation noise problem. Among all previous proposed consolidation schemes, the "wait-for-all" scheme [5] avoids consolidation noise by collecting feedbacks from all branches before sending a BRM to the source, but suffers from a slow transient response. Jiang et al. <ref> [1] </ref> propose a probabilistic aggregation technique to modify the "wait-for-all" algorithm to improve its slow transient response. Fahmy et al. [2] argue that an overload condition should be immediately reported to the source without the need to wait for feedbacks from all branches. <p> The paper is outlined as follows: Section 2 describes the related work about the feedback consolidation algorithm. Section 3 introduces the probabilistic consolidation algorithm which is an extension of the algorithm presented in <ref> [1, 2] </ref> to achieve fast transient response for network overload situation and reduce the consolidation noise. Section 4 presents a timeout mechanism to handle the non-responsive branches. Section 5 presents the integrated feedback consolidation algorithm with timeout mechanism. All algorithms are simulated and analyzed in Section 6. <p> The algorithm results in a slow adjustment of source rate due to its "wait-for-all" scheme. Note that a timeout mechanism is required to avoid BRM cell flow stop in the case of non-responsive branches. Jiang et al. <ref> [1] </ref> propose a probabilistic aggregation technique to modify the "wait-for-all" algorithm to improve its slow transient response. The difference is that the branch point may send an extra BRM cell with a probability p before feedbacks from all downstream branches are received. <p> Let denote the ratio of the current collected minimum explicit rate and the rate indicated in the last returned BRM cell. Figure 2 (a) shows the probability p function (a step function) to send an extra BRM cell as defined by Fahmy et al. in [2]. Jiang et al. <ref> [1] </ref> present a fixed probability function with value P K over interval (0,1) to send an extra BRM cell as shown in Figure 2 (b). <p> In this section, we assume that the timeout mechanism is not implemented in the consolidation algorithm. In Section 5, we will integrate the timeout mechanism to the consolidation scheme which is required for the modified "wait-for-all" scheme family, but is not explicitly supported by the existing schemes in <ref> [1, 2, 5] </ref>. 3.1.2 Algorithm Design Three registers, MER, MCI, as well as LER, and M counters (M is the number of output ports at this branch point), called BRM Recv counters, are maintained for each multicast connection. <p> In the results that follow, "Jiang" denotes Jiang's algorithm <ref> [1] </ref>; "Fahmy" denotes Fahmy's Feedback Consolidation and Timeout Algorithms for Point-to-Multipoint ABR Service (H-S. A. Chen) 13 algorithm [2]; and "Chen" denotes our algorithm. <p> We developed a hybrid approach to span the speed-overhead spectrum. We also developed a dynamic timeout algorithm to handle the "non-responsive" branches in case the membership of a multicast connection changes dynamically. Through a set of simulations, we compared the performance of our new algorithms with Jiang's <ref> [1] </ref> and Fahmy's [2] algorithms. Our measurements consistently showed that our consolidation algorithm reached the target rate as fast (and often faster) as any of the other schemes which we compared with. In addition, our consolidation algorithm provided a flexibility in determining the threshold.
Reference: [2] <author> S. Fahmy, R. Jain, R. Goyal, B. Vandalore, S. Kalyanaraman, S. Kota, and P. Samudra, </author> <title> "Feedback Consolidation Algorithms for ABR Point-to-Multipoint Connections in ATM Networks," </title> <booktitle> Proceedings of IEEE INFOCOM 1998, </booktitle> <month> March </month> <year> 1998. </year>
Reference-contexts: Jiang et al. [1] propose a probabilistic aggregation technique to modify the "wait-for-all" algorithm to improve its slow transient response. Fahmy et al. <ref> [2] </ref> argue that an overload condition should be immediately reported to the source without the need to wait for feedbacks from all branches. Both algorithms use a threshold 2 to determine if an extra RM cell should be generated. However, determining the threshold is a tricky problem. <p> The paper is outlined as follows: Section 2 describes the related work about the feedback consolidation algorithm. Section 3 introduces the probabilistic consolidation algorithm which is an extension of the algorithm presented in <ref> [1, 2] </ref> to achieve fast transient response for network overload situation and reduce the consolidation noise. Section 4 presents a timeout mechanism to handle the non-responsive branches. Section 5 presents the integrated feedback consolidation algorithm with timeout mechanism. All algorithms are simulated and analyzed in Section 6. <p> Note that the branch point may send an extra BRM cell only if the rate indicated in the last received BRM cell is smaller than the minimum of all reported explicit rates since the return of the last BRM cell. Fahmy et al. <ref> [2] </ref> argue that an overload condition should be immediately reported to the source without the need to wait for feedbacks from all branches. <p> In our algorithm, we modify the "wait-for-all" scheme to send an extra BRM cell with a probability p which is a function of the current collected minimum explicit rate and the rate indicated in the last returned BRM cell. The overload condition definition (as given in <ref> [2] </ref>) specifies that the current collected minimum explicit rate is less than the explicit rate in the last returned BRM cell times a predefined threshold, say oe. Note that oe is a value between 0 and 1. <p> Let denote the ratio of the current collected minimum explicit rate and the rate indicated in the last returned BRM cell. Figure 2 (a) shows the probability p function (a step function) to send an extra BRM cell as defined by Fahmy et al. in <ref> [2] </ref>. Jiang et al. [1] present a fixed probability function with value P K over interval (0,1) to send an extra BRM cell as shown in Figure 2 (b). <p> The main idea behind our algorithm presented next is that the slow transient response problem should be avoided when an overload situation has been detected <ref> [2] </ref>. Figure 2 (c) shows the probability function p in our algorithm. Our algorithm always sends an extra BRM cell if an overload condition is detected ( &lt; oe). <p> In this section, we assume that the timeout mechanism is not implemented in the consolidation algorithm. In Section 5, we will integrate the timeout mechanism to the consolidation scheme which is required for the modified "wait-for-all" scheme family, but is not explicitly supported by the existing schemes in <ref> [1, 2, 5] </ref>. 3.1.2 Algorithm Design Three registers, MER, MCI, as well as LER, and M counters (M is the number of output ports at this branch point), called BRM Recv counters, are maintained for each multicast connection. <p> We do not assume that a specific rate allocation algorithm is used in the switch. In the algorithm presented next, similar to the approach used in <ref> [2] </ref>, a rate allocation algorithm is employed immediately before sending a BRM on the link to ensure that most recent feedback information is sent. A random number generator is used to get a random number between 0 and 1. Figure 3 shows the procedures of our feedback consolidation algorithm. <p> In the results that follow, "Jiang" denotes Jiang's algorithm [1]; "Fahmy" denotes Fahmy's Feedback Consolidation and Timeout Algorithms for Point-to-Multipoint ABR Service (H-S. A. Chen) 13 algorithm <ref> [2] </ref>; and "Chen" denotes our algorithm. Throughout our experiments, the following parameter values are used: * All links have a bandwidth of 150 Mbps. * All point-to-multipoint traffic flows from the root to the leaves of the tree. <p> We also developed a dynamic timeout algorithm to handle the "non-responsive" branches in case the membership of a multicast connection changes dynamically. Through a set of simulations, we compared the performance of our new algorithms with Jiang's [1] and Fahmy's <ref> [2] </ref> algorithms. Our measurements consistently showed that our consolidation algorithm reached the target rate as fast (and often faster) as any of the other schemes which we compared with. In addition, our consolidation algorithm provided a flexibility in determining the threshold.
Reference: [3] <author> L. Roberts. </author> <title> "Rate Based Algorithm for Point to multipoint ABR Service," ATM Forum Contribution 94-0772, </title> <year> 1994. </year>
Reference-contexts: In Appendix, Table 2, 3, 4 show ABR parameter descriptions, the RM cell fields, and various notation used in the consolidation and timeout algorithms; in addition, two algorithms, consolidation algorithm without timeout mechanism and integrated consolidation algorithm with timeout mechanism, are presented. 2 Related Work First, Roberts <ref> [3] </ref> proposes that a BRM cell is returned from the branch point whenever a forward RM (FRM) cell is received. The explicit rate in the returned BRM cell is the minimum of the values indicated by the received BRM cells since the return of the last BRM cell. <p> The algorithm exhibits a very fast transient response. However, it suffers from severe consolidation noise problems due to inaccurate feedback. Tzeng and Siu [4] present an algorithm that remedies some of the inaccuracy problems in <ref> [3] </ref>. The change is that a BRM cell will not return to the source until (1) it receives an FRM cell and (2) at least one BRM cell has been received from a branch since the return of the last BRM cell. The explicit rate calculation is the same as [3]. <p> <ref> [3] </ref>. The change is that a BRM cell will not return to the source until (1) it receives an FRM cell and (2) at least one BRM cell has been received from a branch since the return of the last BRM cell. The explicit rate calculation is the same as [3]. The algorithm of Tzeng and Siu alleviates the unacceptable consolidation noise in [3], but it pays the price to have a slower transient response than in Robert's scheme. <p> The explicit rate calculation is the same as <ref> [3] </ref>. The algorithm of Tzeng and Siu alleviates the unacceptable consolidation noise in [3], but it pays the price to have a slower transient response than in Robert's scheme.
Reference: [4] <author> H. Y. Tzeng and K. Y. Siu, </author> <title> "On Max-Min Fair Congestion Control for Multicast ABR Service in ATM," </title> <journal> IEEE Journal of Selected Areas in Communication, </journal> <month> April </month> <year> 1997. </year>
Reference-contexts: The algorithm exhibits a very fast transient response. However, it suffers from severe consolidation noise problems due to inaccurate feedback. Tzeng and Siu <ref> [4] </ref> present an algorithm that remedies some of the inaccuracy problems in [3]. <p> This returned BRM cell carries the minimum of the peak cell rate (PCR) and all explicit rates reported from the downstream branches since the return of the last BRM cell. This algorithm has a reasonable transient response as in <ref> [4] </ref>, and still suffers from the consolidation noise problem. Feedback Consolidation and Timeout Algorithms for Point-to-Multipoint ABR Service (H-S. A.
Reference: [5] <author> W. Ren, K. Y. Siu, and H. Suzuki, </author> <title> "On the Performance of Congestion Control Algorithms for Multicast ABR Service in ATM," </title> <booktitle> Proc. of IEEE ATM'96, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: It is called the consolidation noise problem. Among all previous proposed consolidation schemes, the "wait-for-all" scheme <ref> [5] </ref> avoids consolidation noise by collecting feedbacks from all branches before sending a BRM to the source, but suffers from a slow transient response. Jiang et al. [1] propose a probabilistic aggregation technique to modify the "wait-for-all" algorithm to improve its slow transient response. <p> The explicit rate calculation is the same as [3]. The algorithm of Tzeng and Siu alleviates the unacceptable consolidation noise in [3], but it pays the price to have a slower transient response than in Robert's scheme. Ren et al. <ref> [5] </ref> argue that instead of generation of BRM cells in a branch point, a branch point simply passes the received BRM cells after modifying the contents to avoid the RM cell processing overhead. <p> This algorithm has a reasonable transient response as in [4], and still suffers from the consolidation noise problem. Feedback Consolidation and Timeout Algorithms for Point-to-Multipoint ABR Service (H-S. A. Chen) 4 The algorithm "wait-for-all" <ref> [5] </ref> aims to eliminate the consolidation noise, that is, a branch point returns a BRM cell only after receiving BRM cells from all downstream branches since the return of the last BRM cell. The algorithm results in a slow adjustment of source rate due to its "wait-for-all" scheme. <p> In this section, we assume that the timeout mechanism is not implemented in the consolidation algorithm. In Section 5, we will integrate the timeout mechanism to the consolidation scheme which is required for the modified "wait-for-all" scheme family, but is not explicitly supported by the existing schemes in <ref> [1, 2, 5] </ref>. 3.1.2 Algorithm Design Three registers, MER, MCI, as well as LER, and M counters (M is the number of output ports at this branch point), called BRM Recv counters, are maintained for each multicast connection.
Reference: [6] <author> L. Roberts, </author> <title> "Enhanced PRCA (proportional rate-control algorithm)," ATM Forum Contribution 94-0735R1, </title> <month> August </month> <year> 1994. </year>
Reference-contexts: Two temporary variables and oe are used to represent the ratio and overload threshold as described above. Several algorithms have been proposed to calculate the explicit rate in RM cells based on load at each port, for example, EPRCA <ref> [6] </ref> and ERICA [7]. We do not assume that a specific rate allocation algorithm is used in the switch.
Reference: [7] <author> R. Jain, S. Kalyanaraman, R. Goyal, S. Fahmy, and R. Viswanathan, </author> <title> "ERICA Switch Algorithm: A Complete Description," ATM Forum/96-1172, </title> <month> August </month> <year> 1996. </year>
Reference-contexts: Two temporary variables and oe are used to represent the ratio and overload threshold as described above. Several algorithms have been proposed to calculate the explicit rate in RM cells based on load at each port, for example, EPRCA [6] and ERICA <ref> [7] </ref>. We do not assume that a specific rate allocation algorithm is used in the switch.
Reference: [8] <author> X. Zhang, K. G. Shin, D. Saha, and D. </author> <title> Kandlur "Scalable Flow Control for Multicast ABR Services, Part I: Algorithms and Modeling," </title> <note> Submitted to IEEE INFOCOM'99, </note> <month> July </month> <year> 1998. </year>
Reference-contexts: A. Chen) 3 For the "wait-for-all" algorithm family, a non-responsive branch will prevent the branch point from sending the BRM cells upstream. Therefore, a timeout mechanism must be developed in a branch point to handle the non-responsive branches. A static timeout scheme presented by Zhang et al. <ref> [8] </ref> is not appropriate for the multicast tree where the leaves are located in various distances to a branch point and the membership dynamically changes due to joining/leaving of leaves. We design a dynamic timeout scheme which also scales to very large multicast trees. <p> A random number generator is used to get a random number between 0 and 1. Figure 3 shows the procedures of our feedback consolidation algorithm. The algorithm, written in pseudo-code, is presented in Appendix. 4 The Timeout Scheme for Non-responsive Branches Zhang et al. <ref> [8] </ref> propose to use a predetermined threshold counter N nrt and a variable no resp timer which is initialized to N nrt . Each time when a branch point receives an FRM cell, the multicast connection's no resp timer is decreased by one. <p> ff)(N F RM fi fi) (3) where ff (0 &lt; ff &lt; 1) is a smoothing factor that determines how much weight is given to the old value, and fi (fi &gt; 1) is a scaling factor as used in Equation 1. 4.3 Simplification In comparison with the Zhang algorithm <ref> [8] </ref>, the number of the timeout values (N nrt ) and tracking variables (no resp timer) used in our algorithm is N branches times to the one of Zhang algorithm, where N branches is the number of branches in this switch.
Reference: [9] <author> ATM Forum, </author> <title> "ATM User-Network Interface (UNI) Signaling Specification Version 4.0,", </title> <month> July </month> <year> 1996. </year>
Reference: [10] <author> ATM Forum, </author> <title> "ATM Traffic Management Specification Version 4.0,", </title> <month> April </month> <year> 1996. </year>
Reference-contexts: To calculate the timeout value, T imeout d , of a newly joining branch of the nearest switch, we use the following parameters, FRTT, Trm, Nrm, and ICR (see Table 2). The units of the FRTT, Trm, and ICR parameters are microseconds, milliseconds, cell/second <ref> [10] </ref>. T imeout d = d F RT T min (T rm; Nrm e fi fi (1) where fi is a scaling factor and fi &gt; 1. We simply choose fi to be 2.
References-found: 10

