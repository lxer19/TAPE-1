URL: http://www.cs.ucla.edu/~kyan/paperDir/QuadPlace.ps.gz
Refering-URL: http://www.cs.ucla.edu/~kyan/pub.html
Root-URL: http://www.cs.ucla.edu
Title: Quadratic Placement Revisited  
Author: C. J. Alpert T. Chan D. J.-H. Huang, I. Markov and K. Yan 
Address: Los Angeles, CA 90095-1596  Los Angeles, CA 90095-1555  Austin, TX 78758  
Affiliation: UCLA Computer Science Dept.,  UCLA Mathematics Dept.,  IBM Austin Research Laboratory,  
Abstract: The quadratic placement methodology is rooted in [6] [14] [16] and is reputedly used in many commercial and in-house tools for placement of standard-cell and gate-array designs. The methodology iterates between two basic steps: solving sparse systems of linear equations, and repartitioning. This work dissects the implementation and motivations for quadratic placement. We first show that (i) Krylov subspace engines for solving sparse systems of linear equations are more effective than the traditional successive over-relaxation (SOR) engine [15] and (ii) order convergence criteria can maintain solution quality while using substantially fewer solver iterations. We then discuss the motivations and relevance of the quadratic placement approach, in the context of past and future algorithmic technology, performance requirements, and design methodology. We provide evidence that the use of numerical linear systems solvers with quadratic wirelength objective may be due to the pre-1990's weakness of min-cut partitioners, i.e., numerical engines were needed to provide helpful hints to min-cut partitioners. Finally, we note emerging methodology drivers in deep-submicron design that may require new placement approaches to the placement problem. 
Abstract-found: 1
Intro-found: 1
Reference: [2] <author> C. J. Alpert and A. B. Kahng, </author> <title> Recent Directions in Netlist Partitioning: A Survey, Integration, </title> <journal> the VLSI Journal, </journal> <month> 19(1-2) </month> <year> (1995), </year> <pages> pp. 1-81. </pages>
Reference-contexts: This func tion can be rewritten as F (x) = 1 2 x T Qx. 1 For a given multipin signal net, the graph edges that represent the net may be constructed in several ways, e.g., a directed star model, an unoriented star model or a clique model (see <ref> [2] </ref> for a review). The resulting weighted graph representation G = (V; E) of the circuit topology has edge weights a ij derived by superposing all derived edges in the obvious manner. <p> In the past few years, significant improvements to FM have been made, primarily in the areas of tie-breaking and multilevel schemes (see <ref> [2] </ref> for a survey). The multilevel approach integrates hierarchical clustering into FM, generalizing the early two-phase approach (e.g., [5]). The recent work of [1] developed a multilevel partitioner that reports outstanding solution quality with respect to many other methods in the literature.
Reference: [3] <author> C. J. Alpert, T. Chan, D. J.-H. Huang, I. Markov and K. Yan, </author> <title> Quadratic Placement Revisited, </title> <type> Technical Report #970012, </type> <institution> UCLA Computer Science Dept., </institution> <month> March </month> <year> 1997. </year>
Reference-contexts: The behavior observed with golem3 is similar to that observed with case3 and avq large (see <ref> [3] </ref> for the complete set of experiments). Both avq large and golem3 are available from http://www.cbl.ncsu.edu (the CAD Benchmarking Laboratory). <p> We have also observed that not only do the cutsizes remain similar from iterate to iterate, but the solutions themselves do not vary significantly (see <ref> [3] </ref> for more details, including data showing Hamming distances for various pairs of partitioning solutions). runs of ML-FM using the iterate as a pre-seed.
Reference: [4] <author> R. Barret, M. Berry, T. </author> <title> Chan et al Templates for the Solution of Linear Systems: Building Blocks for Iterative Methods, </title> <note> SIAM 1995, http://netlib2.cs.utk.edu/linalg/html templates/ Templates.html </note>
Reference-contexts: We now review experiments with iterative solvers such as Successive Over-relaxation (SOR/SSOR), BiConju-gate Gradient Stabilized (BiCGS) and others (see <ref> [4] </ref>) showing that the commonly used SOR/SSOR methods (developed in the early 1950's) are not the best available now. <p> and recorded number of iterations as well as CPU usage. 2 We find that BiConjugate Gradient Stabilized (BiCGS) is among the best solvers; though it does not guarantee convergence, the method is good even for degenerate (not necessarily symmetric) matrices and in our experience provides more robust convergence 2 See <ref> [4] </ref> for pseudocodes of solvers and preconditioners that we used and their efficiency comparisons; see [10] for theoretical analyses. A brief review of the relevant numerical methods is as follows. Iterative methods for solving large systems of linear equations can be classified as stationary or non-stationary.
Reference: [5] <author> T. Bui, C. Heigham, C. Jones and T. Leighton, </author> <title> Improving the Performance of the Kernighan-Lin and Simulated Annealing Graph Bisection Algorithms, </title> <booktitle> DAC (1989) pp. </booktitle> <pages> 775-778. </pages>
Reference-contexts: In the past few years, significant improvements to FM have been made, primarily in the areas of tie-breaking and multilevel schemes (see [2] for a survey). The multilevel approach integrates hierarchical clustering into FM, generalizing the early two-phase approach (e.g., <ref> [5] </ref>). The recent work of [1] developed a multilevel partitioner that reports outstanding solution quality with respect to many other methods in the literature. We have obtained this partitioning code and integrated it into our testbed.
Reference: [6] <author> C. K. Cheng and E. S. Kuh. </author> <title> Module Placement Based on Resistive Network Optimization, </title> <journal> IEEE Trans. on CAD 3 (1984), </journal> <pages> pp. 218225. </pages>
Reference-contexts: Due to its speed and global perspective, the so-called quadratic placement technique has received a great deal of attention throughout its development by such authors as Wipfler et al. [16], Fukunaga et al. [9], Cheng and Kuh <ref> [6] </ref>, Tsay and Kuh [15] and others. Indeed, quadratic placement is reputedly an approach that has been used within commercial tools for placement of standard-cell and gate-array designs. 1 This work was supported by a grant from Cadence Design Systems Inc. <p> fi c linear system F (x) = Q cc x c + Q c f x f = 0 which can be rewritten as Q cc x c = Q c f x f (1) This development is similar to that of other force-directed or resistive network analogies (see, e.g., <ref> [6] </ref> [9] [13] [16]). The essential tradeoff relaxes discrete slot constraints and changes the true linear wirelength objective into a squared wirelength objective, in order to obtain a continuous quadratic minimization for which a global optimum can be found. <p> The second and more widely-used approach is partitioning: the global placement result is used to derive a horizontal or vertical cut in the layout, and the continuous squared-wirelength optimization is recursively applied to the resulting subproblems (see <ref> [6, 12, 13, 16] </ref>). The main difficulty is making partitioning decisions on the extremely overlapped modules in the middle of the layout (see Figure 1). The obvious median-based partitioning (find the median module and use it as a pivot) is sensitive to numerical convergence criteria.
Reference: [7] <author> H. C. Elman, M. P. Chernesky, </author> <title> Ordering Effects on Relaxation Methods Applied to The Discrete One-Dimensional Convection-Diffusion Equation, </title> <note> SIAM J. Numer. Anal., 30(5) (1993), pp.1268-1290. </note>
Reference: [8] <author> C. M. Fiduccia and R. M. Mattheyses, </author> <title> A Linear Time Heuristic for Improving Network Partitions, </title> <booktitle> DAC (1982), </booktitle> <pages> pp. 175-181. </pages>
Reference-contexts: that for small enough e &gt; 0, there will be a fourth period of Final Convergence in which the order becomes constant. 5.2 Interaction with the Partitioner We analyzed SOR iterates for each of our test cases by sorting the coordinates and then inducing initial solutions for a Fiduccia-Mattheyses (FM) <ref> [8] </ref> min-cut partitioner. Our experimental procedure was as follows. (1) Initial solutions were induced by pre-seeding some percentage of leftmost and rightmost vertices in the ordering into the initial left and right partitions, respectively. Remaining vertices were assigned randomly into the initial left and right partitions.
Reference: [9] <author> K. Fukunaga, S. Yamada, H. S. Stone, and T. Kasai, </author> <title> Placement of Circuit Modules Using a Graph Space Approach, </title> <booktitle> Proc. 20th ACM/IEEE Design Automation Conference, </booktitle> <year> (1983), </year> <pages> pp. 465471. </pages>
Reference-contexts: Due to its speed and global perspective, the so-called quadratic placement technique has received a great deal of attention throughout its development by such authors as Wipfler et al. [16], Fukunaga et al. <ref> [9] </ref>, Cheng and Kuh [6], Tsay and Kuh [15] and others. Indeed, quadratic placement is reputedly an approach that has been used within commercial tools for placement of standard-cell and gate-array designs. 1 This work was supported by a grant from Cadence Design Systems Inc. <p> c linear system F (x) = Q cc x c + Q c f x f = 0 which can be rewritten as Q cc x c = Q c f x f (1) This development is similar to that of other force-directed or resistive network analogies (see, e.g., [6] <ref> [9] </ref> [13] [16]). The essential tradeoff relaxes discrete slot constraints and changes the true linear wirelength objective into a squared wirelength objective, in order to obtain a continuous quadratic minimization for which a global optimum can be found. <p> Two approaches have been used to obtain a feasible placement from a global placement. The first approach is based on assignment, either in one step (to the entire 2-dimensional array of slots) or in two steps (to rows, and then to slots within rows) <ref> [9] </ref>. The second and more widely-used approach is partitioning: the global placement result is used to derive a horizontal or vertical cut in the layout, and the continuous squared-wirelength optimization is recursively applied to the resulting subproblems (see [6, 12, 13, 16]).
Reference: [10] <author> W. Hackbush, </author> <title> Iterative Solution of Large Sparse Systems Springer Verlag, </title> <year> 1994. </year>
Reference-contexts: The theory of iterative methods shows that the number of iterations needed to obtain a good approximation in norm depends on the spectrum of the matrix involved <ref> [10] </ref>. Hence, the idea of a preconditioner a way to transform the original system to an equivalent one with improved spectrum. <p> Gradient Stabilized (BiCGS) is among the best solvers; though it does not guarantee convergence, the method is good even for degenerate (not necessarily symmetric) matrices and in our experience provides more robust convergence 2 See [4] for pseudocodes of solvers and preconditioners that we used and their efficiency comparisons; see <ref> [10] </ref> for theoretical analyses. A brief review of the relevant numerical methods is as follows. Iterative methods for solving large systems of linear equations can be classified as stationary or non-stationary. Stationary methods include Jacobi, Gauss-Seidel, Successive Over-relaxation (SOR) and Symmetric Successive Over-relaxation (SSOR).
Reference: [11] <author> L. W. Hagen, D. J.-H. Huang, and A. B. Kahng, </author> <title> Quantified Subop-timality of VLSI Layout Heuristics, </title> <booktitle> DAC (1995), </booktitle> <pages> pp. 216-221. </pages>
Reference: [12] <author> J. Kleinhans, G. Sigl, F. Johannes and K. Antreich, GORDIAN: </author> <title> VLSI Placement by Quadratic Programming and Slicing Optimization, </title> <journal> IEEE Trans. on CAD. </journal> <note> 10(3) (1991) pp. 356-365. </note>
Reference-contexts: The second and more widely-used approach is partitioning: the global placement result is used to derive a horizontal or vertical cut in the layout, and the continuous squared-wirelength optimization is recursively applied to the resulting subproblems (see <ref> [6, 12, 13, 16] </ref>). The main difficulty is making partitioning decisions on the extremely overlapped modules in the middle of the layout (see Figure 1). The obvious median-based partitioning (find the median module and use it as a pivot) is sensitive to numerical convergence criteria. <p> The obvious median-based partitioning (find the median module and use it as a pivot) is sensitive to numerical convergence criteria. Thus, iterative improvement is commonly used to refine the resulting partitioning (see, e.g., <ref> [12] </ref>). A typical objective for the iterative improvement is some form of minimum weighted cut. <p> This decreases the size of the solution space and reduces runtime. Alternatively, modules might be left unlocked, but the starting solution constructed to capture extreme module coordinates (see the GORDIAN methodology, for example <ref> [12] </ref>). Hence, * maxD ++ 10 ; 9N k (p k (i))p fl This example (case3) has 12146 cells and 711 I/O pads fixed on four sides of the layout. Modules are concentrated in small regions, and we use this feature to formulate order convergence tests.
Reference: [13] <author> R. H. J. M. Otten, </author> <title> Automatic Floorplan Design, </title> <booktitle> DAC (1982), </booktitle> <pages> pp. 261-267. </pages>
Reference-contexts: linear system F (x) = Q cc x c + Q c f x f = 0 which can be rewritten as Q cc x c = Q c f x f (1) This development is similar to that of other force-directed or resistive network analogies (see, e.g., [6] [9] <ref> [13] </ref> [16]). The essential tradeoff relaxes discrete slot constraints and changes the true linear wirelength objective into a squared wirelength objective, in order to obtain a continuous quadratic minimization for which a global optimum can be found. <p> The second and more widely-used approach is partitioning: the global placement result is used to derive a horizontal or vertical cut in the layout, and the continuous squared-wirelength optimization is recursively applied to the resulting subproblems (see <ref> [6, 12, 13, 16] </ref>). The main difficulty is making partitioning decisions on the extremely overlapped modules in the middle of the layout (see Figure 1). The obvious median-based partitioning (find the median module and use it as a pivot) is sensitive to numerical convergence criteria.
Reference: [14] <author> R. S. Tsay, E. Kuh and C. P. Hsu, Proud: </author> <title> A Sea-Of-Gate Placement Algorithm, </title> <booktitle> IEEE Design & Test of Computers (1988), </booktitle> <pages> pp. 44-56. </pages>
Reference-contexts: We will illustrate our discussion by referring to the PROUD algorithm of Tsay et al. [15] <ref> [14] </ref>. Like other works, PROUD considers the squared wirelength ob jective F (x) = 1 2 x T Qx.
Reference: [15] <author> R. S. Tsay and E. Kuh, </author> <title> A Unified Approach to Partitioning and Placement, </title> <journal> IEEE Trans. on Circuits and Systems, </journal> <volume> 38(5) (1991), </volume> <pages> pp. 521-633. </pages>
Reference-contexts: Due to its speed and global perspective, the so-called quadratic placement technique has received a great deal of attention throughout its development by such authors as Wipfler et al. [16], Fukunaga et al. [9], Cheng and Kuh [6], Tsay and Kuh <ref> [15] </ref> and others. Indeed, quadratic placement is reputedly an approach that has been used within commercial tools for placement of standard-cell and gate-array designs. 1 This work was supported by a grant from Cadence Design Systems Inc. <p> Throughout we use the standard clique model, but we have also obtained similar results for the clique model of <ref> [15] </ref> as well as for a directed star model. 1 Definition: The n fi n Laplacian Q = (q i j ) has entry q i j equal to a i j for i 6= j and diagonal entry q ii equal to n of edge weights incident to vertex v <p> We will illustrate our discussion by referring to the PROUD algorithm of Tsay et al. <ref> [15] </ref> [14]. Like other works, PROUD considers the squared wirelength ob jective F (x) = 1 2 x T Qx. <p> Because the optimal positions of all movable modules in quadratic placement are inside the convex hull spanned by the fixed modules <ref> [15] </ref>, we can consider the minimization problem for F (x) over this convex hull.
Reference: [16] <author> G. J. Wipfler, M. Wiesel and D. A. Mlynski, </author> <title> A Combined Force and Cut Algorithm for Hierarchical VLSI Layout, </title> <booktitle> DAC (1983), </booktitle> <pages> pp. 124-125. </pages>
Reference-contexts: As instance sizes grow larger, move-based (e.g., annealing) methods may be too slow except for detailed placement improvement. Due to its speed and global perspective, the so-called quadratic placement technique has received a great deal of attention throughout its development by such authors as Wipfler et al. <ref> [16] </ref>, Fukunaga et al. [9], Cheng and Kuh [6], Tsay and Kuh [15] and others. Indeed, quadratic placement is reputedly an approach that has been used within commercial tools for placement of standard-cell and gate-array designs. 1 This work was supported by a grant from Cadence Design Systems Inc. <p> system F (x) = Q cc x c + Q c f x f = 0 which can be rewritten as Q cc x c = Q c f x f (1) This development is similar to that of other force-directed or resistive network analogies (see, e.g., [6] [9] [13] <ref> [16] </ref>). The essential tradeoff relaxes discrete slot constraints and changes the true linear wirelength objective into a squared wirelength objective, in order to obtain a continuous quadratic minimization for which a global optimum can be found. <p> The second and more widely-used approach is partitioning: the global placement result is used to derive a horizontal or vertical cut in the layout, and the continuous squared-wirelength optimization is recursively applied to the resulting subproblems (see <ref> [6, 12, 13, 16] </ref>). The main difficulty is making partitioning decisions on the extremely overlapped modules in the middle of the layout (see Figure 1). The obvious median-based partitioning (find the median module and use it as a pivot) is sensitive to numerical convergence criteria.
References-found: 15

