URL: http://dimacs.rutgers.edu/techps/1993/93-37.ps
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1993.html
Root-URL: http://www.cs.rutgers.edu
Email: e-mail: hammer@rutcor.rutgers.edu  e-mail: kogan@rutcor.rutgers.edu  
Title: Propositional Horn Knowledge Bases: Optimal Compression 1  
Author: by Peter L. Hammer and Alexander Kogan 
Address: P.O. Box 5062 New Brunswick, NJ 08903-5062  92 New Street, Newark, NJ 07102  
Affiliation: RUTCOR Rutgers University  RUTCOR and Graduate School of Management Rutgers University  
Note: Quasi-Acyclic  ONR (Grants N00014-92-J1375 and N00014-92-J4083). 2 Permanent member of DIMACS DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 93-37 June 1993 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Angluin. </author> <title> Learning Propositional Horn Sentences With Hints. </title> <type> Technical Report YALE/DCS/RR-590, </type> <institution> Department of Computer Science, Yale University, </institution> <year> 1987. </year>
Reference-contexts: It was proved in [14] that the minimization of Horn functions is NP-complete. Many knowledge bases used in practice possess special structural properties. Among the frequently encountered properties we mention those of acyclicity and of quadraticity (see e.g. <ref> [1, 10, 11, 16] </ref>). In this paper we generalize both of this properties by defining the class of quasi-acyclic Horn functions. The main results of this paper consist of quadratic time algorithms for the recognition and the optimal compression of Horn knowledge bases belonging to this class. <p> all the prime implicates of h, and shall simply call this graph the implicate graph G (h) associated to the definite Horn function h. 5 Acyclic Horn Functions In this section we introduce the concept of acyclic Horn functions, generalizing the class of functions represented by acyclic Horn formulae (see <ref> [1, 10, 16] </ref>), and give an efficient minimization procedure for acyclic Horn functions.
Reference: [2] <author> D. Angluin, M. Frazier, L. Pitt. </author> <title> Learning conjunctions of Horn clauses. </title> <journal> Machine Learning, </journal> <volume> 9(1992), </volume> <pages> 147-164. </pages>
Reference: [3] <author> E. Boros and O. Cepek. </author> <title> Restricted Consensus Method and Quadratic Implicants of Pure Horn Formulas. </title> <type> Unpublished manuscript, </type> <institution> RUTCOR, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <year> 1993. </year>
Reference-contexts: An adaptive algorithm for the construction of all quadratic definite Horn prime implicates, whose worst case computational complexity is also O (nL), is developed in <ref> [3] </ref>. For any Horn function f we shall denote by V r (f ), r 2 f1; : : : ; qg, the strongly connected components of G (H 2 (f )), and define S r (f ) = fi j x i 2 V r (f )g.
Reference: [4] <author> E. Boros, Y. Crama, P.L. Hammer. </author> <title> Polynomial-time inference of all valid implications for Horn and related formulae. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 1(1990), </volume> <pages> 21-32. </pages>
Reference-contexts: function f , the quadratic definite Horn function represented by the CNF H 2 fl (f ) is called the 2-component of f and is denoted by q (f ). - 13 - In order to illustrate the above concepts let us consider the following modification of an example from <ref> [4] </ref>: F (h) = ( i=1 _ _ ^ _ n _ :x i ): F (h) is an irredundant prime CNF of the definite Horn function h.
Reference: [5] <author> E. Charles and O. Dubois. MELODIA: </author> <title> Logical methods for checking knowledge bases. In: Validation, Verification and Test of Knowledge-based Systems, </title> <editor> Eds.: M. Ayel and J.-P. Laurent, </editor> <publisher> Wiley & Sons 1991, </publisher> <pages> 95-105. </pages>
Reference-contexts: 1 Introduction The growing complexity of knowledge incorporated in the modern expert systems has led to a rapid increase in the size of their knowledge bases (see e.g. <ref> [5, 6, 10, 16, 20] </ref>). One consequence of this development is the increase of the response time, due to the dependence of the computational complexity of answering queries on the size of the knowledge base.
Reference: [6] <author> R.M. Colomb and C.Y.C. Chung. </author> <title> Very fast decision table execution of propositional expert systems. </title> <booktitle> Proceedings of the 8th National Conference on Artificial Intelligence (AAAI-90), </booktitle> <year> 1990, </year> <pages> 671-676. </pages>
Reference-contexts: 1 Introduction The growing complexity of knowledge incorporated in the modern expert systems has led to a rapid increase in the size of their knowledge bases (see e.g. <ref> [5, 6, 10, 16, 20] </ref>). One consequence of this development is the increase of the response time, due to the dependence of the computational complexity of answering queries on the size of the knowledge base.
Reference: [7] <author> R. Dechter and J. Pearl. </author> <title> Structure identification in relational data. </title> <journal> Artificial Intelligence, </journal> <volume> 58(1992), </volume> <pages> 237-270. </pages>
Reference: [8] <author> W.F. Dowling and J.H. Gallier. </author> <title> Linear time algorithms for testing the satisfiability of propositional Horn formulae. </title> <journal> Journal of Logic Programming, </journal> <volume> 3(1984), </volume> <pages> 267-284. </pages>
Reference-contexts: Hence, any prime CNF representing a (definite) Horn function is (definite) Horn. It is known that Horn satisfiability problems can be solved in linear time <ref> [8] </ref>.
Reference: [9] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference: [10] <author> A. Ginsberg. </author> <title> Knowledge-base reduction: A new approach to checking knowledge bases for inconsistency & redundancy. </title> <booktitle> Proceedings of the 7th National Conference on Artificial Intelligence (AAAI-88), </booktitle> <year> 1988, </year> <pages> 585-589. </pages>
Reference-contexts: 1 Introduction The growing complexity of knowledge incorporated in the modern expert systems has led to a rapid increase in the size of their knowledge bases (see e.g. <ref> [5, 6, 10, 16, 20] </ref>). One consequence of this development is the increase of the response time, due to the dependence of the computational complexity of answering queries on the size of the knowledge base. <p> It was proved in [14] that the minimization of Horn functions is NP-complete. Many knowledge bases used in practice possess special structural properties. Among the frequently encountered properties we mention those of acyclicity and of quadraticity (see e.g. <ref> [1, 10, 11, 16] </ref>). In this paper we generalize both of this properties by defining the class of quasi-acyclic Horn functions. The main results of this paper consist of quadratic time algorithms for the recognition and the optimal compression of Horn knowledge bases belonging to this class. <p> all the prime implicates of h, and shall simply call this graph the implicate graph G (h) associated to the definite Horn function h. 5 Acyclic Horn Functions In this section we introduce the concept of acyclic Horn functions, generalizing the class of functions represented by acyclic Horn formulae (see <ref> [1, 10, 16] </ref>), and give an efficient minimization procedure for acyclic Horn functions.
Reference: [11] <author> F. Glover and H.J. Greenberg. </author> <title> Logical testing for rule-base management. </title> <journal> Annals of Operations Research, </journal> <volume> 12(1988), </volume> <pages> 199-215. </pages>
Reference-contexts: It was proved in [14] that the minimization of Horn functions is NP-complete. Many knowledge bases used in practice possess special structural properties. Among the frequently encountered properties we mention those of acyclicity and of quadraticity (see e.g. <ref> [1, 10, 11, 16] </ref>). In this paper we generalize both of this properties by defining the class of quasi-acyclic Horn functions. The main results of this paper consist of quadratic time algorithms for the recognition and the optimal compression of Horn knowledge bases belonging to this class. <p> A Boolean function is called quadratic iff among the CNFs representing it there is at least one which is quadratic. Quadratic functions and CNFs have been extensively investigated (for a survey see [15]). In particular, the knowledge bases of quadratic CNFs were recently studied in <ref> [11] </ref>. We shall denote by H 2 (f ) the set of quadratic definite Horn prime implicates of a Horn function f , and by H 2 (f ) the conjunction of all the clauses in H 2 (f ).
Reference: [12] <author> P.L. Hammer and A. Kogan. </author> <title> Horn functions and their DNFs. </title> <journal> Information Processing Letters, </journal> <volume> 44(1992), </volume> <pages> 23-29. </pages>
Reference-contexts: The first sections of the paper introduce the basic concepts, review some of the results on which the paper is built, and provide the technical tools needed for the development of the main results. In Section 2 we introduce the main definitions and review the results of <ref> [12] </ref> which are used in this paper. These results define a canonical decomposition of an arbitrary Horn function into a negative part and a definite Horn one (Theorem 2.5). <p> We characterize all the irredundant prime, as well as all the minimum CNFs of quasi-acyclic Horn functions. A quadratic time minimization algorithm for quasi-acyclic Horn functions follows immediately. 2 Background Information In this section we introduce some basic Boolean terminology and review those results of <ref> [12] </ref> which are used in this paper. <p> It is known that each prime implicate of a negative function is negative, and that each negative function has a unique irredundant and prime CNF, consisting of all the prime implicates of the function. It was shown in <ref> [12] </ref> that each prime implicate of a Horn function is either definite Horn or negative, and each prime implicate of a definite Horn function is definite Horn. Hence, any prime CNF representing a (definite) Horn function is (definite) Horn. <p> Hence, any prime CNF representing a (definite) Horn function is (definite) Horn. It is known that Horn satisfiability problems can be solved in linear time [8]. On this basis an algorithm was given in <ref> [12] </ref> showing that Lemma 2.2 Any Horn CNF can be transformed to an equivalent Horn irredundant prime CNF in time quadratic in the length of the given CNF. 2.3 Definite Horn Components Any Horn CNF consists of a negative part (the conjunction of its negative clauses) and of a definite Horn <p> The uniqueness of the definite Horn component of a Horn function follows directly from the definition. It was shown in <ref> [12] </ref> that the definite Horn component h (f) of an arbitrary Horn function f exists, and that it can be represented as the conjunction of all the definite Horn clauses of an arbitrary prime CNF of f . <p> if F N is an arbitrary negative restriction of a Horn function f , and if F H is the conjunction of all the definite Horn clauses of an arbitrary Horn CNF of f, then the function f admits the representation f = F N V It was shown in <ref> [12] </ref> that the conjunction of all the negative clauses of an arbitrary irredundant and prime CNF of a Horn function f is a negative restriction of f . <p> Therefore, using Lemma 2.2 a negative restriction of a Horn function given by an arbitrary Horn CNF can be constructed efficiently. 2.5 Decomposition of Horn Functions The main result of <ref> [12] </ref> shows that the analysis of the irredundant and prime CNFs of Horn functions can be separated into that one of definite Horn functions and that one of negative restrictions.
Reference: [13] <author> P.L. Hammer and A. Kogan. </author> <title> Horn Function Minimization and Knowledge Compression in Production Rule Bases. </title> <type> RUTCOR Research Report RRR 8-92, </type> <institution> Rutgers University, </institution> <address> New Brunswick, NJ, </address> <month> March </month> <year> 1992. </year> <month> - 22 </month> - 
Reference: [14] <author> P.L. Hammer and A. Kogan. </author> <title> Optimal Compression of Propositional Horn Knowledge Bases: Complexity and Approximation. </title> <type> RUTCOR Research Report RRR 1-93, </type> <institution> Rutgers University, </institution> <address> New Brunswick, NJ, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: Taking into account that a particular knowledge base is just one possible representation of knowledge, interpreted as the set of models of the knowledge base, it was observed in <ref> [14] </ref> that other, logically equivalent, representations of the same knowledge exist, and they can have significantly smaller size. It was remarked in [14] that the production rule V n W m j=1 r j and the clause ( W n W W m j=1 r j ) are logically equivalent, i.e. <p> into account that a particular knowledge base is just one possible representation of knowledge, interpreted as the set of models of the knowledge base, it was observed in <ref> [14] </ref> that other, logically equivalent, representations of the same knowledge exist, and they can have significantly smaller size. It was remarked in [14] that the production rule V n W m j=1 r j and the clause ( W n W W m j=1 r j ) are logically equivalent, i.e. they have the same set of models (satisfying truth assignments). <p> Therefore, we concentrate in this paper on the problem of optimal compression of propositional Horn clause knowledge bases, i.e. the problem of minimizing those Boolean functions, which are given by Horn conjunctive normal forms. It was proved in <ref> [14] </ref> that the minimization of Horn functions is NP-complete. Many knowledge bases used in practice possess special structural properties. Among the frequently encountered properties we mention those of acyclicity and of quadraticity (see e.g. [1, 10, 11, 16]). <p> Therefore, without loss of generality, from now on we shall restrict our attention to Horn functions which do not have unit prime implicates. 2.6 Intractability of Minimization In <ref> [14] </ref> we studied the computational complexity of the Horn Function Minimization Problem Instance: A Horn CNF F and a positive number k. Question: Is there a CNF, containing at most k literals, equivalent to F ? It was proved that Theorem 2.6 The Horn function minimization problem is NP-complete. <p> If such a clause is found, the variable x 0 is included into R, and the search is repeated as many times as possible. The following statements proved in <ref> [14] </ref> characterize the implicates of an arbitrary Horn CNF in terms of the forward chaining procedure.
Reference: [15] <author> P.L Hammer and B. Simeone. </author> <title> Quadratic functions of binary variables. In: Combinatorial Optimization, </title> <editor> Ed.: B. Simeone, </editor> <booktitle> Lecture Notes in Mathematics, </booktitle> <volume> 1403, </volume> <publisher> Springer-Verlag, </publisher> <year> 1989, </year> <pages> 1-56. </pages>
Reference-contexts: A CNF is called quadratic iff all its clauses are quadratic. A Boolean function is called quadratic iff among the CNFs representing it there is at least one which is quadratic. Quadratic functions and CNFs have been extensively investigated (for a survey see <ref> [15] </ref>). In particular, the knowledge bases of quadratic CNFs were recently studied in [11].
Reference: [16] <author> T.A. Nguyen, W.A. Perkins, T.J. Laffey, D. Pecora. </author> <title> Knowledge Base Verification. AI Magazine, </title> <booktitle> Summer 1987, </booktitle> <volume> Vol. 8, No. 2, </volume> <pages> 69-75. </pages>
Reference-contexts: 1 Introduction The growing complexity of knowledge incorporated in the modern expert systems has led to a rapid increase in the size of their knowledge bases (see e.g. <ref> [5, 6, 10, 16, 20] </ref>). One consequence of this development is the increase of the response time, due to the dependence of the computational complexity of answering queries on the size of the knowledge base. <p> It was proved in [14] that the minimization of Horn functions is NP-complete. Many knowledge bases used in practice possess special structural properties. Among the frequently encountered properties we mention those of acyclicity and of quadraticity (see e.g. <ref> [1, 10, 11, 16] </ref>). In this paper we generalize both of this properties by defining the class of quasi-acyclic Horn functions. The main results of this paper consist of quadratic time algorithms for the recognition and the optimal compression of Horn knowledge bases belonging to this class. <p> all the prime implicates of h, and shall simply call this graph the implicate graph G (h) associated to the definite Horn function h. 5 Acyclic Horn Functions In this section we introduce the concept of acyclic Horn functions, generalizing the class of functions represented by acyclic Horn formulae (see <ref> [1, 10, 16] </ref>), and give an efficient minimization procedure for acyclic Horn functions.
Reference: [17] <author> W. Quine. </author> <title> A way to simplify truth functions. </title> <journal> American Mathematical Monthly, </journal> <volume> 62(1955), </volume> <pages> 627-631. </pages>
Reference: [18] <author> B. Selman and H. Kautz. </author> <title> Knowledge compilation using Horn approximations. </title> <booktitle> Proceedings of the 9th National Conference on Artificial Intelligence (AAAI-91), </booktitle> <year> 1991, </year> <pages> 904-909. </pages>
Reference: [19] <author> R.E. Tarjan. </author> <title> Depth first search and linear graph algorithms. </title> <journal> SIAM Journal on Computing, </journal> <volume> 1(1972), # 2, </volume> <pages> 146-160. </pages>
Reference-contexts: The same reasoning (using Lemma 3.2 instead of Lemma 3.1) proves the second statement of the lemma. 2 Given a Horn CNF of a function f , according to Lemma 6.1 and using the linear time algorithm for the determination of the strongly connected components of a directed graph (see <ref> [19] </ref>), the CNF H 2 fl (f ) representing the 2-component q (f ) can be constructed in O (nL) time, where n is the number of variables and L is the length of the given CNF. <p> By Definition 7.1, the function f is quasi-acyclic iff the graph G (F c ) has no oriented cycles. It follows from Lemmas 2.2 and 6.5 and from the linear time complexity of the graph algorithms used here (see <ref> [19] </ref>), that the computational complexity of the given algorithm is O (nL + L 2 ), where n is the number of variables and L is the length of the given CNF. 2 The following lemma states an important property of quasi-acyclic Horn functions.
Reference: [20] <author> J. Tepandi. </author> <title> Comparison of expert system verification criteria: redundancy. In: Validation, Verification and Test of Knowledge-based Systems, </title> <editor> Eds.: M. Ayel and J.-P. Lau-rent, </editor> <publisher> Wiley & Sons 1991, </publisher> <pages> 49-62. </pages>
Reference-contexts: 1 Introduction The growing complexity of knowledge incorporated in the modern expert systems has led to a rapid increase in the size of their knowledge bases (see e.g. <ref> [5, 6, 10, 16, 20] </ref>). One consequence of this development is the increase of the response time, due to the dependence of the computational complexity of answering queries on the size of the knowledge base.
References-found: 20

