URL: http://www.csl.sri.com/~millen/narr_term.ps
Refering-URL: http://www.csl.sri.com/~millen/
Root-URL: 
Title: Narrowing Terminates for Encryption  
Author: Jonathan K. Millen Hai-Ping Ko 
Note: Government Systems Corporation 77 "A"  
Address: 202 Burlington Road Bedford, MA 01730  Street Needham, MA 02194  
Affiliation: The MITRE Corporation  GTE  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. W. Gray, III and J. McLean, </author> <title> "Using temporal logic to specify and verify cryptographic protocols (progress report)," </title> <booktitle> 8th IEEE Computer Security Foundations Workshop, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1995, </year> <pages> 108-116. </pages>
Reference-contexts: 1 Introduction Current techniques for security analysis of authentication and key distribution protocols represent encryption operators symbolically and specify their properties with abstract rules or axioms. Approaches that employ state-transition models, such as the Prolog state-search systems [3,4], those that use general purpose specification and verification systems [2], temporal logic <ref> [1] </ref>, model checking [5], and others, typically use explicit or implicit term replacement rules to express the properties of these operators.
Reference: [2] <author> R. A. Kemmerer, </author> <title> "Analyzing encryption protocols using formal verification techniques," </title> <journal> IEEE J. Selected Areas in Communication, </journal> <volume> Vol. 7, No. 4, </volume> <month> May </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Current techniques for security analysis of authentication and key distribution protocols represent encryption operators symbolically and specify their properties with abstract rules or axioms. Approaches that employ state-transition models, such as the Prolog state-search systems [3,4], those that use general purpose specification and verification systems <ref> [2] </ref>, temporal logic [1], model checking [5], and others, typically use explicit or implicit term replacement rules to express the properties of these operators.
Reference: [3] <author> C. Meadows, </author> <title> "Using narrowing in the analysis of key management protocols," </title> <booktitle> 1989 IEEE Symposium on Security and Privacy, IEEE Computer Society, </booktitle> <year> 1989, </year> <pages> 138-147. </pages>
Reference-contexts: Systems that search backwards from an insecure goal state to construct attacks, such as the Interrogator [4] and the NRL tool <ref> [3] </ref>, have to solve equations when attempting to instantiate a state transition rule. <p> Meadows was the first to implement a narrowing algorithm for protocol analysis <ref> [3] </ref>. The term "narrowing" is used both to describe an elementary step in a solution process and an equation-solving algorithm that uses narrowing steps.
Reference: [4] <author> J. K. Millen, </author> <title> "The Interrogator model," </title> <booktitle> 1995 IEEE Symposium on Security and Privacy, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1995, </year> <pages> 251-160. </pages>
Reference-contexts: Systems that search backwards from an insecure goal state to construct attacks, such as the Interrogator <ref> [4] </ref> and the NRL tool [3], have to solve equations when attempting to instantiate a state transition rule.
Reference: [5] <author> A. W. Roscoe, </author> <title> "Modelling and verifying key exchange protocols using CSP and FDR," </title> <booktitle> 8th IEEE Computer Security Foundations Workshop, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1995, </year> <pages> 98-107. </pages>
Reference-contexts: Approaches that employ state-transition models, such as the Prolog state-search systems [3,4], those that use general purpose specification and verification systems [2], temporal logic [1], model checking <ref> [5] </ref>, and others, typically use explicit or implicit term replacement rules to express the properties of these operators.
Reference: [6] <author> W. Snyder, </author> <title> A Proof Theory for General Unifica tion, </title> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference-contexts: Thus, one uses narrowing to solve equations, but only reductions may be used to simplify terms. In a narrowing step, both the substitution and the reduction are non-vacuous. 2 The definition given here is not as restrictive as the one in <ref> [6] </ref>, which says that the substitution is the most general one that makes the replacement possible. A "most general" unifying substitution (MGU) is one that cannot be obtained by instantiating any other unifying substitution. For unifiable terms, most-general unifiers always exist and are unique up to a variable renaming. <p> Proof. Let V ars (r) be the set of variables of r. It is known (see <ref> [6] </ref>) that there is a most-general unifier 0 of s and t such that all variables in the range of 0 are variables of s or t. Hence V ars (r 0 ) V ars (r).
References-found: 6

