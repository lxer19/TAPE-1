URL: ftp://ftp.cs.man.ac.uk/pub/robotics/eurobot.ps.Z
Refering-URL: http://www.cs.man.ac.uk/robotics/navigation.html
Root-URL: 
Title: Route Learning in Mobile Robots through Self-Organisation.  
Author: Carl Owen and Ulrich Nehmzow, 
Note: Published by IEEE Computer Society, Proc. Eurobot 96. Kaiserslautern 1996.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. F. Canny. </author> <title> The complexity of Robot Motion Planning. </title> <publisher> Cambridge, MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: 1. Introduction Until recently most approaches to robot navigation were based on the use of symbolic representations of the environment to determine the actions required for the robot to reach its goal location. These approaches typically use computational geometry techniques for this task (see e.g. <ref> [1, 3] </ref>). This use of symbolic representations relies heavily on a sufficiently detailed and accurate model of the environment, either pre-defined or built by the robot through exploration.
Reference: [2] <author> J. Heikkonen. </author> <title> Subsymbolic Representations, Self-Organising Maps, and Object Motion Learning. </title> <type> PhD thesis, </type> <institution> Lappeenranta University of Technology, Finland, </institution> <year> 1994. </year>
Reference-contexts: A 486 PC is the main controller with several slave processors (Motorola 68HC11) handling the robot's sensors. 2.2. The route-learning system As already discussed the SOFM provides a method of topological mapbuilding and identification of perceptual landmarks suitable for localisation tasks in autonomous mobile robots (see also <ref> [6, 7, 2, 9] </ref>). The association between locus and action which is necessary for route learning can be achieved by extending the input and weight vectors to include the required actions (see fig 3). <p> During route recall, the action part of the input vector is set to zero, and the required action can be retrieved from the weight vector of the winning unit. Used in this way the SOFM is an associator between sensory information and action (see <ref> [2] </ref>). associator. (the dotted lines in the diagram indicate infra-red or sonar signals being projected from the robot). The input vector is now formed by inserting zeros into the action part of the vector, and this is then fed into the network and a winner found.
Reference: [3] <author> P. Kampman and G. Schmidt. </author> <title> Indoor navigation of mobile robots by use of learned maps. </title> <editor> In G. Schmidt, editor, </editor> <booktitle> Information Processing in Autonomous Mobile Robots. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, Heidelberg, New York, </address> <year> 1991. </year>
Reference-contexts: 1. Introduction Until recently most approaches to robot navigation were based on the use of symbolic representations of the environment to determine the actions required for the robot to reach its goal location. These approaches typically use computational geometry techniques for this task (see e.g. <ref> [1, 3] </ref>). This use of symbolic representations relies heavily on a sufficiently detailed and accurate model of the environment, either pre-defined or built by the robot through exploration.
Reference: [4] <author> T. Kohonen. </author> <title> Self Organisation and Associative Memory. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1988. </year>
Reference-contexts: The map is built using low level (sub-symbolic) information only, requiring no pre-defined symbolic models for its construction. The paper is structured as follows: Section 2 deals with the map building and navigation mechanism. It outlines the advantages of using a Self-Organising Feature Map (SOFM) <ref> [4] </ref> to build the robot's representation of its environment, and discusses the implementation details of the system used in the experiments presented in this paper. A description of the training method used is also given. <p> Section 3 sets out the results obtained in several experiments conducted in and around the robotics laboratory of Manch-ester University. 2. The mapbuilding and navigation mechanism At the heart of the mapbuilding and navigation system is a Self-Organising Feature Map (SOFM) <ref> [4] </ref>. The SOFM is an example of an Artificial Neural Network (ANN) that performs a topological clustering of its input data using an unsupervised learning mechanism. The network consists of one layer of cells typically arranged as a two dimensional grid. <p> These weight vectors are normalised to constant length (see <ref> [4] </ref>). The output o j of unit j is found by calculating the weighted sum of its inputs, given by: n X w jk i k = ~w j ~- (1) with n being the number of elements in the input vector. <p> Summary and conclusion In this paper we have presented a method for route learning in mobile robots, and tested it experimentally using a Nomad 200 mobile robot The basis of the control mechanism described is a Self Organising Feature Map (SOFM) <ref> [4] </ref>. Sensor signals from the robot's infrared and sonar sensors form the input to the SOFM. Excitation patterns developing through the process of self-organisation are associated with motor actions; the robot can be trained to follow arbitrary routes. The route learning mechanism presented uses low level (sub-symbolic) information alone.
Reference: [5] <author> D. Marr. </author> <title> Vision A Computational Investigation into the Human Representation and Processing of Visual Information. W.H. </title> <publisher> Freeman and Co., </publisher> <address> San Francisco, </address> <year> 1982. </year>
Reference-contexts: In machine vision for example, the internal models might include objects or features the system could expect to find within its working environment (see e.g. [10]). As a consequence, much intermediate processing is required to bridge the gap between sensory information and symbolic object identification (see e.g. <ref> [5] </ref>), and for the system to work in real time (as it must) this processing must be done very quickly.
Reference: [6] <author> U. Nehmzow and T. Smithers. </author> <title> Mapbuilding using self-organising networks. </title> <editor> In J. Arcady Meyer and S. Wilson, editors, </editor> <booktitle> From Animals to Animats, Proceedings of SAB90 Paris, </booktitle> <pages> pages 152159. </pages> <publisher> MIT Press, </publisher> <address> Cambridge Mass. and London, England, </address> <year> 1991. </year>
Reference-contexts: A 486 PC is the main controller with several slave processors (Motorola 68HC11) handling the robot's sensors. 2.2. The route-learning system As already discussed the SOFM provides a method of topological mapbuilding and identification of perceptual landmarks suitable for localisation tasks in autonomous mobile robots (see also <ref> [6, 7, 2, 9] </ref>). The association between locus and action which is necessary for route learning can be achieved by extending the input and weight vectors to include the required actions (see fig 3).
Reference: [7] <author> U. Nehmzow and T. Smithers. </author> <title> Using motor actions for location recognition. </title> <editor> In F. Varela and P. Bourgine, editors, </editor> <title> Towards a Practice of Autonomous Systems. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: A 486 PC is the main controller with several slave processors (Motorola 68HC11) handling the robot's sensors. 2.2. The route-learning system As already discussed the SOFM provides a method of topological mapbuilding and identification of perceptual landmarks suitable for localisation tasks in autonomous mobile robots (see also <ref> [6, 7, 2, 9] </ref>). The association between locus and action which is necessary for route learning can be achieved by extending the input and weight vectors to include the required actions (see fig 3).
Reference: [8] <author> N. Oreskes, K. Schrader-Frechette, and K. Belitz. </author> <title> Verification, validation, and confirmation of numerical models in the earth sciences. </title> <booktitle> Science, </booktitle> <address> 263:641646, </address> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: to generate the re quired actions on the robot? * What mechanisms can we use to enable the robot to cope with the inevitable noise and variation of the real world? * Since the real world is so complex to model, simulation is not adequate (if at all possible see <ref> [8] </ref>). Testing of the system must be done in the real world, using situated agents that interact directly with the environ- ment. We must also bear in mind that the mechanisms we use must be computationally cheap, in order to be usable in real time.
Reference: [9] <author> C. Owen. Landmarks, </author> <title> topological maps and robot navigation. </title> <type> Master's thesis, </type> <institution> Manchester University, </institution> <address> England, </address> <year> 1995. </year>
Reference-contexts: A 486 PC is the main controller with several slave processors (Motorola 68HC11) handling the robot's sensors. 2.2. The route-learning system As already discussed the SOFM provides a method of topological mapbuilding and identification of perceptual landmarks suitable for localisation tasks in autonomous mobile robots (see also <ref> [6, 7, 2, 9] </ref>). The association between locus and action which is necessary for route learning can be achieved by extending the input and weight vectors to include the required actions (see fig 3).
Reference: [10] <author> M. Sonka, V. Hlavac, and R. Boyle. </author> <title> Image Processing, Analysis and Machine Vision. </title> <publisher> Chapman and Hall, </publisher> <address> UK, </address> <year> 1993. </year>
Reference-contexts: In machine vision for example, the internal models might include objects or features the system could expect to find within its working environment (see e.g. <ref> [10] </ref>). As a consequence, much intermediate processing is required to bridge the gap between sensory information and symbolic object identification (see e.g. [5]), and for the system to work in real time (as it must) this processing must be done very quickly.
References-found: 10

