URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-95-04/MP-TR-95-04.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-95-04/
Root-URL: http://www.cs.wisc.edu
Title: Optimal Equi-Partition of Rectangular Domains for Parallel Computation  
Author: Ioannis T. Christou Robert R. Meyer 
Date: February 28, 1995  
Abstract: We present an efficient method for the partitioning of rectangular domains into equi-area sub-domains of minimum total perimeter. For a variety of applications in parallel computation, this corresponds to a load-balanced distribution of tasks that minimize interprocessor communication. Our method is based on utilizing, to the maximum extent possible, a set of optimal shapes for sub-domains. We prove that for a large class of these problems, we can construct solutions whose relative distance from a computable lower bound converges to zero as the problem size tends to infinity. PERIX-GA, a genetic algorithm employing this approach, has successfully solved to optimality million-variable instances of the perimeter-minimization problem and for a one-billion-variable problem has generated a solution within 0.32% of the lower bound. We report on the results of an implementation on a CM-5 supercomputer and make comparisons with other existing codes.
Abstract-found: 1
Intro-found: 1
Reference: [DTR91] <author> R. DeLeone and M. A. Tork-Roth. </author> <title> Massively parallel solution of quadratic programs via succsessive overrelaxation. </title> <type> Technical Report 1041, </type> <institution> University of Wisconsin - Madison, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: The minimum perimeter problem has many applications in scientific computing in parallel systems, e.g. in the solution of PDEs where a partial differential equation must be solved numerically on a grid. Such computations often require communication between each cell and its North, South, East, and West neighbors (see <ref> [DTR91] </ref>). Given a parallel/distributed computing environment, one is faced with the task of assigning to each processing element a group of grid cells subject to load balancing constraints (each processing element gets exactly the same number of grid cells) so that total inter-processor communication is minimized.
Reference: [GL93] <author> F. Glover and M. </author> <title> Laguna. Tabu search. </title> <editor> In C. R. Reeves, editor, </editor> <booktitle> Modern Heuristic Techniques for Combinatorial Problems, </booktitle> <pages> pages 70-150. </pages> <publisher> Blackwell Scientific Publications, </publisher> <year> 1993. </year>
Reference-contexts: If swapping the two cells does not increase the total perimeter, the swap is actually performed. In this phase, tabu-like methods (see <ref> [GL93] </ref>) are employed: when swapping of two cells reduces total perimeter, neither of the two 12 cells is considered for swapping again for a certain number of iterations (the hope is that the two cells were "properly" assigned).
Reference: [Hol92] <author> John Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: Depending upon this value, each individual may or may not mate with another individual to produce offspring. This is essentially the principle of natural selection (advocated originally by C. Darwin, and applied much more recently in many other contexts in <ref> [Hol92] </ref>). A specialized directed cross-over operator is used; each gene in the individual has a tag associated with it, indicating whether the shape was placed in the beginning of a new row in the grid or not. <p> Furthermore, the standard GA operator of mutation -changing some genes of the genetic string with some small probability- was implemented, as was the inversion operator <ref> [Hol92] </ref>, an operator that inverts part of the genetic string. This last operator helped the diversity of the fitness values of the solutions as generations evolved.
Reference: [LFE94] <author> M. Laguna, T. A. Feo, and H. C. Elrod. </author> <title> A greedy randomized adaptive search procedure for the two partition problem. </title> <journal> Operations Research, </journal> <month> July August </month> <year> 1994. </year>
Reference-contexts: Other GRASP codes that do not use Branch & Bound methods have been developed for the partitioning of general graphs into two equal size sub-graphs (see <ref> [LFE94] </ref>). The times shown in table 1 are all in seconds. The times shown for the PERIX-GA algorithm are averages of 5 runs on the CM-5. In all our experiments, we let the PERIX-GA run for 20 generations.
Reference: [Lin91] <author> K. Y. Lin. </author> <title> Exact solution of the convex polygon perimeter and area generating function. </title> <journal> J. Phys. A. Math Gen., </journal> <volume> 24 </volume> <pages> 2411-2417, </pages> <year> 1991. </year>
Reference-contexts: In general, the number of such near-rectangular optimal shapes is of order A 1=4 , but this does not encompass all possible minimum perimeter configurations. There is a lot of literature (see for example <ref> [Lin91, Mel94] </ref>) dealing with the generating function approach for developing expressions for the exact number of "convex polyominoes" with various properties.
Reference: [Mel94] <author> M. Bousquet Melou. </author> <title> Codage des polyominos convexes et equation pour l'enumeration suivant l'aire. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 48 </volume> <pages> 21-43, </pages> <year> 1994. </year>
Reference-contexts: In general, the number of such near-rectangular optimal shapes is of order A 1=4 , but this does not encompass all possible minimum perimeter configurations. There is a lot of literature (see for example <ref> [Lin91, Mel94] </ref>) dealing with the generating function approach for developing expressions for the exact number of "convex polyominoes" with various properties.
Reference: [NW85] <author> G. Nemhauser and L. Wolsey. </author> <title> Integer and Combinatorial Optimization. </title> <publisher> John Wiley & Sons, </publisher> <year> 1985. </year>
Reference: [PRRL94] <author> P. M. Pardalos, K. G. Ramakrishnan, M. G. C. Resende, and Y. Li. </author> <title> Implementation of a reduction based lower bound in a branch and bound algorithm for the quadratic assignment problem, </title> <month> September </month> <year> 1994. </year> <note> Submitted to the SIAM J. on Opt. </note>
Reference-contexts: We do not attempt to solve MPE (M; N; P ) using this formulation; however, we do report on comparisons between our approach and other exact methods based on Branch & Bound type algorithms <ref> [PRW93, PRRL94] </ref> for the QAP. The minimum perimeter problem has many applications in scientific computing in parallel systems, e.g. in the solution of PDEs where a partial differential equation must be solved numerically on a grid. <p> We have also tried to solve some of these problems using the GRASP code of Pardalos, Resende et al. 2 This GRASP code uses a Branch & Bound type algorithm incorporating a variance reduction based lower bound (see <ref> [PRRL94] </ref>) for solving the QAP. It has been implemented in FORTRAN 77 and we report on the results we got by running the code on one node of the CM-5.
Reference: [PRW93] <author> P. M. Pardalos, F. Rendl, and H. Wolkowicz. </author> <title> The quadratic assignment problem: A survey and recent developments. </title> <editor> In P. M. Pardalos and H. Wolkowicz, editors, </editor> <title> Quadratic Assignment and Related Problems. </title> <publisher> American Mathematical Society, </publisher> <year> 1993. </year>
Reference-contexts: We do not attempt to solve MPE (M; N; P ) using this formulation; however, we do report on comparisons between our approach and other exact methods based on Branch & Bound type algorithms <ref> [PRW93, PRRL94] </ref> for the QAP. The minimum perimeter problem has many applications in scientific computing in parallel systems, e.g. in the solution of PDEs where a partial differential equation must be solved numerically on a grid. <p> In the GA formulation, the size of the problem is measured as the number of components that PERIX-GA must tile together. Exact codes for QAPs have solved problems of dimension up to 30, but in general QAPs with dimension higher than 20 are considered large, difficult problems <ref> [PRW93] </ref>.
Reference: [Sch89] <author> R. J. Schalkoff. </author> <title> Digital Image Processing and Computer Vision. </title> <publisher> John Wiley & Sons, </publisher> <year> 1989. </year>
Reference-contexts: As the trend in parallel computing is towards clusters of workstations where the communication between processors can be very expensive, it is important that good solutions to the minimum perimeter problem be provided. Another application is edge detection in computer vision and digital image processing employing parallel computations <ref> [Sch89] </ref>. 2 Optimal Shapes and Lower Bounds As Yackel and Meyer have shown in [YM92a] , there exists a mapping L from the set of natural numbers to the set of all sets of configurations of grid cells such that every natural number A is mapped onto a library of configurations,
Reference: [Thi91] <author> Thinking Machines Corporation. </author> <title> The Connection Machine CM-5 Technical Summary, </title> <month> October </month> <year> 1991. </year>
Reference-contexts: The algorithm consistently produced very good approximate solutions (and very often provably optimal ones). We implemented our algorithm in C on a Thinking Machines CM-5 multiprocessor <ref> [Thi91] </ref> with 2 partitions of 32 SPARC processors each. To co-ordinate the processors we used the CMMD v.3.1 message passing library provided by Thinking Machines Inc [Thi93] .
Reference: [Thi93] <institution> Thinking Machines Corporation. </institution> <note> CMMD Reference Manual, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: We implemented our algorithm in C on a Thinking Machines CM-5 multiprocessor [Thi91] with 2 partitions of 32 SPARC processors each. To co-ordinate the processors we used the CMMD v.3.1 message passing library provided by Thinking Machines Inc <ref> [Thi93] </ref> . The communication overhead of our Genetic Algorithm is very low as the program spends less than 3% of total time in communications between processors.
Reference: [Yac93] <author> J. Yackel. </author> <title> Minimum Perimeter Tiling in Parallel Computation. </title> <type> PhD thesis, </type> <institution> University of Wisconsin - Madison, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: The remaining object is an optimal shape for A. It turns out that all the optimal shapes for a given area size A can be constructed using this technique (see Yackel's PhD thesis <ref> [Yac93] </ref>). In much of the analysis below, rather than dealing directly with perimeter, it is more convenient to use the concept of semi-perimeter. <p> The procedure that follows is similar to stripe-filling but more general. To efficiently achieve this goal the PERIX algorithm maintains at each iteration a list of maximum free rectangles (this is the same data structure employed successfully in the related minimum-diversity problem <ref> [Yac93] </ref>). The elements of this list are maximal rectangles in the grid having the property that no part of them intersects an already placed shape. <p> Also, if an offspring is worse than the worst of all the individuals in the previous generation, it is replaced by one of its parents. More details about these policies can be found in <ref> [Yac93] </ref>. Overall our GA performs remarkably well, solving extremely large instances of MPEs.
Reference: [YM92a] <author> J. Yackel and R. R. Meyer. </author> <title> Minimum perimeter decomposition. </title> <type> Technical Report 1078, </type> <institution> University of Wisconsin - Madison, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: Another application is edge detection in computer vision and digital image processing employing parallel computations [Sch89]. 2 Optimal Shapes and Lower Bounds As Yackel and Meyer have shown in <ref> [YM92a] </ref> , there exists a mapping L from the set of natural numbers to the set of all sets of configurations of grid cells such that every natural number A is mapped onto a library of configurations, called the optimal shapes for A, where each shape that belongs to L (A)
Reference: [YM92b] <author> J. Yackel and R. R. Meyer. </author> <title> Optimal tilings for parallel database design. </title> <editor> In P. P. Parda-los, editor, </editor> <booktitle> Advances in Optimization and Parallel Computing, </booktitle> <pages> pages 293-309. </pages> <publisher> North - Holland, </publisher> <year> 1992. </year> <month> 16 </month>
References-found: 15

