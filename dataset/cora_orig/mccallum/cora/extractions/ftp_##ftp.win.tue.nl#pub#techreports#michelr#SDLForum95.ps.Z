URL: ftp://ftp.win.tue.nl/pub/techreports/michelr/SDLForum95.ps.Z
Refering-URL: http://www.win.tue.nl/cs/fm/michelr/msc.html
Root-URL: http://www.win.tue.nl
Title: Syntax Requirements of Message Sequence Charts  
Author: M.A. Reniers a 
Address: Technology, P.O. Box 513, NL-5600 MB Eindhoven, The Netherlands  
Affiliation: a Department of Mathematics and Computing Science, Eindhoven University of  
Abstract: A set of syntax requirements of MSC is discussed and formalized. The treatment is restricted to Basic MSCs without conditions. Syntax requirements of communication events in Basic MSCs are discussed and formalized. The formalization is syntax-directed and based on functions and predicates. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Z.100 (1993). </author> <title> CCITT Specification and description language (SDL). </title> <type> ITU-T Jun. </type> <year> 1994. </year>
Reference-contexts: Other areas for application of Sequence Charts are as an overview language of a service offered by a number of entities, a requirements statement for SDL <ref> [1] </ref> specifications, simulation and validation, selection and specification of test cases, formal specification of communication, and interface specification. Within industry Sequence Charts are used mainly as a test case description language. Various kinds of Sequence Charts are used although they differ on minor points only. <p> (A), ] a (M ) denotes the number of elements from M that are -equivalent to a, and is defined inductively by ] a ] a ( (M ) if a 6 b; (M ) if a b: 5 Example 2 Suppose that we are given a multiset M = <ref> [0; 0; 1; 2; 2; 2] </ref> over the natural numbers IN . Denote the equality relation on IN by =. Then we have, for n 2 IN , the following equations. ] 0 = (M ) = 1 ] 2 = (M ) = 0 4.
Reference: 2. <author> Z.120 (1993). </author> <title> Message Sequence Chart (MSC). </title> <type> ITU-T Sep. </type> <year> 1994. </year>
Reference-contexts: The recommended version of Sequence Charts is called Message Sequence Charts (MSC). Recommendation Z.120 Messages sequence chart (MSC) <ref> [2] </ref> contains a description of an abstract syntax, a graphical syntax, and a textual syntax of the language MSC. Besides these syntax descriptions also an informal semantics and an informal description of the syntax requirements are given. <p> The formal semantics of MSC is standardized in Annex B to Recommendation Z.120 [3]. The purpose of this paper is to discuss the syntax requirements of MSC. The description of the syntax requirements as presented in <ref> [2] </ref> is open to ambiguous interpretation and should therefore be formalized. We restrict the treatment to the core language of MSC without conditions, called Basic MSC. The reason for this restriction is, besides the limited space available, that Basic MSCs are easily understood and so are their syntax requirements. <p> (A), ] a (M ) denotes the number of elements from M that are -equivalent to a, and is defined inductively by ] a ] a ( (M ) if a 6 b; (M ) if a b: 5 Example 2 Suppose that we are given a multiset M = <ref> [0; 0; 1; 2; 2; 2] </ref> over the natural numbers IN . Denote the equality relation on IN by =. Then we have, for n 2 IN , the following equations. ] 0 = (M ) = 1 ] 2 = (M ) = 0 4. <p> A chart specifies a partial ordering on the set of events being contained. This partial ordering restricted to communication events is described in a minimal form by the connectivity graph. We will formalize this notion which is already described in <ref> [2] </ref>. The nodes of the connectivity graph represent the message output and message input events. If a node represents a message output event it is labelled with an exclamation mark (!). If a node represents a message input event it is labelled with a question mark (?).
Reference: 3. <author> Z.120 B (1995). </author> <title> Message Sequence Chart algebraic semantics. </title> <publisher> ITU-T Publ. </publisher> <address> sched.: </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Besides these syntax descriptions also an informal semantics and an informal description of the syntax requirements are given. The formal semantics of MSC is standardized in Annex B to Recommendation Z.120 <ref> [3] </ref>. The purpose of this paper is to discuss the syntax requirements of MSC. The description of the syntax requirements as presented in [2] is open to ambiguous interpretation and should therefore be formalized. We restrict the treatment to the core language of MSC without conditions, called Basic MSC.
Reference: 4. <author> S. Mauw and M.A. Reniers. </author> <title> An Algebraic Semantics of Basic Message Sequence Charts. </title> <journal> The Computer Journal, </journal> <volume> 37(4) </volume> <pages> 269-277, </pages> <year> 1994. </year>
Reference-contexts: The reason for this restriction is, besides the limited space available, that Basic MSCs are easily understood and so are their syntax requirements. For the definition of a formal semantics of Basic MSC we refer to <ref> [4] </ref>. For a more elaborate treatment of the formalization of syntax requirements of MSC we refer to [6]. The syntax requirements we treat in this paper all concern the communication events of MSCs.
Reference: 5. <author> S. Mauw and E. van der Meulen. </author> <title> Generating Tools for Message Sequence Charts. </title> <type> Technical Report TD60, </type> <institution> ITU-TS SG10 Interims Meeting, Geneva, Switzerland, </institution> <year> 1994. </year>
Reference-contexts: In general a translation of the formalization based on functions and predicate logic to description methods as ASF/SDF, Z, VDM, PSF, etc. is straightforward. An implementation of the syntax requirements and formal semantics of Basic MSC is given in <ref> [5] </ref>. A disadvantage is the number of predicates and functions needed in formalizing even the simplest syntax requirements. However, most of the auxiliary functions and predicates are defined in order to obtain information from the textual syntax. <p> In several cases this has led to changes in the requirements. 11 Besides the discussions on the syntax requirements the chosen approach also enables rapid prototyping. The generating of prototype tools implementing the syntax require ments is shown to be feasible in <ref> [5] </ref>.

References-found: 5

