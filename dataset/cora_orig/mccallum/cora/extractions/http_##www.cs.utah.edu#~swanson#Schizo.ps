URL: http://www.cs.utah.edu/~swanson/Schizo.ps
Refering-URL: http://www.cs.utah.edu/~swanson/
Root-URL: 
Email: E-mail: fswanson,stoller,critchlo,kesslerg@cs.utah.edu  
Title: The Design of the Schizophrenic Workstation System  
Author: Mark Swanson Leigh Stoller Terence Critchlow Robert Kessler 
Address: Salt Lake City, UT 84112  
Affiliation: Center for Software Science University of Utah  
Abstract: A cycle-harvesting distributed operating system is described. Building upon current kernelized operating system technology, it promises to utilize spare workstation resources for large, long-running applications, while subjecting the workstation owner/user to little inconvenience. The design is based on a novel use of the multiple-personality potential of microkernel-based operating systems. Acceptance of the system by workstation owners is encouraged by utilizing new and existing resource management mechanisms within the kernel to minimize the impact on those owners' local systems. The applications of interest may display medium-grained concurrent/parallel behavior, or they may utilize process-level parallelism, or they may simply be long-running, compute intensive, non-completion-time-critical single-threaded programs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. S. Barrera. </author> <title> A fast Mach network IPC implementation. </title> <booktitle> In Proceedings of the Second Usenix Mach Symposium, </booktitle> <pages> pages 1-12, </pages> <year> 1991. </year>
Reference: [2] <author> D. Black, J. Carter, R. MacDonald, J. Van Sciver, P. Wang, S. Mangalat, and E. Sheinbrood. </author> <title> OSF/1 virtual memory improvements. </title> <booktitle> In Proceedings of the Second Usenix Mach Symposium, </booktitle> <pages> pages 87-104, </pages> <year> 1991. </year>
Reference: [3] <author> F. Douglis and J. Ousterhout. </author> <title> Transparent process migration: Design alternatives and the Sprite implementation. </title> <journal> Software-Practice and Experience, </journal> <volume> 21(8) </volume> <pages> 757-785, </pages> <month> August </month> <year> 1991. </year>
Reference: [4] <author> C. Gao, J.W.S. Liu, and M. Railey. </author> <title> Load balancing algorithms in homogeneous distributed systems. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pages 302-306, </pages> <year> 1984. </year>
Reference: [5] <author> P. Hoogenboom. </author> <title> System performance advisor: An expert system for Unix system performance management. </title> <type> Master's thesis, </type> <institution> Dept. Computer Science, University of Utah, </institution> <address> Salt Lake City, Utah, </address> <year> 1992. </year>
Reference: [6] <author> P. Krueger and Chawla R. </author> <title> The Stealth distributed scheduler. </title> <booktitle> In Proceedings of the 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 336-343, </pages> <month> May </month> <year> 1991. </year>
Reference: [7] <author> K. Li. </author> <title> Shared Virtual Memory on Loosely Coupled Multiprocessors. </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <month> Sep </month> <year> 1986. </year>
Reference: [8] <author> M. Litzkow, M. Livny, and M. </author> <title> Mutka. Experience with the Condor distributed batch system. </title> <booktitle> In Proceedings of the IEEE Workshop on Experimental Distributed Systems, </booktitle> <month> Oct </month> <year> 1990. </year>
Reference: [9] <author> D. Milojicic, W. Zint, A. Dangel, and P. Giese. </author> <title> Task migration on top of the Mach microkernel. </title> <booktitle> In Proceedings of the Third Usenix Mach Symposium, </booktitle> <year> 1993. </year> <note> Submitted. </note>
Reference: [10] <author> D. W. Mitchell. </author> <title> Mach resource control in OSF/1. </title> <booktitle> In Proceedings of the Second Usenix Mach Symposium, </booktitle> <pages> pages 123-130, </pages> <year> 1991. </year>
Reference: [11] <author> S.J. Mullender, G. Rossum, A.S. Tanenbaum, R. Renesse, and H. van Staveren. </author> <title> Amoeba a distributed operating system for the 1990s. </title> <journal> IEEE Computer Magazine, </journal> <pages> pages 44-52, </pages> <month> May </month> <year> 1990. </year>
Reference: [12] <author> D. A. Nichols. </author> <title> Using idle workstations in a shared computing environment. </title> <booktitle> In Proceedings of the Eleventh ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 5-12, </pages> <year> 1987. </year>
Reference: [13] <institution> Open Systems Foundation and Carnegie Mellon University., </institution> <address> Cambridge MA. </address> <booktitle> MACH 3 Kernel Interface, </booktitle> <month> Jan </month> <year> 1992. </year>
Reference: [14] <institution> Open Systems Foundation and Carnegie Mellon University., </institution> <address> Cambridge MA. </address> <note> MACH 3 Kernel Interface: Draft Proposed Specification, </note> <month> July </month> <year> 1992. </year>
Reference: [15] <institution> Guide to OSF/1: A Technical Synopsis. O'Reilly & Associates, Inc., </institution> <year> 1991. </year>
Reference: [16] <author> R. Rashid, G. Malan, D. Golub, and R. Baron. </author> <title> DOS as a Mach 3.0 application. </title> <booktitle> In Proceedings of the Second Usenix Mach Symposium, </booktitle> <pages> pages 27-40, </pages> <year> 1991. </year>
Reference: [17] <author> R. F. Rashid. </author> <title> Threads of a new system. (mach, a multiprocessor operating system). </title> <journal> UNIX Review, </journal> <volume> 4(8) </volume> <pages> 37-49, </pages> <month> August </month> <year> 1986. </year>
Reference: [18] <author> M. Rozier, V. Abrossimov, F. Armand, I. Boule, M. Gien, M. Guillemont, F. Herrmann, C. Kaiser, S. Langlois, P. Leonard, and W. Neuhauser. </author> <title> Overview of the CHORUS distributed operating systems. </title> <type> Tech Report 90-25, </type> <institution> Chorus Systemes, </institution> <month> April </month> <year> 1990. </year>
Reference: [19] <author> M. Schaar, K. Efe, L. Delcambre, and L. N. Bhuyan. </author> <title> Load balancing with network cooperation. </title> <booktitle> In Proceedings of the 11th International Conference on Distributed Computing Systems. IEEE, </booktitle> <month> May </month> <year> 1991. </year>
Reference: [20] <author> N.G. Shivaratri and P. Krueger. </author> <title> Two adaptive location policies for global scheduling algorithms. </title> <booktitle> In Proceedings of the 10th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 502-509, </pages> <year> 1990. </year>
Reference: [21] <author> V. S. Sunderam. </author> <title> PVM: A framework for parallel distributed computing. In Concurrency: </title> <journal> Practice & Experience, </journal> <pages> pages 315-339, </pages> <month> Dec </month> <year> 1990. </year>
Reference: [22] <author> M. Swanson and T. Critchlow. </author> <title> A background task facility for MACH-based systems. </title> <type> Technical report, </type> <institution> University of Utah Computer Science Department, </institution> <month> Apr </month> <year> 1993. </year>
Reference: [23] <author> M. Theimer and K. Lantz. </author> <title> Finding idle machines in a workstation-based distributed system. </title> <booktitle> In Proceedings of the Eighth International Conference on Distributed Computing Systems, </booktitle> <pages> pages 112-122, </pages> <month> Jun </month> <year> 1988. </year>
Reference: [24] <author> B. Walker, G. Popek, R. English, C. Kline, and G. Thiel. </author> <title> The LOCUS Distributed Operating System. </title> <booktitle> In Proceedings of the Ninth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 49-70, </pages> <month> October </month> <year> 1983. </year>
Reference: [25] <author> C. J. Wilkenloh and U. Ramachandran. </author> <title> The Clouds experience: Building an object-based distributed operating system. </title> <booktitle> In USENIX, Distributed and Multiprocessor Workshop, </booktitle> <pages> pages 333-347, </pages> <month> October </month> <year> 1989. </year>
Reference: [26] <author> Benny Yih. </author> <title> Ray tracing in concurrent scheme. </title> <type> Technical Report CSS Opnote 91-02, </type> <institution> Center for Software Sciences, Department of Computer Science, University of Utah, </institution> <address> Salt Lake City, Utah 84112, </address> <year> 1991. </year>
Reference-contexts: introduction: long-running, compute intensive, single-threaded programs. 8 An example of such an application is a ray tracer implemented in Scheme <ref> [26] </ref>. Once it completes an initialization phase, it computes intensively; and the length of the computation is easily adjustable by specifying the desired number of pixels.
Reference: [27] <author> S. Zhou, J. Wang, X. Zheng, and P. Delisle. </author> <title> UTOPIA: A load sharing facility for large heterogeneous distributed compter systems. </title> <type> Technical Report CSRI-257, </type> <institution> Computer Systems Research Institute, University of Toronto, </institution> <month> April </month> <year> 1992. </year>
References-found: 27

