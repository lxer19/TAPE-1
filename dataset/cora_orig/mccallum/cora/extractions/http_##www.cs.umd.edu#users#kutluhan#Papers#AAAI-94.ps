URL: http://www.cs.umd.edu/users/kutluhan/Papers/AAAI-94.ps
Refering-URL: http://www.cs.umd.edu/projects/plus/papers.html
Root-URL: 
Email: kutluhan@cs.umd.edu hendler@cs.umd.edu nau@cs.umd.edu  
Title: HTN Planning: Complexity and Expressivity  
Author: Kutluhan Erol James Hendler Dana S. Nau 
Address: College Park, MD 20742  
Affiliation: Computer Science Department, Institute for Systems Research and Institute for Advanced Computer Studies University of Maryland,  
Abstract: Most practical work on AI planning systems during the last fifteen years has been based on hierarchical task network (HTN) decomposition, but until now, there has been very little analytical work on the properties of HTN planners. This paper describes how the complexity of HTN planning varies with various conditions on the task networks. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Chapman, D. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32 </volume> <pages> 333-378, </pages> <year> 1987. </year>
Reference: <author> Drummond, M. </author> <title> Refining and Extending the Procedural Net. </title> <booktitle> In Proc. IJCAI-85, </booktitle> <year> 1985. </year>
Reference: <author> Erol, K.; Nau, D.; and Subrahmanian, V. S. </author> <title> Complexity, decidability and undecidability results for domain-independent planning. </title> <note> Artificial Intelligence to appear. A more detailed version is available as Tech. Report CS-TR-2797, </note> <institution> UMIACS-TR-91-154, SRC-TR-91-96, University of Maryland, College Park, MD, </institution> <year> 1992. </year>
Reference-contexts: It is easy to show that strips-style planning can be modeled using HTN's that satisfy these conditions, so we can use the complexity results on strips-style planning in <ref> (Erol et al., 1992) </ref> to establish a lower bound on the complexity of HTN planning. Thus: Theorem 3 plan existence is expspace-hard and in double-exptime if P is restricted to be totally ordered. plan existence is pspace-hard and in exp-time if P is further restricted to be propositional. <p> Since the size of a state is at most exponential, the problem can be solved in exponential space. But even with regularity and several other restrictions, it is still possible to reduce an expspace-complete STRIPS-style planning problem (described in <ref> (Erol et al., 1992) </ref>) to the htn framework. Thus: Theorem 4 plan existence is expspace-complete if P is restricted to be regular. <p> we require the domain description D to be fixed in advance (i.e., not part of the input), there are htn planning domains for which planning is semi-decidable. 4 However, with no function symbols, strips-style planning is decidable, regardless of whether or not the planning domain 5 is fixed in advance <ref> (Erol et al., 1992) </ref>. Thus: Theorem 7 There exists htn planning domains that can not be represented by any finite number of strips-style operators. 6 Another way of comparing expressive power of two languages is based on model-theoretic semantics, which we do in (Erol et al., 1994a).
Reference: <author> Erol, K.; Hendler, J.; and Nau, D. </author> <title> Semantics for Hierarchical Task Network Planning. </title> <type> Technical report CS-TR-3239, </type> <institution> UMIACS-TR-94-31, Computer Science Dept., University of Maryland, </institution> <month> March </month> <year> 1994. </year>
Reference: <author> Erol, K.; Hendler, J.; and Nau, D. </author> <title> Complexity results for hierarchical task-network planning. </title> <note> To appear in Annals of Mathematics and Artificial Intelligence Also available as Technical report CS-TR-3240, </note> <institution> UMIACS-TR-94-32, Computer Science Dept., University of Maryland, </institution> <month> March </month> <year> 1994. </year>
Reference: <author> Fikes, R. E. and Nilsson, N. J. </author> <title> strips: a new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <month> 2(3/4) </month> <year> 1971. </year>
Reference: <author> Hopcroft and Ullman. </author> <title> Introduction to Automata Theory, Languages and Computation. </title> <publisher> Addison-Wesley Publishing Company Inc., </publisher> <address> California, </address> <year> 1979. </year>
Reference-contexts: Whether the intersection of the languages of two context-free grammars is non-empty is a semi-decidable problem <ref> (Hopcroft et al., 1979) </ref>. Thus: 3 Theorem 1 plan existence is strictly semi-decidable, even if P is restricted to be propositional, to have at most two tasks in any task network, and to be totally ordered (except for the input task network).
Reference: <author> Kambhampati, S. and Hendler, J. </author> <title> "A Validation Structure Based Theory of Plan Modification and Reuse" Artificial Intelligence, </title> <month> May, </month> <year> 1992. </year>
Reference: <author> Lansky, A.L. </author> <title> Localized Event-Based Reasoning for Multiagent Domains. </title> <journal> Computational Intelligence Journal, </journal> <year> 1988. </year>
Reference: <author> Sacerdoti, E. D. </author> <title> The nonlinear Nature of Plans In Allen, </title> <editor> J.; Hendler, J.; and Tate, A., editors 1990, </editor> <booktitle> Readings in Planning. </booktitle> <publisher> Morgan Kaufman. </publisher> <pages> 162|170. </pages>
Reference-contexts: analysis of the properties of total- and partial-order planning systems using STRIPS-style planning operators|but STRIPS-style planning systems were developed more than 20 years ago, and most of the practical work on AI planning systems during the last fifteen years has been based on hierarchical task network (HTN) decomposition (e.g., noah <ref> (Sacerdoti, 1990) </ref>, nonlin (Tate, 1990), sipe (Wilkins, 1988), and deviser (Vere, 1983)). Until now, there has been very little analytical work on the properties of HTN planners.
Reference: <author> Tate, A. </author> <title> Generating Project Networks In Allen, </title> <editor> J.; Hendler, J.; and Tate, A., editors 1990, </editor> <booktitle> Readings in Planning. </booktitle> <publisher> Morgan Kaufman. </publisher> <pages> 291|296. </pages>
Reference-contexts: properties of total- and partial-order planning systems using STRIPS-style planning operators|but STRIPS-style planning systems were developed more than 20 years ago, and most of the practical work on AI planning systems during the last fifteen years has been based on hierarchical task network (HTN) decomposition (e.g., noah (Sacerdoti, 1990), nonlin <ref> (Tate, 1990) </ref>, sipe (Wilkins, 1988), and deviser (Vere, 1983)). Until now, there has been very little analytical work on the properties of HTN planners.
Reference: <author> Vere, S. A. </author> <title> Planning in Time: Windows and Durations for Activities and Goals. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-5(3):246-247, </volume> <year> 1983. </year>
Reference-contexts: using STRIPS-style planning operators|but STRIPS-style planning systems were developed more than 20 years ago, and most of the practical work on AI planning systems during the last fifteen years has been based on hierarchical task network (HTN) decomposition (e.g., noah (Sacerdoti, 1990), nonlin (Tate, 1990), sipe (Wilkins, 1988), and deviser <ref> (Vere, 1983) </ref>). Until now, there has been very little analytical work on the properties of HTN planners.
Reference: <author> Wilkins, D. </author> <title> Practical Planning: Extending the classical AI planning paradigm, </title> <publisher> Morgan-Kaufmann 1988. </publisher>
Reference-contexts: and partial-order planning systems using STRIPS-style planning operators|but STRIPS-style planning systems were developed more than 20 years ago, and most of the practical work on AI planning systems during the last fifteen years has been based on hierarchical task network (HTN) decomposition (e.g., noah (Sacerdoti, 1990), nonlin (Tate, 1990), sipe <ref> (Wilkins, 1988) </ref>, and deviser (Vere, 1983)). Until now, there has been very little analytical work on the properties of HTN planners.
Reference: <author> Yang, Q. </author> <title> Formalizing planning knowledge for hierarchical planning Computational Intelligence Vol.6., </title> <type> 12-24, </type> <year> 1990. </year>
References-found: 14

