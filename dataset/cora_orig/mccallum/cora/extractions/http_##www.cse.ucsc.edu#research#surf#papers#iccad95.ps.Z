URL: http://www.cse.ucsc.edu/research/surf/papers/iccad95.ps.Z
Refering-URL: http://www.cse.ucsc.edu/research/surf/bib.html
Root-URL: http://www.cse.ucsc.edu
Title: Single-Layer Fanout Routing and Routability Analysis for Ball Grid Arrays  
Author: Man-Fai Yu Wayne Wei-Ming Dai 
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California,  
Abstract: Fanout routing for Ball Grid Array(BGA) packages becomes non-trivial when the I/O pin count increases. When the number of I/Os gets larger and larger, the number of I/Os we can put on a package may not limited by the available area but sometimes by the ability to fan them out on the next level of interconnect| the PCB or MCM substrate. This paper presents an efficient algorithm (EVENFANOUT) which generates the optimal uniform distribution of wires. We have found the three cuts that is decisive on the routability of the package using EVENFANOUT. These decisive cuts form the base for design optimization of the package. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Darnauer and W. W.-M. Dai, </author> <title> "Fast pad redistribution from periphery-io to area-io," </title> <booktitle> in Proc. IEEE Multi-Chip Module Conf., </booktitle> <address> (Santa Cruz, CA), </address> <pages> pp. 38-43, </pages> <month> March </month> <year> 1994. </year>
Reference: [2] <author> M.-F. Yu and W. W.-M. Dai, </author> <title> "Pin assignment and routing on a single-layer pin grid array," </title> <type> Tech Report UCSC-CRL-95-15, </type> <institution> University of California, Santa Cruz, </institution> <year> 1995. </year>
Reference-contexts: This definition is similar to the MTR definition for PGA routing <ref> [2] </ref>. Fig. 3 compares an MTR and a non-MTR routing. Yu and Dai [2] showed that an MTR Algorithm 1 (EVENFANOUT) Algorithm EVENFANOUT (Pins ; Pads X) for rings r 1 to R f k bjXj=P r c q jXj kP r , t (P r q)=4, j 1 for pads <p> This definition is similar to the MTR definition for PGA routing <ref> [2] </ref>. Fig. 3 compares an MTR and a non-MTR routing. Yu and Dai [2] showed that an MTR Algorithm 1 (EVENFANOUT) Algorithm EVENFANOUT (Pins ; Pads X) for rings r 1 to R f k bjXj=P r c q jXj kP r , t (P r q)=4, j 1 for pads i 1 to jXj=4 f ASSIGN4 (i; j; r) j j + 1
Reference: [3] <author> W. W.-M. Dai, T. Dayan, and D. Staepelaere, </author> <title> "Topological routing in surf: Generating a rubber-band sketch," </title> <booktitle> in Proc. 28th Design Automation Conf., </booktitle> <address> (Ana-heim, CA), </address> <pages> pp. 39-44, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: Algorithm 2 (MAKEMTR) Algorithm MAKEMTR (; X; ) for r 1 to R Route r i to ( r The routing from r i to ( r i ) is created by the shortest-path algorithm in Surf <ref> [3, 4, 5, 6] </ref>.
Reference: [4] <author> W. W.-M. Dai, R. Kong, and M. Sato, </author> <title> "Routability of a rubber-band sketch," </title> <booktitle> in Proc. 28th Design Automation Conf., </booktitle> <address> (Anaheim, CA), </address> <pages> pp. 45-48, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: Algorithm 2 (MAKEMTR) Algorithm MAKEMTR (; X; ) for r 1 to R Route r i to ( r The routing from r i to ( r i ) is created by the shortest-path algorithm in Surf <ref> [3, 4, 5, 6] </ref>. <p> The algorithm is implemented as a router module in Surf. It only creates a topological routing. Design rule check is done by Surf automatically using the method described by Dai et al <ref> [4] </ref>. The time required to do the assignment is negligible compared to generating the rubber band topological routing.
Reference: [5] <author> W. W.-M. Dai, R. Kong, J. Jue, and M. Sato, </author> <title> "Rubber band routing and dynamic data representation," </title> <booktitle> in Proc. 1990 Int'l Conf. on CAD, </booktitle> <address> (San Jose, CA), </address> <pages> pp. 52-55, </pages> <publisher> IEEE Computer Society, </publisher> <month> November </month> <year> 1990. </year>
Reference-contexts: Algorithm 2 (MAKEMTR) Algorithm MAKEMTR (; X; ) for r 1 to R Route r i to ( r The routing from r i to ( r i ) is created by the shortest-path algorithm in Surf <ref> [3, 4, 5, 6] </ref>.
Reference: [6] <author> D. Staepelaere, J. Jue, T. Dayan, and W. W.-M. Dai, </author> <title> "Surf:a rubber-band routing system for multichip modules," </title> <journal> IEEE Design and Test Magazine, </journal> <month> December </month> <year> 1993. </year>
Reference-contexts: Algorithm 2 (MAKEMTR) Algorithm MAKEMTR (; X; ) for r 1 to R Route r i to ( r The routing from r i to ( r i ) is created by the shortest-path algorithm in Surf <ref> [3, 4, 5, 6] </ref>.
References-found: 6

