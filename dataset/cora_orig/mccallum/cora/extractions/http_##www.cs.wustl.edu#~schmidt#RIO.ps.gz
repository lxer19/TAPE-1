URL: http://www.cs.wustl.edu/~schmidt/RIO.ps.gz
Refering-URL: http://www.cs.wustl.edu/~schmidt/new.html
Root-URL: http://www.cs.wustl.edu
Title: The Design and Performance of RIO A Real-time I/O Subsystem for ORB Endsystems  
Author: Fred Kuhns, Douglas C. Schmidt, David L. Levine, and Rajeev Bector 
Keyword: Real-time CORBA Object Request Broker, Quality of Service for OO Middleware, Real-time I/O Subsystems.  
Note: Submitted to the Real-Time Technology and Applications Symposium (RTAS),  
Address: St. Louis, MO 63130, USA  Canada,  
Affiliation: Department of Computer Science, Washington University  Vancouver, British Columbia,  
Email: ffredk,schmidt,levine,rajeevg@cs.wustl.edu  
Date: June 24, 1999.  
Abstract: There is increasing demand to extend Object Request Broker (ORB) middleware to support applications with stringent quality of service (QoS) requirements. However, conventional ORBs do not define standard features for specifying or enforcing end-to-end QoS for applications with deterministic real-time requirements. This paper provides two contributions to the study of real-time ORB middleware. First, it describes the design of a real-time I/O (RIO) subsystem optimized for ORB endsystems that support real-time applications running on off-the-shelf hardware and software. Second, it illustrates how integrating a real-time ORB with a real-time I/O subsystem can reduce latency bounds on end-to-end communication between high-priority clients without unduly penalizing low-priority and best-effort clients. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Object Management Group, </author> <title> The Common Object Request Broker: Architecture and Specification, </title> <editor> 2.2 ed., </editor> <month> Feb. </month> <year> 1998. </year>
Reference-contexts: 1 Introduction Object Request Broker (ORB) middleware like CORBA <ref> [1] </ref> and DCOM [2] is well-suited for request/response applications with best-effort quality of service (QoS) requirements. However, ORB middleware has historically been unsuited for performance-sensitive, distributed real-time applications.
Reference: [2] <author> D. </author> <title> Box, Essential COM. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction Object Request Broker (ORB) middleware like CORBA [1] and DCOM <ref> [2] </ref> is well-suited for request/response applications with best-effort quality of service (QoS) requirements. However, ORB middleware has historically been unsuited for performance-sensitive, distributed real-time applications.
Reference: [3] <author> D. C. Schmidt, A. Gokhale, T. Harrison, and G. </author> <month> Parulkar, </month>
Reference-contexts: However, ORB middleware has historically been unsuited for performance-sensitive, distributed real-time applications. In general, conventional ORBs suffer from (1) lack of QoS specification interfaces, (2) lack of QoS enforcement, (3) lack of real-time programming features, and (4) lack of performance optimizations <ref> [3] </ref>. fl This work was supported in part by Boeing, NSF grant NCR-9628218, DARPA contract 9701516, and Sprint. To address these shortcomings, we have developed The ACE ORB (TAO) [4].
References-found: 3

