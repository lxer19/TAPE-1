URL: ftp://ftp.ifad.dk/pub/papers/acs.ps.gz
Refering-URL: http://www.ifad.dk/publications/publications.html
Root-URL: 
Title: Formal Aspects of  Response to "The Formal Specification of Safety Requirements for Storing Explosives"  
Author: Peter Gorm Larsen 
Address: Denmark  
Affiliation: The Institute of Applied Computer Science, Odense,  
Note: c  
Date: (1994) 3: 1-000  1994 BCS  
Pubnum: Computing  
Abstract: This short communication is a response to [MS93] investigating their ACS system specification. The main point in this paper is that executing specifications can be used as a feasible way of validating them. It is essential to have tool support which enables one to write a generally not executable specification, and then prototype (parts of) it directly in the specification language, without translating it into some other prototyping language. 
Abstract-found: 1
Intro-found: 1
Reference: [AELL92] <author> M. Andersen, R. Elmstrtm, P.B. Lassen, and P.G. Larsen. </author> <title> Making Specifications Executable Using IPTES Meta-IV. </title> <journal> Microprocessing and Microprogramming, </journal> <volume> 35(1-5):521-528, </volume> <month> September </month> <year> 1992. </year>
Reference-contexts: Naturally we agree with [HJ89] that in general executable specifications can be misused and may get the user to think too operationally 3 . However, we believe (also stated in <ref> [AELL92] </ref>) that used with care 4 one can get a lot of insight in the correctness of a specification by executing the specification with a test suite. 3.
Reference: [BFM89] <author> R. Bloomfield, P. Froome, and B. Monahan. SpecBox: </author> <title> A toolkit for BSI-VDM. </title> <journal> SafetyNet, </journal> (5):4-7, 1989. 
Reference-contexts: The syntax of the VDM-SL proto-standard [ISO93] had changed in a few places and that was corrected. No errors were discovered here, but naturally this is also because the SpecBox <ref> [BFM89] </ref> tool had already been used for processing this specification. However, approximately 20 errors were discovered by the static semantics checker.
Reference: [HJ89] <author> I.J. Hayes and C.B. Jones. </author> <title> Specifications are not (necessarily) executable. </title> <journal> Software Engineering Journal, </journal> <pages> pages 330-338, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: The reason for this may either be that users of VDM-SL use too low a level of abstraction or that the expressiveness of the explicit constructs make it possible to use a reasonable high level of abstraction. Naturally we agree with <ref> [HJ89] </ref> that in general executable specifications can be misused and may get the user to think too operationally 3 .
Reference: [ISO93] <institution> Information Technology Programming Languages - VDM-SL. </institution> <type> Technical report, First Committee Draft Standard: CD 13817-1, </type> <month> November </month> <year> 1993. </year> <note> ISO/IEC JTC1/SC22/WG19 N-20. </note>
Reference-contexts: We used the IFAD VDM-SL Toolbox [Las93] to syntax and type-check the full ASCII version of the ACS specification 1 . The syntax of the VDM-SL proto-standard <ref> [ISO93] </ref> had changed in a few places and that was corrected. No errors were discovered here, but naturally this is also because the SpecBox [BFM89] tool had already been used for processing this specification. However, approximately 20 errors were discovered by the static semantics checker.
Reference: [Las93] <editor> P.B. Lassen. IFAD VDM-SL Toolbox. In J.C.P. Woodcock and P.G. Larsen, editors, FME'93: </editor> <booktitle> Industrial-Strength Formal Methods, </booktitle> <pages> page 681, </pages> <address> Berlin Heidelberg, April 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It is not reasonable to expect that a software engineer is an expert in VDM-SL, OBJ3 and some implementation language like it was done in [MS93]. We used the IFAD VDM-SL Toolbox <ref> [Las93] </ref> to syntax and type-check the full ASCII version of the ACS specification 1 . The syntax of the VDM-SL proto-standard [ISO93] had changed in a few places and that was corrected.
Reference: [MS93] <author> P. Mukherjee and V. Stavridou. </author> <title> The Formal Specification of Safety Requirements for Storing Explosives. </title> <journal> Formal Aspects of Computing, </journal> <volume> 5(4) </volume> <pages> 299-336, </pages> <year> 1993. </year>
Reference-contexts: 1. Introduction The emphasis in <ref> [MS93] </ref> on following the guidelines from the interim MOD defence standard 00-55 is very interesting. However, we would like to focus on the need for appropriate tool support to gain the full benefit from using formal specifications. <p> It is not reasonable to expect that a software engineer is an expert in VDM-SL, OBJ3 and some implementation language like it was done in <ref> [MS93] </ref>. We used the IFAD VDM-SL Toolbox [Las93] to syntax and type-check the full ASCII version of the ACS specification 1 . The syntax of the VDM-SL proto-standard [ISO93] had changed in a few places and that was corrected. <p> However, approximately 20 errors were discovered by the static semantics checker. These were minor Correspondence and offprint requests to: Peter Gorm Larsen, IFAD, Forskerparken 10, DK - 5230 Odense M, Denmark. 1 The authors of <ref> [MS93] </ref> were kind to let us have a copy of the full specification. 2 P.G. Larsen problems, but they would still yield problems in the implementation later on. <p> Prototyping of specifications The question about whether one should use executable specifications is closely related to the possible abstractness of the definitions. The specifications in <ref> [MS93] </ref> are mainly implicitly defined functions and operations. However, all of these definitions with one exception (find-point ) can just as well be formulated explicitly without any loss of abstraction. This can be illustrated by a small example. <p> However, we believe (also stated in [AELL92]) that used with care 4 one can get a lot of insight in the correctness of a specification by executing the specification with a test suite. 3. Conclusion We feel that <ref> [MS93] </ref> to some extent demonstrates that formal methods are mature enough to be used effectively in "real life" safety critical systems. This was done by detecting a number of contradictions and omissions in the informal requirement specification. <p> This was done by detecting a number of contradictions and omissions in the informal requirement specification. It is very important to be able to reveal such problems because they can be very costly to reveal at a later stage. However, we also feel that <ref> [MS93] </ref> showed that tool support would be able to discover obvious problems with the formal specification. We think that in order to apply such techniques industrially it is essential that tool support can assist the usage of the formal specifications. <p> Concerning the prototyping of the specification we also think that it is essential it is done directly in the specification language, and not transformed into yet another language like OBJ3. The authors of <ref> [MS93] </ref> have informed us that this was a pragmatic rather than an ideological choice, based on existing experience and availability of tools. However, as pointed out in the paper another obstacle for the prototyping was MOD's refusal to provide test data.
References-found: 6

