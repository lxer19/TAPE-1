URL: http://www.almaden.ibm.com/cs/quest/papers/comad95.ps
Refering-URL: http://www.almaden.ibm.com/cs/quest/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A One-Pass Space-Efficient Algorithm for Finding Quantiles  
Author: Rakesh Agrawal Arun Swami 
Address: 650 Harry Road, San Jose, CA 95120  
Affiliation: IBM Almaden Research Center  
Abstract: We present an algorithm for finding the quantile values of a large unordered dataset with unknown distribution. The algorithm has the following features: i) it requires only one pass over the data; ii) it is space efficient | it uses a small bounded amount of memory independent of the number of values in the dataset; and iii) the true quantile is guaranteed to lie within the lower and upper bounds produced by the algorithm. Empirical evaluation using synthetic data with various distributions as well as real data show that the bounds obtained are quite tight. The algorithm has several applications in database systems, for example in database governors, query optimization, load balancing in multiprocessor database systems, and data mining.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal, T. Imielinski, A. Swami: </author> <title> "Mining Associations between Sets of Items in Massive Databases," </title> <booktitle> ACM SIGMOD 93, </booktitle> <month> May </month> <year> 1993, </year> <pages> 207-216. </pages>
Reference-contexts: The need for such predictive governors is a major user requirement. As another example of an application of the guaranteed bounds on the p-quantile values, we cite the algorithm for mining association rules given in <ref> [1] </ref>. This algorithm concurrently synthesizes several functions of the form f (A) t A , while making a pass over a relation R, where A is some subset of attributes of R and t A is a cut-off threshold that depends on values of A in R.
Reference: [2] <author> M. Blum et. al, </author> <title> "Time Bounds for Selection", </title> <journal> Journal of Computers and Systems, </journal> <volume> 7:4, </volume> <year> 1972, </year> <pages> 448-461. </pages>
Reference-contexts: Also, this procedure must be repeated for each attribute of the same relation for which p-quantiles are desired, making it computationally expensive. In [5], a technique that recursively uses a linear median finding algorithm <ref> [2] </ref> was proposed. It avoids external sorting and obtains accurate quantiles. However, this algorithm is not a one-pass algorithm and processes some data blocks multiple times. The cost of finding quantiles can be reduced by using random sampling [3].
Reference: [3] <author> W. G. Cochran, </author> <title> Sampling Techniques, </title> <publisher> John Wiley and Sons, </publisher> <address> New York, NY, </address> <note> 3rd edition, </note> <year> 1977. </year>
Reference-contexts: It avoids external sorting and obtains accurate quantiles. However, this algorithm is not a one-pass algorithm and processes some data blocks multiple times. The cost of finding quantiles can be reduced by using random sampling <ref> [3] </ref>. The idea is to take a random sample of the data, sort the sample values, and then use the sorted sample to estimate the p-quantile values. However, the p-quantile values produced by random sampling do not have guaranteed error bounds. Another algorithm for finding p-quantiles was proposed in [6].
Reference: [4] <author> D. J. DeWitt, J. F. Naughton, and D. A. Schneider, </author> <title> "Parallel Sorting on a Shared-Nothing Architecture using Probabilistic Splitting," </title> <booktitle> 1st Int'l Conf. on Parallel and Distributed Information Systems, </booktitle> <address> Miami Beach, Florida, </address> <month> December </month> <year> 1991, </year> <pages> 280-291. </pages>
Reference-contexts: It was suggested in [9] that query optimizers should maintain information about attribute values distribution as p-quantiles, and estimation procedures were proposed using p-quantiles. Information about p-quantiles is also useful for balancing workload across multiple processors in a parallel database system <ref> [4] </ref>. fl Current address: Silicon Graphics Computer Systems, 2011 N. Shoreline Blvd, Mountain View, CA 94043. While probabilistic estimates for p-quantile values are adequate for some applications, others require guaranteed bounds on p-quantile values.
Reference: [5] <author> A. P. Gurajada and J. Srivastava, </author> <title> "Equidepth Partitioning of a Data Set based on Finding its Medians", </title> <type> Technical Report TR 90-24, </type> <institution> Computer Science Dept., Univ. of Minnesota, </institution> <year> 1990. </year>
Reference-contexts: For large datasets, sorting requires multiple passes over the data and may incur large I/O costs besides the processing costs. Also, this procedure must be repeated for each attribute of the same relation for which p-quantiles are desired, making it computationally expensive. In <ref> [5] </ref>, a technique that recursively uses a linear median finding algorithm [2] was proposed. It avoids external sorting and obtains accurate quantiles. However, this algorithm is not a one-pass algorithm and processes some data blocks multiple times. The cost of finding quantiles can be reduced by using random sampling [3].
Reference: [6] <author> R. Jain and I. Chlamtac, </author> <title> "The P 2 Algorithm for Dynamic Calculation of Quantiles and Histograms Without Storing Observations," </title> <journal> CACM, </journal> <volume> Vol. 28, No. 10, </volume> <month> Oct. </month> <year> 1985, </year> <pages> 1076-1085. </pages>
Reference-contexts: The idea is to take a random sample of the data, sort the sample values, and then use the sorted sample to estimate the p-quantile values. However, the p-quantile values produced by random sampling do not have guaranteed error bounds. Another algorithm for finding p-quantiles was proposed in <ref> [6] </ref>. This algorithm maintains a sorted stack of p-quantile estimated values and counts and updates those estimates as new data values are scanned using a piecewise parabolic curve-fitting technique. Again, no guarantees can be given about the true p-quantile values using this technique.
Reference: [7] <author> M. Muralikrishna and D. J. DeWitt, </author> <title> "Equi-Depth Histograms for Estimating Selectiv--ity Factors for Multi-dimensional Queries," </title> <booktitle> ACM SIGMOD 88, </booktitle> <address> Chicago, Illinois, </address> <month> June </month> <year> 1988, </year> <pages> 28-36. </pages>
Reference-contexts: Accurate results were obtained by using a small bounded amount of memory that is independent of the number of values in the dataset. It was shown in <ref> [7] </ref> that in the case of queries involving multiple attributes, multi-dimensional equi-depth histograms are superior to equi-width histogram, and an algorithm based on multiple sorts was proposed for this purpose. Finding multi-dimensional equi-depth histograms is the same as finding p-quantiles in multi-dimensions.
Reference: [8] <author> J. I. Munro and M. S. Paterson, </author> <title> "Selection and Sorting with Limited Storage," </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 12, </volume> <year> 1980, </year> <pages> 315-323. </pages>
Reference-contexts: This algorithm maintains a sorted stack of p-quantile estimated values and counts and updates those estimates as new data values are scanned using a piecewise parabolic curve-fitting technique. Again, no guarantees can be given about the true p-quantile values using this technique. Munro and Paterson <ref> [8] </ref> describe both single pass and multi-pass algorithms for determining quantiles (they call this the selection problem). Some of the algorithms are probabilistic and may fail to come up with correct bounds for the quantiles.
Reference: [9] <author> G. Piatetsky-Shapiro, </author> <title> "Accurate Estimation of the Number of Tuples Satisfying a Condition", </title> <booktitle> ACM SIGMOD 84, </booktitle> <address> Boston, </address> <month> June </month> <year> 1984, </year> <pages> 256-276. </pages>
Reference-contexts: 1 Introduction The p-quantile of an ordered sequence of data values is the smallest value below which p fraction of the total values in the sequence lie. Accurate estimation of the number of tuples satisfying a predicate is a prerequisite for a good query optimizer [11]. It was suggested in <ref> [9] </ref> that query optimizers should maintain information about attribute values distribution as p-quantiles, and estimation procedures were proposed using p-quantiles. Information about p-quantiles is also useful for balancing workload across multiple processors in a parallel database system [4]. fl Current address: Silicon Graphics Computer Systems, 2011 N.
Reference: [10] <author> B. W. Schmeiser and S. J. Deutsch, </author> <title> "Quantile Estimation from Grouped Data: The Cell Midpoint," </title> <journal> Communications in Statistics: Simulation and Computation, </journal> <volume> B6(3), </volume> <year> 1977, </year> <pages> 221-234. </pages>
Reference-contexts: These intervals are known as bins. A single pass is made over the data and the count of values in each bin is accumulated. The bins are scanned from lowest to highest values and the quantiles are determined based on the counts in the bins. In <ref> [10] </ref> one such method is analyzed. At first glance, this method appears to meet all our criteria. Only one pass is needed, the quantile is guaranteed to lie within a bin and modest computational and storage resources are required. <p> Multiple frequent values in a single bin may result in highly inaccurate estimates for quantile values. The algorithm we propose does not require a priori determination of bin boundaries. One way of viewing our algorithm is that it is a dynamic version of the algorithm in <ref> [10] </ref> in which the bin boundaries are determined on-the-fly and are continuously adjusted. 1.3 Formal Problem Statement Quantile Problem. The p-quantile of an ordered sequence of data values is the smallest value in the sequence below which p fraction of the total values in the sequence lie.
Reference: [11] <author> P. G. Selinger, M. M. Astrahan, D. D. Chamberlin, R. A. Lories, and T. G. Price, </author> <title> "Access Path Selection in a Relational Database Management System", </title> <booktitle> ACM SIGMOD 79, </booktitle> <month> June </month> <year> 1979. </year>
Reference-contexts: 1 Introduction The p-quantile of an ordered sequence of data values is the smallest value below which p fraction of the total values in the sequence lie. Accurate estimation of the number of tuples satisfying a predicate is a prerequisite for a good query optimizer <ref> [11] </ref>. It was suggested in [9] that query optimizers should maintain information about attribute values distribution as p-quantiles, and estimation procedures were proposed using p-quantiles.
Reference: [12] <author> G. K. Zipf, </author> <title> Human Behavior and the Principle of Least Effort, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1949. </year>
Reference-contexts: We first show the results of experiments for X generated according to two distributions: the uniform distribution and the Zipf distribution <ref> [12] </ref>. For the Zipf distribution, we choose the Zipf parameter to be 0.86, which corresponds to the "80-20" distribution. We also experimented with other distributions by choosing different values for the Zipf parameter and found similar results.
References-found: 12

