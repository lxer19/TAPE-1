URL: http://www.cs.umd.edu/projects/mcml/papers/Sigcomm94.ps
Refering-URL: http://www.cs.umd.edu/projects/mcml/pub.html
Root-URL: 
Title: Highly Dynamic Destination-Sequenced Distance-Vector Routing (DSDV) for Mobile Computers  
Author: Charles E. Perkins Pravin Bhagwat 
Address: NY 10562  College Park, MD 20742  
Affiliation: IBM, T.J. Watson Research Center Hawthorne,  Computer Science Department University of Maryland  
Abstract: An ad-hoc network is the cooperative engagement of a collection of Mobile Hosts without the required intervention of any centralized Access Point. In this paper we present an innovative design for the operation of such ad-hoc networks. The basic idea of the design is to operate each Mobile Host as a specialized router, which periodically advertises its view of the interconnection topology with other Mobile Hosts within the network. This amounts to a new sort of routing protocol. We have investigated modifications to the basic Bellman-Ford routing mechanisms, as specified by the Routing Information Protocol, making it suitable for a dynamic and self-starting network mechanism as is required by users wishing to utilize ad-hoc networks. Our modifications address some of the previous objections to the use of Bellman-Ford, related to the poor looping properties of such algorithms in the face of broken links and the resulting time dependent nature of the interconnection topology describing the links between the Mobile Hosts. Finally, we describe the ways in which the basic network-layer routing can be modified to provide MAC-layer support for ad-hoc networks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu, K. Dussa-Zieger, I. Matta, A. U. Shankar, and O. Gudmundsson. </author> <title> Introducing mars, a routing testbed. </title> <journal> ACM Computer Communication Review, </journal> <year> 1992. </year>
Reference-contexts: Currently we are making necessary modifications to the MARS simulator <ref> [1] </ref> for use in creating the appropriation simulation environment for our needs.
Reference: [2] <author> D. Bertsekas and R. </author> <title> Gallager. </title> <booktitle> Data Networks, </booktitle> <pages> pages 297-333. </pages> <publisher> Prentice-Hall, Inc., </publisher> <year> 1987. </year>
Reference-contexts: The above distance-vector algorithm is the classical Distributed Bellman-Ford (DBF) algorithm <ref> [2] </ref>. Compared to link-state method, it is computationally more efficient, easier to implement and requires much less storage space. However, it is well known that this algorithm can cause the formation of both short-lived and long-lived loops [3]. <p> The loop-free property holds in the second scenario due to a theorem proved by Jaffe and Moss [6], which states that in presence of static or decreasing link weights distance-vector algorithms always maintain loop-free paths. Routing Method Looping Internodal Space Coordination Complexity Bellman Ford <ref> [2] </ref> s/l - O (nd) Link State [8] s - O (n + e) Loop-free BF [3] s - O (nd) RIP [5] s/l - O (n) Merlin Segall [9] loop free Required O (nd) Jaffe Moss [6] loop free Required O (nd) DSDV loop free - O (n) s short
Reference: [3] <author> C. Cheng, R. Riley, S. P. R. Kumar, and J. J. Garcia-Luna-Aceves. </author> <title> A loop-free Bellman-Ford routing protocol without bouncing effect. </title> <booktitle> In ACM SIGCOMM '89, </booktitle> <pages> pages 224-237, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: The above distance-vector algorithm is the classical Distributed Bellman-Ford (DBF) algorithm [2]. Compared to link-state method, it is computationally more efficient, easier to implement and requires much less storage space. However, it is well known that this algorithm can cause the formation of both short-lived and long-lived loops <ref> [3] </ref>. The primary cause for formation of routing loops is that nodes choose their next-hops in a completely distributed fashion based on information which can possibly be stale and, therefore, incorrect. <p> Routing Method Looping Internodal Space Coordination Complexity Bellman Ford [2] s/l - O (nd) Link State [8] s - O (n + e) Loop-free BF <ref> [3] </ref> s - O (nd) RIP [5] s/l - O (n) Merlin Segall [9] loop free Required O (nd) Jaffe Moss [6] loop free Required O (nd) DSDV loop free - O (n) s short term loop, l long term loop n number of nodes, d maximum degree of a node
Reference: [4] <author> Wim Diepstraten, Greg Ennis, and Phil Belanger. </author> <title> Dfw-mac distributed foundation wireless medium access control. </title> <journal> IEEE Document P802.11-93/190, </journal> <month> Nov </month> <year> 1993. </year>
Reference-contexts: Thus, one of our primary motivations is to allow the construction of temporary networks with no wires and no administrative intervention required. In this paper, such a interconnection between the mobile computers will be called an ad-hoc network, in conformance with current usage within the IEEE 802.11 subcommittee <ref> [4] </ref>. Ad-hoc networks differ significantly from existing networks. First of all, the topology of interconnections may be quite dynamic. Secondly, most users will not wish to perform any administrative actions to set up such a network.
Reference: [5] <author> C. Hedrick. </author> <title> Routing Information Protocol. </title> <type> RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: The topology defined by such a network can be very arbitrary since there are no constraints on where mobiles could be located with respect to each other. Routing protocols for existing networks <ref> [10, 8, 5] </ref> have not been designed specifi 1 cally to provide the kind of self-starting behavior needed for ad-hoc networks. Most protocols exhibit their least desirable behavior when presented with a highly dynamic interconnection topology. <p> However, within an ad-hoc mobile environment, enforcing any such internodal coordination mechanism will be difficult due to the rapidly changing topology of the underlying routing network. Simplicity is one of the primary attributes which makes any routing protocol preferred over others for implementation within operational networks. RIP <ref> [5] </ref> is a classical example. Despite the counting-to-infinity problem it has proven to be very successful within small size internetworks. The usefulness of RIP within ad-hoc environment, however, is limited as it was not designed to handle rapid topological changes. Furthermore, the techniques of split-horizon and poisoned-reverse [5] are not useful <p> RIP <ref> [5] </ref> is a classical example. Despite the counting-to-infinity problem it has proven to be very successful within small size internetworks. The usefulness of RIP within ad-hoc environment, however, is limited as it was not designed to handle rapid topological changes. Furthermore, the techniques of split-horizon and poisoned-reverse [5] are not useful within the wireless environment due to the broadcast nature of the transmission medium. Our design goal therefore has been to design a routing method for ad-hoc networks which preserves the simplicity of RIP, yet at the same time avoids the looping problem. <p> Routing Method Looping Internodal Space Coordination Complexity Bellman Ford [2] s/l - O (nd) Link State [8] s - O (n + e) Loop-free BF [3] s - O (nd) RIP <ref> [5] </ref> s/l - O (n) Merlin Segall [9] loop free Required O (nd) Jaffe Moss [6] loop free Required O (nd) DSDV loop free - O (n) s short term loop, l long term loop n number of nodes, d maximum degree of a node Table 5: Comparison of various routing <p> Therefore, economy of space is of importance. The primary concern with using a Distributed Bellman Ford algorithm in ad-hoc environment is its susceptibility towards forming routing loops and counting-to-infinity problem. RIP <ref> [5] </ref>, which is very similar to DBF algorithm, also suffers from the same problem. Unlike DBF, RIP only keeps track of the best route to each destination, which results in some space saving at no extra performance hit.
Reference: [6] <author> J. M. Jaffe and F.H. Moss. </author> <title> A responsive distributed routing algorithm for computer networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-30(7):1758-1762, </volume> <month> July </month> <year> 1982. </year>
Reference-contexts: The primary cause for formation of routing loops is that nodes choose their next-hops in a completely distributed fashion based on information which can possibly be stale and, therefore, incorrect. Almost all proposed modifications to DBF algorithm <ref> [6, 7, 9] </ref> eliminate the looping problem by forcing all nodes in the network to participate in some form of in-ternodal coordination protocol. Such internodal coordination mechanisms might be effective when topological changes are rare. <p> But this contradicts our ini tial assumption that s x k &gt; s x i . Hence, loop-formation cannot occur if nodes use newer sequence numbers to pick routes. The loop-free property holds in the second scenario due to a theorem proved by Jaffe and Moss <ref> [6] </ref>, which states that in presence of static or decreasing link weights distance-vector algorithms always maintain loop-free paths. <p> Routing Method Looping Internodal Space Coordination Complexity Bellman Ford [2] s/l - O (nd) Link State [8] s - O (n + e) Loop-free BF [3] s - O (nd) RIP [5] s/l - O (n) Merlin Segall [9] loop free Required O (nd) Jaffe Moss <ref> [6] </ref> loop free Required O (nd) DSDV loop free - O (n) s short term loop, l long term loop n number of nodes, d maximum degree of a node Table 5: Comparison of various routing methods 6 Comparison with other Methods The table 5 presents a quick summary of some <p> This problem is alleviated by employing an internodal coordination mechanism as proposed by Merlin and Segall in [9]. A similar technique, but with better convergence results, is developed by Jaffe and Moss in <ref> [6] </ref>. However, we do not know of any operational routing protocols which employ these complex coordination methods to achieve loop-freedom, which leads us to the conclusion that from a practical point of view the usefulness of such complex methods is diminished.
Reference: [7] <author> J. J. Garcia Luna-Aceves. </author> <title> A unified approach to loop-free routing using distance vectors or link states. </title> <booktitle> In ACM SIGCOMM, </booktitle> <pages> pages 212-223, </pages> <year> 1989. </year>
Reference-contexts: The primary cause for formation of routing loops is that nodes choose their next-hops in a completely distributed fashion based on information which can possibly be stale and, therefore, incorrect. Almost all proposed modifications to DBF algorithm <ref> [6, 7, 9] </ref> eliminate the looping problem by forcing all nodes in the network to participate in some form of in-ternodal coordination protocol. Such internodal coordination mechanisms might be effective when topological changes are rare.
Reference: [8] <author> J. M. McQuillan, I. Richer, and E. C. Rosen. </author> <title> The new routing algorithm for the ARPANET. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-28(5):711-719, </volume> <month> May </month> <year> 1980. </year>
Reference-contexts: The topology defined by such a network can be very arbitrary since there are no constraints on where mobiles could be located with respect to each other. Routing protocols for existing networks <ref> [10, 8, 5] </ref> have not been designed specifi 1 cally to provide the kind of self-starting behavior needed for ad-hoc networks. Most protocols exhibit their least desirable behavior when presented with a highly dynamic interconnection topology. <p> Such inconsistent views of network topologies might lead to formation of routing loops. These loops, however, are short-lived, because they disappear in the time it takes a message to traverse the diameter of the network <ref> [8] </ref>. 2.2 Distance-Vector In distance-vector algorithms, every node i maintains, for each destination x, a set of distances fd x ij g where j ranges over the neighbors of i. <p> Routing Method Looping Internodal Space Coordination Complexity Bellman Ford [2] s/l - O (nd) Link State <ref> [8] </ref> s - O (n + e) Loop-free BF [3] s - O (nd) RIP [5] s/l - O (n) Merlin Segall [9] loop free Required O (nd) Jaffe Moss [6] loop free Required O (nd) DSDV loop free - O (n) s short term loop, l long term loop n <p> However, we do not know of any operational routing protocols which employ these complex coordination methods to achieve loop-freedom, which leads us to the conclusion that from a practical point of view the usefulness of such complex methods is diminished. Link-state <ref> [8] </ref> algorithms are also free of the counting-to-infinity problem. However, they need to maintain the up-to-date version of the entire network topology at every node, which may constitute excessive storage and communication overhead in a highly dynamic network.
Reference: [9] <author> P. M. Merlin and A. Segall. </author> <title> A failsafe distributed routing protocol. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-27(9):1280-1287, </volume> <month> September </month> <year> 1979. </year>
Reference-contexts: The primary cause for formation of routing loops is that nodes choose their next-hops in a completely distributed fashion based on information which can possibly be stale and, therefore, incorrect. Almost all proposed modifications to DBF algorithm <ref> [6, 7, 9] </ref> eliminate the looping problem by forcing all nodes in the network to participate in some form of in-ternodal coordination protocol. Such internodal coordination mechanisms might be effective when topological changes are rare. <p> Routing Method Looping Internodal Space Coordination Complexity Bellman Ford [2] s/l - O (nd) Link State [8] s - O (n + e) Loop-free BF [3] s - O (nd) RIP [5] s/l - O (n) Merlin Segall <ref> [9] </ref> loop free Required O (nd) Jaffe Moss [6] loop free Required O (nd) DSDV loop free - O (n) s short term loop, l long term loop n number of nodes, d maximum degree of a node Table 5: Comparison of various routing methods 6 Comparison with other Methods The <p> The primary cause of loop formation in BF style algorithms is that nodes make uncoordinated modifications to their routing tables based on some information which could be incorrect. This problem is alleviated by employing an internodal coordination mechanism as proposed by Merlin and Segall in <ref> [9] </ref>. A similar technique, but with better convergence results, is developed by Jaffe and Moss in [6].
Reference: [10] <author> M. Schwartz and T.E. Stern. </author> <title> Routing techniques used in computer communication networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-28(4):539-552, </volume> <month> April </month> <year> 1980. </year>
Reference-contexts: The topology defined by such a network can be very arbitrary since there are no constraints on where mobiles could be located with respect to each other. Routing protocols for existing networks <ref> [10, 8, 5] </ref> have not been designed specifi 1 cally to provide the kind of self-starting behavior needed for ad-hoc networks. Most protocols exhibit their least desirable behavior when presented with a highly dynamic interconnection topology. <p> changes anyway, we decided to follow our ad-hoc network model as far as we could and ended up with a substantially new approach to the classic distance-vector routing. 2 Overview of Routing Methods In our environment, the problem of routing is essentially the distributed version of the shortest path problem <ref> [10] </ref>. Each node in the network maintains for each destination a preferred neighbor. Each data packet contains a destination node identifier in its header. When a node receives a data packet, it forwards the packet to the preferred neighbor for its destination.
References-found: 10

