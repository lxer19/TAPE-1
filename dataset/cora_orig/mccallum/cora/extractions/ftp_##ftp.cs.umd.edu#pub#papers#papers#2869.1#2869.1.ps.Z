URL: ftp://ftp.cs.umd.edu/pub/papers/papers/2869.1/2869.1.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: ca@isi.edu, shankar@cs.umd.edu  
Title: Stepwise Assertional Design of Distance-Vector Routing Algorithms  
Author: Cengiz Alaettinoglu, A. Udaya Shankar 
Date: August 1993  
Address: College Park, Maryland 20742  
Affiliation: Institute for Advanced Computer Studies and Department of Computer Science University of Maryland  
Pubnum: UMIACS-TR-92-39, CS-TR-2869  
Abstract: There are many kinds of distance-vector algorithms for adaptive routing in wide-area com puter networks, ranging from the classical Distributed Bellman-Ford to several recent algorithms that have better performance. However, these algorithms have very complicated behaviors and their analyses in the literature has been incomplete (and operational). In this paper, we present a stepwise assertional design of a recently proposed distance-vector algorithm. Our design starts with the Distributed Bellman-Ford and goes through two intermediate algorithms. The proper ties established for each algorithm hold for the succeeding algorithms. The algorithms analyzed here are representative of various internetwork routing protocols. fl This work is supported in part by National Science Foundation Grant No. NCR 89-04590, and by RADC and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland. The views, opinions, and/or findings contained in this report are those of the author(s) and should not be interpreted as representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency, RADC, or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Stepwise assertional design of distance-vector routing algorithms. In IFIP Protocol Specification Testing and Verification '92, </title> <address> Orlando, Florida, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: In section 2, we present our system model and proof rules. In sections 3, 4, 5, 6, we describe A1, A2, 2 A3, and A4, respectively. In section 7, we give concluding remarks. A preliminary version of algorithms A1 through A4, without most of the analysis, was presented in <ref> [1] </ref>. 2 Preliminaries: System Model and Proof Rules We use state transition systems and fairness requirements to specify routing protocols, and safety and progress assertions to describe their behaviors (e.g. [11, 20, 13]).
Reference: [2] <author> K. M. Chandy and J. Misra. </author> <title> Parallel Program Design, chapter 2,3 and 8. </title> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: These rules are similar to the rules in <ref> [13, 2] </ref>.
Reference: [3] <author> C. Cheng, R. Riley, S. P. R. Kumar, and J. J. Garcia-Luna-Aceves. </author> <title> A loop-free Bellman-Ford routing protocol without bouncing effect. </title> <booktitle> In ACM SIGCOMM '89, </booktitle> <pages> pages 224-237, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. References <ref> [21, 3, 17, 9] </ref> avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less. In [21], each node maintains for each destination a set of paths (in addition to the distances), one for each of its neighbors. <p> References <ref> [3, 17, 9] </ref> 1 overcome this problem by having nodes maintain prefinal nodes instead of the paths. The prefinal node for a destination is intended to be the last node before the destination on the next-hop path. <p> For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in <ref> [3, 17, 9] </ref> are variations of A4. Hence, understanding the properties of algorithms A1 through A4 is very useful in understanding various internetworking routing protocols. <p> In the course of our work, we discovered that they are often incomplete or inaccurate; for example, reference [17] considers only one or two link failures rather than an arbitrary succession of topology changes, to prove the properties of their algorithm; the routing table update procedure in <ref> [3] </ref> is inaccurate; the example in [3] to illustrate O (N ) convergence is wrong, etc. A stepwise assertional design, such as the one presented here, is effective at making it easier to understand these algorithms. <p> of our work, we discovered that they are often incomplete or inaccurate; for example, reference [17] considers only one or two link failures rather than an arbitrary succession of topology changes, to prove the properties of their algorithm; the routing table update procedure in <ref> [3] </ref> is inaccurate; the example in [3] to illustrate O (N ) convergence is wrong, etc. A stepwise assertional design, such as the one presented here, is effective at making it easier to understand these algorithms.
Reference: [4] <author> E. Dijkstra and C. Scholten. </author> <title> Termination detection for diffusing computations. </title> <journal> Information Processing Letters, </journal> <volume> 11(1) </volume> <pages> 1-4, </pages> <year> 1980. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations <ref> [4] </ref> to avoid loops entirely. References [21, 3, 17, 9] avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less.
Reference: [5] <author> L. Ford and D. Fulkerson. </author> <booktitle> Flows in Networks, </booktitle> <pages> pages 297-333. </pages> <publisher> Prentice-Hall, Inc., </publisher> <year> 1962. </year>
Reference-contexts: A popular approach to routing is the distance-vector approach, which is based on the Bellman-Ford algorithm <ref> [5] </ref>. In this approach, each node maintains for each destination a set of distances, one for each of its neighbors, and chooses a neighbor with minimum distance as the next-hop.
Reference: [6] <author> J.J. Garcia-Luna-Aceves. </author> <title> A unified approach to loop free routing using distance vectors or link states. </title> <booktitle> In ACM SIGCOMM '89, </booktitle> <pages> pages 212-223, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely.
Reference: [7] <author> C. Hedrick. </author> <title> Routing information protocol. Request for Comment RFC-1058, </title> <institution> Network Information Center, </institution> <month> June </month> <year> 1988. </year>
Reference-contexts: Many algorithms proposed in the literature use similar mechanisms to algorithms A1 through A4. For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) <ref> [7] </ref>, and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in [3, 17, 9] are variations of A4.
Reference: [8] <author> C. L. Hedrick. </author> <title> An introduction to igrp. </title> <type> Technical report, </type> <institution> The State University of New Jersey, Center for Computer and Information Services, Laboratory for Computer Science Research, Rutgers, </institution> <address> New Jersey, </address> <month> August </month> <year> 1991. </year> <note> Available by anonymous ftp from ftp.cisco.com. 28 </note>
Reference-contexts: Many algorithms proposed in the literature use similar mechanisms to algorithms A1 through A4. For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol <ref> [8] </ref> are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in [3, 17, 9] are variations of A4.
Reference: [9] <author> P. A. Humblet. </author> <title> Another adaptive distributed shortest path algorithm. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 39(6) </volume> <pages> 995-1003, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. References <ref> [21, 3, 17, 9] </ref> avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less. In [21], each node maintains for each destination a set of paths (in addition to the distances), one for each of its neighbors. <p> References <ref> [3, 17, 9] </ref> 1 overcome this problem by having nodes maintain prefinal nodes instead of the paths. The prefinal node for a destination is intended to be the last node before the destination on the next-hop path. <p> For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in <ref> [3, 17, 9] </ref> are variations of A4. Hence, understanding the properties of algorithms A1 through A4 is very useful in understanding various internetworking routing protocols.
Reference: [10] <author> J. M. Jaffe and F.H. Moss. </author> <title> A responsive distributed routing algorithm for computer networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-30(7):1758-1762, </volume> <month> July </month> <year> 1982. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example <ref> [15, 19, 10] </ref> use diffusion computations [4] to avoid loops entirely. References [21, 3, 17, 9] avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less.
Reference: [11] <author> S. S. Lam and A. U. Shankar. </author> <title> A relational notation for state transition systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-16(7):755-775, </volume> <month> July </month> <year> 1990. </year> <title> An abriviated version appeared in Protocol Specification, Testing, and Verification VIII, </title> <year> 1988. </year>
Reference-contexts: In the case of A2 and A3, it is straightforward to check that the proofs for the previous algorithms continue to hold with minor modifications. For A4, we establish that A4 is a well-formed refinement <ref> [11] </ref> of A3; thus, all safety and progress assertions satisfied by A3 hold for A4 [11]. Many algorithms proposed in the literature use similar mechanisms to algorithms A1 through A4. <p> For A4, we establish that A4 is a well-formed refinement <ref> [11] </ref> of A3; thus, all safety and progress assertions satisfied by A3 hold for A4 [11]. Many algorithms proposed in the literature use similar mechanisms to algorithms A1 through A4. For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. <p> A preliminary version of algorithms A1 through A4, without most of the analysis, was presented in [1]. 2 Preliminaries: System Model and Proof Rules We use state transition systems and fairness requirements to specify routing protocols, and safety and progress assertions to describe their behaviors (e.g. <ref> [11, 20, 13] </ref>). A state transition system consists of a set of state variables, a set of events, and an initial condition on the state variables. The state variables define the set of system states. <p> These rules are similar to the rules in [13, 2]. It is straightforward to show their soundness (e.g. <ref> [11, 20] </ref>). 3 Algorithm A1 We consider a computer network whose nodes and links form an arbitrary directed graph such that if there is a link from node u to node v, then there is a link from node v to node u.
Reference: [12] <author> K. Lougheed and Y. Rekhter. </author> <title> Border gateway protocol (bgp). Request for Comment RFC-1105, </title> <institution> Network Information Center, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) <ref> [12] </ref>, and the algorithm in [21] are variations of A2. The algorithms in [3, 17, 9] are variations of A4. Hence, understanding the properties of algorithms A1 through A4 is very useful in understanding various internetworking routing protocols.
Reference: [13] <author> Z. Manna and A. Pnueli. </author> <title> Adequate Proof Principles for Invariance and Liveness Properties of Concurrent Programs. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 4 </volume> <pages> 257-288, </pages> <year> 1984. </year>
Reference-contexts: A preliminary version of algorithms A1 through A4, without most of the analysis, was presented in [1]. 2 Preliminaries: System Model and Proof Rules We use state transition systems and fairness requirements to specify routing protocols, and safety and progress assertions to describe their behaviors (e.g. <ref> [11, 20, 13] </ref>). A state transition system consists of a set of state variables, a set of events, and an initial condition on the state variables. The state variables define the set of system states. <p> These rules are similar to the rules in <ref> [13, 2] </ref>.
Reference: [14] <author> J. M. McQuillan, G. Falk, and I. Richer. </author> <title> A review of the development and performance of the Arpanet routing algorithm. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-26:1802-1811, </volume> <month> Dec </month> <year> 1978. </year>
Reference-contexts: However it is well known that the straight-forward distributed implementation of the Bellman-Ford algorithm can have long-lived loops (of the order of distances) <ref> [14] </ref>. <p> For A4, we establish that A4 is a well-formed refinement [11] of A3; thus, all safety and progress assertions satisfied by A3 hold for A4 [11]. Many algorithms proposed in the literature use similar mechanisms to algorithms A1 through A4. For example, Old Arpanet Routing Algorithm <ref> [14] </ref>, Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in [3, 17, 9] are variations of A4.
Reference: [15] <author> P. M. Merlin and A. Segall. </author> <title> A failsafe distributed routing protocol. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-27(9):1280-1287, </volume> <month> September </month> <year> 1979. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example <ref> [15, 19, 10] </ref> use diffusion computations [4] to avoid loops entirely. References [21, 3, 17, 9] avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less.
Reference: [16] <author> S. Owicki and D. Gries. </author> <title> An axiomatic proof technique for parallel programs i. </title> <journal> Acta Informatica, </journal> <volume> 6 </volume> <pages> 319-340, </pages> <year> 1976. </year>
Reference-contexts: u (v; z) are auxiliary variables; they are needed for verification only, and do not have to be implemented. (Formally they satisfy the following conditions: (1) they do not 15 affect the enabling condition of any event, and (2) they do not affect the update of any nonauxiliary state variable <ref> [16] </ref>.) Algorithm A2 is like algorithm A1, except that A2 uses paths to avoid long-lived loops. Long-lived loops in the next-hop path for destination z can be avoided by having node u not choose a neighbor v as its next-hop if Routevia u (v; z) contains a cycle.
Reference: [17] <author> B. Rajagopalan and M. Faiman. </author> <title> A new responsive distributed shortest-path routing algorithm. </title> <journal> In ACM SIG COMM '89, </journal> <pages> pages 237-246, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. References <ref> [21, 3, 17, 9] </ref> avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less. In [21], each node maintains for each destination a set of paths (in addition to the distances), one for each of its neighbors. <p> References <ref> [3, 17, 9] </ref> 1 overcome this problem by having nodes maintain prefinal nodes instead of the paths. The prefinal node for a destination is intended to be the last node before the destination on the next-hop path. <p> For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) [18], Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in <ref> [3, 17, 9] </ref> are variations of A4. Hence, understanding the properties of algorithms A1 through A4 is very useful in understanding various internetworking routing protocols. <p> Distance-vector routing algorithms are difficult to understand. Most of their analyses in the literature is operational. In the course of our work, we discovered that they are often incomplete or inaccurate; for example, reference <ref> [17] </ref> considers only one or two link failures rather than an arbitrary succession of topology changes, to prove the properties of their algorithm; the routing table update procedure in [3] is inaccurate; the example in [3] to illustrate O (N ) convergence is wrong, etc.
Reference: [18] <author> Y. Rekhter. </author> <title> Inter-domain routing protocol (idrp). Available from the author., 1992. </title> <type> T.J. </type> <institution> Watson Research Center, IBM Corp. </institution>
Reference-contexts: Many algorithms proposed in the literature use similar mechanisms to algorithms A1 through A4. For example, Old Arpanet Routing Algorithm [14], Routing Information Protocol (an Internet standard) [7], and Inter-Gateway Routing Protocol [8] are variations of A1. Inter-Domain Routing Protocol (ISO draft standard) <ref> [18] </ref>, Border Gateway Protocol (an Internet standard) [12], and the algorithm in [21] are variations of A2. The algorithms in [3, 17, 9] are variations of A4. Hence, understanding the properties of algorithms A1 through A4 is very useful in understanding various internetworking routing protocols.
Reference: [19] <author> A. Segall. </author> <title> Advances in verifiable fail-safe routing procedures. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM 29(4) </volume> <pages> 491-497, </pages> <month> April </month> <year> 1981. </year>
Reference-contexts: Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [15, 19, 10, 21, 3, 6, 17, 9] </ref> which avoid long-lived loops by using various node coordination mechanisms. For example [15, 19, 10] use diffusion computations [4] to avoid loops entirely. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [15, 19, 10, 21, 3, 6, 17, 9] which avoid long-lived loops by using various node coordination mechanisms. For example <ref> [15, 19, 10] </ref> use diffusion computations [4] to avoid loops entirely. References [21, 3, 17, 9] avoid long-lived loops, but not short-lived loops, i.e. loops that disappear in time proportional to N or less.
Reference: [20] <author> A.U. Shankar. </author> <title> An Introduction to Assertional Reasoning for Concurrent Systems. </title> <journal> ACM Computing Surveys, </journal> <month> September </month> <year> 1993. </year> <note> to appear. </note>
Reference-contexts: A preliminary version of algorithms A1 through A4, without most of the analysis, was presented in [1]. 2 Preliminaries: System Model and Proof Rules We use state transition systems and fairness requirements to specify routing protocols, and safety and progress assertions to describe their behaviors (e.g. <ref> [11, 20, 13] </ref>). A state transition system consists of a set of state variables, a set of events, and an initial condition on the state variables. The state variables define the set of system states. <p> These rules are similar to the rules in [13, 2]. It is straightforward to show their soundness (e.g. <ref> [11, 20] </ref>). 3 Algorithm A1 We consider a computer network whose nodes and links form an arbitrary directed graph such that if there is a link from node u to node v, then there is a link from node v to node u.

References-found: 20

