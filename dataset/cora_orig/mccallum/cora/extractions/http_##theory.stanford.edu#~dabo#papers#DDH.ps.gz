URL: http://theory.stanford.edu/~dabo/papers/DDH.ps.gz
Refering-URL: http://theory.stanford.edu/~dabo/publications.html
Root-URL: 
Email: dabo@cs.stanford.edu  
Title: The Decision Diffie-Hellman Problem  
Author: Dan Boneh 
Affiliation: Stanford University  
Abstract: The Decision Diffie-Hellman assumption (ddh) is a gold mine. It enables one to construct efficient cryptographic systems with strong security properties. In this paper we survey the recent applications of DDH as well as known results regarding its security. We describe some open problems in this area.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare, S. Goldwasser, </author> <title> "New paradigms for digital signatures and message authentication based on non-interactive zero-knowledge proofs" Crypto '89, </title> <journal> pp. </journal> <pages> 194-211. </pages>
Reference-contexts: 1 Introduction An important goal of cryptography is to pin down the exact complexity assumptions used by cryptographic protocols. Consider the Diffie-Hellman key exchange protocol [12]: Alice and Bob fix a finite cyclic group G and a generator g. They respectively pick random a; b 2 <ref> [1; jGj] </ref> and exchange g a ; g b . The secret key is g ab . To totally break the protocol a passive eavesdropper, Eve, must compute the Diffie-Hellman function defined as: dh g (g a ; g b ) = g ab . <p> Loosely speaking, the ddh assumption states that no efficient algorithm can distinguish between the two distributions hg a ; g b ; g ab i and hg a ; g b ; g c i where a; b; c are chosen at random in <ref> [1; jGj] </ref>. <p> The probability is over the random choice of hp; gi according to the distribution induced by IG (n), the random choice of a; b in the range <ref> [1; jG p j] </ref> and the random bits used by A. <p> The probability is over the random choice of hp; gi according to the distribution induced by IG (n), the random choice of a; b; c in the range <ref> [1; jG p j] </ref> and the random bits used by A. The group family G satisfies the ddh assumption if there is no ddh algorithm for G . The difference between the two probabilities in the definition of ddh is often called the advan-tage of algorithm A. <p> c ) = "true" j a = bc] &gt; 1 * Pr [A (p; g a ; g b ; g c ) = "true" j a 6= bc] &lt; * where the probability is taken over the random bits of A, the random choice of a; b; c 2 <ref> [1; jG p j] </ref>, and the choice of hp; gi according to the distribution induced by IG (n). As usual, * = *(n) is a negligible function. We say that G satisfies the perfect-ddh assumption if there is no polynomial time perfect-ddh algorithm. <p> enough n, fi fi Pr [O (p; g; g a ; g b ; g ab ) = "true"] Pr [O (p; g; g a ; g b ; g c ) = "true"] fi fi n ff The probability is over the random choice of a; b; c in <ref> [1; jG p j] </ref>, and the random choice of hp; gi according to the distribution induced by IG (n). We construct a probabilistic polynomial time (in s (p) and jpj) perfect-ddh algorithm, A, which makes use of the oracle O. <p> Given p; g and x; y; z 2 G p algorithm A must determine with overwhelming probability whether it is a valid Diffie-Hellman triplet or not. Consider the following statistical experiment: pick random integers u 1 ; u 2 ; v in the range <ref> [1; s (p) 2 ] </ref> and construct the triplet (x 0 ; y 0 ; z 0 ) = (x v g u 1 ; yg u 2 ; z v y u 1 x vu 2 g u 1 u 2 ) Case 1. <p> Set w 0 = ab and w 1 = c. Then fi fi fi Pr [A (; 1; a; b; w s ; w 1s ) = s] 2 fi fi &lt; m 2 =p where the probability is over the random choice of a; b; c in <ref> [1; p] </ref>, the random encoding and the random bits used by the algorithm. Proof Sketch We bound the amount of information available to the algorithm after m queries. <p> Let g be a generator of Z fl p . Define the following two distributions over f0; 1g 3k : * P 1 is the uniform distribution among all strings in the set where a; b are in the range <ref> [1; p] </ref> and g a ; g b ; g ab are reduced modulo p. * P 2 is the uniform distribution on f0; 1g 3k . <p> The ElGamal public key system encrypts a message m 2 Z p given a public key g a by computing hg b ; m g ab i. Here b is chosen at random in <ref> [1; ord (g)] </ref>. Decryption using the private key a is done by first computing g ab and then dividing to obtain m. 9 When g is a generator of Z fl p the system in not semantically secure 2 . Some information about the plaintext is revealed. <p> They show how to construct a collection of efficient pseudo random functions. Such functions can be used as the basis of many cryptographic schemes including symmetric encryption, authentication [14] and digital signatures <ref> [1] </ref>. Prior to these results, existing constructions [15, 23] based on number theoretic primitives were by far less efficient. Pseudo random functions were first introduced by Goldreich, Goldwasser and Micali [15]. <p> A function in the set is parameterized by a seed s = hp; g; ~ai where g is a generator of G p and ~a = (a 0 ; : : : ; a n ) is a vector of n + 1 random integers in the range <ref> [1; jG p j] </ref>.
Reference: [2] <author> M. Bellare, S. Micali, </author> <title> "Non-interactive oblivious transfer and applications", </title> <booktitle> Crypto '89, </booktitle> <pages> pp. 547-557. </pages>
Reference-contexts: Recently, Canetti [6] described a simple construction based on ddh for a primitive called "Oracle Hashing". These are hash functions that let one test that b = h (a), but given b alone, they reveal no information about a. Bellare and Micali <ref> [2] </ref> use ddh to construct a non-interactive oblivious transfer protocol. Brands [5] pointed out that several suggestions for undeniable signatures [8] implicitly rely on ddh. Steiner, Tsudik and Waidner [32] show that ddh implies generalized-ddh.
Reference: [3] <author> D. Boneh, R. Lipton, </author> <title> "Black box fields and their application to cryptography", </title> <booktitle> Proc. of Crypto '96, </booktitle> <pages> pp. 283-297. </pages>
Reference-contexts: We say that the group G satisfies the Computational Diffie-Hellman assumption (cdh) if no efficient algorithm can compute the function dh g (x; y) in G. Precise definitions are given in the next section. Recent results provide some limited reductions from computing discrete log to computing the Diffie-Hellman function <ref> [20, 3, 21] </ref>. Unfortunately, cdh by itself is not sufficient to prove that the Diffie-Hellman protocol is useful for practical cryptographic purposes. Even though Eve may be unable to recover the entire secret, she may still be able to recover valuable information about it.
Reference: [4] <author> D. Boneh, R. Venkatesan, </author> <title> "Hardness of computing most significant bits in secret keys of Diffie-Hellman and related schemes", </title> <booktitle> Proc. of Crypto '96, </booktitle> <pages> pp. 129-142. </pages>
Reference-contexts: Unfortunately, even proving that computing one bit of g ab given g a and g b is as hard as cdh is open. Currently, the only result along these lines is due to Boneh and Venkatesan <ref> [4] </ref>. At the moment these results only apply to the group Z fl p and its subgroups. We define the k most significant bits of an elements x 2 Z fl p as the k most significant bits of x when viewed as an integer in the range [0; p). <p> Does the ddh assumption in Z fl N follow from the hardness of distinguishing quadratic residues from non residues with Jacobi symbol +1 ? 3. Can one improve the results of <ref> [4] </ref> (see Section 3.3) and show that in Z fl p the single most significant bit of the Diffie-Hellman secret is as hard to compute as the entire secret? Also, does a similar result to that of [4] hold in the group of points of an elliptic curve? Acknowledgments The author <p> Can one improve the results of <ref> [4] </ref> (see Section 3.3) and show that in Z fl p the single most significant bit of the Diffie-Hellman secret is as hard to compute as the entire secret? Also, does a similar result to that of [4] hold in the group of points of an elliptic curve? Acknowledgments The author thanks Victor Shoup for many insightful comments on an early draft of this paper. 12
Reference: [5] <author> S. Brands, </author> <title> "An efficient off-line electronic cash system based on the representation problem", </title> <type> CWI Technical report, </type> <institution> CS-R9323, </institution> <year> 1993. </year>
Reference-contexts: These are hash functions that let one test that b = h (a), but given b alone, they reveal no information about a. Bellare and Micali [2] use ddh to construct a non-interactive oblivious transfer protocol. Brands <ref> [5] </ref> pointed out that several suggestions for undeniable signatures [8] implicitly rely on ddh. Steiner, Tsudik and Waidner [32] show that ddh implies generalized-ddh. They consider a generalization of Diffie-Hellman enabling a group of parties to exchange a common secret key.
Reference: [6] <author> R. Canetti, </author> <title> "Towards realizing random oracles: hash functions that hide all partial information", </title> <booktitle> Proc. Crypto '97, </booktitle> <pages> pp. 455-469. </pages>
Reference-contexts: In case Bob encrypts his bid with a non-malleable system, this form of cheating is impossible. 11 4.4 Others The ddh assumption is used in many other papers as well. We very briefly mention four (see also the summary in [24]). Recently, Canetti <ref> [6] </ref> described a simple construction based on ddh for a primitive called "Oracle Hashing". These are hash functions that let one test that b = h (a), but given b alone, they reveal no information about a. Bellare and Micali [2] use ddh to construct a non-interactive oblivious transfer protocol.
Reference: [7] <author> R. Canetti, J. Friedlander, I. Shparlinski, </author> <title> "On certain exponential sums and the distribution of Diffie-Hellman triples", </title> <type> Manuscript. </type>
Reference-contexts: Recently, Canetti, Friedlander and Shparlinski <ref> [7] </ref> showed that the triples (g a ; g b ; g ab ) are uniformly distributed modulo p in the sense of Weyl. Let p be a prime and g a generator of Z fl p . <p> Since there are (p 1) 2 triples over all, one would expect (p 1) 2 jBj=(p 1) 3 of these to fall inside the box. Denote the discrepancy by = sup B fi fi N (B) p 1 fi fi Then we know <ref> [7] </ref> that this discrepancy is small. Theorem 3.4 (CFS) Let p be an n-bit prime and g a generator of Z fl p .
Reference: [8] <author> D. Chaum, H. van Antwerpen, </author> <title> "Undeniable signatures", </title> <booktitle> Proc. Crypto '89, </booktitle> <pages> pp. 212-216. </pages>
Reference-contexts: These are hash functions that let one test that b = h (a), but given b alone, they reveal no information about a. Bellare and Micali [2] use ddh to construct a non-interactive oblivious transfer protocol. Brands [5] pointed out that several suggestions for undeniable signatures <ref> [8] </ref> implicitly rely on ddh. Steiner, Tsudik and Waidner [32] show that ddh implies generalized-ddh. They consider a generalization of Diffie-Hellman enabling a group of parties to exchange a common secret key.
Reference: [9] <author> H. Cohen, </author> <title> "A course in computational number theory", </title> <publisher> Springer-Verlag. </publisher>
Reference-contexts: We use Shoup's terminology. To disprove ddh one may first try to come up with a ddh algorithm that works in all groups. Indeed, such an algorithm would be devastating. However, the best known generic algorithm for ddh is a generic discrete log algorithm, namely the Baby-Step-Giant-Step <ref> [9] </ref>. When applied in a group of prime order p this algorithm runs in time O * ( p p). Shoup shows that this is the best possible generic algorithm for ddh. We discuss the implications of this result at the end of the section.
Reference: [10] <author> D. Coppersmith, </author> <title> "Finding a Small Root of a Bivariate Integer Equation; Factoring with high bits known", </title> <booktitle> Proc. Eurocrypt '96, </booktitle> <year> 1996. </year>
Reference-contexts: Interestingly, this is the only result where the LLL algorithm is used to prove the security of a cryptographic primitive. Usually, LLL is used to attack cryptosystems (for example, consider Coppersmith's low exponent attacks on RSA <ref> [10] </ref>). 3.4 Statistical results Although we cannot give bounds on the computational complexity of ddh some results are known on the statistical distribution of proper Diffie-Hellman triples in the group Z fl p .
Reference: [11] <author> R. Cramer, V. Shoup, </author> <title> "A practical public key cryptosystem provably secure against adaptive chosen ciphertext attack", </title> <type> manuscript. </type>
Reference-contexts: Hence, the evaluation requires n modular multiplications and one exponentiation. Note that we are assuming the order of G p is known. 4.3 A cryptosystem secure against adaptive chosen ciphertext attack Recently, Cramer and Shoup <ref> [11] </ref> presented a surprising application of ddh. They describe an efficient public key cryptosystem which is secure against adaptive chosen ciphertext attack.
Reference: [12] <author> W. Diffie, M. Hellman, </author> <title> "New directions in cryptography", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 22, no. 6, </volume> <pages> pp. 644-654, </pages> <year> 1976. </year>
Reference-contexts: 1 Introduction An important goal of cryptography is to pin down the exact complexity assumptions used by cryptographic protocols. Consider the Diffie-Hellman key exchange protocol <ref> [12] </ref>: Alice and Bob fix a finite cyclic group G and a generator g. They respectively pick random a; b 2 [1; jGj] and exchange g a ; g b . The secret key is g ab .
Reference: [13] <author> D. Dolev, C. Dwork, M. Naor, </author> <title> "Non-malleable cryptography", </title> <booktitle> Proc. STOC' 91, </booktitle> <pages> pp. 542-552. </pages>
Reference-contexts: They describe an efficient public key cryptosystem which is secure against adaptive chosen ciphertext attack. Security against such a powerful attack could only be obtained previously by extremely inefficient techniques <ref> [25, 27, 13] </ref> relying on constructions for non-interactive zero-knowledge (efficient heuristic constructions are described in [33]). In light of this, it is remarkable that the ddh assumption is able to dramatically simplify things. An adaptive ciphertext attack is an attack where the adversary has access to a decryption oracle. <p> Indeed, if this were not the case, the attacker would simply query the decryption oracle at C 0 and learn information about the decryption of C. Thus, the Cramer-Shoup cryptosystem is also non-malleable (assuming ddh). Non-malleable systems are needed in many scenarios (see <ref> [13] </ref>). For instance, to cheat in a bidding system, Alice may not need to discover Bob's bid. She may only want to offer a lower bid.
Reference: [14] <author> O. Goldreich, S. Goldwasser, S. Micali, </author> <title> "On the cryptographic applications of random functions", </title> <booktitle> Crypto' 84, </booktitle> <pages> pp. 276-288. </pages>
Reference-contexts: They show how to construct a collection of efficient pseudo random functions. Such functions can be used as the basis of many cryptographic schemes including symmetric encryption, authentication <ref> [14] </ref> and digital signatures [1]. Prior to these results, existing constructions [15, 23] based on number theoretic primitives were by far less efficient. Pseudo random functions were first introduced by Goldreich, Goldwasser and Micali [15].
Reference: [15] <author> O. Goldreich, S. Goldwasser, S. Micali, </author> <title> "How to construct random functions", </title> <journal> J. ACM, </journal> <volume> Vol. 33, </volume> <year> 1986, </year> <pages> pp. 792-807. </pages>
Reference-contexts: They show how to construct a collection of efficient pseudo random functions. Such functions can be used as the basis of many cryptographic schemes including symmetric encryption, authentication [14] and digital signatures [1]. Prior to these results, existing constructions <ref> [15, 23] </ref> based on number theoretic primitives were by far less efficient. Pseudo random functions were first introduced by Goldreich, Goldwasser and Micali [15]. <p> Prior to these results, existing constructions [15, 23] based on number theoretic primitives were by far less efficient. Pseudo random functions were first introduced by Goldreich, Goldwasser and Micali <ref> [15] </ref>.
Reference: [16] <author> O. Goldreich, L.A. Levin, </author> <title> "Hard core bits based on any one way function", </title> <booktitle> Proc. STOC '89. </booktitle>
Reference-contexts: Nevertheless, based on cdh alone Alice and Bob can derive one unpredictable bit (known as a hard 1 core bit <ref> [16] </ref>) from g ab . If, given g a ; g b , Eve could predict the hard core bit of g ab , she could also compute all of g ab . <p> Rather, they are derived from g ab by viewing it as a bit string over Z 2 and computing its inner product with a public random vector over Z 2 of the same length. To apply the Goldreich-Levin theorem <ref> [16] </ref> to the Diffie-Hellman function one must make use of tricks described in [30, Sect. 5]. 2 2 Definitions We formally define the notion of indistinguishable distributions and the Decision Diffie-Hellman problem. Throughout the paper we use the term efficient as short hand for probabilistic polynomial time.
Reference: [17] <author> S. Goldwasser, S. Micali, </author> <title> "Probabilistic encryption", </title> <journal> J. Computer and Syst. Sciences, </journal> <volume> Vol. 28, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: = x 1 x 2 : : : x n 2 f0; 1g n is defined by f p;g;~a (x) = g a 0 i=1 a x i The distribution on the seed s is induced by the random choice of ~a and the distribution induced on 2 Semantic security <ref> [17] </ref> is the standard security notion for an encryption scheme. It essentially says that any informa tion about the plaintext an eavesdropper can obtain given the ciphertext, can also be obtained without the ciphertext. 10 hp; gi by IG (n). <p> The only restriction is that the queries must be different than the given ciphertext C. The adversary's goal is to then deduce some information about the plaintext M with non-negligible advantage. To motivate this notion of security we point out that the standard semantic security model <ref> [17] </ref> provides security against passive (i.e. eavesdropping) attacks. It does not provide any security against an active attacker who is able to influence the behavior of honest parties in the network. In contrast, security against adaptive chosen ciphertext attacks provides security against any active adversary.
Reference: [18] <author> J. Hastad, R. Impaglizzo, L. Levin, M. Luby, </author> <title> "Construction of pseudo random generators from one-way functions", </title> <journal> SIAM J. of Computing, </journal> <note> to appear. Also see preliminary version in STOC' 89. 13 </note>
Reference-contexts: This is somewhat cumbersome since often one wishes to encrypt an n-bit string rather than a group element. This can be easily fixed using hashing. Suppose jGj &gt; 2 n . Then assuming ddh, the string g ab has at least n bits of computational entropy <ref> [18] </ref>. Note that the bit string representing g ab may be much longer. Hashing g ab to an m-bit string for some m n results in a bit-string indistinguishable from random. Encryption can be done by xoring this m bit hashed string with the plaintext. <p> Encryption can be done by xoring this m bit hashed string with the plaintext. To formally argue that this hashing results in a pseudo random string one makes use of the leftover hash lemma <ref> [18] </ref> and pairwise independent hash functions. 4.2 Efficient pseudo random functions Naor and Reingold [24] describe a beautiful application of ddh. They show how to construct a collection of efficient pseudo random functions.
Reference: [19] <author> A. Lenstra, H. Lenstra, L. Lovasz, </author> <title> "Factoring polynomial with rational coefficients", </title> <journal> Mathe--matiche Annalen, </journal> <volume> 261 </volume> <pages> 515-534, </pages> <year> 1982. </year>
Reference-contexts: Then there is also an expected polynomial time algorithm that given p; g; g a ; g b computes all of g ab . Proof Sketch The proof relies on lattice basis reductions and the LLL algorithm <ref> [19] </ref>. Given some g a and g b we wish to compute all of g ab . To do so, we pick one random r and apply A to the points g a+r ; g b+t for many random values of t.
Reference: [20] <author> U. Maurer, </author> <title> "Towards proving the equivalence of breaking the Diffie-Hellman protocol and computing discrete logarithms", </title> <booktitle> Proc. of Crypto '94, </booktitle> <pages> pp. 271-281. </pages>
Reference-contexts: We say that the group G satisfies the Computational Diffie-Hellman assumption (cdh) if no efficient algorithm can compute the function dh g (x; y) in G. Precise definitions are given in the next section. Recent results provide some limited reductions from computing discrete log to computing the Diffie-Hellman function <ref> [20, 3, 21] </ref>. Unfortunately, cdh by itself is not sufficient to prove that the Diffie-Hellman protocol is useful for practical cryptographic purposes. Even though Eve may be unable to recover the entire secret, she may still be able to recover valuable information about it.
Reference: [21] <author> U. Maurer, S. Wolf, </author> <title> "Diffie-Hellman oracles", </title> <booktitle> Proc. of Crypto '96, </booktitle> <pages> pp. 268-282. </pages>
Reference-contexts: We say that the group G satisfies the Computational Diffie-Hellman assumption (cdh) if no efficient algorithm can compute the function dh g (x; y) in G. Precise definitions are given in the next section. Recent results provide some limited reductions from computing discrete log to computing the Diffie-Hellman function <ref> [20, 3, 21] </ref>. Unfortunately, cdh by itself is not sufficient to prove that the Diffie-Hellman protocol is useful for practical cryptographic purposes. Even though Eve may be unable to recover the entire secret, she may still be able to recover valuable information about it.
Reference: [22] <author> U. Maurer, S. Wolf, </author> <title> "Lower bounds on generic algorithms in groups", </title> <note> Proc. of Eurocrypt '98, to appear. </note>
Reference-contexts: This lower bound shows there is no efficient generic ddh algorithm that works in all groups. It is important to keep this in mind when searching for efficient ddh algorithms. The algorithm must make use of the particular group encoding. Using a similar argument Maurer and Wolf <ref> [22] </ref> show that no efficient generic algorithm can reduce cdh to ddh.
Reference: [23] <author> M. Naor, O. Reingold, </author> <title> "Synthesizers and their application to the parallel construction of pseudo-random functions", </title> <booktitle> Proc. FOCS '95, </booktitle> <pages> pp. 170-181. </pages>
Reference-contexts: They show how to construct a collection of efficient pseudo random functions. Such functions can be used as the basis of many cryptographic schemes including symmetric encryption, authentication [14] and digital signatures [1]. Prior to these results, existing constructions <ref> [15, 23] </ref> based on number theoretic primitives were by far less efficient. Pseudo random functions were first introduced by Goldreich, Goldwasser and Micali [15].
Reference: [24] <author> M. Naor, O. Reingold, </author> <title> "Number theoretic constructions of efficient pseudo random functions", </title> <booktitle> Proc. FOCS '97. </booktitle> <pages> pp. 458-467. </pages>
Reference-contexts: A perfect-ddh algorithm does more than a ddh algorithm. Namely, it correctly decides whether dh g (x; y) = z for most triplets. In contrast, a ddh algorithm is only required to correctly decide with non-negligible advantage. Stadler [31, Prop. 1] and independently Naor and Reingold <ref> [24] </ref> showed that the two assumption, ddh and perfect-ddh, are equivalent. This conversion of an imperfect oracle into a perfect one is done via a random reduction. <p> Encryption can be done by xoring this m bit hashed string with the plaintext. To formally argue that this hashing results in a pseudo random string one makes use of the leftover hash lemma [18] and pairwise independent hash functions. 4.2 Efficient pseudo random functions Naor and Reingold <ref> [24] </ref> describe a beautiful application of ddh. They show how to construct a collection of efficient pseudo random functions. Such functions can be used as the basis of many cryptographic schemes including symmetric encryption, authentication [14] and digital signatures [1]. <p> Here A n ; B n are finite domains. The statistical test is only given "black-box" access to the function. That is, it can ask an oracle to evaluate the given function at a point of its choice, but cannot peak at the internal implementation. We refer to <ref> [24] </ref> for the precise definition. Let G = fG p g be a group family. <p> In case Bob encrypts his bid with a non-malleable system, this form of cheating is impossible. 11 4.4 Others The ddh assumption is used in many other papers as well. We very briefly mention four (see also the summary in <ref> [24] </ref>). Recently, Canetti [6] described a simple construction based on ddh for a primitive called "Oracle Hashing". These are hash functions that let one test that b = h (a), but given b alone, they reveal no information about a.
Reference: [25] <author> M. Naor, M. Yung, </author> <title> "Public key cryptosystems provable secure against chosen ciphertext attacks", </title> <booktitle> STOC '90, </booktitle> <pages> pp. 427-437 </pages>
Reference-contexts: They describe an efficient public key cryptosystem which is secure against adaptive chosen ciphertext attack. Security against such a powerful attack could only be obtained previously by extremely inefficient techniques <ref> [25, 27, 13] </ref> relying on constructions for non-interactive zero-knowledge (efficient heuristic constructions are described in [33]). In light of this, it is remarkable that the ddh assumption is able to dramatically simplify things. An adaptive ciphertext attack is an attack where the adversary has access to a decryption oracle.
Reference: [26] <author> V. Nechaev, </author> <title> "Complexity of a determinate algorithm for the discrete logarithm", </title> <journal> Mathematical Notes, </journal> <volume> Vol. 55 (2), </volume> <year> 1994, </year> <pages> pp. 165-172. </pages>
Reference-contexts: A random reduction such as Theorem 3.1 is an important part of any hardness assumption. Essentially, it shows that assuming one cannot decide the Diffie-Hellman problem with overwhelming probability then one cannot decide it in any non-negligible fraction of the input space. 5 3.2 Generic algorithms Nechaev <ref> [26] </ref> and Shoup [30] describe models enabling one to argue about lower bounds on computations of discrete log as well as ddh. We use Shoup's terminology. To disprove ddh one may first try to come up with a ddh algorithm that works in all groups.
Reference: [27] <author> C. Rackoff, D. Simon, </author> <title> "Non-interactive zero knowledge proof of knowledge and chosen ci-phertext attack", </title> <booktitle> Crypto' 91, </booktitle> <pages> pp. 433-444. </pages>
Reference-contexts: They describe an efficient public key cryptosystem which is secure against adaptive chosen ciphertext attack. Security against such a powerful attack could only be obtained previously by extremely inefficient techniques <ref> [25, 27, 13] </ref> relying on constructions for non-interactive zero-knowledge (efficient heuristic constructions are described in [33]). In light of this, it is remarkable that the ddh assumption is able to dramatically simplify things. An adaptive ciphertext attack is an attack where the adversary has access to a decryption oracle.
Reference: [28] <author> C. Schnorr, </author> <title> "A hierarchy of polynomial time lattice basis reduction algorithms", </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 53, </volume> <year> 1987, </year> <pages> pp. 201-224. </pages>
Reference-contexts: Indeed, the quality of the shortest vector produced by LLL implies the p log p bound on the number of necessary bits. To prove the result for * &lt; 1 one makes use of Schnorr's improvement of the LLL algorithm <ref> [28] </ref>. Once ff is found, recovering g ab is trivial. fl The result shows that under cdh there is no efficient algorithm that computes roughly p log p bits of the Diffie-Hellman secret. To illustrate this, one may take * = 1.
Reference: [29] <author> J. Schwartz, </author> <title> "Fast probabilistic algorithms for verification of polynomial identities", </title> <journal> J. ACM, </journal> <volume> Vol. 27 (4), </volume> <year> 1980, </year> <pages> pp. 701-717. </pages>
Reference-contexts: This is a polynomial of total degree 2. Consequently, the probability that a random (x; y; z) 2 Z 3 p is a zero of G is bounded by 2=p (see <ref> [29] </ref>). There are m such pairs F i ; F j to consider. Hence, the probability that a random (x; y; z; xy) is the root of some F i F j is bounded by Pr [R] m 2 &lt; p The theorem now follows.
Reference: [30] <author> V. Shoup, </author> <title> "Lower bounds for discrete logarithms and related problems", </title> <booktitle> Proc. Eurocrypt '97, </booktitle> <pages> pp. 256-266. </pages>
Reference-contexts: To apply the Goldreich-Levin theorem [16] to the Diffie-Hellman function one must make use of tricks described in <ref> [30, Sect. 5] </ref>. 2 2 Definitions We formally define the notion of indistinguishable distributions and the Decision Diffie-Hellman problem. Throughout the paper we use the term efficient as short hand for probabilistic polynomial time. <p> Essentially, it shows that assuming one cannot decide the Diffie-Hellman problem with overwhelming probability then one cannot decide it in any non-negligible fraction of the input space. 5 3.2 Generic algorithms Nechaev [26] and Shoup <ref> [30] </ref> describe models enabling one to argue about lower bounds on computations of discrete log as well as ddh. We use Shoup's terminology. To disprove ddh one may first try to come up with a ddh algorithm that works in all groups. Indeed, such an algorithm would be devastating.
Reference: [31] <author> M. Stadler, </author> <title> "Publicly verifiable secret sharing", </title> <booktitle> Proc. Eurocrypt '96, </booktitle> <pages> pp. 190-199. </pages>
Reference-contexts: A perfect-ddh algorithm does more than a ddh algorithm. Namely, it correctly decides whether dh g (x; y) = z for most triplets. In contrast, a ddh algorithm is only required to correctly decide with non-negligible advantage. Stadler <ref> [31, Prop. 1] </ref> and independently Naor and Reingold [24] showed that the two assumption, ddh and perfect-ddh, are equivalent. This conversion of an imperfect oracle into a perfect one is done via a random reduction.
Reference: [32] <author> M. Steiner, G. Tsudik, M. Waidner, </author> <title> "Diffie-Hellman key distribution extended to group communication", </title> <booktitle> Proc. 3rd ACM Conference on Communications Security, </booktitle> <year> 1996, </year> <pages> pp. 31-37. </pages>
Reference-contexts: Bellare and Micali [2] use ddh to construct a non-interactive oblivious transfer protocol. Brands [5] pointed out that several suggestions for undeniable signatures [8] implicitly rely on ddh. Steiner, Tsudik and Waidner <ref> [32] </ref> show that ddh implies generalized-ddh. They consider a generalization of Diffie-Hellman enabling a group of parties to exchange a common secret key.
Reference: [33] <author> Y. Zheng, J. Seberry, </author> <title> "Practical approaches to attaining security against adaptively chosen ciphertext attacks", </title> <booktitle> Crypto '92, </booktitle> <pages> pp. 292-304. 14 </pages>
Reference-contexts: They describe an efficient public key cryptosystem which is secure against adaptive chosen ciphertext attack. Security against such a powerful attack could only be obtained previously by extremely inefficient techniques [25, 27, 13] relying on constructions for non-interactive zero-knowledge (efficient heuristic constructions are described in <ref> [33] </ref>). In light of this, it is remarkable that the ddh assumption is able to dramatically simplify things. An adaptive ciphertext attack is an attack where the adversary has access to a decryption oracle. The adversary is given a ciphertext C = E (M ).
References-found: 33

