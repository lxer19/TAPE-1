URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Hayashi+Kuipers-IROS92.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/whats-new.html
Root-URL: 
Title: on Intelligent Robots and Systems (IROS'92) A Continuous Approach to Robot Motion Planning with Many
Author: Akira Hayashi Benjamin Kuipers 
Address: 680-4 Kawazu, Iizuka 820, Japan  Austin, TX 78712, U.S.A.  
Affiliation: Faculty of Computer Science and System Engineering Kyushu Institute of Technology  Department of Computer Sciences The University of Texas at Austin  
Note: In Proceedings of the 1992 IEEE International Conference  A  
Abstract: There is a need for highly redundant manipulators to work in complex, cluttered environments. We explore kinematics and path planning for highly redundant manipulators by means of a continuous manipulator model, which captures the macroscopic shape of highly redundant manipulators. On top of the free space representation, we have developed an algorithm to find a continuous curvature path in 2-D with a maximum curvature constraint. We report on an experiment conducted to measure the efficiency of the algorithm. The 2-D path planning algorithm could be used for path planning in 3-D space by restricting the manipulator movement. Alternatively, 3-D free space can be decomposed into primary convex regions. The path planning problem has been shown to be P SP ACE-complete in terms of DOF of the manipulator. However, DOF of the manipulator is a resource to be utilized in our approach, because the error bound on the mapping improves with the number of DOF of the manipulator. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Basu and J. Aloimonos. </author> <title> Approximate constrained motion planning. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year>
Reference-contexts: Smoothness of path is critical for autonomous vehicle navigation and there are algorithms to find a path which consists of straight line and tangent circular arc segments <ref> [29, 28, 15, 1] </ref>.
Reference: [2] <author> R. A. Brooks. </author> <title> Planning collision-free motions for pick-and-place operations. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 2(4), </volume> <year> 1983. </year>
Reference-contexts: The same free space representation was then used to plan a collision free path for manipulators by restricting the hand movement <ref> [2] </ref>. Free space in 3-D is represented by its horizontal 2-D slices. With this 2 1 2 -D approach, most of the method we have developed for 2-D can be used without modification. Alternatively, we decompose 3-D free space into primary convex regions [9].
Reference: [3] <author> R. A. Brooks. </author> <title> Solving the find-path problem by good representation of free space. </title> <journal> IEEE transaction on Systems, Man and Cybernetics, </journal> <volume> 13 </volume> <pages> 190-197, </pages> <year> 1983. </year>
Reference-contexts: The algorithm is efficient in practice. We report on an experiment conducted to measure the performance of the algorithm. There are two feasible approaches for extending this 2-D path planning approach to 3-D space. <ref> [3] </ref> proposed decomposing free space into generalized cones in order to find a path for mobile robots. The same free space representation was then used to plan a collision free path for manipulators by restricting the hand movement [2]. Free space in 3-D is represented by its horizontal 2-D slices. <p> We first decompose free space into convex regions. We need to select a primitive for free space decomposition best suited to our task: finding smooth paths. One of the earliest papers on free space decomposition is <ref> [3] </ref>. In his algorithm, free space is decomposed into generalized cones which are considered to be free ways. But the robot is supposed to pass along the spines of generalized cones, are shown as line segments.
Reference: [4] <author> J. Canny. </author> <title> Some algebraic and geometric computations in pspace. </title> <booktitle> In Proceedings of the ACM symposium on Theory of Computing, </booktitle> <year> 1988. </year>
Reference-contexts: An experiment has been conducted to show that the algorithm is efficient in practice. The path planning problem has been shown to be P SP ACE-complete in terms of DOF of the manipulator <ref> [23, 4] </ref>. However, DOF of the manipulator is a resource to be utilized in our approach, because the error bound on the mapping improves with the number of DOF of the manipulator.
Reference: [5] <author> G. S. Chirikjian and J. W. Burdick. </author> <title> An obstacle avoidance algorithm for hyper-redundant manipulators. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year>
Reference-contexts: Because of the continuity of our model, we have great flexibility in decompositions. In particular, we can choose any point as a decomposition point, and we can move a decomposition point smoothly along the length of the continuous model to make one segment longer while making the other shorter. <ref> [5] </ref> presents an approach similar to ours. While we use 5 point interpolation to discretize curvature and torsion, they use a modal decomposition. However, in their paper, obstacle avoidance was accomplished by manual decomposition and selection of curvature functions.
Reference: [6] <author> W. I. Clement and R. M. I. nigo. </author> <title> Design of a snake-like manipulator. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6 </volume> <pages> 265-282, </pages> <year> 1990. </year>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) [22], elastic manipulator [13], spine robot [7, 27], tentacle manipulator [14], elephant's trunk like elastic manipulator [20], snake-like manipulator <ref> [6] </ref>. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [7] <author> T. J. Drozda. </author> <title> The spine robot... the verdict's yet to come. </title> <booktitle> Manufacturing Engineering, </booktitle> <pages> pages 110-112, </pages> <month> September </month> <year> 1984. </year>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) [22], elastic manipulator [13], spine robot <ref> [7, 27] </ref>, tentacle manipulator [14], elephant's trunk like elastic manipulator [20], snake-like manipulator [6]. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [8] <author> A. Hayashi. </author> <title> Geometrical Motion Planning for Highly Redundant Manipulators using a Continuous Model. </title> <type> PhD thesis, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <month> May </month> <year> 1991. </year>
Reference-contexts: work has been done on the study of mechanical designs for highly redundant manipulators, little attention has been paid to kinematics and path planning for such manipulators. 1.2 Continuous Manipulator Model We have been exploring kinematics and path planning for highly redundant manipulators by means of a continuous manipulator model <ref> [11, 8, 10] </ref>. The shape of continuous arms along their center line can be directly expressed by the continuous model. Even for jointed arms, their macroscopic shape can be expressed. The continuous manipulator model is essentially a smooth curve with a fixed length.
Reference: [9] <author> A. Hayashi and S. Kodama. </author> <title> Free space decomposition and path planning in 3d. </title> <booktitle> In The Second Pacific Rim International Conference on Artificial Intelligence (PRICAI'92), </booktitle> <pages> pages 294-300, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Free space in 3-D is represented by its horizontal 2-D slices. With this 2 1 2 -D approach, most of the method we have developed for 2-D can be used without modification. Alternatively, we decompose 3-D free space into primary convex regions <ref> [9] </ref>. Smooth 3-D curves with curvature and torsion will be used to make turns from one such region to another. 2 1.4 Organization of the paper The rest of the paper proceeds as follows.
Reference: [10] <author> A. Hayashi and B. J. Kuipers. </author> <title> Path planning for highly redundant manipulators using a continuous model. </title> <booktitle> In The Ninth National Conference of Artificial Intelligence (AAAI-91), </booktitle> <pages> pages 666-672, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: work has been done on the study of mechanical designs for highly redundant manipulators, little attention has been paid to kinematics and path planning for such manipulators. 1.2 Continuous Manipulator Model We have been exploring kinematics and path planning for highly redundant manipulators by means of a continuous manipulator model <ref> [11, 8, 10] </ref>. The shape of continuous arms along their center line can be directly expressed by the continuous model. Even for jointed arms, their macroscopic shape can be expressed. The continuous manipulator model is essentially a smooth curve with a fixed length.
Reference: [11] <author> A. Hayashi, J. Park, and B. J. Kuipers. </author> <title> Toward planning and control of highly redundant manipulators. </title> <booktitle> In Fifth IEEE International Symposium on Intelligent Control, </booktitle> <pages> pages 683-688, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: work has been done on the study of mechanical designs for highly redundant manipulators, little attention has been paid to kinematics and path planning for such manipulators. 1.2 Continuous Manipulator Model We have been exploring kinematics and path planning for highly redundant manipulators by means of a continuous manipulator model <ref> [11, 8, 10] </ref>. The shape of continuous arms along their center line can be directly expressed by the continuous model. Even for jointed arms, their macroscopic shape can be expressed. The continuous manipulator model is essentially a smooth curve with a fixed length.
Reference: [12] <author> S. Hirose, K. Ikuta, and Y. Umetani. </author> <title> A new design method of servo actuators based on the shape memory effect. </title> <booktitle> In Proceedings of Fifth Symposium on Robotics, Man, and System, </booktitle> <year> 1984. </year>
Reference-contexts: Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied <ref> [12] </ref>.
Reference: [13] <author> S. Hirose, T. Kado, and Y. Umetani. </author> <title> Tensor actuated elastic manipulator. </title> <booktitle> In Proceedings of the Sixth World Congress on Theory of Machines and mechanisms, </booktitle> <year> 1983. </year>
Reference-contexts: Their applications include passing trough restricted passages for the inspection or the maintenance of a mechanical system such as a nuclear reactor and a spacecraft. In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) [22], elastic manipulator <ref> [13] </ref>, spine robot [7, 27], tentacle manipulator [14], elephant's trunk like elastic manipulator [20], snake-like manipulator [6]. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [14] <author> M. Ivanescu and I. Badea. </author> <title> Dynamic control for a tentacle manipulator. </title> <booktitle> In Proceedings of the International Conference on Robotics and Factories of the Future, </booktitle> <year> 1984. </year>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) [22], elastic manipulator [13], spine robot [7, 27], tentacle manipulator <ref> [14] </ref>, elephant's trunk like elastic manipulator [20], snake-like manipulator [6]. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [15] <author> P. Jacobs and J. Canny. </author> <title> Planning smooth paths for mobile robots. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: Smoothness of path is critical for autonomous vehicle navigation and there are algorithms to find a path which consists of straight line and tangent circular arc segments <ref> [29, 28, 15, 1] </ref>.
Reference: [16] <author> Y. Kanayama and B. I. Hartman. </author> <title> Smooth local path planning for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: However, curvature discontinuity exists at every tangent point in these paths, because circular arcs have constant curvature equal to the inverse of their radius and straight lines have zero curvature. <ref> [16] </ref> have proposed to use cubic spiral curves in order to make a smooth (i.e. continuous curvature) move from one position and orientation to another. Cubic spirals can be constructed to have zero curvature at tangent points. But they did not address the path planning problem. <p> A cubic spiral is a curve whose orientation (integration of the curvature) is described by a cubic function of path distance s. <ref> [16] </ref> have developed a method to make a smooth move from one position and orientation to another, using cubic spiral curves.
Reference: [17] <author> D. T. Kuan, J. C. Zamiska, and R. A. Brooks. </author> <title> Natural decomposition of free space for path planning. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1985. </year>
Reference-contexts: But the robot is supposed to pass along the spines of generalized cones, are shown as line segments. Each region is shrunken for visibility. which will leave less room for our path optimization to make smooth turns. <ref> [17] </ref> decompose free space into disjoint polygons: passage regions and channel regions. Passage regions are supposed to correspond to open space (rooms, squares,..), and channel regions to paths connecting open space. Passage regions may be good candidates for smooth turns. <p> Since each edge of a primary convex region covers some portion of an obstacle wall, the region seems to be natural. In addition, PCR can be seen as an extension of the passage region in <ref> [17] </ref>. In fact, for any passage region, there exists some primary convex region which contains the passage region. PCRs are suitable representation for our task, because of the following reasons. * The convexity of PCRs makes the path optimization easier.
Reference: [18] <author> T. Lozano-Perez. </author> <title> Robot programming. </title> <booktitle> Proceedings of IEEE, </booktitle> <volume> 71(7) </volume> <pages> 821-841, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: Path planning is an important component of task level programming <ref> [18] </ref>. To plan a path for the continuous manipulator model, it is natural to restrict its motion to follow-the-leader type (snake-like) motion, in which its tip trajectory is traced by its succeeding parts.
Reference: [19] <author> A. Martelli. </author> <title> On the complexity of admissible search algorithms. </title> <journal> Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 1-13, </pages> <year> 1977. </year>
Reference-contexts: This is because a node in the graph is determined by a sequence of 3 PCRs (factor 2) and there cannot be more than O (n 4 ) PCRs. By using the algorithm in <ref> [19] </ref> which improves the exponential worst case running time of A fl and runs in the square of the number of nodes (factor 2), we obtain O (n 24 ) as an upper bound. 5 example obstacle PCRs candidate nodes path search time edges corners in graph length (sec) 1 12
Reference: [20] <author> A. Morecki, K. Jaworek, W. Pogorzelski, T. Zielinska, J. Fraczek, and G. Malczyk. </author> <title> Robotics system elephant trunk type elastic manipulator combined with a quadruped walking machine. </title> <booktitle> In Proceedings of the Second International Conference on Robotics and Factories of the Future, </booktitle> <year> 1987. </year>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) [22], elastic manipulator [13], spine robot [7, 27], tentacle manipulator [14], elephant's trunk like elastic manipulator <ref> [20] </ref>, snake-like manipulator [6]. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [21] <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Morgan Kauf-mann Publishers, Inc., </publisher> <year> 1980. </year>
Reference-contexts: We use the A fl algorithm (see <ref> [21] </ref>) to find a path in the connectivity graph As a heuristic function, we use Eu-clidean distance from a current node (midpoint of its line segment) to a goal position.
Reference: [22] <author> D. L. Pieper. </author> <title> The kinematics of manipulators under computer control. </title> <type> PhD thesis, </type> <institution> Stanford University, Mechanical Engineering Department, </institution> <year> 1968. </year>
Reference-contexts: Their applications include passing trough restricted passages for the inspection or the maintenance of a mechanical system such as a nuclear reactor and a spacecraft. In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) <ref> [22] </ref>, elastic manipulator [13], spine robot [7, 27], tentacle manipulator [14], elephant's trunk like elastic manipulator [20], snake-like manipulator [6]. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [23] <author> J. H. Reif. </author> <title> Complexity of the generalized movers' problem. </title> <booktitle> In Proceedings of the 20th IEEE symposium on Foundations of Computer Science, </booktitle> <year> 1979. </year>
Reference-contexts: An experiment has been conducted to show that the algorithm is efficient in practice. The path planning problem has been shown to be P SP ACE-complete in terms of DOF of the manipulator <ref> [23, 4] </ref>. However, DOF of the manipulator is a resource to be utilized in our approach, because the error bound on the mapping improves with the number of DOF of the manipulator.
Reference: [24] <author> K. D. Rueb and A. K. C. Wong. </author> <title> Structuring free space as a hyper-graph for roving robot path planning and navigation. </title> <journal> IEEE Transaction on Pattern Analysis and Machine Intelligence, </journal> <volume> 9(2) </volume> <pages> 263-273, </pages> <year> 1987. </year>
Reference-contexts: We have developed an algorithm to find a continuous curvature path within a maximum curvature constraint, based on a decomposition of free space into primary convex regions <ref> [24, 25] </ref>. The algorithm is efficient in practice. We report on an experiment conducted to measure the performance of the algorithm. <p> Moreover, since they decompose free space into disjoint convex regions, they miss straight line path segments if they exist, and the path obtained will have more line segments (and more turns) than other methods. <ref> [24] </ref> propose the notion of primary convex regions. A primary convex region (PCR) is an unobstructed convex region with each boundary edge covering some portion of an obstacle wall (See Fig. 2). <p> It is easier to find a long straight line path segment, and hence is easier to ob tain paths which have less turns. We have implemented the algorithm in <ref> [24] </ref> to find PCRs given obstacles. <p> An upper bound on the algorithm to find PCRs is O (n 4 ) time in the number of obstacle edges <ref> [24] </ref> (factor 1). If we treat the number of candidate turning corners as a constant, the number of nodes for A fl search is bounded by O (n 12 ).
Reference: [25] <author> J. S. Singh and M. D. Wagh. </author> <title> Robot path planning using intersecting convex shapes: Analysis and simulation. </title> <journal> IEEE journal of Robotics and Automation, </journal> <volume> RA-3(2):101-108, </volume> <month> April </month> <year> 1987. </year>
Reference-contexts: We have developed an algorithm to find a continuous curvature path within a maximum curvature constraint, based on a decomposition of free space into primary convex regions <ref> [24, 25] </ref>. The algorithm is efficient in practice. We report on an experiment conducted to measure the performance of the algorithm.
Reference: [26] <author> J. J. Stoker. </author> <title> Differential Geometry. </title> <publisher> Wiley-Interscience, </publisher> <year> 1969. </year>
Reference-contexts: Operators now include those to move (s a ; t a ) through (s e ; t e ). We use the Frenet equations (1) to obtain a configuration from curvature and torsion (see <ref> [26] </ref>). 0 _v 1 (s) _v 3 (s) A = @ (s) 0 +t (s) 1 0 v 1 (s) v 3 (s) A (1) v 1 (s), v 2 (s), v 3 (s) are the tangent, normal, and binor-mal vectors.
Reference: [27] <author> D. J. Todd. </author> <title> Fundamentals of robot technology. </title> <publisher> John Wiley and Sons, </publisher> <year> 1986. </year>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwe-gian word for snakes) [22], elastic manipulator [13], spine robot <ref> [7, 27] </ref>, tentacle manipulator [14], elephant's trunk like elastic manipulator [20], snake-like manipulator [6]. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied [12].
Reference: [28] <author> G. Wilfong. </author> <title> Shortest paths for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: Smoothness of path is critical for autonomous vehicle navigation and there are algorithms to find a path which consists of straight line and tangent circular arc segments <ref> [29, 28, 15, 1] </ref>.
Reference: [29] <author> G. T. Wilfong. </author> <title> Motion planning for an autonomous vehicle. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1988. </year> <month> 8 </month>
Reference-contexts: Smoothness of path is critical for autonomous vehicle navigation and there are algorithms to find a path which consists of straight line and tangent circular arc segments <ref> [29, 28, 15, 1] </ref>.
References-found: 29

