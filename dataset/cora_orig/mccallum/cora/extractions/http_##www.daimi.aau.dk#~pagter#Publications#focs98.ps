URL: http://www.daimi.aau.dk/~pagter/Publications/focs98.ps
Refering-URL: http://www.daimi.aau.dk/~pagter/Publications/
Root-URL: http://www.daimi.aau.dk
Abstract: Copyright 1998 IEEE. Published in the Proceedings of FOCS'98, 8-11 November 1998 in Palo Alto, CA. Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any copyrighted component of this work in other works, must be obtained from the IEEE. Contact: Manager, Copyrights and Permissions / IEEE Service Center / 445 Hoes Lane / P.O. Box 1331 / Piscataway, NJ 08855-1331, USA. Telephone: + Intl. 732-562-3966. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Andersson. </author> <title> Sorting and Searching Revisited. </title> <editor> In R. Karls-son and A. Lingas, editors, </editor> <booktitle> Algorithm Theory - SWAT'96, </booktitle> <pages> pages 185197. </pages> <publisher> Springer, </publisher> <month> July </month> <year> 1996. </year>
Reference-contexts: 1. Introduction 1.1. Motivation and results The complexity of sorting is a classical problem in computer science which has provided a wide scope of both algorithms and lower bounds (see Knuth [10] and Andersson <ref> [1] </ref> for an overview of classical as well as more recent work in the area). One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7].
Reference: [2] <author> P. Beame. </author> <title> A General Sequential Time-Space Tradeoff for Finding Unique Elements. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20:270277, </volume> <year> 1991. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. Accordingly, time-space trade-offs for sorting is a much studied problem <ref> [2, 4, 6, 8, 13, 15] </ref>. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). <p> E-mail: fpagter,theisg@brics.dk. y Part of this work was done while the author was visiting the Fields Institute, Toronto, Canada. z Basic Research in Computer Science, Centre of the Danish National Research Foundation. of this work, a discrepancy of at least a logarithmic factor (referred to in <ref> [2, 4, 5, 6, 16] </ref>) between the best known upper boundO (n 2 log n) [8], and the best known lower bound (n 2 ) [2]remained. <p> Hence by Beame's result <ref> [2] </ref> we obtain as a corollary that the time-space trade-off complexity is fi (n 2 ) for the full range of space bounds between log n and n= log n in general sequential models of computation. Clearly this range is maximal for comparison based sorting. <p> An example of a non-comparison based algorithm realising T S = O (n 2 log n) is radix-sorting (for keys of size n O (1) ). With the strong restriction that all keys to be sorted are between 1 and n, Beame <ref> [2] </ref> exhibits a general branching program realising T S = O (n 2 ). Besides restricting the key-size it is not clear how to construct a uniform (e.g. RAM) version. <p> This was followed by a result of Borodin and Cook, showing that any general branching program for sorting has T S = (n 2 = log n). Their result was improved by Beame <ref> [2] </ref>, who showed that any general branching program for sorting has T S = (n 2 ). Set problems. Beame's result is actually obtained by a simple reduction from the unique elements problem (given n keys, output all those that appear exactly once). <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>. <p> This will work for log 2 n n=S w = O (n), i.e., c 1 log n S c 2 n= log n, for appropriate positive constants c 1 and c 2 . 2 The following corollary is immediate from Theorem 1 and the result of Beame <ref> [2] </ref>.
Reference: [3] <author> A. Borodin. </author> <title> Time Space Tradeoffs (Getting Closer to the Barrier?). </title> <editor> In K. Ng, P. Raghavan, N. Balasubramanian, and F. Chin, editors, </editor> <booktitle> Algorithms and Computation; 4th International Symposium, </booktitle> <address> ISAAC'93. </address> <publisher> Springer-Verlag, LNCS 762, </publisher> <month> December </month> <year> 1993. </year>
Reference-contexts: Clearly this range is maximal for comparison based sorting. Our result involves a new technique for sorting based on Tree Selection (see [10]). 1.2. Related work A general survey of time-space trade-offs is given by Borodin in <ref> [3] </ref>. An introduction to the area is given by Savage [14]. Upper bounds. Classical sorting algorithms like QuickSort and MergeSort, have T S = O (n 2 log 2 n).
Reference: [4] <author> A. Borodin and S. Cook. </author> <title> A Time-Space Tradeoff for Sorting on a General Sequential Model of Computation. </title> <journal> SIAM Journal on Computing, </journal> <volume> 11(2):287297, </volume> <year> 1982. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. Accordingly, time-space trade-offs for sorting is a much studied problem <ref> [2, 4, 6, 8, 13, 15] </ref>. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). <p> E-mail: fpagter,theisg@brics.dk. y Part of this work was done while the author was visiting the Fields Institute, Toronto, Canada. z Basic Research in Computer Science, Centre of the Danish National Research Foundation. of this work, a discrepancy of at least a logarithmic factor (referred to in <ref> [2, 4, 5, 6, 16] </ref>) between the best known upper boundO (n 2 log n) [8], and the best known lower bound (n 2 ) [2]remained. <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [5] <author> A. Borodin, F. Fich, F. M. auf der Heide, E. Upfal, and A. Wigderson. </author> <title> A Time-Space Tradeoff for Element Distinctness. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16:9799, </volume> <year> 1987. </year>
Reference-contexts: E-mail: fpagter,theisg@brics.dk. y Part of this work was done while the author was visiting the Fields Institute, Toronto, Canada. z Basic Research in Computer Science, Centre of the Danish National Research Foundation. of this work, a discrepancy of at least a logarithmic factor (referred to in <ref> [2, 4, 5, 6, 16] </ref>) between the best known upper boundO (n 2 log n) [8], and the best known lower bound (n 2 ) [2]remained. <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [6] <author> A. Borodin, M. J. Fischer, D. G. Kirkpatrick, N. A. Lynch, and M. Tompa. </author> <title> A Time-Space Tradeoff for Sorting on Non-Oblivious Machines. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 22:351364, </volume> <year> 1981. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. Accordingly, time-space trade-offs for sorting is a much studied problem <ref> [2, 4, 6, 8, 13, 15] </ref>. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). <p> E-mail: fpagter,theisg@brics.dk. y Part of this work was done while the author was visiting the Fields Institute, Toronto, Canada. z Basic Research in Computer Science, Centre of the Danish National Research Foundation. of this work, a discrepancy of at least a logarithmic factor (referred to in <ref> [2, 4, 5, 6, 16] </ref>) between the best known upper boundO (n 2 log n) [8], and the best known lower bound (n 2 ) [2]remained. <p> Lower bounds. The first non-trivial lower bound for non-oblivious sorting was given by Borodin et al. <ref> [6] </ref>, who showed that any comparison branching program (see Section 2) sorting n keys has T S = (n 2 ). This was followed by a result of Borodin and Cook, showing that any general branching program for sorting has T S = (n 2 = log n). <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [7] <author> A. Cobham. </author> <title> The Recognition Problem for the Set of Perfect Squares. </title> <booktitle> In Conference Record of 1966 Seventh Annual Symposium on Switching and Automata Theory (FOCS'7), </booktitle> <pages> pages 7887. </pages> <publisher> IEEE, </publisher> <year> 1966. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham <ref> [7] </ref>. Accordingly, time-space trade-offs for sorting is a much studied problem [2, 4, 6, 8, 13, 15]. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT).
Reference: [8] <author> G. N. Frederickson. </author> <title> Upper Bounds for Time-Space Tradeoffs in Sorting and Selection. </title> <journal> Journal of Computer and Systems Sciences, </journal> <volume> 34:1926, </volume> <year> 1987. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. Accordingly, time-space trade-offs for sorting is a much studied problem <ref> [2, 4, 6, 8, 13, 15] </ref>. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). <p> author was visiting the Fields Institute, Toronto, Canada. z Basic Research in Computer Science, Centre of the Danish National Research Foundation. of this work, a discrepancy of at least a logarithmic factor (referred to in [2, 4, 5, 6, 16]) between the best known upper boundO (n 2 log n) <ref> [8] </ref>, and the best known lower bound (n 2 ) [2]remained. <p> For algorithms with random access input the first fully scalable, and till now the best upper bound for the time-space trade-off was given by Frederickson <ref> [8] </ref>, who showed that for 4 log n S = O (n) there exists a comparison RAM algorithm sorting n keys in time T and space S such that T S = O (n 2 log n). 1 Of course, these upper bounds also hold in models more general than the <p> Combining our ideas with those of Frederickson <ref> [8] </ref> we can remove this logarithmic factor, and obtain the theorem (notice that in terms of comparisons the desired bound is already achieved). Proof of Theorem 1. The idea is to use Lemma 1 as a subroutine in Frederickson's algorithm [8]. <p> Combining our ideas with those of Frederickson <ref> [8] </ref> we can remove this logarithmic factor, and obtain the theorem (notice that in terms of comparisons the desired bound is already achieved). Proof of Theorem 1. The idea is to use Lemma 1 as a subroutine in Frederickson's algorithm [8]. We will employ an extra space measure S w , for the number of fi (log n)-sized words used, because Frederickson only uses words of this size. This implies S = fi (S w log n).
Reference: [9] <author> M. Karchmer. </author> <title> Two Time-Space Tradeoffs for Element Distinctness. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 47:237246, </address> <year> 1986. </year>
Reference-contexts: Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [10] <author> D. E. Knuth. </author> <title> Sorting and Searching, </title> <booktitle> volume 3 of The Art of Computer Programming. </booktitle> <publisher> Addison-Wesley, </publisher> <address> 2. edition, </address> <year> 1998. </year>
Reference-contexts: 1. Introduction 1.1. Motivation and results The complexity of sorting is a classical problem in computer science which has provided a wide scope of both algorithms and lower bounds (see Knuth <ref> [10] </ref> and Andersson [1] for an overview of classical as well as more recent work in the area). One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. <p> Clearly this range is maximal for comparison based sorting. Our result involves a new technique for sorting based on Tree Selection (see <ref> [10] </ref>). 1.2. Related work A general survey of time-space trade-offs is given by Borodin in [3]. An introduction to the area is given by Savage [14]. Upper bounds. Classical sorting algorithms like QuickSort and MergeSort, have T S = O (n 2 log 2 n). <p> Our data structure consist of a new technique for sorting which may be understood in terms of Tree Selection <ref> [10] </ref>.
Reference: [11] <author> J. I. Munro and M. S. Paterson. </author> <title> Selection and Sorting with Limited Storage. </title> <journal> Theoretical Computer Science, </journal> <volume> 12:315 323, </volume> <year> 1980. </year>
Reference-contexts: The study of upper bounds on the time-space trade-off for sorting was initiated by Munro and Paterson <ref> [11] </ref> who gave a time-space focused algorithm in a model with tape-input.
Reference: [12] <author> B. Patt-Shamir and D. Peleg. </author> <title> Time-Space Tradeoffs for Set Operations. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 110:99129, </address> <year> 1993. </year>
Reference-contexts: Another set problem is element distinctness (given n keys, decide whether they are all distinct). Yao [16] has shown that any comparison branching program solving the element distinctness problem on n keys, must have T S = (n 2*(n) ), where *(n) is decreasing in n. Patt-Shamir and Peleg <ref> [12] </ref> studies a number of other set problems, including: set complementation (given a set X from some finite subset of an ordered universe U , output X C ), set subtraction (given X and Y , output X n Y ), symmetric difference (given X and Y , output (X [ <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [13] <author> S. Reisch and G. Schnitger. </author> <title> Three Applications of Kolmogorov-Complexity. </title> <booktitle> In 23rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 4552. </pages> <publisher> IEEE, </publisher> <year> 1982. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. Accordingly, time-space trade-offs for sorting is a much studied problem <ref> [2, 4, 6, 8, 13, 15] </ref>. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [14] <author> J. E. Savage. </author> <title> Models of Computation. </title> <publisher> Addison-Wesley, </publisher> <year> 1998. </year>
Reference-contexts: Clearly this range is maximal for comparison based sorting. Our result involves a new technique for sorting based on Tree Selection (see [10]). 1.2. Related work A general survey of time-space trade-offs is given by Borodin in [3]. An introduction to the area is given by Savage <ref> [14] </ref>. Upper bounds. Classical sorting algorithms like QuickSort and MergeSort, have T S = O (n 2 log 2 n). This stems from the fact that space is measured in bits and these algorithm use a linear number of log-sized words and O (n log n) comparisons. <p> A thorough account of branching programs is given by Savage <ref> [14] </ref>. 2.2. Notation Throughout the paper, we assume that n and m are integer powers of two to ease exposition. Consider a vector x = (x 1 ; : : : ; x n ) 2 U n from some ordered universe U .
Reference: [15] <author> A. C.-C. Yao. </author> <title> On The Time-Space Tradeoff For Sorting With Linear Queries. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 19:203218, </address> <year> 1982. </year>
Reference-contexts: One fruitful line of research has been the investigation of the trade-off between the two most fundamental complexity measures, time and space, an investigation pioneered by Cobham [7]. Accordingly, time-space trade-offs for sorting is a much studied problem <ref> [2, 4, 6, 8, 13, 15] </ref>. Despite the successes fl Supported by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
Reference: [16] <author> A. C.-C. Yao. </author> <title> Near-optimal Time-Space Tradeoff for Element Distinctness. </title> <journal> SIAM Journal on Computing, </journal> <volume> 23:966 975, </volume> <year> 1994. </year>
Reference-contexts: E-mail: fpagter,theisg@brics.dk. y Part of this work was done while the author was visiting the Fields Institute, Toronto, Canada. z Basic Research in Computer Science, Centre of the Danish National Research Foundation. of this work, a discrepancy of at least a logarithmic factor (referred to in <ref> [2, 4, 5, 6, 16] </ref>) between the best known upper boundO (n 2 log n) [8], and the best known lower bound (n 2 ) [2]remained. <p> For keys between 1 and n Beame gives a matching upper bound. Our result implies optimality without this restriction on the range of the keys. Another set problem is element distinctness (given n keys, decide whether they are all distinct). Yao <ref> [16] </ref> has shown that any comparison branching program solving the element distinctness problem on n keys, must have T S = (n 2*(n) ), where *(n) is decreasing in n. <p> Branching programs. Most time-space trade-offs lower bounds for sorting and similar problems are proved for the non-uniform branching program model <ref> [2, 4, 5, 6, 9, 12, 13, 15, 16] </ref>.
References-found: 16

