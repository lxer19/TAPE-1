URL: http://drl.cs.uiuc.edu/pubs/tods94.ps
Refering-URL: http://drl.cs.uiuc.edu/security/pubs.html
Root-URL: http://www.cs.uiuc.edu
Title: Formal Query Languages For Secure Relational Databases  
Author: Marianne Winslett Kenneth Smith Xiaolei Qian 
Abstract: The addition of stringent security specifications to the list of requirements for an application poses many new problems in DBMS design and implementation, as well as database design, use, and maintenance. Tight security requirements, such as those that result in silent masking or withholding of true information from a user or the introduction of false information into query answers, also raise fundamental questions about the meaning of the database and the semantics of accompanying query languages. In this paper, we propose a belief-based semantics for secure databases, which provides a semantics for databases that can `lie' about the state of the world, or about their knowledge about the state of the world, in order to preserve security. This kind of semantics can be used as a helpful retrofit for the proposals for a `multilevel secure' database model (a particularly stringent form of security), and may be useful for less restrictive security policies as well. We also propose a family of query languages for multilevel secure relational database applications, and base the semantics of those languages on our semantics for secure databases. Our query languages are free of the semantic problems associated with use of ordinary SQL in a multilevel secure context, and should be easy for users to understand and employ. 
Abstract-found: 1
Intro-found: 1
Reference: [Akl and Denning 1987] <author> S. Akl and D. Denning, </author> <title> "Checking Classification Constraints for Consistency and Completeness," </title> <booktitle> Proceedings of the IEEE Computer Society Symposium on Research in Security and Privacy , Oakland, </booktitle> <month> April </month> <year> 1987, </year> <pages> 196-201. </pages>
Reference: [Bell and LaPadula 1974] <author> D. E. Bell and L. J. LaPadula. </author> <title> Secure Computer Systems: Mathematical Foundations and Model. </title> <type> Technical report, </type> <institution> MITRE Corporation, </institution> <year> 1974. </year>
Reference-contexts: and query languages for databases under mandatory security. 2.2 Mandatory Security The proposals for a multilevel secure relational model [Jajodia and Sandhu 1991, Haigh et al. 1991, Denning et al. 1987] implement the policy of mandatory protection defined in [DoD 1985] and interpreted for computerized systems by Bell and LaPadula <ref> [Bell and LaPadula 1974] </ref>. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance.
Reference: [Binns 1991] <author> L. Binns, </author> <title> "Inference Through Polyinstantiation," </title> <booktitle> Proceedings of the Fourth RADC Database Security Workshop, </booktitle> <month> April </month> <year> 1991, </year> <pages> 74-84. </pages>
Reference: [Binns 1992a] <author> L. Binns, </author> <title> "Inference Through Secondary Path Analysis," </title> <booktitle> Proceedings of the Sixth Working Conference on Database Security , August 1992, </booktitle> <pages> 203-211. </pages>
Reference: [Binns 1992b] <author> L. Binns, </author> <title> "Inference and Cover Stories," </title> <booktitle> Proceedings of the Sixth Working Conference on Database Security , August 1992, </booktitle> <pages> 179-186. 26 </pages>
Reference: [Bonatti et al. 1992] <author> P. Bonatti, S. Kraus, and V. Subrahmanian, </author> <title> "Declarative Foundations of Secure Deductive Databases," </title> <booktitle> International Conference on Database Theory, </booktitle> <year> 1992. </year>
Reference-contexts: Her paper considers multilevel security in general, and applies her techniques to a database example: the question of describing Seaview's policy of mandatory security and integrity. Glasgow's interest is in security policy description, rather than 5 the database concerns of query languages addressed in this paper. Bonatti <ref> [Bonatti et al. 1992] </ref> uses a modal logic of knowledge, belief, secrecy, and allowability to address an aspect of the inference problem [Akl and Denning 1987, Binns 1992a, Binns 1992b, Binns 1991, Su and Ozsoyoglu 1987].
Reference: [Ceri and Widom 1990] <author> S. Ceri and J. Widom, </author> <title> "Deriving Production Rules for Constraint Maintenance," </title> <booktitle> Proceedings of the Sixteenth International Conference on Very Large Data Bases, </booktitle> <month> August </month> <year> 1990, </year> <pages> 566-577. </pages>
Reference-contexts: Database-integrated production rules, such as those implemented within Starburst [Widom and Finkelstein 1990] and Postgres [Stonebraker et al. 1988], have recently been integrated into the MLS database framework [Smith and Winslett 1992b]. We anticipate that triggered rules will be the enforcement mechanism of choice for many rules <ref> [Ceri and Widom 1990] </ref>, while some particularly common types of rules may have special-purpose built-in constructs available at the syntactic level to declare and enforce them (much as single-level relational systems usually have special support for declaring and enforcing ordinary relational keys).
Reference: [Chellas 1980] <author> B. F. Chellas, </author> <title> Modal Logic, </title> <publisher> Cambridge University Press, </publisher> <year> 1980. </year>
Reference-contexts: This section describes a semantics for secure databases. In particular, we define an interpretation (in the logic sense) of a secure database, which draws on Kripke models <ref> [Chellas 1980] </ref> with a simple, 8 In the SeaView system [Denning et al. 1987], all these tuples are not stored directly in the database. <p> Semantics for modal languages are usually defined in terms of Kripke models <ref> [Chellas 1980] </ref>, that is, models consisting of interrelated possible worlds. In our context, a Kripke model is a set of databases related to one another by the `dominates' relationship.
Reference: [Costich and McDermott 1992] <author> O. Costich and J. McDermott, </author> <title> "A Multilevel Transaction Problem for Multilevel Secure Database Systems and its Solution for the Replicated Architecture," </title> <booktitle> Proceedings of the IEEE Computer Society Symposium on Research in Security and Privacy , Oakland, </booktitle> <month> May </month> <year> 1992, </year> <pages> 192-203. </pages>
Reference-contexts: For now, we ask the reader to assume the existence of a language with which one could express cross-level constraints. 12 In an MLS context, the constraints can be enforced in a variety of ways, without violating mandatory security <ref> [Costich and McDermott 1992] </ref>. Database-integrated production rules, such as those implemented within Starburst [Widom and Finkelstein 1990] and Postgres [Stonebraker et al. 1988], have recently been integrated into the MLS database framework [Smith and Winslett 1992b]. <p> For example, the INSERT request might cause the triggering and execution of rules at the user's level, or at higher levels. In this paper, we assume that the execution of such rules has been shown to guarantee mandatory security (e.g., through preanalysis and run-time multilevel transactions <ref> [Costich and McDermott 1992] </ref>), and focus our attention on the update requests themselves. 5.3 Update The UPDATE statement has the following general form: UPDATE R SET (A i = a i [; A j = a j ]* ) WHERE P ; As is usual in SQL, the SET clause cannot
Reference: [Cuppens 1992] <author> F. Cuppens, </author> <title> "A Modal Logic Framework to Solve Aggregation Problems," </title> <editor> In C. Landwehr and S. Jajodia, editors, </editor> <title> Database Security V: Status and Prospects, </title> <booktitle> 1992, </booktitle> <pages> 315-332. </pages>
Reference-contexts: These authors also consider the problem of keeping facts secret, but the only strategy that the system is allowed to use is that of keeping silent. The authors use a non-modal formalization of the problem. Cuppens <ref> [Cuppens 1992] </ref> has used a modal logic of allowability and knowledge to investigate the aggregation problem.
Reference: [DoD 1985] <institution> Department of Defense, National Computer Security Center. Department of Defense Trusted Computer System Evaluation Criteria, </institution> <year> 1985. </year> <note> DOD 5200.28-STD. </note>
Reference-contexts: we take the first step toward that goal, by formalizing semantics and query languages for databases under mandatory security. 2.2 Mandatory Security The proposals for a multilevel secure relational model [Jajodia and Sandhu 1991, Haigh et al. 1991, Denning et al. 1987] implement the policy of mandatory protection defined in <ref> [DoD 1985] </ref> and interpreted for computerized systems by Bell and LaPadula [Bell and LaPadula 1974]. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance.
Reference: [Denning et al. 1987] <author> D. Denning, T. Lunt, R. Schell, M. Heckman, and W. Shockley, </author> <title> "A Multilevel Relational Data Model," </title> <booktitle> Proceedings of the IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, </address> <month> April </month> <year> 1987, </year> <pages> 220-234. </pages>
Reference-contexts: The user should also be able to ask Where do Unclassified users think that the Enterprise is going? and receive a (possibly different) answer. Our proposed query languages will make these queries easy to pose. * Proliferation of tuples due to updates. In <ref> [Denning et al. 1987] </ref> an update can introduce a number of new polyinstantiated tuples that is exponential in the number of security classes involved. [Jajodia and Sandhu 1991] eliminates much but not all of this proliferation, as in the following update to Figure 1 by a T S-user: UPDATE SOD 8 <p> This section describes a semantics for secure databases. In particular, we define an interpretation (in the logic sense) of a secure database, which draws on Kripke models [Chellas 1980] with a simple, 8 In the SeaView system <ref> [Denning et al. 1987] </ref>, all these tuples are not stored directly in the database. Rather, at the physical schema level, each relation is decomposed into a set of fragments, so that each fragment contains only information at a single level (plus the key). <p> We use the term `database' to refer to a database at a level of the interpretation. 12 If different schemas are desirable at different levels, this can be accomplished using techniques similar to those used in the SeaView project <ref> [Denning et al. 1987] </ref>.
Reference: [Denning 1976] <author> D. Denning, </author> <title> "A Lattice Model of Secure Information Flow," </title> <journal> Communications of the ACM 19:5, </journal> <year> 1976, </year> <pages> 236-243. </pages>
Reference-contexts: prevent subjects 4 The moral of this particular example may be that users should not have update authorization for attributes whose `real' values might not be visible to them. 5 Some work in mandatory security places additional requirements on the poset, such as a requirement that it be a lattice <ref> [Denning 1976] </ref>. However, these properties are not needed in our work. 3 from directly passing information downward through the security hierarchy, as required by the mandatory policy.
Reference: [Froscher and Meadows 1989] <author> J. N. Froscher and C. Meadows, </author> <title> "Achieving a Trusted Database Management System Using Parallelism," in Database Security II: Status and Prospects, </title> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: that most of the information believed at a particular level will also be believed at the levels above it, and therefore a storage architecture that avoids redundant storage of information will prove most appropriate from that point of view (although other concerns may mitigate in favor of redundant storage; see <ref> [Froscher and Meadows 1989] </ref>). The repetition of shared beliefs that is inherent in our semantics need not carry over into a redundant storage representation.
Reference: [Glasgow et al. 1992] <author> J. Glasgow, G. MacEwen, and P. Panangaden, </author> <title> "A Logic for Reasoning About Security," </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10:3, </volume> <month> August </month> <year> 1992. </year>
Reference-contexts: Modal logic is just a tool, not a solution approach, and so these other authors have used modal logic to explore questions different from those that interest us here. We briefly survey these efforts below. Glasgow <ref> [Glasgow et al. 1992] </ref> uses a modal logic of knowledge as the basis for specifying and reasoning about secure distributed systems. Her paper considers multilevel security in general, and applies her techniques to a database example: the question of describing Seaview's policy of mandatory security and integrity.
Reference: [Haigh et al. 1991] <author> J. Haigh, R. O'Brien, and D. Thomsen, </author> <title> "The LDV Secure Relational DBMS Model," </title> <editor> in S. Jajodia and C. Landwehr, editors, </editor> <title> Database Security, IV: Status and Prospects , 265-279. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference: [Jajodia and Sandhu 1990] <author> S. Jajodia and R. Sandhu. </author> <title> "Polyinstantiation Integrity in Multilevel Relations," </title> <booktitle> Proceedings: IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> 104-115, </pages> <address> Oakland, </address> <month> May </month> <year> 1990. </year>
Reference: [Jajodia and Sandhu 1991] <author> S. Jajodia and R. Sandhu, </author> <title> "Toward A Multilevel Secure Relational Data Model," </title> <booktitle> Proceedings: ACM SIGMOD, </booktitle> <pages> pages 50-59, </pages> <address> Denver, Colorado, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: In the remainder of this section, we will show how lack of such a semantics leads to problems in databases that store multiple versions of reality, including current MLS models. In our examples, we will use the recent model of <ref> [Jajodia and Sandhu 1991] </ref>; the problems we describe are present in other MLS models as well. Under the model of [Jajodia and Sandhu 1991], security labels are attached to individual fields of a tuple, and a subject is only able to read a particular tuple field if the subject's label dominates <p> In our examples, we will use the recent model of <ref> [Jajodia and Sandhu 1991] </ref>; the problems we describe are present in other MLS models as well. Under the model of [Jajodia and Sandhu 1991], security labels are attached to individual fields of a tuple, and a subject is only able to read a particular tuple field if the subject's label dominates that of the tuple field. * Semantic ambiguity. An MLS relation does not always have a single semantic interpretation. <p> An MLS relation does not always have a single semantic interpretation. For example, Figure 1 shows an instance of the relation scheme SOD (Starship, Objective, Destination), where Starship is the key, as an MLS relation under the model of <ref> [Jajodia and Sandhu 1991] </ref>. Consider the two polyinstantiated tuples sharing the attribute Starship Starship Objective Objective Destination Destination Tuple Class Class Class Class Enterprise U Exploration U Vulcan U U Enterprise C Diplomacy C Romulus C C value `Enterprise'. <p> Our proposed query languages will make these queries easy to pose. * Proliferation of tuples due to updates. In [Denning et al. 1987] an update can introduce a number of new polyinstantiated tuples that is exponential in the number of security classes involved. <ref> [Jajodia and Sandhu 1991] </ref> eliminates much but not all of this proliferation, as in the following update to Figure 1 by a T S-user: UPDATE SOD 8 SET Destination = `Pluto' WHERE Starship = `Enterprise'; As Figure 2 shows, the number of Enterprise tuples doubles after this update is performed.
Reference: [Korth and Silberschatz 1991] <author> H. F. Korth and A. Silberschatz. </author> <title> Database System Concepts. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Selection. (E 1 []), where is a selection condition (defined below); 6. Level Shift. (B [E 1 ]E 2 ), where E 1 is a query expression whose result is a unary relation over Labels. Items 1 through 5 are the usual definition of relational algebra (see, e.g., <ref> [Ullman 1988, Korth and Silberschatz 1991] </ref>), and we won't say much about them here. Item 6 is new; intuitively, B [E 1 ]E 2 poses the question contained in E 2 to the database at the level (s) determined by E 1 .
Reference: [Imielinski and Lipski 1984] <author> T. Imielinski and W. Lipski, </author> <title> "Incomplete Information in Relational Databases," </title> <journal> Journal of the ACM, </journal> <volume> 31:4, </volume> <month> October </month> <year> 1984. </year> <month> 27 </month>
Reference-contexts: Null values may be included in the formal treatment by formalizing them in one of the standard manners, e.g., <ref> [Zaniolo 1984, Liu and Sunderraman 1990, Imielinski and Lipski 1984] </ref>. 10 9 Although Self could be computed on demand from Anyone using max, we will include Self explicitly in the schema, as it won't ever be updated and is very useful in queries. 10 We have omitted nulls because they cause
Reference: [Liu and Sunderraman 1990] <author> K.-C. Liu and R. Sunderraman, </author> <title> "Indefinite and Maybe Information in Relational Databases," </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 15:1, </volume> <month> March </month> <year> 1990, </year> <pages> 1-39. </pages>
Reference-contexts: Null values may be included in the formal treatment by formalizing them in one of the standard manners, e.g., <ref> [Zaniolo 1984, Liu and Sunderraman 1990, Imielinski and Lipski 1984] </ref>. 10 9 Although Self could be computed on demand from Anyone using max, we will include Self explicitly in the schema, as it won't ever be updated and is very useful in queries. 10 We have omitted nulls because they cause
Reference: [Qian 1994a] <author> X. Qian, </author> <title> "A Model-Theoretic Semantics of the Multilevel Secure Relational Model," </title> <booktitle> Proceedings of the International Conference on Extending Database Technology, </booktitle> <address> Cam-bridge, UK, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: For example, a typical integrity constraint might say that the subjects at level l agree with all the beliefs (tuples) in relation R at the levels immediately below l 0 , except when such an agreement would lead to a key conflict or referential integrity violation at level l <ref> [Qian 1994a] </ref>. Or, a constraint might state flatly that all levels must agree completely with the beliefs held at level U regarding, e.g., the ZipCode and LocalPlanets relations. <p> For example, the chosen syntax may use attribute-level labeling. As mentioned earlier, any current proposal P for an MLS relational model can be given a semantics, by supplying a mapping from each database under proposal P to one of our database interpretations. For example, <ref> [Qian 1994a] </ref> uses this approach to give semantics to a proposal that uses tuple-level labeling. Just as our semantics does not restrict the choice of database syntax, nor does it restrict the choice of database implementation. <p> We believe that our semantics is useful and general, and that it will be a useful retrofit for other models with existing implementations <ref> [Qian 1994a] </ref>. We also define a modal relational algebra suitable for use with our semantics, and show how to turn any formal query language into a well-defined MLS query language.
Reference: [Qian 1994b] <author> X. Qian, </author> <title> "Inference Channel-Free Integrity Constraints in Multilevel Relational Databases," </title> <booktitle> Proceedings of the IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Much attention has already been paid by others to the problem of enforcing MLS key constraints in proposals for an MLS relational model. For approaches to handling more complex constraints, we refer the reader to our related paper <ref> [Qian 1994b] </ref>. In the current paper, we simply assume that any integrity constraints for the database have been compiled into an enforcement policy that will never violate mandatory security.
Reference: [Qian and Lunt 1992] <author> X. Qian and T. Lunt, </author> <title> "Tuple-level vs Element-level Classification," </title> <booktitle> Proceedings of the Sixth IFIP Working Conference on Database Security, </booktitle> <address> Vancouver BC, </address> <month> August </month> <year> 1992, </year> <pages> 311-324. </pages>
Reference-contexts: We have also addressed the question of other formal query languages, such as secure relational algebra, and given a semantics for them. In other related work of ours ([Qian 1994a, Qian 1994b]), Qian brings a belief-based perspective to bear on the problem of multilevel integrity constraints. In <ref> [Qian and Lunt 1992] </ref> we also show how to retrofit our semantics to one particular class of MLS relational models. 3 A Semantics for Secure Relational Databases In this paper, we distinguish between the semantic and syntactic aspects of secure databases. This section describes a semantics for secure databases.
Reference: [Rabitti et al. 1991] <author> F. Rabitti, E. Bertino, W. Kim, and D. Woelk, </author> <title> "A Model of Authorization for Next-Generation Database Systems," </title> <booktitle> ACM Transaction on Database Systems 16:1, </booktitle> <month> March </month> <year> 1991. </year>
Reference-contexts: At that point, the DBMS is storing multiple versions of reality, and the exact meaning of the data in the system is unclear. 4 We believe that the most promising approach to security for applications with strict security requirements is role-based security <ref> [Rabitti et al. 1991, Ting et al. 1992] </ref>, in which access to data items is allowed or prohibited based on the role or roles in which a user is acting. Our eventual goal is to offer a sound semantic treatment of cover stories for a role-based system.
Reference: [Sandhu and Jajodia 1992] <author> R. Sandhu and S. Jajodia, </author> <title> "Polyinstantiation for Cover Stories," </title> <booktitle> Proceedings of the European Symposium on Research in Computer Security , Toulouse, </booktitle> <address> France, </address> <month> November </month> <year> 1992. </year>
Reference: [Sicherman et al. 1983] <author> G. L. Sicherman, W. de Jonge, and R. P. van de Riet, </author> <title> "Answering Queries Without Revealing Secrets," </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 8:1, </volume> <month> March </month> <year> 1983, </year> <pages> 41-59. </pages>
Reference-contexts: An earlier but very similar piece of work to Bonnati's was conducted by Sicherman, de Jonge, and van de Riet <ref> [Sicherman et al. 1983] </ref>. These authors also consider the problem of keeping facts secret, but the only strategy that the system is allowed to use is that of keeping silent. The authors use a non-modal formalization of the problem.
Reference: [Smith 1990] <author> G. Smith, </author> <title> The Modeling and Representation of Security Semantics for Database Applications. </title> <type> PhD Thesis, </type> <institution> George Mason University, </institution> <year> 1990. </year>
Reference-contexts: In parallel with the MLS data model wars, research has also been addressing the problem of semantic data modeling for MLS applications, through, for example, additions to ER modeling paradigms to allow expression of the need for a cover story for an attribute (e.g. <ref> [Smith 1990, Thuraisingham 1992] </ref>).
Reference: [Smith and Winslett 1992a] <author> K. Smith and M. Winslett, </author> <title> "Entity Modeling in the MLS Relational Model," </title> <booktitle> Proceedings of the 18th International Conference on Very Large Data Bases, </booktitle> <month> August </month> <year> 1992, </year> <pages> 199-210. </pages>
Reference-contexts: Without a semantics, syntactic issues cannot be resolved through connection to the semantics. For example, polyinstantiation has posed such a thorny issue because it is not clear what polyinstantiation means. Our earlier work on this problem appeared in <ref> [Smith and Winslett 1992a] </ref>, where Smith and Winslett introduced the idea of database interpretations (with a somewhat different definition than that used in this paper). In that paper we also gave a syntax for multilevel SQL, without cross-level joins.
Reference: [Smith and Winslett 1992b] <author> K. Smith and M. Winslett, </author> <title> "Multilevel Secure Rules: Integrating the Multilevel Secure and Active Data Models," </title> <booktitle> Proceedings of the Sixth IFIP Working Conference on Database Security , Vancouver BC, </booktitle> <month> August </month> <year> 1992, </year> <pages> 33-58. </pages>
Reference-contexts: Database-integrated production rules, such as those implemented within Starburst [Widom and Finkelstein 1990] and Postgres [Stonebraker et al. 1988], have recently been integrated into the MLS database framework <ref> [Smith and Winslett 1992b] </ref>.
Reference: [Stonebraker et al. 1988] <author> M. Stonebraker, E. N. Hanson, and S. Potamianos, </author> <title> "The POSTGRES Rule Manager," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 14:7, </volume> <pages> 897-907, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: Database-integrated production rules, such as those implemented within Starburst [Widom and Finkelstein 1990] and Postgres <ref> [Stonebraker et al. 1988] </ref>, have recently been integrated into the MLS database framework [Smith and Winslett 1992b].
Reference: [Su and Ozsoyoglu 1987] <author> T. Su and G. Ozsoyoglu, </author> <title> "Data Dependencies and Inference Control in Multilevel Relational Database Systems," </title> <booktitle> Proceedings of the IEEE Computer Society Symposium on Research in Security and Privacy , Oakland, </booktitle> <month> May </month> <year> 1987, </year> <pages> 202-211. </pages>
Reference: [Thuraisingham 1992] <author> B. Thuraisingham, </author> <title> "Handling Security Constraints During Multilevel Database Design," </title> <booktitle> Proceedings of the Fourth RADC Database Security Workshop, </booktitle> <month> August </month> <year> 1992, </year> <pages> 147-158. </pages>
Reference-contexts: In parallel with the MLS data model wars, research has also been addressing the problem of semantic data modeling for MLS applications, through, for example, additions to ER modeling paradigms to allow expression of the need for a cover story for an attribute (e.g. <ref> [Smith 1990, Thuraisingham 1992] </ref>).
Reference: [Ting et al. 1992] <author> T. Ting, S. Demurjian, and M. Hu, </author> <title> "A Specification Methodology for User-Role Based Security in an Object-Oriented Design Model: Experience with a Health Care Application," </title> <booktitle> Proceedings of the 6th IFIP Workshop on Database Security, </booktitle> <address> Vancouver, BC, Canada, </address> <year> 1992. </year>
Reference-contexts: At that point, the DBMS is storing multiple versions of reality, and the exact meaning of the data in the system is unclear. 4 We believe that the most promising approach to security for applications with strict security requirements is role-based security <ref> [Rabitti et al. 1991, Ting et al. 1992] </ref>, in which access to data items is allowed or prohibited based on the role or roles in which a user is acting. Our eventual goal is to offer a sound semantic treatment of cover stories for a role-based system.
Reference: [Ullman 1988] <author> J. D. Ullman, </author> <booktitle> Principles of Database and Knowledge Base Systems, </booktitle> <volume> Volume 1, </volume> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: Selection. (E 1 []), where is a selection condition (defined below); 6. Level Shift. (B [E 1 ]E 2 ), where E 1 is a query expression whose result is a unary relation over Labels. Items 1 through 5 are the usual definition of relational algebra (see, e.g., <ref> [Ullman 1988, Korth and Silberschatz 1991] </ref>), and we won't say much about them here. Item 6 is new; intuitively, B [E 1 ]E 2 poses the question contained in E 2 to the database at the level (s) determined by E 1 .
Reference: [Widom and Finkelstein 1990] <author> J. Widom and S. J. Finkelstein. </author> <title> "A Syntax and Semantics for Set-Oriented Production Rules in Relational Database Systems," </title> <booktitle> Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> 259-270, </pages> <address> Atlantic City, N. J., </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Database-integrated production rules, such as those implemented within Starburst <ref> [Widom and Finkelstein 1990] </ref> and Postgres [Stonebraker et al. 1988], have recently been integrated into the MLS database framework [Smith and Winslett 1992b].
Reference: [Zaniolo 1984] <author> C. Zaniolo, </author> <title> "Database Relations with Null Values," </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28, </volume> <pages> 142-166, </pages> <year> 1984. </year>
Reference-contexts: Null values may be included in the formal treatment by formalizing them in one of the standard manners, e.g., <ref> [Zaniolo 1984, Liu and Sunderraman 1990, Imielinski and Lipski 1984] </ref>. 10 9 Although Self could be computed on demand from Anyone using max, we will include Self explicitly in the schema, as it won't ever be updated and is very useful in queries. 10 We have omitted nulls because they cause
References-found: 37

