URL: http://graphics.lcs.mit.edu/~becca/classes/6.853/new_report.ps
Refering-URL: http://graphics.lcs.mit.edu/~becca/classes/classes.html
Root-URL: 
Email: (squatch@mit.edu), Magdalena Leuca (magdal@lcs.mit.edu),  (becca@ai.mit.edu)  
Title: Implementing IPv6 using  Implementing IPv6 using -Kernel  
Author: Matthew Condell and Rebecca Xiong 
Note: 1.0 Introduction 1.1 IPv6 The changes from IPv4 to IPv6 fall primarily into the following categories:  
Date: May 17, 1995 1  
Pubnum: -Kernel  
Abstract: A growing, diversifying Internet community demands changes in the Internet Protocol. In this paper we describe our implementation experiences with the proposed Internet Protocol version 6 (IPv6.) We use the x-Kernel architecture for network protocols to implement a version with the expanded 128 bit address space, and other necessary modifications. This enables IPv6 to work with UDP, ethernet and other existing protocols with which it normally interacts. We have implemented an efficient routing mechanism by caching routes based on addresses and ow labels. We ran several test configurations which compare performance between IPv4 and IPv6, and between IPv6 with and without caching. We also report a few interesting protocol design and development lessons we have learned. The rapid growth of the Internet, the proliferation of small, powerful mobile computers and the emergence of high-speed wireless interconnections to wired networks, have necessitated a change in the Internet Protocol (IP.) Motivation for a new IP is two-fold: the need for an expanded address space and new routing support that is scalable and compatible with the new address format. [RFC-1287] IP version 6 (IPv6) is the proposal put forth by the IETF as the next generation Internet Protocol. The functionality of IP is two-fold: addressing and fragmentation/reassembly of best effort datagrams between two hosts. The details can be found in [RFC-791]. Functionally IPv6 stems from IPv4, also known as IP. Hence our implementation is also based on a previous implementation of IPv4 using x-Kernel. 
Abstract-found: 1
Intro-found: 1
Reference: [IPNG-DNS] <author> S. Thomson, C. Huitema. </author> <title> DNS Extensions to support IP version 6. </title> <type> Internet Draft. </type> <month> March </month> <year> 1995. </year> <note> ftp://ds.internic.net/internet-drafts/draft ietf-ipngwg-dns-00.txt </note>
Reference-contexts: Several internet drafts have already been published that describe some of these problems and how they may be fixed. <ref> [IPNG-DNS] </ref> describes the difficulties in changing DNS so that it can handle 128 bit addresses. [IPNG-OSPF] describes the extensions to OSPF necessary to support IPv6 and [IPNG-ICMP] describes the extensions needed to ICMP. [IPNG-NSAP] discusses a possible mapping of OSI NSAP addresses into IPv6.
Reference: [IPNG-OSPF] <author> Fred Baker. OSPF IPv6 Extesnsions. </author> <title> Internet Draft. </title> <month> Dec </month> <year> 1994. </year> <note> ftp:// ds.internic.net/internet-drafts/draft-ietf-ospf-ipv6-ext-00.txt </note>
Reference-contexts: Several internet drafts have already been published that describe some of these problems and how they may be fixed. [IPNG-DNS] describes the difficulties in changing DNS so that it can handle 128 bit addresses. <ref> [IPNG-OSPF] </ref> describes the extensions to OSPF necessary to support IPv6 and [IPNG-ICMP] describes the extensions needed to ICMP. [IPNG-NSAP] discusses a possible mapping of OSI NSAP addresses into IPv6.
Reference: [IPNG-ICMP] <author> A. Conta, S. Deering. </author> <title> ICMP for the Internet Protocol Version 6 (IPv6). </title> <type> Internet Draft. </type> <month> February </month> <year> 1995. </year> <note> ftp://ds.internic.net/internet drafts/draft-ietf-ipngwg-icmp-01.txt </note>
Reference-contexts: Several internet drafts have already been published that describe some of these problems and how they may be fixed. [IPNG-DNS] describes the difficulties in changing DNS so that it can handle 128 bit addresses. [IPNG-OSPF] describes the extensions to OSPF necessary to support IPv6 and <ref> [IPNG-ICMP] </ref> describes the extensions needed to ICMP. [IPNG-NSAP] discusses a possible mapping of OSI NSAP addresses into IPv6.
Reference: [IPNG-NSAP] <author> J.Houldsworth. </author> <title> OSI NSAP usage in IPv6. </title> <type> Internet Draft. </type> <month> November </month> <year> 1994. </year> <note> ftp://ds.internic.net/internet-drafts/draft-houldsworth-ip6-nsap use-00.txt </note>
Reference-contexts: drafts have already been published that describe some of these problems and how they may be fixed. [IPNG-DNS] describes the difficulties in changing DNS so that it can handle 128 bit addresses. [IPNG-OSPF] describes the extensions to OSPF necessary to support IPv6 and [IPNG-ICMP] describes the extensions needed to ICMP. <ref> [IPNG-NSAP] </ref> discusses a possible mapping of OSI NSAP addresses into IPv6.
Reference: [IPV6-ADDR] <author> R. Hinden, </author> <title> Editor, IP Version 6 Addressing Architecture. </title> <type> Internet Draft. </type> <month> March </month> <year> 1995. </year> <note> ftp://ds.internic.net/internet-drafts/draft-hinden ipng-addr-00.txt </note>
Reference-contexts: However, some parts had to be redone. First, we had to devise a new 128-bit host address format (see Figure 1) <ref> [IPV6-ADDR] </ref>. We decided on a simple structure that encapsulates the original 32-bit IPv4 address (see Figure 2). Implementing IPv6 using x-Kernel May 17, 1995 3 Similarly, we implemented the new 40-byte IPv6 header format.
Reference: [IPV6-SPEC] <author> S. Deering and R. Hinden, </author> <title> Editors, Internet Protocol, Version 6 (IPv6) Specification. </title> <type> Internet Draft. </type> <month> March, </month> <year> 1995. </year> <note> ftp://ds.internic.net/inter net-drafts/draft-hinden-ipng-ipv6-spec-01.txt </note>
Reference-contexts: We modified the original IPv4 code to work with the new host address. Header manipulation now conforms to the IPv6 specification. <ref> [IPV6-SPEC] </ref> Some of the problems and solutions are described below: IPv6 protocol and session configuration The IPv6 protocol object is invoked when x-Kernel starts running. The protocol contains information such as the correct methods for dealing with sessions and some state information.
Reference: [RFC-791] <author> J. Postel, </author> <title> Internet Protocol, DARPA Internet Program Protocol Speci fication, Request For Comments 791, </title> <month> September </month> <year> 1981. </year>
Reference-contexts: The functionality of IP is two-fold: addressing and fragmentation/reassembly of best effort datagrams between two hosts. The details can be found in <ref> [RFC-791] </ref>. Functionally IPv6 stems from IPv4, also known as IP. Hence our implementation is also based on a previous implementation of IPv4 using x-Kernel. The changes from IPv4 to IPv6 fall primarily into the following categories: 1. Expanded Addressing Capability (32 to 128 bits) 2. Header Format Simplification 3.
Reference: [RFC-1287] <author> D. Clark, L.Chapin, V. Cerf, R. Braden, R. </author> <title> Hobby, Towards the Future Internet Architecture, </title> <type> RFC 1287, </type> <institution> MIT, BBN, CNRI, ISI, UC Davis, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: powerful mobile computers and the emergence of high-speed wireless interconnections to wired networks, have necessitated a change in the Internet Protocol (IP.) Motivation for a new IP is two-fold: the need for an expanded address space and new routing support that is scalable and compatible with the new address format. <ref> [RFC-1287] </ref> 1.1 IPv6 IP version 6 (IPv6) is the proposal put forth by the IETF as the next generation Internet Protocol. The functionality of IP is two-fold: addressing and fragmentation/reassembly of best effort datagrams between two hosts. The details can be found in [RFC-791].
Reference: [XKern-Arch] <author> Norman C. Hutchinson, Larry L. Peterson, </author> <title> The x-Kernel: An Archi tecture for Implementing Network Protocols, </title> <journal> IEEE Transaction on Software Engineering, </journal> <volume> Vol 17, No. 1, </volume> <month> January </month> <year> 1991, </year> <pages> pp. 64-75. </pages>
Reference: [XKern-Manu] <author> Edwin F. Menze III, Hilarie K. </author> <note> Orman , x-Kernel Programmers Man ual (Version 3.2), </note> <month> November </month> <year> 1994. </year>
Reference-contexts: SIMETH simulates an x-Kernel ethernet driver by sending and receiving messages using UDP. A more detailed description of the protocol layering can be found in <ref> [XKERN-MANU] </ref>. After compilation, a new version of x-Kernel is created according to the system configuration. 3.2 Network Configuration To actually run the newly created x-Kernel, we need to build a simulated network. It is specified using a network configuration file.
References-found: 10

