URL: http://www.cs.columbia.edu/~hgs/papers/Schu9305_Reducing.ps.gz
Refering-URL: http://www.cs.columbia.edu/~hgs/research/imm/
Root-URL: http://www.cs.columbia.edu
Title: Reducing and Characterizing Packet Loss for High-Speed Computer Networks with Real-Time Services  
Author: Henning G. Schulzrinne 
Degree: A Dissertation Presented by  Submitted to the Graduate School of the  in partial fulfillment of the requirements for the degree of Doctor of Philosophy  
Date: May 1993  
Affiliation: University of Massachusetts  Department of Electrical and Computer Engineering  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Jayant, Nuggehally S., </author> <title> "Effects of packet losses on waveform-coded speech," </title> <booktitle> in Proceedings of the Fifth International Conference on Computer Communications, (Atlanta, Georgia), </booktitle> <pages> pp. 275-280, </pages> <publisher> IEEE, </publisher> <month> Oct. </month> <year> 1980. </year>
Reference-contexts: For speech coded with PCM and adaptive DPCM, losses from 2 to 5% are tolerable without interpolation, while odd-even interpolation raises the threshold of objectionable loss to between 5% and 10% <ref> [1] </ref>. Compressed video is far less tolerant of lost packets. A variable-rate DPCM coder operating at around 30 Mb/s [2] is designed for a loss rate of below 10 11 . <p> Defining C C and C B as the number of consecutively lost customers and the number of customers in a busy period, respectively, we have P [C C = n] = P <ref> [C B &gt; 1] </ref> where P [C B &gt; 1] is the probability that the busy period contains more than one customer. Let us apply these results to the M=M=1 queue. <p> Defining C C and C B as the number of consecutively lost customers and the number of customers in a busy period, respectively, we have P [C C = n] = P <ref> [C B &gt; 1] </ref> where P [C B &gt; 1] is the probability that the busy period contains more than one customer. Let us apply these results to the M=M=1 queue. <p> Let us apply these results to the M=M=1 queue. With P [C B = n] given by [186, Eq. (5.157)] 1 n 1 n1 (1 + ) 12n ; n &gt; 0 we compute P <ref> [C B &gt; 1] </ref> = 1 P [C B = 1] = 1 1 + : Thus, P [C C = n] = n + 1 2n ! (1 + ) 2n ; n &gt; 0: Note that this result differs markedly from the geometric distribution postulated by Ferrandiz [173, Corollary <p> Since the average number of customers per busy period is 1=(1 ), we have that for the M=M=1 queue the average number of consecutive customers lost is E [C C ] = P <ref> [C B &gt; 1] </ref> 1 1 = 1 This result differs markedly from that obtained under the assumption that losses occur independently as Bernoulli events with the time-average loss probability ff. 110 In that case, the conditional probability mass function (pmf), given one loss, for the number of consecutive losses would <p> We focus on one batch and construct a discrete-time chain with the state (i; j) = (left in buffer; consecutive losses in batch) i 2 <ref> [1; K 1] </ref>; j 2 [0; 1) The initial state, that is, the state immediately after the arrival of the batch of interest, is determined by the batch size and the system state and should be computable. <p> This is satisfied for the geometric interarrival distribution with support <ref> [1; 1] </ref>, where each slot sees zero or one FT arrivals according to a Bernoulli process. 6.2.4 Future work A number of extensions to the model treated in this section suggest themselves.
Reference: [2] <author> Verbiest, Willem, Pinnoo, Luc, and Voeten, Bart, </author> <title> "The impact of the ATM concept on video coding," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. JSAC-6, </volume> <pages> pp. 1623-1632, </pages> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: Compressed video is far less tolerant of lost packets. A variable-rate DPCM coder operating at around 30 Mb/s <ref> [2] </ref> is designed for a loss rate of below 10 11 . The goal of this chapter is to investigate controlling congestion for real-time traffic by judiciously discarding packets at the intermediate nodes. <p> can also be expressed in the quantities r 1;2 and d: E [] = 1 r 1 1 d With the aid of the relation [240, p. 72] 1 X k 2 x k1 = (1 x) 3 ; we obtain the second moment from the probability density function, E <ref> [ 2 ] </ref> = d (1 r 1 ) 2 + (1 d) (1 r 2 ) 2 : The autocorrelation function of this process was derived by Gihr [241].
Reference: [3] <author> Williamson, Carey L. and Cheriton, David R., </author> <title> "Loss-load curves: support for rate-based congestion control in high-speed datagram networks," </title> <booktitle> in Sig-comm '91 Conference: Communications Architectures and Protocols, </booktitle> <address> (Zurich, Switzerland), </address> <pages> pp. 17-28, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: packet whose time spent in the virtual circuit so far, including time in current node, exceeds the end-to-end deadline d 4. discard a packet if the time to be spent in current node i exceeds a fixed local deadline t i The first scheme, random discarding, has been widely studied <ref> [3] </ref> [4] [5] [6], and generally been found to be lacking as a congestion control mechanism. It, for 8 example, does not substantially improve the disproportionate probability that long round-trip time traffic is dropped [4]. We will further compare random dropping to our schemes.
Reference: [4] <author> Mankin, Allison, </author> <title> "Random drop congestion control," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, (Philadelphia, Pennsyl-vania), </booktitle> <pages> pp. 1-7, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1990. </year> <journal> in Computer Communication Review, </journal> <volume> Vol. 20, No. </volume> <pages> 4. </pages>
Reference-contexts: whose time spent in the virtual circuit so far, including time in current node, exceeds the end-to-end deadline d 4. discard a packet if the time to be spent in current node i exceeds a fixed local deadline t i The first scheme, random discarding, has been widely studied [3] <ref> [4] </ref> [5] [6], and generally been found to be lacking as a congestion control mechanism. It, for 8 example, does not substantially improve the disproportionate probability that long round-trip time traffic is dropped [4]. We will further compare random dropping to our schemes. <p> exceeds a fixed local deadline t i The first scheme, random discarding, has been widely studied [3] <ref> [4] </ref> [5] [6], and generally been found to be lacking as a congestion control mechanism. It, for 8 example, does not substantially improve the disproportionate probability that long round-trip time traffic is dropped [4]. We will further compare random dropping to our schemes. The next two schemes above are conservative in the sense that no packet will ever be dropped voluntarily at the intermediate nodes that would not have been late at the destination.
Reference: [5] <author> Cassandras, Christos G., Kallmes, Michelle Hruby, and Towsley, Don, </author> <title> "Optimal routing and flow control in networks with real-time traffic," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Ottawa, Canada), </address> <pages> pp. 784-791, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: time spent in the virtual circuit so far, including time in current node, exceeds the end-to-end deadline d 4. discard a packet if the time to be spent in current node i exceeds a fixed local deadline t i The first scheme, random discarding, has been widely studied [3] [4] <ref> [5] </ref> [6], and generally been found to be lacking as a congestion control mechanism. It, for 8 example, does not substantially improve the disproportionate probability that long round-trip time traffic is dropped [4]. We will further compare random dropping to our schemes. <p> Beyond a certain load, = 0:83 in the example, the goodput for the uncontrolled system actually decreases with increasing load. Optimal random discarding as proposed in <ref> [5] </ref> can hold the goodput at the peak value even under overload, as indicated by the horizontal line in the figure. It throttles the input traffic to the point of optimal goodput by randomly discarding packets at the source. <p> Interactive voice, video and distributed measurement and control are examples of such systems that impose delay constraints, but also show a certain tolerance for lost packets. Most previous studies of real-time systems only measure loss as a time-average fraction of missing packets <ref> [5, 30, 58, 152-154] </ref>. In order to judge the "quality" of loss-prone communication, however, it is important to know not just how many packets are being lost, but also whether losses occur in clusters or randomly.
Reference: [6] <author> Hashem, Eman Salaheddin, </author> <title> "Analysis of random drop for gateway congestion control," </title> <type> Technical report MIT/LCS/TR-465, </type> <institution> MIT Laboratory for Computer Science, Cambridge, Massachusetts, </institution> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: spent in the virtual circuit so far, including time in current node, exceeds the end-to-end deadline d 4. discard a packet if the time to be spent in current node i exceeds a fixed local deadline t i The first scheme, random discarding, has been widely studied [3] [4] [5] <ref> [6] </ref>, and generally been found to be lacking as a congestion control mechanism. It, for 8 example, does not substantially improve the disproportionate probability that long round-trip time traffic is dropped [4]. We will further compare random dropping to our schemes.
Reference: [7] <author> Ramakrishnan, K. K. and Jain, Raj, </author> <title> "A binary feedback scheme for congestion avoidance in computer networks with a connectionless network layer," </title> <booktitle> in Proceedings of the 1988 SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Stanford, California), </address> <pages> pp. 303-313, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: The parameter space investigated will cover the first and third possibility, as the second requires "travel history" to be carried with each packet. We note that in a high-speed wide-area environment, control measures such as flow-control windows, backpressure or choke packets <ref> [7] </ref> lose effectiveness since the high delay-to-bandwidth ratio may render the feedback information obsolete by the time it reaches the controlling agent. Because of this, local, distributed control mechanisms are preferable to centralized algorithms. Also, not all real-time sources can be readily rate-controlled (e.g., standard PCM voice).
Reference: [8] <author> Mitra, Debasis and Mitrani, </author> <title> Isi, "Asymptotic optimality of the go-back-n protocol in high speed data networks with small buffers," </title> <booktitle> in Proceedings of the Fourth International Conference on Data Communication Systems and Their Performance, </booktitle> <address> (Barcelona), </address> <month> June </month> <year> 1990. </year>
Reference: [9] <author> Mitra, Debasis, </author> <title> "Optimal design of windows for high speed data networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 1156-1163, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference: [10] <author> Mitra, Debasis, Mitrani, Isi, Ramakrishnan, K. G., Seery, J. B., and Weiss, Alan, </author> <title> "A unified set of proposals for control and design of high speed data networks," </title> <booktitle> in International Teletraffic Congress, Seventh Specialist Seminar, </booktitle> <address> (Morristown, New Jersey), </address> <pages> pp. </pages> <address> 12.4.1-12.4.8, ITC, </address> <month> Oct. </month> <year> 1990. </year> <month> 181 </month>
Reference: [11] <author> Mitra, Debasis and Seery, Judith B., </author> <title> "Dynamic adaptive windows for high speed data networks with multiple paths and propagation delays," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), (Bal Harbour, Florida), </booktitle> <pages> pp. </pages> <address> 39-48 (2B.1), </address> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1991. </year>
Reference: [12] <author> Fendick, Kerry W., Mitra, Debasis, Mitrani, Isi, Rodrigues, Manoel A., Seery, Judith B., and Weiss, Alan, </author> <title> "An approach to high-performance, high-speed data networks," </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 29, </volume> <pages> pp. 74-82, </pages> <month> Oct. </month> <year> 1991. </year>
Reference: [13] <author> Elwalid, Anwar I. and Mitra, Debasis, </author> <title> "Analysis and design of rate-based congestion control of high speed networks, I: stochastic fluid models, access regulation," </title> <journal> Queueing Systems, </journal> <volume> vol. 9, </volume> <pages> pp. 29-64, </pages> <month> Oct. </month> <year> 1991. </year>
Reference: [14] <author> Mitra, Debasis, Mitrani, I., Ramakrishnan, K. G., Seery, J. B., and Weiss, Alan, </author> <title> "A unified set of proposals for control and design of high-speed data networks," </title> <journal> Queueing Systems, </journal> <volume> vol. 9, </volume> <pages> pp. 215-234, </pages> <month> Oct. </month> <year> 1991. </year>
Reference: [15] <author> Zhang, Hui and Keshav, Srinivasan, </author> <title> "Comparison of rate-based service disciplines," </title> <booktitle> in Sigcomm '91 Symposium Communications Architectures and Protocols, </booktitle> <address> (Zurich, Switzerland), </address> <pages> pp. 113-121, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Resource allocation may avoid congestion, but typically with the penalty of reduced carrying capacity if streams do not utilize their allocated bandwidth. For a survey of resource allocation policies, see <ref> [15] </ref>. <p> Again, the packet with the lowest value of d i is transmitted. If all deadlines are the same, the policy of selecting the packet with the largest accumulated queueing delay is equivalent to ML. Variations on local earliest-deadline-first or minimum-laxity (ML) scheduling are quite common [49] [61] [62] [63] <ref> [15] </ref>, as ML is known to be an optimal policy in many circumstances. Note, however, that our policy is meant to be end-to-end, rather than hop-by-hop. Some of the qualitative properties of these policies are tabulated in Tab. 3.1. <p> It is called at the 72 73 beginning of ip output (). The first 16-bit word of the mbuf data area designates the resource control family, so that multiple scheduling policies (e.g., virtual clock, weighted fair queueing, FIFO+ and other mechanisms [114] <ref> [15] </ref> [46] [115] [36]) can be supported. The translation routine of that mbuf is then changed to MT DATASORTED, a newly defined mbuf type.
Reference: [16] <author> Sriram, Kotikalapudi and Whitt, Ward, </author> <title> "Characterizing superposition arrival processes in packet multiplexers for voice and data," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (New Orleans, </address> <publisher> Louisiana), </publisher> <pages> pp. </pages> <address> 778-784 (25.4), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1985. </year>
Reference-contexts: Packet arrivals to all nodes are approximated by Poisson processes with arrival rate i . Modeling a superposition of SAD (speech activity detection) voice sources as a Poisson source leads to overly optimistic estimates in the case of a voice multiplexer <ref> [16] </ref>. However, for the case of voice trunks considered here, the number of voice sources is possibly two orders of magnitude higher than that found at the T1 rate (1.544 Mb/s) multiplexer studied by [17] and others. <p> Thus, according to the arguments of [18], we can conclude that for short time spans, the superposition process is adequately modeled by a 10 Poisson process. The discarding mechanism further limits the interaction period of packets in the queue, improving the approximation <ref> [16] </ref>. Even assuming that the input traffic to the first node is indeed modeled accurately by a Poisson source, packet dropping at the intermediate nodes will make the input stream to subsequent nodes non-Poisson. <p> two-state model path length 1 2 3 4 traffic mean 99.9% mean 99.9% mean 99.9% mean 99.9% voice trace 10.0 345 19.1 340 20.2 359 32.2 407 two-state model 5.0 229 9.6 238 12.3 281 17.5 319 Based on this negative example, we claim that the traditional two-state Markov model <ref> [16] </ref> where talkspurts with arrivals that are spaced at constant time intervals alternate with exponentially distributed silence periods does not capture the complexity of this traffic generation process. Firm conclusions certainly require more extensive traces.
Reference: [17] <author> Heffes, Harry and Lucantoni, David M., </author> <title> "A Markov modulated characterization of packetized voice and data traffic and related statistical multiplexer performance," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-4, </volume> <pages> pp. 856-867, </pages> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: However, for the case of voice trunks considered here, the number of voice sources is possibly two orders of magnitude higher than that found at the T1 rate (1.544 Mb/s) multiplexer studied by <ref> [17] </ref> and others. A 150 Mbit channel can support 4380 64 kB/s PCM sources of speech activity factor 0.42 with a utilization of 0.8. Thus, according to the arguments of [18], we can conclude that for short time spans, the superposition process is adequately modeled by a 10 Poisson process. <p> Superimposed traffic streams of the same statistical description are found in the analysis of packet voice multiplexers [229], usually in the form of approximations <ref> [17, 84] </ref>. In the following sections, we set out to analyze in some detail three implementations of the model described at the beginning of this section, increasing in generality as we progress through the section. The first two models assume a constant, deterministic interarrival time for the foreground traffic. <p> To provide a real-life example, the loss correlation in a DS1 voice multiplexer was determined. The DS-1/T1 channel offers a user capacity of 1.536 Mb/s. Following Heffes and Lucantoni <ref> [17] </ref>, each source encodes speech in 64 kb/s and generates a 128-byte packet every 16 ms. Talk spurts and silence periods are geometrically distributed with means 352 ms and 650 ms, respectively, for an activity factor of 35%. When active, this source produces a packet every 24 slots.
Reference: [18] <author> Sriram, K. and Lucantoni, David M., </author> <title> "Traffic smoothing effects of bit dropping in a packet voice multiplexer," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Orleans), </address> <pages> pp. 759-769, </pages> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference-contexts: A 150 Mbit channel can support 4380 64 kB/s PCM sources of speech activity factor 0.42 with a utilization of 0.8. Thus, according to the arguments of <ref> [18] </ref>, we can conclude that for short time spans, the superposition process is adequately modeled by a 10 Poisson process. The discarding mechanism further limits the interaction period of packets in the queue, improving the approximation [16].
Reference: [19] <author> Dravida, S. and Sriram, K., </author> <title> "End-to-end performance models for variable bit rate voice over tandem links in packet networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Ottawa, Canada), </address> <pages> pp. 1089-1097, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: The analysis, however, ignores this, based on the premise that the relatively small losses investigated should have limited effects on the delay distribution. Simulation experiments will be used to assess the validity of this assumption, which is also supported by <ref> [19, 20] </ref>. The service time is assumed to be exponentially distributed with mean 1=, redrawn at each node (Kleinrock's independence assumption). Without loss of generality, all times are scaled relative to the average service time, i.e., = 1. <p> These assumptions are necessary for analytic tractability, but as discussed above, will be validated through simulation. 11 A number of researchers have investigated the effect of packet dropping on a single packet voice multiplexer (e.g., [24-26], and that of bit dropping on a virtual circuit <ref> [19] </ref>, but the performance of packet dropping in a VC seems to have been considered only in the context of an ARQ-scheme with variable window size [27]. The latter scheme requires acknowledgements, which are not typically used for real-time traffic, and uses feedback, with the concomitant delay problems.
Reference: [20] <author> Li, San-qi and Mark, Jon W., </author> <title> "Simulation study of a network of voice/data integrated TDMs," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-36, </volume> <pages> pp. 126-132, </pages> <month> Jan. </month> <year> 1988. </year>
Reference-contexts: The analysis, however, ignores this, based on the premise that the relatively small losses investigated should have limited effects on the delay distribution. Simulation experiments will be used to assess the validity of this assumption, which is also supported by <ref> [19, 20] </ref>. The service time is assumed to be exponentially distributed with mean 1=, redrawn at each node (Kleinrock's independence assumption). Without loss of generality, all times are scaled relative to the average service time, i.e., = 1.
Reference: [21] <author> Bhargava, Amit, Kurose, James F., Towsley, Don, and van Lamport, Guy, </author> <title> "Performance comparison of error control schemes in high speed computer 182 communication networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Orleans), </address> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1988. </year>
Reference-contexts: For FIFO-BS, we have to assume that the service time is known on joining the queue.) We investigate a single virtual circuit in isolation, taking into account interfering traffic by reducing the service rate, as in <ref> [21] </ref>. The length of the virtual circuit obviously depends on the system architecture, but examples in the literature [22] suggest a range of four to eleven, with the values at the lower end appearing more often. Following [23], most of the examples will have five nodes.
Reference: [22] <author> Takahashi, Kenzo, Yokoi, Tadahiro, and Yamamoto, Yutaka, </author> <title> "Communications quality analysis for ATM networks," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), (Boston), </booktitle> <pages> pp. </pages> <address> 423-427 (13.6), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1989. </year>
Reference-contexts: The length of the virtual circuit obviously depends on the system architecture, but examples in the literature <ref> [22] </ref> suggest a range of four to eleven, with the values at the lower end appearing more often. Following [23], most of the examples will have five nodes. In summary, the above assumptions ensure independence of service and arrival sample paths for each node.
Reference: [23] <author> De Prycker, Martin, </author> <title> "Impact of data communication on ATM," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), (Boston), </booktitle> <pages> pp. </pages> <address> 705-712 (22.4), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1989. </year>
Reference-contexts: The length of the virtual circuit obviously depends on the system architecture, but examples in the literature [22] suggest a range of four to eleven, with the values at the lower end appearing more often. Following <ref> [23] </ref>, most of the examples will have five nodes. In summary, the above assumptions ensure independence of service and arrival sample paths for each node. Nodes are linked only by the reduction in traffic afforded by dropping certain packets.
Reference: [24] <author> Yin, Nanying, Li, San-qi, and Stern, Thomas E., </author> <title> "Congestion control for packet voice by selective packet discarding," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), (Tokyo), </booktitle> <pages> pp. 1782-1786, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1987. </year>
Reference: [25] <author> Yuan, Chin and Silvester, John A., </author> <title> "Queueing analysis of delay constrained voice traffic in a packet switching system," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-7, </volume> <pages> pp. 729-738, </pages> <month> June </month> <year> 1989. </year>
Reference: [26] <author> Kim, Byung K. and Towsley, Don, </author> <title> "Dynamic flow control protocols for packet-switching multiplexers serving real-time multipacket messages," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-34, </volume> <pages> pp. 348-356, </pages> <month> Apr. </month> <year> 1986. </year>
Reference: [27] <author> Luan, Daniel T. and Lucantoni, David M., </author> <title> "Throughput analysis of a window-based flow control subject to bandwidth management," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Orleans), </address> <pages> pp. 411-417, </pages> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference-contexts: have investigated the effect of packet dropping on a single packet voice multiplexer (e.g., [24-26], and that of bit dropping on a virtual circuit [19], but the performance of packet dropping in a VC seems to have been considered only in the context of an ARQ-scheme with variable window size <ref> [27] </ref>. The latter scheme requires acknowledgements, which are not typically used for real-time traffic, and uses feedback, with the concomitant delay problems. Most importantly, packet dropping is performed without regard to the packet's time constraint.
Reference: [28] <author> Cohen, J. W., </author> <title> "Single server queues with restricted accessibility," </title> <journal> Journal of Engineering Mathematics, </journal> <volume> vol. 3, </volume> <pages> pp. 265-284, </pages> <month> Oct. </month> <year> 1969. </year>
Reference-contexts: In other words, the time spent in the queueing system, 13 including service, is bounded from above by t i . In this section, the results provided in <ref> [28, 29] </ref> will be simplified to a form more amenable to computation. Some of the tedious algebra has been relegated to a separate report [30]. <p> The Laplace transform of the virtual waiting time is derived in <ref> [28] </ref>.
Reference: [29] <author> Gavish, Bezalel and Schweitzer, Paul J., </author> <title> "The Markovian queue with bounded waiting time," </title> <journal> Management Science, </journal> <volume> vol. 23, </volume> <pages> pp. 1349-1357, </pages> <month> Aug. </month> <year> 1977. </year>
Reference-contexts: In other words, the time spent in the queueing system, 13 including service, is bounded from above by t i . In this section, the results provided in <ref> [28, 29] </ref> will be simplified to a form more amenable to computation. Some of the tedious algebra has been relegated to a separate report [30].
Reference: [30] <author> Schulzrinne, Henning, Kurose, James F., and Towsley, Don, </author> <title> "Congestion control for real-time traffic in high-speed networks," </title> <type> Technical Report TR 89-92, </type> <institution> Department of Computer and Information Science, University of Mas-sachusetts, Amherst, Massachusetts, </institution> <year> 1989. </year>
Reference-contexts: In this section, the results provided in [28, 29] will be simplified to a form more amenable to computation. Some of the tedious algebra has been relegated to a separate report <ref> [30] </ref>. Laplace Transform of the Pdf of the Virtual Waiting Time The pdf of the waiting time, w (t), can be expressed as w (t) = Qh (t), where the function h (t) is of no further interest for our purposes. <p> gamma function with complex arguments: w fl (s) = Qab s 1 + s 1 i=0 ( s) i + Q s 1 i=0 ( s) i Thus, the transform equation for the density of the system time of a single node is 1 w fl (s): The technical report <ref> [30] </ref> also contains closed-form expressions for the cumulative distribution functions of the waiting and system time of a single queue. 14 2.5 FIFO-BW: Bounded Waiting Time Arriving customers join queue i if and only if the virtual work at queue i at the arrival instant is below t i . <p> The optimal homogeneous t was used as a starting point to minimize the probability of trapping the optimization in a local optimum. From the examples reported in <ref> [30] </ref>, it can be concluded that even for high loads ( = 0:9) and short VCs such as M = 2, heterogeneous deadline yield less than 1% improvement over using a homogeneous t . <p> It was shown that the fraction of lost packets could be reduced substantially for suitable traffic types and virtual circuit size. Even if the exact load is not known, a static overload control mechanism can ameliorate the effects of temporary overload situations. In related work <ref> [30] </ref>, it is shown that analysis technique and performance gains carry over to the case of fixed packet sizes. <p> Interactive voice, video and distributed measurement and control are examples of such systems that impose delay constraints, but also show a certain tolerance for lost packets. Most previous studies of real-time systems only measure loss as a time-average fraction of missing packets <ref> [5, 30, 58, 152-154] </ref>. In order to judge the "quality" of loss-prone communication, however, it is important to know not just how many packets are being lost, but also whether losses occur in clusters or randomly. <p> This model is used to represent the output queue of a fast packet switch, for example [205]. The waiting time and loss probability for this model have been analyzed by a number of authors <ref> [30, 198, 204-208] </ref>. For Poisson-distributed batches, Birdsall et al. [206, p. 392] compute the conditional probability of a run of exactly n slots in which one or more arrivals are rejected given that an arrival was rejected in the preceding slot.
Reference: [31] <author> Doshi, Bharat T. and Heffes, Harry, </author> <title> "Overload performance of several processor queueing disciplines for the M/M/1 queue," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-34, </volume> <pages> pp. 538-546, </pages> <month> June </month> <year> 1986. </year>
Reference-contexts: Here, the time a packet spends waiting for service to begin is bounded by t i . Results for this system are summarized in <ref> [31] </ref> (called FIFO-TO there). Among the policies for a single queue studied in that paper, FIFO-BW performed best in the sense of maximizing the throughput of packets meeting their deadlines, suggesting that it may be a good candidate for a tandem system as well. <p> Recognizing u (t t) = 1 u (t t ), the waiting time in the Laplace domain is derived: w fl (sjJ ) = ff - n o Extending the results in <ref> [31] </ref>, the nth moment can be written as E [w n ] = ff-n [n! (n + 1; -t )] = - t e -t where (n; x) is the complementary incomplete Gamma function.
Reference: [32] <author> Papoulis, Athanasios, </author> <title> Probability, Random Variables, and Stochastic Processes. </title> <address> New York, New York: </address> <publisher> McGraw-Hill Book Company, </publisher> <editor> 2nd ed., </editor> <year> 1984. </year> <month> 183 </month>
Reference-contexts: Therefore, it was attempted to obtain tight bounds on the 15 tail of the waiting time distribution by using the moment generating function in the Chernoff bound or higher moments in Bienayme's inequality <ref> [32] </ref>. Both produced bounds too loose to judge the benefits of applying queue control via local deadlines. An algebraic inversion of the Laplace-transform expression proved more fruitful. This was possible because unlike the transform for the FIFO-BS case (Eq. (2.3)), Eq. (2.4) is rational and thus amenable to closed-form expansion.
Reference: [33] <author> Heidelberger, Philip and Welch, Peter D., </author> <title> "A spectral method for confidence interval generation and run length control in simulations," </title> <journal> Communications ACM, </journal> <volume> vol. 24, </volume> <pages> pp. 233-245, </pages> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: The simulation maintains Kleinrock's independence assumption, but not the Poisson nature of the interior arrival streams. The simulation was terminated once the 95%-confidence interval halfwidths computed by spectral estimation <ref> [33] </ref> and the regenerative method were both less than 10% of the point estimate. Depending on t , a simulation run consisted of between one and five million packets. <p> For the other experiments, the simulation was terminated when all confidence interval halfwidths were within 20% of the point estimate. The confidence level was set at 90%. The confidence intervals were computed using the spectral method <ref> [33] </ref>. The first 2000 observations were discarded as transient data in all experiments. Unless noted otherwise, external arrival occur in Poisson-distributed batches so that the total system load (including arrivals from other nodes) at each node without discarding equals = 0:8.
Reference: [34] <author> Kobayashi, Hisashi, </author> <title> "Application of the diffusion approximation to queueing networks II: Nonequilibrium distributions and applications to computer modeling," </title> <journal> J. ACM, </journal> <volume> vol. 21, </volume> <pages> pp. 459-469, </pages> <month> July </month> <year> 1974. </year>
Reference-contexts: From Fig. 2.2 we can also conclude that the drop losses incurred by tight deadlines are not compensated for by the reduction in downstream traffic. 2 The estimate was based on the diffusion approximation of the G/G/1 queue, see <ref> [34] </ref> [35]. 17 Since the performance varies little in the region from t 17 to t 21, a looser deadline in that range is preferable, providing a margin of safety to compensate for errors in the estimation of the system parameters.
Reference: [35] <author> Kobayashi, Hisashi, </author> <title> Modeling and Analysis: An Introduction to System Performance Evaluation Methodology. </title> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1981. </year>
Reference-contexts: From Fig. 2.2 we can also conclude that the drop losses incurred by tight deadlines are not compensated for by the reduction in downstream traffic. 2 The estimate was based on the diffusion approximation of the G/G/1 queue, see [34] <ref> [35] </ref>. 17 Since the performance varies little in the region from t 17 to t 21, a looser deadline in that range is preferable, providing a margin of safety to compensate for errors in the estimation of the system parameters.
Reference: [36] <author> Clark, David D., Shenker, Scott, and Zhang, Lixia, </author> <title> "Supporting real-time applications in an integrated services packet network: architecture and mechanism," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Baltimore, Maryland), </address> <pages> pp. 14-26, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: The same adjustment mechanism will compensate for clock drift, without special efforts. See <ref> [36] </ref> for a more detailed discussion of the difference between rigid and adaptive applications. After this digression, we return to the point of justifying the second performance metric, namely delay percentiles. A delay percentile provides the optimal playout delay that an service could choose, given a perfect estimator. <p> In addition, such policies have to limit the time period over which a flow can claim accumulated bandwidth credit, so as to avoid unduly delaying other streams. Weighted fair queueing (WFQ) <ref> [36, 46-48] </ref>, virtual clock [49] and similar algorithms fall into this category. These scheduling policies are generally work-conserving. As long as the traffic obeys certain restrictions (in particular, that it is shaped by a leaky bucket), the delay can actually be upper-bounded. <p> For first class service, the channel may be idle even though a packet is ready to be transmitted. But, on average, third class service may be better than second class service for adaptive applications. We will see, using the example shown in <ref> [36] </ref>, that the 99.9% queueing delay percentiles for a particular second class service, namely WFQ, are significantly higher than for some of the third class services investigated here. <p> Implemented as two queues, the complexity for enqueueing and dequeueing is O (1). (For related considerations in a non-real-time context, see [59] and [60].) long-haul first (LHF): Packets are simply scheduled according to the number of remaining hops. FIFO+: This policy is proposed by Clark, Shenker and Zhang in <ref> [36] </ref>. Each node estimates the average delay for all packets of a given class passing through it 7 . <p> In this section, we widen the scope of scheduling policies investigated and change the network configuration, the figure of merit and the traffic characteristics. The topology, flows and metrics duplicate that presented by Clark et al. <ref> [36] </ref>, allowing for ready comparison. 9 . The network configuration is shown in Fig. 3.1. 22 statistically identical flows, described below, traverse the network, all flowing in the same direction. <p> The first source is a two-state Markov process. This source, with the same characteristics as the one in <ref> [36] </ref>, alternates between idle and active periods. The idle period is exponentially distributed with a mean of 29.4 ms, while packets arrive with a fixed rate of 170 packets/second during the active period. The first packet arrives 5.88 ms after the beginning of the active period. <p> The last section in this chapter contains some observations on modeling voice sources, pointing out the potential inadequacy of currently accepted voice models. Table 3.6. Results for tandem network of Fig. 3.1; for Markovian (M) and voice (V) sources; results from <ref> [36] </ref> marked with "M (Clark)" path length 1 2 3 4 source policy mean 99.9% mean 99.9% mean 99.9% mean 99.9% M (Clark) WFQ 2.65 45.31 4.74 60.31 7.51 65.86 9.65 80.59 FIFO 2.54 30.49 4.73 41.22 7.97 52.36 10.33 58.13 FIFO+ 2.71 33.59 4.69 38.15 7.76 43.30 10.11 45.25 M <p> For the FIFO+ policy, a first-order recursive filter with a weighing constant of 0:001 estimated the mean queueing delay. (The weighing constant was determined during pilot experiments; sensitivity experiments still need to be completed.) For FIFO+, we could only achieve reasonable results coming close to the values published <ref> [36] </ref> by combining it with transit priority. 10 The queueing delays, i.e., not including transmission times or propagation delays, of our simulations are displayed in Table 3.6. For HL, the laxity parameter chosen is shown in parentheses. All delay values are shown in milliseconds. <p> All delay values are shown in milliseconds. The traffic source is indicated by the letters 'M' and 'V', representing the Markovian two-state source and the conversational voice source, respectively. The first three rows show the values reported in the paper by Clark et al. <ref> [36] </ref>. The parameter following the HL designation denotes the end-to-end deadline measured in milliseconds. For easier comparison, the 99.9% percentiles for the delay are also graphed in Fig. 3.2 and Fig. 3.3, using the data for the two-state source. <p> It is called at the 72 73 beginning of ip output (). The first 16-bit word of the mbuf data area designates the resource control family, so that multiple scheduling policies (e.g., virtual clock, weighted fair queueing, FIFO+ and other mechanisms [114] [15] [46] [115] <ref> [36] </ref>) can be supported. The translation routine of that mbuf is then changed to MT DATASORTED, a newly defined mbuf type. This translation takes place in the ip output routine; it requires a linear through all IP options within the packet to determine if the scheduling option is present. <p> The 'HL 5' experiment indicates that some flows may be considerably worse off when hop laxity scheduling is introduced. 4.7.1 DARTnet Experiment: Second Topology In a second experiment, DARTnet was used to model the topology described in <ref> [36] </ref>, with the same flows and conversational voice traffic as discussed in Section 4.6.1. Here, all packets had a length of 600 bytes, including headers. Table 4.4.
Reference: [37] <author> Kalmanek, C. R., Kanakia, H., and Keshav, Srinivasan, </author> <title> "Rate controlled servers for very high-speed networks," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, California), </address> <pages> pp. </pages> <address> 12-20 (300.3), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Barring the degenerate case of all lower bounds being zero, the node has to implement a non-workconserving queueing discipline, where packets are delayed even if the channel is idle. Hierarchical round-robin <ref> [37] </ref>, jitter-earliest-due-date [38, 39] and stop-and-go [40-45] are examples of jitter-bounding policies. 2. guaranteed throughput: The network does not guarantee delay bounds, but assures that each flow can obtain its guaranteed throughput regardless of the behavior of other flows.
Reference: [38] <author> Ferrari, Domenico and Verma, Dinesh C., </author> <title> "Scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 368-379, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Barring the degenerate case of all lower bounds being zero, the node has to implement a non-workconserving queueing discipline, where packets are delayed even if the channel is idle. Hierarchical round-robin [37], jitter-earliest-due-date <ref> [38, 39] </ref> and stop-and-go [40-45] are examples of jitter-bounding policies. 2. guaranteed throughput: The network does not guarantee delay bounds, but assures that each flow can obtain its guaranteed throughput regardless of the behavior of other flows.
Reference: [39] <author> Ferrari, Domenico, Verma, Dinesh Chandra, and Zhang, Hui, </author> <title> "Guaranteeing delay jitter bounds in packet-switching networks," </title> <type> tech. rep., </type> <institution> TENET Group, CS Division of the University of California and the International Computer Sciences Institute, Berkeley, California, </institution> <year> 1991. </year>
Reference-contexts: Barring the degenerate case of all lower bounds being zero, the node has to implement a non-workconserving queueing discipline, where packets are delayed even if the channel is idle. Hierarchical round-robin [37], jitter-earliest-due-date <ref> [38, 39] </ref> and stop-and-go [40-45] are examples of jitter-bounding policies. 2. guaranteed throughput: The network does not guarantee delay bounds, but assures that each flow can obtain its guaranteed throughput regardless of the behavior of other flows.
Reference: [40] <author> Golestani, S. Jamaloddin, </author> <title> "A stop-and-go queueing framework for congestion management," in Sigcomm '90: Communication Architectures and Protocols, </title> <address> (Philadelphia, Pennsylvania), </address> <pages> pp. 8-18, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1990. </year>
Reference: [41] <author> Golestani, S. Jamaloddin, </author> <title> "Congestion-free communication in broadband packet networks," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), (Atlanta, Georgia), </booktitle> <pages> pp. 489-494, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1990. </year>
Reference: [42] <author> Golestani, S. Jamaloddin, </author> <title> "Congestion-free transmission of real-time traffic in packet networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 527-536, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference: [43] <author> Golestani, S. Jamaloddin, </author> <title> "Congestion-free communication in high-speed packet networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1802-1812, </pages> <month> Dec. </month> <year> 1991. </year> <month> 184 </month>
Reference: [44] <author> Golestani, S. Jamaloddin, </author> <title> "Duration-limited statistical multiplexing of delay sensitive traffic in packet networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), (Bal Harbour, Florida), </booktitle> <pages> pp. </pages> <address> 323-332 (4A.4), </address> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1991. </year>
Reference: [45] <author> Golestani, S. Jamaloddin, </author> <title> "A framing strategy for congestion management," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 1064-1077, </pages> <month> Sept. </month> <year> 1991. </year>
Reference: [46] <author> Demers, Alan, Keshav, Srinivasan, and Shenker, Scott, </author> <title> "Analysis and simulation of a fair queueing algorithm," </title> <booktitle> in Proceedings of Sigcomm'89: Communication Architectures and Protocols, </booktitle> <address> (Austin, Texas), </address> <pages> pp. 1-12, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: It is called at the 72 73 beginning of ip output (). The first 16-bit word of the mbuf data area designates the resource control family, so that multiple scheduling policies (e.g., virtual clock, weighted fair queueing, FIFO+ and other mechanisms [114] [15] <ref> [46] </ref> [115] [36]) can be supported. The translation routine of that mbuf is then changed to MT DATASORTED, a newly defined mbuf type.
Reference: [47] <author> Parekh, Abhay K. and Gallager, Robert G., </author> <title> "A generalized processor sharing approach to flow control in integrated services networks: the multiple node code," </title> <type> manuscript, </type> <institution> Massachusetts Institute of Technology, Cambridge, Massachusetts, </institution> <month> Summer </month> <year> 1992. </year> <note> submitted to ACM/IEEE Transactions on Networking. </note>
Reference: [48] <author> Parekh, Abhay K. and Gallager, Robert G., </author> <title> "A generalized processor sharing approach to flow control in integrated services networks themultiple node case," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <volume> vol. </volume> <pages> 2, </pages> <address> (San Francisco, California), </address> <pages> pp. </pages> <address> 521-530 (5a.1), </address> <publisher> IEEE, </publisher> <month> March/April </month> <year> 1993. </year>
Reference: [49] <author> Zhang, Lixia, "VirtualClock: </author> <title> A new traffic control algorithm for packet switching networks," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Philadelphia, Pennsylvania), </address> <pages> pp. 19-29, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: In addition, such policies have to limit the time period over which a flow can claim accumulated bandwidth credit, so as to avoid unduly delaying other streams. Weighted fair queueing (WFQ) [36, 46-48], virtual clock <ref> [49] </ref> and similar algorithms fall into this category. These scheduling policies are generally work-conserving. As long as the traffic obeys certain restrictions (in particular, that it is shaped by a leaky bucket), the delay can actually be upper-bounded. <p> Again, the packet with the lowest value of d i is transmitted. If all deadlines are the same, the policy of selecting the packet with the largest accumulated queueing delay is equivalent to ML. Variations on local earliest-deadline-first or minimum-laxity (ML) scheduling are quite common <ref> [49] </ref> [61] [62] [63] [15], as ML is known to be an optimal policy in many circumstances. Note, however, that our policy is meant to be end-to-end, rather than hop-by-hop. Some of the qualitative properties of these policies are tabulated in Tab. 3.1.
Reference: [50] <author> Kurose, Jim, </author> <title> "On computing per-session performance bounds in high-speed multi-hop computer networks," </title> <booktitle> in Sigmetrics 1992, </booktitle> <address> (New Port, Rhode Island), </address> <pages> pp. 128-139, </pages> <publisher> ACM, </publisher> <month> June </month> <year> 1992. </year>
Reference-contexts: Resequencing is also surprisingly prevalent 3 . Under certain limitations on the source traffic and its peak rates, even for FIFO scheduling, deterministic and probabilistic delay bounds can be computed <ref> [50] </ref>.
Reference: [51] <author> Reibman, Amy R. and Berger, Arthur W., </author> <title> "On VBR video teleconferencing over ATM networks," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (Orlando, Florida), </address> <pages> pp. </pages> <address> 314-319 (10.03), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: If the guaranteed traffic class has a peak-to-mean ratio of, say, ten, a value representative of uncontrolled video sources, close to 90% of the overall traffic would have to be data (non-guaranteed) traffic. Smoothing of video traffic <ref> [51] </ref> may reduce the peak-to-mean ratio to a more tenable two to three. There is another advantage to need-based service policies, namely that delay can be shifted from one flow to another. <p> On the other hand, data traffic could be slowed down as necessary to relieve network congestion. Rate control appears to be a promising approach for data and real-time sources, in particular video <ref> [51] </ref>. Rate control for multimedia, however, takes the form of actually influencing the data that is carried in the network, rather than just pacing its entry into the network. The interest in rate control is an example of increased interaction between the network and the data source.
Reference: [52] <author> Saltzer, J. H., Reed, D. P., and Clark, D. D., </author> <title> "End-to-end arguments in system design," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 2, </volume> <pages> pp. 277-288, </pages> <month> Nov. </month> <year> 1984. </year>
Reference-contexts: For services with rigid deadlines, the latter rationale becomes even stronger, as packets arriving before the deadline do not improve the quality of service seen by the application. The adaptability of applications can also be taken as another example of the end-to-end argument <ref> [52] </ref>. Since all packet-switched networks with statistical multiplexing introduce some amount of delay jitter, an application has to be prepared to compensate for that. Given the low cost of memory, bounding the jitter from below appears to be of secondary importance [53].
Reference: [53] <author> Partridge, Craig, </author> <title> "Isochronous applications do not require jitter-controlled networks," Network Working Group Request for Comment RFC 1257, </title> <institution> Swedish Institute of Computer Science (SICS), Kista, Sweden, </institution> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Since all packet-switched networks with statistical multiplexing introduce some amount of delay jitter, an application has to be prepared to compensate for that. Given the low cost of memory, bounding the jitter from below appears to be of secondary importance <ref> [53] </ref>. However, limiting the delay variability, particularly short term fluctuations, improves the performance of adaptive applications by yielding more accurate playout delay estimates. Surprisingly, there are also "greedy" reasons why a real-time application may opt for second or third class service. <p> However, it should be emphasized that better service, higher network utilization and call acceptance rates may result by not automatically assigning real-time services to the jitter-controlled class, as seems to be the tendency in some quarters. (See also <ref> [53] </ref> for a more elaborate argument why isochronous services do not require an isochronous network.) 36 The remainder of this chapter will only be concerned with need-based (third class) scheduling disciplines.
Reference: [54] <author> Bala, Krishna, Cidon, Israel, and Sohraby, Khosrow, </author> <title> "Congestion control for high speed packet switched networks," </title> <booktitle> in Proceedings of the Conference 185 on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 520-526, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: Then, excess packets may be marked for preferred deletion either by the customer, based on its knowledge of the relative importance of the data, or the network <ref> [54] </ref>. Finally, a fuse-like mechanism may terminate the connection if severe overload persists, as it may be due to faulty customer premise equipment. Given these different policing methods, it appears that there might be an advantage to keeping scheduling and policing separate, as advocated here.
Reference: [55] <author> Cohen, Danny, </author> <title> "A network voice protocol: NVP-II," </title> <type> technical report, </type> <institution> University of Southern California/ISI, Marina del Ray, California, </institution> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: Also, care has to be taken that delay measurements that form the base for delay adaptation mechanisms only take into account in-sequence packets. Furthermore, some audio/video transport protocols, for example NVP <ref> [55] </ref> and PVP [56], have difficulties with reordered packets. It is conceivable that a video application could display packets representing a pixel block within a frame out-of-order, while audio applications clearly cannot do that. robustness: "First, do no harm".
Reference: [56] <author> Cole, Randy, </author> <title> "PVP a packet video protocol," </title> <type> W-Note 28, </type> <institution> Information Sciences Institute, University of Southern California, </institution> <address> Los Angeles, California, </address> <month> Aug. </month> <year> 1981. </year>
Reference-contexts: Also, care has to be taken that delay measurements that form the base for delay adaptation mechanisms only take into account in-sequence packets. Furthermore, some audio/video transport protocols, for example NVP [55] and PVP <ref> [56] </ref>, have difficulties with reordered packets. It is conceivable that a video application could display packets representing a pixel block within a frame out-of-order, while audio applications clearly cannot do that. robustness: "First, do no harm". <p> The Bolter Vision video encoder was used to compress the 30 frame/second full-color NTSC video data into a bit stream with a data rate of 128 kb/s. The synchronous data provided by the codec was packetized, stripped of filler bytes and prefixed with the PVP header <ref> [56] </ref> by the pvp packet video processor program (written by Dave J.W. Walden at the Information Sciences Institute) to arrive at packets averaging 457 bytes and ranging in size from 16 to 534 bytes, with an effective data rate of 109,680 b/s. <p> The early '80s saw experiments of transmitting low-bitrate voice across mobile radio [77, 123, 124] and satellite [125] packet channels. The first Internet packet voice protocol was specified formally in 1977 [126], and a packet video standard followed in 81 1981 <ref> [56] </ref>. The CCITT standard G.PVNP [127] was published in 1989. Currently, an effort is underway within the Internet Engineering Task Force to develop a transport protocol (called RTP) suitable for packet voice and video as well as other real-time applications [128, 129].
Reference: [57] <author> Kobza, John and Liu, Steve, </author> <title> "A head-of-line approximation to delay-dependent scheduling in integrated packet-switched networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Ottawa, Canada), </address> <pages> pp. 1106-1113, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: We will discuss how the scheduling policies fare in general under these considerations in the next section. Due to the relative complexity of the scheduling mechanisms and since we are interested in end-to-end performance, only simulation results are available. Independently, Kobza and Liu <ref> [57] </ref> simulated related laxity-based scheduling disciplines for a three-node continuous-time system with deterministic service. In their study, the laxity-based scheduler only operated in the final node of the virtual circuit. <p> Thus, packets tend to be "compensated" by a higher priority for above-average delays suffered at earlier nodes. This policy is identical to the "Budgeted Residual-Life Dependent Discipline" (BURD) in <ref> [57] </ref>. 41 minimum laxity (ML): The earliest-extinction-first "seniority" discipline is similar to HL, but based solely on laxity, without regard to the number of hops left to travel, i.e., d i = d + M a. Again, the packet with the lowest value of d i is transmitted. <p> As might be expected, the differences between service disciplines become in general more pronounced as the VC length increases, although the difference between HL and ML actually decreases in going from M = 5 to M = 10. Thus, contrary to the claims in <ref> [57] </ref>, single-node behavior is not a good predictor for the performance gain in longer VCs. Also, with one exception, for the same VC length, the difference between FIFO and the policies HL and ML increases as the loss rates decrease.
Reference: [58] <author> Kallmes, Michelle Hruby, Towsley, Don, and Cassandras, Christos G., </author> <title> "Optimality of the last-in-first-out (LIFO) service discipline in queueing systems with real-time constraints," </title> <booktitle> in Proceedings of the 28th Conference on Decision and Control (CDC), </booktitle> <address> (Tampa, Florida), </address> <pages> pp. 1073-1074, </pages> <publisher> IEEE, </publisher> <year> 1989. </year> <note> [59] van As, </note> <author> Harmen R., </author> <title> "Congestion control in packet switching networks by a dynamic foreground-background storage strategy," </title> <booktitle> in Performance of Computer-Communication Systems (Proceedings of the IFIP WG 7.3/TC 6 Second International Symposium on the Performance of Computer-Communication Systems) (Bux, </booktitle> <editor> Werner and Rudin, Harry, eds.), </editor> <address> (Zurich, Switzerland), </address> <pages> pp. 433-448, </pages> <publisher> IFIP, North-Holland, </publisher> <month> Mar. </month> <year> 1984. </year>
Reference-contexts: This discipline was investigated since <ref> [58] </ref> indicated that for concave deadline distributions, LIFO yields the highest fraction of on-time packets among non-preemptive, non-deadline dependent scheduling disciplines. Thus, performance better than FIFO might be expected even for deterministic deadlines. transit priority (TP): Packets that enter the network defer to those passing through (so-called transit traffic). <p> Also, queues that discard packets would disqualify as they are not work-conserving. Even for non-discarding FIFO and LIFO, the result does not apply in our case since the system investigated has deterministic deadlines. Kallmes et al. show <ref> [58] </ref> that for looser, constant deadlines FIFO may indeed result in lower losses than LIFO. The mean wait experienced at the ith hop of a packet (omitted here for reasons of space) clearly shows the effect of the scheduling disciplines. <p> Interactive voice, video and distributed measurement and control are examples of such systems that impose delay constraints, but also show a certain tolerance for lost packets. Most previous studies of real-time systems only measure loss as a time-average fraction of missing packets <ref> [5, 30, 58, 152-154] </ref>. In order to judge the "quality" of loss-prone communication, however, it is important to know not just how many packets are being lost, but also whether losses occur in clusters or randomly.
Reference: [60] <author> Kamoun, Farouk, </author> <title> "A drop and throttle control policy for computer networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. </volume> <pages> COM-29, pp. 444-452, </pages> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: Implemented as two queues, the complexity for enqueueing and dequeueing is O (1). (For related considerations in a non-real-time context, see [59] and <ref> [60] </ref>.) long-haul first (LHF): Packets are simply scheduled according to the number of remaining hops. FIFO+: This policy is proposed by Clark, Shenker and Zhang in [36]. Each node estimates the average delay for all packets of a given class passing through it 7 .
Reference: [61] <author> Chen, Thomas M., Walrand, Jean, and Messerschmitt, David G., </author> <title> "Dynamic priority protocols for packet voice," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-7, </volume> <pages> pp. 632-643, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: Again, the packet with the lowest value of d i is transmitted. If all deadlines are the same, the policy of selecting the packet with the largest accumulated queueing delay is equivalent to ML. Variations on local earliest-deadline-first or minimum-laxity (ML) scheduling are quite common [49] <ref> [61] </ref> [62] [63] [15], as ML is known to be an optimal policy in many circumstances. Note, however, that our policy is meant to be end-to-end, rather than hop-by-hop. Some of the qualitative properties of these policies are tabulated in Tab. 3.1.
Reference: [62] <author> Lim, Youngho and Kobza, John, </author> <title> "Analysis of a delay-dependent priority discipline in a multi-class traffic switching node," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Orleans, </address> <publisher> Louisiana), </publisher> <pages> pp. 889-898, </pages> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference-contexts: Again, the packet with the lowest value of d i is transmitted. If all deadlines are the same, the policy of selecting the packet with the largest accumulated queueing delay is equivalent to ML. Variations on local earliest-deadline-first or minimum-laxity (ML) scheduling are quite common [49] [61] <ref> [62] </ref> [63] [15], as ML is known to be an optimal policy in many circumstances. Note, however, that our policy is meant to be end-to-end, rather than hop-by-hop. Some of the qualitative properties of these policies are tabulated in Tab. 3.1.
Reference: [63] <author> Peha, Jon M. and Tobagi, Fouad A., </author> <title> "Evaluating scheduling algorithms for traffic with heterogeneous performance objectives," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, California), </address> <pages> pp. 21-27, </pages> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Again, the packet with the lowest value of d i is transmitted. If all deadlines are the same, the policy of selecting the packet with the largest accumulated queueing delay is equivalent to ML. Variations on local earliest-deadline-first or minimum-laxity (ML) scheduling are quite common [49] [61] [62] <ref> [63] </ref> [15], as ML is known to be an optimal policy in many circumstances. Note, however, that our policy is meant to be end-to-end, rather than hop-by-hop. Some of the qualitative properties of these policies are tabulated in Tab. 3.1.
Reference: [64] <author> Doshi, Bharat T. and Lipper, E. H., </author> <title> "Comparison of service disciplines in a queueing system with delay dependent customer behavior," in Applied Probability Computer Science: The Interface (Disney, </title> <editor> R. L. and Ott, T. J., eds.), </editor> <volume> vol. </volume> <pages> 2, </pages> <address> Cambridge, Massachusetts: </address> <publisher> Birkhauser, </publisher> <year> 1982. </year> <month> 186 </month>
Reference: [65] <author> Brady, Paul T., </author> <title> "A technique for investigating on-off patterns of speech," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 44, </volume> <pages> pp. 1 - 22, </pages> <month> Jan. </month> <year> 1965. </year>
Reference: [66] <author> Brady, Paul T., </author> <title> "A model for generating on-off speech patterns in two-way conversation," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 48, </volume> <pages> pp. 2445-2472, </pages> <month> Sept. </month> <year> 1969. </year>
Reference: [67] <author> Brady, Paul T., </author> <title> "A statistical analysis of on-off patterns in 16 conversations," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 47, </volume> <pages> pp. 73-91, </pages> <month> Jan. </month> <year> 1968. </year>
Reference: [68] <author> Karanam, V. R., Sriram, K., and Bowker, Duane O., </author> <title> "Performance evaluation of variable-bit-rate voice in packet-switched networks," </title> <journal> AT&T Technical Journal, </journal> <pages> pp. 57-71, </pages> <month> September/October </month> <year> 1988. </year>
Reference: [69] <author> Nakada, Hiroshi and Sato, </author> <title> Ken-Ichi, "Variable rate speech coding for asynchronous transfer mode," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 38, </volume> <pages> pp. 277-284, </pages> <month> Mar. </month> <year> 1990. </year>
Reference: [70] <author> Huggins, A. W. F., Viswanathan, R., and Makhoul, J., </author> <title> "Speech-quality testing of some variable-frame-rate (VFR) linear-predictive (LPC) vocoders," </title> <journal> Journal of the Acoustical Society of America, </journal> <volume> vol. 62, </volume> <pages> pp. 430-434, </pages> <month> Aug. </month> <year> 1977. </year>
Reference: [71] <author> Steele, Raymond and Benjamin, Frank, </author> <title> "Variable-length packetization of - law PCM speech," </title> <journal> AT&T Technical Journal, </journal> <volume> vol. 64, </volume> <pages> pp. 1271-1292, </pages> <month> July-August </month> <year> 1985. </year>
Reference: [72] <author> Steele, Raymond and Fortune, Peter, </author> <title> "An adaptive packetization strategy for A-law PCM speech," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Chicago, </address> <publisher> Illinois), </publisher> <pages> pp. </pages> <address> 941-945 (29.6), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1985. </year>
Reference: [73] <author> Kondo, Kazuhiro and Ohno, Masashi, </author> <title> "Variable rate embedded ADPCM coding scheme for packet speech on ATM networks," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, </address> <publisher> Califor-nia), </publisher> <pages> pp. </pages> <address> 523-527 (405.3), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference: [74] <author> Magill, D. T., </author> <title> "Adaptive speech compression for packet communication systems," </title> <booktitle> in Conference record of the IEEE National Telecommunications Conference, </booktitle> (??), <pages> pp. </pages> <address> 29D-1 - 29D-5, </address> ?? <year> 1973. </year>
Reference: [75] <author> Sherman, D. N., </author> <title> "Storage and delay estimates for asynchronous multiplexing of data in speech," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-19, </volume> <pages> pp. 551-555, </pages> <month> Aug. </month> <year> 1971. </year>
Reference: [76] <author> Yatsuzuka, Yohtaro, </author> <title> "Highly sensitive speech detector and high-speed voice-band data discriminator in DSI-ADPCM systems," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-30, </volume> <pages> pp. 739-750, </pages> <month> Apr. </month> <year> 1982. </year> <month> 187 </month>
Reference: [77] <author> Mahmoud, Samy A., Chan, Wai-Yip, Riordon, J. Spruce, and Aidarous, Salah E., </author> <title> "An integrated voice/data system for VHF/UHF mobile radio," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1098-1111, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Research in transmitting voice across a packet network dates back to the early ARPAnet days. Cohen [121] refers to cross-continental packet voice experiments in 1974. According to [122], low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio <ref> [77, 123, 124] </ref> and satellite [125] packet channels. The first Internet packet voice protocol was specified formally in 1977 [126], and a packet video standard followed in 81 1981 [56]. The CCITT standard G.PVNP [127] was published in 1989.
Reference: [78] <author> Haccoun, David, Cohen, Paul, and Hai-Hoc, Hoang, </author> <title> "An experimental investigation of the active-idle pattern of speech over land mobile radio telephone channels," </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> vol. VT-32, </volume> <pages> pp. 260-268, </pages> <month> Nov. </month> <year> 1983. </year>
Reference: [79] <author> Gruber, John G., </author> <title> "A comparison of measured and calculated speech temporal parameters relevant to speech activity detection," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-30, </volume> <pages> pp. 728-738, </pages> <month> Apr. </month> <year> 1982. </year>
Reference: [80] <author> Gruber, John G. and Strawczynski, Leo, </author> <title> "Subjective effects of variable delay and speech clipping in dynamically managed voice systems," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-33, </volume> <pages> pp. 801-808, </pages> <month> Aug. </month> <year> 1985. </year>
Reference: [81] <author> Campanella, S. Joseph, </author> <title> "Digital speech interpolation techniques," </title> <booktitle> in Conference record of the IEEE National Telecommunications Conference, </booktitle> <volume> vol. 1, </volume> <publisher> (Birmingham, Alabama), </publisher> <pages> pp. </pages> <address> 14.1.1 - 14.1.5, </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1978. </year>
Reference: [82] <author> Rieser, J. H., Suyderhood, H. G., and Yatsuzuka, Y., </author> <title> "Design considerations for digital speech interpolation," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Denver, Colorado), </address> <pages> pp. </pages> <address> 49.4.1 - 49.4.7, </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1981. </year>
Reference: [83] <author> Ashmend, Rais and Fatehchand, Richard, </author> <title> "Effect of sample duration on the articulation of sounds in normal and clipped speech," </title> <journal> The Journal of the Acoustical Society of America, </journal> <volume> vol. 31, </volume> <pages> pp. 1022-1029, </pages> <month> July </month> <year> 1959. </year>
Reference: [84] <author> Nagarajan, Ramesh, Kurose, James F., and Towsley, Don, </author> <title> "Approximation techniques for computing packet loss in finite-buffered voice multiplexers," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 947-955, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: Superimposed traffic streams of the same statistical description are found in the analysis of packet voice multiplexers [229], usually in the form of approximations <ref> [17, 84] </ref>. In the following sections, we set out to analyze in some detail three implementations of the model described at the beginning of this section, increasing in generality as we progress through the section. The first two models assume a constant, deterministic interarrival time for the foreground traffic.
Reference: [85] <author> Nagarajan, Ramesh, Kurose, James F., and Towsley, Don, </author> <title> "Approximation techniques for computing packet loss in finite-buffered voice multiplexers," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 368-377, </pages> <month> Apr. </month> <year> 1991. </year>
Reference: [86] <author> Brochin, Frank M. and Thomas, John B., </author> <title> "Voice transmission in packet switching networks: a model for queueing analysis," </title> <booktitle> in 26th Annual Allerton Conference on Communication, Control and Computing, </booktitle> <address> (Monticello, </address> <publisher> Illinois), </publisher> <pages> pp. 1001-1004, </pages> <month> Sept. </month> <year> 1988. </year>
Reference-contexts: A suitable statistical model, preferably one that is analytically tractable, to capture these effects needs to be developed and tested. Brochin and Thomas <ref> [86] </ref> present a three-state model that might make a good initial candidate. (The paper [86] does not address how to fit the parameters to observed data or how well the three-state model can indeed predict, say, queueing delays.) The conversational and lecture audio sources (the latter will be covered in Section <p> A suitable statistical model, preferably one that is analytically tractable, to capture these effects needs to be developed and tested. Brochin and Thomas <ref> [86] </ref> present a three-state model that might make a good initial candidate. (The paper [86] does not address how to fit the parameters to observed data or how well the three-state model can indeed predict, say, queueing delays.) The conversational and lecture audio sources (the latter will be covered in Section 4.3) also point out the difficulty of policing audio with a token bucket (also
Reference: [87] <author> Berger, Arthur W., </author> <title> "Overload control using rate control throttle: Selecting token bank capacity for robustness to arrival rates," </title> <booktitle> in Proceedings of the 188 IEEE Conference on Decision and Control, </booktitle> <address> (Tampa, Florida), </address> <pages> pp. 2527-2529, </pages> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1989. </year>
Reference: [88] <author> Ahmadi, Hamid, Guerin, Roch, and Sohraby, Khoshrow, </author> <title> "Analysis of leaky bucket access control mechanism with batch arrival process," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, California), </address> <pages> pp. 344-349, </pages> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference: [89] <author> Butto, Milena, Cavallero, Elisa, and Tonietti, Alberto, </author> <title> "Effectiveness of the "leaky bucket" policing mechanism in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 335-342, </pages> <month> Apr. </month> <year> 1991. </year>
Reference: [90] <author> Cooper, C. Anthony and Park, Kun I., </author> <title> "Toward a broadband congestion control strategy," </title> <journal> IEEE Network, </journal> <volume> vol. 4, </volume> <pages> pp. 18-23, </pages> <month> May </month> <year> 1990. </year>
Reference: [91] <author> Rathgeb, Erwin P., </author> <title> "Modeling and performance comparison of policing mechanisms for ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 325-334, </pages> <month> Apr. </month> <year> 1991. </year>
Reference: [92] <author> Escobar, Julio, Deutsch, Debra, and Partridge, Craig, </author> <title> "Flow synchronization protocol," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (Orlando, Florida), </address> <pages> pp. </pages> <address> 1381-1387 (40.04), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1992. </year>
Reference: [93] <author> Little, T. D. C., Ghafoor, A., Chen, C. Y. R., Chang, C.S., and Berra, P. B., </author> <title> "Multimedia synchronization," </title> <journal> The Quarterly Bulletin of the IEEE Computer Society Technical Committe on Data Engineering, </journal> <volume> vol. 14, </volume> <pages> pp. 26-35, </pages> <month> Sept. </month> <year> 1991. </year>
Reference: [94] <author> Anderson, David P. and Homsy, George, </author> <title> "A continuous media I/O server and its synchronization mechanism," </title> <journal> IEEE Computer, </journal> <volume> vol. 24, </volume> <pages> pp. 51-57, </pages> <month> Oct. </month> <year> 1991. </year>
Reference: [95] <author> Auzimoor, P., Hazard, L., Horn, F., Lacroix, D., and Stefani, J. B., </author> <title> "An analysis of multimedia restitution and its architectural impact," </title> <booktitle> in First International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> (Berkeley, California), </address> <year> 1990. </year> <month> TR-90-062. </month>
Reference: [96] <author> Yavatkar, Raj, </author> <title> "Issues of coordination and temporal synchronization in multimedia communication (extended abstract)," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 77-78, </pages> <month> Mar. </month> <year> 1992. </year>
Reference: [97] <author> Li, Li, Karmouch, A., and Georganas, N. D., </author> <title> "Real-time synchronization control in multimedia distributed systems," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 79-87, </pages> <month> Mar. </month> <year> 1992. </year>
Reference: [98] <author> Little, T. D. C., </author> <title> "Protocols for bandwidth-constrained multimedia traffic," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 47-48, </pages> <month> Mar. </month> <year> 1992. </year> <month> 189 </month>
Reference: [99] <author> Steinmetz, Ralf and Meyer, Thomas, </author> <title> "Multimedia synchronization techniques: experiences based on different system structures," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 90-91, </pages> <month> Mar. </month> <year> 1992. </year>
Reference: [100] <author> Campbell, Andrew, Coulson, Geoff, Garc ia, Francisco, and Hutchison, David, </author> <title> "A continuous media transport and orchestration service," in SIGCOMM Symposium on Communications Architectures and Protocols (Sidhu, </title> <editor> Deepinder P., ed.), </editor> <address> (Baltimore, Maryland), </address> <pages> pp. 99-110, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1992. </year> <note> in Computer Communication Review 22 (4), </note> <month> Oct. </month> <year> 1992. </year>
Reference: [101] <author> DARPA/ISI, </author> <note> DARTnet planning and review workshop, </note> <author> (Marina del Ray, Cal-ifornia), </author> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: the beginning of that section, we also illustrate the difference between the performance predicted by simulation and that seen in an actual network and strive to illuminate some of the potential causes for these differences. 4.1 The Experimental Network All network experiments were performed within DARTnet, the DARPA-sponsored research network <ref> [101] </ref> spanning the continental United States. This network does not carry regular Internet traffic and can be reserved for the exclusive use of individual research groups.
Reference: [102] <author> Deering, Stephen E. and Cheriton, David R., </author> <title> "Multicast routing in datagram internetworks and extended LANs," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 8, </volume> <pages> pp. 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Within DARTnet, this is not a serious limitation, but paths across the Internet routinely require fifteen or more hops. 6 The scheme to determine path lengths described above can be extended to a multicast network <ref> [102] </ref> by simply using the maximum computed hop count. A suitable time period has to be defined during which ICMP echo responses are accepted.
Reference: [103] <author> Deering, Steve, </author> <title> "Host extensions for IP multicasting," Network Working Group Request for Comments RFC 1054, </title> <institution> Stanford University, </institution> <month> May </month> <year> 1988. </year>
Reference: [104] <author> Deering, Steve, </author> <title> "Host extensions for IP multicasting," Network Working Group Request for Comments RFC 1112, </title> <institution> Stanford University, </institution> <month> Aug. </month> <year> 1989. </year>
Reference: [105] <author> Comer, Douglas E., </author> <title> Internetworking with TCP/IP, </title> <booktitle> vol. 1. </booktitle> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: The node locations are listed in Table 4.1. A POP designates a point of presence, i.e., telephone company provided equipment closet, where the router connects to the physical transmission facility. 1 The kernel was modified to support IP multicasting [102-104] <ref> [105, p. 281f] </ref> and the ST-II stream protocol. In addition, it incorporates network performance enhancements, such as larger packet buffers and other algorithmic improvements, mostly for TCP, contributed by Van Jacobsen.
Reference: [106] <author> Postel, Jon, </author> <title> "Internet protocol," Network Working Group Request for Comments RFC 791, </title> <journal> Information Sciences Institute, </journal> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: The laxity information must be carried with every packet, while the hop count remains invariant throughout the life of a connection and can thus be part of the connection state. The scheduling mechanism was implemented under both the Internet Protocol (IP) <ref> [106] </ref> and the experimental stream protocol called ST-II [107]. In this section, we describe how the protocol data units were modified for each protocol to accommodate the new scheduling algorithm and how the kernel had to be adapted. For both protocols, the basic protocol operation was unaffected. <p> If that bit is zero, scheduling priority increases with negative laxity. The second least significant bit switches from hop-laxity to a simple minimum laxity algorithm by not decrementing the remaining hop count from its initial value of one. 4 There is, however, a set of options defined in <ref> [106] </ref> that have to be handled appropriately by all IP agents. 66 4.2.1.2 Hop Count Information The fourth octet within the option contains the number of hops remaining for this datagram. <p> A simple, though not completely foolproof method, implemented uses the ICMP echo request (ICMP type 8 and 0) and the IP time-to-live (TTL) field. Each node along the path decrements the TTL field by one 5 . Since ICMP apparently uses the maximum TTL 5 The IP specification <ref> [106] </ref> requires that a gateway decrements the TTL by the number of seconds the packet has resided in that gateway, with a minimum decrement of one.
Reference: [107] <author> Topolcic, Claudio, Casner, Stephen, Lynn, Charles, Jr., Park, Philippe, and Schroder, Kenneth, </author> <title> "Experimental internet stream protocol, version 2 (ST-II)," Network Working Group Request for Comments RFC 1190, BBN Systems and Technologies, </title> <address> Oct. </address> <year> 1990. </year>
Reference-contexts: The laxity information must be carried with every packet, while the hop count remains invariant throughout the life of a connection and can thus be part of the connection state. The scheduling mechanism was implemented under both the Internet Protocol (IP) [106] and the experimental stream protocol called ST-II <ref> [107] </ref>. In this section, we describe how the protocol data units were modified for each protocol to accommodate the new scheduling algorithm and how the kernel had to be adapted. For both protocols, the basic protocol operation was unaffected. <p> Thus, we will focus only on those parts that differ substantially. For the experiments, we made use of the implementation of ST-II for SunOS written by Charlie Lynn of Bolt, Beranek and Newman (BBN), Cambridge, Massachusetts. ST-II is a connection-oriented internet protocol. The protocol description states <ref> [107, p. 7] </ref>: ST has been developed to support efficient delivery of streams of packets to either single or multiple destinations in applications requiring guaranteed data rates and controlled delay characteristics. ST is an internet protocol at the same layer as IP.
Reference: [108] <author> Postel, John, </author> <title> "Internet control message protocol," Network Working Group Request for Comments RFC 792, </title> <type> ISI, </type> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: If packets with invalid hop counts are discarded, the receiving end would have no way of distinguishing this route change from normal packet loss or loss of network connectivity. This drawback could be avoided by sending an ICMP (Internet Control Message Protocol) <ref> [108] </ref> message of type 11 (Time Exceeded for a Datagram) in that case, possibly with a different code value indicating the cause than the currently defined codes.) It has been proposed to augment the connectionless Internet protocol with "soft state" at each router.
Reference: [109] <author> Zhang, Lixia, Deering, Steve, Estrin, Deborah, Shenker, Scott, and Zappala, Daniel, "Rsvp: </author> <title> a new Resource ReSerVation Protocol." </title> <note> preliminary draft (anon. ftp), </note> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: Thus, packets would continue to flow, albeit without the benefit of traffic-class specific scheduling, even if the soft state record got lost due to router failure and recovery. The use of soft state has been suggested, for example, for maintaining resource allocations within routers <ref> [109] </ref>. Clearly, such a soft state record could also hold the remaining hop count. In a connectionless protocol such as IP, the path length (hop count) can only be approximately determined, since by definition, there is no guarantee that any two packets travel the same route through the network.
Reference: [110] <author> Mills, David L., </author> <title> "Network time protocol (version 3) specification, implementation and analysis," Network Working Group Request for Comments RFC 1305, </title> <institution> University of Delaware, </institution> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: Also, the delays accrued by routers not participating in the scheduling algorithm are not accounted for. All but the last timestamp encoding require clocks to be synchronized to within a few milliseconds. This is well within the current state-of-the art, as evidenced by the sub-millisecond synchronization found within DARTnet <ref> [110] </ref>. Any timestamp that includes the transmission time may lead to packet reordering within the same stream if two packets with different lengths follow each other closely.
Reference: [111] <author> Mills, David L., </author> <title> "Network time protocol (version 2) | specification and implementation," Network Working Group Request for Comments RFC 1119, </title> <institution> University of Delaware, </institution> <month> Sept. </month> <year> 1989. </year> <month> 190 </month>
Reference-contexts: The deadline timestamp is carried within the final four bytes of the option, encoded in network byte order (most significant byte first or big endian). The timestamp uses a shortened version of the network time protocol (NTP) <ref> [111, 112] </ref> timestamp, extracting the middle 32 bits from the original 64 bits. The shortened timestamp encodes the least significant 16 bits of the number of seconds since zero hours (Universal Time) January 1, 1990 plus a 16-bit binary fraction of a second, resolving time to about 15.2 s.
Reference: [112] <author> Mills, David L., </author> <title> "Internet time synchronization: the network time protocol," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1482-1493, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: The deadline timestamp is carried within the final four bytes of the option, encoded in network byte order (most significant byte first or big endian). The timestamp uses a shortened version of the network time protocol (NTP) <ref> [111, 112] </ref> timestamp, extracting the middle 32 bits from the original 64 bits. The shortened timestamp encodes the least significant 16 bits of the number of seconds since zero hours (Universal Time) January 1, 1990 plus a 16-bit binary fraction of a second, resolving time to about 15.2 s.
Reference: [113] <author> Le*er, Samuel J., McKusick, Marshall Kirk, Karels, Michael J., and Quarter-man, John S., </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System. </title> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: A general description of the BSD networking code can be found in <ref> [113] </ref>. The data flow is also depicted in Fig. 4.3. As we will modify the data structures used to hold packet data, we briefly describe the data structures used in BSD Unix. Network packets in the BSD networking code are stored in so-called mbuf's.
Reference: [114] <author> Zhang, Lixia, </author> <title> A New Architecture for Packet Switched Network Protocols. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, Cambridge, Massachusetts, </institution> <month> July </month> <year> 1989. </year>
Reference-contexts: It is called at the 72 73 beginning of ip output (). The first 16-bit word of the mbuf data area designates the resource control family, so that multiple scheduling policies (e.g., virtual clock, weighted fair queueing, FIFO+ and other mechanisms <ref> [114] </ref> [15] [46] [115] [36]) can be supported. The translation routine of that mbuf is then changed to MT DATASORTED, a newly defined mbuf type.
Reference: [115] <author> Weinrib, Abel and Wu, L. T., </author> <title> "Virtual clocks and leaky buckets: flow control protocols for high-speed networks," </title> <booktitle> in Proceedings of the IFIP Working Group WG 6.1 and WG 6.4 Second International Workshop on Protocols for High-Speed Networks (Johnson, </booktitle> <editor> Marjory J., </editor> <publisher> ed.), </publisher> <pages> pp. 3-15, </pages> <publisher> IFIP, </publisher> <year> 1991. </year>
Reference-contexts: It is called at the 72 73 beginning of ip output (). The first 16-bit word of the mbuf data area designates the resource control family, so that multiple scheduling policies (e.g., virtual clock, weighted fair queueing, FIFO+ and other mechanisms [114] [15] [46] <ref> [115] </ref> [36]) can be supported. The translation routine of that mbuf is then changed to MT DATASORTED, a newly defined mbuf type. This translation takes place in the ip output routine; it requires a linear through all IP options within the packet to determine if the scheduling option is present.
Reference: [116] <author> Goli, Praveen, Kurose, James F., and Towsley, Donald F., </author> <title> "Approximate minimum laxity scheduling algorithms for real-time systems," </title> <type> Technical Report TR 90-88, </type> <institution> Department of Computer and Information Sciences, University of Massachusetts, Amherst, Massachusetts, </institution> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: As another alternative, instead of searching the whole queue for the packet with the lowest priority value, the search could be limited to the first n packets, under the assumption that the most urgent packets will most likely be found there <ref> [116] </ref>. The impact of these implementation alternatives on both performance and computational cost is left for further study. 4.2.2 ST-II Implementation The ST-II implementation is very similar to the IP implementation described at length above. Thus, we will focus only on those parts that differ substantially.
Reference: [117] <author> Partridge, Craig and Pink, Stephen, </author> <title> "An implementation of the revised Internet Stream Protocol (ST-2)," </title> <booktitle> in Second International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> (Heidelberg, Germany), </address> <publisher> ACM Sigcomm, </publisher> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: Applications using ST-II also tend to be significantly more complex than those using IP/UDP only. Currently, a full implementation of ST-II is only available on SunOS. Before ST-II is widely accepted, it will probably have to be significantly streamlined and made easier to implement <ref> [117] </ref>. <p> We start by summarizing in Section 4.8.1 how the BSD networking code could be modified to ease implementation of resource-control algorithms. This complements the suggestions offered in <ref> [117] </ref>.
Reference: [118] <author> Merritt, Ian H., </author> <title> "Providing telephone line access to a packet voice network," </title> <institution> Research Report ISI/RR-83-107, Information Sciences Institute (ISI), Marina del Ray, California, </institution> <month> Feb. </month> <year> 1983. </year>
Reference-contexts: The audio data, -law coded 8-bits/sample PCM sampled at 8000 samples per second, was packetized into blocks of 180 bytes representing 22.5 ms of sound each. Then, silent packets were removed by a level-adaptive silence detection algorithm based on frame energy estimates <ref> [118] </ref>. All audio processing was performed by Nevot, a network voice application [119] described briefly below. A trace event was generated each time a packet was submitted to the socket library.
Reference: [119] <author> Schulzrinne, Henning, </author> <title> "Voice communication across the internet: A network voice terminal," </title> <type> Technical Report TR 92-50, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: Then, silent packets were removed by a level-adaptive silence detection algorithm based on frame energy estimates [118]. All audio processing was performed by Nevot, a network voice application <ref> [119] </ref> described briefly below. A trace event was generated each time a packet was submitted to the socket library. In this manner, network interface interarrival times for 100,000 frames of audio data spanning 2413 (about 40 minutes) seconds of real time were gathered. <p> Surveys on packet voice performance are presented in [140, 144]. To aid in the research efforts on aspects of real-time services reported in this dissertation, the author wrote a complete packet voice application known as Nevot ("NEtwork VOice Terminal") described in more detail in <ref> [119, 145, 146] </ref>. Its design was guided by two goals: first, to offer extensive tracing and performance monitoring functions, secondly, to be easily extendible to accommodate new network, real-time 82 and session control protocols, inter and intra-media synchronization algorithms, fixed and variable rate audio encodings and user interfaces.
Reference: [120] <author> Garrett, Mark W. and Vetterli, Martin, </author> <title> "Congestion control strategies for packet video," </title> <booktitle> in Fourth International Workshop on Packet Video, </booktitle> <address> (Kyoto, Japan), </address> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: With headers, the multiplexed sources had an aggregate data rate of 260.8 kb/s. For future work, use of the variable-rate video source described in <ref> [120] </ref> is planned. 4.4 The Network Voice Terminal Throughout this dissertation, packet voice traffic is repeatedly cited as an example for real-time traffic. Despite its relatively low bandwidth, as compared to video, for example, its delay and continuity requirements are fairly strict.
Reference: [121] <author> Cohen, D., </author> <title> "On packet speech communication," </title> <booktitle> in Proceedings of the Fifth International Conference on Computer Communications, (Atlanta, Georgia), </booktitle> <pages> pp. 271-274, </pages> <publisher> IEEE, </publisher> <month> Oct. </month> <year> 1980. </year>
Reference-contexts: Despite its relatively low bandwidth, as compared to video, for example, its delay and continuity requirements are fairly strict. Research in transmitting voice across a packet network dates back to the early ARPAnet days. Cohen <ref> [121] </ref> refers to cross-continental packet voice experiments in 1974. According to [122], low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio [77, 123, 124] and satellite [125] packet channels.
Reference: [122] <author> Forgie, James W., </author> <title> "Voice conferencing in packet networks," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Seatle, Washington), </address> <pages> pp. </pages> <address> 21.3.1-21.3.4, </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1980. </year>
Reference-contexts: Despite its relatively low bandwidth, as compared to video, for example, its delay and continuity requirements are fairly strict. Research in transmitting voice across a packet network dates back to the early ARPAnet days. Cohen [121] refers to cross-continental packet voice experiments in 1974. According to <ref> [122] </ref>, low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio [77, 123, 124] and satellite [125] packet channels. <p> A number of commercial products use medium-bitrate packet voice to more effectively utilize leased private lines, extending the concept of the traditional data-only multiplexer [139]. System implementations of packet voice terminals are described in <ref> [122, 140-142] </ref>. Packet radio experiments are featured in [143]. Surveys on packet voice performance are presented in [140, 144].
Reference: [123] <author> Shacham, Nachum, Craighill, Earl J., and Poggio, Andrew A., </author> <title> "Speech transport in packet-radio networks with mobile nodes," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1084-1097, </pages> <month> Dec. </month> <year> 1983. </year> <month> 191 </month>
Reference-contexts: Research in transmitting voice across a packet network dates back to the early ARPAnet days. Cohen [121] refers to cross-continental packet voice experiments in 1974. According to [122], low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio <ref> [77, 123, 124] </ref> and satellite [125] packet channels. The first Internet packet voice protocol was specified formally in 1977 [126], and a packet video standard followed in 81 1981 [56]. The CCITT standard G.PVNP [127] was published in 1989.
Reference: [124] <author> Chan, Wai Yip, </author> <title> "A speech detector for mobile radio," </title> <type> Master's thesis, </type> <institution> Carleton University, </institution> <address> Ottawa, Ontario, Canada, </address> <month> Sept. </month> <year> 1982. </year>
Reference-contexts: Research in transmitting voice across a packet network dates back to the early ARPAnet days. Cohen [121] refers to cross-continental packet voice experiments in 1974. According to [122], low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio <ref> [77, 123, 124] </ref> and satellite [125] packet channels. The first Internet packet voice protocol was specified formally in 1977 [126], and a packet video standard followed in 81 1981 [56]. The CCITT standard G.PVNP [127] was published in 1989.
Reference: [125] <author> Falk, Gilbert, Groff, Stephen J., Milliken, Walter C., Nodine, Marian, Blu-menthal, Steven, and Edmond, Winston, </author> <title> "Integration of voice and data in the wideband packet satellite network," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1076-1083, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Cohen [121] refers to cross-continental packet voice experiments in 1974. According to [122], low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio [77, 123, 124] and satellite <ref> [125] </ref> packet channels. The first Internet packet voice protocol was specified formally in 1977 [126], and a packet video standard followed in 81 1981 [56]. The CCITT standard G.PVNP [127] was published in 1989.
Reference: [126] <author> Cohen, Danny, </author> <title> "Specification for the network voice protocol (NVP)," Network Working Group Request for Comment RFC 741, </title> <type> ISI, </type> <month> Jan. </month> <year> 1976. </year>
Reference-contexts: According to [122], low-bit rate voice conferences very carried out in 1976. The early '80s saw experiments of transmitting low-bitrate voice across mobile radio [77, 123, 124] and satellite [125] packet channels. The first Internet packet voice protocol was specified formally in 1977 <ref> [126] </ref>, and a packet video standard followed in 81 1981 [56]. The CCITT standard G.PVNP [127] was published in 1989.
Reference: [127] <author> CCITT, </author> <title> "Draft recommendation G.PVNP: Packetized voice networking protocol," </title> <note> 1989. Appendix 2 to Annex 1 of Question 24/XV (COM XV-1-E). </note>
Reference-contexts: The early '80s saw experiments of transmitting low-bitrate voice across mobile radio [77, 123, 124] and satellite [125] packet channels. The first Internet packet voice protocol was specified formally in 1977 [126], and a packet video standard followed in 81 1981 [56]. The CCITT standard G.PVNP <ref> [127] </ref> was published in 1989. Currently, an effort is underway within the Internet Engineering Task Force to develop a transport protocol (called RTP) suitable for packet voice and video as well as other real-time applications [128, 129].
Reference: [128] <author> Schulzrinne, Henning, </author> <title> "Issues in designing a transport protocol for audio and video conferences and other multiparticipant real-time applications." Internet draft (work-in-progress) draft-ietf-avt-issues-*.txt, </title> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: The CCITT standard G.PVNP [127] was published in 1989. Currently, an effort is underway within the Internet Engineering Task Force to develop a transport protocol (called RTP) suitable for packet voice and video as well as other real-time applications <ref> [128, 129] </ref>. Due to its ample bandwidth and relatively short albeit variable delays, packet voice across local networks such as Ethernet [130], token ring [131, 132] or slotted ring [133] has drawn considerable implementation work. <p> network tests and simulations * as a quality-of-service measurement tool, allowing the measurement of packet loss and end-to-end delay as actually perceived by the user, after delay adap tation and loss reconstruction * as a test bed for improved delay adaptation, intra-media synchronization algo rithms and protocols for real-time services <ref> [128, 129] </ref> Nevot has also served as a demonstration tool for real-time applications across both wide-area packet switched networks such as the Internet as well as corporate private networks.
Reference: [129] <author> Schulzrinne, Henning, </author> <title> "A transport protocol for real-time applications." Internet draft (work-in-progress) draft-ietf-avt-rtp-*.txt, </title> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: The CCITT standard G.PVNP [127] was published in 1989. Currently, an effort is underway within the Internet Engineering Task Force to develop a transport protocol (called RTP) suitable for packet voice and video as well as other real-time applications <ref> [128, 129] </ref>. Due to its ample bandwidth and relatively short albeit variable delays, packet voice across local networks such as Ethernet [130], token ring [131, 132] or slotted ring [133] has drawn considerable implementation work. <p> network tests and simulations * as a quality-of-service measurement tool, allowing the measurement of packet loss and end-to-end delay as actually perceived by the user, after delay adap tation and loss reconstruction * as a test bed for improved delay adaptation, intra-media synchronization algo rithms and protocols for real-time services <ref> [128, 129] </ref> Nevot has also served as a demonstration tool for real-time applications across both wide-area packet switched networks such as the Internet as well as corporate private networks.
Reference: [130] <author> Donofrio, Edward J., </author> <title> "The experimental communication system for voice/data on the Ethernet," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <volume> vol. </volume> <pages> 2, </pages> <address> (New Orleans, </address> <publisher> Louisiana), </publisher> <pages> pp. </pages> <address> 848-851 (28.2), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1985. </year>
Reference-contexts: Due to its ample bandwidth and relatively short albeit variable delays, packet voice across local networks such as Ethernet <ref> [130] </ref>, token ring [131, 132] or slotted ring [133] has drawn considerable implementation work. Note that packet audio/video should be set apart from the approach to voice/data integration that provides fixed-bandwidth circuits on multiple access networks [134-136].
Reference: [131] <author> Friedman, Eluzor and Ziegler, Chaim, </author> <title> "Real-time voice communications over a token-passing ring local area network," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Stowe, Vermont), </address> <pages> pp. 52-57, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: Due to its ample bandwidth and relatively short albeit variable delays, packet voice across local networks such as Ethernet [130], token ring <ref> [131, 132] </ref> or slotted ring [133] has drawn considerable implementation work. Note that packet audio/video should be set apart from the approach to voice/data integration that provides fixed-bandwidth circuits on multiple access networks [134-136].
Reference: [132] <author> Friedman, Eluzor and Ziegler, Chaim, </author> <title> "Packet voice communications over PC-based local area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 7, </volume> <pages> pp. 211-218, </pages> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Due to its ample bandwidth and relatively short albeit variable delays, packet voice across local networks such as Ethernet [130], token ring <ref> [131, 132] </ref> or slotted ring [133] has drawn considerable implementation work. Note that packet audio/video should be set apart from the approach to voice/data integration that provides fixed-bandwidth circuits on multiple access networks [134-136].
Reference: [133] <author> Ades, Stephen, Want, Roy, and Calnan, Roger, </author> <title> "Protocols for real time voice communication on a packet local network," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Toronto, Canada), </address> <pages> pp. </pages> <address> 525-530 (17.1), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1986. </year>
Reference-contexts: Due to its ample bandwidth and relatively short albeit variable delays, packet voice across local networks such as Ethernet [130], token ring [131, 132] or slotted ring <ref> [133] </ref> has drawn considerable implementation work. Note that packet audio/video should be set apart from the approach to voice/data integration that provides fixed-bandwidth circuits on multiple access networks [134-136].
Reference: [134] <author> Brandsma, J. R., Bruekers, A. A. M. L., and Kessels, J. L. W., "PHILAN: </author> <title> a fiber-optic ring for voice and data," </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 24, </volume> <pages> pp. 16-22, </pages> <month> Dec. </month> <year> 1986. </year>
Reference: [135] <author> Casey, L. M., Dittburner, R. C., and Gamage, N. D., "FXNET: </author> <title> a backbone ring for voice and data," </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 24, </volume> <pages> pp. 23-28, </pages> <month> Dec. </month> <year> 1986. </year> <month> 192 </month>
Reference: [136] <author> Limb, John O. and Flamm, Lois E., </author> <title> "A distributed local area network packet protocol for combined voice and data transmission," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 926-934, </pages> <month> Nov. </month> <year> 1983. </year>
Reference: [137] <author> Soares, L. F. G., Martins, S. L., Bastos, T. L. P., Ribeiro, N. R., and Cordeiro, R. C. S., </author> <title> "LAN based real time audio-data system," </title> <booktitle> in Conference on Office Automation Systems, </booktitle> <volume> vol. </volume> <pages> 11, </pages> <address> (Cambridge, Massachusetts), </address> <pages> pp. 152-157, </pages> <publisher> ACM, </publisher> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: There exist a fair number of simple programs that utilize the SPARCstation audio hardware to communicate between two workstation on a local net, for example vtalk (Miron Cuperman, OKI) or PhoneTalk (Patrik Nises and Joakim Wettby, Royal Institute of Technology, Stockholm). Another example for LANs is LANBRETA-DTS <ref> [137] </ref>, part of a LAN-based teleconferencing system. Programs designed for multiple-party connections across wide-area networks include VT [138] and vat (Van Jacobsen and Steve McCanne, LBL).
Reference: [138] <author> Schooler, Eve M. and Casner, Stephen L., </author> <title> "A packet-switched multimedia conferencing system," </title> <journal> SIGOIS (ACM Special Interest Group on Office Information Systems) Bulletin, </journal> <volume> vol. 10, </volume> <pages> pp. 12-22, </pages> <month> Jan. </month> <year> 1989. </year>
Reference-contexts: Another example for LANs is LANBRETA-DTS [137], part of a LAN-based teleconferencing system. Programs designed for multiple-party connections across wide-area networks include VT <ref> [138] </ref> and vat (Van Jacobsen and Steve McCanne, LBL). A number of commercial products use medium-bitrate packet voice to more effectively utilize leased private lines, extending the concept of the traditional data-only multiplexer [139]. System implementations of packet voice terminals are described in [122, 140-142].
Reference: [139] <author> Corley, L. T., </author> <title> "Bellsouth trial of wideband packet technology," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <volume> vol. </volume> <pages> 3, </pages> <address> (Atlanta, Georgia), </address> <pages> pp. </pages> <address> 1000-1002 (324.2), </address> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Programs designed for multiple-party connections across wide-area networks include VT [138] and vat (Van Jacobsen and Steve McCanne, LBL). A number of commercial products use medium-bitrate packet voice to more effectively utilize leased private lines, extending the concept of the traditional data-only multiplexer <ref> [139] </ref>. System implementations of packet voice terminals are described in [122, 140-142]. Packet radio experiments are featured in [143]. Surveys on packet voice performance are presented in [140, 144].
Reference: [140] <author> Barberis, Guilio, Calabrese, Mario, Lambarelli, Livio, and Roffinella, Daniele, </author> <title> "Coded speech in packet-switched networks: Models and experiments," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1028-1038, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: System implementations of packet voice terminals are described in [122, 140-142]. Packet radio experiments are featured in [143]. Surveys on packet voice performance are presented in <ref> [140, 144] </ref>. To aid in the research efforts on aspects of real-time services reported in this dissertation, the author wrote a complete packet voice application known as Nevot ("NEtwork VOice Terminal") described in more detail in [119, 145, 146].
Reference: [141] <author> Kapaun, A. A., Leung, W.-H. F., Luderer, G. W. R., Morgan, M. J., and Vaidya, A. K., </author> <title> "Wideband packet access for workstations: integrated voice/data/image services on the Unix PC," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <volume> vol. </volume> <pages> 3, </pages> <address> (Houston, Texas), </address> <pages> pp. </pages> <address> 1439-1441 (40.6), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1986. </year>
Reference: [142] <author> Bowker, D. O. and Dvorak, C. A., </author> <title> "Speech transmission quality of wideband packet technology," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <volume> vol. </volume> <pages> 3, </pages> <address> (Tokyo, Japan), </address> <pages> pp. </pages> <address> 1887 - 1889 (47.7), </address> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1987. </year>
Reference: [143] <author> Spilling, Paal and Craighill, Earl, </author> <title> "Digital voice communications in the packet radio network," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Seattle, Washington), </address> <pages> pp. </pages> <address> 21.4.1-21.4.7, </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1980. </year>
Reference-contexts: A number of commercial products use medium-bitrate packet voice to more effectively utilize leased private lines, extending the concept of the traditional data-only multiplexer [139]. System implementations of packet voice terminals are described in [122, 140-142]. Packet radio experiments are featured in <ref> [143] </ref>. Surveys on packet voice performance are presented in [140, 144]. To aid in the research efforts on aspects of real-time services reported in this dissertation, the author wrote a complete packet voice application known as Nevot ("NEtwork VOice Terminal") described in more detail in [119, 145, 146].
Reference: [144] <author> Muise, R. W., Schonfeld, T. J., and Zimmerman III, G. H., </author> <title> "Experiments in wideband packet technology," </title> <booktitle> in Proceedings of the International Seminar, </booktitle> <address> (Zurich), </address> <pages> pp. 135-139, </pages> <address> North-Holland/IEEE, </address> <month> Mar. </month> <year> 1986. </year>
Reference-contexts: System implementations of packet voice terminals are described in [122, 140-142]. Packet radio experiments are featured in [143]. Surveys on packet voice performance are presented in <ref> [140, 144] </ref>. To aid in the research efforts on aspects of real-time services reported in this dissertation, the author wrote a complete packet voice application known as Nevot ("NEtwork VOice Terminal") described in more detail in [119, 145, 146].
Reference: [145] <author> Steinberg, Daniel and Rua, Monica, </author> <title> "Desktop audio at Sun Microsystems," </title> <booktitle> in American Voice Input/Output Society Conference, </booktitle> <address> (Minneapolis, Minnesota), AVIOS, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Surveys on packet voice performance are presented in [140, 144]. To aid in the research efforts on aspects of real-time services reported in this dissertation, the author wrote a complete packet voice application known as Nevot ("NEtwork VOice Terminal") described in more detail in <ref> [119, 145, 146] </ref>. Its design was guided by two goals: first, to offer extensive tracing and performance monitoring functions, secondly, to be easily extendible to accommodate new network, real-time 82 and session control protocols, inter and intra-media synchronization algorithms, fixed and variable rate audio encodings and user interfaces.
Reference: [146] <author> Casner, Stephen and Deering, Stephen, </author> <title> "First IETF Internet audiocast," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 92-97, </pages> <month> July </month> <year> 1992. </year> <month> 193 </month>
Reference-contexts: Surveys on packet voice performance are presented in [140, 144]. To aid in the research efforts on aspects of real-time services reported in this dissertation, the author wrote a complete packet voice application known as Nevot ("NEtwork VOice Terminal") described in more detail in <ref> [119, 145, 146] </ref>. Its design was guided by two goals: first, to offer extensive tracing and performance monitoring functions, secondly, to be easily extendible to accommodate new network, real-time 82 and session control protocols, inter and intra-media synchronization algorithms, fixed and variable rate audio encodings and user interfaces.
Reference: [147] <author> Montgomery, Warren A., </author> <title> "Techniques for packet voice synchronization," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1022-1028, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: bit/second LPC vocoder used in early experiments.) The packet voice receiver compensates for the delay variabilities introduced by the sender, the network and the network receiver processing by adding a variable delay between the arrival time and the time the audio data is submitted to the audio 83 output device. <ref> [147] </ref> [148] [149] [150]. In general, packets within a talkspurt have to be played out consecutively, so that playout delay adaptation can only take place at the beginning of a talkspurt.
Reference: [148] <author> Suda, Tatsuya, Miyahara, Hideo, and Hasegawa, Toshiharu, </author> <title> "Performance evaluation of a packetized voice system | simulation study," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-34, </volume> <pages> pp. 97-102, </pages> <month> Jan. </month> <year> 1984. </year>
Reference-contexts: LPC vocoder used in early experiments.) The packet voice receiver compensates for the delay variabilities introduced by the sender, the network and the network receiver processing by adding a variable delay between the arrival time and the time the audio data is submitted to the audio 83 output device. [147] <ref> [148] </ref> [149] [150]. In general, packets within a talkspurt have to be played out consecutively, so that playout delay adaptation can only take place at the beginning of a talkspurt. Since low end-to-end delays are highly desirable for interactive voice communication, adaptive rather than worst-case playout delays are typically used.
Reference: [149] <author> Gopal, Prabandham M., Wong, J. W., and Majithia, J. C., </author> <title> "Analysis of playout strategies for voice transmission using packet switching techniques," </title> <journal> Performance Evaluation, </journal> <volume> vol. 4, </volume> <pages> pp. 11-18, </pages> <month> Feb. </month> <year> 1984. </year>
Reference-contexts: vocoder used in early experiments.) The packet voice receiver compensates for the delay variabilities introduced by the sender, the network and the network receiver processing by adding a variable delay between the arrival time and the time the audio data is submitted to the audio 83 output device. [147] [148] <ref> [149] </ref> [150]. In general, packets within a talkspurt have to be played out consecutively, so that playout delay adaptation can only take place at the beginning of a talkspurt. Since low end-to-end delays are highly desirable for interactive voice communication, adaptive rather than worst-case playout delays are typically used.
Reference: [150] <author> Ma, Joong and Gopal, Inder, </author> <title> "A blind voice packet synchronization strategy," </title> <type> Research Report RC 13893, </type> <institution> IBM, T. J. Watson Research Center, </institution> <address> Yorktown Heights, New York, </address> <month> July </month> <year> 1988. </year>
Reference-contexts: used in early experiments.) The packet voice receiver compensates for the delay variabilities introduced by the sender, the network and the network receiver processing by adding a variable delay between the arrival time and the time the audio data is submitted to the audio 83 output device. [147] [148] [149] <ref> [150] </ref>. In general, packets within a talkspurt have to be played out consecutively, so that playout delay adaptation can only take place at the beginning of a talkspurt. Since low end-to-end delays are highly desirable for interactive voice communication, adaptive rather than worst-case playout delays are typically used.
Reference: [151] <author> Jayant, Nuggehally S. and Noll, Peter, </author> <title> Digital Coding of Waveforms. </title> <address> Engle-wood Cliffs, New Jersey: </address> <publisher> Prentice Hall, </publisher> <year> 1984. </year>
Reference-contexts: Since Nevot is expected to operate over a wide range of networks, from FDDI to modem SLIP lines, it supports audio encodings spanning the range from 48 kHz sample rate, 16 bits/sample CD quality through standard telephony toll-quality 84 64 kb/s PCM 8 , 32 and 24 kb/s ADPCM 9 <ref> [151] </ref> to low-bit rate vocoder quality 4 kb/s LPC. Support for variable rate encodings (e.g., by Huffman-encoding the ADPCM coefficients) is planned. The variety of audio encodings used makes the use of application-layer gateways necessary.
Reference: [152] <author> Schulzrinne, Henning, Kurose, James F., and Towsley, Don, </author> <title> "Congestion control for real-time traffic in high-speed networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 543-550, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: The loss as defined 101 here differs from that studied in our earlier work <ref> [152] </ref>, where excessively delayed customers depart before occupying the server. A loss period (LP) is an uninterrupted interval during which all arriving customers would experience a waiting time exceeding h.
Reference: [153] <author> Berger, Arthur W., </author> <title> "Overload control in star networks: Comparison of percent blocking throttle and LIFO queue discipline." </title> <institution> Working paper from AT&T Bell Laboratories, </institution> <year> 1989. </year>
Reference: [154] <author> Forys, L. J., </author> <title> "Performance analysis of a new overload strategy," </title> <booktitle> in Proceedings of the Tenth International Teletraffic Congress (ITC-10), </booktitle> <address> (Montreal), p. 5.24, IAC, </address> <publisher> North Holland, </publisher> <month> June </month> <year> 1983. </year>
Reference: [155] <author> Gruber, John G. and Le, Nguyen H., </author> <title> "Performance requirements for integrated voice/data networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 981-1005, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: The importance of accounting for correlated losses has long been recognized in specifiying acceptable performance of data circuits. "An errored second is declared when one or more bits in that second is found in error. <ref> [155] </ref>" This leads to the metric of the percentage of error-free seconds (EFS). Papers on the replacement of lost packets in packet voice communication systems typically assume random, uncorrelated occurrence of packet loss [156, 157]; as we will show, this assumption might be overly optimistic.
Reference: [156] <author> Jayant, Nuggehally S., </author> <title> "Effects of packet losses in waveform-coded speech," </title> <booktitle> in International Conference on Computers and Communications, (Atlanta, Georgia), </booktitle> <pages> pp. 275-280, </pages> <publisher> IEEE, </publisher> <month> Oct. </month> <year> 1980. </year>
Reference-contexts: Papers on the replacement of lost packets in packet voice communication systems typically assume random, uncorrelated occurrence of packet loss <ref> [156, 157] </ref>; as we will show, this assumption might be overly optimistic. The work by Shacham and Kenney [158, 159] provides another example.
Reference: [157] <author> DaSilva, Luiz A., Petr, David W., and Frost, Victor S., </author> <title> "A class-oriented replacement technique for lost speech packets," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Ottawa, Canada), </address> <pages> pp. 1098-1105, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: Papers on the replacement of lost packets in packet voice communication systems typically assume random, uncorrelated occurrence of packet loss <ref> [156, 157] </ref>; as we will show, this assumption might be overly optimistic. The work by Shacham and Kenney [158, 159] provides another example.
Reference: [158] <author> Shacham, Nachum, </author> <title> "Packet resequencing under reliable transport protocols," </title> <booktitle> in Hawaii International Conference on System Sciences, </booktitle> <volume> vol. 3, </volume> <booktitle> (Kailua-Kona, Hawaii), </booktitle> <pages> pp. 716-723, </pages> <month> Jan. </month> <year> 1989. </year> <month> 194 </month>
Reference-contexts: Papers on the replacement of lost packets in packet voice communication systems typically assume random, uncorrelated occurrence of packet loss [156, 157]; as we will show, this assumption might be overly optimistic. The work by Shacham and Kenney <ref> [158, 159] </ref> provides another example.
Reference: [159] <author> Shacham, Nachum and McKenney, Paul, </author> <title> "Packet recovery in high-speed networks using coding and buffer management," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 124-131, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: Papers on the replacement of lost packets in packet voice communication systems typically assume random, uncorrelated occurrence of packet loss [156, 157]; as we will show, this assumption might be overly optimistic. The work by Shacham and Kenney <ref> [158, 159] </ref> provides another example. <p> Thus, our results can be used in conjunction with the work cited here to directly predict ARQ performance. In some simulation studies, cell loss correlation has been investigated [166, 167] and methods for the compensation of correlated cell loss have been proposed <ref> [159, 168] </ref>. Biersack [169] uses simulation to evaluate the effect of burst losses on the performance gains achievable by forward error correction. <p> In 100 general, our focus is more on deriving computable results, relying on well-known Markov chain methods. Van Doorn [176] and Meier-Hellstern [177,178] characterize the overflow process from a finite Markovian queueing system. As pointed out earlier, <ref> [159] </ref> underlines the importance of taking loss correlations into account, but investigates their effect on forward-error correction only through simulation. A large body of literature analyzes the overflow process of blocked-calls-cleared systems, but the results do not seem directly applicable to our problem.
Reference: [160] <author> Gilbert, Edgar N., </author> <title> "Capacity of a burst-noise channel," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 39, </volume> <pages> pp. 1253-1265, </pages> <month> Sept. </month> <year> 1960. </year>
Reference-contexts: They observed that loss correlation in a finite-buffer system could completely eliminate the advantage of three orders of magnitude predicted for forward-error correction under the assumption of independent (Bernoulli) losses. 98 The investigation of loss correlation has a long history in the context of bit errors in data communication <ref> [160] </ref>, but has only recently attracted stronger interest in the area of packet networks. A number of authors have quantified the influence of loss correlation for network performance. For example, it has been shown [161-164] how the throughput of go-back-N ARQ increases with positive loss correlation. <p> Other metrics, and methods of matching this process to an observed random process, are provided by Gilbert <ref> [160] </ref>. 6.3.2 The N IPP=D=c=K queue We analyze the N IPP=D=c=K queue operating in discrete time. N IPP sources, as described above, feed into the queue, which has K buffer positions, not including the customer being served. There are c identical servers. <p> These assumptions remain to be validated by analysis. Also, the case of several heterogeneous sources and of sources with two different Bernoulli arrival processes (MMBP) rather than on/off sources deserve closer scrutiny (see [242, 243] for a loss probability analysis). 171 In the Gilbert channel model <ref> [160] </ref>, the system alternates between two states in a manner identical to the IPP source. In one state, every packet is lost, in the other, no losses occur.
Reference: [161] <author> Kaul, A. K., </author> <title> "Performance of high-level data link control in satellite communications," </title> <journal> COMSAT Technical Review, </journal> <volume> vol. 8, </volume> <pages> pp. 41-88, </pages> <month> Spring </month> <year> 1978. </year>
Reference: [162] <author> Fujiwara, F. C., Kasahara, M., Yamashita, K., and Namekawa, T., </author> <title> "Evaluations of error-control techniques in both independent and dependent-error channels," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-26, </volume> <pages> pp. 785-793, </pages> <month> June </month> <year> 1978. </year>
Reference: [163] <author> Towsley, Don, </author> <title> "A statistical analysis of ARQ protocols operating in a non-independent error environment," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. </volume> <pages> COM-29, pp. 971-981, </pages> <month> July </month> <year> 1981. </year>
Reference-contexts: We show that the assumption that each customer is lost independently from the previous 1 except for <ref> [163] </ref>, which allows a more general Markovian error model 2 The terms "customer" and "packet" will be used interchangeably. 99 one leads to a significant underestimation of the duration of such loss periods.
Reference: [164] <author> Leung, C. H. C, Kikumoto, Y., and Sorensen, S. A., </author> <title> "The throughput efficiency of the go-back-n ARQ scheme under Markov and related error structures," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 36, </volume> <pages> pp. 231-234, </pages> <month> Feb. </month> <year> 1988. </year>
Reference: [165] <author> Pieris, Gerard R. and Sasaki, Galen H., </author> <title> "The performance of simple error control protocols under correlated packet losses," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), (Bal Harbour, Florida), </booktitle> <pages> pp. </pages> <address> 764-772 (7C.1), </address> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: A number of authors have quantified the influence of loss correlation for network performance. For example, it has been shown [161-164] how the throughput of go-back-N ARQ increases with positive loss correlation. Similar results for the N -packet transfer time and go-back-1 and blast protocols are presented in <ref> [165] </ref>. All papers 1 assume a two-state Markovian error model with geometrically distributed run lengths for losses and successes, which will be seen to be appropriate for some, but not all queueing systems studied below.
Reference: [166] <author> Ohta, Hiroshi and Kitami, Tokuhiro, </author> <title> "Simulation study of the cell discard process and the effect of cell loss compensation in ATM networks," </title> <journal> The Transactions of the IEICE, </journal> <volume> vol. E73, </volume> <pages> pp. 1704-1711, </pages> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: Thus, our results can be used in conjunction with the work cited here to directly predict ARQ performance. In some simulation studies, cell loss correlation has been investigated <ref> [166, 167] </ref> and methods for the compensation of correlated cell loss have been proposed [159, 168]. Biersack [169] uses simulation to evaluate the effect of burst losses on the performance gains achievable by forward error correction.
Reference: [167] <author> Lazar, Aurel A., Pacifici, Giovanni, and White, John S., </author> <title> "Real-time traffic measurements on MAGNET II," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 467-483, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Thus, our results can be used in conjunction with the work cited here to directly predict ARQ performance. In some simulation studies, cell loss correlation has been investigated <ref> [166, 167] </ref> and methods for the compensation of correlated cell loss have been proposed [159, 168]. Biersack [169] uses simulation to evaluate the effect of burst losses on the performance gains achievable by forward error correction.
Reference: [168] <author> Kitami, Tokuhiro and Tokizawa, Ikuo, </author> <title> "Cell loss compensation schemes in an asynchronous broadband ISDN," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 116-123, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: Thus, our results can be used in conjunction with the work cited here to directly predict ARQ performance. In some simulation studies, cell loss correlation has been investigated [166, 167] and methods for the compensation of correlated cell loss have been proposed <ref> [159, 168] </ref>. Biersack [169] uses simulation to evaluate the effect of burst losses on the performance gains achievable by forward error correction.
Reference: [169] <author> Biersack, Ernst W., </author> <title> "Performance evaluation of forward error correction in ATM networks," in SIGCOMM Symposium on Communications Architectures and Protocols (Sidhu, </title> <editor> Deepinder P., ed.), </editor> <address> (Baltimore, Maryland), </address> <pages> pp. 248-257, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1992. </year> <note> in Computer Communication Review 22 (4), </note> <month> Oct. </month> <year> 1992. </year> <month> 195 </month>
Reference-contexts: Thus, our results can be used in conjunction with the work cited here to directly predict ARQ performance. In some simulation studies, cell loss correlation has been investigated [166, 167] and methods for the compensation of correlated cell loss have been proposed [159, 168]. Biersack <ref> [169] </ref> uses simulation to evaluate the effect of burst losses on the performance gains achievable by forward error correction.
Reference: [170] <author> Kamitake, Takashi and Suda, Tatsuya, </author> <title> "Evaluation of an admission control scheme for an ATM network considering fluctuations in cell loss rate," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (Dallas, Texas), </address> <pages> pp. 1774-1780, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: We also derive measures of the time between loss periods. Throughout the proposal, emphasis is placed on providing results that can be readily numerically evaluated. A number of authors have investigated related aspects of the problem. Kamitake and Suda <ref> [170] </ref> consider a discrete-time queue in which traffic is generated by a changing number of active callers, with each active caller generating a packet in a slot according to a Bernoulli process. <p> Our work differs from <ref> [170] </ref> in that we directly characterize those periods of time in which arriving customers are lost, rather than characterizing loss as being "quasi-stationary" during periods of times during which the number of active sources remains constant.
Reference: [171] <author> Leland, Will E., </author> <title> "Window-based congestion management in broadband ATM networks: the performance of three access-control policies," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (Dallas, Texas), </address> <pages> pp. 1794-1800, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: Our work differs from [170] in that we directly characterize those periods of time in which arriving customers are lost, rather than characterizing loss as being "quasi-stationary" during periods of times during which the number of active sources remains constant. Leland <ref> [171] </ref> mentions, but does not elaborate on measuring consecutive losses per connection in an ATM simulation experiment. Woodruff and Kositpaiboon [172] mention the desirability of specifying the probability and duration of periods of high cell loss rates.
Reference: [172] <author> Woodruff, Gillian M. and Kositpaiboon, Rungroj, </author> <title> "Multimedia traffic management principles for guaranteed ATM network performance," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 437-446, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Leland [171] mentions, but does not elaborate on measuring consecutive losses per connection in an ATM simulation experiment. Woodruff and Kositpaiboon <ref> [172] </ref> mention the desirability of specifying the probability and duration of periods of high cell loss rates. By rate conservation methodology, Ferrandiz and Lazar [173-175] develop a theoretical framework for studying loss correlation in queueing systems.
Reference: [173] <author> Ferrandiz, Josep M. and Lazar, Aurel A., </author> <title> "Consecutive packet loss in real-time packet traffic," </title> <booktitle> in Proceedings of the Fourth International Conference on Data Communication Systems, (Barcelona), </booktitle> <pages> pp. 306-324, </pages> <publisher> IFIP TC6, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: They investigate the distribution of gaps, that is, consecutive losses, due to blocking and clipping (see below) in a multiclass G=G=m=B queueing system; we discuss similarities and differences between our work and <ref> [173] </ref> in the following sections. In 100 general, our focus is more on deriving computable results, relying on well-known Markov chain methods. Van Doorn [176] and Meier-Hellstern [177,178] characterize the overflow process from a finite Markovian queueing system. <p> Customers that spend more than a deterministic, fixed amount of time h waiting for service are tagged as lost on leaving the queue, but are still served. (Ferrandiz and Lazar <ref> [173] </ref> refer to this as clipping loss.) This definition of loss is motivated by considerations of traffic with soft real-time constraints, where packets that are excessively delayed are worthless to the receiver. <p> The M=M=1=1 system was also investigated by Ferrandiz and Lazar <ref> [173] </ref> as a special case of their G=G=m=B analysis. Their analysis seems considerably more involved, does not readily yield numerical results and does not make use of the simple connection to the busy period pointed out here. <p> P [C B &gt; 1] = 1 P [C B = 1] = 1 1 + : Thus, P [C C = n] = n + 1 2n ! (1 + ) 2n ; n &gt; 0: Note that this result differs markedly from the geometric distribution postulated by Ferrandiz <ref> [173, Corollary 5.3] </ref>. <p> An additional characterization of loss periods is provided by the conditional probability of packet loss given that the previous packet was lost, denoted here by r. It is directly related to the average loss run length, E [C C ], through <ref> [173, eq. (5.1)] </ref> E [C C ] = 1 r r = 1 E [C C ] For the M=M=1 case, r = 1 + The clustering of losses in a queueing system is naturally also reflected in this measure.
Reference: [174] <author> Ferrandiz, Josep M. and Lazar, Aurel A., </author> <title> "A study of loss in N=GI=1 queueing systems." </title> <institution> Department of Electrical Engineering and Center for Telecommunications Research, Columbia University, </institution> <address> New York, New York, </address> <month> Jan. </month> <year> 1990. </year>
Reference: [175] <author> Ferrandiz, Josep M. and Lazar, Aurel A., </author> <title> "Rate conservation for stationary processes," </title> <journal> Journal of Applied Probability, </journal> <volume> vol. 28, </volume> <pages> pp. 146-158, </pages> <month> Mar. </month> <year> 1991. </year> <note> [176] van Doorn, </note> <author> Erik A., </author> <title> "On the overflow process from a finite Markovian queue," </title> <journal> Performance Evaluation, </journal> <volume> vol. 4, </volume> <pages> pp. 233-240, </pages> <month> Nov. </month> <year> 1984. </year>
Reference: [177] <author> Meier-Hellstern, Kathleen S., </author> <title> "Parcel overflows in queues with multiple inputs," </title> <booktitle> in Proceedings of the 12th International Teletraffic Congress (ITC) (Bonatti, </booktitle> <editor> Mario, ed.), </editor> <address> (Torino, Italy), </address> <pages> pp. 1359-1366, </pages> <publisher> North-Holland, </publisher> <month> June </month> <year> 1988. </year>
Reference: [178] <author> Meier-Hellstern, Kathleen S., </author> <title> "The analysis of a queue arising in overflow models," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 37, </volume> <pages> pp. 367-372, </pages> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: derive approximations for the individual and combined mean waiting time and overflow probability in a finite system with two overflow streams, modeled as interrupted Poisson processes (IPPs), and one Poisson stream, which is a special case of the more general model of a MMPP=M=c=c + k queue analyzed by Meier-Hellstern <ref> [178] </ref>. In most cases, the distribution of the number of busy servers in an infinite-server system accepting the overflow input is evaluated. In [225], the Laplace transform of the inter-overflow time matrix probability density function is provided.
Reference: [179] <author> Norros, I. and Virtamo, J. T., </author> <title> "Who loses cells in the case of burst scale congestion?," in Teletraffic and Datatraffic in a Period of Change (Jensen, </title> <editor> Arne and Iversen, V. B., eds.), </editor> <address> (Copenhagen, Denmark), </address> <pages> pp. 829-834, </pages> <publisher> North-Holland, </publisher> <month> June </month> <year> 1991. </year>
Reference-contexts: A large body of literature analyzes the overflow process of blocked-calls-cleared systems, but the results do not seem directly applicable to our problem. Norros and Virtamo <ref> [179] </ref> use the average loss probability during congestion as an indicator of loss correlation. They assume that the total rate has a Gaussian distribution and that congestion occurs when the total instantaneous rate exceeds the channel capacity. The chapter is organized as follows.
Reference: [180] <author> Schulzrinne, Henning, Kurose, James F., and Towsley, Don, </author> <title> "Distribution of the loss period for some queues in continuous and discrete time," </title> <type> Technical Report TR 91-03, </type> <institution> Department of Computer and Information Science, University of Massachusetts, Amherst, Massachusetts, </institution> <year> 1991. </year>
Reference-contexts: In Section 5.3 we then apply similar methods to derive the corresponding measures for a discrete-time queue of interest in packet switching. We conclude by summarizing the work presented and pointing out some issues to be investigated. Additional details and examples can be found in a companion technical report <ref> [180] </ref>. 5.2 Clip Loss in Continuous Time (G=M=1) 5.2.1 Performance Measures This chapter focuses on a single-server queue, where customers are processed in the order of arrival. <p> All results were confirmed by simulation experiments. Even for the relatively coarse quantization of t = 0:1, the noloss duration agrees quite closely with the approximate analysis. Details can be found in <ref> [180] </ref>. 5.3 Clip Loss in Discrete-time Systems We now turn our attention to a queueing model that is commonly used for packet switches and ATM-type networks [198, 199]. <p> The proof can be found in <ref> [180] </ref>. Given the characteristics of the initial jump, the length of a (composite) loss period is stochastically identical to the length of a (composite) busy period with a special first service given by the initial jump distribution.
Reference: [181] <author> Li, San-qi, </author> <title> "Study of information loss in packet voice systems," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 37, </volume> <pages> pp. 1192-1202, </pages> <month> Nov. </month> <year> 1989. </year> <month> 196 </month>
Reference-contexts: For an individual source, the probability of consecutive losses depends on its position within the bulk, which might be fixed, uniformly distributed or a time-varying stochastic process, depending on the buffer management policy. This system was treated extensively by Li <ref> [181] </ref>. Li defines as blocking those states where the buffer is full prior to service completion. We may also look at loss-correlation through a frequency-domain perspective. As an example, the first-order autocorrelation coefficient of intervals between losses was measured experimentally for a five-stage virtual circuit model with bounded waiting times. <p> For the G=G=1 case, note that busy periods with special (or exceptional) first service are covered by Wolff [185, p. 392-394]. The independence of the loss behavior from the threshold recalls a similar observation made by Li <ref> [181] </ref> regarding the buffer overflow process in a packet voice system. There, the time spent in the overload state was found to be independent of the buffer size. Let the random variable L denote the time duration of a loss period. <p> Examples can be found in [17,89,181,232-234]. For packet video, Maglaris et al. [235] model each source as the superposition of a number of on/off minisources. For their picturephone source, about ten identical minisources provided sufficient accuracy. Li also investigated the loss behavior for a voice source model <ref> [181] </ref> related to the N IPP=D=c=K queue studied here. However, he considered the temporal properties of the aggregate loss rate for all sources, not the behavior of individual sources.
Reference: [182] <author> Kleijnen, Jack P. C., </author> <title> Statistical Tools for Simulation Practitioners. </title> <address> New York, New York: </address> <publisher> Marcel Dekker, </publisher> <year> 1987. </year>
Reference-contexts: We may also look at loss-correlation through a frequency-domain perspective. As an example, the first-order autocorrelation coefficient of intervals between losses was measured experimentally for a five-stage virtual circuit model with bounded waiting times. Using the von-Neumann statistic <ref> [182] </ref> as a robust estimator, it was found that the intervals between losses were essentially uncorrelated.
Reference: [183] <author> Cidon, Israel and Gopal, Inder S., "PARIS: </author> <title> An approach to integrated high-speed private networks," </title> <journal> International Journal of Digital and Analog Cabled Networks, </journal> <volume> vol. 1, </volume> <pages> pp. 77-85, </pages> <month> April-June </month> <year> 1988. </year>
Reference-contexts: Their analysis seems considerably more involved, does not readily yield numerical results and does not make use of the simple connection to the busy period pointed out here. Our model is applicable, if only in approximation, to systems with variable packet sizes, for example the PARIS network <ref> [183] </ref> or a variation of the Knockout switch [184].
Reference: [184] <author> Eng, K. Y., Hluchyj, M. G., and Yeh, Y. S., </author> <title> "A knockout switch for variable-length packets," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Seattle, Washington), </address> <pages> pp. 794-799, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1987. </year>
Reference-contexts: Our model is applicable, if only in approximation, to systems with variable packet sizes, for example the PARIS network [183] or a variation of the Knockout switch <ref> [184] </ref>.
Reference: [185] <author> Wolff, Ronald W., </author> <title> Stochastic Modeling and the Theory of Queues. </title> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: The loss period distribution is independent of the threshold h. For G=G=1 queues, a loss period is stochastically identical to a busy period with special first service. For the G=G=1 case, note that busy periods with special (or exceptional) first service are covered by Wolff <ref> [185, p. 392-394] </ref>. The independence of the loss behavior from the threshold recalls a similar observation made by Li [181] regarding the buffer overflow process in a packet voice system. There, the time spent in the overload state was found to be independent of the buffer size. <p> The correlation coefficient r is given by [233] r = ! + fl 1. Because of batch-effects, the activity distribution vector seen by a random arrival, s 0 , is a scaled version of the vector s <ref> [185, p. 69] </ref>: s 0 is i 6 As usual, we mean the conditional probability that customer n is lost given that customer n 1 from the same source was also lost. 166 Given that i sources are active, the number of packets generated during a slot is binomially distributed with
Reference: [186] <author> Kleinrock, Leonard, </author> <title> Queueing Systems | Theory, </title> <booktitle> vol. 1. </booktitle> <address> New York, New York: </address> <publisher> Wiley-Interscience, </publisher> <year> 1975. </year>
Reference-contexts: There, the time spent in the overload state was found to be independent of the buffer size. Let the random variable L denote the time duration of a loss period. Then, given Theorem 5.1, busy and loss periods for the M=M=1 queue have the density <ref> [186, p. 215] </ref> 1 p e (+) I 1 [2y ] and mean E [L] = 1 1 ; where I 1 (y) is the modified Bessel function of the first kind of order one. <p> Let us apply these results to the M=M=1 queue. With P [C B = n] given by <ref> [186, Eq. (5.157)] </ref> 1 n 1 n1 (1 + ) 12n ; n &gt; 0 we compute P [C B &gt; 1] = 1 P [C B = 1] = 1 1 + : Thus, P [C C = n] = n + 1 2n ! (1 + ) 2n ; <p> For geometric batches 4 , we can compute the number of customers in a busy period by making use of Takacs combinatorial arguments [201, p. 102f], <ref> [186, p. 225f] </ref>. Let B be the number served in a busy period and ~ A n the number of arrivals during the service times of customers 1 through n, where these customers may belong to one or more busy periods. <p> The probability mass function of the number served in a busy period is given by <ref> [186, Eq. (5.166)] </ref> 1 P [ ~ A n = n 1]: For the case of deterministic service and batch size distribution a n , the proba bility on the right-hand side can be readily derived: P [ ~ A n = n 1] = P [n 1 arrivals in n <p> We recognize the last expression as the distribution of the number of customers served in an M=M=1 busy period <ref> [186, p. 218] </ref>. The z-transform of the number served in a busy period, B (z), follows from the M=M=1-derivation [186, p. 218]: B (z) = 2 1 1 (1 + ) 2 = p 2q The expected number served (and arriving) in a busy period can be computed by evaluating an <p> We recognize the last expression as the distribution of the number of customers served in an M=M=1 busy period <ref> [186, p. 218] </ref>. The z-transform of the number served in a busy period, B (z), follows from the M=M=1-derivation [186, p. 218]: B (z) = 2 1 1 (1 + ) 2 = p 2q The expected number served (and arriving) in a busy period can be computed by evaluating an infinite series using Eq. (5.12) or directly copying the M=M=1 result: E [B] = n=1 p 1 4pq 1
Reference: [187] <author> Ross, Sheldon M., </author> <title> Stochastic Processes. </title> <address> New York, New York: </address> <publisher> John Wiley and Sons, </publisher> <year> 1983. </year>
Reference-contexts: Proof We prove the first, non-parenthesized part; the other proceeds similarly. Let the random variables X and Y denote a regular service time and an initial jump, respectively. From the coupling theorem (see <ref> [187, Proposition 8.2.2] </ref>), we know that if Y st X, then there exist random variables ~ X and ~ Y , with the same distributions as X and Y , such that ~ Y ~ X , i. e., P ( ~ Y ~ X) = 1. <p> Finally, we uncondition to make the result apply to any busy and loss period. Alternatively, we can argue by using <ref> [187, Example 8.2 (a)] </ref>, where it is shown that f (Y 1 ; : : : ; Y n ) st f (X 1 ; : : : ; X n ) for any increasing function f if Y i st X i and given that X 1 ; : : <p> Conversely, for service times with increasing failure rate (IFR), the loss period is stochastically shorter than a busy period. Proof Define X t as the additional life of X from t onward, given that X t. In <ref> [187, Proposition 8.1.3] </ref>, it is shown that iff X is DFR, then X t st X and iff X is IFR, then X t st X. This is true for any value of t.
Reference: [188] <author> Kleinrock, Leonard, </author> <booktitle> Queueing Systems | Computer Applications, </booktitle> <volume> vol. </volume> <pages> 2. </pages> <address> New York, New York: </address> <publisher> Wiley-Interscience, </publisher> <year> 1976. </year>
Reference-contexts: It is conjectured that this property holds for general queueing systems. A possible justification can be sought in the exponential form of Kingman's approximation for the tail of the waiting time distribution <ref> [188, p. 45] </ref>. Table 5.1.
Reference: [189] <author> Prabhu, Narahari Umanath, </author> <title> Stochastic Storage Processes | Queues, Insurance Risk, </title> <journal> and Dams, </journal> <volume> vol. </volume> <booktitle> 15 of Applications of Mathematics. </booktitle> <address> New York, New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: Thus, the computation of this section will be limited to the M=G=1 model. Aspects of this problem or approximations of it appear in a number of applied stochastic models <ref> [189] </ref>. In collective risk theory [190] the insurance company starts out with some fixed capital. This capital increases through premiums at a constant rate and decreases (or increases) by claims occurring at Poisson instants. Of interest is the time until the capital reaches zero, that is, the company is ruined.
Reference: [190] <author> Kemperman, J. H. B., </author> <title> The Passage Problem for a Stationary Markov Chain. </title> <publisher> Chicago: University of Chicago Press, </publisher> <year> 1961. </year>
Reference-contexts: Thus, the computation of this section will be limited to the M=G=1 model. Aspects of this problem or approximations of it appear in a number of applied stochastic models [189]. In collective risk theory <ref> [190] </ref> the insurance company starts out with some fixed capital. This capital increases through premiums at a constant rate and decreases (or increases) by claims occurring at Poisson instants. Of interest is the time until the capital reaches zero, that is, the company is ruined.
Reference: [191] <author> Moran, P. A. P., </author> <title> "A probability theory of a dam with a continuous release," </title> <journal> The Quarterly Journal of Mathematics Oxford Second Series, </journal> <volume> vol. 7, </volume> <pages> pp. 130-137, </pages> <month> June </month> <year> 1956. </year>
Reference-contexts: It would give exact results, however, for t &lt; h since the system cannot have reached h by that time. We select a model involving an approximation that is based on the so-called Moran dam model <ref> [191, 192] </ref> [193, p. 336f] [194, p. 200]. In this model, the water content of a dam or reservoir is represented by a continuous or discrete-state, discrete-time homogeneous Markov process. For reasons of computability, we choose a discrete-state representation, yielding a discrete-time Markov chain (DTMC).
Reference: [192] <author> Moran, P. A. P., </author> <title> The Theory of Storage. </title> <booktitle> Methuen's Monographs on Applied Probability and Statistics, </booktitle> <address> London/New York, New York: Methuen/Wiley, </address> <year> 1959. </year>
Reference-contexts: It would give exact results, however, for t &lt; h since the system cannot have reached h by that time. We select a model involving an approximation that is based on the so-called Moran dam model <ref> [191, 192] </ref> [193, p. 336f] [194, p. 200]. In this model, the water content of a dam or reservoir is represented by a continuous or discrete-state, discrete-time homogeneous Markov process. For reasons of computability, we choose a discrete-state representation, yielding a discrete-time Markov chain (DTMC).
Reference: [193] <author> Saaty, Thomas L., </author> <title> Elements of Queueing Theory. </title> <address> New York, New York: </address> <publisher> Dover Publications (originally published by McGraw-Hill), 1983/1961. </publisher>
Reference-contexts: It would give exact results, however, for t &lt; h since the system cannot have reached h by that time. We select a model involving an approximation that is based on the so-called Moran dam model [191, 192] <ref> [193, p. 336f] </ref> [194, p. 200]. In this model, the water content of a dam or reservoir is represented by a continuous or discrete-state, discrete-time homogeneous Markov process. For reasons of computability, we choose a discrete-state representation, yielding a discrete-time Markov chain (DTMC).
Reference: [194] <author> Prabhu, Narahari Umanath, </author> <title> Queues and Inventories | A Study of Their Basic Stochastic Processes. </title> <address> New York, New York: </address> <publisher> John Wiley, </publisher> <year> 1965. </year>
Reference-contexts: It would give exact results, however, for t &lt; h since the system cannot have reached h by that time. We select a model involving an approximation that is based on the so-called Moran dam model [191, 192] [193, p. 336f] <ref> [194, p. 200] </ref>. In this model, the water content of a dam or reservoir is represented by a continuous or discrete-state, discrete-time homogeneous Markov process. For reasons of computability, we choose a discrete-state representation, yielding a discrete-time Markov chain (DTMC).
Reference: [195] <author> Takacs, Lajos, </author> <title> Stochastic Processes | Problems and Solutions. </title> <address> London/New York, New York: Methuen/Wiley, </address> <year> 1960. </year>
Reference-contexts: can be evaluated as a special case of the general relationship for any functional f of a matrix, given by f (P) = Vf (fl)V 1 , where V is the matrix of eigenvectors of P and the function f is applied element-by-element to the diagonal matrix of eigenvalues fl <ref> [195, p. 8] </ref>. This eigenvalue approach may be more accurate for large values of n. The other alternative defines f (n) il as the probability that the system first enters state l after n steps, given the initial state is i.
Reference: [196] <author> Karlin, Samuel and Taylor, Howard M., </author> <title> A First Course in Stochastic Processes. </title> <address> San Diego, California: </address> <publisher> Academic Press, </publisher> <editor> 2nd ed., </editor> <year> 1975. </year> <month> 197 </month>
Reference-contexts: The transition probability matrix of the return process is derived from P defined in Eq. 5.3 by replacing the last row with all zeros, except for a one in column k 1. This relationship is derived in <ref> [196, p. 112, Problem 3] </ref> for the case of two absorbing states, but the result generalizes readily to any number of absorbing states (see also [197, p. 103]). For our example, the exact value of E [N ] is 6.388.
Reference: [197] <author> Bhat, U. Narayan, </author> <title> Elements of Applied Stochastic Processes. </title> <address> New York, New York: </address> <publisher> John Wiley, </publisher> <editor> 2nd ed., </editor> <year> 1984. </year>
Reference-contexts: This relationship is derived in [196, p. 112, Problem 3] for the case of two absorbing states, but the result generalizes readily to any number of absorbing states (see also <ref> [197, p. 103] </ref>). For our example, the exact value of E [N ] is 6.388.
Reference: [198] <author> Karol, Mark J., Hluchyj, Michael G., and Morgan, Samuel P., </author> <title> "Input versus output queueing on a space-division packet switch," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-35, </volume> <pages> pp. 1347-1356, </pages> <month> Dec. </month> <year> 1987. </year>
Reference-contexts: Details can be found in [180]. 5.3 Clip Loss in Discrete-time Systems We now turn our attention to a queueing model that is commonly used for packet switches and ATM-type networks <ref> [198, 199] </ref>. In this model, time is discretized, with deterministic service (of duration t = 1) and batch arrivals, which, in many instances, allow somewhat simpler solutions than their continuous-time counterparts. <p> This model is used to represent the output queue of a fast packet switch, for example [205]. The waiting time and loss probability for this model have been analyzed by a number of authors <ref> [30, 198, 204-208] </ref>. For Poisson-distributed batches, Birdsall et al. [206, p. 392] compute the conditional probability of a run of exactly n slots in which one or more arrivals are rejected given that an arrival was rejected in the preceding slot.
Reference: [199] <author> Yeh, Yu-Shuan, Hluchyj, Michael G., and Acampora, Anthony S., </author> <title> "The knockout switch: A simple, modular architecture for high-performance packet switching," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-5, </volume> <pages> pp. 1274-1282, </pages> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: Details can be found in [180]. 5.3 Clip Loss in Discrete-time Systems We now turn our attention to a queueing model that is commonly used for packet switches and ATM-type networks <ref> [198, 199] </ref>. In this model, time is discretized, with deterministic service (of duration t = 1) and batch arrivals, which, in many instances, allow somewhat simpler solutions than their continuous-time counterparts. <p> The Knockout switch <ref> [199] </ref>, for example, allows at most one packet from each input to reach the concentrator.
Reference: [200] <author> Hunter, Jeffrey J., </author> <title> Mathematical Techniques of Applied Probability Discrete Time Models: </title> <journal> Techniques and Applications, </journal> <volume> vol. </volume> <pages> 2. </pages> <address> New York, New York: </address> <publisher> Academic Press, </publisher> <year> 1983. </year>
Reference-contexts: Batches arrive at the beginning of a slot of unit width, while at most one customer departs at the end of a slot. (Hunter <ref> [200, p. 193] </ref> refers to this as an early arrival system.) We allow the batch size, A, to have a general distribution, but require the batch sizes to be independent from slot to slot and independent of the state of the queue itself. 116 We will say that batch sizes are <p> This buffer policy will be referred to as rear dropping in section 5.4.2. Arbitrarily, arrivals are fixed to occur at the beginning of a time slot and departures at the end, creating, in Hunter's terminology <ref> [200] </ref>, an early arrival system. This model is used to represent the output queue of a fast packet switch, for example [205]. The waiting time and loss probability for this model have been analyzed by a number of authors [30, 198, 204-208]. <p> Note that q n , n = 1; 2; : : :, depends on the buffer size only through the factor q 0 , i.e., q n =q 0 is independent of the buffer size <ref> [200, p. 236] </ref>. For later use, let us compute the probability P [S] of the event S that one or more losses occurs during a randomly selected time slot. <p> There are c identical servers. Each customer requires a service time of one time slot. All customers arrive at the beginning of a slot, while the departure, if any, occurs at the end of the slot (so-called early arrival system <ref> [200] </ref>). 165 We work towards the goal of computing the conditional loss probability 6 in several steps. First, immediately below, we characterize the aggregate arrival process. Then, we write down the transition matrix, which also yields the (unconditional) loss probability.
Reference: [201] <author> Takacs, Lajos, </author> <title> Combinatorial Methods in the Theory of Stochastic Processes. </title> <address> New York, New York: </address> <publisher> John Wiley, </publisher> <year> 1967. </year>
Reference-contexts: For geometric batches 4 , we can compute the number of customers in a busy period by making use of Takacs combinatorial arguments <ref> [201, p. 102f] </ref>, [186, p. 225f]. Let B be the number served in a busy period and ~ A n the number of arrivals during the service times of customers 1 through n, where these customers may belong to one or more busy periods.
Reference: [202] <author> Moran, P. A. P., </author> <title> An Introduction to Probability Theory. </title> <publisher> Oxford, </publisher> <address> Great Britain: </address> <publisher> Clarendon Press, </publisher> <year> 1968. </year>
Reference-contexts: chain's absorption probabilities over time, given the initial state probabilities determined by the distribution of the initial jump, also truncated to K + 2 values. 6 6 For the tail of the loss-period, this random walk with drift and one absorbing barrier may be represented by the corresponding Brownian motion <ref> [202, p. 437] </ref>. 124 Since the distribution of the composite loss probability typically has a very long tail, computing its expected value through summation of the weighted probabilities was found to be numerically inaccurate and computationally expensive. However, an alternate approach exists [203, p. 425].
Reference: [203] <author> Feller, William, </author> <title> An Introduction to Probability Theory and Its Applications, </title> <booktitle> vol. 1. </booktitle> <address> New York, New York: </address> <publisher> John Wiley and Sons, </publisher> <editor> third ed., </editor> <year> 1968. </year>
Reference-contexts: However, an alternate approach exists <ref> [203, p. 425] </ref>. Let d j be the expected time to absorption into state 0, starting at state j.
Reference: [204] <author> Dor, Neville M., </author> <title> "Guide to the length of buffer storage required for random (Poisson) input and constant output rates," </title> <journal> IEEE Transactions on Electronic Computers, </journal> <volume> vol. EC-16, </volume> <pages> pp. 683-684, </pages> <month> Oct. </month> <year> 1967. </year>
Reference-contexts: As our queueing model, we consider a FIFO single-server discrete-time queue where arrivals occur in i.i.d. batches of general distribution with mean batch size . Each arrival requires exactly one unit of service. For short, we will refer to this system as D [G] =D=1=K <ref> [204] </ref>. Let K denote the system size, that is, the buffer capacity plus one. Arrivals that do not find space are rejected, but once a customer enters the system, it will be served. This buffer policy will be referred to as rear dropping in section 5.4.2.
Reference: [205] <author> Hluchyj, Michael G. and Karol, Mark J., </author> <title> "Queueing in high-performance packet switching," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-6, </volume> <pages> pp. 1587-1597, </pages> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: Arbitrarily, arrivals are fixed to occur at the beginning of a time slot and departures at the end, creating, in Hunter's terminology [200], an early arrival system. This model is used to represent the output queue of a fast packet switch, for example <ref> [205] </ref>. The waiting time and loss probability for this model have been analyzed by a number of authors [30, 198, 204-208]. <p> For 129 general batch size probability mass function (pmf) a k , the q k 's are described by the following recursive equations <ref> [205] </ref>: q 1 = a 0 q n = a 0 q n1 k=1 # q 0 = 1 n=1 " K1 X q n =q 0 The probability that a packet joins the queue, P [J ], is given by P [J ] = since 1 q 0 a 0
Reference: [206] <author> Birdsall, T. G., Ristenbatt, M. P., and Weinstein, S. B., </author> <title> "Analysis of asynchronous time multiplexing of speech sources," </title> <journal> IRE Transactions on Communication Systems, </journal> <volume> vol. CS-10, </volume> <pages> pp. 390-397, </pages> <month> Dec. </month> <year> 1962. </year>
Reference-contexts: This model is used to represent the output queue of a fast packet switch, for example [205]. The waiting time and loss probability for this model have been analyzed by a number of authors [30, 198, 204-208]. For Poisson-distributed batches, Birdsall et al. <ref> [206, p. 392] </ref> compute the conditional probability of a run of exactly n slots in which one or more arrivals are rejected given that an arrival was rejected in the preceding slot. We will call this probability P [C R = n]. <p> to be the product of the probability that two or more arrivals occur during the next n 1 slots and the probability of zero or one arrivals occurs in the terminating interval, P [C R = n] = e (1 + ) 1 (1 + )e : Birdsall et al. <ref> [206, Eq. (11)] </ref> also compute the probability that exactly d arrivals are rejected in the next slot, provided that one or more was rejected in the previous slot. Their result is related to a relation we will derive later (Eq. (5.15)).
Reference: [207] <author> Tran-Gia, Phuoc and Ahmadi, Hamid, </author> <title> "Analysis of a discrete-time G [X] =D=1 S queueing system with applications in packet-switching systems," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Orleans), </address> <pages> pp. </pages> <address> 861-870 (9A.1), </address> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference: [208] <author> Lin, Arthur Y. M. and Silvester, John A., </author> <title> "Queueing analysis of an ATM switch with multichannel transmission groups," </title> <type> Tech. Rep. </type> <institution> CRI 89-25, Computer Engineering Division, Electrical Engineering-Systems Department, University of Southern California, </institution> <address> Los Angeles, California, </address> <year> 1989. </year> <month> 198 </month>
Reference: [209] <author> Clare, Loren P. and Rubin, Izhak, </author> <title> "On the design of prioritized multiplexing systems," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Boston, Massachusetts), </address> <pages> pp. </pages> <address> 1344-1348 (E5.3), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1983. </year>
Reference: [210] <author> Clare, Loren P. and Rubin, Izhak, </author> <title> "Preemptive buffering disciplines for time-critical sensor communications," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Toronto, Canada), </address> <pages> pp. 904-909, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1986. </year>
Reference-contexts: A loss run never straddles batch boundaries. For all four systems, indeed over all work-conserving disciplines, the queue length distribution (and, thus, the loss probability) are the same [209-211]. The mean waiting time results favoring front dropping agree with those of [211] for general queueing systems. Clare and Rubin <ref> [210] </ref> show that the minimum mean waiting time for non-lost packets is obtained using LCFS with front dropping (referred to as preemptive buffering in [210]). For all systems, a batch arrival causes the same number of lost packets. <p> The mean waiting time results favoring front dropping agree with those of [211] for general queueing systems. Clare and Rubin <ref> [210] </ref> show that the minimum mean waiting time for non-lost packets is obtained using LCFS with front dropping (referred to as preemptive buffering in [210]). For all systems, a batch arrival causes the same number of lost packets. If there are q packets in the buffer (0 q &lt; K) and a arrive in a batch, [(q + a) K] + will be lost.
Reference: [211] <author> Yin, Nanying and Hluchyj, Michael G., </author> <title> "Implication of dropping packets from the front of a queue," </title> <booktitle> in International Teletraffic Congress, Seventh Specialist Seminar, </booktitle> <address> (Morristown, New Jersey), p. 10.4, ITC, </address> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: A loss run never straddles batch boundaries. For all four systems, indeed over all work-conserving disciplines, the queue length distribution (and, thus, the loss probability) are the same [209-211]. The mean waiting time results favoring front dropping agree with those of <ref> [211] </ref> for general queueing systems. Clare and Rubin [210] show that the minimum mean waiting time for non-lost packets is obtained using LCFS with front dropping (referred to as preemptive buffering in [210]). For all systems, a batch arrival causes the same number of lost packets.
Reference: [212] <author> Schulzrinne, Henning and Kurose, James F., </author> <title> "Distribution of the loss period for some queues in continuous and discrete time," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), (Bal Harbour, Florida), </booktitle> <pages> pp. </pages> <address> 1446-1455 (12C.1), </address> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: Clearly, this is not realistic in many network situations. As a simple 139 first model closer to actual network traffic, we again consider a discrete-time system similar to the one studied in <ref> [212] </ref>: single, first-come, first-serve queue with batch arrivals at every time slot and unit service time. The stream of interest is modeled as periodic, superimposed on background traffic with general, but i.i.d., batch arrivals. The background traffic is envisioned as the superposition of a large number of sources. <p> For this queue, the independence of loss correlation and buffer size observed earlier <ref> [212] </ref> holds exactly for certain (common) combinations of t and K. Theorem 6.1 The conditional loss probability for FT packets is independent of K for values of K t . <p> It remains to be investigated whether the model can be applied nevertheless. Naturally, the mean of the success runs can be computed from the loss probability and the loss run length (see <ref> [212] </ref>). 6.3.4 Numerical Examples Compared to earlier systems, the large number of queueing system parameters (, fl, !, N , K, c) covers a wide range of systems, but also makes it difficult to generalize from numerical examples.
Reference: [213] <institution> Study Group XVIII, CCITT (International Telegraph and Telephone Consultative Committee), "Study group XVIII report R 34," </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: For brevity, the two streams are abbreviated as "foreground traffic" (FT, stream 1) and "background traffic" (BT, stream 0). If the foreground traffic is periodic, it is also referred to in the literature as constant bit-rate (CBR) <ref> [213] </ref> or continuous bit-stream oriented (CBO) [214, 215] traffic. This traffic model is motivated by voice and video applications, where the source of interests emits packets periodically during a talk spurt, a video scan line or even a whole image 2 .
Reference: [214] <author> Joos, P. and Verbiest, W., </author> <title> "A statistical bandwidth allocation and usage monitoring algorithm for ATM networks," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), (Boston), </booktitle> <pages> pp. </pages> <address> 415-422 (13.5), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1989. </year>
Reference-contexts: For brevity, the two streams are abbreviated as "foreground traffic" (FT, stream 1) and "background traffic" (BT, stream 0). If the foreground traffic is periodic, it is also referred to in the literature as constant bit-rate (CBR) [213] or continuous bit-stream oriented (CBO) <ref> [214, 215] </ref> traffic. This traffic model is motivated by voice and video applications, where the source of interests emits packets periodically during a talk spurt, a video scan line or even a whole image 2 . To gain insight into the loss behavior, we require transient rather than steady-state results.
Reference: [215] <author> Bhargava, Amit, Humblet, Pierre, and Hluchyj, Michael G., </author> <title> "Queueing analysis of continuous bit-stream transport in packet networks," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), (Dallas, Texax), </booktitle> <pages> pp. 903-907, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: For brevity, the two streams are abbreviated as "foreground traffic" (FT, stream 1) and "background traffic" (BT, stream 0). If the foreground traffic is periodic, it is also referred to in the literature as constant bit-rate (CBR) [213] or continuous bit-stream oriented (CBO) <ref> [214, 215] </ref> traffic. This traffic model is motivated by voice and video applications, where the source of interests emits packets periodically during a talk spurt, a video scan line or even a whole image 2 . To gain insight into the loss behavior, we require transient rather than steady-state results. <p> For a secondary stream with random arrivals, consult [218]. A number of authors [219-221] analyze the superposition of independent periodic arrival streams at a single server with infinite waiting space. Bhargava et al. analyze the same system using the ballot theorem <ref> [215] </ref>. In general, the queue length survivor 2 e.g., video sources with compression on whole image and/or smoothing buffer 140 function for infinite queues can be used to approximate the cell loss probability for finite queues for sufficiently low (order of 10 9 ) loss probabilities [221].
Reference: [216] <author> Kaplan, Michael, </author> <title> "The queue D=D=1 with a Poisson background," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Toronto, Canada), </address> <pages> pp. </pages> <address> 36.5.1-36.5.4, </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1978. </year>
Reference-contexts: To gain insight into the loss behavior, we require transient rather than steady-state results. A number of authors have investigated the issue of superimposing different traffic streams. Kaplan <ref> [216] </ref> develops steady-state waiting time results in the transform domain for a continuous-time system with a single deterministic server with infinite buffer used by a primary, deterministic (periodic) stream and a secondary or background stream with Poisson characteristics.
Reference: [217] <author> Sahin, Izzet and Bhat, U. Narayan, </author> <title> "A stochastic system with scheduled secondary inputs," </title> <journal> Operations Research, </journal> <volume> vol. 19, </volume> <pages> pp. 436-446, </pages> <month> March-April </month> <year> 1971. </year>
Reference-contexts: Kaplan [216] develops steady-state waiting time results in the transform domain for a continuous-time system with a single deterministic server with infinite buffer used by a primary, deterministic (periodic) stream and a secondary or background stream with Poisson characteristics. A more general continuous-time model is treated in <ref> [217] </ref>, where the primary stream can have any random interarrival and service distribution and the secondary stream is a sequence of deterministic arrivals whose interarrival times are not necessarily identical. The steady-state distribution of the virtual waiting time for the infinite-buffer case is described by an integral equation.
Reference: [218] <author> Sahin, Izzet, </author> <title> "Equilibrium behavior of a stochastic system with secondary input," </title> <journal> Journal of Applied Probability, </journal> <volume> vol. 8, </volume> <pages> pp. 252-260, </pages> <month> June </month> <year> 1971. </year>
Reference-contexts: The steady-state distribution of the virtual waiting time for the infinite-buffer case is described by an integral equation. For a secondary stream with random arrivals, consult <ref> [218] </ref>. A number of authors [219-221] analyze the superposition of independent periodic arrival streams at a single server with infinite waiting space. Bhargava et al. analyze the same system using the ballot theorem [215].
Reference: [219] <author> Eckberg, Adrian E., Jr., </author> <title> "The single server queue with periodic arrival process and deterministic service times," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-27, </volume> <pages> pp. 556-562, </pages> <month> Mar. </month> <year> 1979. </year> <month> 199 </month>
Reference: [220] <author> Karol, Mark J. and Hluchyj, Michael G., </author> <title> "Using a packet switch for circuit-switched traffic: A queueing system with periodic input," </title> <booktitle> in Conference Record of the International Conference on Communications (ICC), </booktitle> <address> (Seattle, Washington), </address> <pages> pp. </pages> <address> 1677-1682 (48.3), </address> <publisher> IEEE, </publisher> <month> June </month> <year> 1987. </year>
Reference: [221] <author> Virtamo, J. T. and Roberts, J. W., </author> <title> "Evaluating buffer requirements in an ATM multiplexer," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (Dallas, Texas), </address> <pages> pp. 1473-1477, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: In general, the queue length survivor 2 e.g., video sources with compression on whole image and/or smoothing buffer 140 function for infinite queues can be used to approximate the cell loss probability for finite queues for sufficiently low (order of 10 9 ) loss probabilities <ref> [221] </ref>. Closely related to the issue of superimposed heterogeneous traffic streams is that of overflow problems, covered extensively in the literature.
Reference: [222] <author> Fredericks, A. A., </author> <title> "Congestion in blocking systems | a simple approximation technique," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 59, </volume> <pages> pp. 805-827, </pages> <month> July-August </month> <year> 1980. </year>
Reference-contexts: Closely related to the issue of superimposed heterogeneous traffic streams is that of overflow problems, covered extensively in the literature. While many overflow models, motivated by call set up in the switched telephone network, assume loss systems, i.e., no buffer, (among others, <ref> [222, 223] </ref>), a number of authors consider delay systems.
Reference: [223] <author> Kuczura, Anatol, </author> <title> "Loss systems with mixed renewal and Poisson inputs," </title> <journal> Operations Research, </journal> <volume> vol. 21, </volume> <pages> pp. 787-795, </pages> <month> May-June </month> <year> 1973. </year>
Reference-contexts: Closely related to the issue of superimposed heterogeneous traffic streams is that of overflow problems, covered extensively in the literature. While many overflow models, motivated by call set up in the switched telephone network, assume loss systems, i.e., no buffer, (among others, <ref> [222, 223] </ref>), a number of authors consider delay systems.
Reference: [224] <author> Matsumoto, Jun and Watanabe, Yu, </author> <title> "Individual traffic characteristics of queueing systems with multiple Poisson and overflow inputs," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-33, </volume> <pages> pp. 1-9, </pages> <month> Jan. </month> <year> 1985. </year>
Reference-contexts: While many overflow models, motivated by call set up in the switched telephone network, assume loss systems, i.e., no buffer, (among others, [222, 223]), a number of authors consider delay systems. For example, Matsumoto and Watanabe <ref> [224] </ref> derive approximations for the individual and combined mean waiting time and overflow probability in a finite system with two overflow streams, modeled as interrupted Poisson processes (IPPs), and one Poisson stream, which is a special case of the more general model of a MMPP=M=c=c + k queue analyzed by Meier-Hellstern
Reference: [225] <author> Machihara, Fumiaki, </author> <title> "On the overflow processes from the P H 1 +P H 2 =M=S=K queue with two independent ph-renewal inputs," </title> <journal> Performance Evaluation, </journal> <volume> vol. 8, </volume> <pages> pp. 243-253, </pages> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: In most cases, the distribution of the number of busy servers in an infinite-server system accepting the overflow input is evaluated. In <ref> [225] </ref>, the Laplace transform of the inter-overflow time matrix probability density function is provided. In [226], the related model of alternating voice and data input to a finite buffer is treated.
Reference: [226] <author> Kekre, Hemant B., Saxena, C. L., and Khalid, Mohd, </author> <title> "Buffer behavior for mixed arrivals and single server with random interruptions," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-28, </volume> <pages> pp. 59-64, </pages> <month> Jan. </month> <year> 1980. </year>
Reference-contexts: In most cases, the distribution of the number of busy servers in an infinite-server system accepting the overflow input is evaluated. In [225], the Laplace transform of the inter-overflow time matrix probability density function is provided. In <ref> [226] </ref>, the related model of alternating voice and data input to a finite buffer is treated. Kuczura [227] treats infinite queues (in continuous time) with one Poisson and one renewal input, in particular the GI + M=M=1 and GI + M=M=1 systems.
Reference: [227] <author> Kuczura, Anatol, </author> <title> "Queues with mixed renewal and Poisson inputs," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 51, </volume> <pages> pp. 1305-1326, </pages> <month> July-August </month> <year> 1972. </year>
Reference-contexts: In [225], the Laplace transform of the inter-overflow time matrix probability density function is provided. In [226], the related model of alternating voice and data input to a finite buffer is treated. Kuczura <ref> [227] </ref> treats infinite queues (in continuous time) with one Poisson and one renewal input, in particular the GI + M=M=1 and GI + M=M=1 systems.
Reference: [228] <author> Gopinath, B. and Morrison, J. A., </author> <title> "Discrete-time single server queues with correlated inputs," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 56, </volume> <pages> pp. 1743-1768, </pages> <month> Nov. </month> <year> 1977. </year>
Reference-contexts: Kuczura [227] treats infinite queues (in continuous time) with one Poisson and one renewal input, in particular the GI + M=M=1 and GI + M=M=1 systems. In the context of discrete-time single-server queues with infinite buffer, correlated inputs and unity service time, Gopinath and Morrison <ref> [228] </ref> include an example of a two-class model with different arrival statistics. Superimposed traffic streams of the same statistical description are found in the analysis of packet voice multiplexers [229], usually in the form of approximations [17, 84].
Reference: [229] <author> Chang, Cheng-Shang, Chao, XiuLi, and Pinedo, Michael, </author> <title> "Integration of discrete-time correlated Markov processes in a TDM system," </title> <journal> Probability in the Engineering and Informational Sciences, </journal> <volume> vol. 4, </volume> <pages> pp. 29-56, </pages> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: In the context of discrete-time single-server queues with infinite buffer, correlated inputs and unity service time, Gopinath and Morrison [228] include an example of a two-class model with different arrival statistics. Superimposed traffic streams of the same statistical description are found in the analysis of packet voice multiplexers <ref> [229] </ref>, usually in the form of approximations [17, 84]. In the following sections, we set out to analyze in some detail three implementations of the model described at the beginning of this section, increasing in generality as we progress through the section.
Reference: [230] <author> Parzynski, William R. and Zipse, Philip W., </author> <title> Introduction to Mathematical Analysis. </title> <address> New York, New York: </address> <publisher> McGraw-Hill, </publisher> <year> 1982. </year>
Reference-contexts: Using standard arguments <ref> [230, p. 45] </ref>, we take the limit of Eq. (6.6): lim P [L 0 ] = 1 k=1 &lt; lim 1 t1 X ~ k i=0 (j) 9 ; K X ( t!1 (t) k1 X fi i = 1 k=1 ~ k i=0 ) 157 distributed background traffic BT and
Reference: [231] <author> Burke, P. J., </author> <title> "Delays in single-server queues with batch input," </title> <journal> Operations Research, </journal> <volume> vol. 23, </volume> <pages> pp. 830-833, </pages> <month> July-August </month> <year> 1975. </year>
Reference-contexts: conditional loss probability is written as P [L 1 (n)jL 1 (n 1)] = P [t fl = 0] + k=1 Here, t fl denotes the interarrival time random variable as seen by a random foreground arrival, which is related to the interarrival distribution seen by a random observer by <ref> [231] </ref> P [t fl = k] = E [t ] The first term in the sum of Eq. (6.10) is due to the fact that once an arrival is lost within a slot, all subsequent arrivals within the same slot will also be lost. 5 In most applications, batch arrivals from
Reference: [232] <author> Sriram, Kotikalapudi, Varshney, Pramod K., and Shanthikumar, J. George, </author> <title> "Discrete-time analysis of integrated voice/data multiplexers with and without speech activity detection," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1124-1132, </pages> <month> Dec. </month> <year> 1983. </year> <month> 200 </month>
Reference: [233] <author> Li, San-qi and Mark, Jon W., </author> <title> "Performance of voice/data integration on a TDM system," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-33, </volume> <pages> pp. 1265-1273, </pages> <month> Dec. </month> <year> 1985. </year>
Reference-contexts: We can, however, write it down immediately: s i = N The mean and variance of the number of active sources are N ff and N ff (1 ff). The correlation coefficient r is given by <ref> [233] </ref> r = ! + fl 1.
Reference: [234] <author> Li, San-qi and El Zarki, Magda, </author> <title> "Dynamic bandwidth allocation on a slotted ring with integrated services," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 36, </volume> <pages> pp. 826-833, </pages> <month> July </month> <year> 1988. </year>
Reference: [235] <author> Maglaris, Basil, Anastassiou, Dimitris, Sen, Prodip, Karlsson, Gunnar, and Robbins, John D., </author> <title> "Performance models of statistical multiplexing in packet video communications," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 36, </volume> <pages> pp. 834-844, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: For analytical tractability, it is often assumed that the burst and silence duration are exponentially (continuous time) or geometrically (discrete-time) distributed. The model was probably first used for packet voice sources with speech activity detection. Examples can be found in [17,89,181,232-234]. For packet video, Maglaris et al. <ref> [235] </ref> model each source as the superposition of a number of on/off minisources. For their picturephone source, about ten identical minisources provided sufficient accuracy. Li also investigated the loss behavior for a voice source model [181] related to the N IPP=D=c=K queue studied here.
Reference: [236] <author> Kuczura, Anatol, </author> <title> "The interrupted Poisson process as an overflow process," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 52, </volume> <pages> pp. 437-448, </pages> <month> Mar. </month> <year> 1973. </year>
Reference: [237] <author> Rath, John H. and Sheng, Diane, </author> <title> "Approximations for overflow from queues with a finite waiting room," </title> <journal> Operations Research, </journal> <volume> vol. 27, </volume> <pages> pp. 1208-1216, </pages> <month> November-December </month> <year> 1979. </year>
Reference: [238] <author> Murata, Masayaki, Oie, Yuji, Suda, Tatsuya, and Miyahara, Hideo, </author> <title> "Analysis of a discrete-time single-server queue with bursty inputs for traffic control in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 447-458, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: The interrupted Poisson process (IPP) source model attempts to capture this. In continuous time [236,237], the on/off time periods are exponentially distributed and independent of each other. A fixed-rate Poisson source emits packets during the on periods. In discrete-time <ref> [238, 239] </ref>, the on/off periods are taken to be geometrically distributed. A packet arrives at each slot during the on period with probability . The designation as a discrete-time IPP appears misleading since the source does not generate a Poisson-distributed number of cells in a time interval during on periods. <p> The most popular in continuous time is probably the Markov-modulated Poisson process (MMPP), typically with two states. A simpler model aggregates all arrivals into batches, where batch arrivals occur as Bernoulli events with a given probability in a slot <ref> [238] </ref>. Thus, batches are separated by a geometrically distributed number of slots. In this section, we limit our discussion to the IPP model. Possible extensions are discussed at the end of the section. <p> Below, the silence and active states will be indicated by subscripts zero and one, where necessary. For ease of reference, we reproduce the results for the interarrival (distance) random variable D presented by Murata et al. <ref> [238] </ref>. The average dwell times, T i , for the off and on state, respectively, are given by T 0 = 1=(1 !) and T 1 = 1=(1 fl), or, conversely, ! = 1 1=T 0 and fl = 1 1=T 1 . <p> We also define the activity factor ff, ff = T 0 + T 1 1 ! : The z-transform of the interarrival times is computed <ref> [238, Appendix B] </ref> by recursively writing down the probability that no arrival occurred in k slots since the last arrival, given that the system is in burst or silence state after k steps. These probabilities are denoted by p 1 (k) and p 0 (k), respectively.
Reference: [239] <author> Ohba, Yoshihiro, Murata, Masayuki, and Miyahara, Hideo, </author> <title> "Analysis of interdeparture processes for bursty traffic in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 468-476, </pages> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: The interrupted Poisson process (IPP) source model attempts to capture this. In continuous time [236,237], the on/off time periods are exponentially distributed and independent of each other. A fixed-rate Poisson source emits packets during the on periods. In discrete-time <ref> [238, 239] </ref>, the on/off periods are taken to be geometrically distributed. A packet arrives at each slot during the on period with probability . The designation as a discrete-time IPP appears misleading since the source does not generate a Poisson-distributed number of cells in a time interval during on periods. <p> Through a number of intermediate quantities, we finally arrive at the desired conditional loss probability. To set the stage, we review the behavior of the aggregate arrival process. The superposition of N i.i.d. IPPs is described in <ref> [239] </ref>. <p> To set the stage, we review the behavior of the aggregate arrival process. The superposition of N i.i.d. IPPs is described in [239]. The transition probability that j sources are active in the current slot, given that i were active in the previous slot can be computed by <ref> [239, Eq. (3)] </ref> S i;j = m=0 i j m (1 !) jm ! Ni (jm) for i; j 2 [0; N ]; 0 j m N i The first bracketed term is the probability that i m sources go off, while m sources stay on; the second bracketed term is
Reference: [240] <author> Mangulis, V., </author> <title> Handbook of Series for Scientists and Engineers. </title> <address> New York: </address> <publisher> Academic Press, </publisher> <year> 1965. </year>
Reference-contexts: fl) + 1=(1 !) = 1 fl and its inverse, the arrival rate = 1=(1 fl) + 1=(1 !) 1 ! : The first moment can also be expressed in the quantities r 1;2 and d: E [] = 1 r 1 1 d With the aid of the relation <ref> [240, p. 72] </ref> 1 X k 2 x k1 = (1 x) 3 ; we obtain the second moment from the probability density function, E [ 2 ] = d (1 r 1 ) 2 + (1 d) (1 r 2 ) 2 : The autocorrelation function of this process was
Reference: [241] <author> Gihr, O. and Tran-Gia, Phuoc, </author> <title> "A layered description of ATM cell traffic streams and correlation analysis," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), (Bal Harbour, Florida), </booktitle> <pages> pp. </pages> <address> 137-144 (2D.4), </address> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: X k 2 x k1 = (1 x) 3 ; we obtain the second moment from the probability density function, E [ 2 ] = d (1 r 1 ) 2 + (1 d) (1 r 2 ) 2 : The autocorrelation function of this process was derived by Gihr <ref> [241] </ref>. Other metrics, and methods of matching this process to an observed random process, are provided by Gilbert [160]. 6.3.2 The N IPP=D=c=K queue We analyze the N IPP=D=c=K queue operating in discrete time.
Reference: [242] <author> Bae, Jaime Jungok, Suda, Tatsuya, and Simha, Rahul, </author> <title> "Analysis of individual packet loss in a finite buffer queue with heterogeneous Markov modulated arrival processes: a study of traffic burstiness and priority packet discarding.," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <volume> vol. </volume> <pages> 1, </pages> <address> (Florence, Italy), </address> <pages> pp. </pages> <address> 219-230 (2C.1), </address> <publisher> IEEE, </publisher> <month> May </month> <year> 1992. </year>
Reference-contexts: These assumptions remain to be validated by analysis. Also, the case of several heterogeneous sources and of sources with two different Bernoulli arrival processes (MMBP) rather than on/off sources deserve closer scrutiny (see <ref> [242, 243] </ref> for a loss probability analysis). 171 In the Gilbert channel model [160], the system alternates between two states in a manner identical to the IPP source. In one state, every packet is lost, in the other, no losses occur.
Reference: [243] <author> Bae, Jaime Jungok, Suda, Tatsuya, and Simha, Rahul, </author> <title> "Heterogeneous arrival streams, burstiness and packet discarding: A study of individual packet loss," </title> <type> Technical Report 91-58, </type> <institution> Dept. of Computer and Information Science at the University of California, </institution> <address> Irvine, Irvine, California, </address> <month> July </month> <year> 1991. </year> <month> 201 </month>
Reference-contexts: These assumptions remain to be validated by analysis. Also, the case of several heterogeneous sources and of sources with two different Bernoulli arrival processes (MMBP) rather than on/off sources deserve closer scrutiny (see <ref> [242, 243] </ref> for a loss probability analysis). 171 In the Gilbert channel model [160], the system alternates between two states in a manner identical to the IPP source. In one state, every packet is lost, in the other, no losses occur.
Reference: [244] <author> Verbiest, Willem and Pinnoo, Luc, </author> <title> "A variable bit rate codec for asynchronous transfer mode networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 7, </volume> <pages> pp. 761-770, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: We approximately model the CATV video coder of Verbiest 174 system, for constant load ( = 0:8), cycle time (T 0 + T 1 = 25) and buffer size (K = 1), as a function of and Pinnoo <ref> [244] </ref>. It has an average rate of 26.5 Mb/s and a standard deviation of 3.4 Mb/s. We assume that the coder transmits at channel capacity and that the active and silent period add up to the frame duration of 1/25 s.
References-found: 242

