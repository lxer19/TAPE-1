URL: http://www.cs.iastate.edu/tech-reports/TR92-08.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: 
Title: Parametric Problems on Graphs of Bounded Tree-width  
Author: TR - David Fernandez-Baca and Giora Slutzki 
Address: 226 Atanasoff Ames, IA 50011  
Affiliation: Iowa State University of Science and Technology Department of Computer Science  
Date: April 22, 1992  
Abstract-found: 0
Intro-found: 1
Reference: [AbFe92] <author> K. </author> <title> Abrahamson and M.R. Fellows. Finite automata, bounded treewidth, and well-quasiordering. </title> <note> Preprint (1992). </note>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No.
Reference: [ArPr89] <author> S. Arnborg and A. Proskurowski. </author> <title> Linear time algorithms for NP-hard problems restricted to partial k-trees. </title> <journal> Discr. Appl. Math., </journal> <volume> 23 </volume> <month> 11-24 </month> <year> (1989). </year>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> We shall write w to denote the set of all graphs of tree-width at most w. Many important classes of graphs have bounded tree-width, including trees, series-parallel graphs, bandwidth-k graphs, k-outerplanar graphs, and partial k-trees <ref> [ArPr89, Bod88, vLe90] </ref>. 3 It is known that a graph G is a partial k-tree if and only if G 2 k [vLe90]. The graphs in w have a useful separator theorem. <p> First, the space of potential solutions to these problems can be partitioned into a finite number of equivalence classes <ref> [ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90] </ref>. Second, there is a finite set of rules whereby partial solutions, computed for portions of the input graph, can be combined into larger partial solutions. Rules are expressed in tables which are fixed for each problem and each family of graphs. <p> The key to constructing these is procedure Decompose, presented in the proof of Theorem 3.2, whose main component is an algorithm delivering a partition satisfying Theorem 2.1. A linear-time separator algorithm is easily obtainable from what is known as the embedding w-tree of the graph <ref> [ArPr89] </ref> (see, e.g., [FeMe90]). Since such embeddings can be constructed in linear time for graphs of tree-width 1, 2, or 3 [MaTh91], we can construct partitions of such graphs in O (n) time, and balanced parse trees in O (n log n) time.
Reference: [ALS91] <author> S. Arnborg, J. Lagergren, and D. Seese. </author> <title> Easy problems for tree-decomposable graphs. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <pages> 308-340. </pages>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> The class of regular problems is broad, and includes the subgraph problems mentioned above, as well as many others, such as the maximum cut problem and the Steiner tree problem (see, e.g., <ref> [ALS91, BPT88, BLW87] </ref>). Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis [Gus83], minimum-ratio optimization [Meg79, Meg83], Lagrangian relaxation [Fis81], and, in general, in environments where the data evolves continuously with time. <p> First, the space of potential solutions to these problems can be partitioned into a finite number of equivalence classes <ref> [ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90] </ref>. Second, there is a finite set of rules whereby partial solutions, computed for portions of the input graph, can be combined into larger partial solutions. Rules are expressed in tables which are fixed for each problem and each family of graphs.
Reference: [Ata85] <author> M. Atallah. </author> <title> Dynamic computational geometry. </title> <journal> Comp. & Maths. with Appls., </journal> <volume> 11(12) </volume> <pages> 1171-1181, </pages> <year> 1985. </year>
Reference-contexts: A theory of converting nonparametric algorithms into parametric ones is presented by Eaves and Rothblum in [EaRo89]. A field related to parametric optimization is dynamic computational geometry, originally studied by Atallah <ref> [Ata85] </ref>, which deals with geometric problems where points move in space following prescribed trajectories. Organization of the paper. Section 2 reviews the notions of tree-width and regularity. In section 3 we present some results relating parse trees and tree-decompositions and review the dynamic programming approach to solving optimum subgraph problems. <p> Problem (P4) is a simplified version of the sensitivity analysis problem, while problem (P5) is the steady state problem <ref> [Ata85, FeSl89] </ref>. Observe that, given a solution to (P5), we can, in O (n log n) time, find the last breakpoint of Z G for the case where weights are linear. This simply involves computing 1 and then using a slight modification of the algorithm for problem (P1) (see [FeSl89]).
Reference: [BLW87] <author> M.W. Bern, E.L. Lawler, and A.L. Wong. </author> <title> Linear time computation of optimal subgraphs of decomposable graphs. </title> <journal> J. Algorithms, </journal> <volume> 8 </volume> <pages> 216-235, </pages> <year> 1987. </year>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> The class of regular problems is broad, and includes the subgraph problems mentioned above, as well as many others, such as the maximum cut problem and the Steiner tree problem (see, e.g., <ref> [ALS91, BPT88, BLW87] </ref>). Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis [Gus83], minimum-ratio optimization [Meg79, Meg83], Lagrangian relaxation [Fis81], and, in general, in environments where the data evolves continuously with time. <p> These problems and their applications are discussed further in sections 4, 5, and 6. There are two main results in the paper. Both deal with regular optimum subgraph problems (in the sense of Bern et al. <ref> [BLW87] </ref> and Borie et al. [BPT88]) on graphs of bounded tree-width. First, we show that for every regular graph property P , the number of breakpoints of Z P G is polynomially-bounded in n = jV (G)j. <p> First, the space of potential solutions to these problems can be partitioned into a finite number of equivalence classes <ref> [ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90] </ref>. Second, there is a finite set of rules whereby partial solutions, computed for portions of the input graph, can be combined into larger partial solutions. Rules are expressed in tables which are fixed for each problem and each family of graphs. <p> Rules are expressed in tables which are fixed for each problem and each family of graphs. These two facts are essential in the proof of our results and, for this reason, we shall explain them in some detail. For convenience, we shall follow the terminology of <ref> [BLW87, BPT88] </ref>, as it seems to provide a rather explicit view of the solution mechanism. Let G be the set of all finite graphs. <p> We first show the existence of parse trees with certain useful properties for every G 2 w . Next, as a prelude to the discussion of parametric problems in sections 4 and 5, we review the dynamic programming algorithm for nonparametric optimum subgraph problems of Bern et al. <ref> [BLW87] </ref>. 3.1 Separators and Parse Trees The following theorem, due to Wimer [Wim87], shows the close relationship between graphs of bounded tree-width and decomposable graphs: Theorem 3.1 There exists a finite family R of (w + 1)-terminal graph composition operators such that w = R fl . <p> It follows from the proof of Corollary 3.3 that there exists a w-adequate family of composition operators for every w 1. 3.2 Dynamic Programming on Decomposable Graphs The following result was proved in <ref> [BLW87] </ref>. Theorem 3.4 Suppose that F = R fl is a class of decomposable graphs and P is a property that is regular with respect to R. <p> Clearly, there may exist other decompositions of G with respect to R. Even though each of these decompositions will lead to a different equation of the form (5), in all cases, the value of z (i) G will be the same. As argued in <ref> [BLW87] </ref>, these facts and the existence of linear-size parse trees can be used to obtain linear-time algorithms to compute z G . 4 Parametric Problems We shall now study the properties of Z P G when P is a regular graph property and G has bounded tree-width.
Reference: [BPT88] <author> R.B. Borie, R.G. Parker, </author> <title> and C.A. Tovey. Automatic generation of linear-time algorithms from predicate-calculus descriptions of problems on recursively-constructed graph families. </title> <type> Manuscript, </type> <year> 1988. </year> <note> To appear in Algorithmica. </note>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> The class of regular problems is broad, and includes the subgraph problems mentioned above, as well as many others, such as the maximum cut problem and the Steiner tree problem (see, e.g., <ref> [ALS91, BPT88, BLW87] </ref>). Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis [Gus83], minimum-ratio optimization [Meg79, Meg83], Lagrangian relaxation [Fis81], and, in general, in environments where the data evolves continuously with time. <p> These problems and their applications are discussed further in sections 4, 5, and 6. There are two main results in the paper. Both deal with regular optimum subgraph problems (in the sense of Bern et al. [BLW87] and Borie et al. <ref> [BPT88] </ref>) on graphs of bounded tree-width. First, we show that for every regular graph property P , the number of breakpoints of Z P G is polynomially-bounded in n = jV (G)j. As a byproduct of the proof we obtain a polynomial-time algorithm to construct Z P G . <p> First, the space of potential solutions to these problems can be partitioned into a finite number of equivalence classes <ref> [ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90] </ref>. Second, there is a finite set of rules whereby partial solutions, computed for portions of the input graph, can be combined into larger partial solutions. Rules are expressed in tables which are fixed for each problem and each family of graphs. <p> Rules are expressed in tables which are fixed for each problem and each family of graphs. These two facts are essential in the proof of our results and, for this reason, we shall explain them in some detail. For convenience, we shall follow the terminology of <ref> [BLW87, BPT88] </ref>, as it seems to provide a rather explicit view of the solution mechanism. Let G be the set of all finite graphs. <p> The terminals of G are obtained from the terminals of the composing graphs. See <ref> [Wim87, BPT88] </ref> for two ways to formalize this concept. We should note at this point that in weighted graph problems (parametric or not), when two nodes get identified by an operation ', these nodes are always assumed to have the same weight (or weight function). <p> We note that several well-known optimum subgraph problems have been shown to be regular on any family of decomposable graphs. These problems include dominating set, maximum cut, Steiner tree, traveling salesman, and independent set <ref> [BPT88] </ref>. We will need one further piece of notation.
Reference: [Bod87] <author> H.L. Bodlaender. </author> <title> Dynamic programming on graphs with bounded tree-width. </title> <type> Technical Report RUU-CS-88-4, </type> <institution> University of Utrecht, </institution> <year> 1988. </year> <note> Extended Abstract in Proceedings of ICALP88. </note>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> First, the space of potential solutions to these problems can be partitioned into a finite number of equivalence classes <ref> [ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90] </ref>. Second, there is a finite set of rules whereby partial solutions, computed for portions of the input graph, can be combined into larger partial solutions. Rules are expressed in tables which are fixed for each problem and each family of graphs.
Reference: [Bod88] <author> H.L. Bodlaender. </author> <title> Some classes of graphs with bounded tree-width. </title> <journal> Bulletin of the EATCS, </journal> <volume> 36 (1988), </volume> <pages> 116-126. </pages>
Reference-contexts: We shall write w to denote the set of all graphs of tree-width at most w. Many important classes of graphs have bounded tree-width, including trees, series-parallel graphs, bandwidth-k graphs, k-outerplanar graphs, and partial k-trees <ref> [ArPr89, Bod88, vLe90] </ref>. 3 It is known that a graph G is a partial k-tree if and only if G 2 k [vLe90]. The graphs in w have a useful separator theorem.
Reference: [Car83] <author> P. Carstensen. </author> <title> Complexity of some parametric integer and network programming problems. </title> <journal> Math. Programming, </journal> <volume> 26 </volume> <pages> 64-75, </pages> <year> 1983. </year>
Reference-contexts: Several researchers have considered parametric versions of combi-natorial optimization problems. Murty [Mur80] showed that the number of break-points for parametric linear programming problems can be exponential in the number of variables. Subsequently, Carstensen <ref> [Car83] </ref> proved exponential lower bounds for, among other problems, parametric minimum cut and knapsack. Van Hoesel et al. [vHKRW89] have compiled an extensive bibliography on parametric computing. <p> Once the output element v of B is resolved, we return 1 = L . 2 17 The restriction to graphs of bounded tree-width seems to be important in achieving our bounds. Without it, some problems do indeed have an exponential number of breakpoints in the worst case <ref> [Car83] </ref>. However, the bound of Theorem 4.2 can probably be sharpened considerably in certain special cases. A natural candidate for further study is the maximum independent set problem. Improving the running times of the algorithms for the search problems described in Section 5 is another intriguing problem.
Reference: [Cole87] <author> R. Cole. </author> <title> Slowing down sorting networks to obtain faster sorting algorithms. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 34(1) </volume> <pages> 200-208, </pages> <year> 1987. </year> <month> 18 </month>
Reference-contexts: For (P3), the oracle examines the slope of the line Val G (H 0 ; ). If it is negative, it returns "no"; otherwise, it returns "yes". 2 We will also need one further result, due to Cole <ref> [Cole87] </ref>. We assume some familiarity with combinational circuits as discussed, say, in [CLR90]. <p> The active weight, W , of B is the sum of the weights of its active elements. An oracle with respect to ! is a procedure that is guaranteed to resolve a set of active elements whose total weight is at least W=2. Lemma 5.3 <ref> [Cole87] </ref> Let B be a combinational circuit of size M and depth f (M ). Let d min = minfd I ; d O g, where d I (d O ) denotes the maximum fan-in (fan-out) of an element of B. <p> Then, there exists a weight function ! such that B can be evaluated with O (f (M ) log d min + log M ) calls to an oracle with respect to !. Proof of Theorem 5.1. We shall use ideas from <ref> [Meg83, Cole87] </ref>. As in section 4, let A denote the algorithm for computing z G described in section 3.2, and let Z G and Z G be the parametric analogs of z G and z (i) G (see equations (6) and (7)). <p> In either case, Step 4 guarantees that at least a weighted half of the min gates in U will be resolved and it preserves the invariant that fl 2 I (see <ref> [Cole87] </ref> for a similar argument). Since all the gates in A U are resolved, we conclude that Resolve is a O (n)-time oracle with respect to !.
Reference: [Cou90] <author> B. Courcelle. </author> <title> The monadic second-order logic of graphs I: Recognizable sets of finite graphs. </title> <journal> Information and Computation, </journal> <volume> 85 </volume> <pages> 12-75, </pages> <year> 1990. </year>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> First, the space of potential solutions to these problems can be partitioned into a finite number of equivalence classes <ref> [ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90] </ref>. Second, there is a finite set of rules whereby partial solutions, computed for portions of the input graph, can be combined into larger partial solutions. Rules are expressed in tables which are fixed for each problem and each family of graphs.
Reference: [CLR90] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1990. </year>
Reference-contexts: If it is negative, it returns "no"; otherwise, it returns "yes". 2 We will also need one further result, due to Cole [Cole87]. We assume some familiarity with combinational circuits as discussed, say, in <ref> [CLR90] </ref>. A combinational circuit B is a directed acyclic graph whose nodes are combinational elements, and where an edge from element e 1 to element e 2 implies that the output of e 1 is an input to e 2 . <p> All other min gates are, by definition, resolved. If U is empty, then all the min gates in A are resolved. If U is nonempty, Step 5 finds a weighted median, in O (n) time <ref> [CLR90] </ref>, and does one oracle call, which, by Lemma 5.2, takes O (n) time.
Reference: [EaRo89] <author> B.C. Eaves and U.G. Rothblum. </author> <title> A theory on extending algorithms for parametric problems. </title> <journal> Mathematics of Operations Research, </journal> <volume> 14(3) </volume> <pages> 502-533, </pages> <year> 1989. </year>
Reference-contexts: Search and construction algorithms for an important special case of the parametric maximum flow problem are presented in [GGT89]. A theory of converting nonparametric algorithms into parametric ones is presented by Eaves and Rothblum in <ref> [EaRo89] </ref>. A field related to parametric optimization is dynamic computational geometry, originally studied by Atallah [Ata85], which deals with geometric problems where points move in space following prescribed trajectories. Organization of the paper. Section 2 reviews the notions of tree-width and regularity.
Reference: [FeSl89] <author> D. Fernandez-Baca and G. Slutzki. </author> <title> Solving parametric problems on trees. </title> <journal> J. Algorithms, </journal> <volume> 10 </volume> <month> 381-402 </month> <year> (1989). </year>
Reference-contexts: Subsequently, Carstensen [Car83] proved exponential lower bounds for, among other problems, parametric minimum cut and knapsack. Van Hoesel et al. [vHKRW89] have compiled an extensive bibliography on parametric computing. The algorithmic approach followed in this paper was first used in <ref> [FeSl89] </ref> to analyze various optimization problems on trees, including weighted vertex cover and dominating set. It has subsequently been used to analyze the parametric maximum independent set problem on outerplanar graphs [ZhGo91] and parametric nonserial dynamic programming problems (and, as a special case, independent set) on partial k-trees [FeMe90]. <p> The following result gives upper bounds for the number of breakpoints of the sum and lower envelope of d-ppfs. It is a generalization of a similar result for linear functions proved in <ref> [FeSl89] </ref>. <p> Furthermore, given a linear-size parse tree (T; ffi) of G, Z P G can be constructed in polynomial time. Proof. The main idea behind our proof is algorithm simulation. This technique, which is inspired, in part, by [Meg79], was used in <ref> [FeSl89] </ref>. Let us refer to the dynamic programming algorithm described in section 3.2 as algorithm A. <p> Problem (P4) is a simplified version of the sensitivity analysis problem, while problem (P5) is the steady state problem <ref> [Ata85, FeSl89] </ref>. Observe that, given a solution to (P5), we can, in O (n log n) time, find the last breakpoint of Z G for the case where weights are linear. This simply involves computing 1 and then using a slight modification of the algorithm for problem (P1) (see [FeSl89]). <p> Observe that, given a solution to (P5), we can, in O (n log n) time, find the last breakpoint of Z G for the case where weights are linear. This simply involves computing 1 and then using a slight modification of the algorithm for problem (P1) (see <ref> [FeSl89] </ref>). Very similar techniques can be used to find the first breakpoint. In the next theorem we assume, as in section 4, a model of computation where computing the roots of a d-th degree polynomial is a primitive operation.
Reference: [FeMe90] <author> D. Fernandez-Baca and A. Medepalli. </author> <title> Parametric module allocation on partial k-trees. </title> <type> Technical Report 90-25, </type> <institution> Department of Computer Science, Iowa State University, </institution> <month> December </month> <year> 1990. </year>
Reference-contexts: It has subsequently been used to analyze the parametric maximum independent set problem on outerplanar graphs [ZhGo91] and parametric nonserial dynamic programming problems (and, as a special case, independent set) on partial k-trees <ref> [FeMe90] </ref>. Many of the ideas used here are based on the work of Megiddo; specifically, on [Meg79, Meg83]. Search and construction algorithms for an important special case of the parametric maximum flow problem are presented in [GGT89]. <p> The key to constructing these is procedure Decompose, presented in the proof of Theorem 3.2, whose main component is an algorithm delivering a partition satisfying Theorem 2.1. A linear-time separator algorithm is easily obtainable from what is known as the embedding w-tree of the graph [ArPr89] (see, e.g., <ref> [FeMe90] </ref>). Since such embeddings can be constructed in linear time for graphs of tree-width 1, 2, or 3 [MaTh91], we can construct partitions of such graphs in O (n) time, and balanced parse trees in O (n log n) time.
Reference: [Fis81] <author> M.L. Fisher. </author> <title> The Lagrangian relaxation method for solving integer programming problems. </title> <journal> Management Science, </journal> <volume> 27 </volume> <month> 1-18 </month> <year> (1981). </year>
Reference-contexts: Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis [Gus83], minimum-ratio optimization [Meg79, Meg83], Lagrangian relaxation <ref> [Fis81] </ref>, and, in general, in environments where the data evolves continuously with time. We will focus on parametric optimum subgraph problems where vertex and edge weights are functions of a real-valued parameter . <p> Each of the above problems has important applications. Problem (P1) is the sensitivity analysis problem [Gus83], problem (P2) arises in minimum-ratio optimization [Meg79], and problem (P3) arises in Lagrangian relaxation <ref> [Fis81] </ref>. We shall briefly discuss the last of these three problems. Lagrangian relaxation is a heuristic approach to problems with difficult constraints. <p> The problem can be relaxed by incorporating the complicating constraint into the objective function using a Lagrange multiplier . The result is a parametric problem of the form (2) where all weights are linear functions of <ref> [Fis81] </ref>. It is well known that, for all 0, Z G () is a lower bound on the value of the optimum solution to the constrained problem. The greatest lower bound is obtained by solving a problem of the form (P3). <p> The greatest lower bound is obtained by solving a problem of the form (P3). Such a lower bound can be used with great effectiveness in branch-and-bound schemes <ref> [Fis81] </ref>. The main result of this section is the following theorem. Theorem 5.1 Let w 1 and let P be a predicate that is regular with respect to some w-adequate set of composition operators R.
Reference: [GGT89] <author> G. Gallo, M.D. Grigoriades, and R.E. Tarjan. </author> <title> A fast parametric maximum flow algorithm and its applications. </title> <journal> SIAM J. Computing, </journal> <volume> 18(1) </volume> <pages> 30-55, </pages> <year> 1989. </year>
Reference-contexts: Many of the ideas used here are based on the work of Megiddo; specifically, on [Meg79, Meg83]. Search and construction algorithms for an important special case of the parametric maximum flow problem are presented in <ref> [GGT89] </ref>. A theory of converting nonparametric algorithms into parametric ones is presented by Eaves and Rothblum in [EaRo89]. A field related to parametric optimization is dynamic computational geometry, originally studied by Atallah [Ata85], which deals with geometric problems where points move in space following prescribed trajectories. Organization of the paper.
Reference: [Gus80] <author> D. Gusfield. </author> <title> Sensitivity analysis for combinatorial optimization. </title> <type> Technical Report UCB/ERL M80/22, </type> <institution> University of California, Berkeley, </institution> <month> May </month> <year> 1980. </year>
Reference-contexts: Clearly, such a representation is finite. In the special case where weights are linear functions of , Z G will be a piecewise-linear concave function <ref> [Gus80] </ref> (Z G is convex for maximization problems). We shall concentrate on two kinds of issues: construction and search. In construction problems we shall be interested in computing the entire representation of the function Z G . Search problems involve finding a value of at which a particular event occurs.
Reference: [Gus83] <author> D. Gusfield. </author> <title> Parametric combinatorial computing and a problem in program module allocation. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 30(3) </volume> <pages> 551-563, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis <ref> [Gus83] </ref>, minimum-ratio optimization [Meg79, Meg83], Lagrangian relaxation [Fis81], and, in general, in environments where the data evolves continuously with time. We will focus on parametric optimum subgraph problems where vertex and edge weights are functions of a real-valued parameter . <p> We assume that such a fl exists. (P3) Find fl such that Z P G ( fl ) = max Z G (). Each of the above problems has important applications. Problem (P1) is the sensitivity analysis problem <ref> [Gus83] </ref>, problem (P2) arises in minimum-ratio optimization [Meg79], and problem (P3) arises in Lagrangian relaxation [Fis81]. We shall briefly discuss the last of these three problems. Lagrangian relaxation is a heuristic approach to problems with difficult constraints.
Reference: [vHKRW89] <author> C.P.M. van Hoesel, A.W.J. Kolen, A.H.G. Rinooy and A.P.M. Wagel-mans, </author> <title> Sensitivity analysis in combinatorial optimization: a bibliography. </title> <type> Report 8944/A, </type> <institution> Econometric Institute, Erasmus University Rotterdam, </institution> <year> 1989. </year>
Reference-contexts: Murty [Mur80] showed that the number of break-points for parametric linear programming problems can be exponential in the number of variables. Subsequently, Carstensen [Car83] proved exponential lower bounds for, among other problems, parametric minimum cut and knapsack. Van Hoesel et al. <ref> [vHKRW89] </ref> have compiled an extensive bibliography on parametric computing. The algorithmic approach followed in this paper was first used in [FeSl89] to analyze various optimization problems on trees, including weighted vertex cover and dominating set.
Reference: [GaJo79] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: It is well known that many optimum subgraph problems that are NP-hard in general are polynomially solvable for restricted classes of graphs <ref> [GaJo79] </ref>.
Reference: [Lag90] <author> J. Lagergren. </author> <title> Efficient parallel algorithms for tree-decomposition and related problems. </title> <booktitle> In Proceedings of 31st Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pp. </pages> <month> 173-182 </month> <year> (1990). </year>
Reference: [Lag91] <author> J. Lagergren. </author> <title> Algorithms and minimal forbidden minors for tree-decomposable graphs. </title> <type> (Doctoral Dissertation) Technical Report TRITA-NA-9104, </type> <institution> Royal Institute of Technology, Sweden, </institution> <month> March </month> <year> 1991. </year>
Reference-contexts: Theorem 3.2 For each fixed w, every G 2 G 4w+4 " w has a balanced decomposition with respect to U [4w + 4; 5]. Proof. We shall argue that the following procedure, based on ideas from <ref> [Lag91] </ref>, produces the desired decomposition for every G 2 G 4w+4 " w . We write terms (G) to denote the set of vertices in terms (G). <p> It is not hard to show that (T; ffi) has O (n) vertices and O (log n) height (see <ref> [Lag91] </ref> for a similar construction). Obviously, for every v 2 V (T ), ffi (v) 2 U [4w + 4; 5]. 2 Let w 1 be an integer. <p> We refer to the separator S in this partition as an approximate separator. Lagergren <ref> [Lag91] </ref> has shown how an approximate separator 16 can be produced in O (n log n) time (see also [Reed92]). The approximate separator algorithm can be used to construct parse trees of size O (n) and height O (log n) in O (n log 2 n) time.
Reference: [MaTh91] <author> J. Matousek and R. Thomas. </author> <title> Algorithms finding tree-decompositions of graphs. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <month> 1-22 </month> <year> (1991). </year>
Reference-contexts: A linear-time separator algorithm is easily obtainable from what is known as the embedding w-tree of the graph [ArPr89] (see, e.g., [FeMe90]). Since such embeddings can be constructed in linear time for graphs of tree-width 1, 2, or 3 <ref> [MaTh91] </ref>, we can construct partitions of such graphs in O (n) time, and balanced parse trees in O (n log n) time. Things are more complicated for graphs of tree-width w &gt; 3.
Reference: [McPe90] <author> J. McHugh and Y. </author> <title> Perl. Best location of service centers in a treelike network under budget constraints. </title> <journal> Discrete Mathematics, </journal> <volume> 86 </volume> <month> 199-214 </month> <year> (1990). </year>
Reference-contexts: The problem is to solve (1) subject to the knapsack-like constraint X s V (v) + e2E (H) where t 2 R. Even if the unconstrained problem is polynomially-solvable, the constrained one may be NP-hard. Such is the case, for example, for the dominating set problem on trees <ref> [McPe90] </ref>. The problem can be relaxed by incorporating the complicating constraint into the objective function using a Lagrange multiplier . The result is a parametric problem of the form (2) where all weights are linear functions of [Fis81].
Reference: [Meg79] <author> N. Megiddo. </author> <title> Combinatorial optimization with rational objective functions. </title> <journal> Math. Oper. Res., </journal> <volume> 4 </volume> <month> 414-424 </month> <year> (1979). </year> <month> 19 </month>
Reference-contexts: Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis [Gus83], minimum-ratio optimization <ref> [Meg79, Meg83] </ref>, Lagrangian relaxation [Fis81], and, in general, in environments where the data evolves continuously with time. We will focus on parametric optimum subgraph problems where vertex and edge weights are functions of a real-valued parameter . <p> It has subsequently been used to analyze the parametric maximum independent set problem on outerplanar graphs [ZhGo91] and parametric nonserial dynamic programming problems (and, as a special case, independent set) on partial k-trees [FeMe90]. Many of the ideas used here are based on the work of Megiddo; specifically, on <ref> [Meg79, Meg83] </ref>. Search and construction algorithms for an important special case of the parametric maximum flow problem are presented in [GGT89]. A theory of converting nonparametric algorithms into parametric ones is presented by Eaves and Rothblum in [EaRo89]. <p> Furthermore, given a linear-size parse tree (T; ffi) of G, Z P G can be constructed in polynomial time. Proof. The main idea behind our proof is algorithm simulation. This technique, which is inspired, in part, by <ref> [Meg79] </ref>, was used in [FeSl89]. Let us refer to the dynamic programming algorithm described in section 3.2 as algorithm A. <p> We assume that such a fl exists. (P3) Find fl such that Z P G ( fl ) = max Z G (). Each of the above problems has important applications. Problem (P1) is the sensitivity analysis problem [Gus83], problem (P2) arises in minimum-ratio optimization <ref> [Meg79] </ref>, and problem (P3) arises in Lagrangian relaxation [Fis81]. We shall briefly discuss the last of these three problems. Lagrangian relaxation is a heuristic approach to problems with difficult constraints.
Reference: [Meg83] <author> N. Megiddo. </author> <title> Applying parallel computation algorithms in the design of serial algorithms. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 30(4) </volume> <pages> 852-865, </pages> <year> 1983. </year>
Reference-contexts: Here we shall study the implications that regularity properties have on the parametric versions of these problems. Parametric optimization problems arise in sensitivity analysis [Gus83], minimum-ratio optimization <ref> [Meg79, Meg83] </ref>, Lagrangian relaxation [Fis81], and, in general, in environments where the data evolves continuously with time. We will focus on parametric optimum subgraph problems where vertex and edge weights are functions of a real-valued parameter . <p> It has subsequently been used to analyze the parametric maximum independent set problem on outerplanar graphs [ZhGo91] and parametric nonserial dynamic programming problems (and, as a special case, independent set) on partial k-trees [FeMe90]. Many of the ideas used here are based on the work of Megiddo; specifically, on <ref> [Meg79, Meg83] </ref>. Search and construction algorithms for an important special case of the parametric maximum flow problem are presented in [GGT89]. A theory of converting nonparametric algorithms into parametric ones is presented by Eaves and Rothblum in [EaRo89]. <p> Then, there exists a weight function ! such that B can be evaluated with O (f (M ) log d min + log M ) calls to an oracle with respect to !. Proof of Theorem 5.1. We shall use ideas from <ref> [Meg83, Cole87] </ref>. As in section 4, let A denote the algorithm for computing z G described in section 3.2, and let Z G and Z G be the parametric analogs of z G and z (i) G (see equations (6) and (7)).
Reference: [Mur80] <author> K. Murty. </author> <title> Computational complexity of parametric linear programming. </title> <journal> Math. Programming, </journal> <volume> 19 </volume> <pages> 213-219, </pages> <year> 1980. </year>
Reference-contexts: The second result is a proof that, for every regular property P , there exist O (n log n) algorithms for certain kinds of parametric search problems, including the two search problems stated above. 2 Related Work. Several researchers have considered parametric versions of combi-natorial optimization problems. Murty <ref> [Mur80] </ref> showed that the number of break-points for parametric linear programming problems can be exponential in the number of variables. Subsequently, Carstensen [Car83] proved exponential lower bounds for, among other problems, parametric minimum cut and knapsack. Van Hoesel et al. [vHKRW89] have compiled an extensive bibliography on parametric computing.
Reference: [Reed92] <author> B.A. Reed. </author> <title> Finding approximate separators and computing tree width quickly. </title> <note> To appear in STOC 92. </note>
Reference-contexts: We refer to the separator S in this partition as an approximate separator. Lagergren [Lag91] has shown how an approximate separator 16 can be produced in O (n log n) time (see also <ref> [Reed92] </ref>). The approximate separator algorithm can be used to construct parse trees of size O (n) and height O (log n) in O (n log 2 n) time.
Reference: [RoSe86] <author> N. Robertson and P.D. Seymour. </author> <title> Graph minors II: Algorithmic aspects of tree-width. </title> <journal> J. Algorithms, </journal> <volume> 7 </volume> <pages> 309-322, </pages> <year> 1986. </year>
Reference-contexts: CCR-8909626. 1 (for a definition of tree-width, see <ref> [RoSe86] </ref> or section 2 of this paper). While these approaches differ from each other in several respects, in essence they all deal with subgraph problems that have certain "regularity" properties that make them amenable to dynamic programming solutions. <p> In section 4 we study the properties of Z P G . In section 5 we present our parametric search algorithms. Finally, section 6 discusses related results and open problems. 2 Preliminaries 2.1 Tree-width The following definition is due to Robertson and Seymour <ref> [RoSe86] </ref>. Definition 1 Let G be an undirected graph. <p> A set S G is a separator of G if G S is not connected. The next result follows easily from Theorem 2.5 of <ref> [RoSe86] </ref>. Theorem 2.1 Let G 2 w and suppose Q V (G). <p> The partition (B 1 ; B 2 ; B 3 ; S) whose existence is claimed in Theorem 2.1 can be computed in polynomial time by exhaustive enumeration <ref> [RoSe86] </ref>. Linear-time separator algorithms exist for graphs of tree-width at most 3, while approximate separators (see section 6) for graphs of higher tree-width can be found efficiently.
Reference: [RoSe] <author> N. Robertson and P.D. Seymour. </author> <title> Graph minors XIII: The disjoint paths problem. </title> <note> To appear. </note>
Reference: [vLe90] <author> J. van Leeuwen. </author> <title> Graph Algorithms. </title> <editor> In J. van Leeuwen (ed.) </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1990. </year>
Reference-contexts: We shall write w to denote the set of all graphs of tree-width at most w. Many important classes of graphs have bounded tree-width, including trees, series-parallel graphs, bandwidth-k graphs, k-outerplanar graphs, and partial k-trees <ref> [ArPr89, Bod88, vLe90] </ref>. 3 It is known that a graph G is a partial k-tree if and only if G 2 k [vLe90]. The graphs in w have a useful separator theorem. <p> Many important classes of graphs have bounded tree-width, including trees, series-parallel graphs, bandwidth-k graphs, k-outerplanar graphs, and partial k-trees [ArPr89, Bod88, vLe90]. 3 It is known that a graph G is a partial k-tree if and only if G 2 k <ref> [vLe90] </ref>. The graphs in w have a useful separator theorem. We say that sets Y; Y 0 V (G) are separated by S V (G) if every path in G from Y to Y 0 goes through S.
Reference: [Sha87] <author> M. Sharir. </author> <title> Almost linear upper bounds on the length of Davenport-Schinzel sequences. </title> <journal> Combinatorica, </journal> <volume> 7(1) </volume> <month> 131-143 </month> <year> (1987). </year>
Reference-contexts: Since g 2 is the lower envelope of at most M = P m j=1 b (f j ) + m functions, we can use well-known results on Davenport-Schinzel sequences <ref> [Sha87] </ref> to prove that for d = 1 and d = 2, b (g 2 ) M and b (g 2 ) 2M 1, respectively. Since both bounds are better than those provided by Lemma 4.1, it is tempting to use the same strategy for larger values of d. <p> This will not suffice for our purposes, however, because for d 3 and fixed m, the lower envelope of a set of M d-th degree polynomials will, in general, have a number of breakpoints that is superlinear (although only slightly so) in M <ref> [Sha87] </ref>. The main result of this section is the following theorem. In its proof, we assume a model of computation where finding the roots of a d-th degree polynomial function is a primitive operation.
Reference: [Wim87] <author> T.V. Wimer. </author> <title> Linear algorithms on k-terminal graphs. </title> <type> Ph.D. Thesis, Report No. </type> <institution> URI-030, Clemson University (1987). </institution>
Reference-contexts: Recently, a long line of work has culminated in the development of various methodologies for devising polynomial-time (and, indeed, often linear-time) algorithms for graphs of bounded tree-width <ref> [AbFe92, ALS91, ArPr89, Bod87, BPT88, BLW87, Cou90, Wim87] </ref> fl A preliminary version of this paper will appear in the proceedings of the 3rd Scandinavian Conference on Algorithm Theory, 1992. y Supported in part by the National Science Foundation under grant No. <p> The terminals of G are obtained from the terminals of the composing graphs. See <ref> [Wim87, BPT88] </ref> for two ways to formalize this concept. We should note at this point that in weighted graph problems (parametric or not), when two nodes get identified by an operation ', these nodes are always assumed to have the same weight (or weight function). <p> Next, as a prelude to the discussion of parametric problems in sections 4 and 5, we review the dynamic programming algorithm for nonparametric optimum subgraph problems of Bern et al. [BLW87]. 3.1 Separators and Parse Trees The following theorem, due to Wimer <ref> [Wim87] </ref>, shows the close relationship between graphs of bounded tree-width and decomposable graphs: Theorem 3.1 There exists a finite family R of (w + 1)-terminal graph composition operators such that w = R fl . For our purposes, we shall need a variant of this result.
Reference: [ZhGo91] <author> B. Zhu and W. Goddard. </author> <title> An algorithm for outerplanar graphs with parameter. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <month> 6657-662 </month> <year> (1991). </year> <month> 20 </month>
Reference-contexts: The algorithmic approach followed in this paper was first used in [FeSl89] to analyze various optimization problems on trees, including weighted vertex cover and dominating set. It has subsequently been used to analyze the parametric maximum independent set problem on outerplanar graphs <ref> [ZhGo91] </ref> and parametric nonserial dynamic programming problems (and, as a special case, independent set) on partial k-trees [FeMe90]. Many of the ideas used here are based on the work of Megiddo; specifically, on [Meg79, Meg83].
References-found: 35

