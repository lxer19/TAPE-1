URL: http://www.cs.utah.edu/~ald/manchester-meat.ps
Refering-URL: http://www.cs.utah.edu/~ald/
Root-URL: 
Title: Automatic Synthesis of Fast Compact Asynchronous Control Circuits  
Author: Al Davis, Bill Coates, and Ken Stevens 
Keyword: Keyword Codes: B.6.1; B.6.3; B.7.2 Keywords: Logic Design, Design Styles, Design Aids; Integrated Circuits, Design Aids  
Address: P.O. Box 10490, Palo Alto, CA 94303, USA  
Affiliation: Hewlett-Packard Laboratories,  
Abstract: A tool called MEAT is presented which automatically synthesizes transistor level, CMOS, asynchronous control circuits from finite state machine based specifications. MEAT has been used to synthesize the control circuits for an asynchronous 300,000 transistor communication coprocessor. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Erik Brunvand and Robert Sproull. </author> <title> Translating Concurrent Programs into Delay-Insensitive Circuits. </title> <booktitle> In IEEE International Conference on Computer Aided Design: Digest of Technical Papers, </booktitle> <pages> pages 262-265. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1989. </year>
Reference: [2] <author> J. A. Brzozowski and J. C. Ebergen. </author> <title> On the Delay-Sensitivity of Gate Networks. </title> <journal> TC, </journal> <volume> 41(11) </volume> <pages> 1349-1360, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: The design style space is large and each design style has its own set of merits and demerits. The methods which produce delay-insensitive circuits, while not perfect <ref> [2] </ref>, are the most tolerant of variations in device and wire delays. We chose to slightly expand the domain of timing assumptions which must remain valid to retain hazard free implementation since this permits higher performance implementations at the expense of reduced operational tolerance.
Reference: [3] <author> Steven M. Burns and Alain J. Martin. </author> <title> The Fusion of Hardware Design and Verification, chapter Synthesis of Self-Timed Circuits by Program Transformation, </title> <address> pages 99-116. </address> <publisher> Elsevier Science Publishers, </publisher> <year> 1988. </year>
Reference: [4] <author> Tam-Anh Chu. </author> <title> On the models for designing VLSI asynchronous digital systems. </title> <type> Technical Report MIT-LCS-TR-393, </type> <institution> MIT, </institution> <year> 1987. </year>
Reference: [5] <author> Henry Y. H. Chuang and Santanu Das. </author> <title> Synthesis of multiple-input change asynchronous machines using controlled excitation and flip-flops. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-22(12):1103-1109, </volume> <month> December </month> <year> 1973. </year>
Reference: [6] <author> David Dill. </author> <title> Trace Theory for Automatic Hierarchical Verification of Speed-Independent Circuits. An ACM Distinguished Dissertation. </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Nowick et. al.[11] have developed the modifications necessary to the state-reduction and subsequent synthesis steps to guarantee that the resulting implementation will be hazard-free under burst-mode conditions. These modifications are not presently incorporated into MEAT. Currently we use a verifier <ref> [6] </ref> on the synthesized implementation. The verifier has been modified to operate with explicit timing assumptions. Hazards detected in the implementation are then reviewed to see if the circuit would exhibit correct behavior under reasonable delay assumptions.
Reference: [7] <author> A Grasselli and F. Luccio. </author> <title> A Method for Minimizing the Number of Internal States of Incompletely Specified Sequential Networks. </title> <journal> IEEE TEC, </journal> <month> June </month> <year> 1965. </year>
Reference-contexts: Second, each state in the original design must be contained in at least one of the reduced states (completeness constraint). Third, selecting certain sets of states to be merged may imply that other states must also be merged (closure constraint). Grasselli and Luccio <ref> [7] </ref> have developed a tabular method for determining a closed cover of states, which is also in the process of being incorporated into MEAT. At present, MEAT requires the user to manually determine and enter a state covering.
Reference: [8] <author> A. B. Hayes. </author> <title> Stored State Asynchronous Sequential Circuits. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(8), </volume> <month> August </month> <year> 1981. </year>
Reference: [9] <author> Lee A. Hollaar. </author> <title> Direct implementation of asynchronous control units. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-31(12):1133-1141, </volume> <month> December </month> <year> 1982. </year>
Reference: [10] <author> A.J. Martin, S.M. Burns, T.K. Lee, D. Borkovic, and P.J. Hazewindus. </author> <title> "The Design of an Asynchronous Microprocessor". </title> <editor> In C.L. Seitz, editor, </editor> <booktitle> Advanced Reserach in VLSI: Proceeedings of the Decennial Caltech Conference on VLSI, </booktitle> <pages> pages 351-373. </pages> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Noise, long wires, and high-capacitance paths exacerbate the problem. Within a particular AFSM module, this problem can be managed successfully but between modules it is difficult. Martin <ref> [10] </ref> and Van Berkel [20] have both described circuit failures due to paths which did not behave in an isochronous fashion. Both failures were the result of using C-elements in module interfaces. C-elements inherently contain an isochronous fork.
Reference: [11] <author> S. M. Nowick and D. L. Dill. </author> <title> Synthesis of asynchronous state machines using a local clock. </title> <booktitle> In 1991 IEEE International Conference on Computer Design: VLSI in Computers and Processors. IEEE Computer Society, </booktitle> <year> 1991. </year>
Reference: [12] <author> S. M. Nowick, K. Y. Yun, and D. L. Dill. </author> <title> Practical asynchronous controller design. </title> <booktitle> In 1992 IEEE International Conference on Computer Design: VLSI in Computers and Processors. IEEE Computer Society, </booktitle> <year> 1992. </year>
Reference: [13] <author> Steven M. Nowick and David L. Dill. </author> <title> Automatic synthesis of locally-clocked asynchronous state machines. </title> <booktitle> In 1991 IEEE International Conference on Computer-Aided Design. IEEE Computer Society, </booktitle> <year> 1991. </year>
Reference: [14] <author> L. Lavagno; K. Keutzer; A. Sangiovanni-Vincentelli. </author> <title> Synthesis of Verifiably Hazard--Free Asynchronous Control Circuits. </title> <type> Technical Report UCB/ERL M90/99, </type> <institution> Univ. of California at Berkeley, </institution> <month> November </month> <year> 1990. </year>
Reference: [15] <author> Kenneth S. Stevens, Shane V Robison, and A.L. Davis. </author> <title> "The Post Office Communication Support for Distributed Ensemble Architectures". </title> <booktitle> In Proceedings of 6th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 160 - 166, </pages> <month> May </month> <year> 1986. </year>
Reference-contexts: A complex gate is a fully complementary CMOS function which implements the sum of products equations that describe the implementation. MEAT has been used to develop a control intensive mul--ticomputer communication chip called the Post Office <ref> [15] </ref>. The Post Office contains 300,000 transistors and has an area of 11 fi 8.3 mm in the 1.2 micron MOSIS CMOS process. 2 MEAT aTool for Control Circuit Synthesis Asynchronous circuits are specified for MEAT as a burst-mode Mealy state machine.
Reference: [16] <author> Ivan Sutherland. </author> <title> Micropipelines. </title> <journal> CACM, </journal> <volume> 32(6) </volume> <pages> 720-738, </pages> <month> June </month> <year> 1989. </year> <note> Turing Award Lecture. </note>
Reference-contexts: For the Post Office experience we assumed that the datapath design would be similar to synchronous methods. We found out the hard way that this is not the case. Hence there is a significant need to adapt existing datapath generators to accommodate asynchronous methods such as micropipelines <ref> [16] </ref>. We also need to integrate the MEAT capability with the rest of our CAD suite since at present there is too much user interaction. Part of this has already been done, but the integration process is incessant by nature.
Reference: [17] <author> J. H. Tracey. </author> <title> Internal state assignments for asynchronous sequential machines. </title> <journal> IEEE Transactions on Electronic Computers, </journal> <volume> EC-15:551-560, </volume> <month> August </month> <year> 1966. </year>
Reference-contexts: These state variables are used as feedback signals in the final circuit. In contrast to synchronous control logic design, state codes may not be randomly assigned, but must be carefully chosen to prevent races. The MEAT state assignment algorithm is based on a method developed by Tracey <ref> [17] </ref>. The Tracey algorithm has the advantage that it produces STT state assignments which minimizes delay in the implementation. In cases where two or more state variables must change value when transitioning to a new state, all variables involved are allowed to change concurrently, or race.
Reference: [18] <author> S. H. Unger. </author> <title> A Building Block Approach to Unclocked Systems. </title> <booktitle> In Proceedings of the 26th HICSS Conference, </booktitle> <month> January </month> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: The fundamental mode assumption guarantees that the AFSM is ready to accept the next input burst when it arrives, as the state variable transition has completed and the logic has stabilized. Unger has shown that it is possible to improve on this model <ref> [18] </ref>, although his method is not presently incorporated into MEAT.
Reference: [19] <author> S.H. Unger. </author> <title> Asynchronous sequential switching circuits. </title> <publisher> Wiley-Interscience, </publisher> <year> 1969. </year>
Reference-contexts: There are a large number of rather different design styles in today's asynchronous design community. One partition of design styles can be based on the type of asynchronous circuit target: locally clocked [13,8], delay-insensitive [3,21], or various forms of single- and multiple- input change circuits <ref> [19] </ref>. Yet another distinction can be made on the nature of the control specification: graph based [22,4], programming language based [3,21,1], or finite state machine based [13,8]. <p> In order to achieve the necessary hazard free asynchronous finite state machine (AFSM) implementation, it is necessary to place constraints on how their inputs are allowed to change. The most common is the single input change or SIC constraint <ref> [19] </ref>. SIC circuits inherently require state transitions after each input variable transition. <p> Burst-mode state diagrams are reasonably compact when compared to petri-nets, m-nets, STG's, and other graphical representations. These diagrams work well for transition (2 cycle) or level-mode (4 cycle) signalling protocols. The first automated task performed by MEAT is to generate a primitive flow table <ref> [19] </ref> from the textual AFSM specification. This is a two-dimensional array structure which captures, in a more detailed form, the behavior represented by the state diagram. Each row of this table represents a node in the state diagram; each column represents a unique combination of input signals. <p> In this example, the begin-send signal is shared by Y1 and send-pkt. The two inverters are merged and the output is forked to both logic blocks. This implementation is then verified. The verifier points out a d-trio hazard <ref> [19] </ref> which is removed by adding an inverter to change the sequencing of begin-send into the Y0 logic.
Reference: [20] <author> C. H. van Berkel. </author> <title> Beware the Isochronic Fork. </title> <type> Technical Report Nat. Lab Rep. UR 003/91, </type> <institution> Philips Research Laboratories, </institution> <month> January </month> <year> 1991. </year>
Reference-contexts: Noise, long wires, and high-capacitance paths exacerbate the problem. Within a particular AFSM module, this problem can be managed successfully but between modules it is difficult. Martin [10] and Van Berkel <ref> [20] </ref> have both described circuit failures due to paths which did not behave in an isochronous fashion. Both failures were the result of using C-elements in module interfaces. C-elements inherently contain an isochronous fork.
Reference: [21] <author> C. H. (Kees) van Berkel. </author> <title> Handshake circuits: an intermediary between communicating processes and VLSI. </title> <type> PhD thesis, </type> <institution> Technical University of Eindhoven, </institution> <month> May </month> <year> 1992. </year>
Reference: [22] <author> Peter Vanbekbergen, Francky Catthoor, Gert Goossens, and Hugo De Man. </author> <title> Optimized synthesis of asynchronous control circuits from graph-theoretic specifications. </title> <booktitle> In International Conference on Computer-Aided Design. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1990. </year>
References-found: 22

