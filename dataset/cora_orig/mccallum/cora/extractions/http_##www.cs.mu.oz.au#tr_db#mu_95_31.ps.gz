URL: http://www.cs.mu.oz.au/tr_db/mu_95_31.ps.gz
Refering-URL: http://www.cs.mu.oz.au/tr_db/TR.html
Root-URL: 
Title: Enhancing Project-Based Learning: Variations on Mentoring  
Keyword: software engineering education, project-based learning, quality assurance, mentoring  
Abstract: Project-based learning is an essential part of a software engineer's education. The learning achieved through projects can be improved through structured interaction between more experienced students and those students encountering their first software engineering project. In this paper, we report on our experience over three years with trials of several forms of interaction between undergraduate students at the third- and fourth-year levels. This mentoring involved full year project subjects at both year levels. We discuss the problems encountered during these trials, and describe how the interaction was varied in response. We examine the benefits achieved through this interaction and provide details of student feedback. Such benefits include broadening the experience of the fourth-year students, providing a form of mentoring for less experienced students, and improving both the project process and the quality of the project product. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Tim Arnold, Philip Dart, Margaret Hassell, and Lorraine Johnston. </author> <title> Software engineering project manual, </title> <type> version 3. Technical Report 29, </type> <institution> Department of Computer Science, The University of Melbourne, </institution> <year> 1994. </year>
Reference-contexts: Team preferences are also taken into account in the allocation of projects to increase motivation and help students concentrate on the basic process. A major component of the guidance provided to third-year students is a project manual <ref> [1] </ref> written explicitly for this task. The manual outlines what is expected of students during the project and contains references to other sources of information. Each development phase is described in a separate section, which is followed by an outline of the corresponding assessment submission.
Reference: [2] <author> P. Dart and L. Johnston. </author> <title> Software engineering: educating students about quality. </title> <editor> In Zenon J. Pudlowski and Peter LeP. Darvall, editors, </editor> <booktitle> Proceedings of the 1995 International Congress of Engineering Deans and Industry Leaders, </booktitle> <pages> pages 175-179. </pages> <booktitle> UNESCO Supported International Centre for Engineering Education, </booktitle> <year> 1995. </year>
Reference-contexts: The advice may be technical or managerial, but it is based on superior knowledge which the senior student is able to share with the less knowledgeable third-years. While there have been numerous reports on project-based learning, for example <ref> [2, 3, 7, 8, 9, 12] </ref>, there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion.
Reference: [3] <author> Marcus Deininger and Kurt Schneider. </author> <title> Teaching software project management by simulation|experiences with a comprehensive model. </title> <booktitle> Proceedings of the Seventh SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 750, </volume> <pages> pages 227-242, </pages> <year> 1994. </year>
Reference-contexts: The advice may be technical or managerial, but it is based on superior knowledge which the senior student is able to share with the less knowledgeable third-years. While there have been numerous reports on project-based learning, for example <ref> [2, 3, 7, 8, 9, 12] </ref>, there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion. <p> In other institutions, alternative means must be found to offer the desired experiences. For example, Deininger and Schneider report on an approach in which the `real' project has been substituted by a simulated environment where students experience project management <ref> [3] </ref>. In our situation we could provide students with this experience by using the fourth-year students as project managers for third-year projects. This approach differs slightly from that described by Dick and Jones as `peer coaching' [4], in that the students are not strictly peers.
Reference: [4] <author> Geoffrey N. Dick and Stuart F. Jones. </author> <title> Industry involvement in undergraduate curricula: reinforcing learning by applying the principles. </title> <editor> In Rosalind L. Ibrahim, editor, </editor> <booktitle> Proceedings of the Eighth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 895, </volume> <pages> pages 51-63. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion. Dick and Jones <ref> [4] </ref> list about a dozen different learning strategies and discuss them with respect to Information Systems education. While mentoring is listed, it is not discussed. <p> In our situation we could provide students with this experience by using the fourth-year students as project managers for third-year projects. This approach differs slightly from that described by Dick and Jones as `peer coaching' <ref> [4] </ref>, in that the students are not strictly peers. A mismatch in numbers of enrolled students meant that not every third-year team could have a fourth-year project manager. This left us with the question of how to allocate fourth-years to third-year teams.
Reference: [5] <author> Richard E. Fairley. </author> <title> Some hard questions for software engineering educators. </title> <editor> In Rosalind L. Ibrahim, editor, </editor> <booktitle> Proceedings of the Eighth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 895, </volume> <pages> page 1. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: We will continue to fine tune this interaction as necessary, but believe that through our project subjects, we can "teach large-scale industrial issues", and that the students learn many useful lessons on a broad range of software engineering topics <ref> [5] </ref>. Our latest and most promising trial took the form of having fourth-year students perform technical reviews and audits.
Reference: [6] <author> L. Johnston and P. </author> <title> Dart. Building on experience: an undergraduate course with two year-long projects. </title> <booktitle> Proceedings of the Seventh SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 750, </volume> <pages> pages 345-357, </pages> <year> 1994. </year> <month> 11 </month>
Reference-contexts: We planned and specified the objectives and organisation of this subject to take advantage of the opportunity that a course with two full year projects presented <ref> [6] </ref>. Nonetheless, we were aware that team project members are rarely involved in all aspects of the engineering process, and that in focusing on their specific tasks, they are often unable to obtain an objective overview of the whole software engineering process.
Reference: [7] <author> Manmahesh Kantipudi, Ken W. Collier, James S. Collofello, and Scott Medeiros. </author> <title> Software engineering course projects: failures and recommendations. </title> <booktitle> Proceedings of the Sixth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 640, </volume> <pages> pages 324-338, </pages> <year> 1992. </year>
Reference-contexts: The advice may be technical or managerial, but it is based on superior knowledge which the senior student is able to share with the less knowledgeable third-years. While there have been numerous reports on project-based learning, for example <ref> [2, 3, 7, 8, 9, 12] </ref>, there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion.
Reference: [8] <author> Peter J. Knoke. </author> <title> Medium size project model: variations on a theme. </title> <booktitle> Proceedings of the Fifth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 536, </volume> <pages> pages 5-24, </pages> <year> 1991. </year>
Reference-contexts: The advice may be technical or managerial, but it is based on superior knowledge which the senior student is able to share with the less knowledgeable third-years. While there have been numerous reports on project-based learning, for example <ref> [2, 3, 7, 8, 9, 12] </ref>, there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion. <p> The projects offered here are similar to those described by Knoke as medium sized projects <ref> [8] </ref>. Each team of students is self-selected where possible, to minimise the overhead of interpersonal problems. Team preferences are also taken into account in the allocation of projects to increase motivation and help students concentrate on the basic process.
Reference: [9] <author> William M. Lively and Mark Lease. </author> <title> Undergraduate software engineering laboratory at Texas A&M University. </title> <booktitle> Proceedings of the Sixth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 640, </volume> <pages> pages 315-323, </pages> <year> 1992. </year>
Reference-contexts: The advice may be technical or managerial, but it is based on superior knowledge which the senior student is able to share with the less knowledgeable third-years. While there have been numerous reports on project-based learning, for example <ref> [2, 3, 7, 8, 9, 12] </ref>, there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion.
Reference: [10] <author> Melody Moore and Colin Potts. </author> <title> Learning by doing: goals and experiences of two software engineering project courses. </title> <booktitle> In Proceedings of the Seventh SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 750, </volume> <pages> pages 151-164. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: While there have been numerous reports on project-based learning, for example [2, 3, 7, 8, 9, 12], there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts <ref> [10] </ref> where students compete for promotion. Dick and Jones [4] list about a dozen different learning strategies and discuss them with respect to Information Systems education. While mentoring is listed, it is not discussed.
Reference: [11] <institution> Institute of Electrical and Electronic Engineers. IEEE Software Engineering Standards Collection. IEEE Computer Society Press, </institution> <year> 1991. </year>
Reference-contexts: The manual outlines what is expected of students during the project and contains references to other sources of information. Each development phase is described in a separate section, which is followed by an outline of the corresponding assessment submission. The manual draws strongly from the IEEE software engineering standards <ref> [11] </ref> and refers to these standards throughout. Fourth-year project The fourth-year project attempts to build on what students have learnt in their third year.
Reference: [12] <author> Mary Shaw and James E. Tomayko. </author> <title> Models for undergraduate project courses in software engineering. </title> <booktitle> Proceedings of the Fifth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 536, </volume> <pages> pages 33-71, </pages> <year> 1991. </year>
Reference-contexts: The advice may be technical or managerial, but it is based on superior knowledge which the senior student is able to share with the less knowledgeable third-years. While there have been numerous reports on project-based learning, for example <ref> [2, 3, 7, 8, 9, 12] </ref>, there has been relatively little reported on the use of mentoring approaches in software engineering education. Peer-level mentoring is described by Moore and Potts [10] where students compete for promotion. <p> In this subject, we use a large project team model similar to that described by Shaw and Tomayko <ref> [12] </ref>. The entire class, so far ranging in size from seven to sixteen students, works on a single project for an external client.
Reference: [13] <author> Lin Zucconi. </author> <title> Essential knowledge for the practising software engineer and the responsibilities of university and industry for her education. </title> <editor> In Rosalind L. Ibrahim, editor, </editor> <booktitle> Proceedings of the Eighth SEI Conference on Software Engineering Education, </booktitle> <volume> LNCS 895, </volume> <pages> pages 5-13. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: We believe there is more to be gained in active encouragement than in competition. Zucconi <ref> [13] </ref> recommends that industry be prepared to contribute to the education of engineers with on-the-job training and mentoring by domain experts and with specific industrial training. We apply mentoring at the undergraduate level to give specific training in the software process.
References-found: 13

