URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/TM172.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts92.htm
Root-URL: http://www.mcs.anl.gov
Title: Theorem-Proving Contest  
Author: by E. L. Lusk and W. W. McCune 
Date: November 1992  
Note: An Entry in the 1992 Overbeek  This work was supported by the Office of Scientific Computing, U.S. Department of Energy, under Contract W-31-109-Eng-38.  
Address: 9700 South Cass Avenue Argonne, IL 60439 ANL/MCS-TM-172  
Affiliation: ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  
Pubnum: Technical Memorandum No. 172  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> E. Lusk and W. McCune. </author> <title> Experiments with Roo, a parallel automated deduction system. </title> <editor> In B. Fronhofer and G. Wrightson, editors, </editor> <title> Parallelization in Inference Systems, </title> <booktitle> Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. 590, </volume> <pages> pages 139-162, </pages> <address> New York, 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: This paper describes our experiences in preparing to enter the contest with Otter [5, 6] and Roo <ref> [1, 2] </ref>, two systems developed at Argonne National Laboratory. Roo is a parallel version of Otter, but has such different behavior in some cases that we treat them as separate entries. We entered each of them in both contests.
Reference: [2] <author> E. Lusk, W. McCune, and J. Slaney. </author> <title> Roo|a parallel theorem prover. </title> <type> Tech. </type> <institution> Memo MCS-TM-149, Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <year> 1991. </year>
Reference-contexts: This paper describes our experiences in preparing to enter the contest with Otter [5, 6] and Roo <ref> [1, 2] </ref>, two systems developed at Argonne National Laboratory. Roo is a parallel version of Otter, but has such different behavior in some cases that we treat them as separate entries. We entered each of them in both contests.
Reference: [3] <author> E. Lusk and R. Overbeek. </author> <title> The automated reasoning system ITP. </title> <type> Tech. Report ANL-84/27, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <month> April </month> <year> 1984. </year>
Reference-contexts: 1567.96 weigh cl time 37.51 for_sub time 56.03 renumber time 69.31 keep cl time 9.72 print_cl time 0.00 conflict time 1.43 post_process time 65.32 back demod time 53.96 back_sub time 10.91 lex_rpo time 76.22 The job finished Thu Jun 4 18:15:07 1992 7 Conclusion Years of experimentation with theorem-proving systems <ref> [4, 9, 3, 5, 6] </ref> have enabled us to accumulate a wide variety of variations and parameters to control our basic theorem-proving algorithm. The typical user need know about only a few of them.
Reference: [4] <author> J. McCharen, R. Overbeek, and L. Wos. </author> <title> Problems and experiments for and with automated theorem-proving programs. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-25(8):773-782, </volume> <month> August </month> <year> 1976. </year>
Reference-contexts: 1567.96 weigh cl time 37.51 for_sub time 56.03 renumber time 69.31 keep cl time 9.72 print_cl time 0.00 conflict time 1.43 post_process time 65.32 back demod time 53.96 back_sub time 10.91 lex_rpo time 76.22 The job finished Thu Jun 4 18:15:07 1992 7 Conclusion Years of experimentation with theorem-proving systems <ref> [4, 9, 3, 5, 6] </ref> have enabled us to accumulate a wide variety of variations and parameters to control our basic theorem-proving algorithm. The typical user need know about only a few of them.
Reference: [5] <author> W. McCune. </author> <title> Otter 2.0 Users Guide. </title> <type> Tech. Report ANL-90/9, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <month> March </month> <year> 1990. </year>
Reference-contexts: There were actually two separate contests, one represented by a set of seven problems designed to test basic inference components, and the other represented by a set of ten problems designed to test equality-based systems. This paper describes our experiences in preparing to enter the contest with Otter <ref> [5, 6] </ref> and Roo [1, 2], two systems developed at Argonne National Laboratory. Roo is a parallel version of Otter, but has such different behavior in some cases that we treat them as separate entries. We entered each of them in both contests. <p> 1567.96 weigh cl time 37.51 for_sub time 56.03 renumber time 69.31 keep cl time 9.72 print_cl time 0.00 conflict time 1.43 post_process time 65.32 back demod time 53.96 back_sub time 10.91 lex_rpo time 76.22 The job finished Thu Jun 4 18:15:07 1992 7 Conclusion Years of experimentation with theorem-proving systems <ref> [4, 9, 3, 5, 6] </ref> have enabled us to accumulate a wide variety of variations and parameters to control our basic theorem-proving algorithm. The typical user need know about only a few of them.
Reference: [6] <author> W. McCune. </author> <title> What's New in Otter 2.2. </title> <type> Tech. </type> <institution> Memo ANL/MCS-TM-153, Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <month> July </month> <year> 1991. </year>
Reference-contexts: There were actually two separate contests, one represented by a set of seven problems designed to test basic inference components, and the other represented by a set of ten problems designed to test equality-based systems. This paper describes our experiences in preparing to enter the contest with Otter <ref> [5, 6] </ref> and Roo [1, 2], two systems developed at Argonne National Laboratory. Roo is a parallel version of Otter, but has such different behavior in some cases that we treat them as separate entries. We entered each of them in both contests. <p> 1567.96 weigh cl time 37.51 for_sub time 56.03 renumber time 69.31 keep cl time 9.72 print_cl time 0.00 conflict time 1.43 post_process time 65.32 back demod time 53.96 back_sub time 10.91 lex_rpo time 76.22 The job finished Thu Jun 4 18:15:07 1992 7 Conclusion Years of experimentation with theorem-proving systems <ref> [4, 9, 3, 5, 6] </ref> have enabled us to accumulate a wide variety of variations and parameters to control our basic theorem-proving algorithm. The typical user need know about only a few of them.
Reference: [7] <author> W. McCune and L. Wos. </author> <title> The absence and the presence of fixed point combinators. </title> <journal> Theoretical Computer Science, </journal> <volume> 87 </volume> <pages> 221-228, </pages> <year> 1991. </year>
Reference-contexts: We suspect that with associative-commutative unification, Otter would be able to prove it. Theorem EQ-8. The fragment fB,Wg of combinatory logic contains fixed point combina-tors. This theorem is much more difficult than EQ-6, and the strategy above that works for EQ-6 fails for EQ-8. The kernel method <ref> [7] </ref>, which was developed for this type of problem, finds a proof of EQ-8 within a few seconds. Theorems EQ-9 and EQ-10. On Moufang identities in nonassociative rings (EQ-9), and on right alternative nonassociative rings (EQ-10).
Reference: [8] <author> W. McCune and L. Wos. </author> <title> Experiments in automated deduction with condensed detachment. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Proceedings of the 11th International Conference on Automated Deduction, Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. 607, </volume> <pages> pages 209-223, </pages> <address> New York, June 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference: [9] <author> B. Smith. </author> <title> Reference manual for the environmental theorem prover: An incarnation of AURA. </title> <type> Tech. Report ANL-88-2, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <month> March </month> <year> 1988. </year>
Reference-contexts: 1567.96 weigh cl time 37.51 for_sub time 56.03 renumber time 69.31 keep cl time 9.72 print_cl time 0.00 conflict time 1.43 post_process time 65.32 back demod time 53.96 back_sub time 10.91 lex_rpo time 76.22 The job finished Thu Jun 4 18:15:07 1992 7 Conclusion Years of experimentation with theorem-proving systems <ref> [4, 9, 3, 5, 6] </ref> have enabled us to accumulate a wide variety of variations and parameters to control our basic theorem-proving algorithm. The typical user need know about only a few of them.
References-found: 9

