URL: http://www.cs.purdue.edu/homes/spaf/tech-reps/9508.ps
Refering-URL: http://www.cs.purdue.edu/coast/coast-library.html
Root-URL: http://www.cs.purdue.edu
Email: fmcrosbie,spafg@cs.purdue.edu  
Title: Active Defense of a Computer System using Autonomous Agents  
Author: Mark Crosbie, Gene Spafford 
Date: February 15, 1995  
Address: West Lafayette IN 47907-1398  
Affiliation: COAST Group Dept. of Computer Sciences Purdue University  
Pubnum: Technical Report No. 95-008  
Abstract: This report presents a prototype architecture for an active defense mechanism for computer systems. The intrusion detection problem is introduced and some of the key aspects of any solution are explained. Previous attempts to use similar techniques are discussed, and their shortcomings are explained. A new architecture is proposed which uses Genetic Programming to evolve programs to detect anomalous behaviour in a system. This architecture is developed and evaluated. A sample genetic program is used to discuss some of the design aspects of the agents. Cooperative monitoring of NFS requests shows how the approach can be generalised. The discussion details some issues to be addressed and future research directions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Heady, G. Luger, A. Maccabe, M. Servilla. </author> <title> The architecture of a network level intrusion detection system. </title> <type> Technical Report, </type> <institution> University of New Mexico, Department of Computer Science, </institution> <month> August </month> <year> 1990. </year>
Reference-contexts: This is accomplished by having the detection system learn by observation, deciding which actions constitute normal system be-haviour, and which can be considered suspicious. 2 Intrusions and Intrusion Detection An intrusion can be defined as <ref> [1] </ref>: any set of actions that attempt to compromise the integrity, confiden tiality or availability of a resource. Intrusions are hard to catch because there are so many ways in which they may take place. <p> fundamentally, it is similar to the way in which humans approach an unfamiliar situation | "have I seen something similar to this before?" Solutions which take a different approach to the problem, such as that proposed by Heady, Luger et al. in their paper on a Network Level Intrusion Detector <ref> [1] </ref>, suffer from a problem of scaling. In this approach they use a Classifier System 2 to determine the state of their network. They gather metrics about network packets and from this try to infer whether they can classify the state of their network. However, this has two limitations: 1.
Reference: [2] <author> David Goldberg. </author> <title> Genetic Algorithms in Search, </title> <journal> Optimization and Machine Learning. </journal> <volume> Addision-Wesley, </volume> <year> 1989. </year>
Reference-contexts: For example, there is no way of distinguishing a legitimate connection to the mail port from that of a possible intruder. 1 using the useful rule-of-thumb in computing: past behaviour is likely to predict future behaviour. 2 A cross between an expert-system and a neural network. See Goldberg <ref> [2] </ref> for information. A system by Kephart [7] takes a similar approach to this paper by using the human immune system as a model for developing a virus detection and eradication system. However, his approach is specifically aimed at viruses on PC computers.
Reference: [3] <author> John Koza. </author> <title> Genetic Programming: On the Programming of Computers by means of Natural Selection. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: It is similar to the training phase in neural networks. 6 Internal design of the Agents We propose using the Genetic Programming <ref> [3] </ref> paradigm as a basis for the internal design of the agents. In this paradigm, populations of programs are evolved to solve a specific problem. The problem often has no singular correct solution, or the solution is very expensive to compute.
Reference: [4] <author> Jeremy Frank. </author> <title> Artificial Intelligence and Intrusion Detection: Current and Future Directions. </title> <institution> Division of Computer Science, University of California at Davis, </institution> <address> CA 95616. </address>
Reference-contexts: The second case is where a large data set (typically megabytes of audit-log data) is analysed for patterns of actions so as to reduce the amount of data to be handled by a human user. The paper Artificial Intelligence and Intrusion Detection <ref> [4] </ref> outlines some methods by which classic AI techniques can be applied to the problem. It concentrates on the data reduction and behaviour classification problems. It outlines approaches involving both rule-based systems (such as expert systems) and classification systems (neural-networks or classifier systems).
Reference: [5] <author> T. Lunt, H. Javitz, A. </author> <note> Valdes et al. </note>
Reference-contexts: On a more practical level, the effort required to do this may prevent system administrators from keeping their rule-bases current, thus they will be operating with out-dated information in their intrusion detection systems. Another example of a rule-based approach to intrusion detection is the IDES system <ref> [5] </ref>. It has a rule database which stores knowledge about vulnerabilities in the system, security policies in force on the system and past intrusions.
References-found: 5

