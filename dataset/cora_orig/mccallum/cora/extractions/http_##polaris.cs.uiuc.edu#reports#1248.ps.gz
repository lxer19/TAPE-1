URL: http://polaris.cs.uiuc.edu/reports/1248.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: Parallelization of WHAMS3D on Two Shared-Memory Multiprocessors  
Author: H.-C. Chen H. Gao G. Lai 
Date: April 21, 1994  
Abstract-found: 0
Intro-found: 1
Reference: [ABCC90] <author> S. Aslam, R. Bramley, H.-C. Chen, G. Cybenko, et al., </author> <title> The Advanced Software Development and Commercialization Project: Progress Report PR-1, </title> <type> CSRD Tech. </type> <institution> Rept. 1047, CSRD, Univ. of Illinois at Urbana-Champaign, </institution> <month> September </month> <year> 1990. </year>
Reference-contexts: cf77 -Zp plus -a stack SVC (-ei) cf77 -Zp -Wd"-ei" plus -a stack optimizer: fpp 5.2 Performance In the following, we present the performance results obtained from running all three versions of WHAMS3D under the execution modes mentioned above for the four data sets described in our first progress report <ref> [ABCC90] </ref>. All experiments were performed in dedicated mode, and the performance results were obtained by using the Cray hardware performance monitor hpm [Cray89]. The floating point operations were performed in 64-bit precision.
Reference: [Alli87] <institution> Alliant Computer Systems Corporation, </institution> <address> FX/FORTRAN-Language Manual, Acton, MA, </address> <year> 1987. </year>
Reference-contexts: It is possible, however, that the code optimizer may not be able to detect whether or not two array references overlap at compile time. In the case that they do not overlap, the Alliant Fortran optimization directive CVD$L NODEPCHK <ref> [Alli87] </ref> is used to make the loop a candidate for vectorization and concurrency.
Reference: [BeTs82] <author> T. Belytschko and C. S. Tsay, WHAMSE: </author> <title> A Program for Three-dimensional Nonlinear Structural Dynamics, </title> <type> Tech. </type> <institution> Rept. NP-2250, Dept. Civil Engin., Northwestern Univ., </institution> <address> Evanston, IL, </address> <month> February </month> <year> 1982. </year>
Reference-contexts: Performance results obtained from our experiments are presented and discussed later in this report. 2 WHAMS3D WHAMS3D is a computer program that employs explicit time integration to perform nonlinear, transient analysis of frames, shells, plates, and continua in three space dimensions <ref> [BeTs82] </ref>. This program consists of about 15,000 lines of Fortran statements. However, only a subset of the code is involved in our study. This subset contains all subroutines related to the formation and computation of the nonlinear dynamic analysis using quadrilateral plate elements.
Reference: [Cray89] <institution> Cray Research, Inc., UNICOS Performance Utilities Reference Manual SR-2040B, Mendota Heights, MN, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: All experiments were performed in dedicated mode, and the performance results were obtained by using the Cray hardware performance monitor hpm <ref> [Cray89] </ref>. The floating point operations were performed in 64-bit precision.
Reference: [Cray90] <institution> Cray Research, Inc., </institution> <note> CF77 Compiling System, Vol. 4: Parallel Processing Guide, </note> <institution> SG-3074 4.0, Mendota Heights, MN, </institution> <year> 1990. </year> <month> 19 </month>
Reference-contexts: Version V3 was tested under only the first four execution modes. For the SVC (fpp) mode, we used the Cray Fortran data dependency analyzer FPP to look for possible parallelism and to automatically produce a transformed Fortran source code for the translator FMP <ref> [Cray90] </ref>. For SVC (kap), we used the automatic code restructurer KAP to replace FPP for code transformations [Kuck88]. For SVC (-ei), we enforced both vectorization and parallelization to be applied only to inner loops.
Reference: [GaCP90] <author> Hui Gao, Hsin-Chu Chen, and Edward J. Plaskacz, </author> <title> Initial Benchmark--ing and Performance Analysis for WHAMS3D, </title> <type> CSRD Tech. </type> <institution> Rept. 1054, CSRD, Univ. of Illinois at Urbana-Champaign, </institution> <month> November </month> <year> 1990. </year>
Reference-contexts: The execution timings are shown in Table 3, and the overall speedups based on the optimized scaler performance of the W0 version are shown in Table 4. Detailed timing information of this version at the subroutine level can be found in <ref> [GaCP90] </ref> and will 10 not be repeated in this report. Note that all execution timings are in user CPU seconds and were obtained via the GPROF profiling facility for the entire process, including the input of data and the output of results.
Reference: [Kuck88] <author> Kuck & Associates, Inc., </author> <title> KAP User's Guide, </title> <address> Champaign, IL, </address> <year> 1988. </year> <month> 20 </month>
Reference-contexts: For the SVC (fpp) mode, we used the Cray Fortran data dependency analyzer FPP to look for possible parallelism and to automatically produce a transformed Fortran source code for the translator FMP [Cray90]. For SVC (kap), we used the automatic code restructurer KAP to replace FPP for code transformations <ref> [Kuck88] </ref>. For SVC (-ei), we enforced both vectorization and parallelization to be applied only to inner loops.
References-found: 7

