URL: http://www.cs.tamu.edu/faculty/bettati/TechReports/TR97-008/tr97-008.ps
Refering-URL: http://www.cs.tamu.edu/faculty/bettati/tech_reports.html
Root-URL: http://www.cs.tamu.edu
Email: fhameshc,bettatig@cs.tamu.edu  
Title: Replicating IP Services  
Author: Hamesh Chawla Riccardo Bettati 
Date: 97-008  
Address: H.R. Bright Building College Station, TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report  
Abstract: With the explosive growth of demand for services on the Internet, the networking infrastructure (routers, protocols, servers) is under considerable stress. Mechanisms are needed for current and future IP services to scale in a client-transparent way. We present HydraNet, an infrastructure that allows to dynamically distribute IP services by placing service agents (caching agents, mirrors, replicas) that are under the server's control at strategic points in the internetwork. HydraNet is based on replicating transport-level service access points (TSAPs) for transparent distribution or replication of IP services. Measurements on a local testbed show that the overhead of our scheme is small. TSAP replication is widely applicable. We use HydraNet to implement active Web caching and highly fault-tolerant servers. Similarly, it can be used to implement application gateways, for example intelligent multicast reflectors for media-on-demand. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Andresen, T. Yang and O.H. Ibarra. SWEB: </author> <title> Towards a Scalable World Wide Web Server on Multicomputers. </title> <booktitle> Proceedings of the IPPS'96, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: It forces the request redirection by issuing a HTTP "302 Temporarily Moved" status code to the client, along with the URL for the "best" server. A similar approach is used in the SWEB project <ref> [1] </ref> for clusters of servers. This approach is highly application specific. Locally Distributed IP Addresses: A number of schemes, mostly based on variations of network address translation (NAT) [11], have been proposed that have a cluster of servers be visible under the same IP address.
Reference: [2] <author> E. Anderson, D. Patterson and E. Brewer. </author> <title> The Magicrouter, an Application of Fast Packet Interposing. </title> <address> URL http://http.cs.berkeley.edu/~eanders/projects/magicrouter. </address>
Reference-contexts: Typically, the server-side router makes one IP address visible and routes incoming requests to one of the several servers in the cluster. The different approaches differ in the details of the translation: While Cisco's LocalDirector [7] and the Magicrouter <ref> [2, 22] </ref> adhere rather strictly to NAT and have the router perform all the translations, IBM's TCP Router [3] allows reply packets from the cluster to be returned directly to the clients. NAT and similar schemes modify the source and destination IP addresses in the packet header.
Reference: [3] <author> C.R. Attanasio, S.E. Smith. </author> <title> A Virtual Multiprocessor Implemented By an Encapsulated Cluster of Loosely Coupled Computers. IBM Research Report, Advanced RISC Systems, </title> <address> RC18442, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: The different approaches differ in the details of the translation: While Cisco's LocalDirector [7] and the Magicrouter [2, 22] adhere rather strictly to NAT and have the router perform all the translations, IBM's TCP Router <ref> [3] </ref> allows reply packets from the cluster to be returned directly to the clients. NAT and similar schemes modify the source and destination IP addresses in the packet header.
Reference: [4] <author> M. Baentsch, L. Baum, G. Molter, S. Rothkugel and P. Sturm, </author> <title> Enhancing the Web's Infrastructure: From Caching to Replication, </title> <booktitle> IEEE Internet Computing, </booktitle> <month> March </month> <year> 1997. </year>
Reference-contexts: Mirrored data is not easily detectable as such by cache systems, and greatly increases the space requirement on caches for them to be effective. To overcome some of these limitations, a number of push-based methods have been proposed, which give more control to servers about what is being cached <ref> [4, 19] </ref>. In these schemes, servers push data to the caches, effectively eliminating the problems of cache consistency and the need for mirroring. With the Internet connectivity becoming truly global, however, new large-scale services, beyond the Web, must be expected.
Reference: [5] <author> C.M. Bowman, P.B. Danzig, D.R.Hardy, U.Manber and Michael Schwartz, </author> <title> The Harvest Information Discovery and Access System, Computer Networks and ISDN Systems, </title> <booktitle> 28 (1995), </booktitle> <pages> pp. 119-125 </pages>
Reference-contexts: In the domain of Web scaling, for example, caching (typically client-based or proxy-based ) is widely seen as the solution to handle the exploding user demands. A large infrastructure for Web caching has been put in place <ref> [20, 5, 15] </ref>. Although client-based and proxy-based caching greatly help in reducing congestion due to Web traffic in general, a variety of factors undercut their effectiveness: First, not all data is cacheable. Some data may be refreshed at a high rate, which greatly reduces the benefits of caching.
Reference: [6] <author> T. Brisco. </author> <title> DNS Support for Load Balancing. </title> <type> RFC 1794 16 </type>
Reference-contexts: Section 7 presents the conclusions. 2 Related Work A number of schemes have been proposed that address IP service replication and load balancing of distributed servers. DNS Based Approaches: The Internet naming server provides support for load balancing by having a one-to-many mapping from hostnames to IP addresses <ref> [6] </ref>. Early on, a round-robin DNS was used with success for the NCSA Web server [13]. Replicating services using naming mechanisms has a number of disadvantages. First, caching at clients must be kept limited in order to take the most advantage of the round-robin effect.
Reference: [7] <institution> Cisco Systems, LocalDirector, </institution> <note> URL http://www.cisco.com/warp/public/751/lodir/index.html. </note>
Reference-contexts: Typically, the server-side router makes one IP address visible and routes incoming requests to one of the several servers in the cluster. The different approaches differ in the details of the translation: While Cisco's LocalDirector <ref> [7] </ref> and the Magicrouter [2, 22] adhere rather strictly to NAT and have the router perform all the translations, IBM's TCP Router [3] allows reply packets from the cluster to be returned directly to the clients.
Reference: [8] <author> Cisco Systems, </author> <title> Scaling the World Wide Web, </title> <address> URL http://www.cisco.com/warp/public/751/lodir/swww wp.html. </address>
Reference-contexts: We described earlier the problems caused to Web caches by Netscape's hidden mirroring. This is an example where intelligent clients may actually undermine network-wide efforts for service scaling. Protocol-Specific Replication: Cisco's DistributedDirector uses a HTTP specific protocol to redirect requests to other servers <ref> [8] </ref>. It forces the request redirection by issuing a HTTP "302 Temporarily Moved" status code to the client, along with the URL for the "best" server. A similar approach is used in the SWEB project [1] for clusters of servers. This approach is highly application specific. <p> All these schemes are limited to localized clusters of servers, typically on the same subnet. To allow for multiple routers [10], or for clusters that are distributed over multiple domains <ref> [8] </ref>, these approaches resort to a combination with round-robin DNS, which we described above. 3 HydraNet: Architecture for IP Service Repli cation An architecture for service replication must be able to selectively and dynamically replicate IP services (not hosts) fully transparently to the clients.
Reference: [9] <author> O.P. Damani, P.E. Chung, Y. Huang, C. Kintala, Y.-M. Wang. ONE-IP: </author> <title> Techniques for Hosting a Server on a Cluster of Machines. </title> <booktitle> Hyperproceedings of the Sixth International World Wide Web Conference, </booktitle> <address> URL http://www.nttlabs.com/HyperNews/get/PAPER196.html </address>
Reference-contexts: Some higher-level protocols and applications that use IP addresses in the application (for example ICMP or FTP) may not work correctly without appropriate - application-specific patches of NAT [11]. A different approach is used in One-IP <ref> [9] </ref>, where incoming requests are processed by a dispatcher, which forwards them to the cluster nodes. The cluster nodes use the ifconfig alias option to attach two IP addresses to the network interface.
Reference: [10] <author> D.M. Dias, W. Kish, R. Mukherjee and R. Tewari. </author> <title> A Scalable and Highly Available Web Server. </title> <booktitle> Proceedings of COMPCON'96, </booktitle> <address> Santa Clara, CA, </address> <year> 1996. </year>
Reference-contexts: The secondary address is shared among all cluster nodes, and is the cluster address, which is visible to the clients. All these schemes are limited to localized clusters of servers, typically on the same subnet. To allow for multiple routers <ref> [10] </ref>, or for clusters that are distributed over multiple domains [8], these approaches resort to a combination with round-robin DNS, which we described above. 3 HydraNet: Architecture for IP Service Repli cation An architecture for service replication must be able to selectively and dynamically replicate IP services (not hosts) fully transparently
Reference: [11] <author> K. Egevang and P. Francis. </author> <title> The IP Network Address Translator (NAT). </title> <type> RFC 1631, </type> <month> May </month> <year> 1994. </year>
Reference-contexts: A similar approach is used in the SWEB project [1] for clusters of servers. This approach is highly application specific. Locally Distributed IP Addresses: A number of schemes, mostly based on variations of network address translation (NAT) <ref> [11] </ref>, have been proposed that have a cluster of servers be visible under the same IP address. Typically, the server-side router makes one IP address visible and routes incoming requests to one of the several servers in the cluster. <p> NAT and similar schemes modify the source and destination IP addresses in the packet header. Some higher-level protocols and applications that use IP addresses in the application (for example ICMP or FTP) may not work correctly without appropriate - application-specific patches of NAT <ref> [11] </ref>. A different approach is used in One-IP [9], where incoming requests are processed by a dispatcher, which forwards them to the cluster nodes. The cluster nodes use the ifconfig alias option to attach two IP addresses to the network interface. <p> If a match is found, 1 An alternative may be to use Network Address Tranlation (NAT) <ref> [11] </ref>, which does not carry the overhead of the encapsulation header. Unfortunately, the use of NAT quickly uses up subnetworks and generally complicates system management. 7 the data is deposited at the appropriate socket buffer. The flexibility of this approach is illustrated in Figure 1.
Reference: [12] <author> J. Gwertzman, M.Seltzer, </author> <title> The Case for Geograhical Push Caching URL http://www.nlanr.net/Cache/. </title>
Reference: [13] <author> T. Kwan, R. McGrath and D. Reed, </author> <title> NCSA's World Wide Web Server: Design and Performance, </title> <journal> Computer, </journal> <volume> Vol. 28, No. 11, </volume> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: DNS Based Approaches: The Internet naming server provides support for load balancing by having a one-to-many mapping from hostnames to IP addresses [6]. Early on, a round-robin DNS was used with success for the NCSA Web server <ref> [13] </ref>. Replicating services using naming mechanisms has a number of disadvantages. First, caching at clients must be kept limited in order to take the most advantage of the round-robin effect. This puts substantial load on the name servers.
Reference: [14] <author> S. Landis and S. Maffeis, </author> <title> Building Reliable Distributed Systems with CORBA, Theory and Practice of Object Systems, </title> <publisher> John Wiley, </publisher> <address> New York. </address> <note> (to appear) </note>
Reference-contexts: The versatility of replicating TSAPs extends far beyond what we described in Section 6. For example, transparent replication of services is an alternative to the use of multicast approaches for realizing fault-tolerant servers. In the context of CORBA, for example, current efforts to provide reliable ORB technology (e.g. <ref> [14] </ref>) rely mostly on multicast capabilities at protocol level, and typically require clients to use these capabilities as well. HydraNet would allow to replicate ORBs over several host servers.
Reference: [15] <institution> National Laboratory for Applied Research. A Distributed Testbed for National Information Provisioning. </institution> <note> URL http://www.nlanr.net/Cache/. </note>
Reference-contexts: In the domain of Web scaling, for example, caching (typically client-based or proxy-based ) is widely seen as the solution to handle the exploding user demands. A large infrastructure for Web caching has been put in place <ref> [20, 5, 15] </ref>. Although client-based and proxy-based caching greatly help in reducing congestion due to Web traffic in general, a variety of factors undercut their effectiveness: First, not all data is cacheable. Some data may be refreshed at a high rate, which greatly reduces the benefits of caching.
Reference: [16] <institution> National Laboratory for Applied Research. </institution> <note> Cache Breakers. URL http://www.nlanr.net/~map/cache/breakers.html. </note>
Reference-contexts: Some data may be refreshed at a high rate, which greatly reduces the benefits of caching. Second, caching takes away control. A number of sites are reluctant to have their data cached, for a variety of reasons. By bypassing the caching mechanisms, such sites become effectively "cache breakers" <ref> [16] </ref>. The recent severe and widely publicized congestion of NorthWestNet by the release of Microsoft's Internet Explorer 3.0 happened in this way.
Reference: [17] <institution> National Laboratory for Applied Research. </institution> <note> Insight into Current Web Caching Issues: Research Questions. URL http://ircache.nlarn.net/Cache/Learn/learn-2.html </note>
Reference: [18] <author> C. Perkins. </author> <title> IP Mobility Support. Internet Draft of the IETF, </title> <month> January </month> <year> 1995. </year>
Reference-contexts: This allows to dynamically, and transparently, install agents of server programs at strategic locations (for example "near" large client populations) and to proactively diffuse load by appropriately translating and consolidating client requests. We borrow the general idea for the support of replicated services from Mobile IP <ref> [18] </ref>. In the proposed Mobile IP protocol, the home agent of the mobile node forwards incoming packets to the roaming mobile node by tunnelling them to its current foreign 6 agent, which then passes them to the mobile node.
Reference: [19] <author> M. Seltzer, </author> <title> The World Wide Web: Issues and Challenges, </title> <note> URL http://www/eecs/harvard.edu/margo/slides/www.html. 17 </note>
Reference-contexts: Mirrored data is not easily detectable as such by cache systems, and greatly increases the space requirement on caches for them to be effective. To overcome some of these limitations, a number of push-based methods have been proposed, which give more control to servers about what is being cached <ref> [4, 19] </ref>. In these schemes, servers push data to the caches, effectively eliminating the problems of cache consistency and the need for mirroring. With the Internet connectivity becoming truly global, however, new large-scale services, beyond the Web, must be expected.
Reference: [20] <institution> Squid Internet Object Cache, </institution> <note> URL http://squid.nlanr.net/Squid. </note>
Reference-contexts: In the domain of Web scaling, for example, caching (typically client-based or proxy-based ) is widely seen as the solution to handle the exploding user demands. A large infrastructure for Web caching has been put in place <ref> [20, 5, 15] </ref>. Although client-based and proxy-based caching greatly help in reducing congestion due to Web traffic in general, a variety of factors undercut their effectiveness: First, not all data is cacheable. Some data may be refreshed at a high rate, which greatly reduces the benefits of caching. <p> Such components could be caching agents, mirrors, entire replica of servers, or others, and would run under the server's control. Such a scheme should be able to support current and future IP services, and not rely on a service-specific infrastructure (such as Squid <ref> [20] </ref> for the Web). In addition, this scheme should remain invisible for the clients. In this paper, we describe an infrastructure that allows to dynamically replicate IP services to have them adapt to the existing network and server load and service demand.
Reference: [21] <author> D.L. Tennenhouse, J.M. Smith, W.D. Sincoskie, D.J. Wetherall, G.J. Minden. </author> <title> A Survey of Active Network Research. </title> <journal> IEEE Communications, </journal> <month> January </month> <year> 1997. </year>
Reference: [22] <author> D.A. Patterson, T.E. Anderson, D.E. Culler. </author> <title> NOW Progress Report, </title> <address> May'97. URL http://now.cs.berkeley.edu/Progress/Now. </address>
Reference-contexts: Typically, the server-side router makes one IP address visible and routes incoming requests to one of the several servers in the cluster. The different approaches differ in the details of the translation: While Cisco's LocalDirector [7] and the Magicrouter <ref> [2, 22] </ref> adhere rather strictly to NAT and have the router perform all the translations, IBM's TCP Router [3] allows reply packets from the cluster to be returned directly to the clients. NAT and similar schemes modify the source and destination IP addresses in the packet header.
Reference: [23] <editor> W3C Replication and Caching Position Statement, </editor> <address> URL http://www.w3.org/pub/WWW/Propagation/Activity.html </address>
Reference: [24] <author> C. Yoshikawa, B. Chun, P. Eastham, A. Vahdat, T. Anderson, D. Culler. </author> <title> Using Smart Clients to Build Scalable Services. </title> <booktitle> USENIX 97, </booktitle> <month> January </month> <year> 1997. </year>
Reference-contexts: A more general approach is to download client programs from the server site in form of applets and to equip them with the appropriate protocol for load balancing and the contingency plans for server failures. Such an approach is taken in <ref> [24] </ref>. For many applications, in particular data dissemination, intelligent clients alone are of little benefit. We described earlier the problems caused to Web caches by Netscape's hidden mirroring. This is an example where intelligent clients may actually undermine network-wide efforts for service scaling.
Reference: [25] <author> L. Zhang, S. Floyd, and V. Jacobson, </author> <title> Adaptive Web Caching, NLANR Web Cache Workshop'97, </title> <address> Boulder, CO, </address> <month> June, </month> <year> 1997. </year> <month> 18 </month>
Reference-contexts: Similarly, copyright issues for cached data are eliminated, because the site controls the placement of its data. 4. The management of cache sites is simplified, because they are under centralized control of the original site. The configuration of distributed Web caches is a serious problem. As an example, <ref> [25] </ref> describes how fourteen separate Australian SQUID sites link themselves directly onto the cache tree in the U.S. Each page is fetched across the Pacific separately by each of the fourteen sites. 5. The generation of dynamically computed pages can be done at the cache sites. 6.
References-found: 25

