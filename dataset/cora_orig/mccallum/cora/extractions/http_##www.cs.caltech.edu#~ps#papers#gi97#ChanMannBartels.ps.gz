URL: http://www.cs.caltech.edu/~ps/papers/gi97/ChanMannBartels.ps.gz
Refering-URL: http://www.cs.caltech.edu/~ps/papers/gi97/
Root-URL: http://www.cs.caltech.edu
Email: lkychan@cgl.uwaterloo.ca smann@cgl.uwaterloo.ca rhbartel@cgl.uwaterloo.ca  
Title: World Space Surface Pasting  
Author: Leith Kin Yip Chan Stephen Mann Richard Bartels 
Keyword: Resume Keywords: Surfaces, User Interfaces  
Address: Waterloo, Ontario, N2L 3G1 CANADA  
Affiliation: Computer Science Department University of Waterloo  
Abstract: Surface pasting is a composition method that applies features to base surfaces to provide details on the base surfaces. The location and size of a feature are determined by the transformations of the feature's domain. By modifying the domain layout of pasted surfaces, we can manipulate the appearance of a feature interactively in a Domain Space User Interface. However, this domain user interface is inconvenient because the user cannot interact with the three-dimensional model directly. In this paper, we describe a World Space User Interface that maps actions on the three space surfaces to two-dimensional domain operations. Le collage de surface est une methode de composition qui ajoute des traits a une surface de base pour augmenter le niveau de detail de cette surface. La position et la taille d'un trait est determiner par des transformations du domaine de ce trait. En mod-ifiant le positionnement du domaine d'une surface coller on peut modifier l'apparence d'un trait inter activement par une Interface Usager de l'Espace Do-maine. Par contre, cette interface est inconvenante a utiliser parceque l'usager ne peut pas controler le modele tri-dimensionnel directement. Dans cet article, nous presentons une Interface Usager de l'Espace Monde qui converti des action sur use surface tri-dimensionnel a des actions sur le domaine bi-dimensionnel. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Barghiel. </author> <title> Feature oriented composition of b-spline surfaces. </title> <type> Master's thesis, </type> <institution> Univeristy of Waterloo, Waterloo, </institution> <address> Ontario, Canada N2L 3G1, </address> <year> 1994. </year> <note> (Available as Computer Science Department Technical Report CS-94-13). </note>
Reference-contexts: In their approach, detail surfaces, called overlays or features, are applied to a base surface in a hierarchical fashion to create a composite surface of increased complexity. Each overlay is a normal displacement from a conveniently chosen reference point. Barghiel <ref> [1] </ref> generalised Forsey's method, elaborated on a displacement method proposed by Bar-tels [4], and applied it to interactive, real-time modeling. To avoid computing the displacement of every point along the feature surface, he defined an approximate displacement mechanism that involved only the control vertices. <p> Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis <ref> [1] </ref> and a related paper [2]. Other researchers have devised schemes for locally adding surface detail (see, for example, [8, 9, 10, 11, 13]). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail. <p> Since the target polygon is not necessarily a rectangle, a linear transformation will not work, but a bi-linear transformation will be sufficient. Moreover, if both polygons are convex, the bi-linear transformation has an unique inverse from D back to D (a requirement for surface pasting <ref> [1] </ref>).
Reference: [2] <author> C. Barghiel, R. Bartels, and D. Forsey. </author> <title> Pasting spline surfaces. </title> <editor> In L. Schumaker M Daehlen, T. Lyche, editor, </editor> <booktitle> Mathematical Methods for Curves and Surfaces, </booktitle> <pages> pages 31-40. </pages> <publisher> Vanderbilt University Press, </publisher> <year> 1995. </year>
Reference-contexts: Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis [1] and a related paper <ref> [2] </ref>. Other researchers have devised schemes for locally adding surface detail (see, for example, [8, 9, 10, 11, 13]). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail.
Reference: [3] <author> R. Bartels, J. Beatty, and B. Barsky. </author> <title> An Introduction to Splines for Use in Computer Graphics and Geometric Modeling. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> Los Altos, California, </address> <year> 1987. </year>
Reference-contexts: A surface in tensor product B-spline form is defined as B (u; v) = i j i (u)N m where the P i;j are a set of control points that define the surface, and the N n i (u) are the B-spline basis functions <ref> [3] </ref>. To enhance the detail on a region of a B-spline tensor product surface, we can increase the number of control vertices by splitting patches (Boehm's algorithm [5] and the Oslo algorithm [3]). <p> of control points that define the surface, and the N n i (u) are the B-spline basis functions <ref> [3] </ref>. To enhance the detail on a region of a B-spline tensor product surface, we can increase the number of control vertices by splitting patches (Boehm's algorithm [5] and the Oslo algorithm [3]). However, only an entire row or an entire column of patches can be split, thus adding details (patches) to a particular region requires the addition of patches across the entire surface. This results in the addition of unnecessary control vertices and computation needed to evaluate the surface.
Reference: [4] <author> R. Bartels and D. Forsey. </author> <title> Spline overlay surfaces. </title> <type> Technical Report CS-92-08, </type> <institution> Univeristy of Waterloo, Waterloo, </institution> <address> Ontario, Canada N2L 3G1, </address> <year> 1991. </year>
Reference-contexts: Each overlay is a normal displacement from a conveniently chosen reference point. Barghiel [1] generalised Forsey's method, elaborated on a displacement method proposed by Bar-tels <ref> [4] </ref>, and applied it to interactive, real-time modeling. To avoid computing the displacement of every point along the feature surface, he defined an approximate displacement mechanism that involved only the control vertices. This approximation technique is called surface pasting.
Reference: [5] <author> W. Boehm. </author> <title> Inserting new knots into a b-spline curve. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 12 </volume> <pages> 199-201, </pages> <year> 1980. </year>
Reference-contexts: To enhance the detail on a region of a B-spline tensor product surface, we can increase the number of control vertices by splitting patches (Boehm's algorithm <ref> [5] </ref> and the Oslo algorithm [3]). However, only an entire row or an entire column of patches can be split, thus adding details (patches) to a particular region requires the addition of patches across the entire surface.
Reference: [6] <author> L. K. Y. Chan. </author> <title> World space user interface for surface pasting. </title> <type> Master's thesis, </type> <institution> Univeristy of Waterloo, Waterloo, </institution> <address> Ontario, Canada N2L 3G1, </address> <year> 1996. </year> <note> Available on WWW as ftp://cs-archive.uwaterloo.ca/cs-archive/CS-96-32/. </note>
Reference-contexts: In this paper, we describe PasteInterface, a World Space User Interface <ref> [6] </ref> that maps three-space user actions to two-space domain operations so that the user can manipulate the three-dimensional composite surfaces directly. This software was implemented on top of the Spline Library of the University of Waterloo [12] and OpenInventor [14].
Reference: [7] <author> S. Coquillart. </author> <title> Extended free-form deformation: A sculpturing tool for 3d geometric modeling. </title> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings), </booktitle> <volume> 24(4) </volume> <pages> 187-196, </pages> <year> 1990. </year>
Reference-contexts: However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail. Coquillart devised a scheme that allows you to add and edit local detail by using free-form deformation to locally deform space in the area you wish to change <ref> [7] </ref>. However, this technique requires functionally composing the base surface with the feature deformation, which creates a surface that is not in standard B-spline form.
Reference: [8] <author> D. Forsey and R. Bartels. </author> <title> Hierarchical b-spline refinement. </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> 22(4) </volume> <pages> 205-212, </pages> <year> 1988. </year>
Reference-contexts: This results in the addition of unnecessary control vertices and computation needed to evaluate the surface. An alternative way to add detail to the surface, aimed at maintaining a low number of control vertices, was proposed by Forsey and Bartels <ref> [8] </ref>. In their approach, detail surfaces, called overlays or features, are applied to a base surface in a hierarchical fashion to create a composite surface of increased complexity. Each overlay is a normal displacement from a conveniently chosen reference point. <p> Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis [1] and a related paper [2]. Other researchers have devised schemes for locally adding surface detail (see, for example, <ref> [8, 9, 10, 11, 13] </ref>). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail.
Reference: [9] <author> B. Fowler. </author> <title> Geometric manipulation of tensor product surfaces. </title> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> 25(2) </volume> <pages> 101-108, </pages> <year> 1992. </year>
Reference-contexts: Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis [1] and a related paper [2]. Other researchers have devised schemes for locally adding surface detail (see, for example, <ref> [8, 9, 10, 11, 13] </ref>). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail.
Reference: [10] <author> W. Hsu, J. Hughes, and H. Kaufman. </author> <title> Direct manipulation of free-form deformations. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(2) </volume> <pages> 177-184, </pages> <year> 1992. </year>
Reference-contexts: Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis [1] and a related paper [2]. Other researchers have devised schemes for locally adding surface detail (see, for example, <ref> [8, 9, 10, 11, 13] </ref>). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail.
Reference: [11] <author> N. Matsuki. </author> <title> An interactive shape modification method for B-spline curves and surfaces, </title> <address> pages 385-397. </address> <publisher> Elsevier (North-Holland) (IFIP), </publisher> <year> 1992. </year>
Reference-contexts: Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis [1] and a related paper [2]. Other researchers have devised schemes for locally adding surface detail (see, for example, <ref> [8, 9, 10, 11, 13] </ref>). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail.
Reference: [12] <author> A. Vermeulen and R. Bartels. </author> <title> C++ splines classes for prototyping. </title> <booktitle> In Curves and Surfaces in Computer Vision and Graphics II, </booktitle> <pages> pages 1610 121-131, </pages> <address> Bellingham, Washington, </address> <year> 1992. </year> <booktitle> SPIE Proceedings, SPIE '92. </booktitle>
Reference-contexts: In this paper, we describe PasteInterface, a World Space User Interface [6] that maps three-space user actions to two-space domain operations so that the user can manipulate the three-dimensional composite surfaces directly. This software was implemented on top of the Spline Library of the University of Waterloo <ref> [12] </ref> and OpenInventor [14]. The goal of this research was to find operations in the world 3-space that naturally map to the two-dimensional domain functions used in surface pasting. Thus, the focus of this paper is on the mathematics behind these user interface operations.
Reference: [13] <author> W. Welch and A. Witkin. </author> <title> Variational surface modeling. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(2) </volume> <pages> 157-166, </pages> <year> 1992. </year>
Reference-contexts: Thus, the focus of this paper is on the mathematics behind these user interface operations. The mathematical details of the pasting process itself can be found in Barghiel's thesis [1] and a related paper [2]. Other researchers have devised schemes for locally adding surface detail (see, for example, <ref> [8, 9, 10, 11, 13] </ref>). However, while these methods allow you to add local detail, they are not particularly amenable to editing and repositioning this detail.
Reference: [14] <author> J. Wernecke. </author> <title> Programming Object-Oriented 3D Graphics with Open Inventor. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1994. </year>
Reference-contexts: This software was implemented on top of the Spline Library of the University of Waterloo [12] and OpenInventor <ref> [14] </ref>. The goal of this research was to find operations in the world 3-space that naturally map to the two-dimensional domain functions used in surface pasting. Thus, the focus of this paper is on the mathematics behind these user interface operations. <p> The following sections talk about the pasting process in more detail. 3.1 Moving the Unpasted Feature The user manipulates the unpasted feature via an OpenInventor 3D manipulator called a transformation box <ref> [14] </ref>. This transformation box consists of handles, called draggers, as shown in Figure 2. There are three sets of draggers: one for translation, one for scaling and the remaining one for rotation. Their functions are shown in Table 1.
References-found: 14

