URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P603.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts96.htm
Root-URL: http://www.mcs.anl.gov
Title: STALK: An Interactive Virtual Molecular Docking System  
Author: David Levine Michael Facello Philip Hallstrom Greg Reeder Brian Walenz Fred Stevens 
Abstract: Several recent technologies|genetic algorithms, parallel and distributed computing, virtual reality, and high-speed networking|provide the foundation for a new approach to the computational study of molecular interactions. Parallel genetic algorithms are an efficient and effective means to explore the large search spaces typical of these problems, while virtual reality provides an immersive environment for visualizing the interactions. In this paper we discuss the STALK system, which uses high-speed networking to couple a parallel genetic algorithm to a virtual reality environment. This combination allows a local or remote user to interact in real-time with the simulation through the virtual reality environment. Molecular docking experiments using an IBM SP parallel computer and a CAVE virtual reality environment are discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bryson. </author> <title> Virtual reality in scientific visualization. </title> <journal> Communications of the ACM, </journal> <volume> 39(5) </volume> <pages> 62-71, </pages> <year> 1996. </year>
Reference-contexts: In this way, virtual reality strives to be a more natural user interface. It allows the scientist to focus on the data rather than the computer interface and to take advantage of the human ability to process 3-D spatial information <ref> [1, 13] </ref>. The CAVE 1 (CAVE Automatic Virtual Environment) [4] is the virtual reality system we used. The CAVE is a 10 fi 10 fi 9-foot cube in which the user is surrounded by stereoscopic computer images rendered on the walls and floor.
Reference: [2] <author> K. Clark and Ajay. </author> <title> Flexible ligand docking without parameter adjustment across four ligand-receptor complexes. </title> <journal> J. Comp. Chem., </journal> <volume> 16 </volume> <pages> 1210-1226, </pages> <year> 1995. </year>
Reference-contexts: Success is highly dependent on the thoroughness of the search strategy [16]. The effectiveness of genetic algorithms as search optimization techniques has prompted recent interest in its application to docking issues <ref> [2, 7, 12, 22] </ref>. Our goal is to study protein-ligand docking. Numerically, this is formulated as an optimization problem where the goal is to minimize the free energy of the molecular system by maximizing the intermolecular interaction energy between the two molecules.
Reference: [3] <author> C. Cruz-Neira, R. Langley, and P. Bash. </author> <title> VIBE: A virtual biomolecular environment for interactive molecular modeling, </title> <note> 1996. To appear in Computers & Chemistry. </note>
Reference-contexts: This interactive capability allows scientists to use their intuition to assist the algorithm in finding a low-energy conformation, or to specify alternative starting positions from which to study the docking process. A recent effort, similar in spirit to STALK, is VIBE <ref> [3] </ref>. VIBE couples a CAVE and IBM SP together in the context of a molecular dynamics algorithm. 8 5 Results In this section we discuss our early experiences with STALK. We performed the experiments in Section 5.1 to measure the efficiency and accuracy of the numerical simulation program.
Reference: [4] <author> C. Cruz-Neira, D. Sandin, and T. DeFanti. </author> <title> Surround-screen projection-based virtual reality: </title> <booktitle> The design and implementation of the CAVE. In ACM SIGGRAPH '93 Proceedings, </booktitle> <pages> pages 135-142. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1993. </year> <month> 14 </month>
Reference-contexts: In this way, virtual reality strives to be a more natural user interface. It allows the scientist to focus on the data rather than the computer interface and to take advantage of the human ability to process 3-D spatial information [1, 13]. The CAVE 1 (CAVE Automatic Virtual Environment) <ref> [4] </ref> is the virtual reality system we used. The CAVE is a 10 fi 10 fi 9-foot cube in which the user is surrounded by stereoscopic computer images rendered on the walls and floor.
Reference: [5] <author> Message Passing Interface Forum. </author> <title> MPI: A message-passing interface standard. </title> <journal> International J. Supercomp. Appls., </journal> <volume> 8(3/4), </volume> <year> 1994. </year>
Reference-contexts: In this model, software processes are mapped onto the computer's nodes and communicate by passing messages|transferring data from the address space of one process into the address space of another process. The Message Passing Interface (MPI) is a recently defined standard for message-passing <ref> [5, 8] </ref>. MPI defines a set of functions, parameters, and their behavior. MPI was designed by a large group of parallel-computer vendors, computer researchers, and application developers as a standard for message passing. Both vendor-specific and third-party versions of MPI exist.
Reference: [6] <author> I. Foster, J. Geisler, B. Nickless, W. Smith, and S. Tuecke. </author> <title> Software Infrastructure for the I-WAY High-Performance Distributed Computing Experiment. </title> <booktitle> In Proceeeding of the Fifth IEEE Symposium on High Performance Distributed Computing. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Much of the I-WAY consisted of existing fiber-optic lines that commercial long--distance carriers already had in place. The I-WAY network supported the Internet protocol (IP) over ATM. One role of the I-Soft <ref> [6] </ref> I-WAY software environment was to schedule the I-WAY computational resources.
Reference: [7] <editor> D. Gehlhaar, G. Verkhivker, P. Rejto, C. Sherman, D. Fogel, L. Fogel, and S. Freer. </editor> <title> Molecular recognition of the inhibitor AG-1343 by HIV-1 protease: Conformationally flexible docking by evolutionary programming. </title> <journal> Chemistry & Biology, </journal> <volume> 2 </volume> <pages> 317-324, </pages> <year> 1995. </year>
Reference-contexts: Success is highly dependent on the thoroughness of the search strategy [16]. The effectiveness of genetic algorithms as search optimization techniques has prompted recent interest in its application to docking issues <ref> [2, 7, 12, 22] </ref>. Our goal is to study protein-ligand docking. Numerically, this is formulated as an optimization problem where the goal is to minimize the free energy of the molecular system by maximizing the intermolecular interaction energy between the two molecules.
Reference: [8] <author> W. Gropp, E. Lusk, and A. Skjellum. </author> <title> USING MPI Portable Parallel Programming with the Message-Passing Interface. </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1994. </year>
Reference-contexts: In this model, software processes are mapped onto the computer's nodes and communicate by passing messages|transferring data from the address space of one process into the address space of another process. The Message Passing Interface (MPI) is a recently defined standard for message-passing <ref> [5, 8] </ref>. MPI defines a set of functions, parameters, and their behavior. MPI was designed by a large group of parallel-computer vendors, computer researchers, and application developers as a standard for message passing. Both vendor-specific and third-party versions of MPI exist.
Reference: [9] <author> M. Helmer-Citterich and A. Tramontano. </author> <title> PUZZLE: A new method for automated protein docking based on surface shape complementarity. </title> <journal> J. Mol. Biol., </journal> <volume> 235 </volume> <pages> 1021-1031, </pages> <year> 1994. </year>
Reference-contexts: Calls to the CAVE library manage the computation of user-centered perspective, synchronization of frames across the walls, and tracking and wand I/O. 3 Molecular Docking Formulation Computational methods for the evaluation of protein-ligand and protein-protein interactions have received substantial attention in recent years (see, for instance, <ref> [9, 11, 16, 17, 18, 21] </ref> and references cited therein). This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible.
Reference: [10] <author> J. Holland. </author> <booktitle> Adaption in Natural and Artificial Systems. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1992. </year>
Reference-contexts: They were developed by Holland <ref> [10] </ref> and are based on an analogy with natural selection and population genetics. One popular use of GAs is for finding approximate solutions to difficult optimization problems. Unlike other optimization methods, genetic algorithms work with a population of candidate solutions instead of just a single solution.
Reference: [11] <author> R. Jackson and M. Sternberg. </author> <title> A continuum model for protein-protein interactions: Application to the docking problem. </title> <journal> J. Mol. Biol., </journal> <volume> 250 </volume> <pages> 258-275, </pages> <year> 1995. </year>
Reference-contexts: Calls to the CAVE library manage the computation of user-centered perspective, synchronization of frames across the walls, and tracking and wand I/O. 3 Molecular Docking Formulation Computational methods for the evaluation of protein-ligand and protein-protein interactions have received substantial attention in recent years (see, for instance, <ref> [9, 11, 16, 17, 18, 21] </ref> and references cited therein). This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible.
Reference: [12] <author> R. Judson, E. Jaeger, and A. Treasurywala. </author> <title> A genetic algorithm based method for docking flexible molecules. </title> <journal> Computers & Chemistry, </journal> <volume> 308 </volume> <pages> 191-206, </pages> <year> 1994. </year>
Reference-contexts: Success is highly dependent on the thoroughness of the search strategy [16]. The effectiveness of genetic algorithms as search optimization techniques has prompted recent interest in its application to docking issues <ref> [2, 7, 12, 22] </ref>. Our goal is to study protein-ligand docking. Numerically, this is formulated as an optimization problem where the goal is to minimize the free energy of the molecular system by maximizing the intermolecular interaction energy between the two molecules.
Reference: [13] <author> R. Kalawsky. </author> <title> The Science of Virtual Reality and Virtual Environments. </title> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: In this way, virtual reality strives to be a more natural user interface. It allows the scientist to focus on the data rather than the computer interface and to take advantage of the human ability to process 3-D spatial information <ref> [1, 13] </ref>. The CAVE 1 (CAVE Automatic Virtual Environment) [4] is the virtual reality system we used. The CAVE is a 10 fi 10 fi 9-foot cube in which the user is surrounded by stereoscopic computer images rendered on the walls and floor.
Reference: [14] <author> D. Levine. PGAPack, </author> <year> 1995. </year> <title> A public-domain parallel genetic algorithm library. </title> <note> Available by anonymous ftp from ftp.mcs.anl.gov in the directory pub/pgapack, file pgapack.tar.Z. </note>
Reference-contexts: In these cases, a master/slave model where the master process distributes strings to the slave processes for evaluation will usually be computationally efficient. The PGAPack <ref> [14, 15] </ref> parallel genetic algorithm library provides a parallel master/slave implementation and was used in our work. PGAPack is a general-purpose, data-structure-neutral, parallel genetic algorithm library.
Reference: [15] <author> D. Levine. </author> <title> User's Guide to the PGAPack Parallel Genetic Algorithm Library. </title> <type> Technical Report ANL-95/18, </type> <institution> Argonne National Laboratory, Mathematics and Computer Science Division, </institution> <month> June 23, </month> <year> 1995. </year>
Reference-contexts: In these cases, a master/slave model where the master process distributes strings to the slave processes for evaluation will usually be computationally efficient. The PGAPack <ref> [14, 15] </ref> parallel genetic algorithm library provides a parallel master/slave implementation and was used in our work. PGAPack is a general-purpose, data-structure-neutral, parallel genetic algorithm library.
Reference: [16] <author> E. Meng, D. Gschwend, J. Blaney, and I. Kuntz. </author> <title> Orientational sampling and rigid-body minimization in molecular docking. Proteins: </title> <journal> Struct., Funct., Gen, </journal> <volume> 17 </volume> <pages> 266-278, </pages> <year> 1993. </year>
Reference-contexts: Calls to the CAVE library manage the computation of user-centered perspective, synchronization of frames across the walls, and tracking and wand I/O. 3 Molecular Docking Formulation Computational methods for the evaluation of protein-ligand and protein-protein interactions have received substantial attention in recent years (see, for instance, <ref> [9, 11, 16, 17, 18, 21] </ref> and references cited therein). This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. <p> This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. As described by Kuntz and coworkers <ref> [16, 17, 18, 19] </ref>, docking methods can be characterized by three different strategies by which the interacting molecules are juxtapositioned. First, the ligand may be positioned manually, guided by some experimental data that provides clues to the identity of the interacting surface and to the complex evaluated by energy minimization. <p> Finally, in other cases, little a priori information about the geometry of the interaction is necessary, and exhaustive searches and evaluations of potential complex formations are made. Success is highly dependent on the thoroughness of the search strategy <ref> [16] </ref>. The effectiveness of genetic algorithms as search optimization techniques has prompted recent interest in its application to docking issues [2, 7, 12, 22]. Our goal is to study protein-ligand docking. <p> The energy, E, is computed by using a Lennard-Jones potential energy function for Van der Waals energy terms and Coulombic term for electrostatic contributions <ref> [16] </ref>. We define the following terms. Let P i be the set of atoms in molecule i (the protein or the ligand), with jP i j = n i . Let a ij be the jth atom of P i .
Reference: [17] <author> E. Meng, B. Shoichet, and I. Kuntz. </author> <title> Automated docking with grid-based energy evaluation. </title> <journal> J. Comp. Chem., </journal> <volume> 13 </volume> <pages> 505-524, </pages> <year> 1992. </year>
Reference-contexts: Calls to the CAVE library manage the computation of user-centered perspective, synchronization of frames across the walls, and tracking and wand I/O. 3 Molecular Docking Formulation Computational methods for the evaluation of protein-ligand and protein-protein interactions have received substantial attention in recent years (see, for instance, <ref> [9, 11, 16, 17, 18, 21] </ref> and references cited therein). This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. <p> This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. As described by Kuntz and coworkers <ref> [16, 17, 18, 19] </ref>, docking methods can be characterized by three different strategies by which the interacting molecules are juxtapositioned. First, the ligand may be positioned manually, guided by some experimental data that provides clues to the identity of the interacting surface and to the complex evaluated by energy minimization.
Reference: [18] <author> B. Shoichet, D. Bodian, and I. Kuntz. </author> <title> Molecular docking using shape descriptors. </title> <journal> J. Comp. Chem., </journal> <volume> 13 </volume> <pages> 380-397, </pages> <year> 1992. </year>
Reference-contexts: Calls to the CAVE library manage the computation of user-centered perspective, synchronization of frames across the walls, and tracking and wand I/O. 3 Molecular Docking Formulation Computational methods for the evaluation of protein-ligand and protein-protein interactions have received substantial attention in recent years (see, for instance, <ref> [9, 11, 16, 17, 18, 21] </ref> and references cited therein). This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. <p> This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. As described by Kuntz and coworkers <ref> [16, 17, 18, 19] </ref>, docking methods can be characterized by three different strategies by which the interacting molecules are juxtapositioned. First, the ligand may be positioned manually, guided by some experimental data that provides clues to the identity of the interacting surface and to the complex evaluated by energy minimization.
Reference: [19] <author> B. Shoichet and I. Kuntz. </author> <title> Matching chemistry and shape in molecular docking. </title> <journal> Protein Eng., </journal> <volume> 6 </volume> <pages> 723-732, </pages> <year> 1993. </year>
Reference-contexts: This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible. As described by Kuntz and coworkers <ref> [16, 17, 18, 19] </ref>, docking methods can be characterized by three different strategies by which the interacting molecules are juxtapositioned. First, the ligand may be positioned manually, guided by some experimental data that provides clues to the identity of the interacting surface and to the complex evaluated by energy minimization.
Reference: [20] <author> R. Varadarajan and F. Richards. </author> <title> Crystallographic structures of Ribonuclease S variants with nonpolar substitution at position 13: Packing and cavities. Biochemistry, </title> <address> 31:12315, </address> <year> 1992. </year>
Reference-contexts: We used the helix-forming S-peptide as a model ligand, and the S-protein as a model receptor. The S-peptide has 297 atoms, and the S-protein has 1,564 atoms. The coordinates for Ribonuclease S are taken from the Brookhaven Database entry, 1RBH <ref> [20] </ref>. Applying the potential of Eq. (1) to the coordinates from [20], an energy of 37:8 kcal/mol was calculated. To test the GA we randomly translated and rotated the S-peptide away from the S-protein and then used the numerical simulation program to attempt a redocking to the crys-tallographically determined position. <p> The S-peptide has 297 atoms, and the S-protein has 1,564 atoms. The coordinates for Ribonuclease S are taken from the Brookhaven Database entry, 1RBH <ref> [20] </ref>. Applying the potential of Eq. (1) to the coordinates from [20], an energy of 37:8 kcal/mol was calculated. To test the GA we randomly translated and rotated the S-peptide away from the S-protein and then used the numerical simulation program to attempt a redocking to the crys-tallographically determined position.
Reference: [21] <author> P. Walls and M. Sternberg. </author> <title> New algorithm to model protein-protein recognition based on surface complementarity: Applications to antibody-antigen docking. </title> <journal> J. Mol. Biol., </journal> <volume> 228 </volume> <pages> 277-297, </pages> <year> 1992. </year>
Reference-contexts: Calls to the CAVE library manage the computation of user-centered perspective, synchronization of frames across the walls, and tracking and wand I/O. 3 Molecular Docking Formulation Computational methods for the evaluation of protein-ligand and protein-protein interactions have received substantial attention in recent years (see, for instance, <ref> [9, 11, 16, 17, 18, 21] </ref> and references cited therein). This attention is prompted both by the fundamental and applied significance of these interactions, and by the improvements in computational resources that have made such methods feasible.
Reference: [22] <author> Y. Xiao and D. Williams. </author> <title> Genetic algorithms for docking of Actinomycin D and De-oxyguanosine molecules with comparison to the crystal structure of Actinomycin D-Deoxyguanosine complex. </title> <journal> J. Phys. Chem, </journal> <volume> 98 </volume> <pages> 7191-7200, </pages> <year> 1994. </year> <month> 16 </month>
Reference-contexts: Success is highly dependent on the thoroughness of the search strategy [16]. The effectiveness of genetic algorithms as search optimization techniques has prompted recent interest in its application to docking issues <ref> [2, 7, 12, 22] </ref>. Our goal is to study protein-ligand docking. Numerically, this is formulated as an optimization problem where the goal is to minimize the free energy of the molecular system by maximizing the intermolecular interaction energy between the two molecules.
References-found: 22

