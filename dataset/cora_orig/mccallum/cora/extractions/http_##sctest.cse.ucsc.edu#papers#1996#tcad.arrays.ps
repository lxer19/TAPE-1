URL: http://sctest.cse.ucsc.edu/papers/1996/tcad.arrays.ps
Refering-URL: http://www.cse.ucsc.edu/~fjf/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Detection of multiple faults in two-dimensional  
Author: ILAs Martine Schlag and F. Joel Ferguson 
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California at Santa Cruz  
Date: July 31, 1995  
Abstract: We provide test sets proportional to the sum of the two dimensions of the array for a large class of cells, which allow us to test rows (or columns) of cells of the array independently. Constant length test sets for array multipliers have been found under the single faulty cell model if the array is modified and otherwise test sets are proportional to the number of cells. We can verify the full adder array of a combinational n fi m multiplier in O(n + m) tests under the Multiple Faulty Cell (MFC) model. The entire multiplier, including the AND gates which generate the summands, can be verified after applying the same modifications which make the multiplier C-testable under the single faulty cell model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W.H. Kautz. </author> <title> Testing for faults in combinational cellular logic arrays. </title> <booktitle> In Proc. 8th Annu. Symp. Switching and Automata Theory, </booktitle> <pages> pages 161-173. </pages> <publisher> ACM, </publisher> <year> 1967. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10].
Reference: [2] <author> A.D. Friedman. </author> <title> Easily testable iterative systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-22(12):1061-1064, </volume> <month> December </month> <year> 1973. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10]. <p> The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively [1, 2, 3, 4, 5, 6, 7, 8] with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable <ref> [2] </ref>, that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10].
Reference: [3] <author> F.G. Gray and R.A. Thompson. </author> <title> Fault detection in bilateral arrays of combinational cells. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-27(12):1206-1213, </volume> <month> December </month> <year> 1978. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10].
Reference: [4] <author> R. Parthasarathy and S.M. Reddy. </author> <title> A testable design of iterative logic arrays. </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> CAS-28(11):1037-1045, </volume> <month> November </month> <year> 1981. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10].
Reference: [5] <author> W.-T. Cheng. </author> <title> Testing and error detection in iterative logic arrays. </title> <type> Technical Report UILU-ENG-85-2234, </type> <institution> University of Illimois at Urbana-Champaign, </institution> <month> August </month> <year> 1985. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10]. <p> Lower bounds presented in [15] show that ILAs composed of full adder cells are not C-testable under the MFC fault model. Wu-Tung Cheng claims in his Ph.D.thesis <ref> [5] </ref> and in an article [17] that a two-dimensional iterative logic array can be tested under the MFC model with a test size that is proportional to the number of rows in the array, if there is a special horizontal cell input, a, such that h (a; z) = (a) and
Reference: [6] <author> W.-T. Cheng and J. H. Patel. </author> <title> Testing in two-dimensional iterative logic arrays. </title> <booktitle> In Proceedings of Fault Tolerant Computing Symposium, </booktitle> <pages> pages 76-81. </pages> <publisher> IEEE, </publisher> <year> 1986. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10].
Reference: [7] <author> A. Chatterjee and J. Abraham. </author> <title> Test generation for arithmetic units by graph labelling. </title> <booktitle> In Proceedings of Fault Tolerant Computing Symposium, </booktitle> <pages> pages 284-289. </pages> <publisher> IEEE, </publisher> <year> 1987. </year> <month> 15 </month>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10]. <p> Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier <ref> [9, 7, 10] </ref>. Under the single faulty cell model it is assumed that at most one cell is faulty, and the fault may alter the cell's output function in any arbitrary way, as long as the cell remains combinational and the fault is permanent.
Reference: [8] <author> C.-W. Wu and P.R. Cappello. </author> <title> Easily testable iterative logic arrays. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-39(5):640-652, </volume> <month> May </month> <year> 1990. </year>
Reference-contexts: The arrays we shall consider are unidirectional in that signals only flow in one direction between adjacent cells. The problem of testing one-dimensional and two-dimensional arrays for single faults has been studied extensively <ref> [1, 2, 3, 4, 5, 6, 7, 8] </ref> with considerable attention on arithmetic circuits. Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier [9, 7, 10].
Reference: [9] <author> J.P. Shen and F.J. Ferguson. </author> <title> The design of easily testable VLSI array multipliers. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-33(6):554-560, </volume> <month> June </month> <year> 1984. </year>
Reference-contexts: Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier <ref> [9, 7, 10] </ref>. Under the single faulty cell model it is assumed that at most one cell is faulty, and the fault may alter the cell's output function in any arbitrary way, as long as the cell remains combinational and the fault is permanent. <p> A 4 fi 4 carry-save (CS) multiplier. impossibility of applying either of these vectors to more than one cell on the ith row. The proof of this is similar to that of Theorem 1 in <ref> [9] </ref>. To make it possible to generate a loop test for each row we modify the c output truth table of each basic cell in the way presented in [9]. <p> The proof of this is similar to that of Theorem 1 in <ref> [9] </ref>. To make it possible to generate a loop test for each row we modify the c output truth table of each basic cell in the way presented in [9]. The change in the carry truth table is that the carry output for hy; a; b; xi = 0001 and 0011 is 1, instead of 0. <p> These inputs may have non-0 values only during testing. When all the X and Y primary inputs to the multiplier are assigned 0, the cell inputs hy; a; b; xi equal to 0001 or 0011 never occur in the correctly functioning multiplier <ref> [9] </ref>. Hence the MCS multiplier functions exactly the same as the carry save multiplier in normal operation and does not affect the multiplication function of the array.
Reference: [10] <author> Sung Je Hong. </author> <title> The design of a testable parallel multiplier. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(3) </volume> <pages> 411-416, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: Researchers have modified the array multiplier to make it C-testable [2], that is, testable with a constant number of tests independent of the size of the array multiplier <ref> [9, 7, 10] </ref>. Under the single faulty cell model it is assumed that at most one cell is faulty, and the fault may alter the cell's output function in any arbitrary way, as long as the cell remains combinational and the fault is permanent.
Reference: [11] <author> C.H. Stapper, F.M. Armstrong, and K. Saji. </author> <title> Integrated circuit yield statistics. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 71(4) </volume> <pages> 453-470, </pages> <month> April </month> <year> 1983. </year>
Reference-contexts: This fault model subsumes the traditional single line stuck-at fault model and covers all multiple line stuck-at faults restricted to a single cell. Multiple defects, which often occur on an IC <ref> [11] </ref>, may affect multiple cells in the array. Multiple faulty cells may not be detected by tests based on a single faulty cell fault model.
Reference: [12] <author> F.J.O. Dias. </author> <title> Truth-table verification of an iterative logic array. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-25(6):605-613, </volume> <month> June </month> <year> 1976. </year>
Reference-contexts: Multiple defects, which often occur on an IC [11], may affect multiple cells in the array. Multiple faulty cells may not be detected by tests based on a single faulty cell fault model. In this paper, we consider the more general multiple faulty cell (MFC) model <ref> [12, 13] </ref> in which, any number of cells in the array can be faulty, and each faulty cell may have its output function altered in any arbitrary way, as long as each cell remains combinational and the fault is permanent. Dias developed methods for testing one-dimensional arrays under this model. <p> As before, the complete proof is presented in [15]. 2 We use the methods in <ref> [12, 13] </ref> to test each row independently. Observe that these tests are consistent with a multiplicand of all 0's except for a 1 corresponding to the row being tested. The multiplier is the pattern to be applied to the p inputs of the cells in the row.
Reference: [13] <author> E.M. Aboulhamid. </author> <title> Efficient testing and truth table verification of unilateral combinational iterative arrays. </title> <booktitle> Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 68-70, </pages> <year> 1985. </year>
Reference-contexts: Multiple defects, which often occur on an IC [11], may affect multiple cells in the array. Multiple faulty cells may not be detected by tests based on a single faulty cell fault model. In this paper, we consider the more general multiple faulty cell (MFC) model <ref> [12, 13] </ref> in which, any number of cells in the array can be faulty, and each faulty cell may have its output function altered in any arbitrary way, as long as each cell remains combinational and the fault is permanent. Dias developed methods for testing one-dimensional arrays under this model. <p> As before, the complete proof is presented in [15]. 2 We use the methods in <ref> [12, 13] </ref> to test each row independently. Observe that these tests are consistent with a multiplicand of all 0's except for a 1 corresponding to the row being tested. The multiplier is the pattern to be applied to the p inputs of the cells in the row.
Reference: [14] <author> B.A. Prasad and F.G. Gray. </author> <title> Multiple fault detection in arrays of combinational cells. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-24(8):794-802, </volume> <month> August </month> <year> 1975. </year>
Reference-contexts: Prasad and Gray provided test sets of length proportional to the number of cells (O (nm) tests for 1 an n fi m array) for a class of two-dimensional arrays under the MFC model <ref> [14] </ref>. We provide test sets of length proportional to the sum of the dimensions of the array (m + n for an n fi m array) which apply to cells meeting Dias' requirements and a weaker version of Prasad and Gray's requirements. <p> The conditions imposed on cells by Prasad and Gray for their O (mn) test set are equivalent to a cell being 6 both column-separable and row-separable <ref> [14] </ref>. The purpose of verifying the "column-separability" of each cell is to ensure that the inputs to a row can be controlled from the primary inputs of the array and that any faults in the row that modify the truth-table of the array will be observed at the primary outputs.
Reference: [15] <author> Martine Schlag and F. Joel Ferguson. </author> <title> Detection of multiple faults in two-dimensional ILAs. </title> <type> Technical Report UCSC-CRL-95-30, </type> <institution> University of California at Santa Cruz, Computer Engineering Department, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: He applied his result to this same class to derive test sets of length proportional to the number of rows, independent of the number of columns. Unfortunately, there is a fallacy in his proof <ref> [15] </ref>. In Section 2 we show that for a certain class of cells (column-separable cells), we can apply tests to the array which allow us to test each row independently. These tests exist for a restricted class of cells whose functions allow values to propagate down the columns independently. <p> An (n= log n) lower bound on the FA array of a multiplier <ref> [15] </ref> shows that this test set is within a log n factor of optimal. 2 Testing 2-D ILAs with tests sets proportional to the sum of the dimensions In this section, a test set for a class of two-dimensional ILAs is constructed by reducing the problem of testing a two-dimensional array <p> Having verified the column-separability of all cells, then it suffices to apply tests to verify the rows. The following theorem whose proof can be found in <ref> [15] </ref> summarizes this result. <p> The solution to this problem is to add additional tests to verify the truth table of the ripple carry adder under the MFC model. The 8n tests, T 3 000111 j for all 1 j n shown in <ref> [15] </ref>, when added to T 1 j , verify the truth table of the RCA in the n fi m CSM-SC. <p> This observation 10 is used to verify that the tests apply the expected inputs to a cell in the RCA. The detailed proof can be found in <ref> [15] </ref>. 2 Because of the ripple carry adder, we cannot use the same argument as in Lemma 1 to verify column separability. <p> It makes use of the correctness of the RCA cells and the same argument as in Lemma 2 to ensure that the carry output of a cell will be propagated along a row so that it can be observed. As before, the complete proof is presented in <ref> [15] </ref>. 2 We use the methods in [12, 13] to test each row independently. Observe that these tests are consistent with a multiplicand of all 0's except for a 1 corresponding to the row being tested. <p> We use the SIS hyabi = h100i for the state machine in which A = 0 and the SIS hyabi = h110i for the state machine in which A = 1. The complete row tests for the MCS multiplier is given in <ref> [15] </ref>. <p> The methods described in this paper cannot be used to provide a test for this array. However, a modification to the truth table of the cell allows us to generate a test set whose length is proportional to the sides of the array. Lower bounds presented in <ref> [15] </ref> show that ILAs composed of full adder cells are not C-testable under the MFC fault model. <p> Unfortunately, a counterexample can be constructed for the argument used in the proof of this result <ref> [15] </ref>. Although, the proof is not valid it is still an open question as to whether the tests for verifying column-separability are necessary or whether merely applying the row tests is sufficient.
Reference: [16] <author> W.-T.Cheng and J.H. Patel. </author> <title> A minimum test set for multiple fault detection in ripple carry adders. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(7):891-895, </volume> <month> July </month> <year> 1987. </year>
Reference-contexts: the value on all horizontal wires in the test T 0;1 , while 1 is the name assigned to all values on the vertical wires in T 0;1 . 7 Cheng and Patel obtain a minimum test set under the MFC model for the ripple-carry adder with only 11 tests <ref> [16] </ref>. Applying the Cheng and Patel tests to each row requires only 8n + 3 tests since three of the tests are the same for all rows. The total number of tests is m + n + 1 + 8n + 3 = 9n + m + 4. <p> Cheng and Patel presented a minimum row test for the RCA using the MFC fault model <ref> [16] </ref>. If this row test is used instead of the one presented, there are 11n T k tests of which all but 8n + 2 are shared with other tests.
Reference: [17] <author> W-T. Cheng and J.H. Patel. </author> <title> Testing in two-dimensional iterative logic arrays. </title> <journal> Comput. Math. Applic., </journal> 13(5/6):443-454, 1987. <volume> 16 </volume>
Reference-contexts: Lower bounds presented in [15] show that ILAs composed of full adder cells are not C-testable under the MFC fault model. Wu-Tung Cheng claims in his Ph.D.thesis [5] and in an article <ref> [17] </ref> that a two-dimensional iterative logic array can be tested under the MFC model with a test size that is proportional to the number of rows in the array, if there is a special horizontal cell input, a, such that h (a; z) = (a) and v (a; z) = (C
References-found: 17

