URL: http://ballade.cs.ucla.edu:8080/~cong/papers/asic93.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Placement and Placement Driven Technology Mapping for FPGA Synthesis  
Author: Tong Gao, Kuang-Chien Chen Jason Cong, Yuzheng Ding C. L. Liu 
Address: San Jose, CA 95134  Los Angeles, CA 90024 Urbana, IL 61801  
Affiliation: Fujitsu America, Inc. Computer Science Dept. Computer Science Dept.  University of California University of Illinois  
Abstract: Because of the more restrictive placement and routing constraints in Xilinx FPGA designs, conventional physical design tools for general placement and routing architectures usually do not work well for FPGA designs. Moreover, to g enerate high quality circuits which are easy to place and route, it is important to consider the specific physical design constraints during the technology mapping process. In this paper, we first present a performance driven placement algorithm specifically developed for the Xilinx FPGAs. We then present a new placement driven technology mapping algorithm which uses placement information to guide the mapping process. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Gao, P. M. Vaidya, and C. L. Liu, </author> <title> "A New Performance Driven Placement Algorithm," </title> <booktitle> in Proc. </booktitle> <address> ICCAD, </address> <year> 1991, </year> <pages> pp. 44-47. </pages>
Reference-contexts: In order to have a fast placement algorithm which is capable of generating placements with small maximum circuit delay, we developed a min-cut based performance driven placement algorithm for the Xilinx FPGAs. Our placement algorithm is based on the algorithm presented in <ref> [1] </ref>. A convex programming problem is first formulated to compute a set of upper-bounds on the net wire lengths according to the time requirements. A min-cut based placement algorithm is then used to place the CLBs and IOBs under the guidance of the upper-bounds. Even though the algorithm described in [1] <p> <ref> [1] </ref>. A convex programming problem is first formulated to compute a set of upper-bounds on the net wire lengths according to the time requirements. A min-cut based placement algorithm is then used to place the CLBs and IOBs under the guidance of the upper-bounds. Even though the algorithm described in [1] is capable of generating placements with small maximum circuit delay in reasonably short time, it is only capable of generating placements for gate-array circuits. Since the possible IOB locations (IOB slots) and the possible CLB locations (CLB slots) in an LCA are very specific, the algorithm in [1] needs to <p> described in <ref> [1] </ref> is capable of generating placements with small maximum circuit delay in reasonably short time, it is only capable of generating placements for gate-array circuits. Since the possible IOB locations (IOB slots) and the possible CLB locations (CLB slots) in an LCA are very specific, the algorithm in [1] needs to be modified to handle different possible distributions of the IOBs and the CLBs in different FPGA chips. <p> In our algorithm, a list of IOB slots and a list of CLB slots is kept for each region to be partitioned, and the IOB slots and the CLB slots can be distributed in arbitrary fashion. In <ref> [1] </ref>, it is assumed that the IOBs have pre-determined locations. This early commitment of IOBs to IOB slots with no information about the possible placement of CLBs may lead to poor placements. In our algorithm, the IOBs are placed together with the CLBs.
Reference: [2] <author> J. Cong and Y. Ding, </author> <title> "An Optimal Technology Mapping Algorithm for Delay Optimization in Lookup-Table Based FP-GA Designs," </title> <booktitle> in Proc. </booktitle> <address> ICCAD, </address> <year> 1992, </year> <pages> pp. 48-53. </pages>
Reference-contexts: In the case that r was sparse, lines 8 and 9 increase the value of br1 to 0.7 to avoid the generation of overly sparse place-ment. Placement Driven Technology Mapping As discussed in <ref> [2] </ref>, simple gate circuits in which each gate has only two inputs is a good starting point for technology mapping process. We shall call the circuit before technology mapping the initial circuit, and the circuit after technology mapping the final circuit. <p> One side effect of using the modified FlowMap algorithm is that the number of CLBs in the final circuits might be significantly larger than the number of CLBs in the circuits generated by the original FlowMap algorithm <ref> [2] </ref>. The increase in the number of CLBs are mainly caused by the heuristics used in both FlowMap algorithms during the postprocessing process for minimizing the number of CLBs. <p> In the FlowMap algorithms, a cut set that gives the minimum delay and the maximum volume (number of simple gates) is chosen to be mapped into an CLB to minimize the delay and the number of CLBs. In the unit delay model <ref> [2] </ref>, because all the nets have the same delay, t here are many minimum delay cuts and it is easy to find a cut that packs large number of simple gates. <p> The algorithms were tested on 12 combinational benchmark circuits which are summarized in the second and third columns of Table 1. To compare our placement algorithm with Xilinx placement algorithm, the FlowMap algorithm <ref> [2] </ref> is first used to map the simple gate circuits. The resulting circuits are summarized in the last three columns of Table 1.
Reference: [3] <author> J. Cong, Y. Ding, T. Gao, and K. Chen, </author> <title> "An Optimal Performance-Driven Technology Mapping Algorithm for LUT based FPGAs under Arbitrary Net_Delay Models," </title> <booktitle> in Proc. CAD & CG, </booktitle> <year> 1993, </year> <note> in press. </note>
Reference-contexts: In our algorithm, the performance driven placement algorithm described in Section 2 is first used to place the initial simple gate circuit. The placement information is then extracted from the placement generated, and a modified FlowMap <ref> [3] </ref> algorithm is used to map the simple gate circuit under the guidance of the placement information. Before the simple gate circuit can be placed, an artificial LCA with a set of IOBs and CLBs is generated to hold the simple gates and the primary IO pins. <p> To map the simple gate circuit under the guidance of the delay information, a modified FlowMap algorithm was developed which guarantees a minimum-delay mapping solutions under any giv en net delay estimation <ref> [3] </ref>. <p> In the unit delay model [2], because all the nets have the same delay, t here are many minimum delay cuts and it is easy to find a cut that packs large number of simple gates. However, in t he non-unit delay model <ref> [3] </ref>, there are few minimum delay cuts and they often pack fewer simple gates. Since the CLBs generated in the non-unit delay model contain fewer simple gates, more CLBs are needed to implement the circuit. <p> By rounding off the net delays, we are trading the accuracy of delay information with the number of CLBs. In <ref> [3] </ref>, a relaxation technique was also introduced to reduce the number of CLBs by relaxing the minimum delay requirement. Experimental Results Our placement and technology mapping algorithms were implemented in C and integrated into Berkeley logic synthesis tool sis .
Reference: [4] <author> R. J. Franics, J. Rose, and Z. Vranesic, </author> <title> "Technology Mapping for Lookup Table-Based FPGAs for Performance," </title> <booktitle> in Proc. </booktitle> <address> ICCAD, </address> <year> 1991, </year> <pages> pp. 568-571. </pages>
Reference: [5] <author> M. Pedram and N. Bhat, </author> <title> "Layout Driven Technology Mapping," </title> <booktitle> in Proc. 28th DAC, </booktitle> <year> 1991, </year> <pages> pp. 99-105. </pages>
Reference-contexts: However, this is almost never the case in reality. Since the routing is mostly decided by the placement, it is most important to consider the placement information during the technology mapping process. In <ref> [5] </ref>, a layout driven technology mapping algorithm was presented. In Section 3, we shall present a new tech-nology mapping algorithm which uses the placement information to guide the technology mapping process. Both our placement and placement driven technology mapping algorithms were implemented for Xilinx 3000 series FPGAs.
References-found: 5

