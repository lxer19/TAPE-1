URL: ftp://ftp.cs.man.ac.uk/pub/IPG/ir94.ps.Z
Refering-URL: http://www.cs.man.ac.uk/ipg/publications.html
Root-URL: http://www.cs.man.ac.uk
Email: email: ir@cs.man.ac.uk  
Title: An Implementation of the ISPW-6 Process Example  
Author: Ian Robertson 
Address: Manchester M13 9PL  
Affiliation: Department of Computer Science University of  
Abstract: This paper documents some of the work involved in describing the ISPW-6 process example in terms of graphical models and in terms of a modelling and enactment language PML. It further describes experiences in instantiating this model in ICL's Pro-cesswise Integrator support system, and outlines the lessons learnt and directions for future work. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R.F. Bruynoghe, J.M. Parker, and J.S. </author> <title> Rowles. PSS:A system for Process Enactment. </title> <booktitle> In Proceedings of the first International Conference on the Software Process, Manufacturing Complex Systems. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: The `Business Modeller's Workbench' offers a tool to model and to simulate process behaviour; the `Integrator' is a process integration and enactment system; and the `Guide' describes a particular methodology designed to exploit the features of these technologies. The technology of immediate interest is Processwise Integrator (PW Int) <ref> [1] </ref>. The system originated in the Alvey IPSE 2.5 project which concluded in 1989. ICL subsequently took up the software rights, hardened the system, and implemented the Process Control Engine in the Unix environment. As a first step to commercial release it was renamed Process Support System.
Reference: 2. <author> R. Conradi, C. Fernstrom, A. Fuggetta, and R. Snowdon. </author> <title> Towards a Reference Framework for Process Concepts. </title> <booktitle> In Proceedings EWSPT'92, volume 635 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The process is described clearly and concisely in narrative form as a list of activities defined with inputs, outputs, purpose, and responsibility. This effective statement of requirements corresponds to Feiler and Humphrey's [5] Process Definition level of abstraction, and to the PM2/PM3 meta-process level of Conradi et al <ref> [2] </ref>. A number of writers confirm the difficulty of representing process activity in a meaningful and concise manner. <p> Product model. The data structure and relationships. 5. Tool model. Description of tool architecture. This latter was considered more appropriate as a framework in which to describe the different facets of the subject process and the models needed were not exactly as postulated in <ref> [2] </ref>: the nature of the process is such that there was no need for a tool model, and, because of the focus on enactment, there was a distinct need for a model of the work infrastructure or environment appropriate for participants; this was called the Environment model. 3.2 Methods and tools <p> model, and, because of the focus on enactment, there was a distinct need for a model of the work infrastructure or environment appropriate for participants; this was called the Environment model. 3.2 Methods and tools The work described herein does not fall neatly into the phases of the PM1-5 meta-model <ref> [2] </ref>, as the focus of the ISPW-6 example is on the implementation of a model already fairly well-defined in narrative form, with adequate information to begin the PM3 Customisation phase.
Reference: 3. <author> R. Conradi and C. Liu. </author> <title> Process Modelling Paradigms: An Evaluation. </title> <booktitle> In Proceedings of the First European Workshop on Software Process Modeling, </booktitle> <address> Milan, </address> <year> 1991. </year>
Reference-contexts: The PCM was implemented in DRS 6000, and with other changes the Process Control Engine (PCE) became the Process Control Manager (PCM), and the language Process Modelling Language (PML) became Process Management Language. The current release of the system is ProcessWise Integrator 2. Liu and Conradi <ref> [3] </ref> report that the paradigm of PW Int is closest to that of Arcadia [13]. The semantic model is the process programming language, there being no generic model, and the application-specific model is defined as a program in that language.
Reference: 4. <author> R. Curtis, M. I. Kellner, and J. </author> <title> Over. Process Modelling. Comms. </title> <editor> of A. C. M., </editor> <volume> 35(9), </volume> <month> September </month> <year> 1992. </year>
Reference-contexts: This effective statement of requirements corresponds to Feiler and Humphrey's [5] Process Definition level of abstraction, and to the PM2/PM3 meta-process level of Conradi et al [2]. A number of writers confirm the difficulty of representing process activity in a meaningful and concise manner. Curtis <ref> [4] </ref> confirms the four perspectives widely accepted as being needed to describe a process: organisational, functional, behavioural, and informational, but it is not an easy matter to obtain clean abstractions of these perspectives with the tools currently at our disposal.
Reference: 5. <author> P.H. Feiler and W.S. Humphrey. </author> <title> Software Process Development And Enactment: Concepts And Definitions. </title> <booktitle> In Proceedings of the Second International Conference on the Software Process. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: The process is described clearly and concisely in narrative form as a list of activities defined with inputs, outputs, purpose, and responsibility. This effective statement of requirements corresponds to Feiler and Humphrey's <ref> [5] </ref> Process Definition level of abstraction, and to the PM2/PM3 meta-process level of Conradi et al [2]. A number of writers confirm the difficulty of representing process activity in a meaningful and concise manner. <p> All of them are `dynamic' <ref> [5] </ref>. The first comprises the application models 1 and 2, loaded into the basic PW Int persistent store containing initially an instance of class Base role.
Reference: 6. <author> A.W. Holt, H.R. Ramsey, and J.D. Grimes. </author> <title> Coordination System Technology as the Basis for a Programming Environment. </title> <journal> Electrical Communication, </journal> <volume> 57(4), </volume> <year> 1983. </year>
Reference-contexts: The ISPW-6 example assumes a `green field' implementation, i.e. there is no need to take into account current work practice and cultural influence. Certain of the representation methods advocated by PADM were also used in this study: the first using the role-interaction paradigm of process <ref> [6] </ref> to identify user roles (i.e. sociological roles within the organisation, commonly aligned to job descriptions), to map tasks or activities to these roles, and to identify at a coarse grained level discrete states and associated events of the process. The resulting diagrams are known as RADs [8].
Reference: 7. <author> M. Kellner, P. Feiler, A. Finkelstein, T. Katayama, L. Osterweil, M. Penedo, and H.D.Rombach. </author> <title> ISPW-6 Software Process Example. </title> <booktitle> In Proceedings of the First International Conference on Software Process, </booktitle> <address> Washington, 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: It is not an easy matter to make comparisons between technologies; not only because of the variety of approaches but also lack of a familiar and comprehensive model on which to base comparisons. In order to remedy this state of affairs, the ISPW-6 <ref> [7] </ref> example process was formulated. This was developed at the 6th International Software Process Workshop, and hereinafter will be referred to as the ISPW-6 Example, or simply as the example process.
Reference: 8. <author> M.A. Ould and C. Roberts. </author> <title> Defining Formal Models of the Software Development Process. In Pearl Brereton, editor, Software Engineering Environments. </title> <publisher> Ellis Horwood, </publisher> <year> 1987. </year>
Reference-contexts: The resulting diagrams are known as RADs <ref> [8] </ref>. The second was the use of the activity diagram (AD) to map activities independently of roles 1 .
Reference: 9. <author> C. Roberts. </author> <title> Describing and Acting Process Models with PML. </title> <booktitle> In Proceedings of 4th International Software Process Workshop, </booktitle> <address> Moretonhampstead, </address> <year> 1988. </year>
Reference-contexts: It is thus a process-centred environment comprising three elements: the PCM , the UI Servers, and the Applications Servers. The environment holds a model of the process network described in PML <ref> [9, 10] </ref>. The language identifies four principal classes: entities (records), activities (procedures), roles (encapsulations of data and behaviour) and interactions (corresponding uni-directional communications channels). These principal classes, along with numerous primitive classes, can be used to define the process network.
Reference: 10. <author> C. Roberts and A. Jones. </author> <title> Dynamics of Process Models in PML. </title> <booktitle> In Proceedings of 5th International Software Process Workshop, </booktitle> <address> Kennebunkport, </address> <year> 1989. </year>
Reference-contexts: It is thus a process-centred environment comprising three elements: the PCM , the UI Servers, and the Applications Servers. The environment holds a model of the process network described in PML <ref> [9, 10] </ref>. The language identifies four principal classes: entities (records), activities (procedures), roles (encapsulations of data and behaviour) and interactions (corresponding uni-directional communications channels). These principal classes, along with numerous primitive classes, can be used to define the process network.
Reference: 11. <author> J. Sa, B.C. Warboys, and J.A. Keane. OBM: </author> <title> A Specification Method for Modelling Organisational Process. </title> <booktitle> In Proceedings of the Workshop on Constraint Processing at the International Congress on Computer Systems and Applied Mathematics (CSAM'93), </booktitle> <address> St. Petersburg, </address> <year> 1993. </year>
Reference-contexts: Mention has been made (Section 4.3) of the difficulty of scheduling activity which is even of only moderate complexity. One possible solution to this problem lies in the use of OBM (Organisational Base Modelling) <ref> [11] </ref> to rigorously specify a process prior to implementation. OBM's use of operation patterns to express the often complex logic of activity behaviour may lead to a relatively simple method of defining guard statements of actions in PML.
Reference: 12. <author> B. Singh. </author> <title> Interconnected Roles (IR): A Coordination Model. </title> <type> Technical Report CT-084-92, </type> <institution> MCC, </institution> <year> 1992. </year>
Reference-contexts: It clearly indicates that as the process spans only a single group of users, the PM is responsible for controlling both the working of the process and the evolution of the process. The other significant concern in the organisation, the mapping of role sets <ref> [12] </ref> of group responsibilities such as the Design Review team to the organisation structure, was not addressed. Delegation issues were not present in the process example. 3.6 The Product Model As product is not the primary concern in this study, this model is trivial. <p> It is not yet possible to adequately represent the mapping of roles in organisations between groups and individuals. Singh <ref> [12] </ref> has recently made progress and uses the term role sets to represent group responsibility however they are difficult to manipulate and do not yet adequately cope with the dynamics of responsibility transfer, delegation and subsumption. 4.6 Knowledge of state Difficulty was found in communicating to the participants knowledge of current
Reference: 13. <author> R.N. Taylor et al. </author> <title> Foundations for the Arcadia Environment Architecture. </title> <editor> In Peter B. Henderson, editor, </editor> <booktitle> Proceedings of 3d ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments. In SIGSOFT Software Engineering Notes 13(5) pages 1-13 November 1988, ACM SIGPLAN Notices 24(2) February 1989. </booktitle>
Reference-contexts: The current release of the system is ProcessWise Integrator 2. Liu and Conradi [3] report that the paradigm of PW Int is closest to that of Arcadia <ref> [13] </ref>. The semantic model is the process programming language, there being no generic model, and the application-specific model is defined as a program in that language. The system takes the role/activity/interaction notion of defining the mechanism for causing transformation events and provides for their enactment in the same context.
Reference: 14. <author> B.C. Warboys. </author> <title> VME nodal architecture: a model for the realisation of a distributed system concept. </title> <journal> ICL Technical Journal, </journal> <volume> 4(3), </volume> <year> 1985. </year>
Reference-contexts: This allows identification of unit to be changed, choice of DE, QAE, and Reviewers for that particular change. The implemented process was enacted using ProcessWise Integrator 1.1, the Process Control Manager component available both in Unix on a SUN server, and in ICL VME <ref> [14] </ref> on an Estriel mainframe located at Manchester. The user interfaces ran on SUN workstations, usually at Manchester but not infrequently at Southampton, Bristol, and Durham using the X400 protocol on the JANET network.
Reference: 15. <author> B.C. Warboys. </author> <title> The IPSE 2.5 Project: Process Modelling as a basis for a support environment. </title> <booktitle> In Proceedings of the First International Conference on Software Development, Environments, and Factories, </booktitle> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: This implies the existence of another `orthogonal' process: not concerned with the day-to-day activities or performance, but the performance of the process as a whole. A process component has been written in PML called the Process Model for Management Support <ref> [15] </ref>. It provides a context for delegating objectives, planning, implementing, monitoring and re-planning process models and will be incorporated into the implementation in future. A well-known feature of PW Int is the ability to make change `on the fly'.
Reference: 16. <author> P. White. </author> <title> Report on the Process Analysis and Design Methodology. </title> <type> Technical Report 142, </type> <institution> IOPT, </institution> <year> 1993. </year>
Reference-contexts: PADM (Process Analysis and Design Methodology <ref> [16] </ref>) provides a coherent strategy and techniques for much of the area of PM1 through to PM4, and indeed outside of this framework, identifying the need for a `baseline' model, stressing that once a `target' process (or even processes) has or have been identified, the implementation route will of necessity be <p> There is no reference in the PM1 stage of the meta-process to establishing the `what is' process as a basis for planning the transition to the `what ought to be' process, but, as White mentions <ref> [16] </ref>, in the real world this transition may well be the biggest problem to be dealt with. This issue is very pertinent when considering the impacts of context and skill.
References-found: 16

