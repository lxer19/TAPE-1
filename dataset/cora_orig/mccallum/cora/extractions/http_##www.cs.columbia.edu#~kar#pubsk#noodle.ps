URL: http://www.cs.columbia.edu/~kar/pubsk/noodle.ps
Refering-URL: http://www.cs.columbia.edu/~kar/pubsk/pubsk.html
Root-URL: http://www.cs.columbia.edu
Email: mumick@research.att.com  kar@cs.columbia.edu  
Title: Noodle: A Language for Declarative Querying in an Object-Oriented Database  
Author: Inderpal Singh Mumick Kenneth A. Ross 
Note: Laboratories.  
Affiliation: AT&T Bell Laboratories  Columbia University  
Abstract: We present a language Noodle in which to specify declarative queries in an object-oriented database system. The language models object-identity, classes, relations, views, inheritance, complex objects, and methods, in addition to logical rules, and permits powerful schema querying. Noodle is intended to be used as a query language in an object-oriented database system, with the benefits of declarativeness, namely increased efficiency and reduced programming time. Our work bridges the gap between relational, deductive and object-oriented databases. Noodle is being implemented in the SWORD database system: a declarative object-oriented database being built at AT&T Bell 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul. </author> <title> Towards a deductive object-oriented database language. </title> <booktitle> In Proceedings of the First International Conference on Deductive and Object-Oriented Databases, </booktitle> <pages> pages 419-438, </pages> <year> 1989. </year>
Reference-contexts: gen = N g & N 6 & X [name = V ] & Z [works = W s] & W sfinstruments = Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress <ref> [1, 6] </ref>, COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++
Reference: [2] <author> S. Abiteboul and S. Grumbach. Col: </author> <title> a logic-based language for complex objects. </title> <booktitle> In Proceedings of the International Conference on Extending Data Base Technology, </booktitle> <pages> pages 271-293, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE [12], Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16]. Recursive query languages have also been developed: COL <ref> [2] </ref>, IQL [3], Logres [8], and CDOL [15]. Though reservations about mixing object-orientedness with declarativeness continue [27], we feel that the bridge between the two styles of programming is getting stronger. <p> g & N 6 & X [name = V ] & Z [works = W s] & W sfinstruments = Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL <ref> [2] </ref>, Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our
Reference: [3] <author> S. Abiteboul and P. C. Kanellakis. </author> <title> Object identity as a query language primitive. </title> <booktitle> In Proceedings of ACM SIGMOD 1989 International Conference on Management of Data, </booktitle> <pages> pages 159-173, </pages> <address> Portland, OR, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE [12], Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16]. Recursive query languages have also been developed: COL [2], IQL <ref> [3] </ref>, Logres [8], and CDOL [15]. Though reservations about mixing object-orientedness with declarativeness continue [27], we feel that the bridge between the two styles of programming is getting stronger. <p> & X [name = V ] & Z [works = W s] & W sfinstruments = Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL <ref> [3] </ref>, the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system
Reference: [4] <author> R. Agrawal and N. Gehani. </author> <title> Ode (object database and environment): the language and the data model. </title> <booktitle> In Proceedings of ACM SIGMOD 1989 International Conference on Management of Data, </booktitle> <pages> pages 36-45, </pages> <address> Portland, OR, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [4, 5, 9, 20, 22, 29] </ref>. Logics of objects have been proposed: O-Logic [18] and F-Logic [17]. <p> We are building a declarative object-oriented database system called SWORD 2 at AT&T, integrating Noodle with the O++ procedural language of the ODE database system <ref> [4] </ref>. Outline The language Noodle borrows from deductive and object-oriented technology. Noodle is rule based. Relations are supported as objects with object identifiers, but individual tuples of a relation do not have object identifiers. Complex objects (functional and set valued) are supported using HiLog-like constructs [10]. <p> A database system called SWORD, based on Noodle, is being implemented at AT&T. Designing an interface with a procedural language is an intricate task, with potential "impedance mismatch" problems. In the SWORD system, Noodle is being integrated with the O++ language of the ODE database system <ref> [4] </ref>. There are a number of implementation issues that would need to be addressed if this language is to be used in a real system. An obvious issue is optimization. As this language is implemented, we intend to study this question extensively. Another issue involves schema querying.
Reference: [5] <author> F. Bancilhon, C. Delobel, and P. Kanellakis. </author> <title> Building an Object-Oriented Database System: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> Washington D.C., </address> <year> 1992. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [4, 5, 9, 20, 22, 29] </ref>. Logics of objects have been proposed: O-Logic [18] and F-Logic [17].
Reference: [6] <author> C. Beeri. </author> <title> Formal models for object-oriented databases. </title> <booktitle> In Proceedings of the DOOD89, </booktitle> <pages> pages 370-395, </pages> <address> Kyoto, Japan, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: gen = N g & N 6 & X [name = V ] & Z [works = W s] & W sfinstruments = Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress <ref> [1, 6] </ref>, COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++
Reference: [7] <author> J. A. Blakeley. ZQL[C++]: </author> <title> Integrating the C++ language and an object query capability. </title> <editor> In I. S. Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 138-144, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] <ref> [7] </ref>, Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems.
Reference: [8] <author> F. Cacace, S. Ceri, S. Crespi-Reghizi, L. Tanca, and R. Zicari. </author> <title> Integrating object-oriented data modeling with a rule-based programming paradigm. </title> <booktitle> In Proceedings of ACM SIGMOD 1990 International Conference on Management of Data, </booktitle> <pages> pages 225-236, </pages> <address> Atlantic City, NJ, </address> <month> May 23-25 </month> <year> 1990. </year>
Reference-contexts: Recursive query languages have also been developed: COL [2], IQL [3], Logres <ref> [8] </ref>, and CDOL [15]. Though reservations about mixing object-orientedness with declarativeness continue [27], we feel that the bridge between the two styles of programming is getting stronger. <p> Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres <ref> [8] </ref>, F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle.
Reference: [9] <author> R. C. G. Cattell. </author> <title> Object Data Management. </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [4, 5, 9, 20, 22, 29] </ref>. Logics of objects have been proposed: O-Logic [18] and F-Logic [17].
Reference: [10] <author> W. Chen, M. Kifer, and D. S. Warren. HiLog: </author> <title> A foundation for higher order logic programming. </title> <journal> Journal of Logic Programming, </journal> <year> 1992. </year>
Reference-contexts: Outline The language Noodle borrows from deductive and object-oriented technology. Noodle is rule based. Relations are supported as objects with object identifiers, but individual tuples of a relation do not have object identifiers. Complex objects (functional and set valued) are supported using HiLog-like constructs <ref> [10] </ref>. Attributes of objects are referenced by name rather than position. Recursion is permitted. There are several novel features in our system: (1) Variables can range over all classes, relations, attributes, and objects, in a manner similar to Hilog [10]. 1 Noodle stands for "Nonprocedural Object-Oriented Database LanguagE." 2 SWORD stands <p> Complex objects (functional and set valued) are supported using HiLog-like constructs <ref> [10] </ref>. Attributes of objects are referenced by name rather than position. Recursion is permitted. There are several novel features in our system: (1) Variables can range over all classes, relations, attributes, and objects, in a manner similar to Hilog [10]. 1 Noodle stands for "Nonprocedural Object-Oriented Database LanguagE." 2 SWORD stands for "System With Objects, Relations and Declarativeness." This permits queries that are not possible in SQL extensions and other object--oriented proposals. (2) Classes, relations, methods, and objects are referenced in a uniform manner. (3) Queries can do implicit schema <p> We allow a limited form of nesting in defining collection views, using parametric collections in a fashion similar to HiLog <ref> [10] </ref>. For example, suppose we had the opposite situation from rule r1, i.e., we have a stored relation students of and want to derive a set of students for each teacher. <p> "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog <ref> [10] </ref>, Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems.
Reference: [11] <author> S. Cluet, C. Delobel, C. Lecluse, and P. Richard. Reloop, </author> <title> an algebra-based query language for O 2 . In Proceedings of the DOOD89, </title> <address> Kyoto, Japan, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: Logics of objects have been proposed: O-Logic [18] and F-Logic [17]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE [12], Reloop <ref> [11] </ref> and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16]. Recursive query languages have also been developed: COL [2], IQL [3], Logres [8], and CDOL [15]. <p> N 6 & X [name = V ] & Z [works = W s] & W sfinstruments = Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop <ref> [11] </ref>, IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD
Reference: [12] <author> S. Dar, N. Gehani, and H. V. Jagadish. CQL++: </author> <title> A SQL for the Ode object-oriented DBMS. </title> <booktitle> In Proceedings of the Third International Conference on Extending Data Base Technology, </booktitle> <pages> pages 201-216, </pages> <address> Vienna, Austria, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: Logics of objects have been proposed: O-Logic [18] and F-Logic [17]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE <ref> [12] </ref>, Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16]. Recursive query languages have also been developed: COL [2], IQL [3], Logres [8], and CDOL [15]. <p> to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ <ref> [12] </ref>, ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems.
Reference: [13] <author> S. Greco, N. Leone, and P. Rullo. </author> <title> Complex: An object-oriented logic programming system. </title> <journal> ACM Transactions on Knowledge and Data Engineering, </journal> <volume> 4(4) </volume> <pages> 344-359, </pages> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex <ref> [13] </ref>, XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems.
Reference: [14] <author> M. H. Jamil and L. V. S. Lakshmanan. </author> <title> Realizing Orlog in LDL. </title> <editor> In I. S. Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 45-59, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog <ref> [14] </ref>, QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems. Noodle supports relations with tuples that do not have object identifiers.
Reference: [15] <author> A. Karadimce and S. Urban. CDOL: </author> <title> A declarative platform for developing OODB applications. </title> <booktitle> In Proceedings of the International Phoenix Conference on Computers and Communications, </booktitle> <pages> pages 224-230, </pages> <address> Tempe, AZ, </address> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: Recursive query languages have also been developed: COL [2], IQL [3], Logres [8], and CDOL <ref> [15] </ref>. Though reservations about mixing object-orientedness with declarativeness continue [27], we feel that the bridge between the two styles of programming is getting stronger. <p> several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL <ref> [15] </ref>, A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems. Noodle supports relations with tuples that do not have object identifiers.
Reference: [16] <author> M. Kifer, W. Kim, and Y. Sagiv. </author> <title> Querying object-oriented databases. </title> <booktitle> In Proceedings of the Eleventh Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 393-402, </pages> <address> San Diego, CA, </address> <month> June 2-4 </month> <year> 1992. </year>
Reference-contexts: Logics of objects have been proposed: O-Logic [18] and F-Logic [17]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE [12], Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL <ref> [16] </ref>. Recursive query languages have also been developed: COL [2], IQL [3], Logres [8], and CDOL [15]. Though reservations about mixing object-orientedness with declarativeness continue [27], we feel that the bridge between the two styles of programming is getting stronger. <p> Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL <ref> [16] </ref>, CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems.
Reference: [17] <author> M. Kifer., G. Lausen, and J. Wu. </author> <title> Logical foundations of object-oriented and frame-based languages. </title> <type> Technical Report 90/14 (second revision), </type> <institution> SUNY at Stony Brook, </institution> <year> 1990. </year> <note> to appear in Journal of the ACM. </note>
Reference-contexts: There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace [4, 5, 9, 20, 22, 29]. Logics of objects have been proposed: O-Logic [18] and F-Logic <ref> [17] </ref>. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE [12], Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16]. <p> Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic <ref> [17] </ref>, HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle.
Reference: [18] <author> M. Kifer and J. Wu. </author> <title> A logic for object-oriented logic programming (Maier's O-logic revisited). </title> <booktitle> In Proceedings of the Eighth Symposium on Principles of Database Systems (PODS), </booktitle> <address> Philadelphia, PA, </address> <year> 1989. </year>
Reference-contexts: There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace [4, 5, 9, 20, 22, 29]. Logics of objects have been proposed: O-Logic <ref> [18] </ref> and F-Logic [17]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [29], CQL++ in ODE [12], Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16].
Reference: [19] <author> R. S. G. Lanzelotte, P. Valduriez, and M. Zat. </author> <title> Optimization of object-oriented recursive queries using cost-controlled strategies. </title> <booktitle> In Proceedings of ACM SIGMOD 1992 International Conference on Management of Data, </booktitle> <pages> pages 256-265, </pages> <address> San Diego, CA, </address> <month> June 2-5 </month> <year> 1992. </year>
Reference-contexts: The schema information is used to prune the variable substitutions that are guaranteed to fail, say, due to the absence of an attribute that is mentioned in the query. 5 An Example We illustrate several of the features of Noodle using an example of a composer database originally from <ref> [19] </ref>.
Reference: [20] <author> D. Maier, J. Stein, A. Otis, and A. Purdy. </author> <title> Development of an object-oriented DBMS. </title> <booktitle> In OOPSLA 1986 Proceedings, </booktitle> <pages> pages 472-482, </pages> <year> 1986. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [4, 5, 9, 20, 22, 29] </ref>. Logics of objects have been proposed: O-Logic [18] and F-Logic [17].
Reference: [21] <author> I. S. Mumick, K. A. Ross, and S. Sudarshan. </author> <title> Design and implementation of the SWORD declarative object-oriented database system, 1993. </title> <type> Unpublished Manuscript. </type>
Reference-contexts: Queries to find objects for which some attribute value is equal to the string "Stanford University" can also be expressed. (4) Noodle is being integrated with a procedural language in the SWORD system <ref> [21] </ref>. The integration permits some of the methods of a class to be defined declaratively in Noodle, while others can be defined using the procedural language. 2 The Noodle Language: An Introduction In this section we introduce the language Noodle. <p> IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD <ref> [21] </ref> system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems. Noodle supports relations with tuples that do not have object identifiers. Thus, every element of every collection is not forced to be an object with its own object identifier.
Reference: [22] <author> J. Orenstein, S. Haradhvala, B. Margulies, and D. Sakahara. </author> <title> Query processing in the objectstore database system. </title> <booktitle> In Proceedings of ACM SIGMOD 1992 International Conference on Management of Data, </booktitle> <pages> pages 403-412, </pages> <address> San Diego, CA, </address> <month> June 2-5 </month> <year> 1992. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [4, 5, 9, 20, 22, 29] </ref>. Logics of objects have been proposed: O-Logic [18] and F-Logic [17].
Reference: [23] <author> G. Phipps, M. Derr, and K. A. Ross. </author> <title> Glue-Nail: A deductive database system. </title> <booktitle> In Proceedings of ACM SIGMOD 1991 International Conference on Management of Data, </booktitle> <pages> pages 308-317, </pages> <address> Denver, CO, </address> <month> May 29-31 </month> <year> 1991. </year>
Reference-contexts: Noodle models methods without side-effects, and methods with benign side-effects, as relations, and consequently the class method is a subclass of the class relation in Figure 1. (This is similar to the approach taken in the NAIL/Glue system <ref> [23] </ref>.) Methods, viewed as a relation, must have an object attribute to specify the object to which the method applies, and a result attribute through which the method returns a value. Additional attributes may be present.
Reference: [24] <author> K. A. Ross. </author> <title> Modular stratification and magic sets for datalog programs with negation. </title> <booktitle> In Proceedings of the Ninth Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 161-171, </pages> <address> Nashville, TN, </address> <month> April 2-4 </month> <year> 1990. </year>
Reference-contexts: In this way, the user does not have to know whether salary and income are attributes or methods in class employee. 4 Semantics Noodle permits recursive view definitions, modularly stratified aggregation, and modularly stratified negation <ref> [24] </ref>. A model-theoretic semantics can be defined for queries and view definitions in Noodle, in a fashion similar to the semantics of HiLog. There are some differences since we must handle explicitly labeled attributes, multiset semantics for multirelations, and variables implicitly bound to collections or objects.
Reference: [25] <author> D. Srivastava, R. Ramakrishnan, P. Seshadri, and S. Sudarshan. </author> <title> Coral++: Adding object-orientation to a logic database language. </title> <booktitle> In Proceedings of the Nineteenth International Conference on Very Large Databases (VLDB), </booktitle> <address> Dublin, Ireland, </address> <month> August 24-27 </month> <year> 1993. </year>
Reference-contexts: 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ <ref> [25] </ref>, and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems. Noodle supports relations with tuples that do not have object identifiers.
Reference: [26] <author> J. D. Ullman. </author> <booktitle> Principles of Database and Knowledge-Base Systems, </booktitle> <volume> Volume 1. </volume> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: Object-oriented databases developed in parallel, offering significantly increased data modeling capabilities, but moved back to a procedural query language, and shifted the access optimization problem back to the user <ref> [26] </ref>. fl This research was supported in part by NSF grant IRI-9209029, and by a grant from the AT&T Foundation. 1 Writing queries in a declarative query language is easier and faster than writing queries in a procedural query language.
Reference: [27] <author> J. D. Ullman. </author> <title> A comparison between deductive and object-oriented database systems. </title> <booktitle> In Proceedings of the DOOD91, </booktitle> <pages> pages 263-277, </pages> <address> Germany, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: Recursive query languages have also been developed: COL [2], IQL [3], Logres [8], and CDOL [15]. Though reservations about mixing object-orientedness with declarativeness continue <ref> [27] </ref>, we feel that the bridge between the two styles of programming is getting stronger. <p> XSQL also uses the SQL dot notation for path expressions, but the expressions are in F-logic, and the system can interpret the expressions. Ullman <ref> [27] </ref> presents two problems in adding declarativeness to an object-oriented database: (1) Duplicate elimination in presence of object identifiers is tricky. Duplicate elimination is often value-based, not object-based. If every derived object is given a new object identifier, duplicate elimination is not feasible.
Reference: [28] <author> S. D. Urban and S. W. Dietrich. </author> <title> A deductive, object-oriented model as a formal framework for active database environments. </title> <editor> In I. S. Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 101-110, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch <ref> [28] </ref>, Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems. Noodle supports relations with tuples that do not have object identifiers.
Reference: [29] <author> K. Wilkinson, P. Lyngbaek, and W. Hasan. </author> <title> The Iris architecture and implementation. </title> <journal> ACM Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1) </volume> <pages> 63-75, </pages> <month> Mar. </month> <year> 1990. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [4, 5, 9, 20, 22, 29] </ref>. Logics of objects have been proposed: O-Logic [18] and F-Logic [17]. <p> Logics of objects have been proposed: O-Logic [18] and F-Logic [17]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS <ref> [29] </ref>, CQL++ in ODE [12], Reloop [11] and the O 2 query language ([5],Chapter 11) in O 2 , and XSQL in UniSQL [16]. Recursive query languages have also been developed: COL [2], IQL [3], Logres [8], and CDOL [15]. <p> sfinstruments = Isg & Isffamily = "harpsichord"g. 6 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system <ref> [29] </ref>, Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E [30], CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle.
Reference: [30] <author> K. Yokota, H. Tsuda, and Y. Morita. </author> <title> Specific features of a deductive object-oriented database language QUIX OT E. </title> <editor> In I. S. Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 89-99, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: made, and several others are in progress [1, 6], COL [2], Reloop [11], IQL [3], the O 2 query language ([5], Chapter 11), OSQL in the IRIS system [29], Logres [8], F-Logic [17], HiLog [10], Complex [13], XSQL [16], CQL++ [12], ZQL [C++] [7], Orlog [14], QU IX OT E <ref> [30] </ref>, CDOL [15], A DOOD Ranch [28], Coral++ [25], and our own SWORD [21] system based on Noodle. In this section, we compare the salient features of Noodle with several of the above systems. Noodle supports relations with tuples that do not have object identifiers.
References-found: 30

