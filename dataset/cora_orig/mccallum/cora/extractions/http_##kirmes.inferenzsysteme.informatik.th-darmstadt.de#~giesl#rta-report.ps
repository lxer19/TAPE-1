URL: http://kirmes.inferenzsysteme.informatik.th-darmstadt.de/~giesl/rta-report.ps
Refering-URL: http://www.inferenzsysteme.informatik.tu-darmstadt.de/~giesl/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: giesl@inferenzsysteme.informatik.th-darmstadt.de  
Title: Generating Polynomial Orderings for Termination Proofs  
Author: Jurgen Giesl 
Address: Alexanderstr. 10, 64283 Darmstadt, Germany  
Affiliation: FB Informatik, Technische Hochschule Darmstadt,  
Abstract: Most systems for the automation of termination proofs using polynomial orderings are only semi-automatic, i.e. the "right" polynomial ordering has to be given by the user. We show that a variation of Lank-ford's partial derivative technique leads to an easier and slightly more powerful method than most other semi-automatic approaches. Based on this technique we develop a method for the automated synthesis of a suited polynomial ordering.
Abstract-found: 1
Intro-found: 1
Reference: [Bel84] <author> F. Bellegarde. </author> <title> Rewriting Systems on FP Expressions that reduce the Number of Sequences they yield. </title> <booktitle> Symp. LISP & Funct. Prog., ACM, </booktitle> <address> Austin, TX, </address> <year> 1984. </year>
Reference-contexts: Consider the trs R for associativity and endomorphism from <ref> [Bel84] </ref> and [BL87].
Reference: [BL87] <author> A. Ben Cherifa & P. Lescanne. </author> <title> Termination of Rewriting Systems by Polynomial Interpretations and its Implementation. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 9(2) </volume> <pages> 137-159, </pages> <year> 1987. </year>
Reference-contexts: Consider the trs R for associativity and endomorphism from [Bel84] and <ref> [BL87] </ref>. <p> Of course the termination criterion of theorem 1 can also be applied in a semi-automatic way. Then we use associations to polynomials whose coefficients are numbers (instead of variables) and we replace the variable by a number . A comparison with the semi-automatic methods of Ben Cherifa and Lescanne <ref> [BL87] </ref> and Steinbach [Ste92] leads to the following results 3 . If [Ste92] and [BL87] can prove a polynomial p positive, then our method can do so as well. <p> Then we use associations to polynomials whose coefficients are numbers (instead of variables) and we replace the variable by a number . A comparison with the semi-automatic methods of Ben Cherifa and Lescanne <ref> [BL87] </ref> and Steinbach [Ste92] leads to the following results 3 . If [Ste92] and [BL87] can prove a polynomial p positive, then our method can do so as well. If our method can prove p positive for all x 1 ; : : : ; x n , then there exists a 0 such that the methods of [Ste92] and [BL87] can prove p positive <p> If [Ste92] and <ref> [BL87] </ref> can prove a polynomial p positive, then our method can do so as well. If our method can prove p positive for all x 1 ; : : : ; x n , then there exists a 0 such that the methods of [Ste92] and [BL87] can prove p positive for all x 1 ; : : : ; x n 0 . Choosing 0 = is not always possible. While the worst case complexity of the systems in [Ste92] and [BL87] is exponential in the number of monomials in p, our method is exponential in <p> n , then there exists a 0 such that the methods of [Ste92] and <ref> [BL87] </ref> can prove p positive for all x 1 ; : : : ; x n 0 . Choosing 0 = is not always possible. While the worst case complexity of the systems in [Ste92] and [BL87] is exponential in the number of monomials in p, our method is exponential in the number of its variables. 3 A Fully Automated Termination Proof Procedure In theorem 1 we introduced a method to automatically generate a set of inequalities only containing variable coefficients and the variable . <p> This results in a fully automated termination proof procedure which succeeds for most of those term rewriting systems which are compatible with a polynomial ordering. 3 In this comparison we do not consider the additional use of the arithmetic-mean-geometric-mean inequality in [Ste92] and extend the method of <ref> [BL87] </ref> by backtrack ing and arbitrary minimal value . 4 Nevertheless there do exist term rewriting systems which require a polyno-mial ordering with coefficients other than 0, 1 or 2. It is decidable whether there exists an instantiation with real numbers satisfying a set of inequalities [Tar51]. <p> Endomorphism & Associativity ([Bel84], <ref> [BL87] </ref>) 0.1 sec. Running Example 6.1 in [Ste91] (by A. Middeldorp) 0.2 sec. Binomial Coefficients ([Ste91, Example 8.8], [Ste92, Example 13]) 1.6 sec. Distributivity & Associativity ([Der87, p. 78]) 1.9 sec. Table 1. Performance of our method.
Reference: [Col75] <author> G. E. Collins. </author> <title> Quantifier Elimination for Real Closed Fields by Cylindrical Algebraic Decomposition. </title> <booktitle> In Proc. 2nd GI Conf. on Automata Theory and Formal Languages, </booktitle> <address> Kaiserslautern, Germany, </address> <year> 1975. </year>
Reference-contexts: It is decidable whether there exists an instantiation with real numbers satisfying a set of inequalities [Tar51]. But even the most efficient known decision method (the cylindrical algebraic decomposition algorithm by G. E. Collins <ref> [Col75] </ref>) is very time-consuming. For that reason these methods have been rarely used for automated termination proofs. Therefore we suggest an incomplete, more efficient modification of Collins' algorithm.
Reference: [Der82] <author> N. Dershowitz. </author> <title> Orderings for Term-Rewriting Systems. </title> <journal> Theoretical Computer Science, </journal> <volume> 17 </volume> <pages> 279-301, </pages> <year> 1982. </year>
Reference-contexts: Our method can be used both in a semi-automatic and a fully automated way (section 3). 2 A Termination Criterion with Variable Coefficients The use of polynomial orderings for termination proofs has been suggested by D. S. Lankford [Lan79] and has been extended to real polynomials by N. Dersho-witz <ref> [Der82] </ref>. A polynomial interpretation t associates a real multivariate polynomial f t (x 1 ; : : : ; x n ) with each n-ary function symbol f .
Reference: [Der87] <author> N. Dershowitz. </author> <title> Termination of Rewriting. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 3(1, </volume> 2):69-115, 1987. 
Reference-contexts: 1 Introduction A term rewriting system (trs) R is terminating for a set of terms T if there exists no infinite derivation of terms in T . While in general this problem is undecidable [HL78], several methods for proving termination have been developed, cf. <ref> [Der87] </ref>. We present a method for automated termination proofs using polynomial orderings, which is based on a variant of Lankford's partial derivative technique (section 2).
Reference: [DJ90] <author> N. Dershowitz & J.-P. Jouannaud. </author> <title> Rewrite Systems. </title> <booktitle> Handbook of Theoretical Comp. Science, </booktitle> <editor> J. van Leuwen, Ed., </editor> <volume> vol. </volume> <editor> B, ch. </editor> <volume> 6, </volume> <pages> 243-320, </pages> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: ordering; i.e. for each rule l ! r in R, t (l) &gt; t (r) must hold for all instantiations of the variables with numbers n that are greater or equal than the minimal value of a ground term (i.e. numbers n with n minft (t) j t ground termg) <ref> [DJ90] </ref> 1 . ? This paper appeared in the Proceedings of the 6th International Conference on Rewriting Techniques and Applications, Kaiserslautern, Germany, Springer-Verlag, LNCS 914, 1995. 1 We always assume that there exist ground terms in T . Consider the trs R for associativity and endomorphism from [Bel84] and [BL87].
Reference: [HL78] <author> G. Huet & D. S. Lankford. </author> <title> On the Uniform Halting Problem for Term Rewriting Systems. </title> <institution> Rapport Laboria 283, Institut de Recherche d'Informatique et d'Automatique, Le Chesnay, France, </institution> <year> 1978. </year>
Reference-contexts: 1 Introduction A term rewriting system (trs) R is terminating for a set of terms T if there exists no infinite derivation of terms in T . While in general this problem is undecidable <ref> [HL78] </ref>, several methods for proving termination have been developed, cf. [Der87]. We present a method for automated termination proofs using polynomial orderings, which is based on a variant of Lankford's partial derivative technique (section 2).
Reference: [Lan76] <author> D. S. Lankford. </author> <title> A Finite Termination Algorithm. Internal Memo, </title> <institution> Southwestern University, Georgetown, TX, </institution> <year> 1976. </year>
Reference-contexts: z we have repeatedly used the following two differentiation rules. p (: : : x : : :) &gt; 0 @p (:::x:::) (Diff1) p (: : : x : : :) 0 @p (:::x:::) (Diff2) The differentiation rules (Diff1) and (Diff2) are based on the partial derivative method of Lankford <ref> [Lan76] </ref>. But Lankford's method can only prove that a polynomial is eventually positive (i.e. p (x 1 ; : : : ; x n ) &gt; 0 holds for large enough x i ).
Reference: [Lan79] <author> D. S. Lankford. </author> <title> On Proving Term Rewriting Systems are Noetherian. </title> <type> Technical Report Memo MTP-3, </type> <institution> Louisiana Tech. Univ., Ruston, LA, </institution> <year> 1979. </year>
Reference-contexts: Our method can be used both in a semi-automatic and a fully automated way (section 3). 2 A Termination Criterion with Variable Coefficients The use of polynomial orderings for termination proofs has been suggested by D. S. Lankford <ref> [Lan79] </ref> and has been extended to real polynomials by N. Dersho-witz [Der82]. A polynomial interpretation t associates a real multivariate polynomial f t (x 1 ; : : : ; x n ) with each n-ary function symbol f . <p> Note that in general this question is undecidable <ref> [Lan79] </ref>. Therefore we will transform (4) into new inequalities which do not contain the rule variables x and z any more. Then for each instantiation of the variable coefficients it is trivial to check whether they satisfy these new inequalities.
Reference: [Ste91] <author> J. Steinbach. </author> <title> Termination Proofs of Rewriting Systems | Heuristics for Generating Polynomial Orderings. </title> <institution> SEKI-Report SR-91-14, Univ. Kaiserslautern, Germany, </institution> <year> 1991. </year>
Reference-contexts: We follow a heuristic from <ref> [Ste91] </ref> and associate a simple-mixed 2 polynomial with each function symbol. <p> For the generation of a polynomial ordering compatible with R we therefore only have to find an instantiation of the variable coefficients and . An alternative approach for the automated generation of the "right" polynomial interpretation has been presented in <ref> [Ste91] </ref> which can be useful if the number of variable coefficients is small. In these cases Steinbach's method may also be used to search for an instantiation that satisfies the inequalities resulting from theorem 1. <p> Endomorphism & Associativity ([Bel84], [BL87]) 0.1 sec. Running Example 6.1 in <ref> [Ste91] </ref> (by A. Middeldorp) 0.2 sec. Binomial Coefficients ([Ste91, Example 8.8], [Ste92, Example 13]) 1.6 sec. Distributivity & Associativity ([Der87, p. 78]) 1.9 sec. Table 1. Performance of our method.
Reference: [Ste92] <author> J. Steinbach. </author> <title> Proving Polynomials Positive. </title> <booktitle> In Proc. 12th Conf. Foundations Software Technology & Theoretical Comp. </booktitle> <address> Sc., New Delhi, India, </address> <year> 1992. </year>
Reference-contexts: Then we use associations to polynomials whose coefficients are numbers (instead of variables) and we replace the variable by a number . A comparison with the semi-automatic methods of Ben Cherifa and Lescanne [BL87] and Steinbach <ref> [Ste92] </ref> leads to the following results 3 . If [Ste92] and [BL87] can prove a polynomial p positive, then our method can do so as well. <p> Then we use associations to polynomials whose coefficients are numbers (instead of variables) and we replace the variable by a number . A comparison with the semi-automatic methods of Ben Cherifa and Lescanne [BL87] and Steinbach <ref> [Ste92] </ref> leads to the following results 3 . If [Ste92] and [BL87] can prove a polynomial p positive, then our method can do so as well. If our method can prove p positive for all x 1 ; : : : ; x n , then there exists a 0 such that the methods of [Ste92] and [BL87] can prove <p> If <ref> [Ste92] </ref> and [BL87] can prove a polynomial p positive, then our method can do so as well. If our method can prove p positive for all x 1 ; : : : ; x n , then there exists a 0 such that the methods of [Ste92] and [BL87] can prove p positive for all x 1 ; : : : ; x n 0 . Choosing 0 = is not always possible. While the worst case complexity of the systems in [Ste92] and [BL87] is exponential in the number of monomials in p, our method is <p> ; x n , then there exists a 0 such that the methods of <ref> [Ste92] </ref> and [BL87] can prove p positive for all x 1 ; : : : ; x n 0 . Choosing 0 = is not always possible. While the worst case complexity of the systems in [Ste92] and [BL87] is exponential in the number of monomials in p, our method is exponential in the number of its variables. 3 A Fully Automated Termination Proof Procedure In theorem 1 we introduced a method to automatically generate a set of inequalities only containing variable coefficients and the variable . <p> This results in a fully automated termination proof procedure which succeeds for most of those term rewriting systems which are compatible with a polynomial ordering. 3 In this comparison we do not consider the additional use of the arithmetic-mean-geometric-mean inequality in <ref> [Ste92] </ref> and extend the method of [BL87] by backtrack ing and arbitrary minimal value . 4 Nevertheless there do exist term rewriting systems which require a polyno-mial ordering with coefficients other than 0, 1 or 2. <p> Check whether these inequalities are satisfied by an instantiation with num bers from f0; 1; 2g. 3. If not, try to prove their satisfiability by a modified version of Collins' algo rithm. Instead of the differentiation rules we could also use a technique from <ref> [Ste92] </ref> for the elimination of the rule variables x; y; z. But while Steinbach's technique introduces several new variables, the advantage of (Diff1) and (Diff2) is that these rules introduce only one new variable . <p> Endomorphism & Associativity ([Bel84], [BL87]) 0.1 sec. Running Example 6.1 in [Ste91] (by A. Middeldorp) 0.2 sec. Binomial Coefficients ([Ste91, Example 8.8], <ref> [Ste92, Example 13] </ref>) 1.6 sec. Distributivity & Associativity ([Der87, p. 78]) 1.9 sec. Table 1. Performance of our method. Acknowledgements I would like to thank Jurgen Brauburger, Caroline Claus, Alexander Friedl, Ste-fan Gerberding, Thomas Kolbe, Jens Marschner, Martin Protzen and Christoph Walther for comments and support.
Reference: [Tar51] <author> A. Tarski. </author> <title> A Decision Method for Elementary Algebra and Geometry. </title> <institution> University of California Press, Berkeley, </institution> <year> 1951. </year> <month> 6 </month>
Reference-contexts: It is decidable whether there exists an instantiation with real numbers satisfying a set of inequalities <ref> [Tar51] </ref>. But even the most efficient known decision method (the cylindrical algebraic decomposition algorithm by G. E. Collins [Col75]) is very time-consuming. For that reason these methods have been rarely used for automated termination proofs. Therefore we suggest an incomplete, more efficient modification of Collins' algorithm.
References-found: 12

