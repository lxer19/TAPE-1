URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr94/tr94-016.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr94-abstracts.html
Root-URL: http://www.cis.ufl.edu
Email: ted@cis.ufl.edu  
Title: New Rules for Early Delivery in an Atomic Multicast System  
Author: Theodore Johnson and Lionnel Maugis 
Keyword: Atomic Broadcast, Causal Broadcast, Asynchronous System, Early Delivery, Distributed Protocol.  
Date: April 19, 1994  
Address: Gainesville, Fl 32611-2024  
Affiliation: Dept. of CIS, University of Florida  
Abstract: An atomic multicast facility guarantees that a multicast message is delivered to the multicast group, and that every process receives messages in the same order. The availability of an atomic multicast facility greatly simplifies the implementation of many distributed system functions. Atomic multicast can be built on top of a reliable causal multicast by waiting until each processor in the group has multicast a message, then delivering the roots of the causal DAG. However, this approach makes the system run at the speed of the slowest processor. Performance can be improved by permitting an early delivery of messages. Dolev, Malki, and Kramer gave a protocol, ToTo, for early delivery atomic multicast built on a reliable causal multicast. In this paper, we show that the ToTo protocol is more restrictive than it needs to be, and present a simplification that improves performance. Next, we show how to extend the simplified ToTo protocol to permit early delivery in a wider range of operating conditions. Finally, we discuss a simple method to deliver some of the multicast messages even earlier. 
Abstract-found: 1
Intro-found: 1
Reference: [AMMS + 93] <author> Y. Amir, L. E. Moser, P.M. Melliar-Smith, V. Agrawal, and P. Ciarfella. </author> <title> Fast message ordering and membership using a logical taken passing ring. </title> <booktitle> Intl. Conference on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Termination. Once a message has been successfully issued by a sender, eventually all group members will receive the message. Early distributed agreement protocols are based on variations of two or three phase commit [LG90], central control [BSS91] or token ring <ref> [BG93, AMMS + 93] </ref>. In addition to reliable and atomic multicast primitives, a membership facility provides virtually synchronous group of processes : all working processes receive the same set of messages between configuration changes. The communication topology is assumed to be fully connected and point to point.
Reference: [BG93] <author> T. Becker and K. Grieger. </author> <title> An efficient atomic muticast protocol for client server models. </title> <booktitle> IEEE International parallel processing symposium, </booktitle> <year> 1993. </year>
Reference-contexts: Termination. Once a message has been successfully issued by a sender, eventually all group members will receive the message. Early distributed agreement protocols are based on variations of two or three phase commit [LG90], central control [BSS91] or token ring <ref> [BG93, AMMS + 93] </ref>. In addition to reliable and atomic multicast primitives, a membership facility provides virtually synchronous group of processes : all working processes receive the same set of messages between configuration changes. The communication topology is assumed to be fully connected and point to point.
Reference: [Bra92] <author> R. Braden. </author> <title> Extending fTCPg for transactions. Internet Network Group Request for Comments 1379, </title> <year> 1992. </year>
Reference-contexts: The channels are also reliable (eventual, exactly once delivery of uncorrupted messages) and first-in first-out. More recent protocols take advantage of the communication medium. Indeed, simulating reliable point to point links over an unreliable broadcast domain significantly wastes network bandwidth <ref> [Bra92] </ref>. From a theoretical standpoint, the requirements for distributed agreement in a broadcast domain are given by Melliar-Smith, Moser and Agrawal [MMSA93].
Reference: [BSS91] <author> K. Birman, A. Schiper, and P. Stephenson. </author> <title> Lightweight causal and atomic group multicast. </title> <journal> ACM Transactions on computer systems, </journal> <volume> 9(3), </volume> <year> 1991. </year>
Reference-contexts: Order. The sequence of delivered messages is identical for all group members. 3. Termination. Once a message has been successfully issued by a sender, eventually all group members will receive the message. Early distributed agreement protocols are based on variations of two or three phase commit [LG90], central control <ref> [BSS91] </ref> or token ring [BG93, AMMS + 93]. In addition to reliable and atomic multicast primitives, a membership facility provides virtually synchronous group of processes : all working processes receive the same set of messages between configuration changes. <p> The process group is modified by a configuration change. Every process sees a consistent set of configuration changes. When a processor fails, it is still desirable to deliver as many of the undelivered messages as possible. Birman <ref> [BSS91] </ref> introduced the concept of virtual synchrony, which requires that if one processor delivers a message m before a configuration change, then all non-failed processors deliver m before the configuration change. The use of virtual synchrony gives a solid meaning to the delivery list.
Reference: [Cri90] <author> F. Cristian. </author> <title> Synchronous atomic broadcast for redundant broadcast channels. </title> <journal> The Journal of Real-Time systems, </journal> <volume> 2, </volume> <year> 1990. </year>
Reference-contexts: They guarantee reliable delivery and some defined order of messages for all recipients, even if the underlying communication subsystem is unreliable. In this paper, we do not consider synchronous systems, as they make strong assumptions about communication and processing delays <ref> [Cri90] </ref>. Such systems are designed to cope with the worst possible situation, and may not take advantage of the average case. As processes replicate to provide fault-tolerance and availability, they need to cooperate when executing a global event updating a replica for example.
Reference: [DKM92] <author> D. Dolev, S. Kramer, and D. Malki. </author> <title> Total ordering of messages in broadcast domains. </title> <type> Technical report, </type> <institution> The Hebrew University of Jerusalem, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: Dolev, Kramer and Malki refined this approach in the Transis system <ref> [DKM92] </ref>. If i is in ack (m p ) then p has received i and all j in ack fl (i), where ack fl is the transitive closure of ack. Therefore, acknowledgments directly create a causal order, simplifying the total ordering (Toto) and group membership protocol. <p> We have presented an informal proof of correctness based on internal and external stability arguments while ignoring the interaction of the protocol with failures and group changes. These details are discussed in <ref> [DKM92] </ref>. <p> I) + u = 5 + 2 &gt; * J 62 S G as nvt (J ) = 1 ^ 9B 2 M G ; votes (B; J ) + u = 5 + 2 &gt; Sp is stable and can be delivered : 1 Neither Total [MSMA90] nor ToTo <ref> [DKM92] </ref> are able to elect messages with such DAG, as they require a candudate set to receive more than n=2 votes to be elected. 12 1.
Reference: [DMS93] <author> D. Dolev, D. Malki, and Ray Strong. </author> <title> An asynchronous membership protocol that tolerates partitions. </title> <type> Technical report, </type> <institution> The Hebrew University of Jerusalem, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: Therefore, acknowledgments directly create a causal order, simplifying the total ordering (Toto) and group membership protocol. Both use this partial order and have a reasonable processing cost. Their membership algorithm has also the unusual capability of supporting more than one network partition <ref> [DMS93] </ref>. As we studied the Toto protocol, we found that the delivery rules are somewhat redundant and could be improved to make the delivery even more aggressive.
Reference: [LG90] <author> S. Luan and V. Gligor. </author> <title> A fault tolerant protocol for atomic broadcast. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 1(3), </volume> <year> 1990. </year>
Reference-contexts: Order. The sequence of delivered messages is identical for all group members. 3. Termination. Once a message has been successfully issued by a sender, eventually all group members will receive the message. Early distributed agreement protocols are based on variations of two or three phase commit <ref> [LG90] </ref>, central control [BSS91] or token ring [BG93, AMMS + 93]. In addition to reliable and atomic multicast primitives, a membership facility provides virtually synchronous group of processes : all working processes receive the same set of messages between configuration changes.
Reference: [MMSA93] <author> L. E. Moser, P. M. Melliar-Smith, and V. Agrawala. </author> <title> Necessary and sufficient conditions for broadcast consensus protocols. </title> <journal> Journal of Distributed Computing, </journal> <volume> 7(2), </volume> <month> December </month> <year> 1993. </year>
Reference-contexts: More recent protocols take advantage of the communication medium. Indeed, simulating reliable point to point links over an unreliable broadcast domain significantly wastes network bandwidth [Bra92]. From a theoretical standpoint, the requirements for distributed agreement in a broadcast domain are given by Melliar-Smith, Moser and Agrawal <ref> [MMSA93] </ref>. They proved that a necessary and sufficient condition for the existence of a deterministic consensus protocol is delivery of each broadcast message to at least d (n + k + 1)=2e process in an n-process system subject to k crash failures.
Reference: [MSMA90] <author> P.M. Melliar-Smith, L. Moser, and V. Agrawal. </author> <title> Broadcast protocols for distributed systems. </title> <journal> IEEE transactions on parallel and distributde systems, </journal> <volume> 1(1), </volume> <year> 1990. </year> <month> 15 </month>
Reference-contexts: In their broadcast model, if a message is delivered, it is delivered immediately and in order but not necessarily to all processes. In the Trans system <ref> [MSMA90] </ref>, they designed a reliable atomic broadcast primitive for unreliable data-grams. Messages contain piggyback information to perform recovery and decide which process has received a particular message. A message m p sent by p contains two lists of message identifiers, ack (m p ) and nack (m p ). <p> ; votes (B; I) + u = 5 + 2 &gt; * J 62 S G as nvt (J ) = 1 ^ 9B 2 M G ; votes (B; J ) + u = 5 + 2 &gt; Sp is stable and can be delivered : 1 Neither Total <ref> [MSMA90] </ref> nor ToTo [DKM92] are able to elect messages with such DAG, as they require a candudate set to receive more than n=2 votes to be elected. 12 1.
References-found: 10

