URL: http://www.eecs.umich.edu/techreports/cse/1993/CSE-TR-186-93.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse93.html
Root-URL: http://www.eecs.umich.edu
Email: E-mail: farag@umich.edu  
Phone: Phone: (313) 995 1157  
Title: Is Deduction Enough?  Keywords: Utility of learning, Concept Learning, Induction, deduction, Explanation-Based Learning  
Author: Wafik M. Farag 
Date: February 28, 1991  
Address: Ann Arbor, MI 48109-2110  
Affiliation: Artificial Intelligence Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: In machine learning, a number of systems learn new knowledge in the form of compiled formats. These systems deductively learn these compiled formats for achieving future goals. Some times, these systems fail in performing a task using what they have learned. This failure occurs despite the fact that sufficient knowledge for achieving the task is available in the system. The failure stems mainly from the inability of a systems to access part of its learned knowledge during performance, which will be referred to as the lack of flexibility of a system. In this paper, two reasons that cause this lack of flexibility are presented: 1) The effect of using deduction as the only method of learning, 2) Choosing compiled formats as a form for learned knowledge. A new paradigm: Flexible Learning of Concepts by Examples (FlexLearn) is presented that uses deduction and induction as learning methods to over come this lack of flexibility. A measure for evaluating the flexibility of a learning system is presented. FlexLearn results in achieving a higher degree of flexibility requiring a smaller number of examples to achieve the same task encountered by systems that learn compiled formats deductively. 
Abstract-found: 1
Intro-found: 1
Reference: [Boose 89] <author> Boose, John H., </author> <year> (1989). </year> <title> "A survey of knowledge acquisition techniques and tools." </title> <journal> In Knowledge Acquistion Journal, </journal> <volume> Vol. 1, Number 1., </volume> <publisher> Academic Press, </publisher> <address> New York, New York, </address> <pages> pp. 3-37. </pages>
Reference: [Braver 88] <author> Braverman, M. S., & Russell, S. J. </author> <year> (1988). </year> <title> Boundaries of operationality. </title> <booktitle> In Proceedings of the Fifth International Conference on Machine Learning. </booktitle> <address> Ann Arbor, Michigan: </address> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA. </address>
Reference-contexts: FlexLearn over comes other problems in systems similar to EBL. For example, the problem of choosing the level of generality at which a concept should be learned <ref> [Braver 88, Dietterich 88] </ref> or the difficulty of adapting a concept to reflect new changes [Braver 88b]. In FlexLearn, the general concept learned has the necessary functional features for recognizing the examples encountered by the system. This learned concept is similar to the pre-defined general concept given in EBL. <p> Learning more concepts increases duplicated information and might slow the system down [Minton88, Mahadevan 88, Tambe88, Holder 90]. Another method for EBL like systems to increase their flexibility level is to increase their level of generality. This puts EBL back to the tradeoff between generality and operationality <ref> [Braver 88, Dietterich 88] </ref>. In some cases, generalizing predicates would not be possible without loss in correctness. For example, in the cup concept, generalizing all bottoms to be stable would not be correct. A car with four wheel is considered stable.
Reference: [Braver 88b] <author> Braverman, M. S., & Russell, S. J. </author> <year> (1988). </year> <title> "IMEX: Overcoming Intractability in Explanation-Based Learning." </title> <booktitle> In Proceedings of the AAAI-88, </booktitle> <address> St. Paul, Minnesota, </address> <month> August 21-26, </month> <year> 1988, </year> <pages> pp. 575-579. </pages>
Reference-contexts: FlexLearn over comes other problems in systems similar to EBL. For example, the problem of choosing the level of generality at which a concept should be learned [Braver 88, Dietterich 88] or the difficulty of adapting a concept to reflect new changes <ref> [Braver 88b] </ref>. In FlexLearn, the general concept learned has the necessary functional features for recognizing the examples encountered by the system. This learned concept is similar to the pre-defined general concept given in EBL.
Reference: [Dietterich 88] <author> Dietterich, Thomas G. & Bennett, James S., </author> <year> (1988). </year> <institution> "Varieties of Operationality." In Ore-gon State University Technical Report 88-30-6, Department of Computer Science, Oregon State University, Corvallis, Oregon, </institution> <month> 97331. </month>
Reference-contexts: FlexLearn over comes other problems in systems similar to EBL. For example, the problem of choosing the level of generality at which a concept should be learned <ref> [Braver 88, Dietterich 88] </ref> or the difficulty of adapting a concept to reflect new changes [Braver 88b]. In FlexLearn, the general concept learned has the necessary functional features for recognizing the examples encountered by the system. This learned concept is similar to the pre-defined general concept given in EBL. <p> Learning more concepts increases duplicated information and might slow the system down [Minton88, Mahadevan 88, Tambe88, Holder 90]. Another method for EBL like systems to increase their flexibility level is to increase their level of generality. This puts EBL back to the tradeoff between generality and operationality <ref> [Braver 88, Dietterich 88] </ref>. In some cases, generalizing predicates would not be possible without loss in correctness. For example, in the cup concept, generalizing all bottoms to be stable would not be correct. A car with four wheel is considered stable.
Reference: [Dejong 86] <author> Dejong, G. F., & Mooney, R. J. </author> <year> (1986). </year> <title> "Explanation-Based Learning: An alternative view." </title> <journal> In Machine Learning Journal, </journal> <volume> 1(2), 1:2, </volume> <pages> 145-167. </pages> <note> 8 [Gaines 88] , B. </note> <author> R., & Boose J. H., </author> <year> (1988). </year> <title> "Explanation-Based learning for knowledge-based systems." In Knowledge Acquisition for knowledge-Based Systems, </title> <journal> Vol. </journal> <volume> 1, </volume> <publisher> Academic Press, </publisher> <address> New York, New York, </address> <pages> pp. 217-237. </pages>
Reference-contexts: 1 Introduction In the machine learning community a variety of knowledge based learning systems <ref> [Mitchell86, Dejong 86, Laird 86] </ref> share a goal for their learning mechanism. The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance.
Reference: [Holder 90] <author> Holder, Lawrence B., </author> <year> (1990). </year> <title> "The General Utility Problem in Machine Learning." </title> <booktitle> In Proceedings of the Seventh International Conference on Machine Learning. </booktitle> <address> Austin, Texas: </address> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA., </address> <pages> pp. 402-410. </pages>
Reference-contexts: The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance. It has been noted <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref> that the compiled formats may themselves degrade the systems performance. System performance has been understood, in this context, to be the ability to carry out a task faster on the second pass. In this paper we will address performance from a different aspect. <p> Unfortunately, learning more concepts does not increase its flexibility, it just eliminates the process of learning which would not have been required in case of F EBL = 1. Learning more concepts increases duplicated information and might slow the system down <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref>. Another method for EBL like systems to increase their flexibility level is to increase their level of generality. This puts EBL back to the tradeoff between generality and operationality [Braver 88, Dietterich 88]. <p> One might speculate that with the increase in number of compiled formats in a system their might be a limit after which an architecture like FlexLearn would render faster performance <ref> [Mahadevan 88, Holder 90] </ref>. FlexLearn might experience loss of correctness in some cases due to the inductive method of learning. In EBL like system, generality, as explained in section 2.1, might cause the same effect.
Reference: [Laird 86] <author> Laird, John E., Rosenbloom, P. S., Newell, Alan, </author> <year> (1986). </year> <title> "Chunking in SOAR: The anatomy of a general learning mechanism." </title> <journal> In Machine Learning Journal, </journal> <volume> 1, </volume> <publisher> Kluwer Academic Publishers, </publisher> <pages> pp. 11-46. </pages>
Reference-contexts: 1 Introduction In the machine learning community a variety of knowledge based learning systems <ref> [Mitchell86, Dejong 86, Laird 86] </ref> share a goal for their learning mechanism. The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance.
Reference: [Mahadevan 88] <author> Mahadevan, S., Natarajan, B. K., & Tadepalli P., </author> <year> (1988). </year> <title> "A Framework for Learning as Improving Problem-Solving Performance." </title> <booktitle> In Proceedings of the AAAI Spring Symposium Series on Explanation-Based Learning. </booktitle> <address> Stanford, California: </address> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA., </address> <pages> pp. 215-219. </pages>
Reference-contexts: The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance. It has been noted <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref> that the compiled formats may themselves degrade the systems performance. System performance has been understood, in this context, to be the ability to carry out a task faster on the second pass. In this paper we will address performance from a different aspect. <p> Unfortunately, learning more concepts does not increase its flexibility, it just eliminates the process of learning which would not have been required in case of F EBL = 1. Learning more concepts increases duplicated information and might slow the system down <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref>. Another method for EBL like systems to increase their flexibility level is to increase their level of generality. This puts EBL back to the tradeoff between generality and operationality [Braver 88, Dietterich 88]. <p> One might speculate that with the increase in number of compiled formats in a system their might be a limit after which an architecture like FlexLearn would render faster performance <ref> [Mahadevan 88, Holder 90] </ref>. FlexLearn might experience loss of correctness in some cases due to the inductive method of learning. In EBL like system, generality, as explained in section 2.1, might cause the same effect.
Reference: [Minton88] <author> Minton, S., </author> <year> (1988). </year> <title> "Quantitative Results Concerning the Utility of Explanation-Based Learning." </title> <booktitle> In Proceedings of the AAAI-88, </booktitle> <address> St. Paul, Minnesota, </address> <month> August 21-26, </month> <year> 1988, </year> <pages> pp. 564-569. </pages>
Reference-contexts: The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance. It has been noted <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref> that the compiled formats may themselves degrade the systems performance. System performance has been understood, in this context, to be the ability to carry out a task faster on the second pass. In this paper we will address performance from a different aspect. <p> Unfortunately, learning more concepts does not increase its flexibility, it just eliminates the process of learning which would not have been required in case of F EBL = 1. Learning more concepts increases duplicated information and might slow the system down <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref>. Another method for EBL like systems to increase their flexibility level is to increase their level of generality. This puts EBL back to the tradeoff between generality and operationality [Braver 88, Dietterich 88].
Reference: [Mitchell86] <author> Mitchell, T. M., Keller, R. M., & Kedar-Cabelli, S. T. </author> <year> (1986). </year> <title> Explanation-based generalization: A unifying view. </title> <journal> Machine Learning Journal, </journal> <volume> 1(1), </volume> <pages> pp. 47-80. </pages>
Reference-contexts: 1 Introduction In the machine learning community a variety of knowledge based learning systems <ref> [Mitchell86, Dejong 86, Laird 86] </ref> share a goal for their learning mechanism. The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance. <p> These issues will help to understand how lack of flexibility in a deductive system may occur. Next, the simple cup example <ref> [Mitchell86] </ref> is considered to illustrate the shortcomings in a deductive system. 3 An Example: The Cup The cup example [Mitchell86] is presented as a concept to be learned. Three instances of a cup are presented to EBL (figure 1). <p> These issues will help to understand how lack of flexibility in a deductive system may occur. Next, the simple cup example <ref> [Mitchell86] </ref> is considered to illustrate the shortcomings in a deductive system. 3 An Example: The Cup The cup example [Mitchell86] is presented as a concept to be learned. Three instances of a cup are presented to EBL (figure 1). EBL will try to learn the structural definition of a cup from its functional description.
Reference: [Mooney88] <author> Mooney, Raymond Joseph, </author> <year> (1988). </year> <title> "A General Explanation-Based Learning Mechanism and Its Application to Narrative Understanding." </title> <type> PhD. Thesis, </type> <institution> University of Illinois, Urbana-Champaign, Illinois, </institution> <month> January </month> <year> 1988. </year>
Reference: [Tambe88] <author> Tambe, M., Newell, Alan, </author> <year> (1988). </year> <title> "Some Chunks Are Expensive." </title> <booktitle> In Proceedings of the Fifth International Conference on Machine Learning. </booktitle> <address> Ann Arbor, Michigan: </address> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA., </address> <pages> pp. 451-458. 9 </pages>
Reference-contexts: The goal is to acquire knowledge to improve the system's performance over time. The compiled formats that these systems acquire for achieving their goal might have other effects on the system's performance. It has been noted <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref> that the compiled formats may themselves degrade the systems performance. System performance has been understood, in this context, to be the ability to carry out a task faster on the second pass. In this paper we will address performance from a different aspect. <p> Unfortunately, learning more concepts does not increase its flexibility, it just eliminates the process of learning which would not have been required in case of F EBL = 1. Learning more concepts increases duplicated information and might slow the system down <ref> [Minton88, Mahadevan 88, Tambe88, Holder 90] </ref>. Another method for EBL like systems to increase their flexibility level is to increase their level of generality. This puts EBL back to the tradeoff between generality and operationality [Braver 88, Dietterich 88].
References-found: 12

