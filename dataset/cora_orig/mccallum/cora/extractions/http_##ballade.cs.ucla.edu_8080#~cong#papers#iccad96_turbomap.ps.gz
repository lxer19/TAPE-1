URL: http://ballade.cs.ucla.edu:8080/~cong/papers/iccad96_turbomap.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: An Improved Algorithm for Performance Optimal Technology Mapping with Retiming in LUT-Based FPGA Design  
Author: Jason Cong and Chang Wu 
Address: Los Angeles, CA 90024  
Affiliation: Department of Computer Science University of California,  
Abstract: A novel algorithm, named SeqMapII, of technology mapping with retiming for optimal clock period for K-LUT based FPGAs was recently proposed by Pan and Liu [13]. The time complexity of their algorithm, however, is O(K 3 n 4 log(Kn 2 ) log n) for sequential circuits with n gates, which is too high for medium and large size designs in practice. In this paper, we present three strategies to improve the performance of the approach in [13]: 1) efficient label update with single K-cut computation based on the monotone property of labels that we showed for sequential circuits, 2) a novel approach for the K-cut computation on partial flow networks, which are much smaller in practice, 3) SCC (strongly connected component) partition to further speedup the algorithm. In practice, our algorithm works in O(K 2 n 3 log n) time and O(Kn) space according to our experimental results. It is 2fi10 4 times faster than SeqMapII-opt for computing optimal solutions and 2 times faster than SeqMapII-heu which uses very small expanded circuits as a heuristic. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. K. Brayton, R. Rudell, A. L. Sangiovanni-Vincentelli, and A. R. Wang. </author> <title> Mis: A multiple-level logic optimization system. </title> <journal> IEEE Tans. on Computer-Aided Desing, </journal> <volume> 6(6) </volume> <pages> 1062-1081, </pages> <year> 1987. </year>
Reference-contexts: For an edge e, its 2 When a circuit is not K-bounded, we can use the gate decomposition algorithm, such as balanced tree decomposition <ref> [1] </ref>, dmig [2] or DOGMA [6], to decompose the gates with more than K fanins. weight, denoted w (e), is the number of flipflops on the connection represented by e.
Reference: [2] <author> K. C. Chen, J. Cong, Y. Ding, A. B. Kahng, and P. Trajmar. DAG-Map: </author> <title> Graph-based FPGA Technology Mapping for Delay Optimization. </title> <booktitle> In IEEE Design and Test of Computers, </booktitle> <year> 1992. </year>
Reference-contexts: For an edge e, its 2 When a circuit is not K-bounded, we can use the gate decomposition algorithm, such as balanced tree decomposition [1], dmig <ref> [2] </ref> or DOGMA [6], to decompose the gates with more than K fanins. weight, denoted w (e), is the number of flipflops on the connection represented by e. The path weight, denoted w (p) for a path p, is the sum of weights of all edges on the path. <p> Experimental Results Our TurboMap algorithm has been implemented in C language on Sun SPAR stations and incorporated into SIS package [16]. The test set includes 13 MCNC FSM benchmarks and 4 ISCAS'89 benchmarks. SIS sequential synthesis commands and dmig <ref> [2] </ref> are performed to generate the initial circuits. The results are shown in Table 2. Column NODE lists the numbers of nodes (gates+PIs+POs) in the retiming graphs of the initial circuits. Column FF lists the number of flipflops. Our tests are performed on a SPARC10 workstation with 64MB memory.

Reference: [4] <author> J. Cong and Y. Ding. </author> <title> Combinational Logic Synthesis for SRAM Based Field Programmable Gate Arrays. </title> <journal> ACM Transactions on Design Automation of Electronic Systems, </journal> <volume> 1(2), </volume> <year> 1996. </year> <note> http://www.acm.org/todaes/V1N2/TOC.html. </note>
Reference-contexts: 1. Introduction In this paper, we study the technology mapping with retiming problem for sequential circuits in K-input lookup tables (K-LUTs) based FPGA designs. Most of the previous LUT mapping algorithms (see the survey paper <ref> [4] </ref> by Cong and Ding for details) apply only to combinational circuits. For sequential circuits, they assume that the positions of flipflops are fixed so that the whole circuit can be partitioned into several combinational subcircuits.
Reference: [5] <author> J. Cong and Y.-Y. Hwang. </author> <title> Simultaneous Depth and Area Minimization in LUT-Based FPGA Mapping. </title> <booktitle> In ACM 3rd Int'l Symp. on Field Programmable Gate Ar rays, </booktitle> <pages> pages 68-74, </pages> <year> 1995. </year>
Reference-contexts: And more important, we construct the flow network just large enough to detect whether a K-cut exists. Recall that all the previous max-flow computation based FPGA mapping algorithms <ref> [3, 5, 13, 15] </ref> build the entire expanded circuit or the flow network before the max-flow computation to test the existence of a K-cut.
Reference: [6] <author> J. Cong and Y.-Y. Hwang. </author> <title> Structural Gate Decomposition for Depth-Optimal Technology Mapping in LUT-based FPGA Design. </title> <booktitle> In 33rd ACM/IEEE De sign Automation Conference, </booktitle> <pages> pages 726-729, </pages> <year> 1996. </year>
Reference-contexts: For an edge e, its 2 When a circuit is not K-bounded, we can use the gate decomposition algorithm, such as balanced tree decomposition [1], dmig [2] or DOGMA <ref> [6] </ref>, to decompose the gates with more than K fanins. weight, denoted w (e), is the number of flipflops on the connection represented by e. The path weight, denoted w (p) for a path p, is the sum of weights of all edges on the path.
Reference: [7] <author> J. Cong, J. Peck, and Y. Ding. RASP: </author> <title> A General Logic Synthesis System for SRAM-based FPGAs. </title> <booktitle> In Proc. ACM 4th Int'l Symp. on FPGA, </booktitle> <pages> pages 137-143, </pages> <year> 1996. </year>
Reference-contexts: The experimental results show that TurboMap is 2 fi 10 4 times faster than SeqMapII. In our future work, we want to develop an efficient algorithm to compute the initial state of the mapping solution. Also we are in the process of integrating the TurboMap algorithm into RASP <ref> [7] </ref>. 6. Acknowledgment The authors thank very much Professors Peichan Pan and C. L. Liu for providing SeqMapII program for the comparative study. The authors also appreciate the helpful discussion with Mr. Yeanyow Hwang and Mr. John Peck.
Reference: [8] <author> J. Cong and C. Wu. </author> <title> An Improved Algorithm for Technology Mapping with Retiming for Lookup-Table Based FPGAs. </title> <type> UCLA-CSD 960012, Technique Report, </type> <year> 1996. </year>
Reference-contexts: We have that <ref> [8] </ref>: Theorem 1 (Monotone Property) In a sequential circuit which has a mapping solution with the retimed clock period of no more than c, the labels are monotone. That is, l opt (v) l opt (u) c w (e) for any edge e (u; v) in the original circuit. <p> Let one iteration denote the computation process where l (v) is updated once for every node v (in an arbitrary order). Based on Theorem 1, we can prove that <ref> [8] </ref>: Theorem 2 For a sequential circuit which has a mapping solution with the retimed clock period of no more than c, we have that l new (v) l 0 new (v) l opt (v) at any iteration.
Reference: [9] <author> T. H. Cormen, C. H. Leiserson, and R. L. Rivest. </author> <title> In troduction To Algorithms. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: SCC Partition A strongly connected component (SCC) of a re-timing graph G (V; E; W ) is a maximal set of vertices U V such that for every pair of nodes u and v in U , we have both paths u ; v and v ; u <ref> [9] </ref>. Since the node labels are the minimum l-values which is the longest path from the PIs to the nodes, the labels of two nodes u and v are mutual dependent if they are in one SCC. <p> So the label of u can be computed before v. The algorithm introduced in <ref> [9] </ref> can find all the SCCs and sort them in a topologic order from the PIs to the POs. In TurboMap, the nodes in one SCC will be labeled together with the iterative label computation stated in the preceding two subsections.
Reference: [10] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing Synchronous Systems. </title> <booktitle> In 22nd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 23-36, </pages> <year> 1981. </year>
Reference-contexts: The limitation of this assumption is that one cannot consider the effect of mapping on retiming. However, retiming has been shown to be a very effective technique to move flipflops to reduce the clock period without changing the input-output behavior <ref> [10, 11] </ref>. Therefore, we study the problem of finding the mapping solution with the minimum clock period under retiming for sequential circuits. Several FPGA synthesis and mapping algorithms have been proposed for sequential circuits [12, 15, 17]. However, those algorithms are heuristics in nature.
Reference: [11] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming Synchronous Circuitry. </title> <journal> Algorithmica, </journal> <volume> 6 </volume> <pages> 5-35, </pages> <year> 1991. </year>
Reference-contexts: The limitation of this assumption is that one cannot consider the effect of mapping on retiming. However, retiming has been shown to be a very effective technique to move flipflops to reduce the clock period without changing the input-output behavior <ref> [10, 11] </ref>. Therefore, we study the problem of finding the mapping solution with the minimum clock period under retiming for sequential circuits. Several FPGA synthesis and mapping algorithms have been proposed for sequential circuits [12, 15, 17]. However, those algorithms are heuristics in nature. <p> As in [3], the results in [13, 15] and this paper apply only to K-bounded circuits 2 . We use G (V; E; W ) to denote the retiming graph of a sequential circuit <ref> [11] </ref>, where V is the set of nodes which represents gates in the circuit, E is the set of edges which represents the connection between gates, and W is the set of edge weights. <p> After getting the minimum clock period, TurboMap will generate the mapping solution and then, perform the postprocessing of LUT-packing [3] and retiming to minimize the number of flipflops <ref> [11] </ref>. 4. Experimental Results Our TurboMap algorithm has been implemented in C language on Sun SPAR stations and incorporated into SIS package [16]. The test set includes 13 MCNC FSM benchmarks and 4 ISCAS'89 benchmarks. SIS sequential synthesis commands and dmig [2] are performed to generate the initial circuits. <p> Our tests are performed on a SPARC10 workstation with 64MB memory. K is set to 5. FlowMap [3] is performed to get a upper-bound (shown in Column F M in Table 1) of the clock period () for each example. LUT-packing [3] and retiming <ref> [11] </ref> are performed as postprocessings to get the final solutions. Table 1 shows the comparison of TurboMap with Se-qMapII [13]. SeqMapII has a parameter to set i for E i .
Reference: [12] <author> R. Murgai, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Sequential Synthesis For Table Lookup Programmable Gate Arrays. </title> <booktitle> In 30th ACM/IEEE De sign Automation Conference, </booktitle> <pages> pages 224-229, </pages> <year> 1993. </year>
Reference-contexts: Therefore, we study the problem of finding the mapping solution with the minimum clock period under retiming for sequential circuits. Several FPGA synthesis and mapping algorithms have been proposed for sequential circuits <ref> [12, 15, 17] </ref>. However, those algorithms are heuristics in nature. A significant advancement was made recently by Pan and Liu [13]. They proposed an algorithm named SeqMapII to find a mapping solution with the minimum clock period under retiming.
Reference: [13] <author> P. Pan and C. L. Liu. </author> <title> Optimal Clock Period FPGA Technology Mapping for Sequential Circuits. </title> <booktitle> In 33th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 720-725, </pages> <year> 1996. </year>
Reference-contexts: Several FPGA synthesis and mapping algorithms have been proposed for sequential circuits [12, 15, 17]. However, those algorithms are heuristics in nature. A significant advancement was made recently by Pan and Liu <ref> [13] </ref>. They proposed an algorithm named SeqMapII to find a mapping solution with the minimum clock period under retiming. They introduced the idea of expanded circuits to represent all possible K-LUTs under retiming and node-replication. Iterative computation is used to compute labels of all nodes. <p> In this paper, we present three strategies to improve the performance of the label computation in Se-qMapII <ref> [13] </ref>, which is the most time-consuming step. First, we proved that the monotone property of labels hold for sequential circuits and develop a more efficient label update approach to speed up the algorithm by a factor of log (Kn 2 ). <p> Obviously, if Problem 2 can be solved, Problem 1 can be solved with binary or linear search. As in [3], the results in <ref> [13, 15] </ref> and this paper apply only to K-bounded circuits 2 . <p> The path length, denoted length (p) of a path p, is P e2p length (e). The l-value l M (v) of a node v is the maximum length of all paths from the PIs to v in M 3 . It was shown in <ref> [13] </ref> that for a mapping solution M and a given c, the retimed clock period is c or less iff l M (v) c + 1 for every PO v. <p> It was shown that there is a mapping solution whose retimed clock period is c or less, iff l opt (v) c + 1 for every PO v <ref> [13] </ref>. In a directed graph G with one sink and one source, a cut (X; X) is a partition of the nodes in the graph such that the sink is in X and the source is in X. <p> A cut is called K-cut, if j V (X; X) j K. 3. TurboMap Algorithm 3.1. Review of the SeqMapII Algorithm The SeqMapII algorithm consists of three steps: 1) label computation, 2) mapping generation, 3) retiming to get the final solution <ref> [13] </ref>. Their labeling process computes a lower-bound on the value of each node label and repeatedly improve the lower-bounds until there is no further improvement for all the lower-bounds. The initial lower-bounds for all PIs are zero and for all the others nodes are 1. <p> The initial lower-bounds for all PIs are zero and for all the others nodes are 1. For the current lower-bound l (v) of each node v, Pan and Liu <ref> [13] </ref> presented a procedure IMPROVE (v) to determine the new lower-bound l new (v). They introduced the concept of the expanded circuit for each node. The expanded circuit of node v is used to represent all possible K-LUTs for implementing v with consideration of retiming and node replication. <p> E i v . The control number i of E i v is the shortest distance (in terms of the number of edges) between the root and each source in E i v that is not a replication of a PI. Pan and Liu <ref> [13] </ref> showed that to examine all K-LUTs for a node v, it sufficed to examine all the K-LUTs that can be derived from the K-cuts in E Kn v . <p> It was shown that the numbers of nodes and edges in E Kn v are bounded by O (Kn 2 ) and O (K 2 n 2 ), respectively, where n is the number nodes in the original circuit <ref> [13] </ref>. In the expanded circuit of node v, based on the current lower-bound l (u) of node labels, let the height of a K-cut (X; X) be h (X; X) = maxfl (u) c w + 1 j 8 u w 2 V (X; X)g: In SeqMapII [13], the new lower-bound <p> the original circuit <ref> [13] </ref>. In the expanded circuit of node v, based on the current lower-bound l (u) of node labels, let the height of a K-cut (X; X) be h (X; X) = maxfl (u) c w + 1 j 8 u w 2 V (X; X)g: In SeqMapII [13], the new lower-bound is computed by: Kcut (X;X) in E Kn v h (X; X): This value is determined by binary search among O (Kn 2 ) possible values in fl (u) c w + 1 j u w 2 E Kn v g and performing a K-cut computation for <p> The computation time for every l new (v) is O (K 3 n 2 log (Kn 2 )). The labels of all nodes can be determined in O (K 3 n 4 log (Kn 2 )) time <ref> [13] </ref>. This approach is the first polynomial algorithm to find a mapping solution with the optimal clock period under retiming. But we have observed two shortcomings in this approach. <p> Since E Kn v has O (Kn 2 ) nodes and O (K 2 n 2 ) edges, to compute l new (v) in SeqMapII <ref> [13] </ref> takes O (K 3 n 4 log (Kn 2 )) time. To compute l 0 new (v) in Tur-boMap takes only O (K 3 n 4 ) time and l 0 new (v) will converge to l opt (v) with no more iterations than l new (v) need. 3.3. <p> To check whether l 0 new (v) L (v) with the approach in SeqMapII <ref> [13] </ref>, we need to build the E Kn v and construct the corresponding flow network and then, perform the K-cut computation. In TurboMap, to check whether l 0 new (v) L (v), we construct the flow network incrementally without constructing the entire E Kn v . <p> And more important, we construct the flow network just large enough to detect whether a K-cut exists. Recall that all the previous max-flow computation based FPGA mapping algorithms <ref> [3, 5, 13, 15] </ref> build the entire expanded circuit or the flow network before the max-flow computation to test the existence of a K-cut. <p> Our results show that with SCC partitioning, the computation time of TurboMap can be reduced by 50% in average. 3.5. Summary of the TurboMap Algorithm In preceding subsections, we have presented three strategies to speedup the label computation of Se-qMapII algorithm <ref> [13] </ref>. For each given clock period, our algorithm named TurboMap, perform SCC partition at first. Then, for the SCCs in the topologic order from the PIs to the POs, TurboMap computes the node labels for each SCC component separately according to the topological order. <p> FlowMap [3] is performed to get a upper-bound (shown in Column F M in Table 1) of the clock period () for each example. LUT-packing [3] and retiming [11] are performed as postprocessings to get the final solutions. Table 1 shows the comparison of TurboMap with Se-qMapII <ref> [13] </ref>. SeqMapII has a parameter to set i for E i . We choose i = Kn (SeqMapII-opt, which guarantees the optimal solution) and i = 6 (SeqMapII-heu, which was used in the experiments by Pan and Liu [13] as a heuristic method), respectively for each example. <p> Table 1 shows the comparison of TurboMap with Se-qMapII <ref> [13] </ref>. SeqMapII has a parameter to set i for E i . We choose i = Kn (SeqMapII-opt, which guarantees the optimal solution) and i = 6 (SeqMapII-heu, which was used in the experiments by Pan and Liu [13] as a heuristic method), respectively for each example. Note that both TurboMap and SeqMapII-opt can get mapping solutions with the optimal clock periods under retiming, but TurboMap is 2fi10 4 times faster. <p> To show the effect of our K-cut computation on partial flow networks, we compare the sizes (in terms of numbers of nodes) of our flow networks with E Kn and E 6 which are used in SeqMapII <ref> [13] </ref>. The columns with subscripts max and avg list the maximum and average sizes, respectively, of the expanded circuits over all nodes in each example and generated by each algorithm. For the last four examples, we cannot generate E Kn due to both time and space limitations. <p> Conclusions We present a new algorithm for technology mapping with retiming for optimal clock period as an improvement of the SeqMapII algorithm by Pan and Liu <ref> [13] </ref>. We showed the monotone property of node labels and propose an efficient label update with single K-cut computation based on partial flow networks. SCC partition is used to further speedup the algorithm. The experimental results show that TurboMap is 2 fi 10 4 times faster than SeqMapII.
Reference: [14] <author> P. Pan and C. L. Liu. </author> <title> private communication. </title> <year> 1996. </year>
Reference-contexts: However, they feel that the resulting complexity is still too high for practical designs. Therefore, they turned to develop efficient heuristics based on the idea in SeqMapII <ref> [14] </ref>. less than n, which is a big improvement over O (Kn 2 ). Finally, SCC (strongly connected component) partition is used to eliminate many redundant label computation and further speed up the algorithm.
Reference: [15] <author> P. Pan and C. L. Liu. </author> <title> Technology Mapping of Sequential Circuits for LUT-based FPGAs for Performance. </title> <booktitle> In ACM/SIGDA International Symposium on FPGAs, </booktitle> <pages> pages 58-64, </pages> <year> 1996. </year>
Reference-contexts: Therefore, we study the problem of finding the mapping solution with the minimum clock period under retiming for sequential circuits. Several FPGA synthesis and mapping algorithms have been proposed for sequential circuits <ref> [12, 15, 17] </ref>. However, those algorithms are heuristics in nature. A significant advancement was made recently by Pan and Liu [13]. They proposed an algorithm named SeqMapII to find a mapping solution with the minimum clock period under retiming. <p> A mapping solution in which the output signals of the LUTs are a subset of those in the original circuit is referred as simple mapping solution <ref> [15] </ref>. Pan and Liu [15] showed that there is a simple mapping solution whose retimed clock period is equal to the minimum clock period among all mapping solutions. <p> A mapping solution in which the output signals of the LUTs are a subset of those in the original circuit is referred as simple mapping solution <ref> [15] </ref>. Pan and Liu [15] showed that there is a simple mapping solution whose retimed clock period is equal to the minimum clock period among all mapping solutions. <p> Obviously, if Problem 2 can be solved, Problem 1 can be solved with binary or linear search. As in [3], the results in <ref> [13, 15] </ref> and this paper apply only to K-bounded circuits 2 . <p> And more important, we construct the flow network just large enough to detect whether a K-cut exists. Recall that all the previous max-flow computation based FPGA mapping algorithms <ref> [3, 5, 13, 15] </ref> build the entire expanded circuit or the flow network before the max-flow computation to test the existence of a K-cut.
Reference: [16] <author> E. Sentovich, K. Singh, L. Lavagno, C. Moon, R. Mur-gai, A. Saldanha, H. Savoj, P. Stephan, R. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> SIS: A System for Sequential Circuit Synthesis. </title> <institution> Electronics Research Lab oratory, </institution> <note> Memorandum No. UCB/ERL M92/41, </note> <year> 1992. </year>
Reference-contexts: Experimental Results Our TurboMap algorithm has been implemented in C language on Sun SPAR stations and incorporated into SIS package <ref> [16] </ref>. The test set includes 13 MCNC FSM benchmarks and 4 ISCAS'89 benchmarks. SIS sequential synthesis commands and dmig [2] are performed to generate the initial circuits. The results are shown in Table 2. Column NODE lists the numbers of nodes (gates+PIs+POs) in the retiming graphs of the initial circuits.
Reference: [17] <author> U. Weinmann and W. Rosenstiel. </author> <title> Technology Mapping For Sequential Circuits Based On Retiming Techniques. </title> <booktitle> In Proceedings of European Design Automation Conference, </booktitle> <pages> pages 318-323, </pages> <year> 1993. </year>
Reference-contexts: Therefore, we study the problem of finding the mapping solution with the minimum clock period under retiming for sequential circuits. Several FPGA synthesis and mapping algorithms have been proposed for sequential circuits <ref> [12, 15, 17] </ref>. However, those algorithms are heuristics in nature. A significant advancement was made recently by Pan and Liu [13]. They proposed an algorithm named SeqMapII to find a mapping solution with the minimum clock period under retiming.
References-found: 16

