URL: ftp://iamftp.unibe.ch/pub/TechReports/1995/iam-95-003.ps.gz
Refering-URL: 
Root-URL: 
Title: Subgraph Isomorphism in Polynomial Time  
Author: B.T. Messmer and H. Bunke 
Address: Bern, Neubruckstr. 10, Bern, Switzerland  
Affiliation: Institut fur Informatik und angewandte Mathematik, University of  
Abstract: In this paper, we propose a new approach to the problem of subgraph isomorphism detection. The new method is designed for systems which differentiate between graphs that are a priori known, so-called model graphs, and unknown graphs, so-called input graphs. The problem to be solved is to find a subgraph isomorphism from an input graph, which is given on-line, to any of the model graphs. The new method is based on an intensive preprocessing step in which the model graphs are used to create a decision tree. At run time, the input graph is then classified by the decision tree and all model graphs for which there exists a subgraph isomorphism from the input graph are detected. If we neglect the time needed for preprocessing, the computational complexity of the new subgraph isomorphism algorithm is only quadratic in the number of input graph vertices. Furthermore, it is independent of the number of model graphs and the number of edges in any of the graphs. However, the decision tree that is constructed in the preprocessing step may grow exponentially with the number of vertices of the model graphs. Therefore, we present several pruning techniques which aim at reducing the size of the decision tree. A computational complexity analysis of the new method is given. Also, the advantages and disadvantages of the new algorithm are studied in a number of practical experiments with randomly generated graphs. Finally, the application of the algorithm in a graphic symbol recognition system is briefly discussed.
Abstract-found: 1
Intro-found: 1
Reference: [Bab81] <author> L. Babai. </author> <title> Moderately exponential bound for graph isomorphism. </title> <editor> In F. Gec-seg, editor, </editor> <booktitle> Lecture Notes in Computer Science: Fundamentals of Computation Theory, </booktitle> <pages> pages 34-50. </pages> <publisher> Springer Verlag, </publisher> <year> 1981. </year>
Reference-contexts: In the following, we will give a brief overview of graph and subgraph isomorphism algorithms. There are two basic approaches that past research has taken towards the problem of graph isomorphism. The first approach is based on group-theoretic concepts and the study of permutation groups. In <ref> [Bab81] </ref>, it was shown that there exists a moderately 1 exponential bound for the general graph isomorphism problem. Furthermore, by imposing certain restrictions on the properties of the graphs, it was possible to derive algorithms that have a polynomially bounded complexity.
Reference: [CG70] <author> D.G. Corneil and C.C. Gotlieb. </author> <title> An efficient algorithm for graph isomorphism. </title> <journal> Journal of the ACM, </journal> <volume> 17 </volume> <pages> 51-64, </pages> <year> 1970. </year>
Reference-contexts: Most of these algorithms are based on a state-space search with backtracking. One of the first publications in this field is the one by Corneil and Gotlieb <ref> [CG70] </ref>. A major improvement of the backtracking method was then presented by Ullman, who introduced a refinement method which reduces the search space of the backtracking procedure remarkably [Ull76]. For an overview of the publications on graph isomorphism see [Gat79, RC77].
Reference: [Eve79] <author> S. </author> <title> Even. Graph Algorithms. </title> <publisher> Pitman Publ., </publisher> <year> 1979. </year>
Reference-contexts: It is straightforward to show that the adjacency matrix of any connected graph can be transformed such that the above condition holds. This problem is equivalent to finding a spanning tree of a graph and thus it can be solved in quadratic time <ref> [Eve79] </ref>. We can then reduce the number of permuted adjacency matrices A (G) that must be classified by the decision tree. Namely, all permutations of the model matrix for which the above condition does not hold, may be discarded at compilation time.
Reference: [FFG90] <author> B. Falkenhainer, K.D. Forbus, and D. Gentner. </author> <title> The structure-mapping engine: Algorithms and examples. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 1-63, </pages> <year> 1989/90. </year>
Reference-contexts: A major improvement of the backtracking method was then presented by Ullman, who introduced a refinement method which reduces the search space of the backtracking procedure remarkably [Ull76]. For an overview of the publications on graph isomorphism see [Gat79, RC77]. More recent work is described in <ref> [MLL92, FFG90] </ref> where the graph isomorphism problem was reduced to the problem of clique detection by constructing an association graph for all the possible vertex mappings. And most recently, a network based approach to graph matching has been proposed by the authors [MB95b].
Reference: [Gat79] <author> G. Gati. </author> <title> Further annotated bibliography on the isomorphism disease. </title> <journal> Journal of Graph Theory, </journal> <pages> pages 96-109, </pages> <year> 1979. </year>
Reference-contexts: A major improvement of the backtracking method was then presented by Ullman, who introduced a refinement method which reduces the search space of the backtracking procedure remarkably [Ull76]. For an overview of the publications on graph isomorphism see <ref> [Gat79, RC77] </ref>. More recent work is described in [MLL92, FFG90] where the graph isomorphism problem was reduced to the problem of clique detection by constructing an association graph for all the possible vertex mappings.
Reference: [GB89] <author> T. Glauser and H. Bunke. </author> <title> Generation of decision trees from CAD-models for recognition tasks. </title> <editor> In H. Burkhardt, K.H. Hohne, and B. Neumann, editors, </editor> <booktitle> Mustererkennung 1989, </booktitle> <pages> pages 334-340. </pages> <address> Hamburg, </address> <year> 1989. </year> <note> (in German). 32 </note>
Reference-contexts: Another approach is taken by Paris in [Par93] where it is proposed to calculate a structural index that is organized in a hierarchical classification network similar to the network-based graph matching described in [MB95b]. Of high interest to the present paper are the indexing approaches that are proposed in <ref> [Ike87, GB89, Spi93] </ref>. Instead of using an indexing mechanism as a preprocessor to some conventional subgraph isomorphism algorithm, the database of graphs is transformed into a decision tree. The decision tree is then used to directly and simultaneously index and match the model graphs with the input graph.
Reference: [GJ79] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference-contexts: As of today, it is still an open question whether the general graph isomorphism problem can be solved by an algorithm that is only polynomial in time and in space <ref> [GJ79] </ref>. All algorithms that have been proposed in the literature so far have an exponential time complexity in the worst case. Also, the problem of subgraph isomorphism detection is known to be NP-complete [GJ79]. In the following, we will give a brief overview of graph and subgraph isomorphism algorithms. <p> isomorphism problem can be solved by an algorithm that is only polynomial in time and in space <ref> [GJ79] </ref>. All algorithms that have been proposed in the literature so far have an exponential time complexity in the worst case. Also, the problem of subgraph isomorphism detection is known to be NP-complete [GJ79]. In the following, we will give a brief overview of graph and subgraph isomorphism algorithms. There are two basic approaches that past research has taken towards the problem of graph isomorphism. The first approach is based on group-theoretic concepts and the study of permutation groups.
Reference: [Hof82] <author> C.M. Hoffman. </author> <title> Group-theoretic Algorithms and Graph Isomorphism. </title> <publisher> Springer Verlag, </publisher> <year> 1982. </year>
Reference-contexts: Furthermore, by imposing certain restrictions on the properties of the graphs, it was possible to derive algorithms that have a polynomially bounded complexity. For example, Luks and Hoffman describe a polynomially bounded method for the isomorphism detection of graphs with bounded valence <ref> [Hof82] </ref>. For the special case of trivalent graph isomorphism, it was show in [Luk82] that algorithms with a computational complexity of O (n 6 ) exist. In [HW74] a method for the computation of the isomorphism of planar graphs is proposed that has only a linear time complexity.
Reference: [HS88] <author> R. Horaud and T. Skordas. </author> <title> Structural matching for stereo vision. </title> <booktitle> In Proc. 9.th ICPR, </booktitle> <pages> pages 439-445, </pages> <year> 1988. </year>
Reference-contexts: The basic idea of indexing is to use specific and easily computable features of an input graph in order to select a small set of model graphs out of a large database. In <ref> [HS88] </ref>, Horaud proposes to use the second immanantal polynomial of the Laplacian matrix of a graph as an index into the database of graphs.
Reference: [HW74] <author> J.E. Hopcroft and J.K. Wong. </author> <title> Linear time algorithm for isomorphism of planar graphs. </title> <booktitle> In Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 172-184, </pages> <year> 1974. </year>
Reference-contexts: For example, Luks and Hoffman describe a polynomially bounded method for the isomorphism detection of graphs with bounded valence [Hof82]. For the special case of trivalent graph isomorphism, it was show in [Luk82] that algorithms with a computational complexity of O (n 6 ) exist. In <ref> [HW74] </ref> a method for the computation of the isomorphism of planar graphs is proposed that has only a linear time complexity.
Reference: [Ike87] <author> K. </author> <title> Ikeuchi. Generating an interpretation tree from a CAD model for 3D-object recognition in bin-picking tasks. </title> <journal> International Journal of Computer Vision, </journal> <volume> 1(2) </volume> <pages> 145-165, </pages> <year> 1987. </year>
Reference-contexts: Another approach is taken by Paris in [Par93] where it is proposed to calculate a structural index that is organized in a hierarchical classification network similar to the network-based graph matching described in [MB95b]. Of high interest to the present paper are the indexing approaches that are proposed in <ref> [Ike87, GB89, Spi93] </ref>. Instead of using an indexing mechanism as a preprocessor to some conventional subgraph isomorphism algorithm, the database of graphs is transformed into a decision tree. The decision tree is then used to directly and simultaneously index and match the model graphs with the input graph.
Reference: [Luk82] <author> E.M. Luks. </author> <title> Isomorphism of graphs of bounded valence can be tested in polynomial time. </title> <journal> Journal of Computer and System Sciences, </journal> <pages> pages 42-65, </pages> <year> 1982. </year>
Reference-contexts: For example, Luks and Hoffman describe a polynomially bounded method for the isomorphism detection of graphs with bounded valence [Hof82]. For the special case of trivalent graph isomorphism, it was show in <ref> [Luk82] </ref> that algorithms with a computational complexity of O (n 6 ) exist. In [HW74] a method for the computation of the isomorphism of planar graphs is proposed that has only a linear time complexity.
Reference: [MB95a] <author> B.T. Messmer and H. Bunke. </author> <title> Automatic learning and recognition of graphical symbols in engineering drawings. </title> <booktitle> In Proceedings Int. WorkShop on Graphics Recognition, </booktitle> <address> University Park, Pennsylvania, </address> <year> 1995. </year>
Reference-contexts: The system has been previously described by the authors in <ref> [MB95a] </ref>. The main purpose of the system is to interpret technical line drawings by locating predefined symbols. The drawings and symbols are required to consist of straight line segments.
Reference: [MB95b] <author> B.T. Messmer and H. Bunke. </author> <title> A new method for efficient error-correcting subgraph isomorphism. </title> <editor> In D. Dori and A. Bruckstein, editors, </editor> <title> Syntactic and Structural Pattern Recognition. </title> <publisher> World Scientific Publ. Company, </publisher> <address> Singapore, </address> <note> to appear in 1995. </note>
Reference-contexts: More recent work is described in [MLL92, FFG90] where the graph isomorphism problem was reduced to the problem of clique detection by constructing an association graph for all the possible vertex mappings. And most recently, a network based approach to graph matching has been proposed by the authors <ref> [MB95b] </ref>. So far, we have only considered the problem of finding a graph or subgraph isomor-phism between two graphs at a time. However, in practical applications there is often a database of graphs, so-called model graphs, and a single unknown input graph that must be tested. <p> Another approach is taken by Paris in [Par93] where it is proposed to calculate a structural index that is organized in a hierarchical classification network similar to the network-based graph matching described in <ref> [MB95b] </ref>. Of high interest to the present paper are the indexing approaches that are proposed in [Ike87, GB89, Spi93]. Instead of using an indexing mechanism as a preprocessor to some conventional subgraph isomorphism algorithm, the database of graphs is transformed into a decision tree. <p> For comparison reasons, we also applied the conventional 29 algorithm on its own and the network based algorithm that was developed by the authors and has proven to be efficient for labeled graph matching <ref> [MB95b] </ref>. Note that both the conventional algorithm and the network based algorithm required more time than the new algorithm based on the depth-pruned decision tree.
Reference: [MLL92] <author> S.H. Myaeng and A. Lopez-Lopez. </author> <title> Conceptual graph matching: a flexible algorithm and experiments. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 4 </volume> <pages> 107-126, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: A major improvement of the backtracking method was then presented by Ullman, who introduced a refinement method which reduces the search space of the backtracking procedure remarkably [Ull76]. For an overview of the publications on graph isomorphism see [Gat79, RC77]. More recent work is described in <ref> [MLL92, FFG90] </ref> where the graph isomorphism problem was reduced to the problem of clique detection by constructing an association graph for all the possible vertex mappings. And most recently, a network based approach to graph matching has been proposed by the authors [MB95b].
Reference: [Par93] <author> S. Paris. </author> <title> Structural recognition using an index. </title> <editor> In S. Impedovo, editor, </editor> <booktitle> Proceedings of the 7'th Int. Conf. on Image Analysis and Processing: Progress in Image Analysis and Processing III, </booktitle> <pages> pages 258-265. </pages> <publisher> World Scientific, </publisher> <year> 1993. </year>
Reference-contexts: However, this index is only unique for graphs with less than 12 vertices and its computation requires O (n 4 ) steps, where n indicates the number of vertices in the graph. Another approach is taken by Paris in <ref> [Par93] </ref> where it is proposed to calculate a structural index that is organized in a hierarchical classification network similar to the network-based graph matching described in [MB95b]. Of high interest to the present paper are the indexing approaches that are proposed in [Ike87, GB89, Spi93].
Reference: [RC77] <author> R.C.Read and D.G. Corneil. </author> <title> The graph isomorphism disease. </title> <journal> Journal of Graph Theory, </journal> <volume> 1 </volume> <pages> 339-363, </pages> <year> 1977. </year>
Reference-contexts: A major improvement of the backtracking method was then presented by Ullman, who introduced a refinement method which reduces the search space of the backtracking procedure remarkably [Ull76]. For an overview of the publications on graph isomorphism see <ref> [Gat79, RC77] </ref>. More recent work is described in [MLL92, FFG90] where the graph isomorphism problem was reduced to the problem of clique detection by constructing an association graph for all the possible vertex mappings.
Reference: [Set90] <author> I. K. Sethi. </author> <title> Entropy nets: From decision trees to neural networks. </title> <booktitle> In Neural Networks: Theoretical Foundations and Analysis, </booktitle> <pages> pages 275-283. </pages> <publisher> IEEE Press, </publisher> <year> 1990. </year>
Reference-contexts: Topics of future research may include the adaption of the method to the general subgraph isomorphism and to the error-tolerant subgraph isomorphism problem. Another interesting aspect will be a possible mapping of decision tree structures to neural networks as indicated in <ref> [Set90] </ref>. By such a mapping it would be possible to parallelize the decision tree and thus arrive at linear time complexity for the subgraph isomorphism detection based on the decision tree approach.
Reference: [Spi93] <author> L. Spirkovska. </author> <title> Three-dimensional object recognition using similar triangles and decision trees. </title> <journal> Pattern Recognition, </journal> <volume> 26(5) </volume> <pages> 727-732, </pages> <year> 1993. </year>
Reference-contexts: Another approach is taken by Paris in [Par93] where it is proposed to calculate a structural index that is organized in a hierarchical classification network similar to the network-based graph matching described in [MB95b]. Of high interest to the present paper are the indexing approaches that are proposed in <ref> [Ike87, GB89, Spi93] </ref>. Instead of using an indexing mechanism as a preprocessor to some conventional subgraph isomorphism algorithm, the database of graphs is transformed into a decision tree. The decision tree is then used to directly and simultaneously index and match the model graphs with the input graph.
Reference: [Ull76] <author> J.R. Ullman. </author> <title> An algorithm for subgraph isomorphism. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 23(1) </volume> <pages> 31-42, </pages> <year> 1976. </year> <month> 33 </month>
Reference-contexts: One of the first publications in this field is the one by Corneil and Gotlieb [CG70]. A major improvement of the backtracking method was then presented by Ullman, who introduced a refinement method which reduces the search space of the backtracking procedure remarkably <ref> [Ull76] </ref>. For an overview of the publications on graph isomorphism see [Gat79, RC77]. More recent work is described in [MLL92, FFG90] where the graph isomorphism problem was reduced to the problem of clique detection by constructing an association graph for all the possible vertex mappings. <p> Notice that S m;m (P M 2 P T ) = S m;n (P )M 2 (S m;n (P )) T . 3 A Brief Review of Ullman's Algorithm For comparison reasons, we briefly review Ullman's method <ref> [Ull76] </ref>. It can be applied to both graph and subgraph isomorphism detection. The method is based on backtracking and a refinement procedure. Out of all methods that have been mentioned in the introduction, Ullman's method is considered one of the fastest algorithm for the subgraph isomorphism problem. <p> For the practical experiments that are documented in Section 8, we implemented the backtracking procedure along with the refinement steps described by Ullman <ref> [Ull76] </ref>. The refinement procedure is based on the idea of forward checking whether the assignment p ki = 1 in step (3.b.i) is locally consistent with at least one entry p lj = 1 for each row m l &gt; k in the future search process.
References-found: 20

