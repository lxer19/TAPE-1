URL: file://dream.dai.ed.ac.uk/pub/papers/PS/rp513.ps.gz
Refering-URL: http://www.dai.ed.ac.uk:80/staff/personal_pages/bundy/projects/96-97/normal.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The Use of Proof Plans for Normalization  
Author: Alan Bundy Bledsoe 
Degree: Submitted to the Festschrift in Honour of Woody  
Note: c Alan Bundy  
Address: 80 South Bridge Edinburgh EH1 1HN Scotland  
Affiliation: Department of Artificial Intelligence University of Edinburgh  
Date: July 7, 1992  
Pubnum: DAI Research Paper No.  
Abstract-found: 0
Intro-found: 1
Reference: [Boyer & Moore 88] <author> R.S. Boyer and J.S. Moore. </author> <title> Integrating decision procedures into heuristic theorem provers: A case study of linear arithmetic. </title> <editor> In J.E. Hayes, J. Richards, and D. Michie, editors, </editor> <booktitle> Machine Intelligence 11, </booktitle> <pages> pages 83-124, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction In <ref> [Boyer & Moore 88] </ref>, Boyer and Moore investigate a case study in the use of decision procedures in automated deduction, namely a decision procedure for linear arithmetic. <p> In this case such terms are treated as if they were variables. This example shows that special-purpose proof plans can be applied outside their intended syntactic class, and will still behave as required. 3 Taken from <ref> [Boyer & Moore 88] </ref>. 11 10.3 Bridging between Proof Plans If an additional disjunct in the bnf of a class does make a recursive call to the class, then it cannot be treated as a base case. <p> These advantages go some way to address the issue, raised in <ref> [Boyer & Moore 88] </ref>, of how to integrate decision procedures into theorem provers in a way that facilitates their flexible interaction. In particular, it suggests a modular way to do this that facilitates modification of either decision procedure or theorem prover without major reprogramming.
Reference: [Bundy 88] <author> A. Bundy. </author> <title> The use of explicit plans to guide inductive proofs. </title> <editor> In R. Lusk and R. Overbeek, editors, </editor> <booktitle> 9th Conference on Automated Deduction, </booktitle> <pages> pages 111-120. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year> <note> Longer version available from Edinburgh as DAI Research Paper No. 349. </note>
Reference-contexts: It would not be a simple matter to modify this decision procedure or to swap it for another one. In this paper we initiate an investigation into the use of proof plans, <ref> [Bundy 88] </ref>, for implementing decision procedures that might help solve these problems. The hypothesis we are trying to test is that proof plans will provide a modular representation of decision procedures that will facilitate their synthesis and modification and their interaction with the theorem provers in which they are embedded.
Reference: [Bundy et al 91] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill. </author> <title> Experiments with proof plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7 </volume> <pages> 303-324, </pages> <year> 1991. </year> <note> Earlier version available from Edinburgh as DAI Research Paper No 413. </note>
Reference-contexts: Finally, we illustrate the sort of flexible application of normalizers that the proof plans approach facilitates. 2 Proof Plans A proof plan is a representation of the structure of all or part of a mathematical proof. In <ref> [Bundy et al 91] </ref> we describe the use of proof plans to control the search for proofs of mathematical conjectures. The key idea is that many proofs share common structure, either in whole or in part. We analyse the structure of a family of proofs and identify any common structure. <p> Plan formation can be used in two modes: on-line To prove a particular conjecture the planner can put together some general-purpose proof plans into a special-purpose proof plan, customised for this conjecture. Our planner, CL A M, does this, <ref> [Bundy et al 91] </ref>. off-line To synthesise a new general-purpose proof plan without regard to any particular conjec ture. Desimone has built a planner of this form, [Desimone 89].
Reference: [Desimone 89] <author> R.V. Desimone. </author> <title> Learning Control Knowledge within an Explanation-Based Learning Framework. </title> <type> Unpublished PhD thesis, </type> <institution> Dept. of Artificial Intelligence, University of Edinburgh, </institution> <year> 1989. </year>
Reference-contexts: Our planner, CL A M, does this, [Bundy et al 91]. off-line To synthesise a new general-purpose proof plan without regard to any particular conjec ture. Desimone has built a planner of this form, <ref> [Desimone 89] </ref>. In this paper we will outline some general-purpose proof plans which we claim are of general utility in putting expressions into normal form.
Reference: [Hodes 71] <author> L. Hodes. </author> <title> Solving problems by formula manipulation. </title> <booktitle> In Proceedings of the Second IJCAI, </booktitle> <pages> pages 553-559. </pages> <publisher> The British Computer Society, </publisher> <year> 1971. </year>
Reference-contexts: So the efficiency of the decision procedure itself is of secondary importance. Boyer and Moore's original implementation took a decision procedure of Hodes, <ref> [Hodes 71] </ref>, and allowed their theorem prover to call it when a sub-goal fell within its scope.
Reference: [Sterling et al 89] <author> L. Sterling, A. Bundy, L. Byrd, R. O'Keefe, and B. Silver. </author> <title> Solving symbolic equations with PRESS. </title> <journal> J. Symbolic Computation, </journal> <volume> 7 </volume> <pages> 71-84, </pages> <year> 1989. </year> <note> Also available from Edinburgh as DAI Research Paper 171. 13 </note>
Reference-contexts: Fortunately, much of this work has already been done. Our press equation solving program, <ref> [Sterling et al 89] </ref>, was implemented using a precurser of proof plans, which we called press methods. The press methods of polysolve, collection and isolation are more than adequate for the simple linear equation solving required in Hodes' procedure. They could easily be realised as proof plans.
References-found: 6

