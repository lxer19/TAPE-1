URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/project/phrensy/pub/papers/compressed/ColeMMMRSSV98.ps.gz
Refering-URL: http://www.cs.cmu.edu/~bmm/ColeMMMRSSV98.html
Root-URL: 
Title: Randomized Protocols for Low-Congestion Circuit Routing in Multistage Interconnection Networks  
Author: Richard Cole Bruce M. Maggs Friedhelm Meyer auf der Heide Michael Mitzenmacher Andrea W. Richa Klaus Schroder Ramesh K. Sitaraman k Berthold Vocking 
Abstract: In this paper we study randomized algorithms for circuit switching on multistage networks related to the butterfly. We devise algorithms that route messages by constructing circuits (or paths) for the messages with small congestion, dilation, and setup time. Our algorithms are based on the idea of having each message choose a route from two possibilities, a technique that has previously proven successful in simpler load balancing settings. As an application of our techniques, we propose a novel design for a data server. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Aleliunas. </author> <title> Randomized parallel communication. </title> <booktitle> In Proceedings of the ACM SIGACTSIGOPS Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 6072, </pages> <month> August </month> <year> 1982. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [2] <author> S. Arora, T. Leighton, and B. Maggs. </author> <title> On-line algorithms for path selection in a non-blocking network. </title> <journal> SIAM Journal on Computing, </journal> <volume> 25(3), </volume> <pages> pages 600625, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Networks such as the randomly-wired multibutterfly are known to have good routing and fault tolerance properties [40, 22]. Recent results provide algorithms for routing circuits for any permutation routing problem with congestion 1 in multibutterfly and multi-Benes networks with set-up time O (log n) <ref> [2, 32] </ref>. Unlike these networks, our results in Section 2 apply to commonly-used networks like B n and BB n that require neither random wiring nor expanders. Balls-and-bins problem. Our approach to circuit routing is influenced by recent advances in the classical balls-and-bins problem.
Reference: [3] <author> J. Aspnes, Y. Azar, A. Fiat, S. Plotkin, and O. Waarts. </author> <title> Online machine scheduling with applications to load balancing and virtual circuit routing. </title> <booktitle> In Proc. 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 240249, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: These dependencies substantially increase the difficulty of the analysis. Circuit routing in general topology networks. Dynamic circuit-switching has been extensively studied in an on-line competitive framework for arbitrary network topologies. (See [33] for a survey). Results are known for minimizing congestion <ref> [3] </ref> and for the maximizing throughput [14]. This framework can incorporate more general parameters such as the circuit bandwidth and circuit holding time.
Reference: [4] <author> Y. Azar, A. Broder, A. Karlin, and E. Upfal. </author> <title> Balanced allocations. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 593602, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: It is well known that if n balls are tossed randomly into n bins, the maximum number of balls in any bin will be fi (log n= log log n) with high probability. Azar et al <ref> [4] </ref> consider the following dynamic protocol for throwing n balls into n bins: for each ball pick two bins independently and uniformly at random, and place the ball in the bin with the smaller load at the time of placement. <p> Our algorithm is optimal in that any routing algorithm on BB n that considers only a constant number of alternate paths per message must incur (log log n) congestion <ref> [4] </ref>. Data Server Architecture. As an application of our techniques, in Section 3, we present a proposal for the architecture of a data server. The data server utilizes network RB n to connect n users to n disks.
Reference: [5] <author> L. A. Bassalygo and M. S. Pinsker. </author> <title> Complexity of an optimum nonblocking switching network without reconnections. Problems of Information Transmission, </title> <address> 9:6466, </address> <year> 1974. </year>
Reference-contexts: We use flip networks in our routing algorithms in Section 2. Randomness can be used in constructing the network itself. The use of randomness to design multistage networks dates back to Ikeno [16], and Bassalygo and Pinsker <ref> [5] </ref>. Networks such as the randomly-wired multibutterfly are known to have good routing and fault tolerance properties [40, 22]. Recent results provide algorithms for routing circuits for any permutation routing problem with congestion 1 in multibutterfly and multi-Benes networks with set-up time O (log n) [2, 32].
Reference: [6] <author> K. Batcher. </author> <title> Sorting networks and their applications. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computing Conference, </booktitle> <volume> volume 32, </volume> <pages> pages 307314, </pages> <year> 1968. </year>
Reference: [7] <institution> Butterfly TM Parallel Processor Overview. </institution> <type> BBN Report No. 6148, Version 1, </type> <address> Cambridge, MA, </address> <month> March </month> <year> 1986. </year>
Reference-contexts: Butterfly networks and its variants have been widely used for packet routing in a number of commercial and experimental networks <ref> [7, 15, 28, 29] </ref>. More recently, several proposed designs for the switching fabric of scalable high-speed ATM networks use the butterfly and its variants for routing virtual circuits [37, 38]. We define an n-input butterfly network B n as follows.
Reference: [8] <author> B. Beizer. </author> <title> The analysis and synthesis of signal switching networks. </title> <booktitle> In Proceedings of the Symposium on Mathematical Theory of Automata, </booktitle> <pages> pages 563576, </pages> <address> Brooklyn, NY, </address> <year> 1962. </year> <institution> Brooklyn Polytechnic Institute. </institution>
Reference-contexts: More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature. In two early papers, Beizer <ref> [8] </ref> and Benes [9] showed that any static permutation routing problem can be routed with congestion 1 and dilation 2 log n on an n-input Benes network.
Reference: [9] <author> V. E. </author> <title> Benes. Optimal rearrangeable multistage connecting networks. </title> <journal> Bell System Technical Journal, </journal> <volume> 43:16411656, </volume> <month> July </month> <year> 1964. </year>
Reference-contexts: More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature. In two early papers, Beizer [8] and Benes <ref> [9] </ref> showed that any static permutation routing problem can be routed with congestion 1 and dilation 2 log n on an n-input Benes network.
Reference: [10] <author> R. Cole, B. Maggs, and R. Sitaraman. </author> <title> On the benefit of supporting virtual channels in wormhole routers. </title> <booktitle> In Proceedings of the 8th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 131141, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing [1, 23, 24, 31, 35, 39, 41, 42]. More recently, there has been progress in analyzing wormhole routing algorithms <ref> [10, 11, 13, 36] </ref>. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [11] <editor> R. Cypher, F. Meyer auf der Heide, C. Scheideler, and B. Vocking. </editor> <title> Universal algorithms for store-and-forward and wormhole routing. </title> <booktitle> In Proceedings of the 28th Annual ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing [1, 23, 24, 31, 35, 39, 41, 42]. More recently, there has been progress in analyzing wormhole routing algorithms <ref> [10, 11, 13, 36] </ref>. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [12] <editor> M. Dietzfelbinger and F. Meyer auf der Heide. </editor> <title> Simple, efficient shared memory simulations. </title> <booktitle> In Proceedings of the 5th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 110119, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: 1 Introduction In this paper, we devise algorithms for routing messages in circuit-switching networks where each message chooses from two possible routes, an idea that has been applied with great success in other load balancing situations <ref> [12, 17, 26, 27] </ref>. Underlying every parallel computer is a network that delivers messages between processors or between processors and memory modules. Similar networks are found in the switches that route telephone calls and internet traffic. <p> They show that after all balls are placed in bins, the maximum load of any bin is fi (log log n), with high probability. Static protocols for the balls-and-bins problem were developed in [17], <ref> [12] </ref>, and [27] and applied to PRAM simulations. They consider variants of the following process. Initially, each ball chooses two random bins. In a round, each ball not yet allocated accesses its two bins. Each bin with at most c accessing balls accepts all of them.
Reference: [13] <author> S. Felperin, P. Raghavan, E. Upfal. </author> <title> A theory of wormhole routing in parallel computers. </title> <booktitle> In Proceedings 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 563-572, </pages> <year> 1992. </year>
Reference-contexts: Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing [1, 23, 24, 31, 35, 39, 41, 42]. More recently, there has been progress in analyzing wormhole routing algorithms <ref> [10, 11, 13, 36] </ref>. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [14] <author> J.A. Garay, and I. Gopal. </author> <title> Call preemption in communication networks. </title> <booktitle> In Proc. INFOCOM '92, </booktitle> <volume> Vol 44, </volume> <pages> pages 10431050, </pages> <address> Florence, Italy, </address> <year> 1992. </year>
Reference-contexts: These dependencies substantially increase the difficulty of the analysis. Circuit routing in general topology networks. Dynamic circuit-switching has been extensively studied in an on-line competitive framework for arbitrary network topologies. (See [33] for a survey). Results are known for minimizing congestion [3] and for the maximizing throughput <ref> [14] </ref>. This framework can incorporate more general parameters such as the circuit bandwidth and circuit holding time.
Reference: [15] <author> A. Gottlieb. </author> <title> An overview of the NYU Ultracomputer Project. </title> <editor> In J. J. Dongarra, editor, </editor> <booktitle> Experimental Parallel Computing Architectures, </booktitle> <pages> pages 2595. </pages> <publisher> Elsevier Science Publishers, B. V., </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1987. </year>
Reference-contexts: Butterfly networks and its variants have been widely used for packet routing in a number of commercial and experimental networks <ref> [7, 15, 28, 29] </ref>. More recently, several proposed designs for the switching fabric of scalable high-speed ATM networks use the butterfly and its variants for routing virtual circuits [37, 38]. We define an n-input butterfly network B n as follows.
Reference: [16] <author> Ikeno. </author> <title> A limit on crosspoint number. </title> <journal> IRE Trans. on Info. Theory. </journal> <volume> 5, </volume> <pages> pages 187196, </pages> <year> 1959. </year>
Reference-contexts: A flip network was subse quently used in [24] in the context of circuit routing. We use flip networks in our routing algorithms in Section 2. Randomness can be used in constructing the network itself. The use of randomness to design multistage networks dates back to Ikeno <ref> [16] </ref>, and Bassalygo and Pinsker [5]. Networks such as the randomly-wired multibutterfly are known to have good routing and fault tolerance properties [40, 22].
Reference: [17] <author> R. Karp, M. Luby, and F. Meyer auf der Heide. </author> <title> Efficient PRAM simulation on a distributed memory machine. </title> <booktitle> Algo-rithmica 16, </booktitle> <pages> pages 245281, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction In this paper, we devise algorithms for routing messages in circuit-switching networks where each message chooses from two possible routes, an idea that has been applied with great success in other load balancing situations <ref> [12, 17, 26, 27] </ref>. Underlying every parallel computer is a network that delivers messages between processors or between processors and memory modules. Similar networks are found in the switches that route telephone calls and internet traffic. <p> They show that after all balls are placed in bins, the maximum load of any bin is fi (log log n), with high probability. Static protocols for the balls-and-bins problem were developed in <ref> [17] </ref>, [12], and [27] and applied to PRAM simulations. They consider variants of the following process. Initially, each ball chooses two random bins. In a round, each ball not yet allocated accesses its two bins. Each bin with at most c accessing balls accepts all of them.
Reference: [18] <author> R. R. Koch. </author> <title> Increasing the size of a network by a constant factor can increase performance by more than a constant factor. </title> <booktitle> In Proceedings of the 29th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 221230. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1988. </year>
Reference-contexts: Koch <ref> [18] </ref> generalized the result of Kruskal and Snir by showing that if each edge can support q messages, q 1, then the expected fraction of messages that succeed in locking down paths is fi (n= log 1=q n).
Reference: [19] <author> C. P. Kruskal and M. Snir. </author> <title> The performance of multistage interconnection networks for multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C32(12):10911098, </volume> <month> December </month> <year> 1983. </year>
Reference-contexts: In this paper, we devise routing algorithms that minimize congestion. A complementary approach aims to maximize throughput. Previous work has studied the model where each link can support at most q paths, and the goal is to maximize the number of messages that lock down paths. Kruskal and Snir <ref> [19] </ref> showed that if each input in a butterfly network B n sends a message to a randomly chosen output, and at most one message can use any edge of the network (i.e., q = 1), then the expected number of messages that succeed in locking down paths to their destinations
Reference: [20] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays * Trees * Hypercubes. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks <ref> [20, 21] </ref>. Much of the early work focuses on store-and-forward routing [1, 23, 24, 31, 35, 39, 41, 42]. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36].
Reference: [21] <author> T. Leighton. </author> <title> Methods for message routing in parallel machines. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 7796, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks <ref> [20, 21] </ref>. Much of the early work focuses on store-and-forward routing [1, 23, 24, 31, 35, 39, 41, 42]. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36].
Reference: [22] <author> F. T. Leighton and B. M. Maggs. </author> <title> Fast algorithms for routing around faults in multibutterflies and randomly-wired splitter networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C41(5):578 587, </volume> <month> May, </month> <year> 1992. </year>
Reference-contexts: Randomness can be used in constructing the network itself. The use of randomness to design multistage networks dates back to Ikeno [16], and Bassalygo and Pinsker [5]. Networks such as the randomly-wired multibutterfly are known to have good routing and fault tolerance properties <ref> [40, 22] </ref>. Recent results provide algorithms for routing circuits for any permutation routing problem with congestion 1 in multibutterfly and multi-Benes networks with set-up time O (log n) [2, 32].
Reference: [23] <author> F. T. Leighton, B. M. Maggs, A. G. Ranade, and S. B. Rao. </author> <title> Randomized routing and sorting on fixed-connection networks. </title> <journal> Journal of Algorithms, </journal> <volume> 17(1):157205, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature. <p> Recall that, in our model, this computation is accomplished by sending a packet back and forth along each active path through the network using a store-and-forward algorithm. According to <ref> [23] </ref>, such a computation can be done in time O (congestion + dilation), with high probability, using only constant size buffers at each edge. Note here that the congestion we wish to bound is the congestion caused using this store-and-forward scheme, not the congestion under the collision algorithm.
Reference: [24] <author> B. M. Maggs and R. K. Sitaraman. </author> <title> Simple algorithms for routing on butterfly networks with bounded queues. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 150161, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature. <p> Koch [18] generalized the result of Kruskal and Snir by showing that if each edge can support q messages, q 1, then the expected fraction of messages that succeed in locking down paths is fi (n= log 1=q n). Maggs and Sitaraman <ref> [24] </ref> generalized the previous two results by showing that, by making two passes through a butterfly, it is possible to route an (n= log 1=q n) fraction of any permutation (rather than only a random permutation), with high probability. Use of Randomness. <p> Thus, messages are sent to random but not independent destinations using one random bit per switch. The first log n levels of such a BB n constitute a flip network. A flip network was subse quently used in <ref> [24] </ref> in the context of circuit routing. We use flip networks in our routing algorithms in Section 2. Randomness can be used in constructing the network itself. The use of randomness to design multistage networks dates back to Ikeno [16], and Bassalygo and Pinsker [5].
Reference: [25] <editor> F. Meyer auf der Heide and B. Vocking. </editor> <title> A packet routing protocol for arbitrary networks. </title> <booktitle> In Proceedings of the 12th Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 291302, </pages> <month> March </month> <year> 1995. </year>
Reference: [26] <author> M. Mitzenmacher, </author> <title> Load Balancing and Density Dependent Jump Markov Processes, </title> <booktitle> Proc. of the 37 th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 213222, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction In this paper, we devise algorithms for routing messages in circuit-switching networks where each message chooses from two possible routes, an idea that has been applied with great success in other load balancing situations <ref> [12, 17, 26, 27] </ref>. Underlying every parallel computer is a network that delivers messages between processors or between processors and memory modules. Similar networks are found in the switches that route telephone calls and internet traffic.
Reference: [27] <editor> F. Meyer auf der Heide, C. Scheideler, and V. Stemann. </editor> <title> Exploiting storage redundancy to speed up randomized shared memory simulations. In Theoret. </title> <journal> Comput. Sci. </journal> <volume> 162, </volume> <pages> pages 245281, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: 1 Introduction In this paper, we devise algorithms for routing messages in circuit-switching networks where each message chooses from two possible routes, an idea that has been applied with great success in other load balancing situations <ref> [12, 17, 26, 27] </ref>. Underlying every parallel computer is a network that delivers messages between processors or between processors and memory modules. Similar networks are found in the switches that route telephone calls and internet traffic. <p> They show that after all balls are placed in bins, the maximum load of any bin is fi (log log n), with high probability. Static protocols for the balls-and-bins problem were developed in [17], [12], and <ref> [27] </ref> and applied to PRAM simulations. They consider variants of the following process. Initially, each ball chooses two random bins. In a round, each ball not yet allocated accesses its two bins. Each bin with at most c accessing balls accepts all of them.
Reference: [28] <author> T. Nakata, S. Matsushita, N. Tanabe, N. Kajihara, H. Onozuka, Y. Asano, and N. Koike. </author> <title> Parallel programming on Cenju: A multiprocessor system for modular circuit simulation. NEC Research & Development, </title> <address> 32(3):421429, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: Butterfly networks and its variants have been widely used for packet routing in a number of commercial and experimental networks <ref> [7, 15, 28, 29] </ref>. More recently, several proposed designs for the switching fabric of scalable high-speed ATM networks use the butterfly and its variants for routing virtual circuits [37, 38]. We define an n-input butterfly network B n as follows.
Reference: [29] <author> G. F. Pfister, W. C. Brantley, D. A. George, S. L. Harvey, W. J. Kleinfelder, K. P. McAuliffe, E. A. Melton, V. A. Norton, and J. Weiss. </author> <title> An introduction to the IBM Research Parallel Processor Prototype (RP3). </title> <editor> In J. J. Dongarra, editor, </editor> <booktitle> Experimental Parallel Computing Architectures, </booktitle> <pages> pages 123140. </pages> <publisher> Else-vier Science Publishers, B. V., </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1987. </year>
Reference-contexts: Butterfly networks and its variants have been widely used for packet routing in a number of commercial and experimental networks <ref> [7, 15, 28, 29] </ref>. More recently, several proposed designs for the switching fabric of scalable high-speed ATM networks use the butterfly and its variants for routing virtual circuits [37, 38]. We define an n-input butterfly network B n as follows.
Reference: [30] <author> D. Nassimi and S. Sahni. </author> <title> Parallel algorithms to set up the Benes permutation network. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C31(2):148154, </volume> <month> Feb, </month> <year> 1982. </year>
Reference-contexts: Subsequently, Waksman [43] provided an elegant algorithm that takes O (n log n) time to determine all the paths, but requires global knowledge of the source and destination of all the messages. Later, Nassimi and Sahni <ref> [30] </ref> showed how to implement Waksman's algorithm in parallel on the Benes and related networks in time O (log 4 n). However, their algorithm is complex and requires the Benes network to emulate a complete network by executing a series of sorting routines. <p> Furthermore, we do not require complete knowledge about the permutation being routed and our routing algorithm can be implemented on the network itself. Comparing our result to the algorithm of Nassimi and Sahni <ref> [30] </ref>, our algorithm is much simpler and faster, although their algorithm achieves smaller congestion. Dynamic Permutation Routing. In Section 2.2, we analyze the minimum algorithm for routing any dynamic permutation routing problem on network BB n .
Reference: [31] <author> N. Pippenger. </author> <title> Parallel communication with limited buffers. </title> <booktitle> In Proceedings of the 25th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 127136. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1984. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [32] <author> N. Pippenger. </author> <title> Self-Routing Superconcentrators. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 52(1):5360, </volume> <month> Feb, </month> <year> 1996. </year>
Reference-contexts: Networks such as the randomly-wired multibutterfly are known to have good routing and fault tolerance properties [40, 22]. Recent results provide algorithms for routing circuits for any permutation routing problem with congestion 1 in multibutterfly and multi-Benes networks with set-up time O (log n) <ref> [2, 32] </ref>. Unlike these networks, our results in Section 2 apply to commonly-used networks like B n and BB n that require neither random wiring nor expanders. Balls-and-bins problem. Our approach to circuit routing is influenced by recent advances in the classical balls-and-bins problem.
Reference: [33] <author> S. Plotkin. </author> <title> Competitive routing in ATM networks. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <pages> pages 11281136, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: These dependencies substantially increase the difficulty of the analysis. Circuit routing in general topology networks. Dynamic circuit-switching has been extensively studied in an on-line competitive framework for arbitrary network topologies. (See <ref> [33] </ref> for a survey). Results are known for minimizing congestion [3] and for the maximizing throughput [14]. This framework can incorporate more general parameters such as the circuit bandwidth and circuit holding time.
Reference: [34] <author> A. G. Ranade. </author> <title> Constrained randomization for parallel communication. </title> <type> Technical Report YALEU/DCS/TR-511, </type> <institution> Department of Computer Science, Yale University, </institution> <address> New Haven, CT, </address> <year> 1987. </year>
Reference-contexts: Note that the paths for each message can be set up independently without complete knowledge of the permutation in O (log n) time. We show how to use randomization to route permutations with substantially smaller congestion and the same dilation. Ranade <ref> [34] </ref> observed that a smaller amount of randomness is sufficient to implement Valiant's algorithm. Note that each switch has two input links and two output links.
Reference: [35] <author> A. G. Ranade. </author> <title> How to emulate shared memory. </title> <journal> J. Comp. Syst. Scis. </journal> <volume> 42, </volume> <pages> pages 307-326, </pages> <year> 1991. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [36] <author> A. Ranade, S. Schleimer, and D. S. Wilkerson. </author> <title> Nearly tight bounds for wormhole routing. </title> <booktitle> In Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing [1, 23, 24, 31, 35, 39, 41, 42]. More recently, there has been progress in analyzing wormhole routing algorithms <ref> [10, 11, 13, 36] </ref>. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [37] <author> R. Rooholamini, V. Cherkassky, and M. Garver. </author> <title> Finding the right ATM switch for the market. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 16 28, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: To provide guarantees as opposed to just best-effort service, network resources must be reserved before communication begins. Consequently, several modern high-speed multimedia switches and ATMs reserve a (virtual) circuit through the network for each communication request <ref> [37, 38] </ref>. 1.1 Circuit routing algorithms and their performance In a circuit-switched network, a message arrives requesting a path from its source to its destination. A routing algorithm determines which of many possible paths is locked down for each message. <p> Butterfly networks and its variants have been widely used for packet routing in a number of commercial and experimental networks [7, 15, 28, 29]. More recently, several proposed designs for the switching fabric of scalable high-speed ATM networks use the butterfly and its variants for routing virtual circuits <ref> [37, 38] </ref>. We define an n-input butterfly network B n as follows.
Reference: [38] <author> J. Turner and N. Yamanaka. </author> <title> Architectural Choices in Large Scale ATM Switches. </title> <type> Technical Report WUCS9721. </type> <institution> Department of Computer Science, Washington University St. Louis, MO. </institution> <year> 1997. </year>
Reference-contexts: To provide guarantees as opposed to just best-effort service, network resources must be reserved before communication begins. Consequently, several modern high-speed multimedia switches and ATMs reserve a (virtual) circuit through the network for each communication request <ref> [37, 38] </ref>. 1.1 Circuit routing algorithms and their performance In a circuit-switched network, a message arrives requesting a path from its source to its destination. A routing algorithm determines which of many possible paths is locked down for each message. <p> Butterfly networks and its variants have been widely used for packet routing in a number of commercial and experimental networks [7, 15, 28, 29]. More recently, several proposed designs for the switching fabric of scalable high-speed ATM networks use the butterfly and its variants for routing virtual circuits <ref> [37, 38] </ref>. We define an n-input butterfly network B n as follows.
Reference: [39] <author> E. Upfal. </author> <title> Efficient schemes for parallel communication. </title> <journal> Journal of the ACM, </journal> <volume> 31(3):507517, </volume> <month> July </month> <year> 1984. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature.
Reference: [40] <author> E. Upfal. </author> <title> An O(log N ) deterministic packet routing scheme. </title> <journal> Journal of the ACM, </journal> <volume> 39(1), </volume> <pages> pages 5570, </pages> <month> Jan </month> <year> 1992. </year>
Reference-contexts: Randomness can be used in constructing the network itself. The use of randomness to design multistage networks dates back to Ikeno [16], and Bassalygo and Pinsker [5]. Networks such as the randomly-wired multibutterfly are known to have good routing and fault tolerance properties <ref> [40, 22] </ref>. Recent results provide algorithms for routing circuits for any permutation routing problem with congestion 1 in multibutterfly and multi-Benes networks with set-up time O (log n) [2, 32].
Reference: [41] <author> L. G. Valiant. </author> <title> A scheme for fast parallel communication. </title> <journal> SIAM Journal on Computing, </journal> <volume> 11(2):350361, </volume> <month> May </month> <year> 1982. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature. <p> Use of Randomness. An early example of the use of randomization for circuit-switching in butterfly networks is the work of Valiant <ref> [41, 42] </ref>. Valiant showed that any permutation routing problem can be transformed into two random problems by first routing a path for each message to a random intermediate destination, and then on to its true destination.
Reference: [42] <author> L. G. Valiant and G. J. Brebner. </author> <title> Universal schemes for parallel communication. </title> <booktitle> In Proceedings of the 13th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 263277, </pages> <month> May </month> <year> 1981. </year>
Reference-contexts: We provide a summary of the most relevant. Routing in Butterfly Networks. There is a vast literature on routing in butterfly networks [20, 21]. Much of the early work focuses on store-and-forward routing <ref> [1, 23, 24, 31, 35, 39, 41, 42] </ref>. More recently, there has been progress in analyzing wormhole routing algorithms [10, 11, 13, 36]. Since we present no new results in these two routing methods, we focus only on the butterfly circuit-switching literature. <p> Use of Randomness. An early example of the use of randomization for circuit-switching in butterfly networks is the work of Valiant <ref> [41, 42] </ref>. Valiant showed that any permutation routing problem can be transformed into two random problems by first routing a path for each message to a random intermediate destination, and then on to its true destination.
Reference: [43] <author> A. Waksman. </author> <title> A permutation network. </title> <journal> Journal of the ACM, </journal> <volume> 15(1):159163, </volume> <month> January </month> <year> 1968. </year>
Reference-contexts: In two early papers, Beizer [8] and Benes [9] showed that any static permutation routing problem can be routed with congestion 1 and dilation 2 log n on an n-input Benes network. Subsequently, Waksman <ref> [43] </ref> provided an elegant algorithm that takes O (n log n) time to determine all the paths, but requires global knowledge of the source and destination of all the messages.
References-found: 43

