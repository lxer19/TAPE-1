URL: ftp://ftp.eecs.umich.edu/people/durfee/gdnss95.ps.Z
Refering-URL: http://ai.eecs.umich.edu/diag/AGENTS.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: sandip@kolkata.mcs.utulsa.edu durfee@umich.edu  
Title: A Formal Study of Distributed Meeting Scheduling  
Author: Sandip Sen Edmund H. Durfee 
Note: Running head: Distributed Meeting Scheduling  
Address: 600 South College Avenue 1101 Beal Avenue Tulsa, OK 74104-3189 Ann Arbor, MI 48109  
Affiliation: Department of Mathematical Computer Sciences Department of EECS University of Tulsa University of Michigan  
Abstract-found: 0
Intro-found: 1
Reference: <author> Conry, Susan E., Robert A. Meyer, and Victor R. Lesser. </author> <year> (1988). </year> <title> Multistage negotiation in distributed planning. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 367-384. </pages> <address> San Mateo: </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: To analyze more fully how the alternative strategies affect performance and cost of meeting scheduling, however, we have had to model the distributed meeting scheduling task more formally (Section 3). Our distributed scheduling procedure is based on the multistage negotiation protocol <ref> (Conry, Meyer, and Lesser 1988) </ref> (Section 4). To aid the choice of appropriate scheduling strategies, we have analyzed the proposed alternative strategies in detail to justify our intuitive predictions about how they will affect performance (Section 5). <p> In cases where the scheduling agents cannot converge using their protocol, they alert their associated human users who can step outside of the system and use whatever protocol they desire to schedule their meetings. For our agents, we have chosen to adapt the multistage negotiation protocol <ref> (Conry, Meyer, and Lesser 1988) </ref>, which is a generalization of the contract net protocol (Smith 1980). In our protocol, each meeting has a particular agent who is responsible for it, called the host.
Reference: <author> Dent, Lisa, et al. </author> <year> (1992). </year> <title> A personal learning apprentice. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 96-103. </pages>
Reference: <author> Durfee, Edmund H., Victor R. Lesser, and Daniel D. Corkill. </author> <year> (1989). </year> <title> Trends in cooperative distributed problem solving. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 1(1) </volume> <pages> 63-83. </pages>
Reference-contexts: Distributed resource allocation, therefore, involves the cooperative solution of resource allocation problems among a network of decision makers, and falls into the subclass of DAI known as Cooperative Distributed Problem Solving (CDPS) <ref> (Durfee, Lesser, and Corkill 1989) </ref>. Individual agents in a Distributed Meeting Scheduling (DMS) system have only partial knowledge of system-wide goals because they do not know all the meetings that are currently being scheduled or have already been scheduled by other agents.
Reference: <author> Durfee, Edmund H. and Thomas A. Montgomery. </author> <year> (1991). </year> <title> Coordination as distributed search in a hierarchical behavior space. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1363-1378. </pages>
Reference-contexts: Moreover, giving each person his or her own process enhances privacy and permits personal tailoring of preference parameters for scheduling meetings. But because the information about available times is distributed among processes that wish to minimize how much information they reveal, arriving at meeting times involves selective, distributed search <ref> (Durfee and Montgomery 1991) </ref>. Our research is concerned with how to implement and control that search, and in this paper we develop formal tools for analyzing alternative heuristic strategies that affect the performance and efficiency of the overall search process. <p> A second direction that we are pursuing involves enriching the protocol to improve the quality and efficiency of scheduling. Building on our work using hierarchical protocols <ref> (Durfee and Montgomery 1991) </ref>, in which we view coordination as a distributed search process, we are looking at alternative representations for abstracting temporal intervals, to enable agents to negotiate abstractly in early phases to converge with less communication.
Reference: <author> Feldman, M. </author> <year> (1987). </year> <title> Electronic mail and weak ties in organizations. </title> <journal> Office Technology and People, </journal> <volume> 3 </volume> <pages> 83-101. </pages>
Reference-contexts: Automating meeting scheduling is important, therefore, not only because it can save time and effort on the part of humans, but also because this may lead to more efficient schedules and to changes in how information is exchanged within organizations <ref> (Feldman 1987) </ref>. Past efforts (Greif 1982; Malone et al. 1987) in developing automated meeting schedulers have met with limited success, although they are available in a number of office software systems (Grudin 1987; Kinkaid, Dupont, and Kaye 1985).
Reference: <author> Greif, Irene. </author> <year> (1982). </year> <title> PCAL: A personal calendar. </title> <type> Technical Report TM-213, </type> <institution> MIT Laboratory for Computer Science, </institution> <address> Cambridge, Mass. </address>
Reference: <author> Grudin, Jonathan. </author> <year> (1987). </year> <title> Social evaluation of the user interface: Who does the work and who gets the benefit? In H. </title> <editor> Bullinger and B. Shacketl, editors, </editor> <booktitle> Human Computer Interaction - INTERACT87, </booktitle> <pages> pages 805-811. </pages> <publisher> North Holland. </publisher>
Reference: <author> Hewitt, Carl and Jeff Inman. </author> <year> (1991). </year> <title> DAI betwixt and between: From "intelligent agents" to open systems science. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1409-1419. </pages>
Reference: <author> Kelley, J. F. and A. Chapanis. </author> <year> (1982). </year> <title> How professional persons keep their calendars: Implications for computerization. </title> <journal> Journal of Occupational Psychology, </journal> <volume> 55 </volume> <pages> 141-156. </pages>
Reference-contexts: Past efforts (Greif 1982; Malone et al. 1987) in developing automated meeting schedulers have met with limited success, although they are available in a number of office software systems (Grudin 1987; Kinkaid, Dupont, and Kaye 1985). Ideas borrowed from experimental studies on how humans handle scheduling <ref> (Kelley and Chapanis 1982) </ref> may suggest strategies to be used in more efficient, popular automated meeting schedulers. Our work is directed toward developing intelligent agents that can negotiate over scheduling options on behalf of their associated humans (Sen 1993) .
Reference: <author> Kincaid, C., P. Dupont, and A. Kaye. </author> <year> (1985). </year> <title> Electronic calendars in the office: An assessment of user needs and current technology. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 3(1) </volume> <pages> 89-102. </pages> <note> 28 Maes, </note> <editor> Pattie and Robyn Kozierok. </editor> <booktitle> (1993). Learning interface agents. In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 459-464. </pages>
Reference: <author> Malone, Thomas W., et al. </author> <year> (1987). </year> <journal> Intelligent information-sharing systems. Communications of the ACM, </journal> <volume> 30(5) </volume> <pages> 390-402. </pages>
Reference: <author> Pan, Jeff Y-C and Jay M. Tenenbaum. </author> <year> (1991). </year> <title> An intelligent agent framework for enterprise integration. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1391-1408. </pages>
Reference: <author> Sen, Sandip. </author> <year> (1993). </year> <title> Predicting Tradeoffs in Contract-Based Distributed Scheduling. </title> <type> PhD thesis, </type> <institution> University of Michigan. </institution>
Reference-contexts: Ideas borrowed from experimental studies on how humans handle scheduling (Kelley and Chapanis 1982) may suggest strategies to be used in more efficient, popular automated meeting schedulers. Our work is directed toward developing intelligent agents that can negotiate over scheduling options on behalf of their associated humans <ref> (Sen 1993) </ref> . Under routine circumstances, these agents should converge on acceptable meetings unaided, while in more complex situations (requiring cancellations or complicated tradeoffs) the agents should aid their associated human users to schedule meetings better and faster. <p> For discussions in this paper, we will use this core model. In other work, we have extended this definition to include cancellation and rescheduling of meetings, scheduling rooms for meetings, scheduling meeting with subset of specified attendees, etc. <ref> (Sen 1993, Sen and Durfee 1994b) </ref>. A meeting schedule consists of a group of meetings for a group of persons. <p> This additional negotiation phase allows us to develop a structured 25 mechanism for cancellation and rescheduling, so that higher priority meetings can "bump" lower priority meetings, if it is found useful by the scheduling agents to do as such (taking into account rescheduling costs) <ref> (Sen and Durfee 1993) </ref>. At the same time, we are also working on expanding the formalism to be applicable in a broader context.
Reference: <author> Sen, Sandip and Edmund H. Durfee. </author> <year> (1993). </year> <title> Using temporal abstractions and cancellations for efficiency in automated meeting scheduling. </title> <booktitle> In Proc. of the International Conference on Intelligent and Cooperative Information Systems, </booktitle> <pages> pages 163-172. </pages>
Reference-contexts: Ideas borrowed from experimental studies on how humans handle scheduling (Kelley and Chapanis 1982) may suggest strategies to be used in more efficient, popular automated meeting schedulers. Our work is directed toward developing intelligent agents that can negotiate over scheduling options on behalf of their associated humans <ref> (Sen 1993) </ref> . Under routine circumstances, these agents should converge on acceptable meetings unaided, while in more complex situations (requiring cancellations or complicated tradeoffs) the agents should aid their associated human users to schedule meetings better and faster. <p> For discussions in this paper, we will use this core model. In other work, we have extended this definition to include cancellation and rescheduling of meetings, scheduling rooms for meetings, scheduling meeting with subset of specified attendees, etc. <ref> (Sen 1993, Sen and Durfee 1994b) </ref>. A meeting schedule consists of a group of meetings for a group of persons. <p> This additional negotiation phase allows us to develop a structured 25 mechanism for cancellation and rescheduling, so that higher priority meetings can "bump" lower priority meetings, if it is found useful by the scheduling agents to do as such (taking into account rescheduling costs) <ref> (Sen and Durfee 1993) </ref>. At the same time, we are also working on expanding the formalism to be applicable in a broader context.
Reference: <author> Sen, Sandip and Edmund H. Durfee. </author> <year> (1994a). </year> <title> On the design of an adaptive meeting scheduler. </title> <booktitle> In Proc. of the Tenth IEEE Conference on AI Applications, </booktitle> <pages> pages 40-46. </pages>
Reference-contexts: Based on the work presented in this paper, we have recently proposed a design for an adaptive meeting scheduling agent that can choose appropriate scheduling heuristics based on current environmental conditions <ref> (Sen and Durfee 1994a) </ref>.
Reference: <author> Sen, Sandip and Edmund H. Durfee. </author> <year> (1994b). </year> <title> The role of commitment in cooperative negotiation. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 3(1) </volume> <pages> 67-81. </pages>
Reference-contexts: Design considerations presented in the above-mentioned paper and other experimental results obtained in the distributed meeting scheduling domain <ref> (Sen and Durfee 1994b) </ref> suggests that we need to extend our probabilistic model in two important directions: * we need to develop reasoning techniques with more abstract probability measures that are easier to obtain than exact probabilities used here, * we need to incorporate more dynamic information in our protocol, which
Reference: <author> Sen, Sandip and Edmund Durfee. </author> <year> (1995). </year> <title> Unsupervised surrogate agents and search bias change in flexible distributed scheduling. </title> <booktitle> In First International Conference on Multiagent Systems. </booktitle>
Reference-contexts: For example, they could first identify intervals of their calendars where each is relatively free (equivalent to saying, for example, "My schedule is pretty light next week."), and then converging on a meeting by narrowing choices within larger intervals <ref> (Sen and Durfee 1995) </ref> . This work represents the first significant step to addressing the complex problem of formally representing and evaluating heuristic strategies for contract-based distributed scheduling.
Reference: <author> Smith, Reid G. </author> <year> (1980). </year> <title> The contract net protocol: High-level communication and control in a distributed problem solver. </title> <journal> IEEE Transactions on Computers, C-29(12):1104-1113. </journal>
Reference-contexts: For our agents, we have chosen to adapt the multistage negotiation protocol (Conry, Meyer, and Lesser 1988), which is a generalization of the contract net protocol <ref> (Smith 1980) </ref>. In our protocol, each meeting has a particular agent who is responsible for it, called the host. The host contacts other attendees of the meeting (who are called invitees) to announce the meeting, and collects bids (availability information).

References-found: 18

