URL: http://www.cs.helsinki.fi/~mannila/postscripts/pkdd.ps
Refering-URL: http://www.cs.helsinki.fi/~mannila/data-mining-publications.html
Root-URL: 
Email: dasg@next1.msci.memphis.edu.  gunopulo@almaden.ibm.com.  Heikki.Mannila@cs.helsinki.fi.  
Phone: 2  3  
Title: Finding Similar Time Series  
Author: Gautam Das and Dimitrios Gunopulos and Heikki Mannila 
Note: Research done while the author was visiting the  Research done while the author was visiting the  
Address: Memphis, Memphis TN,  Helsinki.  RC K55/B1, 650 Harry Rd., San Jose CA 95120, USA,  Helsinki.  FIN-00014 Helsinki, Finland,  
Affiliation: 1 Univ. of  Univ. of  IBM Almaden  Univ. of  Univ. of Helsinki, Dept. of Computer Science,  
Abstract: Similarity of objects is one of the crucial concepts in several applications, including data mining. For complex objects, similarity is nontrivial to define. In this paper we present an intuitive model for measuring the similarity between two time series. The model takes into account outliers, different scaling functions, and variable sampling rates. Using methods from computational geometry, we show that this notion of similarity can be computed in polynomial time. Using statistical approximation techniques, the algorithms can be speeded up considerably. We give preliminary experimental results that show the naturalness of the notion.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Agrawal, C. Faloutsos, and A. Swami. </author> <title> Efficient similarity search in sequence databases. </title> <booktitle> In Proceedings of the 4th International Conference on Foundations of Data Organization and Algorithms (FODO'93), </booktitle> <address> Chicago, </address> <year> 1993. </year>
Reference-contexts: We call (F lin ; fl; ")- similarity simply (fl; ")-similarity. Next we very briefly mention some related work; for lack of space, this section is strongly abbreviated. The problem of searching for similar sequences was brought to the database community perhaps mostly by the papers <ref> [1, 6, 7, 4] </ref>. The idea of using longest common subsequence in measuring similarity between sequences of objects has been proposed in [13]. The similarity model presented here however does not account for different scaling factors and different baseline values. <p> To use these two inequalities however we have to find the subsequences that minimize or maximize the deviation. Lemma 7. Given a sequence X = (x 1 ; : : : ; x n ) and fl 2 <ref> [0; 1] </ref>, assume that the subsequence of length fln of X that minimizes the deviation is X min = (x 0 fln ). <p> In order to avoid comparing the query sequence with each sequence in the database, we have to use some approximation (fingerprint) scheme that reduces the dimension of the sequences, such as the wavelet transformation, or the deviation of subsequences. To compute fingerprints of small dimension Agrawal et al <ref> [1] </ref> use the Discrete Fourier Transform, Shatkay et al [11] use feature extraction, and other methods have been suggested; see [12] for some general discussions on fingerprinting.
Reference: 2. <author> R. Agrawal, K.-I. Lin, H. S. Sawhney, and K. Shim. </author> <title> Fast similarity search in the presence of noise, scaling, and translation in time-series databases. </title> <booktitle> In Proceedings of the 21st International Conference on Very Large Data Bases (VLDB'95), </booktitle> <pages> pages 490 - 501, </pages> <address> Zurich, Swizerland, </address> <year> 1995. </year>
Reference-contexts: The idea of using longest common subsequence in measuring similarity between sequences of objects has been proposed in [13]. The similarity model presented here however does not account for different scaling factors and different baseline values. A similar model has been proposed by Agrawal et. al. <ref> [2] </ref>. The main difference is that, this model does not allow outliers within windows of a specified length W , and the linear function can vary slightly in the length of the matched common subsequence.
Reference: 3. <author> A. V. Aho. </author> <title> Algorithms for finding patterns in strings. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Complexity, </booktitle> <pages> pages 255 - 400. </pages> <publisher> Elsevier Science Publishers B.V (North-Holland), </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference: 4. <author> D. J. Berndt and J. Clifford. </author> <title> Finding patterns in time series: A dynamic programming approach. </title> <editor> In U. M. Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining, pages 229 -248. </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1996. </year>
Reference-contexts: We call (F lin ; fl; ")- similarity simply (fl; ")-similarity. Next we very briefly mention some related work; for lack of space, this section is strongly abbreviated. The problem of searching for similar sequences was brought to the database community perhaps mostly by the papers <ref> [1, 6, 7, 4] </ref>. The idea of using longest common subsequence in measuring similarity between sequences of objects has been proposed in [13]. The similarity model presented here however does not account for different scaling factors and different baseline values.
Reference: 5. <author> B. Bollobas, G. Das, D. Gunopulos, and H. Mannila. </author> <title> Time-series similarity problems and well-separated geometric sets. </title> <booktitle> In ACM Computational Geometry Conference, </booktitle> <year> 1997. </year>
Reference: 6. <author> C. Faloutsos, M. Ranganathan, and Y. Manolopoulos. </author> <title> Fast subsequence matching in time-series databases. </title> <booktitle> In SIGMOD'94, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: We call (F lin ; fl; ")- similarity simply (fl; ")-similarity. Next we very briefly mention some related work; for lack of space, this section is strongly abbreviated. The problem of searching for similar sequences was brought to the database community perhaps mostly by the papers <ref> [1, 6, 7, 4] </ref>. The idea of using longest common subsequence in measuring similarity between sequences of objects has been proposed in [13]. The similarity model presented here however does not account for different scaling factors and different baseline values.
Reference: 7. <author> D. Goldin and P. Kanellakis. </author> <title> On similarity queries for time-series data: constraint specification and implementations. </title> <booktitle> In Int. Conf. on the Principles and Practice of Constraint Programming, </booktitle> <pages> pages 137-153, </pages> <year> 1995. </year>
Reference-contexts: We call (F lin ; fl; ")- similarity simply (fl; ")-similarity. Next we very briefly mention some related work; for lack of space, this section is strongly abbreviated. The problem of searching for similar sequences was brought to the database community perhaps mostly by the papers <ref> [1, 6, 7, 4] </ref>. The idea of using longest common subsequence in measuring similarity between sequences of objects has been proposed in [13]. The similarity model presented here however does not account for different scaling factors and different baseline values.
Reference: 8. <author> D. C. Hoaglin, F. Mosteller, and J. W. Tukey, </author> <title> editors. Understanding Robust and Exploratory Data Analysis. </title> <publisher> Wiley, </publisher> <year> 1982. </year>
Reference-contexts: Our goal is to obtain a measure of similarity that would be resistant 4 with respect 4 See <ref> [8] </ref>, pages 1-6 for a discussion of resistance and robustness of statistical procedures. to such changes.
Reference: 9. <author> H. Jagadish, A. O. Mendelzon, and T. Milo. </author> <title> Similarity-based queries. </title> <booktitle> In Proceedings of the Fourteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems (PODS'95), </booktitle> <pages> pages 36-45, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction Being able to measure the similarity or dissimilarity between objects is a crucial point in many data retrieval and data mining applications; see <ref> [9] </ref> for a general discussion on similarity queries. For complex objects, defining similarity is by no means trivial. In this paper we consider the problem of defining the similarity between time series. Time series are an important class of complex data objects.
Reference: 10. <author> D. Sankoff and J. B. Kruskal. </author> <title> Time Warps, String Edits and Macromolecules: the Theory and Practice of Sequence Comparison. </title> <publisher> Addison Wesley, </publisher> <year> 1983. </year>
Reference-contexts: A similar model has been proposed by Agrawal et. al. [2]. The main difference is that, this model does not allow outliers within windows of a specified length W , and the linear function can vary slightly in the length of the matched common subsequence. See also <ref> [10] </ref> for a collection of material on sequence comparisons. 3 Longest common subsequences If we know the function f 2 F that is to be used, determining (F ; fl; ")-similarity between X and Y is easy: we form the sequence f (X) by applying f to each element of X,
Reference: 11. <author> H. Shatkay and S. Zdonik. </author> <title> Approximate queries and representations for large data sequences. </title> <booktitle> In ICDE'96, </booktitle> <year> 1996. </year>
Reference-contexts: To compute fingerprints of small dimension Agrawal et al [1] use the Discrete Fourier Transform, Shatkay et al <ref> [11] </ref> use feature extraction, and other methods have been suggested; see [12] for some general discussions on fingerprinting.
Reference: 12. <author> D. A. White and R. Jain. </author> <title> Algorithms and strategies for similarity retrieval. </title> <type> Technical Report VCL-96-101, </type> <institution> Visual Computing Laboratory, University of California, </institution> <address> San Diego, 9500 Gilman Drive, Mail Code 0407, La Jolla, CA 92093-0407, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: To compute fingerprints of small dimension Agrawal et al [1] use the Discrete Fourier Transform, Shatkay et al [11] use feature extraction, and other methods have been suggested; see <ref> [12] </ref> for some general discussions on fingerprinting.
Reference: 13. <author> N. Yazdani and Z. M. Ozsoyoglu. </author> <title> Sequence matching of images. </title> <booktitle> In Proceedings of the 8th International Conference on Scientific and Statistical Database Management, Stockholm, </booktitle> <pages> pages 53-62, </pages> <year> 1996. </year>
Reference-contexts: The problem of searching for similar sequences was brought to the database community perhaps mostly by the papers [1, 6, 7, 4]. The idea of using longest common subsequence in measuring similarity between sequences of objects has been proposed in <ref> [13] </ref>. The similarity model presented here however does not account for different scaling factors and different baseline values. A similar model has been proposed by Agrawal et. al. [2].
References-found: 13

