URL: http://www.cs.umbc.edu/agents/introduction/ao.ps
Refering-URL: http://www.cs.iastate.edu/~cs572/weekly.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: hyacinth@info.bt.co.uk  
Phone: Tel: (+44 1 473) 605457  
Title: Software Agents: An Overview  
Author: Hyacinth S. Nwana 
Note: Knowledge Engineering Review, Vol. 11, No 3, pp. 205-244, October/November 1996. Cambridge University Press, 1996  
Address: Martlesham Heath Ipswich, Suffolk, IP5 7RE, U.K.  
Affiliation: Intelligent Systems Research Advanced Applications Technology Department BT Laboratories,  
Abstract: Agent software is a rapidly developing area of research. However, the overuse of the word agent has tended to mask the fact that, in reality, there is a truly heterogeneous body of research being carried out under this banner. This overview paper presents a typology of agents. Next, it places agents in context, defines them and then goes on, inter alia, to overview critically the rationales, hypotheses, goals, challenges and state-of-the-art demonstrators of the various agent types in our typology. Hence, it attempts to make explicit much of what is usually implicit in the agents literature. It also proceeds to overview some other general issues which pertain to all the types of agents in the typology. This paper largely reviews software agents, and it also contains some strong opinions that are not necessarily widely accepted by the agent community. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agre, P. E. </author> <year> (1988), </year> <title> The Dynamic Structure of Everyday Life, </title> <type> Ph.D Thesis, </type> <institution> Department of Electrical Engineering and Computer Science, MIT. </institution>
Reference-contexts: Situated action agents act essentially in ways which is appropriate to its situation, where situation refers to a potentially complex combination of internal and external events and states (Connah, 1994). Situated-action agents have been used in PENGI, a video game designed as part of Agres doctoral thesis <ref> (Agre, 1988) </ref>, and SONJA (Chapman, 1992). Researchers at Philips research laboratories in Redhill, UK, have implemented a situation-action based language called the RTA programming language (Graham & Wavish, 1991).
Reference: <author> Agre, P. E. & Chapman, D. </author> <year> (1987), </year> <title> Pengi: An Implementation of a Theory of Activity, </title> <booktitle> Proceedings of the 6th National Conference on Artificial Intelligence, </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <pages> 268-272. </pages>
Reference: <author> Ambros-Ingerson, J. & Steel, S. </author> <year> (1988), </year> <title> Integrating Planning, Execution and Monitoring, </title> <booktitle> In Proceedings of the 7th National Conference on Artificial Intelligence (AAAI-88), </booktitle> <address> St Paul, MN, </address> <pages> 83-88. </pages>
Reference: <author> Amstrong, R., Freitag, D., Jopachims, T. & Mitchell, T. </author> <year> (1995), </year> <title> Webwatcher: A Learning Apprentice for the World Wide Web, </title> <booktitle> In Proceedings of the Symposium on Information Gathering from Heterogeneous, Distributed Environments, </booktitle> <publisher> AAAI Press. </publisher>
Reference-contexts: If another users keywords match closely some page, the summary of the page and its URL is e-mailed to the particular user. There are other information agents built in particular for information filtering. For example, Webwatcher <ref> (Amstrong et al., 1995) </ref>, the RBSE Spider (Eichmann, 1994a) and Metacrawler (http: URL4). The last two are strictly speaking not agents, e.g. Metacrawler is certainly a meta-search engine which provides an interface to other search engines on the WWW.
Reference: <author> Appleby, S. & Steward, S. </author> <year> (1994), </year> <title> Mobile Software Agents for Control in Telecommunications Networks, </title> <journal> BT Technological Journal 12 (2), </journal> <pages> 104-113, </pages> <month> April. </month>
Reference: <author> Bates, J. </author> <year> (1994), </year> <title> The Role of Emotion in Believable Characters, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 122-125. </pages>
Reference-contexts: continuous? Does it degrade gracefully in contrast to failing drastically at the boundaries? Perhaps unbelievably, some researchers are also attributing emotional attitudes to agents - do they get fed up being asked to do the same thing time and time again? What role does emotion have in constructing believable agents <ref> (Bates, 1994) </ref>? Some agents are also imbued with mentalistic attitudes or notions such as beliefs, desires and intentions - referred to typically as BDI agents (Rao & Georgeff, 1995). Such attributes as these provide for a stronger definition of agenthood.
Reference: <author> Bond, A. H. & Gasser, L. </author> <year> (1988), </year> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Bratman, M. E., Israel, D, J. & Pollack, M. E. </author> <year> (1988), </year> <title> Plans and Resource-Bounded Practical Reasoning, </title> <booktitle> Computational Intelligence 4, </booktitle> <pages> 349-355. </pages>
Reference: <author> Brooks, R. A. </author> <year> (1986), </year> <title> A Robust Layered Control System for a Mobile Robot, </title> <journal> IEEE Journal of Robotics and Automation 2 (1), </journal> <pages> 14-23. </pages>
Reference: <author> Brooks, R. A. </author> <year> (1991a), </year> <title> Elephants Dont Play Chess, </title> <editor> In Maes, P. (ed) (1991), </editor> <title> Designing Autonomous Agents: Theory and Practice from Biology to Engineering and Back, </title> <publisher> London: The MIT press, </publisher> <pages> 3-15. </pages>
Reference-contexts: This new hypothesis states that in order to build a system that is 31 intelligent, it is necessary to have representations grounded in the physical world <ref> (Brooks, 1991a) </ref>. This hypothesis is quite radical and it turns, literally, the physical symbol system hypothesis on its head. Brooks argues that this hypothesis obviates the need for symbolic representations or models because the world becomes its own best model. <p> Finally, there is the issue of the entire physical grounding hypothesis. Brooks and other nouvelle AI researchers argue that the physical symbol system hypothesis implicitly includes a number of largely unfounded great leaps of faith <ref> (Brooks, 1991a, p. 3) </ref>. We hope they did not speak too soon: perhaps, the same applies to the physical grounding hypothesis.
Reference: <author> Brooks, R. A. </author> <year> (1991b), </year> <title> Intelligence without Representation, </title> <booktitle> Artificial Intelligence 47, </booktitle> <pages> 139-159. </pages>
Reference-contexts: Indeed, Brooks has argued that intelligent behaviour can be realised without the sort of explicit, symbolic representations of traditional AI <ref> (Brooks, 1991b) </ref>. Thirdly, agents may be classified along several ideal and primary attributes which agents should exhibit. At BT Labs, we have identified a minimal list of three: autonomy, learning and cooperation. <p> Some researchers, particularly those in the reactive agents camp, believe that intelligent behaviour can be generated without the sort of explicit symbolic-level 15 representations (and hence, reasoning) prevalent in AI <ref> (e.g. Brooks, 1991b) </ref>. That is, they object to agents having an internal representation of actions, goals and events required by the planning module to determine the sequence of actions that will achieve the goals.
Reference: <author> Brooks, R. A. </author> <year> (1991c), </year> <title> Intelligence without Reason, </title> <booktitle> In Proceedings of the 12th International Joint Conference on Artificial Intelligence, </booktitle> <address> Menlo Park, CA: </address> <publisher> Morgan Kaufmann, </publisher> <pages> 569-595. </pages>
Reference-contexts: Etzioni (1993), amongst others, has already challenged Brooks assertion that the way to make progress in AI is to study intelligence from the bottom up, concentrating on physical systems (e.g. mobile robots), situated in the world, autonomously carrying out tasks of various sorts <ref> (Brooks, 1991c) </ref>, p. 569. Furthermore, Maes (1991b) has already pointed out that this situated agents work has some important limitations precisely because of their lack of explicit goals and goal-handling capabilities (p. 50), requiring the designers of the systems to precompile or hard-wire the action selections.
Reference: <author> Caglayan, A., Snorrason, M., Jacoby, J., Mazzu, J. & Jones, R. </author> <year> (1996), </year> <title> Lessons from Open Sesame! a User Interface Learning Agent, </title> <booktitle> In Proceedings the First International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology (PAAM 96), </booktitle> <address> London, </address> <month> 22-24 April, </month> <pages> 61-74. </pages> <note> 44 Carver, </note> <author> N. & Lesser, V. </author> <year> (1995), </year> <title> The DRESUN Testbed for Researcg in FA/C Distribution Situation Assessment: Extensions to the Model of External Evidence, </title> <booktitle> In Proceedings of the 1st International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <address> San Francisco, USA, </address> <month> June, </month> <pages> 33-40. </pages>
Reference-contexts: Useful, but limited, interface agents should be available which perform roles including the following: eager assistants, WWW guides, memory aids, entertainment and WWW filters/critics. Indeed, the HOMR/Ringo system is already being marketed as Firefly by Agents Inc. - a Boston-based agents company. Open Sesame <ref> (Caglayan et al., 1996) </ref> - another interface agent which employs a neural network learning technique, is already on the market from Charles River Analytics (Cambridge, MA). More mobile and information agent applications and languages would soon be rolled out by vendors.
Reference: <author> Carver, N., Cvetanovic, Z. & Lesser, V. </author> <year> (1991), </year> <title> Sophisticated Cooperation in Distributed Problem Solving, </title> <booktitle> in Proceedings of the 9th National Conference on Artificial Intelligence 1, Anaheim, </booktitle> <pages> 191-198. </pages>
Reference: <author> Chaib-draa, B., Moulin, B., Mandiau, R. & Millot, P. </author> <year> (1992), </year> <booktitle> Trends in Distributed Artificial Intelligence, Artificial Intelligence Review 6, </booktitle> <pages> 35-66. </pages>
Reference: <author> Chapman, D. </author> <year> (1992), </year> <title> Vision, Instruction and Action, </title> <publisher> London: MIT Press. </publisher>
Reference-contexts: Situated-action agents have been used in PENGI, a video game designed as part of Agres doctoral thesis (Agre, 1988), and SONJA <ref> (Chapman, 1992) </ref>. Researchers at Philips research laboratories in Redhill, UK, have implemented a situation-action based language called the RTA programming language (Graham & Wavish, 1991). Indeed, they have used this language to implement characters in computer games which they have since integrated into CD-i titles (Wavish & Graham, 1995).
Reference: <author> Chavez, A. & Maes, P. </author> <year> (1996), </year> <title> Kasbah: An Agent Marketplace for Buying and Selling Goods, </title> <booktitle> In Proceedings the First International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology (PAAM 96), </booktitle> <address> London, </address> <month> 22-24 April, </month> <pages> 75-90. </pages>
Reference-contexts: Thus far, her team has constructed demonstrator agents for the following roles: Eager assistants (e.g. Kozierok & Maes, 1993); Guides (e.g. Liebermann, 1995); Memory aids (e.g. Rhodes & Starner, 1996); Filter/critics (e.g. Sheth & Maes, 1993); Matchmaking/referrals (e.g. Foner, 1996); Buying/selling on your behalf <ref> (e.g. Chavez & Maes, 1996) </ref>; Entertainment (e.g. Maes, 1995b). We overview them briefly. Kozierok & Maes (1993) describe an interface agent, Calendar Agent, for scheduling meetings which is attachable to any application provided it is scriptable and recordable, e.g. scheduling software package.
Reference: <author> Cohen, P. R. & Levesque, H. J. </author> <year> (1990), </year> <title> Intention is Choice with Commitment, </title> <booktitle> Artificial Intelligence 42, </booktitle> <pages> 213-261. </pages>
Reference: <author> Connah, D. </author> <year> (1994), </year> <title> The Design of Interacting Agents for Use in Interfaces, </title> <editor> in Brouwer-Janse, D. & Harringdon, T. L. (eds.), </editor> <title> Human-Machine Communication for Educational Systems Design, </title> <booktitle> NATO ASI Series, Series F, Computer and Systems Sciences 129, </booktitle> <address> Heidelberg: </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: Situated action agents act essentially in ways which is appropriate to its situation, where situation refers to a potentially complex combination of internal and external events and states <ref> (Connah, 1994) </ref>. Situated-action agents have been used in PENGI, a video game designed as part of Agres doctoral thesis (Agre, 1988), and SONJA (Chapman, 1992). Researchers at Philips research laboratories in Redhill, UK, have implemented a situation-action based language called the RTA programming language (Graham & Wavish, 1991).
Reference: <author> Cutkosky, M. R., Engelmore, R. S., Fikes, R. E., Genesereth, M. R., Gruber, T. R., Tenenbaum, J. M. & Weber, J. C. </author> <year> (1993), </year> <title> PACT: An Experiment in Integrating Concurrent Engineering Systems, </title> <booktitle> IEEE Computer 1, </booktitle> <month> January, </month> <pages> 28-37. </pages>
Reference-contexts: It is an interesting experiment which begins to examine the technological and sociological issues of building large-scale, distributed concurrent engineering systems. The approach has been to integrate existing multi-tool systems that are themselves frameworks, each developed with no anticipation that they would subsequently be integrated <ref> (Cutkosky et al., 1993) </ref>. The prototype they built integrated four legacy concurrent engineering systems into a common framework. More specifically, it involved thirty one agent-based programs executing on fifteen workstations and microcomputers. The agents were organised into a hierarchy based around facilitators (see Figure 9).
Reference: <author> Davies, N. J. & Weeks, R. </author> <year> (1995), </year> <title> Jasper: Communicating Information Agents, </title> <booktitle> in Proceedings of the 4th International Conference on the World Wide Web, </booktitle> <address> Boston, USA, </address> <month> December. </month>
Reference: <author> Davis, R. & Smith, R. G. </author> <year> (1983), </year> <title> Negotiation as a Metaphor for Distributed Problem Solving, </title> <booktitle> Artificial Intelligence 20, </booktitle> <pages> 63-109. </pages>
Reference: <author> Decker, K. S. </author> <year> (1995), </year> <title> Distributed Artificial Intelligence Testbeds, </title> <editor> In OHare, G. & Jennings, N. (eds.), </editor> <booktitle> Foundations of Distributed Artificial Intelligence, Chapter 3, </booktitle> <address> London: </address> <publisher> Wiley, forthcoming. </publisher>
Reference: <author> Decker, K. S. & Lesser, V. R. </author> <year> (1993), </year> <title> Designing a Family of Coordination Algorithms, </title> <booktitle> in Proceedings of the 11th National Conference on Artificial Intelligence, </booktitle> <address> Washington, </address> <pages> 217-224. </pages>
Reference: <author> Dent, L., Boticario, J., McDermott, J., Mitchell, T. & Zabowski, D. A. </author> <year> (1992), </year> <title> A Personall Learning Apprentice, </title> <booktitle> In Proceedings of the 10th National Conference on Artificial Intelligence, </booktitle> <address> San Jose, California, </address> <publisher> AAAI Press, </publisher> <pages> 96-103. </pages>
Reference: <author> Doran, J., Carvajal, H., Choo, Y. & Li, Y. </author> <year> (1991), </year> <title> The MCS Multi-agent Testbed: Developments and Experiments, </title> <editor> in Deen, S. (ed.), </editor> <title> Cooperating Knowledge based Systems, </title> <publisher> Heidelberg: Springer-Verlag, </publisher> <pages> 240-251. </pages>
Reference: <author> Durfee, E. H. & Montogomery, T. A. </author> <year> (1989), </year> <title> MICE: A Flexible Testbed for Intelligent Coordination Experiments, </title> <booktitle> In Proceedings of the 1989 Distributed Artificial Intelligence Workshop, </booktitle> <pages> 25-40. </pages>
Reference-contexts: Their goal was to specify, analyse, design and integrate systems comprising of multiple collaborative agents. These resulted in classic systems and work such as the actor model (Hewitt, 1977), MACE (Gasser et al., 1987), DVMT (Lesser & Corkill, 1981), MICE <ref> (Durfee & Montgomery, 1989) </ref>, MCS (Doran et al., 1990), the contract network coordination approach (Smith, 1980; Davis & Smith, 1983), MAS/DAI planning and game theories (Rosenschein, 1985; Zlotkin & Rosenschein, 1989; Rosenschein & Zlotkin, 1994).
Reference: <author> Durfee, E. H., Lesser, V. R. & Corkill, D. </author> <year> (1987), </year> <title> Coherent Cooperation among Communicating Problem Solvers, </title> <journal> IEEE Transactions on Computers C-36(11), </journal> <pages> 1275-1291. </pages>
Reference: <author> Eichmann, D. T. </author> <year> (1994a), </year> <title> The RBSE Spider - Balancing Effective Search Against Web Load, </title> <booktitle> In Proceedings of the First International Conference on the World Wide Web, </booktitle> <address> Geneva, Switzerland, </address> <month> May 25-27, </month> <pages> 369-378. </pages> <note> 45 Eichmann, </note> <author> D. T. </author> <year> (1994b), </year> <title> Ethical Web Agents, </title> <booktitle> Proceedings of the 2nd WWW Conference, </booktitle> <address> http://www.ncsa.uiuc.edu/SDG/IT94/ Etzioni, O. </address> <year> (1993), </year> <title> Intelligence without Robots: A Reply to Brooks, </title> <journal> AI Magazine 14 (4), </journal> <pages> 7-13. </pages>
Reference-contexts: If another users keywords match closely some page, the summary of the page and its URL is e-mailed to the particular user. There are other information agents built in particular for information filtering. For example, Webwatcher (Amstrong et al., 1995), the RBSE Spider <ref> (Eichmann, 1994a) </ref> and Metacrawler (http: URL4). The last two are strictly speaking not agents, e.g. Metacrawler is certainly a meta-search engine which provides an interface to other search engines on the WWW.
Reference: <author> Etzioni, O. & Weld, D. </author> <year> (1994), </year> <title> A Softbot-Based Interface to the Internet, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 72-76. </pages>
Reference: <author> Ferber, J. </author> <year> (1994), </year> <title> Simulating with Reactive Agents, </title> <editor> In Hillebrand, E. & Stender, J. (Eds.), </editor> <title> Many Agent Simulation and Artificial Life, </title> <publisher> Amsterdam: IOS Press, </publisher> <pages> 8-28. </pages>
Reference-contexts: These agents on the contrary do not have any internal, symbolic models of their environment, and they act using a stimulus/response type of 7 behaviour by responding to the present state of the environment in which they are embedded <ref> (Ferber, 1994) </ref>. Indeed, Brooks has argued that intelligent behaviour can be realised without the sort of explicit, symbolic representations of traditional AI (Brooks, 1991b). Thirdly, agents may be classified along several ideal and primary attributes which agents should exhibit. <p> However, the essence of the physical grounding hypothesis still holds with such reactive agents: no explicit symbolic representations, no explicit (abstract) symbolic reasoning and an emergent functionality. Reactive agents are simple and easy to understand, and their cognitive economy <ref> (Ferber, 1994) </ref> is very low; this is because they have to remember little. They are situated, i.e. they do not plan ahead or revise any world models, and their actions depend on what happens at the present moment.
Reference: <author> Ferguson, I. A. </author> <year> (1992a), </year> <title> Towards an Architecture for Adaptive, Rational, Mobile Agents, </title> <editor> In Werner, E. & Demazeau, Y. (eds.), </editor> <booktitle> Decentralized AI 3: Proceedings of the 3rd European Workshop on Modelling Autonomous Agents and Multi-Agent Worlds (MAAMAW-91), </booktitle> <address> Amsterdam: </address> <publisher> Elsevier, </publisher> <pages> 249-262. </pages>
Reference: <author> Ferguson, I. A. </author> <year> (1992b), </year> <title> TouringMachines: An Architecture for Dynamic, Rational, Mobile Agents, </title> <type> PhD Thesis, </type> <institution> Computer Laboratory, University of Cambridge, UK. </institution>
Reference-contexts: For more details on the InteRRaP architecture (whose redesign has been completed recently) and the results of the evaluation, consult Muller et al. (1995), Muller (1994) and Fischer et al. (1996). Fergusons (1992a) TouringMachines architecture is another good example of a hybrid architecture for dynamic, rational and mobile agents <ref> (Ferguson, 1992b) </ref>, though the word mobile does not refer to mobile agents as in Telescript agents, but to mobile agents as in autonomous robots.
Reference: <author> Fikes, R. E. & Nilsson, N. J. </author> <year> (1971), </year> <title> STRIPS: A New Approach to the Application of Theorem Proving to Problem Solving, </title> <booktitle> Artificial Intelligence 2, </booktitle> <pages> 189-208. </pages>
Reference-contexts: Hence, while a planning approach leaves much to the agent, the situated agents approach leaves much to the designers. Maes (1991b) opted for a more hybrid approach in her agent network architecture. In it she implemented an agent as a set of competence modules, each with STRIPS-like <ref> (Fikes & Nilsson, 1971) </ref> pre and post conditions. Modules also get activated if their activation level (a real value) is exceeded, and this level represents the relevance of the module in some situation. If a module has a higher activation level, it will influence the agents behaviour more.
Reference: <author> Finin, T. & Wiederhold, G. </author> <year> (1991), </year> <title> An Overview of KQML: A Knowledge Query and Manipulation Language, </title> <institution> Department of Computer Science, Stanford University. </institution>
Reference-contexts: Sycara and her colleagues hypothesised that in order to meet their goals, they would need a distributed collection of collaborative agents which can gather, filter and fuse information in addition to being able to learn from their interactions. Agents communicate using KQML <ref> (Finin & Wiederhold, 1991) </ref> and email, and they negotiate in order to reach agreements in cases of conflicts. The layered architecture is clearly very modular, indeed modular enough for Sycara and her colleagues to have introduced connectionist modules in the design of other systems. <p> ACL, inter alia, consists of the 38 Knowledge Interchange Format (KIF), the Knowledge Query and Manipulation Language (KQML) <ref> (Finin & Wiederhold, 1991) </ref> and Ontolingua (Gruber, 1991). 5.7.2 How Heterogeneous Agent Systems Work To commence, we provide the rather specific definition of the word agent proffered in agent-based software engineering.
Reference: <author> Fisher, K., Muller, J. P. & Pischel, M. </author> <year> (1996), </year> <title> Unifying Control in a Layered Agent Architecture, </title> <type> Technical Report TM-94-05, </type> <institution> German Research Center for AI - (DFKI GmbH). </institution>
Reference: <author> Foner, L. </author> <year> (1993), </year> <title> Whats an Agent, Anyway? A Sociological Case Study, Agents Memo 93-01, </title> <publisher> MIT Media Lab, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: In summary a learning interface agent, as opposed to any kind of agent, is one that uses machine-learning techniques to present a pseudo intelligent user interface for its actions <ref> (Foner, 1993, p. 1) </ref>. 5.2.1 Hypothesis/Goal The objective of interface agents research (as Maes sees it) is to work towards Alan Kays dream of having indirectly managed human-computer interfaces (Kay, 1990). The argument goes as follows.
Reference: <author> Foner, L. </author> <year> (1996), </year> <title> A Multi-Agent Referral System for MatchMaking, </title> <booktitle> In Proceedings the First International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology (PAAM 96), </booktitle> <address> London, </address> <month> 22-24 April, </month> <pages> 245-262. </pages>
Reference-contexts: Thus far, her team has constructed demonstrator agents for the following roles: Eager assistants (e.g. Kozierok & Maes, 1993); Guides (e.g. Liebermann, 1995); Memory aids (e.g. Rhodes & Starner, 1996); Filter/critics (e.g. Sheth & Maes, 1993); Matchmaking/referrals <ref> (e.g. Foner, 1996) </ref>; Buying/selling on your behalf (e.g. Chavez & Maes, 1996); Entertainment (e.g. Maes, 1995b). We overview them briefly. Kozierok & Maes (1993) describe an interface agent, Calendar Agent, for scheduling meetings which is attachable to any application provided it is scriptable and recordable, e.g. scheduling software package.
Reference: <author> Gasser, L. </author> <year> (1991), </year> <title> Social Conceptions of Knowledge and Action: </title> <booktitle> DAI Foundations and Open Systems, Artificial Intelligence 47, </booktitle> <pages> 107-138. </pages>
Reference: <editor> Gasser, L. & Huhns, M. </editor> <booktitle> (1989), Distributed Artificial Intelligence 2, </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Gasser, L., Braganza, C. & Herman, N. </author> <year> (1987), </year> <title> MACE: A Flexible Testbed fo Distributed AI Research, </title> <editor> In Huhns, M. (ed.), </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, </booktitle> <address> London: </address> <publisher> Pitman, </publisher> <pages> Chapter 5, 119-152. </pages>
Reference-contexts: Their goal was to specify, analyse, design and integrate systems comprising of multiple collaborative agents. These resulted in classic systems and work such as the actor model (Hewitt, 1977), MACE <ref> (Gasser et al., 1987) </ref>, DVMT (Lesser & Corkill, 1981), MICE (Durfee & Montgomery, 1989), MCS (Doran et al., 1990), the contract network coordination approach (Smith, 1980; Davis & Smith, 1983), MAS/DAI planning and game theories (Rosenschein, 1985; Zlotkin & Rosenschein, 1989; Rosenschein & Zlotkin, 1994). <p> Each of these agents shared a global knowledge of the problem solving; hence, they are, strictly speaking, not that autonomous and cooperation is quite basic as it all proceeds via the common blackboard. Certainly, other strand 1 testbeds such as MACE <ref> (Gasser et al., 1987) </ref>, MCS (Doran et al., 1990) and IPEM (Ambros-Ingerson & Steel, 1988) have deliberative agents with planning modules that underpin the coordination and cooperation in the setups they are operating within. In the case of IPEM and MCS, nonlinear planners are used.
Reference: <author> Gasser, L. , Rosenschein, J. S. & Ephrati, E. </author> <year> (1995), </year> <title> Introduction to Multi-Agent Systems, </title> <booktitle> Tutorial A Presented at the 1st International Conference on Multi-Agent Systems, </booktitle> <address> San Francisco, CA, </address> <month> June. </month>
Reference: <author> Georgeff, M. </author> <year> (1996), </year> <title> Agents with Motivation: Essential Technology for Real World Applications, </title> <booktitle> The First International Conference on the Practical Applications of Intelligent Agents and Multi-Agent Technology, </booktitle> <address> London, UK, </address> <month> 24th April </month> <year> 1996. </year>
Reference-contexts: This prototype has been tested with 100+ aircraft agents and 10+ global agents which handle other issues including windfields, trajectories and coordination <ref> (Georgeff, 1996) </ref>. Full implementation is already in progress. However, it must be emphasised that research into such stronger definition of agents, relatively, is still very much in its infancy. <p> real industrial settings though this situation is changing, e.g. those built under the auspices of the ARCHON project (Wittig, 1992; Jennings et. al., 1993) or a couple of others built with the involvement of Mike Georgeff, e.g. the Space Shuttle Malfunction Handling system and the agent-based Royal Australian Airforce Simulator <ref> (Georgeff, 1996) </ref>. There are still many teething problems; we mention several here. Note that these are not necessarily specific to collaborative agents only: Engineering the construction of collaborative agent systems: the Pleiades system is a good step in this direction but there is much more research to do.
Reference: <author> Georgeff, M. P. & Ingrand, F. F. </author> <year> (1989), </year> <title> Decision-Making in an Embedded Reasoning System, </title> <booktitle> In Proceedings of the 11th International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, MI, Menlo Park, CA: </address> <publisher> Morgan Kaufmann, </publisher> <pages> 972-978. </pages>
Reference: <author> Genesereth, M. R. & Ketchpel, S. P. </author> <year> (1994), </year> <title> Software Agents, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 48-53. </pages>
Reference-contexts: It defines a software agent as such if an only if it communicates correctly in an agent communication language <ref> (Genesereth & Ketchpel, 1994, p. 50) </ref>. If new agents are constructed such that they abide by this dictum, then putting them together in a heterogeneous setup is possible, though not trivial. However, with legacy software, they need to be converted into software agents first.
Reference: <author> Graham, M. & Wavish, P. R. </author> <year> (1991), </year> <title> Simulating and Implementing Agents and Multiple Agent Systems, </title> <booktitle> In Proceedings of the European Simulation Multi-Conferencce, </booktitle> <address> Copenhagen, </address> <month> June. </month> <note> 46 Greif, </note> <author> I. </author> <year> (1994), </year> <title> Desktop Agents in Group-Enabled Products, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 100-105. </pages>
Reference-contexts: Situated-action agents have been used in PENGI, a video game designed as part of Agres doctoral thesis (Agre, 1988), and SONJA (Chapman, 1992). Researchers at Philips research laboratories in Redhill, UK, have implemented a situation-action based language called the RTA programming language <ref> (Graham & Wavish, 1991) </ref>. Indeed, they have used this language to implement characters in computer games which they have since integrated into CD-i titles (Wavish & Graham, 1995).
Reference: <author> Gruber, T. Ontolingua: </author> <title> A Mechanism to Support Portable Ontologies, </title> <institution> KSL-91-66, Stanford University Knowledge Systems Laboratory. </institution>
Reference: <author> Guilfoyle, C. </author> <year> (1995), </year> <title> Vendors of Agent Technology, </title> <booktitle> UNICOM Seminar on Intelligent Agents and their Business Applications, </booktitle> <pages> 8-9 November, </pages> <address> London, </address> <pages> 135-142. </pages>
Reference-contexts: The same firm has apparently predicted that the market sector totals for agent software and products for USA and Europe will be worth at least $3.9 billion by the year 2000 in contrast to an estimated 1995 figure of $476 million <ref> (computed from figures quoted in Guilfoyle, 1995) </ref>. Such predictions are perhaps overly optimistic.
Reference: <author> Hayes-Roth, B. </author> <year> (1991), </year> <title> An Integrated Architecture for Intelligent Agents, </title> <journal> SIGART Bulletin 2, </journal> <volume> (4), </volume> <pages> 79-81. </pages>
Reference: <author> Hayes-Roth, B. </author> <year> (1995), </year> <title> An Architecture for Adpative Intelligent Systems, </title> <booktitle> Artificial Intelligence 72 (1-2), </booktitle> <pages> 329-365. </pages>
Reference: <author> Hayes-Roth, B. Brownston, L. & van Gent, R. </author> <year> (1995), </year> <title> Multiagent Collaboration in Directed Improvisation, </title> <booktitle> In Proceedings of the 1st International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <address> San Francisco, USA, </address> <month> June, </month> <pages> 148-153. </pages>
Reference: <author> Hermens, L. & Schlimmer, J. </author> <year> (1993), </year> <title> A Machine Learning Apprentice for the Completion of Repetitive Forms, </title> <booktitle> In Proceedings of the 9th IEEE Conference on Artificial Intelligence Applications, </booktitle> <address> Orlando, Florida: </address> <publisher> IEEE Press, </publisher> <pages> 164-170. </pages>
Reference: <author> Hewitt, C. </author> <year> (1977), </year> <title> Viewing Control Structures as Patterns of Passing Messages, </title> <booktitle> Artificial Intelligence 8(3), </booktitle> <pages> 323-364. </pages>
Reference-contexts: The concept of an agent, in the context of this paper, can be traced back to the early days of research into DAI in the 1970s - indeed, to Carl Hewitts concurrent Actor model <ref> (Hewitt, 1977) </ref>. In this model, Hewitt proposed the concept of a self-contained, interactive and concurrently-executing object which he termed actor. This object had some encapsulated internal state and could respond to messages from other similar objects: an actor is a computational agent which has a mail address and a behaviour. <p> This object had some encapsulated internal state and could respond to messages from other similar objects: an actor is a computational agent which has a mail address and a behaviour. Actors communicate by message-passing and carry out their actions concurrently <ref> (Hewitt, 1977, p. 131) </ref>. Broadly, for the purposes of this paper, we split the research on agents into two main strands: the first spanning the period 1977 to the current day, and the second from 1990 to the current day too. <p> Their goal was to specify, analyse, design and integrate systems comprising of multiple collaborative agents. These resulted in classic systems and work such as the actor model <ref> (Hewitt, 1977) </ref>, MACE (Gasser et al., 1987), DVMT (Lesser & Corkill, 1981), MICE (Durfee & Montgomery, 1989), MCS (Doran et al., 1990), the contract network coordination approach (Smith, 1980; Davis & Smith, 1983), MAS/DAI planning and game theories (Rosenschein, 1985; Zlotkin & Rosenschein, 1989; Rosenschein & Zlotkin, 1994).
Reference: <author> Huhns, M. N. & Singh, M. P. </author> <year> (1994), </year> <booktitle> Distributed Artificial Intelligence for Information Systems, CKBS-94 Tutorial, </booktitle> <address> June 15, </address> <institution> University of Keele, UK. </institution>
Reference-contexts: For example, thanks to distributed computing, software agents inherit DAIs potential benefits including modularity, speed (due to parallelism) and reliability (due to redundancy). It also inherits those due to AI such as operation at the knowledge level, easier maintenance, reusability and platform independence <ref> (Huhns & Singh, 1994) </ref>. The concept of an agent, in the context of this paper, can be traced back to the early days of research into DAI in the 1970s - indeed, to Carl Hewitts concurrent Actor model (Hewitt, 1977).
Reference: <author> Indermaur, K. </author> <year> (1995), </year> <title> Baby Steps, </title> <journal> Byte, </journal> <month> March, </month> <pages> 97-104. </pages>
Reference: <author> Huhns, M. N. , Jacobs, N., Ksieyk, T., Shen, W-M, Singh, M. P. & Cannata, P. E. </author> <year> (1993), </year> <title> Integrating Enterprise Information Models in Carnot, </title> <booktitle> Proceedings of the International Conference on Intelligent abd Cooperative Information Systems (ICI-CIS), </booktitle> <pages> 32-42. </pages>
Reference-contexts: This framework allows for requests for some global piece of information that cuts across these databases and KBSs. The requests need to be decomposed by information agents into sub-requests and disseminated to the appropriate systems and the responses are later collated. Another similar architecture is the Carnot architecture <ref> (Huhns et al., 1993) </ref> at MCC which is also addressing the problem of logically unifying physically distributed, enterprise-wide, heterogeneous information. The essential component of Carnot agents are the Extensible Service Switches (ESSs) which are the communication aides to the legacy systems.
Reference: <author> Jennings, N. R. </author> <year> (1993), </year> <title> Specification and Implementation of a Belief Desire Joint-Intention Architecture for Collaborative Problem Solving, </title> <journal> Journal of Intelligent and Cooperative Information Systems 2(3), </journal> <pages> 289-318. </pages>
Reference: <author> Jennings, N. R., Varga, L. Z., Aarnts, R. P., Fuchs, J. & Skarek, P. </author> <year> (1993), </year> <title> Transforming StandAlone Expert Systems into a Community of Cooperating Agents, </title> <journal> International Journal of Engineering Applications of Artificial Intelligence 6(4), </journal> <pages> 317-331. </pages>
Reference: <author> Jennings, N., Corera, J. M., Laresgoiti, L., Mamdani, E., Perriollat, F., Skarek, P. & Varga, L. </author> <year> (1995), </year> <title> Using ARCHON to Develop Real-World DAI Applications for Electricity Transportation and Particle Accelerator Control, </title> <journal> IEEE Expert, Special Issue on Real World Applications of DAI systems. </journal>
Reference: <author> Kaebling, L. P. & Rosenschein, S. J. </author> <year> (1990), </year> <title> Action and Planning in Embedded Agents, </title> <editor> In Maes, P. (ed) (1991), </editor> <title> Designing Autonomous Agents: Theory and Practice from Biology to Engineering and Back, </title> <publisher> London: The MIT press, </publisher> <pages> 35-48. </pages>
Reference: <author> Kay, A. </author> <title> User Interface: A Personal View, </title> <editor> In Laurel, B. (ed.), </editor> <booktitle> The Art of Himan-Computer Interface Design, </booktitle> <address> Reading, Mass: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> King, J. A. </author> <year> (1995), </year> <title> Intelligent Agents: Bringing Good Things to Life, </title> <journal> AI Expert, </journal> <month> February, </month> <pages> 17-19. </pages>
Reference: <author> Kozierok, R. & Maes, P. </author> <year> (1993), </year> <title> A Learning Interface Agent for Scheduling Meetings, </title> <booktitle> Proceedings of the ACM-SIGCHI International Workshop on Intelligent User Interfaces, Florida, </booktitle> <pages> 81-93. </pages>
Reference-contexts: Perhaps these will be understood better by discussing some of the roles for which Maes and her team at MIT are building interface agents. Thus far, her team has constructed demonstrator agents for the following roles: Eager assistants <ref> (e.g. Kozierok & Maes, 1993) </ref>; Guides (e.g. Liebermann, 1995); Memory aids (e.g. Rhodes & Starner, 1996); Filter/critics (e.g. Sheth & Maes, 1993); Matchmaking/referrals (e.g. Foner, 1996); Buying/selling on your behalf (e.g. Chavez & Maes, 1996); Entertainment (e.g. Maes, 1995b). We overview them briefly. <p> Their philosophies are essentially the same and the key difference is in their use of learning techniques: Dent et al.s apprentice uses backpropagation neural network and decision tree learning techniques while Calendar Agent <ref> (Kozierok & Maes, 1993) </ref> uses memory-based and reinforcement learning. Mitchell et al. (1994) summarise results from five user-years of experience over which CAP has learned and evolved a set of several thousand rules that model the scheduling preferences of each of its users.
Reference: <author> Lang, K. </author> <year> (1995), </year> <title> Newsweeder: Learning to Filter Netnews, </title> <booktitle> In Proceedings of the Machine Learning Conference. </booktitle> <volume> 47 Lashkari, </volume> <editor> Y., Metral, M. & Maes, P. </editor> <year> (1994), </year> <title> Collaborative Interface Agents, </title> <booktitle> In Proceedings of the 12th National Conference on Artificial Intelligence 1, </booktitle> <address> Seattle, WA, </address> <publisher> AAAI Press, </publisher> <pages> 444-449. </pages>
Reference: <author> Lesser, V. & Corkill, D. </author> <year> (1981), </year> <title> Functionally Accurate, Cooperative Distributed Systems, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics C-11(1), </journal> <pages> 81-96. </pages>
Reference-contexts: Their goal was to specify, analyse, design and integrate systems comprising of multiple collaborative agents. These resulted in classic systems and work such as the actor model (Hewitt, 1977), MACE (Gasser et al., 1987), DVMT <ref> (Lesser & Corkill, 1981) </ref>, MICE (Durfee & Montgomery, 1989), MCS (Doran et al., 1990), the contract network coordination approach (Smith, 1980; Davis & Smith, 1983), MAS/DAI planning and game theories (Rosenschein, 1985; Zlotkin & Rosenschein, 1989; Rosenschein & Zlotkin, 1994).
Reference: <author> Levitt, R., Cohen, P., Kunz, J., Nass, C., Christiansen, T. & Jin, Y. </author> <year> (1994), </year> <title> The Virtual Design Team: Simulating how Organisational Structure and Communication Tools affect Team Performance, </title> <editor> In Carley, K. & Prietula, M. (eds.) </editor> <booktitle> Computational Organisation Theory, </booktitle> <address> San Francisco: </address> <publisher> Lawrence Erlbaum. </publisher>
Reference-contexts: In any case, such issues are well summarised in Chaib-draa et al. (1992), Bond & Gasser (1988) and Gasser & Huhns (1989). More recent work under this strand include TMS (Decker & Lesser, 1993; Decker, 1995) DRESUN (Carver et al., 1991; Carver & Lesser, 1995), VDT <ref> (Levitt et al., 1994) </ref>, ARCHON (Wittig, 1992; Jennings et al., 1995); Note that game theoretic work should arguably not be classed as a macro approach; it may, indeed, lie more towards the micro end of the spectrum.
Reference: <author> Lieberman, H. </author> <year> (1995), </year> <title> Letizia: An Agent that Assists Web Browsing, </title> <booktitle> In Proceedings of IJCAI 95, </booktitle> <publisher> AAAI Press. </publisher>
Reference-contexts: Perhaps these will be understood better by discussing some of the roles for which Maes and her team at MIT are building interface agents. Thus far, her team has constructed demonstrator agents for the following roles: Eager assistants (e.g. Kozierok & Maes, 1993); Guides <ref> (e.g. Liebermann, 1995) </ref>; Memory aids (e.g. Rhodes & Starner, 1996); Filter/critics (e.g. Sheth & Maes, 1993); Matchmaking/referrals (e.g. Foner, 1996); Buying/selling on your behalf (e.g. Chavez & Maes, 1996); Entertainment (e.g. Maes, 1995b). We overview them briefly.
Reference: <author> Maes, P. </author> <title> (ed) (1991a), Designing Autonomous Agents: Theory and Practice from Biology to Engineering and Back, </title> <publisher> London: The MIT press. </publisher>
Reference: <author> Maes, P. </author> <year> (1991b), </year> <title> Situated Agents Can Have Goals, </title> <editor> In Maes, P. (ed) (1991a), </editor> <title> Designing Autonomous Agents: Theory and Practice from Biology to Engineering and Back, </title> <publisher> London: The MIT press, </publisher> <pages> 49-70. </pages>
Reference-contexts: The interaction process only comes to a rest (or a fixed pattern) when the goals are achieved <ref> (Maes, 1991b, 50) </ref>. This would not only be time-consuming, but it also smacks of trial and error with all its attendant problems.
Reference: <author> Maes, P. </author> <year> (1994), </year> <title> Agents that Reduce Work and Information Overload, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 31-40. </pages>
Reference-contexts: Thus, the users agent acts as an autonomous personal assistant which cooperates with the user in accomplishing some task in the application. As for learning, interface agents learn typically to better assist its user in four ways <ref> (Maes, 1994) </ref> all shown in Figure 4: By observing and imitating the user (i.e. learning from the user); Through receiving positive and negative feedback from the user (learning from the user); By receiving explicit instructions from the user (learning from the user); By asking other agents for advice (i.e. learning from <p> More specifically, that under certain conditions, an interface agent can program itself (i.e., it can acquire the knowledge it needs to assist its user). The agent is given a minimum of background knowledge, and it learns appropriate behavior from the user and from other agents <ref> (Maes, 1994, p. 89) </ref>. <p> For example, she explains that valuable hours are wasted managing junk mail, scheduling and rescheduling meetings, searching for information among heaps of it, etc. - indeed, the title of her 1994 paper captures succinctly her motivation: Agents that Reduce Work and Information Overload <ref> (Maes, 1994) </ref>. 5.2.3 Benefits/Roles The general benefits of interface agents are threefold. First, they make less work for the end user and application developer. Secondly, the agent can adapt, over time, to its users preferences and habits. <p> Furthermore, as Mitchell et al. (1994) note 21 ...it remains to be demonstrated that knowledge learned by systems like CAP can be used to significantly reduce their users workload (p. 90). But this is the key motivation for having interface agents in the first place <ref> (Maes, 1994) </ref>. Moreover, Wayner & Joch (1995, p. 95) cite Bob Balaban, a systems architect at Lotus Notes, who argues apparently that most people do not need a smart agent which can look over their shoulders, guess their desires and, proactively, take action. <p> are preferable for what domains and why; Analysing the effect of the various learning mechanisms on the responsiveness of agents; Extending interface agents to be able to negotiate with other peer agents; Enhance continually the competence of interface agents so that their users trust in them build up over time <ref> (Maes, 1994) </ref>. Other issues which Maes notes include guaranteeing the users privacy and the legal quagmire which may ensue following the fielding of such agents. Extending the range of applications of interface agents into other innovative areas such as entertainment, as ALIVE and HOMR are doing.
Reference: <author> Maes, P. </author> <year> (1995a), </year> <title> Intelligent Software, </title> <booktitle> Scientific American 273 (3), </booktitle> <month> September. </month>
Reference: <author> Maes, P. </author> <year> (1995b), </year> <booktitle> Artificial Intelligence meets Entertainment: Lifelike Autonomous Agents, Communications of the ACM 38 (11), </booktitle> <month> November, </month> <pages> 108-114. </pages>
Reference-contexts: Kozierok & Maes, 1993); Guides (e.g. Liebermann, 1995); Memory aids (e.g. Rhodes & Starner, 1996); Filter/critics (e.g. Sheth & Maes, 1993); Matchmaking/referrals (e.g. Foner, 1996); Buying/selling on your behalf (e.g. Chavez & Maes, 1996); Entertainment <ref> (e.g. Maes, 1995b) </ref>. We overview them briefly. Kozierok & Maes (1993) describe an interface agent, Calendar Agent, for scheduling meetings which is attachable to any application provided it is scriptable and recordable, e.g. scheduling software package.
Reference: <author> Minsky, M. </author> <year> (1985), </year> <title> The Society of Mind, </title> <address> New York: </address> <publisher> Simon & Schuster. </publisher>
Reference-contexts: But what could those simpler particles be - the agents that compose our minds? This is the subject of our book... <ref> (Minsky, 1985, 18) </ref>. Clearly, Minskys use of the word agent is quite distinct from its use in this paper. Furthermore, as noted earlier, expert systems do not meet the preconditions of agenthood, as do most knowledge-based system applications.
Reference: <author> Mitchell, T., Caruana, R., Freitag, D., McDermott, J. & Zabowski, D. </author> <year> (1994), </year> <title> Experience with a Learning Personal Assistant, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 81-91. </pages>
Reference: <author> Moukas, A. </author> <year> (1996), </year> <title> Amalthaea: Information Discovery and Filtering using a Multiagent Evolving Ecosystem, </title> <booktitle> Proceedings the First International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology (PAAM 96), </booktitle> <address> London, </address> <month> 22-24 April, </month> <pages> 421-436. </pages>
Reference-contexts: Indeed, some similar new work at MIT is investigating agents that breed in their environment, i.e. information agents, given feedback on the information returned, breeds progressively more of those which return good quality information, and purges the rest that do not <ref> (see Moukas, 1996) </ref>.
Reference: <author> Muller, J. P. </author> <year> (1994), </year> <title> A Conceptual Model for Agent Interaction, </title> <editor> In Deen, S. M. (ed.), </editor> <booktitle> Proceedings of the 2nd International Working Conference on Cooperative Knowledge Based Systems (CKBS-94), </booktitle> <publisher> Keele University: Dake Centre, </publisher> <pages> 213-234. </pages>
Reference: <author> Muller, J. P., Pishel, M. & Thiel, M. </author> <year> (1995), </year> <title> Modelling Reactive Behaviour in Vertically Layered Agent Architectures, </title> <editor> In Wooldridge, M. & Jennings, N. (eds.) </editor> <booktitle> (1995b), Intelligent Agents, Lecture Notes in Artificial Intelligence 890, </booktitle> <address> Heidelberg: </address> <publisher> Springer Verlag, </publisher> <pages> 261-276. </pages>
Reference: <author> Musliner, D. H., Durfee, E. H. & Shin, K. G. </author> <year> (1993), </year> <title> CIRCA: A Cooperative Intelligent Real-Time Control Architecture, </title> <journal> IEEE Transactions on Systems, Man Cybernetics 23. </journal>
Reference-contexts: The main reference for PRS is Georgeff & Ingrand (1989). Another hybrid system is CIRCA <ref> (Musliner et al., 1993) </ref>. 5.6.3 A Brief Critical Review of Hybrid Architectures and Challenges Hybrid agent architectures are still relatively few in numbers but the case for having them is overwhelming. There are usually three typical criticisms of hybrid architectures in general, not necessarily the ones reviewed above.
Reference: <author> Newell, A. </author> <year> (1982), </year> <title> The Knowledge Level, </title> <booktitle> Artificial Intelligence 18, </booktitle> <pages> 87-127. </pages>
Reference-contexts: Second, in agent-based systems generally, the communication involves involves high-level messages in contrast to the low-level messaging in distributed computing. The use of high-level messaging leads to lower communication costs, easy re-implementability and concurrency. Lastly, and perhaps most importantly, agent-based applications operate typically at the knowledge level <ref> (Newell, 1982) </ref>, not at the symbol level as is the case in distributed computing applications. In any case, modules in distributed computing applications are not autonomous in the same sense as described earlier for agent applications.
Reference: <author> Norman, D. </author> <year> (1994), </year> <title> How might people interact with agents, </title> <booktitle> Communications of the ACM 37 (7), </booktitle> <pages> 68-76. </pages>
Reference-contexts: Such work, as is evidenced in their paper, is already underway. This concludes our panoramic overview of the different classes of agents identified in Section 4. 6 Some General Issues and the Future of Agents Smart agents are here to stay. Once unleashed, technologies do not disappear <ref> (Norman, 1994, p. 71) </ref>. We agree fully with these sentiments which is why we believe agent technology is not a passing fad. We have now overviewed a broad range of work which goes under the banner of agents. We have outlined their various promises as well as their challenges. <p> Myths, promises, and reality are all colliding. But the main difficulties I foresee are social, not technical. How will intelligent agents interact with people and perhaps more importantly, how might people think about agents? <ref> (Norman, 1994, p. 68) </ref>. We disagree with Norman as regards the major technical hurdles ahead; as shown in the previous section, there are some extremely demanding technical issues to be resolved in most of the agent classes reviewed. However, we agree that he poses an extremely pertinent question.
Reference: <author> Nwana, H. S. </author> <year> (1993), </year> <note> Simulating a Childrens Playground in ABLE, Working Report, </note> <institution> Department of Computer Science, Keele University, UK. </institution>
Reference: <author> Nwana, H. S. </author> <year> (1996), </year> <title> The Potential Benefits of Software Agent Technology to BT, </title> <type> Internal Technical Report, </type> <institution> Project NOMADS, Intelligent Systems Research, AA&T, BT Labs, UK. </institution>
Reference-contexts: In order to cooperate, agents need to possess a social ability, i.e. the ability to interact with other agents and possibly humans via some communication language (Wooldridge & Jennings, 1995a). Having said this, it is possible for agents to coordinate their actions without cooperation <ref> (Nwana et al., 1996) </ref>. Lastly, for agent systems to be truly smart, they would have to learn as they react and/or interact with their external environment. In our view, agents are (or should be) disembodied bits of intelligence. <p> For example, at BT, we see a potential major role for them in managing telecommunications networks and in business process management <ref> (Nwana, 1996) </ref>. 5.2 Interface Agents: An Overview Interface agents (c.f. Figure 1) emphasise autonomy and learning in order to perform tasks for their owners.
Reference: <author> Nwana, H. S., Lee, L. & Jennings, N. R. </author> <year> (1996), </year> <title> Coordination in Software Agent Systems, </title> <journal> British Telecommunications Technology Journal 14 (4), </journal> <note> October. 48 Nwana, </note> <author> H. S. & Wooldridge, M. </author> <year> (1996), </year> <title> Software Agent Technologies, </title> <note> British Telecommunications Technology Journal 14 (4) , October. </note>
Reference-contexts: In order to cooperate, agents need to possess a social ability, i.e. the ability to interact with other agents and possibly humans via some communication language (Wooldridge & Jennings, 1995a). Having said this, it is possible for agents to coordinate their actions without cooperation <ref> (Nwana et al., 1996) </ref>. Lastly, for agent systems to be truly smart, they would have to learn as they react and/or interact with their external environment. In our view, agents are (or should be) disembodied bits of intelligence. <p> For example, at BT, we see a potential major role for them in managing telecommunications networks and in business process management <ref> (Nwana, 1996) </ref>. 5.2 Interface Agents: An Overview Interface agents (c.f. Figure 1) emphasise autonomy and learning in order to perform tasks for their owners.
Reference: <author> OBrien, P. & Wiegand, M. </author> <year> (1996), </year> <title> Agents of Change in Business Process Management, </title> <journal> British Telecommunications Technology Journal 14 (4), </journal> <month> October. Ovum </month> <year> (1994), </year> <title> Ovum Report on Intelligent Agents: The New Revolution in Software. </title>
Reference-contexts: In the case of IPEM and MCS, nonlinear planners are used. Other planning-based prototypes include Hayes-Roths (1991) GUARDIAN architecture and Cohens et al.s PHOENIX system. At BT Labs, two prototype collaborative agent-based systems have been developed recently: the ADEPT and MII prototypes. ADEPT <ref> (OBrien & Wiegand, 1996) </ref> employs collaborative agents in the application area of business process re-engineering while MII (Titmuss et al., 1996) demonstrates that collaborative agents can be used to perform decentralised management and control of consumer electronics, typically PDAs or PCs integrated with services provided by the network operator.
Reference: <author> Papazoglou, M. P., Laufman, S. C. & Sellis, T. K. </author> <year> (1992), </year> <title> An Organisational Framework for Cooperating Intelligent Information Systems, </title> <booktitle> Intelligent and Cooperative Information Systems 1(1), </booktitle> <pages> 169-202. </pages>
Reference: <author> Plu, M. </author> <year> (1995), </year> <title> Software Agents in Telecommunications Network Environments, </title> <booktitle> UNICOM Seminar on Intelligent Agents and their Business Applications, </booktitle> <pages> 8-9 November, </pages> <address> London, </address> <pages> 225-243. </pages>
Reference: <author> Pylyshyn, Z. W. </author> <year> (1987), </year> <editor> (ed.), </editor> <booktitle> The Robots Dilemma: The Frame Problem Problem in Artificial Intelligence, </booktitle> <address> Norwood, NJ: </address> <publisher> Ablex. </publisher>
Reference-contexts: Other benefits include flexibility and adaptability in contrast to the inflexibility, slow response times and brittleness of classical AI systems. Another benefit, it is hoped, is that this type of work would address the frame problem <ref> (Pylyshyn, 1987) </ref> which has so far proved intractable with traditional AI techniques such as nonmonotonic reasoning. 5.5.2 Reactive Agent Applications It must be stated that there are a relatively few number of reactive software agent-based applications.
Reference: <author> Rao, A. S. & Georgeff, M. P. </author> <year> (1995), </year> <title> BDI Agents: From Theory to Practice, </title> <booktitle> In Proceedings of the 1st International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <address> San Francisco, USA, </address> <month> June, </month> <pages> 312-319. </pages>
Reference-contexts: do they get fed up being asked to do the same thing time and time again? What role does emotion have in constructing believable agents (Bates, 1994)? Some agents are also imbued with mentalistic attitudes or notions such as beliefs, desires and intentions - referred to typically as BDI agents <ref> (Rao & Georgeff, 1995) </ref>. Such attributes as these provide for a stronger definition of agenthood. In essence, agents exist in a truly multidimensional space, which is why we have not used a two or three-dimensional matrix to classify them - this would be incomplete and inaccurate. <p> There are a few other hybrid architectures which we do not review here, an obvious one being the procedural reasoning system (PRS) in which the OASIS prototype <ref> (Rao & Georgeff, 1995) </ref> mentioned in Section 5.1.4 was implemented. The main reference for PRS is Georgeff & Ingrand (1989).
Reference: <author> Reinhardt, A. </author> <year> (1994), </year> <title> The Network with Smarts, </title> <journal> Byte, </journal> <month> October, </month> <pages> 51-64. </pages>
Reference: <author> Rosenschein, J. S. </author> <year> (1985), </year> <title> Rational Interaction: Cooperation Among Intelligent Agents, </title> <type> PhD Thesis, </type> <institution> Stanford University. </institution>
Reference: <author> Rosenschein, J. S. & Zlotkin, G. </author> <year> (1994), </year> <title> Rules of Encounter: Designing Conventions for Automated Negotiation among Computers, </title> <publisher> Cambridge: MIT Press. </publisher>
Reference: <author> Rhodes, B. J. & Starner, T. </author> <year> (1996), </year> <title> Remembrance Agent: A Continuously Automated Information Retrieval System, </title> <booktitle> In Proceedings the First International Conference on the Practical Application of Intelligent Agents and Mullti-Agent Technology (PAAM 96), </booktitle> <address> London, </address> <month> 22-24 April, </month> <pages> 487-496. </pages>
Reference-contexts: Perhaps these will be understood better by discussing some of the roles for which Maes and her team at MIT are building interface agents. Thus far, her team has constructed demonstrator agents for the following roles: Eager assistants (e.g. Kozierok & Maes, 1993); Guides (e.g. Liebermann, 1995); Memory aids <ref> (e.g. Rhodes & Starner, 1996) </ref>; Filter/critics (e.g. Sheth & Maes, 1993); Matchmaking/referrals (e.g. Foner, 1996); Buying/selling on your behalf (e.g. Chavez & Maes, 1996); Entertainment (e.g. Maes, 1995b). We overview them briefly. <p> The users actions immediately refocus the search. By doing this, it is able to recommend some other useful serendipitous locations. The Remembrance Agent <ref> (Rhodes & Starner, 1996) </ref> is attached currently to an Emacs editor. As the user composes some email message, say, the agent is able to carry out a keyword search and retrieve the five most relevant emails in her directory relating to this email being composed.
Reference: <author> Shardanand, U. & Maes, P. </author> <year> (1995), </year> <title> Social Information Filtering for Automating Word of Mouth, </title> <booktitle> In Proceedings of CHI-95, </booktitle> <address> Denver, CO., </address> <month> May. </month>
Reference-contexts: We hope it is clear that the potential for these interface agents are large. All these demonstrators have been or are being evaluated with users and the results so far are, in the main, quite promising. For example, Ringo has been used by more than 2000 people <ref> (Shardanand & Maes, 1995) </ref>. In order to emphasise that the distinction between some of these agent types is quite fuzzy, Lashkari et al.s (1994) paper on collaborative interface agents presents a framework for multi-agent collaboration, and discuss results of a demonstrator based on interface agents for electronic mail.
Reference: <author> Sheth, B. & Maes, P. </author> <year> (1993), </year> <title> Evolving Agents for Personalised Information Filtering, </title> <booktitle> In Proceedings of the 9th IEEE Conference on Artificial Intelligence for Applications. </booktitle>
Reference-contexts: Thus far, her team has constructed demonstrator agents for the following roles: Eager assistants (e.g. Kozierok & Maes, 1993); Guides (e.g. Liebermann, 1995); Memory aids (e.g. Rhodes & Starner, 1996); Filter/critics <ref> (e.g. Sheth & Maes, 1993) </ref>; Matchmaking/referrals (e.g. Foner, 1996); Buying/selling on your behalf (e.g. Chavez & Maes, 1996); Entertainment (e.g. Maes, 1995b). We overview them briefly.
Reference: <author> Shoham, Y. </author> <year> (1993), </year> <title> Agent-Oriented Programming, </title> <booktitle> Artificial Intelligence 60(1), </booktitle> <pages> 51-92. </pages>
Reference: <author> Smith, R. G. </author> <year> (1980), </year> <title> The Contract Net Protocol: High-Level Communication and Control in a Distributed Problem Solver, </title> <journal> IEEE Transactions on Computers C29 (12). </journal>
Reference: <author> Smith, R. </author> <year> (1996a), </year> <title> Software Agent Technology, </title> <booktitle> Proceedings ofThe First International Conference on the Practical Applications of Intelligent Agents and Multi-Agent Technology, </booktitle> <address> London, UK, </address> <pages> 557-571. </pages>
Reference-contexts: They would possess rich negotiation skills and some may demonstrate what may be referred to, arguably, as emotions. We caution against the usage of such words as the latter, not least because the agent literature abounds with such vocabulary which have subtle and complex meanings in the human context <ref> (Smith, 1996a) </ref>. However, it is also at this stage society would need to begin to confront some of the legal and ethical issues which are bound to follow the large scale fielding of agent technology.
Reference: <author> Smith, R. </author> <year> (1996b), </year> <type> Personal Communication. </type>
Reference-contexts: To paraphrase BT's Prof. Robin Smith, we must move away from point solutions to point problems, and design methodologies/meta-tools which allow for quicker implementation of collaborative agent-based systems <ref> (Smith, 1996b) </ref>; Inter-agent coordination: this is a major issue in the design of these systems. Coordination is essential to enabling groups of agents to solve problems effectively.
Reference: <author> Steels, L. </author> <year> (1990), </year> <title> Cooperation between Distributed Agents Through Self-Organisation, </title> <editor> In Demazeau, Y. & Muller, J. P. (eds.), </editor> <booktitle> Decentralized AI - Proceedings of the 1st MAAMAW, </booktitle> <address> Amsterdam: </address> <publisher> Elsevier, </publisher> <pages> 175-196. </pages>
Reference: <author> Suchman, L. A. </author> <year> (1987), </year> <title> Plans and Situated Actions: The Problem of Human-Machine Communication, </title> <publisher> Cambridge: Cambridge University Press. </publisher>
Reference: <author> Sycara, K. </author> <year> (1995), </year> <title> Intelligent Agents and the Information Revolution, </title> <booktitle> UNICOM Seminar on Intelligent Agents and their Business Applications, </booktitle> <pages> 8-9 November, </pages> <address> London, </address> <pages> 143-159. </pages>
Reference-contexts: The source of the information are the many databases (D-B) in the infosphere. Ultimately, the task agent proposes a solution (sometimes an intermediate one) to its user. Taskspecific agents have the following knowledge <ref> (Sycara, 1995) </ref>: a model of the task domain, knowledge of how to perform the task, knowledge of how to gather the information for the task, knowledge of other taskspecific or informationspecific agents it must coordinate with in order to meet the task, protocols that enable coordination with other agents and, lastly, <p> Apart from the visitor hosting system, other systems have also been developed using this architecture/methodology in the domains of financial portfolio management, emergency medical care and electronic commerce <ref> (Sycara, 1995) </ref>. In addition to these domains, there are others ripe for exploiting collaborative agents including workflow management, network management and control, telecommunication networks and business process engineering.
Reference: <author> Titmuss, R., Winter, C. S. & Crabtree, B. </author> <year> (1996), </year> <title> Agents, Mobility & Multimedia Information, </title> <booktitle> Proceedings the First International Conference on the Practical Application of Intelligent Agents and Mullti-Agent Technology (PAAM 96), </booktitle> <address> London, </address> <month> 22-24 April, </month> <pages> 693-708. </pages> <note> URL1: http://www.cs.cmu.edu/afs/cs.cmu.edu/project/theo-5/www/pleiades.html. 49 URL2: http://www.genmagic.com. URL3: http://www.sel.sony.com. URL4: http://www.metacrawler.com. URL5: http://haas.berkeley.edu/~heilman/agents/ Wavish, </note> <author> P. & Graham, M. </author> <year> (1994), </year> <title> Roles, Skills and Behaviour, </title> <editor> In Wooldridge, M. & Jennings, N. (eds.) </editor> <booktitle> (1995b), Intelligent Agents, Lecture Notes in Artificial Intelligence 890, </booktitle> <address> Heidelberg: </address> <publisher> Springer Verlag, </publisher> <pages> 371-386. </pages>
Reference-contexts: In this case, the recipients agent negotiates with other agents for permission to use their facilities, and takes into consideration issues such as costs and bandwidth in such negotiations <ref> (Titmuss et al., 1996) </ref>. At MIT, Pattie Maes group is investigating agents that can match buyers to sellers or which can build coalitions of people with similar interests. <p> Other planning-based prototypes include Hayes-Roths (1991) GUARDIAN architecture and Cohens et al.s PHOENIX system. At BT Labs, two prototype collaborative agent-based systems have been developed recently: the ADEPT and MII prototypes. ADEPT (OBrien & Wiegand, 1996) employs collaborative agents in the application area of business process re-engineering while MII <ref> (Titmuss et al., 1996) </ref> demonstrates that collaborative agents can be used to perform decentralised management and control of consumer electronics, typically PDAs or PCs integrated with services provided by the network operator. <p> Some more criticisms of collaborative agents are presented next as challenges still to be addressed by collaborative agent researchers. 5.1.5 Collaborative Agents: Some Key Challenges Despite successful demonstrators like the Pleiades system and MII <ref> (Titmuss et al., 1996) </ref>, these agents have been deployed in none but a few real industrial settings though this situation is changing, e.g. those built under the auspices of the ARCHON project (Wittig, 1992; Jennings et. al., 1993) or a couple of others built with the involvement of Mike Georgeff, e.g.
Reference: <author> Wavish, P. & Graham, M. </author> <year> (1995), </year> <title> A Situated Action Approach to Implementing Characters in Computer Games, </title> <journal> Applied AI Journal, </journal> <note> (to appear). </note>
Reference-contexts: Researchers at Philips research laboratories in Redhill, UK, have implemented a situation-action based language called the RTA programming language (Graham & Wavish, 1991). Indeed, they have used this language to implement characters in computer games which they have since integrated into CD-i titles <ref> (Wavish & Graham, 1995) </ref>. Kaebling & Rosenschein (1991) have proposed another language based on a modal logical formalism, which in turn is based on a paradigm called situated automata. Agents written in this language are compiled into digital circuits which implement the reactive agent system. <p> A favourite application area for them seems to be the games or entertainment industry, which of course is a multi-billion pound industry. For example, the Philips researchers are already working on digital video and 3-D graphics-based, reactive agent animations <ref> (Wavish & Graham, 1995) </ref>. 5.5.3 A Brief Critical Review of Reactive Agents Work Reactive agent systems can be used to simulate many types of artificial worlds as well as natural phenomena.
Reference: <author> Wayner, P. </author> <year> (1995a), </year> <title> Free Agents, </title> <journal> Byte, </journal> <month> March, </month> <pages> 105-114. </pages>
Reference: <author> Wayner, P. </author> <year> (1995b), </year> <title> Agents Unleashed: A Public Domain Look at Agent Technology, </title> <address> Boston, MA: </address> <publisher> AP Professional. </publisher>
Reference: <author> Wayner, P. & Joch, A. </author> <year> (1995), </year> <title> Agents of Change, </title> <journal> Byte, </journal> <month> March 94-95. </month>
Reference: <author> Wiederhold, G. </author> <year> (1992), </year> <booktitle> Mediators in the Architecture of Future Information Systems, IEEE Computer 25 (3), </booktitle> <pages> 38-49. </pages>
Reference: <author> Wittig, T. </author> <title> (1992) (ed.) ARCHON: An Architecture for Multi-Agent Systems, </title> <publisher> London: Ellis Horwood. </publisher>
Reference-contexts: Essentially, the agents surrender some of their autonomy to the facilitators who are able to locate other agents on the network capable of providing various services. They also establish the connection across the environments and ensure correct conversation amongst agents. ARCHON <ref> (Wittig, 1992) </ref> used such an architecture. 39 5.7.3 A Brief Critical Review of Heterogeneous Agent Systems Work PACT is an acronym for Palo Alto Collaborative Testbed which exemplifies the heterogeneous agents approach.
Reference: <author> Wolfson, D., Voorhees,, E. & Flatley, M. </author> <year> (1989), </year> <booktitle> Intelligent Routers In Proceedings of the 9th International Conference on Distributed Computing Systems DCS-9, </booktitle> <address> Newport Beach, CA, June 5-9, </address> <publisher> IEEE Computer Society Press, </publisher> <pages> 371-376. </pages>
Reference-contexts: In the late 1980s, Siemens developed an application which they called Intelligent Moving Processes <ref> (Wolfson et al., 1989) </ref>. In this work, computer programs are interpreted on one machine until a move statement is encountered. A move statement causes the packaging of the program, data and instruction pointer (just like with Telescript) and the despatching of this package to a target machine.
Reference: <author> Wooldridge, M. </author> <year> (1995), </year> <title> Conceptualising and Developing Agents, </title> <booktitle> In Proceedings of the UNICOM Seminar on Agent Software, </booktitle> <address> 25-26 April, London, </address> <pages> 40-54. </pages>
Reference-contexts: A deliberative agent is 3 one that possesses an explicitly represented, symbolic model of the world, and in which decisions (for example about what actions to perform) are made via symbolic reasoning <ref> (Wooldridge, 1995, p. 42) </ref>. Initially, strand 1 work concentrated on macro issues such as the interaction and communication between agents, the decomposition and distribution of tasks, coordination and cooperation, conflict resolution via negotiation, etc. Their goal was to specify, analyse, design and integrate systems comprising of multiple collaborative agents.
Reference: <author> Wooldridge, M. & Jennings, N. </author> <year> (1995a), </year> <title> Intelligent Agents: </title> <journal> Theory and Practice, The Knowledge Engineering Review 10 (2), </journal> <pages> 115-152. </pages>
Reference-contexts: A key element of their autonomy is their proactiveness, i.e. their ability to take the initiative rather than acting simply in response to their environment <ref> (Wooldridge & Jennings, 1995a) </ref>. Cooperation with other agents is paramount: it is the raison dtre for having multiple agents in the first place in contrast to having just one. <p> In order to cooperate, agents need to possess a social ability, i.e. the ability to interact with other agents and possibly humans via some communication language <ref> (Wooldridge & Jennings, 1995a) </ref>. Having said this, it is possible for agents to coordinate their actions without cooperation (Nwana et al., 1996). Lastly, for agent systems to be truly smart, they would have to learn as they react and/or interact with their external environment. <p> Only one other paper <ref> (Wooldridge & Jennings, 1995a) </ref> has attempted a similar extensive review of this area, which they do from a theories, architecture and languages angle. In this paper, we have overviewed the same area from the viewpoint of the clear diversity of agents being investigated in universities and research laboratories worldwide.
Reference: <editor> Wooldridge, M. & Jennings, N. (eds.) </editor> <booktitle> (1995b), Intelligent Agents, Lecture Notes in Artificial Intelligence 890, </booktitle> <address> Heidelberg: </address> <publisher> Springer Verlag. </publisher>
Reference: <author> Wooldridge, M., Mueller, J. P. & Tambe, M. </author> <year> (1996), </year> <title> Intelligent Agents II, </title> <booktitle> Lecture Notes in Artificial Intelligence 1037, </booktitle> <address> Heidelberg: </address> <publisher> Springer Verlag. </publisher>
Reference: <author> Zlotkin, G. & Rosenschein, J. S. </author> <year> (1989), </year> <title> Negotiation and Task Sharing among Autonomous Agents in Cooperative Domains, </title> <booktitle> Proceedings of the 11th IJCAI, </booktitle> <address> Detroit, </address> <publisher> Michigan, </publisher> <pages> 912-917. </pages>
References-found: 114

