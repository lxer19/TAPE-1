URL: ftp://ftp.bbtech.com/pub/papers/cera.ps
Refering-URL: http://www.bbtech.com/lander/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: flander,corkillg@bbtech.com  staley@carnap.srl.ford.com  
Phone: 2  
Title: Designing Integrated Engineering Environments: Blackboard-Based Integration of Design and Analysis Tools  
Author: Susan E. Lander Scott M. Staley and Daniel D. Corkill 
Address: 401 Main Street Amherst, MA 0l002  P.O. Box 2053/MD 2122-SRL Dearborn, MI 48121-2053  
Affiliation: 1 Blackboard Technology Group, Inc.  Ford Research Laboratory  
Abstract: Blackboard-based integration of multiple agents is a natural and viable technology for the implementation of concurrent-engineering (CE) environments. This article presents a blackboard architecture that has been extended to support the integration of heterogeneous collaborative agents. The suitability of the architecture as an integration framework for CE applications is discussed followed by a description of Ford Motor Company's prototype RRM environment. RRM is a mixed-initiative, multiuser, multiprocessing environment that integrates heterogeneous agents working on crankshaft design, analysis, and manufacturing feasibility assessment. The effectiveness of RRM and the ease and speed with which it was created supports the use of blackboard-based integration technology as appropriate for building multiagent concurrent-engineering applications.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G.F. Bolling, P.R. Sferro, and R.H. Crawford. </author> <title> It's time for the omni-engineer. </title> <booktitle> In SME Manufacturing Engineering, </booktitle> <pages> pages 60-63, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The prototype integrated environment developed for the Rapid Response Manufacturing Consortium (RRM) 1 provides a proof-of-concept for blackboard-based integration as the enabling infrastructure for Direct Engineering <ref> [1] </ref> at Ford. 2 Blackboard-Based Integration Blackboard systems have been in use since the mid-1970's [8,4].
Reference: [2] <author> Norman Carver and Victor Lesser. </author> <title> The evolution of blackboard control architectures. </title> <journal> Expert Systems with Applications-Special Issue on the Blackboard Paradigm and Its Applications, </journal> <volume> 7(1) </volume> <pages> 1-30, </pages> <month> January/March </month> <year> 1994. </year>
Reference: [3] <author> Daniel Corkill, Victor Lesser, and Eva Hudlicka. </author> <title> Unifying data-directed and goal-directed control: An example and experiments. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 143-147, </pages> <address> Pittsburgh, Pennsylvania, </address> <month> August </month> <year> 1982. </year>
Reference: [4] <author> Daniel D. Corkill. </author> <title> Introducing blackboard systems. </title> <journal> AI Expert, </journal> <volume> 6(1) </volume> <pages> 40-47, </pages> <month> September </month> <year> 1991. </year>
Reference: [5] <author> Daniel D. Corkill. </author> <title> A blackboard-based framework for mixed-initiative, manned-space-system applications. </title> <type> Final report, </type> <institution> NASA, Lyndon B. Johnson Space Center, Houston, TX, </institution> <year> 1994. </year>
Reference-contexts: Surrogate agents that represent a user in a mixed-initiative environment are needed to monitor, filter, and report information flowing through the system to the human user and to initiate commands that come from the user <ref> [5] </ref>. These projects address the infrastructure issues of providing a flexible, extensible framework in which to build applications. Rapid progress has been made in meeting the infrastructure requirements for creating integrated engineering environments.
Reference: [6] <author> Edmund Durfee and Victor Lesser. </author> <title> Incremental planning to control a blackboard--based problem solver. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 58-64, </pages> <address> Philadelphia, Pennsylvania, </address> <month> August </month> <year> 1986. </year>
Reference: [7] <author> S.M. Staley (ed.). </author> <title> Integration technology development. RRM Final Report Project No. </title> <institution> 7AA, National Center for Manufacturing Sciences, </institution> <address> Ann Arbor, MI, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: looking at ways to integrate the two control styles and to provide user support to ease the specification of effective control strategies. 10 3 The RRM Engineering Environment Prototype at Ford Research Laboatory This work, supported by the RRM Project, is a prototype of a general integrated engineering design environment <ref> [7] </ref>.
Reference: [8] <author> Lee D. Erman, Frederick Hayes-Roth, Victor R. Lesser, and D. Raj Reddy. </author> <title> The Hearsay-II speech-understanding system: Integrating knowledge to resolve uncertainty. </title> <journal> Computing Surveys, </journal> <volume> 12(2) </volume> <pages> 213-253, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: For example, in the Hearsay-II domain of speech understanding, speech signals were incrementally processed into syllables, words, and phrases, with the goal of understanding spoken sentences <ref> [8] </ref>. However, at each incremental step there were many possible solutions and high uncertainty about which was correct. If the only possible course of action was to work linearly from the first detected signal to the last signal, uncertainty about early sounds could lead to much wasted effort.
Reference: [9] <author> Tim Finin, Rich Fritzson, Don McKay, and Robin McEntire. </author> <title> KQML: A language and protocol for knowledge and information exchange. </title> <type> Technical report, </type> <institution> University of Maryland, Baltimore, MD, </institution> <year> 1994. </year>
Reference: [10] <author> Franz Inc., </author> <title> Berkeley, CA. Allegro CL Common Lisp User Guide, </title> <month> January </month> <year> 1994. </year>
Reference: [11] <author> M.R. Genesereth and R.E. Fikes. </author> <title> Knowledge Interchange Format Reference Manual. Knowledge Sharing Group, </title> <institution> Computer Science Department, Stanford University, CA, </institution> <note> version 3.0 edition, June 1992. (Published as Technical Report Logic-92-1.). </note>
Reference: [12] <author> Susan E. Lander. </author> <title> Distributed Search and Conflict Management Among Reusable Heterogeneous Agents. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, Amherst, Massachusetts, </institution> <month> May </month> <year> 1994. </year> <note> Available as Tech. Report 94-32, </note> <institution> Computer Science Department, University of Massachusetts, Amherst. </institution>
Reference: [13] <author> Susan E. Lander. </author> <title> Blackboard-based integration of legacy and reusable software agents. NSF SBIR Final Report Contract No. </title> <type> 94-45, </type> <institution> National Science Foundation, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: At Blackboard Technology Group, a model of integrated environments has been developed along with a GUI that will assist a user in specifying the agents, operations, tasks, data flow, and control flow within the environment <ref> [13] </ref>. 17 5 Future Directions Near-term directions for enhancing the integrated environment infrastructure primarily reflect the need to make the development and maintenance of environments accessible and manageable. In addition to GUIs, reusable toolsets are required to provide standard required functionality such as translators.
Reference: [14] <author> Susan E. Lander and Victor R. Lesser. </author> <title> Sharing meta-information to guide cooperative search among heterogeneous reusable agents. </title> <type> Technical Report 94-48, </type> <institution> Computer Science Department, University of Massachusetts, Amherst, Massachusetts, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: This investigation showed that significant improvement in the 18 costs of designs and in the amount of time required to produce designs could be achieved through information sharing <ref> [14] </ref>. A second investigation looked at agent organizations and whether machine learning techniques can be applied to learning appropriate organizations for an agent set [12,19].
Reference: [15] <author> Lucid Inc. </author> <title> Lucid Common Lisp/SUN Advanced User's Guide, </title> <year> 1991. </year>
Reference: [16] <author> Object Management Group. </author> <title> The Common Object Request Broker: Architecture and Specification, </title> <month> May </month> <year> 1995. </year> <note> In Press. </note>
Reference-contexts: However, the GBB/NetGBB toolkit provides the full range of the Common Lisp Object System (CLOS), a powerful object-oriented language, for specifying the shared language. CLOS can easily support compliant interfaces for agent languages and protocols such as KIF/KQML [9,11] and CORBA <ref> [16] </ref>. Because the blackboard database is partitioned, it naturally supports the definition of domain-specific ontologies. Each partition can be associated with a particular ontology and any agent that accesses information on that partition must understand the terms defined for that ontology.
Reference: [17] <author> Jeff Y.C. Pan and Jay M. Tenenbaum. </author> <title> An intelligent agent framework for enterprise integration. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6), </volume> <month> Novem-ber/December </month> <year> 1991. </year>
Reference-contexts: This article describes: 1) an approach to designing integrated concurrent-engineering environments based on blackboard technology as the integrating infrastructure; and 2) an engineering environment prototype developed at Ford Research Laboratory (FRL) using the approach. Pan and Tenenbaum <ref> [17] </ref> suggest that an integrated enterprise computing environment must support information access (the ability to locate appropriate information in a usable form), monitoring and automation (notification of events that affect local computation), cooperative work (people and computers working as a team across multiple development stages and geographical distributions), and system integration
Reference: [18] <author> Biren Prasad, Roger S. Morenc, and Ravi M. Rangan. </author> <title> Information management for concurrent engineering: Research issues. Concurrent Engineering: </title> <journal> Research and Applications, </journal> <volume> 1(1) </volume> <pages> 3-20, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Each function (or operator) in turn has an associated set of I/O and invocation characteristics. 2.2 The Blackboard Database Prasad et. al. <ref> [18] </ref> summarize one of the major requirements for concurrent engineering: "Information management of CE is a global problem and thus it requires a global strategy and solution." A blackboard architecture are two major components: the blackboard 6 database and the control structure.
Reference: [19] <author> M.V. Nagendra Prasad, V.R. Lesser, and S.E. Lander. </author> <title> Learning experiments in a heterogeneous multi-agent system. </title> <booktitle> In Proceedings of the Workshop on Adaptation and Learning in Multiagent Systems, IJCAI-95, </booktitle> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year> <note> Also available as CS Technical Report 95-35, </note> <institution> University of Massachusetts, Amherst. </institution> <month> 21 </month>
Reference: [20] <author> D. Sriram, R. Logcher, N. Groleau, and J. Cherneff. </author> <title> DICE: An object oriented programming environment for communication, coordination and control in computer aided engineering. </title> <editor> In C. Tong and D. Sriram, editors, </editor> <booktitle> Artificial Intelligence in Engineering Design (Volume III). </booktitle> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Use of integrated concurrent-engineering environments is expected to result in in 2 creased productivity resulting from less busy-work and frustration on the part of engineers, fewer errors and delays, and better communication among interacting participants in the design-to-manufacturing process <ref> [20] </ref>. The prototype integrated environment developed for the Rapid Response Manufacturing Consortium (RRM) 1 provides a proof-of-concept for blackboard-based integration as the enabling infrastructure for Direct Engineering [1] at Ford. 2 Blackboard-Based Integration Blackboard systems have been in use since the mid-1970's [8,4].
Reference: [21] <author> Nanxin Wang and Jie Chang. </author> <title> MDL: A methodology description language in a CAE integration environment. </title> <booktitle> In Proceedings of the ASME Design Automation Conference, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: At FRL, a methodology description language (MDL) has been developed that allows the user to specify control and data flow as a workflow graph with branching, iteration, and concurrency constructs <ref> [21] </ref>. The graph is then automatically interpreted by a customized blackboard control process to invoke sequences of agent executions and to direct data flow. MDL control is more natural and easier to visualize than opportunistic control for many people and it ensures coordinated, focused activity among a set of agents.
Reference: [22] <author> Nanxin Wang and Jie Cheng. EMAT: </author> <title> An engineering methodology application tool. </title> <type> Technical report, </type> <institution> Ford Research Laboratory, Ford Motor Company, Dearborn, </institution> <address> MI, </address> <year> 1995. </year>
References-found: 22

