URL: http://www.csc.ncsu.edu/faculty/savage/AVAILABLE_FOR_MAILING/multiset_combinations_gc.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/savage/papers.html
Root-URL: http://www.csc.ncsu.edu
Title: A Gray Code for Combinations of a Multiset  
Author: Frank Ruskey Carla Savage 
Note: Research supported by NSERC grant A3379. Research supported by National Science Foundation Grant No. CCR8906500 and National Security Agency Grant No. MDA904-H-4001.  
Address: Victoria, B.C., V8W 3P6, Canada  Raleigh, North Carolina, 27612-8206  
Affiliation: Department of Computer Science University of Victoria  Department of Computer Science North Carolina State University  
Abstract: Let C(k; n 0 ; n 1 ; : : :; n t ) denote the set of all k-element combinations of the multiset consisting of n i occurrences of i for i = 0; 1; : : : ; t. Each combination is itself a multiset. For example, C(2; 2; 1; 1) = ff0; 0g; f0; 1g; f0; 2g; f1; 2gg. We show that multiset combinations can be listed so that successive combinations differ by one element. Multiset combinations simultaneously generalize for which minimal change listings, called Gray codes, are known. compositions and combinations, 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Bitner, G. Ehrlich, and E. Reingold, </author> <title> Efficient Generation of the Binary Reflected Gray Code and its Applications, </title> <journal> Communications of the ACM, </journal> <month> 19 </month> <year> (1976) </year> <month> 517-521. </month>
Reference-contexts: It has been applied to combinations (e.g., Bitner, Ehrlich and Reingold <ref> [1] </ref> or Eades and McKay [4]), compositions (e.g., as attributed to Knuth in Wilf [14]), and to integer partitions (e.g., Savage [13], Rasmussen, Savage and West [11]). <p> It is also clear that a left extreme vertex in G (k; n) is right extreme in G (k; n), and vice-versa. 2 The following technical lemma will be used in Theorem 1 below to show the existence of a Gray code in C (k; n). Let <ref> [1] </ref> denote the 4 by 4 Boolean matrix with all entries 1. Lemma 5 Let A; B; C; and D be the four Boolean matrices in Figure 3. <p> Let M be the Boolean product, M = M 1 M 2 M k , where k 2 and M i 2 fA; B; C; D; <ref> [1] </ref>g for 1 i k. Then M = [1] unless M 1 = M 2 = = M k . Proof. It can be checked that the product of any two distict matrices from fA; B; C; D; [1]g is [1]. Thus, M = [1] if at least two different matrices are factors in the product M 1 = <p> k 2 and M i 2 fA; B; C; D; <ref> [1] </ref>g for 1 i k. Then M = [1] unless M 1 = M 2 = = M k . Proof. It can be checked that the product of any two distict matrices from fA; B; C; D; [1]g is [1]. Thus, M = [1] if at least two different matrices are factors in the product M 1 = M 2 = = M k . 2 Note that in constructing a Gray code for C (k; n), it suffices to consider the cases where n is nondecreasing : n 0 <p> i 2 fA; B; C; D; <ref> [1] </ref>g for 1 i k. Then M = [1] unless M 1 = M 2 = = M k . Proof. It can be checked that the product of any two distict matrices from fA; B; C; D; [1]g is [1]. Thus, M = [1] if at least two different matrices are factors in the product M 1 = M 2 = = M k . 2 Note that in constructing a Gray code for C (k; n), it suffices to consider the cases where n is nondecreasing : n 0 n 1 : : <p> Thus, C 1 = C (0; n 0 ; n 1 ) fi C (k; n 2 ; : : : ; n t ). The first factor contains only the element (0; 0), so H 1 has only one row and therefore P 1 2 f <ref> [1] </ref>, Bg. If m = 1, the result follows. Otherwise, m 2, (z 2 ; w 2 ) = (1; k 1) and C 2 = C (1; n 0 ; n 1 ) fi C (k 1; n 2 ; : : : ; n t ). <p> The first factor of C 2 contains exactly two elements (0; 1) and (1; 0), so that H 2 has two rows and therefore P 2 62 f 1,Bg. Then by Lemma 5 the product P 1 P 2 P m = <ref> [1] </ref> since P 1 and P 2 are distinct. 2 3 Final Remarks An open problem is to find Gray codes where the x i that change are adjacent.
Reference: [2] <author> M. Buck and D. </author> <title> Wiedemann, Gray Codes with Restricted Density, </title> <journal> Discrete Mathematics, </journal> <month> 48 </month> <year> (1984) </year> <month> 163-171. </month>
Reference-contexts: See, for example, Buck and Wiedemann <ref> [2] </ref>, Eades, Hickey and Read [3], Ko and Ruskey [10].
Reference: [3] <author> P. Eades, M. Hickey and R. </author> <title> Read, Some Hamilton Paths and a Minimal Change Algorithm, </title> <journal> Journal of the ACM, </journal> <month> 31 </month> <year> (1984) </year> <month> 19-29. </month>
Reference-contexts: See, for example, Buck and Wiedemann [2], Eades, Hickey and Read <ref> [3] </ref>, Ko and Ruskey [10].
Reference: [4] <author> P. Eades and B. McKay, </author> <title> An Algorithm for Generating Subsets of Fixed Size with a Strong Minimal Change Property, </title> <journal> Information Processing Letters, </journal> <month> 19 </month> <year> (1984) </year> <month> 131-133. </month>
Reference-contexts: It has been applied to combinations (e.g., Bitner, Ehrlich and Reingold [1] or Eades and McKay <ref> [4] </ref>), compositions (e.g., as attributed to Knuth in Wilf [14]), and to integer partitions (e.g., Savage [13], Rasmussen, Savage and West [11]).
Reference: [5] <author> G. Ehrlich, </author> <title> Algorithm 466: Four combinatorial algorithms, </title> <journal> Communications of the ACM, </journal> <month> 16 </month> <year> (1973) </year> <month> 690-691. </month>
Reference-contexts: The problem of efficiently generating the combinations of a multiset (in any order) was also given in Reingold, Nievergelt, and Deo [12] (pg. 201, exercise 23), but the associated solutions manual by Fill and Reingold [8] contains no solution. A loopfree algorithm, called COMPOMAX, was developed by Ehrlich <ref> [5] </ref>, [6]. In Ehrlich's algorithm successive solutions differ in two adjacent positions, but in those positions the elements may differ by more than one from their previous values.
Reference: [6] <author> G. Ehrlich, </author> <title> Loopless Algorithms for Generating Permutations, Combinations and Other Combinatorial Configurations, </title> <journal> Journal of the ACM, </journal> <month> 20 </month> <year> (1973) </year> <month> 500-513. </month>
Reference-contexts: The problem of efficiently generating the combinations of a multiset (in any order) was also given in Reingold, Nievergelt, and Deo [12] (pg. 201, exercise 23), but the associated solutions manual by Fill and Reingold [8] contains no solution. A loopfree algorithm, called COMPOMAX, was developed by Ehrlich [5], <ref> [6] </ref>. In Ehrlich's algorithm successive solutions differ in two adjacent positions, but in those positions the elements may differ by more than one from their previous values.
Reference: [7] <author> W. Engels, D. Roelants van Baronaigien, and F. </author> <title> Ruskey Generating Combinations of a Multiset, </title> <type> manuscript, </type> <year> 1993. </year>
Reference-contexts: A loopfree algorithm, called COMPOMAX, was developed by Ehrlich [5], [6]. In Ehrlich's algorithm successive solutions differ in two adjacent positions, but in those positions the elements may differ by more than one from their previous values. Roelants van Baronaigien, Ruskey, and Engels <ref> [7] </ref> provide a simpler constant amortized time generation algorithm which, however, is not a Gray code; it generates the combinations in lexicographic order. 2 The Construction Define a multiset combination x to be left extreme if x i &gt; 0 implies either i = 0 or x i1 = n i1
Reference: [8] <author> J.A. Fill and E.M. Reingold, </author> <title> Solutions Manual for Combinatorial Algorithms: Theory and Practice, </title> <publisher> Prentice-Hall, </publisher> <year> 1977. </year>
Reference-contexts: The problem of efficiently generating the combinations of a multiset (in any order) was also given in Reingold, Nievergelt, and Deo [12] (pg. 201, exercise 23), but the associated solutions manual by Fill and Reingold <ref> [8] </ref> contains no solution. A loopfree algorithm, called COMPOMAX, was developed by Ehrlich [5], [6]. In Ehrlich's algorithm successive solutions differ in two adjacent positions, but in those positions the elements may differ by more than one from their previous values.
Reference: [9] <author> F. Gray, </author> <title> Pulse code communication, </title> <editor> U. S. </editor> <booktitle> Patent 2632058 (1953). </booktitle>
Reference-contexts: In particular, we will focus on listing multiset combinations in a minimal change order. Minimal change listings of combinatorial objects are called Gray codes, after Frank Gray, who patented a scheme for listing n-bit strings so that successive strings differ in just one bit <ref> [9] </ref>. We adopt the convention that lower case bold letters represent (t + 1)-tuples; e.g., a = (a 0 ; a 1 ; : : : ; a t ).
Reference: [10] <author> C.W. Ko and F. Ruskey, </author> <title> Solution of Some Multi-dimensional Lattice Path Parity Difference Recurrence Relations, </title> <journal> Discrete Mathematics, </journal> <month> 71 </month> <year> (1988) </year> <month> 47-56. </month>
Reference-contexts: See, for example, Buck and Wiedemann [2], Eades, Hickey and Read [3], Ko and Ruskey <ref> [10] </ref>.
Reference: [11] <author> D. J. Rasmussen, </author> <title> C.D. Savage and D.B. West, Gray Code Enumeration of Families of Integer Partitions , Journal of Combinatorial Theory, Series A, </title> <note> to appear. </note>
Reference-contexts: It has been applied to combinations (e.g., Bitner, Ehrlich and Reingold [1] or Eades and McKay [4]), compositions (e.g., as attributed to Knuth in Wilf [14]), and to integer partitions (e.g., Savage [13], Rasmussen, Savage and West <ref> [11] </ref>).
Reference: [12] <author> E.M. Reingold, J. Nievergelt, and N. Deo, </author> <title> Combinatorial Algorithms: Theory and Practice, </title> <publisher> Prentice-Hall, </publisher> <year> 1977. </year> <month> 12 </month>
Reference-contexts: Such a listing will be referred to as a Gray code for combinations of a multiset. The problem of efficiently generating the combinations of a multiset (in any order) was also given in Reingold, Nievergelt, and Deo <ref> [12] </ref> (pg. 201, exercise 23), but the associated solutions manual by Fill and Reingold [8] contains no solution. A loopfree algorithm, called COMPOMAX, was developed by Ehrlich [5], [6].
Reference: [13] <author> C.D. Savage, </author> <title> Gray Codes Sequences of Partitions, </title> <journal> J. </journal> <note> Algorithms, 10 (1989) 577--595. </note>
Reference-contexts: It has been applied to combinations (e.g., Bitner, Ehrlich and Reingold [1] or Eades and McKay [4]), compositions (e.g., as attributed to Knuth in Wilf [14]), and to integer partitions (e.g., Savage <ref> [13] </ref>, Rasmussen, Savage and West [11]).
Reference: [14] <author> H.S. Wilf, </author> <title> Combinatorial Algorithms: An Update, </title> <journal> SIAM, </journal> <volume> CBMS 55, </volume> <year> 1989. </year> <month> 13 </month>
Reference-contexts: It has been applied to combinations (e.g., Bitner, Ehrlich and Reingold [1] or Eades and McKay [4]), compositions (e.g., as attributed to Knuth in Wilf <ref> [14] </ref>), and to integer partitions (e.g., Savage [13], Rasmussen, Savage and West [11]).
References-found: 14

