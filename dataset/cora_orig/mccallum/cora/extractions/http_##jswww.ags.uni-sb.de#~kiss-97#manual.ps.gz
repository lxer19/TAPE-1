URL: http://jswww.ags.uni-sb.de/~kiss-97/manual.ps.gz
Refering-URL: http://jswww.ags.uni-sb.de/~kiss-97/uebungen.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: bug-ucpop@cs.washington.edu  
Title: ucpop User's Manual (Version 2.0)  
Author: Anthony Barrett, Keith Golden, Scott Penberthy Daniel Weld 
Address: Seattle, WA 98105  
Affiliation: Department of Computer Science and Engineering 1 University of Washington  
Abstract: Technical Report 93-09-06 February 1, 1994 1 We thank Marc Young for contributions to the documentation, Claudia Chiang and Alan Lundy for comments and proofreading, and other members of the AI group for discussions and suggestions regarding UW planning research. This work was funded in part by National Science Foundation Grant IRI-8957302, Office of Naval Research Grant 90-J-1904, and a grant from the Xerox corporation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Allen, N. Lehrer, M. Boddy, J. Breese, M. Burstein, J. Carciofini, R. Desimone, C. Hammond, J. Lowrance, R. MacGregor, T. Russ, B. Schrag, S. Smith, A. Tate, M. Wellman, and D. Wilkins. </author> <title> Knowledge representation specification language. </title> <type> Technical Report Version 2.0, </type> <institution> DARPA / Rome Laboratory Planning and Scheduling Initiative, </institution> <year> 1992. </year>
Reference-contexts: This happens when using the progress or backup buttons after clicking on a plan in the middle of the search path. 4 Creating New Domains Planning domains are defined using an action description language that is inspired by KRSL <ref> [1] </ref> but corresponds more closely to ADL [5] in expressive content.
Reference: [2] <author> R. Korf. </author> <title> Linear-space best-first search: Summary of results. </title> <booktitle> In Proc. 10th Nat. Conf. on Artificial Intelligence, </booktitle> <pages> pages 533-538, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Since the function bf-control performs a best first search, it uses exponential space. Another way to make ucpop avoid swamping a machine is to use the function ibf-control instead. This function performs an iterative deepening best first search as defined in <ref> [2] </ref>. 3.4 Graphic Search-Space Browser The file vcr.lisp contains an X-Window interface for analyzing a search tree created by ucpop. It is invoked using the routine bf-show which takes a problem as first argument (as does bf-control).
Reference: [3] <author> S. Minton, C. Knoblock, D. Koukka, Y. Gil, R. Joseph, and J. Carbonell. </author> <title> PRODIGY 2.0: The Manual and Tutorial. </title> <institution> CMU-CS-89-146, Carnegie-Mellon University, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: The search controller uses a production system to guide this process. Such an approach to search control is by no means new. Our control language was influenced by search control in <ref> [3] </ref>. To run a simple example that uses a controller defined in controllers.lisp and a problem from domains.lisp you can type: (sc-control 'uget-paid #'bf-mimic) This defines and runs the example problem mentioned earlier.
Reference: [4] <author> E. Pednault. </author> <title> Synthesizing plans that contain actions with context-dependent effects. </title> <journal> Computational Intelligence, </journal> <volume> 4(4) </volume> <pages> 356-372, </pages> <year> 1988. </year>
Reference-contexts: The rest of this manual assumes that you are in this package and refers to symbols locally. 3.1 A Simple Example To run a small example from domains.lisp you can type (bf-control 'uget-paid) This defines and runs Pednault's famous example <ref> [4] </ref> involving transportation of objects between home and work using a briefcase whose effects involve both universal quantification (all objects are moved) and conditional effects (if they are inside the briefcase when it is moved). Section 1.1 of [6] describes how ucpop solves a problem in this domain.
Reference: [5] <author> E. Pednault. </author> <title> ADL: Exploring the middle ground between STRIPS and the situation calculus. </title> <booktitle> In Proceedings Knowledge Representation Conf.,, </booktitle> <year> 1989. </year>
Reference-contexts: 1 Introduction This handout details the ucpop planning system | a clean Common Lisp implementation of an elegant algorithm for partial order planning with an expressive action representation. ucpop handles a large subset of ADL <ref> [5] </ref>, including actions with conditional effects, universally quantified preconditions and effects, and universally quantified goals. ucpop has desirable formal properties: e.g., [6] proves soundness and completeness. <p> This happens when using the progress or backup buttons after clicking on a plan in the middle of the search path. 4 Creating New Domains Planning domains are defined using an action description language that is inspired by KRSL [1] but corresponds more closely to ADL <ref> [5] </ref> in expressive content.
Reference: [6] <author> J.S. Penberthy and D. Weld. UCPOP: </author> <title> A sound, complete, partial order planner for ADL. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 103-114, </pages> <month> October </month> <year> 1992. </year> <note> Available via anonymous FTP from ~ftp/pub/ai/ at cs.washington.edu. </note>
Reference-contexts: ucpop planning system | a clean Common Lisp implementation of an elegant algorithm for partial order planning with an expressive action representation. ucpop handles a large subset of ADL [5], including actions with conditional effects, universally quantified preconditions and effects, and universally quantified goals. ucpop has desirable formal properties: e.g., <ref> [6] </ref> proves soundness and completeness. <p> Any totally ordered completion of this partially ordered plan will achieve the problem's goals. Of necessity, this overview has been brief and conceptual. For a complete description of the ucpop algorithm see the file kr92-ucpop.ps which contains a postscript version of the definitive paper: <ref> [6] </ref>. 2 In fact, domain dependent information can be used to guide the choice. Backtracking ensures that all choices will be eventually considered. 1 1.2 New Features Since version 1.00a many features have been added to ucpop. <p> Section 1.1 of <ref> [6] </ref> describes how ucpop solves a problem in this domain. You may find it helpful to refer to that paper as you read the actual Common Lisp encoding below.
Reference: [7] <author> M. Peot and D. Smith. </author> <title> Threat-removal strategies for partial-order planning. </title> <booktitle> In Proc. 11th Nat. Conf. on Artificial Intelligence, </booktitle> <pages> pages 492-499, </pages> <month> June </month> <year> 1993. </year> <month> 22 </month>
Reference-contexts: The variable *d-sep* is used to control the definition of an unsafety condition. When it is set to nil, all steps that can affect a link are reported as unsafety conditions. Otherwise, unsafety conditions only occur when a step affects a link without the addition of binding constraints. See <ref> [7] </ref> for a more detailed explanation of this strategy. 18 6.2 Calling the Planner The basic call to ucpop is through the function plan which takes two required and two optional keyword arguments: * initial This is a list of terms describing the initial conditions of the planning problem.
References-found: 7

