URL: http://www.cs.berkeley.edu/~troys/TAS-dissertation.ps
Refering-URL: http://www.cs.berkeley.edu/~troys/
Root-URL: 
Title: Some Programs Need Only Be Checked For Correctness on Random Inputs  
Author: by Troy Alexander Shahoumian 
Degree: 1991 A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Science in the GRADUATE DIVISION of the UNIVERSITY of CALIFORNIA at BERKELEY Committee in charge: Professor Manuel Blum, chair Professor Christos Papadimitriou Professor Steven Evans  
Date: Spring 1998  
Affiliation: B.S. University of Southern California  
Abstract-found: 0
Intro-found: 1
Reference: [Bar89] <author> Barbeau, E.J. </author> <title> Polynomials. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference: [Ber70] <author> Berlekamp, </author> <title> E.R., Factoring Polynomials Over Large Finite Fields. </title> <journal> Mathematics of Computation, </journal> <volume> 24 </volume> <pages> 713-735, </pages> <year> 1970. </year>
Reference: [Bin94] <author> Bini, D., V.Y. Pan, </author> <title> Polynomials and Matrix Computations. </title> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1994. </year>
Reference: [BBS86] <author> Blum, L, M. Blum and M. Shub, </author> <title> A simple Secure Unpredictable Pseudo-Random Number Generator. </title> <journal> SIAM Journal of Computing, </journal> <volume> v.15: </volume> <pages> 364-383, </pages> <year> 1986. </year>
Reference: [BCGS95] <author> Blum, M., B. Codenotti, P. Gemmell and T. Shahoumian, </author> <title> Self-Correcting for Function Fields of Finite Trancendental Degree, </title> <booktitle> in Int'l Coll. on Automata, Languages and Programming. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference: [BCSS98] <author> Blum, L., F. Cucker, M. Shub and S. Smale. </author> <title> Complexity and Real Computation. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: This was shown by Heindel [Hei71]. In the Blum, Cucker, Shub and Smale model of computation <ref> [BCSS98] </ref>, the multivariate version of this question is NP-complete. In their model, the elementary data unit is an infinite precision real and the machines in their model can add, subtract, multiply and divide two infinite precision reals in unit time.
Reference: [BE95] <author> Borwein, P. and E. Erdelyi, </author> <title> Polynomials and Polynomial Inequalities. </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1995. </year> <pages> 96 97 </pages>
Reference: [Coo71] <author> Cook, S.A., </author> <title> The Complexity of Theorem-Proving Procedures, </title> <booktitle> Proc. 3rd Ann. ACM Symp. on Theory of Computing. Association for Computing Machinery, </booktitle> <address> New York, </address> <pages> pp. 151-158, </pages> <year> 1971. </year>
Reference-contexts: Also, it is open whether there are sparse polynomials with polynomially many terms which achieve all sign combinations [Kho91]. 62 63 7.1 Program Equivalence is NP-Hard With Absolute-Value The decision problem SAT is one of the first NP-Complete problems considered by Cook <ref> [Coo71] </ref>. Instance: A CNF (conjunctive normal form) formula , which is a conjunction of clauses. Each clause is the disjunction of variables chosen from fx 1 ; x 1 ; : : : ; x n ; x n g.
Reference: [CLR90] <author> Cormen, T.H., Leiserson, C.E., Rivest, </author> <title> R.L., Introduction to Algorithms MIT Press, </title> <address> Cambridge, Massachusetts, </address> <year> 1990. </year>
Reference: [CKS97] <author> Cucker, F., P. Koiran and S. Smale, </author> <title> A Polynomial Time Algorithm for Diophantine Equations in One Variable. </title> <type> Manuscript. </type> <year> 1997. </year>
Reference-contexts: This should be contrasted with Schwartz' theorem which gives an efficient way of deciding whether a program has a non-zero output for any input. The main open problem from Chapter 9 is whether one can determine in polynomial-time the sign of an inputless program. Cucker, Koiran and Smale <ref> [CKS97] </ref> have recently shown that when given a polynomial as a list of coefficients and exponents, one can in polynomial time decide the polynomial's sign for a given integral input.
Reference: [GJ79] <author> Garey, </author> <title> M.R., and D.S. Johnson, Computers and Intractability: </title>
References-found: 11

