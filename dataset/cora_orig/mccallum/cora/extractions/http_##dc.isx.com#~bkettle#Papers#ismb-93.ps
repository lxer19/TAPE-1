URL: http://dc.isx.com/~bkettle/Papers/ismb-93.ps
Refering-URL: 
Root-URL: 
Email: Email: kettler@cs.umd.edu and darden@umiacs.umd.edu  
Title: Protein Sequencing Experiment Planning Using Analogy protein sequencing experiments. Planning is interleaved with experiment execution,
Author: Brian Kettler and Lindley Darden 
Address: College Park, Maryland 20742  
Affiliation: Dept. of Computer Science and Dept. of Philosophy University of Maryland  
Note: (To appear in Proceedings of the First International Conference on Intelligent Systems for Molecular Biology. July 1993, Bethesda, Maryland. AAAI Press, forthcoming.)  The SeqER system is initially configured to plan  
Abstract: Experiment design and execution is a central activity in the natural sciences. The SeqER system provides a general architecture for the integration of automated planning techniques with a variety of domain knowledge in order to plan scientific experiments. These planning techniques include rule-based methods and, especially, the use of derivational analogy. Derivational analogy allows planning experience, captured as cases, to be reused. Analogy also allows the system to function in the absence of strong domain knowledge. Cases are efficiently and flexibly retrieved from a large casebase using massively parallel methods. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bhansali, S., and Harandi, </author> <title> M.T. 1993. Synthesis of UNIX Programs Using Derivational Analogy. </title> <journal> Machine Learning, </journal> <volume> Vol. 10, </volume> <pages> pp. 7-55. </pages>
Reference-contexts: SeqER also uses analogy for control of a (simpler) planner but employs different case representations and retrieval techniques and interleaves planning with execution. Other systems have used derivational analogy for planning in domains other than experiment planning including the APU system <ref> (Bhansali and Harandi 93) </ref> for the synthesis of UNIX programs and various systems that use derivational analogy to design objects (see (Mostow 90) for an overview of these).
Reference: <author> Boshuizen, H.P.A., and Schmidt, H.G. </author> <year> 1992. </year> <title> On the Role of Biomedical Knowledge in Clinical Reasoning by Experts, Intermediates, </title> <journal> and Novices. Cognitive Science, </journal> <volume> 16, </volume> <pages> pp. 153-184. </pages>
Reference-contexts: With SeqER's approach, a task-selection rule is not considered until it is suggested by a case (such as Rule 11 was suggested by DE3). Some recent psychological results have shown how some experts use cases to organize rules <ref> (Boshuizen and Schmidt 92) </ref>. Cases can also provide a context in which a task selection rule applies. This is especially useful for heuristic rules that only work in certain situations.
Reference: <author> Carbonell, J.G. </author> <year> 1986. </year> <title> Derivational Analogy: A Theory of Reconstructive Problem Solving and Expertise Acquisition. </title> <booktitle> In Machine Learning, </booktitle> <volume> Vol. 2, </volume> <editor> Eds. </editor> <publisher> R.S. </publisher>
Reference-contexts: If the user judges the experiment complete, SeqER stores a new experiment episode and exits. 8 Other wise, the process is repeated from Step 1. 3. SeqER's Use of Analogy SeqER uses derivational analogy (e.g., <ref> (Carbonell 86) </ref>) to reuse previous planning experience.
Reference: <editor> Michalski, J.G. Carbonell, T.M. Mitchell. </editor> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference: <author> Darden, L. </author> <year> 1991. </year> <title> Theory Change in Science: Strategies from Mendelian Genetics. </title> <address> New York: </address> <publisher> Oxford University Press. </publisher>
Reference-contexts: In addition to automation, the SeqER architecture provides a computational framework for the empirical testing of different reasoning strategies for experiment design suggested by historical, philosophical, and psychological studies of scientists. This work supplements work on theory formation and revision <ref> (Darden 91) </ref>. Rule-based and case-based reasoning has been observed in think-aloud protocols from a human expert planning protein sequencing experiments. The following section describes the task of experiment planning. Section 2 describes the SeqER architecture and the KB component being used for protein sequencing experiment planning.
Reference: <author> Evett, M.P.; Hendler, J.A.; and Spector, L. </author> <year> 1993. </year> <title> Parallel Knowledge Representation on the Connection Machine. </title> <journal> Journal of Parallel and Distributed Computing, forthcoming. </journal>
Reference: <author> Falkenhainer, B. </author> <year> 1990. </year> <title> A Unified Approach to Explanation and Theory Formation. In Computational Models of Scientific Discovery and Theory Formation. </title>
Reference-contexts: Several systems have used analogy for scientific reasoning including the PHINEAS system <ref> (Falkenhainer 90) </ref>, which explained new scientific phenomena by analogy to previously-explained phenomena, and the PI system (Thagard 88). Also related to the general domain of SeqER is the HYPGENE/GENSIM system (Karp 89), which used iterative design of hypotheses to improve the predictive power of theories.
Reference: <editor> Eds. J. Shrager and P. </editor> <address> Langley. San Mateo, Califor-nia: </address> <publisher> Morgan Kaufmann Publishers, </publisher> <pages> pp. 157-196. </pages>
Reference: <author> Friedland, P., and Kedes, L.H. </author> <year> 1985. </year> <title> Discovering the Secrets of DNA. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 28. No. 11., </volume> <month> November </month> <year> 1985, </year> <pages> pp. 1164-1186. </pages>
Reference-contexts: Unlike MOLGEN, SeqER must interleave plan generation and execution. SeqER also uses different planning techniques, such as case-based planning, than MOL-GEN did. More recent work using MOLGEN for automated discovery is described in <ref> (Friedland and Kedes 85) </ref>. The use of derivational analogy to control a generative planner has been investigated in the PRODIGY/Analogy system (Veloso 92). SeqER also uses analogy for control of a (simpler) planner but employs different case representations and retrieval techniques and interleaves planning with execution.
Reference: <author> Karp, P.D. </author> <year> 1989. </year> <title> Hypothesis Formation and Qualitative Reasoning in Molecular Biology. Doctoral Dissertation Stan-CS-89-1263, </title> <publisher> Stanford University. </publisher>
Reference-contexts: Several systems have used analogy for scientific reasoning including the PHINEAS system (Falkenhainer 90), which explained new scientific phenomena by analogy to previously-explained phenomena, and the PI system (Thagard 88). Also related to the general domain of SeqER is the HYPGENE/GENSIM system <ref> (Karp 89) </ref>, which used iterative design of hypotheses to improve the predictive power of theories. There has also been some research in psychology on the task of experiment design (e.g., (Klahr et al. 90)). 6.
Reference: <editor> Kettler, B.P.; Hendler, J.A.; Andersen, </editor> <address> W.A.; </address> <publisher> and Evett, M.P. </publisher> <year> 1993. </year> <title> Massively Parallel Support for Case-Based Planning. </title> <booktitle> In Proceedings of the Ninth Conference on Artificial Intelligence Applications (IEEE). Held in Orlando, </booktitle> <address> Florida, March 1-5, </address> <year> 1993. </year>
Reference-contexts: As it solves new problems, SeqER accumulates additional planning experience which it encodes as new cases. These cases can be efficiently retrieved from the casebase using the massively parallel mechanisms of the CaPER case-based planning system <ref> (Kettler et al. 93) </ref>. The SeqER system is composed of a planner component and a knowledge base (KB) component. The Planner component consists of general-purpose mechanisms for creating experiment plans, which are sequences of laboratory and data manipulation/analysis procedures.
Reference: <institution> Washington, </institution> <address> D.C.: </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 3-9. </pages>
Reference: <author> Klahr, D.; Dunbar, K.; and Fay, A.L. </author> <year> 1990. </year> <title> Designing Good Experiments to Test Bad Hypotheses. In Computational Models of Scientific Discovery and Theory Formation. </title> <editor> Eds. J. Shrager and P. </editor> <address> Langley. San Ma-teo, California: </address> <publisher> Morgan Kaufmann Publishers, </publisher> <pages> pp. 355-402. </pages>
Reference-contexts: Also related to the general domain of SeqER is the HYPGENE/GENSIM system (Karp 89), which used iterative design of hypotheses to improve the predictive power of theories. There has also been some research in psychology on the task of experiment design (e.g., <ref> (Klahr et al. 90) </ref>). 6. Directions for Future Research and Conclusions There are many possible interesting extensions to the protein sequencing configuration of SeqER and the architecture in general to be investigated after further empirical study of the prototype.
Reference: <author> Mostow, J. </author> <year> 1990. </year> <title> Design by Derivational Analogy: Issues in the Automated Replay of Design Plans. In Carbonell, J.G., Machine Learning: Paradigms and Methods. </title> <address> Cambridge, Massachusetts: </address> <publisher> The MIT Press, </publisher> <pages> pp. 119-184. </pages>
Reference-contexts: Other systems have used derivational analogy for planning in domains other than experiment planning including the APU system (Bhansali and Harandi 93) for the synthesis of UNIX programs and various systems that use derivational analogy to design objects (see <ref> (Mostow 90) </ref> for an overview of these). Several systems have used analogy for scientific reasoning including the PHINEAS system (Falkenhainer 90), which explained new scientific phenomena by analogy to previously-explained phenomena, and the PI system (Thagard 88).
Reference: <author> Place, A.R., and Schmidt, T.G. </author> <year> 1992. </year> <title> User's Guide for SequenceIt!: An Apprenticeship in the Art and Logic of Protein Sequencing. </title> <institution> Center of Marine Biotechnology, Maryland Biotechnology Institute and Project BioQUEST. </institution>
Reference-contexts: Various laboratory procedures can be performed to achieve these goals including acid and base hydrolysis, chemical and enzymatic cleavage, oxidation, Edman degradation, end group analysis, exopeptidase degradation, etc. The execution of many of these procedures is realistically simulated by the SequenceIt program <ref> (Place and Schmidt 92) </ref> 3 , a tutorial program for 3 This program was developed as part of the BioQUEST Process Flow protein sequencing techniques which we are using to test SeqER's plans in lieu of an actual laboratory.
Reference: <author> Rissland, E.L., and Skalak, D.B. </author> <year> 1991. </year> <title> CABARET: Rule Interpretation in a Hybrid Architecture. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> Vol. 34, </volume> <pages> pp. 839-887. </pages>
Reference-contexts: Analysis of human expert protocols in this domain indicates that both are used to determine goals/tasks and for task selection. These types of rules are thus used by SeqER. The integration of rule-based reasoning and case-based reasoning has proven useful for systems in other domains (e.g., <ref> (Rissland and Skalak 91) </ref>). Our initial approach in SeqER is to minimize the use of task selection rules. Often such rules are not available, particularly in less understood domains, or are highly specific as to their applicability.
Reference: <author> Spector, L.; Hendler, J.A.; and Evett, </author> <title> M.P. 1990. Knowledge Representation in PARKA. </title> <type> Technical Report 2410, </type> <institution> Department of Computer Science, University of Maryland at College Park. </institution>
Reference: <author> Stefik, M. </author> <year> 1981. </year> <title> Planning with Constraints (MOL-GEN: Part 1). </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 16, </volume> <pages> pp. 111-140. </pages>
Reference-contexts: The parallel case retrieval mechanisms of CaPER/Parka that are used have been proven effi cient on large casebases (tens of thousands of frames) in other domains and should scale well for SeqER case-bases too. 5. Related Work The MOLGEN <ref> (Stefik 81) </ref> system used generative planning techniques along with constraint posting and meta-planning to design experiments for gene cloning. Unlike MOLGEN, SeqER must interleave plan generation and execution. SeqER also uses different planning techniques, such as case-based planning, than MOL-GEN did.
Reference: <author> Thagard, P.R. </author> <year> 1988. </year> <institution> Computational Philosophy of Science. </institution> <address> Cambridge, Massachusetts: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: Several systems have used analogy for scientific reasoning including the PHINEAS system (Falkenhainer 90), which explained new scientific phenomena by analogy to previously-explained phenomena, and the PI system <ref> (Thagard 88) </ref>. Also related to the general domain of SeqER is the HYPGENE/GENSIM system (Karp 89), which used iterative design of hypotheses to improve the predictive power of theories. There has also been some research in psychology on the task of experiment design (e.g., (Klahr et al. 90)). 6.
Reference: <author> Veloso, M.M. </author> <year> 1992. </year> <title> Learning By Analogical Reasoning in General Problem Solving. </title> <type> Doctoral Dissertation CMU-CS-92-174, </type> <institution> School of Computer Science, Carnegie Mellon University. </institution>
Reference-contexts: Both kinds of analogy have been used by A.I. planning systems. Case-based planners such as CaPER typically use transformational analogy. Derivational analogy is used for planning by the PRODIGY/Analogy system where it provides a considerable reduction in search effort <ref> (Veloso 92) </ref>. SeqER captures planning experience in the form of decision episodes and experiment episodes. Both of these kinds of episodes are stored as cases in the case-base. An experiment episode describes an experiment that was performed and consists of a sequence of decision episodes. <p> SeqER also uses different planning techniques, such as case-based planning, than MOL-GEN did. More recent work using MOLGEN for automated discovery is described in (Friedland and Kedes 85). The use of derivational analogy to control a generative planner has been investigated in the PRODIGY/Analogy system <ref> (Veloso 92) </ref>. SeqER also uses analogy for control of a (simpler) planner but employs different case representations and retrieval techniques and interleaves planning with execution.
References-found: 20

