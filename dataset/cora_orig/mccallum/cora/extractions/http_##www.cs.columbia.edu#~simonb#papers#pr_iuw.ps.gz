URL: http://www.cs.columbia.edu/~simonb/papers/pr_iuw.ps.gz
Refering-URL: http://www.cs.columbia.edu/~simonb/pub.html
Root-URL: http://www.cs.columbia.edu
Title: A Theory of Pattern Rejection  
Author: Simon Baker and Shree K. Nayar 
Address: New York, N.Y. 10027  
Affiliation: Department of Computer Science, Columbia University  
Note: Appeared in Proceedings of the ARPA Image Understanging Workshop, Palm Springs, 1996.  
Abstract: The efficiency of pattern recognition is critical when a large number of classes are to be discriminated, or when the recognition algorithm needs to be applied a large number of times. We propose and analyze a general technique, namely pattern rejection, that results in efficient pattern recognition. Rejectors are introduced as algorithms that can very quickly eliminate from further consideration most classes or inputs (depending on the setting). Rejectors may be combined to form composite rejectors, which are more effective than any single rejector. Composite rejectors are analyzed and conditions derived which guarantee both efficiency and practicality. A general technique is proposed for the construction of composite rejectors, based on a single assumption about the classes. The generality of this assumption is shown through its connection with the Karhunen-Loeve expansion. A relation of pattern rejection with Fisher's discriminant analysis is also shown. Composite rejectors were constructed for two applications, namely, object recognition and local feature detection. In both cases, a substantial improvement in efficiency over existing techniques was found. 
Abstract-found: 1
Intro-found: 1
Reference: [Baker and Nayar 95] <author> S. Baker and S.K. Nayar, </author> <title> "A Theory of Pattern Rejection," </title> <institution> Columbia University Technical Report, CUCS-013-95, </institution> <year> 1995. </year>
Reference-contexts: We form a rejection-based classifier by first applying a rejector, , and then applying a verifier for each class, i 2 (x). Combining the results, we can classify the input, x 2 S. The efficiency of our rejection-based classifier, rb ; can be shown <ref> [Baker and Nayar 95] </ref> to be: where, T av ( rb ) is the average run time of the rejection-based classifier, T av ( ); is the average run time of the rejector, E x2S (j (x)j) is the expected car-dinality of the rejector output, and T ver is the run <p> The effectiveness of all of the rejectors is the same: 8- 2 =; Eff ( -) = E; say. Then, we can show (see <ref> [Baker and Nayar 95] </ref>) that a rejection-based classifier using a composite rejector runs in time: T av ( rb ) dlog E 1 ne T rej + 2 T ver (2) where, T rej is the run time of each of the rejectors (assumed constant), and n is the number of <p> We should choose r to optimize the effectiveness of the derived rejector: Definition 9 An optimal rejection vector, 3 r opt ; is a rejection vector which minimizes Eff ( r ) We are unable to exactly calculate the optimal rejection vector, however <ref> [Baker and Nayar 95] </ref> contains the details of an algorithm to approximate one. 4 Practical Issues and Implementation While implementing the proposed ideas, several practical issues must be addressed, including verifying the class assumption, approximating the optimal rejection vector, estimating the ffi i , and avoiding the exponential explosion in the <p> For lack of space, we refer the interested reader to <ref> [Baker and Nayar 95] </ref> for the details. 5 Example Applications 5.1 3D Object Recognition We follow the appearance matching approach, first described in [Murase and Nayar 95]. <p> The results, in Figure 4, validate the hypothesized logarithmic growth in time complexity. 5.2 Local Feature Detection We constructed a composite rejector for implementing a feature detectors of the type proposed in [Nayar et al. 95]. (The details of the implementation may be found in <ref> [Baker and Nayar 95] </ref>.) The out 1164 average number of simple rejectors required to completely discriminate between those objects.
Reference: [Bentley 80] <author> J.L. Bentley, </author> <title> "Multidimensional divide-and-conquer," </title> <journal> Communications of the ACM, </journal> <volume> 23 </volume> <pages> 214-229, </pages> <year> 1980. </year>
Reference-contexts: Further, there is little work that investigates when discriminant analysis will work, and if so, how much computation will be required. Our results provide insights into these issues. Connections can also be made between the present work and the large body of work on com-putationally motivated nearest neighbor classifiers <ref> [Friedman et al. 77, Bentley 80, Yianilos 93] </ref>. Though the problem we address is somewhat similar, namely, efficient classification, our setting is shown to be more general.
Reference: [Fisher 36] <author> R.A. Fisher, </author> <title> "The use of multiple measurements in taxonomic problems," </title> <journal> Annals of Eugenics, </journal> <volume> 7 </volume> <pages> 179-188, </pages> <year> 1939. </year>
Reference-contexts: Also, a relationship can be established between our technique for rejector construction and Fisher's discriminant analysis <ref> [Fisher 36, Fukunaga 90] </ref>. Whereas our ideas are geared towards the computational efficiency of recognition, discriminant analysis is concerned with representational compactness. Further, there is little work that investigates when discriminant analysis will work, and if so, how much computation will be required. Our results provide insights into these issues. <p> The image is then treated directly as a 16,384 dimensional measurement vector in the classification space, S, reading the pixels 3 The optimal rejection vector may be related to Fisher's discriminant analysis <ref> [Fisher 36] </ref>. By working in a space orthogonal to each L i , we are limiting the within-class scatter. Further, an optimal rejection vector will tend to spread out the points hr; c i i, and so will be the one that tends to maximize the between-class scatter.
Reference: [Friedman et al. 77] <author> J.H. Friedman, J.L. Bentley, and R.A. Finkel, </author> <title> "An algorithm for finding best matches in logarithmic expected time," </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 3 </volume> <pages> 209-226, </pages> <year> 1977. </year>
Reference-contexts: Further, there is little work that investigates when discriminant analysis will work, and if so, how much computation will be required. Our results provide insights into these issues. Connections can also be made between the present work and the large body of work on com-putationally motivated nearest neighbor classifiers <ref> [Friedman et al. 77, Bentley 80, Yianilos 93] </ref>. Though the problem we address is somewhat similar, namely, efficient classification, our setting is shown to be more general. <p> The key is the number of possible outputs of the rejectors, and the amount of intersection between them. This growth, rather than the time complexity, may well turn out to the limiting factor in the scalability of our approach. A comparison with the much less conservative k-d trees <ref> [Friedman et al. 77] </ref> would probably en lighten what is essentially a time-space tradeoff. 3. The class assumption is the heart of our technique for constructing rejectors. As expected, it holds for some objects far more than for others, however further study of when and why it holds is required.
Reference: [Fukunaga 90] <author> K. Fukunaga, </author> <title> Statistical Pattern Recognition, </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: The generality of the class assumption is argued by establishing a connection with the Karhunen-Loeve (K-L) expansion <ref> [Fukunaga 90] </ref>. We demonstrate the utility of rejection via experiments on appearance matching based object recognition [Murase and Nayar 95] and feature detection [Nayar et al. 95]. First, we constructed a composite rejector for a widely used image database of 20 objects (each in a large number of poses). <p> Also, a relationship can be established between our technique for rejector construction and Fisher's discriminant analysis <ref> [Fisher 36, Fukunaga 90] </ref>. Whereas our ideas are geared towards the computational efficiency of recognition, discriminant analysis is concerned with representational compactness. Further, there is little work that investigates when discriminant analysis will work, and if so, how much computation will be required. Our results provide insights into these issues.
Reference: [Henrichon and Fu 69] <author> E.G. Henrichon and K-S. Fu, </author> <title> "A Nonparametric Partitioning Procedure for Pattern Classification," </title> <journal> IEEE Transactions on Computers, </journal> <volume> 18 </volume> <pages> 614-624, </pages> <year> 1969. </year>
Reference-contexts: proposed in [Nayar et al. 95]. 1161 2 Related Work The recursive structure of the composite rejector constitutes a decision tree (or more generally a directed acyclic graph.) A complete list of references that use such a structure is beyond the scope of this paper, but a small selection is <ref> [Henrichon and Fu 69, Payne and Meisel 77, Weng 94] </ref>. Also, a relationship can be established between our technique for rejector construction and Fisher's discriminant analysis [Fisher 36, Fukunaga 90]. Whereas our ideas are geared towards the computational efficiency of recognition, discriminant analysis is concerned with representational compactness.
Reference: [Murase and Nayar 95] <author> H. Murase and S.K. Nayar, </author> <title> "Visual Learning and Recognition of 3D Objects from Appearance," </title> <journal> International Journal of Computer Vision, </journal> <volume> 14 </volume> <pages> 5-24, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction We address the efficiency of pattern recognition, which is known to be vital when the number of classes involved is large. An example application in computational vision is object recognition, which in many cases can be reduced to a classical pattern recognition problem <ref> [Murase and Nayar 95] </ref>. Of particular importance in this context, is the growth rate of recognition time as a function of the number of classes (objects). High efficiency also proves critical when the recognition algorithm must be applied a large number of times. <p> The generality of the class assumption is argued by establishing a connection with the Karhunen-Loeve (K-L) expansion [Fukunaga 90]. We demonstrate the utility of rejection via experiments on appearance matching based object recognition <ref> [Murase and Nayar 95] </ref> and feature detection [Nayar et al. 95]. First, we constructed a composite rejector for a widely used image database of 20 objects (each in a large number of poses). <p> The data set was provided by H. Murase and S.K. Nayar and is that used in <ref> [Murase and Nayar 95] </ref>. We have some freedom in choosing the direction of the rejection vector, since it is simply constrained to lie orthogonally to L n i=1 L i . <p> For lack of space, we refer the interested reader to [Baker and Nayar 95] for the details. 5 Example Applications 5.1 3D Object Recognition We follow the appearance matching approach, first described in <ref> [Murase and Nayar 95] </ref>. Object recognition is reduced to pattern recognition by first segmenting the object and then scale normalizing it to an image of size 128 fi 128 pixels. <p> Since the cost of making the decision at each node is essentially the cost of one inner product (convolution), the efficiency compares very favorably with the results obtained by Murase and Na-yar <ref> [Murase and Nayar 95] </ref>. Their implementation required 20 inner products, followed by a sophisticated search procedure. We investigated the growth rate of the number of rejectors required as a function of the number of classes.
Reference: [Nayar et al. 95] <author> S.K. Nayar, S. Baker, and H. Murase, </author> <title> "Parametric Feature Detection," </title> <institution> Columbia University Technical Report, CUCS-028-95, </institution> <year> 1995. </year>
Reference-contexts: Of particular importance in this context, is the growth rate of recognition time as a function of the number of classes (objects). High efficiency also proves critical when the recognition algorithm must be applied a large number of times. This is the case in local feature detection <ref> [Nayar et al. 95] </ref>, where the detector needs to be applied at every pixel in the image. We propose a general theory that results in substantial efficiency improvements in both of the above scenarios. <p> The generality of the class assumption is argued by establishing a connection with the Karhunen-Loeve (K-L) expansion [Fukunaga 90]. We demonstrate the utility of rejection via experiments on appearance matching based object recognition [Murase and Nayar 95] and feature detection <ref> [Nayar et al. 95] </ref>. First, we constructed a composite rejector for a widely used image database of 20 objects (each in a large number of poses). <p> Next, we constructed a composite rejector for the task of feature detection. This results in a very efficient method of preprocessing an image to identify pixels that truly deserve the application of a full-fledged feature detector, such as the one proposed in <ref> [Nayar et al. 95] </ref>. 1161 2 Related Work The recursive structure of the composite rejector constitutes a decision tree (or more generally a directed acyclic graph.) A complete list of references that use such a structure is beyond the scope of this paper, but a small selection is [Henrichon and Fu <p> The results, in Figure 4, validate the hypothesized logarithmic growth in time complexity. 5.2 Local Feature Detection We constructed a composite rejector for implementing a feature detectors of the type proposed in <ref> [Nayar et al. 95] </ref>. (The details of the implementation may be found in [Baker and Nayar 95].) The out 1164 average number of simple rejectors required to completely discriminate between those objects.
Reference: [Payne and Meisel 77] <author> H.J. Payne and W.S. Meisel, </author> <title> "An Algorithm for Constructing Optimal Binary Decision Trees," </title> <journal> IEEE Transactions on Computers, </journal> <volume> 26 </volume> <pages> 905-916, </pages> <year> 1977. </year>
Reference-contexts: proposed in [Nayar et al. 95]. 1161 2 Related Work The recursive structure of the composite rejector constitutes a decision tree (or more generally a directed acyclic graph.) A complete list of references that use such a structure is beyond the scope of this paper, but a small selection is <ref> [Henrichon and Fu 69, Payne and Meisel 77, Weng 94] </ref>. Also, a relationship can be established between our technique for rejector construction and Fisher's discriminant analysis [Fisher 36, Fukunaga 90]. Whereas our ideas are geared towards the computational efficiency of recognition, discriminant analysis is concerned with representational compactness.
Reference: [Weng 94] <author> J. Weng, "SHOSLIF: </author> <title> The Hierarchical Optimal Subspace Learning and Inference Framework," </title> <institution> Michigan State University Technical Report, CPS 94-15, </institution> <year> 1994. </year>
Reference-contexts: proposed in [Nayar et al. 95]. 1161 2 Related Work The recursive structure of the composite rejector constitutes a decision tree (or more generally a directed acyclic graph.) A complete list of references that use such a structure is beyond the scope of this paper, but a small selection is <ref> [Henrichon and Fu 69, Payne and Meisel 77, Weng 94] </ref>. Also, a relationship can be established between our technique for rejector construction and Fisher's discriminant analysis [Fisher 36, Fukunaga 90]. Whereas our ideas are geared towards the computational efficiency of recognition, discriminant analysis is concerned with representational compactness.
Reference: [Yianilos 93] <author> P.N. Yianilos, </author> <title> "Data Structures and Algorithms for Nearest Neighbor Search in General Metric Spaces," </title> <booktitle> Proc. of ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp. 311-321, </pages> <year> 1993. </year> <month> 1165 </month>
Reference-contexts: Further, there is little work that investigates when discriminant analysis will work, and if so, how much computation will be required. Our results provide insights into these issues. Connections can also be made between the present work and the large body of work on com-putationally motivated nearest neighbor classifiers <ref> [Friedman et al. 77, Bentley 80, Yianilos 93] </ref>. Though the problem we address is somewhat similar, namely, efficient classification, our setting is shown to be more general.
References-found: 11

