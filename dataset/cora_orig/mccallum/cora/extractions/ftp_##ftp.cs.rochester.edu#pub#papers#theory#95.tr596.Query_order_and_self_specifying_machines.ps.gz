URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/95.tr596.Query_order_and_self_specifying_machines.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: Query Order and Self-Specifying Machines  odd, and equals R p j+2k-tt (NP)  
Author: Lane A. Hemaspaandra Harald Hempel Gerd Wechsung j k: P BH j []:BH k [] P BH k []:BH j [] 
Note: j+2k1-tt (NP) if j is even and k is  otherwise. Thus, unless the polynomial hierarchy collapses, it holds that for each 1  
Date: October 27, 1995  
Address: Rochester, NY 14627, USA  07743 Jena, Germany  07743 Jena, Germany  
Affiliation: Department of Computer Science University of Rochester  Fak. fur Math. und Informatik Friedrich-Schiller-Universitat Jena  Fak. fur Math. und Informatik Friedrich-Schiller-Universitat Jena  
Abstract: We study the computational power of machines that specify their own acceptance types, and we show that they accept exactly the languages in R #P m (NP). We study the effect of query order on computational power, and show that P BH j [1]:BH k [1] |the languages computable via a polynomial-time machine given one query to the jth level of the boolean hierarchy followed by one query to the kth level of the boolean hierarchy|equals R p (j = k) _ (j is even ^ k = j + 1). We extend our analysis to apply to more general query classes.
Abstract-found: 1
Intro-found: 1
Reference: [BC93] <author> D. Bovet and P. Crescenzi. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference: [BCO93] <author> R. Beigel, R. Chang, and M. Ogiwara. </author> <title> A relationship between difference hierarchies and relativized polynomial hierarchies. </title> <journal> Mathematical Systems Theory, </journal> <volume> 26 </volume> <pages> 293-310, </pages> <year> 1993. </year>
Reference-contexts: BH k = NP-BH k1 ; for k &gt; 1; coBH k = fL fi BH = i1 The boolean hierarchy has been intensely investigated, and quite a bit has been learned about its structure (see, e.g., <ref> [CGH + 88,CGH + 89,Cai87,KSW87,Kad88,Wag90,CK90,Bei91, BCO93] </ref>). Recently, various results have also been developed regarding boolean hierarchies over classes other than NP [BJY90,Cha91,BCO93,HR]. <p> The strongest known connection is: If BH q = coBH q , then PH = (q1)-tt <ref> [BCO93] </ref>, where m-tt denotes the class of languages accepted by P machines given m-truth-table access to an NP NP oracle and also given unlimited access to an NP oracle (note that 1-tt is equal to P NP NP [1]:NP as leading NP queries can be absorbed into the NP NP query). <p> For such a tree T , define f T by f T (v i ) = n i . Henceforward, we will write f for f T in contexts in which T is clear. Let 3 Though one level is gained by the q 1 in the <ref> [BCO93] </ref> connection between the boolean hierarchy and the polynomial hierarchy, one level is lost in the collapse of the boolean hierarchy that follows from a given collapse in the truth-table hierarchy. <p> We speculate that it might be possible for the k + 2j claim to be strengthened by one level by applying the <ref> [BCO93] </ref> technique directly to the truth-table hierarchy. 23 root T be the root of the tree (we will assign to this node the name v 1 ) and let LT T and RT T respectively be the left and right subtrees of the root.
Reference: [BCS92] <author> D. Bovet, P. Crescenzi, and R. Silvestri. </author> <title> A uniform approach to define complexity classes. </title> <journal> Theoretical Computer Science, </journal> <volume> 104, </volume> <year> 1992. </year>
Reference: [Bei91] <author> R. Beigel. </author> <title> Bounded queries to SAT and the boolean hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 84(2) </volume> <pages> 199-223, </pages> <year> 1991. </year>
Reference-contexts: The mind change technique or equivalent manipulation was applied to complexity theory in each of the early papers on the boolean hierarchy, including the work of Cai et al. ([CGH + 88], see also [Wec85,CH86]), Kobler et al. [KSW87], and Beigel <ref> [Bei91] </ref>. These papers use mind changes for a number of purposes. <p> We informally argue that each set that is k-truth-table reducible to NP is in fact in R 1-tt (BH k ). This fact (stated slightly differently) is due to Kobler et al. [KSW87], and the proof flavor presented here is most akin to the approach of Beigel <ref> [Bei91] </ref>. Consider a k-truth-table reduction to an NP set, F . Let L be the language accepted by the k-truth-table reduction to F . Consider some input x and without loss of generality assume k queries are generated. <p> Let M be a deterministic oracle machine, witnessing A 2 P BH j [1]:BH k [1] , via the sets S 1 2 BH j and S 2 2 BH k . As noted by Beigel <ref> [Bei91] </ref>, the set Q = fhx; ki fi M (x) has at least k mind changesg is an NP set.
Reference: [BJY90] <author> D. Bruschi, D. Joseph, and P. Young. </author> <title> Strong separations for the boolean hierarchy over RP. </title> <journal> International Journal of Foundations of Computer Science, </journal> <volume> 1(3) </volume> <pages> 201-218, </pages> <year> 1990. </year>
Reference: [BLS84] <author> R. Book, T. Long, and A. Selman. </author> <title> Quantitative relativizations of complexity classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 13(3) </volume> <pages> 461-487, </pages> <year> 1984. </year>
Reference: [BLS85] <author> R. Book, T. Long, and A. Selman. </author> <title> Qualitative relativizations of complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 30 </volume> <pages> 395-413, </pages> <year> 1985. </year>
Reference: [Cai87] <author> J. Cai. </author> <title> Probability one separation of the boolean hierarchy. </title> <booktitle> In Proceedings of the 4th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 148-158. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #247, </note> <year> 1987. </year>
Reference: [CF91] <author> J. Cai and M. Furst. </author> <title> PSPACE survives constant-width bottlenecks. </title> <journal> International Journal of Foundations of Computer Science, </journal> <volume> 2(1) </volume> <pages> 67-76, </pages> <year> 1991. </year>
Reference-contexts: R OptP m (P) turns out to be exactly the p m -closure of those languages having easy "implicit membership tests" [HH91], and also is exactly the class of languages accepted at the second level of Cai and Furst's <ref> [CF91] </ref> safe storage hierarchy ([Ogi94], see also the discussion in [HO94]). An NPTM is said to be normalized if its computation tree is a complete binary tree of branching depth p (jxj) for some polynomial p.
Reference: [CGH + 88] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wag-ner, and G. Wechsung. </author> <title> The boolean hierarchy I: Structural properties. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1232-1252, </pages> <year> 1988. </year>
Reference-contexts: In the other direction, they also use the number of mind changes that certain classes|especially the classes of the boolean hierarchy due to their normal form as nested subtractions of telescoping sets <ref> [CGH + 88] </ref>|possess to show that they can simulate other classes. <p> Every set C 2 BH l can be written as the nested difference of sets C 1 ; C 2 ; ; C l 2 NP C = C 1 (C 2 ( (C l1 C l ) )) and following Cai et al. <ref> [CGH + 88] </ref> we even can assume that C l C l1 C 2 C 1 : Hence a query "q 2 C?" can certainly be solved via l queries "q 2 C 1 ?," "q 2 C 2 ?," , "q 2 C l ?" In light of this comment, <p> Since the class P BH j [1]:BH k [1] is closed under P 1tt reduction it suffices to prove BH m P BH j [1]:BH k [1] . So let B 2 BH m . Following Cai et al. <ref> [CGH + 88] </ref> we may assume that the set B is of the form B = B 1 (B 2 (B 3 ( (B m1 B m ) ))) with B 1 ; B 2 ; ; B m 2 NP and B m B 2 B 1 . <p> bounded-truth-table hierarchy, and thus if two different levels of the bounded-truth-table hierarchy are the same (say levels r and s, r &lt; s), then some level (in particular, BH r+1 ) of the boolean hierarchy is closed under complementation, and thus, by the downward separation property of the boolean hierarchy <ref> [CGH + 88] </ref>, the boolean hierarchy would collapse. Furthermore, Kadin [Kad88] has shown that if the boolean hierarchy collapses then the polynomial hierarchy collapses, and Wagner, and Chang and Kadin, and Beigel, Chang, and Ogihara have improved the strength of this connection [Wag87,CK90,BCO93].
Reference: [CGH + 89] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wag-ner, and G. Wechsung. </author> <title> The boolean hierarchy II: </title> <journal> Applications. SIAM Journal on Computing, </journal> <volume> 18(1) </volume> <pages> 95-111, </pages> <year> 1989. </year>
Reference: [CH86] <author> J. Cai and L. Hemachandra. </author> <title> The boolean hierarchy: Hardware over NP. </title> <booktitle> In Proceedings of the 1st Structure in Complexity Theory Conference, </booktitle> <pages> pages 105-124. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #223, </note> <month> June </month> <year> 1986. </year>
Reference: [CH90] <author> J. Cai and L. Hemachandra. </author> <title> On the power of parity polynomial time. </title> <journal> Mathematical Systems Theory, </journal> <volume> 23(2) </volume> <pages> 95-106, </pages> <year> 1990. </year>
Reference: [Cha91] <author> R. Chang. </author> <title> On the Structure of NP Computations under Boolean Operators. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <address> Ithaca, NY, </address> <year> 1991. </year> <month> 33 </month>
Reference: [CK90] <author> R. Chang and J. Kadin. </author> <title> The boolean hierarchy and the polynomial hierarchy: A closer connection. </title> <booktitle> In Proceedings of the 5th Structure in Complexity Theory Conference, </booktitle> <pages> pages 169-178. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> July </month> <year> 1990. </year>
Reference: [FFK94] <author> S. Fenner, L. Fortnow, and S. Kurtz. </author> <title> Gap-definable counting classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 48(1) </volume> <pages> 116-148, </pages> <year> 1994. </year>
Reference: [GKR + 95] <author> F. Green, J. Kobler, K. Regan, T. Schwentick, and J. Toran. </author> <title> The power of the middle bit of a #P function. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 50, </volume> <year> 1995. </year>
Reference-contexts: Can one prove P #P [1] = P #P [1]:NP [1] ) P #P [1] = P #P [1]:NP [O (1)] . Acknowledgments We thank Edith Hemaspaandra, Johannes Kobler, and Jorg Vogel for helpful conversations. We thank Johannes Kobler for providing an advance copy of <ref> [GKR + 95] </ref>. We are extremely indebted to Jorg Rothe for his generous help. The extension to more general classes dis cussed in the paragraph after the proof of Theorem 4.2 is due to him, and appears here with his kind permission.
Reference: [GP86] <author> L. Goldschlager and I. Parberry. </author> <title> On the construction of parallel computers from various bases of boolean functions. </title> <journal> Theoretical Computer Science, </journal> <volume> 43 </volume> <pages> 43-58, </pages> <year> 1986. </year>
Reference-contexts: Replacing Z + with the fixed set f1; 3; 5; g yields a perfectly acceptable definition of the complexity class P <ref> [PZ83, GP86] </ref>, and so on for many standard classes, such as coNP, US, etc.
Reference: [Gre95] <author> F. Green. </author> <title> Lower bounds for depth-three circuits with equals and mod-gates. </title> <booktitle> In Proceedings of the 12th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 71-82. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #900, </note> <month> March </month> <year> 1995. </year>
Reference-contexts: Unfortunately, achieving even an oracle separation here exceeds the current power of circuit theory. PP P P #P [1] P #P [1]:NP [1] + P #P [2] PSPACE, the first containment|which is nontrivial|being due to Toda [Tod91], yet no known oracle separates PP P from PSPACE (see Green <ref> [Gre95] </ref> for background and for progress on a related line). It would be nice to achieve some structural collapse from the assumption P #P [1] = P #P [1]:NP [1] + but we know of none.
Reference: [HH91] <author> L. Hemachandra and A. Hoene. </author> <title> On sets with efficient implicit membership tests. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(6) </volume> <pages> 1148-1156, </pages> <year> 1991. </year>
Reference-contexts: However, for flexible language classes such as P, NP, etc., and flexible function classes such as #P, OptP [Kre88], etc., this equality will hold, as has been noted for the particular case of R OptP m (P) by Hemaspaandra and Hoene <ref> [HH91] </ref>. <p> Indeed, R OptP m (P) turns out, as Krentel established [Kre88], to be exactly P NP . R OptP m (P) turns out to be exactly the p m -closure of those languages having easy "implicit membership tests" <ref> [HH91] </ref>, and also is exactly the class of languages accepted at the second level of Cai and Furst's [CF91] safe storage hierarchy ([Ogi94], see also the discussion in [HO94]).
Reference: [HHT] <author> Y. Han, L. Hemachandra, and T. Thierauf. </author> <title> Threshold computation and cryptographic security. </title> <journal> SIAM Journal on Computing. </journal> <note> To appear. </note>
Reference-contexts: An NPTM is said to be normalized if its computation tree is a complete binary tree of branching depth p (jxj) for some polynomial p. Though normalization is known not to be important in defining NP languages or even|as shown by Simon [Sim75]|PP languages, there is evidence <ref> [HHT] </ref> that it is critical in defining BPP languages. Here, it will be important in our definition of SelfPath; however, in our definition of SelfOutput, the same class would be defined even if a normalization requirement were added.
Reference: [HJ91] <author> L. Hemachandra and S. Jain. </author> <title> On the limitations of locally robust positive reductions. </title> <journal> International Journal of Foundations of Computer Science, </journal> <volume> 2(3) </volume> <pages> 237-255, </pages> <year> 1991. </year>
Reference: [HO94] <author> L. Hemaspaandra and M. Ogihara. </author> <title> Universally serializable computation. </title> <type> Technical Report TR-520, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> June </month> <year> 1994. </year> <note> Revised December, </note> <year> 1994. </year>
Reference-contexts: R OptP m (P) turns out to be exactly the p m -closure of those languages having easy "implicit membership tests" [HH91], and also is exactly the class of languages accepted at the second level of Cai and Furst's [CF91] safe storage hierarchy ([Ogi94], see also the discussion in <ref> [HO94] </ref>). An NPTM is said to be normalized if its computation tree is a complete binary tree of branching depth p (jxj) for some polynomial p.
Reference: [HR] <author> L. Hemaspaandra and J. </author> <title> Rothe. Unambiguous computation: Boolean hierarchies and sparse Turing-complete sets. </title> <journal> SIAM Journal on Computing. </journal> <note> To appear. </note>
Reference: [HV95] <author> L. Hemaspaandra and H. Vollmer. </author> <title> The Satanic notations: Counting classes beyond #P and other definitional adventures. </title> <journal> SIGACT News, </journal> <volume> 26(1) </volume> <pages> 2-13, </pages> <year> 1995. </year>
Reference-contexts: Similar claims hold for R #P m (C = P) and (with a bit of care) for R #P m (PP). Vollmer ([Vol94], refining and altering notions due to Valiant [Val79a], see the discussion in <ref> [HV95] </ref>) defined #NP, the class of all functions f such that there is a set A 2 NP and a polynomial p such that for all x 2 fl f (x) = jjfy 2 p (jxj) fi fi hx; yi 2 Agjj.
Reference: [JMT94] <author> B. Jenner, P. McKenzie, and D. Therien. </author> <title> Logspace and logtime leaf languages. </title> <booktitle> In Proceedings of the 9th Structure in Complexity Theory Conference, </booktitle> <pages> pages 242-253. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June/July </month> <year> 1994. </year>
Reference-contexts: In the even more abstract setting of so-called leaf languages ([BCS92] and various subsequent papers, e.g., <ref> [JMT94] </ref>), separate predicates specify which numbers of accepting paths of a machine specify acceptance and which specify rejection. Such notions are sufficiently flexible to describe a broad range of classes, including even "promise" counting classes such as SPP [OH93,FFK94], etc. In this paper, we introduce and study self-specifying acceptance types.
Reference: [Kad88] <author> J. Kadin. </author> <title> The polynomial time hierarchy collapses if the boolean hierarchy collapses. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1263-1282, </pages> <year> 1988. </year> <note> Erratum appears in the same journal, 20(2):404. 34 </note>
Reference-contexts: Furthermore, Kadin <ref> [Kad88] </ref> has shown that if the boolean hierarchy collapses then the polynomial hierarchy collapses, and Wagner, and Chang and Kadin, and Beigel, Chang, and Ogihara have improved the strength of this connection [Wag87,CK90,BCO93].
Reference: [KL80] <author> R. Karp and R. Lipton. </author> <title> Some connections between nonuniform and uniform complexity classes. </title> <booktitle> In Proceedings of the 12th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 302-309, </pages> <month> April </month> <year> 1980. </year> <note> An extended version has also appeared as: Turing machines that take advice, </note> <editor> L'Enseignement Mathematique, </editor> <booktitle> 2nd series 28, </booktitle> <year> 1982, </year> <pages> pages 191-209. </pages>
Reference-contexts: Recall that for any class of functions F and any sets A and B: A F m B () (9f 2 F)(8x)[x 2 A () f (x) 2 B]. Generalizing 4 the seminal "advice classes" notion of Karp and Lipton <ref> [KL80] </ref>, Kobler and Thierauf [KT94] have studied a notion, which appeared previously in work of Krentel and others, that they note is related to many-one reductions via functions.
Reference: [Kre88] <author> M. Krentel. </author> <title> The complexity of optimization problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 36 </volume> <pages> 490-509, </pages> <year> 1988. </year>
Reference-contexts: However, for flexible language classes such as P, NP, etc., and flexible function classes such as #P, OptP <ref> [Kre88] </ref>, etc., this equality will hold, as has been noted for the particular case of R OptP m (P) by Hemaspaandra and Hoene [HH91]. <p> They capture the power of a class whose computation is aided by some advice pro vided by some complexity-bounded function class. Indeed, R OptP m (P) turns out, as Krentel established <ref> [Kre88] </ref>, to be exactly P NP .
Reference: [KSW87] <author> J. Kobler, U. Schoning, and K. Wagner. </author> <title> The difference and truth-table hierarchies for NP. </title> <journal> R.A.I.R.O. Informatique theorique et Applications, </journal> <volume> 21 </volume> <pages> 419-435, </pages> <year> 1987. </year>
Reference-contexts: Our proof employs the mind change technique, which predates complexity theory. The mind change technique or equivalent manipulation was applied to complexity theory in each of the early papers on the boolean hierarchy, including the work of Cai et al. ([CGH + 88], see also [Wec85,CH86]), Kobler et al. <ref> [KSW87] </ref>, and Beigel [Bei91]. These papers use mind changes for a number of purposes. <p> We informally argue that each set that is k-truth-table reducible to NP is in fact in R 1-tt (BH k ). This fact (stated slightly differently) is due to Kobler et al. <ref> [KSW87] </ref>, and the proof flavor presented here is most akin to the approach of Beigel [Bei91]. Consider a k-truth-table reduction to an NP set, F . Let L be the language accepted by the k-truth-table reduction to F . <p> The corollary holds, in light of the theorem, simply because the boolean hierarchy and the truth-table hierarchy are interleaved <ref> [KSW87] </ref> in such a way that the boolean hierarchy levels are sandwiched between levels of the bounded-truth-table hierarchy, and thus if two different levels of the bounded-truth-table hierarchy are the same (say levels r and s, r &lt; s), then some level (in particular, BH r+1 ) of the boolean hierarchy
Reference: [KT94] <author> J. Kobler and T. Thierauf. </author> <title> Complexity-restricted advice functions. </title> <journal> SIAM Journal on Computing, </journal> <volume> 23(2) </volume> <pages> 261-275, </pages> <year> 1994. </year>
Reference-contexts: Recall that for any class of functions F and any sets A and B: A F m B () (9f 2 F)(8x)[x 2 A () f (x) 2 B]. Generalizing 4 the seminal "advice classes" notion of Karp and Lipton [KL80], Kobler and Thierauf <ref> [KT94] </ref> have studied a notion, which appeared previously in work of Krentel and others, that they note is related to many-one reductions via functions. For any function class F and any complexity class C they introduce the notation: C==F = fL fi L () hx; f (x)i 2 C]g.
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time re-ducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 1(2) </volume> <pages> 103-124, </pages> <year> 1975. </year>
Reference: [Ogi94] <author> M. </author> <title> Ogihara. </title> <journal> On serializable languages. International Journal of Foundations of Computer Science, </journal> 5(3&4):303-318, 1994. 
Reference: [OH93] <author> M. Ogiwara and L. Hemachandra. </author> <title> A complexity theory for closure properties. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 46 </volume> <pages> 295-325, </pages> <year> 1993. </year>
Reference: [Pap94] <author> C. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference: [PZ83] <author> C. Papadimitriou and S. Zachos. </author> <title> Two remarks on the power of counting. </title> <booktitle> In Proceedings 6th GI Conference on Theoretical Computer Science, </booktitle> <pages> pages 269-276. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #145, </note> <year> 1983. </year>
Reference-contexts: Replacing Z + with the fixed set f1; 3; 5; g yields a perfectly acceptable definition of the complexity class P <ref> [PZ83, GP86] </ref>, and so on for many standard classes, such as coNP, US, etc.
Reference: [Sel82] <author> A. Selman. </author> <title> Reductions on NP and P-selective sets. </title> <journal> Theoretical Computer Science, </journal> <volume> 19 </volume> <pages> 287-304, </pages> <year> 1982. </year>
Reference-contexts: However that is trivially true, as it is clear that P #P [1]:NP [1] + = P #P [1]:NP [k] + (as P #P [1]:NP [k] + = R k-posT (NP)==#P = NP==#P = P #P [1]:NP [1] + , due to Selman's <ref> [Sel82] </ref> result that NP is closed under positive Turing reductions).
Reference: [Sim75] <author> J. Simon. </author> <title> On Some Central Problems in Computational Complexity. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <address> Ithaca, N.Y., </address> <month> January </month> <year> 1975. </year> <note> Available as Cornell Department of Computer Science Technical Report TR75-224. </note>
Reference: [Tod91] <author> S. </author> <title> Toda. Computational Complexity of Counting Complexity Classes. </title> <type> PhD thesis, </type> <institution> Tokyo Institute of Technology, Department of Computer Science, </institution> <address> Tokyo, Japan, </address> <year> 1991. </year>
Reference-contexts: Unfortunately, achieving even an oracle separation here exceeds the current power of circuit theory. PP P P #P [1] P #P [1]:NP [1] + P #P [2] PSPACE, the first containment|which is nontrivial|being due to Toda <ref> [Tod91] </ref>, yet no known oracle separates PP P from PSPACE (see Green [Gre95] for background and for progress on a related line). It would be nice to achieve some structural collapse from the assumption P #P [1] = P #P [1]:NP [1] + but we know of none.
Reference: [Val79a] <author> L. Valiant. </author> <title> The complexity of computing the permanent. </title> <journal> Theoretical Computer Science, </journal> <volume> 8 </volume> <pages> 189-201, </pages> <year> 1979. </year>
Reference-contexts: Similar claims hold for R #P m (C = P) and (with a bit of care) for R #P m (PP). Vollmer ([Vol94], refining and altering notions due to Valiant <ref> [Val79a] </ref>, see the discussion in [HV95]) defined #NP, the class of all functions f such that there is a set A 2 NP and a polynomial p such that for all x 2 fl f (x) = jjfy 2 p (jxj) fi fi hx; yi 2 Agjj.
Reference: [Val79b] <author> L. Valiant. </author> <title> The complexity of enumeration and reliability problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 8(3) </volume> <pages> 410-421, </pages> <year> 1979. </year>
Reference: [Vol94] <author> H. Vollmer. </author> <title> Komplexitatsklassen von Funktionen. </title> <type> PhD thesis, </type> <institution> Universitat Wurzburg, Institut fur Informatik, Wurzburg, Germany, </institution> <year> 1994. </year> <month> 35 </month>
Reference: [VW93] <author> H. Vollmer and K. Wagner. </author> <title> The complexity of finding middle elements. </title> <journal> Inter--national Journal of Foundations of Computer Science, </journal> <volume> 4 </volume> <pages> 293-307, </pages> <year> 1993. </year>
Reference-contexts: Does SelfPath remain the same class if its normalization requirement is removed? Clearly the resulting class contains SelfPath, i.e., P #P [1] , and is contained in P #P (which Vollmer and Wagner <ref> [VW93] </ref> showed equals P "NameofMiddlePath"[1] , and thus P "NameofMiddlePath"[1] , though it is an upper bound for the unnormalized version of the class, does not offer a tighter upper bound than P #P ).
Reference: [Wag86] <author> K. Wagner. </author> <title> Some observations on the connection between counting and recursion. </title> <journal> Theoretical Computer Science, </journal> <volume> 47 </volume> <pages> 131-147, </pages> <year> 1986. </year>
Reference: [Wag87] <author> K. Wagner. </author> <title> Number-of-query hierarchies. </title> <institution> Institut fur Mathematik 158, Univer-sitat Augsburg, Augsurg, Germany, </institution> <month> October </month> <year> 1987. </year>
Reference: [Wag90] <author> K. Wagner. </author> <title> Bounded query classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 19(5) </volume> <pages> 833-846, </pages> <year> 1990. </year>
Reference: [Wec85] <author> G. Wechsung. </author> <title> On the boolean closure of NP. </title> <booktitle> In Proceedings of the 5th Conference on Fundamentals of Computation Theory, </booktitle> <pages> pages 485-493. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #199 , 1985. (An unpublished precursor of this paper was coauthored by K. Wagner). 36 </note>
References-found: 47

