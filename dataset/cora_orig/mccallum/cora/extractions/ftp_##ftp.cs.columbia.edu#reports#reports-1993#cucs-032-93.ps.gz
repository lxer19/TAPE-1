URL: ftp://ftp.cs.columbia.edu/reports/reports-1993/cucs-032-93.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1993.html
Root-URL: http://www.cs.columbia.edu
Title: in Reconfigurable Linear Arrays of Processors regular architectures of identical processing elements, a widely used
Author: Roberto De Prisco Alfredo De Santis 
Keyword: Key phrases: algorithms, catastrophic fault patterns, fault tolerance, VLSI linear arrays, reliability analysis.  
Address: New York, N.Y. 10027  84081 Baronissi (SA) Italy  
Affiliation: Department of Computer Science, Columbia University,  Dipartimento di Informatica ed Applicazioni, Universita di Salerno,  
Note: Catastrophic Faults  In  
Abstract: Technical Report CUCS-032-93 Abstract In this paper we consider linear arrays of processing elements, with unidirectional bypass links of length g. We count the number of particular sets of faulty processing elements. We show that the number of catastrophic faults of g elements is equal to the (g 1)-th Catalan number. We also provide algorithms to rank and unrank all catastrophic sets of g faults. Finally, we describe a linear time algorithm that generate all such sets of faults. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. P. Belkhale and P. Banerjee, </author> <title> "Reconfiguration strategies in VLSI processor arrays", </title> <booktitle> in Proc. Int'l Conf. on Computer Design, </booktitle> <pages> pp. 418-421, </pages> <year> 1988. </year>
Reference-contexts: W [h; k 1] = 1 then only one among W [h 1; k]; W [h; k]; : : :; W [g 1; k] is equal to 1 3. for 1 k g 2, if W [h; k + 1] = 1 then only one among W [0; k]; W <ref> [1; k] </ref>; : : : ; W [h + 1; k] is equal to 1. 4 Observe that Theorem 1 is equivalent to the following proposition. <p> W [0; 0] = W [0; g 1] = 1 2. for 0 k g 2, if W [h; k + 1] = 1 then only one among W [0; k]; W <ref> [1; k] </ref>; : : : ; W [h + 1; k] is equal to 1. Making use of the concepts of sequence of moves and of row representation, Proposition 1 can be rewritten as follows. <p> W [0; 0] = 1 2. for 0 k j 1, if W [h; k + 1] = 1 then only one among W [0; k]; W <ref> [1; k] </ref>; : : : ; W [h + 1; k] is 1 Roughly speaking, an (i; j)-fault pattern, (i; j)-FP for short, is a piece of a CFP, characterized by a matrix representation equal to that of the CFP up to the j-th column, and filled by zeroes from column <p> W [0; g 1] = 1 2. for g 2 k j + 1, if W [h; k + 1] = 1 then only one among W [0; k]; W <ref> [1; k] </ref>; : : : ; W [h + 1; k] is 1 Informally, a complement of an (i; j)-FP is a piece of a CFP, characterized by a matrix representation filled by zeroes from the first column up to the column j 1 and equal to that of a CFP
Reference: [2] <author> M. Chean and J. A. B. Fortes, </author> <title> "A taxonomy of reconfiguration techniques for fault-tolerant processor arrays", </title> <journal> IEEE Computer, </journal> <volume> Vol. 23, n.1, </volume> <pages> pp. 55-69, </pages> <month> Jan </month> <year> 1990. </year>
Reference: [3] <author> J. W. Greene and A. E. Gamal, </author> <title> "Configuration of VLSI arrays in presence of defects", </title> <journal> Journal of the ACM, </journal> <volume> Vol. 31, </volume> <editor> n. </editor> <volume> 4, </volume> <pages> pp. 694-717, </pages> <month> Oct </month> <year> 1984. </year>
Reference: [4] <author> D. E. Knuth, </author> <booktitle> The art of computer programming, </booktitle> <volume> vol I, </volume> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: It is well known that the (g 1)-th Catalan number represents the number of well formed expressions over the alphabet f (; )g of length 2g 2 (for example see <ref> [4] </ref>). <p> From the definition of well formed expression we have that integers m 0 i ; i = 1; : : :; g 1, satisfy Proposition 2. 7 Using the well known Stirling approximation <ref> [4] </ref>, n! = 2n n n 12n we obtain the following asymptotic estimate of the number of CFPs as function of g, F U (g) = p g : A concept which will turn to be useful in Section 4 and in Section 5 is the complement of an (i; j)-FP.
Reference: [5] <author> H.T. Kung, </author> <title> "Why systolic architecture?", </title> <journal> IEEE Computer, </journal> <volume> vol. 15, </volume> <editor> n. </editor> <volume> 1, </volume> <pages> pp. 37-46, </pages> <month> Jan </month> <year> 1982. </year>
Reference: [6] <author> A. Nayak, </author> <title> "On reconfigurability of some regular architectures", </title> <type> Ph.D Thesis, </type> <institution> Dept. System and Computer Engineering, Carleton University, </institution> <address> Ottawa, Canada, </address> <year> 1991. </year>
Reference-contexts: In Section 4 we rank and unrank all such catastrophic sets. In Section 5 we describe and analyze a linear time algorithm that generate all the catastrophic sets. 2 2 Preliminaries In this section we give preliminaries, definitions and some known results. We refer the reader to <ref> [6] </ref>, [7], [9], [10], for a justification of the definitions and for proofs of the results.
Reference: [7] <author> A. Nayak, L. Pagli, and N. Santoro, </author> <title> "Recognition of catastrophic faults in reconfigurable arrays with arbitrary link redundancy", </title> <institution> School of Computer Science, Carleton University, </institution> <type> Technical Report 202, </type> <month> March </month> <year> 1992. </year>
Reference-contexts: They analyze catastrophic sets having the minimal number of faults and describe algorithms for constructing a catastrophic set. Nayak, Pagli and Santoro <ref> [7] </ref> describe algorithms for testing whether a set of faults is catastrophic or not. Given a linear array with a set of bypass links, an important problem is to count the number of catastrophic sets. <p> In Section 4 we rank and unrank all such catastrophic sets. In Section 5 we describe and analyze a linear time algorithm that generate all the catastrophic sets. 2 2 Preliminaries In this section we give preliminaries, definitions and some known results. We refer the reader to [6], <ref> [7] </ref>, [9], [10], for a justification of the definitions and for proofs of the results. <p> A necessary condition for a fault pattern F to be catastrophic is g w F (g 1) 2 + 1 [9]. A convenient way to represent a fault pattern F , starting at the fixed processor p 0 , is the matrix representation <ref> [7] </ref>. The fault pattern F is represented as a boolean matrix W of size (g 1) fi g, defined by W [i; j] = 1 if (ig + j) 2 F 0 otherwise. 3 Example 1.
Reference: [8] <author> A. Nayak and N. Santoro, </author> <title> "Bounds on performance of VLSI processor arrays", </title> <booktitle> in 5th Int'l Parallel Processing Symposium, </booktitle> <address> Anaheim, California, </address> <month> May </month> <year> 1991. </year>
Reference: [9] <author> A. Nayak, N. Santoro, and R. Tan, </author> <title> "Fault-intolerance of reconfigurable systolic arrays", </title> <booktitle> In Proc. 20th Int. Symp. on Fault Tolerant Computing, FTCS'20, </booktitle> <pages> pp. 202-209, </pages> <year> 1990. </year>
Reference-contexts: Such sets are called catastrophics. If we have to reconfigure a system when a faulty set occurs, it is necessary to known if the set is catastrophic or not. Therefore it is important to study the properties of catastrophic sets. Nayak, Santoro and Tan <ref> [9] </ref> proved that a catastrophic set must contain a number of faulty processing elements which is greater or equal than the length of the longest bypass link. They analyze catastrophic sets having the minimal number of faults and describe algorithms for constructing a catastrophic set. <p> In Section 4 we rank and unrank all such catastrophic sets. In Section 5 we describe and analyze a linear time algorithm that generate all the catastrophic sets. 2 2 Preliminaries In this section we give preliminaries, definitions and some known results. We refer the reader to [6], [7], <ref> [9] </ref>, [10], for a justification of the definitions and for proofs of the results. <p> A necessary condition for a fault pattern F to be catastrophic is g w F (g 1) 2 + 1 <ref> [9] </ref>. A convenient way to represent a fault pattern F , starting at the fixed processor p 0 , is the matrix representation [7]. <p> The counting gives us the number of catastrophic fault patterns, of size g, which turns out to be the (g 1)-th Catalan number. An alternative and more simple proof of this fact is also provided. To prove our results we need the following theorem. Theorem 1 <ref> [9] </ref> Necessary and sufficient conditions for a fault pattern F of cardinality g to be catastrophic for a unidirectional array with link redundancy g are: 1.
Reference: [10] <author> L. Pagli and G. Pucci, </author> <title> "Reliability analysis of redundant VLSI arrays", </title> <note> Preprint 1992. </note>
Reference-contexts: Given a linear array with a set of bypass links, an important problem is to count the number of catastrophic sets. The knowledge of the number of catastrophic sets enables us to estimate the probability that the system operates correctly. Pagli and Pucci <ref> [10] </ref> proved tight upper and lower to the number F B (g) of catastrophic sets of size g for a linear array with one bidirectional bypass link of length g. In particular they proved that F B (g) = fi (3 g =g 3=2 ). <p> In Section 5 we describe and analyze a linear time algorithm that generate all the catastrophic sets. 2 2 Preliminaries In this section we give preliminaries, definitions and some known results. We refer the reader to [6], [7], [9], <ref> [10] </ref>, for a justification of the definitions and for proofs of the results. <p> Another convenient way to represent a CFP is the catastrophic sequence <ref> [10] </ref>. <p> Making use of the concepts of sequence of moves and of row representation, Proposition 1 can be rewritten as follows. Proposition 2 <ref> [10] </ref> Necessary and sufficient conditions to have that (m 1 ; : : : ; m g1 ) is the catastrophic sequence of a CFP for a unidirectional linear array with link redundancy g are: 1. m i 1 for i = 1; : : : ; g 1 P k
Reference: [11] <author> E.M. Reingold, J. Nievergelt, and N. Deo, </author> <title> Combinatorial Algorithms: theory and practice, </title> <publisher> Prentice-Hall, </publisher> <year> 1977. </year>
Reference-contexts: The problem of the generation of the objects of a given set has been widely studied <ref> [11] </ref>. Our algorithm, as in many algorithms for the systematic generation of a set of objects, has three components: the initialization, the transformation from an object of the set to the next one, and the end condition telling when to stop.
Reference: [12] <author> A. L. Rosenberg, </author> <title> "The diogens approach to testable fault-tolerant arrays of processors", </title> <journal> IEEE Trans. on Computer, </journal> <volume> vol. C-32, </volume> <editor> n. </editor> <volume> 10, </volume> <pages> pp. 902-910, </pages> <month> Oct </month> <year> 1983. </year> <month> 16 </month>
References-found: 12

