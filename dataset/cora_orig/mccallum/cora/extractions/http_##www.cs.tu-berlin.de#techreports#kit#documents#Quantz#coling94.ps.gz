URL: http://www.cs.tu-berlin.de/techreports/kit/documents/Quantz/coling94.ps.gz
Refering-URL: http://www.cs.tu-berlin.de/techreports/
Root-URL: 
Email: e-mail: jjq@cs.tu-berlin.de  
Title: An HPSG Parser Based on Description Logics  
Author: J. Joachim Quantz 
Address: Berlin, Projekt KIT-VM11, FR 5-12, Franklinstr. 28/29, D-10587 Berlin, Germany,  
Affiliation: Technische Universitat  
Abstract: In this paper I present a parser based on Description Logics (DL) for a German HPSG-style fragment. The specified parser relies mainly on the inferential capabilities of the underlying DL system. Given a preferential default extension for DL disambiguation is achieved by choosing the parse containing a qualitatively minimal number of exceptions.
Abstract-found: 1
Intro-found: 1
Reference: [Allgayer et al. 89] <author> J. Allgayer, R. Jansen-Winkeln, C. Reddig, N. Reithinger, </author> <title> Bidirectional Use of Knowledge in The Multi-Modal NL Access System XTRA, </title> <booktitle> in IJCAI`89, </booktitle> <pages> 1492-1497 </pages>
Reference-contexts: Description Logics have been developed in the field of Knowledge Representation (see, for example, [Brachman et al. 91]). They have already been used for the representation of semantic and encyclopedic information, e.g. <ref> [Allgayer et al. 89, Stock 91, Preuss et al. 92] </ref>. Due to their similarity to typed feature formalisms [Carpenter 92], syntactic information is in principle also expressible in DL, as already sketched in [Quantz 93, Quantz, Schmitz 94].
Reference: [Brachman et al. 91] <author> R. Brachman, D.L. McGuiness, P.F. Patel-Schneider, L. Alperin Resnick, A. Borgida, </author> <title> Living with CLASSIC: When and How to Use a KL-ONE-like Language, </title> <editor> in J. Sowa (Ed.), </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge, </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1991, </year> <pages> 401-456 </pages>
Reference-contexts: Description Logics have been developed in the field of Knowledge Representation (see, for example, <ref> [Brachman et al. 91] </ref>). They have already been used for the representation of semantic and encyclopedic information, e.g. [Allgayer et al. 89, Stock 91, Preuss et al. 92].
Reference: [Carpenter 92] <author> B. Carpenter, </author> <title> The Logic of Typed Feature Structures, </title> <publisher> Cambridge: Cambridge University Press, </publisher> <year> 1992 </year>
Reference-contexts: They have already been used for the representation of semantic and encyclopedic information, e.g. [Allgayer et al. 89, Stock 91, Preuss et al. 92]. Due to their similarity to typed feature formalisms <ref> [Carpenter 92] </ref>, syntactic information is in principle also expressible in DL, as already sketched in [Quantz 93, Quantz, Schmitz 94]. Furthermore, Preferential Default Description Logics (PDDL) based on weighted defaults [Quantz, Ryan 93] can be used to represent the preference rules in a declarative and formally well-founded way.
Reference: [Donini et al. 92] <author> F.M. Donini, M. Lenzerini, D. Nardi, A. Schaerf, W. Nutt, </author> <title> Adding Epistemic Operators to Concept Languages, </title> <booktitle> KR-92, </booktitle> <pages> 342-353 </pages>
Reference-contexts: Furthermore, when looking for daughters of a new phrase, we have to fill those daughters for which a filler is required, but not yet specified. I will use the epistemic operator k proposed in <ref> [Donini et al. 92] </ref> to formalize these intuitions and then use standard DL retrieval for checking these constraints. 3. For syntactically ambiguous expressions there is more than one possibility to combine the words/phrases.
Reference: [Hiltl 91] <author> W. Hiltl, </author> <title> Ein HPSG-Entwurf f ur das Deutsche und seine Implementierung, </title> <institution> Diplomarbeit Universitat Koblenz-Landau, </institution> <year> 1991 </year>
Reference-contexts: The fragment is based on the presentation in [Pollard, Sag 87] and its application to German in <ref> [Hiltl 91] </ref>. A main difference between my DL modeling and standard HPSG modeling is that I avoid feature pathes which would introduce superfluous DL objects. There is thus no feature `head' in my modeling since it would yield the introduction of head objects whose ontological status seems controversial.
Reference: [Hoppe et al. 93] <author> T. Hoppe, C. Kindermann, J.J. Quantz, A. Schmiedel, M. Fischer, </author> <title> BACK V5 Tutorial & Manual, </title> <type> KIT Report 100, </type> <institution> Technische Universitat Berlin, </institution> <year> 1993 </year>
Reference-contexts: In this section I will present the syntax of the DL which is used in the examples given in the next two sections. Due to space limitations I will not specify the formal semantics for this DL (see, for example, <ref> [Hoppe et al. 93, Quantz, Schmitz 94] </ref> for a model-theoretic semantics): t ! c; r; t p ; t 1 & t 2 ; k (t) c ! the (r,c) ; some (r) ; no (r) ; exactly (n,r) r:o ; r 1 = r 2 r ! feat; domain (c) <p> t 1 := t 2 ; c 1 =&gt; c 2 o :: c in s ; extend sit (s 1 ,s 2 ) When specifying the fragment and the parser in the next sections I will use a notation based on the PROLOG interface provided by the BACK system <ref> [Hoppe et al. 93] </ref>. In BACK a distinction is made between term introductions or definitions, and constraint-like rules.
Reference: [Jackendoff 83] <author> R. Jackendoff, </author> <title> Semantics and Cognition, </title> <publisher> Cambridge: MIT Press, </publisher> <year> 1983 </year>
Reference-contexts: The main motivation for specifying such a parser relies on considerations concerning the disambiguation of NL expressions. In [Schmitz, Quantz 93] it is shown how different types of ambiguity can be handled with a homogeneous approach based on the notion of preference rules <ref> [Jackendoff 83] </ref>. A major requirement for such a unified approach is that information usually represented rather differently (e.g. syntactic, semantic, and encyclopedic information) is homogeneously represented in a uniform and declarative formalism in order to express and evaluate the complex preferences stemming from the different kinds of information.
Reference: [Pollard, Sag 87] <author> C. Pollard, I.A. Sag, </author> <title> An Information Based Syntax and Semantics, Vol. I Fundamentals, </title> <booktitle> Stanford: CSLI Lecture Notes 13, </booktitle> <year> 1987 </year>
Reference-contexts: The fragment is based on the presentation in <ref> [Pollard, Sag 87] </ref> and its application to German in [Hiltl 91]. A main difference between my DL modeling and standard HPSG modeling is that I avoid feature pathes which would introduce superfluous DL objects.
Reference: [Preuss et al. 92] <editor> S. Preu, B. Schmitz, C. Hauenschild, C. </editor> <title> Umbach Anaphora Resolution in Machine Translation, </title> <type> KIT Report 104, </type> <institution> Technische Universitat Berlin, </institution> <year> 1992 </year>
Reference-contexts: Description Logics have been developed in the field of Knowledge Representation (see, for example, [Brachman et al. 91]). They have already been used for the representation of semantic and encyclopedic information, e.g. <ref> [Allgayer et al. 89, Stock 91, Preuss et al. 92] </ref>. Due to their similarity to typed feature formalisms [Carpenter 92], syntactic information is in principle also expressible in DL, as already sketched in [Quantz 93, Quantz, Schmitz 94].
Reference: [Quantz 93] <author> J.J. Quantz, </author> <title> Interpretation as Exception Minimization, </title> <booktitle> IJCAI-93, </booktitle> <pages> 1310-1315 </pages>
Reference-contexts: 1 Introduction In this paper I present a parser for HPSG based on Description Logics (DL). The main motivation for specifying such a parser relies on considerations concerning the disambiguation of NL expressions. In <ref> [Schmitz, Quantz 93] </ref> it is shown how different types of ambiguity can be handled with a homogeneous approach based on the notion of preference rules [Jackendoff 83]. <p> They have already been used for the representation of semantic and encyclopedic information, e.g. [Allgayer et al. 89, Stock 91, Preuss et al. 92]. Due to their similarity to typed feature formalisms [Carpenter 92], syntactic information is in principle also expressible in DL, as already sketched in <ref> [Quantz 93, Quantz, Schmitz 94] </ref>. Furthermore, Preferential Default Description Logics (PDDL) based on weighted defaults [Quantz, Ryan 93] can be used to represent the preference rules in a declarative and formally well-founded way. <p> It is rather to provide the basis for an implementation of the exception minimization approach to interpretation proposed in <ref> [Quantz 93] </ref>. In Section 6 I will briefly sketch how the DL-based parser presented in Section 5 can be extended to realize this approach. 2 Basic Ideas An important distinction made in DL, but missing in traditional feature formalisms, is the one between objects and types. <p> This object-centeredness is useful for disambiguation, for example for anaphora resolution, as illustrated in [Quantz, Schmitz 94]. 6 Interpretation as Exception Minimization I will now briefly sketch how the parser presented in the previous section can be extended to perform disambiguation by exception minimization as proposed in <ref> [Quantz 93] </ref>. In case of ambiguous expressions the parser will return more than one situation. The basic idea of interpretation as exception minimization is to model additional preference rules needed for disambiguation as DL defaults, and to choose the interpretation violating a qualitatively minimal set of defaults. <p> This can be achieved by simply introducing a default np & top:+ ; 5 case:nom Obviously, this default is a rather weak one and can be overwritten by information stemming from selectional restrictions <ref> [Schmitz, Quantz 93] </ref>. In principle, it is possible to use preferences stemming from weighted defaults already in the parsing process situations whose score is higher than a specified threshold are not processed any further.
Reference: [Quantz, Ryan 93] <author> J.J. Quantz, M. Ryan, </author> <title> Preferential Default Description Logics, </title> <type> KIT-Report 110, </type> <institution> Technische Universitat Berlin, </institution> <year> 1993 </year>
Reference-contexts: Due to their similarity to typed feature formalisms [Carpenter 92], syntactic information is in principle also expressible in DL, as already sketched in [Quantz 93, Quantz, Schmitz 94]. Furthermore, Preferential Default Description Logics (PDDL) based on weighted defaults <ref> [Quantz, Ryan 93] </ref> can be used to represent the preference rules in a declarative and formally well-founded way. <p> The basic idea of interpretation as exception minimization is to model additional preference rules needed for disambiguation as DL defaults, and to choose the interpretation violating a qualitatively minimal set of defaults. A Preferential Default Description Logic (PDDL) based on weigthed defaults has been developed in <ref> [Quantz, Ryan 93] </ref>.
Reference: [Quantz, Schmitz 94] <author> J.J. Quantz, B. Schmitz, </author> <title> Knowledge-Based Disambiguation for Machine Translation, </title> <booktitle> Minds and Machines 4, </booktitle> <pages> 39-57, </pages> <year> 1994 </year>
Reference-contexts: They have already been used for the representation of semantic and encyclopedic information, e.g. [Allgayer et al. 89, Stock 91, Preuss et al. 92]. Due to their similarity to typed feature formalisms [Carpenter 92], syntactic information is in principle also expressible in DL, as already sketched in <ref> [Quantz 93, Quantz, Schmitz 94] </ref>. Furthermore, Preferential Default Description Logics (PDDL) based on weighted defaults [Quantz, Ryan 93] can be used to represent the preference rules in a declarative and formally well-founded way. <p> In this section I will present the syntax of the DL which is used in the examples given in the next two sections. Due to space limitations I will not specify the formal semantics for this DL (see, for example, <ref> [Hoppe et al. 93, Quantz, Schmitz 94] </ref> for a model-theoretic semantics): t ! c; r; t p ; t 1 & t 2 ; k (t) c ! the (r,c) ; some (r) ; no (r) ; exactly (n,r) r:o ; r 1 = r 2 r ! feat; domain (c) <p> Thus we can choose to introduce a feature `subject' and add the fact `p 14 :: subject:p 8 ', or we can retrieve all the saturated noun phrases (Phrase ?: np & no (args)). This object-centeredness is useful for disambiguation, for example for anaphora resolution, as illustrated in <ref> [Quantz, Schmitz 94] </ref>. 6 Interpretation as Exception Minimization I will now briefly sketch how the parser presented in the previous section can be extended to perform disambiguation by exception minimization as proposed in [Quantz 93]. In case of ambiguous expressions the parser will return more than one situation.
Reference: [Schmitz, Quantz 93] <author> B. Schmitz, J.J. Quantz, </author> <title> Defaults in Machine Translation, </title> <type> KIT Report 106, </type> <institution> Technische Universitat Berlin, </institution> <year> 1993 </year>
Reference-contexts: 1 Introduction In this paper I present a parser for HPSG based on Description Logics (DL). The main motivation for specifying such a parser relies on considerations concerning the disambiguation of NL expressions. In <ref> [Schmitz, Quantz 93] </ref> it is shown how different types of ambiguity can be handled with a homogeneous approach based on the notion of preference rules [Jackendoff 83]. <p> This can be achieved by simply introducing a default np & top:+ ; 5 case:nom Obviously, this default is a rather weak one and can be overwritten by information stemming from selectional restrictions <ref> [Schmitz, Quantz 93] </ref>. In principle, it is possible to use preferences stemming from weighted defaults already in the parsing process situations whose score is higher than a specified threshold are not processed any further.
Reference: [Stock 91] <author> O. </author> <title> Stock, Natural Language and Exploration of an Information Space: the ALFresco Interactive System, </title> <booktitle> in IJCAI'91, </booktitle> <pages> 972-978 </pages>
Reference-contexts: Description Logics have been developed in the field of Knowledge Representation (see, for example, [Brachman et al. 91]). They have already been used for the representation of semantic and encyclopedic information, e.g. <ref> [Allgayer et al. 89, Stock 91, Preuss et al. 92] </ref>. Due to their similarity to typed feature formalisms [Carpenter 92], syntactic information is in principle also expressible in DL, as already sketched in [Quantz 93, Quantz, Schmitz 94].
References-found: 14

