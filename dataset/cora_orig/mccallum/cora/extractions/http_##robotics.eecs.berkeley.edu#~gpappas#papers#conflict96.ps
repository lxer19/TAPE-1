URL: http://robotics.eecs.berkeley.edu/~gpappas/papers/conflict96.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~gpappas/atms/publications.html
Root-URL: 
Email: fclairet,gpappas,sastryg@eecs.berkeley.edu  
Title: Conflict Resolution for Air Traffic Management: a Case Study in Multi-Agent Hybrid Systems  
Author: Claire Tomlin, George J. Pappas and Shankar Sastry 
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California at Berkeley  
Abstract: A conflict resolution architecture for multi-agent hybrid systems with emphasis on Air Traffic Management Systems (ATMS) is presented. In such systems, conflicts arise in the form of potential collisions which are resolved locally by inter-agent coordination. This results in a decentralized architecture in which safety issues are resolved locally and central agencies, such as Air Traffic Controllers, focus on global issues such as efficiency and optimal throughput. In order to allow optimization of agents' objectives, inter-agent coordination is minimized by noncooperative conflict resolution methods based on game theory. If noncooperative methods are unsuccessful, then cooperative methods in the form of coordinated maneuvers are used to resolve conflicts. The merging of inter-agent coordination, which is modeled by discrete event systems, and agent dynamics, which are modeled by differential equations, result in hybrid systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Sastry, G. Meyer, C. Tomlin, J. Lygeros, D. Godbole, and G. Pappas. </author> <title> Hybrid control in air traffic management systems. </title> <booktitle> In Proceedings of the 1995 IEEE Conference in Decision and Control, </booktitle> <pages> pages 1478-1483, </pages> <address> New Orleans, LA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: 1 Introduction We are increasingly confronted with the control of distributed multi-agent systems: such as Air Traffic Management Systems (ATMS) <ref> [1] </ref>, Intelligent Vehicle Highway Systems (IVHS) [2], control systems of an interconnected power grid, and communication networks. <p> The current paper studies conflict resolution for aircraft in the context of a new architecture for Air Traffic Management that has been proposed in <ref> [1] </ref> to allow for some shift away from the traditional completely centralized Air Traffic Control paradigm.
Reference: [2] <author> Pravin Varaiya. </author> <title> Smart cars on smart roads: problems of control. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-38(2):195-207, </volume> <year> 1993. </year> <month> 31 </month>
Reference-contexts: 1 Introduction We are increasingly confronted with the control of distributed multi-agent systems: such as Air Traffic Management Systems (ATMS) [1], Intelligent Vehicle Highway Systems (IVHS) <ref> [2] </ref>, control systems of an interconnected power grid, and communication networks.
Reference: [3] <author> R.P. Kurshan. </author> <title> Computer Aided Verification of Coordinating processes; the automata theoretic approach. </title> <publisher> Princeton University Press, </publisher> <year> 1994. </year>
Reference-contexts: Continuous control laws are usually proven correct by traditional tools of control theory, whereas verification of coordination protocols is performed by computer verification algorithms (such as in <ref> [3] </ref>, [4]). There are several approaches to hybrid system design and verification (see for example [5, 6]). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. <p> by traditional tools of control theory, whereas verification of coordination protocols is performed by computer verification algorithms (such as in <ref> [3] </ref>, [4]). There are several approaches to hybrid system design and verification (see for example [5, 6]). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system.
Reference: [4] <author> Thomas A. Henzinger, Pei-Hsin Ho, and Howard Wong-Toi. </author> <title> A User Guide to HyTech. </title> <institution> Department of Computer Science, Cornell University, </institution> <year> 1996. </year>
Reference-contexts: Continuous control laws are usually proven correct by traditional tools of control theory, whereas verification of coordination protocols is performed by computer verification algorithms (such as in [3], <ref> [4] </ref>). There are several approaches to hybrid system design and verification (see for example [5, 6]). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. <p> It is difficult to prove that less conservative designs, in which the horizontal deviation for each aircraft is less than 5 miles, are a priori safe for various speed ratios, unless a formal verification tool such as Cospan [26] or HyTech <ref> [4] </ref> is used. This type of tool automates a mathematical proof that, for given sets of initial conditions and constraints on the system variables, certain states will or will not be reached.
Reference: [5] <author> Robert L. Grossman, Anil Nerode, Anders P. Ravn, and Hans Rischel, </author> <title> editors. Hybrid Systems. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Continuous control laws are usually proven correct by traditional tools of control theory, whereas verification of coordination protocols is performed by computer verification algorithms (such as in [3], [4]). There are several approaches to hybrid system design and verification (see for example <ref> [5, 6] </ref>). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system.
Reference: [6] <editor> Panos Antsaklis, Wolf Kohn, Anil Nerode, and Shankar Sastry, editors. </editor> <title> Hybrid Systems II. </title> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Continuous control laws are usually proven correct by traditional tools of control theory, whereas verification of coordination protocols is performed by computer verification algorithms (such as in [3], [4]). There are several approaches to hybrid system design and verification (see for example <ref> [5, 6] </ref>). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system.
Reference: [7] <author> R. Alur, C. Courcoubetis, and D. Dill. </author> <title> Model checking for real-time systems. </title> <booktitle> Logic in Computer Science, </booktitle> <pages> pages 414-425, </pages> <year> 1990. </year>
Reference-contexts: There are several approaches to hybrid system design and verification (see for example [5, 6]). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. These approaches abstract the differential equations by clocks <ref> [7] </ref> or differential inclusions [8] and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are [9, 10, 11, 12, 13].
Reference: [8] <author> Anuj Puri and Pravin Varaiya. </author> <title> Decidability of hybrid systems with rectangular differential inclusions. </title> <booktitle> In Computer Aided Verification, </booktitle> <pages> pages 95-104, </pages> <year> 1994. </year>
Reference-contexts: There are several approaches to hybrid system design and verification (see for example [5, 6]). One approach is to extend verification techniques which exist for finite state machines [3] to include timed and dynamical systems. These approaches abstract the differential equations by clocks [7] or differential inclusions <ref> [8] </ref> and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are [9, 10, 11, 12, 13].
Reference: [9] <author> R.W. Brockett. </author> <title> Hybrid models for motion control systems. </title> <editor> In H. Trentelman and J.C. Willems, editors, </editor> <booktitle> Perspectives in Control, </booktitle> <pages> pages 29-54. </pages> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1993. </year>
Reference-contexts: These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are <ref> [9, 10, 11, 12, 13] </ref>. A natural framework for formulating problems in which many agents have different objectives is game theory [14, 15]. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16].
Reference: [10] <author> M. Branicky, V. Borkar, and S. Mitter. </author> <title> A unified framework for hybrid control:background, model and theory. </title> <type> Technical Report LIDS-P-2239, </type> <institution> Massachusets Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are <ref> [9, 10, 11, 12, 13] </ref>. A natural framework for formulating problems in which many agents have different objectives is game theory [14, 15]. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16].
Reference: [11] <author> Akash Deshpande. </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, California, </institution> <year> 1994. </year>
Reference-contexts: These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are <ref> [9, 10, 11, 12, 13] </ref>. A natural framework for formulating problems in which many agents have different objectives is game theory [14, 15]. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16].
Reference: [12] <author> A. Nerode and W. Kohn. </author> <title> Multiple agent hybrid control architecture. </title> <editor> In Robert L. Grossman, Anil Nerode, Anders P. Ravn, and Hans Rischel, editors, </editor> <booktitle> Hybrid Systems, </booktitle> <pages> pages 297-316. </pages> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are <ref> [9, 10, 11, 12, 13] </ref>. A natural framework for formulating problems in which many agents have different objectives is game theory [14, 15]. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16].
Reference: [13] <author> W. Kohn, A. Nerode, and J. Remmel. </author> <title> Hybrid systems as Finsler manifolds: Finite state control as approximation to connections. </title> <editor> In Panos Antsaklis, Wolf Kohn, Anil Nerode, and Shankar Sastry, editors, </editor> <booktitle> Hybrid Systems II, </booktitle> <pages> pages 294-321. </pages> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: These approaches abstract the differential equations by clocks [7] or differential inclusions [8] and verify the resulting abstracted system. More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are <ref> [9, 10, 11, 12, 13] </ref>. A natural framework for formulating problems in which many agents have different objectives is game theory [14, 15]. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16].
Reference: [14] <author> T. Basar and G. J. Olsder. </author> <title> Dynamic Non-cooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1995. </year>
Reference-contexts: More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are [9, 10, 11, 12, 13]. A natural framework for formulating problems in which many agents have different objectives is game theory <ref> [14, 15] </ref>. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16]. In this framework, each agent treats every other agent (for the sake of pairwise interactions) as a disturbance.
Reference: [15] <author> Joseph Lewin. </author> <title> Differential Games. </title> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: More unified approaches in which the hybrid system design is not decoupled into the design of the individual continuous and discrete components are [9, 10, 11, 12, 13]. A natural framework for formulating problems in which many agents have different objectives is game theory <ref> [14, 15] </ref>. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player [16]. In this framework, each agent treats every other agent (for the sake of pairwise interactions) as a disturbance.
Reference: [16] <author> John Lygeros, Datta Godbole, and Shankar Sastry. </author> <title> A game theoretic approach to hybrid system design. </title> <type> Technical Report UCB/ERL M95/77, </type> <institution> University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: A natural framework for formulating problems in which many agents have different objectives is game theory [14, 15]. Consider at the outset the simplest kind of game: a noncooperative zero-sum dynamic game with each agent is modeled as a player <ref> [16] </ref>. In this framework, each agent treats every other agent (for the sake of pairwise interactions) as a disturbance. Assuming a saddle solution to the game exists, the agent chooses an optimal policy assuming the worst possible disturbance. <p> C r + ! 1 Notice that equations (11) are ill posed when r = 2 as expected from the singularity of the yaw-pitch-roll parameterization of SE (3). 8 4 Noncooperative Conflict Resolution 4.1 Game Theoretic Approach In this section, a method for noncooperative conflict resolution among agents based on <ref> [16] </ref> is presented. Agents are aware of the relative position and heading of neighboring agents but not of their velocities. The following methodology is used as a long range collision avoidance scheme in an effort to filter all conflicts that can be resolved without inter-agent cooperation. <p> Additional system requirements such as passenger comfort can also be incorporated by extending the above nested chain of games and optimal control problems <ref> [16] </ref>. The above methodology is now illustrated in the instance of planar conflict resolution. 4.2 Planar Conflict Resolution Suppose we consider the special but interesting case of model (8) in which ! i = 0, i = 0; 1.
Reference: [17] <author> G. Owen. </author> <title> Game Theory. </title> <publisher> Academic Press, </publisher> <address> third edition, </address> <year> 1995. </year>
Reference-contexts: For multiple agent coordination, the kinds of games that need to be considered are cooperative and competitive with possibly incomplete information. For such games, there is a large literature available (see for example <ref> [17] </ref>), but our approach would be to try to find ways of abstracting the solutions of the games in the form of protocols among the agents. The extent to which the protocol is centralized or decentralized is an interesting question to answer.
Reference: [18] <author> John Lygeros, Datta N. Godbole, and Shankar Sastry. </author> <title> A design framework for hierarchical, hybrid control. </title> <note> Submitted to IEEE Transactions on Automatic Control, Special Issue on Hybrid Systems, </note> <year> 1996. </year>
Reference-contexts: The extent to which the protocol is centralized or decentralized is an interesting question to answer. Game theoretic methods have been used in a similar way to prove that a set of maneuvers in Intelligent Vehicle Highway Systems is safe <ref> [18] </ref>, [19]. The current paper studies conflict resolution for aircraft in the context of a new architecture for Air Traffic Management that has been proposed in [1] to allow for some shift away from the traditional completely centralized Air Traffic Control paradigm.
Reference: [19] <author> John Lygeros, Datta N. Godbole, and Shankar Sastry. </author> <title> A verified hybrid controller for automated vehicles. </title> <note> Submitted to IEEE Transactions on Automatic Control, Special Issue on Hybrid Systems, 1996. 32 </note>
Reference-contexts: The extent to which the protocol is centralized or decentralized is an interesting question to answer. Game theoretic methods have been used in a similar way to prove that a set of maneuvers in Intelligent Vehicle Highway Systems is safe [18], <ref> [19] </ref>. The current paper studies conflict resolution for aircraft in the context of a new architecture for Air Traffic Management that has been proposed in [1] to allow for some shift away from the traditional completely centralized Air Traffic Control paradigm.
Reference: [20] <author> Lance Sherry, David Youssefi, and Charles Hynes. </author> <title> A formalism for the specification of opera-tionally embedded reactive avionic systems. </title> <note> Honeywell Publication C695370001, </note> <year> 1995. </year>
Reference-contexts: Related studies in new air traffic management systems include <ref> [20] </ref> and 2 [21]. The organization of this paper is as follows. In Section 2, a conflict resolution architecture for multi-agent path planning systems is described. Long range collision avoidance among aircraft is noncooperative and is modeled as a zero-sum game.
Reference: [21] <author> Nicolas Pujet and Eric Feron. </author> <title> Flight plan optimization in flexible air traffic environments. </title> <institution> Department of Aeronautics and Astronautics, Massachusetts Institute of Technology, </institution> <year> 1995. </year>
Reference-contexts: Related studies in new air traffic management systems include [20] and 2 <ref> [21] </ref>. The organization of this paper is as follows. In Section 2, a conflict resolution architecture for multi-agent path planning systems is described. Long range collision avoidance among aircraft is noncooperative and is modeled as a zero-sum game.
Reference: [22] <author> Hector Sussmann. </author> <title> Shortest 3-dimensional paths with a prescribed curvature bound. </title> <booktitle> In Proceedings of the 1995 IEEE Conference in Decision and Control, </booktitle> <pages> pages 3306-3312, </pages> <address> New Orleans, LA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Section 6 discusses issues for further research. 2 Conflict Resolution Architecture In multi-agent path planning problems, the agents wish to traverse different trajectories which have been designed in an optimal fashion according to the goals of each agent <ref> [22, 23, 24] </ref>. Very frequently, however, the trajectories of two or more agents may be collision bound, in which case the planned trajectories must be altered in order to avoid collision. In particular, in current air traffic systems, conflict resolution is performed centrally by Air Traffic Control (ATC).
Reference: [23] <author> L. E. Dubins. </author> <title> On curves of minimal length with a constraint on average curvature, and with prescribed initial and terminal positions and tangents. </title> <journal> Americal Journal of Mathematics, </journal> <volume> 79 </volume> <pages> 497-516, </pages> <year> 1957. </year>
Reference-contexts: Section 6 discusses issues for further research. 2 Conflict Resolution Architecture In multi-agent path planning problems, the agents wish to traverse different trajectories which have been designed in an optimal fashion according to the goals of each agent <ref> [22, 23, 24] </ref>. Very frequently, however, the trajectories of two or more agents may be collision bound, in which case the planned trajectories must be altered in order to avoid collision. In particular, in current air traffic systems, conflict resolution is performed centrally by Air Traffic Control (ATC).
Reference: [24] <author> Steven Lavalle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of Illinois at Urbana-Champaign, </institution> <year> 1995. </year>
Reference-contexts: Section 6 discusses issues for further research. 2 Conflict Resolution Architecture In multi-agent path planning problems, the agents wish to traverse different trajectories which have been designed in an optimal fashion according to the goals of each agent <ref> [22, 23, 24] </ref>. Very frequently, however, the trajectories of two or more agents may be collision bound, in which case the planned trajectories must be altered in order to avoid collision. In particular, in current air traffic systems, conflict resolution is performed centrally by Air Traffic Control (ATC).
Reference: [25] <author> Russell A. Paielli and Heinz Erzberger. </author> <title> Conflict probability estimation and resolution for free flight. </title> <institution> NASA Ames Research Center, </institution> <type> Preprint, </type> <year> 1996. </year>
Reference-contexts: Cooperative collision avoidance involves a direction change for at least one of the aircraft involved in the conflict. Chosen for its simplicity and inspired by <ref> [25] </ref>, the path deviation for each pairwise conflict is chosen to be two consecutive heading changes resulting in a triangular deviation from the desired path as shown in Figure 10.
Reference: [26] <author> Z. Har'El and R.P. Kurshan. </author> <title> Cospan User's Guide. </title> <institution> AT&T Bell Laboratories, </institution> <year> 1987. </year>
Reference-contexts: It is difficult to prove that less conservative designs, in which the horizontal deviation for each aircraft is less than 5 miles, are a priori safe for various speed ratios, unless a formal verification tool such as Cospan <ref> [26] </ref> or HyTech [4] is used. This type of tool automates a mathematical proof that, for given sets of initial conditions and constraints on the system variables, certain states will or will not be reached.
Reference: [27] <author> Claire Tomlin. </author> <title> Verification of an air traffic management protocol using HyTech. </title> <institution> University of California at Berkeley, </institution> <year> 1996. </year>
Reference-contexts: For the maneuver discussed here, such a tool could be used to verify that the positions of the aircraft do not come within 5 miles of each other. The particular tool which has been used to verify similar maneuvers is the Hybrid system verification tool HyTech <ref> [27] </ref>. As with the Overtake maneuver, the HeadOn maneuver in its general form may be used for relative headings r other than 180 ffi .
Reference: [28] <author> D. Luenberger. </author> <title> Linear and Nonlinear Programming. </title> <publisher> Addison-Wesley, </publisher> <address> second edition, </address> <year> 1984. </year> <month> 33 </month>
Reference-contexts: The optimal values for t and J s (t) follow from the Kuhn-Tucker conditions <ref> [28] </ref>. Note that a 2 0 which results in J 2 s (t) being convex as well as satisfying the sufficient conditions for minimization. Furthermore, the constraint set t 0 is also convex. This results in globally minimizing solutions.
References-found: 28

