URL: http://www.cs.nyu.edu/cs/faculty/overton/papers/psfiles/mehr_gond.ps.gz
Refering-URL: http://www.cs.nyu.edu/cs/faculty/overton/papers/sdpevopt.html
Root-URL: http://www.cs.nyu.edu
Title: EXTENDING MEHROTRA AND GONDZIO HIGHER ORDER METHODS TO MIXED SEMIDEFINITE-QUADRATIC-LINEAR PROGRAMMING  
Author: JEAN-PIERRE HAEBERLY, MADHU V. NAYAKKANKUPPAM, AND MICHAEL L. OVERTON 
Abstract: We discuss extensions of Mehrotra's higher order corrections scheme and Gondzio's multiple centrality corrections scheme to mixed semidefinite-quadratic-linear programming (SQLP). These extensions have been included in a solver for SQLP written in C and based on LAPACK. The code implements a primal-dual path-following algorithm for solving SQLP problems based on the XZ+ZX search direction and Mehrotra's predictor-corrector method. We present benchmarks showing that the use of the higher order schemes yields substantial reductions in both the number of iterations and the running time of the algorithm, and also improves its robustness. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> I. Adler and F.Alizadeh, </author> <title> Primal-dual interior point algorithms for convex quadratically constrained and semidefinite optimization problems, </title> <type> Tech. Report RRR 46-95, </type> <institution> RUTCOR. Rut-gers University, </institution> <address> Piscataway, NJ, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Let d S = i=1 2 q X (n i + 1) (2.4) denote the dimensions of S N and Q n respectively. Let the operator vec : S N ! R d S be an isometry that maps matrices in S N onto column vectors. Following <ref> [1] </ref>, given a block vector x Q 2 Q n , we define the "arrow matrix" Arw (x Q ) to be the block diagonal matrix whose i th block is 2 6 6 4 x 1 x 0 0 0 . . . . . . . . . 3 <p> The complementarity condition for the quadratic cone is discussed in <ref> [1] </ref>. The complementarity condition X S Z S = 0 for the semidefinite cone can be found in [2]. <p> = QDiag ()Q T : Let r S (respectively r Q , r L ) denote the vector obtained by projecting the entries of (respectively Arw (x Q ) Arw (z Q )e Q , Diag (x L ) Diag (z L )e L ) onto a suitable neighborhood of <ref> [1; : : : ; 1] </ref> T (respectively e Q , e L ), and let R S = QDiag (r S )Q T : One may then consider a corrector direction (x corr ; y corr ; z corr ) defined by the solution to the system (2.13) with the
Reference: 2. <author> F. Alizadeh, </author> <title> Interior-point methods in semidefinite programming with applications to combinatorial optimization, </title> <note> SIAM Journal on Optimization 5 (1995), </note> <month> 13-51. </month> <title> MEHROTRA AND GONDZIO HIGHER ORDER METHODS IN SQLP 17 size for randomly generated, dense problems shown in Table 2 and Table 3. </title>
Reference-contexts: The complementarity condition for the quadratic cone is discussed in [1]. The complementarity condition X S Z S = 0 for the semidefinite cone can be found in <ref> [2] </ref>. The equivalent symmetrized condition X S Z S + Z S X S = 0 in (2.7) results in the XZ+ZX direction [4] (also called the AHO direction in the SDP literature). These issues are also discussed in [5].
Reference: 3. <author> F. Alizadeh, J.-P. Haeberly, M.V. Nayakkankuppam, M.L. Overton, and S. Schmieta, </author> <title> SDPpack User Guide (Version 0.9 Beta), </title> <type> Tech. Report 737, </type> <institution> Department of Computer Science, </institution> <address> New York University, New York, NY, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: It is an extension of SDPpack, version 0.9 beta, a Matlab package written by the authors in collaboration with F. Alizadeh and S. Schmieta <ref> [3] </ref>, and is based on the XZ+ZX search direction [4] for semidefinite programming (SDP). Several algorithmic improvements have been included. Date: November 4, 1998. To appear in Optimization Methods and Software. The first author is grateful to Jacek Gondzio for very helpful discussions. <p> In Section 5, we discuss miscellaneous implementation details. Finally, in Section 6 we present the results of numerical experiments, demonstrating the relative merits of the higher order schemes. 2. Mixed Semidefinite-Quadratic-Linear Programs We begin by introducing some notation, based on <ref> [3] </ref>. Let N = (N 1 ; : : : ; N s ) and n = (n 1 ; : : : ; n q ) denote two vectors of positive integers, and let n 0 be a nonnegative integer.
Reference: 4. <author> F. Alizadeh, J.-P. Haeberly, and M. L. Overton, </author> <title> Primal-dual interior-point methods for semi-definite programming: convergence rates, stability, and numerical methods, </title> <note> SIAM Journal on Optimization 8 (1998), 746-768. </note>
Reference-contexts: It is an extension of SDPpack, version 0.9 beta, a Matlab package written by the authors in collaboration with F. Alizadeh and S. Schmieta [3], and is based on the XZ+ZX search direction <ref> [4] </ref> for semidefinite programming (SDP). Several algorithmic improvements have been included. Date: November 4, 1998. To appear in Optimization Methods and Software. The first author is grateful to Jacek Gondzio for very helpful discussions. <p> The complementarity condition X S Z S = 0 for the semidefinite cone can be found in [2]. The equivalent symmetrized condition X S Z S + Z S X S = 0 in (2.7) results in the XZ+ZX direction <ref> [4] </ref> (also called the AHO direction in the SDP literature). These issues are also discussed in [5]. <p> E 0 F 5 4 y 3 where E (I ~ Z S ; Arw (z Q ); Diag (z L )) and F (I ~ X S ; Arw (x Q ); Diag (z L )) are block diagonal matrices, with ~ denoting the symmetrized Kronecker product defined in <ref> [4] </ref>. The matrix on the left-hand side of (2.13) is easily verified to be the Jacobian of F . <p> Thus the total cost of computing M S is O (m P s i + Next we consider the cost of solving the linear system (2.13) once the factorization of the Schur complement matrix M has been obtained. Computing the right-hand side of the Schur complement system (see <ref> [4] </ref>) requires O ( P s i + d Q + n 0 ) operations, while the cost of the backsolve to obtain y is O (m 2 ).
Reference: 5. <author> F. Alizadeh and S. Schmieta, </author> <title> Optimization with semidefinite, quadratic and linear constraints, </title> <type> Tech. Report RRR23-97, </type> <institution> RUTCOR. Rutgers University, </institution> <address> Piscataway, NJ, </address> <month> November </month> <year> 1997. </year>
Reference-contexts: The equivalent symmetrized condition X S Z S + Z S X S = 0 in (2.7) results in the XZ+ZX direction [4] (also called the AHO direction in the SDP literature). These issues are also discussed in <ref> [5] </ref>.
Reference: 6. <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Dongarra, J. Du Croz, A. Greenbaum, S. Ham-marling, A. McKenney, S. Oustrouchov, and D. Sorensen, </author> <title> LAPACK User's Guide, 2nd ed., </title> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1995. </year>
Reference-contexts: We have implemented these extensions in a collection of routines written in C and based on LAPACK <ref> [6] </ref>, implementing a primal-dual path-following algorithm for solving SQLP. It is an extension of SDPpack, version 0.9 beta, a Matlab package written by the authors in collaboration with F. Alizadeh and S. Schmieta [3], and is based on the XZ+ZX search direction [4] for semidefinite programming (SDP).
Reference: 7. <author> T.J. Carpenter, I.J. Lustig, J.M. Mulvey, and D.F. Shanno, </author> <title> Higher-order predictor-corrector interior-point methods with application to quadratic objectives, </title> <note> SIAM Journal on Optimization 3 (1993), 696-725. </note>
Reference-contexts: In the next two sections we describe two modifications to the basic interior-point iteration. They are both extensions of well known methods for LP. 3. Mehrotra higher order corrections Implementations of Mehrotra higher order corrections (HOC) scheme for LP have been described in <ref> [13, 7, 17] </ref>. The performance of the method has been tested by Mehrotra [13] and Carpenter, Lustig, Mulvey and Shanno [7] on some collections of Netlib test problems. <p> They are both extensions of well known methods for LP. 3. Mehrotra higher order corrections Implementations of Mehrotra higher order corrections (HOC) scheme for LP have been described in [13, 7, 17]. The performance of the method has been tested by Mehrotra [13] and Carpenter, Lustig, Mulvey and Shanno <ref> [7] </ref> on some collections of Netlib test problems. Mehrotra reports that the use of higher order corrections resulted on the average in a reduction of 25% to 35% in the number of iterations, and significant savings in the cpu time on several problems.
Reference: 8. <author> J. Czyzyk, S. Mehrotra, M. Wagner, and S.J. Wright, </author> <title> PCx User Guide (Version 1.1), </title> <type> Tech. Report OTC 96/01, </type> <institution> Optimization Technology Center, Chicago, Il, </institution> <month> November </month> <year> 1997. </year> <note> 18 J.-P. </note> <author> HAEBERLY, M. V. NAYAKKANKUPPAM, AND M. L. </author> <note> OVERTON </note>
Reference-contexts: Otherwise go to HOC Step 1. 4. Gondzio multiple centrality corrections The multiple centrality corrections (MCC) scheme for LP was introduced by Gondzio [10]. It is currently implemented in several LP solvers, including HOPDM [11] and PCx <ref> [8] </ref>. Its extension to SQLP can be summarized as follows. Let (x pred ; y pred ; z pred ) denote a predictor direction from the current iterate (x; y; z) and let bff pred and b fi pred denote the corresponding primal and dual stepsizes to the 8 J.-P.
Reference: 9. <author> I.S. Duff, R.G. Grimes, and J.G. Lewis, </author> <title> User's guide for the Harwell-Boeing sparse matrix collection (release 1), </title> <type> Tech. Report RAL-92-086, </type> <institution> Rutherford Appleton Laboratory, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: The code takes advantage of sparsity in the formation of M S , the semidefinite component of M (see (2.15)). The code stores sparse blocks in the constraint matrices A S in the Harwell-Boeing format <ref> [9] </ref>, and implements fast multiplication of a dense matrix with a sparse matrix and fast computation of the inner product of a dense matrix with a sparse matrix.
Reference: 10. <author> J. Gondzio, </author> <title> Multiple centrality corrections in a primal-dual method for linear programming, </title> <booktitle> Computational Optimization and Applications 6 (1996), </booktitle> <pages> 137-156. </pages>
Reference-contexts: 1. Introduction We introduce extensions of the "higher order corrections" (HOC) and "multiple centrality corrections" (MCC) schemes, introduced for linear programming (LP) by Mehrotra [13] and Gondzio <ref> [10] </ref> respectively, to mixed semidefinite-quadratic-linear programs (SQLP). More specifically, we describe the use of these methods in the context of a primal-dual path-following algorithm based on Mehrotra's predictor-corrector method. <p> If the iteration count exceeds a predefined bound then terminate the HOC iteration and proceed to Step 6 of the basic iteration. Otherwise go to HOC Step 1. 4. Gondzio multiple centrality corrections The multiple centrality corrections (MCC) scheme for LP was introduced by Gondzio <ref> [10] </ref>. It is currently implemented in several LP solvers, including HOPDM [11] and PCx [8]. Its extension to SQLP can be summarized as follows.
Reference: 11. <author> J. Gondzio and M. Makowski, </author> <title> HOPDM modular solver for LP problems, User's guide to version 2.12, </title> <type> Tech. Report WP-95-50, </type> <institution> International Institute for Applied Systems Analysis, Laxenburg, Austria, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: Otherwise go to HOC Step 1. 4. Gondzio multiple centrality corrections The multiple centrality corrections (MCC) scheme for LP was introduced by Gondzio [10]. It is currently implemented in several LP solvers, including HOPDM <ref> [11] </ref> and PCx [8]. Its extension to SQLP can be summarized as follows.
Reference: 12. <author> R.A. Horn and C.R. Johnson, </author> <title> Topics in matrix analysis, </title> <publisher> Cambridge University Press, </publisher> <address> Cam-bridge, UK, </address> <year> 1994. </year>
Reference-contexts: Both have the same trace and therefore the same eigenvalue average. Furthermore, we have the following inequalities: min ( 2 max ( 2 where min (B) and max (B) denote the smallest and largest eigenvalues of the matrix B. (See <ref> [12] </ref>, exercise 20, p. 187.) The correction can be repeated, taking the direction (x; y; z) just computed as the predictor direction for a new correction.
Reference: 13. <author> S. Mehrotra, </author> <title> Higher order methods and their performance, </title> <type> Tech. Report 90-16R1, </type> <institution> Department of Industrial Engineering and Management Sciences, Northwestern University, </institution> <address> Evanston, Ill, </address> <month> July </month> <year> 1991. </year> <title> 14. , On the implementation of a priml-dual interior point method, </title> <note> SIAM Journal on Optimization 2 (1992), 575-601. </note>
Reference-contexts: 1. Introduction We introduce extensions of the "higher order corrections" (HOC) and "multiple centrality corrections" (MCC) schemes, introduced for linear programming (LP) by Mehrotra <ref> [13] </ref> and Gondzio [10] respectively, to mixed semidefinite-quadratic-linear programs (SQLP). More specifically, we describe the use of these methods in the context of a primal-dual path-following algorithm based on Mehrotra's predictor-corrector method. <p> In the next two sections we describe two modifications to the basic interior-point iteration. They are both extensions of well known methods for LP. 3. Mehrotra higher order corrections Implementations of Mehrotra higher order corrections (HOC) scheme for LP have been described in <ref> [13, 7, 17] </ref>. The performance of the method has been tested by Mehrotra [13] and Carpenter, Lustig, Mulvey and Shanno [7] on some collections of Netlib test problems. <p> They are both extensions of well known methods for LP. 3. Mehrotra higher order corrections Implementations of Mehrotra higher order corrections (HOC) scheme for LP have been described in [13, 7, 17]. The performance of the method has been tested by Mehrotra <ref> [13] </ref> and Carpenter, Lustig, Mulvey and Shanno [7] on some collections of Netlib test problems. Mehrotra reports that the use of higher order corrections resulted on the average in a reduction of 25% to 35% in the number of iterations, and significant savings in the cpu time on several problems.
Reference: 15. <author> Yu. E. Nesterov and A. Nemirovskii, </author> <title> Interior-point polynomial algorithms in convex programming, </title> <journal> Studies in applied mathematics, </journal> <volume> vol. 13, </volume> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1994. </year>
Reference-contexts: Under these assumptions, the optimality conditions <ref> [15] </ref> for SQLP are that, in addition to the constraints in (2.1) and (2.2), the duality gap is zero, i.e. <p> 2I) Diag (x L ) Diag (z L )e L e L 3 MEHROTRA AND GONDZIO HIGHER ORDER METHODS IN SQLP 5 For any given &gt; 0, there exists a unique solution (x ; y ; z ) 2 S N ++ fi Q n ++ to the system (2.12) <ref> [15] </ref>. The trajectory f (x ; y ; z ) j &gt; 0g is called the central path, and any limit point of the central path as # 0 is a solution to the SQLP.
Reference: 16. <author> L. Vandenberghe, S. Boyd, and A. El Gamal, </author> <title> Optimal wire and transistor sizing for circuits with non-tree topology, </title> <booktitle> Proceedings of the IEEE International Conference on Computer-Aided Design (San Jose, </booktitle> <address> CA), </address> <month> November </month> <year> 1997. </year>
Reference-contexts: Second, we elaborate on the strategy for setting the value of in Step 3 of the basic interior-point iteration. 5.1. Sparsity. Many problems arising in applications have very sparse constraint matrices. This is the case, for example, in problems of truss topology design and clock mesh design <ref> [16] </ref>. In order to obtain the best performance of the algorithm, it is imperative to exploit sparsity in the formation and the factorization of the Schur complement matrix M in (2.14). <p> We used a variety of test problems described in Table 1. The truss topology design problems were contributed by A. Nemirovski. The clock mesh design problems are circuit design problems dealing with the propagation of a clock signal in integrated circuits; see <ref> [16] </ref> for details. All the runs were performed on a workstation with an R10000 processor, an R10010 floating point unit and 128 MB of RAM.
Reference: 17. <author> S.J. Wright, </author> <title> Primal-dual interior-point methods, </title> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1997. </year> <institution> Department of Mathematics, Fordham University, Bronx, NY. E-mail address: haeberly@murray.fordham.edu Computer Science Department, Courant Institute, NYU, New York. E-mail address: madhu@cs.nyu.edu Computer Science Department, Courant Institute, NYU, </institution> <address> New York. </address> <publisher> E-mail address: overton@cs.nyu.edu </publisher>
Reference-contexts: In the next two sections we describe two modifications to the basic interior-point iteration. They are both extensions of well known methods for LP. 3. Mehrotra higher order corrections Implementations of Mehrotra higher order corrections (HOC) scheme for LP have been described in <ref> [13, 7, 17] </ref>. The performance of the method has been tested by Mehrotra [13] and Carpenter, Lustig, Mulvey and Shanno [7] on some collections of Netlib test problems.
References-found: 16

