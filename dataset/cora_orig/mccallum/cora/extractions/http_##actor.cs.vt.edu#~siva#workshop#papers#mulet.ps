URL: http://actor.cs.vt.edu/~siva/workshop/papers/mulet.ps
Refering-URL: http://actor.cs.vt.edu/~siva/workshop/papers.html
Root-URL: http://www.cs.vt.edu
Email: E-mail [mulet,ledoux,barbaron,rivard,cointe]@info.emn.fr  
Title: OOPSLA'94 Workshop on "Multi-Language Objects Models" Importing SOM Libraries into Classtalk  
Author: P. Mulet, T. Ledoux D. Barbaron F. Rivard and P. Cointe 
Address: 3, rue Marcel Sembat 44049 Nantes Cedex 04, France  
Affiliation: Ecole des Mines de Nantes  
Abstract: The enhanced metalevel architecture for Smalltalk, Classtalk, is very likely to inter-operate with SOM system, since both of them are based upon explicit metaclasses, in the line of the ObjVlisp model. This paper exposes how to model SOM kernel into Classtalk, so as to import external SOM components into Smalltalk.
Abstract-found: 1
Intro-found: 1
Reference: [BC89] <author> Jean-Pierre Briot and Pierre Cointe. </author> <title> Programming with Explicit Metaclasses in Smalltalk. </title> <booktitle> In Proceedings of OOPSLA'89, </booktitle> <pages> pages 419-431, </pages> <address> New Orleans, Louisiana, </address> <month> October </month> <year> 1989. </year> <journal> ACM Sigplan Notices. </journal>
Reference-contexts: Consequently metaclass inheritance could be used to specialize the generators of objects and then to study structural reflection [Coi90]. The Classtalk system is a plateform dedicated to the study of structural reflection in the Smalltalk world <ref> [BC89] </ref>.
Reference: [Coi87] <author> Pierre Cointe. </author> <title> Meta-classes are First Class: the ObjVlisp Model. </title> <booktitle> In Proceedings of OOPSLA'87, </booktitle> <pages> pages 156-167, </pages> <address> Orlando, Florida, </address> <month> December </month> <year> 1987. </year> <journal> ACM Sigplan Notices. </journal>
Reference-contexts: Introduction The enhanced metalevel architecture for Smalltalk, Classtalk, is very related to SOM system, since both of them are based upon a protocol for programming with explicit metaclasses, in the line of the ObjVlisp model <ref> [Coi87] </ref>. Classtalk is dedicated to the study of structural reflection 4 , and as such can be extended to support external accessing SOM libraries, specified with CORBA IDL [OMG93] and implemented either in C++ or C. So far, the current implementation only permits to import SOM classes into Classtalk.
Reference: [Coi90] <author> Pierre Cointe. </author> <title> The ClassTalk System: a Laboratory to Study Reflection in Smalltalk. </title> <booktitle> In Informal Proceedings of the First Workshop on Reflection and Meta-Level Architectures in Object-Oriented Programming, </booktitle> <address> OOPSLA/ECOOP'90, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: Consequently metaclass inheritance could be used to specialize the generators of objects and then to study structural reflection <ref> [Coi90] </ref>. The Classtalk system is a plateform dedicated to the study of structural reflection in the Smalltalk world [BC89].
Reference: [Coi93] <author> Pierre Cointe. </author> <title> "Object-Oriented Programming: The CLOS Perspective" edited by An-dreas Ppcke, </title> <booktitle> chapter CLOS and Smalltalk, </booktitle> <pages> pages 215-250. </pages> <publisher> The MIT Press, </publisher> <address> Cam-bridge, Massachusetts, </address> <year> 1993. </year>
Reference-contexts: libraries into Classtalk, and finally describes the definition of the SOM kernel into Classtalk. 1 A Brief Overview of the Classtalk System Smalltalk provides metaclasses to define instanciation as a class method, but they are anonymous and implicitly generated in the background of the explicit creation of classes by user <ref> [Coi93] </ref>. Thus, the system automatically build a metaclass hierarchy parallel to that of the classes it describes, aiming metaclass compatibility issues [Gra89].
Reference: [DF94] <author> Scott Danforth and Ira R. Forman. </author> <title> Derived Metaclasses in SOM. </title> <booktitle> In Proceedings of TOOLS EUROPE'94, </booktitle> <address> Versailles, France, </address> <year> 1994. </year>
Reference-contexts: Actually, the semantics of derived metaclasses can handle this problem, respecting thus the SOM methodology <ref> [DF94] </ref>. Enabling Smalltalk components to be exported to SOM world is a natural evolution of our model, thus providing a complete interface with SOM.
Reference: [Gra89] <author> Nicolas Graube. </author> <title> Metaclass Compatibility. </title> <booktitle> In Proceedings of OOPSLA'89, </booktitle> <pages> pages 305-315, </pages> <address> New Orleans, Lousiana, </address> <month> October </month> <year> 1989. </year>
Reference-contexts: Thus, the system automatically build a metaclass hierarchy parallel to that of the classes it describes, aiming metaclass compatibility issues <ref> [Gra89] </ref>. <p> At this point, we can envisage to subclass imported SOM classes by true Smalltalk (or Classtalk) classes, however it raises metaclass compatibility issues <ref> [Gra89] </ref> since the use of some particular metaclasses (ExternalClass, MIClass or SOMClass) is required for supporting external accesses. Actually, the semantics of derived metaclasses can handle this problem, respecting thus the SOM methodology [DF94].
Reference: [OMG93] <author> Object Management Group and X/Open. </author> <title> The Common Object Request Broker: Architecture and Specification, revision 1.1, </title> <year> 1993. </year>
Reference-contexts: Classtalk is dedicated to the study of structural reflection 4 , and as such can be extended to support external accessing SOM libraries, specified with CORBA IDL <ref> [OMG93] </ref> and implemented either in C++ or C. So far, the current implementation only permits to import SOM classes into Classtalk.
Reference: [SOM93] <institution> IBM. </institution> <note> SOMobjects Developer Toolkit Users Guide release 2.0, second edition, </note> <month> June </month> <year> 1993. </year> <title> 6 Shared variable for the whole hierarchy of classes subclassing a given class, here available for the complete SOM hierarchy. </title>
Reference-contexts: We will describe here the definition of SOMObject and SOMClass proxies using Classtalk enhanced metalevel architecture. OOPSLA'94 Workshop on "Multi-Language Objects Models" 4 compound of SOMObject and SOMClass interacting as described in <ref> [SOM93] </ref>. 3.1 Modelling SOM kernel into Classtalk Here is a step by step description of the modelling of the two classes SOM kernel, which results is illustrated by figure 3: * SOMClass is a new explicit metaclass, implementing the behavior for SOM classes proxies, in particular it describes itself (metacircular metaclass), <p> kernel into Classtalk Here is a step by step description of the modelling of the two classes SOM kernel, which results is illustrated by figure 3: * SOMClass is a new explicit metaclass, implementing the behavior for SOM classes proxies, in particular it describes itself (metacircular metaclass), as advocated by <ref> [SOM93] </ref>. * SOMClass must provide both external support and multiple inheritance, in addition to its inheritance link from SOMObject. Therefore, a triple inheritance link is involved, as shown by figure 3.
References-found: 8

