URL: http://www.genetic-programming.com/SIMTEC93.ps
Refering-URL: http://www.genetic-programming.com/jkpubs72to93.html
Root-URL: http://www.genetic-programming.com/jkpubs72to93.html
Email: Koza@CS.Stanford.Edu  
Title: DISCOVERY OF A MAIN PROGRAM AND REUSABLE SUBROUTINES USING GENETIC PROGRAMMING  
Author: John R. Koza Margaret Jacks Hall 
Date: 415-941-0336  
Address: Stanford, California 94305-2140  
Affiliation: Computer Science Department  Stanford University  
Abstract: This paper describes an approach for automatically decomposing a problem into subproblems, automatically creating reusable subroutines to solve the subproblems, and automatically assembling the results produced by the subroutines in order to solve the problem. The approach uses genetic programming with the recently developed additional facility of automatic function definition. Genetic programming provides a way to genetically breed a computer program to solve a problem and automatic function definition enables genetic programming to create reusable subroutines dynamically during a run. The approach is applied to an illustrative problem containing a considerable amount of regularity. Solutions to the problem produced using automatic function definition are considerably smaller in size and require processing of considerably fewer individuals than is the case without automatic function definition. Specifically, the average program size for a solution to the problem without using automatic function definition is 3.65 times larger than the size for a solution when using automatic function definition. The number of individuals required to be processed to yield a solution with 99% probability without automatic function definition is 9.09 times larger than the equivalent number required with automatic function definition. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> Davis, Lawrence (editor). </editor> <title> Genetic Algorithms and Simulated Annealing. </title> <publisher> London: Pittman l987. </publisher>
Reference: <author> Davis, Lawrence. </author> <title> Handbook of Genetic Algorithms. </title> <address> New York: </address> <publisher> Van Nostrand Reinhold 1991. </publisher>
Reference: <author> Goldberg, David E. </author> <title> Genetic Algorithms in Search, Optimization, </title> <booktitle> and Machine Learning. </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley l989. </publisher>
Reference: <author> Holland, John H. </author> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <institution> University of Michigan Press 1975. </institution> <note> Revised Second Edition 1992 from The MIT Press. </note>
Reference: <author> Koza, John R. </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press 1992. </publisher> <year> 1992a. </year>
Reference-contexts: A videotape visualization of numerous applications of genetic programming can be found in the Genetic Programming: The Movie <ref> (Koza and Rice 1992) </ref>.
Reference: <author> Koza, John R. </author> <title> Hierarchical automatic function definition in genetic programming. </title> <editor> In Whitley, Darrell (editor). </editor> <booktitle> Proceedings of Workshop on the Foundations of Genetic Algorithms and Classifier Systems, </booktitle> <address> Vail, Colorado 1992. San Mateo, CA: </address> <publisher> Morgan Kaufmann Publishers Inc. </publisher> <year> 1992. 1992b. </year>
Reference-contexts: A videotape visualization of numerous applications of genetic programming can be found in the Genetic Programming: The Movie <ref> (Koza and Rice 1992) </ref>.
Reference: <author> Koza, John R. </author> <title> Simultaneous discovery of detectors and a way of using the detectors via genetic programming. </title> <booktitle> 1993 IEEE International Conference on Neural Networks, </booktitle> <address> San Francisco. Piscataway, NJ: </address> <booktitle> IEEE 1993. Volume III. </booktitle> <pages> Pages 1794-1801. </pages> <year> 1993a. </year>
Reference-contexts: THE PROBLEM After determining that genetic programming with automatic function definition could perform Boolean function learning on parity problems of various orders (Koza 1992a, 1992b), could discover an impulse response function of a time-invariant linear system <ref> (Koza, Keane, and Rice 1993) </ref>, could create a pattern-recognizing program (Koza 1993a), and could generate a computer program for controlling the movement of an artificial ant so that the ant can find all the food lying along an irregular trail (Koza 1993b), the question arose as to whether this new technique
Reference: <author> Koza, John R. </author> <title> Simultaneous discovery of reusable detectors and subroutines using genetic programming. </title> <editor> In Forrest, Stephanie (editor). </editor> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann 1993b. </publisher>
Reference-contexts: discover an impulse response function of a time-invariant linear system (Koza, Keane, and Rice 1993), could create a pattern-recognizing program (Koza 1993a), and could generate a computer program for controlling the movement of an artificial ant so that the ant can find all the food lying along an irregular trail <ref> (Koza 1993b) </ref>, the question arose as to whether this new technique was applicable to other types of problems where the problem environment contains exploitable regularities.
Reference: <author> Koza, John R., Keane, Martin A., and Rice, James P. </author> <title> Performance improvement of machine learning via automatic discovery of facilitating functions as applied to a problem of symbolic system identification. </title> <booktitle> 1993 IEEE International Conference on Neural Networks, </booktitle> <address> San Francisco. Piscataway, NJ: </address> <booktitle> IEEE 1993. Volume I. </booktitle> <pages> Pages 191-198. </pages> <year> 1993 </year> . 
Reference-contexts: THE PROBLEM After determining that genetic programming with automatic function definition could perform Boolean function learning on parity problems of various orders (Koza 1992a, 1992b), could discover an impulse response function of a time-invariant linear system <ref> (Koza, Keane, and Rice 1993) </ref>, could create a pattern-recognizing program (Koza 1993a), and could generate a computer program for controlling the movement of an artificial ant so that the ant can find all the food lying along an irregular trail (Koza 1993b), the question arose as to whether this new technique
Reference: <author> Koza, John R. and Rice, James P. </author> <title> Genetic Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press 1992. </publisher>
Reference-contexts: A videotape visualization of numerous applications of genetic programming can be found in the Genetic Programming: The Movie <ref> (Koza and Rice 1992) </ref>.
Reference: <author> Michalewicz, Zbignlew. </author> <title> Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag 1992. </publisher>
References-found: 11

