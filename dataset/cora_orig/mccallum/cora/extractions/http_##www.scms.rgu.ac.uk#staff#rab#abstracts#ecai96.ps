URL: http://www.scms.rgu.ac.uk/staff/rab/abstracts/ecai96.ps
Refering-URL: http://www.scms.rgu.ac.uk/staff/rab/publications/
Root-URL: 
Title: Refinement of a Product Formulation Expert System  
Author: Robin Boswell Susan Craw and Ray Rowe 
Abstract: We describe extensions made to the knowledge refinement tool KRUST with the aim of developing a generic refinement tool, applicable to a variety of expert system shells. In particular, we describe the PFES shell and the tablet formulation application TFS written in PFES, discuss some of the differences between TFS and other systems, and show how we have extended KRUST in order to apply it to TFS. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Susan Craw and Paul Hutton, </author> <title> `Protein folding: Symbolic refinement competes with neural networks', </title> <booktitle> in Machine Learning: Proceedings of the Twelfth International Conference, </booktitle> <editor> eds., Armand Prieditis and Stuart Russell, pp. </editor> <address> 133141, Tahoe City, CA, (1995). </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Calcium phosphate 55.5% 1B Oracle filler choice: Magnesium carbonate 56.6% 3 KRUST and its application to PFES 3.1 The Operation of KRUST The operation of any refinement system may be broken down into the following three tasks. (A more detailed account of the operation of KRUST may be found in <ref> [1] </ref>). Blame allocation determines which rules or parts of rules might be responsible for the erroneous behaviour. In KRUST at this stage no-fire rules are identified, which produce the correct conclusion but did not fire, and error-causing rules which did (or could) fire, but do not produce the correct conclusion.
Reference: [2] <author> Susan Craw, Derek Sleeman, Robin Boswell, and Leonardo Carbonara, </author> <title> `Is knowledge refinement different from theory revision?', </title> <booktitle> in Proceedings of the MLNet Familiarization Workshop on Theory Revision and Restructuring in Machine Learning (ECML-94), </booktitle> <editor> ed., Stefan Wrobel, </editor> <title> pp. </title> <type> 3234, </type> <institution> Catania, ITALY, </institution> <year> (1994). </year> <type> GMD Technical Report Number 842. </type>
Reference-contexts: will be to adapt the remaining KRUST modules to the requirements of PFES, so that the refinements we have generated can be filtered, implemented and tested. 5 Other work Systems which correct faulty knowledge bases may be divided into two classes: knowledge base refinement, which includes KRUST, and theory revision <ref> [2] </ref>. The principal distinguishing features of the two classes are shown in table 1. This comparison shows that, in general, knowledge refinement systems tend to be more applicable to real-world expert systems, because they take account of control knowledge and require fewer examples.
Reference: [3] <author> R. Davis and D.B. </author> <title> Lenat, </title> <booktitle> Knowledge-Based Systems in Artificial Intelligence, </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1982. </year>
Reference-contexts: Many Theory Revision systems such as EITHER [5] and FORTE [7] are restricted to Prolog programs, and SEEK [4], Teiresias <ref> [3] </ref> and Odysseus are each applicable only to a single shell. * It generates and tests many refined knowledge-bases. This feature is unique to KRUST.
Reference: [4] <author> Allen Ginsberg, Sholom M. Weiss, and Peter G. Politakis, `Seek2: </author> <title> A generalized approach to automatic knowledge base refinement', </title> <booktitle> in Proceedings of the Ninth IJCAI Conference, </booktitle> <pages> pp. 367374, </pages> <year> (1985). </year>
Reference-contexts: Many Theory Revision systems such as EITHER [5] and FORTE [7] are restricted to Prolog programs, and SEEK <ref> [4] </ref>, Teiresias [3] and Odysseus are each applicable only to a single shell. * It generates and tests many refined knowledge-bases. This feature is unique to KRUST.
Reference: [5] <author> Dick Ourston and Raymond Mooney, </author> <title> `Theory refinement combining analytical and empirical methods', </title> <journal> Artificial Intelligence, </journal> <volume> 66, 273309, </volume> <year> (1994). </year>
Reference-contexts: Many Theory Revision systems such as EITHER <ref> [5] </ref> and FORTE [7] are restricted to Prolog programs, and SEEK [4], Teiresias [3] and Odysseus are each applicable only to a single shell. * It generates and tests many refined knowledge-bases. This feature is unique to KRUST.
Reference: [6] <author> Gareth Palmer, </author> <title> `Towards an extensible knowledge refinement tool', </title> <type> Technical Report 96/1, </type> <institution> SCMS, Robert Gordon University, </institution> <year> (1996). </year>
Reference-contexts: the particular requirements of PFES. 3.2.1 Rule element representation Although it may at first appear that there is a wide variety in the representations used by various KBS development tools, there are only a limited number of roles that a rule element (condition or conclusion) can play within a rule <ref> [6] </ref>. For example, a condition can succeed or fail, bind variables, or be involved in rule chaining. These roles are the basis of KRUST's hierarchy of rule element types (figure 3): further types are likely to be added as new KBS tools require.
Reference: [7] <author> Bradley L. Richards and Raymond J. Mooney, </author> <title> `Refinement of first-order horn-clause domain theories', </title> <journal> Machine Learning, </journal> <volume> 19(2), 95131, </volume> <year> (1995). </year>
Reference-contexts: Many Theory Revision systems such as EITHER [5] and FORTE <ref> [7] </ref> are restricted to Prolog programs, and SEEK [4], Teiresias [3] and Odysseus are each applicable only to a single shell. * It generates and tests many refined knowledge-bases. This feature is unique to KRUST.
Reference: [8] <author> Ray Rowe, </author> <title> `An expert system for the formulation of pharmaceutical tablets', </title> <journal> Manufacturing Intelligence, </journal> <volume> (14), 13 15, </volume> <year> (1993). </year>
Reference-contexts: In particular, its control structure is task-based, and corresponding to each task is a rule-set which is executed by forward-chaining. 2.2 TFS The tablet formulation expert system (TFS) solves the problem of selecting the inert substances, or excipients, which are needed to process a drug into a tablet <ref> [8] </ref>. When running TFS, the user first provides the name of a drug and its dosage, together with certain other desired properties of the final tablet; then TFS calculates a formulation consisting of the most appropriate material from each excipient type, and the quantity of each required.
Reference: [9] <author> John Turner, </author> <title> `Product formulation expert system', </title> <journal> Manufacturing Intelligence, </journal> <volume> (8), 12 14, </volume> <year> (1991). </year>
Reference-contexts: We then describe the results so far achieved by KRUST (x4). Finally, we compare KRUST with other systems (x5). 2 The Application 2.1 The PFES expert system shell PFES (Product Formulation Expert System) is a LISP expert system shell <ref> [9] </ref>. As the name suggests, the shell is designed for the formulation or synthesis of a solution to a problem, so it differs in some ways from shells designed for analytic tasks such as diagnosis.
Reference: [10] <author> David C. Wilkins, </author> <title> `Knowledge base refinement as improving an incorrect and incomplete domain theory', in Machine Learning Volume III, </title> <editor> eds., Y. Kodratoff and R. S. Michalski, </editor> <volume> 493513, </volume> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> (1990). </year> <month> 6 </month>
Reference-contexts: We now discuss in more detail features of KRUST which we believe are particularly significant. * It refines shells having a variety of control strategies. Some other systems can reason about a shell's control strategy (e.g., Odysseus <ref> [10] </ref> makes use of meta-rules to guide the learning of new object rules) but they are often tied to a particular shell, so are not generally applicable (e.g., Odysseus refines Minerva KBSs). * It can be applied to a wide range of shells.
References-found: 10

