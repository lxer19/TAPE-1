URL: ftp://ftp.cs.rutgers.edu/pub/allender/focs94.strauss.neat.ps.Z
Refering-URL: http://www.cs.rutgers.edu/~allender/publications/
Root-URL: http://www.cs.rutgers.edu
Email: allender@cs.rutgers.edu  mstrauss@math.rutgers.edu  
Title: Measure on Small Complexity Classes, with Applications for BPP  
Author: Eric Allender Martin Strauss 
Note: S ffi&lt;* DTIME(2 n ffi which is the best that can be achieved without showing that BPP is properly contained in E. A number  
Address: New Brunswick, NJ 08903  New Brunswick, NJ 08903  
Affiliation: Department of Computer Science Rutgers University  Department of Mathematics Rutgers University  
Abstract: We present a notion of resource-bounded measure for P and other subexponential-time classes. This generalization is based on Lutz's notion of measure, but overcomes the limitations that cause Lutz's definitions to apply only to classes at least as large as E. We present many of the basic properties of this measure, and use it to explore the class of sets that are hard for BPP. Bennett and Gill showed that almost all sets are hard for BPP; Lutz improved this from Lebesgue measure to measure on ESPACE. We use our measure to improve this still further, showing that for all * &gt; 0, almost every set in E * is hard for BPP, where E * = of related results are also obtained in this way. 
Abstract-found: 1
Intro-found: 1
Reference: [A90] <author> E. Allender, </author> <title> Oracles vs proof techniques that do not relativize, </title> <booktitle> Proc. SIGAL International Symposium on Algorithms, Lecture Notes in Computer Science 450, </booktitle> <year> 1990, </year> <pages> pp. 39-52. </pages>
Reference-contexts: When one is dealing with extremely weak models of computation, the question of how to provide access to the oracle is often rather controversial. (A survey of papers discussing the issues involved may be found in <ref> [A90] </ref>.) It is easy to see that, for instance, if one were to use the so-called "Ruzzo-Simon-Tompa" relativiza-tion method [RST], then there are oracles A relative to which P A would have measure zero in P A , and thus this does not constitute a meaningful notion of measure on P
Reference: [AR] <author> E. Allender and R. Rubinstein, </author> <title> P-printable sets, </title> <journal> SIAM J. Comp. </journal> <month> 17 </month> <year> (1988) </year> <month> 1193-1202. </month>
Reference: [AS] <author> E. Allender and M. Strauss, </author> <title> Towards a Measure for P, </title> <type> DIMACS Technical Report 94-14, </type> <year> 1994. </year>
Reference-contexts: It unfortunately seems quite difficult to verify that P itself does not have measure zero (which would violate Measure Axiom 3). This is discussed in more detail in <ref> [AS] </ref>, but the central problem lies with an observation made previously in [M]: the binary sequences that are constructible in DTIME (log O (1) n) correspond not to sets in P, but rather to "word-decreasing self-reducible" sets, some of which are hard for E [Ba].
Reference: [AS2] <author> E. Allender and M. Strauss, </author> <note> in preparation. </note>
Reference-contexts: We will construct a sparse set in P that is not covered by d. For clarity of exposition, assume here that d = ^ d r ; the general case is not significantly more complicated. (Also, it is shown in <ref> [AS2] </ref> that any (P) null cover can be replaced by one satisfying this condition; this is discussed more in Subsection 2.5.) First we show that for any word w, if i is the maximum element of G d;jwj , then d (w [0::i]) = d (w [0::j]) for any j in <p> We show in <ref> [AS2] </ref> that, in fact, only two notions of measure on P can be defined by varying these parameters. It turns out that any null set can be covered by an exactly-computable martingale, but surprisingly, assuming any of the other niceness conditions is equivalent to assuming all of them. <p> It turns out that any null set can be covered by an exactly-computable martingale, but surprisingly, assuming any of the other niceness conditions is equivalent to assuming all of them. That is, it is shown in <ref> [AS2] </ref> that the notion of measure defined in this paper is equivalent to the definition that results from having the measure-zero sets be covered in the limit by exactly-computable conservative martingales, where the machines that compute the martingales are even more limited than the machines that are considered in this paper. <p> On the other hand, SPARSE is covered (in the lim sup sense) by a non-conservative martingale, so two distinct notions of measure do result. It is also shown in <ref> [AS2] </ref> that the plogon measure (PSPACE) of [M] is strictly richer that the conservative version of our space measure, but (PSPACE) is incomparable with the nonconservative version of our space measure.
Reference: [AJ] <author> C. Alvarez and B. Jenner, </author> <title> On Dlogtime and Polylogtime reductions, </title> <booktitle> Proc. 11th STACS, Lecture Notes in Computer Science 775, </booktitle> <year> 1994. </year>
Reference-contexts: For instance, to define a measure on P, one would consider density functions computed in DTIME (log O (1) n). This fails to work, because * The usual convention (see, e.g., <ref> [AJ] </ref>) for having sublinear-time Turing machines compute some function f is to have them recognize the language fx; i; b : bit i of f (x) is bg.
Reference: [Ba] <author> J. Balcazar, </author> <note> Self-Reducibility, Journal of Computer and System Sciences 41 (1990) 367-388. </note>
Reference-contexts: is discussed in more detail in [AS], but the central problem lies with an observation made previously in [M]: the binary sequences that are constructible in DTIME (log O (1) n) correspond not to sets in P, but rather to "word-decreasing self-reducible" sets, some of which are hard for E <ref> [Ba] </ref>. This motivates our notion of limiting the dependency set size, which allows us to obtain subexponential bounds on the com plexity. 2.2 Formal Definitions of the Measure The preceding paragraphs motivate some detailed definitions of a class of functions computed by sublinear-time Turing machines.
Reference: [BB] <author> J. Balcazar and R. </author> <title> Book, Sets with small generalized Kolmogorov complexity, </title> <note> Acta Informatica 23 (1986) 679-688. </note>
Reference-contexts: A closer look at this argument also shows that the sparse set that is constructed is, in fact, P-printable ([HY],[AR]), and hence also the class K [log, poly] of languages containing only strings of low time-bounded Kolmogorov complexity <ref> [BB, HH] </ref> does not have measure zero in P. In contrast, a direct argument shows that for all k, the set of n k -sparse languages (including the set of all tally languages) is (P)-null.
Reference: [BG] <author> C. Bennett and J. Gill, </author> <title> Relative to a random oracle, P(A) 6= NP(A) 6= Co-NP(A) with probability 1, </title> <journal> SIAM J. Comput. </journal> <month> 10 </month> <year> (1981) </year> <month> 96-113. </month>
Reference-contexts: The set studied in Section 3 is shown to be null in the most restrictive sense of measure, so the results of that section hold for all the other measures mentioned here. 3 Hard Sets for BPP It was shown in <ref> [BG] </ref> that for almost every A, BPP A = P A . In [L93] it was shown that almost every set in ESPACE has this property, and thus in particular almost every such set is hard for BPP. <p> That is, A is not only hard for BPP, but it is hard because it "looks random." It follows from <ref> [BG] </ref> that almost all sequences are pseudorandom sequences for BPP. Theorem 16 Almost every A 2 ESPACE is a pseudorandom sequence for BPP. Proof.
Reference: [Bu] <author> S. R. Buss, </author> <title> The Boolean formula value problem is in ALOGTIME, </title> <booktitle> Proc. 19th ACM Symposium on Theory of Computing, </booktitle> <year> 1987, </year> <pages> pp. 123-131. </pages>
Reference: [HH] <author> J. Hartmanis and L. Hemachandra, </author> <title> On sparse oracles separating feasible complexity classes, </title> <note> Information Processing Letters 28 (1988) 291-296. </note>
Reference-contexts: A closer look at this argument also shows that the sparse set that is constructed is, in fact, P-printable ([HY],[AR]), and hence also the class K [log, poly] of languages containing only strings of low time-bounded Kolmogorov complexity <ref> [BB, HH] </ref> does not have measure zero in P. In contrast, a direct argument shows that for all k, the set of n k -sparse languages (including the set of all tally languages) is (P)-null.
Reference: [HY] <author> J. Hartmanis and Y. Yesha, </author> <title> Computation times of NP sets of different densities, </title> <note> Theoretical Computer Science 34 (1984) 17-32. </note>
Reference: [JL] <author> D. Juedes and J. Lutz, </author> <title> The complexity and distribution of hard problems, </title> <booktitle> Proc. 34th FOCS Conference, </booktitle> <pages> pp. 177-185, </pages> <year> 1993. </year>
Reference-contexts: Lutz and Juedes <ref> [JL] </ref> studied "weakly complete" sets in E, which are sets in E that are hard for more than a measure-zero subset of E. * Many separation results and hierarchy theorems in complexity theory have stronger versions provable in the context of resource-bounded measure. <p> For example, the p m - complete sets are a measure-zero subset of E <ref> [JL] </ref>, and DTIME (2 cn ) is a measure-zero subset of E [L92]. However, for many other separations, no corresponding measure result is known. Often, as in [JL], when a measure-theoretic strengthening of a separation result is possible, the proof gives enlightening addi tional information concerning the complexity classes involved. * <p> For example, the p m - complete sets are a measure-zero subset of E <ref> [JL] </ref>, and DTIME (2 cn ) is a measure-zero subset of E [L92]. However, for many other separations, no corresponding measure result is known. Often, as in [JL], when a measure-theoretic strengthening of a separation result is possible, the proof gives enlightening addi tional information concerning the complexity classes involved. * Unproven but plausible hypotheses such as "P 6= NP" or the stronger hypothesis "the polynomial hierarchy is infinite" provide useful information concerning complexity-theoretic propositions. (That is, "X
Reference: [JL2] <author> D. Juedes and J. Lutz, </author> <title> Weak completeness in E and E 2 , manuscript. </title>
Reference-contexts: Several of the proofs of <ref> [JLM, JL2, M] </ref> showing that their notion of measure is robust under these changes do not translate directly to our setting on small measure, which raises the spectre that each of the 2 5 combinations of the niceness conditions listed above (not counting additional choices concerning providing the input length, etc.)
Reference: [JLM] <author> D. Juedes, J. Lutz and E. Mayordomo, </author> <type> personal communication. </type>
Reference-contexts: Several of the proofs of <ref> [JLM, JL2, M] </ref> showing that their notion of measure is robust under these changes do not translate directly to our setting on small measure, which raises the spectre that each of the 2 5 combinations of the niceness conditions listed above (not counting additional choices concerning providing the input length, etc.)
Reference: [KM] <author> S. Kautz and P. Milterson, </author> <title> Relative to a random oracle, NP is not small, </title> <booktitle> Proc. 9th Structure in Complexity Theory Conference, </booktitle> <pages> pp. 162-174, </pages> <year> 1994. </year> <month> 13 </month>
Reference-contexts: erly contained in DTIME (2 log O (1)n ), it is easy to show that if NTIME (log O (1) n) has measure zero in DTIME (2 log O (1)n ), then NP has measure zero in DTIME (2 n O (1) ), which seems to be an unlikely consequence <ref> [KM, L93a] </ref>. Of course, proving that NP does not have measure zero in DTIME (2 n O (1) ) entails proving that P 6= NP.
Reference: [L90a] <author> J. Lutz, </author> <title> Category and measure in com-plexity classes, </title> <journal> SIAM J. Comput 19 (1990), </journal> <pages> 1100-1131. </pages>
Reference-contexts: 1 Introduction Resource-bounded measure theory was introduced in <ref> [L90a] </ref> and has proved to be a useful tool in complexity theory. Among the reasons for studying resource-bounded measure, we mention the following: * The probabilistic method can be applied only if there is a meaningful notion of probability on the underlying space.
Reference: [L90] <author> J. Lutz, </author> <title> Pseudorandom Sources for BPP. </title> <journal> J. Computer and System Sciences, </journal> <volume> 41 (1990), </volume> <pages> 307-320. </pages>
Reference-contexts: We do not know if the condition of Theorem 15 holds also for PSPACE or any E * . 4 Pseudorandom Sources In <ref> [L90] </ref>, Lutz proposed a notion of source for BPP. He gave a criterion for a particular sequence to be useful as a substitute for the sequence of in dependent unbiased coin flips used by a BPP machine. <p> This implies that a random sequence of coin flips is a source with probability 1. Hardness If the bits of a source can be obtained in polynomial time, then P = BPP: The definition in <ref> [L90] </ref> captures the first two properties, but lacks the third, as one can construct sources in AC 0 without showing P = BPP [S]. We seek an alternate criterion for a particular computable sequence to be "random enough." We will capture universality, abundance, and hardness. <p> Theorem 16 is in some sense analogous to the main result of <ref> [L90] </ref>, but note that in contrast to [L90], we can make a limited claim of optimality, in the following sense. Theorem 16 shows that there are sources in DTIME . <p> Theorem 16 is in some sense analogous to the main result of <ref> [L90] </ref>, but note that in contrast to [L90], we can make a limited claim of optimality, in the following sense. Theorem 16 shows that there are sources in DTIME .
Reference: [L92] <author> J. Lutz, </author> <title> Almost Everywhere High Nonuniform Complexity, </title> <journal> Journal of Computer and System Sciences 44 (1992), </journal> <pages> pp. 220-258. </pages>
Reference-contexts: For example, the p m - complete sets are a measure-zero subset of E [JL], and DTIME (2 cn ) is a measure-zero subset of E <ref> [L92] </ref>. However, for many other separations, no corresponding measure result is known. <p> For more details, consult <ref> [L92] </ref>. The intuition behind Lutz's formulation of resource-bounded measure is that a measure-zero set is a set such that, for all k, the set can be covered by a collection of intervals whose sizes sum to 2 k , where the "intervals" are easy to compute in some sense. <p> The subscripts are natural numbers. 2. The argument is considered a partial charac teristic sequence of a language. 3. d () (w) = 2 : (For Lutz's measure, this definition is equivalent to the definition in <ref> [L92] </ref>; see also Subsection 2.5.) A density-system is called an n-DS according to the number of subscripts. <p> In order to justify his claim that the notion he defines does, in fact, constitute a reasonable notion of measure on a complexity class X, Lutz <ref> [L92] </ref> notes that if is chosen to be the class of all functions, then his definitions are equivalent to Lebesgue measure, and he also formulates three "measure axioms" that his system satisfies: M 1 Easy unions of null sets are null. M 2 Singleton sets of easy languages are null. <p> Note that if the functions in F are at least exponential, then (C) = (C), and hence our definitions coincide with those of <ref> [L92] </ref> for complexity classes at least as large as E. 2 If f is a function in (C), where f : f0; 1g fl ! f0; 1g, then f defines a constructor ffi, where ffi (w) = wf (w). <p> This gives rise to the class R ((C)), which is the class of languages whose characteristic sequences are given by some constructor in (C). The definitions presented above were designed to maintain the following important property of the system developed in <ref> [L92] </ref>: Proposition 1 R ((C)) = C. Proof. <p> Our approach to this problem is to have the length of the input be given explicitly as an argument to the machine. We follow the (useful) convention of <ref> [L92] </ref> that "subscripts" to density functions are presented in unary; however the reader should note that providing the length of a unary argument obviates any need to provide the argument itself. We continue to determine the complexity as if the subscripts were presented in unary. <p> For example, if C is taken to be E, then (C) = (C) is the class of functions computed in polynomial time, and if X is a measure-zero subset of E, we would express that as (E) (X) = 0, while <ref> [L92] </ref> would express this as p (X) = 0. Theorem 4 (C) (C) 6= 0. Proof. (of Theorem 2). <p> If ^ d is computable in time f (log n) with dependency set size also bounded by f (log n), then ^ d 0 is computable in time O (log n (f (log n)) 2 ), and is in (C) by the closure properties assumed of F . 5 Modifying <ref> [L92] </ref>, one can let = j=0 and show jd 0 k (w) j and j ^ d 0 k;r (w)j are each at most 2 (r+1) : Proof. (of Theorem 4). <p> We show that if d is any (C)-computable density function with d () &lt; 1 then we can construct a language in C not covered by d: As in <ref> [L92] </ref>, find q; l such that d () &lt; q &lt; q + 2 l 1: Let a (x) jxj + l + 3; and define the desired language L by ffi (w) = 1 if ^ d a (w) (w0) &gt; ^ d a (w) (w) + 2 1a (w) <p> Note that ffi is clearly a constructor in (C), and thus defines a language L in C. Finally, we have to show L is not covered by d; i.e., for all n we have d (ffi n ()) &lt; 1: Here the inductive argument of <ref> [L92] </ref> works unchanged. Note that one can also define a measure analogous to our measure on time-bounded classes, using space bounds, as opposed to time bounds. In this way, one can obtain a measure (PSPACE) for PSPACE. <p> Then (E * ) (E ) = 0: It is also important for our applications to note that the "Borel-Cantelli-Lutz Lemma" (see <ref> [L92] </ref>) holds also for our measure: Lemma 8 Let C = DTIME (F ), where F contains no superexponential function. Let fX j g be a collection of (not-necessarily null) sets, where X j is covered by d j for d 2 (C). <p> (a "modulus of convergence") is an increasing function of the form f (log n) for some f 2 F , and for all k we have 1 X d j () &lt; 2 k : Then (C) ( t=0 j=t 6 The proof of this is the same as in <ref> [L92] </ref>, but it is important here to note that for subex-ponential complexity classes it seems unavoidable that the modulus be sublinear. Thus, for the Borel-Cantelli-Lutz Lemma to be applied to subexponential-time classes, the sets X j must be covered by a "rapidly-vanishing" collection of covers. <p> The restriction that F contain no su-perexponential functions is necessary; the claim is in fact false for F = 2 2 O (n) . (The proof in <ref> [L92] </ref> requires the resource-bounding functions to be closed under composition.) It is possible to formulate conditions on m and d that allow the lemma to apply to more general classes of resource bounds. <p> Although our Definition 1 in this paper 4 requires density functions to be conservative, other papers, such as <ref> [L92] </ref>, for example, require density functions to satisfy only the weaker condition d (w) 2 . * If the density system d k is of the form d k = 2 k d for some density function d, then we say that d k is derived from the martingale d. (Many
Reference: [L93] <author> J. Lutz, </author> <title> A Pseudorandom Oracle Characterization of BPP, </title> <journal> SIAM J. Comput., </journal> <volume> 22 1993, </volume> <pages> 1075-1086. </pages>
Reference-contexts: In <ref> [L93] </ref> it was shown that almost every set in ESPACE has this property, and thus in particular almost every such set is hard for BPP. <p> In this section, we improve the results of <ref> [L93] </ref> by showing that almost every set in PSPACE and in E * for * &gt; 0 is hard for BPP, because almost every such set "looks random enough". As in [L93], we make use of the pseudorandom generators of [NW], although our construction differs from that of [L93] in several <p> In this section, we improve the results of <ref> [L93] </ref> by showing that almost every set in PSPACE and in E * for * &gt; 0 is hard for BPP, because almost every such set "looks random enough". As in [L93], we make use of the pseudorandom generators of [NW], although our construction differs from that of [L93] in several fundamental ways. Theorem 11 For almost every A 2 E * we have BPP P A : Proof. <p> results of <ref> [L93] </ref> by showing that almost every set in PSPACE and in E * for * &gt; 0 is hard for BPP, because almost every such set "looks random enough". As in [L93], we make use of the pseudorandom generators of [NW], although our construction differs from that of [L93] in several fundamental ways. Theorem 11 For almost every A 2 E * we have BPP P A : Proof. Define H to be the set of languages L of hardness 2 n . <p> Lutz: Corollary 14 Let C be any of the classes E, EXP, PSPACE or E * : If (C) (NP j C) 6= 0 then BPP P NP : We also show that almost every set A in E satisfies BPP A = P A , improving the result of <ref> [L93] </ref> from ESPACE to E. Theorem 15 For almost every A 2 E; BPP A = P A . Proof. <p> We have remedied that situation by providing a notion of measure that does apply to these classes, and we have used this measure to show, among other things, that almost all sets in E * are hard for BPP, substantially improving a result of <ref> [L93] </ref>. It is worth noting that Lutz's definitions of resource-bounded measure have evolved somewhat over the years. Similarly, we may expect that as experience is gained, alternative formulations of measure on small time classes may arise.
Reference: [L93a] <author> J. Lutz, </author> <title> The quantitative structure of exponential time, </title> <booktitle> Proc. 8th Structure in Complexity Theory Conference, </booktitle> <pages> pp. 158-175, </pages> <year> 1993. </year>
Reference-contexts: gives enlightening addi tional information concerning the complexity classes involved. * Unproven but plausible hypotheses such as "P 6= NP" or the stronger hypothesis "the polynomial hierarchy is infinite" provide useful information concerning complexity-theoretic propositions. (That is, "X ) the polynomial hierarchy collapses" is taken as evidence for :X.) Lutz <ref> [L93a] </ref> argues that the hypothesis "NP is not a measure zero subset of DTIME (2 n O (1) )" (a stronger hypothesis than P 6= NP) is plausible and offers a great deal of explanatory power. <p> erly contained in DTIME (2 log O (1)n ), it is easy to show that if NTIME (log O (1) n) has measure zero in DTIME (2 log O (1)n ), then NP has measure zero in DTIME (2 n O (1) ), which seems to be an unlikely consequence <ref> [KM, L93a] </ref>. Of course, proving that NP does not have measure zero in DTIME (2 n O (1) ) entails proving that P 6= NP.
Reference: [LM] <author> J. Lutz and E. Mayordomo, </author> <title> Measure, stochasticity, and the density of hard languages, </title> <journal> SIAM J. Comput. </journal> <month> 23 </month> <year> (1994) </year> <month> 762-779. </month>
Reference-contexts: suf ficient to show that the class of sets that do fl Research supported by NSF grant CCR-9204874. not have property Q has measure zero in E. (This sometimes presents itself as an easier task than explicitly building a set in E having property Q.) For example, Lutz and Mayor-domo <ref> [LM] </ref> were able to use this version of the probabilistic method to prove stronger results concerning the density of hard lan guages than had been proved previously. * Certain interesting notions of intractability can be formulated only in the context of resource-bounded measure.
Reference: [M] <author> E. Mayordomo, </author> <title> Contributions to the Study of Resource-Bounded Measure, </title> <type> PhD Thesis, </type> <institution> Universitat Politecnica de Catalunya, Barcelona, </institution> <year> 1994. </year> <note> See also [M2], in which a preliminary version of the PSPACE measure appears. </note>
Reference-contexts: This section concludes with a discussion of how natural and robust our definition of measure is, and a comparison of it to the work of Mayordomo <ref> [M, M2] </ref>, where a measure on PSPACE is defined. Section 3 presents our proof that sets that are hard for BPP are abundant in E * for every * &gt; 0, as well as related results for PSPACE. Section 4 presents our results concerning pseudorandom sources for BPP. <p> It unfortunately seems quite difficult to verify that P itself does not have measure zero (which would violate Measure Axiom 3). This is discussed in more detail in [AS], but the central problem lies with an observation made previously in <ref> [M] </ref>: the binary sequences that are constructible in DTIME (log O (1) n) correspond not to sets in P, but rather to "word-decreasing self-reducible" sets, some of which are hard for E [Ba]. <p> Mayordomo has previously defined a notion of measure for PSPACE, where, rather than limiting the size of the dependency sets for the machines computing the density functions, instead she requires that the density functions be computed by polylogspace-bounded machines with one-way access to the input <ref> [M] </ref>. Let us denote her measure (PSPACE) . 2.4 Elementary Facts Concerning the Measure We have established that our notion of measure satisfies the measure axioms, but the reader may wonder if enough sets are measurable for the measure to be useful in any setting. <p> Observe also that the proof of Theorem 9 works equally well for space-bounded machines, and thus SPARSE is not a measure zero subset of PSPACE using the (PSPACE) measure. On the 7 other hand, SPARSE is easily seen to be null us-ing the (PSPACE) measure of <ref> [M] </ref>. The subject of the relation between our PSPACE measure and that of [M] is taken up again in Section 2.5. Theorem 9 also has the following corollary. Theorem 10 P-uniform AC 0 is not (P)- measurable. Proof. <p> On the 7 other hand, SPARSE is easily seen to be null us-ing the (PSPACE) measure of <ref> [M] </ref>. The subject of the relation between our PSPACE measure and that of [M] is taken up again in Section 2.5. Theorem 9 also has the following corollary. Theorem 10 P-uniform AC 0 is not (P)- measurable. Proof. <p> Several of the proofs of <ref> [JLM, JL2, M] </ref> showing that their notion of measure is robust under these changes do not translate directly to our setting on small measure, which raises the spectre that each of the 2 5 combinations of the niceness conditions listed above (not counting additional choices concerning providing the input length, etc.) <p> On the other hand, SPARSE is covered (in the lim sup sense) by a non-conservative martingale, so two distinct notions of measure do result. It is also shown in [AS2] that the plogon measure (PSPACE) of <ref> [M] </ref> is strictly richer that the conservative version of our space measure, but (PSPACE) is incomparable with the nonconservative version of our space measure. <p> One can also define a measure on the P k " P k classes, by using covers d having L k machines such that some path outputs, and all non-aborting paths output d (w): (For related observations concerning exponential-time classes, see also <ref> [M] </ref>). 5 In most other settings, allowing only short queries to the oracle does not provide a satisfactory notion of rela-tivization, because one cannot reduce the set A to itself (because one cannot write the input on the query tape). 12 5.2 Summary Lutz's resource-bounded measure forms the basis for a
Reference: [M2] <author> E. Mayordomo, </author> <title> Measuring in PSPACE, </title> <booktitle> to appear in Proc. International Meeting of Young Computer Scientists '92, Topics in Computer Science series, </booktitle> <publisher> Gordon and Breach. </publisher>
Reference-contexts: This section concludes with a discussion of how natural and robust our definition of measure is, and a comparison of it to the work of Mayordomo <ref> [M, M2] </ref>, where a measure on PSPACE is defined. Section 3 presents our proof that sets that are hard for BPP are abundant in E * for every * &gt; 0, as well as related results for PSPACE. Section 4 presents our results concerning pseudorandom sources for BPP.
Reference: [NW] <author> N. Nisan and A. Widgerson, </author> <title> Hardness vs. Randomness, </title> <booktitle> Proc. 29th Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <year> (1988), </year> <pages> 2-11. </pages>
Reference-contexts: In this section, we improve the results of [L93] by showing that almost every set in PSPACE and in E * for * &gt; 0 is hard for BPP, because almost every such set "looks random enough". As in [L93], we make use of the pseudorandom generators of <ref> [NW] </ref>, although our construction differs from that of [L93] in several fundamental ways. Theorem 11 For almost every A 2 E * we have BPP P A : Proof. Define H to be the set of languages L of hardness 2 n . <p> This is a "partially" relativized version of <ref> [NW, Theorem 3] </ref>. | Let 0 &lt; &lt; minf*; 1=3g, and let b &gt; 1=*: Let F (A) denote the language fu : 0 2 bjuj u 2 Ag: Then F (A) 2 E A : We will show that for almost all A 2 E * ; F (A) has
Reference: [RS] <author> K. Regan and D. Sivakumar, </author> <title> On Resource-bounded Measure and Pseudorandom Generators, </title> <type> manuscript. </type>
Reference-contexts: functions satisfy the measure axioms even on P-uniform AC 0 , and hence notions of measure can be defined even on intuitively small subsets of P. (Recently and independently, Regan and Sivakumar have given a very different argument showing that non-uniform AC 0 does not have measure zero in P <ref> [RS] </ref>.) We do not view this limitation of our measure as a drawback. Indeed, we conjecture that even NTIME (log n) (a proper subset of Dlogtime-uniform AC 0 ) is not a measure-zero subset of P.
Reference: [RST] <author> W. Ruzzo, J. Simon, and M. Tompa, </author> <title> Space-bounded hierarchies and probabilistic computation, </title> <journal> J. Comput. and System Sci. </journal> <month> 28 </month> <year> (1984) </year> <month> 216-230. </month>
Reference-contexts: extremely weak models of computation, the question of how to provide access to the oracle is often rather controversial. (A survey of papers discussing the issues involved may be found in [A90].) It is easy to see that, for instance, if one were to use the so-called "Ruzzo-Simon-Tompa" relativiza-tion method <ref> [RST] </ref>, then there are oracles A relative to which P A would have measure zero in P A , and thus this does not constitute a meaningful notion of measure on P A .
Reference: [S] <author> M. Strauss, </author> <title> Normal numbers and sources for BPP, </title> <booktitle> Proc. 12 th STACS conference, </booktitle> <year> (1995), </year> <note> to appear. 14 </note>
Reference-contexts: Hardness If the bits of a source can be obtained in polynomial time, then P = BPP: The definition in [L90] captures the first two properties, but lacks the third, as one can construct sources in AC 0 without showing P = BPP <ref> [S] </ref>. We seek an alternate criterion for a particular computable sequence to be "random enough." We will capture universality, abundance, and hardness.
References-found: 27

