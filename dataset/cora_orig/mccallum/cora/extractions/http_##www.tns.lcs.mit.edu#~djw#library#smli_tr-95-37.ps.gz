URL: http://www.tns.lcs.mit.edu/~djw/library/smli_tr-95-37.ps.gz
Refering-URL: http://www.tns.lcs.mit.edu/~djw/library/
Root-URL: 
Email: raphael.rom@eng.sun.com  
Title: -1 The OPENET Architecture  
Author: Israel Cidon Tony Hsiao Asad Khamisy Abhay Parekh Raphael Rom Moshe Sidi 
Address: M/S 29-01 2550 Garcia Avenue Mountain View, CA 94043  
Note: email address:  
Date: December 1995  
Pubnum: SMLI TR-95-37  
Abstract: ATM networks will soon be moving from the experimental stage of test-beds to a commercial state where production networks are deployed and operated. The progress of ATM networks appears to be at risk due to the lack of a universal, open, and efficient ATM network control platform. The emerging Private Network to Network Interface (PNNI) standard introduces a control platform that can be used as an internetwork and possibly as an intra-network solution. However, the current PNNI still falls short in providing an acceptable universal solution, due to lack of performance optimizations for intra-network operation, limited functionality, and the lack of open interfaces for future functional extensions and services. OPENET is a common portable, open, and high-performance network control platform based on performance and functional enhancements to the PNNI standard. It is vendor-independent, scalable (in terms of network size and volume of calls), high-performance (in terms of call processing latency and throughput), and extensible (in terms of integrating customer-specific and value-added services). OPENET is designed as an extension to current PNNI so it can serve as a next generation PNNI. It is compatible with PNNI in the internetworking environment allowing large networks to be partitioned according to natural topological or organizational boundaries rather than the artificial use of internet-work interfaces at vendor boundaries. This report describes the OPENET architecture. The major novelties of the OPENET architecture compared to the current PNNI are: the use of native ATM switching for the dissemination of utilization updates; lightweight call setup; take down and modification signaling; a new signaling paradigm that better supports fast reservation and multicast services; and a rich signaling infrastructure that enables the development of augmented services (such as mobility, directory, etc.), leveraging the existing functions of the network control platform. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ATM Forum, </author> <title> ATM User-Network Interface Specification, version 3.0, </title> <publisher> Prentice Hall 1993. </publisher>
Reference-contexts: This function requires that all control information issued by the user (typically carried over VC #5) is diverted by the entry switch to its CP for interpretation and action. At this time, user support is dictated (and limited) by the current ATM standard (see the ATM Forums UNI specifications <ref> [1] </ref>). As it stands today, users can request a quality of service while providing a description of traffic intensity for that class. This request is presented to the network, namely the source CP, which must map the request to the internal representation of the network control. <p> The call setup procedure for OPENET is described by a sequence of messages exchanged among the S_CP, I_CPs, and D_CP, which is triggered by the calling party (caller) on the user side UNI. The caller sends a SETUP message (defined by UNI 4.0, see <ref> [1] </ref>) to the CP on the network side of the UNI (S_CP). This message must include the ATM user cell rate, QoS parameter, and called party number, etc., and optionally include AAL parameters, calling party number, etc.
Reference: [2] <author> R. Handel, M. Huber and S. Schroder, </author> <title> ATM Networks, Concepts, Protocols, Applications, second edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference: [3] <author> PNNI SWG, </author> <title> PNNI Draft Specification ATM Forum contribution 94-0471R7. </title>
Reference-contexts: SYN SYN FORE FORE FORE GDC GDC GDC SYN NEWB NEWB NEWB IBM&lt; PNNI Network Control Domain UNI The Case for an Open Network Control Platform 5 It is assumed that the inter-domain protocol will be the set of PNNI signals which are currently under development at the ATM Forum <ref> [3] </ref>. PNNI appears to be designed and optimized for an internetworking protocola set of conventions that is employed when two different (by choice) networks (we will term them subnetworks) are to be connected. <p> A full description of the utilization update can be found below. 6.1 Highlights of PNNI topology update In the following, we sketch the PNNI topology update mechanism (see <ref> [3] </ref> for details). Each CP triggers periodically or upon a local change topology updates which are marked by increasing sequence numbers (4 bytes), each by one increment from the one previously used. Separate sequence numbers are associated with each topological item (PTSE). <p> A more complete description as well as proofs of correctness can be found in Section 7.0 and <ref> [3] </ref> [7]. 6.2 Utilization update The utilization update is an iterative process triggered as a result of a major change in a dynamic database item, and conveys information which is crucial to the successful establishment or proper blocking of arriving calls. <p> For example, PNNI specifies a hierarchy of Peer groups, which form administrative or functional domains. OPENET supports this hierarchy. PNNI defines at the Hello protocol which OPENET fully supports. Details on these can be found in [17] and <ref> [3] </ref>.
Reference: [4] <author> R. Cohen, B. Patel, F. Schaffa and M. Wiilebeek-LeMair, </author> <title> The Sink Tree Paradigm: Con-nectionless Traffic Support on ATM LANs, </title> <booktitle> Proceedings of IEEE INFOCOM94, </booktitle> <pages> pp. 821-828, </pages> <address> Toronto, Canada, </address> <month> June </month> <year> 1994. </year> <title> c References 66 </title>
Reference-contexts: Both of the above connection types permit only a single cell source to be multiplexed at a receiver. Therefore, there is no problem with fragmenting and reassembling larger source data units using one of the available adaptation layers. In <ref> [4] </ref>, another possible structure we term a source tree is described. This connection carries multiple streams of cells from multiple sources to a common destination.
Reference: [5] <author> I. Cidon, I. Gopal, M. Kaplan and S. Kutten, </author> <title> A Distributed Control Architecture of High-Speed Networks, </title> <journal> IEEE Trans. on Communications, </journal> <volume> Vol. 43, No. 5, </volume> <pages> pp. 1950-1960, </pages> <month> May </month> <year> 1995. </year>
Reference: [6] <author> B. Awerbuch, I. Cidon and S. Kutten, </author> <title> Communication-Optimal Maintenance of Replicated Information, </title> <booktitle> Proceedings of 31st Ann. Symposium on Foundation of Computer Science (St. </booktitle> <address> Louis, MO), </address> <pages> pp. 492-502, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: It uses essentially the same basic scheme which has been successfully employed by the Internet for over 20 years. This advantage overcomes the fact that Topology/Utilization Update and Call Routing 58 there might be theoretical improvements to the OSPF update algorithm <ref> [6] </ref>. Moreover, even the best known topology update algorithms (which by definition must operate under topological changes) have a considerable higher latency and overhead than our proposed utilization update algorithm, which makes the argument of separating both still valid.
Reference: [7] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks, second edition, </title> <publisher> Prentice Hall, </publisher> <year> 1992. </year>
Reference-contexts: Therefore, we use the standard PNNI topology update methods which in turn leverages the topology update design of the OSPF (Open Shortest Path First) used to assist IP routing in router-based networks [9] [14] <ref> [7] </ref>. It is implemented using the exchange of packets between neighboring nodes utilizing a reliable hop-by-hop ooding algorithm for the propagation of the topology database items. It is not optimized in terms of latency and overhead. <p> A more complete description as well as proofs of correctness can be found in Section 7.0 and [3] <ref> [7] </ref>. 6.2 Utilization update The utilization update is an iterative process triggered as a result of a major change in a dynamic database item, and conveys information which is crucial to the successful establishment or proper blocking of arriving calls.
Reference: [8] <author> I. Cidon and I.S. Gopal, PARIS: </author> <title> An Approach to Integrated High-Speed Private Networks, </title> <journal> International Journal of Digital and Analog Cabled Systems, </journal> <volume> Vol. 1, No. 2, </volume> <pages> pp. 77-86, </pages> <month> April-June </month> <year> 1988. </year>
Reference-contexts: Currently, most performance-sensitive functions of the current PNNI do not have any clear hooks for future hardware assist, in contrast to other network control designs such as PARIS <ref> [8] </ref>. Therefore, the current level of performance is not expected to be dramatically improved in the future.

References-found: 8

