URL: ftp://ftp.cs.jhu.edu/pub/barequet/papers/sin-socg94.ps.gz
Refering-URL: http://www.cs.jhu.edu/~barequet/papers.html
Root-URL: http://www.cs.jhu.edu
Title: Piecewise-Linear Interpolation between Polygonal Slices  
Author: Gill Barequet Micha Sharir 
Abstract: In this paper we present a new technique for piecewise-linear surface reconstruction from a series of parallel polygonal cross-sections. This is an important problem in medical imaging, surface reconstruction from topographic data, and other applications. We reduce the problem, as in most previous works, to a series of problems of piecewise-linear interpolation between each pair of successive slices. Our algorithm uses a partial curve matching technique for matching parts of the contours, an optimal triangulation of 3-D polygons for resolving the unmatched parts, and a minimum spanning tree heuristic for interpolating between non simply connected regions. Unlike previous attempts at solving this problem, our algorithm seems to handle successfully any kind of data. It allows multiple contours in each slice, with any hierarchy of contour nesting, and avoids the introduction of counter-intuitive bridges between contours, proposed in some earlier papers to handle interpolation between multiply connected regions. Experimental results on various complex examples, involving 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Barequet and M. Sharir, </author> <title> Filling gaps in the boundary of a polyhedron, </title> <type> Technical Report 277/93, </type> <institution> Department of Computer Science, Tel Aviv University, </institution> <year> 1993. </year>
Reference-contexts: A simplified variant of this technique has recently been used by Barequet and Sharir <ref> [1] </ref> for the totally different problem of detecting and repairing gaps in the boundary of a polyhedron, a problem which often arises in the creation of polyhedral approximations of CAD models. In the variant used in [1], as well as the one used in this paper, no motion of one curve <p> A simplified variant of this technique has recently been used by Barequet and Sharir <ref> [1] </ref> for the totally different problem of detecting and repairing gaps in the boundary of a polyhedron, a problem which often arises in the creation of polyhedral approximations of CAD models. In the variant used in [1], as well as the one used in this paper, no motion of one curve relative to the other is allowed, so the technique becomes considerably simpler. The paper is organized as follows.
Reference: [2] <author> S. Batnitzky, H.I. Price, P.N. Cook, L.T. Cook and S.J. Dwyer III, </author> <title> Three-dimensional computer reconstruction from surface contours for head CT examinations, </title> <editor> J. </editor> <booktitle> of Computer Assisted Tomography, 5 (1981), </booktitle> <pages> 60-67. </pages>
Reference-contexts: These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. <ref> [2] </ref>, Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27]. They decompose each method into its building blocks, and compared the various methods accordingly.
Reference: [3] <author> J.D. Boissonnat, </author> <title> Shape reconstruction from planar cross sections, </title> <booktitle> Computer Vision, Graphics and Image Processing, 44 (1988), </booktitle> <pages> 1-29. </pages>
Reference-contexts: Other limitations involved specific geometries. However, they suggested solutions for these limitations, which might help in certain cases, but which required some interaction with the user. Boissonnat <ref> [3] </ref> presented a totally different approach. He constructed the Delaunay triangulation for each slice, projected one triangulation onto the other, and obtained a collection of tetrahedra, aiming to maximize the sum of their volumes. This was a considerable step towards handling the case where each slice has multiple contours. <p> The entire algorithm runs on practical instances in average O ((k + ~) log (k + ~) + n + ~h 3 ) time. Here are some specific examples of the performance of the algorithm: lematic example of Boissonnat <ref> [3] </ref>. Each slice in this example contains exactly one contour. The tiled match appears in white, whereas the triangulated cleft appears in black. where the lower slice contains two contours, whereas the upper slice contains only one contour. Two long matches were found and tiled by the white triangles.
Reference: [4] <author> J.D. Boissonnat and B. Geiger, </author> <title> Three dimensional reconstruction of complex shapes based on the Delaunay triangulation, </title> <type> Technical Report 1697, </type> <institution> Inria-Sophia Antipolis, </institution> <year> 1992. </year>
Reference: [5] <author> H.N. Christiansen and T.W. </author> <title> Sederberg, Conversion of complex contour line definitions into polygonal element mosaics, </title> <journal> Computer Graphics, </journal> <volume> 13 (1978), </volume> <pages> 187-192. </pages>
Reference-contexts: These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg <ref> [5] </ref>, Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27]. <p> Figure 5 shows such a triangulation. Alternative advancing rules were described by Christiansen and Sederberg <ref> [5] </ref>, and by Ganapathy and Dennehy [10]. 4.2 Filling the Clefts After tiling the matching contour portions, we remain with the unmatched portions. These, combined with the extreme edges of the tiling sequences, form a collec tion of closed 3-D polygons, which we refer to as clefts.
Reference: [6] <author> H.E. Cline, W.E. Lorensen, S. Ludke, C.R. Crawford and B.C. Teeter, </author> <title> Two algorithms for the three-dimensional reconstruction of tomograms, </title> <journal> Medical Physics, </journal> <volume> 15 (1988), </volume> <pages> 320-327. </pages>
Reference-contexts: In the grey level case, these methods include some thresholding mechanism which decides which levels are `inside' the object and which are not. Cline et al. <ref> [6] </ref> attempted to convert directly the voxel data into a polyhedral surface, suggesting the marching cubes technique, which produced very small triangles whose size was roughly the same as that of the input voxels.
Reference: [7] <author> L.T. Cook, P.N. Cook, K.R. Lee, S. Batnitzky, B.Y.S. Wong, S.L. Fritz, J. Ophir, S.J. Dwyer III, L.R. Bigongiari and A.W. Tempelton, </author> <title> An algorithm for volume estimation based on polyhedral approximation, </title> <journal> IEEE Transactions on Biomedical Engineering, </journal> <volume> 27 (1980), </volume> <pages> 493-500. </pages>
Reference-contexts: In the full version we review these works in more detail, but since they are all inferior to our solution, in that they cannot handle arbitrary data, we omit this review here. These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. <ref> [7] </ref>, Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27].
Reference: [8] <author> A.B. Ekoule, F.C. Peyrin and C.L. Odet, </author> <title> A triangulation algorithm from arbitrary shaped multiple planar contours, </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10 (1991), </volume> <pages> 182-199. </pages>
Reference-contexts: These idea were further developed by Boissonnat and Geiger ([4], [11]). There have been a few other recent works that also attempted to handle the more general cases; these are by Kehtarnavaz and De Figueiredo [17], Kehtarnavaz, Simar and De Figueiredo [18], Ekoule, Peyrin and Odet <ref> [8] </ref>, Meyers, Skinner and Sloan [22], and by Welzl and Wolfers [30]. However, all these treatments suffered from a variety of problems, treated only certain restricted cases, and worked only in favorable situations where the two slices closely resemble each other.
Reference: [9] <author> H. Fuchs, Z.M. Kedem and S.P. Uselton, </author> <title> Optimal surface reconstruction from planar contours, </title> <journal> Communications of the ACM, </journal> <volume> 20 (1977), </volume> <pages> 693-702. </pages>
Reference-contexts: In the full version we review these works in more detail, but since they are all inferior to our solution, in that they cannot handle arbitrary data, we omit this review here. These works are by Keppel [19], Fuchs et al. <ref> [9] </ref>, Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. <p> The xy-projections of contours of different slices may arbitrarily overlap; we do not make any distinction in the treatment of contours which fully overlap, partially overlap or do not overlap at all. Many of the previous works, such as [19], <ref> [9] </ref>, [26] and [10], either prohibit the creation of triangles in the same slice, or specifically define steps where this action is allowed. We do not make a distinction between triangles which connect the two slices and those which totally lie within a single slice.
Reference: [10] <author> S. Ganapathy and T.G. Dennehy, </author> <title> A new general triangulation method for planar contours, </title> <journal> ACM Transactions on Computer Graphics, </journal> <volume> 16 (1982), </volume> <pages> 69-75. </pages>
Reference-contexts: These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy <ref> [10] </ref>, and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27]. They decompose each method into its building blocks, and compared the various methods accordingly. They also describe a testbed for evaluating and comparing these techniques. <p> The xy-projections of contours of different slices may arbitrarily overlap; we do not make any distinction in the treatment of contours which fully overlap, partially overlap or do not overlap at all. Many of the previous works, such as [19], [9], [26] and <ref> [10] </ref>, either prohibit the creation of triangles in the same slice, or specifically define steps where this action is allowed. We do not make a distinction between triangles which connect the two slices and those which totally lie within a single slice. <p> Figure 5 shows such a triangulation. Alternative advancing rules were described by Christiansen and Sederberg [5], and by Ganapathy and Dennehy <ref> [10] </ref>. 4.2 Filling the Clefts After tiling the matching contour portions, we remain with the unmatched portions. These, combined with the extreme edges of the tiling sequences, form a collec tion of closed 3-D polygons, which we refer to as clefts. Finding these clefts is straightforward.
Reference: [11] <author> B. </author> <type> Geiger, </type> <institution> Construction et utilisation des modeles d'organes en vue de l'assistance au diagnostic et aux interventions chirur-gicals, </institution> <type> Ph.D. Dissertation, </type> <institution> L'Ecole des Mines de Paris, </institution> <year> 1993. </year>
Reference-contexts: Our algorithm handles successfully (and eas ily) all these `bad' examples. Boissonnat suggested a correction scheme, which either changed the geometry of one of the slices, or constructed one or two intermediate slices between the original ones. These idea were further developed by Boissonnat and Geiger ([4], <ref> [11] </ref>). There have been a few other recent works that also attempted to handle the more general cases; these are by Kehtarnavaz and De Figueiredo [17], Kehtarnavaz, Simar and De Figueiredo [18], Ekoule, Peyrin and Odet [8], Meyers, Skinner and Sloan [22], and by Welzl and Wolfers [30].
Reference: [12] <author> C. Gitlin, J. O'Rourke and V. Subramanian, </author> <title> On reconstructing polyhedra from parallel slices, </title> <type> Technical Report 025, </type> <institution> Department of Computer Science, Smith College, </institution> <address> Northamp-ton, MA, </address> <year> 1993. </year>
Reference-contexts: However, all these treatments suffered from a variety of problems, treated only certain restricted cases, and worked only in favorable situations where the two slices closely resemble each other. Finally, Gitlin, O'Rourke and Subramanian <ref> [12] </ref> prove that it is not always possible to find an interpolating polyhedron between two polygons, that lie in two parallel planes. That is, any attempted interpolation produces a self-intersecting surface.
Reference: [13] <author> L. Guibas and J. Stolfi, </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams, </title> <journal> ACM Transactions on Graphics, </journal> <volume> 4 (1985), </volume> <pages> 74-123. </pages>
Reference: [14] <author> H. Hagen, H. M uller and G.M. Nielson, </author> <title> Focus on Scientific Visualization, </title> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: We do not assume this in our approach, and we indeed get a non-intersecting interpolation when we apply our algorithm on their example. Two comprehensive reviews of many of the works on reconstructing 3D objects from cross-sections are given by Schumaker [23] and by Hagen, Muller and Nielson <ref> [14] </ref>. The first review is not restricted to piecewise-linear constructions based on polygonal slices, but also refers to parametric and tensor representations of contours, and describes volumetric and surface approaches. We propose a new approach to the interpolation problem.
Reference: [15] <author> J. Hong and H.J. Wolfson, </author> <title> An improved model-based matching method using footprints, </title> <booktitle> Proc. 9th Int. Conf. on Pattern Recognition, </booktitle> <year> 1988, </year> <pages> 72-78. </pages>
Reference-contexts: This technique was extended and used in computer vision for automatic identification of partially obscured objects in two or three dimensions, an important problem in robotics applications of computer vision, which has attracted much attention; see Hong and Wolfson <ref> [15] </ref>, Wolfson [31], and Kishon, Hastie and Wolfson [20].
Reference: [16] <author> A. Kalvin, E. Schonberg, J.T. Schwartz and M. Sharir, </author> <title> Two-dimensional, model-based, boundary matching using footprints, </title> <journal> Int. J. of Robotics Research, </journal> <volume> 5 (1986), </volume> <pages> 38-55. </pages>
Reference-contexts: See steps will be given later in the paper. For the purpose of identifying matching portions of the contours we use a partial curve matching technique, which was first suggested by Kalvin et al. <ref> [16] </ref> and by Schwartz and Sharir [24].
Reference: [17] <author> N. Kehtarnavaz and R.J.P. De Figueiredo, </author> <title> A framework for surface reconstruction from 3D contours, </title> <booktitle> Computer Vision, Graphics and Image Processing, 42 (1988), </booktitle> <pages> 32-47. </pages>
Reference-contexts: These idea were further developed by Boissonnat and Geiger ([4], [11]). There have been a few other recent works that also attempted to handle the more general cases; these are by Kehtarnavaz and De Figueiredo <ref> [17] </ref>, Kehtarnavaz, Simar and De Figueiredo [18], Ekoule, Peyrin and Odet [8], Meyers, Skinner and Sloan [22], and by Welzl and Wolfers [30].
Reference: [18] <author> N. Kehtarnavaz, L.R. Simar and R.J.P. De Figueiredo, </author> <title> A syntactic/semantic technique for surface reconstruction from cross-sectional contours, </title> <booktitle> Computer Vision, Graphics and Image Processing, 42 (1988), </booktitle> <pages> 399-409. </pages>
Reference-contexts: These idea were further developed by Boissonnat and Geiger ([4], [11]). There have been a few other recent works that also attempted to handle the more general cases; these are by Kehtarnavaz and De Figueiredo [17], Kehtarnavaz, Simar and De Figueiredo <ref> [18] </ref>, Ekoule, Peyrin and Odet [8], Meyers, Skinner and Sloan [22], and by Welzl and Wolfers [30]. However, all these treatments suffered from a variety of problems, treated only certain restricted cases, and worked only in favorable situations where the two slices closely resemble each other.
Reference: [19] <author> E. Keppel, </author> <title> Approximating complex surfaces by triangulation of contour lines, </title> <journal> IBM Journal of Research and Development, </journal> <volume> 19 (1975), </volume> <pages> 2-11. </pages>
Reference-contexts: In the full version we review these works in more detail, but since they are all inferior to our solution, in that they cannot handle arbitrary data, we omit this review here. These works are by Keppel <ref> [19] </ref>, Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. <p> The xy-projections of contours of different slices may arbitrarily overlap; we do not make any distinction in the treatment of contours which fully overlap, partially overlap or do not overlap at all. Many of the previous works, such as <ref> [19] </ref>, [9], [26] and [10], either prohibit the creation of triangles in the same slice, or specifically define steps where this action is allowed. We do not make a distinction between triangles which connect the two slices and those which totally lie within a single slice.
Reference: [20] <author> E. Kishon, T. Hastie and H. Wolfson, </author> <title> 3-D curve matching using splines, </title> <journal> J. of Robotic systems, </journal> <volume> 8 (1991), </volume> <pages> 723-743. </pages>
Reference-contexts: This technique was extended and used in computer vision for automatic identification of partially obscured objects in two or three dimensions, an important problem in robotics applications of computer vision, which has attracted much attention; see Hong and Wolfson [15], Wolfson [31], and Kishon, Hastie and Wolfson <ref> [20] </ref>. A simplified variant of this technique has recently been used by Barequet and Sharir [1] for the totally different problem of detecting and repairing gaps in the boundary of a polyhedron, a problem which often arises in the creation of polyhedral approximations of CAD models.
Reference: [21] <author> G.T. Klincsek, </author> <title> Minimal triangulations of polygonal domains, </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 9 (1980), </volume> <pages> 121-123. </pages>
Reference-contexts: For this purpose, we closely follow the dynamic pro gramming technique of Klincsek <ref> [21] </ref> for finding a poly gon triangulation in the plane, which minimizes the to tal sum of edge lengths. Let P = (v 0 ; v 1 ; : : :; v n1 ; v n = v 0 ) be the given polygon.
Reference: [22] <author> D. Meyers, S. Skinner and K. Sloan, </author> <title> Surfaces from contours: the correspondence and branching problems, </title> <booktitle> Proc. Graphics Interface '91, </booktitle> <year> 1991, </year> <pages> 246-254. </pages>
Reference-contexts: There have been a few other recent works that also attempted to handle the more general cases; these are by Kehtarnavaz and De Figueiredo [17], Kehtarnavaz, Simar and De Figueiredo [18], Ekoule, Peyrin and Odet [8], Meyers, Skinner and Sloan <ref> [22] </ref>, and by Welzl and Wolfers [30]. However, all these treatments suffered from a variety of problems, treated only certain restricted cases, and worked only in favorable situations where the two slices closely resemble each other.
Reference: [23] <author> L.L. Schumaker, </author> <title> Reconstructing 3D objects from cross-sections, </title> <editor> in: W. Dahmen, M. Gasca and C.A. Micchelli (eds.), </editor> <title> Computation of Curves and Surfaces, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1989, </year> <pages> 275-309. </pages>
Reference-contexts: We do not assume this in our approach, and we indeed get a non-intersecting interpolation when we apply our algorithm on their example. Two comprehensive reviews of many of the works on reconstructing 3D objects from cross-sections are given by Schumaker <ref> [23] </ref> and by Hagen, Muller and Nielson [14]. The first review is not restricted to piecewise-linear constructions based on polygonal slices, but also refers to parametric and tensor representations of contours, and describes volumetric and surface approaches. We propose a new approach to the interpolation problem.
Reference: [24] <author> J.T. Schwartz and M. Sharir, </author> <title> Identification of partially obscured objects in two and three dimensions by matching noisy characteristic curves, </title> <journal> Int. J. of Robotics Research, </journal> <volume> 6 (1987), </volume> <pages> 29-44. </pages>
Reference-contexts: See steps will be given later in the paper. For the purpose of identifying matching portions of the contours we use a partial curve matching technique, which was first suggested by Kalvin et al. [16] and by Schwartz and Sharir <ref> [24] </ref>.
Reference: [25] <author> M. Shantz, </author> <title> Surface definition for branching contour-defined objects, </title> <journal> Computer Graphics, </journal> <volume> 15 (1981), </volume> <pages> 242-270. </pages>
Reference-contexts: These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz <ref> [25] </ref>, Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27]. They decompose each method into its building blocks, and compared the various methods accordingly. <p> Thus, we separately treat similar contour portions that are matched between the two slices, and then treat the remaining portions that do not match. We refrain from creating artificial bridges between contours that might conflict with the geometry of the other slice, as already noted in <ref> [25] </ref> and others. In the only case where we con struct such bridges, they are guaranteed not to conflict with the geometry of the other slice, i.e. not to intersect the projection of any other contour. We do not have to introduce intermediate slices.
Reference: [26] <author> K.R. Sloan and L.M. Hrechanyk, </author> <title> Surface reconstruction from sparse data, </title> <booktitle> Proc. IEEE Conf. on Pattern Recognition and Image Processing, </booktitle> <year> 1981, </year> <pages> 45-48. </pages>
Reference-contexts: These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk <ref> [26] </ref>, Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27]. They decompose each method into its building blocks, and compared the various methods accordingly. <p> The xy-projections of contours of different slices may arbitrarily overlap; we do not make any distinction in the treatment of contours which fully overlap, partially overlap or do not overlap at all. Many of the previous works, such as [19], [9], <ref> [26] </ref> and [10], either prohibit the creation of triangles in the same slice, or specifically define steps where this action is allowed. We do not make a distinction between triangles which connect the two slices and those which totally lie within a single slice.
Reference: [27] <author> K.R. Sloan and J. Painter, </author> <title> From contours to surfaces: testbed and initial results, </title> <booktitle> Proc. CHI + GI '87, </booktitle> <year> 1987, </year> <pages> 115-120. </pages>
Reference-contexts: A good survey on all the works cited so far is given by Sloan and Painter <ref> [27] </ref>. They decompose each method into its building blocks, and compared the various methods accordingly. They also describe a testbed for evaluating and comparing these techniques.
Reference: [28] <author> K.R. Sloan and J. Painter, </author> <title> Pessimal guesses may be optimal: A counterintuitive search result, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 10 (1988), </volume> <pages> 949-955. </pages>
Reference-contexts: In the full version we review these works in more detail, but since they are all inferior to our solution, in that they cannot handle arbitrary data, we omit this review here. These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter <ref> [28] </ref>, Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal [29]. A good survey on all the works cited so far is given by Sloan and Painter [27].
Reference: [29] <author> Y.F. Wang and J.K. Aggarwal, </author> <title> Surface reconstructionand representation of 3D scenes, </title> <journal> Pattern Recognition, </journal> <volume> 19 (1986), </volume> <pages> 197-207. </pages>
Reference-contexts: These works are by Keppel [19], Fuchs et al. [9], Sloan and Painter [28], Cook et al. [7], Chris tiansen and Sederberg [5], Shantz [25], Batnitzky et al. [2], Sloan and Hrechanyk [26], Ganapathy and Dennehy [10], and by Wang and Aggarwal <ref> [29] </ref>. A good survey on all the works cited so far is given by Sloan and Painter [27]. They decompose each method into its building blocks, and compared the various methods accordingly. They also describe a testbed for evaluating and comparing these techniques.
Reference: [30] <author> E. Welzl and B. Wolfers, </author> <title> Surface reconstruction between simple polygons via angle criteria, </title> <booktitle> Proc. 1st European Symp. on Algorithms, </booktitle> <year> 1993, </year> <pages> 397-408. </pages>
Reference-contexts: There have been a few other recent works that also attempted to handle the more general cases; these are by Kehtarnavaz and De Figueiredo [17], Kehtarnavaz, Simar and De Figueiredo [18], Ekoule, Peyrin and Odet [8], Meyers, Skinner and Sloan [22], and by Welzl and Wolfers <ref> [30] </ref>. However, all these treatments suffered from a variety of problems, treated only certain restricted cases, and worked only in favorable situations where the two slices closely resemble each other.
Reference: [31] <author> H.J. Wolfson, </author> <title> On curve matching, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12 (1990), </volume> <pages> 483-489. </pages>
Reference-contexts: This technique was extended and used in computer vision for automatic identification of partially obscured objects in two or three dimensions, an important problem in robotics applications of computer vision, which has attracted much attention; see Hong and Wolfson [15], Wolfson <ref> [31] </ref>, and Kishon, Hastie and Wolfson [20].
Reference: [32] <author> M.J. Zyda, A.R. Jones and P.G. Hogan, </author> <title> Surface construction from planar contours, </title> <journal> Computers and Graphics, </journal> <volume> 11 (1987), </volume> <pages> 393-408. </pages>
Reference-contexts: A good survey on all the works cited so far is given by Sloan and Painter [27]. They decompose each method into its building blocks, and compared the various methods accordingly. They also describe a testbed for evaluating and comparing these techniques. Zyda, Jones and Hogan <ref> [32] </ref> made an attempt to han dle the many-to-many case, but their method could not handle any branching cases, and produced unsatisfactory results for partially overlapping contours, as in Figure 4. Other limitations involved specific geometries.
References-found: 32

