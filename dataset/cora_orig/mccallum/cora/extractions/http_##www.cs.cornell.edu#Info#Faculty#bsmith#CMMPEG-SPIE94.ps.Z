URL: http://www.cs.cornell.edu/Info/Faculty/bsmith/CMMPEG-SPIE94.ps.Z
Refering-URL: http://www.cs.cornell.edu/Info/Faculty/Brian_Smith.html
Root-URL: http://www.cs.cornell.edu
Email: (rowe@cs.berkeley.edu)  
Title: MPEG Video in Software: Representation, Transmission, and Playback series of experiments show that the playback
Author: Lawrence A. Rowe, Ketan D. Patel, Brian C Smith, and Kim Liu 
Keyword: 2.0 CM System Architecture  
Date: February 1994.  
Note: A  The  The CMPlayer establishes  Networking and Multimedia Computing, IS&T/SPIE Symp. on  
Address: Berkeley, CA 94720  San Jose, CA,  
Affiliation: Computer Science Division EECS University of California  Elec. Imaging Sci. Tech.,  
Abstract: A software decoder for MPEG-1 video was integrated into a continuous media playback system that supports synchronized playing of audio and video data stored on a file server. The MPEG-1 video playback system supports forward and backward play at variable speeds and random positioning. Sending and receiving side heuristics are described that adapt to frame drops due to network load and the available decoding capacity of the client workstation. As processor speed increases, real-time software decoding of compressed video is possible. We developed a portable software MPEG-1 video decoder that can play small-sized videos (e.g., 160 x 120) in real-time and medium-sized videos within a factor of two of real-time on current workstations [1]. We also developed a system to deliver and play synchronized continuous media streams (e.g., audio, video, images, animation, etc.) on a network [2].Initially, this system supported 8kHz 8-bit audio and hardware-assisted motion JPEG compressed video streams. This paper describes the integration of a software decoded MPEG-1 video stream into this system. The Continuous Media (CM) System provides full-function VCR commands, including forward and backward play at variable speeds and random positioning in the stream. It also resamples the audio stream so that sound is played at any speed. A best-effort model dynamically optimizes the playback frame rate within the constraints of the video file server and client machine CPU speeds and network bandwidth. The software MPEG-1 video decoding component of the CM System estimates resource needs, such as the CPU time required to decode a frame of video, and allocates available resources among various tasks, such as reading data from the network and decoding, dithering, and displaying frames. This paper describes the MPEG-1 video file representation and the mechanisms required to support full-function playback. The remainder of the paper is organized as follows. Section 2 describes the software architecture of the system. Section 3 describes the file representation. Section 4 describes the mechanisms implemented for transmission and reception of video frames. Section 5 describes the adaptive rate control mechanisms. And, section 6 presents the results of experiments performed to evaluate the system. The CM System is composed of programs built with a collection of libraries called the CM Toolkit (CMT). The Continuous Media Player (CMPlayer) is a video playback application implemented using CMT. Figure 1 shows the software organization of this application. The CMX process runs on the client workstation. It plays audio and video packets sent to it by the CM Source (CMS) process that runs on a video file server. CMX decodes the packets and schedules them for output to the audio device or X server. It communicates with the X server using shared memory. CMPlayer, CMX, and CMS processes are synchronized through a distributed, replicated object called a Logical Time System (LTS). The distributed objects are synchronized by synchronizing the system clocks on the processors using the Internet Network Time Protocol. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> K. Patel, B.C.Smith, and L.A. Rowe, </author> <title> Performance of a Software MPEG Video Decoder, </title> <booktitle> Proceedings ACM Multimedia 93, </booktitle> <address> Anaheim, CA, </address> <month> August </month> <year> 1993, </year> <pages> pp. 75-82. </pages>
Reference-contexts: 1.0 Introduction As processor speed increases, real-time software decoding of compressed video is possible. We developed a portable software MPEG-1 video decoder that can play small-sized videos (e.g., 160 x 120) in real-time and medium-sized videos within a factor of two of real-time on current workstations <ref> [1] </ref>. We also developed a system to deliver and play synchronized continuous media streams (e.g., audio, video, images, animation, etc.) on a network [2].Initially, this system supported 8kHz 8-bit audio and hardware-assisted motion JPEG compressed video streams.
Reference: 2. <author> L.A. Rowe and B.C. Smith, </author> <title> A Continuous Media Player, </title> <booktitle> Proceedings 3rd International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: Although CMX receiving mechanisms allow it to drop frames that will never be decoded in time, a preferred solution would decrease the frames per second being sent in the first place <ref> [2] </ref>. The heuristic used to control frame transmission periodically checks the difference between frames decoded and frames received. Currently, this check occurs approximately every 0.25 seconds.
References-found: 2

