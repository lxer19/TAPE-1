URL: http://www.ai.sri.com/~harabagi/Papers/ipps.ps.gz
Refering-URL: http://www.ai.sri.com/~harabagi/
Root-URL: 
Email: harabagi@usc.edu  moldovan@seas.smu.edu  
Title: A Parallel Algorithm for Text Inference  
Author: Sanda M. Harabagiu Dan I. Moldovan 
Address: Los Angeles, CA 90089-2562  Dallas, TX 75275  
Affiliation: University of Southern California Dept. of Electrical Engineering-Systems  Southern Methodist University Dept. of Computer Science Engineering  
Abstract: In this paper we describe a highly parallel method for extracting inferences from text. The method is based on a marker-propagation algorithm that establishes semantic paths between knowledge base concepts. The paper presents the structure of the system, the marker-propagation algorithm, and results that show a large degree of parallelism. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Charniak. </author> <title> A neat theory of marker passing. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence AAAI-86, </booktitle> <pages> pages 584-588, </pages> <year> 1986. </year>
Reference-contexts: Measurements summary and used later by [2], <ref> [1] </ref>, [5], and others. Our markers have fields for case constraints, synchronization with other markers, and propagation rules. We think that by allowing the user to program the marker fields is a clear advantage. Markers may be regarded as lightweight processes that execute asynchronously.
Reference: [2] <author> S. Fahlman. </author> <title> NETL: A System for Representing and Using Real-World Knowledge. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Mas-sachusetts, </address> <year> 1979. </year>
Reference-contexts: Measurements summary and used later by <ref> [2] </ref>, [1], [5], and others. Our markers have fields for case constraints, synchronization with other markers, and propagation rules. We think that by allowing the user to program the marker fields is a clear advantage. Markers may be regarded as lightweight processes that execute asynchronously.
Reference: [3] <author> C. Fellbaum. </author> <title> English verbs as a semantic net. </title> <type> Technical Report CSL 90-43, </type> <institution> Princeton University, </institution> <year> 1990. </year>
Reference-contexts: We decided to build our knowledge base on top of WordNet lexical database [4], <ref> [3] </ref> developed at Princeton. WordNet is a semantic dictionary because words are searched based on conceptual affinity with other words. It covers the vast majority of nouns, verbs, adjectives and adverbs from the English language. The words in WordNet are organized in synonym sets, called synsets.
Reference: [4] <author> C. Fellbaum, D. Gross, and G. Miller. </author> <title> Wordnet : A lexical database organized on psycholinguistic principles. </title> <editor> In U. Zernik, editor, </editor> <title> Lexical Aquisition: Exploiting On-Line Resources to Build a Lexicon, </title> <address> pages 141-170. </address> <publisher> Lawrence Erlbaum Associates Publishers, </publisher> <address> Hillsdale, N.J., </address> <year> 1991. </year>
Reference-contexts: We decided to build our knowledge base on top of WordNet lexical database <ref> [4] </ref>, [3] developed at Princeton. WordNet is a semantic dictionary because words are searched based on conceptual affinity with other words. It covers the vast majority of nouns, verbs, adjectives and adverbs from the English language. The words in WordNet are organized in synonym sets, called synsets.
Reference: [5] <author> J. Hendler. </author> <title> Integrating Marker-Passing and Problem-Solving. </title> <publisher> Lawrence Erlbaum Associates Publishers, </publisher> <year> 1988. </year>
Reference-contexts: Measurements summary and used later by [2], [1], <ref> [5] </ref>, and others. Our markers have fields for case constraints, synchronization with other markers, and propagation rules. We think that by allowing the user to program the marker fields is a clear advantage. Markers may be regarded as lightweight processes that execute asynchronously.
Reference: [6] <author> D. Moldovan, W. Lee, and C. Lin. </author> <title> Snap: A marker-propagation architecture for knowledge processing. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3 </volume> <pages> 1-13, </pages> <year> 1992. </year>
Reference-contexts: Reasoning on knowledge bases falls into this broad category. An SIMD implementation of a much simpler marker propagation model is the SNAP experimental computer <ref> [6] </ref>. In this paper, we use a more powerful MIMD model that runs only on a simulator. The marker propagation model can be briefly described as a network consisting of nodes and links, and a set of markers moving through the network according to some propagation rules.
Reference: [7] <author> M. Quillian. </author> <title> Semantic Memory. </title> <type> PhD thesis, </type> <institution> Carnegie Institute of Technology (Carnegie Mellon University), </institution> <year> 1966. </year> <month> 5 </month>
Reference-contexts: A practical way of constructing large, scalable, general-purpose knowledge bases is to expand WordNet. The markers we used are considerably more complex then spreading activation markers proposed by Quillian <ref> [7] </ref>, Parameter Exp. 1 Exp. 2 Exp. 3 Nodes 392 346 278 Relations 605 532 418 Nodes marked 181 132 116 Markers total 54 44 40 n 30 11 16 N c 25 8 13 Recall 66% 55% 69% P recision 80% 75% 85% P total 338 272 258 P path
References-found: 7

