URL: http://gost.isi.edu/brian/resume/confpap.ps
Refering-URL: http://gost.isi.edu/brian/resume/
Root-URL: http://www.isi.edu
Title: Distributed Control Methods  
Author: Brian Tung Leonard Kleinrock 
Keyword: Key Words: distributed algorithms, finite state automata, Markov chain, queueing theory, state aggregation  
Address: Los Angeles Los Angeles, CA 90024 Los Angeles, CA 90024  
Affiliation: Computer Science Department Computer Science Deparment University of California, Los Angeles University of California,  
Abstract: The distributed system is becoming increasingly popular, and this produces the need for more sophisticated distributed control techniques. In this paper, we present a method for distributed control using simple finite state automata. Each of the distributed entities is "controlled" by its associated automaton, in the sense that the entity examines the state of the automaton to determine its behavior. The result of the collective behavior of all of the entities is fed back to the automata, which change their state as a result of this feedback. We give a new method of analysis which derives the steady state behavior of this system as a whole, by decomposing it into two parts: describing and solving an imbedded auxiliary Markov chain, and analyzing the behavior of the system within each of the states of this auxiliary chain. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. A. Borovikov and V. I. Bryzgalov. </author> <title> A simple symmetric game between many automata. </title> <journal> Av-tomat. Telemekh., </journal> <volume> Vol. 26(No. 4), </volume> <year> 1965. </year>
Reference-contexts: Before we do so, however, let us consider the behavior of the system as the memory size of the automata and the number of automata increase without bound. Borovikov and Bryzgalov <ref> [1] </ref> show that when n = 1, that is, when the automata each have two states, the behavior is not optimal in the long run; in fact, with probability one, f (t) approaches 1=2 in the limit as N; t ! 1.
Reference: [2] <author> A. Giessler, J. Hanle, A. Konig, and E. Pade. </author> <title> Free buffer allocation|an investigation by simulation. </title> <journal> Computer Networks, </journal> <volume> Vol. 1(No. </volume> 3):191-204, July 1978. 
Reference-contexts: For a typical application, we usually want to maximize (k fl ) and to minimize ! 1 . Heuristics to do this can be found in <ref> [2] </ref> and [5]. Because of the possibly large walk periods, we might consider why we should use the Goore Game as a paradigm in these problems at all.
Reference: [3] <editor> Douglas R. Hofstadter. Metamagical themas. </editor> <publisher> Scientific American, </publisher> <month> May </month> <year> 1983. </year>
Reference-contexts: Moreover, each player plays solely in a greedy fashion, each time voting the way that seems to give that player the best payoff. This is somewhat unexpected. Greed affects outcomes in an unpredictable manner. An example of greed leading to significantly suboptimal outcomes is the famous prisoner's dilemma <ref> [3] </ref>. In this scenario, two entities (the prisoners) greedily optimize their own behavior, but together they produce (for them) a globally suboptimal result. This effect is common in greedy solutions.
Reference: [4] <author> Leonard Kleinrock. </author> <title> Queueing Systems, Volume 1: Theory. </title> <publisher> John Wiley and Sons, </publisher> <year> 1975. </year>
Reference-contexts: equation t i;i1 (r) = 1 + r (t i+1;i (r) + t i;i1 (r)); 1 i &lt; n which can be rewritten as (1 r)t i;i1 (r) = 1 + rt i+1;i (r); 1 i &lt; n (21) This recurrence equation can be solved by the usual z-transform techniques <ref> [4] </ref> (see Appendix A) to yield t i;i1 (r) = 1 2r 1 r ni+1 (22) t 1;1 (r) = 1 2r 1 r n Immediately after a trigger transition, at least one of the automata|in particular, the one that made the trigger transition|must be in either state 1 or 1. <p> We expect that there will be a wide range of tasks for which this technique is applicable. Example 2. A Solving for Persistence Time In Section 3.1, we claimed that the solution to the recurrence equations 20 and 21 could be derived using z-transform techniques <ref> [4] </ref> to yield equations 22 and 23. In this appendix, we carry out this derivation.
Reference: [5] <author> Leonard Kleinrock. </author> <title> On flow control in computer networks. </title> <booktitle> In International Conference on Communications, </booktitle> <month> June </month> <year> 1978. </year>
Reference-contexts: For a typical application, we usually want to maximize (k fl ) and to minimize ! 1 . Heuristics to do this can be found in [2] and <ref> [5] </ref>. Because of the possibly large walk periods, we might consider why we should use the Goore Game as a paradigm in these problems at all.
Reference: [6] <author> B. G. Pittel. </author> <title> The asymptotic properties of a version of the Goore game. Probl. </title> <journal> Peredachi Inform., </journal> <volume> Vol. 1(No. 3), </volume> <year> 1965. </year>
Reference-contexts: If lim N!1 (n=N ) &lt; , then the automata spend most of their time in nonoptimal system states. Pittel <ref> [6] </ref> examines nearly the same problem. The only change is in the automata; he assumes that in a trigger transition, the automaton has an equal chance (that is, 1=2) of taking the other action, or staying with the same action.
Reference: [7] <author> M. L. Tsetlin. </author> <title> Finite Automata and Modeling the Simplest Forms of Behavior. </title> <type> PhD thesis, </type> <institution> V. A. Steklov Mathematical Institute, </institution> <year> 1964. </year>
Reference-contexts: Let us introduce this scheme with a simple game, called the Goore Game by Tsetlin, who describes it in <ref> [7] </ref>. Imagine that we have many players, none of whom are aware of the others, and a referee. Every hour, the referee asks each player to vote yes or no, then counts up the yes and no answers. <p> What sort of design can be postulated for an automaton that performs better than one that chooses A 0 or A 1 randomly with probability 1=2 each time? One possible design is as follows. (This automaton is called L 2;2 in <ref> [7] </ref>.) Let the automaton have two states, 1 and 1. If the current state is 1, the automaton chooses A 0 ; if it is 1, it chooses A 1 . <p> The problem of the behavior in this context, essentially the Goore Game, has been examined by Tsetlin <ref> [7] </ref>, but he only describes the construction and behavior of the automata, and does not develop a general method of analysis. The automaton we use is the one defined in the previous section; the state diagram is displayed in Figure 2. <p> We map states to outputs in a straightforward way. If s m (t) &lt; 0, then u m (t) = 0; otherwise, u m (t) = 1. The automaton is said to be linear <ref> [7] </ref>; that is, state transitions occur only between adjacent states, except for the self loops at the ends of the state space (n and n).
Reference: [8] <author> V. A. Volkonskiy. </author> <title> Asymptotic properties of the behavior of simple automata in a game. Probl. </title> <journal> Peredachi Inform., </journal> <volume> Vol. 1(No. 2), </volume> <year> 1965. </year>
Reference-contexts: B System Decomposition In the analysis presented in this paper, we decompose the system behavior into two parts: visit ratios and persistence time. Volkonskiy <ref> [8] </ref> makes use of this general method, but only for the simple case where the reward function is of the form r (f) = r 0 for f f c , r (f ) = r 1 &lt; r 0 for f &gt; f c , where f c &lt; 1=2
References-found: 8

