URL: http://actor.cs.vt.edu/~siva/workshop/papers/janssen.ps
Refering-URL: http://actor.cs.vt.edu/~siva/workshop/papers.html
Root-URL: http://www.cs.vt.edu
Title: ILU: Inter-Language Unification via Object Modules  
Author: Bill Janssen, Mike Spreitzer 
Date: 15 August 1994  
Affiliation: Xerox Corporation Palo Alto Research Center  
Abstract-found: 0
Intro-found: 1
Reference: [Xerox 81] <institution> [Xerox Corporation]; COURIER: THE REMOTE PROCEDURE PROT OCOL; Xerox, Stamford, CT, 1981, &lt;order number XSIS 038112&gt;. </institution>
Reference: [OSF91] <institution> [Open Systems Foundation]; INTRODUCTION TO OSF DCE (Revision 1.0), Chapter 3.2: "Remote Procedure Call"; OSF, </institution> ??, <month> 31 December </month> <year> 1991. </year>
Reference-contexts: This balkanization of technology is also apparent in the networking world, at several levels, but notably with the emergence of several competing standards for remote procedure calls. Xerox is still using their XNS system, with the Courier RPC protocol [Xerox81]. The OSF is promoting their Distributed Computing Environment (DCE) <ref> [OSF91] </ref>. Sun Microsystems and others are using ONC RPC [SMI86]. Novell has its own `network operating system' called NetWare. An industry consortium, the Object Management Group (OMG), is devising a standard object architecture called CORBA [OMG91] that includes an RPC model.
Reference: [SMI86] <author> [Sun Microsystems Inc.]; </author> <title> NETWORKING ON THE SUN WORKSTATION, "Remote Procedure Call Specification"; SMI, </title> <address> Mountain View, CA, 1986, &lt;part # 800-1324-03 B&gt;. </address>
Reference-contexts: Xerox is still using their XNS system, with the Courier RPC protocol [Xerox81]. The OSF is promoting their Distributed Computing Environment (DCE) [OSF91]. Sun Microsystems and others are using ONC RPC <ref> [SMI86] </ref>. Novell has its own `network operating system' called NetWare. An industry consortium, the Object Management Group (OMG), is devising a standard object architecture called CORBA [OMG91] that includes an RPC model. <p> The kernel library does not currently support multiple languages in the same address space, pipes, or authentication. The abstract modules in the kernel are designed using an object protocol to support extension and modification. A concrete data normalization module supporting ONC RPC's XDR conventions <ref> [SMI86] </ref> has been implemented. Concrete communication modules using ONC RPC conventions over TCP/IP and UDP/IP, and in-memory conventions, have been implemented. Work is underway on a concrete data normalization module using OSF DCE RPC's NDR formats.
Reference: [ANSI89] <institution> [American National Standards Institute, Inc.]; AMERICAN NATIONAL STANDARD FOR INFORMATION SYSTEMS -- PROGRAMMING LANGUAGE - C; ANSI, </institution> ??, <year> 1989, &lt;X3.159-1989&gt;. </year>
Reference-contexts: ILU defines a module description language, ISL. ISL was designed with several constraints: it had to provide for modern software engineering constructs, particularly objects and exceptions; any description written in it had to have reasonable interpretations for each of several target languages -- the languages C <ref> [ANSI89] </ref>, Common Lisp [Steele90], C++ [Ellis90], and Modula-3 [Nelson91a] were chosen as a reasonably broad target set; and it had to be able to reasonably describe existing interfaces of various kinds, particularly network RPC interfaces such as ONC RPC or Xerox Courier.
Reference: [Steele90] <author> Guy L. </author> <title> Steele; COMMON LISP, THE LANGUAGE (Second Edition); Digital Press, </title> <booktitle> 1990, </booktitle> <address> &lt;ISBN 1-55558-041-6&gt;. </address>
Reference-contexts: ILU defines a module description language, ISL. ISL was designed with several constraints: it had to provide for modern software engineering constructs, particularly objects and exceptions; any description written in it had to have reasonable interpretations for each of several target languages -- the languages C [ANSI89], Common Lisp <ref> [Steele90] </ref>, C++ [Ellis90], and Modula-3 [Nelson91a] were chosen as a reasonably broad target set; and it had to be able to reasonably describe existing interfaces of various kinds, particularly network RPC interfaces such as ONC RPC or Xerox Courier.
Reference: [Ellis90] <editor> Margaret Ellis and Bjarne Stroustrup; THE ANNOTATED C++ REFERENCE MANUAL; Addison-Wesley, </editor> <address> Reading, MA, 1990, &lt;ISBN 0-201-51459-1&gt;. </address>
Reference-contexts: ISL was designed with several constraints: it had to provide for modern software engineering constructs, particularly objects and exceptions; any description written in it had to have reasonable interpretations for each of several target languages -- the languages C [ANSI89], Common Lisp [Steele90], C++ <ref> [Ellis90] </ref>, and Modula-3 [Nelson91a] were chosen as a reasonably broad target set; and it had to be able to reasonably describe existing interfaces of various kinds, particularly network RPC interfaces such as ONC RPC or Xerox Courier. The actual language is modeled after that used by Modula-3 to describe interfaces.
Reference: [Nelson91a] <institution> Greg Nelson; SYSTEMS PROGRAMMING WITH MODULA-3; Prentice-Hall, </institution> <year> 1991, </year> <note> &lt;ISBN 0-13-590-464-1&gt;. </note>
Reference-contexts: ISL was designed with several constraints: it had to provide for modern software engineering constructs, particularly objects and exceptions; any description written in it had to have reasonable interpretations for each of several target languages -- the languages C [ANSI89], Common Lisp [Steele90], C++ [Ellis90], and Modula-3 <ref> [Nelson91a] </ref> were chosen as a reasonably broad target set; and it had to be able to reasonably describe existing interfaces of various kinds, particularly network RPC interfaces such as ONC RPC or Xerox Courier. The actual language is modeled after that used by Modula-3 to describe interfaces.
Reference: [ISO90] <institution> [Internation Standards Organization]; DRAFT INTERNATIONAL STANDARD -- INFORMATION TECHNOLOGY -- UNIVERSAL CODED CHARACTER SET (UCS); ISO, </institution> ??, <year> 1990, </year> <note> &lt;ISO/IEC DIS 10646&gt;. </note>
Reference-contexts: ISL has several primitive scalar types: 16-, 32, and 64-bit signed and unsigned integers, 8-bit bytes, 32-, 64, and 128-bit IEEE oating point values (the 128 bit format uses a form of `extended double-precision' defined by Sun), 16-bit ISO 10646/Unicode <ref> [ISO90] </ref> and 8-bit ISO Latin-1 characters, and Boolean values.
Reference: [OMG91] <institution> [Object Management Group]; THE COMMON OBJECT REQUEST BROKER: ARCHITECTURE AND SPECIFCATION; OMG, </institution> <address> Framingham, MA, </address> <month> 10 December </month> <year> 1991. </year> <note> 5 Addresses and Information Bill Janssen &lt;janssen@parc.xerox.com&gt; (415) 812-4763 FAX: </note> <institution> (415) 812-4777 Mike Spreitzer &lt;spreitze@parc.xerox.com&gt; (415) 812-4833 Xerox Palo Alto Research Center, </institution> <address> 3333 Coyote Hill Rd, Palo Alto, CA 94304 ILU URL: </address> <booktitle> ftp://parcftp.parc.xerox.com/pub/ilu/ilu.html OOPSLA '94 Workshop on Multi-Language Object Models </booktitle>
Reference-contexts: The OSF is promoting their Distributed Computing Environment (DCE) [OSF91]. Sun Microsystems and others are using ONC RPC [SMI86]. Novell has its own `network operating system' called NetWare. An industry consortium, the Object Management Group (OMG), is devising a standard object architecture called CORBA <ref> [OMG91] </ref> that includes an RPC model. The odds seem good that few (if any) of these systems will be able to work with any of the others. Our answer to this problem is called Inter-Language Unification. ILU is based on a notion of modules that represent encapsulated environments.
References-found: 9

