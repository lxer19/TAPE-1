URL: ftp://ftp.cs.washington.edu/tr/1994/02/UW-CSE-94-02-04.PS.Z
Refering-URL: http://www.cs.washington.edu/homes/mel/abstracts/case.html
Root-URL: 
Title: The Case for Chaotic Adaptive Routing  
Author: Kevin Bolding, Melanie L. Fulgham and Lawrence Snyder 
Address: Seattle, Washington  
Affiliation: Dept. of Computer Science and Engineering University of Washington  
Pubnum: Technical Report CSE-94-02-04  
Abstract: Chaotic routers are randomizing, non-minimal adaptive packet routers designed for use in the communication networks of parallel computers. Chaotic routing is reviewed along with other contemporary network routing approaches, including the state-of-the-art oblivious routers. Each routing approach is evaluated for its effectiveness as a multicomputer message router. The results indicate that the Chaos router is the most effective of known routing methods. 
Abstract-found: 1
Intro-found: 1
Reference: [Adve & Vernon 93] <author> V. S. Adve and M. K. Vernon. </author> <title> Performance analysis of mesh interconnection networks with deterministic routing. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <year> 1993. </year>
Reference-contexts: Dally and Seitz provide a solution to this using virtual channels which employs extra buffering to remove the possibility of cyclic dependencies within a single dimension [Dally & Seitz 87]. This mechanism perturbs the network's balance, though, resulting in non-uniform traffic flow through the network and degraded performance <ref> [Bolding 92, Adve & Vernon 93] </ref>. 4.1.3 Congestion Avoidance Since oblivious routers by nature ignore congestion in the network, it might be expected that they do not perform well under highly congested loads. <p> On the torus the oblivious throughput degrades after saturation with the complement, random, shu*e, and random leveled traffic patterns. This is most likely due to the asymmetry in the oblivious network introduced by the virtual channels used for deadlock protection in the torus <ref> [Bolding 92, Adve & Vernon 93] </ref>. Derouting also affects latency. In general the torus latencies have three phases. When the 22 Expected throughput on a 256 node Chaos hypercube 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 Normalized load 10 30 50 70 Normalized throughput r. c.p. sf.
Reference: [Berman et al. 92] <author> P. Berman, L. Gravano, G. Pifarre, and J. Sanz. </author> <title> Adaptive deadlock- and livelock-free routing with all minimal paths in torus networks. </title> <booktitle> In ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1992. </year>
Reference: [Bolding & Snyder 91] <author> K. Bolding and L. Snyder. </author> <title> Overview of fault handling for the chaos router. </title> <booktitle> In Proceedings of the 1991 IEEE International Workshop on Defect and Fault Tolerance in VLSI Systems, </booktitle> <pages> pages 124-127. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1991. </year>
Reference-contexts: Since all routes are available, fault-tolerance is established as long as nodes are not completely isolated by faults. Mechanisms to extend this "natural" fault-tolerance to be more efficient and robust at little cost have been outlined <ref> [Bolding & Snyder 91] </ref>. Thus, chaotic routing provides fault-tolerance for both static and some transient faults without requiring additional overhead.
Reference: [Bolding & Snyder 92] <author> K. Bolding and L. Snyder. </author> <title> Mesh and torus chaotic routing. </title> <booktitle> In Advanced Research in VLSI and Parallel Systems: Proceedings of the 1992 Brown/MIT Conference, </booktitle> <pages> pages 333-347, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: In a typical queueing router, packets arriving at the node are buffered in a central buffer pool or queue and wait for free profitable channels on a FIFO basis. Typically, this buffer is relatively small, ranging in size from five packets <ref> [Bolding & Snyder 92] </ref> to nineteen packets [Coates et al. 93] in implemented designs. <p> Thus, the "core" of a Chaos router looks like a minimal adaptive router without the need for multiple classes of queues for deadlock prevention. Packets in Chaos routers are moved from input buffers into the central queue on two occasions: packet exchanges for deadlock prevention and "stalling" <ref> [Bolding & Snyder 92] </ref>. The packet-exchange deadlock prevention protocol mandates that if routers on either side of shared link have packets to send to each other, both packets must be sent, rather than only one side sending a packet.
Reference: [Bolding 92] <author> K. Bolding. </author> <title> Non-uniformities introduced by virtual channel deadlock prevention. </title> <type> Technical Report UW-CSE-92-07-07, </type> <institution> University of Washington, </institution> <address> Seattle, WA, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: Dally and Seitz provide a solution to this using virtual channels which employs extra buffering to remove the possibility of cyclic dependencies within a single dimension [Dally & Seitz 87]. This mechanism perturbs the network's balance, though, resulting in non-uniform traffic flow through the network and degraded performance <ref> [Bolding 92, Adve & Vernon 93] </ref>. 4.1.3 Congestion Avoidance Since oblivious routers by nature ignore congestion in the network, it might be expected that they do not perform well under highly congested loads. <p> On the torus the oblivious throughput degrades after saturation with the complement, random, shu*e, and random leveled traffic patterns. This is most likely due to the asymmetry in the oblivious network introduced by the virtual channels used for deadlock protection in the torus <ref> [Bolding 92, Adve & Vernon 93] </ref>. Derouting also affects latency. In general the torus latencies have three phases. When the 22 Expected throughput on a 256 node Chaos hypercube 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 Normalized load 10 30 50 70 Normalized throughput r. c.p. sf.
Reference: [Bolding 93] <author> K. Bolding. </author> <title> Chaotic Routing: Design and Implementation of an Adaptive Multicom-puter Network Router. </title> <type> PhD dissertation, </type> <institution> University of Washington, </institution> <address> Seattle, WA, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Simulation studies show that chaotic routing outperforms deflection routing on torus networks by providing both higher throughput and lower latency at all loads for all commonly used message sizes <ref> [Bolding 93] </ref>. 5.4 Wormhole Non-minimal Adaptive Routers Most wormhole non-minimal adaptive algorithms are straightforward extensions of the minimal adaptive wormhole versions of the algorithms [Linder & Hardin 91, Boppana & Chalasani 92, Glass & Ni 92]. <p> All of these actions complete within a single cycle except selecting a packet in the multiqueue to be moved to an output frame. This process takes three or more cycles depending on traffic conditions, with an average of 6.43 cycles for the worst traffic <ref> [Bolding 93] </ref>. 8.2 Design Consequences Although the serialization of the routing decision causes the Chaos router to be able to route less than one new packet per cycle, this constraint does not seriously effect the performance. <p> In order to keep up with newly arriving packets, all that is necessary is that each channel is visited at least as often as a new packet can arrive on a channel. With worst-case traffic, each channel of the 2-D router will be visted only once every 25.7 cycles <ref> [Bolding 93] </ref>. However, since in order for the worst-case load to exist, the bi-directional channels must be utilized equally in both directions, new packets can arrive only once every 2L, or 40 cycles.
Reference: [Bolding et al. 93] <author> K. Bolding, S.-C. Cheung, S.-E. Choi, C. Ebeling, S. Hassoun, T. A. Ngo, and R. Wille. </author> <title> The chaos router chip: Design and implementation of an adaptive router. </title> <booktitle> In Proceedings of VLSI '93, </booktitle> <pages> pages 8.2.1-8.2.10, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: One exception to this is the Post Office router, of which a preliminary version has been built and runs at around 20Mhz [Coates et al. 93]. A two-dimensional (mesh or torus) Chaos router has been built with the design described below and is designed to run at 66MHz <ref> [Bolding et al. 93] </ref>. Ongoing testing has confirmed operation only to 25MHz in this prototype. The design goals have centered around being able to match the cycle time of an oblivious router with minimum additional latency, and this has been, in simulation, achieved through careful design and extensive pipelining.
Reference: [Boppana & Chalasani 92] <author> R. Boppana and S. Chalasani. </author> <title> New wormhole routing algorithms for multicomputers. </title> <type> Technical Report ECE-92-7, </type> <institution> Univ. Wisc., Madison, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: However this makes deadlock prevention more complex and requires either restrictions on routing [Glass & Ni 92, Dally & Aoki 92], multiple classes of virtual channels <ref> [Linder & Hardin 91, Boppana & Chalasani 92] </ref>, or both [Dally & Aoki 92]. 4.3.2 Deadlock Prevention In fully adaptive non-minimal routers, any packet has the possibility of going out any free channel from its current location 3 . <p> Some minimal adaptive designs restrict the minimal paths [Konstantinidou 90, Chien & Kim 92, Glass & Ni 92] or the order in which virtual channels may be taken <ref> [Cypher & Gravano 92, Boppana & Chalasani 92] </ref>, causing uneven channel use and further diminishing the performance of the router relative to other fully-adaptive routers. Preliminary studies by Nguyen and Snyder have shown the Chaos torus to be superior to the Cypher-Gravano fully-adaptive minimal algorithm [Nguyen & Snyder 94]. <p> Another common problem with minimal adaptive routers is they often use many virtual channels. The more virtual channels needed the more complex the channel arbitration logic. Algorithms such as Linder-Harden [Linder & Hardin 91] and the hop-based schemes <ref> [Boppana & Chalasani 92] </ref> use a large number of virtual channels and are clearly impractical. In the former case O (n2 n ) and in 10 the latter O (nk) virtual channels per channel for a k-ary n-cube.
Reference: [Borodin & Hopcroft 85] <author> A. Borodin and J. E. Hopcroft. </author> <title> Routing, merging and sorting on parallel models of computation. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 30 </volume> <pages> 130-145, </pages> <year> 1985. </year>
Reference-contexts: In fact, Borodin and Hopcroft have shown that, for any N node, degree d network, oblivious routing requires ( p N=d 3=2 ) time steps to route a permutation <ref> [Borodin & Hopcroft 85] </ref>. This bound was tightened to ( p N=d) by Kaklamanis, Krizanc and Tsantilas [Kaklamanis et al. 90].
Reference: [Chien & Kim 92] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proc. 19th Intl. Symposium on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Routers based on the turn model [Glass & Ni 92] restrict routing by forbidding certain turns. The Zenith router [Konstantinidou 90] and planar-adaptive routing <ref> [Chien & Kim 92] </ref> require extra buffering as well as extra constraints on packet paths in order to prevent deadlock. <p> Either way, the additional complexity of the decision, as well as the hardware space required for the extra buffers results in longer times to route messages through a node. Some minimal adaptive designs restrict the minimal paths <ref> [Konstantinidou 90, Chien & Kim 92, Glass & Ni 92] </ref> or the order in which virtual channels may be taken [Cypher & Gravano 92, Boppana & Chalasani 92], causing uneven channel use and further diminishing the performance of the router relative to other fully-adaptive routers.
Reference: [Chinn et al. 93] <author> D. Chinn, F. Leighton, and M. Tompa. </author> <title> Lower bounds for minimal adaptive routing on the mesh with bounded queues. </title> <note> In to be published, </note> <year> 1993. </year>
Reference-contexts: by Chinn, Leighton, and Tompa where the worst case routing time of a permutation on an N -node mesh for a class of minimal adaptive packet routing algorithms is shown to be (N=k 2 ) when k is the number of packets that can be buffered in a single node <ref> [Chinn et al. 93] </ref>. 4.3 Non-minimal Adaptive Routing While oblivious and minimal adaptive routers require a packet always be routed on a minimal length path, non-minimal adaptive routers allow packets to be routed on paths from the source to destination with paths that are not always restricted to shortest paths.
Reference: [Coates et al. 93] <author> B. Coates, A. Davis, and K. Stevens. </author> <title> The post office experience: Designing a large asynchronous chip. </title> <booktitle> In Proceedings of the HICSS, </booktitle> <year> 1993. </year> <month> 29 </month>
Reference-contexts: In other words, node a cannot send a packet to node b while at the same time denying b's request to send a packet to a. Other methods of deadlock prevention based on restricted resource claiming have also been presented <ref> [Coates et al. 93] </ref>. 4.3.3 Livelock Prevention A distinct problem which plagues non-minimal adaptive routers is the possibility of packets having infinite-length paths. <p> In a typical queueing router, packets arriving at the node are buffered in a central buffer pool or queue and wait for free profitable channels on a FIFO basis. Typically, this buffer is relatively small, ranging in size from five packets [Bolding & Snyder 92] to nineteen packets <ref> [Coates et al. 93] </ref> in implemented designs. When the internal queue becomes full and there are no profitable channels available for any packets in the queue, a packet is selected, regardless of its destination, from the queue to be derouted to the next available channel 5 . <p> Priority routers [Ngai & Seitz 89] use timestamps, chaotic routers [Konstantinidou & Snyder 90] use randomization, and others do not guard against livelock at all <ref> [Coates et al. 93] </ref>. The priority router is strictly more complex than a chaotic router because determining which packet among colliding packets is oldest significantly complicates the routing logic. <p> Of those that have, little technical information is available on most of them due to proprietary design considerations. One exception to this is the Post Office router, of which a preliminary version has been built and runs at around 20Mhz <ref> [Coates et al. 93] </ref>. A two-dimensional (mesh or torus) Chaos router has been built with the design described below and is designed to run at 66MHz [Bolding et al. 93]. Ongoing testing has confirmed operation only to 25MHz in this prototype.
Reference: [Cypher & Gravano 92] <author> R. Cypher and L. Gravano. </author> <title> Adaptive, deadlock-free packet routing in torus networks with minimal storage. </title> <booktitle> In Proc. 1992 Intl. Conf. on Parallel Processing, </booktitle> <pages> pages 204-211, </pages> <year> 1992. </year>
Reference-contexts: Some minimal adaptive designs restrict the minimal paths [Konstantinidou 90, Chien & Kim 92, Glass & Ni 92] or the order in which virtual channels may be taken <ref> [Cypher & Gravano 92, Boppana & Chalasani 92] </ref>, causing uneven channel use and further diminishing the performance of the router relative to other fully-adaptive routers. Preliminary studies by Nguyen and Snyder have shown the Chaos torus to be superior to the Cypher-Gravano fully-adaptive minimal algorithm [Nguyen & Snyder 94].
Reference: [Dally & Aoki 92] <author> W. J. Dally and H. Aoki. </author> <title> Deadlock-free adaptive routing in multicomputer networks using virtual channels. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <year> 1992. </year>
Reference-contexts: While both deflection and queueing non-minimal adaptive routers require that messages be broken into fixed-size packets, wormhole routers do not require this; and allow arbitrary size mes sages in the network. However this makes deadlock prevention more complex and requires either restrictions on routing <ref> [Glass & Ni 92, Dally & Aoki 92] </ref>, multiple classes of virtual channels [Linder & Hardin 91, Boppana & Chalasani 92], or both [Dally & Aoki 92]. 4.3.2 Deadlock Prevention In fully adaptive non-minimal routers, any packet has the possibility of going out any free channel from its current location 3 <p> However this makes deadlock prevention more complex and requires either restrictions on routing [Glass & Ni 92, Dally & Aoki 92], multiple classes of virtual channels [Linder & Hardin 91, Boppana & Chalasani 92], or both <ref> [Dally & Aoki 92] </ref>. 4.3.2 Deadlock Prevention In fully adaptive non-minimal routers, any packet has the possibility of going out any free channel from its current location 3 . As a result, it is simple to show that deadlock cannot occur through path dependencies because there are no explicit paths. <p> Once a packet reaches some pre-determined maximum battle scar, it is routed on an Eulerian path through the network toward its destination which is guaranteed to be livelock-free. A similar method by Dally and Aoki <ref> [Dally & Aoki 92] </ref>, allows messages to be derouted freely up to a maximum number of times, at which point they are routed deterministically by dimension order.
Reference: [Dally & Seitz 86] <author> W. Dally and C. Seitz. </author> <title> The torus routing chip. </title> <journal> Journal of Distributed Computing, </journal> <volume> 1(3), </volume> <year> 1986. </year>
Reference-contexts: Thus, the simplicity of oblivious dimension-order routing with minimal buffering results in a high bandwidth, low latency router. Extensions to oblivious routers include simple FIFO buffering, non-blocking buffering using FIFO's and virtual channels [Dally 92], and virtual channels to provide deadlock prevention in torus networks <ref> [Dally & Seitz 86] </ref>. Each of these enhancements provides potential advantages at the cost of greater complexity. The randomized oblivious router of Valiant [Valiant & Brebner 81], while addressing a theoretical bottleneck, does so at a high cost: doubling the average message path length in direct networks.
Reference: [Dally & Seitz 87] <author> W. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5):547-553, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: Dally and Seitz provide a solution to this using virtual channels which employs extra buffering to remove the possibility of cyclic dependencies within a single dimension <ref> [Dally & Seitz 87] </ref>.
Reference: [Dally 87] <author> W. Dally. </author> <title> Wire-efficient VLSI multiprocessor communication networks. </title> <editor> In P. Losleben, editor, </editor> <booktitle> Proceedings of the Stanford Conference on Advanced Research in VLSI, </booktitle> <pages> pages 391-415. </pages> <publisher> MIT Press, </publisher> <month> March </month> <year> 1987. </year>
Reference-contexts: Both circuit-switched and store-and-forward communication have variants which incorporate the advantages of the other. Circuit-switched communication has evolved into wormhole routing with virtual channels. Wormhole routing is an extension of circuit-switching which allows incremental claiming and relinquishing of links and buffers in a network <ref> [Dally 87] </ref>. Messages are transmitted immediately behind the header of the message as the path in the network is established, blocking if necessary. <p> When all displacements are zero, the message has arrived at its destination. 4.1.2 Oblivious Deadlock Prevention Dimension order routing can also be shown to be deadlock-free for open-ended k-ary n-cubes (those without "wrap-around" edges) using simple resource-ordering arguments <ref> [Dally 87] </ref>. Deadlock cannot occur within a dimension because the open-ended network does not allow cycles within a dimension. Since messages only change the dimension being traversed in a pre-determined order, no cycles can exist between dimensions, either.
Reference: [Dally 92] <author> W. Dally. </author> <title> Virtual-channel flow control. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 3(2) </volume> <pages> 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Virtual channels add buffering to wormhole routing so that messages may temporarily relinquish ownership of links due to blocking, priorities, or other reasons and allow non-blocked or higher priority messages to pass them <ref> [Dally 92] </ref>. 2 Store-and-forward communication has been augmented by virtual cut-through, which relaxes the requirement that an entire packet be stored in a node before it is forwarded towards its destination [Kermani & Kleinrock 79]. <p> In non-blocking buffering, messages that are buffered do not consume critical resources and can be bypassed by other messages which have resources available to them. Non-blocking buffering can be implemented using a shared buffer pool for virtual cut-through routing or by virtual channels with FIFO's for wormhole routing <ref> [Dally 92] </ref>. Adding blocking buffering to a network by inserting FIFO queues between links can help perfor mance by allowing packets to relinquish control of links to other messages earlier. <p> However, adding buffers also increases latency by adding additional complexity to the routing path. Dally examined non-blocking buffering by adding virtual channels to wormhole routing and found significant performance advantages for a range of network sizes when compared to networks with equal amounts of blocking buffering <ref> [Dally 92] </ref>. <p> Thus, the simplicity of oblivious dimension-order routing with minimal buffering results in a high bandwidth, low latency router. Extensions to oblivious routers include simple FIFO buffering, non-blocking buffering using FIFO's and virtual channels <ref> [Dally 92] </ref>, and virtual channels to provide deadlock prevention in torus networks [Dally & Seitz 86]. Each of these enhancements provides potential advantages at the cost of greater complexity.
Reference: [Dias & Jump 81] <author> D. M. Dias and J. R. </author> <title> Jump. Analysis and simulation of buffered delta networks. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-30(4):273-282, </volume> <month> April </month> <year> 1981. </year>
Reference-contexts: Dias and Jump showed that, for delta multistage networks, adding just a few buffers between stages could double the throughput of the network <ref> [Dias & Jump 81] </ref>. However, adding buffers also increases latency by adding additional complexity to the routing path.
Reference: [Fang & Szymanski 91] <author> C. Fang and T. Szymanski. </author> <title> An analysis of deflection routing in multidimensional regular mesh networks. </title> <booktitle> In Proceedings of IEEE INFOCOM '91, </booktitle> <pages> pages 859-868. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: Of the routers presented in the literature, there are many differing methods of deciding when and which packet to deroute. However, based on their buffering characteristics, the three basic classes of non-minimal adaptive routers are: deflection routers, queueing routers, and wormhole routers. Deflection routers <ref> [Smith 81, Maxemchuk 89, Fang & Szymanski 91, Smitley 89] </ref>, also known as "hot-potato" or desperation routers, use a synchronous approach and a time step long enough to transmit an entire packet. At each step the incoming packets are paired with outgoing channels and are transmitted in the next step.
Reference: [Felperin et al. 91] <author> S. Felperin, L. Gravano, G. Pifarre, and J. Sanz. </author> <title> Fully-adaptive routing: Packet switching performance and wormhole algorithms. </title> <booktitle> In Supercomputing, </booktitle> <pages> pages 654-663, </pages> <year> 1991. </year>
Reference: [Flaig 87] <author> C. Flaig. </author> <title> VLSI mesh routing systems. </title> <type> Master's thesis, </type> <institution> California Institute of Technology, </institution> <month> May </month> <year> 1987. </year>
Reference-contexts: A good example of this is the Caltech Mesh Routing Chip (MRC) 9 <ref> [Flaig 87, Seitz & Su 93] </ref>. The MRC is a simple oblivious wormhole routing chip for open-ended two-dimensional mesh networks. Simplicity is the rule: deadlock is prevented by dimension order routing, messages block in place when links are unavailable, and wormhole routing reduces overhead to a minimum.
Reference: [Fulgham & Snyder 93] <author> M. L. Fulgham and L. Snyder. </author> <title> Performance of chaos and oblivious routers under non-uniform traffic. </title> <type> Technical Report CSE-93-06-01, </type> <institution> University of Washington, </institution> <address> Seattle, WA, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: In the simulations, each packet consists of 20 flits, the first one being the header of the message. The channels between nodes are shared bi-directionally. The details of the simulation methodologies can be found in <ref> [Fulgham & Snyder 93] </ref>. The traffic patterns considered have been used previously in the literature and are generally thought to be difficult, useful or both.
Reference: [Glass & Ni 91] <author> C. Glass and L. Ni. </author> <title> Adaptive routing in mesh-connected networks. </title> <type> Technical Report MSU-CPS-ACS-45, Mich. </type> <institution> State Univ, </institution> <month> October </month> <year> 1991. </year>
Reference-contexts: If none is available, the packet waits for one to become available, in either a blocking or non-blocking manner depending on the router. When more than one profitable link is available, the router must somehow choose from the alternatives. There are several alternative methods: random, dimension-order, zigzag, and no-turn <ref> [Glass & Ni 91] </ref>. The first two methods are obvious in implementation. The zigzag method attempts to maximize the number of minimal paths still available at any time by choosing the dimension in which the packet has the largest displacement from its destination.
Reference: [Glass & Ni 92] <author> C. J. Glass and L. M. Ni. </author> <title> The turn model for adaptive routing. </title> <booktitle> In Proceedings of the 19th International Symposium on Computer Architecture. IEEE, </booktitle> <year> 1992. </year>
Reference-contexts: A problem which arises in minimal adaptive routing is deadlock. The constraints which prevented deadlock in dimension-order routing are no longer present in adaptive routing, so other techniques must be added to ensure freedom from deadlock. Routers based on the turn model <ref> [Glass & Ni 92] </ref> restrict routing by forbidding certain turns. The Zenith router [Konstantinidou 90] and planar-adaptive routing [Chien & Kim 92] require extra buffering as well as extra constraints on packet paths in order to prevent deadlock. <p> While both deflection and queueing non-minimal adaptive routers require that messages be broken into fixed-size packets, wormhole routers do not require this; and allow arbitrary size mes sages in the network. However this makes deadlock prevention more complex and requires either restrictions on routing <ref> [Glass & Ni 92, Dally & Aoki 92] </ref>, multiple classes of virtual channels [Linder & Hardin 91, Boppana & Chalasani 92], or both [Dally & Aoki 92]. 4.3.2 Deadlock Prevention In fully adaptive non-minimal routers, any packet has the possibility of going out any free channel from its current location 3 <p> Either way, the additional complexity of the decision, as well as the hardware space required for the extra buffers results in longer times to route messages through a node. Some minimal adaptive designs restrict the minimal paths <ref> [Konstantinidou 90, Chien & Kim 92, Glass & Ni 92] </ref> or the order in which virtual channels may be taken [Cypher & Gravano 92, Boppana & Chalasani 92], causing uneven channel use and further diminishing the performance of the router relative to other fully-adaptive routers.
Reference: [Kaklamanis et al. 90] <author> C. Kaklamanis, D. Krizanc, and T. Tsantilas. </author> <title> Tight bounds for oblivious routing in the hypercube. </title> <booktitle> In Proceedings of the 2nd Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 31-35, </pages> <year> 1990. </year>
Reference-contexts: In fact, Borodin and Hopcroft have shown that, for any N node, degree d network, oblivious routing requires ( p N=d 3=2 ) time steps to route a permutation [Borodin & Hopcroft 85]. This bound was tightened to ( p N=d) by Kaklamanis, Krizanc and Tsantilas <ref> [Kaklamanis et al. 90] </ref>. Valiant and Brebner avoided this bottleneck by introducing a randomized oblivious scheme for the hypercube messages are first sent to a randomly chosen intermediate node and then forwarded to their destination [Valiant & Brebner 81].
Reference: [Kermani & Kleinrock 79] <author> P. Kermani and L. Kleinrock. </author> <title> Virtual cut-through: A new computer communication switching technique. </title> <journal> Computer Networks, </journal> <volume> 3 </volume> <pages> 267-286, </pages> <year> 1979. </year> <month> 30 </month>
Reference-contexts: of links due to blocking, priorities, or other reasons and allow non-blocked or higher priority messages to pass them [Dally 92]. 2 Store-and-forward communication has been augmented by virtual cut-through, which relaxes the requirement that an entire packet be stored in a node before it is forwarded towards its destination <ref> [Kermani & Kleinrock 79] </ref>. In a virtual cut-through router, arriving packets which have a desired outgoing link available may proceed as soon as the header arrives without having to wait for the entire packet to arrive.
Reference: [Konstantinidou & Snyder 90] <author> S. Konstantinidou and L. Snyder. </author> <title> The chaos router: A practical application of randomization in network routing. </title> <booktitle> In Proceedings of the 2nd Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 21-30. </pages> <publisher> ACM, </publisher> <year> 1990. </year>
Reference-contexts: The routing decision at each node becomes more complicated due to the necessity of comparing priorities when derouting. Also, the timestamp or battle scar must be transmitted in the header of the packet consuming bandwidth that could provide other crucial routing information. The third solution is randomization. Chaotic routers <ref> [Konstantinidou & Snyder 90] </ref> choose randomly among queued packets when selecting a packet to deroute. By introducing randomness into the network in this manner, the very regular cycles, typical of livelock, decay with time. <p> Priority routers [Ngai & Seitz 89] use timestamps, chaotic routers <ref> [Konstantinidou & Snyder 90] </ref> use randomization, and others do not guard against livelock at all [Coates et al. 93]. The priority router is strictly more complex than a chaotic router because determining which packet among colliding packets is oldest significantly complicates the routing logic.
Reference: [Konstantinidou & Snyder 91] <author> S. Konstantinidou and L. Snyder. </author> <title> Chaos router: Architecture and performance. </title> <booktitle> In Proceedings of the 18th International Symposium on Computer Architecture, </booktitle> <pages> pages 212-221. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1991. </year>
Reference-contexts: Chaotic routing. Chaotic routing attempts to minimize the impact of the queue management overhead by eliminating it from the critical path of the routing decision <ref> [Konstantinidou & Snyder 91] </ref>. In Chaos routers, single packet buffers are placed on both the input and output sides of each channel (see Figure 1).
Reference: [Konstantinidou 90] <author> S. Konstantinidou. </author> <title> Adaptive, minimal routing in hypercubes. </title> <booktitle> In Proc. 6th MIT Conf. On Advanced Research in VLSI, </booktitle> <pages> pages 139-153, </pages> <year> 1990. </year>
Reference-contexts: The constraints which prevented deadlock in dimension-order routing are no longer present in adaptive routing, so other techniques must be added to ensure freedom from deadlock. Routers based on the turn model [Glass & Ni 92] restrict routing by forbidding certain turns. The Zenith router <ref> [Konstantinidou 90] </ref> and planar-adaptive routing [Chien & Kim 92] require extra buffering as well as extra constraints on packet paths in order to prevent deadlock. <p> Either way, the additional complexity of the decision, as well as the hardware space required for the extra buffers results in longer times to route messages through a node. Some minimal adaptive designs restrict the minimal paths <ref> [Konstantinidou 90, Chien & Kim 92, Glass & Ni 92] </ref> or the order in which virtual channels may be taken [Cypher & Gravano 92, Boppana & Chalasani 92], causing uneven channel use and further diminishing the performance of the router relative to other fully-adaptive routers.
Reference: [Konstantinidou 91] <author> S. Konstantinidou. </author> <title> Deterministic and Chaotic Adaptive Routing in Multicom-puters. </title> <type> PhD dissertation, </type> <institution> University of Washington, </institution> <address> Seattle, WA, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: In general, adding a moderate amount of buffering to an oblivious router can significantly expand its throughput capacity with only a small amount of additional latency per message <ref> [Konstantinidou 91] </ref>. 4.2 Minimal Adaptive Routing Since most networks provide multiple shortest paths between many, if not most, source-destination pairs, it is intuitive to design a router that allows flexibility in choosing among these paths. <p> The priority router is strictly more complex than a chaotic router because determining which packet among colliding packets is oldest significantly complicates the routing logic. The chaotic router does not need to make such decisions, giving it lower node latency and better overall per formance <ref> [Konstantinidou 91] </ref>. Also, priority adaptive routers require the inclusion of a creation timestamp in each packet, using up bandwidth which could be used for data. <p> The pipeline design is complicated by new packets arriving in input frames and others leaving output frames constantly during the routing decision. Add to this the fact that there may be several packets desiring multiple output frames at once, and the complexity of the routing decision can be seen <ref> [Konstantinidou 91] </ref>. In order to reduce the complexity, the constraint that only one new route may be set up per cycle is added.
Reference: [Leighton 92] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Transpose and bit reversal are important because they occur in practical computations and can cause worst case behavior in hypercubic oblivious routers <ref> [Leighton 92] </ref>. The shu*e converts row major indexing to shu*ed row major indexing on the mesh or torus topologies. This indexing scheme can be used for efficient sorting [Thompson & Kung 77].
Reference: [Linder & Hardin 91] <author> D. H. Linder and J. C. Hardin. </author> <title> An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-40(1):2-12, </volume> <month> Jan-uary </month> <year> 1991. </year>
Reference-contexts: However this makes deadlock prevention more complex and requires either restrictions on routing [Glass & Ni 92, Dally & Aoki 92], multiple classes of virtual channels <ref> [Linder & Hardin 91, Boppana & Chalasani 92] </ref>, or both [Dally & Aoki 92]. 4.3.2 Deadlock Prevention In fully adaptive non-minimal routers, any packet has the possibility of going out any free channel from its current location 3 . <p> Nonminimal adaptive routers, however, allow messages to "go backwards" and possibly bypass the congestion. Another common problem with minimal adaptive routers is they often use many virtual channels. The more virtual channels needed the more complex the channel arbitration logic. Algorithms such as Linder-Harden <ref> [Linder & Hardin 91] </ref> and the hop-based schemes [Boppana & Chalasani 92] use a large number of virtual channels and are clearly impractical. In the former case O (n2 n ) and in 10 the latter O (nk) virtual channels per channel for a k-ary n-cube.
Reference: [Maxemchuk 89] <author> N. F. Maxemchuk. </author> <title> Comparison of deflection and store-and-forward techniques in the manhattan street and shu*e-exchange networks. </title> <booktitle> In Proceedings of IEEE INFOCOM '89, </booktitle> <pages> pages 800-809. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference-contexts: Of the routers presented in the literature, there are many differing methods of deciding when and which packet to deroute. However, based on their buffering characteristics, the three basic classes of non-minimal adaptive routers are: deflection routers, queueing routers, and wormhole routers. Deflection routers <ref> [Smith 81, Maxemchuk 89, Fang & Szymanski 91, Smitley 89] </ref>, also known as "hot-potato" or desperation routers, use a synchronous approach and a time step long enough to transmit an entire packet. At each step the incoming packets are paired with outgoing channels and are transmitted in the next step.
Reference: [McKenzie 94] <author> N. McKenzie. </author> <title> A network interface circuit design. </title> <type> Unpublished draft, </type> <institution> University of Washington, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: Re-ordering can be done in software, but this adds to the already large time spent in the network interface. A hardware solution to this problem has been proposed by McKenzie in which packets include information on their length and their destination in memory <ref> [McKenzie 94] </ref>. Packets are placed in their proper place in memory and the processor is signalled as soon as the entire message has arrived. 7 Chaos vs.
Reference: [Ngai & Seitz 89] <author> J. Y. Ngai and C. L. Seitz. </author> <title> A framework for adaptive routing in multicomputer networks. </title> <booktitle> In Proceedings of the Symposium of Parallel Algorithms and Architectures, </booktitle> <pages> pages 1-9. </pages> <publisher> ACM, </publisher> <year> 1989. </year>
Reference-contexts: All packets which enter a node during a routing cycle will exit during the next routing cycle, so all packets are always moving about. Queueing routers usually rely on the packet-exchange protocol <ref> [Ngai & Seitz 89] </ref> which ensures that each bi-directional link in the network will not deadlock. <p> The presence of the internal queueing buffer allows for a fully adaptive router where waiting packets do not block channel resources. 5.5.1 Livelock prevention The primary distinction between different queueing non-minimal routers is in the method of livelock prevention as described in Section 4.3.3. Priority routers <ref> [Ngai & Seitz 89] </ref> use timestamps, chaotic routers [Konstantinidou & Snyder 90] use randomization, and others do not guard against livelock at all [Coates et al. 93].
Reference: [Ngai 89] <author> J. Y. Ngai. </author> <title> A Framework for Adaptive Routing in Multicomputer Networks. </title> <type> PhD dissertation, </type> <institution> California Institute of Technology, Pasadena, </institution> <address> CA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Although this helps to preserve the largest set of profitable hops as the packet progresses towards its destination, its usefulness is marginal at best <ref> [Ngai 89] </ref>. No-turn is based on the observation that when a packet "turns" or 5 changes dimensions, it blocks packets traveling in two directions, while it would block packets only in one direction otherwise. Thus, the no-turn model chooses the link which minimizes the number of turns when possible. <p> Although this seems naive, many routers have been proposed without protection from livelock. Since livelock-causing traffic patterns exist, no matter how pathological, this is an unattractive solution. There are two basic variations of the priority method: timestamps and battle scars. Timestamp protocols <ref> [Ngai 89] </ref> require that each packet be stamped with the time it was injected into the network. Whenever a router must choose a packet to deroute, it ensures that the oldest packet is not chosen.
Reference: [Nguyen & Snyder 94] <author> T. Nguyen and L. Snyder. </author> <title> Performance of minimal adaptive routers. </title> <note> Submitted for Publication, </note> <year> 1994. </year>
Reference-contexts: Preliminary studies by Nguyen and Snyder have shown the Chaos torus to be superior to the Cypher-Gravano fully-adaptive minimal algorithm <ref> [Nguyen & Snyder 94] </ref>. The Cypher-Gravano algorithm restricts the order of virtual channel use causing bottlenecks in the first set of channels while the others experience little congestion. A possible intuitive explanation is that packets in adaptive routers "discover" congestion when all forward paths are blocked.
Reference: [Pertel 92] <author> M. J. Pertel. </author> <title> A critique of adaptive routing. </title> <type> Technical Report CS-TR-92-06, </type> <institution> California Institute of Technology, Pasadena, </institution> <address> CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Here, one might expect oblivious routing to perform poorly. For dimension-order oblivious routing, though, the scheme spreads the traffic out and helps reduce the effects of the central hot spot, producing very good results <ref> [Pertel 92] </ref>. For non-uniform traffic, though, oblivious routers do not perform as well. In the presence of hot spots, some nodes in the network will become much more congested than others. <p> This phenomonon is due to the a fortuitous combination of the shape of the mesh network and the routes messages take in dimension-order oblivious routing. Pertel has compared oblivious routing with minimal adaptive routing on mesh networks and found the oblivious router to perform better under random traffic <ref> [Pertel 92] </ref>. The main underlying reason for this is that, in a mesh-connected network with random traffic, there are many more possible paths which cross the center than the edges of the network.
Reference: [Pfister & Norton 85] <author> G. F. Pfister and V. A. Norton. </author> <title> "Hot spot" contention and combining in multistage interconnection networks. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-34(10), </volume> <month> October </month> <year> 1985. </year>
Reference-contexts: However, 4 since oblivious routers are do not respond to hot spots, paths will be chosen through congestion even when equal-length paths with no congestion exist as alternatives. This is a serious drawback to oblivious routing since many software applications create hot spots or other non-uniform traffic <ref> [Pfister & Norton 85] </ref>. 4.1.4 Buffering Buffering can be applied to oblivious routing in many ways. Two basic types of buffering are available: blocking and non-blocking. Blocking buffering is simply in-place buffering of messages.
Reference: [Pifarre et al. 91] <author> G. Pifarre, L. Gravano, S. Felperin, and J. Sanz. </author> <title> Fully-adaptive minimal deadlock-free packet routing in hypercubes, meshes, and other networks. </title> <booktitle> In Proc. of the Third ACM Symp. on Parallel Alg. and Arch., </booktitle> <pages> pages 278-290, </pages> <year> 1991. </year>
Reference: [Seitz & Su 93] <author> C. L. Seitz and W.-K. Su. </author> <title> A family of routing and communication chips based on the Mosaic. </title> <booktitle> In Symp. on Integrated Systems: Proc. of the 1993 Washington Conf., </booktitle> <pages> pages 320-337, </pages> <year> 1993. </year>
Reference-contexts: A good example of this is the Caltech Mesh Routing Chip (MRC) 9 <ref> [Flaig 87, Seitz & Su 93] </ref>. The MRC is a simple oblivious wormhole routing chip for open-ended two-dimensional mesh networks. Simplicity is the rule: deadlock is prevented by dimension order routing, messages block in place when links are unavailable, and wormhole routing reduces overhead to a minimum. <p> With oblivious routers, pipelining of the simple routing decision, as in the Caltech MRC, allows the router to run as fast or faster than the pad drivers 7 <ref> [Seitz & Su 93] </ref>. Therefore, this limit is clearly achievable for the given technology, a 1:2 CMOS process with a 5 V interface. For chaotic routing, the design presented in Section 8 achieves this using a multi-stage synchronous pipeline and the same technology.
Reference: [Smith 81] <author> B. J. Smith. </author> <title> Architecture and applications of the HEP multiprocessor computer system. </title> <booktitle> In Proceedings of SPIE, </booktitle> <pages> pages 241-248, </pages> <year> 1981. </year>
Reference-contexts: Of the routers presented in the literature, there are many differing methods of deciding when and which packet to deroute. However, based on their buffering characteristics, the three basic classes of non-minimal adaptive routers are: deflection routers, queueing routers, and wormhole routers. Deflection routers <ref> [Smith 81, Maxemchuk 89, Fang & Szymanski 91, Smitley 89] </ref>, also known as "hot-potato" or desperation routers, use a synchronous approach and a time step long enough to transmit an entire packet. At each step the incoming packets are paired with outgoing channels and are transmitted in the next step. <p> Thus, infinite livelock is prevented since all packets will eventually be delivered or become the oldest packet and be guaranteed delivery. Battle scar methods <ref> [Smith 81] </ref> place in each packet information which indicates how many times it has been derouted. When choosing a packet to deroute, the one with the smallest battle scar is selected thus, packets which have been previously derouted are less likely to be continually derouted.
Reference: [Smitley 89] <author> D. Smitley. </author> <title> Design tradeoffs for a high speed network node. </title> <type> Technical Report SRC-TR-89-007, </type> <institution> Supercomputing Research Center Institute for Defense Analysis, Bowie, Maryland, </institution> <month> July </month> <year> 1989. </year>
Reference-contexts: Of the routers presented in the literature, there are many differing methods of deciding when and which packet to deroute. However, based on their buffering characteristics, the three basic classes of non-minimal adaptive routers are: deflection routers, queueing routers, and wormhole routers. Deflection routers <ref> [Smith 81, Maxemchuk 89, Fang & Szymanski 91, Smitley 89] </ref>, also known as "hot-potato" or desperation routers, use a synchronous approach and a time step long enough to transmit an entire packet. At each step the incoming packets are paired with outgoing channels and are transmitted in the next step.
Reference: [Thompson & Kung 77] <author> C. Thompson and H. Kung. </author> <title> Sorting on a mesh-connected parallel computer. </title> <journal> Communications of the ACM, </journal> <volume> 20(4) </volume> <pages> 263-271, </pages> <year> 1977. </year>
Reference-contexts: The shu*e converts row major indexing to shu*ed row major indexing on the mesh or torus topologies. This indexing scheme can be used for efficient sorting <ref> [Thompson & Kung 77] </ref>. Random leveled traffic can cause worst case behavior for oblivious hypercubes [Valiant & Brebner 81]. 7.1 Saturation The first set of results simply identifies the saturation points for the different traffic patterns.
Reference: [Thompson 79] <author> C. Thompson. </author> <title> Area-time complexity for VLSI. </title> <booktitle> In Annual Symposium on Theory of Computing, </booktitle> <pages> pages 81-88, </pages> <month> May </month> <year> 1979. </year>
Reference-contexts: The maximum load is one message every l, kl=4, and kl=2 cycles for the hypercube, torus, and mesh k-ary n-cube networks respectively, using shared bidirectional channels and messages with an average length of l. This constraint is due to the finite bisection bandwidth of the networks <ref> [Thompson 79] </ref> and the fact that on average half the messages cross the bisection for all but the complement and the random leveled traffic pattern.
Reference: [Valiant & Brebner 81] <author> L. G. Valiant and G. Brebner. </author> <title> Universal schemes for parallel communication. </title> <booktitle> In Proceedings of the 13th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 263-277, </pages> <year> 1981. </year>
Reference-contexts: This bound was tightened to ( p N=d) by Kaklamanis, Krizanc and Tsantilas [Kaklamanis et al. 90]. Valiant and Brebner avoided this bottleneck by introducing a randomized oblivious scheme for the hypercube messages are first sent to a randomly chosen intermediate node and then forwarded to their destination <ref> [Valiant & Brebner 81] </ref>. Although this probabilistically removes the theoretical worst-case bottleneck, it does so at the cost of doubling the average path lengths of messages in the network. For certain traffic patterns, though, oblivious routing performs very well. <p> Each of these enhancements provides potential advantages at the cost of greater complexity. The randomized oblivious router of Valiant <ref> [Valiant & Brebner 81] </ref>, while addressing a theoretical bottleneck, does so at a high cost: doubling the average message path length in direct networks. <p> The shu*e converts row major indexing to shu*ed row major indexing on the mesh or torus topologies. This indexing scheme can be used for efficient sorting [Thompson & Kung 77]. Random leveled traffic can cause worst case behavior for oblivious hypercubes <ref> [Valiant & Brebner 81] </ref>. 7.1 Saturation The first set of results simply identifies the saturation points for the different traffic patterns. The saturation point reported is the first normalized applied load, using intervals of .05, that saturates the network. See Table 1.
References-found: 47

