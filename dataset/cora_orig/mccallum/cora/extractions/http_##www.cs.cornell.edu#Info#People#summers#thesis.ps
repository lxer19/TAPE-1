URL: http://www.cs.cornell.edu/Info/People/summers/thesis.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/summers/abstract.html
Root-URL: http://www.cs.cornell.edu
Title: AUTOMATIC DISCOVERY OF LOGICAL DOCUMENT STRUCTURE  
Author: Kristen Maria Summers 
Degree: A Dissertation Presented to the Faculty of the Graduate School  in Partial Fulfillment of the Requirements for the Degree of Doctor of Philosophy by  
Date: August 1998  
Affiliation: of Cornell University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> O.T. Akindele and A. Belad. </author> <title> Construction of generic models of document structures using inference of tree grammars. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 206-209. </pages>
Reference-contexts: This is appropriate for analyzing a set of documents of a single style, which is either incompletely specified or simply unknown. Akindele and Belad present a system that builds a tree grammar, based on two sets of samples <ref> [1] </ref>. It uses the first set to validate an initial grammar provided by the user and those documents of the second set that conform to the initial grammar are used to extend it to the full grammar used for parsing. <p> If no pattern is found, the first symbol is popped from the list (considered a pattern of length one), and the process repeats with the new first symbol. This algorithm is described below, in terms of a sequence s with symbols s <ref> [1] </ref> through s [n], placing information about the patterns in a structure called results. <p> a C 1 and C 2 cannot exist. 2 6.1.2 Distance Measures The measurement of the distance from a segment to a prototype is given on a scale from 0 to 1 by a combination of the following attribute distances (each of which is normalized to fall within the interval <ref> [0; 1] </ref>.) An unspecified attribute always yields distance 0. Attributes may also occasionally be marked as necessary; a non-zero distance from a necessary attribute automatically generates a distance of 1 from the prototype. The distances with respect to the attributes are combined to form the total distance.
Reference: [2] <author> James Allan, Jim Davis, Dean Krafft, Daniela Rus, and Devika Sub-ramanian. </author> <title> Information agents for building hyperlinks. </title> <booktitle> In Proceedings of the ACM Conference on Information and Knowledge Management, </booktitle> <address> Washington DC, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: The automatic discovery of logical document structure can enable a multiplicity of electronic document tools, including (1) automated markup, (2) structural hyperlinking as discussed in <ref> [2] </ref>, (3) hierarchical browsing as discussed in [2] and [14], and (4) logical component-based retrieval as discussed in [77]. <p> The automatic discovery of logical document structure can enable a multiplicity of electronic document tools, including (1) automated markup, (2) structural hyperlinking as discussed in <ref> [2] </ref>, (3) hierarchical browsing as discussed in [2] and [14], and (4) logical component-based retrieval as discussed in [77]. <p> Allan et al. discuss in <ref> [2] </ref> some of these link types, based both on structure alone and on a combination of structure with Information Retrieval definitions of relevance. Translation of document style from one layout format to another can be performed in a general way, based on knowledge of logical structure.
Reference: [3] <author> A. Antonacopoulos and R. T. Ritchings. </author> <title> Representation and classification of complex-shaped printed regions using white tiles. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 1132-1135. </pages>
Reference-contexts: Wong, et al. present a method of making this separation in [92]; Fletcher and Kasturi present another in [30]. Both of these approaches are based on analysis of pixel density. Antonacopoulos and Ritchings present a method based on an analysis of connected white rectangles in <ref> [3] </ref>. Jain and Yu describe a method in [49] based on grouping aligned runs of black or white pixels and then performing an analysis of height, density, etc. Witten et al. provide a general overview of this particular problem in [91].
Reference: [4] <author> Dennis S. Arnon. Scrimshaw: </author> <title> A language for document queries and transformations. Electronic Publishing: </title> <journal> Origination, Dissemination and Design, </journal> <volume> 6(4) </volume> <pages> 385-396, </pages> <year> 1993. </year>
Reference-contexts: This problem forms part of the motivation for Arnon's Scrimshaw language for document description <ref> [4] </ref>, and Feng and Wakayama discuss the task in detail in [29], as do Kuikka and Penttonen in [56]. Raman's AsTeR system performs a particularly interesting form of document translation: it renders L A T E X documents in an aural style [75].
Reference: [5] <author> Nick Ayres and Tom Wesley. </author> <title> Using structure within electronic documents to make editors more accessible. </title> <editor> In Zagler et al. </editor> <volume> [97], </volume> <pages> pages 198-205. </pages>
Reference-contexts: One such series might consist of the title only, then the information in the title part (including author, etc.), then this information and the abstract, then the section headings, then the entire document. Navigating a document via structural views is discussed in <ref> [5] </ref>. Retrieval can be based in whole or in part on the existence of and relationships between logical structures. For instance, a user might wish to retrieve all the theorems from a paper or all the sections containing theorems. <p> In browsing, a user can follow links to sections or subsections (like turning directly to a page from the table of contents in a book) and to references. Wang describes a system with a similar capacity, based on an object-oriented database [87]; Ayres and Wesley <ref> [5] </ref> and Bauwens et al. [8] describe similar approaches, particularly designed to increase document accessibility for the visually disabled. 5 This kind of browsing is based on a form of hypertext; logical structure information can provide a basis for creating multiple kinds of hyperlinks within and between documents.
Reference: [6] <author> Antoine Azokly and Rolf Ingold. </author> <title> A language for document generic layout description and its use for segmentation into regions. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 1123-1126. </pages>
Reference-contexts: Liu-Gong et al. use a similar approach, without explicit grammars and parsing. They model documents of a given style as a physical hierarchy, in which each node contains instructions for separating its contents into its children; the behavior is equivalent to parsing [60]. Finally, Azokly and Ingold in <ref> [6] </ref> define a language for describing how a document is separated at various levels; this provides appropriate 20 information for deriving a hierarchy by repeated divisions. The above type of approach is ideal if a precise, unambiguous style is known for the logical structures of interest.
Reference: [7] <author> Henry S. Baird. </author> <title> Anatomy of a versatile page reader. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 80(7) </volume> <pages> 1059-1065, </pages> <year> 1992. </year>
Reference-contexts: Ittner have developed a general approach to segmenting documents into blocks of text that can be read together and are delimited by white space (i.e., each block has the same orientation and has appropriate spacing for reading as a sequence of lines, and blocks are separated by extra white space) <ref> [7, 47] </ref>. This system uses an analysis of the shape and density of page markings to generate a set of candidate segmentations, with components of varying sizes. <p> White rectangles that fall between text blocks of mid-range sizes are enumerated, sorted, and unified, generating a partial order of sets of white covers. In <ref> [7] </ref>, these are compared, and the chosen segmentation separates components at approximately the level of paragraphs or paragraph groups (although a paragraph interrupter, such as a list or equation, is likely to form its own block).
Reference: [8] <author> Bart Bauwens, Jan Engelen, Filip Evenepoel, Chris Tobin, and Tom Wesley. </author> <title> Structuring documents: the key to increasing access to information for the print disabled. </title> <editor> In Zagler et al. </editor> <volume> [97], </volume> <pages> pages 214-221. 172 173 </pages>
Reference-contexts: Wang describes a system with a similar capacity, based on an object-oriented database [87]; Ayres and Wesley [5] and Bauwens et al. <ref> [8] </ref> describe similar approaches, particularly designed to increase document accessibility for the visually disabled. 5 This kind of browsing is based on a form of hypertext; logical structure information can provide a basis for creating multiple kinds of hyperlinks within and between documents.
Reference: [9] <author> T. A. Bayer and H. Walischewski. </author> <title> Experiments on extracting structural information from paper documents using syntactic pattern analysis. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 476-479. </pages>
Reference-contexts: address blocks on envelopes [48]; Rahgozar et al. find the grid structure in tables [74]; Belad et al. decompose card catalog entries [10]; Watanabe and Huang decompose business cards [88]; Hao et al. find standard parts of office memos [39], and Bayer and Walischewski find similar elements of business letters <ref> [9] </ref>. Watanabe et al. describe several often useful techniques for this kind of task in [89], and Frankhauser and Xu present a general methodology for finding many such specific blocks in [27].
Reference: [10] <author> Abdel Belad, Julian C. Anigbogu, and Yannick Chenevoy. </author> <title> Qualitative analysis of low-level logical structures. Electronic Publishing: </title> <journal> Origination, Dissemination and Design, </journal> <volume> 6(4) </volume> <pages> 435-446, </pages> <year> 1993. </year>
Reference-contexts: Several approaches exist to finding such particular block types. For instance, Jain and Bhattacharjee find address blocks on envelopes [48]; Rahgozar et al. find the grid structure in tables [74]; Belad et al. decompose card catalog entries <ref> [10] </ref>; Watanabe and Huang decompose business cards [88]; Hao et al. find standard parts of office memos [39], and Bayer and Walischewski find similar elements of business letters [9].
Reference: [11] <author> Allen Brown, Anne Bruggemann-Klein, </author> <title> and An Feng, editors. Electronic Publishing: Origination, Dissemination and Design, 8(2-3). Special Issue: </title> <booktitle> Proceedings of the Sixth International Conference on Electronic Publishing, Document Manipulation and Typography. </booktitle> <publisher> Wiley, </publisher> <year> 1996. </year>
Reference: [12] <author> R. Brugger, A. Zramdini, and R. Ingold. </author> <title> Modeling documents for structure recognition using generalized N-Grams. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 56-60. </pages>
Reference-contexts: Brugger et al. take the concept of n-grams from natural language processing and apply them to tree structures, based on 5 kinds of sequences: left sibling, right sibling, ancestor, first child, and last child <ref> [12] </ref>; their system learns from a training set the probability of encountering a structure based on its preceders in these sequences. (They use trigrams and thus sequences of length 3.) It starts from tree leaves that are based on the physical structure; in the given example, these are text lines.
Reference: [13] <author> John F. Buford. </author> <title> Evaluation of a query language for structured hyperme-dia documents. </title> <editor> In James Ford, Fillia Makedon, and Samuel A. Rebel-sky, editors, </editor> <booktitle> Electronic Publishing and the Information Superhighway: Proceedings of the Dartmouth Institute for Advanced Graduate Studies, </booktitle> <pages> pages 105-116, </pages> <address> Boston, </address> <month> May </month> <year> 1995. </year> <pages> Birkhauser. </pages>
Reference-contexts: Finally, Buford discusses the usefulness of a particular query mechanism based in part on logical structure in <ref> [13] </ref>. Chapter 3 Logical Structure Types The problem of discovering logical document structures raises questions about the nature of the structures themselves.
Reference: [14] <author> Victoria A. Burrill. VORTEXT: </author> <title> VictORias TEXT reading and authoring system. </title> <editor> In J. C. van Vliet, editor, </editor> <booktitle> Text Processing and Document Manipulation: Proceedings of the International Conference, British Computer Society Workshop Series, </booktitle> <pages> pages 43-57, </pages> <address> Nottingham, April 1986. </address> <publisher> Cambridge University Press. </publisher>
Reference-contexts: The automatic discovery of logical document structure can enable a multiplicity of electronic document tools, including (1) automated markup, (2) structural hyperlinking as discussed in [2], (3) hierarchical browsing as discussed in [2] and <ref> [14] </ref>, and (4) logical component-based retrieval as discussed in [77]. <p> These include tools for browsing, hyperlinking, style translation, and retrieval. Burrill's vortext system provides a framework for document creation and browsing based on logical structure <ref> [14] </ref>. The user must specify logical structure upon creation of the text, so the problem of structure discovery is obviated. In browsing, a user can follow links to sections or subsections (like turning directly to a page from the table of contents in a book) and to references. <p> In the absence of strong empirical evidence, however, certain general observations can be made, based on the natures of commonly suggested applications. * In hierarchical browsing as described in <ref> [14, 77] </ref>, structures at higher levels of the tree are more significant than those at lower levels. Since this browsing is based on tree navigation, starting from the root, higher-level structures will be used for earlier decisions, on which later decisions will in part rely.
Reference: [15] <author> Francine R. Chen and Dan S. Bloomberg. </author> <title> Extraction of indicative summary sentences from imaged documents. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 227-232. </pages>
Reference-contexts: Html 4:0 emphasizes logical structure; visual formatting is meant to be handled by style sheets and browsers, and 4 An interesting exception to the rule that identifying content-based elements requires content-based information is found in <ref> [15] </ref>, which applies Information Retrieval techniques to word shapes. 7 the visual commands of earlier versions are deprecated [73]. There is also an interest in subsuming html by xml [32], which makes far more use of the power of sgml, as discussed in [31].
Reference: [16] <author> Philip A. Chou and Gary E. Kopec. </author> <title> A stochastic attribute grammar model of document production and its use in document image decoding. </title> <editor> In Luc M. Vincent and Henry S. Baird, editors, </editor> <booktitle> Proceedings: Document Recognition II, volume 2422 of SPIE Proceedings Series, </booktitle> <pages> pages 66-73. </pages> <booktitle> SPIE-The International Society for Optical Engineering, </booktitle> <year> 1995. </year>
Reference-contexts: Chou and Kopec use an information-theoretic approach to find the logical parse tree most likely to be associated with the observed layout, given known probabilities of flipping black pixels to white and of flipping white pixels to black <ref> [16] </ref>. This approach rigorously handles the type of deviations expected from the ocr process; the effects of non-conformity at a higher level of the hierarchy are unclear. <p> ocr output; a fruitful area for further research would be the automatic handling of likely indentation errors, perhaps by identifying which values are likely to be errors (and then finding better values or presenting them interactively to a user for correction) or by incorporating an approach such as that in <ref> [16] </ref> that integrates into the analysis a consideration of the probability 1 Since title parts follow somewhat different rules from running text, labler's main algorithm is of limited application to them; direct use of vertical distance tends to work well for title part segmentation, but the identification of the separation point <p> The approach in <ref> [16] </ref>, based on probabilities of flipped pixels, is promising; how to combine this with the much looser comparisons used in a generic system like labler remains to be explored. Separation Indentation patterns are sometimes repeated by chance, leading to segmentation errors.
Reference: [17] <author> C. L. A. Clarke, G. V. Cormack, and F. J. Burkowski. </author> <title> An algebra for structured text search and a framework for its implementation. </title> <journal> Computer Journal, </journal> <volume> 38(1) </volume> <pages> 43-56, </pages> <year> 1995. </year> <month> 174 </month>
Reference-contexts: Clarke et al. discuss a representation that makes no distinction between various types of structure <ref> [17, 18] </ref>. Logical, layout, and content structures are all represented equivalently. With this model, a hierarchy is an inadequate representation, since two structures (e.g., a page and a paragraph) may overlap without sharing a containment relationship.
Reference: [18] <author> Charles L. A. Clarke, G. V. Cormack, and F. J. Burkowski. </author> <title> An algebra for structured text search and a framework for its implementation, </title> <month> August </month> <year> 1994. </year> <note> url: ftp://cs-archive.uwaterloo.ca/cs-archive/CS-94-30/structxt.dvi. </note>
Reference-contexts: Clarke et al. discuss a representation that makes no distinction between various types of structure <ref> [17, 18] </ref>. Logical, layout, and content structures are all represented equivalently. With this model, a hierarchy is an inadequate representation, since two structures (e.g., a page and a paragraph) may overlap without sharing a containment relationship.
Reference: [19] <author> Nelson Cowan. </author> <title> Attention and Memory: An Integrated Framework. </title> <publisher> Oxford Psychology Series. Oxford University Press, Clarendon Press, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: Since, according to Cowan, this kind of difference demands attention and people are likely to remember what has attracted their attention <ref> [19] </ref>, such salient structures are likely to be of particular use in characterizing a remembered document. (Determining which structures differ greatly from their surroundings in this sense, however, is far from trivial.) The above is not meant to be exhaustive; it simply provides an example of the kinds of issues that
Reference: [20] <author> Bruce Croft. </author> <title> What do people want from information retrieval? (The top 10 research issues for companies that use and sell ir systems). </title> <journal> D-Lib Magazine, </journal> <month> November </month> <year> 1995. </year> <note> url: http://www.dlib.org/dlib.novem-ber95/11croft.html. </note>
Reference-contexts: The browsing and retrieval thus enabled are relevant to two of Croft's top ten research issues for Information Retrieval: interfaces and browsing, and efficient, flexible indexing and retrieval <ref> [20] </ref>. (In the latter issue, logical structure knowledge increases flexibility, not efficiency.) Logical markup, in sgml or another format, can proceed based on logical structure directly. For example, to generate a document instantiation with 8 sgml tags, perform a depth-first traversal of the tree.
Reference: [21] <author> Olivier Deforges and Barba Dominique. </author> <title> Segmentation of complex documents multilevel images: a robust and fast text bodies-headers detection and extraction scheme. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 770-773. </pages>
Reference-contexts: These identify lines. Differences in within-line projections identify block breakpoints. Deforges and Dominique address the same problem differently in <ref> [21] </ref>. They identify lines by connection and blocks by uniformity of line height and slope. Ishitani presents an approach based on emergent computation; each current piece follows rules for merging with its neighbors based on proximity and similarity and rules for splitting itself based on perceived errors [46].
Reference: [22] <author> Andreas Dengel and Frank Dubiel. </author> <title> Computer understanding of document structure. </title> <journal> In International Journal of Imaging Systems and Technology, </journal> <volume> 7(4) [81], </volume> <pages> pages 271-278. </pages>
Reference-contexts: Dengel and Dubiel describe a system that learns decision-trees for identifying the style of a business letter, which enables a parse <ref> [22] </ref>; this approach is based on considering the areas of the page covered with text, at three levels of granularity.
Reference: [23] <author> Denise Derrien and Michel Habib. </author> <title> Approche objet pour l'analyse de la structure logique des documents. </title> <editor> In Jacques Andre and Jean Bezivin, editors, </editor> <booktitle> Woodman '89: Workshop on Object-Oriented Document Manipulation, </booktitle> <pages> pages 226-235, </pages> <publisher> Rennes, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: Derrien and Habib and Esposito et al. provide exceptions to this general approach of parsing and its variations. Derrien and Habib build blocks from lines and classify them <ref> [23] </ref>. They use the interline distance as a guide for segmentation (i.e., lines with less distance between them should be grouped 22 together at a lower level of the hierarchy than lines with greater distance) and then apply known rules for classification. <p> This baseline corresponds to the segmentation method in <ref> [23] </ref>, as described in Sections 2.2 and 2.3. The idea is that in general coarser-grained document divisions will be separated by larger quantities of vertical spacing, as, for instance, sections are separated by larger spaces than are subsections, which in turn are separated by larger spaces than are paragraphs.
Reference: [24] <author> D. Doermann, A. Rosenfeld, and E. Rivlin. </author> <title> The function of documents. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 1077-1081. </pages>
Reference-contexts: This structure is identified as the functional level of a document in <ref> [24] </ref>. Logical components generally correspond to organizational pieces of a document, as organization will typically be driven by content considerations and also reflected in layout design.
Reference: [25] <author> Shona Douglas, Matthew Hurst, and David Quinn. </author> <title> Using natural language processing for identifying and interpreting tables in plain text, </title> <month> September </month> <year> 1994. </year> <note> URL: file://ftp.cogsci.ed.ac.uk/pub/shona/Tables.ps.gz. </note>
Reference-contexts: In all cases, alpha 5 Identifying tables is a substantial problem in its own right, and it does not form a part of this thesis. Some of the literature on this issue is [68], <ref> [25] </ref>, and [74]. 37 betic characters have been replaced with the letter "x." In the upper left version, all symbols and characters have been so replaced; in this representation, no difference in the format of the text blocks is visible.
Reference: [26] <author> Floriana Esposito, Donato Malerba, and Giovanni Semeraro. </author> <title> A knowledge-based approach to layout analysis. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 466-471. </pages>
Reference-contexts: Esposito et al. segment documents into lines and two levels of text blocks <ref> [26] </ref>. Lines are formed from basic blocks based on proximity, overlapping, and similarity of type and height.
Reference: [27] <author> Peter Fankhauser and Yi Xu. </author> <title> MarkItUp! An incremental approach to document structure recognition. Electronic Publishing: </title> <journal> Origination, Dissemination and Design, </journal> <volume> 6(4) </volume> <pages> 447-456, </pages> <year> 1993. </year> <month> 175 </month>
Reference-contexts: Watanabe et al. describe several often useful techniques for this kind of task in [89], and Frankhauser and Xu present a general methodology for finding many such specific blocks in <ref> [27] </ref>. Walischewski presents an approach that learns a document block model, represented as an attributed dag consisting of a tree with the addition of 17 sibling edges, by including in the model anything seen in the sample set; conflicting possibilities are given probabilities based on their observed frequencies [86].
Reference: [28] <author> Jon Fausey and Keith Shafer. </author> <title> All my data is in SGML. </title> <journal> Now what? Journal of the American Society for Information Science, </journal> <volume> 48(7) </volume> <pages> 638-643, </pages> <year> 1997. </year>
Reference-contexts: In addition to the direct use of sgml (advocated for many purposes in <ref> [28] </ref>, [62], and [94], for instance) and structured documents in other forms (as discussed in, for example, [41], [63], and [80]), this popularity is exemplified by some of the suggestions for the direction of html and the World Wide Web.
Reference: [29] <author> An Feng and Toshiro Wakayama. SIMON: </author> <title> A grammar based transformation system for structured documents. Electronic Publishing: Origination, Dissemination and Design, </title> <type> 6(4), </type> <year> 1993. </year>
Reference-contexts: This problem forms part of the motivation for Arnon's Scrimshaw language for document description [4], and Feng and Wakayama discuss the task in detail in <ref> [29] </ref>, as do Kuikka and Penttonen in [56]. Raman's AsTeR system performs a particularly interesting form of document translation: it renders L A T E X documents in an aural style [75].
Reference: [30] <author> Lloyd Alan Fletcher and Rangachar Kasturi. </author> <title> A robust algorithm for text string separation from mixed text/graphics images. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 10(6) </volume> <pages> 910-918, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: One form of this task is to separate the text from the graphics in a document. Other forms of analysis can then be applied to the resulting blocks, as appropriate. Wong, et al. present a method of making this separation in [92]; Fletcher and Kasturi present another in <ref> [30] </ref>. Both of these approaches are based on analysis of pixel density. Antonacopoulos and Ritchings present a method based on an analysis of connected white rectangles in [3].
Reference: [31] <author> Peter Flynn. </author> <title> W[h]ither the Web? the extension or replacement of HTML. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 48(7) </volume> <pages> 614-621, </pages> <year> 1997. </year>
Reference-contexts: application html, and structured documents reflects a recognition of this power. (The use of html is a bit problematic; although its official intent is to describe structure [93], many document providers misuse its structures in order to achieve a layout formatting on the browsers they expect their readers to use <ref> [31, 72] </ref>. This creates a special interpretation problem.) Unlike layout structure, which is intrinsically present in that it can be meaningfully described automatically, logical structure must either be imposed by markup or similar means or discovered by document analysis. <p> There is also an interest in subsuming html by xml [32], which makes far more use of the power of sgml, as discussed in <ref> [31] </ref>. Taking this line of thought to its logical conclusion, van Ossenbruggen et al. argue for using sgml itself, with stylesheets, on the Web [84]. <p> Html documents may also be considered semi-structured, although they incorporate the additional challenge that the provided logical labels are often misused <ref> [31, 72] </ref>. Labler provides one step towards the use of layout-based documents in a structure-based setting, such as a digital library.
Reference: [32] <author> Peter Flynn, Terry Allen, Tom Borgman, Tim Bray, Robin Cover, Chirstopher Maden, Eve Maler, Peter Murray-Rust, Liam Quin, Michael Sperberg-McQueen, Joel Weber, and Makoto Murata. </author> <title> Frequently Asked Questions about the Extensible Markup Language: The XML FAQ, </title> <note> Version 1.21, February 1998. url: http://www.ucc.ie./xml/. </note>
Reference-contexts: There is also an interest in subsuming html by xml <ref> [32] </ref>, which makes far more use of the power of sgml, as discussed in [31]. Taking this line of thought to its logical conclusion, van Ossenbruggen et al. argue for using sgml itself, with stylesheets, on the Web [84].
Reference: [33] <author> E. Fox, Q. Chen, and R. </author> <title> France. Integrating search and retrieval with hypertext. </title> <editor> In E. Berk and J. Devlin, editors, </editor> <booktitle> Hypertext/Hypermedia Handbook, </booktitle> <pages> pages 329-355. </pages> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: For instance, a user might wish to retrieve all the theorems from a paper or all the sections containing theorems. This can, of course, be combined with classical Information Retrieval techniques such as those in <ref> [33, 40, 78] </ref> to yield results that are based on both content and logical structure, such as all the theorems in sections relevant to a given topic. As an example of logical structure use, labler generates a document instantiation in html.
Reference: [34] <author> Hiromichi Fujisawa, Itsuko Kiuchi, Takuo Koguchi, and Hidefumi Kondo. </author> <title> A visual user interface for a personal information base using a concept network. In Database Systems for Advanced Applications '91: </title> <booktitle> Proceedings of the Second International Symposium, </booktitle> <pages> pages 69-78, </pages> <address> Tokyo, April 1991. </address> <publisher> World Scientific. </publisher>
Reference-contexts: parsed accordingly. 1 Note that this could involve building a full hierarchy, but the approach the authors chose was simply to identify block types; presumably, they include the higher-level structures, such as lists, that are entailed by their block classifications. 19 Fujisawa et al. describe precisely the above approach in <ref> [34, 35, 36, 95] </ref>; the logical structure is defined at the section and subsection levels and at the paragraph level, and the relationships among these structures and their layout representations are described by a cfg.
Reference: [35] <author> Hiromichi Fujisawa, Yoshihiro Shima, Masashi Koga, and Tatsuya Mu-rakami. </author> <title> Automatically organizing document bases using document understanding techniques. In Future Databases '92: </title> <booktitle> Proceedings of the Second Far-East Workshop on Future Database Systems, </booktitle> <pages> pages 244-253, </pages> <address> Kyoto, April 1992. </address> <publisher> World Scientific. </publisher>
Reference-contexts: parsed accordingly. 1 Note that this could involve building a full hierarchy, but the approach the authors chose was simply to identify block types; presumably, they include the higher-level structures, such as lists, that are entailed by their block classifications. 19 Fujisawa et al. describe precisely the above approach in <ref> [34, 35, 36, 95] </ref>; the logical structure is defined at the section and subsection levels and at the paragraph level, and the relationships among these structures and their layout representations are described by a cfg.
Reference: [36] <author> Hiromichi Fujisawa, Hiroshi Yashiro, Jun'ichi Higashino, Yoshihiro Shima, Yasuaki Nakano, and Tatsuya Murakami. </author> <title> Document analysis and decomposition method for multimedia contents retrieval. </title> <booktitle> In Proceedings of the Second International Syposium on Interoperable Information Systems, </booktitle> <pages> pages 231-238, </pages> <address> Tokyo, </address> <month> November </month> <year> 1988. </year> <month> 176 </month>
Reference-contexts: parsed accordingly. 1 Note that this could involve building a full hierarchy, but the approach the authors chose was simply to identify block types; presumably, they include the higher-level structures, such as lists, that are entailed by their block classifications. 19 Fujisawa et al. describe precisely the above approach in <ref> [34, 35, 36, 95] </ref>; the logical structure is defined at the section and subsection levels and at the paragraph level, and the relationships among these structures and their layout representations are described by a cfg.
Reference: [37] <author> Charles F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1990. </year>
Reference-contexts: Many such useful document manipulation tools can be enabled by a knowledge of the logical structure of a document (defined in Section 1.1); 1 2 the popularity of markup systems, such as sgml <ref> [37] </ref> and its application html, and structured documents reflects a recognition of this power. (The use of html is a bit problematic; although its official intent is to describe structure [93], many document providers misuse its structures in order to achieve a layout formatting on the browsers they expect their readers
Reference: [38] <author> Jaekya Ha, Robert Haralick, and Ihsin Phillips. </author> <title> Document page decomposition by the bounding-box projection technique. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 1119-1122. </pages>
Reference-contexts: Lovegrove and Brails-ford address this problem for pdf files in [61]; blocks are identified based on matching font size and margins and considering vertical white space. 18 Ha et al. propose a method for finding text lines and the blocks they form in <ref> [38] </ref>, by identifying bounding boxes, then considering the vertical and horizontal projections of pixel density. These identify lines. Differences in within-line projections identify block breakpoints. Deforges and Dominique address the same problem differently in [21]. They identify lines by connection and blocks by uniformity of line height and slope.
Reference: [39] <author> Xiaolong Hao, Jason T. L. Wang, and Peter A. Ng. </author> <title> Information extraction from the structured part of office documents. </title> <journal> Information Sciences, </journal> <volume> 91(3-4):245-274, </volume> <year> 1996. </year>
Reference-contexts: For instance, Jain and Bhattacharjee find address blocks on envelopes [48]; Rahgozar et al. find the grid structure in tables [74]; Belad et al. decompose card catalog entries [10]; Watanabe and Huang decompose business cards [88]; Hao et al. find standard parts of office memos <ref> [39] </ref>, and Bayer and Walischewski find similar elements of business letters [9]. Watanabe et al. describe several often useful techniques for this kind of task in [89], and Frankhauser and Xu present a general methodology for finding many such specific blocks in [27].
Reference: [40] <author> Marti A. Hearst and Christian Plaunt. </author> <title> Subtopic structuring for full-length document access. </title> <booktitle> In Proceedings of the Sixteenth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, </booktitle> <pages> pages 59-68, </pages> <address> Pittsburgh, </address> <year> 1993. </year>
Reference-contexts: Identifying them requires significant linguistic analysis and subjective judgement about subject matter, 4 and there is no reason to believe they will consistently form a hierarchy in any given document. Finding and managing such components is an important and interesting task, elements of which are addressed, for example, in <ref> [40] </ref>, [54], and [82]; it is also a very different kind of task from finding and managing logical components, and this thesis addresses the latter. <p> For instance, a user might wish to retrieve all the theorems from a paper or all the sections containing theorems. This can, of course, be combined with classical Information Retrieval techniques such as those in <ref> [33, 40, 78] </ref> to yield results that are based on both content and logical structure, such as all the theorems in sections relevant to a given topic. As an example of logical structure use, labler generates a document instantiation in html.
Reference: [41] <author> M. H. Heine. </author> <title> A provisional notation for describing the information structure of documents. </title> <journal> Journal of Documentation, </journal> <volume> 51(4) </volume> <pages> 339-359, </pages> <year> 1995. </year>
Reference-contexts: In addition to the direct use of sgml (advocated for many purposes in [28], [62], and [94], for instance) and structured documents in other forms (as discussed in, for example, <ref> [41] </ref>, [63], and [80]), this popularity is exemplified by some of the suggestions for the direction of html and the World Wide Web.
Reference: [42] <author> John E. Hopcroft and Jeffrey D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1979. </year>
Reference-contexts: Takasu, et al. infer a matrix grammar, in which concatenation may be either vertical or horizontal, by generalizing from a set of examples; any observed form is acceptable, and any adjacent structure repetition is generalized to accept the Kleene closure <ref> [42] </ref> of its form of concatenation [83]. Dengel and Dubiel describe a system that learns decision-trees for identifying the style of a business letter, which enables a parse [22]; this approach is based on considering the areas of the page covered with text, at three levels of granularity.
Reference: [43] <author> Tao Hu and Rolf Ingold. </author> <title> A mixed approach toward an efficient logical structure recognition from document images. Electronic Publishing: </title> <journal> Origination, Dissemination and Design, </journal> <volume> 6(4) </volume> <pages> 457-468, </pages> <year> 1993. </year>
Reference-contexts: This yields an approach appropriate if a style is known but some documents may not conform precisely, whether due to idiosyncratic authoring or to ocr errors. Hu and Ingold use fuzzy parsing <ref> [43] </ref>; when a precise parse is impossible, the system chooses one or more near-matches, so as to minimize the total deviation from a correct parse tree, based on a predefined cost function. Thus a document that deviates slightly from the given style can be adequately analyzed.
Reference: [44] <institution> International Assocation for Pattern Recognition TC-11, </institution> <address> TC-10, </address> <booktitle> Cana-dian Image Processing and Pattern Recognition Society, Centre for Pattern Recognition and Machine Intelligence, Institute of Electrical and Electronics Engineers, Section Montreal, Laboratoire Scribens, International Graphonomics Society, Centre de recherche Informatique de Montreal, and Institute for Robotics and Intelligent Systems. Proceedings of the Third International Conference on Document Analysis and Recognition. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> August </month> <year> 1995. </year>
Reference: [45] <institution> International Association for Pattern Recognition, </institution> <address> TC 10 and 11, </address> <booktitle> International Graphonomics Society, German Association for Computer Science, and German Association for Information Technology. Proceedings of the Fourth International Conference on Document Analysis and Recognition. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> August </month> <year> 1997. </year>
Reference: [46] <author> Yasuto Ishitani. </author> <title> Document layout analysis based on emergent computation. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 45-50. 177 </pages>
Reference-contexts: They identify lines by connection and blocks by uniformity of line height and slope. Ishitani presents an approach based on emergent computation; each current piece follows rules for merging with its neighbors based on proximity and similarity and rules for splitting itself based on perceived errors <ref> [46] </ref>. Poirier and Dagenais address the special case of finding lines and blocks for converting PostScript files to html in [70].
Reference: [47] <author> D. J. Ittner and H. S. Baird. </author> <title> Language-free layout analysis. </title> <booktitle> In Proceedings of the Second Annual International Conference on Document Analysis and Recognition, </booktitle> <pages> pages 336-340. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1993. </year>
Reference-contexts: Ittner have developed a general approach to segmenting documents into blocks of text that can be read together and are delimited by white space (i.e., each block has the same orientation and has appropriate spacing for reading as a sequence of lines, and blocks are separated by extra white space) <ref> [7, 47] </ref>. This system uses an analysis of the shape and density of page markings to generate a set of candidate segmentations, with components of varying sizes. <p> In [7], these are compared, and the chosen segmentation separates components at approximately the level of paragraphs or paragraph groups (although a paragraph interrupter, such as a list or equation, is likely to form its own block). In <ref> [47] </ref>, the first result found that satisfies a given stopping rule is chosen, and the results are similar.
Reference: [48] <author> A. Jain and S. Bhattacharjee. </author> <title> Address block location on envelopes using Gabor filters. </title> <journal> Pattern Recognition, </journal> <volume> 25(12), </volume> <year> 1992. </year>
Reference-contexts: Within the text domain, a document can be divided into blocks at the paragraph level and/or blocks that are specific to a particular document type. Several approaches exist to finding such particular block types. For instance, Jain and Bhattacharjee find address blocks on envelopes <ref> [48] </ref>; Rahgozar et al. find the grid structure in tables [74]; Belad et al. decompose card catalog entries [10]; Watanabe and Huang decompose business cards [88]; Hao et al. find standard parts of office memos [39], and Bayer and Walischewski find similar elements of business letters [9].
Reference: [49] <author> Anil K. Jain and Bin Yu. </author> <title> Page segmentation using document model. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 34-37. </pages>
Reference-contexts: Both of these approaches are based on analysis of pixel density. Antonacopoulos and Ritchings present a method based on an analysis of connected white rectangles in [3]. Jain and Yu describe a method in <ref> [49] </ref> based on grouping aligned runs of black or white pixels and then performing an analysis of height, density, etc. Witten et al. provide a general overview of this particular problem in [91].
Reference: [50] <author> Tao Jiang, Lusheng Wang, and Kaizhong Zhang. </author> <title> Alignment of trees an alternative to tree edit. In Combinatorial Pattern Matching: </title> <booktitle> 5th Annual Symposium, CPM 94, Lecture Notes in Computer Science, </booktitle> <pages> pages 75-86. </pages> <publisher> Springer-Verlag, </publisher> <address> Asilomar, California, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Finally, a more results-oriented measure can be found by aligning the generated structure hierarchy with the correct one. Alignment of trees is defined in <ref> [50] </ref>, in the following manner. Consider all information about a node other than its position in the surrounding tree to be contained in a label for that node. <p> The alignment distance between ordered trees T 1 and T 2 can be found in time O (jT 1 j jT 2 j (deg (T 1 ) + deg (T 2 ))), using the algorithm described in <ref> [50] </ref>. Complete document structure hierarchies form a special case of ordered trees. In comparing segmentations, the relevant attributes of a node are the position at which it begins and the position at which it ends.
Reference: [51] <author> Kunihiko Kaneko and Akifumi Makinouchi. </author> <title> Data storage and query processing for structured document databases. </title> <editor> In Roland R. Wagner, editor, </editor> <booktitle> Proceedings: Eighth International Workshop on Database and Expert Systems Applications, </booktitle> <pages> pages 92-97. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1997. </year>
Reference-contexts: Kuikka and Salminen present a system that bases queries on specifications of structures and keywords they contain, presuming prior knowledge of a logical structure grammar, much like an sgml Document Type Definition (dtd) [57]. Kaneko and Makinouchi discuss the processing of structure-based document queries in an object-oriented database <ref> [51] </ref>. Some researchers have presented query mechanisms tailored specifically to structured documents.
Reference: [52] <author> Michael H. Kay. </author> <title> Textmaster document filing and retrieval using ODA. </title> <editor> In J. C. van Vliet, editor, </editor> <booktitle> Text Processing and Document Manipulation: Proceedings of the International Conference, British Computer Society Workshop Series, </booktitle> <pages> pages 125-139, </pages> <address> Nottingham, April 1986. </address> <publisher> Cambridge University Press. </publisher>
Reference-contexts: Logical structure can also provide a basis for retrieval, either of specified logical document portions or of entire documents, based on the structures they contain. Kay's Textmaster system, for example, uses this advantage to base retrieval on a combination of logical structure and the presence of keywords <ref> [52] </ref>. Scrimshaw, in addition to style translation, provides a framework for document queries based on logical structure. Pfeifer et al. have extended wais to index structures separately and allow structure specification in queries [69].
Reference: [53] <author> Bertin Klein and Peter Fankhauser. </author> <title> Error tolerant document structure analysis. </title> <booktitle> In IEEE International Forum on Research and Technology on Advances in Digital Libraries: </booktitle> <volume> ADL '97, </volume> <pages> pages 116-127. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: This distinguishes labler both from systems that consider only layout, in that it can identify structures that they cannot, and from systems that rely on domain-specific interpretations of text words or characters (such as that in <ref> [53] </ref>), in that its approach is more generally applicable. If some constraints on the layout representation of the logical structure are known, these are incorporated as well. <p> Thus a document that deviates slightly from the given style can be adequately analyzed. Klein and Fankhauser present a system of character-based parsing in which the user can specify fallback rules, geared to handling the types of errors expected for a given document type <ref> [53] </ref>. This approach is very sensible for contexts in which deviations from the usual style can be expected to take a small number of known forms.
Reference: [54] <author> Gary E. Kopec. </author> <title> Document image decoding in the UC Berkeley digital library. </title> <editor> In Luc M. Vincent and Jonathon J. Hull, editors, </editor> <booktitle> Proceedings: Document Recognition III, volume 2660 of SPIE Proceedings Series, </booktitle> <pages> pages 2-13. </pages> <booktitle> SPIE-The International Society for Optical Engineering, </booktitle> <year> 1996. </year>
Reference-contexts: Finding and managing such components is an important and interesting task, elements of which are addressed, for example, in [40], <ref> [54] </ref>, and [82]; it is also a very different kind of task from finding and managing logical components, and this thesis addresses the latter.
Reference: [55] <author> D. Kroemker, </author> <title> editor. Computer Networks and ISDN Systems: </title> <journal> The International Journal of Computer and Telecommunications Networking, </journal> <volume> 27(6). </volume> <booktitle> Special Issue: Proceedings of the Third International World-Wide Web Conference., </booktitle> <year> 1995. </year> <month> 178 </month>
Reference: [56] <author> E. Kuikka and M. Penttonen. </author> <title> Transformation of structured documents. Electronic Publishing: Origination, Dissemination, </title> <journal> and Design, </journal> <volume> 8(4) </volume> <pages> 319-341, </pages> <year> 1995. </year>
Reference-contexts: This problem forms part of the motivation for Arnon's Scrimshaw language for document description [4], and Feng and Wakayama discuss the task in detail in [29], as do Kuikka and Penttonen in <ref> [56] </ref>. Raman's AsTeR system performs a particularly interesting form of document translation: it renders L A T E X documents in an aural style [75]. Logical structure can also provide a basis for retrieval, either of specified logical document portions or of entire documents, based on the structures they contain.
Reference: [57] <author> E. Kuikka and A. Salminen. </author> <title> Filtering structured documents in the SYN-DOC environment. In Electronic Publishing: </title> <booktitle> Origination, Dissemination and Design, </booktitle> <pages> 8(2-3) [11], pages 181-193. </pages>
Reference-contexts: Kuikka and Salminen present a system that bases queries on specifications of structures and keywords they contain, presuming prior knowledge of a logical structure grammar, much like an sgml Document Type Definition (dtd) <ref> [57] </ref>. Kaneko and Makinouchi discuss the processing of structure-based document queries in an object-oriented database [51]. Some researchers have presented query mechanisms tailored specifically to structured documents.
Reference: [58] <author> Mounia Lalmas. </author> <title> Dempster-Shafer's theory of evidence applied to structured documents: modelling uncertainty. </title> <editor> In Nicholas J. Belkin, A. Desai Narasimhalu, and Peter Willett, editors, </editor> <booktitle> Proceedings of the 20th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval. Special Issue of the SIGIR Forum, </booktitle> <pages> pages 110-118, </pages> <year> 1997. </year>
Reference-contexts: Kaneko and Makinouchi discuss the processing of structure-based document queries in an object-oriented database [51]. Some researchers have presented query mechanisms tailored specifically to structured documents. Lalmas, for instance, proposes a fetch-and-browse strategy for identifying the best document structure with which to satisfy a conventional ir query in <ref> [58] </ref>; if a document is deemed relevant, its structure is browsed, top-down, to find the most specific element of high relevance. Yeh 29 et al. present a query language called ssql for structured documents and an approach to use with it in [96].
Reference: [59] <author> Christopher Lewis, Daniela Rus, and Matthew Scott. </author> <title> A structure detector for tables. </title> <type> Forthcoming Technical Report. </type>
Reference-contexts: shape of a piece of text. (Height is a special case of contours.) Both of these kinds of cues may be necessary; for instance, the contours of an indented list provide its identifying shape of a hanging indent, but a table is characterized by the internal shape of its columnization <ref> [59] </ref>. 5 Since geometry involves the shapes formed by the marks on the paper or screen, its contribution can (inversely) be found by an analysis of the white space in a document. 3.2.2 Marking Observables Marking observables consist of non-linguistic marks on the paper or screen; this includes attributes like font
Reference: [60] <author> Y. H. Liu-Gong, B. Dubuisson, and H. N. Pham. </author> <title> A general analysis system for document's layout structure recognition. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 597-600. </pages>
Reference-contexts: Liu-Gong et al. use a similar approach, without explicit grammars and parsing. They model documents of a given style as a physical hierarchy, in which each node contains instructions for separating its contents into its children; the behavior is equivalent to parsing <ref> [60] </ref>. Finally, Azokly and Ingold in [6] define a language for describing how a document is separated at various levels; this provides appropriate 20 information for deriving a hierarchy by repeated divisions.
Reference: [61] <author> William S. Lovegrove and David F. Brailsford. </author> <title> Document analysis of PDF files: methods, results and implications. In Electronic Publishing: </title> <booktitle> Origination, Dissemination and Design, </booktitle> <pages> 8(2-3) [11], pages 207-220. </pages>
Reference-contexts: In [47], the first result found that satisfies a given stopping rule is chosen, and the results are similar. Lovegrove and Brails-ford address this problem for pdf files in <ref> [61] </ref>; blocks are identified based on matching font size and margins and considering vertical white space. 18 Ha et al. propose a method for finding text lines and the blocks they form in [38], by identifying bounding boxes, then considering the vertical and horizontal projections of pixel density.
Reference: [62] <author> Yves Marcoux and Martin S'evigny. </author> <title> Why SGML? Why now? Journal of the American Society for Information Science, </title> <booktitle> 48(7) </booktitle> <pages> 584-592, </pages> <year> 1997. </year>
Reference-contexts: In addition to the direct use of sgml (advocated for many purposes in [28], <ref> [62] </ref>, and [94], for instance) and structured documents in other forms (as discussed in, for example, [41], [63], and [80]), this popularity is exemplified by some of the suggestions for the direction of html and the World Wide Web.
Reference: [63] <author> Ethan V. Munson. </author> <title> A new presentation language for structured documents. In Electronic Publishing: </title> <booktitle> Origination, Dissemination and Design, </booktitle> <pages> 8(2-3) [11], pages 125-138. </pages>
Reference-contexts: In addition to the direct use of sgml (advocated for many purposes in [28], [62], and [94], for instance) and structured documents in other forms (as discussed in, for example, [41], <ref> [63] </ref>, and [80]), this popularity is exemplified by some of the suggestions for the direction of html and the World Wide Web.
Reference: [64] <author> Makoto Murata. </author> <title> File format for documents containing both logical and layout structures. Electronic Publishing: </title> <journal> Origination, Dissemination and Design, </journal> <volume> 8(4) </volume> <pages> 295-317, </pages> <year> 1995. </year>
Reference-contexts: Murata proposes a document model designed to provide easy access by both logical and layout structure <ref> [64] </ref>. The representation is based primarily 3 An entry of "variable" indicates that the approach does not specify this, and it appears to depend entirely on the desired application. 26 on intermediate nodes that represent logical (layout) structures that have precisely corresponding layout (logical) structures.
Reference: [65] <author> G. Nagy, S. Seth, and M. Vishwanathan. </author> <title> A prototype document image analysis system for technical journals. </title> <journal> Computer, </journal> <volume> 25(7), </volume> <year> 1992. </year>
Reference-contexts: This decomposes the document into text blocks, which may then be assembled into a reading order or analyzed to determine their content. For instance, this is the role of 15 16 logical structure in <ref> [65] </ref>, an outline of a text reading system. Logical structure also plays this role in [66], a system that derives reading orders for newspaper pages. One form of this task is to separate the text from the graphics in a document.
Reference: [66] <author> Debashish Niyogi and Sargur Srihari. </author> <title> An integrated approach to document decomposition and structural analysis. </title> <journal> In International Journal of Imaging Systems and Technology, </journal> <volume> 7(4) [81], </volume> <pages> pages 330-342. 179 </pages>
Reference-contexts: This decomposes the document into text blocks, which may then be assembled into a reading order or analyzed to determine their content. For instance, this is the role of 15 16 logical structure in [65], an outline of a text reading system. Logical structure also plays this role in <ref> [66] </ref>, a system that derives reading orders for newspaper pages. One form of this task is to separate the text from the graphics in a document. Other forms of analysis can then be applied to the resulting blocks, as appropriate.
Reference: [67] <author> Debashish Niyogi and Sargur Srihari. </author> <title> The use of document structure analysis to retrieve information from documents in digital libraries. </title> <editor> In Luc M. Vincent and Jonathon J. Hull, editors, </editor> <booktitle> Proceedings: Document Recognition IV, volume 3027 of SPIE Proceedings Series, </booktitle> <pages> pages 207-218. </pages> <booktitle> SPIE-The International Society for Optical Engineering, </booktitle> <year> 1997. </year>
Reference-contexts: Niyogi and Srihari describe a three-part query for a collection of documents of different (parseable) types in <ref> [67] </ref>. The first part specifies the document type, narrowing the range for the rest to documents of that type; the second specifies the structure type to consider, and the third specifies the characteristics it must have and which part of it to return.
Reference: [68] <author> Pat Norrish. </author> <title> Semantic structures of text. </title> <editor> In Jacques Andre, Richard Fu-ruta, and Vincent Quint, editors, </editor> <title> Structured Documents, </title> <booktitle> The Cambridge Series on Electronic Publishing, </booktitle> <pages> pages 143-159. </pages> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989. </year>
Reference-contexts: Similarly, consider a page break, preceded by a complete sentence that reaches to the right edge of the page. Whether the next block of text is a continuation of the same paragraph or the start of a new one may be ambiguous even to a human reader <ref> [68] </ref>. <p> In all cases, alpha 5 Identifying tables is a substantial problem in its own right, and it does not form a part of this thesis. Some of the literature on this issue is <ref> [68] </ref>, [25], and [74]. 37 betic characters have been replaced with the letter "x." In the upper left version, all symbols and characters have been so replaced; in this representation, no difference in the format of the text blocks is visible.
Reference: [69] <author> Ulrich Pfeifer, Norbert Fuhr, and Tung Huynh. </author> <title> Searching structured documents with the enhanced retrieval functionality of freeWAIS-sf and SFgate. In Computer Networks and ISDN Systems: </title> <journal> The International Journal of Computer and Telecommunications Networking, </journal> <volume> 27(6) [55], </volume> <pages> pages 1027-1036. </pages>
Reference-contexts: Scrimshaw, in addition to style translation, provides a framework for document queries based on logical structure. Pfeifer et al. have extended wais to index structures separately and allow structure specification in queries <ref> [69] </ref>. Kuikka and Salminen present a system that bases queries on specifications of structures and keywords they contain, presuming prior knowledge of a logical structure grammar, much like an sgml Document Type Definition (dtd) [57]. Kaneko and Makinouchi discuss the processing of structure-based document queries in an object-oriented database [51].
Reference: [70] <author> Benoit Poirier and Michel Dagenais. </author> <title> An interactive system to extract structured text from a geometrical representation. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 342-346. </pages>
Reference-contexts: Poirier and Dagenais address the special case of finding lines and blocks for converting PostScript files to html in <ref> [70] </ref>.
Reference: [71] <author> Gilbert B. Porter and Emil V. Rainero. </author> <title> Document reconstruction: A system for recovering document structure from layout. </title> <booktitle> In Proceedings of the Conference on Electronic Publishing, </booktitle> <pages> pages 127-141, </pages> <year> 1992. </year>
Reference-contexts: The rules used are common to a large group of technical journals, so the results are applicable to articles from any of them. Porter and Rainero advocate a similar approach that uses tree manipulation rather than explicit parsing <ref> [71] </ref>.
Reference: [72] <author> Vincent Quint, Cecile Roisin, and Irene Vatton. </author> <title> A structured authoring environment for the World-Wide Web. </title> <booktitle> In Kroemker [55], </booktitle> <pages> pages 831-840. </pages>
Reference-contexts: application html, and structured documents reflects a recognition of this power. (The use of html is a bit problematic; although its official intent is to describe structure [93], many document providers misuse its structures in order to achieve a layout formatting on the browsers they expect their readers to use <ref> [31, 72] </ref>. This creates a special interpretation problem.) Unlike layout structure, which is intrinsically present in that it can be meaningfully described automatically, logical structure must either be imposed by markup or similar means or discovered by document analysis. <p> Html documents may also be considered semi-structured, although they incorporate the additional challenge that the provided logical labels are often misused <ref> [31, 72] </ref>. Labler provides one step towards the use of layout-based documents in a structure-based setting, such as a digital library.
Reference: [73] <author> Dave Raggett, Arnaud Le Hors, and Ian Jacobs. </author> <title> HTML 4.0 Specification, </title> <note> 1997. url: http://www.w3.org/TR/REC-html40/. </note>
Reference-contexts: logical structure; visual formatting is meant to be handled by style sheets and browsers, and 4 An interesting exception to the rule that identifying content-based elements requires content-based information is found in [15], which applies Information Retrieval techniques to word shapes. 7 the visual commands of earlier versions are deprecated <ref> [73] </ref>. There is also an interest in subsuming html by xml [32], which makes far more use of the power of sgml, as discussed in [31]. Taking this line of thought to its logical conclusion, van Ossenbruggen et al. argue for using sgml itself, with stylesheets, on the Web [84].
Reference: [74] <author> M. Armon Rahgozar, Zhigang Fan, and Emil V. Rainero. </author> <title> Tabular document recognition. </title> <booktitle> In SPIE Proceedings, </booktitle> <address> San Jose, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: Several approaches exist to finding such particular block types. For instance, Jain and Bhattacharjee find address blocks on envelopes [48]; Rahgozar et al. find the grid structure in tables <ref> [74] </ref>; Belad et al. decompose card catalog entries [10]; Watanabe and Huang decompose business cards [88]; Hao et al. find standard parts of office memos [39], and Bayer and Walischewski find similar elements of business letters [9]. <p> In all cases, alpha 5 Identifying tables is a substantial problem in its own right, and it does not form a part of this thesis. Some of the literature on this issue is [68], [25], and <ref> [74] </ref>. 37 betic characters have been replaced with the letter "x." In the upper left version, all symbols and characters have been so replaced; in this representation, no difference in the format of the text blocks is visible.
Reference: [75] <author> T. V. Raman. </author> <title> Audio System for Technical Readings. </title> <type> PhD thesis, </type> <institution> Cor-nell University, </institution> <month> May </month> <year> 1994. </year> <note> url: http://www.cs.cornell.edu/Info/People/raman/phd-thesis/. </note>
Reference-contexts: Raman's AsTeR system performs a particularly interesting form of document translation: it renders L A T E X documents in an aural style <ref> [75] </ref>. Logical structure can also provide a basis for retrieval, either of specified logical document portions or of entire documents, based on the structures they contain. Kay's Textmaster system, for example, uses this advantage to base retrieval on a combination of logical structure and the presence of keywords [52].
Reference: [76] <author> Daniela Rus and Devika Subramanian. </author> <title> Multi-media RISSC Informatics: Retrieving Information with Simple Structural Components. </title> <booktitle> In Proceedings of the ACM Conference on Information and Knowledge Management, </booktitle> <address> Washington DC, </address> <month> November </month> <year> 1993. </year> <month> 180 </month>
Reference-contexts: Each document line in 58 such a block constitutes a sub-block. Other initial segmentations are possible, such as the one proposed in <ref> [76] </ref>. Step 4 reflects both the observation that basic structures may be interrupted by structures that fall horizontally within them and the fact that a basic structure may contain blank vertical space if the margin of the later part is readily identifiable as a continuation of the earlier part.
Reference: [77] <author> Daniela Rus and Kristen Summers. </author> <title> Using non-textual cues for electronic document browsing. </title> <editor> In Nabil R. Adam, Bharat K. Bhargava, and Ye-lena Yesha, editors, </editor> <booktitle> Digital Libraries: Current Issues, Lecture Notes in Computer Science, chapter 9, </booktitle> <pages> pages 129 - 162. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: The automatic discovery of logical document structure can enable a multiplicity of electronic document tools, including (1) automated markup, (2) structural hyperlinking as discussed in [2], (3) hierarchical browsing as discussed in [2] and [14], and (4) logical component-based retrieval as discussed in <ref> [77] </ref>. <p> In the absence of strong empirical evidence, however, certain general observations can be made, based on the natures of commonly suggested applications. * In hierarchical browsing as described in <ref> [14, 77] </ref>, structures at higher levels of the tree are more significant than those at lower levels. Since this browsing is based on tree navigation, starting from the root, higher-level structures will be used for earlier decisions, on which later decisions will in part rely.
Reference: [78] <author> Gerard Salton. </author> <title> Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, </address> <year> 1989. </year>
Reference-contexts: For instance, a user might wish to retrieve all the theorems from a paper or all the sections containing theorems. This can, of course, be combined with classical Information Retrieval techniques such as those in <ref> [33, 40, 78] </ref> to yield results that are based on both content and logical structure, such as all the theorems in sections relevant to a given topic. As an example of logical structure use, labler generates a document instantiation in html. <p> Labler's performance on these measures is given, together with some baseline results, in Section 8.2. 8.1.1 Segmentation Evaluation The evaluation of the segmentation performance relies on the ideas of precision and recall from information retrieval. In the realm of IR, these are 113 114 defined as follows <ref> [78] </ref>: P recision = Relevant retrieved T otal retrieved Recall = Relevant retrieved T otal relevant Logical groupings are analogous to relevant documents, and the groups formed are analogous to retrieved documents.
Reference: [79] <author> D. Sankoff and J. Kruskal. </author> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: This yields: D (p; b) = k=1 k )(d 0 k ; b)) The attribute distances are defined as follows. Shape The gross geometric distance between a text block and a structure prototype is given by the Levenshtein distance <ref> [79] </ref> between the indentation alphabet representations.
Reference: [80] <author> Philip N. Smith and David F. Brailsford. </author> <title> Towards structured, block-based PDF. In Electronic Publishing: </title> <booktitle> Origination, Dissemination and Design, </booktitle> <pages> 8(2-3) [11], pages 153-165. </pages>
Reference-contexts: In addition to the direct use of sgml (advocated for many purposes in [28], [62], and [94], for instance) and structured documents in other forms (as discussed in, for example, [41], [63], and <ref> [80] </ref>), this popularity is exemplified by some of the suggestions for the direction of html and the World Wide Web.
Reference: [81] <author> Sargur N. Srihari and Debashish Niyogi, </author> <title> editors. </title> <journal> International Journal of Imaging Systems and Technology, 7(4). Special Issue: Document Analysis and Recognition, </journal> <year> 1996. </year>
Reference: [82] <author> Kazuo Sumita, Seiji Miike, and Kenji Ono. </author> <title> Automatic abstract generation based on document structure. </title> <journal> Systems and Computers in Japan, </journal> <volume> 26(13) </volume> <pages> 32-42, </pages> <year> 1995. </year> <journal> Translated from Denshi Joho Rsushin Gakkai Ron-bunshi, Volume J78-D-II, </journal> <volume> Number 3, </volume> <pages> pp. 511-519. </pages>
Reference-contexts: Finding and managing such components is an important and interesting task, elements of which are addressed, for example, in [40], [54], and <ref> [82] </ref>; it is also a very different kind of task from finding and managing logical components, and this thesis addresses the latter.
Reference: [83] <author> Atsuhiro Takasu, Shin'ichi Satoh, and Eishi Katsura. </author> <title> A rule learning method for academic document image processing. </title> <booktitle> In Proceedings of the Third International Conference on Document Analysis and Recognition [44], </booktitle> <pages> pages 239-242. </pages>
Reference-contexts: Takasu, et al. infer a matrix grammar, in which concatenation may be either vertical or horizontal, by generalizing from a set of examples; any observed form is acceptable, and any adjacent structure repetition is generalized to accept the Kleene closure [42] of its form of concatenation <ref> [83] </ref>. Dengel and Dubiel describe a system that learns decision-trees for identifying the style of a business letter, which enables a parse [22]; this approach is based on considering the areas of the page covered with text, at three levels of granularity.
Reference: [84] <author> Jacco van Ossenbruggen, Anton Eliens, and Bastiaan Schonhage. </author> <title> Web applications and SGML. </title> <editor> In Brown et al. </editor> <volume> [11], </volume> <pages> pages 51-62. </pages>
Reference-contexts: There is also an interest in subsuming html by xml [32], which makes far more use of the power of sgml, as discussed in [31]. Taking this line of thought to its logical conclusion, van Ossenbruggen et al. argue for using sgml itself, with stylesheets, on the Web <ref> [84] </ref>.
Reference: [85] <author> Mahesh Viswanathan, Edward Green, and M. S. Krishnamoorthy. </author> <title> Document recognition: an attribute grammar approach. </title> <editor> In Luc M. Vincent and Jonathon J. Hull, editors, </editor> <booktitle> Proceedings: Document Recognition III, volume 2660 of SPIE Proceedings Series, </booktitle> <pages> pages 101-111. </pages> <booktitle> SPIE-The International Society for Optical Engineering, </booktitle> <year> 1996. </year>
Reference-contexts: Viswanathan et al. propose a top-down approach in <ref> [85] </ref>, in which a particular set of attribute grammars is defined for each structure; applying such a set in sequence starts with input of the pixel projections (horizontal or vertical) for this structure and produces output of a representation of the substructures.
Reference: [86] <author> Hanno Walischewski. </author> <title> Automatic knowledge acquisition for spatial document interpretation. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 243-247. 181 </pages>
Reference-contexts: Walischewski presents an approach that learns a document block model, represented as an attributed dag consisting of a tree with the addition of 17 sibling edges, by including in the model anything seen in the sample set; conflicting possibilities are given probabilities based on their observed frequencies <ref> [86] </ref>. The node attributes are the vertical and horizontal projections of bounding boxes, and the edge attributes are the spatial relationships between the connected nodes, selected from a complete set of qualitative descriptions.
Reference: [87] <author> Bing Wang. </author> <title> The design of an integrated information system. </title> <editor> In Roland R. Wagner and Helmut Thoma, editors, </editor> <booktitle> Database and Expert Systems Applications: 7th International Conference, DEXA '96 Proceedings, </booktitle> <pages> pages 479-488. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: In browsing, a user can follow links to sections or subsections (like turning directly to a page from the table of contents in a book) and to references. Wang describes a system with a similar capacity, based on an object-oriented database <ref> [87] </ref>; Ayres and Wesley [5] and Bauwens et al. [8] describe similar approaches, particularly designed to increase document accessibility for the visually disabled. 5 This kind of browsing is based on a form of hypertext; logical structure information can provide a basis for creating multiple kinds of hyperlinks within and between
Reference: [88] <author> Toyohide Watanabe and Xiaou Huang. </author> <title> Automatic acquisition of layout knowledge for understanding business cards. </title> <booktitle> In Proceedings of the Fourth International Conference on Document Analysis and Recognition [45], </booktitle> <pages> pages 216-220. </pages>
Reference-contexts: Several approaches exist to finding such particular block types. For instance, Jain and Bhattacharjee find address blocks on envelopes [48]; Rahgozar et al. find the grid structure in tables [74]; Belad et al. decompose card catalog entries [10]; Watanabe and Huang decompose business cards <ref> [88] </ref>; Hao et al. find standard parts of office memos [39], and Bayer and Walischewski find similar elements of business letters [9].
Reference: [89] <author> Toyohide Watanabe, Qin Luo, and Noboru Sugie. </author> <title> Structure recognition methods for various types of documents. </title> <journal> Machine Vision and Applications, </journal> <volume> 6 </volume> <pages> 163-176, </pages> <year> 1993. </year>
Reference-contexts: Watanabe et al. describe several often useful techniques for this kind of task in <ref> [89] </ref>, and Frankhauser and Xu present a general methodology for finding many such specific blocks in [27].
Reference: [90] <author> Gio Wiederhold. </author> <booktitle> Mediators in the architecture of future information systems. Computer, </booktitle> <pages> pages 38-49, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: As good internet navigation and resource discovery tools are developed, the text files accessible to a user through the internet will come to form an implicit distributed collection of documents in much the same way as other files form an implicit database collection <ref> [90] </ref>. Documents designed specifically for such use are likely to be provided in a structured form; older documents and those written primarily for paper are not.
Reference: [91] <author> Ian H. Witten, Alistair Moffat, and Timothy C. Bell. </author> <title> Managing Gigabytes: Compressing and Indexing Documents and Images, </title> <booktitle> chapter 8 (Mixed Text and Images), </booktitle> <pages> pages 295-327. </pages> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Jain and Yu describe a method in [49] based on grouping aligned runs of black or white pixels and then performing an analysis of height, density, etc. Witten et al. provide a general overview of this particular problem in <ref> [91] </ref>. Within the text domain, a document can be divided into blocks at the paragraph level and/or blocks that are specific to a particular document type. Several approaches exist to finding such particular block types.
Reference: [92] <author> K. Y. Wong, R.G. Casey, and F. M. Wahl. </author> <title> Document analysis system. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 26(6) </volume> <pages> 647-656, </pages> <month> November </month> <year> 1982. </year>
Reference-contexts: One form of this task is to separate the text from the graphics in a document. Other forms of analysis can then be applied to the resulting blocks, as appropriate. Wong, et al. present a method of making this separation in <ref> [92] </ref>; Fletcher and Kasturi present another in [30]. Both of these approaches are based on analysis of pixel density. Antonacopoulos and Ritchings present a method based on an analysis of connected white rectangles in [3].
Reference: [93] <institution> W3C's HTML home page. </institution> <address> url: http://www.w3.org/MarkUp/, March 1998. </address> <note> Maintained by the World Wide Web Consortium. </note>
Reference-contexts: the logical structure of a document (defined in Section 1.1); 1 2 the popularity of markup systems, such as sgml [37] and its application html, and structured documents reflects a recognition of this power. (The use of html is a bit problematic; although its official intent is to describe structure <ref> [93] </ref>, many document providers misuse its structures in order to achieve a layout formatting on the browsers they expect their readers to use [31, 72].
Reference: [94] <author> Haviland Wright. </author> <title> SGML frees information. </title> <journal> Byte, </journal> <volume> 17, </volume> <month> June </month> <year> 1992. </year>
Reference-contexts: exist between logical components of a document, such as the relationship formed by references within the text, but these are not part of the logical structure in the sense used here. 1.2 Logical Structure Uses The popularity of markup systems like sgml reflects the usefulness of this kind of information <ref> [94] </ref>. In addition to the direct use of sgml (advocated for many purposes in [28], [62], and [94], for instance) and structured documents in other forms (as discussed in, for example, [41], [63], and [80]), this popularity is exemplified by some of the suggestions for the direction of html and the <p> but these are not part of the logical structure in the sense used here. 1.2 Logical Structure Uses The popularity of markup systems like sgml reflects the usefulness of this kind of information <ref> [94] </ref>. In addition to the direct use of sgml (advocated for many purposes in [28], [62], and [94], for instance) and structured documents in other forms (as discussed in, for example, [41], [63], and [80]), this popularity is exemplified by some of the suggestions for the direction of html and the World Wide Web.
Reference: [95] <author> Hiroshi Yashiro, Tatsuya Murakami, Yoshihiro Shima, Yasuaki Nakano, and Hiromichi Fujisawa. </author> <title> A new method of document structure extraction using generic layout knowledge. </title> <booktitle> In International Workshop on Industrial Applications of Machine Intelligence and Vision, </booktitle> <address> Tokyo, </address> <month> April </month> <year> 1989. </year>
Reference-contexts: parsed accordingly. 1 Note that this could involve building a full hierarchy, but the approach the authors chose was simply to identify block types; presumably, they include the higher-level structures, such as lists, that are entailed by their block classifications. 19 Fujisawa et al. describe precisely the above approach in <ref> [34, 35, 36, 95] </ref>; the logical structure is defined at the section and subsection levels and at the paragraph level, and the relationships among these structures and their layout representations are described by a cfg.
Reference: [96] <author> Lin-Ju Yeh, Hsiu-Hsen Yao, and Yuan-Kuo Chen. SSQL: </author> <title> a semi-structured query language for SGML document retrievals. </title> <booktitle> In The 14th Annual International Conference on Computer Documentation: Conference Proceedings, </booktitle> <pages> pages 221-228, </pages> <year> 1996. </year>
Reference-contexts: Yeh 29 et al. present a query language called ssql for structured documents and an approach to use with it in <ref> [96] </ref>. The language looks like sql but also allows specifications of document structure elements. The approach iterates over three steps.
Reference: [97] <author> Wolfgang L. Zagler, Geoffrey Busby, and Roland R. Wagner, </author> <title> editors. Computers for Handicapped Persons: </title> <booktitle> 4th International Conference, IC-CHP '94 Proceedings. Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Translation of document style from one layout format to another can be performed in a general way, based on knowledge of logical structure. An example of such style translation is to convert a document formatted for a 5 In fact, in <ref> [97] </ref>, a conference on computers for the disabled, all papers on documents focused either on the process of reading text aloud or on document structure. 28 given technical journal into a format appropriate for a Ph.D. thesis while maintaining an accurate depiction of the logical structure.
References-found: 97

