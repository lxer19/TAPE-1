URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1996/tr-96-025.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1996.html
Root-URL: http://www.icsi.berkeley.edu
Email: email: liskiewi@icsi.berkeley.edu.  email: reischuk@informatik.mu-luebeck.de  
Title: Space Bounds for Interactive Proof Systems with Public Coins and Bounded Number of Rounds  
Author: Maciej Liskiewicz Rudiger Reischuk 
Note: The research of this author was supported by DFG Research Grant Re 672/2 and KBN Grant 2 P301 034 07.  
Address: Berkeley,  Lubeck,  
Affiliation: International Computer Science Institute,  Med. Universitat zu  
Date: July 1996  
Pubnum: TR-96-025  
Abstract: This paper studies interactive proof systems using public coin tosses, respectively Arthur-Merlin games, with a sublogarithmic space-bounded verifier. We provide examples of specific languages and show that such systems working with bounded number of rounds of interaction are unable to accept these languages. As a consequence, a separation of the second and the third level of the round/alternation hierarchy is obtained. It is well known that such a property does not hold for the corresponding polynomial time classes: in ["Proceedings of the 17th ACM Symposium on Theory of Computing", ACM Press, 1985, 421-429] Babai showed that the hierarchy of complexity classes AM k T ime(POL) collapses to the second level. 
Abstract-found: 1
Intro-found: 1
Reference: [Ba85] <author> L. Babai, </author> <title> Trading group theory for randomness, </title> <booktitle> in Proceedings of the 17th ACM Symposium on Theory of Computing, </booktitle> <publisher> ACM Press, </publisher> <year> 1985, </year> <pages> 421-429. </pages>
Reference-contexts: This property does not hold for the corresponding polynomial time classes AM k T ime (POL). Here, POL denotes the set of all polynomials. Furthermore, it has been shown <ref> [Ba85] </ref> that for polynomial time any number of rounds can be reduced to two rounds, that is M A 2 T ime (POL) AM 2 T ime (POL) = AM CON T ime (POL) : One might expect that for at least logarithmic space bounds similar to alternating Turing machines (ATMs)
Reference: [Co89] <author> A. Condon, </author> <title> Computational model of games, </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction A stochastic Turing machine model (STM) as introduced by Papadimitriou [Pa85] is a nondeterministic machine extended with the ability to perform random moves. Alternative characterizations can be given by interactive proof systems of Goldwasser, Micali and Rackoff [GMR89] and Arthur-Merlin-games of Babai see also [GoSi86] and <ref> [Co89] </ref>. In a probabilistic state a stochastic machine M chooses among the successor configurations with equal probability. A computation of M on an input X can be described by a computation tree. <p> Hence, for any S 2 o (log ), languages CENTER and PALINDROME yield the following separations: 1 BP Space (S) = AM 1 Space (S) AM Space (S) AM Space (log ) = P : The last equivalence is due to Condon <ref> [Co89] </ref>. A sublogarithmic STM may require exponential expected time. It is shown in [DwSt92] that some languages cannot be recognized by such machines faster CENTER is one of such example.
Reference: [Co93] <author> A. Condon, </author> <title> The complexity of space bounded interactive proof systems, in Complexity Theory: Current Research, </title> <editor> S. Homer, U. Schoning, K. Ambos-Spies (Ed.), </editor> <publisher> Cambridge Univ. Press, </publisher> <year> 1993, </year> <pages> 147-190. </pages>
Reference-contexts: As a consequence, new separation results for considered classes are obtained. Dwork and Stockmeyer were the first who investigated interactive proof systems with small space-bounded verifiers [DwSt92]. The separation results presented in [DwSt92] are stated for constant space, but they can be extended to any sublogarithmic bound (see e.g. <ref> [Co93] </ref>). It has been shown that for sublogarithmic space bounds it makes a difference whether the random moves are known, as it is the case for a STM, resp. for Arthur-Merlin games, or whether they are hidden as in interactive proof systems. <p> The language PALINDROME of all strings that are palindromes, is an example that can easily be recognized by an interactive proof system with a constant space-bounded verifier and hidden random moves, but requires logarithmic space otherwise (see [DwSt92] and <ref> [Co93] </ref>). This property does not hold for the corresponding polynomial time classes AM k T ime (POL). Here, POL denotes the set of all polynomials.
Reference: [CHPW94] <author> A. Condon, L. Hellerstein, S. Pottle, and A. Wigderson, </author> <title> On the power of finite automata with both nondeterministic and probabilistic states, </title> <booktitle> in Proceedings of the 26th ACM Symposium on Theory of Computing, </booktitle> <publisher> ACM Press, </publisher> <year> 1994, </year> <pages> 676-685. </pages>
Reference-contexts: On the other hand, the power of sublogarithmic space bounded STMs restricted to polynomial expected time is still an open problem. In this case we do not even know if stochastic finite automata can recognize nonregular languages (see [DwSt92] and <ref> [CHPW94] </ref>).
Reference: [DwSt92] <author> S. Dwork and L. Stockmeyer, </author> <title> Finite state verifiers I: the power of interaction, </title> <journal> Journal of the ACM, </journal> <volume> 39, </volume> <year> 1992, </year> <pages> 800-828. </pages>
Reference-contexts: We provide examples of specific languages and show that such machines are unable to accept these languages. As a consequence, new separation results for considered classes are obtained. Dwork and Stockmeyer were the first who investigated interactive proof systems with small space-bounded verifiers <ref> [DwSt92] </ref>. The separation results presented in [DwSt92] are stated for constant space, but they can be extended to any sublogarithmic bound (see e.g. [Co93]). <p> We provide examples of specific languages and show that such machines are unable to accept these languages. As a consequence, new separation results for considered classes are obtained. Dwork and Stockmeyer were the first who investigated interactive proof systems with small space-bounded verifiers <ref> [DwSt92] </ref>. The separation results presented in [DwSt92] are stated for constant space, but they can be extended to any sublogarithmic bound (see e.g. [Co93]). <p> The language PALINDROME of all strings that are palindromes, is an example that can easily be recognized by an interactive proof system with a constant space-bounded verifier and hidden random moves, but requires logarithmic space otherwise (see <ref> [DwSt92] </ref> and [Co93]). This property does not hold for the corresponding polynomial time classes AM k T ime (POL). Here, POL denotes the set of all polynomials. <p> A sublogarithmic STM may require exponential expected time. It is shown in <ref> [DwSt92] </ref> that some languages cannot be recognized by such machines faster CENTER is one of such example. On the other hand, the power of sublogarithmic space bounded STMs restricted to polynomial expected time is still an open problem. <p> On the other hand, the power of sublogarithmic space bounded STMs restricted to polynomial expected time is still an open problem. In this case we do not even know if stochastic finite automata can recognize nonregular languages (see <ref> [DwSt92] </ref> and [CHPW94]). <p> To show this results, we extend the methods from <ref> [DwSt92] </ref> and some of [LiRe93]. Let us assume that M be an arbitrary STM, of space complexity S 2 o (log ). By V ol (N ) we denote the number of possible memory states of the machine M on input words of length N .
Reference: [Fr79] <author> R. Freivalds, </author> <title> Fast probabilistic algorithms, </title> <booktitle> in Proceedings of the 8th International Symposium on Mathematical Foundations of Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1979, </year> <pages> 57-69. </pages>
Reference-contexts: This proves Lemma 2. An algorithm for M is based on <ref> [Fr79] </ref>.
Reference: [Fr81] <author> R. Freivalds, </author> <title> Probabilistic 2-way machines, </title> <booktitle> in Proceedings of the 10th International Symposium on Mathematical Foundations of Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1981, </year> <pages> 33-45. 11 </pages>
Reference-contexts: It is well known that M A 1 Space (CON ) = N Space (CON ) coincides with the class of regular languages. This result, however, does not extend to the probabilistic classes. Freivalds has shown the surprising result <ref> [Fr81] </ref> that COUNT := f1 n 01 m j n = mg; can be accepted by a probabilistic TM in constant space with an arbitrarily small constant for the error probability.
Reference: [FrKa94] <author> R. Freivalds and M. Karpinski, </author> <title> Lower space bounds for randomized computation, </title> <booktitle> in Proceedings of the 21st International Colloquium on Automata, Languages, and Programming, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1994, </year> <pages> 580-592. </pages>
Reference-contexts: Extending an impossibility result for 2-way probabilistic finite automata one can show that the language CENTER := fw0x j w; x 2 f0; 1g fl and jwj = jxjg cannot be recognized by a sublogarithmic space-bounded probabilistic Turing machine with any error probability * &lt; 1 2 <ref> [FrKa94] </ref>. However, there exists a constant space interactive proof system for CENTER.
Reference: [Gil77] <author> J. Gill, </author> <title> Computational complexity of probabilistic Turing machines, </title> <journal> SIAM Journal on Computing, </journal> <volume> 7, </volume> <year> 1977, </year> <pages> 675-695. </pages>
Reference-contexts: An interesting open problem is if our separation can be generalized on any level. Is it true that similar to ATMs, this hierarchy is infinite? How looks the round/alternation hierarchy for at least logarithmic space bounds? Using a simple simulation of space-bounded NTMs by one-sided-error probabilistic TMs (see e.g. <ref> [Gil77] </ref> or the survey paper [Ma95]) one can easily show that AM 2 Space (log ) = AM 1 Space (log ) ; that means the AM 2 -class is quite weak in case of space bounds contrary to time bounded classes.
Reference: [GMR89] <author> S. Goldwasser, S. Micali, and C. Rackoff, </author> <title> The knowledge complexity of interactive proof systems, </title> <journal> SIAM Journal on Computing, </journal> <volume> 18, </volume> <year> 1989, </year> <pages> 186-208. </pages>
Reference-contexts: 1 Introduction A stochastic Turing machine model (STM) as introduced by Papadimitriou [Pa85] is a nondeterministic machine extended with the ability to perform random moves. Alternative characterizations can be given by interactive proof systems of Goldwasser, Micali and Rackoff <ref> [GMR89] </ref> and Arthur-Merlin-games of Babai see also [GoSi86] and [Co89]. In a probabilistic state a stochastic machine M chooses among the successor configurations with equal probability. A computation of M on an input X can be described by a computation tree.
Reference: [GoSi86] <author> S. Goldwasser and M. Sipser, </author> <title> Private coins versus public coins in interactive prove systems, </title> <booktitle> in Proceedings of the 18th ACM Symposium on Theory of Computing, </booktitle> <publisher> ACM Press, </publisher> <year> 1986, </year> <pages> 59-68. </pages>
Reference-contexts: 1 Introduction A stochastic Turing machine model (STM) as introduced by Papadimitriou [Pa85] is a nondeterministic machine extended with the ability to perform random moves. Alternative characterizations can be given by interactive proof systems of Goldwasser, Micali and Rackoff [GMR89] and Arthur-Merlin-games of Babai see also <ref> [GoSi86] </ref> and [Co89]. In a probabilistic state a stochastic machine M chooses among the successor configurations with equal probability. A computation of M on an input X can be described by a computation tree.
Reference: [LiRe93] <author> M. Liskiewicz and R. Reischuk, </author> <title> The sublogarithmic space world, </title> <type> Technical Report 048-93 ICSI Berkeley, </type> <note> to appear in SIAM Journal on Computing. </note>
Reference-contexts: To show this results, we extend the methods from [DwSt92] and some of <ref> [LiRe93] </ref>. Let us assume that M be an arbitrary STM, of space complexity S 2 o (log ). By V ol (N ) we denote the number of possible memory states of the machine M on input words of length N .
Reference: [Ma95] <author> I. Macarie, </author> <title> Space-bounded probabilistic computation: old and new stories, </title> <journal> SIGACT News, </journal> <volume> vol. 26(3), </volume> <year> 1995, </year> <pages> 2-12. </pages>
Reference-contexts: Is it true that similar to ATMs, this hierarchy is infinite? How looks the round/alternation hierarchy for at least logarithmic space bounds? Using a simple simulation of space-bounded NTMs by one-sided-error probabilistic TMs (see e.g. [Gil77] or the survey paper <ref> [Ma95] </ref>) one can easily show that AM 2 Space (log ) = AM 1 Space (log ) ; that means the AM 2 -class is quite weak in case of space bounds contrary to time bounded classes.
Reference: [Pa85] <author> C. Papadimitriou, </author> <title> Games against nature, </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 31, </volume> <year> 1985, </year> <pages> 288-301. </pages>
Reference-contexts: 1 Introduction A stochastic Turing machine model (STM) as introduced by Papadimitriou <ref> [Pa85] </ref> is a nondeterministic machine extended with the ability to perform random moves. Alternative characterizations can be given by interactive proof systems of Goldwasser, Micali and Rackoff [GMR89] and Arthur-Merlin-games of Babai see also [GoSi86] and [Co89].
References-found: 14

