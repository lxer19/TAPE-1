URL: http://theory.lcs.mit.edu/~rajsbaum/podc98hrt.ps
Refering-URL: http://theory.lcs.mit.edu/~rajsbaum/
Root-URL: 
Email: herlihy@cs.brown.edu  rajsbaum@servidor.unam.mx  tuttle@crl.dec.com  
Title: Unifying Synchronous and Asynchronous Message-Passing Models  
Author: Maurice Herlihy Sergio Rajsbaum Mark R. Tuttle 
Note: To appear in the 16th Annual ACM Symposium on Principles of Distributed Computing (PODC98), Puerto Vallarta, Mexico, June 1998.  
Date: March 25, 1998  
Address: Providence, RI 02912  U.N.A.M., D.F. 04510, Mexico  One Kendall Square, Building 700 Cambridge, MA 02139  
Affiliation: Computer Science Department Brown University  Instituto de Matematicas  Digital Equipment Corporation Cambridge Research Lab  
Abstract: We take a significant step toward unifying the synchronous, semi-synchronous, and asynchronous message-passing models of distributed computation. The key idea is the concept of a pseudosphere, a new combinatorial structure in which each process from a set of processes is independently assigned a value from a set of values. Pseudospheres have a number of nice combinatorial properties, but their principal interest lies in the observation that the behavior of protocols in the three models can be characterized as simple unions of pseudospheres, where the exact structure of these unions is determined by the timing properties of the model. We use this pseudosphere construction to derive new and remarkably succinct proofs of bounds on consensus and k-set agreement in the asynchronous and synchronous models, as well as the first lower bound on wait-free k-set agreement in the semi-synchronous model. 
Abstract-found: 1
Intro-found: 1
Reference: [ABND + 87] <author> Hagit Attiya, Amotz Bar-Noy, Danny Dolev, Daphne Koller, David Peleg, and Rudiger Reischuk. </author> <title> Achievable cases in an asynchronous environment. </title> <booktitle> In Proceedings of the 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 337-346, </pages> <month> October </month> <year> 1987. </year>
Reference-contexts: While the classical notion of similarity captures the notion of two states being indistinguishable to a single process, higher degrees of similarity have proved essential for understanding problems such as k-set agreement [Cha91] and renaming <ref> [ABND + 87, ABND + 90] </ref>. For example, it may matter that a pair of global states are indistinguishable to two processes, to three processes, and so on.
Reference: [ABND + 90] <author> Hagit Attiya, Amotz Bar-Noy, Danny Dolev, David Peleg, and Rudiger Reischuk. </author> <title> Renaming in an asynchronous environment. </title> <journal> Journal of the ACM, </journal> <month> July </month> <year> 1990. </year>
Reference-contexts: While the classical notion of similarity captures the notion of two states being indistinguishable to a single process, higher degrees of similarity have proved essential for understanding problems such as k-set agreement [Cha91] and renaming <ref> [ABND + 87, ABND + 90] </ref>. For example, it may matter that a pair of global states are indistinguishable to two processes, to three processes, and so on.
Reference: [ADLS94] <author> Hagit Attiya, Cynthia Dwork, Nancy Lynch, and Larry Stock-meyer. </author> <title> Bounds on the time to reach agreement in the presence of timing uncertainty. </title> <journal> Journal of the ACM, </journal> <volume> 41(1) </volume> <pages> 122-152, </pages> <month> Jan-uary </month> <year> 1994. </year>
Reference-contexts: We consider this significant. Although variants of the semi-synchronous model have been around for a long time, we are aware of only one substantial lower bound in this model: the consensus bound of Attiya, Dwork, Lynch, and Stockmeyer <ref> [ADLS94] </ref>. The absence of other results suggests that it is very difficult to prove significant lower bounds in this model, and that results and proof techniques from other models do not translate into the semi-synchronous model as easily as one might hope. <p> The resulting protocol complex is not a pseudosphere, but it has the same homotopy type as an f -dimensional pseudosphere (just contract each simplex spanned by processes in G to a point). Using this result and the execution-stretching techniques from <ref> [ADLS94] </ref>, we can prove that Corollary 32: Any wait-free protocol for k-set agreement and n + 1 processes in the semi-synchronous model requires time ffi n As noted above, this corollary is the first substantial new lower bound for the semi-synchronous model since the Attiya, Dwork, Lynch, and Stockmeyer consensus bound <p> prove that Corollary 32: Any wait-free protocol for k-set agreement and n + 1 processes in the semi-synchronous model requires time ffi n As noted above, this corollary is the first substantial new lower bound for the semi-synchronous model since the Attiya, Dwork, Lynch, and Stockmeyer consensus bound of 1993 <ref> [ADLS94] </ref>. We believe that this result can be extended to the f -resilient case, but this will require further work.
Reference: [Awe85] <author> Baruch Awerbuch. </author> <title> Complexity of network synchronization. </title> <journal> Journal of the ACM, </journal> <volume> 32 </volume> <pages> 801-823, </pages> <month> October </month> <year> 1985. </year>
Reference-contexts: All such attempts, including ours, restrict attention to a subset of well-behaved, round-based executions. There are a number of ways one could consider unifying models. One approach is to translate algorithms written for a synchronous model into an asynchronous model. This was the approach used by Awerbuch <ref> [Awe85] </ref> in the message-passing model when he constructed his synchronizer and showed how (in the absence of faults) synchronous protocols can be run in asynchronous systems in the presence of a synchronizer.
Reference: [BG93] <author> Elizabeth Borowsky and Eli Gafni. </author> <title> Generalized FLP impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: As one example, Borowsky and Gafni <ref> [BG93] </ref> state a construction for the asynchronous model, and while the intuition behind the construction is compelling, it is not easy to write down a formal description of that construction. <p> And, as mentioned, the formal analysis underlying our construction can be presented considerably more succinctly than the constructions used by Borowsky and Gafni <ref> [BG93] </ref> and by Chaudhuri, Herlihy, Lynch, and Tuttle [CHLT93]. Our constructions are guided by concepts and theorems taken from elementary combinatorial topology. As described above, we believe our results are interesting in their own right, even to readers unfamiliar with or uninterested in topological techniques. <p> It follows that A r (S m ) = A r1 (A 1 (S m )) is (m (n f ) 1)-connected. It follows that the asynchronous protocol complex is (f 1)-connected (when m = n), and thus we can prove the impossibility of asynchronous k-set agreement <ref> [BG93, HS93, SZ93] </ref>: Theorem 17: If I the set of input values, and I = (S n ; I) the input complex, then A r (I) is (f 1)-connected for any r &gt; 0.
Reference: [BG97] <author> Elizabeth Borowsky and Eli Gafni. </author> <title> A simple algorithmically reasoned characterization of wait-free computations. </title> <booktitle> In Proceedings of the 16th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 189-198, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: As one example, Borowsky and Gafni [BG93] state a construction for the asynchronous model, and while the intuition behind the construction is compelling, it is not easy to write down a formal description of that construction. In a later paper <ref> [BG97] </ref>, they define an iterated immediate snapshot model that has a recursive structure and has proven to be useful [HS97]. <p> At this level of detail, this set of executions looks something like a message-passing analog of the executions arising in the iterated immediate snapshot model defined by Borowsky and Gafni <ref> [BG97] </ref> for shared memory. The formal definition of the states we use to construct A r (S m ) is most easily given as the set of states that occur during iterated executions.
Reference: [Cha91] <author> Soma Chaudhuri. </author> <title> Towards a complexity hierarchy of wait-free concurrent objects. </title> <booktitle> In Proceedings of the 3rd IEEE Symposium on Parallel and Distributed Processing. IEEE, </booktitle> <month> December </month> <year> 1991. </year> <note> Also 29 appeared as Technical Report No. 91-024, </note> <institution> Iowa State University, </institution> <year> 1991. </year>
Reference-contexts: While the classical notion of similarity captures the notion of two states being indistinguishable to a single process, higher degrees of similarity have proved essential for understanding problems such as k-set agreement <ref> [Cha91] </ref> and renaming [ABND + 87, ABND + 90]. For example, it may matter that a pair of global states are indistinguishable to two processes, to three processes, and so on. <p> Because of the simple combinatorial properties of pseudospheres, reasoning about these unions can be accomplished by straightforward combinatorial arguments. We use this pseudosphere construction to derive new and remarkably succinct proofs of bounds on consensus [PSL80, Fis83] and k-set agreement <ref> [Cha91] </ref> in the asynchronous and synchronous models, as well as the first lower bound on wait-free k-set agreement in the semi-synchronous model. A pseudosphere can be defined very simply. <p> We can assume without loss of generality that all protocols P we consider are full-information protocols [Had83, FL82, PSL80, DM90]. In the k-set agreement task <ref> [Cha91] </ref>, processes are required to (1) choose a decision value after a finite number of steps, (2) choose as decision value some process's input value, and (3) collectively choose no more than k distinct decision values. When k = 1, this problem is usually called consensus.
Reference: [CHLT93] <author> Soma Chaudhuri, Maurice Herlihy, Nancy Lynch, and Mark R. Tuttle. </author> <title> A tight lower bound for k-set agreement. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science. IEEE, </booktitle> <month> October </month> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: In a later paper [BG97], they define an iterated immediate snapshot model that has a recursive structure and has proven to be useful [HS97]. As another example, Chaudhuri, Herlihy, Lynch, and Tuttle <ref> [CHLT93] </ref> give an inductive construction for the synchronous model, and while the resulting "Bermuda Triangle" is visually appealing and an elegant combination of proof techniques from the literature, there is a fair amount of machinery needed in the formal description of the construction. <p> And, as mentioned, the formal analysis underlying our construction can be presented considerably more succinctly than the constructions used by Borowsky and Gafni [BG93] and by Chaudhuri, Herlihy, Lynch, and Tuttle <ref> [CHLT93] </ref>. Our constructions are guided by concepts and theorems taken from elementary combinatorial topology. As described above, we believe our results are interesting in their own right, even to readers unfamiliar with or uninterested in topological techniques. <p> Like us, Chaudhuri, Herlihy, Lynch, and Tuttle <ref> [CHLT93] </ref> explicitly construct a subset of the protocol complex in the synchronous model, although a smaller subset than ours. It is not clear, however, how to translate that construction into the asynchronous model. <p> The connectivity of this protocol complex implies the lower bound for synchronous k-set agreement <ref> [CHLT93] </ref>: Theorem 25: If n f + k, then any synchronous f -resilient k-set agreement protocol requires bf =kc+1 rounds. If n &lt; f +k, then any synchronous f -resilient k-set agreement protocol requires bf =kc rounds. Proof: If n k f , then S bf=kc (I) is (k 1)-connected.
Reference: [DM90] <author> Cynthia Dwork and Yoram Moses. </author> <title> Knowledge and common knowledge in a Byzantine environment: Crash failures. </title> <journal> Information and Computation, </journal> <volume> 88(2) </volume> <pages> 156-186, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: A protocol is a full-information protocol [Had83, FL82, PSL80] if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols <ref> [Had83, FL82, PSL80, DM90] </ref>. In the k-set agreement task [Cha91], processes are required to (1) choose a decision value after a finite number of steps, (2) choose as decision value some process's input value, and (3) collectively choose no more than k distinct decision values.
Reference: [Fis83] <author> Michael J. Fischer. </author> <title> The consensus problem in unreliable distributed systems (a brief survey). </title> <editor> In Marek Karpinsky, editor, </editor> <booktitle> Proceedings of the 10th International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 127-140. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year> <note> A preliminary version appeared as Yale Technical Report YALEU/DCS/RR-273. </note>
Reference-contexts: Because of the simple combinatorial properties of pseudospheres, reasoning about these unions can be accomplished by straightforward combinatorial arguments. We use this pseudosphere construction to derive new and remarkably succinct proofs of bounds on consensus <ref> [PSL80, Fis83] </ref> and k-set agreement [Cha91] in the asynchronous and synchronous models, as well as the first lower bound on wait-free k-set agreement in the semi-synchronous model. A pseudosphere can be defined very simply.
Reference: [FL82] <author> Michael J. Fischer and Nancy A. Lynch. </author> <title> A lower bound for the time to assure interactive consistency. </title> <journal> Information Processing Letters, </journal> <volume> 14(4) </volume> <pages> 183-186, </pages> <month> June </month> <year> 1982. </year>
Reference-contexts: The message function determines which messages a process should send in a given state, and the decision function determines which output value a process should choose in a given state (if any). A protocol is a full-information protocol <ref> [Had83, FL82, PSL80] </ref> if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols [Had83, FL82, PSL80, DM90]. <p> A protocol is a full-information protocol [Had83, FL82, PSL80] if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols <ref> [Had83, FL82, PSL80, DM90] </ref>. In the k-set agreement task [Cha91], processes are required to (1) choose a decision value after a finite number of steps, (2) choose as decision value some process's input value, and (3) collectively choose no more than k distinct decision values.
Reference: [FLP85] <author> Michael J. Fischer, Nancy A. Lynch, and Michael S. Paterson. </author> <title> Impossibility of distributed consensus with one faulty processor. </title> <journal> Journal of the ACM, </journal> <volume> 32(2) </volume> <pages> 374-382, </pages> <month> April </month> <year> 1985. </year>
Reference-contexts: Proving a lower bound in any of these models requires a deep understanding of the global states that can arise in the course of a protocol's execution, and of how these global states are related. The notion of indistinguishability or similarity <ref> [FLP85, HM90] </ref> has played a fundamental role in nearly every lower bound in distributed computation. Two global states are considered indistinguishable if one process has the same local state in both, and therefore cannot distinguish between them.
Reference: [Gla70] <author> L. C. Glaser. </author> <title> Geometrical Combinatorial Topology, volume 1. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1970. </year>
Reference-contexts: We also exploit the following extension lemma, which appears in Glaser <ref> [Gla70, Theorem IV.2] </ref>. Lemma 10: Let A, B, and C be complexes such that A B, and f : jBj ! jCj is a continuous map such that f restricted to jAj is simplicial.
Reference: [GY97] <author> Eli Gafni and Jiong Yang. </author> <title> A round-by-round failure detector | unifying synchrony and asynchrony. </title> <type> Unpublished manuscript, </type> <month> April </month> <year> 1997. </year>
Reference-contexts: 1 Introduction The field of distributed computing embraces a bewildering variety of models <ref> [LL90, GY97] </ref>. A fundamental dimension along which these models differ is the degree to which process activity is synchronized. At one end of the spectrum is the synchronous model in which computation proceeds in a sequence of rounds. <p> This was the approach used by Awerbuch [Awe85] in the message-passing model when he constructed his synchronizer and showed how (in the absence of faults) synchronous protocols can be run in asynchronous systems in the presence of a synchronizer. This was also the approach used by Gafni and Yang <ref> [GY97] </ref> in the shared-memory model when they described a round-by-round failure detector and how these detectors can be used to run in an asynchronous model an algorithm written for a synchronous model. <p> We are the first, however, to unify the synchronous, semi-synchronous, and asynchronous models of message-passing computation with a single concept, namely the pseudosphere. Gafni and Yang <ref> [GY97] </ref> do their most formal work in a synchronous and asynchronous shared-memory model, and while they sketch how their ideas might be extended to a semi-synchronous message-passing model, this extension requires changing the nature of the failure detector. Moses and Rajsbaum [MR98] focus on synchronous and asynchronous models.
Reference: [Had83] <author> Vassos Hadzilacos. </author> <title> A lower bound for Byzantine agreement with fail-stop processors. </title> <type> Technical Report TR-21-83, </type> <institution> Harvard University, </institution> <year> 1983. </year>
Reference-contexts: The message function determines which messages a process should send in a given state, and the decision function determines which output value a process should choose in a given state (if any). A protocol is a full-information protocol <ref> [Had83, FL82, PSL80] </ref> if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols [Had83, FL82, PSL80, DM90]. <p> A protocol is a full-information protocol [Had83, FL82, PSL80] if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols <ref> [Had83, FL82, PSL80, DM90] </ref>. In the k-set agreement task [Cha91], processes are required to (1) choose a decision value after a finite number of steps, (2) choose as decision value some process's input value, and (3) collectively choose no more than k distinct decision values.
Reference: [HM90] <author> Joseph Y. Halpern and Yoram Moses. </author> <title> Knowledge and common knowledge in a distributed environment. </title> <journal> Journal of the ACM, </journal> <volume> 37(3) </volume> <pages> 549-587, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Proving a lower bound in any of these models requires a deep understanding of the global states that can arise in the course of a protocol's execution, and of how these global states are related. The notion of indistinguishability or similarity <ref> [FLP85, HM90] </ref> has played a fundamental role in nearly every lower bound in distributed computation. Two global states are considered indistinguishable if one process has the same local state in both, and therefore cannot distinguish between them.
Reference: [HR94] <author> Maurice Herlihy and Sergio Rajsbaum. </author> <title> Set consensus using arbitrary objects. </title> <booktitle> In Proceedings of the 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 324-333, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: This theorem is model independent in the sense that it depends on the connectivity properties of protocol complexes, not on explicit timing or failure properties of the model. This result was originally stated elsewhere <ref> [HR94] </ref>, but for the sake of making this paper self-contained, we present the full proof here. The point-set occupied by a complex C is called its polyhedron, and is denoted by jCj.
Reference: [HS93] <author> Maurice P. Herlihy and Nir Shavit. </author> <title> The asynchronous computability theorem for t-resilient tasks. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 111-120. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: Another indication is that our construction can be used to simplify the proof of known results. For example, our protocol complex construction is significantly more succinct than the construction used by Herlihy and Shavit <ref> [HS93] </ref> in their asynchronous computability theorem, and our construction could be used to simplify the proof of one direction of that theorem. <p> For readers interested in applications of topology to distributed computing, however, our constructions should be even more interesting. Our approach here replaces the existential arguments used by Herlihy and Shavit <ref> [HS93] </ref> to analyze protocol complexes in the asynchronous model with a constructive, inductive analysis. <p> It follows that A r (S m ) = A r1 (A 1 (S m )) is (m (n f ) 1)-connected. It follows that the asynchronous protocol complex is (f 1)-connected (when m = n), and thus we can prove the impossibility of asynchronous k-set agreement <ref> [BG93, HS93, SZ93] </ref>: Theorem 17: If I the set of input values, and I = (S n ; I) the input complex, then A r (I) is (f 1)-connected for any r &gt; 0.
Reference: [HS97] <author> Gunnar Hoest and Nir Shavit. </author> <title> Towards a topological character-ization of asynchronous complexity. </title> <booktitle> In Proceedings of the 16th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 199-208, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: In a later paper [BG97], they define an iterated immediate snapshot model that has a recursive structure and has proven to be useful <ref> [HS97] </ref>.
Reference: [Lef49] <author> S. Lefschetz. </author> <title> Introduction to Topology. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, New Jersey, </address> <year> 1949. </year>
Reference-contexts: The result is called the subdivision of skel ` (C) obtained by starring . The subdivision shown in Figure 3 is the result of successive starring. We use the following variant of Sperner's Lemma <ref> [Lef49, Lemma 5.5] </ref>: 10 Lemma 9 (Sperner's Lemma): Let (S n ) be a subdivision of simplex S n .
Reference: [LL90] <author> Leslie Lamport and Nancy Lynch. </author> <title> Distributed computing: Models and methods. </title> <editor> In J. van Leewen, editor, </editor> <title> Formal Models and Semantics, </title> <booktitle> volume B of Handbook of Theoretical Computer Science, chapter 19, </booktitle> <pages> pages 1157-1199. </pages> <address> MITpress, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction The field of distributed computing embraces a bewildering variety of models <ref> [LL90, GY97] </ref>. A fundamental dimension along which these models differ is the degree to which process activity is synchronized. At one end of the spectrum is the synchronous model in which computation proceeds in a sequence of rounds.
Reference: [MR98] <author> Yoram Moses and Sergio Rajsbaum. </author> <title> The unified structure of consensus: a layered analysis approach. </title> <type> Unpublished manuscript, </type> <month> Jan-uary </month> <year> 1998. </year>
Reference-contexts: Another approach, which is basically our approach, is to identify a set of concepts that can be used to describe or reason about multiple models. This was the approach used by Moses and Rajsbaum <ref> [MR98] </ref> when they showed how the concepts of communication layering and mobile faults can be used to reason in a uniform way about the synchronous and asynchronous models. The translation approach assumes that the synchronous model is an easier model in which to work. <p> Gafni and Yang [GY97] do their most formal work in a synchronous and asynchronous shared-memory model, and while they sketch how their ideas might be extended to a semi-synchronous message-passing model, this extension requires changing the nature of the failure detector. Moses and Rajsbaum <ref> [MR98] </ref> focus on synchronous and asynchronous models. Their stated results apply to consensus whereas our results apply to both consensus and k-set agreement. One indication that our construction is fundamental is that the pseudosphere constructions originally developed to unify the synchronous and asynchronous models extended cleanly to the semi-synchronous model.
Reference: [Mun84] <author> J. R. Munkres. </author> <title> Elements Of Algebraic Topology. </title> <publisher> Addison Wesley, </publisher> <address> Reading MA, </address> <year> 1984. </year>
Reference-contexts: The following theorem is an elementary consequence of the Mayer-Vietoris sequence <ref> [Mun84, p. 142] </ref>. It allows us to reason about a complex's connectivity in terms of the connectivity of its components. <p> A subdivision of a complex A is a complex B such that (1) each simplex of B is contained in a simplex of A, and (2) each simplex of A is the union of finitely many simplexes of B <ref> [Mun84, p. 83] </ref>. This definition implies that jAj = jBj. If ~ b is a vertex of B, the carrier of ~ b in A, denoted carrier ( ~ b; A), is the smallest simplex of A that contains ~ b. <p> This cone is itself a complex, having C as a subcomplex <ref> [Mun84, p. 44] </ref>. Let be a subdivision of skel `1 (C), and S ` L the `-simplexes of skel ` (C). For 0 i L, let ~w i be an interior point of jS ` i j. <p> Each cone ~w i (S ` i ) is a subdivision of S ` i , and the union of these cones as i ranges from 0 to L is a subdivision of skel ` (C) that agrees with on the (` 1) skeleton <ref> [Mun84, p. 85] </ref>. The result is called the subdivision of skel ` (C) obtained by starring . The subdivision shown in Figure 3 is the result of successive starring.
Reference: [PSL80] <author> Marshall Pease, Robert Shostak, and Leslie Lamport. </author> <title> Reaching agreement in the presence of faults. </title> <journal> Journal of the ACM, </journal> <volume> 27(2) </volume> <pages> 228-234, </pages> <year> 1980. </year>
Reference-contexts: Because of the simple combinatorial properties of pseudospheres, reasoning about these unions can be accomplished by straightforward combinatorial arguments. We use this pseudosphere construction to derive new and remarkably succinct proofs of bounds on consensus <ref> [PSL80, Fis83] </ref> and k-set agreement [Cha91] in the asynchronous and synchronous models, as well as the first lower bound on wait-free k-set agreement in the semi-synchronous model. A pseudosphere can be defined very simply. <p> The message function determines which messages a process should send in a given state, and the decision function determines which output value a process should choose in a given state (if any). A protocol is a full-information protocol <ref> [Had83, FL82, PSL80] </ref> if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols [Had83, FL82, PSL80, DM90]. <p> A protocol is a full-information protocol [Had83, FL82, PSL80] if the message function causes each process to send its entire local state when it sends a message. We can assume without loss of generality that all protocols P we consider are full-information protocols <ref> [Had83, FL82, PSL80, DM90] </ref>. In the k-set agreement task [Cha91], processes are required to (1) choose a decision value after a finite number of steps, (2) choose as decision value some process's input value, and (3) collectively choose no more than k distinct decision values.
Reference: [Spa66] <author> Edwin H. Spanier. </author> <title> Algebraic Topology. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1966. </year>
Reference-contexts: Informally, a complex is k-connected if it has no holes in dimensions k or less. More precisely, Definition 1: A complex K is k-connected if every continuous map of the k-sphere to K can be extended to a continuous map of the (k + 1)-disk <ref> [Spa66, p. 51] </ref>. (By convention, a complex is (1)-connected if it is nonempty, and every complex is k-connected for k &lt; 1.) This definition says that a complex is 0-connected if it is connected in the graph-theoretic sense.
Reference: [SZ93] <author> Michael Saks and Fotis Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year> <month> 31 </month>
Reference-contexts: It follows that A r (S m ) = A r1 (A 1 (S m )) is (m (n f ) 1)-connected. It follows that the asynchronous protocol complex is (f 1)-connected (when m = n), and thus we can prove the impossibility of asynchronous k-set agreement <ref> [BG93, HS93, SZ93] </ref>: Theorem 17: If I the set of input values, and I = (S n ; I) the input complex, then A r (I) is (f 1)-connected for any r &gt; 0.
References-found: 26

