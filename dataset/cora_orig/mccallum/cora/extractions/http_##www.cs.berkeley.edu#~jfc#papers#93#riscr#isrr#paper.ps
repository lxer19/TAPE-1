URL: http://www.cs.berkeley.edu/~jfc/papers/93/riscr/isrr/paper.ps
Refering-URL: http://robotics.eecs.berkeley.edu/risc.html
Root-URL: 
Email: jfc@cs.berkeley.edu goldberg@usc.edu  
Title: A RISC approach to Sensing and Manipulation  
Author: John F. Canny Kenneth Y. Goldberg 
Address: Berkeley, CA 94720 Los Angeles, CA 90089-0273  
Affiliation: University of California, Berkeley University of Southern California  
Abstract: This paper is about sensing and manipulation strategies for simple robot hardware. RISC robotics, advocated by the author and Ken Goldberg in [CG93] is an attempt to fuse automation and robotic technologies. It uses traditional automation hardware like parallel-jaw grippers and optical beam sensors, together with geometric planning and sensing algorithms. RISC systems should be cost-effective and reliable, and easy to setup and reconfigure. They should also be flexible enough to support small batch sizes and rapid changes in part design needed in forthcoming flexible/agile manufacturing systems. The RISC acronym, borrowed from computer architecture, suggests the parallels between the two technologies. RISC robots perform complex operations by composing simple elements. The elements may be individual light beam sensors, grouped together to form an array for recognition. Or a complex manipulation task may be performed via a sequence of grasp steps by different grippers specialized for acquisition and placement. This paper emphasizes three areas: (i) RISC sensing, primarily optical beam sensing (ii) RISC manipulation using simple parallel-jaw grippers or minimal configurations of fingers (iii) Computer-aided design of RISC workcells. 
Abstract-found: 1
Intro-found: 1
Reference: [Can93] <author> J. Canny. </author> <title> Some practical tools for algebraic geometry. </title> <booktitle> In Esprit PROMotion Workshop, Rodez, France, </booktitle> <pages> pages 39-52, </pages> <year> 1993. </year>
Reference-contexts: This system is the product of 5 years of work on practical algebraic algorithms. A preview of the system was presented in an ESPRIT workshop on motion planning in Rodez, France in March of this year <ref> [Can93] </ref>. Most of the algorithms that comprise the system had not been implemented before. In early tests, we have found that each contributes one to several orders of magnitude of speedup over other methods.
Reference: [CG93] <author> J. F. Canny and K. Goldberg. </author> <title> A "RISC" paradigm for industrial robotics. </title> <type> Technical Report RAMP 93-2, </type> <institution> UC Berkeley, </institution> <year> 1993. </year>
Reference-contexts: 1 Introduction to RISC robotics Borrowing an acronym [PD80], we chose the name RISC for our approach to manufacturing robotics <ref> [CG93] </ref>. In our case the acronym stands for Reduced Intricacy in Sensing and Control. We choose it because it is suggestive of the design goals we are promoting. RISC robots perform complex operations by composing simple elements. <p> But the ongoing savings because of the points above are likely to be much more significant, because they continue to accrue over time. In the time since the report on RISC robotics <ref> [CG93] </ref> appeared we have been able to gather some reactions from other researchers. The discussion that resulted led to rapid exchange of ideas and eventually to clarification and better understanding of the approach on both sides. <p> It should be easier to do this as our assembly routine library grows. We expect to run into unforseen problems, and these should lead us to expand our vocabulary of simple sensors and actuators. 3 A Survey of RISC papers An overview of the RISC approach is given in <ref> [CG93] </ref>. 3.1 Sensing We have studied two types of optical beam sensor. The first is called a "cross-beam sensor", see figure 3. When an object passes through the apparatus, the cross beams perceive a horizontal cross-section of the object.
Reference: [FC92] <author> C. Ferrari and J. Canny. </author> <title> Planning optimal grasps. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <pages> pages 2290-2295, </pages> <year> 1992. </year>
Reference-contexts: Typically for convex objects, A, the total number of matches is O (n). The worst case for convex objects is O (n 2 ), and the worst case for general objects remains O (n 3 ) although it is typically much lower. 3.2 Manipulation In <ref> [FC92] </ref> we presented some general criteria for optimality of force-closure grasps. The criteria measure the ratio of external forces to the finger forces needed to resist them in the worst case. The criteria have a simple geometric interpretation in the space of generalized forces.
Reference: [GME91] <author> Kenneth Y. Goldberg, Matthew T. Mason, and Michael A. Erdmann. </author> <title> Generating stochastic plans for a programmable parts feeder. </title> <booktitle> In International Conference on Robotics and Automation. IEEE, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: Manipulation with sliding fences and gripper jaws was already an active area of research, and there are many interesting problems to be solved. The distinction between part feeders and sensorless manipulators is becoming blurred <ref> [GME91] </ref>, and with RISC sensing, there is no longer a reason to avoid sensing because of computational or time considerations. One of the most intriguing aspects of RISC is that it blurs even the distinction between planning and work-cell design.
Reference: [LC91] <author> M. Lin and J. Canny. </author> <title> A fast algorithm for incremental distance calculation. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <pages> pages 1008-1014, </pages> <year> 1991. </year>
Reference-contexts: The criteria have a simple geometric interpretation in the space of generalized forces. Various metrics can be used to define the magnitude of the external force, so that the grasp quality measure can be task dependent. In <ref> [LC91, LC92] </ref> we described an algorithm for efficiently computing distance between polyhedral objects. For convex objects, the algorithm works in expected constant time when used incrementally. It maintains the pair of closest features between the two objects, and is especially well adapted to incremental use.
Reference: [LC92] <author> M. Lin and J. Canny. </author> <title> Efficient collision detection for animation. </title> <booktitle> In Third Eurographics Workshop, </booktitle> <year> 1992. </year>
Reference-contexts: The criteria have a simple geometric interpretation in the space of generalized forces. Various metrics can be used to define the magnitude of the external force, so that the grasp quality measure can be task dependent. In <ref> [LC91, LC92] </ref> we described an algorithm for efficiently computing distance between polyhedral objects. For convex objects, the algorithm works in expected constant time when used incrementally. It maintains the pair of closest features between the two objects, and is especially well adapted to incremental use.
Reference: [LP87] <author> T. Lozano-Perez. Handey: </author> <title> A robot system that recognizes, plans and manipulates. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <pages> pages 843-849, </pages> <year> 1987. </year> <institution> North Carolina. </institution>
Reference-contexts: There are geometric constraints that require the grasper remain clear of the assembly while it moves the part home, and it is very likely that a suitable grasp for this second phase cannot be applied when the object is picked up. So a regrasp step is needed <ref> [LP87] </ref>. To deal with the uncertainty between the grasped part and the rest of the assembly, either a second type of local sensor (see next section) or compliance must be built in to the placer.
Reference: [Mas86] <author> M. T. Mason. </author> <title> Mechanics and planning of manipulator pushing operations. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(3) </volume> <pages> 53-71, </pages> <year> 1986. </year>
Reference-contexts: Especially the work of Whitney [Whi86] who cogently argued for the use of simple, dedicated systems for manufacturing. And the work of Mason <ref> [Mas86] </ref> and others on manipulation by pushing certainly has gone far in the direction we are taking up. But there has not been a systematic body of work studying manipulation and sensing algorithms for simple hardware.
Reference: [PC93] <author> Eric Paulos and John Canny. </author> <title> Informed peg-in-hole insertion using optical sensors. </title> <booktitle> In SPIE Conference on Sensor Fusion VI, 1993. </booktitle> <address> Boston Massachusetts. </address>
Reference-contexts: In our experiments, we frequently use these arrays of sensors, but we also frequently use a single beam or reflective sensor to constrain one or two degrees of freedom. An example is the reflective hole sniffer described in <ref> [PC93] </ref>, which is similar to figure 1 . Because the pose information sought from the sensor consists of so few real values, it makes sense to use a description of sensors that makes clear their dimensionality, so that can be related to the information required for each task. <p> Or it can be done by a simple cross-calibration step, where a sensor from one device localizes a sensor of the other, thereby accurately linking their coordinate frames. This was done in our peg-in-hole insertion routine <ref> [PC93] </ref>, which achieves 25 micron tolerance insertions without chamfering at 99% repeatability, without prior calibration. Thus the most effective grouping of sensor and actuator units in a modular workcell is not into more complex sensors and actuators, but into instrumented actuators. <p> The goal of our experiments with sensors and actuators is 5 to build a library of strategies and a graphical user in-terface that support rapid development of an assembly plan. We have reported results on peg-in-hole insertion in <ref> [PC93] </ref>. Our plan is to perform a complete assembly of a mechanical device, namely a model-aircraft engine. The sensing/manipulation hardware has already proven itself in manufacturing environments for simple tasks, so we are not taking a great risk. <p> It maintains the pair of closest features between the two objects, and is especially well adapted to incremental use. We are adding impact and free-body dynamics and to the distance code, so that we can simulate the APOS and bowl feeders. In <ref> [PC93] </ref> we described an implementation of a peg-in-hole insertion strategy that used two types of beam sensor to avoid prior calibration. The strategy works for any size of circular peg, in fact the software does not know the peg size, and achieves 25 micron tolerance non-chamfered insertions at 99% reliability.
Reference: [PD80] <author> D. Patterson and D. Ditzel. </author> <title> The case for the reduced instruction set computer. Computer Architecture News, </title> <month> October </month> <year> 1980. </year>
Reference-contexts: 1 Introduction to RISC robotics Borrowing an acronym <ref> [PD80] </ref>, we chose the name RISC for our approach to manufacturing robotics [CG93]. In our case the acronym stands for Reduced Intricacy in Sensing and Control. We choose it because it is suggestive of the design goals we are promoting. RISC robots perform complex operations by composing simple elements.
Reference: [WC93] <author> A. Wallack and J. Canny. </author> <title> A geometric matching algorithm for beam scanning. </title> <booktitle> In SPIE Symposium on Vision Geometry II, 1993. </booktitle> <address> Boston, Massachusetts. </address>
Reference-contexts: Indexing schemes generate lookup tables whose effective dimension is 2, and are consequently very large. Our first approach was to use a geometric algorithm for matching, and to beat the O (n 3 ) bound for the alignment method applied to this problem. In <ref> [WC93] </ref> we described an 7 O (n + A) correspondence algorithm for objects with convex polygonal silhouettes, and an O (n 2 log n + A) algorithm for objects with non-convex silhouettes, where n is the object's complexity and A is the total number of feasible matches.
Reference: [WCM93] <author> A. Wallack, J. Canny, and D. Manocha. </author> <title> Object localization using crossbeam sensing. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <pages> pages 692-699, </pages> <year> 1993. </year>
Reference-contexts: Because the measurements are redundant, 6 measurements versus 3 degrees of freedom, the data can actually be used for recognition. A linear-time geometric algorithm to do recognition from beam data is described in <ref> [WCM93] </ref>. The implementation described there takes a few milliseconds to recognize and compute pose. Also described there is a hash table version which takes a few microseconds to accomplish the same thing. The cross-beam data is particularly well-suited to table lookup because the effective table dimension is only one.
Reference: [Whi86] <author> D. Whitney. </author> <title> Real robots dont need jigs. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <pages> pages 746-752, </pages> <year> 1986. </year>
Reference-contexts: Here are some typical comments: * RISC is just another acronym, where are the new ideas? We have certainly been influenced by earlier work stressing the importance of using simple hardware for manufacturing. Especially the work of Whitney <ref> [Whi86] </ref> who cogently argued for the use of simple, dedicated systems for manufacturing. And the work of Mason [Mas86] and others on manipulation by pushing certainly has gone far in the direction we are taking up.
References-found: 13

