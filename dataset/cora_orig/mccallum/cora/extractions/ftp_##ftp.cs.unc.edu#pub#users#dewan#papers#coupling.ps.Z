URL: ftp://ftp.cs.unc.edu/pub/users/dewan/papers/coupling.ps.Z
Refering-URL: http://www.cs.unc.edu/~dewan/res.html
Root-URL: http://www.cs.unc.edu
Title: Coupling the User Interfaces of a Multiuser Program  
Author: PRASUN DEWAN RAJIV CHOUDHARY 
Keyword: Categories and Subject Descriptors: C.2.4 [Computer-Communication Networks]: Distributed Systemsdistributed applications, distributed databases; D.2.2 [Software Engineering]: Tools and Techniquesuser interfaces; D.2.6 [Software Engineering]: Programming Environments interactive; D.3.3 [Programming Languages]: Language Constructsinput/output; H.1.2 [Models and Principles]: User/Machine Systemshuman factors; H.4.1 [Information Systems Applications]: Office Automation; I.7.2 [Text Processing]: Text Editing General Terms: Design, Human Factors, Languages Additional Key Words and Phrases: collaboration, computer supported cooperative work, groupware, structure editors, user interface management systems  
Note: 3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333  
Address: Chapel Hill  3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333  
Affiliation: University of North Carolina at  Intel Corporation  
Abstract: We have developed a new model for coupling the user-interfaces of a multiuser program. It is based on an interaction model and a user-interface framework that allow users and programmers, respectively, to view applications as editors of data. It consists of a semantics model, a specification model, and an implementation model for coupling. The semantics model determines which properties of interaction entities created for a user are shared with corresponding interaction entities created for other users and when changes made by a user to a property of an interaction entity are communicated to other users sharing it. It divides the properties of an interaction entity into multiple coupling sets and allows users to share different coupling sets independently. It supports several criteria for choosing when a change made by a user to a shared property is communicated to other users including how structurally complete the change is, how correct it is, and the time at which it was made. The specification model determines how users specify the desired semantics of coupling. It associates interaction entities with inheritable coupling attributes, allows multiple users to specify values of these attributes, and does a runtime matching of the coupling attributes specified by different users to derive the coupling among their user-interfaces. The implementation model determines how multiuser programs implement user-customizable coupling. It divides the task of implementing the coupling between system-provided modules and application programs. The former automatically support a predefined semantic and specification model which can be extended by the latter. We have implemented the coupling model as part of a system called Suite. This paper describes and motivates the model using the concrete example of Suite, discusses how aspects of it can be implemented in other systems, compares it with related work, discusses its shortcomings, and suggests directions for future work. First Author's address: Department of Computer Science, University of North Carolina, Chapel Hill, N.C. 27599. Second Author's address: Mail Stop HF3-02 Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, Oregon 97124. This research was supported in part by National Science Foundation grants IRI-9015442 and IRI-9208319 and in part by a grant from the Software Engineering Research Center at Purdue University, a National Science Foundation Industry/University Cooperative Research Center (NSF Grant No. ECD-8913133). 
Abstract-found: 1
Intro-found: 1
References-found: 0

