URL: ftp://ftp.cag.lcs.mit.edu/pub/raw/documents/spie96.ps.Z
Refering-URL: http://www.cag.lcs.mit.edu/~mfrank/pubs.html
Root-URL: 
Title: Solving graph problems with dynamic computation structures  
Author: Jonathan Babb, Matthew Frank, Anant Agarwal 
Keyword: dynamic computation structures, user-level hardware, FPGA computing, reconfigurable architecture workstation, logic emulation, virtual wires, closed semirings, shortest path.  
Address: Cambridge, MA 02139  
Affiliation: MIT Laboratory for Computer Science  
Abstract: We introduce dynamic computation structures (DCS), a compilation technique to produce dynamic code for reconfigurable computing. DCS specializes directed graph instances into user-level hardware for reconfigurable architectures. Several problems such as shortest path and transitive closure exhibit the general properties of closed semirings, an algebraic structure for solving directed paths. Motivating our application domain choice of closed semiring problems is the fact that logic emulation software already maps a special case of directed graphs, namely logic netlists, onto arrays of Field-Programmable Gate Arrays (FPGA). A certain type of logic emulation software called virtual wires further allows an FPGA array to be viewed as a machine-independent computing fabric. Thus, a virtual wires compiler, coupled with front-end commercial behavioral logic synthesis software, enables automatic behavioral compilation into a multi-FPGA computing fabric. We have implemented a DCS front-end compiler to parallelize the entire inner loop of the classic Bellman-Ford algorithm into synthesizable behavioral verilog. Leveraging virtual wire compilation and behavioral synthesis, we have automatically generated designs of 14 to 261 FPGAs from a single graph instance. We achieve speedups proportional to the number of graph edges from 10X to almost 400X versus a 125 SPECint SparcStation 10. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Babb, R. Tessier, and A. Agarwal. </author> <title> Virtual Wires: Overcoming pin limitations in FPGA-based logic emulators. </title> <booktitle> In Proceedings IEEE Workshop on FPGA-based Custom Computing Machines, </booktitle> <pages> pages 142-151, </pages> <address> Napa, CA, </address> <month> April </month> <year> 1993. </year> <note> IEEE. Also as MIT/LCS TM-491, </note> <month> January </month> <year> 1993. </year>
Reference: [2] <author> T. Bauer. </author> <title> The Design of an Efficient Hardware Subroutine Protocol for FPGAs. </title> <type> Master's thesis, </type> <institution> EECS Deptartment, MIT, Department of Electrical Engineering and Computer Science, </institution> <month> May </month> <year> 1994. </year>
Reference: [3] <author> P. Betrin and H. Touati. </author> <title> Pam programming environments: </title> <journal> Practice and experience. </journal> <volume> Napa, </volume> <pages> pages 133-138, </pages> <month> April </month> <year> 1994. </year>
Reference: [4] <author> D. Thomas and P. Moorby. </author> <title> The Verilog Hardware Description Language. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference: [5] <author> A. Dehon and S. Perentz. </author> <title> Transit Note No. 67: Transis Sbus Interface. </title> <type> Technical report, </type> <institution> Artificial Intelligence Laboratory, MIT, </institution> <month> June </month> <year> 1992. </year>
Reference: [6] <author> D. R. Engler. </author> <title> VCODE: A retargetable, extensible, very fast dynamic code generation system. </title> <booktitle> In PLDI '96, </booktitle> <year> 1996. </year>
Reference: [7] <author> M. Gokhale, W. Holmes, A. Kopser, S. Lucas, R. Minnich, D. Sweeney, and D. Lopresti. </author> <title> Building and using a highly parallel programmable logic array. </title> <journal> Computer, </journal> <volume> 24(1), </volume> <month> Jan. </month> <year> 1991. </year>
Reference: [8] <institution> IKOS Systems, Inc. </institution> <note> VirtuaLogic Emulation System Documentation, 1996. Version 1.2. </note>
Reference: [9] <author> R. R. T. Cormen, C. Leiserson. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
References-found: 9

