URL: http://www.cs.wisc.edu/~cs536-1/submissions/145.ps.gz
Refering-URL: 
Root-URL: 
Title: Pragmatic Modulo Scheduling for the UltraSparc Processor  -signed  
Author: Dr. Michael Burke Thomas J. Dr. Burke: by Partha Tirumalai, Krishna Subramanian and Boris Beylin Dr. Partha Tirumalai 
Note: Enclosed please find the manuscript,  Regards,  (Office)  
Address: P.O. Box 704 Yorktown Heights, New York 10598  2550 Garcia Avenue Mountain View, CA 94043  
Affiliation: Watson Research Center  Sun Microsystems, Inc.  
Pubnum: Mailstop SUN02-301  
Email: e-mail: Partha.Tirumalai@eng.sun.com  
Phone: Tel: (408) 774 8144  (510) 791 5115 (Home)  
Date: October 22, 1995 1 October 23rd, 1995  
Abstract: which we are submitting for consideration by the 1996 ACM SIGPLAN Conference on Programming Language Design and Implementation. Please let me know of your decision regarding this paper. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Rau, B.R., and Glaeser, </author> <title> C.D., Some scheduling techniques and an easily schedulable hori zontal architecture for high performance scientific computing, </title> <booktitle> Proceedings of the Fourteenth Annual Workshop on Microprogramming, </booktitle> <month> Oct. </month> <year> 1981, </year> <pages> pp. 183-198. </pages>
Reference: 2. <author> Lam, M., </author> <title> Software pipelining: an effective scheduling technique for VLIW machines, </title> <booktitle> Pro ceedings of the ACM SIGPLAN 88 Conference on Programming Language Design and Implementation, </booktitle> <month> June </month> <year> 1988, </year> <pages> pp. 318-327. </pages>
Reference: 3. <author> Aiken, A. and Nicolau, A., </author> <title> "Optimal loop parallelization," </title> <booktitle> Proceedings of the SIGPLAN 88 Conference on Programming Language Design and Implementation, </booktitle> <month> June </month> <year> 1988, </year> <pages> pp. 308-317. </pages>
Reference: 4. <author> Rau, B.R., </author> <title> "The Cydra 5 departmental supercomputer: design philosophies, decisions and trade-offs," </title> <journal> IEEE Computer, </journal> <volume> vol. 22.1, </volume> <month> Jan. </month> <year> 1989. </year>
Reference: 5. <author> Rau, B.R., Schlansker, </author> <title> M.S., and Tirumalai, P.P., "Code generation schema for modulo sched uled loops," </title> <booktitle> Proceedings of the 25th Annual IEEE/ACM International Symposium on Microarchitecture, </booktitle> <month> Nov. </month> <year> 1992, </year> <pages> pp. 158-169. </pages> <month> 6. </month> <title> "UltraSparc unleashes SPARC performance," Microprocessor Report, </title> <journal> vol. </journal> <volume> 8, no. 13, </volume> <month> Oct. 3, </month> <year> 1994. </year>
Reference: 7. <author> Tremblay, M., and Tirumalai, </author> <title> P.P., "Partners in platform design," </title> <journal> IEEE Spectrum, </journal> <volume> vol. 32, no. 4, </volume> <month> April </month> <year> 1995. </year>
Reference-contexts: Pragmatic Modulo Scheduling for the UltraSparc Processor October 22, 1995 4 the compiler and the processor were tightly coupled, design decisions and trade-offs for one were made with the other in mind <ref> [7] </ref>. For instance, the load and store buffers in the processor result in non-blocking loads up to the L2 cache. Simultaneously, the modulo scheduler was designed in as one of the key compiler optimizations.
Reference: 8. <author> Dehnert, J.C., Hsu, P.Y.-T., and Bratt, J.P., </author> <title> "Overlapped loop support in the Cydra 5," </title> <booktitle> Proceedings of the Third International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> April </month> <year> 1989, </year> <pages> pp. 26-38. </pages>
Reference: 9. <author> Tirumalai, P.P., Lee, M., and Schlansker, </author> <title> M.S., "Parallelization of loops with exits on pipe lined architectures," </title> <booktitle> Proceedings of Supercomputing 90, </booktitle> <month> Nov. </month> <year> 1990, </year> <pages> pp. 200-212. </pages>
Reference: 10. <author> Tirumalai, P.P., Lee, M., and Schlansker, </author> <title> M.S., "Parallelization of While loops on pipelined architectures" The Journal of Supercomputing, </title> <journal> vol. </journal> <volume> 5, </volume> <month> Nov. </month> <year> 1991, </year> <pages> pp. 119-136. </pages>
Reference: 11. <author> Towle, R.A., </author> <title> "Control and data dependence for program transformations," </title> <type> Ph.D. Thesis, </type> <institution> Uni versity of Illinois at Urbana-Champaign, </institution> <month> March </month> <year> 1976. </year>
Reference: 12. <author> Mahlke, S.A., et al, </author> <title> "Sentinel scheduling for VLIW and superscalar processors," </title> <booktitle> Proceedings of the Fifth International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> Oct. </month> <year> 1992, </year> <pages> pp. 238-247. </pages>
Reference: 13. <author> Allen, J.R., Kennedy, K., Porterfield C., and Warren, J., </author> <title> "Conversion of control dependence to data dependence," </title> <booktitle> Proceedings of the Tenth Annual ACM Symposium on Principles of Pro gramming Languages, </booktitle> <year> 1983. </year>
Reference: 14. <author> Rau, B.R., Tirumalai, P.P., Lee, M., and Schlansker, </author> <title> M.S., "Register allocation for software pipelined loops," </title> <booktitle> Proceedings of the ACM SIGPLAN 92 Conference on Programming Lan guage Design and Implementation, </booktitle> <month> June </month> <year> 1992, </year> <pages> pp. 283-299. </pages>

Reference: 1. <institution> Further discussion of the issues mentioned in Section 4. </institution>
Reference: 2. <institution> More results to be added to Section 5. </institution>
Reference: 3. <author> Figures, </author> <title> equations and charts will be added. </title>
Reference: 4. <institution> Expand on the introduction/background. </institution>
Reference: 5. <institution> An acknowledgement section will be added to acknowledge the assistance of various members of the UltraSparc compiler team. </institution>
Reference: 6. <institution> Any other changes or additions as suggested by the reviewers. </institution>
Reference-contexts: This paper describes many important problems that have to be overcome when modulo scheduling is used to target modern microprocessors and effectively compile a wide variety of programs. The techniques described here have been implemented in the commercial compiler developed at Sun for the UltraSparc processor <ref> [6] </ref>. An important ingredient guiding the development process was the close interaction between the processor and compiler design teams. A good compiler should exploit the features in a given processor and by the same token a good processor should provide features that benefit from appropriate compiler optimizations.
References-found: 19

