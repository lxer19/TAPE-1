URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-97-15.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Ray-based Data Level Comparisons of Direct Volume Rendering Algorithms  
Author: Kwansik Kim and Alex Pang 
Address: Santa Cruz, CA 95064 USA  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of California, Santa Cruz  
Pubnum: UCSC-CRL-97-15  
Abstract: This paper describes and demonstrates the effectiveness of several metrics for data level comparison of direct volume rendering (DVR) algorithms. The focus is not on speed ups from approximations or implementations with parallel or specialized hardware, but rather on means for comparing resulting images. However, unlike image level comparisons, where the starting point is 2D images, the main distinction of data level comparison is the use of intermediate 3D information to produce the individual pixel values during the rendering process. In addition to identifying the location and extent of differences in DVR images, these data level comparisons allow us to explain why these differences arise from different DVR algorithms. Because of the rich variety of DVR algorithms, finding a common framework for developing data level comparison metrics is one of the main challenges and contribution of this paper. In this paper, we report on how ray tracing can be used as a common framework for comparing a class of DVR algorithms. While this paper focuses on comparing different DVR algorithms, we believe that similar metrics and comparison techniques are also useful for volumetric data comparisons. For example, comparison of experimental versus simulated data sets, or forecasted versus observed data sets, etc. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jim Blinn. </author> <title> Light reflection functions for simulations of clouds and dusty surfaces. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 21-29, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: 1 INTRODUCTION Direct volume rendering (DVR) is one of the most popular methods for visualizing 3D scalar data sets. It generates images directly from the data values without creating intermediate geometric representations. The basic idea behind DVR is the simulation of light interaction with matter <ref> [1, 4, 7] </ref>. DVR is also a view-dependent approach requiring recalculation each time the view point is changed. Because of the view-dependent nature and the calculations involved with reasonably sized 3D data sets, DVR is a relatively expensive approach.
Reference: [2] <author> Brian Cabral, Nancy Cam, and Jim Foran. </author> <title> Accelerated volume rendering and tomo-graphic reconstruction using texture mapping hardware. </title> <booktitle> In Proceedings 1994 Symposium on Volume Visualization, </booktitle> <pages> pages 91-98, </pages> <address> Washington, D.C., </address> <month> Oct </month> <year> 1994. </year> <title> IEEE/ACM. Use for a conference paper. </title>
Reference: [3] <author> R. A. Drebin, L. Carpenter, and P. </author> <title> Hanrahan. </title> <booktitle> Volume rendering. In Computer Graphics, </booktitle> <pages> pages 65-74, </pages> <month> August </month> <year> 1988. </year>
Reference: [4] <author> J. T. Kajiya and B. Von Herzen. </author> <title> Ray tracing volume densities. </title> <booktitle> In Proceedings of SIG-GRAPH, </booktitle> <pages> pages 165-174, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: 1 INTRODUCTION Direct volume rendering (DVR) is one of the most popular methods for visualizing 3D scalar data sets. It generates images directly from the data values without creating intermediate geometric representations. The basic idea behind DVR is the simulation of light interaction with matter <ref> [1, 4, 7] </ref>. DVR is also a view-dependent approach requiring recalculation each time the view point is changed. Because of the view-dependent nature and the calculations involved with reasonably sized 3D data sets, DVR is a relatively expensive approach.
Reference: [5] <author> Philippe Lacroute and Marc Levoy. </author> <title> Fast volume rendering using a shear-warp factorization of the viewing transformation. </title> <booktitle> In Proceedings of SIGGRAPH 94, </booktitle> <pages> pages 451-458, </pages> <address> Orlando, FL, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Both data values and color values may be used while integrating along the ray. The sampling along the ray can be done at regular fixed step intervals or only at the intersection points between the ray and cell faces. Algorithms like shear-warp <ref> [5] </ref> and volume texture techniques [17] use color interpolation at the sample point to improve speed. Shear-warp can be considered as a ray tracing based DVR followed by a two dimensional image level warping step.
Reference: [6] <author> David Laur and Pat Hanrahan. </author> <title> Hierarchical splatting: A progressive refinement algorithm for volume rendering. </title> <booktitle> In Computer Graphics (ACM Siggraph Proceedings), </booktitle> <volume> volume 25, </volume> <pages> pages 285-288, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: This choice of sampling colors is one of the variations in volume renderings. Here, we chose the average color between two samples so as to maintain the consistency of data collected for our metrics. Splatting <ref> [6] </ref> uses voxel data modeling and a function that describes the influences of the given voxel in terms of the distance from the voxel location. The ray sampling patterns of splatting algorithms can be considered irregular along the viewing direction since the viewing ray may or 5.
Reference: [7] <author> Marc Levoy. </author> <title> Display of surfaces from volume data. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 8(5) </volume> <pages> 29-37, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: 1 INTRODUCTION Direct volume rendering (DVR) is one of the most popular methods for visualizing 3D scalar data sets. It generates images directly from the data values without creating intermediate geometric representations. The basic idea behind DVR is the simulation of light interaction with matter <ref> [1, 4, 7] </ref>. DVR is also a view-dependent approach requiring recalculation each time the view point is changed. Because of the view-dependent nature and the calculations involved with reasonably sized 3D data sets, DVR is a relatively expensive approach.
Reference: [8] <author> Marc Levoy. </author> <title> Efficient ray tracing of volume data. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(3) </volume> <pages> 245-261, </pages> <month> July </month> <year> 1990. </year>
Reference: [9] <author> R. Machiraju and R. Yagel. </author> <title> Reconstruction error characterization and control: A sampling theory approach. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <pages> pages 364-378, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: The data model in column (1) comes with either an interpolation function or distance function. Tri-linear interpolation seem to be the most popular interpolation method in most DVR implementations. However, other possibilities include higher order interpolations or adaptive reconstruction <ref> [9] </ref>. We can also easily incorporate simpler voxel modeling using nearest neighbors or other distance functions into our general ray tracing for comparisons. Both data values and color values may be used while integrating along the ray.
Reference: [10] <author> Tom Malzbender. </author> <title> Fourier volume rendering. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 12(3) </volume> <pages> 233-250, </pages> <month> July </month> <year> 1993. </year>
Reference: [11] <author> Nelson Max. </author> <title> Optical models for direct volume rendering. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 1(2) </volume> <pages> 99-108, </pages> <month> June </month> <year> 1995. </year>
Reference: [12] <author> Alex Pang and Adam Freeman. </author> <title> Methods for comparing 3D surface attributes. </title> <booktitle> In SPIE Vol. 2656 Visual Data Exploration and Analysis III, </booktitle> <pages> pages 58-64. SPIE, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: Intensity indicates amount of difference, while hues are determined by the signed difference in each color bank. The images does not provide any explanation for the horizontal and vertical striping artifacts. information to generate a data level comparison image. For example, <ref> [12] </ref> used surface radiosity values obtained from different form factor calculation methods as intermediate values available for a variety of visual mappings. In DVR, the intermediate information may include items related to the data values or to the volume rendering algorithm. <p> It does not preclude the use of of traditional methods such as side-by-side presentations for showing the results of the data level comparison (see Figure 3.1). In addition, since the comparative information are usually being collected in 3D, other methods such as those presented in <ref> [12] </ref> may also be used. 4 BASES FOR COMPARING DIRECT VOLUME RENDERING ALGORITHMS Unlike data level comparison of radiosity algorithms [12], there are no geometric primitives upon which to compare DVR data values. <p> In addition, since the comparative information are usually being collected in 3D, other methods such as those presented in <ref> [12] </ref> may also be used. 4 BASES FOR COMPARING DIRECT VOLUME RENDERING ALGORITHMS Unlike data level comparison of radiosity algorithms [12], there are no geometric primitives upon which to compare DVR data values. Furthermore, because of the view-dependent nature of DVR, and the wide variety of DVR algorithms, it is necessary to first define the basis for comparing these algorithms.
Reference: [13] <author> P. Sabella. </author> <title> A rendering algorithm for visualizing 3D scalar fields. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 51-58, </pages> <month> August </month> <year> 1988. </year>
Reference: [14] <author> P. Shirley and A. Tuchman. </author> <title> A polygonal approximation to direct scalar volume rendering. </title> <booktitle> In 1990 Workshop on Volume Visualization, </booktitle> <pages> pages 63-70, </pages> <address> San Diego, CA, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: This allows us to pre-compute the parameter values in terms of the four vertices of each cell face during projection. Then, during rendering, actual color intensities for both front and back intersections are computed in order to sample a point along the given ray. Projection algorithms, like coherent projection <ref> [14, 19] </ref>, usually use color interpolation for the points within the projected polygons and data interpolation at the vertices of the polygons. They can be simulated with ray tracing using the polygonal approximations of the cell as described above.
Reference: [15] <author> Jens Trapp and Hans-Georg Pagendarm. </author> <title> Data level comparative visualization in aircraft design. </title> <booktitle> In Proceedings of Visualization 96, </booktitle> <pages> pages 393-396. </pages> <publisher> IEEE, </publisher> <year> 1996. </year>
Reference-contexts: It is possible to produce cases where the summary statistics are the same, but the images are obviously different [20]. 3 DATA LEVEL COMPARISON The name data level comparison was inspired by the work of Trapp and Pagendarm <ref> [15] </ref> where they used it in CFD applications. Data level methods incorporate intermediate and auxiliary information in the rendering process and use this 3. DATA LEVEL COMPARISON 2 (bottom row).
Reference: [16] <author> Craig Upson and Michael Keeler. V-buffer: </author> <title> Visible volume rendering. </title> <journal> In Computer Graphics, </journal> <volume> volume 22, </volume> <pages> pages 59-64, </pages> <month> July </month> <year> 1988. </year>
Reference: [17] <author> Allen Van Gelder and Kwansik Kim. </author> <title> Direct volume rendering with shading via 3D textures. </title> <booktitle> In ACM/IEEE Symposium on Volume Visualization, </booktitle> <pages> pages 22-30, </pages> <address> San Fran-cisco, CA, </address> <month> October </month> <year> 1996. </year> <note> References 11 </note>
Reference-contexts: Both data values and color values may be used while integrating along the ray. The sampling along the ray can be done at regular fixed step intervals or only at the intersection points between the ray and cell faces. Algorithms like shear-warp [5] and volume texture techniques <ref> [17] </ref> use color interpolation at the sample point to improve speed. Shear-warp can be considered as a ray tracing based DVR followed by a two dimensional image level warping step. Our polygonal approximation uses a simple but general polygon intersections of cell faces of regular and irregular volume cells.
Reference: [18] <author> L. Westover. </author> <title> Footprint evaluation for volume rendering. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 367-376, </pages> <month> August </month> <year> 1990. </year>
Reference: [19] <author> Jane Wilhelms and Allen Van Gelder. </author> <title> A coherent projection approach for direct volume rendering. </title> <booktitle> In Proceedings of SIGGRAPH 91, </booktitle> <pages> pages 275-284, </pages> <year> 1991. </year>
Reference-contexts: This allows us to pre-compute the parameter values in terms of the four vertices of each cell face during projection. Then, during rendering, actual color intensities for both front and back intersections are computed in order to sample a point along the given ray. Projection algorithms, like coherent projection <ref> [14, 19] </ref>, usually use color interpolation for the points within the projected polygons and data interpolation at the vertices of the polygons. They can be simulated with ray tracing using the polygonal approximations of the cell as described above.
Reference: [20] <author> Peter L. Williams and Samuel P. Uselton. </author> <title> Foundations for measuring volume rendering quality. </title> <type> Technical Report NAS-96-021, </type> <institution> NASA Numerical Aerospace Simulation, </institution> <year> 1996. </year>
Reference-contexts: Finally, if the differences are very small, image level comparisons are not as effective. One should also be aware of the limitations of summary statistics derived from images. It is possible to produce cases where the summary statistics are the same, but the images are obviously different <ref> [20] </ref>. 3 DATA LEVEL COMPARISON The name data level comparison was inspired by the work of Trapp and Pagendarm [15] where they used it in CFD applications. Data level methods incorporate intermediate and auxiliary information in the rendering process and use this 3. DATA LEVEL COMPARISON 2 (bottom row). <p> In particular, in addition to the rigorous specification of key DVR parameters such as viewing parameters, optical models, transfer functions, etc. recommended by Williams and Uselton <ref> [20] </ref>, we must first transform DVR algorithms to a common base. For this paper, we use ray tracing as the common base. By this we mean that projection based algorithms are transformed and represented as ray based algorithms.
Reference: [21] <author> Craig M. Wittenbrink and Arun K. Somani. </author> <title> Permutation warping for data parallel volume rendering. </title> <booktitle> In Proceedings of the Parallel Rendering Symposium, </booktitle> <pages> pages 57-60, </pages> <address> color plate p. 110, San Jose, CA, </address> <month> October </month> <year> 1993. </year>
References-found: 21

