URL: http://www.eecs.umich.edu/~qstout/pap/BR94dom.ps
Refering-URL: http://www.eecs.umich.edu/~qstout/papers.html
Root-URL: http://www.cs.umich.edu
Title: Constant Time Computation of Minimum Dominating Sets  
Author: Marilynn Livingston Quentin F. Stout 
Keyword: Key Words: codes, covering, domination, packing, matching, perfect domination, grid graph, product graph, mesh, torus.  
Address: Edwardsville, IL 62026-1653 Ann Arbor, MI 48109-2122  
Affiliation: Dept. of Computer Science Elec. Eng. and Comp. Sci. Southern Illinois University University of Michigan  
Note: In Congressus Numerantium 105 (1994), pp. 116-128.  
Abstract: Let G be a graph and let P (n) denote an element from a one-parameter family of graphs, such as a path of length n, a cycle of length n, or a complete binary tree of height n. We are concerned with determining minimum dominating sets of graphs of the form G fi P (n). Using dynamic programming and properties of finite state spaces, we show a constant time algorithm to produce a minimum dominating set of G fi P (n), for fixed G and all n, for the one-parameter families mentioned. Previous researchers had used similar techniques but obtained only linear-time algorithms. We also show how a closed form expression can be obtained for the minimum domination number of G fi P (n). We discuss extensions of the algorithm to the determination of all minimum dominating sets for G fi P (n), and to related problems of coverings, packings, and codes. In addition, we discuss algorithm extensions to several different types of domination, including perfect domination, and to other ways of composing graphs. 
Abstract-found: 1
Intro-found: 1
Reference: [BBHS] <author> D.W. Bange, A.E. Barkauskas, </author> <title> L.H. Host, and P.J. Slater, "Efficient near-domination of grid graphs", </title> <note> Congressus Numerantium 58 (1987) 83-92. </note>
Reference-contexts: Our approach can be adapted to allow different types of domination as well, such as perfect [LS90], efficient <ref> [BBHS, BBS] </ref> and total domination [HL90], and still retain the fi (1) time complexity. We will illustrate with an example of this in Section 3.2. A closely related concept to dominating sets is that of packing. Let k be a positive integer.
Reference: [BBS] <author> D.W. Bange, A.E. Barkauskas, and P.J. Slater, </author> <title> "Efficient dominating sets in graphs", Applications of Discrete Mathematics, </title> <editor> R.D. Ringeisen and F.S. Roberts, eds., </editor> <publisher> SIAM (1988). </publisher>
Reference-contexts: Our approach can be adapted to allow different types of domination as well, such as perfect [LS90], efficient <ref> [BBHS, BBS] </ref> and total domination [HL90], and still retain the fi (1) time complexity. We will illustrate with an example of this in Section 3.2. A closely related concept to dominating sets is that of packing. Let k be a positive integer.
Reference: [CC93] <author> T.Y. Chang and W.E. Clark, </author> <title> "The domination numbers of the 5fin and 6fin grid graphs", </title> <journal> J. </journal> <note> Graph Theory 17 (1993) 81-107. </note>
Reference-contexts: Pargas described a parallel implementation to compute the domination number of P m fi P n . They obtained results for m 9 and n 10. Time requirements became prohibitive for m = 10, even for the 16-node FPS T series hypercube. More recently, T.Y. Chang and W.E. Clark <ref> [CC93] </ref> gave a lengthy proof of a closed form expression for fl (P m fi P n ) for m = 5; 6, thus extending the results of E. Hare [H89] to all n 1 for these values of m.
Reference: [CHHW] <author> E.J. Cockayne, E.O. Hare, S.T. Hedetniemi and T.V. Wimer, </author> <title> "Bounds for the domination number of grid graphs", </title> <note> Congressus Numerantium 47 (1985) 217-228. </note>
Reference-contexts: The complexity of the domination problem for complete grid graphs is not known, however. M. Jacobson and L. F. Kinch [JK84] found closed form expressions for fl (P m fiP n ) for m = 2; 3; 4. E. Cockayne, E. Hare, S. T. Hedetniemi, and T. Wimer <ref> [CHHW] </ref> reported that they had inductive proofs for m = 2; 3 and all n, and for m = 4 with n = 4k. <p> Recently, D.C. Fisher [F93] determined the 2-packing number of P m fi P n for all m and n. He established a recursive inequality which enabled him to deal with the cases for m 8 with elementary arguments in the same spirit as those in <ref> [CHHW] </ref>. Several cases had to be treated 2 separately, some of which were handled with a branch and bound algorithm, others by ad hoc arguments.
Reference: [F93] <author> D.C. Fisher, </author> <title> "The 2-packing number of complete grid graphs", </title> <address> Ars Combinatoria 36 (1993) 261-270. </address>
Reference-contexts: E. Hare and W. Hare [HH91] gave a linear time algorithm for determining the 2-packing number of the complete grid graph P m fi P n for fixed m. Recently, D.C. Fisher <ref> [F93] </ref> determined the 2-packing number of P m fi P n for all m and n. He established a recursive inequality which enabled him to deal with the cases for m 8 with elementary arguments in the same spirit as those in [CHHW].
Reference: [GJ79] <author> M.R. Garey and D.S. Johnson, </author> <title> Computers and Intractability. A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman, </publisher> <address> San Francisco (1979). </address>
Reference-contexts: The general problem of determining fl (G) for a given graph G, and of finding a dominating set D of G of this minimum cardinality, has been an active area of research for many years [HL90]. When properly stated, this problem has been shown to be NP-complete <ref> [GJ79] </ref>, and remains so even when G is restricted to certain simple classes of graphs. One example of this is the family of grid graphs, formed from products of paths, where P n denotes the path with n vertices.
Reference: [H89] <author> E.O. Hare, </author> <title> "Algorithms for grid and grid-like graphs". </title> <type> Ph. D. thesis, </type> <institution> Dept. Comp. Sc., Clemson University, Clemson, </institution> <address> SC (1989). </address>
Reference-contexts: More recently, T.Y. Chang and W.E. Clark [CC93] gave a lengthy proof of a closed form expression for fl (P m fi P n ) for m = 5; 6, thus extending the results of E. Hare <ref> [H89] </ref> to all n 1 for these values of m. In this paper we show how to use the properties of finite state spaces, together with dynamic programming, to produce a fi (1) time algorithm for computing fl (P m fi P n ) for fixed m.
Reference: [HH91] <author> E.O. Hare and W.R. Hare, </author> <title> "k-Packing of P m fi P n ", Congressus Numerantium 84 (1991) 33-39. </title>
Reference-contexts: The k-packing number of G is the cardinality of the largest k-packing of G. Note that the 1-packing number of G is also known as the independence number of G, the largest size of a subset of nonadjacent vertices of G. E. Hare and W. Hare <ref> [HH91] </ref> gave a linear time algorithm for determining the 2-packing number of the complete grid graph P m fi P n for fixed m. Recently, D.C. Fisher [F93] determined the 2-packing number of P m fi P n for all m and n.
Reference: [HH87] <author> E.O. Hare and S.T. Hedetniemi, </author> <title> "A linear algorithm for computing the knight's domination problem of a k fi n chessboard", </title> <note> Congressus Numerantium 59 (1987) 115-130. </note>
Reference: [HHH] <author> E.O. Hare, S.T. Hedetniemi and W.R. Hare, </author> <title> "Algorithms for computing the domination number of k fi n complete grid graphs", </title> <note> Congressus Numerantium 55 (1986) 81-92. </note>
Reference-contexts: In addition, they constructed elementary arguments to establish the inequality (n 2 + n 3)=5 fl (P n fi P n ) (n 2 + 4n c)=5 where c is 16, 17, or 20, depending on the remainder of n modulo 5. E. Hare, S. Hedetniemi, and W. Hare <ref> [HHH] </ref> gave a fi (n) algorithm for computing fl (P m fi P n ) for fixed m. Their algorithm was based on dynamic programming techniques with an associated state table.
Reference: [HL90] <author> S.T. Hedetniemi and R.C. Laskar, </author> <title> "Bibliography on domination in graphs and some basic definitions of domination parameters", </title> <journal> Discrete Math. </journal> <month> 86 </month> <year> (1990) </year> <month> 257-277. </month>
Reference-contexts: The general problem of determining fl (G) for a given graph G, and of finding a dominating set D of G of this minimum cardinality, has been an active area of research for many years <ref> [HL90] </ref>. When properly stated, this problem has been shown to be NP-complete [GJ79], and remains so even when G is restricted to certain simple classes of graphs. <p> Our approach can be adapted to allow different types of domination as well, such as perfect [LS90], efficient [BBHS, BBS] and total domination <ref> [HL90] </ref>, and still retain the fi (1) time complexity. We will illustrate with an example of this in Section 3.2. A closely related concept to dominating sets is that of packing. Let k be a positive integer.
Reference: [HHL] <author> S.M. Hedetniemi, S.T. Hedetniemi, and R. Laskar, </author> <title> "Domination in trees: models and algorithms", Graph Theory with Applications to Algorithms and Computer Science, </title> <editor> Y. Alavi, G. Chartrand, L. Lesniak, D. Lick, and C. Wall, eds., </editor> <publisher> (1985) Wiley, </publisher> <pages> 423-442. </pages>
Reference-contexts: Further details of the algorithm implementation, and tables of fl (P m fi P n ), will appear in [LS94]. Many domination-related concepts defined for arbitrary graphs enjoy easy solutions or at least fast algorithms when restricted to the family of trees. S.M. Hedetniemi, S.T. Hedetniemi, and R. Laskar <ref> [HHL] </ref> give an extensive coverage of domination and domination-related algorithms for trees, most of which are linear time algorithms.
Reference: [JK84] <author> M.S. Jacobson and L.F. Kinch, </author> <title> "On the domination number of products of graphs", </title> <address> Ars Combinatoria 18 (1984) 33-44. </address>
Reference-contexts: T. Leighton proved that determining the domination number fl Partially supported by NSF/ARPA grant CCR-9004727 1 of an arbitary grid graph is NP-complete [Jo85]. The complexity of the domination problem for complete grid graphs is not known, however. M. Jacobson and L. F. Kinch <ref> [JK84] </ref> found closed form expressions for fl (P m fiP n ) for m = 2; 3; 4. E. Cockayne, E. Hare, S. T. Hedetniemi, and T.
Reference: [Jo85] <author> D.S. Johnson, </author> <title> "The NP-Completeness column: an ongoing guide", </title> <journal> J. </journal> <note> Algorithms 6 (1985) 434-451. </note>
Reference-contexts: A grid graph is any subgraph of a complete grid graph. T. Leighton proved that determining the domination number fl Partially supported by NSF/ARPA grant CCR-9004727 1 of an arbitary grid graph is NP-complete <ref> [Jo85] </ref>. The complexity of the domination problem for complete grid graphs is not known, however. M. Jacobson and L. F. Kinch [JK84] found closed form expressions for fl (P m fiP n ) for m = 2; 3; 4. E. Cockayne, E. Hare, S. T. Hedetniemi, and T.
Reference: [KYK] <author> T. Kikuno, N. Yoshida, and Y. Kakkuda, </author> <title> "A linear algorithm for the domination number of a series-parallel graph", </title> <journal> Discrete Appl. Math., </journal> <month> 37 </month> <year> (1983) </year> <month> 299-311. </month>
Reference: [LS90] <author> M. Livingston and Q.F. Stout, </author> <title> "Perfect dominating sets", </title> <note> Congressus Numerantium 79 (1990) 187-203. </note>
Reference-contexts: Our approach can be adapted to allow different types of domination as well, such as perfect <ref> [LS90] </ref>, efficient [BBHS, BBS] and total domination [HL90], and still retain the fi (1) time complexity. We will illustrate with an example of this in Section 3.2. A closely related concept to dominating sets is that of packing. Let k be a positive integer.
Reference: [LS94] <author> M. Livingston and Q.F. Stout, </author> <title> "Constant time computation of properties of product graph families", </title> <note> in preparation </note>
Reference-contexts: Further details of the algorithm implementation, and tables of fl (P m fi P n ), will appear in <ref> [LS94] </ref>. Many domination-related concepts defined for arbitrary graphs enjoy easy solutions or at least fast algorithms when restricted to the family of trees. S.M. Hedetniemi, S.T. Hedetniemi, and R. Laskar [HHL] give an extensive coverage of domination and domination-related algorithms for trees, most of which are linear time algorithms. <p> As can be seen, both the time and space complexity of this algorithm depend only on the graph G, although each will be exponential in the size of G. The proof that the periodic behavior must occur, forcing the loop in steps 5-13 to terminate, appears in <ref> [LS94] </ref>. 3.1 Main Theorem When Algorithm 3.1 terminates, post-processing of the cost matrix gives the following result. 8 Theorem 3.1 Let G be an arbitrary graph. <p> One can also vary the definition of product used, allowing us to analyze, for example, grid graphs where each vertex is connected to its eight nearest neighbors, rather than its four nearest neighbors. Several of the extensions mentioned above will be explored in <ref> [LS94] </ref> and subsequent papers. Those papers will include more details of material outlined here, including tables of fl (P m fi P n ).
Reference: [SP87] <author> H.G. Singh and R.P. Pargas, </author> <title> "A parallel implementation for the domination number of a grid graph", </title> <note> Congressus Numerantium 59 (1987) 297-311. 12 </note>
Reference-contexts: Using a less memory-intensive implementation, they computed fl (P 8 fi P 8 ) in 2.5 minutes and fl (P 8 fi P 19 ) in approximately 7 minutes. In <ref> [SP87] </ref>, H.G. Singh and R.P. Pargas described a parallel implementation to compute the domination number of P m fi P n . They obtained results for m 9 and n 10. Time requirements became prohibitive for m = 10, even for the 16-node FPS T series hypercube. More recently, T.Y.
References-found: 18

