URL: http://www.cs.uni-bonn.de/II/staff/strelen/dapi.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/II/staff/strelen/SelectedPapers.htm
Root-URL: http://cs.uni-bonn.de
Title: Approximate Product Form Solutions for Markov Chains influenced: The more aggregates are considered, the better
Author: Johann Christoph Strelen Rheinische Friedrich-Wilhelms-Universitat Bonn 
Keyword: Accurate approximations  
Note: are obtained, and moreover, the accuracy can be  
Abstract: An approximation technique for finite state Markov chains is proposed. The solutions are in product form and can be calculated iteratively. This iteration is equivalent to disaggregating macro probabilities, multiplying with transition probabilities, and aggregating the obtained state probabilities we call it DA iteration. Large Markov chains with many states can be solved, so large that the state probabilities could neither be stored nor calculated in any computer. In this paper, we discuss steady state probabilities. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Bark, Aggregationsmethoden fur Markovketten, </author> <year> 1996. </year>
Reference-contexts: Each aggregate Z k;j defines a macro probability (marginal probability) as follows: r k (j) = PfZ 2 Z k;j g = z2Z k;j We collect the marginal probabilities into tuples r k 4 i j and, in turn, these into R 4 By (1), the aggregation function A : <ref> [0; 1] </ref> n ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; p 7! R; is defined. <p> defines a macro probability (marginal probability) as follows: r k (j) = PfZ 2 Z k;j g = z2Z k;j We collect the marginal probabilities into tuples r k 4 i j and, in turn, these into R 4 By (1), the aggregation function A : <ref> [0; 1] </ref> n ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; p 7! R; is defined. <p> (j) = PfZ 2 Z k;j g = z2Z k;j We collect the marginal probabilities into tuples r k 4 i j and, in turn, these into R 4 By (1), the aggregation function A : <ref> [0; 1] </ref> n ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; p 7! R; is defined. <p> In fact, the MED is completely determined by all parameters ae k;j ; ae for short. By (2) and (3), the disaggregation function is defined: D : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] n ; R 7! : In general, the nonlinear equations (3) must be solved in order to calculate all MED parameters ae k;j and G of the MED , given the marginal probabilities <p> In fact, the MED is completely determined by all parameters ae k;j ; ae for short. By (2) and (3), the disaggregation function is defined: D : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] n ; R 7! : In general, the nonlinear equations (3) must be solved in order to calculate all MED parameters ae k;j and G of the MED , given the marginal probabilities R. This is easily accomplished in some special cases. <p> In fact, the MED is completely determined by all parameters ae k;j ; ae for short. By (2) and (3), the disaggregation function is defined: D : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] n ; R 7! : In general, the nonlinear equations (3) must be solved in order to calculate all MED parameters ae k;j and G of the MED , given the marginal probabilities R. This is easily accomplished in some special cases. <p> Another simple case are the state probabilities in product form queueing networks. Instead of calculating the steady state probabilities q of a Markov chain we determine an approximation p = D (R) where R = T (R) holds. Here the function T is defined as follows: T : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; R 7! A D (R)P : This approximation p and its marginal probabilities R are referred to as disaggregation <p> Instead of calculating the steady state probabilities q of a Markov chain we determine an approximation p = D (R) where R = T (R) holds. Here the function T is defined as follows: T : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; R 7! A D (R)P : This approximation p and its marginal probabilities R are referred to as disaggregation aggregation product form (DA) solution. <p> Here the function T is defined as follows: T : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; R 7! A D (R)P : This approximation p and its marginal probabilities R are referred to as disaggregation aggregation product form (DA) solution. <p> Here the function T is defined as follows: T : <ref> [0; 1] </ref> N 1 +1 fi : : : fi [0; 1] N C +1 ! [0; 1] N 1 +1 fi : : : fi [0; 1] N C +1 ; R 7! A D (R)P : This approximation p and its marginal probabilities R are referred to as disaggregation aggregation product form (DA) solution. In fact, only the marginal probabilities R and the MED parameters ae and G must be calculated. <p> Vice versa, independent components may define different partitions: If the state space is rectangular, and the components are completely independent, then the according DA solution is exact and the transition probability matrix of the Markov chain is a Kronecker product, see e.g. [3]. Bark <ref> [1] </ref> does some research on these topics.
Reference: [2] <author> O. J. Boxma, </author> <title> Workloads and waiting times in single-server systems with multiple customer classes, </title> <note> Queueing Systems 5 (1989) 185-214. </note>
Reference: [3] <author> G. Ciardo and K. S. Trivedi, </author> <title> A decomposition approach for stochastic reward net models, Performance Evaluation 18 (1) (1993) 37-59. </title>
Reference-contexts: Vice versa, independent components may define different partitions: If the state space is rectangular, and the components are completely independent, then the according DA solution is exact and the transition probability matrix of the Markov chain is a Kronecker product, see e.g. <ref> [3] </ref>. Bark [1] does some research on these topics.
Reference: [4] <author> J. F. Gierse, Zustandsraum-Aggregation fur fast-unabhangige stochastische Petrinetze, </author> <type> Master's thesis, </type> <institution> Universitat Bonn, </institution> <year> 1995. </year>
Reference-contexts: In section 3, these topics are pointed out. In [17] and [16], DA iterative solutions for polling systems are treated, in [16] for queueing networks with a fork-join subnet, in [9] and <ref> [4] </ref> for some generalized stochastic Petri nets, and in [18] for queueing networks with repetitive service blocking. The obtained accuracy compares favourably with results calculated using other methods from the literature, and with exact results.
Reference: [5] <editor> T. Heinrichs, B. Bark, and J. C. Strelen, Wartezeiten fur Pollingsysteme mittels numerischer Modelle, in: B. Walke and O. Spaniol, eds., Messung, </editor> <publisher> Modellierung und Bewertung von Rechen- und Kommunikationssystemen (Springer, </publisher> <address> Berlin, </address> <year> 1993) </year> <month> 173-185. </month>
Reference: [6] <author> A. Jennings and W. J. Stewart, </author> <title> Simultaneous iteration for partial eigensolution of real matrices, </title> <journal> J. Inst. </journal> <note> Maths Applics 15 (1975) 351-361. </note>
Reference: [7] <author> V. Jonas, </author> <title> Iterative Analyse von Blockiernetzen mit alternierender Aggregation und Disaggregation, </title> <type> Master's thesis, </type> <institution> Universitat Bonn, </institution> <year> 1992. </year>
Reference: [8] <author> A. M. Kagan, J. V. Linnik, and C. R. Rao, </author> <title> Characterization Problems in Mathematical Statistics (Wiley, </title> <address> New York, </address> <year> 1973). </year>
Reference-contexts: First, it 3 satisfies the macro probabilities, R = A (); and secondly, maximizes the entropy. Thus, according to the product form theorem, see Kagan, Linnik, Rao <ref> [8, theorem 13.2.1, page 409] </ref>, this maximum entropy distribution (MED) is uniquely determined and has a product form, (z) = G k=1 where the ae k;z k &gt; 0 are some real numbers, r k (j) = G z2Z T C Y ae i;z i ; j = 0; : :
Reference: [9] <author> R. Nitzgen, Aggregations-Disaggregationsverfahren fur verallgemeinerte stochastis-che Petrinetze, </author> <type> Master's thesis, </type> <institution> Universitat Bonn, </institution> <year> 1993. </year>
Reference-contexts: In section 3, these topics are pointed out. In [17] and [16], DA iterative solutions for polling systems are treated, in [16] for queueing networks with a fork-join subnet, in <ref> [9] </ref> and [4] for some generalized stochastic Petri nets, and in [18] for queueing networks with repetitive service blocking. The obtained accuracy compares favourably with results calculated using other methods from the literature, and with exact results.
Reference: [10] <author> J. M. Ortega and W. C. Rheinboldt, </author> <title> Iterative Solution of Nonlinear Equations in Several Variables (Academic Press, </title> <address> New York, London, </address> <year> 1970). </year>
Reference-contexts: Otherwise let t := t+1 and goto step 1) Results: The macro probabilities R (t+1) and the MED parameters ae (t+1) and G (t+1) . 2 Now we are going to prove the existence of DA solutions. This is accomplished applying the following theorem, see e.g. <ref> [10, 6.3.2] </ref>. Brouwer Fixed-Point Theorem Let T 0 : P n ae IR n ! IR n be a continuous operator on the compact, convex set P n , and suppose that T 0 ( P n ) ae P n .
Reference: [11] <author> B. Philippe, Y. Saad, and W. J. Stewart, </author> <title> Numerical methods in Markov chain modeling, </title> <note> Operations Reseach 40 (6) (1992). </note>
Reference-contexts: Unfortunately, the number of Markov chain states grows quickly as the complexity of the model increases. Therefore much effort has been made on the development of algorithms for large linear systems of equations, like power, Gauss-Seidel, and SOR algorithms; an overview is given in <ref> [11] </ref>. Nowadays, systems with some hundreds of thousands of states can be solved. A special class of algorithms is based on the principle of iterative aggregation and disaggregation, a well-established solution technique for Markov chains, see for example the survey of Schweitzer [12].
Reference: [12] <author> P. J. Schweitzer, </author> <title> A survey of aggregation-disaggregation in large Markov chains, </title> <editor> in: W. J. Stewart, ed., </editor> <title> Numerical Solution of Markov Chains (Marcel Dekker, </title> <address> New York, Basel, Hong Kong, </address> <year> 1991) </year> <month> 63-88. </month>
Reference-contexts: Nowadays, systems with some hundreds of thousands of states can be solved. A special class of algorithms is based on the principle of iterative aggregation and disaggregation, a well-established solution technique for Markov chains, see for example the survey of Schweitzer <ref> [12] </ref>. Another problem are different time scales which stem from rare events in the modeled systems. This may lead to very long iteration times when iterative algorithms are applied. Simultaneous iterative techniques ([6], [14], [15], [16]) cope with this.
Reference: [13] <author> J. E. Shore and R. W. Johnson, </author> <title> Axiomatic derivation of the principle of maximum entropy and the principle of minimum cross-entropy, </title> <journal> IEEE Trans. Inform. Th. </journal> <note> 26 (1) (1980) 26-37. </note>
Reference-contexts: Therefore Z R 4 = [0 : N 1 ] fi : : : fi [0 : N C ] n Z T is not empty. Here, we use the subset independence feature of maximum entropy distributions, which is stated in the Shore and Johnson paper <ref> [13] </ref>. For our purposes, this can be formulated as follows.
Reference: [14] <author> W. J. Stewart, </author> <title> A comparison of numerical techniques in Markov modeling, </title> <journal> Comm. </journal> <note> ACM 21 (2) (1978) 144-152. </note>
Reference-contexts: Another problem are different time scales which stem from rare events in the modeled systems. This may lead to very long iteration times when iterative algorithms are applied. Simultaneous iterative techniques ([6], <ref> [14] </ref>, [15], [16]) cope with this. Our disaggregation aggregation (DA) iteration is a new general approximate aggregation technique for finite Markov chains with discrete time. The calculated state probabilities are in product form; we call them disaggregation aggregation product form (DA) solutions.
Reference: [15] <author> J. C. Strelen, </author> <title> A fast simultaneous iteration technique for the analysis of Markov chains, </title> <institution> Interner Bericht II/89/1, Institut fur Informatik, Universitat Bonn, </institution> <year> 1989. </year>
Reference-contexts: Another problem are different time scales which stem from rare events in the modeled systems. This may lead to very long iteration times when iterative algorithms are applied. Simultaneous iterative techniques ([6], [14], <ref> [15] </ref>, [16]) cope with this. Our disaggregation aggregation (DA) iteration is a new general approximate aggregation technique for finite Markov chains with discrete time. The calculated state probabilities are in product form; we call them disaggregation aggregation product form (DA) solutions.
Reference: [16] <author> J. C. Strelen, </author> <title> Iterative Analyse von Markov-Modellen mit alternierender Aggregation und Disaggregation, </title> <editor> in: A. Lehmann and F. Lehmann, eds., Messung, </editor> <publisher> Modellierung und Bewertung von Rechensystemen IFB 286 (Springer, </publisher> <address> Berlin, </address> <year> 1991) </year> <month> 320-336. </month>
Reference-contexts: Another problem are different time scales which stem from rare events in the modeled systems. This may lead to very long iteration times when iterative algorithms are applied. Simultaneous iterative techniques ([6], [14], [15], <ref> [16] </ref>) cope with this. Our disaggregation aggregation (DA) iteration is a new general approximate aggregation technique for finite Markov chains with discrete time. The calculated state probabilities are in product form; we call them disaggregation aggregation product form (DA) solutions. <p> Z T = [0 : N 1 ] fi : : : fi [0 : N C ], the MED is given by p (z) = r 1 (z 1 ) : : : r C (z C ); z 2 Z T ; (5) which is easily verified (see <ref> [16] </ref>). Here ae k;j = r k (j); j = 0; : : : ; N k ; k = 1; : : : ; C; and G = 1 hold. This is generalized in section 3 for the case where Z T consists of the union of cartesian products. <p> In section 3, these topics are pointed out. In [17] and <ref> [16] </ref>, DA iterative solutions for polling systems are treated, in [16] for queueing networks with a fork-join subnet, in [9] and [4] for some generalized stochastic Petri nets, and in [18] for queueing networks with repetitive service blocking. <p> In section 3, these topics are pointed out. In [17] and <ref> [16] </ref>, DA iterative solutions for polling systems are treated, in [16] for queueing networks with a fork-join subnet, in [9] and [4] for some generalized stochastic Petri nets, and in [18] for queueing networks with repetitive service blocking. The obtained accuracy compares favourably with results calculated using other methods from the literature, and with exact results.
Reference: [17] <author> J. C. Strelen and B. Bark, </author> <title> An approach to the numerical analysis of multiple-queue cyclic service systems, </title> <editor> in: G. Stiege and J. S. Lie, eds., Messung, </editor> <booktitle> Modellierung und Bewertung von Rechensystemen und Netzen IFB 218 (Springer, </booktitle> <address> Berlin, </address> <year> 1989) </year> <month> 75-88. </month>
Reference-contexts: In section 3, these topics are pointed out. In <ref> [17] </ref> and [16], DA iterative solutions for polling systems are treated, in [16] for queueing networks with a fork-join subnet, in [9] and [4] for some generalized stochastic Petri nets, and in [18] for queueing networks with repetitive service blocking.
Reference: [18] <author> J. C. Strelen, B. Bark, J. Becker, and V. Jonas, </author> <title> Analysis of queueing networks with blocking using a new aggregation technique, </title> <note> Submitted for publication. 23 </note>
Reference-contexts: In section 3, these topics are pointed out. In [17] and [16], DA iterative solutions for polling systems are treated, in [16] for queueing networks with a fork-join subnet, in [9] and [4] for some generalized stochastic Petri nets, and in <ref> [18] </ref> for queueing networks with repetitive service blocking. The obtained accuracy compares favourably with results calculated using other methods from the literature, and with exact results. We describe the blocking networks in some detail: Example We consider queueing networks with repetitive service blocking.
References-found: 18

