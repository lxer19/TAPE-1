URL: ftp://ftp.eecs.umich.edu/people/durfee/computer95-rtai.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/durfee/vita.html
Root-URL: http://www.cs.umich.edu
Email: fmusliner,hendler,agrawalag@cs.umd.edu  durfee@eecs.umich.edu  fjks,cjpaulg@ece.cmu.edu  
Title: The Challenges of Real-Time AI  
Author: David J. Musliner and James A. Hendler and Ashok K. Agrawala Edmund H. Durfee Jay K. Strosnider and C. J. Paul 
Note: Revision 3:0 Submitted to IEEE Computer  
Address: College Park, MD 20742  Ann Arbor, MI 48109  Pittsburgh, PA 15213  
Affiliation: Institute for Advanced Computer Studies The University of Maryland  Dept. of EE Computer Science The University of Michigan  Dept. of Elec. Computer Engineering Carnegie Mellon University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> T. Dean and M. Boddy, </author> <title> "An Analysis of Time-Dependent Planning," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 49-54, </pages> <year> 1988. </year>
Reference-contexts: Reactivity can be seen as the ultimate simplification or removal of AI search from 6 planning tasks, and the variance of the tasks is removed with the search, making real-time guarantees feasible. * Any-time algorithms and deliberation-scheduling systems <ref> [1] </ref>, in which all AI tasks are cast as incremental methods that can be interrupted before any deadline, yielding a result that may have reduced precision, confidence, accuracy, etc. 2.2 Embedding Real-Time in AI Embedding real-time capabilities into an AI system is an alternative approach, which essentially assumes that the overall
Reference: [2] <author> A. Garvey and V. Lesser, </author> <title> "A Survey of Research in Deliberative Real-Time Artificial Intelligence," </title> <journal> Journal of Real-Time Systems, </journal> <volume> vol. 6, no. 3, </volume> , <month> May </month> <year> 1994. </year>
Reference-contexts: This subfield is still being defined by the common interests of researchers from both real-time and AI systems. As a result, the precise goals for various real-time AI systems are still in flux <ref> [2, 6] </ref>. This paper describes an organizing conceptual structure for current real-time AI research, clarify ing the different meanings this term has acquired for various researchers 2 . Having identified the various goals of real-time AI research, we then specify some of the necessary steps towards reaching those goals. <p> In addition, the process of composing larger systems from several incremental algorithms is a growing area of research, closely related to scheduling research in the real-time systems community. Customized Problem-solving A slightly different approach, under investigation by Garvey & Lesser <ref> [2] </ref>, is to postulate a finite set of alternative computation methods for solving each particular problem a system might face.
Reference: [3] <author> B. Hayes-Roth, </author> <title> "An Architecture for Adaptive Intelligent Systems," </title> <note> accepted for publication in Artificial Intelligence, Special Issue on Agents and Interactivity, 1994. 6 To appear as a University of Michigan technical report. 17 </note>
Reference-contexts: With current technology, the individual devices connected to the patient are each separately controlled. If the patient goes into some type of trauma (e.g., shock), a number of alarms 4 These examples are based on the Guardian real-time AI project <ref> [3] </ref> under the direction of Dr. Barbara Hayes-Roth at Stanford University. 4 sound to summon medical personnel. During the time that it takes for the personnel to arrive, the patient's condition deteriorates.
Reference: [4] <author> J. Hendler and A. Agrawala, </author> <title> "Mission Critical Planning: </title> <booktitle> AI on the MARUTI Real-Time Operating System," in Proc. Workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pp. 77-84, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Cooperative real-time AI systems span a wide range of designs, varying greatly in the complexity of the processing available on the respective AI and real-time subsystems, and in the precise relationship between these subsystems. At one extreme is a modified subsumption-based model such as DR/MARUTI <ref> [4] </ref> where a number of real-time reflexive behaviors execute concurrently, while higher-level AI processes adjust parameters that affect how the reflexive behaviors combine into outward action.
Reference: [5] <author> F. F. Ingrand and M. P. Georgeff, </author> <title> "Managing Deliberation and Reasoning in Real-Time AI Systems," </title> <booktitle> in Proc. Workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pp. 284-291, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Systems that address the conflict and are able to use the embedded-AI approach include: * Deliberative AI architectures such as PRS <ref> [5] </ref>, in which the AI search mechanisms may be bounded so that the overall response-time of the system can be predicted. <p> In Hero-Soar, distinguished real-time productions bypass the normal deliberative operator selection phase; instead, the action of a real-time production is executed as soon as the production is matched. * Interruptible blackboard-style systems like PRS <ref> [5] </ref>. In response to a high-priority input that requires a response before a deadline, PRS may interrupt ongoing non-real-time AI tasks and switch to a predictable real-time task to generate the response 5 .
Reference: [6] <author> T. J. Laffey, P. A. Cox, J. L. Schmidt, S. M. Kao, and J. Y. </author> <title> Read, "Real-Time Knowledge-Based Systems," </title> <journal> AI Magazine, </journal> <volume> vol. 9, no. 1, </volume> <pages> pp. 27-45, </pages> <year> 1988. </year>
Reference-contexts: This subfield is still being defined by the common interests of researchers from both real-time and AI systems. As a result, the precise goals for various real-time AI systems are still in flux <ref> [2, 6] </ref>. This paper describes an organizing conceptual structure for current real-time AI research, clarify ing the different meanings this term has acquired for various researchers 2 . Having identified the various goals of real-time AI research, we then specify some of the necessary steps towards reaching those goals. <p> Real-time computing is not about building "fast" systems; it is about building systems that are predictably "fast enough" to act on their environments in well-specified ways <ref> [6, 12, 14] </ref>. Early real-time systems operated in relatively simple, well-characterized environments. Such "traditional" real-time systems are composed of a set of repeated tasks with known execution times and arrival patterns. The primary challenge in building such systems is to schedule these tasks and ensure they will meet their deadlines. <p> The new generation of AI systems are being called upon to provide decision-support capabilities that reduce the cognitive burden in these situations. Early efforts to build real-time AI systems focused largely on ad hoc speedups for existing AI methods, yielding systems that are only coincidently real-time <ref> [6] </ref>. That is, these systems have been tested and shown to operate quickly enough to meet domain deadlines for the test scenarios, and are thus considered guaranteed real-time. However, complex behavior interactions and domain variations beyond the set of tested scenarios may still lead to failure.
Reference: [7] <author> J. E. Laird, A. Newell, and P. S. Rosenbloom, </author> <title> "SOAR: An Architecture for General Intelligence," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 33, </volume> <pages> pp. 1-64, </pages> <year> 1987. </year>
Reference-contexts: By retaining a unified system with a single locus of control, this embedded-real-time approach prioritizes real-time reactions without restricting the complexity of the AI methods that may be used. Implemented embedded-real-time systems have used several methods to achieve this behavior, including: * Modified production systems such as Soar <ref> [7] </ref>. In Hero-Soar, distinguished real-time productions bypass the normal deliberative operator selection phase; instead, the action of a real-time production is executed as soon as the production is matched. * Interruptible blackboard-style systems like PRS [5]. <p> Furthermore, some systems using this approach can add to their repertoire of reflexive actions based on inference or on experience (e.g., Soar's chunking <ref> [7] </ref>). In such systems, the pattern-matching activity performed by the AI system against all of the possible cognitive and reflexive actions might be hard to bound.
Reference: [8] <author> J. W.-S. Liu, K.-J. Lin, and S. Natarajan, </author> <title> "Scheduling Real-Time, Periodic Jobs Using Imprecise Results," </title> <booktitle> in Proc. Real-Time Systems Symposium, </booktitle> <pages> pp. 252-260, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: The real-time systems counterpart to the any-time algorithm method, known as imprecise computation <ref> [8] </ref>, has led to several advances in such scheduling technologies. Additional work will be required, however, to improve our ability to build performance profiles automatically and to enhance schedulers to manage tasks that are characterized by more complex representations such as conditional performance profiles.
Reference: [9] <author> D. J. Musliner, E. H. Durfee, and K. G. Shin, </author> <title> "CIRCA: A Cooperative Intelligent Real-Time Control Architecture," </title> <journal> IEEE Trans. Systems, Man, and Cybernetics, </journal> <volume> vol. 23, no. 6, </volume> <pages> pp. 1561-1574, </pages> <year> 1993. </year>
Reference-contexts: The agent itself is subject to "bounded rationality" [13], because its data processors have limited speed and memory. The agent is also subject to "bounded reactivity" <ref> [9] </ref>, because its sensors and actuators are limited in their range, field of view, torque, accuracy, etc. Thus the agent has only a restricted capacity to sense its environment, process the sensed data, and use that information to affect its environment. <p> Thus the ICU domain captures the need for both intelligent, symbolic, deliberative AI techniques, and the need for guaranteed real-time reactions. 2 Categorizing Approaches to Real-Time AI There are three principal ways that real-time systems and AI techniques can be combined into a single system <ref> [9] </ref>: by embedding AI into a real-time system, by embedding real-time reactions into an AI system, and by coupling AI and real-time subsystems as parallel, cooperating components. not aim at the same result: the desired performance of a real-time AI system has not been clearly and uniquely defined. <p> However, as noted in Section 1.1, trying to scheduling the superset of all tasks required in all modes of behavior can lead to very inefficient or infeasible system designs. Thus, at the other extreme of coroutining, real-time AI systems such as CIRCA <ref> [9] </ref> have an AI component that reasons about which real-time behaviors need to be carried out at any given time, and designs a real-time control plan appropriately. <p> Concurrent Planning and Execution In the cooperative approach to real-time AI, the ability to concurrently plan and execute actions is crucial to successful performance <ref> [9, 11] </ref>. It is particularly useful to be able to begin executing plans before they can be completely fleshed out. <p> different agents influence the severity and flexibility of time commitments, how commitments and goals can be revised, relaxed, and reassigned as unexpected events change what can be done when, and how abstraction can be used to generate the right degree of commitment under various circumstances. 5 Summary Extending previous work <ref> [9] </ref>, we have identified and described three fundamental approaches to developing real-time AI systems. This paper improves upon the previous classification by distinguishing the various approaches according to their performance goals, in addition to their architectural organization of real-time and AI methods.
Reference: [10] <author> C. J. Paul, A. Acharya, B. Black, and J. K. Strosnider, </author> <title> "Reducing Problem-Solving Variance to Improve Predictability," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, no. 8, </volume> <pages> pp. 81-93, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: The fundamental problem with this approach is that AI tasks are generally ill-suited to real-time scheduling mechanisms, which rely on allocating the worst-case execution time for all tasks. AI tasks such as planning and search-based problem-solving often have unknown or extremely large worst-case execution times <ref> [10] </ref>. While conventional real-time tasks often have small execution time variations due to data dependency, many AI tasks have additional variations due to search and backtracking.
Reference: [11] <author> M. Schoppers, </author> <title> "A Software Architecture for Hard Real-Time Execution of Automatically Synthesized Plans or Control Laws," </title> <booktitle> in Proc. AIAA/NASA Conf. on Intelligent Robots in Field, Factory, Service, and Space, </booktitle> <pages> pp. 768-775, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Concurrent Planning and Execution In the cooperative approach to real-time AI, the ability to concurrently plan and execute actions is crucial to successful performance <ref> [9, 11] </ref>. It is particularly useful to be able to begin executing plans before they can be completely fleshed out.
Reference: [12] <author> K. G. Shin and P. Ramanathan, </author> <title> "Real-Time Computing: A New Discipline of Computer Science and Engineering," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, no. 1, </volume> <pages> pp. 6-24, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Real-time computing is not about building "fast" systems; it is about building systems that are predictably "fast enough" to act on their environments in well-specified ways <ref> [6, 12, 14] </ref>. Early real-time systems operated in relatively simple, well-characterized environments. Such "traditional" real-time systems are composed of a set of repeated tasks with known execution times and arrival patterns. The primary challenge in building such systems is to schedule these tasks and ensure they will meet their deadlines.
Reference: [13] <author> H. A. Simon, </author> <title> Models of Bounded Rationality, </title> <publisher> MIT Press, </publisher> <year> 1982. </year>
Reference-contexts: The agent itself is subject to "bounded rationality" <ref> [13] </ref>, because its data processors have limited speed and memory. The agent is also subject to "bounded reactivity" [9], because its sensors and actuators are limited in their range, field of view, torque, accuracy, etc.
Reference: [14] <author> J. A. Stankovic, </author> <title> "Misconceptions about Real-Time Computing: A Serious Problem for Next-Generation Systems," </title> <journal> IEEE Computer, </journal> <volume> vol. 21, no. 10, </volume> <pages> pp. 10-19, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: Real-time computing is not about building "fast" systems; it is about building systems that are predictably "fast enough" to act on their environments in well-specified ways <ref> [6, 12, 14] </ref>. Early real-time systems operated in relatively simple, well-characterized environments. Such "traditional" real-time systems are composed of a set of repeated tasks with known execution times and arrival patterns. The primary challenge in building such systems is to schedule these tasks and ensure they will meet their deadlines. <p> That is, these systems have been tested and shown to operate quickly enough to meet domain deadlines for the test scenarios, and are thus considered guaranteed real-time. However, complex behavior interactions and domain variations beyond the set of tested scenarios may still lead to failure. As Stankovic <ref> [14] </ref> points out, this type of performance is not suited to mission-critical real-time systems 3 . Instead, the rigorous design techniques developed by real-time systems researchers must be used to guarantee that a system will meet domain deadlines, even in worst-case scenarios.
Reference: [15] <author> J. K. Strosnider and C. J. Paul, </author> <title> "A Structured View of Real-Time Problem Solving," </title> <note> accepted for publication in AI Magazine, 1994. 18 </note>
Reference-contexts: Figure 3 summarizes the areas we have identified, while the following paragraphs provide descriptions and examples for each. 12 Reduction of Search Variance Strosnider & Paul <ref> [15] </ref> have identified several techniques by which the variance inherent in search-based AI problem solving can be reduced, thus making problem-solving methods amenable to worst-case scheduling.
References-found: 15

