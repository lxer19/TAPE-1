URL: ftp://theory.lcs.mit.edu/pub/people/oded/egm.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/cryptography.html
Root-URL: 
Email: even@cs.technion.ac.il.  oded@cs.technion.ac.il.  silvio@theory.lcs.mit.edu.  
Title: On-Line/Off-Line Digital Signatures  
Author: Shimon Even Oded Goldreich Silvio Micali 
Address: 32000, Israel. E-Address:  32000, Israel. E-Address:  545 Technology Square, Cam bridge, MA 02139. E-Address:  
Affiliation: Computer Science Department, Technion Israel Institute of Technology, Haifa  Technion. Computer Science Department, Technion Israel Institute of Technology, Haifa  Laboratory for Computer Science, MIT Massachusetts Institute of Technology,  
Date: 1994)  
Note: (non-final version from  A preliminary version appeared in the proceedings of Crypto89. On-Line/Off-Line Digital Signing has obtained patent protection under U.S. Patent No. 5,016,274. A final version of this work will appear in Journal of Cryptology. c flCopyright 1996 by International Association for Cryptographic Research.  Supported by the Fund for the Promotion of Research at the  
Abstract: A new type of signature scheme is proposed. It consists of two phases. The first phase is performed off-line, before the message to be signed is even known. The second on-line phase is performed once the message to be signed is known, and is supposed to be very fast. A method for constructing such on-line/off-line signature schemes is presented. The method uses one-time signature schemes, which are very fast, for the on-line signing. An ordinary signature scheme is used for the off-line stage. In a practical implementation of our scheme, we use a variant of Rabin's signature scheme (based on factoring) and DES. In the on-line phase, all we use is a moderate amount of DES computation and a single modular multiplication. We stress that the costly modular exponentiation operation is performed off-line. This implementation is ideally suited for electronic wallets or smart cards. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bellare, M., and Micali, S., </author> <title> "How to Sign Given Any Trapdoor Function", </title> <booktitle> STOC 88, </booktitle> <pages> pp. 32-42. </pages>
Reference-contexts: We stress that signing is a non-interactive process involving only the signer, and that one can sign arbitrarily many messages, with one pair of keys. Many signature schemes are known by now. Based on various intractability assumptions, several schemes have been proved secure even against chosen message attack <ref> [8, 1, 12, 19] </ref>. Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets [5, 4]).
Reference: [2] <author> E. Biham and A. Shamir, </author> <title> "Differential Cryptanalysis of DES-like Cryptosystems", </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 4, No. 1, </volume> <pages> pp. 3-72, </pages> <year> 1991. </year>
Reference-contexts: A more accurate statement follows. We stress that this assumption is not in contradiction with the current knowledge concerning the cryptanalysis of DES <ref> [2] </ref>. By the proof of Lemma 1, a breach of security in the on-line/off-line scheme yields either a breach of security in the modified Rabin scheme or a breach of security in the one-time scheme.
Reference: [3] <author> Damgard, I., </author> <title> "Collision-free Hash Functions and Public-key Signature Schemes", </title> <publisher> Euro-Crypt87, LNCS (304), Springer-Verlag, </publisher> <year> 1988, </year> <pages> pp. 203-216. </pages>
Reference-contexts: This hashing functions have to be secure in the sense that it is hard to form collisions; namely, find two strings which are mapped by the function to the same image. 4 Assuming the intractability of factoring (alternatively of extracting Discrete Logarithms), such functions can be constructed <ref> [3, 8] </ref>. Yet, in practical implementations, one may use much faster hashing schemes. A typical example is the MD5 recently suggested by Rivest [17, 18]. The security of a scheme which uses hashing can be proven in a way analogous to the proof of Lemma 1.
Reference: [4] <author> Even, S., </author> <title> "Secure Off-Line Electronic Fund Transfer Between Nontrusting Parties", Smart Card 2000: The future of IC cards, </title> <editor> D. Chaum and I. Schaumuller-Bichl (eds.), </editor> <publisher> North-Holland, </publisher> <year> 1989, </year> <pages> pp. 57-66. </pages>
Reference-contexts: Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets <ref> [5, 4] </ref>). In particular, these signature schemes require to perform modular exponentiation with large moduli as part of the signing process, and these in turn require many modular multiplications. Furthermore, these costly operations can start only once the message to be signed becomes known.
Reference: [5] <author> Even, S., Goldreich, O., and Yacobi, Y., </author> <title> "Electronic Wallet", </title> <booktitle> Advances in Cryptology: Proc. of Crypto83, </booktitle> <editor> D. Chaum (ed), </editor> <publisher> Plenum Press, </publisher> <year> 1984, </year> <pages> pp. 383-386. </pages>
Reference-contexts: Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets <ref> [5, 4] </ref>). In particular, these signature schemes require to perform modular exponentiation with large moduli as part of the signing process, and these in turn require many modular multiplications. Furthermore, these costly operations can start only once the message to be signed becomes known.
Reference: [6] <author> Even, S., Goldreich, O., and Micali, S., </author> <title> "On-line/Off-line Digital Signatures", </title> <booktitle> Advances in Cryptology: Proc. of Crypto89, </booktitle> <editor> G. Brassard (ed), </editor> <publisher> LNCS (435), Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 263-277. </pages>
Reference-contexts: However, this alternative proof is much more complex and is obtained via an impractical construction. Furthermore, the preliminary version of our work <ref> [6] </ref> (which includes a proof of the above Theorem), predates Rompel's work [19]. Organization Basic definitions concerning signature schemes are presented in Section 2. In Section 3, the general construction of on-line/off-line signature scheme is presented. The construction of onetime signature scheme is addressed in Section 4.
Reference: [7] <author> Goldreich, O., </author> <title> "Two Remarks Concerning the Goldwasser-Micali-Rivest Signature Scheme", </title> <booktitle> Advances in Cryptology - Crypto86, A.M. </booktitle> <editor> Odlyzko (ed), </editor> <publisher> LNCS (263), Springer-Verlag, </publisher> <year> 1987, </year> <pages> pp. 104-110. </pages>
Reference: [8] <author> Goldwasser, S., Micali, S., and Rivest, </author> <title> R.L., "A Digital Signature Scheme Secure Against Adaptive Chosen-Message Attacks", </title> <journal> SIAM J. on Computing, </journal> <month> April </month> <year> 1988, </year> <pages> pp. 281-308. </pages>
Reference-contexts: We stress that signing is a non-interactive process involving only the signer, and that one can sign arbitrarily many messages, with one pair of keys. Many signature schemes are known by now. Based on various intractability assumptions, several schemes have been proved secure even against chosen message attack <ref> [8, 1, 12, 19] </ref>. Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets [5, 4]). <p> randomly selected in the message space. (These messages are selected independently of the adversary's actions.) In both cases (chosen and known message attacks), security means the infeasibility of forging a signature to any message for which the user has not supplied the signature (i.e., existential forgery in the terminology of <ref> [8] </ref>). A sufficient condition for the resulting signature scheme to withstand chosen message attack is that both signature schemes used in the construction (i.e., (1) and (2)) do withstand such attacks. However, in particular implementations it suffices to require that these underlying schemes only withstand known message attack. <p> We conclude with a proof of the Theorem stated above (Sec. 6). 2 Some Basic Definitions Following the informal presentation in the introduction, we recall the following definitions due to Goldwasser et. al. <ref> [8] </ref>. Signature schemes Definition 1 (signature schemes): A signature scheme is a triplet, (G; S; V ), of probabilistic polynomial-time algorithms satisfying the following conventions: * Algorithm G is called the key generator. <p> This hashing functions have to be secure in the sense that it is hard to form collisions; namely, find two strings which are mapped by the function to the same image. 4 Assuming the intractability of factoring (alternatively of extracting Discrete Logarithms), such functions can be constructed <ref> [3, 8] </ref>. Yet, in practical implementations, one may use much faster hashing schemes. A typical example is the MD5 recently suggested by Rivest [17, 18]. The security of a scheme which uses hashing can be proven in a way analogous to the proof of Lemma 1. <p> For such an integer N and for every integer v 2 Z fl N (the multiplicative group modulo N ) exactly one of the elements in the set S v = fv; v; 2v; 2vg is a square modulo N (see <ref> [21, 8] </ref>). Moreover, each square modulo N has exactly 4 distinct square roots mod N .
Reference: [9] <author> Levin, L.A., </author> <title> "One-Way Functions and Pseudorandom Generators", </title> <journal> Combinatorica, </journal> <volume> Vol. 7, No. 4, </volume> <year> 1987, </year> <pages> pp. 357-363. </pages>
Reference-contexts: For example, consider the following standard definition. 1 The time bound can be fixed to be a specific polynomial. Using padding arguments, one can show that the choice of the polynomial, as long as it is greater than say- n 2 , is immaterial (cf., <ref> [9] </ref>). 5 Definition 4 (standard definition of secure signature schemes): A signature scheme is said to be secure if every probabilistic polynomial-time chosen message attack succeeds in existential forgery with negligible probability. (A function is f : IN 7! IN is called negligible if for every polynomial p () and all <p> Intuitively, the zero-component serves as an "accumulator" for the rest. To prove that the 12 signature scheme is secure we need to assume that f is one-way also on the distribution obtained by iterating it upto m times (cf., <ref> [9] </ref>). Details follow. Another idea is to break the message to be signed into blocks and to use each block as an indicator determining how many times f has to be applied to each of the individual strings in the signing-key so to form the signature.
Reference: [10] <author> F.j. MacWilliams and N.J.A. Sloane, </author> <title> The Theory of Error-Correcting Codes, </title> <publisher> North-Holland, </publisher> <year> 1977. </year>
Reference-contexts: For sake of simplicity, let us apply the idea first to the basic construction (of subsection 4.1). 14 Background on error-correcting codes Definition 6 (error-correcting code <ref> [10] </ref>): A (m (); m 0 (); d ())-code is an (efficiently computable) mapping, , of m ()-bit long strings to m 0 ()-bit long strings so that, for every two x 6= y 2 f0; 1g m (n) , dist ((x); (y)) d (n) where dist (ff; fi) denotes the <p> For our purposes, we don't require the code to have an efficient decoding algorithm. Hence, for our purposes, we can use random linear codes (i.e., a mapping defined by multiplication by a random m-by-m 0 Boolean matrix). By the Gilbert-Varshamov bound <ref> [10, 20] </ref> a uniformly chosen m-by-m 0 matrix defines a (m; m 0 ; d)-code with probability 1 p provided that d1 X i &lt; p 2 m 0 m+1 For example, we can set m 0 = 2m, p = 2 m=2 and d = m 0 where H 2 <p> For example, for m = 79 and m 0 = 128 there exists a code with distance d = 15 ( &gt; 0:117), whereas for m = 80 and m 0 = 160 one gets d = 23 ( &gt; 0:143) <ref> [10, Appendix A.1] </ref>. For m = 128, we use a code with distance d = 13 and codewords of length m 0 = 185, yielding &gt; 0:07.
Reference: [11] <author> Merkle, </author> <title> R.C., "A Digital Signature Based on a Conventional Encryption Function", </title> <booktitle> Advances in Cryptology - CRYPTO '87, </booktitle> <editor> Pomerance (ed), </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. 293, </volume> <publisher> Springer-Verlag, </publisher> <year> 1987, </year> <pages> pp. 369-378. </pages>
Reference-contexts: A general method for constructing one-time signatures was proposed in the late 70's by Rabin [14] and several variants of it have appeared since (cf. <ref> [11] </ref>). Yet, a rigorous analysis of their security has never appeared. Furthermore, the known constructions can be improved in several respects. In particular, the length of the signatures can be decreased and the security of the schemes can be enhanced. We describe several techniques for achieving these goals. <p> This translates to enhanced security especially when the signature scheme in used is the one described in <ref> [14, 11] </ref>. Security To discuss, even informally, the issue of security, we need some terminology. <p> An early version of one-time signature was suggested by Rabin [14]. It required an exchange of messages between the signer and signee. Schemes which avoid such an exchange were suggested by Lamport, Diffie, Winternitz and Merkle; see <ref> [11] </ref>. In particular, a one-time signature scheme can be easily constructed using any one-way function. For further details see Section 4. We believe that the importance of one-time signature schemes stems from their simplicity and the fact that they can be implemented very efficiently. <p> A general method for constructing one-time signatures has been known for a relatively long time; cf., <ref> [14, 11] </ref>. Yet, a rigorous analysis of their security has never appeared. Furthermore, the known constructions can be improved as shown below. 4.1 The Basic Construction We start with the basic construction (of one-time signature schemes based on one-way functions). <p> Further details will become obvious later. 4.2 Shortening the lengths of keys and signatures A somewhat repelling property of the basic construction is that it uses very long keys and signatures. Additional ideas can be used to reduce these lengths. We start with an idea which is attributed in <ref> [11] </ref> to Winternitz. The idea is to use only m + 1 strings, each of length n, instead of the 2m strings used above.
Reference: [12] <author> Naor, M., and Yung, M., </author> <title> "Universal One-Way Hash Functions and their Cryptographic Application", </title> <booktitle> 21st STOC, </booktitle> <year> 1989, </year> <pages> pp. 33-43. </pages>
Reference-contexts: We stress that signing is a non-interactive process involving only the signer, and that one can sign arbitrarily many messages, with one pair of keys. Many signature schemes are known by now. Based on various intractability assumptions, several schemes have been proved secure even against chosen message attack <ref> [8, 1, 12, 19] </ref>. Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets [5, 4]). <p> Specifically, it suffices that the function is one-way hashing; namely, given a preimage to the function it is infeasible to find a different preimage which is mapped, under the hashing function, to the same image <ref> [12] </ref>. It is known that one-way hashing functions can be constructed using any one-way function [12, 19], but this construction is very far from being practical. 11 3.4 A Remark Most ordinary signing algorithms are based on the computational difficulty of integer factorization. <p> It is known that one-way hashing functions can be constructed using any one-way function <ref> [12, 19] </ref>, but this construction is very far from being practical. 11 3.4 A Remark Most ordinary signing algorithms are based on the computational difficulty of integer factorization. Should some moderately faster factoring algorithm come about, then longer ordinary verification and secret keys will be necessary.
Reference: [13] <institution> National Bureau of Standards, Federal Information Processing Standards, </institution> <note> Publ. 46 (DES 1977). </note>
Reference: [14] <author> Rabin, M.O., </author> <title> "Digital Signatures", in Foundations of Secure Computation, </title> <editor> R.A. DeMillo, et. al. (eds). </editor> <publisher> Academic Press, </publisher> <year> 1978, </year> <pages> pp. 155-168. </pages>
Reference-contexts: The disadvantage of one-time signature scheme, namely the fact that the signing-key can only be used once, turns out to be irrelevant for our purposes. A general method for constructing one-time signatures was proposed in the late 70's by Rabin <ref> [14] </ref> and several variants of it have appeared since (cf. [11]). Yet, a rigorous analysis of their security has never appeared. Furthermore, the known constructions can be improved in several respects. In particular, the length of the signatures can be decreased and the security of the schemes can be enhanced. <p> This translates to enhanced security especially when the signature scheme in used is the one described in <ref> [14, 11] </ref>. Security To discuss, even informally, the issue of security, we need some terminology. <p> Notice the analogy with a one-time pad, which allows one to send private messages securely as long as one does not use the secret pad twice. An early version of one-time signature was suggested by Rabin <ref> [14] </ref>. It required an exchange of messages between the signer and signee. Schemes which avoid such an exchange were suggested by Lamport, Diffie, Winternitz and Merkle; see [11]. In particular, a one-time signature scheme can be easily constructed using any one-way function. For further details see Section 4. <p> A general method for constructing one-time signatures has been known for a relatively long time; cf., <ref> [14, 11] </ref>. Yet, a rigorous analysis of their security has never appeared. Furthermore, the known constructions can be improved as shown below. 4.1 The Basic Construction We start with the basic construction (of one-time signature schemes based on one-way functions). <p> The collision-free hashing scheme In role of the collision-free hashing function we use any standard way of using DES in a hashing mode. (See, for example, <ref> [14] </ref>.) Alternatively, one may use the recently suggested MD4 or MD5 (cf., [17, 18]). We recommend that H maps arbitrarily long strings to 128-bit long strings (i.e., m = 128).
Reference: [15] <author> Rabin, M.O., </author> <title> "Digitalized Signatures and Public-Key Functions as Intractable as Factorization", </title> <institution> Lab. for Computer Science, MIT, Report TR-212, </institution> <month> January </month> <year> 1979. </year>
Reference-contexts: Based on various intractability assumptions, several schemes have been proved secure even against chosen message attack [8, 1, 12, 19]. Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of <ref> [15] </ref>, are considered too slow for many practical applications (e.g., electronic wallets [5, 4]). In particular, these signature schemes require to perform modular exponentiation with large moduli as part of the signing process, and these in turn require many modular multiplications. <p> The hashing scheme is most likely to be used in practice for compressing long messages into shorter tags, but it is not essential for the basic construction. We present several practical implementation of the general scheme. In these implementations, we use a modification of Rabin's signature scheme <ref> [15] </ref> in the role of the ordinary signature scheme, and DES as a basis for a one-time signature scheme. The security of these implementations is based on the intractability of factoring large integers and the assumption that DES behaves like a random cipher. <p> ), in time T (n) and success probability 0 k (n)1 Y ff (l=m) 1 k (n) 5 Concrete Implementations We now suggest concrete implementations of our general on-line/off-line signature scheme offering fast on-line computations (both for signer and verifier). 5.1 The Ingredients All the concrete implementation use Rabin's scheme <ref> [15] </ref> in role of the ordinary signature scheme and the DES as a one-way function used to construct a one-time signature scheme. The implementations differ by the construction they use for a one-time signature scheme. The constructions of one-time signature scheme used are those presented in the previous section. <p> The implementations differ by the construction they use for a one-time signature scheme. The constructions of one-time signature scheme used are those presented in the previous section. The ordinary signature scheme In the role of the ordinary signature scheme we use a modification of Rabin's scheme <ref> [15] </ref>. In this modification, we use integers which are the product of two large (say 256 bits long) primes, one congruent to 3 modulo 8 and the other congruent to 7 modulo 8. <p> The scheme described so far is not secure against existential forgery. It is not clear whether this problem is really important to our application, nevertheless padding by a random suffix (cf., <ref> [15] </ref>) overcomes the obvious attack. 19 We assume that it is infeasible to break the modified Rabin scheme, even after a chosen message attack, when the integers which are used are the product of two large (say 256 bits long) primes.
Reference: [16] <author> Rivest, R.L., Shamir, A., and Adleman, L., </author> <title> "A Method for Obtaining Digital Signatures and Public-Key Cryptosystems", </title> <journal> Comm. </journal> <volume> ACM 21 (2), </volume> <year> 1978, </year> <pages> pp. 120-126. </pages>
Reference-contexts: Many signature schemes are known by now. Based on various intractability assumptions, several schemes have been proved secure even against chosen message attack [8, 1, 12, 19]. Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA <ref> [16] </ref> and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets [5, 4]). In particular, these signature schemes require to perform modular exponentiation with large moduli as part of the signing process, and these in turn require many modular multiplications.
Reference: [17] <author> Rivest, </author> <title> R.L., "The MD4 Message Digest Algorithm", </title> <booktitle> presented in Crypto90. </booktitle>
Reference-contexts: Yet, in practical implementations, one may use much faster hashing schemes. A typical example is the MD5 recently suggested by Rivest <ref> [17, 18] </ref>. The security of a scheme which uses hashing can be proven in a way analogous to the proof of Lemma 1. <p> The collision-free hashing scheme In role of the collision-free hashing function we use any standard way of using DES in a hashing mode. (See, for example, [14].) Alternatively, one may use the recently suggested MD4 or MD5 (cf., <ref> [17, 18] </ref>). We recommend that H maps arbitrarily long strings to 128-bit long strings (i.e., m = 128). For some applications, one may be content with m = 64. 5.2 Four Implementations We now describe four versions of the concrete implementation.
Reference: [18] <author> Rivest, </author> <title> R.L., "MD5 New Message Digest Algorithm", </title> <note> presented in the rump session of Crypto91. </note>
Reference-contexts: Yet, in practical implementations, one may use much faster hashing schemes. A typical example is the MD5 recently suggested by Rivest <ref> [17, 18] </ref>. The security of a scheme which uses hashing can be proven in a way analogous to the proof of Lemma 1. <p> The collision-free hashing scheme In role of the collision-free hashing function we use any standard way of using DES in a hashing mode. (See, for example, [14].) Alternatively, one may use the recently suggested MD4 or MD5 (cf., <ref> [17, 18] </ref>). We recommend that H maps arbitrarily long strings to 128-bit long strings (i.e., m = 128). For some applications, one may be content with m = 64. 5.2 Four Implementations We now describe four versions of the concrete implementation.
Reference: [19] <author> Rompel, J., </author> <title> "One-way Functions are Necessary and Sufficient for Secure Signatures", </title> <booktitle> 22nd STOC, </booktitle> <year> 1990, </year> <pages> pp. 387-394. </pages>
Reference-contexts: We stress that signing is a non-interactive process involving only the signer, and that one can sign arbitrarily many messages, with one pair of keys. Many signature schemes are known by now. Based on various intractability assumptions, several schemes have been proved secure even against chosen message attack <ref> [8, 1, 12, 19] </ref>. Unfortunately, in these schemes, the signing process is not sufficiently fast for some practical purposes. Furthermore, even more efficient schemes like RSA [16] and Rabin's scheme of [15], are considered too slow for many practical applications (e.g., electronic wallets [5, 4]). <p> We remark that the above Theorem can be derived from Rompel's work by observing that the existence of a signature scheme secure against known message attack implies the existence of one-way functions, while the latter imply the existence of signature schemes which are secure against a chosen message attack <ref> [19] </ref>. However, this alternative proof is much more complex and is obtained via an impractical construction. Furthermore, the preliminary version of our work [6] (which includes a proof of the above Theorem), predates Rompel's work [19]. Organization Basic definitions concerning signature schemes are presented in Section 2. <p> latter imply the existence of signature schemes which are secure against a chosen message attack <ref> [19] </ref>. However, this alternative proof is much more complex and is obtained via an impractical construction. Furthermore, the preliminary version of our work [6] (which includes a proof of the above Theorem), predates Rompel's work [19]. Organization Basic definitions concerning signature schemes are presented in Section 2. In Section 3, the general construction of on-line/off-line signature scheme is presented. The construction of onetime signature scheme is addressed in Section 4. <p> It is known that one-way hashing functions can be constructed using any one-way function <ref> [12, 19] </ref>, but this construction is very far from being practical. 11 3.4 A Remark Most ordinary signing algorithms are based on the computational difficulty of integer factorization. Should some moderately faster factoring algorithm come about, then longer ordinary verification and secret keys will be necessary.
Reference: [20] <author> Roth, R., </author> <booktitle> "Topics in Coding Theory Lecture Notes", </booktitle> <year> 1993. </year>
Reference-contexts: For our purposes, we don't require the code to have an efficient decoding algorithm. Hence, for our purposes, we can use random linear codes (i.e., a mapping defined by multiplication by a random m-by-m 0 Boolean matrix). By the Gilbert-Varshamov bound <ref> [10, 20] </ref> a uniformly chosen m-by-m 0 matrix defines a (m; m 0 ; d)-code with probability 1 p provided that d1 X i &lt; p 2 m 0 m+1 For example, we can set m 0 = 2m, p = 2 m=2 and d = m 0 where H 2
Reference: [21] <author> Williams, H. C., </author> <title> "A Modification of the RSA Public-Key Encryption Procedure", </title> <journal> IEEE Trans. Inform. Theory IT-26 (6), </journal> <year> 1980, </year> <pages> pp. 726-729. 28 </pages>
Reference-contexts: For such an integer N and for every integer v 2 Z fl N (the multiplicative group modulo N ) exactly one of the elements in the set S v = fv; v; 2v; 2vg is a square modulo N (see <ref> [21, 8] </ref>). Moreover, each square modulo N has exactly 4 distinct square roots mod N .
References-found: 21

