URL: ftp://shrimp.cs.washington.edu/pub/chou/iccad92.ps.Z
Refering-URL: http://www.cs.washington.edu/research/projects/lis/chinook/www/publications.html
Root-URL: 
Title: Synthesis of the Hardware/Software Interface in Microcontroller-Based Systems  
Author: Pai Chou Ross Ortega Gaetano Borriello 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering University of Washington,  
Abstract: Microcontroller-based systems require the design of a hardware/software interface that enables software running on the microcontroller to control external devices. This interface consists of the sequential logic that physically connects the devices to the micro-controller and the software drivers that allow code to access the device functions. This paper presents a method for automatically synthesizing this hardware/software interface using a recursive algorithm. Practical examples are used to demonstrate the utility of the method and results indicate that the synthesized circuit and driver code are comparable to that generated by human designers. This new tool will be used by higher-level synthesis tools to evaluate partitionings of a system between hardware and software components. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Intel. </author> <title> 8-Bit Embedded Controller Handbook, </title> <publisher> Intel Corporation, </publisher> <year> 1990. </year>
Reference: [2] <author> A.J. Martin. </author> <title> Programming in VLSI: From Communicating Processes To Delay-Insensitive Circuits, </title> <institution> Department of Computer Science, Califor-nia Institute of Technology, Caltech-CS-TR-89-1, </institution> <year> 1989. </year>
Reference: [3] <author> C.A.R. Hoare. </author> <title> Communicating Sequential Processes, </title> <booktitle> Prentice/Hall International, </booktitle> <address> Englewood Cliffs, NJ, </address> <year> 1985. </year>
Reference-contexts: The SPRs represent hardware and the SEQs represent software. The SPRs capture the activation conditions for the device ports. They are essentially guarded commands in the form X ! Y <ref> [3] </ref>. X is the guard, or a Boolean expression in terms of device ports. The Boolean terms may include edge-triggered conditions. For example, x+ means "rising x," and x means "falling x." Y is a list of assignment statements which are activated whenever X is true.
Reference: [4] <author> M. Srivastava, R. Brodersen. </author> <title> "Rapid Prototyping of Hardware and Software in a Unified Framework", </title> <booktitle> Proc. of the International Conference on Computer-Aided Design, </booktitle> <year> 1991. </year>
Reference: [5] <author> J. Sun, R.W. Brodersen, </author> <title> "Design of System Interface Modules", </title> <note> Submitted to ICCAD-92. </note>
Reference: [6] <author> F. Vahid, D. Gajski, </author> <title> "Specification Partitioning for System Design", </title> <booktitle> 29th ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1992. </year>
Reference: [7] <author> Shelley & Associates. SLM21602 LCD Data Book, </author> <year> 1990. </year>
References-found: 7

