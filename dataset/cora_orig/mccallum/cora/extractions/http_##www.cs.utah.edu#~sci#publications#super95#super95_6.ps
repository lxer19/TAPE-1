URL: http://www.cs.utah.edu/~sci/publications/super95/super95_6.ps
Refering-URL: http://www.cs.utah.edu/~sci/scirun/papers.html
Root-URL: 
Email: Email: crj@cs.utah.edu and sparker@cs.utah.edu  
Title: Applications in Computational Medicine using SCIRun: A Computational Steering Programming Environment  
Author: Christopher R. Johnson and Steven G. Parker 
Web: URL: http://www.cs.utah.edu/ sci  
Address: Salt Lake City, Utah 84112  
Affiliation: Department of Computer Science University of Utah  
Abstract: In this paper we describe applications of the SCIRun system to large scale problems in computational medicine. SCIRun is a scientific programming environment that allows the interactive construction and steering of large scale scientific computations. Using this computational workbench, scientists and engineers can design and modify simulations interactively via a dataflow programming model. SCIRun enables scientists to design and modify models and automatically change parameters and boundary conditions as well as the mesh discretization level needed for an accurate numerical solution. As opposed to the typical off-line simulation mode in which the scientist manually sets input parameters, computes results, visualizes the results via a separate visualization package, then starts again at the beginning - SCIRun closes the loop and allows interactive steering of the design and computation phases of the simulation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.R. Johnson and S.G. Parker. </author> <title> A computational steering model for problems in medicine. </title> <booktitle> In Supercomputing `94, </booktitle> <pages> pages 540-549. </pages> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: To reduce the time the scientist spends in the current modeling process and to provide a tool for exploration of computational science and engineering problems, we have developed SCIRun fl <ref> [1, 2] </ref>. SCIRun is a framework in which large scale computer simulations can be composed, executed, controlled and tuned interactively. Composing the simulation is accomplished via a visual programming interface to a dataflow network.
Reference: [2] <author> S.G. Parker and C.R. Johnson. Scirun: </author> <title> A scientific programming environment for computational steering. </title> <booktitle> In Supercomputing `95. </booktitle> <publisher> IEEE Press, </publisher> <year> 1995. </year> <note> (submitted). </note>
Reference-contexts: To reduce the time the scientist spends in the current modeling process and to provide a tool for exploration of computational science and engineering problems, we have developed SCIRun fl <ref> [1, 2] </ref>. SCIRun is a framework in which large scale computer simulations can be composed, executed, controlled and tuned interactively. Composing the simulation is accomplished via a visual programming interface to a dataflow network.
Reference: [3] <author> W. Gu, J. Vetter, and K. Schwan. </author> <title> An annotated bibliography of interactive program steering. </title> <institution> Georgia Institute of Technology Technical Report, </institution> <year> 1994. </year>
Reference-contexts: The increased flexibility attempts to provide a computational workbench for scientific computing. Within this workbench new experiments are formed, new methods are explored, and tedious coding is kept to a minimum. Computational steering has been defined as the capacity to control the execution of long-running, resource-intensive programs <ref> [3] </ref>. In the field of computational science, we apply this concept to link visualization with geometric design and computational phases to interactively explore (steer) a simulation in time and/or space. As knowledge is gained, it can be used to change the input conditions and/or other parameters of the simulation.
Reference: [4] <author> C.R. Johnson, R.S. MacLeod, and P.R. Ershler. </author> <title> A computer model for the study of electrical current flow in the human thorax. </title> <journal> Computers in Biology and Medicine, </journal> <volume> 22(3) </volume> <pages> 305-323, </pages> <year> 1992. </year>
Reference-contexts: SCIRun derives its name from the Scientific Computing and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes <ref> [4, 5, 6, 7] </ref>; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) <p> and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes [4, 5, 6, 7]; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms <ref> [4, 8, 9, 10] </ref>; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results [5, 6, 7, 12]. <p> and volumetric meshes [4, 5, 6, 7]; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems <ref> [4, 11] </ref>; and (4) scientific visualization packages for displaying and interpreting the results [5, 6, 7, 12]. Because our work involves a large problem size, much of the software we have developed has been designed to take advantage of parallel processing via high performance architectures. <p> Because of the complex geometry and inhomogeneous nature of the human thorax and the lack of sophisticated thorax models, most past design work on defibril-lation devices has relied on animal studies. We have constructed a large scale model of the human thorax, the Utah Torso Model <ref> [4, 5, 6, 7] </ref>, for simulating both the endogenous fields of the heart and applied current sources (defibrillation devices). Using these computer models, We are also able to simulate the multitude of electrode configurations, electrode sizes, and magnitudes of defibrillation shocks. <p> a linear system, A = b, where A is sparse, symmetric, and positive definite and on the order of N = 25; 000 1; 500; 000 depending on the level of mesh refinement, on the level of inter-activeness required by the user, and on the specific goals of the study <ref> [4, 5] </ref>. Due to the quasi-static nature of the bioelectric field problems we are solving [13], we are primarily interested in spatial steering for this application. Spatial steering involves controlling the discretization level of the geometry, typically in terms of the accuracy of the finite element model.
Reference: [5] <author> C.R. Johnson, R.S. MacLeod, and M.A. Matheson. </author> <title> Computational medicine: Bio-electric field problems. </title> <booktitle> IEEE COMPUTER, </booktitle> <pages> pages 59-67, </pages> <month> Oct., </month> <year> 1993. </year>
Reference-contexts: SCIRun derives its name from the Scientific Computing and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes <ref> [4, 5, 6, 7] </ref>; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) <p> for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results <ref> [5, 6, 7, 12] </ref>. Because our work involves a large problem size, much of the software we have developed has been designed to take advantage of parallel processing via high performance architectures. <p> Because of the complex geometry and inhomogeneous nature of the human thorax and the lack of sophisticated thorax models, most past design work on defibril-lation devices has relied on animal studies. We have constructed a large scale model of the human thorax, the Utah Torso Model <ref> [4, 5, 6, 7] </ref>, for simulating both the endogenous fields of the heart and applied current sources (defibrillation devices). Using these computer models, We are also able to simulate the multitude of electrode configurations, electrode sizes, and magnitudes of defibrillation shocks. <p> a linear system, A = b, where A is sparse, symmetric, and positive definite and on the order of N = 25; 000 1; 500; 000 depending on the level of mesh refinement, on the level of inter-activeness required by the user, and on the specific goals of the study <ref> [4, 5] </ref>. Due to the quasi-static nature of the bioelectric field problems we are solving [13], we are primarily interested in spatial steering for this application. Spatial steering involves controlling the discretization level of the geometry, typically in terms of the accuracy of the finite element model. <p> The user is able to visualize and explore intermediate results while the calculations continue to progress. Refined datasets are automatically substituted for the less accurate ones as they are completed. To date we have developed several scientific visualization systems <ref> [5, 6, 7, 12] </ref>. One is an interactive three-dimensional GL based graphics system for viewing surface and volume geometry and simulation results. For higher quality ray-traced rendered images, we have developed a batch-mode graphics system which exploits parallel processors and/or clusters of workstations.
Reference: [6] <author> R.S. MacLeod, C.R. Johnson, and M.A. Matheson. </author> <title> Visualization tools for computational electrocardiography. </title> <booktitle> In Visualization in Biomedical Computing, </booktitle> <pages> pages 433-444, </pages> <year> 1992. </year>
Reference-contexts: SCIRun derives its name from the Scientific Computing and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes <ref> [4, 5, 6, 7] </ref>; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) <p> for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results <ref> [5, 6, 7, 12] </ref>. Because our work involves a large problem size, much of the software we have developed has been designed to take advantage of parallel processing via high performance architectures. <p> Because of the complex geometry and inhomogeneous nature of the human thorax and the lack of sophisticated thorax models, most past design work on defibril-lation devices has relied on animal studies. We have constructed a large scale model of the human thorax, the Utah Torso Model <ref> [4, 5, 6, 7] </ref>, for simulating both the endogenous fields of the heart and applied current sources (defibrillation devices). Using these computer models, We are also able to simulate the multitude of electrode configurations, electrode sizes, and magnitudes of defibrillation shocks. <p> The user is able to visualize and explore intermediate results while the calculations continue to progress. Refined datasets are automatically substituted for the less accurate ones as they are completed. To date we have developed several scientific visualization systems <ref> [5, 6, 7, 12] </ref>. One is an interactive three-dimensional GL based graphics system for viewing surface and volume geometry and simulation results. For higher quality ray-traced rendered images, we have developed a batch-mode graphics system which exploits parallel processors and/or clusters of workstations.
Reference: [7] <author> R.S. MacLeod, C.R. Johnson, and M.A. Matheson. </author> <title> Visualization of cardiac bio-electricity a case study. </title> <booktitle> In IEEE Visualization `92, </booktitle> <pages> pages 411-418, </pages> <year> 1992. </year>
Reference-contexts: SCIRun derives its name from the Scientific Computing and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes <ref> [4, 5, 6, 7] </ref>; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) <p> for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results <ref> [5, 6, 7, 12] </ref>. Because our work involves a large problem size, much of the software we have developed has been designed to take advantage of parallel processing via high performance architectures. <p> Because of the complex geometry and inhomogeneous nature of the human thorax and the lack of sophisticated thorax models, most past design work on defibril-lation devices has relied on animal studies. We have constructed a large scale model of the human thorax, the Utah Torso Model <ref> [4, 5, 6, 7] </ref>, for simulating both the endogenous fields of the heart and applied current sources (defibrillation devices). Using these computer models, We are also able to simulate the multitude of electrode configurations, electrode sizes, and magnitudes of defibrillation shocks. <p> The user is able to visualize and explore intermediate results while the calculations continue to progress. Refined datasets are automatically substituted for the less accurate ones as they are completed. To date we have developed several scientific visualization systems <ref> [5, 6, 7, 12] </ref>. One is an interactive three-dimensional GL based graphics system for viewing surface and volume geometry and simulation results. For higher quality ray-traced rendered images, we have developed a batch-mode graphics system which exploits parallel processors and/or clusters of workstations.
Reference: [8] <author> C.R. Johnson, R.S. MacLeod, and M.A. Matheson. </author> <title> Computer simultions reveal complexity of electrical activity in the human thorax. </title> <journal> Comp. in Physics, </journal> <volume> 6(3) </volume> <pages> 230-237, </pages> <month> May/June </month> <year> 1992. </year>
Reference-contexts: and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes [4, 5, 6, 7]; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms <ref> [4, 8, 9, 10] </ref>; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results [5, 6, 7, 12].
Reference: [9] <author> C.R. Johnson and R.S. MacLeod. </author> <title> Nonuniform spatial mesh adaption using a posteriori error estimates: applications to forward and inverse problems. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 14 </volume> <pages> 311-326, </pages> <year> 1994. </year>
Reference-contexts: and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes [4, 5, 6, 7]; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms <ref> [4, 8, 9, 10] </ref>; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results [5, 6, 7, 12].
Reference: [10] <author> J.A. Schmidt, C.R. Johnson, J.C. Eason, </author> <title> and R.S. MacLeod. Applications of automatic mesh generation and adaptive methods in computational medicine. </title> <editor> In J.E. Flaherty and I. Babuska, editors, </editor> <title> Modeling, Mesh Generation, and Adaptive Methods for Partial Differential Equations. </title> <note> Springer-Verlag, 1994 (to appear). </note>
Reference-contexts: and Imaging (SCI) research group at the University of Utah. such as (1) interactive programs to construct, manipulate, and display large scale, three--dimensional surface and volumetric meshes [4, 5, 6, 7]; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms <ref> [4, 8, 9, 10] </ref>; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results [5, 6, 7, 12]. <p> Two semi-automatic segmentation algorithms are used to classify the relevant tissues [16, 17]. We then utilize two- and three-dimensional Delaunay triangulation algorithms to construct three-dimensional surfaces and/or volumetric meshes <ref> [10, 18, 19] </ref>. Geometric postprocessing consists of assigning each tetrahedron an electrical conductivity tensor. Construction of the geometric model is often one of the most time consuming aspects of the modeling and simulation process. For each new configuration, a new model must be assembled.
Reference: [11] <author> C.R. Johnson and R.S. MacLeod. </author> <title> Inverse solutions for electric and potential field imaging. In R.L. </title> <editor> Barbour and M.J. Carvlin, editors, </editor> <title> Physiological Imaging, Spectroscopy, and Early Dectection Diagnostic Methods, </title> <booktitle> volume 1887, </booktitle> <pages> pages 130-139. SPIE, </pages> <year> 1993. </year>
Reference-contexts: and volumetric meshes [4, 5, 6, 7]; (2) three-dimensional, adaptive, finite element programs for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems <ref> [4, 11] </ref>; and (4) scientific visualization packages for displaying and interpreting the results [5, 6, 7, 12]. Because our work involves a large problem size, much of the software we have developed has been designed to take advantage of parallel processing via high performance architectures.
Reference: [12] <author> R.S. MacLeod, C.R. Johnson, and M.A. Matheson. </author> <title> Visualizing bioelectric fields. </title> <journal> IEEE Computer Graphics and Applications, </journal> <pages> pages 10-12, </pages> <year> 1993. </year>
Reference-contexts: for solving elliptic partial differential equations with general boundary conditions and source terms [4, 8, 9, 10]; (3) programs that solve the resulting large system of equations and simultaneously apply global and regularization to ill-posed inverse problems [4, 11]; and (4) scientific visualization packages for displaying and interpreting the results <ref> [5, 6, 7, 12] </ref>. Because our work involves a large problem size, much of the software we have developed has been designed to take advantage of parallel processing via high performance architectures. <p> The user is able to visualize and explore intermediate results while the calculations continue to progress. Refined datasets are automatically substituted for the less accurate ones as they are completed. To date we have developed several scientific visualization systems <ref> [5, 6, 7, 12] </ref>. One is an interactive three-dimensional GL based graphics system for viewing surface and volume geometry and simulation results. For higher quality ray-traced rendered images, we have developed a batch-mode graphics system which exploits parallel processors and/or clusters of workstations.
Reference: [13] <author> R. Plonsey and R. C. Barr. </author> <title> Bioelectricity. </title> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: Mathematically, these problems are governed by variations of the generalized Poisson's equation (or its homogeneous counterpart, Laplace's equation) for electrical conduction in the physical domain <ref> [13] </ref>: r r = I V (1) where I V is the electrical current source and is an electrical conductivity tensor. <p> Due to the quasi-static nature of the bioelectric field problems we are solving <ref> [13] </ref>, we are primarily interested in spatial steering for this application. Spatial steering involves controlling the discretization level of the geometry, typically in terms of the accuracy of the finite element model.
Reference: [14] <author> B. Lerman and O. Deale. </author> <title> Relation between transcardiac and transthoracic current during defibrillation in humans. </title> <journal> Circulation Research, </journal> <volume> 67 </volume> <pages> 1420-1426, </pages> <year> 1990. </year>
Reference-contexts: electrostatic potentials are known, one can calculate the current density J according to: J = r: (3) For the defibrillation problem, electrodes are either implanted internally or applied directly to the chest in order to deliver sufficient electric energy to stop the irregular heart rhythms that signify a fibrillating heart <ref> [14, 15] </ref>. Mathematically, this can be posed as solving equations (1-3) with the voltage boundary condition applied on a portion of the torso boundary, 2 for external defibrillation or from the surface of the defibrilla-tion electrode (s) within the volume of the thorax for internal defibrillation.
Reference: [15] <author> M. Mirowski. </author> <title> The automatic implantable cardioverter-defibrillation: An overview. </title> <journal> Journal of the American College of Cardiology, </journal> <volume> 6 </volume> <pages> 461-466, </pages> <year> 1985. </year>
Reference-contexts: electrostatic potentials are known, one can calculate the current density J according to: J = r: (3) For the defibrillation problem, electrodes are either implanted internally or applied directly to the chest in order to deliver sufficient electric energy to stop the irregular heart rhythms that signify a fibrillating heart <ref> [14, 15] </ref>. Mathematically, this can be posed as solving equations (1-3) with the voltage boundary condition applied on a portion of the torso boundary, 2 for external defibrillation or from the surface of the defibrilla-tion electrode (s) within the volume of the thorax for internal defibrillation.
Reference: [16] <author> H.W. Shen. </author> <title> Semi-automatic image segmentation: A bimodel thresholding approach. </title> <type> Technical report, </type> <institution> UUCS-94-019, Dept. of CS, Univ. of Utah, </institution> <year> 1994. </year>
Reference-contexts: To solve the bioelectric field problems associated with equations (1-3), we have constructed torso and head models from MRI (magnetic resonance imaging) scans. Two semi-automatic segmentation algorithms are used to classify the relevant tissues <ref> [16, 17] </ref>. We then utilize two- and three-dimensional Delaunay triangulation algorithms to construct three-dimensional surfaces and/or volumetric meshes [10, 18, 19]. Geometric postprocessing consists of assigning each tetrahedron an electrical conductivity tensor.
Reference: [17] <author> D. Weinstein and C.R. Johnson. </author> <title> Hierarchical data structures for interactive volume visualization. </title> <journal> IEEE Visualization `95, </journal> <note> 1995 (submitted). </note>
Reference-contexts: To solve the bioelectric field problems associated with equations (1-3), we have constructed torso and head models from MRI (magnetic resonance imaging) scans. Two semi-automatic segmentation algorithms are used to classify the relevant tissues <ref> [16, 17] </ref>. We then utilize two- and three-dimensional Delaunay triangulation algorithms to construct three-dimensional surfaces and/or volumetric meshes [10, 18, 19]. Geometric postprocessing consists of assigning each tetrahedron an electrical conductivity tensor.
Reference: [18] <author> D.F. Watson. </author> <title> Computing the n-dimensional Delaunay tesselation with applications to Voronoi polytopes. </title> <journal> Computer Journal, </journal> <volume> 24(2) </volume> <pages> 167-172, </pages> <year> 1981. </year>
Reference-contexts: Two semi-automatic segmentation algorithms are used to classify the relevant tissues [16, 17]. We then utilize two- and three-dimensional Delaunay triangulation algorithms to construct three-dimensional surfaces and/or volumetric meshes <ref> [10, 18, 19] </ref>. Geometric postprocessing consists of assigning each tetrahedron an electrical conductivity tensor. Construction of the geometric model is often one of the most time consuming aspects of the modeling and simulation process. For each new configuration, a new model must be assembled.
Reference: [19] <author> N. Weatherill and O. Hassan. </author> <title> Efficient three-dimensional grid generation using the Delaunay triangulation. </title> <booktitle> In Proc. of the 1st European CFD Conf., </booktitle> <volume> volume 1, </volume> <year> 1992. </year>
Reference-contexts: Two semi-automatic segmentation algorithms are used to classify the relevant tissues [16, 17]. We then utilize two- and three-dimensional Delaunay triangulation algorithms to construct three-dimensional surfaces and/or volumetric meshes <ref> [10, 18, 19] </ref>. Geometric postprocessing consists of assigning each tetrahedron an electrical conductivity tensor. Construction of the geometric model is often one of the most time consuming aspects of the modeling and simulation process. For each new configuration, a new model must be assembled.
Reference: [20] <author> F. Yu and C. Johnson. </author> <title> An automatic adaptive refinement and derefinement method. </title> <booktitle> In Proceedings of the 14th IMACS World Congress, </booktitle> <pages> pages 1555-1557, </pages> <year> 1994. </year>
Reference-contexts: Spatial steering involves controlling the discretization level of the geometry, typically in terms of the accuracy of the finite element model. We have implemented an adaptive method to automatically refine and de-refine a finite element mesh based upon a posteriori error estimates of the finite element approximation <ref> [20] </ref>. Within SCIRun, the engineer can interactively decide upon the level of accuracy used for a given simulation based upon a priori design criteria.
Reference: [21] <author> H.W. Shen and C.R. Johnson. </author> <title> Differential volume rendering: A fast alogrithm for scalar field animation. </title> <booktitle> In Visualization `94, </booktitle> <pages> pages 180-187. </pages> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: For higher quality ray-traced rendered images, we have developed a batch-mode graphics system which exploits parallel processors and/or clusters of workstations. Recently, we have developed a differential volume rendering module which allows nearly real-time rendering of three-dimensional flows for models with hundreds of thousands of elements <ref> [21] </ref>. For SCIRun, we have combined many of the components of these visualization systems with our computational and geometrical design systems to produce an integrated method for interactively designing and exploring computational science and engineering models.
Reference: [22] <author> C. Upson and et al. </author> <title> The application visualization system: A computational en-vironment for scientific visualization. </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> 9(4) </volume> <pages> 30-42, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: A Computational Steering Framework SCIRun is a framework in which large scale computer simulations can be composed, executed, controlled and tuned interactively. Composing the simulation is accomplished via a visual programming interface to a dataflow network. Software systems such as AVS from Application Visualization Systems Inc. <ref> [22] </ref>, Iris Explorer from Silicon Graphics, and Visualization Data Explorer from IBM [23] have made this archetype popular for scientific visualization [24]. Our work has extended this paradigm into the realm of scientific computation.
Reference: [23] <author> B. Lucas and et al. </author> <title> An architecture for a scientific visualization system. </title> <booktitle> In Proceedings of Visualization '92, </booktitle> <pages> pages 107-114. </pages> <publisher> IEEE Press, </publisher> <year> 1992. </year>
Reference-contexts: Composing the simulation is accomplished via a visual programming interface to a dataflow network. Software systems such as AVS from Application Visualization Systems Inc. [22], Iris Explorer from Silicon Graphics, and Visualization Data Explorer from IBM <ref> [23] </ref> have made this archetype popular for scientific visualization [24]. Our work has extended this paradigm into the realm of scientific computation. To execute the program, one specifies parameters with a graphical user interface rather than with the traditional text-based datafile.
Reference: [24] <author> C. Willams, J. Rasure, and C. Hansen. </author> <title> The state of the art of visual languages for visualization. </title> <booktitle> In Proceedings of Visualization '92, </booktitle> <pages> pages 202-209. </pages> <publisher> IEEE Press, </publisher> <year> 1992. </year>
Reference-contexts: Composing the simulation is accomplished via a visual programming interface to a dataflow network. Software systems such as AVS from Application Visualization Systems Inc. [22], Iris Explorer from Silicon Graphics, and Visualization Data Explorer from IBM [23] have made this archetype popular for scientific visualization <ref> [24] </ref>. Our work has extended this paradigm into the realm of scientific computation. To execute the program, one specifies parameters with a graphical user interface rather than with the traditional text-based datafile. Controlling a simulation involves steering the simulation interactively as it progresses.
Reference: [25] <author> D. Conner and et al. </author> <title> Three-dimensional widgets. </title> <booktitle> Computer Graphics (Proceedings of the 1992 Symposium on Interactive 3D Graphics), </booktitle> <pages> pages 183-188, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: While engineers are excited by this opportunity, it presents a very complex human computer interaction problem, due to the difficulty of 3D interaction. While we have not entirely solved these problems, we have addressed them by employing 3D widgets <ref> [25, 26] </ref> and alternative input devices to assist in the interaction tasks. SCIRun Applied to Problems in Medicine A network that can be used to model cardiac defibrillation is shown in Figure 2. A similar network is used for a forward solution in the neuroscience application.
Reference: [26] <author> R. Zeleznik and et al. </author> <title> An interactive 3d toolkit for constructing 3d widgets. </title> <booktitle> Computer Graphics (Proceedings of SIGGRAPH '93), </booktitle> <pages> pages 81-84, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: While engineers are excited by this opportunity, it presents a very complex human computer interaction problem, due to the difficulty of 3D interaction. While we have not entirely solved these problems, we have addressed them by employing 3D widgets <ref> [25, 26] </ref> and alternative input devices to assist in the interaction tasks. SCIRun Applied to Problems in Medicine A network that can be used to model cardiac defibrillation is shown in Figure 2. A similar network is used for a forward solution in the neuroscience application.
Reference: [27] <author> K. Herndon and T. Meyer. </author> <title> 3d widgets for exploratory scientific visualization. </title> <note> In Proceedings of UIST '94, 1994 (to appear). </note>
Reference-contexts: The 3D widget for the single streamline consists of a small sphere which specifies the seed point for the streamline. The widget for the row of streamlines takes the form of a rake <ref> [27] </ref>. Dragging on the cylindrical shaft controls the position of the rake, while dragging on the spherical endpoints controls the orientation and the length of the rake.
Reference: [28] <editor> B. Ribarsky and et al. </editor> <booktitle> Object-oriented, dataflow visualization systemsA paradigm shift? In Proceedings of Visualization '92, </booktitle> <pages> pages 384-388. </pages> <publisher> IEEE Press, </publisher> <year> 1992. </year>
Reference-contexts: Steering Optimizations In order to accommodate the large datasets required by high resolution computational models, we have optimized and streamlined the dataflow implementation. These optimizations are made necessary by the limitations many scientists have experienced with currently available dataflow visualization systems <ref> [28] </ref>. Data structure management: A naive implementation of the dataflow paradigm might use the pipe structure to make copies of the data. Consider the example in Figure 1. If the vector field is copied to both the Streamline and StreamSurface modules, then twice as much memory is consumed as necessary.
Reference: [29] <author> B. Stroustrup. </author> <title> The C++ Programming Language. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1991. </year>
Reference-contexts: If the vector field is copied to both the Streamline and StreamSurface modules, then twice as much memory is consumed as necessary. In addition, a significant amount of CPU time is required to copy large data structures. In order to avoid these overheads, we employ smart pointers <ref> [29] </ref> in C++, which help reduce complexity by allowing different modules to share common data structures. When the VectorFieldReader modules create the VectorField, it sets a reference count in the vector field to zero.
References-found: 29

