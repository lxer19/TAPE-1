URL: ftp://ftp.ifad.dk/pub/papers/iders.ps.gz
Refering-URL: http://www.ifad.dk/publications/publications.html
Root-URL: 
Email: e-mail: aalonso@dit.upm.es e-mail: baresi@elet.polimi.it  e-mail: hanne@ifad.dk e-mail: Marko.Heikkinen@vtt.fi  
Title: IDERS: An Integrated Environment for the Development of Hard Real-Time Systems a process-centered software engineering
Author: Alejandro Alonso Luciano Baresi Hanne Christensen Marko Heikkinen 
Note: The software process is modeled by  
Address: Ciudad Universitaria s.n. Piazza Leonardo da Vinci 32 E-28040 Madrid, Spain I-20133 Milano, Italy  Forskerparken 10 Kaitovayla 1, Linnanmaa DK-5230 Odense, Denmark FIN-90571 Oulu, Finland  
Affiliation: ETSI de Telecomunicacion Politecnico di Milano  The Institute of Applied Computer Science VTT Electronics  
Abstract: IDERS is a new generation environment for developing real-time critical systems. It integrates specification, design and code within a single framework, provides support for incremental prototyping and allows early validation through testing and animation. The system is based on a kernel that eliminates ambiguities and supplies dynamic semantic checks. Customization facilities allow to tailor the environment to specific notations, preserving the benefits of the formal kernel. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bandinelli, A. Fuggetta, and C. Ghezzi. </author> <title> Software Process Model Evolution in the SPADE Environment. </title> <journal> IEEE Transactions on Software Engineering, </journal> 19(12) 1128-1144, December 1993. 
Reference-contexts: Incremental prototypes allow early validation through testing and animation. Complete process visibility is provided by the enactment of a process description. The integration between the development process and the evolving product is guaranteed through the support of a process-centered software enginering environment (PSEE): SPADE <ref> [1] </ref>. This paper describes the main novelty of the IDERS environment. The original architecture integrating process description and enactment with distributed support for requirements and design specification, code testing and incremental animation is described in Section 2. The IDERS process model is presented in Section 3. <p> The main modules identified in Figure 1 are: * The Process Model Support (PMS), responsible for ensuring complete visibility and control of the development process model. It is based on SPADE <ref> [1] </ref>, whose core components are developed within a different ESPRIT project 1 . The IDERS Project enhances SPADE by providing additional tools for controlling the process: agenda and mon itor. * The Model Configuration (MC) lets the users customize the environment for animating a system description.
Reference: [2] <author> M. Blumberg and M.C. Ward. </author> <title> Software-First Life Cycle Final Definition for the Software Technology for Adaptable Reliable Systems. Document number 1240-001. IBM Systems Integration Division, </title> <type> 800 North Frederic Avenue, </type> <institution> Gaithersburg, Maryland, page 82, </institution> <month> January </month> <year> 1990. </year>
Reference-contexts: Air Force/IBM Software First Life Cycle (SFLC) Model <ref> [2] </ref>, already proven well suited for the development of real-time systems. In terms of the IEEE Standard for Developing Software Life Cycle Processes, the focus is on the development process.
Reference: [3] <author> B. Boehm. </author> <title> A Spiral Model of Software Development and Enhancement. </title> <journal> IEEE Computer, </journal> <volume> 21(5) </volume> <pages> 61-72, </pages> <year> 1988. </year>
Reference-contexts: the overall architec ture is drawn in Figure 3. 3 The IDERS Process Model The IDERS Project provides a specific process model tailored on the needs of the demonstrators and based on the results of the ESPRIT II Project EP5570 IPTES [12] and on the Boehm's spiral life cycle model <ref> [3] </ref> referring to the U.S. Air Force/IBM Software First Life Cycle (SFLC) Model [2], already proven well suited for the development of real-time systems. In terms of the IEEE Standard for Developing Software Life Cycle Processes, the focus is on the development process.
Reference: [4] <author> R. Elmstrtm, P. G. Larsen and P.B. Lassen. </author> <title> The IFAD VDM-SL Toolbox: A Practical Approach to Formal Specifications. </title> <journal> ACM Sigplan Notices, </journal> <volume> 29(9) </volume> <pages> 77-80, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: The textual customization encapsulates syntax, static and dynamic semantics. The customization of static and dynamic semantics is specified and described using VDM-SL [10], that can be either executed through the VDM-SL to C++ Code Generator or interpreted by the VDM-SL interpreter <ref> [4] </ref>. As already outlined in Section 2, in customizing the environment for an end-user notation, super-users, as far as graphical aspects are concerned, must define: * The concrete syntax (appearance) of the symbols, i.e., all the shapes used within the notation.
Reference: [5] <author> C. Ghezzi, M. Felder and M. Pezze. </author> <title> HLTPN Kernel Model. </title> <type> Technical report, </type> <institution> Politecnico di Milano, </institution> <month> July </month> <year> 1992. </year> <note> IPTES Doc.id.: IPTES-PDM-6-V3.0. </note>
Reference-contexts: It translates both the (sub)models to be animated into high-level timed Petri nets <ref> [5] </ref>, which are the internal notation of the toolset, and the execution events, at the Petri nets level, into significant actions ac cording to the end-user notation. * The Implementation Animation (IA).
Reference: [6] <author> H. Gottler. </author> <title> Graph Grammars, A new Paradigm for Implementing Visual Languages. </title> <booktitle> In Proceedings of ESEC89-Second European Software Engineering Conference, </booktitle> <pages> pages 336-350. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year> <note> Lecture Notes in Computer Science, </note> <author> n. </author> <month> 387. </month>
Reference-contexts: Both graphic and textual aspects of the end-user notations are customizable. Graphics customization is based on graph-grammars theory <ref> [6] </ref>: both syntax and semantics aspects are expressed by suitable graph grammars that are interpreted to provide editing support for the customized notation and to generate the kernel model. The textual customization encapsulates syntax, static and dynamic semantics.
Reference: [7] <author> D.J. Hatley and I.A. Pirbhai. </author> <title> Strategies for Real-Time System Specification. </title> <publisher> Dorset House, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: There will be an initial set of notations supplied with the first prototype. Additional notations will be later added using the customization facilities described in the next section. The first release of the IDERS SDA will support the notations proposed by Hatley and Pirbhai (H&P) <ref> [7] </ref> augmented with minic, a dialect of C, for expressing textual aspects. The requirements notation strictly adheres to H&P, while the design notation integrates the original proposal with the POSIX standard [9] as to the elements not fully specified.
Reference: [8] <author> H. Honka. </author> <title> A Simulation-Based Approach to Testing Embedded Software. </title> <type> VTT Publications 124, </type> <institution> Technical Research Center of Finland, Computer Technology Laboratory, </institution> <address> P.O. Box 201, FIN-90571, Finland, </address> <year> 1992. </year>
Reference-contexts: The main purpose of this toolset, whose kernel component is based on MOSIM <ref> [8] </ref>, is the execution and visualization of Implementation Models (IMs) in a host environment that simulates the target envi ronment. * The Animation Adaptor (AA) provides the basis for the integrated animation of the heterogeneous models and thus the consistent execution of the whole system.
Reference: [9] <author> IEEE. </author> <title> Real-Time extensions to POSIX. </title> <journal> IEEE Standard P1003.1b. IEEE, </journal> <month> March </month> <year> 1993. </year>
Reference-contexts: The first release of the IDERS SDA will support the notations proposed by Hatley and Pirbhai (H&P) [7] augmented with minic, a dialect of C, for expressing textual aspects. The requirements notation strictly adheres to H&P, while the design notation integrates the original proposal with the POSIX standard <ref> [9] </ref> as to the elements not fully specified. Requirements and design described by the end-user in the H&P notations are internally represented by means of high-level timed Petri nets.
Reference: [10] <author> P.B. Lassen, P.G. Larsen and K. de Bruin. </author> <title> The IFAD VDM-SL Language. </title> <type> Technical Report IFAD-VDM-1, </type> <institution> IFAD, The Institute of Applied Computer Science, </institution> <address> Forskerparken 10, DK-5230 Odense, Denmark, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: The textual customization encapsulates syntax, static and dynamic semantics. The customization of static and dynamic semantics is specified and described using VDM-SL <ref> [10] </ref>, that can be either executed through the VDM-SL to C++ Code Generator or interpreted by the VDM-SL interpreter [4].
Reference: [11] <author> A. Perrotta, G. Massara, G. Dipoppa, and R. Bove. </author> <title> A Logical Model of the RPCM System. </title> <type> Technical report, </type> <institution> Alenia, </institution> <month> January </month> <year> 1995. </year> <note> IDERS Doc.id. : IDERS-ALENIA-16. </note>
Reference-contexts: As soon as the SDA will be released, it will be proved and demonstrated on the logical and physical models of the Reply Processor and Channel Management System (RPCMS) <ref> [11] </ref>, the key software component of an advanced secondary surveillance radar system developed by Alenia. The RPCMS is required to be able to manage aircrafts equipped with both traditional and Mode-S transponders. Mode-S provided aircrafts own a unique address that let interrogations be directed to single aircrafts.
Reference: [12] <author> P. Pulli, M. Heikkinen, R. Lintulampi, J. Matero, and T. Piironen. </author> <title> IPTES Spiral Model Guidelines. </title> <type> Technical report, </type> <institution> Technical Research Center of Finland, Computer Technology Laboratory, </institution> <address> P.O. Box 201, FIN-90571 Oulu, Finland, Septem-ber 1993. IPTES Doc.id. : IPTES-VTT-34. </address>
Reference-contexts: Their viewpoint within the overall architec ture is drawn in Figure 3. 3 The IDERS Process Model The IDERS Project provides a specific process model tailored on the needs of the demonstrators and based on the results of the ESPRIT II Project EP5570 IPTES <ref> [12] </ref> and on the Boehm's spiral life cycle model [3] referring to the U.S. Air Force/IBM Software First Life Cycle (SFLC) Model [2], already proven well suited for the development of real-time systems.
Reference: [13] <author> Rautaruukki New Technology. </author> <title> SMARTVIS Surface Inspection System for Continuous and Real-Time Inspection of Rolled Metal Strips. </title> <type> Technical report, </type> <institution> Rautaruukki New Technology, Teknolo-giantie 2, FIN-90570 Oulu, Finland, </institution> <year> 1994. </year>
Reference-contexts: It is, therefore, mandatory that all the aircrafts within a given sector are queried and their replies received back before the radar changes sector, otherwise significant information would be lost. The IA is used in the development and enhancement of the Smartvis <ref> [13] </ref> system developed by Rautaruukki New Technology. Smartvis is a surface inspection system for flat steel products based on high-resolution line scan imaging, a special illumination system, advanced digital filtering methods, rule-based defect classification and an automated learning and tuning support system.
Reference: [14] <author> P.T. Ward and S.J. Mellor. </author> <title> Structured Development for Real-Time Systems, volume 1-3. </title> <publisher> Yourdon Press, </publisher> <year> 1986. </year>
Reference-contexts: been considered in designing the architecture, the most important ones are: * Even if the IDERS toolset is a meta-environment that can be customized to cope with the notations and the development standards of any specific organization, the architecture has been thought considering the abstraction levels provided by SA-SD/RT methodology <ref> [14] </ref>. This approach was chosen just to focus on a specific methodology, being aware that its basis are common to other methodologies. Basically SA-SD/RT requires the following models: Specification Models (SM): They define the functional requirements of the system under development.
References-found: 14

