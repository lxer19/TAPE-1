URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/96-03.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: Which Set of Bridging Faults Should Test Compilers Target  
Author: Sreejit Chakravarty Paul J. Thadikaran 
Note: SUBMITTED TO IEEE INTERNATIONAL TEST CONFERENCE,  
Date: February 28, 1996  1996  
Address: New York Buffalo, NY 14260  
Affiliation: Department of Computer Science State University of  
Abstract: Existing test compilers target stuck-at faults. Recent experimental evidence suggest targetting bridging faults (BF) because they model between 40-50% of physical defects. For BFs, one suggestion has been to extract a small set of BFs using "layout analysis". We argue that this is not a feasible option for test compilers thereby making a case for "layout independent analysis" of BFs. Opting for "layout independent analysis" implies that computer-aided test tools target "all possible BFs". Targetting such a large number of faults is generally considered unreasonable. We present new experimental data and analyze published data. The analysis reveal that for many problems very good techniques have already been developed to target such a large number of faults. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bershteyn, </author> <title> "Calculation of Multiple Sets of Weights for Weighted Random Testing," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <year> 1993, </year> <pages> pp. 1031 - 1040. </pages>
Reference-contexts: Since the gate level description is not yet finalized one cannot have any layout information prior to this fault simulation task. * Weighted random patterns are used to reduce test length in a BIST environment <ref> [1, 31, 38, 44, 53, 54, 55] </ref>. In addition to determining an appropriate LFSR, the weight sets have to be computed. These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation.
Reference: [2] <author> F. Brglez and H. Fujiwara, </author> <title> "A Neural Netlist of 10 Combinational Benchmark Circuits and a Target Translator in FORTRAN", Special Session on ATPG and Fault Simulation, </title> <booktitle> IEEE Int'l Symposium on Circuits and Systems 1985. </booktitle>
Reference-contexts: Tables 5, 6 present a comparison of the performance of fault simulation for Extracted-BFs with respectively Metal-BFs, All-BFs in combinational circuits. The test set used was generated using [32]. The circuits whose names are prefixed with "c" are from <ref> [2] </ref> while the circuits whose names are prefixed with "s" are scan versions of sequential circuits from [3]. From these tables we conclude the following.
Reference: [3] <author> F. Brglez , D. Bryant, K. Kozminski, </author> <title> "Combinational profiles of sequential benchmark circuits", </title> <booktitle> Proceedings of IEEE Int'l. Symposium on Circuits and Systems, </booktitle> <year> 1989, </year> <pages> pp. 1929-1934. </pages>
Reference-contexts: We have some results of our own [51] which we use. Table 3 compares the performance of fault simulation for Extracted-BFs and Metal-BFs for Sequential circuits. The test set used is that derived using GENTEST [7]. Only results for ISCAS89 <ref> [3] </ref> circuits of more than 1000 gates for which GENTEST test set was available are presented. The times are CPU seconds on a SUN 4/670. The number of faults in the two sets is given under column Faults under the headings Extracted-BFs and Metal-BFs. <p> The test set used was generated using [32]. The circuits whose names are prefixed with "c" are from [2] while the circuits whose names are prefixed with "s" are scan versions of sequential circuits from <ref> [3] </ref>. From these tables we conclude the following.
Reference: [4] <author> S. W. Bollinger, S. F. Midkiff, </author> <title> "Test Generation for I DDQ Testing of Bridging Faults in CMOS Circuits", </title> <journal> IEEE Trans. on Comput.-Aided Design, </journal> <pages> pp. 1413-1418, </pages> <year> 1994. </year>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs <ref> [4, 37, 18, 28] </ref> while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49].
Reference: [5] <author> S. Chakravarty, </author> <title> "Computing Tests for Bridging and Leakage Faults: Complexity Results and Universal Test Sets," </title> <booktitle> 5th IEEE/ACM International Conference on VLSI Design, </booktitle> <year> 1992, </year> <pages> pp. 49-54. </pages>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs <ref> [5, 14, 46, 49] </ref> or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34].
Reference: [6] <author> S. Chakravarty, </author> <title> "A Sampling Technique for Diagnostic Fault Simulation", </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <year> 1996. </year>
Reference-contexts: Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs [8, 9, 10, 11, 13], I DDQ diagnostic test generation for BFs [21, 22], and diagnostic simulation of BFs <ref> [6] </ref>. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression. BFs can be detected using either I DDQ 7 measurement or Voltage/Logic measurement. Test tools must be developed for both these detection techniques.
Reference: [7] <author> W. T. Cheng, T. J. Chakraborty, "GENTEST: </author> <title> An automatic Test Generation System for Sequential Circuits", </title> <booktitle> Computer, </booktitle> <month> April </month> <year> 1989. </year> <month> 14 </month>
Reference-contexts: There is almost no published results on fault simulation of Extracted-BFs. We have some results of our own [51] which we use. Table 3 compares the performance of fault simulation for Extracted-BFs and Metal-BFs for Sequential circuits. The test set used is that derived using GENTEST <ref> [7] </ref>. Only results for ISCAS89 [3] circuits of more than 1000 gates for which GENTEST test set was available are presented. The times are CPU seconds on a SUN 4/670. The number of faults in the two sets is given under column Faults under the headings Extracted-BFs and Metal-BFs.
Reference: [8] <author> S. Chakravarty and Y. Gong, </author> <title> "An Algorithm for Diagnosis of Bridging Faults", </title> <booktitle> 30th ACM/IEEE Design Automation Conference, </booktitle> <year> 1993. </year>
Reference-contexts: We can start to address the rest of them once we have a better understanding of the fundamental problems both in detecting and diagnosing BFs. Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs <ref> [8, 9, 10, 11, 13] </ref>, I DDQ diagnostic test generation for BFs [21, 22], and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression.
Reference: [9] <author> S. Chakravarty and Y. Gong, </author> <title> "Voting Model Based Diagnosis of Bridging Faults in Combinational Circuits," </title> <booktitle> IEEE International Conference on VLSI Design, </booktitle> <year> 1995, </year> <pages> pp. 338 - 342. </pages>
Reference-contexts: We can start to address the rest of them once we have a better understanding of the fundamental problems both in detecting and diagnosing BFs. Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs <ref> [8, 9, 10, 11, 13] </ref>, I DDQ diagnostic test generation for BFs [21, 22], and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression.
Reference: [10] <author> S. Chakravarty and M. Liu, </author> <title> "Iddq Measurement Based Diagnosis of Bridging Faults in Combinational Circuits," </title> <journal> Journal of Electronic Testing: Theory and Application, </journal> <volume> Vol. 3, </volume> <pages> pp. 377 - 385, </pages> <address> 1992. </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: We can start to address the rest of them once we have a better understanding of the fundamental problems both in detecting and diagnosing BFs. Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs <ref> [8, 9, 10, 11, 13] </ref>, I DDQ diagnostic test generation for BFs [21, 22], and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression.
Reference: [11] <author> S. Chakravarty and M. Liu, </author> <title> "Algorithms for Current Monitor Based Diagnosis of Bridging and Leakage Faults". </title> <booktitle> 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 353-356, </pages> <year> 1992. </year>
Reference-contexts: We can start to address the rest of them once we have a better understanding of the fundamental problems both in detecting and diagnosing BFs. Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs <ref> [8, 9, 10, 11, 13] </ref>, I DDQ diagnostic test generation for BFs [21, 22], and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression.
Reference: [12] <author> B. Chess, D. B. Lavo, F. J. Ferguson, T, Larabee, </author> <title> "Diagnosis of Realistic Bridging Faults with Single Stuck-at Information", </title> <booktitle> IEEE/ACM Conference on Computer-Aided Design, </booktitle> <year> 1995, </year> <pages> pp. 185-192. </pages>
Reference-contexts: In this case, a realistic set of BFs can be extracted and a suitable diagnosis algorithm used to locate defects as is done in <ref> [12] </ref>. On the other hand, diagnosis is also used to identify design, layout and fabrication errors prior to mass scale manufacturing [24]. This is often referred to as design validation. I DDQ testing has been used very effectively for this purpose.
Reference: [13] <author> S. Chakravarty and S. </author> <title> Sunder, "Iddq Measurement Based Diagnosis of Bridging Faults in Full-Scan Circuits". </title> <booktitle> IEEE International Conference on VLSI Design, </booktitle> <year> 1994, </year> <pages> pp. 179 - 182. </pages>
Reference-contexts: We can start to address the rest of them once we have a better understanding of the fundamental problems both in detecting and diagnosing BFs. Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs <ref> [8, 9, 10, 11, 13] </ref>, I DDQ diagnostic test generation for BFs [21, 22], and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression.
Reference: [14] <author> S. Chakravarty, P. J. Thadikaran, </author> <title> "Simulation and Generation of I DDQ Tests for Bridging Faults in Combinational Circuits", </title> <booktitle> 1993 IEEE VLSI Test Symposium, </booktitle> <pages> pp. 25-32. </pages>
Reference-contexts: The numbers reported are the number of BFs prior to fault collapsing by identifying equivalent nodes [50]. 3.1.1 Fault Simulation Fault Simulation of I DDQ Tests for All-BFs [15, 51] and Metal-BFs <ref> [14, 16, 17] </ref> have been studied for both combinational as well as sequential circuits. Among the published results the performance of [51] is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs. <p> fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs <ref> [5, 14, 46, 49] </ref> or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34].
Reference: [15] <author> S. Chakravarty, P. J. Thadikaran, </author> <title> "A study of I DDQ Subset Selection Algorithms for Bridging Faults",1994 International Test Conference, </title> <journal> pp. </journal> <pages> 403-412. </pages>
Reference-contexts: The numbers reported are the number of BFs prior to fault collapsing by identifying equivalent nodes [50]. 3.1.1 Fault Simulation Fault Simulation of I DDQ Tests for All-BFs <ref> [15, 51] </ref> and Metal-BFs [14, 16, 17] have been studied for both combinational as well as sequential circuits. Among the published results the performance of [51] is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs. <p> In the context of I DDQ testing, since I DDQ testing is a slow process, the same technique can also be used to identify I DDQ measurement points [39]. These problems have been studied for leakage faults [19], All-BFs and Metal-BFs in both sequential and combinational circuits <ref> [15, 50] </ref>. Only [37] gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs [50] provides the best results for combinational and sequential circuits. In Table 10 ( Table 11 ) we compare results for Extracted-BFs and Metal-BFs ( Extracted-BFs and All-BFs ).
Reference: [16] <author> S. Chakravarty, P. J. Thadikaran, </author> <note> "Simulation of I DDQ Tests for Bridging Faults in Combinational Circuits",To appear in IEEE Trans. on Comput. </note>
Reference-contexts: The numbers reported are the number of BFs prior to fault collapsing by identifying equivalent nodes [50]. 3.1.1 Fault Simulation Fault Simulation of I DDQ Tests for All-BFs [15, 51] and Metal-BFs <ref> [14, 16, 17] </ref> have been studied for both combinational as well as sequential circuits. Among the published results the performance of [51] is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs.
Reference: [17] <author> W. Debany, </author> <title> "Coverage of Node Shorts Using Internal Access and Equivalence Classes", </title> <booktitle> VLSI Design, </booktitle> <volume> Vol. 1, No. 1, </volume> <pages> pp. 71-86, </pages> <year> 1993. </year>
Reference-contexts: The numbers reported are the number of BFs prior to fault collapsing by identifying equivalent nodes [50]. 3.1.1 Fault Simulation Fault Simulation of I DDQ Tests for All-BFs [15, 51] and Metal-BFs <ref> [14, 16, 17] </ref> have been studied for both combinational as well as sequential circuits. Among the published results the performance of [51] is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs.
Reference: [18] <author> F. J. Ferguson, T. Larabee, </author> <title> "Test Pattern Generation for Realistic Bridge Faults in CMOS ICs", </title> <booktitle> Intl. Test Conference, </booktitle> <pages> pp. 492-499, </pages> <year> 1991. </year>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs <ref> [4, 37, 18, 28] </ref> while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49].
Reference: [19] <author> R. R. Fritzemeier, J. M. Soden, R. K. Treece, C. F. Hawkins, </author> <title> "Increase CMOS IUC stuck-at fault coverage with reduced I DDQ test sets," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <pages> pp. 427-435, </pages> <year> 1990. </year>
Reference-contexts: In the context of I DDQ testing, since I DDQ testing is a slow process, the same technique can also be used to identify I DDQ measurement points [39]. These problems have been studied for leakage faults <ref> [19] </ref>, All-BFs and Metal-BFs in both sequential and combinational circuits [15, 50]. Only [37] gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs [50] provides the best results for combinational and sequential circuits.
Reference: [20] <author> R. Gupta, M. Breuer, </author> <title> "Ordering Storage Elements in a Single Scan Chain," </title> <booktitle> IEEE Int'l Conf. on Comput.-Aided Design, </booktitle> <year> 1991, </year> <pages> pp. 408-411. </pages>
Reference-contexts: Solutions to this problem use a combination of two techniques: finding a good ordering of flip/flops in the scan-chain; and finding a good order in which to apply the test vectors. The heuristics use extensive fault simulation and requires a test set <ref> [20, 25, 35, 41, 45] </ref>. The circuit design is not complete prior to this task. Thus, the test set that is used as a guide has to be computed without any knowledge of the layout.
Reference: [21] <author> Y. Gong, </author> <title> "Exploting Dynamic Computation to Diagnose Bridging Faults", </title> <type> PhD Desser-tation, </type> <institution> Dept. of Computer Science, State University of New York, Buffalo, </institution> <address> NY. </address> <month> 15 </month>
Reference-contexts: Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs [8, 9, 10, 11, 13], I DDQ diagnostic test generation for BFs <ref> [21, 22] </ref>, and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression. BFs can be detected using either I DDQ 7 measurement or Voltage/Logic measurement.
Reference: [22] <author> Y. Gong, S. Chakravarty, </author> <title> "Adaptive Diagnostic Test Generation," </title> <booktitle> IEEE/ACM Int'l Conf. on Comput.-Aided Design, </booktitle> <year> 1995. </year>
Reference-contexts: Considerable progress has been made to solve the fundamental problems in diagnosing all possible BFs. They include work on diagnosis of BFs [8, 9, 10, 11, 13], I DDQ diagnostic test generation for BFs <ref> [21, 22] </ref>, and diagnostic simulation of BFs [6]. Here we concentrate on solutions for the fundamental fault detection problems for BFs. They include: fault simulation, test generation and test set compression. BFs can be detected using either I DDQ 7 measurement or Voltage/Logic measurement.
Reference: [23] <author> J. Galiay, Y. Crouzet, and M. Vergniault, </author> <title> "Physical Versus Logical Fault Models for MOS LSI Circuits: Impact on their testability," </title> <journal> IEEE Trans. on Comput., </journal> <volume> 29(6):, </volume> <month> June </month> <year> 1980. </year>
Reference-contexts: Experimental results have shown the inadequacy of the stuck-at fault model to model physical defects. In addition, it has been shown that bridging faults (BFs) model between 40-50% of physical defects <ref> [23, 36, 42] </ref>. Consequently, the next generation of test compilers must target BFs in addition to other faults. In this discussion we ask a very fundamental question, answer to which is required, prior to developing the next generation of test compilers.
Reference: [24] <author> J. M. Soden, C. F. Hawkins, R. K. Gulati and W. W. Mao, </author> <title> "I DDQ Testing: A Review", </title> <journal> Journal of Electronic Testing: Theory and Applications, </journal> <volume> Vol. 3, No. 4, </volume> <pages> pp. 291-303, </pages> <year> 1992. </year> <title> Also appears as Chapter 1 in I DDQ Testing of VLSI Circuits, </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: In this case, a realistic set of BFs can be extracted and a suitable diagnosis algorithm used to locate defects as is done in [12]. On the other hand, diagnosis is also used to identify design, layout and fabrication errors prior to mass scale manufacturing <ref> [24] </ref>. This is often referred to as design validation. I DDQ testing has been used very effectively for this purpose. As stated in [24]: "I DDQ testing is routinely used to detect layout errors by companies using gate-arrays". <p> On the other hand, diagnosis is also used to identify design, layout and fabrication errors prior to mass scale manufacturing <ref> [24] </ref>. This is often referred to as design validation. I DDQ testing has been used very effectively for this purpose. As stated in [24]: "I DDQ testing is routinely used to detect layout errors by companies using gate-arrays". Such errors could include missing contact of pins from other pins in the net, shorting of two distinct nets etc. The later kind of errors can be modelled as BFs.
Reference: [25] <author> Y. Higami, S. Kajihara, K. Kinoshita, </author> <title> "Reduced ScanShift: A New Testing Methodology for Sequential Circuits", </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <year> 1994, </year> <pages> pp. 624-630. </pages>
Reference-contexts: Solutions to this problem use a combination of two techniques: finding a good ordering of flip/flops in the scan-chain; and finding a good order in which to apply the test vectors. The heuristics use extensive fault simulation and requires a test set <ref> [20, 25, 35, 41, 45] </ref>. The circuit design is not complete prior to this task. Thus, the test set that is used as a guide has to be computed without any knowledge of the layout.
Reference: [26] <author> S. Hellebrand, B. Reeb, S. Tarnick, H. Wunderlich, </author> <title> "Pattern Generation for a Deterministic BIST Scheme", </title> <booktitle> International Conference on Computer-Aided Design, </booktitle> <pages> pp. 88-94, </pages> <year> 1995. </year>
Reference-contexts: These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation. Clearly, for the required fault simulation, no layout information is available. * In one approach to designing on-chip test generators a test set is used as a guide <ref> [26, 27, 43, 52] </ref>. This approach improves fault coverage and reduces test application time. Since the on-chip test generator has not yet been finalized, the test set used has to be computed without any layout information. * In a full-scan environment reduction of test application time is an important objective.
Reference: [27] <author> S. Hellebrand, S. Tarnick, J. Rajski, and B. Courtois, </author> <title> "Generation of Vector Patterns Through Reseeding of Multiple-Polynomial Linear Feedback Shift Registers", </title> <booktitle> IEEE International Test Conference, </booktitle> <pages> pp. 120-129, </pages> <year> 1992. </year>
Reference-contexts: These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation. Clearly, for the required fault simulation, no layout information is available. * In one approach to designing on-chip test generators a test set is used as a guide <ref> [26, 27, 43, 52] </ref>. This approach improves fault coverage and reduces test application time. Since the on-chip test generator has not yet been finalized, the test set used has to be computed without any layout information. * In a full-scan environment reduction of test application time is an important objective.
Reference: [28] <author> E. Isern, J. Figueras, </author> <title> "Test generation with covewrages for quiescent current test for bridging faults in combinational circuits", </title> <booktitle> Intl. Test Conference, </booktitle> <pages> pp. 73-82, </pages> <year> 1993. </year>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs <ref> [4, 37, 18, 28] </ref> while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49].
Reference: [29] <author> A. Jee, F. J. Ferguson, "CARAFE: </author> <title> An inductive fault analysis tool for CMOS VLSI Circuits", </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 92-98, </pages> <year> 1993. </year>
Reference-contexts: With this in mind many test tools restrict the target set of BFs to a "realistic set of BFs". Such a set of BFs is computed by analysing the layout of the circuit <ref> [29] </ref>. Techniques developed for stuck-at faults, that "explicitly enumerate" ( one by one ) this set of BFs, can then be used. <p> Figure 1 shows two different design flows. Design Flow I is the one assumed by inductive fault analysis <ref> [29] </ref>. It is used by many chip designers who generate the layout, extract a set of BFs and then compute the test set. All the layout information is available to the test tool. A realistic set of faults can be extracted by analysing the layout. <p> Proximity relationship between nets is the basis on which faults are extracted <ref> [29] </ref>. The consequence is that, the "realistic set of faults" extracted using the preliminary layout will not be a "realistic set of faults" for the final circuit !! 2.3 Synthesizing Board/MCM Level Tests We have so far considered the design flow for a single VLSI chip.
Reference: [30] <author> W. Kunz, D. K. Pradhan, </author> <title> "Recursive learning: An attractive alternative to the decision tree for test generation in digital circuits", </title> <booktitle> IEEE Int'l Test Conf., </booktitle> <pages> pp. 816-825, </pages> <year> 1992. </year>
Reference-contexts: Secondly, during test generation of Metal-BFs or All-BFs a large number of the simulated stuck-at faults are redundant. A stuck-at test generator that identifies redundancy efficiently would result in better performance. CONTEST, SOCRATES etc. <ref> [30, 37, 40, 48] </ref> used in [37] are considerably better at this than ATALANTA. We conjecture that the results in [49] would be considerably better if these stuck-at ATPG instead of ATALANTA is used.
Reference: [31] <author> R. Kapur, S. Patil, T. J. Snethen, T. W. Williams, </author> <title> "Design of an Efficient Weighted Random Pattern Generation System," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <year> 1994, </year> <pages> pp. 491-500. </pages>
Reference-contexts: Since the gate level description is not yet finalized one cannot have any layout information prior to this fault simulation task. * Weighted random patterns are used to reduce test length in a BIST environment <ref> [1, 31, 38, 44, 53, 54, 55] </ref>. In addition to determining an appropriate LFSR, the weight sets have to be computed. These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation.
Reference: [32] <author> T. Larabee, </author> <title> "Test pattern Generation using Boolean Satisfiability", </title> <journal> IEEE Trans. on Comput.-Aided Design, </journal> <volume> Vol. 11, No. 1, </volume> <pages> pp. 4-15, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Tables 5, 6 present a comparison of the performance of fault simulation for Extracted-BFs with respectively Metal-BFs, All-BFs in combinational circuits. The test set used was generated using <ref> [32] </ref>. The circuits whose names are prefixed with "c" are from [2] while the circuits whose names are prefixed with "s" are scan versions of sequential circuits from [3]. From these tables we conclude the following.
Reference: [33] <author> H. K. Lee, D. S. Ha, </author> <title> "On The Generation of Test Patterns for Combinational Circuits", </title> <type> Tech. Report No 12-93, </type> <institution> Dept. of Elect. Eng., Virginia Polytechnique Institute and Sate University, Va. </institution>
Reference-contexts: However, we should not rush to conclude that targetting All-BFs is unreasonable. We have to keep a number of points in mind. Firstly, in [49] the stuck-at test generator ATALANTA <ref> [33] </ref> was used. A modified circuit along with a list of stuck-at faults was generated and stored in a file. ATALANTA then read the file from secondary storage and generated some additional vectors. Clearly, this is not a good strategy to develop an I DDQ test generator.
Reference: [34] <author> T. Lee, I. N. Hajj, E. M. Rudnick, J. H. Patel, </author> <title> "Genetic-Algorithm-Based Test Generation for Current Testing of Bridging Faults in CMOS VLSI Circuits", </title> <note> To appear in IEEE VLSI Test Symposium, 1996. 16 </note>
Reference-contexts: with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational [4, 5, 14, 37, 18, 28, 46, 49] and sequential circuits <ref> [34] </ref>. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs <ref> [49, 34] </ref>. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34]. <p> For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in <ref> [34] </ref>. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. <p> We conjecture that the results in [49] would be considerably better if these stuck-at ATPG instead of ATALANTA is used. There is very little data on computing I DDQ tests for either Metal-BFs or All-BFs in sequential circuits. The work reported in <ref> [34] </ref> is, we believe, very preliminary. The experiments were run on a SUN 5/70. We have compared the performance of the sequential test generator from [34] and the test generator for Extracted-BFs in combinational circuits [37]. The results are tabulated in Table 9. <p> There is very little data on computing I DDQ tests for either Metal-BFs or All-BFs in sequential circuits. The work reported in <ref> [34] </ref> is, we believe, very preliminary. The experiments were run on a SUN 5/70. We have compared the performance of the sequential test generator from [34] and the test generator for Extracted-BFs in combinational circuits [37]. The results are tabulated in Table 9. Ignore the results for s9234, s13207, s15850 because the coverage of the sequential test set is very low.
Reference: [35] <author> S. Y. Lee and K. K. Saluja, </author> <title> "An Algorithm to Reduce Test Application Time in Full Scan Design," </title> <booktitle> IEEE Int'l Conference on Computer-Aided Design, </booktitle> <year> 1992, </year> <pages> pp. 17-20. </pages>
Reference-contexts: Solutions to this problem use a combination of two techniques: finding a good ordering of flip/flops in the scan-chain; and finding a good order in which to apply the test vectors. The heuristics use extensive fault simulation and requires a test set <ref> [20, 25, 35, 41, 45] </ref>. The circuit design is not complete prior to this task. Thus, the test set that is used as a guide has to be computed without any knowledge of the layout.
Reference: [36] <author> W. Maly, </author> <title> "Realistic Fault modelling for VLSI Testing", </title> <journal> IEEE/ACM Design Automation Conference, pp. </journal> <volume> 173 - 180, </volume> <year> 1987. </year>
Reference-contexts: Experimental results have shown the inadequacy of the stuck-at fault model to model physical defects. In addition, it has been shown that bridging faults (BFs) model between 40-50% of physical defects <ref> [23, 36, 42] </ref>. Consequently, the next generation of test compilers must target BFs in addition to other faults. In this discussion we ask a very fundamental question, answer to which is required, prior to developing the next generation of test compilers.
Reference: [37] <author> U. Mahlstedt, J. Alt, M. Heinitz, </author> <title> "CURRENT: A Test Generation Systems for I DDQ Testing", </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 317-323, </pages> <year> 1995. </year>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs <ref> [4, 37, 18, 28] </ref> while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in <ref> [37] </ref>. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34]. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs [37]. <p> performance is reported in <ref> [37] </ref>. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34]. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above, Adj T ime = T ime (MetalBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> For All-BFs in sequential circuits the only result is reported in [34]. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs <ref> [37] </ref>. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above, Adj T ime = T ime (MetalBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> The factor 4.47 is from Table 2. Note that the ratio of the test generation time is significantly smaller than the ratio of the number of faults targetted!! In Table 8 we compare the performance of the test generator for All-BFs [49] and the test generator for Extracted-BFs <ref> [37] </ref>. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above Adj T ime = T ime (AllBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> Note that the ratio of the test generation time is significantly smaller than the ratio of the number of faults targetted!! In Table 8 we compare the performance of the test generator for All-BFs [49] and the test generator for Extracted-BFs <ref> [37] </ref>. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above Adj T ime = T ime (AllBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. In this case the results are not as good as in the other comparisons that we have made so far. <p> Secondly, during test generation of Metal-BFs or All-BFs a large number of the simulated stuck-at faults are redundant. A stuck-at test generator that identifies redundancy efficiently would result in better performance. CONTEST, SOCRATES etc. <ref> [30, 37, 40, 48] </ref> used in [37] are considerably better at this than ATALANTA. We conjecture that the results in [49] would be considerably better if these stuck-at ATPG instead of ATALANTA is used. <p> Secondly, during test generation of Metal-BFs or All-BFs a large number of the simulated stuck-at faults are redundant. A stuck-at test generator that identifies redundancy efficiently would result in better performance. CONTEST, SOCRATES etc. [30, 37, 40, 48] used in <ref> [37] </ref> are considerably better at this than ATALANTA. We conjecture that the results in [49] would be considerably better if these stuck-at ATPG instead of ATALANTA is used. There is very little data on computing I DDQ tests for either Metal-BFs or All-BFs in sequential circuits. <p> The work reported in [34] is, we believe, very preliminary. The experiments were run on a SUN 5/70. We have compared the performance of the sequential test generator from [34] and the test generator for Extracted-BFs in combinational circuits <ref> [37] </ref>. The results are tabulated in Table 9. Ignore the results for s9234, s13207, s15850 because the coverage of the sequential test set is very low. For others, the sequential test generator actually outperforms the combinational test generator in the following sense. <p> These problems have been studied for leakage faults [19], All-BFs and Metal-BFs in both sequential and combinational circuits [15, 50]. Only <ref> [37] </ref> gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs [50] provides the best results for combinational and sequential circuits. In Table 10 ( Table 11 ) we compare results for Extracted-BFs and Metal-BFs ( Extracted-BFs and All-BFs ). In [50] several algorithms are discussed. <p> Both for All-BFs and Metal-BFs the test set used was the first N vectors from an uncompressed test set for All-BFs from [49]. Here, N is the size of the initial test set used in <ref> [37] </ref>. From Tables 10, 11 we conclude that: for both All-BFs, Metal-BFs, if proper techniques are developed then the growth of the ratio of the time to compute I DDQ measurement points is considerably smaller than the fault ratio.
Reference: [38] <author> F. Muradali, V. K. Agrawal, B. Nadeau-Dostie, </author> <title> "A New Procedure for Weighted Random Built-In Self-Test," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <pages> pp. 660-669, </pages> <year> 1990. </year>
Reference-contexts: Since the gate level description is not yet finalized one cannot have any layout information prior to this fault simulation task. * Weighted random patterns are used to reduce test length in a BIST environment <ref> [1, 31, 38, 44, 53, 54, 55] </ref>. In addition to determining an appropriate LFSR, the weight sets have to be computed. These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation.
Reference: [39] <author> W. Mao, R. K. Gulati, D. K. Goel, M. D. Ciletti, "QUIETEST: </author> <title> A Quiescent Current Testing Methodology for Detecting Leakage Faults," </title> <booktitle> IEEE Int'l Conferenc on Computer-Aided Design, </booktitle> <pages> pp. 280-283, </pages> <year> 1990. </year>
Reference-contexts: In the context of I DDQ testing, since I DDQ testing is a slow process, the same technique can also be used to identify I DDQ measurement points <ref> [39] </ref>. These problems have been studied for leakage faults [19], All-BFs and Metal-BFs in both sequential and combinational circuits [15, 50]. Only [37] gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs [50] provides the best results for combinational and sequential circuits.
Reference: [40] <author> U. Mahlstedt, T. Gruning, C. Ozcan, W. Daehn, </author> <title> "CONTEST: A Fast ATPG Tool for Very Large Combinational Circuits", </title> <booktitle> IEEE/ACM Int'l Conf. on Comput.-Aided Design, </booktitle> <pages> pp. 222-225, </pages> <year> 1990. </year>
Reference-contexts: Secondly, during test generation of Metal-BFs or All-BFs a large number of the simulated stuck-at faults are redundant. A stuck-at test generator that identifies redundancy efficiently would result in better performance. CONTEST, SOCRATES etc. <ref> [30, 37, 40, 48] </ref> used in [37] are considerably better at this than ATALANTA. We conjecture that the results in [49] would be considerably better if these stuck-at ATPG instead of ATALANTA is used.
Reference: [41] <author> S. P. Morley and R. A. Marlett, </author> <title> "Selectable Length Partial Scan: A Method to Reduce Vector Length," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <year> 1991, </year> <pages> pp. 385-392. </pages>
Reference-contexts: Solutions to this problem use a combination of two techniques: finding a good ordering of flip/flops in the scan-chain; and finding a good order in which to apply the test vectors. The heuristics use extensive fault simulation and requires a test set <ref> [20, 25, 35, 41, 45] </ref>. The circuit design is not complete prior to this task. Thus, the test set that is used as a guide has to be computed without any knowledge of the layout.
Reference: [42] <author> W. Maly, J. P. Shen and F. J. Ferguson, </author> <title> "Systematic Characterization of Physical Defects for Fault Analysis of MOS IC Cells," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <pages> pp. 390-399, </pages> <year> 1984. </year>
Reference-contexts: Experimental results have shown the inadequacy of the stuck-at fault model to model physical defects. In addition, it has been shown that bridging faults (BFs) model between 40-50% of physical defects <ref> [23, 36, 42] </ref>. Consequently, the next generation of test compilers must target BFs in addition to other faults. In this discussion we ask a very fundamental question, answer to which is required, prior to developing the next generation of test compilers.
Reference: [43] <author> S. Pateras, J. Rajski, </author> <title> "Cube Contained Random Patterns and Their Application to the Testing of Synthesized Multi-Level Circuits," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <year> 1991, </year> <pages> pp. 473 - 482. </pages>
Reference-contexts: These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation. Clearly, for the required fault simulation, no layout information is available. * In one approach to designing on-chip test generators a test set is used as a guide <ref> [26, 27, 43, 52] </ref>. This approach improves fault coverage and reduces test application time. Since the on-chip test generator has not yet been finalized, the test set used has to be computed without any layout information. * In a full-scan environment reduction of test application time is an important objective.
Reference: [44] <author> I. Pomerantz, S. M. Reddy, </author> <title> "3-Weight Pseudo Random Test Generation Based on a Deterministic Test Set for Combinational and Sequential Circuits," </title> <journal> IEEE Trans. on Comput.-Aided Design, </journal> <volume> 12(7) </volume> <pages> 1050-1058, </pages> <month> July, </month> <year> 1993. </year>
Reference-contexts: Since the gate level description is not yet finalized one cannot have any layout information prior to this fault simulation task. * Weighted random patterns are used to reduce test length in a BIST environment <ref> [1, 31, 38, 44, 53, 54, 55] </ref>. In addition to determining an appropriate LFSR, the weight sets have to be computed. These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation.
Reference: [45] <author> D. K. Pradhan and J. Saxena, </author> <title> "A Design for Testability Scheme to Reduce Test Application Time," </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 55 - 60, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Solutions to this problem use a combination of two techniques: finding a good ordering of flip/flops in the scan-chain; and finding a good order in which to apply the test vectors. The heuristics use extensive fault simulation and requires a test set <ref> [20, 25, 35, 41, 45] </ref>. The circuit design is not complete prior to this task. Thus, the test set that is used as a guide has to be computed without any knowledge of the layout.
Reference: [46] <author> R. S. Reddy, I. Pomerantz, S. M. Reddy, S. Kajihara, </author> <title> "Compact Test Generation for Bridging Faults under I DDQ Testing", </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 310 - 316, </pages> <year> 1995. </year>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs <ref> [5, 14, 46, 49] </ref> or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34].
Reference: [47] <author> C. Sechen, </author> <title> VLSI Placement and Global Routing Using Simulated Annealing. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: The preliminary layout and final layout will be generated using two different runs of the same layout generator. All layout 5 generators use non-deterministic algorithms like simulated annealing, genetic-algorithm, si--multed evolution etc. for placement and routing. Examples include variants of TimberWolf <ref> [47] </ref>.
Reference: [48] <author> M. H. Schulz, E. Trischler, T. M. Sarfert, "SOCRATES: </author> <title> A Highly Efficient Automatic Test Pattern Generation System", </title> <journal> IEEE Trans. on Comput.-Aided Design, </journal> <volume> Vol. 7, No. 1, </volume> <pages> pp. 126-137, </pages> <month> January </month> <year> 1988. </year> <institution> 17 MIPS SPECint92 SPECfp92 SPECrateint92 SPECratefp92 SUN 4/670 28.50 23.90 21.80 567.00 517.00 SUN 5/70 105.40 59.60 46.80 1414.00 1110.00 HP9000/735 1832.00 2950.00 Table 1: Performance Rating SPEC SPEC SPEC SPEC AVG MIPS int92 fp92 rateint92 ratefp92 Speedup SUN5/SUN4 3.70 2.49 2.15 2.49 2.15 2.60 HP9000/SUN4 3.23 5.71 4.47 HP9000/SUN5 1.30 2.66 1.98 Table 2: Relative Speedups </institution>
Reference-contexts: Secondly, during test generation of Metal-BFs or All-BFs a large number of the simulated stuck-at faults are redundant. A stuck-at test generator that identifies redundancy efficiently would result in better performance. CONTEST, SOCRATES etc. <ref> [30, 37, 40, 48] </ref> used in [37] are considerably better at this than ATALANTA. We conjecture that the results in [49] would be considerably better if these stuck-at ATPG instead of ATALANTA is used.
Reference: [49] <author> P. J. Thadikaran and S. Chakravarty, </author> <title> "Fast Algorithms for Computing I DDQ tests for Combinational Circuits," </title> <booktitle> IEEE International Symposium on VLSI Design, </booktitle> <year> 1996, </year> <pages> pp. 103-106. </pages>
Reference-contexts: fault simulation algorithm can be made to grow very slowly compared with the growth in the size of the fault list !! Infact, considerable progress has already been made in this direction. 3.1.2 Test Generation Techniques for computing I DDQ tests for All-BFs, Metal-BFs have been addressed both for combinational <ref> [4, 5, 14, 37, 18, 28, 46, 49] </ref> and sequential circuits [34]. Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs <ref> [5, 14, 46, 49] </ref> or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs <ref> [49, 34] </ref>. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in [49]. For All-BFs in sequential circuits the only result is reported in [34]. <p> Some of them target Extracted-BFs [4, 37, 18, 28] while others target either Metal-BFs [5, 14, 46, 49] or 10 All-BFs [49, 34]. For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in <ref> [49] </ref>. For All-BFs in sequential circuits the only result is reported in [34]. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. <p> For Extracted-BFs the best performance is reported in [37]. For Metal-BFs, All-BFs in combinational circuits the best performance is reported in <ref> [49] </ref>. For All-BFs in sequential circuits the only result is reported in [34]. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above, Adj T ime = T ime (MetalBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> For Metal-BFs, All-BFs in combinational circuits the best performance is reported in <ref> [49] </ref>. For All-BFs in sequential circuits the only result is reported in [34]. In Table 7 we compare the performance of the test generator for Metal-BFs [49] and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above, Adj T ime = T ime (MetalBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> The factor 4.47 is from Table 2. Note that the ratio of the test generation time is significantly smaller than the ratio of the number of faults targetted!! In Table 8 we compare the performance of the test generator for All-BFs <ref> [49] </ref> and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above Adj T ime = T ime (AllBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> Note that the ratio of the test generation time is significantly smaller than the ratio of the number of faults targetted!! In Table 8 we compare the performance of the test generator for All-BFs <ref> [49] </ref> and the test generator for Extracted-BFs [37]. In [49] SUN4/670 was used whereas in [37] an HP9000/735 was used. Accordingly, as explained above Adj T ime = T ime (AllBF s) T ime (ExtractedBF s) =4:47. The factor 4.47 is from Table 2. <p> In this case the results are not as good as in the other comparisons that we have made so far. However, we should not rush to conclude that targetting All-BFs is unreasonable. We have to keep a number of points in mind. Firstly, in <ref> [49] </ref> the stuck-at test generator ATALANTA [33] was used. A modified circuit along with a list of stuck-at faults was generated and stored in a file. ATALANTA then read the file from secondary storage and generated some additional vectors. <p> A stuck-at test generator that identifies redundancy efficiently would result in better performance. CONTEST, SOCRATES etc. [30, 37, 40, 48] used in [37] are considerably better at this than ATALANTA. We conjecture that the results in <ref> [49] </ref> would be considerably better if these stuck-at ATPG instead of ATALANTA is used. There is very little data on computing I DDQ tests for either Metal-BFs or All-BFs in sequential circuits. The work reported in [34] is, we believe, very preliminary. The experiments were run on a SUN 5/70. <p> In comparing the running time of the two algorithms we used the same sized initial test set size. Both for All-BFs and Metal-BFs the test set used was the first N vectors from an uncompressed test set for All-BFs from <ref> [49] </ref>. Here, N is the size of the initial test set used in [37].
Reference: [50] <author> P. Thadikaran, S. Chakravarty, </author> <title> "Improved algorithms for selecting I DDQ measurement points", </title> <booktitle> in preperation. </booktitle>
Reference-contexts: The total number of Metal-BFs, All-BFs were computed assuming that the fanout stem along with all its fanout branches correspond to only one node. The numbers reported are the number of BFs prior to fault collapsing by identifying equivalent nodes <ref> [50] </ref>. 3.1.1 Fault Simulation Fault Simulation of I DDQ Tests for All-BFs [15, 51] and Metal-BFs [14, 16, 17] have been studied for both combinational as well as sequential circuits. Among the published results the performance of [51] is the best for both All-BF and Metal-BF. <p> In the context of I DDQ testing, since I DDQ testing is a slow process, the same technique can also be used to identify I DDQ measurement points [39]. These problems have been studied for leakage faults [19], All-BFs and Metal-BFs in both sequential and combinational circuits <ref> [15, 50] </ref>. Only [37] gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs [50] provides the best results for combinational and sequential circuits. In Table 10 ( Table 11 ) we compare results for Extracted-BFs and Metal-BFs ( Extracted-BFs and All-BFs ). <p> These problems have been studied for leakage faults [19], All-BFs and Metal-BFs in both sequential and combinational circuits [15, 50]. Only [37] gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs <ref> [50] </ref> provides the best results for combinational and sequential circuits. In Table 10 ( Table 11 ) we compare results for Extracted-BFs and Metal-BFs ( Extracted-BFs and All-BFs ). In [50] several algorithms are discussed. We use the performance results for the algorithm that results in most compression. <p> Only [37] gives comprehensive data for this problem for Extracted-BFs in combinational circuits. For Metal-BFs, All-BFs <ref> [50] </ref> provides the best results for combinational and sequential circuits. In Table 10 ( Table 11 ) we compare results for Extracted-BFs and Metal-BFs ( Extracted-BFs and All-BFs ). In [50] several algorithms are discussed. We use the performance results for the algorithm that results in most compression. This algorithm also requires the most amount of time. The time & fault ratios were computed as was done in the previous cases.
Reference: [51] <author> P. Thadikaran, S. Chakravarty, J. Patel, </author> <title> "Techniques for Simulating I DDQ Test for Bridging Faults in Sequential Circuits", </title> <journal> IEEE/ACM Fault-Tolerant Computing Symposium, </journal> <year> 1995. </year>
Reference-contexts: The numbers reported are the number of BFs prior to fault collapsing by identifying equivalent nodes [50]. 3.1.1 Fault Simulation Fault Simulation of I DDQ Tests for All-BFs <ref> [15, 51] </ref> and Metal-BFs [14, 16, 17] have been studied for both combinational as well as sequential circuits. Among the published results the performance of [51] is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs. <p> Among the published results the performance of <ref> [51] </ref> is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs. We have some results of our own [51] which we use. Table 3 compares the performance of fault simulation for Extracted-BFs and Metal-BFs for Sequential circuits. <p> Among the published results the performance of <ref> [51] </ref> is the best for both All-BF and Metal-BF. There is almost no published results on fault simulation of Extracted-BFs. We have some results of our own [51] which we use. Table 3 compares the performance of fault simulation for Extracted-BFs and Metal-BFs for Sequential circuits. The test set used is that derived using GENTEST [7]. Only results for ISCAS89 [3] circuits of more than 1000 gates for which GENTEST test set was available are presented.
Reference: [52] <author> S. Venkataraman, J. Rajski, S. Hellebrand, S. Tarnick, </author> <title> "An Efficient BIST Scheme Based on Reseeding of Multiple Polynomial Linear Feedback Shift Registers", </title> <booktitle> International Conference on Computer Aided Design, </booktitle> <pages> pp. 572-577, </pages> <year> 1993. </year>
Reference-contexts: These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation. Clearly, for the required fault simulation, no layout information is available. * In one approach to designing on-chip test generators a test set is used as a guide <ref> [26, 27, 43, 52] </ref>. This approach improves fault coverage and reduces test application time. Since the on-chip test generator has not yet been finalized, the test set used has to be computed without any layout information. * In a full-scan environment reduction of test application time is an important objective.
Reference: [53] <author> H-J Wunderlich, </author> <title> "Self-test Using Unequiprobable Random Patterns," </title> <booktitle> IEEE/ACM Int'l Fault-Tolerant Computing Symposium, </booktitle> <year> 1987, </year> <pages> pp. 258-263. </pages>
Reference-contexts: Since the gate level description is not yet finalized one cannot have any layout information prior to this fault simulation task. * Weighted random patterns are used to reduce test length in a BIST environment <ref> [1, 31, 38, 44, 53, 54, 55] </ref>. In addition to determining an appropriate LFSR, the weight sets have to be computed. These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation.
Reference: [54] <author> H-J Wunderlich, </author> <title> "Multiple Distribution for Biased Random Test Patterns," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <year> 1988, </year> <pages> pp. 236-244. </pages>
Reference-contexts: Since the gate level description is not yet finalized one cannot have any layout information prior to this fault simulation task. * Weighted random patterns are used to reduce test length in a BIST environment <ref> [1, 31, 38, 44, 53, 54, 55] </ref>. In addition to determining an appropriate LFSR, the weight sets have to be computed. These weight sets determine the design of the on-chip 4 test generator. The weight sets are computed using fault simulation.

References-found: 54

