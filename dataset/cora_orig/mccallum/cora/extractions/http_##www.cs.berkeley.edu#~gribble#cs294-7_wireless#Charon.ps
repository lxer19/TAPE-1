URL: http://www.cs.berkeley.edu/~gribble/cs294-7_wireless/Charon.ps
Refering-URL: http://www.cs.berkeley.edu/~fox/charon.html
Root-URL: 
Email: -fox,gribble-@cs.berkeley.edu  
Title: Security On the Move: Indirect Authentication Using Kerberos  
Author: Armando Fox and Steven Gribble 
Address: Berkeley  
Affiliation: University of California at  
Abstract: Even as mobile computing and network computing are gaining momentum, Internet security is sharing the spotlight. Security and authentication on open networks is already a difficult problem, even without the additional risks posed by wireless media and the additional software constraints imposed by mobile computing devices with capabilities more modest than those of full-blown laptops. We describe an implemented indirect protocol called Charon, which provides authentication and secure communication to clients by leveraging the strong protocol and deployed infrastructure of Kerberos IV. Charon consists of a portable proxy module that runs as untrusted, unprivileged code, and an extremely lightweight client module that runs quite efficiently even on our Sony MagicLink PDA. This partitioning of functionality makes Charon attractive for ISPs and network computing as well as existing mobile devices. Charons security is at least as strong as that of Kerberos--the users password never leaves the mobile device, and Charon cannot obtain Ker-beros services for the user without the users explicit cooperation on each request. In effect Charon allows the mobile device to function as a smart card. We describe our implementation of the protocol and a sample secure rlogin application, and also describe how Charon can be used to implement cross-roaming agreements between mobile computing domains. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. M. Bellovin and M. Merritt. </author> <title> Limitations of the Kerberos authentication system. </title> <booktitle> In Proceedings USENIX Winter Con ference 1991, </booktitle> <address> Dallas, Texas, USA, </address> <year> 1991. </year>
Reference-contexts: Surveys have shown that mobile users want access to the Internet and their desktop, not a new killer app for mobile devices. Wireless infrastructure is rapidly being deployed to enable unteth-ered mobile computing [2]. Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem <ref> [3, 1, 4] </ref>, and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link [5, 6, 7]. However, link-level encryption and authentication solves only part of the problem. <p> The strengths and weaknesses of Kerberos are analyzed in detail in <ref> [1] </ref>. The infrastructure necessary to support Kerberos has been deployed within the administrative domains of many sites. Presumably the administrators of these domains have taken reasonable precautions to secure the trusted components of Kerberos. <p> CfiCh: P, -T c,tgs -K tgs , -A c -K c,tgs Request ticket for proxy service. The client must construct an authenticator A c and encrypt it using K c,tgs , obtained in step 4. (Compare this with message 1: Bellovin and Merrick have observed <ref> [1] </ref> that a Kerberos session key is really a multi-session key, since it is used for all transactions with that ser vice for the lifetime of the ticket. <p> This implies that such the attacker can then obtain all session keys, secret keys, and tickets that Charon ever possesses. 2: There is a well-known Kerberos attack that involves compromising a network time service (see, for instance, <ref> [1] </ref>). We do not address this attack, but merely assert that our protocol is no worse that Kerberos in this regard. 8 Fortunately, this includes neither the clients key K c , nor the session key K c,tgs for constructing authenticators.
Reference: [2] <author> D. Cox. </author> <title> Wireless personal communications: What is it? IEEE Personal Communications, </title> <booktitle> pages 2035, </booktitle> <month> Apr </month> <year> 1995. </year>
Reference-contexts: Surveys have shown that mobile users want access to the Internet and their desktop, not a new killer app for mobile devices. Wireless infrastructure is rapidly being deployed to enable unteth-ered mobile computing <ref> [2] </ref>. Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem [3, 1, 4], and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link [5, 6, 7].
Reference: [3] <author> R. Needham and M. Schroeder. </author> <title> Using encryption for authentication in large networks of computers. </title> <journal> CACM, </journal> <volume> 21(12):993999, </volume> <month> December </month> <year> 1978. </year>
Reference-contexts: Surveys have shown that mobile users want access to the Internet and their desktop, not a new killer app for mobile devices. Wireless infrastructure is rapidly being deployed to enable unteth-ered mobile computing [2]. Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem <ref> [3, 1, 4] </ref>, and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link [5, 6, 7]. However, link-level encryption and authentication solves only part of the problem. <p> Tickets are distributed by a central trusted server within each administrative domain, and are constructed so that only clients possessing the appropriate key (s) are able to decrypt and use them. Kerberos includes specific features to prevent forgery of client or server identity, detect replay attacks <ref> [3] </ref>, establish secure channels between endpoints through safe distribution of temporary session keys, and minimize the likelihood that the users Kerberos password will be compromised (it never leaves the users workstation, and all traces of it are destroyed once the user has authenticated herself).
Reference: [4] <author> H. Jerome and J. </author> <title> Saltzer. </title> <booktitle> The protection of information in computer systems. Proceedings of the IEEE, </booktitle> <volume> 63(9):1278 1308, </volume> <month> Sep </month> <year> 1975. </year>
Reference-contexts: Surveys have shown that mobile users want access to the Internet and their desktop, not a new killer app for mobile devices. Wireless infrastructure is rapidly being deployed to enable unteth-ered mobile computing [2]. Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem <ref> [3, 1, 4] </ref>, and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link [5, 6, 7]. However, link-level encryption and authentication solves only part of the problem.
Reference: [5] <author> A. Aziz and W. Diffie. </author> <title> Privacy and authentication for wireless local area networks. </title> <journal> IEEE Personal Communications, </journal> <pages> pages 2531, </pages> <note> First Quarter 1994. </note>
Reference-contexts: Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem [3, 1, 4], and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link <ref> [5, 6, 7] </ref>. However, link-level encryption and authentication solves only part of the problem. Users still need to authenticate themselves to services and servers higher than this level.
Reference: [6] <author> D. Brown. </author> <title> Techniques for privacy and authentication in personal communication systems. </title> <journal> IEEE Personal Communica tions, </journal> <month> August </month> <year> 1995. </year>
Reference-contexts: Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem [3, 1, 4], and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link <ref> [5, 6, 7] </ref>. However, link-level encryption and authentication solves only part of the problem. Users still need to authenticate themselves to services and servers higher than this level. <p> The proxy can, of course, re-encrypt the data (using the client-to-proxy session key K c,p obtained as described in sec tion 2.3) before forwarding it to the client. Re-encryption may be unnecessary if the network can perform separate link-level encryption, as is the case with GSM <ref> [6] </ref>. Granting the proxy session keys to Kerberized services implies a certain amount of trust in the proxy.
Reference: [7] <author> Y. F. et al. </author> <title> Security issues in a cdpd wireless network. </title> <journal> IEEE Personal Communications, </journal> <volume> 2(4):1627, </volume> <month> Aug </month> <year> 1995. </year>
Reference-contexts: Unfortunately, security and authentication in unprotected networks such as the Internet is a difficult problem [3, 1, 4], and the wireless medium is physically easier to compromise than wired media. Much attention has been focused recently on securing this link <ref> [5, 6, 7] </ref>. However, link-level encryption and authentication solves only part of the problem. Users still need to authenticate themselves to services and servers higher than this level.
Reference: [8] <author> T. R. Halfhill. </author> <title> Inside the web pc. </title> <journal> Byte Magazine, </journal> <pages> pages 44 56, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Users still need to authenticate themselves to services and servers higher than this level. Users of mobile computers will want access to resources in a visited mobile environment, on the strength of credentials validated by their home environment. Users of network computing devices <ref> [8] </ref>, and the service providers to which those devices connect, will both want authentication for connection to the service and privacy when retrieving content, especially sensitive content such as email. <p> Such devices are lighter and offer much higher battery life, but they are useless without extensive network and computing support infrastructure. Somewhere between these extremes are PDAs and their future cousins, network computers <ref> [8] </ref>.
Reference: [9] <author> J. G. Steiner, C. Neuman, and J. I. Schiller. </author> <title> Kerberos: An authentication service for open network systems. </title> <booktitle> In Proceedings USENIX Winter Conference 1988, pages 191202, </booktitle> <address> Dallas, Texas, USA, </address> <month> February </month> <year> 1988. </year>
Reference-contexts: users of pagers and similar communication devices can benefit from a mutually-authenticated, secure communication channel, if the mechanism is lightweight enough that it is not cumbersome to implement on such devices. 1.2 Charon: Indirect Authentication and Secure Communication In this paper we present Charon, an implemented protocol based on Kerberos <ref> [9] </ref> for indirect authentication and secure communications with PDA-class mobile devices. By indirect, we mean that most of the computational resources needed to conduct the authentication protocol and establish a secure channel are located at a proxy, a process running on a desktop workstation in the wired infrastructure. <p> NCs in particular are expected to comprise an increasingly large target audience of users (and service providers) who will certainly be concerned about authenticated and secure access to the network infrastructure. 1.4 Why Kerberos? Kerberos <ref> [9] </ref> is a time-tested, widely-deployed system that provides authentication and the establishment of secure channels in open networks. Kerberos clients authenticate themselves to servers by presenting tickets for each service. <p> Specifically, the client retains the session key between itself and the TGS. This key is required in order to construct the timestamped authenticators (see <ref> [9] </ref> or Appendix A) that must be presented with each request for service; therefore Charon cannot obtain service on behalf of the client without the clients explicit cooperation. 2.3 Client-to-Proxy Authentication: Detailed Description In describing the messages exchanged in the Charon protocol, we use the following terminology: Kerberized service: A service <p> In a sense, the PDA has become a smart card in this capacity. Steiner et al. mention this idea in <ref> [9] </ref>. 5.4 Conclusions We have presented an implemented protocol, Charon, for authentication and secure communication between a client (PDA-class device or network computer) and a proxy (or service attachment point). Charon boasts the following properties: Charon is built on top Kerberos, a widely-deployed, secure, and field-tested authentication system.
Reference: [10] <author> C. Brooks, M. S. Mazer, S. Meeks, and J. Miller. </author> <title> Application-specific proxy servers as http stream transducers. </title> <booktitle> In Proceedings of the Fourth International World Wide Web Conference, </booktitle> <month> Dec </month> <year> 1995. </year>
Reference-contexts: All three benefits are realized without requiring the full Kerberos library to be implemented on the client: instead the functionality is partitioned between the client and the proxy. The idea of proxied service has been applied in many scenarios <ref> [10, 11, 12, 13] </ref>. The application architecture of the Daedalus wireless networking project [14], called GloMop, is built around the idea of proxied services; Charon was originally implemented in this context, although its applicability is much farther-reaching and its implementation essentially independent of the GloMop architecture.
Reference: [11] <author> M. A. et al. </author> <title> Caching proxies: Limitations and potentials. </title> <booktitle> In Proceedings of the Fourth International World Wide Web Conference, </booktitle> <address> Boston, MA, USA, </address> <month> Dec </month> <year> 1995. </year>
Reference-contexts: All three benefits are realized without requiring the full Kerberos library to be implemented on the client: instead the functionality is partitioned between the client and the proxy. The idea of proxied service has been applied in many scenarios <ref> [10, 11, 12, 13] </ref>. The application architecture of the Daedalus wireless networking project [14], called GloMop, is built around the idea of proxied services; Charon was originally implemented in this context, although its applicability is much farther-reaching and its implementation essentially independent of the GloMop architecture.
Reference: [12] <author> Netscape Communications Corporation. </author> <title> The Netscape Proxy Server (home page). </title> <address> "http://www.pinncomp.com/ netscape/proxy_server.html". </address>
Reference-contexts: All three benefits are realized without requiring the full Kerberos library to be implemented on the client: instead the functionality is partitioned between the client and the proxy. The idea of proxied service has been applied in many scenarios <ref> [10, 11, 12, 13] </ref>. The application architecture of the Daedalus wireless networking project [14], called GloMop, is built around the idea of proxied services; Charon was originally implemented in this context, although its applicability is much farther-reaching and its implementation essentially independent of the GloMop architecture.
Reference: [13] <author> B. Zenel. </author> <title> A proxy based filtering mechanism for the mobile environment. </title> <type> Thesis Proposal, </type> <month> Mar </month> <year> 1996. </year>
Reference-contexts: All three benefits are realized without requiring the full Kerberos library to be implemented on the client: instead the functionality is partitioned between the client and the proxy. The idea of proxied service has been applied in many scenarios <ref> [10, 11, 12, 13] </ref>. The application architecture of the Daedalus wireless networking project [14], called GloMop, is built around the idea of proxied services; Charon was originally implemented in this context, although its applicability is much farther-reaching and its implementation essentially independent of the GloMop architecture.
Reference: [14] <author> Randy H. Katz et al. </author> <title> The daedalus project (home page). </title> <publisher> ht tp://daedalus.cs.berkeley.edu. </publisher>
Reference-contexts: The idea of proxied service has been applied in many scenarios [10, 11, 12, 13]. The application architecture of the Daedalus wireless networking project <ref> [14] </ref>, called GloMop, is built around the idea of proxied services; Charon was originally implemented in this context, although its applicability is much farther-reaching and its implementation essentially independent of the GloMop architecture. The paper is organized as follows. <p> Charon can be used to authenticate the users entitled to the service, and if the users so desire, to provide a secure connection to other Internet resources such as their email. 5.2 Charon, Daedalus, and GloMop The Daedalus project <ref> [14] </ref> is investigating wireless overlay networks and cross-roaming agreements between administrative domains. Proxied services are provided to wireless clients in the Daedalus system via a proxy architecture called GloMop, which is described extensively elsewhere [31,19].
Reference: [15] <institution> Geoworks and Nokia. Nokia 9000 communicator (home page). </institution> <note> "http://www.geoworks.com/htmpages/9000.htm". </note>
Reference-contexts: The paper is organized as follows. In the remainder of this section we motivate our approach by showing why PDAs, network computers, smart personal communicators (such as the GeoWorks-based Nokia 9000 <ref> [15] </ref>), and similar devices represent an interesting design point, despite placing significant constraints on software development. We 2 describe why Kerberos is a desirable mechanism but difficult to port to such clients, and how our approach circumvents these constraints.
Reference: [16] <editor> B. Barringer et al. Infopad: </editor> <title> A system design for portable multimedia access. </title> <booktitle> In Calgary Wireless 94 Conference, </booktitle> <month> July </month> <year> 1994. </year> <note> Available at http://infopad.eecs.berkeley.edu/info pad-ftp/papers/1994/infopad_system_design.wireless94. </note>
Reference-contexts: Laptops pay for these resources in physical size, weight (typically 3-6 pounds), and poor battery life (typically 2-5 hours). At the other end of the spectrum are devices such as the InfoPad <ref> [16] </ref>, which function as mobile terminals and have virtually no local computational power or storage capability. Such devices are lighter and offer much higher battery life, but they are useless without extensive network and computing support infrastructure. Somewhere between these extremes are PDAs and their future cousins, network computers [8].
Reference: [17] <author> Sun Labs. </author> <title> The java language: </title> <note> A white paper. Available at http://java.sun.com. </note>
Reference-contexts: Both have moderate computational and memory resources and offer significant simplicity and cost advantages compared to laptops; PDAs typically store applications and data in persistent memory and can operate stand-alone, whereas NCs rely on a network infrastructure for access to both content and applications in portable languages such as Java <ref> [17] </ref>.
Reference: [18] <author> E. Anderson. </author> <type> Personal communication, </type> <month> May </month> <year> 1996. </year>
Reference-contexts: Kerberos is particularly problematic, and has a reputation among system administrators of being notoriously difficult to compile even on Unix systems <ref> [18] </ref>. Besides its size and complexity (9,000 lines of C source), it relies heavily on Unix idioms and libraries, use of Unix I/O (including Berke-ley sockets) and memory services, and knowledge of hardware semantics such as the byte ordering and word-size of the host architecture.
Reference: [19] <institution> Currently under blind review. </institution>
Reference-contexts: We motivate the proxied service model by pointing to the success of our proxy architecture at addressing client variation with respect to hardware, software and connectivity <ref> [19] </ref>. For example, we have built (separately) an MH-compatible MIME email client for the Sony MagicLink. This client retrieves MIME email via a proxy which performs distillation [20] on included MIME images, optimizing the images for display on the PDAs screen. <p> Our experience will allow us to evaluate the above claim.] 3.7 Performance of DES on PDA Our recent experience porting a GIF renderer <ref> [19] </ref> and audio stream decoder [26] to the MagicLink device strongly suggested that the limiting factor in Charon performance would be the speed of DES encryption and decryption.
Reference: [20] <author> A. Fox and E. A. Brewer. </author> <title> Reducing www latency and bandwidth requirements via real-time distillation. </title> <booktitle> In Proceedings of the Fifth International World Wide Web Conference, Par is, </booktitle> <address> France, </address> <month> May </month> <year> 1996. </year> <title> World Wide Web Consortium. </title>
Reference-contexts: For example, we have built (separately) an MH-compatible MIME email client for the Sony MagicLink. This client retrieves MIME email via a proxy which performs distillation <ref> [20] </ref> on included MIME images, optimizing the images for display on the PDAs screen. Clearly, such transformations are impossible unless the proxy has access to decrypted data. <p> A good target for such an experiment is the UC Berkeley Office of Telecommunications Services (TCS), which provides dial-up IP access via 14.4 or 28.8 modem to about 20,000 users in the UC Berkeley community. Since low-speed connections make Web surfing painful, we plan to deploy distillation-based Web proxies <ref> [20] </ref> as a value-added service to end users.
Reference: [21] <author> L. Wall and R. L. Schwartz. </author> <title> Programming perl. </title> <publisher> OReilly & Associates, Inc., </publisher> <year> 1991. </year>
Reference-contexts: We maintain that the required amount of trust is not unreasonable: it is the same trust placed in existing Kerberized services such as krlogind. 3 Charon Implementation 3.1 Charon Protocol Module For rapid prototyping and portability, we have been using Perl 5 <ref> [21] </ref> as our prototyping language.
Reference: [22] <author> National Bureau of Standards. </author> <title> Data encryption standard. </title> <type> Technical Report Publication 46, </type> <institution> Federal Information Pro cessing Standards, </institution> <year> 1977. </year>
Reference-contexts: the Ker-beros IV client-side library libkrb.a from Perl required some glue code, which was relatively painless to create due to the extensive facilities Perl 5 provides for exactly this linking process. [We expect to make this software freely available by final revision time.] Kerberos also makes use of a DES <ref> [22] </ref> encryption library libdes.a. Clients normally do not access the encryption library directly: they compose and decompose encrypted text via calls to the Kerberos library, which in turn calls the 6 encryption library.
Reference: [23] <editor> ITU-T Recommendation v.42. </editor> <booktitle> International Telecommuni cation Union, </booktitle> <month> March 93. </month>
Reference-contexts: Session keys happen to be the first 8 bytes of a ticket, so no complex parsing of the ticket structure is necessary by clients. Communicate with the proxy over some sort of reliable stream. In our implementation, we used a dial-in connection and a standard LAPM-capable <ref> [23] </ref> modem, obviating the need for a TCP/IP stack on the client. Perform DES encryption and decryption. The DES library is the most complex component of the client-side Charon implementation. This is a remarkable statement, given the relative complexity of the full Kerberos protocol and implementation.
Reference: [24] <institution> Sony Corporation. Sony MagicLink PDA (home page). "ht tp://www.sel.sony.com/SEL/Magic/". </institution>
Reference-contexts: Our design pushes this complexity off of the client while maintaining the security and integrity of Kerberos. The design also completely shields client-side applications from the details of the authentication mechanism. We chose to implement the client-side components of Charon on a Sony MagicLink PDA <ref> [24] </ref>, which features a relatively rich OS (MagicCap) and a C compiler. Nuances of the MagicCap OS forced us to rewrite much of the libdes library. Our implementation of the MagicCap DES library contains about 1200 lines of source code, resulting in a compiled image size of about 30KB.
Reference: [25] <institution> Geos operating system for PDAs (home page). </institution> <note> "http:// www.geoworks.com/htmpages/sso.htm". </note>
Reference-contexts: file that describes the format and contents of Charon protocol messages between the client and the proxy is actually used as input to a recursive-descent parser, which generates code to parse and verify the integrity of the different messages. [Note to reviewers: implementations of Charon clients in Java [17]and Geos <ref> [25] </ref> are currently underway.
Reference: [26] <author> S. Gribble. </author> <title> Real-time streams to PDAs. </title> <note> "http:// www.cs.berkeley.edu/~gribble/cs294-3_multimedia/ project/project.html". </note>
Reference-contexts: Our experience will allow us to evaluate the above claim.] 3.7 Performance of DES on PDA Our recent experience porting a GIF renderer [19] and audio stream decoder <ref> [26] </ref> to the MagicLink device strongly suggested that the limiting factor in Charon performance would be the speed of DES encryption and decryption.
Reference: [27] <author> M. Burrows, M. Abadi, and R. Needham. </author> <title> A logic of authentication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(1):18 36, </volume> <month> Feb </month> <year> 1990. </year> <month> 11 </month>
Reference-contexts: The attacker could try to take over the existing krlogin session by attacking the TCP connection, but without the original krlogin ticket, the attacker cannot discover the session key being used to encrypt session traffic. 4.5 Strength of Charons Protocol In <ref> [27] </ref>, a logic for examining the integrity of an authentication protocol is described. This logic was used to formally verify the correctness of the Kerberos protocol, and to help extract the list of assumptions that must be made for the protocol to remain valid. <p> This logic was used to formally verify the correctness of the Kerberos protocol, and to help extract the list of assumptions that must be made for the protocol to remain valid. The same proof of the Kerberos protocol from <ref> [27] </ref> can be used unmodified to prove the correctness of the Charon handshake protocol.
Reference: [28] <author> W. R. Cheswick and S. M. Bellovin. </author> <title> Firewalls and Internet Security: Repelling the Wily Hacker. </title> <publisher> Addison-Wesley Pro fessional Computing Series. Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Net-worked filesystem attacks resulting in unauthorized write access to a filesystem <ref> [28] </ref> or on-the-wire binary patching [29] can result in compromised binaries being executed on the workstation, thus compromising the workstation. We guard against this by running Charon and the proxy from a local file system, trusting the compiler that generated the executables.
Reference: [29] <author> I. Goldberg, D. Wagner, E. A. Brewer, and P. Gauthier. </author> <title> Basic flaws in internet security and commerce. </title> <note> "http:// www.cs.berkeley.edu/ gauthier/endpoint-security.html". </note>
Reference-contexts: Net-worked filesystem attacks resulting in unauthorized write access to a filesystem [28] or on-the-wire binary patching <ref> [29] </ref> can result in compromised binaries being executed on the workstation, thus compromising the workstation. We guard against this by running Charon and the proxy from a local file system, trusting the compiler that generated the executables.
Reference: [30] <author> S. M. </author> <title> Bellovin. </title> <type> Personal communication, </type> <month> May </month> <year> 1996. </year>
Reference-contexts: Since programs of nontrivial complexity represent inherent security weaknesses which have been successfully exploited <ref> [30] </ref>, we prefer to avoid the traditional method and are still investigating alternate ways to provide legitimate users access to non-Kerberized services.
Reference: [31] <author> Eric A. Brewer et al. </author> <title> The GloMop project (home page). </title> <publisher> ht tp://www.cs.berkeley.edu/~fox/glomop. </publisher>
References-found: 31

