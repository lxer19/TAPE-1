URL: http://www.cs.ucl.ac.uk/staff/c.perkins/MM-Briefing-Day/cccp.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/c.perkins/MM-Briefing-Day/
Root-URL: http://www.cs.ucl.ac.uk
Email: M.Handley@cs.ucl.ac.uk  
Title: The Conference Control Channel Protocol (CCCP): A scalable base for building conference control applications  
Author: Mark Handley, Ian Wakeman and Jon Crowcroft 
Address: College London  
Affiliation: University  
Abstract: This paper presents the Conference Control Channel Protocol (CCCP), a new scheme intended for controlling conferences ranging from small, tightly coupled meetings, to extremely large loosely coupled seminars. We describe the requirements of such a scheme, and present a framework for building systems that connect together new and existing applications. 
Abstract-found: 1
Intro-found: 1
Reference: [ara] <author> M. Arango et al: </author> <title> Touring Machine: A software platform for distributed multimedia applications, IFIP Upper Layer Protocols, Architectures and Applications, </title> <address> Vancouver Canada, </address> <month> June </month> <year> 1992 </year>
Reference-contexts: The previous generation of conferencing tools, such as CAR, mmconf, etherphone and the Touring Machine ([han], [cro], [sch], [vin] and <ref> [ara] </ref>), were based on cen-tralised architectures, where a central application on a central machine acted as the repository for all information relating to the conference.
Reference: [bir] <author> Birman K. P., Schiper, A. and Stephenson P. </author> <year> (1991), </year> <title> Lightweight Causal and Atomic Group Multicast, </title> <journal> ACM Transactions on Computer Systems 9(3), </journal> <pages> 272-314 </pages>
Reference-contexts: The underlying mechanism can then be optimised later for conditions that were not initially foreseen, without requiring a re-write of the application software. There are a number of "reliable" multicast schemes available, such as [pet] and <ref> [bir] </ref>, which can be used to build consensus and agreement protocols in asynchronous distributed systems. <p> It is then up to the application to implement the desired global ordering algorithm and/or clock synchronisation scheme using one of the available protocols and algorithms such as NTP [mil] or ordering protocols such as [lam], <ref> [bir] </ref>, or [pet]. 3.5 A few examples Before we describe what should comprise CCCP, we will present a few simple examples of CCCP in action.
Reference: [cas] <author> S. Casner: </author> <title> First IETF Internet Audiocast, </title> <journal> ACM SIG-COMM Computer Communication Review, </journal> <volume> 22, pp92-97, </volume> <month> July </month> <year> 1992 </year>
Reference: [cro] <author> T. Crowley et al: MMConf: </author> <title> An infrastructure for building Shared Multimedia Applications, </title> <booktitle> Proceedings of CSCW '90, </booktitle> <address> Los Angeles, USA, </address> <month> October </month> <year> 1990 </year>
Reference-contexts: We show that a simple protocol acting over a conference specific communications channel, named the Conference Control Channel or CCC, will perform all tasks within the scope of conference control. The previous generation of conferencing tools, such as CAR, mmconf, etherphone and the Touring Machine ([han], <ref> [cro] </ref>, [sch], [vin] and [ara]), were based on cen-tralised architectures, where a central application on a central machine acted as the repository for all information relating to the conference.
Reference: [fre] <author> Ron Frederick: </author> <title> nv, UNIX Manual Pages, </title> <institution> Xerox Palo Alto Research Centre </institution>
Reference-contexts: This multicast backbone or Mbone [mac] has been used for a number of applications including multimedia (audio, video and shared workspace) conferencing. These applications involved include vat (LBL's Visual Audio Tool), ivs (INRIA Video-conferencing System, [tur]), nv (Xerox's Network Video tool, <ref> [fre] </ref>) and wb (LBL's shared whiteboard) amongst others.
Reference: [han] <author> Handley, MJ et al: </author> <title> Multimedia conferencing: from prototype to National pilot, </title> <booktitle> Proc INET '92, </booktitle> <pages> pp 483-490, </pages> <publisher> Internet Society, </publisher> <address> Reston, VA, USA, </address> <year> 1992. </year>
Reference-contexts: No control. Scaling from tightly coupled to loosely coupled conferences: CCCP originates in part as a result of experience gained from tightly coupled centralised systems, such as the CAR Multimedia Conference Control system <ref> [han] </ref> and also from Mbone based loosely coupled conferences. Tightly coupled conferences have advantages for small conferences where membership needs to be controlled. Loosely coupled conferences are the only way to achieve scalability, but the current lightweight sessions are too unrestricted for some uses.
Reference: [ha2] <author> Handley, MJ and Clayman, </author> <title> S: Specification of the MICE Conference Management and Multiplexing Centre, MICE Project Internal Report, </title> <month> Jan </month> <year> 1994. </year> <month> ftp://cs.ucl.ac.uk/mice/reports/draft-cmmc-spec-2.ps.Z </month>
Reference-contexts: These requirements have dictated that a number of multiplexing points are used to provide the necessary format conversion and multiplexing to interwork between the multicast workstation based domain and unicast (whether IP or ISDN) hardware based domain <ref> [ha2] </ref> and [ha3].
Reference: [ha3] <author> M. Handley, P. Kirstein, A. Sasse: </author> <title> Multimedia Integrated Conferencing for European Researchers (MICE): Piloting Activities and the Conference Management and Multiplexing Centre, Computer Networks and ISDN Systems, V 26, </title> <address> pp275-290, </address> <month> Nov </month> <year> 1993 </year>
Reference-contexts: These requirements have dictated that a number of multiplexing points are used to provide the necessary format conversion and multiplexing to interwork between the multicast workstation based domain and unicast (whether IP or ISDN) hardware based domain [ha2] and <ref> [ha3] </ref>.
Reference: [ha4] <author> Mark Handley, Van Jacobson: </author> <title> SDP Session Description Protocol, </title> <type> Internet Draft, </type> <month> March </month> <year> 1995. </year>
Reference-contexts: We maintain that the problem of meta-conference management is outside the bounds of the conference control architecture, and should be addressed using tools such as LBL's Session Directory <ref> [ha4] </ref>, traditional directory services or through external mechanisms such as email. The conference control system is intended to maintain consistency of state amongst the participants as far as is practical and not to address the social issues of how to bring people together, and co-ordinate initial information.
Reference: [ja1] <author> Van Jacobson and Steve McCanne: vat, </author> <title> UNIX Manual Pages, </title> <institution> Lawrence Berkeley Laboratory, Berkeley, </institution> <address> CA. </address>
Reference: [ja2] <author> Van Jacobson and Steve McCanne: </author> <title> Using the LBL Network Whiteboard, </title> <institution> Lawrence Berkeley Laboratory, Berkeley, </institution> <address> CA. </address>
Reference-contexts: An alternative approach to the centralised model is the lightweight session model promoted by Van Jacobson and exemplified by the vat [cas],[ja1] and wb <ref> [ja2] </ref> applications. In the lightweight session model, connectivity is regarded as inherently unreliable. Our observations of the Mbone (see 2.1) show that humans can cope with a degree of inconsistency that arises from partitioned networks and lost messages, as long as the distributed state will tend to converge in time.
Reference: [lam] <author> Leslie Lamport, </author> <title> Time, Clocks and the Ordering of Events in a Distributed System, </title> <journal> Comm. of the ACM, </journal> <volume> V 21, pp558-565, </volume> <month> July </month> <year> 1978 </year>
Reference-contexts: It is then up to the application to implement the desired global ordering algorithm and/or clock synchronisation scheme using one of the available protocols and algorithms such as NTP [mil] or ordering protocols such as <ref> [lam] </ref>, [bir], or [pet]. 3.5 A few examples Before we describe what should comprise CCCP, we will present a few simple examples of CCCP in action.
Reference: [mac] <author> Mike Macedonia and Don Brutzman: </author> <title> MBONE provides Audio and Video across the Internet, </title> <journal> IEEE Computer, </journal> <volume> v27,4, </volume> <month> April </month> <year> 1994 </year>
Reference-contexts: This multicast backbone or Mbone <ref> [mac] </ref> has been used for a number of applications including multimedia (audio, video and shared workspace) conferencing. These applications involved include vat (LBL's Visual Audio Tool), ivs (INRIA Video-conferencing System, [tur]), nv (Xerox's Network Video tool, [fre]) and wb (LBL's shared whiteboard) amongst others.
Reference: [mil] <author> D. Mills: </author> <title> Network Time Protocol (v3), </title> <address> RFC1305, </address> <month> Septem-ber </month> <year> 1992 </year>
Reference-contexts: It is then up to the application to implement the desired global ordering algorithm and/or clock synchronisation scheme using one of the available protocols and algorithms such as NTP <ref> [mil] </ref> or ordering protocols such as [lam], [bir], or [pet]. 3.5 A few examples Before we describe what should comprise CCCP, we will present a few simple examples of CCCP in action.
Reference: [pet] <author> Peterson, L. L., Bucholz, N. C., and Schlichting, R. D. </author> <title> (1989) Preserving and Using Context Information in Inter-process Communications, </title> <journal> ACM Transactions on Computing Systems, </journal> <volume> 7,(3), </volume> <pages> 217-246 </pages>
Reference-contexts: The underlying mechanism can then be optimised later for conditions that were not initially foreseen, without requiring a re-write of the application software. There are a number of "reliable" multicast schemes available, such as <ref> [pet] </ref> and [bir], which can be used to build consensus and agreement protocols in asynchronous distributed systems. <p> It is then up to the application to implement the desired global ordering algorithm and/or clock synchronisation scheme using one of the available protocols and algorithms such as NTP [mil] or ordering protocols such as [lam], [bir], or <ref> [pet] </ref>. 3.5 A few examples Before we describe what should comprise CCCP, we will present a few simple examples of CCCP in action.
Reference: [sch] <author> Eve Schooler: </author> <title> The Connection Control Protocol: Architecture Overview ISI/RS-92-294 January 1992 </title>
Reference-contexts: We show that a simple protocol acting over a conference specific communications channel, named the Conference Control Channel or CCC, will perform all tasks within the scope of conference control. The previous generation of conferencing tools, such as CAR, mmconf, etherphone and the Touring Machine ([han], [cro], <ref> [sch] </ref>, [vin] and [ara]), were based on cen-tralised architectures, where a central application on a central machine acted as the repository for all information relating to the conference.
Reference: [she] <author> Scott Shenker, Abel Weinrib and Eve Schooler: </author> <title> An Algorithm for Managing Shared Teleconferencing State, </title> <type> Internet Draft, </type> <month> Oct </month> <year> 1993 </year>
Reference-contexts: An example is the algorithm for managing shared teleconferencing state proposed by Scott Shenker, Abel Weinrib and Eve Schooler <ref> [she] </ref>. For algorithms that do require global ordering and clock synchronisation, CCCP will pass the sequence numbers and timestamps of messages through to the application.
Reference: [stu] <author> Suart Stubblebine: </author> <title> Security Services for Multimedia Conferencing, </title> <booktitle> Proc. of the 16th National Computer Security Conference, </booktitle> <address> Baltimore, Ma, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: Key distribution is through external means, and manual entry. Whilst this does provide a limited degree of confidentiality and protection, we plan to further investigate security for conferencing through the model offered by CCCP. Stubblebine <ref> [stu] </ref> identifies scalable key distribution as a problem for conferences. Since access permissions may change for individuals during a conference, new keys may need to be distributed quickly and reliably to the recipients.
Reference: [tur] <institution> H.261 Software Codec for Videoconferencing over the Internet, </institution> <note> Research Report No 1834, </note> <institution> INRIA, Sophia-Antipolis, France, </institution> <month> January </month> <year> 1993 </year>
Reference-contexts: This multicast backbone or Mbone [mac] has been used for a number of applications including multimedia (audio, video and shared workspace) conferencing. These applications involved include vat (LBL's Visual Audio Tool), ivs (INRIA Video-conferencing System, <ref> [tur] </ref>), nv (Xerox's Network Video tool, [fre]) and wb (LBL's shared whiteboard) amongst others.
Reference: [vin] <author> Harrick M. Vin et al: </author> <title> Multimedia Conferencing in the Etherphone Environment, </title> <journal> IEEE Computer, </journal> <volume> v24,10, </volume> <month> October </month> <year> 1991 </year>
Reference-contexts: We show that a simple protocol acting over a conference specific communications channel, named the Conference Control Channel or CCC, will perform all tasks within the scope of conference control. The previous generation of conferencing tools, such as CAR, mmconf, etherphone and the Touring Machine ([han], [cro], [sch], <ref> [vin] </ref> and [ara]), were based on cen-tralised architectures, where a central application on a central machine acted as the repository for all information relating to the conference.
Reference: [zha] <author> L. Zhang, S.Deering, D.Estrin, S.Schenker and D.Zappala: RSVP: </author> <title> A New Resource ReSerVation Protocol, </title> <journal> IEEE Network, </journal> <volume> pp-8-18, </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: * Floor management Who or what has control over the input to particular applications. * Network management Requests to set up and tear down media connections between end-points (no matter whether they be analogue through a video switch, a request to set up an ATM virtual circuit, or using RSVP <ref> [zha] </ref> over the internet), and requests from the network to change band width usage because of congestion. * Meta-conference management How to initiate and finish conferences, how to advertise their availability, and how to invite people to join.
References-found: 21

