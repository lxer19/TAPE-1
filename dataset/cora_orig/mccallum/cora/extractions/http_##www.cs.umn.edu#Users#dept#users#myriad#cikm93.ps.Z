URL: http://www.cs.umn.edu/Users/dept/users/myriad/cikm93.ps.Z
Refering-URL: http://www.cs.umn.edu/Users/dept/users/myriad/
Root-URL: http://www.cs.umn.edu
Title: Query Optimization and Processing in Federated Database Systems  
Author: Ee-Peng Lim, Jaideep Srivastava 
Address: Minneapolis, MN 55455  
Affiliation: Department of Computer Science University of Minnesota  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. Ceri and G. Pelagatti. </author> <title> Distributed Databases: </title> <booktitle> Principles and Systems. </booktitle> <publisher> McGraw Hill, </publisher> <year> 1984. </year>
Reference-contexts: A constrained query tree, denoted by CQT , is a tree whose leaf nodes represent relations, and internal nodes represent operations. A CQT differs from a conventional binary operator tree <ref> [1] </ref> in that it represents operators which satisfy commutativity and associativity properties as n-way unordered operators. Instead of using n adjacent binary join (union,2-way outerjoin) nodes to join (union,2-way outer-join) n+1 relations, a CQT requires only one n+1 way join (union) node.
Reference: [2] <author> U. Dayal. </author> <booktitle> Query Processing in Multidatabase Systems, </booktitle> <pages> pages 81-108. </pages> <publisher> Springer-verlag, </publisher> <year> 1985. </year>
Reference-contexts: AVCR involves resolving the discrepancy between related attributes of two database entries that model the same real-world entity. A general solution to the attribute value conflict problem is to define some functions, or general program codes, which derive the integrated attributes from the set of local attributes <ref> [5, 2] </ref>. In this paper, we have selected a minimal set of core operations that includes the set of relational operations, i.e. foe,,1,,[g, as well as three other operators which are useful in specify-ing the federated views.
Reference: [3] <author> E-P. Lim and J. Srivastava. </author> <title> Query optimization/processing in federated database systems. </title> <type> Technical Report 92-68, </type> <institution> Dept. of Comp. Sc., U of Minnesota. </institution>
Reference-contexts: In our work, we examine query processing issues affected by local autonomy and heterogeneity and propose solutions to them. Due to space constraint, we can only give a brief description of our approach here. Interested readers are referred to <ref> [3] </ref> for a detailed discussion. 2 Integration Operations The types of integration operations required in a FDBS depends on the heterogeneity in semantics among component databases. Semantic heterogeneity exists regardless of the type of data model used to describe the contents of component databases. In [3], we describe five different scenarios <p> Interested readers are referred to <ref> [3] </ref> for a detailed discussion. 2 Integration Operations The types of integration operations required in a FDBS depends on the heterogeneity in semantics among component databases. Semantic heterogeneity exists regardless of the type of data model used to describe the contents of component databases. In [3], we describe five different scenarios which require different kinds of integration operations. To enable us to address the subsequent problems of optimizing and processing FDBS queries, we focus on the integration operations that merge tuples from relations which model overlapping sets of entities. <p> It is clear that given an operator tree, its CQT can be constructed easily as shown in Figure 1. The complete query decomposition process is discussed in <ref> [3] </ref>. 4 FDBS Query Processing Architecture As shown in Figure 4, we have adopted a FDB query processor design that treats query processing at two levels, namely federation and local levels, and assigns the activities at the respective levels to federation query manager (FQM) and federated query agent (FQA).
Reference: [4] <author> E-P. Lim, J. Srivastava, S. Prabhakar, and J. Richard-son. </author> <title> Entity identification problem in database integration. </title> <booktitle> Proceedings of IEEE Data Engineering Conference, </booktitle> <year> 1993. </year>
Reference-contexts: Two major problems can arise in this situation. They are entity identification (EI), and attribute value conflict resolution (AVCR) problems. EI involves matching object instances from different component databases which correspond to the same real-world entity <ref> [4] </ref>. AVCR involves resolving the discrepancy between related attributes of two database entries that model the same real-world entity. A general solution to the attribute value conflict problem is to define some functions, or general program codes, which derive the integrated attributes from the set of local attributes [5, 2]. <p> ASet i is a set of R attributes that are used for the key derivation. The mapping information may be stored as relations, or be defined as some mapping functions. Interested readers can refer to <ref> [4] </ref> for detailed discussions about derivation of key attributes.
Reference: [5] <author> W. Litwin and A. Abdellatif. </author> <title> Multidatabase interoperability. </title> <booktitle> IEEE Computer, </booktitle> <month> December </month> <year> 1986. </year>
Reference-contexts: In contrast, FDBS assumes that the component databases exist before integration. Relational operations alone may not be sufficient to resolve semantic differences between the databases. For example a dynamic attribute, as proposed in the MRDSM project <ref> [5] </ref>, allows its value to be derived from actual attribute (s) using a general program computation. This indicates a need for non-relational operations, known as integration operations. 2. Availability of statistical information: The success of query optimization depends on the accuracy of knowledge about DBMS cost models. <p> AVCR involves resolving the discrepancy between related attributes of two database entries that model the same real-world entity. A general solution to the attribute value conflict problem is to define some functions, or general program codes, which derive the integrated attributes from the set of local attributes <ref> [5, 2] </ref>. In this paper, we have selected a minimal set of core operations that includes the set of relational operations, i.e. foe,,1,,[g, as well as three other operators which are useful in specify-ing the federated views.
Reference: [6] <author> G.M. Lohman, C. Mohan, L.M. Hass, D.Daniels, B.G. Lindsay, P.G. Selinger, and P. Wilms. </author> <title> Query processing in R*. </title> <editor> In W. Kim, D. Reiner, and D.S. Batory, editors, </editor> <title> Query Processing in Database Systems. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: The execution plan may involve both processing at the FQA's as well as gateways, and shipping data across sites. Here, the query optimization techniques developed for distributed database systems <ref> [6] </ref> has been adapted to the FDBS environment. In particular, we adopted a 2-stage optimization algorithm which first performs some cost-guided algebraic transformations on the execution plan. It then applies a dynamic programming approach to assign the execu tion sites to the operations within the plan. 4.
References-found: 6

