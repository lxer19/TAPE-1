URL: http://www.cis.ohio-state.edu/volviz/Papers/1992/template.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/volviz/papers_subject.html
Root-URL: 
Title: Template-Based Volume Viewing determining a special plane for projection the base-plane. Parallel rays are cast
Author: R oni Yagel and Arie Kaufman k 
Note: emplate and  
Address: 2036 Neil Avenue Mall, Columbus, OH 43210-1277, USA  NY 11794-4400, USA  
Affiliation: 1 Department of Computer and Information Science, The Ohio State Universit  Department of Computer Science, State University of New York at Stony Broo Stony Brook,  
Abstract: We present an efficient three-phase algorithm for volume viewing that is based on exploit - ing coherency between rays in parallel projection. The algorithm starts by building a ray he sequence of steps specified in the ray-template. We carefully choose the type of line to be s employed and the way the template is being placed on the base-plane in order to assure uniform ampling of the volume by the discrete rays. We conclude by describing an optimized software K implementation of our algorithm and reporting its performance. eywords: volume rendering, ray casting, template, parallel projection
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Mehl, M. E. and Meagher, D. J., </author> <title> ``Geometric Modeling using Octree Encoding'', </title> <booktitle> 2 Computer Garphics and Image Processing, </booktitle> <volume> 19, </volume> <month> 2 (June </month> <year> 1982), </year> <pages> 129-147. </pages> . <editor> Frieder, G., Gordon, D. and Reynolds, R. A., </editor> <title> ``Back-to-Front Display of Voxel-Based 3 Objects'', </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 5, </volume> <month> 1 (January </month> <year> 1985), </year> <pages> 52-60. </pages> . <editor> Reynolds, R. A., Gordon, D. and Chen, L. S., </editor> <title> ``A Dynamic Screen Technique for Shaded e Graphic Display of Slice-Represented Objects'', Computer Vision, </title> <journal> Graphics and Imag rocessing, </journal> <volume> 38, </volume> <month> 3 (June </month> <year> 1987), </year> <pages> 275-298. </pages>
Reference-contexts: is to regard each voxel as a 3D point hat is, each voxel is transformed by the viewing matrix and then projected using a Z-buffer. t Some methods have been suggested in order to reduce the amount of computation needed in the ransformation by using recursive 'divide and conquer' methods <ref> [1] </ref>, pre-calculated tables [2], or by using incremental calculation.

Reference: 0. <author> Tuy, H. K. and Tuy, L. T., </author> <title> ``Direct 2-D Display of 3-D Objects'', </title> <journal> IEEE Computer 1 Graphics & Applications, </journal> <volume> 4, </volume> <month> 10 (November </month> <year> 1984), </year> <pages> 29-33. </pages>
Reference: 1. <author> Farrell, E. J., Yang, W. C. and Zappulla, R. A., </author> <title> ``Animated 3D CT Imaging'', </title> <journal> IEEE 1 Computer Graphics and Applications, </journal> <volume> 5, </volume> <month> 12 (December </month> <year> 1985), </year> <pages> 26-32. </pages>
Reference-contexts: is to regard each voxel as a 3D point hat is, each voxel is transformed by the viewing matrix and then projected using a Z-buffer. t Some methods have been suggested in order to reduce the amount of computation needed in the ransformation by using recursive 'divide and conquer' methods <ref> [1] </ref>, pre-calculated tables [2], or by using incremental calculation.
Reference: 2. <author> Schlusselberg, D. S., Smith, K. and Woodward, D. J., </author> <title> ``Three-Dimensional Display of - Medical Image Volumes'', </title> <booktitle> Proceedings of NCGA'86 Conference, III, </booktitle> <month> (May </month> <year> 1986), </year> <type> 114 23, </type> <institution> National Computer Graphics Association. </institution> <note> r13. </note> <author> Sabella, P., </author> <title> ``A Rendering Algorithm for Visualizing 3D Scalar Fields'', </title> <journal> Compute Graphics, </journal> <volume> 22, </volume> <month> 4 (August </month> <year> 1988), </year> <pages> 51-58. </pages>
Reference-contexts: each voxel as a 3D point hat is, each voxel is transformed by the viewing matrix and then projected using a Z-buffer. t Some methods have been suggested in order to reduce the amount of computation needed in the ransformation by using recursive 'divide and conquer' methods [1], pre-calculated tables <ref> [2] </ref>, or by using incremental calculation. The back-to-front (BTF) algorithm [2] is based on traversing the 3D array in order of . decreasing distance to the observer, avoiding the need for hidden surface removal considerations ach voxel is transformed (according to the viewing parameters), projected, and drawn to the i screen. <p> is transformed by the viewing matrix and then projected using a Z-buffer. t Some methods have been suggested in order to reduce the amount of computation needed in the ransformation by using recursive 'divide and conquer' methods [1], pre-calculated tables <ref> [2] </ref>, or by using incremental calculation. The back-to-front (BTF) algorithm [2] is based on traversing the 3D array in order of . decreasing distance to the observer, avoiding the need for hidden surface removal considerations ach voxel is transformed (according to the viewing parameters), projected, and drawn to the i screen.
Reference: 14. <author> Levoy, M., </author> <title> ``Display of Surfaces from Volume Data'', </title> <journal> IEEE Computer Graphics and 1 Applications, </journal> <volume> 8, </volume> <month> 5 (May </month> <year> 1988), </year> <pages> 29-37. </pages>
Reference-contexts: The implest method uses a 3D DDA line algorithm to generate the ray and performs zero-order l interpolation to locate the nearest voxel [12]. A more precise algorithm is based on a continuous ine algorithm and it performs higher order interpolation to estimate the appropriate sample value <ref> [6, 13, 14, 15] </ref>. In the ray tracing algorithm rays are recursively traced as they reflect from and transmit r through surfaces (in order to simulate reflections, refractions, and shadows) [16]. <p> The sequence of steps incrementally taken by the ray is the form of the ray. Note that the exact type and implementation of composeitwoivoxels may vary from tradi a tional first/last opaque projection [24], through maximum/minimum projection [25], weighted dditive projection [26], and semitransparent compositing <ref> [14] </ref>. 3. Exploiting Parallel-Ray Coherency We first make a note concerning the desired characteristics of the line algorithm governing e the steps taken by the rays.
Reference: 5. <author> Kajiya, J. T. and Von Herzen, B. P., </author> <title> ``Ray Tracing Volume Densities'', </title> <journal> Computer 1 Graphics, </journal> <volume> 18, </volume> <month> 3 (July </month> <year> 1984), </year> <pages> 165-174. </pages>
Reference-contexts: The conventional solutions either draw each voxel as a group of pix ls [4] or maintain a ratio of 1: 3 between voxels and pixels. Other more expensive solutions, t hus appropriate for small datasets, are suggested in <ref> [5, 6, 7] </ref>. Another deficiency of these methods is that they must process all voxels in the dataset.
Reference: 6. <author> A. S. Glassner, (ed.), </author> <title> An Introduction to Ray Tracing, </title> <publisher> Academic Press, </publisher> <year> 1989. </year> <note> r17. </note> <author> Yagel, R., Cohen, D. and Kaufman, A., </author> <title> ``Discrete Ray Tracing'', </title> <journal> IEEE Compute Graphics & Applications, </journal> <volume> 12, </volume> <month> 5 (September </month> <year> 1992), </year> <pages> 19-28. </pages> <note> f18. </note> <author> Yagel, R., Kaufman, A. and Zhang, Q., </author> <title> ``Realistic Volume Imaging'', </title> <booktitle> Proceedings o Visualization'91, </booktitle> <address> San Diego, CA, </address> <month> October </month> <year> 1991, </year> <pages> 226-231. </pages> <editor> ,19. Levoy, M., </editor> <title> ``Efficient Ray Tracing of Volume Data'', </title> <journal> ACM Transactions on Graphics, </journal> <month> 9 3 (July </month> <year> 1990), </year> <pages> 245-261. </pages>
Reference-contexts: The conventional solutions either draw each voxel as a group of pix ls [4] or maintain a ratio of 1: 3 between voxels and pixels. Other more expensive solutions, t hus appropriate for small datasets, are suggested in <ref> [5, 6, 7] </ref>. Another deficiency of these methods is that they must process all voxels in the dataset. <p> Another deficiency of these methods is that they must process all voxels in the dataset. The ray casting algorithm follows a ray parallel to the viewing direction from each pixel s on the screen into the volume data until it encounters an opaque voxel <ref> [6, 8, 9, 10, 11] </ref>. The implest method uses a 3D DDA line algorithm to generate the ray and performs zero-order l interpolation to locate the nearest voxel [12]. <p> The implest method uses a 3D DDA line algorithm to generate the ray and performs zero-order l interpolation to locate the nearest voxel [12]. A more precise algorithm is based on a continuous ine algorithm and it performs higher order interpolation to estimate the appropriate sample value <ref> [6, 13, 14, 15] </ref>. In the ray tracing algorithm rays are recursively traced as they reflect from and transmit r through surfaces (in order to simulate reflections, refractions, and shadows) [16].
Reference: 20. <author> Levoy, M., </author> <title> ``Volume Rendering by Adaptive Refinement'', </title> <journal> The Visual Computer, </journal> <volume> 6, </volume> <month> 1 2 (February </month> <year> 1990), </year> <pages> 2-7. </pages> <note> 1. </note> <author> van Walsum, T., Hin, A. J. S., Versloot, J. and Post, F. H., </author> <title> ``Efficient Hybrid Rendering n of Volume data and Polygons'', </title> <booktitle> Second Eurographics Workshop on Visualization i cientific Computing, </booktitle> <address> Delft, Netherlands, </address> <month> April </month> <year> 1991. </year> <note> d22. </note> <author> Kaufman, A. and Shimony, E., </author> <title> ``3D Scan-Conversion Algorithms for Voxel-Base Graphics'', </title> <booktitle> Proceedings of the 1986 Workshop on Interactive 3D Graphics, </booktitle> <address> Chapel Hill, 2 NC, </address> <month> October </month> <year> 1986, </year> <pages> 45-75. </pages>
Reference-contexts: ays may arbitrarily access any portion of the scene. d Several methods originating from surface-based ray tracing algorithms have been suggeste n order to reduce computation in volumetric ray casting by reducing the cost of each ray using - adaptive termination [19], reducing the number of rays using adaptive refinement <ref> [20] </ref>, or adap ively reducing the sampling rate along the ray [21]. We describe here a method that exploits coherency between rays in parallel viewing in order to expedite the rendering. In Section 2 we describe the naive way of ray casting a volume.
Reference: 3. <author> Cohen, D. and Kaufman, A., </author> <title> ``Scan-Conversion Algorithms for Linear and Quadratic s Objects'', in Volume Visualization, </title> <editor> A. </editor> <publisher> Kaufman, (ed.), IEEE Computer Society Press, </publisher> <address> Lo lamitos, CA, </address> <year> 1990, </year> <pages> 280-301. </pages>
Reference-contexts: The front-to-back algorithm is essentially the same, except that the voxels are traversed n increasing distance order. However it has the potential to run faster than back-to-front by employing a dynamic data structure for screen representation <ref> [3] </ref>. A severe problem in the methods described above is that at some viewing points, holes - might appear in the scene. The conventional solutions either draw each voxel as a group of pix ls [4] or maintain a ratio of 1: 3 between voxels and pixels.
Reference: 24. <author> Kaufman, A. and Bakalash, R., </author> <title> ``Memory and Processing Architecture for 3-D Voxel - Based Imagery'', </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> 8, </volume> <month> 11 (November </month> <year> 1988), </year> <pages> 10 3. </pages>
Reference-contexts: The sequence of steps incrementally taken by the ray is the form of the ray. Note that the exact type and implementation of composeitwoivoxels may vary from tradi a tional first/last opaque projection <ref> [24] </ref>, through maximum/minimum projection [25], weighted dditive projection [26], and semitransparent compositing [14]. 3. Exploiting Parallel-Ray Coherency We first make a note concerning the desired characteristics of the line algorithm governing e the steps taken by the rays.
Reference: 25. <author> Wallis, J. W., Miller, T. R., Lerner, C. A. and Kleerup, E. C., </author> <title> ``Three-Dimensional 1 Display in Nuclear Medicine'', </title> <journal> IEEE Transactions on Medical Imaging, </journal> <volume> 8, 4 (December 989), </volume> <pages> 297-303. </pages>
Reference-contexts: The sequence of steps incrementally taken by the ray is the form of the ray. Note that the exact type and implementation of composeitwoivoxels may vary from tradi a tional first/last opaque projection [24], through maximum/minimum projection <ref> [25] </ref>, weighted dditive projection [26], and semitransparent compositing [14]. 3. Exploiting Parallel-Ray Coherency We first make a note concerning the desired characteristics of the line algorithm governing e the steps taken by the rays.
Reference: 26. <author> Lenz, R., Danielsson, P. E., Cronstrom, S. and Gudmundsson, B., </author> <title> ``Interactive Display of . 3D Medical Objects'', </title> <booktitle> in Pictorial Information Systems Medicine, NATO ASI Series, </booktitle> <volume> vol 19, </volume> <editor> K. H. Hoehne, (ed.), </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1986, </year> <pages> 459-468. </pages> <editor> ,27. Heckbert, P. S., </editor> <title> ``Survey of Texture Mapping'', </title> <journal> IEEE Computer Graphics & Applications 6, </journal> <month> 11 (November </month> <year> 1986), </year> <pages> 56-67. </pages>
Reference-contexts: The sequence of steps incrementally taken by the ray is the form of the ray. Note that the exact type and implementation of composeitwoivoxels may vary from tradi a tional first/last opaque projection [24], through maximum/minimum projection [25], weighted dditive projection <ref> [26] </ref>, and semitransparent compositing [14]. 3. Exploiting Parallel-Ray Coherency We first make a note concerning the desired characteristics of the line algorithm governing e the steps taken by the rays.
References-found: 12

