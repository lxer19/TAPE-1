URL: ftp://www.cs.rutgers.edu/pub/technical-reports/cap-tr-10.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: liew@cs.rutgers.edu lou@cs.rutgers.edu  
Title: The FAD Project  
Author: C. W. Liew L. Steinberg 
Date: April, 1992  
Address: New Brunswick NJ 08903  
Affiliation: Department of Computer Science Busch Campus Rutgers University  
Abstract: Technical Report CAP-TR-10 Department of Computer Science, Rutgers University 1 This work has been supported by NSF under Grant Number DMC-8610507, by the Rutgers Center for Computer Aids to Industrial Productivity, and by DARPA under Grant N00014-81-K-0394 and by DARPA and NASA under DARPA-funded NASA grant NAG2-645. The opinions expressed in this paper are those of the authors, and do not reflect any policies, either expressed or implied, of any granting agency. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. D. Brewer, </author> <title> Constraint Driven Behavioral Synthesis. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Illinois, Urbana-Champaign, </institution> <year> 1988. </year>
Reference-contexts: The behavior of the RTL description must satisfy the functional requirements embedded in the algorithmic description. Examples of chips specified using this scheme range from simple circuits, e.g. digital filters, to complex microprocessors, e.g. Motorola MC68000. Figure 1 shows a part of the specification <ref> [1] </ref> for an elliptic filter in pseudo-Pascal.
Reference: [2] <author> M. C. McFarland S.J., A. C. Parker, and R. Camposano, </author> <title> "Tutorial on high-level synthesis," </title> <booktitle> in Proceedings of the 25th Design Automation Conference, </booktitle> <year> 1988. </year>
Reference-contexts: A more detailed description of high level synthesis can be found in <ref> [2] </ref>. 1.2 Interactions We will now discuss the kinds of interactions that occur in this task.
Reference: [3] <author> M. McFarland, </author> <title> "Using bottom-up design techniques in the synthesis of digital hardware from abstract behavioral descriptions," </title> <booktitle> in Proceedings of the 23rd Design Automation Conference, </booktitle> <year> 1986. </year> <month> 21 </month>
Reference-contexts: However, adding a functional unit, and thus adding area, may allow greater parallelism in the computation, and thus lead to a faster circuit. McFarland and Kowalski showed in their work on the BUD system <ref> [3, 4] </ref>, that for many VLSI High Level Synthesis problems, the resource interactions cannot be easily predicted and thus there is no clearly identifiable tradeoff curve between time and area.
Reference: [4] <author> M. McFarland S.J. and T. Kowalski, </author> <title> "Incorporating bottom-up design into hardware synthesis," </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> vol. 9, </volume> <pages> pp. 938-950, </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: However, adding a functional unit, and thus adding area, may allow greater parallelism in the computation, and thus lead to a faster circuit. McFarland and Kowalski showed in their work on the BUD system <ref> [3, 4] </ref>, that for many VLSI High Level Synthesis problems, the resource interactions cannot be easily predicted and thus there is no clearly identifiable tradeoff curve between time and area. <p> Therefore, decisions in each task interact with decisions in every other task. 2 Overview of Our Approach In this section we will give an overview of our approach by contrasting it with the standard approach currently taken by automated HLS systems. The standard approach, taken by systems such as <ref> [4, 5, 6] </ref>, is to do the subtasks in some sequential order, e.g. first scheduling, then module allocation, then register allocation, and finally interconnection.
Reference: [5] <author> F. D. Brewer and D. D. Gajski, </author> <title> "A design process model," </title> <booktitle> in Artificial Intelligence Approaches To Engineering Design (C. </booktitle> <editor> Tong and D. Sriram, eds.), </editor> <year> 1990. </year> <note> To appear. </note>
Reference-contexts: Therefore, decisions in each task interact with decisions in every other task. 2 Overview of Our Approach In this section we will give an overview of our approach by contrasting it with the standard approach currently taken by automated HLS systems. The standard approach, taken by systems such as <ref> [4, 5, 6] </ref>, is to do the subtasks in some sequential order, e.g. first scheduling, then module allocation, then register allocation, and finally interconnection. <p> All the design tasks were constructed to be sensitive to the relative resource priority settings so that adjustment of the settings would result in different designs being generated. The CHIPPE system <ref> [5] </ref> used a similar approach except that there were priority settings for each design task so that they could be individually adjusted. This provided better and more fine-grain control than the ADAM system but was still a very indirect mechanism for improving the design.
Reference: [6] <author> J. Granacki, D. Knapp, and A. Parker, </author> <title> "The ADAM Advanced Design Automation System: Overview, Planner and Natural Language Interface," </title> <booktitle> in Proceedings of the 22nd ACM/IEEE Design Automation Conference, </booktitle> <year> 1985. </year>
Reference-contexts: Therefore, decisions in each task interact with decisions in every other task. 2 Overview of Our Approach In this section we will give an overview of our approach by contrasting it with the standard approach currently taken by automated HLS systems. The standard approach, taken by systems such as <ref> [4, 5, 6] </ref>, is to do the subtasks in some sequential order, e.g. first scheduling, then module allocation, then register allocation, and finally interconnection. <p> Work is in progress to implement, in the context of BUD/DAA, the methods described above for generating feedback from reasoning about resource use. 6 Related Work There have been several approaches to controlling iterative design processes especially in the domain of VLSI High Level Synthesis. The ADAM system <ref> [6] </ref> used a very simplistic "knob adjustment" approach to make adjustments on the next design iteration. The results of the previous design iteration were used to determine (via interpolation) "better" relative resource priority settings (the "knobs").
Reference: [7] <author> R. Waldinger, </author> <title> "Achieving several goals simultaneously," </title> <booktitle> in Readings in artificial intelligence, </booktitle> <pages> pp. 250-271, </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1981. </year>
Reference-contexts: The applicable optimizations for reducing the number of TIME-SLOTS are DELETE-TIME-SLOT and PIPELINE-SCHEDULE. 4.2.2 Finding Applicable Optimizations modify and the optimization strategy. Essentially, the algorithm starts out at the root node of the RDT and does goal regression <ref> [7] </ref> and decomposition. The inverse of the combination function is used to decompose the goal by assuming that the usage of the sibling nodes remains unchanged. As an example using the RDT in Figure 5, assume that the goal is to reduce usage by 100 units.
Reference: [8] <author> D. W. Knapp, </author> <title> "Feedback-driven datapath optimization in fasolt," </title> <booktitle> in Proceedings of ICCAD-90, </booktitle> <year> 1990. </year>
Reference-contexts: Our approach allows that knowledge to be used to control the redesign process and generate better designs. The FASOLT system <ref> [8, 9] </ref> showed that feedback from one design task to the preceding design task could significantly improve the quality of RTL level designs. The feedback was provided by the user specifying direct modifications to the design while the system maintained the correctness of the design.
Reference: [9] <author> D. W. Knapp, </author> <title> "Datapath optimization using feedback," </title> <booktitle> in Proceedings of European Design Automation Conference, </booktitle> <year> 1991. </year> <note> I only have the submitted copy verify. 22 </note>
Reference-contexts: Our approach allows that knowledge to be used to control the redesign process and generate better designs. The FASOLT system <ref> [8, 9] </ref> showed that feedback from one design task to the preceding design task could significantly improve the quality of RTL level designs. The feedback was provided by the user specifying direct modifications to the design while the system maintained the correctness of the design.
References-found: 9

