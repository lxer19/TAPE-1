URL: ftp://ftp.win.tue.nl/pub/techreports/michelr/SDL97.ps.Z
Refering-URL: http://www.win.tue.nl/cs/fm/sjouke/publications.html
Root-URL: http://www.win.tue.nl
Email: E-mail: fsjouke,michelrg@win.tue.nl  
Title: High-level Message Sequence Charts  
Author: S. Mauw and M.A. Reniers 
Address: P.O. Box 513, NL-5600 MB Eindhoven, The Netherlands.  
Affiliation: Eindhoven University of Technology,  
Abstract: We study High-level Message Sequence Charts a concept incorporated into MSC96 for composing MSCs explicitly. A formal semantics is given which extends the accepted process algebra semantics of MSC92. We assess the language by studying a simple example, which leads us to consider the extension of HMSC with gates. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Alur, G. J. Holzmann, and D. Peled. </author> <title> An analyzer for Message Sequence Charts. </title> <editor> In T. Margaria and B. Steffen, editors, </editor> <booktitle> Tools and Algorithms for the Construction and Analysis of Systems (TACAS'96), volume 1055 of Lecture Notes in Computer Science, </booktitle> <pages> pages 35-48, </pages> <address> Passau, Germany, 1996. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: SEMANTICS This section is devoted to the semantics of HMSC. With respect to MSC92 formal semantics were defined based on Petri nets [5], Buchi automata [10], process algebra [11] and, more recently, partial order methods <ref> [1] </ref>. Since the process algebra approach was selected for standardization [9], we will use this approach as a starting point. First, we recapitulate the semantics of BMSC. Next, we define the operators needed for relating the MSCs contained in an HMSC.
Reference: 2. <author> J. C. M. Baeten and S. Mauw. </author> <title> Delayed choice: an operator for joining Message Sequence Charts. </title> <editor> In D. Hogrefe and S. Leue, editors, </editor> <booktitle> Formal Description Techniques VII, IFIP Transactions C, Proceedings Seventh International Conference on Formal Description Techniques, </booktitle> <pages> pages 340-354. </pages> <publisher> Chapman & Hall, </publisher> <year> 1995. </year>
Reference-contexts: The composition operators The relations between the composing MSCs of an HMSC are graphically defined by arrows and semantically by using three operators. The delayed choice operator () was introduced by Baeten and Mauw <ref> [2] </ref>. It acts as a deterministic choice in the context of strong bisimulation. The delayed choice between processes x and y, is the process obtained by joining the common initial parts of x and y and continuing with a non-deterministic choice (C) between the remaining parts. <p> The expression x 6 a means that process x cannot execute an action a. Similarly, x 6 a ! indicates that process x does not permit the execution of atomic action a. The operational semantics of delayed choice is taken from <ref> [2] </ref>, the operational semantics of the weak sequencing is based on [15], and the structured operational semantics of the free merge is taken from [3].
Reference: 3. <author> J. C. M. Baeten and W. P. Weijland. </author> <title> Process Algebra, </title> <booktitle> volume 18 of Cambridge Tracts in Theoretical Computer Science. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference-contexts: The operational semantics of delayed choice is taken from [2], the operational semantics of the weak sequencing is based on [15], and the structured operational semantics of the free merge is taken from <ref> [3] </ref>.
Reference: 4. <author> L. M. G. Feijs. </author> <title> Synchronous sequence charts in action. </title> <type> Technical Report CSR 95-25, </type> <institution> Eind-hoven University of Technology, Department of Computing Science, </institution> <year> 1995. </year>
Reference-contexts: The MSCs tr-ok-1, tr-error-1, ack-ok-1 and ack-error-1 are not displayed. They can be easily derived from their 0-phase counterparts. We can draw several conclusions from this example. First, the decomposition elaborated here is just one of many possible descriptions of the same protocol (see e.g. <ref> [4] </ref>). It has the virtue that it helps in understanding the overall operation of the protocol. If one is interested in under 12 standing the behaviour of the entities in separation, a horizontal decomposition technique can be used. This way, we obtain the parallel composition of the four instances involved.
Reference: 5. <author> J. Grabowski, P. Graubmann, and E. Rudolph. </author> <title> Towards a Petri net based semantics defini 16 tion for Message Sequence Charts. </title> <editor> In O. Frgemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <pages> pages 179-190, </pages> <address> Darmstadt, 1993. Amster-dam, </address> <publisher> North-Holland. </publisher> <month> 6. </month> . <title> Haugen. MSC structural concepts. </title> <type> Technical Report TD 9006, ITU-T Experts Meeting SG 10, Turin, </type> <year> 1994. </year>
Reference-contexts: An example of an HMSC with connec tors is given in Figure 7 (see Section 4). 3. SEMANTICS This section is devoted to the semantics of HMSC. With respect to MSC92 formal semantics were defined based on Petri nets <ref> [5] </ref>, Buchi automata [10], process algebra [11] and, more recently, partial order methods [1]. Since the process algebra approach was selected for standardization [9], we will use this approach as a starting point. First, we recapitulate the semantics of BMSC.
Reference: 7. <author> ITU-TS. </author> <title> ITU-TS Recommendation Z.120: Message Sequence Chart (MSC). </title> <address> ITU-TS, Geneva. </address> <note> Publication scheduled 1997. </note>
Reference-contexts: Due to the variety of applications, many extensions have been proposed since 1992 for increasing the use of MSC in specific application domains or in general. Several of these proposed new language constructs were selected when extending the MSC language to MSC96 <ref> [7] </ref>. The composition of MSCs has been a main issue for the upgrade of the recommendation. In MSC92 composition of MSCs was hardly covered, while in MSC96 there are several new language features for constructing MSCs from simpler MSCs.
Reference: 8. <author> ITU-TS. </author> <title> ITU-TS Recommendation Z.120: Message Sequence Chart (MSC). </title> <address> ITU-TS, Geneva, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: 1. INTRODUCTION The standardization of Message Sequence Charts (MSCs) <ref> [8] </ref> in 1992 by the CCITT has increased the interest in and use of MSCs considerably. Due to the variety of applications, many extensions have been proposed since 1992 for increasing the use of MSC in specific application domains or in general.
Reference: 9. <author> ITU-TS. </author> <title> ITU-TS Recommendation Z.120 Annex B: Algebraic semantics of Message Sequence Charts. </title> <address> ITU-TS, Geneva, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: SEMANTICS This section is devoted to the semantics of HMSC. With respect to MSC92 formal semantics were defined based on Petri nets [5], Buchi automata [10], process algebra [11] and, more recently, partial order methods [1]. Since the process algebra approach was selected for standardization <ref> [9] </ref>, we will use this approach as a starting point. First, we recapitulate the semantics of BMSC. Next, we define the operators needed for relating the MSCs contained in an HMSC. Finally, we define the semantics of HMSC based on an abstract syntax. 3.1.
Reference: 10. <author> P.B. Ladkin and S. Leue. </author> <title> Interpreting message flow graphs. </title> <journal> Formal Aspects of Computing, </journal> <volume> 7(5) </volume> <pages> 473-509, </pages> <year> 1995. </year>
Reference-contexts: An example of an HMSC with connec tors is given in Figure 7 (see Section 4). 3. SEMANTICS This section is devoted to the semantics of HMSC. With respect to MSC92 formal semantics were defined based on Petri nets [5], Buchi automata <ref> [10] </ref>, process algebra [11] and, more recently, partial order methods [1]. Since the process algebra approach was selected for standardization [9], we will use this approach as a starting point. First, we recapitulate the semantics of BMSC.
Reference: 11. <author> S. Mauw and M. A. Reniers. </author> <title> An algebraic semantics of Basic Message Sequence Charts. </title> <journal> The Computer Journal, </journal> <volume> 37(4) </volume> <pages> 269-277, </pages> <year> 1994. </year>
Reference-contexts: An example of an HMSC with connec tors is given in Figure 7 (see Section 4). 3. SEMANTICS This section is devoted to the semantics of HMSC. With respect to MSC92 formal semantics were defined based on Petri nets [5], Buchi automata [10], process algebra <ref> [11] </ref> and, more recently, partial order methods [1]. Since the process algebra approach was selected for standardization [9], we will use this approach as a starting point. First, we recapitulate the semantics of BMSC. Next, we define the operators needed for relating the MSCs contained in an HMSC. <p> First, we recapitulate the semantics of BMSC. Next, we define the operators needed for relating the MSCs contained in an HMSC. Finally, we define the semantics of HMSC based on an abstract syntax. 3.1. Basic Message Sequence Charts In <ref> [11] </ref> a semantics for BMSC is presented. We will give a short explanation of this semantics. To each BMSC a closed process expression is associated.
Reference: 12. <author> S. Mauw, M. van Wijk, and T. Winter. </author> <title> A formal semantics of synchronous Interworkings. </title> <editor> In O. Frgemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <pages> pages 167-178, </pages> <address> Darmstadt, 1993. Amsterdam, </address> <publisher> North-Holland. </publisher>
Reference-contexts: The delayed choice between processes x and y, is the process obtained by joining the common initial parts of x and y and continuing with a non-deterministic choice (C) between the remaining parts. The weak sequencing operator (ffi) is based on the interworking sequencing operator <ref> [12] </ref>. A generalization of this operator was studied in [15]. The weak sequencing of the processes x and y denotes their parallel execution with the restriction that an action from y can only be executed if that is permitted by x . <p> However, we consider the free merge as too weak. It can only be used for horizontal decomposition if the components have no communication interaction. The free merge works only for free components. Several alternative merge operators have been suggested, such as the Interworking merge <ref> [12] </ref> and the environmental merge [17,18]. We propose to extend HMSC as defined in MSC96 with gates and to adapt the merge operator in order to handle the proper linkage of gates (see also [6] for a discussion on gates).
Reference: 13. <author> D. M. R. Park. </author> <title> Concurrency and automata on infinite sequences. </title> <editor> In P. Deussen, editor, </editor> <booktitle> Proceedings 5 th GI Conference, volume 104 of Lecture Notes in Computer Science, </booktitle> <pages> pages 167-183. </pages> <publisher> Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: With this operational semantics, we define the behaviour of a BMSC. By defining the usual notion of strong bisimilarity <ref> [13] </ref>, we can also reason about the equality of BMSCs.
Reference: 14. <author> G. D. Plotkin. </author> <title> A structural approach to operational semantics. </title> <type> Technical Report DIAMI FN-19, </type> <institution> Computer Science Department, Aarhus University, </institution> <year> 1981. </year>
Reference-contexts: The process expression that can be associated to a BMSC defines the order in which events may be executed by means of an operational semantics. Next, we present a structured operational semantics for closed terms in the style of Plotkin <ref> [14] </ref> (see Table 1).
Reference: 15. <author> A. Rensink and H. Wehrheim. </author> <title> Weak sequential composition in process algebras. </title> <editor> In B. Jons-son and J. Parrow, editors, CONCUR'94: </editor> <booktitle> Concurrency Theory, volume 836 of Lecture Notes in Computer Science, </booktitle> <pages> pages 226-241, </pages> <address> Uppsala, 1994. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The weak sequencing operator (ffi) is based on the interworking sequencing operator [12]. A generalization of this operator was studied in <ref> [15] </ref>. The weak sequencing of the processes x and y denotes their parallel execution with the restriction that an action from y can only be executed if that is permitted by x . <p> Similarly, x 6 a ! indicates that process x does not permit the execution of atomic action a. The operational semantics of delayed choice is taken from [2], the operational semantics of the weak sequencing is based on <ref> [15] </ref>, and the structured operational semantics of the free merge is taken from [3].
Reference: 16. <author> E. Rudolph. </author> <title> MSC roadmaps. Towards a synthesized solution. </title> <type> Technical Report TD 9017, </type> <institution> Experts Meeting ITU-TS SG 10, </institution> <year> 1995. </year>
Reference: 17. <author> E. Rudolph, P. Graubmann, and J. Grabowski. </author> <title> Message Sequence Chart: composition techniques versus OO-techniques - `tema con variazioni'. </title> <editor> In R. Brk and A. Sarma, editors, </editor> <booktitle> Proceedings Seventh SDL Forum, </booktitle> <address> Oslo, 1995. Amsterdam, </address> <publisher> North-Holland. </publisher>
Reference: 18. <author> E. Rudolph, P. Graubmann, and J. Grabowski. </author> <title> Tutorial on Message Sequence Charts. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 28(12) </volume> <pages> 1629-1641, </pages> <year> 1996. </year> <note> Special issue on SDL and MSC, guest editor . Haugen. </note>
References-found: 17

