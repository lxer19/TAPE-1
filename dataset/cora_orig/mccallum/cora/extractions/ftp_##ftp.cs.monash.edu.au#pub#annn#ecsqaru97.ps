URL: ftp://ftp.cs.monash.edu.au/pub/annn/ecsqaru97.ps
Refering-URL: http://www.cs.monash.edu.au/~annn/cv/pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fnjitnah,annng@cs.monash.edu.au  
Title: treeNets: A Framework for Anytime Evaluation of Belief Networks  
Author: N. Jitnah and A. Nicholson 
Keyword: uncertainty, Bayesian Networks, anytime algorithms, practical reasoning, graphical models.  
Note: Paper category: research paper.  
Address: 3168, Australia,  
Affiliation: Department of Computer Science, Monash University, Clayton, VIC  
Abstract: We present a new framework for implementing evaluation of belief networks (BNs), which consists of two steps: (1) transforming a belief network into a tree structure called a treeNet (2) performing anytime inference by searching the treeNet. The root of the treeNet represents the query node. Once the treeNet has been constructed, whenever new evidence is incorporated, the posterior probability of the query node is re-calculated, using a variation of the polytree message-passing algorithm. The treeNet framework is geared towards anytime evaluation. Evaluating the treeNet is a tree search problem and we investigate different tree search strategies. By using a best-first method, we are able to increase the rate of convergence of the anytime result. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> I. Beinlich, H. Suermondt, R. Chavez, and G. Cooper. </author> <title> The alarm monitoring system: A case study with two probabilistic inference techniques for belief networks. </title> <booktitle> In Proc. of the 2nd European Conf. on AI in medicine, </booktitle> <pages> pages 689-693, </pages> <year> 1992. </year>
Reference-contexts: Belief network evaluation involves the computation of posterior probability distributions, or beliefs, for one or more query nodes, given evidence about other nodes. Belief networks (BNs) have been used in a range of applications, in particular real-time decision systems such as medical diagnosis <ref> [1] </ref> and automated vehicle control [12]. A very useful quality for such real-time decision systems is to ensure that the quality of the result gradually improves with computation time; these are called "anytime" algorithms [9].
Reference: 2. <author> A. Bhattacharyya. </author> <title> On a measure of divergence between two statistical populations defined by their probability distributions. </title> <journal> Bulletin of the Calcutta Mathematics Society, </journal> <volume> 35 </volume> <pages> 99-110, </pages> <year> 1943. </year>
Reference-contexts: It is obtained by computing a CPD of the reversed arc Y ! X, using Bayes' Law and repeating the calculation. Bhattacharyya Distance. An appropriate distance measure for multi-state nodes is the Bhattacharyya <ref> [2] </ref> distance between two distributions P and Q is given by: B (P; Q) = log i P i Q i : (4) Another distance measure which can be used is the average Kullback-Leibler (KL) distance [17] between two distributions P and Q.
Reference: 3. <author> B. Boerlage. </author> <title> Link strengths in bayesian networks. </title> <type> Master's thesis, </type> <institution> Dept. of Computer Science, U. of British Columbia, </institution> <year> 1995. </year>
Reference-contexts: treeNet. context, if a node has several neighbours, a best-first strategy means that its belief should be approximated by first considering the neighbour linked by the most strongest connection. 4.1 Connection Strengths The concept of a connection strength (CS) between two adjacent nodes in a binary BN is introduced in <ref> [3] </ref>; this measure was proposed for use when graphically displaying BNs, with a thicker arc indicating higher connection strength. The CS from parent node A to child node B, both binary nodes, is defined as the difference in the resulting belief of B as the state of A changes. <p> However, since the KL 9 measure is normally used to calculate errors between an exact distribution and an estimate, we deem it less appropriate. In the formula for arc weight given in Eq 2, we take the average over state combinations of the other parents. An alternative (used in <ref> [3] </ref>) is to take the maximum. The formula then gives a maximum bound on how much a change in the parent can affect the child. When using arc weights to traverse the treeNet, each branch of the treeNet is assigned a weight as defined in Eq. 2. <p> In this way, we are choosing the node which most largely influences our query node. 5 Experimental Results The experimental results given in this section involve a polytree network of 22 nodes, shown in Fig. 6. It is adapted from the example in <ref> [3] </ref>. We constructed a treeNet for this network with query node HM. Fig. 6. 22 node polytree, adapted from the example in [3], used to obtain experimental results. We evaluate the treeNet using breadth-first, depth-first and best-first strategies. <p> It is adapted from the example in <ref> [3] </ref>. We constructed a treeNet for this network with query node HM. Fig. 6. 22 node polytree, adapted from the example in [3], used to obtain experimental results. We evaluate the treeNet using breadth-first, depth-first and best-first strategies. We calculate an initial estimate of the posterior of the query node HM by visiting its direct children in the treeNet.
Reference: 4. <author> C. Boutilier, N. Friedman, M. Goldszmidt, and D. Koller. </author> <title> Context-specific independence in bayesian networks. </title> <booktitle> In Proc. of 12th Conf. on UAI, </booktitle> <pages> pages 115-123, </pages> <year> 1996. </year>
Reference-contexts: This incremental evaluation results in a form of "anytime" algorithm. Other researchers have developed anytime algorithms for BN evaluation [5, 19, 13] and proposed the use of tree representations for efficient representation of evaluation of a BN <ref> [8, 4] </ref> (Sect. 2); in this paper we combine these approaches. The representation, construction and tree traversal evaluation of a treeNet is described in Sect. 3. <p> Like a Q-DAG, a treeNet is also built off-line and evaluated on-line when we want to update the belief of our query node. Context-Specific Independence (CSI), proposed in <ref> [4] </ref>, refers to independencies that are encoded in the CPDs of a BN. They only hold within certain contexts, i.e. if specific evidence values are assigned to some nodes. <p> We want to prune all branches leading to "irrelevant" nodes, i.e. nodes from which the posterior of our query node Q is independent. D-separation [17] and CSI <ref> [4] </ref> provide criteria by which independent nodes, given certain evidence assignments, are identified. Both are straightforwardly applicable to the treeNet scheme. For example, given the example BN given in Fig 2 (a), suppose that O is the query node (see Fig 2 (c)) and T is the evidence node.
Reference: 5. <author> Homer L. Chin and Gregory F. Cooper. </author> <title> Bayesian belief network inference using simulation. </title> <booktitle> In Uncertainty in Artificial Intelligence 3, </booktitle> <pages> pages 129-147, </pages> <year> 1989. </year>
Reference-contexts: Estimates for the belief of the query node are iteratively computed by traversing the tree. This incremental evaluation results in a form of "anytime" algorithm. Other researchers have developed anytime algorithms for BN evaluation <ref> [5, 19, 13] </ref> and proposed the use of tree representations for efficient representation of evaluation of a BN [8, 4] (Sect. 2); in this paper we combine these approaches. The representation, construction and tree traversal evaluation of a treeNet is described in Sect. 3. <p> If this distance decreases as computation time increases, the algorithm has an anytime flavour. The rate at which this distance decreases is obviously important. Simulation approaches <ref> [5] </ref> are classified as anytime algorithms because the accuracy of results improves as the sample size grows. Other anytime algorithms for BN evaluation have been developed [13, 19] and compared [16].
Reference: 6. <author> G.F. Cooper. </author> <title> The computational complexity of probabilistic inference using bayesian belief networks. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 393-405, </pages> <year> 1990. </year>
Reference-contexts: Much research has been done to develop efficient inference algorithms for BNs; it has been shown that both exact and approximate inference in for general BNs is NP-hard <ref> [6, 7] </ref>. The treeNet framework allows incremental evaluation of a BN. A treeNet is a representation of a BN; a given BN is transformed into a tree structure with a query node at the root of the tree. <p> Observation of specific values for nodes is called evidence. Beliefs are updated by re-computing the posterior probability distributions given the evidence. Both exact and approximate inference of general BNs has been shown to be NP-hard <ref> [6, 7] </ref>. Anytime algorithms [20] are algorithms where the quality of the result gradually improves with computation time.
Reference: 7. <author> P. Dagum and M. Luby. </author> <title> Approximating probabilistic inference in belief networks is NP-hard. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 141-153, </pages> <year> 1993. </year>
Reference-contexts: Much research has been done to develop efficient inference algorithms for BNs; it has been shown that both exact and approximate inference in for general BNs is NP-hard <ref> [6, 7] </ref>. The treeNet framework allows incremental evaluation of a BN. A treeNet is a representation of a BN; a given BN is transformed into a tree structure with a query node at the root of the tree. <p> Observation of specific values for nodes is called evidence. Beliefs are updated by re-computing the posterior probability distributions given the evidence. Both exact and approximate inference of general BNs has been shown to be NP-hard <ref> [6, 7] </ref>. Anytime algorithms [20] are algorithms where the quality of the result gradually improves with computation time.
Reference: 8. <author> A. Darwiche and G. Provan. Query-dags: </author> <title> A practical paradigm for implementing belief-network inference. </title> <booktitle> In Proc. of 12th Conf. on UAI, </booktitle> <pages> pages 203-210, </pages> <year> 1996. </year>
Reference-contexts: This incremental evaluation results in a form of "anytime" algorithm. Other researchers have developed anytime algorithms for BN evaluation [5, 19, 13] and proposed the use of tree representations for efficient representation of evaluation of a BN <ref> [8, 4] </ref> (Sect. 2); in this paper we combine these approaches. The representation, construction and tree traversal evaluation of a treeNet is described in Sect. 3. <p> The main motivation behind these new approaches is efficiency, both in the encoding of the network and in the method of evaluation. Here we review briefly two approaches that use a tree representation: Query DAGs and Context-Specific Independence. Query DAGs (Q-DAG) are introduced in <ref> [8] </ref>. This approach consists of firstly compiling a BN into an arithmetic expression called a Q-DAG, then answering queries by evaluating the expression. <p> Like Q-DAGS, since tree structures are simple to conceptualise and widely accepted, users unfamiliar with BNs may find a treeNet easier to work with <ref> [8] </ref>. The treeNet incremental evaluation does not strictly satisfy the ideal requirements of anytime algorithms [20]. We can obtain a measurable quality of result only by comparing the output to the exact result which will not be available at run-time when the system is installed.
Reference: 9. <author> T. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proc. AAAI-88, </booktitle> <pages> pages 49-54, </pages> <year> 1988. </year>
Reference-contexts: A very useful quality for such real-time decision systems is to ensure that the quality of the result gradually improves with computation time; these are called "anytime" algorithms <ref> [9] </ref>. Much research has been done to develop efficient inference algorithms for BNs; it has been shown that both exact and approximate inference in for general BNs is NP-hard [6, 7]. The treeNet framework allows incremental evaluation of a BN.
Reference: 10. <author> T. Dean and M. P. Wellman. </author> <title> Planning and control. </title> <publisher> Morgan Kaufman Publishers, </publisher> <address> San Mateo, Ca., </address> <year> 1991. </year>
Reference-contexts: Thus we gather more information between successive computations of the belief of the query node. The question of how long to collect information and which nodes to visit at each stage is the meta-level control problem of deliberation scheduling, allocating computational resources between the two stages <ref> [10, Ch.8] </ref>. 3.3 Tree Traversal The order of traversal is an important issue. Breadth-first and depth-first are obvious methods. We can also use a combination of these.
Reference: 11. <author> D. L. Draper and S. Hanks. </author> <title> Localized partial evaluation of a belief network. </title> <booktitle> In Proc. of UAI-94, </booktitle> <pages> pages 170-177, </pages> <year> 1994. </year>
Reference-contexts: Only the branch on which the newly visited node lies is re-evaluated. Ultimately, once all the nodes are visited, the query 2 The term "vacuous message" is borrowed from <ref> [11] </ref> 5 node will compute its exact belief. We also note that it is not mandatory to re-evaluate the treeNet after each node visit: we may also visit a group of nodes, then re-evaluate their branches.
Reference: 12. <author> Jeff Forbes, Tim Huang, Keiji Kanazawa, and Stuart Russell. </author> <title> The batmobile: Towards a bayesian automated taxi. </title> <booktitle> In Proc. of the 14th Int. Joint Conf. on AI (IJCAI'95), </booktitle> <pages> pages 1878-1885, </pages> <year> 1995. </year>
Reference-contexts: Belief network evaluation involves the computation of posterior probability distributions, or beliefs, for one or more query nodes, given evidence about other nodes. Belief networks (BNs) have been used in a range of applications, in particular real-time decision systems such as medical diagnosis [1] and automated vehicle control <ref> [12] </ref>. A very useful quality for such real-time decision systems is to ensure that the quality of the result gradually improves with computation time; these are called "anytime" algorithms [9].
Reference: 13. <author> E.J. Horvitz, H.J. Suermondt, and G.F. Cooper. </author> <title> Bounded conditioning: Flexible inference for decisions under scarce resources. </title> <booktitle> In Proc. of the 5th Workshop on Uncertainty in AI, </booktitle> <pages> pages 182-193, </pages> <year> 1989. </year>
Reference-contexts: Estimates for the belief of the query node are iteratively computed by traversing the tree. This incremental evaluation results in a form of "anytime" algorithm. Other researchers have developed anytime algorithms for BN evaluation <ref> [5, 19, 13] </ref> and proposed the use of tree representations for efficient representation of evaluation of a BN [8, 4] (Sect. 2); in this paper we combine these approaches. The representation, construction and tree traversal evaluation of a treeNet is described in Sect. 3. <p> The rate at which this distance decreases is obviously important. Simulation approaches [5] are classified as anytime algorithms because the accuracy of results improves as the sample size grows. Other anytime algorithms for BN evaluation have been developed <ref> [13, 19] </ref> and compared [16]. In Wellman and Liu's state-Space abstraction [19], the states of selected nodes are merged; the subsequent size reduction of the CPDs allows faster evaluation of the BN.
Reference: 14. <author> Uffe Kjaerulff. </author> <title> Reduction of computation complexity in bayesian networks through removal of weak dependencies. </title> <booktitle> In Proc. of 10th Conf. on UAI, </booktitle> <pages> pages 374-382, </pages> <year> 1994. </year>
Reference-contexts: Instead of using the full BN as starting point, we can also use an approximate model, for example one from which the weak links have been removed <ref> [14] </ref>. In general, any model approximation technique can be applied to the BN prior to constructing a treeNet. If we extend our measure of arc weights to clique-tree arcs, we can use the weights to orient the traversal towards the next most influential clique at each iteration.
Reference: 15. <author> S.L. Lauritzen and D.J. Spiegelhalter. </author> <title> Local computations with probabilities on graphical structures and their applications to expert systems. </title> <journal> Journal of the Royal Statistical Society, </journal> <volume> 50(2) </volume> <pages> 157-224, </pages> <year> 1988. </year>
Reference-contexts: Alternatively, if the query node is O, the resulting treeNet is that shown in Fig. 2 (c). 1 We discuss the relaxation of this assumption in Sect. 7. 4 Fig. 2. Example showing how (a) a BN (a modified polytree version of the Asia network <ref> [15] </ref>), is transformed into different treeNets depending on the query node: (b) query node A (c) query node O. 3.2 Evaluating a treeNet Exact Evaluation. The algorithm for evaluating a treeNet is a variation of the message-passing polytree algorithm [17]. <p> The treeNet evaluation algorithm is fully interruptible. The main limitation of the treeNet paradigm is that it is only applicable to polytree structures. However, since most BNs with underlying loops can be converted to clique-trees [17] or join-trees <ref> [15] </ref> the treeNet construction and evaluation process can be adapted to suit a larger category of BNs. We discuss this 13 possibility further in Sect. 7. Also, we have only constructed treeNets containing a single query node.
Reference: 16. <author> A.E. Nicholson and N. Jitnah. </author> <title> Belief network algorithms: a study of performance based on domain characterisation. </title> <type> Technical Report 96/249, </type> <institution> Department of Computer Science, Monash University, </institution> <year> 1996. </year>
Reference-contexts: The rate at which this distance decreases is obviously important. Simulation approaches [5] are classified as anytime algorithms because the accuracy of results improves as the sample size grows. Other anytime algorithms for BN evaluation have been developed [13, 19] and compared <ref> [16] </ref>. In Wellman and Liu's state-Space abstraction [19], the states of selected nodes are merged; the subsequent size reduction of the CPDs allows faster evaluation of the BN. By iteratively refining the merged states and re 2 evaluating the BN, a progressively more accurate result is obtained. <p> So we do not show the graphs here due to space constraints. Comparison of Arc Weights and Breadth-First with Evidence in Roots of BN. In <ref> [16] </ref> we showed that the structure of the network, and the location of evidence nodes, affect the performance of various BN inference algorithms.
Reference: 17. <author> J. Pearl. </author> <title> Probabilistic Reasoning In Intelligent Systems: Networks of Plausible Inference. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: 1 Introduction Belief (or Bayesian) networks <ref> [17] </ref> have become a popular representation for reasoning under uncertainty, as they integrate a graphical representation of causal relationships with a sound Bayesian foundation. Belief network evaluation involves the computation of posterior probability distributions, or beliefs, for one or more query nodes, given evidence about other nodes. <p> The algorithm for evaluating a treeNet is a variation of the message-passing polytree algorithm <ref> [17] </ref>. The main modification is that messages are only passed in one direction, towards the query node, instead of two-way propagation. Since we are only interested in the beliefs of the query node, two-way propagation is not necessary. <p> We want to prune all branches leading to "irrelevant" nodes, i.e. nodes from which the posterior of our query node Q is independent. D-separation <ref> [17] </ref> and CSI [4] provide criteria by which independent nodes, given certain evidence assignments, are identified. Both are straightforwardly applicable to the treeNet scheme. <p> Bhattacharyya Distance. An appropriate distance measure for multi-state nodes is the Bhattacharyya [2] distance between two distributions P and Q is given by: B (P; Q) = log i P i Q i : (4) Another distance measure which can be used is the average Kullback-Leibler (KL) distance <ref> [17] </ref> between two distributions P and Q. However, since the KL 9 measure is normally used to calculate errors between an exact distribution and an estimate, we deem it less appropriate. <p> The treeNet evaluation algorithm is fully interruptible. The main limitation of the treeNet paradigm is that it is only applicable to polytree structures. However, since most BNs with underlying loops can be converted to clique-trees <ref> [17] </ref> or join-trees [15] the treeNet construction and evaluation process can be adapted to suit a larger category of BNs. We discuss this 13 possibility further in Sect. 7. Also, we have only constructed treeNets containing a single query node. <p> Realistic problems are almost invariably encoded as BNs with underlying loops, so we now outline how to adapt treeNet construction and evaluation to cater for the larger category of DAGs. Given a BN that contains underlying loops, we first transform it to a clique-tree <ref> [17] </ref>. A treeNet can then be constructed for the clique-tree using the same algorithm as for polytrees. The root of the treeNet will then correspond to the clique which contains the designated query node.
Reference: 18. <author> K. L. Poh and E Horvitz. </author> <title> Topological proximity and relevance in graphical decision models. </title> <booktitle> In Proc. of 12th Conf. on UAI, </booktitle> <pages> pages 427-435, </pages> <year> 1996. </year>
Reference-contexts: By taking into account the distance from the query node, we are incorporating the impact of topological proximity and relevance described in <ref> [18] </ref>. Since messages are also sent from child to parent of the original BN, a reverse measure of the weight of an arc is also needed. It is obtained by computing a CPD of the reversed arc Y ! X, using Bayes' Law and repeating the calculation. Bhattacharyya Distance.
Reference: 19. <author> M. Wellman and C. Liu. </author> <title> State-space abstraction for anytime evaluation of probabilistic networks. </title> <booktitle> In Proc. of 10th Conf. on UAI, </booktitle> <pages> pages 567-574, </pages> <year> 1994. </year>
Reference-contexts: Estimates for the belief of the query node are iteratively computed by traversing the tree. This incremental evaluation results in a form of "anytime" algorithm. Other researchers have developed anytime algorithms for BN evaluation <ref> [5, 19, 13] </ref> and proposed the use of tree representations for efficient representation of evaluation of a BN [8, 4] (Sect. 2); in this paper we combine these approaches. The representation, construction and tree traversal evaluation of a treeNet is described in Sect. 3. <p> The rate at which this distance decreases is obviously important. Simulation approaches [5] are classified as anytime algorithms because the accuracy of results improves as the sample size grows. Other anytime algorithms for BN evaluation have been developed <ref> [13, 19] </ref> and compared [16]. In Wellman and Liu's state-Space abstraction [19], the states of selected nodes are merged; the subsequent size reduction of the CPDs allows faster evaluation of the BN. <p> The rate at which this distance decreases is obviously important. Simulation approaches [5] are classified as anytime algorithms because the accuracy of results improves as the sample size grows. Other anytime algorithms for BN evaluation have been developed [13, 19] and compared [16]. In Wellman and Liu's state-Space abstraction <ref> [19] </ref>, the states of selected nodes are merged; the subsequent size reduction of the CPDs allows faster evaluation of the BN. By iteratively refining the merged states and re 2 evaluating the BN, a progressively more accurate result is obtained.
Reference: 20. <author> S. Zilberstein. </author> <title> Composition and monitoring of anytime alforithms. </title> <booktitle> In IJCAI 95: Anytime Algorithms and Deliberation Scheduling Workshop, </booktitle> <pages> pages 14-21, </pages> <year> 1995. </year> <month> 15 </month>
Reference-contexts: Observation of specific values for nodes is called evidence. Beliefs are updated by re-computing the posterior probability distributions given the evidence. Both exact and approximate inference of general BNs has been shown to be NP-hard [6, 7]. Anytime algorithms <ref> [20] </ref> are algorithms where the quality of the result gradually improves with computation time. <p> Like Q-DAGS, since tree structures are simple to conceptualise and widely accepted, users unfamiliar with BNs may find a treeNet easier to work with [8]. The treeNet incremental evaluation does not strictly satisfy the ideal requirements of anytime algorithms <ref> [20] </ref>. We can obtain a measurable quality of result only by comparing the output to the exact result which will not be available at run-time when the system is installed.
References-found: 20

