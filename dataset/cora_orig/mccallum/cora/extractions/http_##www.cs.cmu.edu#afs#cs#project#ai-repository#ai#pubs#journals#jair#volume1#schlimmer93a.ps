URL: http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/pubs/journals/jair/volume1/schlimmer93a.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/pubs/journals/jair/volume1/
Root-URL: http://www.cs.cmu.edu
Email: SCHLIMMER@EECS.WSU.EDU  LHERMENS@EECS.WSU.EDU  
Title: Software Agents: Completing Patterns and Constructing User Interfaces  
Author: Jeffrey C. Schlimmer Leonard A. Hermens 
Date: Abstract  
Address: Pullman, WA 99164-2752, U.S.A.  
Affiliation: School of Electrical Engineering Computer Science, Washington State University,  
Note: Journal of Artificial Intelligence Research 1 (1993) 6189 Submitted 8/93; published 11/93 1993 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved.  
Abstract: To support the goal of allowing users to record and retrieve information, this paper describes an interactive note-taking system for pen-based computers with two distinctive features. First, it actively predicts what the user is going to write. Second, it automatically constructs a custom, button-box user interface on request. The system is an example of a learning-apprentice software-agent. A machine learning component characterizes the syntax and semantics of the users information. A performance system uses this learned information to generate completion strings and construct a user interface. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Angluin, D. </author> <year> (1982). </year> <title> Inference of reversible languages. Journal of the Association for Computing Machinery Berwick, </title> <editor> R. C., & Pilato, S. </editor> <year> (1987). </year> <title> Learning syntax by automata induction. Machine Learning Bull, </title> <editor> J., & Farrand, J., Jr. </editor> <year> (1977). </year> <title> The Audubon Society Field Guide to North American Birds (Eastern Edition). NY: </title> <editor> Alfred A. Knopf (pp. </editor> <title> 401682). Chiltons Repair & T une-Up Guide: </title> <address> GM X-Body 1980-1985 (1985). Randor , PA: </address> <note> Chilton Book (p. 7). </note>
Reference-contexts: Another state transitions to both states on the same token; or (This enforces determinism.) 2. Both states have a common k-leader and a. Both states are accepting states, or b. Both states transition to a common state via the same token. Table 1: FSM state merging rules from <ref> (Angluin, 1982) </ref>. CHLIMMER ERMENS about fabric patterns. Many of the states prior to the accepting state could be usefully merged, but using only the rules listed in Table 1, many more notes will have to be processed before this happens.
Reference: <author> Cohen, W. W. </author> <year> (1988). </year> <title> Generalizing number and learning from multiple examples in explana tion based learning. </title> <booktitle> Proceedings of the Fifth International Confer ence on Machine Learning (pp. 256269). </booktitle> <address> Ann Arbor, MI: </address> <publisher> Morgan Kaufmann. </publisher> <address> Consumer Reports (1988), (12), 302303. Mount Vernon, NY: </address> <publisher> Consumers Union. </publisher>
Reference: <author> Cypher, A. </author> <year> (1991). </year> <title> Eager: Programming repetitive tasks by example. </title> <booktitle> Proceedings of CHI (pp. 3339). </booktitle> <address> New Orleans, LA: </address> <publisher> ACM. </publisher>
Reference-contexts: CHLIMMER ERMENS User adjustable Can the user tune the system parameters manually? Here we describe related systems that exhibit properties in each of these agent dimensions. Our note taking softwar e utilizes the anticipation user interface technique pioneered by Eager <ref> (Cypher, 1991) </ref>. Eager is a nonintrusive system that learns to perform iterative procedures by watching the user . As such, it is a learning apprentice, a software agent , and an example of programming by example or demonstration. Situated within the HyperCard environment, it continuously watches a user s actions.
Reference: <author> Dent, L ., Boticario, J., McDermott, J., Mitchell, T., & Zabowski, D. </author> <year> (1992). </year> <title> A personal learning apprentice. </title> <booktitle> Proceedings of the T enth National Confer ence on Artificial Intelligence (pp. 96103). </booktitle> <address> San Jose, CA: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Eager is highly anticipatory , uses a graphical interface, is non-obtrusive, non-modal, and learns in real-time, but is not user adjustable. CAP is an apprenticeship system that learns to predict default values <ref> (Dent, et al., 1992) </ref>. Its domain of operation is calendar management, and it learns preferences as a knowledgable secretary might.
Reference: <author> Fisher, D. H. </author> <year> (1987). </year> <title> Knowledge acquisition via incremental conceptual clustering. Machine Learning Grove, </title> <editor> M., & Miller, J. </editor> <year> (1989). </year> <institution> North American Rockwell A3J/A-5 Vigilante. Arlington, TX: </institution> <note> Aerofax (pp. 1315). </note>
Reference: <author> Hermens, L. A., & Schlimmer , J. C. </author> <year> (1993). </year> <title> A machine-learning apprentice for the comple tion of repetitive forms. </title> <booktitle> Proceedings of the Ninth IEEE Confer ence on Artificial Intelli gence for Applications . Orlando, </booktitle> <address> FL. </address>
Reference-contexts: CAP can be characterized as anticipatory , commandline oriented and modal with user control (but not user adjustable), where learning is done in batch. Another related system addresses the task of learning to fi ll out a form <ref> (Hermens & Schlimmer, 1993) </ref>. The system recreates a paper form as an on-screen facsimile, allowing the user to view all of the pertinent information at a glance. Input typed by the user into the electronic form is processed by a central form-fi lling module.
Reference: <author> Laird, P. </author> <year> (1992). </year> <title> Discrete sequence prediction and its applications. </title> <booktitle> Proceedings of the Tenth National Conference on Artificial Intelligence (pp. 135140). </booktitle> <address> San Jose, CA: </address> <publisher> AAAI Press. </publisher> <editor> OFTWARE GENTS OMPLETING ATTERNS ONSTRUCTING SER NTERFACES Maes, P ., & Kozierok, R. </editor> <booktitle> (1993). Learning interface agents. Proceedings of the Eleventh National Conference on Artificial Intelligence (pp. </booktitle> <address> 459465) . Washington, D. C.: </address> <note> AAAI Press. Nurses Guide to Drugs (1979). Horsham, PA: Intermed Communications (pp. 454462). </note>
Reference: <author> Schlimmer, J. C., & Fisher , D. H. </author> <year> (1986). </year> <title> A case study of incremental concept induction. </title> <booktitle> Proceedings of the Fifth National Confer ence on Artificial Intelligence Philadelphia, </booktitle> <address> PA: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Class values are the next token in the sequencethe one to be predicted. Column 2 lists the performance of a simple Bayes classifi er, and Column 3 lists the performance of an incremental variant of ID3 <ref> (Schlimmer & Fisher , 1986) </ref>. Perhaps surprisingly, these methods perform considerably worse than the simple conjunctive method. Without the benefit of a narrow context provided by the FSM, these methods must implicitly construct representations to detect dif ferences between similar situations that arise within a single note.
References-found: 8

