URL: http://www-sal.cs.uiuc.edu/~nachum/papers/open-more.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Email: nachum@cs.uiuc.edu  jouannau@lri.lri.fr  jwk@cwi.nl  
Phone: 2  
Title: More Problems in Rewriting  
Author: Nachum Dershowitz Jean-Pierre Jouannaud and Jan Willem Klop 
Address: 1304 West Springfield Avenue, Urbana, IL 61801, U.S.A,  91405 Orsay, France,  3 CWI, Kruislaan 413, 1098 SJ Amsterdam, The Netherlands  Boelelaan 1081, 1081 HV Amsterdam, The Netherlands,  
Affiliation: 1 Department of Computer Science, University of Illinois,  Laboratoire de Recherche en Informatique, Bat. 490, Universite de Paris Sud,  Department of Mathematics and Computer Science, Free University, de  
Abstract-found: 0
Intro-found: 1
Reference: [ Aiken and Wimmers, 1992 ] <author> A. Aiken and E. Wimmers. </author> <title> Solving systems of set constraints. </title> <booktitle> In Proceedings of the Seventh Symposium on Logic in Computer Science, </booktitle> <pages> pages 329-340, </pages> <address> Santa Cruz, CA, </address> <month> June </month> <year> 1992. </year> <note> IEEE. </note>
Reference: [ Baader, 1990 ] <author> Franz Baader. </author> <title> Rewrite systems for varieties of semigroups. </title> <editor> In M. Stickel, editor, </editor> <booktitle> Proceedings of the Tenth International Conference on Automated Deduction (Kaiserslautern, West Germany), volume 449 of Lecture Notes in Computer Science, </booktitle> <pages> pages 381-395, </pages> <address> Berlin, July 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Baader and Schulz, 1992 ] <author> Franz Baader and Klaus Schulz. </author> <title> Unification in the union of disjoint equational theories: Combining decision procedures. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Proceedings of the Eleventh International Conference on Automated Deduction (Saratoga Springs, NY), volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <address> Berlin, June 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A positive solution is given in [ Tajine, 1993 ] . Problem 43. Design a framework for combining constraint solving algorithms. Some particular cases have been attacked: In <ref> [ Baader and Schulz, 1992 ] </ref> it was shown how decision procedures for solvability of unification problems can be combined. In [ Baader and Schulz, 1993 ] a similar technique is applied to (unquantified) systems of equations and disequations. <p> Unfortunately, its termination has not been proved. Problem 66 (F. Baader, K. Schulz [ 1992 ] ). Is there an equational theory for which unification with constants is decidable, but general unification (where free function symbols of arbitrary arity may occur) is undecidable? From the results in <ref> [ Baader and Schulz, 1992 ] </ref> it follows that this question can be reformulated as follows: Is there an equational theory for which unification with constants is decidable, but unification with linear constant restrictions is undecidable? Another way of formulating the question is: Consider positive first-order formul containing equality as the <p> Is there an equational theory E with alphabet F such that whether E j= is decidable for closed formulae with quantifier prefix 8 fl 9 fl , but undecidable for arbitrary quantifier prefixes. Problem 67 (F. Baader, K. Schulz [ 1992 ] ). It was shown in <ref> [ Baader and Schulz, 1992 ] </ref> that being able to solve unification problems with linear constant restrictions is a necessary and sufficient condition for the possibility of combining unification algorithms. <p> Other approaches [ Schmidt-Schau, 1989; Boudet, 1990 ] require solvability of constant elimination problems, which was shown to be equivalent to presupposing solvability of unification problems with arbitrary constant restrictions <ref> [ Baader and Schulz, 1992 ] </ref> .
Reference: [ Baader and Schulz, 1993 ] <author> Franz Baader and Klaus Schulz. </author> <title> Combination techniques and decision problems for disunification. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A positive solution is given in [ Tajine, 1993 ] . Problem 43. Design a framework for combining constraint solving algorithms. Some particular cases have been attacked: In [ Baader and Schulz, 1992 ] it was shown how decision procedures for solvability of unification problems can be combined. In <ref> [ Baader and Schulz, 1993 ] </ref> a similar technique is applied to (unquantified) systems of equations and disequations. In [ Ringeissen, 1992 ] the combination of unification algorithms is extended to the case where alphabets share constants.
Reference: [ Bachmair et al., 1993 ] <author> Leo Bachmair, Harald Ganzinger, and Uwe Waldmann. </author> <title> Set constraints are the monadic class. </title> <booktitle> In Proceedings of the Symposium on Logic in Computer Science (Montreal, </booktitle> <address> Canada). </address> <publisher> IEEE, </publisher> <year> 1993. </year>
Reference: [ Baird et al., 1989 ] <author> Timothy Baird, Gerald Peterson, and Ralph Wilkerson. </author> <title> Complete sets of reductions modulo Associativity, Commutativity and Identity. </title> <editor> In N. Dershowitz, editor, </editor> <booktitle> Proceedings of the Third International Conference on Rewriting Techniques and Applications (Chapel Hill, NC), volume 355 of Lecture Notes in Computer Science, </booktitle> <pages> pages 29-44, </pages> <address> Berlin, April 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in <ref> [ Baird et al., 1989 ] </ref> , and solved completely in [ Jouannaud and Marche, 1990 ] . The techniques, however, do not carry over to completion with idempotence (I) added; how to handle ACZI-completion effectively is open. C.
Reference: [ Barendregt, 1984 ] <author> Henk P. Barendregt. </author> <title> The Lambda Calculus, its Syntax and Semantics. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <note> second edition, </note> <year> 1984. </year>
Reference-contexts: Statman). It has been remarked by C. Bohm <ref> [ Barendregt, 1984 ] </ref> that Y is a fixed point combinator if and only if Y $ fl (SI)Y (Y and SIY are convertible). Also, if Y is a fixed point combinator, then so is Y (SI).
Reference: [ Barbanera, 1990 ] <author> F. Barbanera. </author> <title> Combining term rewriting and type assignment systems. </title> <booktitle> International J. of Foundations of Computer Science, </booktitle> <volume> 1 </volume> <pages> 165-184, </pages> <year> 1990. </year>
Reference: [ Barbanera and Fernandez, 1993a ] <author> F. Barbanera and M. Fernandez. </author> <booktitle> Modularity of termination and confluence in combinations of rewrite systems with ! . In Proceedings of the 20th International Colloquium on Automata, Languages, and Programming, Lund, </booktitle> <address> Sweden, </address> <year> 1993. </year>
Reference-contexts: These results have been extended to combinations with more expressive type systems <ref> [ Barbanera and Fernandez, 1993a; Barbanera and Fernandez, 1993b ] </ref> . Problem 51 (H. Comon, M. Dauchet).
Reference: [ Barbanera and Fernandez, 1993b ] <author> F. Barbanera and M. Fernandez. </author> <title> Combining first and higher order rewrite systems with type assignment systems. </title> <booktitle> In Proceedings of the International Conference on Typed Lambda Calculi and Applications, </booktitle> <address> Utrecht, Holland, </address> <year> 1993. </year>
Reference-contexts: These results have been extended to combinations with more expressive type systems <ref> [ Barbanera and Fernandez, 1993a; Barbanera and Fernandez, 1993b ] </ref> . Problem 51 (H. Comon, M. Dauchet).
Reference: [ Barendregt et al., 1987 ] <author> H. P. Barendregt, M. C. J. D. van Eekelen, J. R. W. Glauert, J. R. Kennaway, M. J. Plasmeijer, and M. R. Sleep. </author> <title> Term graph rewriting. </title> <booktitle> In Proceedings of the European Workshop on Parallel Architectures and Languages, volume 259 of Lecture Notes in Computer Science, </booktitle> <pages> pages 141-158, </pages> <address> Berlin, 1987. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: However, no embedding theorem has yet been proved for directed graphs, and (consequently?) powerful termination orderings remain to be designed. Problem 74 (D. Plump). Graph rewriting systems that implement term rewriting systems (see, for example, <ref> [ Barendregt et al., 1987; Hoffmann and Plump, 1991 ] </ref> ) are terminating whenever term rewriting is. The converse, however, does not hold [ Plump, 1991 ] .
Reference: [ Ben Cherifa and Lescanne, 1987 ] <author> Ahlem Ben Cherifa and Pierre Lescanne. </author> <title> Termination of rewriting systems by polynomial interpretations and its implementation. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 9(2) </volume> <pages> 137-159, </pages> <month> October </month> <year> 1987. </year>
Reference-contexts: Problem 28 (P. Lescanne). Polynomial and exponential interpretations have been used to prove termination. For the former there are some reasonable methods <ref> [ Ben Cherifa and Lescanne, 1987; Lankford, 1979 ] </ref> that can help determine if a particular interpretation decreases with each application of a rule. Are there other implementable methods suitable for exponential interpretations? Some work on this problem has been reported in [ Lescanne, 1992 ] . Problem 29.
Reference: [ Berarducci and Bohm, 1992 ] <author> Alessandro Berarducci and Corrado Bohm. </author> <title> A self-interpreter of lambda calculus having a normal form. </title> <institution> Rapporto tecnico 16, Dip. di Matematica Pura ed Applicata, Universita di L'Aquila, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: Some progress has been made in <ref> [ Berarducci and Bohm, 1992 ] </ref> . Problem 7 (H. Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See [ Gilleron, 1991; Kucherov, 1991 ] .
Reference: [ Berry and Boudol, 1992 ] <author> G. Berry and G. Boudol. </author> <title> The chemical abstract machine. </title> <journal> Theoretical Computer Science, </journal> <volume> 96 </volume> <pages> 217-248, </pages> <year> 1992. </year>
Reference: [ Bezem and Groote, 1993 ] <editor> M. Bezem and J. F. Groote, editors. </editor> <booktitle> Proceedings of the International Conference on Typed Lambda Calculi and Applications (Utrecht, The Netherlands), volume 664 of Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A general approach requires a subcase of second-order unification [ Comon, 1992 ] . A subject of vigorous investigation is that of typed -calculi <ref> [ Bezem and Groote, 1993 ] </ref> . Though the relevance of this subject resides largely in the fields of automated deduction and of proof theory, a considerable segment pertains to term rewriting. For example, much attention has been devoted to termination proofs of typed -calculi.
Reference: [ Bibel et al., 1992 ] <author> W. Bibel, S. Holldobler, and J. Wurtz. </author> <title> Cycle unification. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Proceedings of the Eleventh International Conference on Automated Deduction (Saratoga Springs, NY), volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 94-108, </pages> <address> Berlin, June 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: What sufficient conditions make confluence decidable? 4 New Solutions Two old problems (omitted from our previous list) which have recently been solved are the following: Problem 76. Cycle unification <ref> [ Bibel et al., 1992 ] </ref> is undecidable [ Devienne, 1993; Hanschke and Wurtz, 1993 ] . This was a long standing open problem, related to the non-termination of simple logic programs. Problem 77. J. Jezek, J. B. Nation, and R.
Reference: [ Boudet, 1990 ] <author> Alexandre Boudet. </author> <title> Unification in combination of equational theories: An efficient algorithm. </title> <booktitle> In Proceedings of the Tenth International Conference on Automated Deduction (Kaiserslautern, Germany), volume 449 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Problem 67 (F. Baader, K. Schulz [ 1992 ] ). It was shown in [ Baader and Schulz, 1992 ] that being able to solve unification problems with linear constant restrictions is a necessary and sufficient condition for the possibility of combining unification algorithms. Other approaches <ref> [ Schmidt-Schau, 1989; Boudet, 1990 ] </ref> require solvability of constant elimination problems, which was shown to be equivalent to presupposing solvability of unification problems with arbitrary constant restrictions [ Baader and Schulz, 1992 ] .
Reference: [ Boudet, 1992 ] <author> Alexandre Boudet. </author> <title> Unification in order-sorted algebras with overloading. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Proceedings of the Eleventh International Conference on Automated Deduction (Saratoga Springs, NY), volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <address> Berlin, June 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: In [ Baader and Schulz, 1993 ] a similar technique is applied to (unquantified) systems of equations and disequations. In [ Ringeissen, 1992 ] the combination of unification algorithms is extended to the case where alphabets share constants. In related work <ref> [ Boudet, 1992 ] </ref> , unification is performed in the combination of an equational theory and membership constraints. 3 New Problems Problems 45-50 appeared (with minor variations) in our technical report [ Dershowitz et al., 1991b ] . In the meantime, one (no. 48) has been answered. Problem 45 (M.
Reference: [ Boudet and Comon, 1993 ] <author> Alexandre Boudet and Hubert Comon. </author> <title> About the theory of tree embedding. </title> <editor> In J.-P. Jouannaud, editor, </editor> <booktitle> Proceedings of the Colloquium on Trees in Algebra and Programming (Orsay, France), Lecture Notes in Computer Science, </booktitle> <address> Berlin, April 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Is the existential fragment de cidable for partial precedences? The 4 (9 fl 8 fl 9 fl 8 fl ) fragment is undecidable, in general [ Treinen, 1992 ] . The positive existential fragment for the empty precedence (that is, for homeomorphic tree embedding) is decidable <ref> [ Boudet and Comon, 1993 ] </ref> . One might also ask whether the first-order theory of total recursive path orderings is decidable.
Reference: [ Boudet and Contejean, 1992 ] <author> Alexandre Boudet and E. Contejean. </author> <title> On n-syntactic equational theories. </title> <editor> In H. Kirchner and G. Levi, editors, </editor> <booktitle> Proceedings of the Third International Conference on Algebraic and Logic Programming (Pisa, Italy), volume 632 of Lecture Notes in Computer Science, </booktitle> <pages> pages 446-457, </pages> <address> Berlin, </address> <month> September </month> <year> 1992. </year> <note> Springer-Verlag. </note>
Reference-contexts: Problem 69 (C. Kirchner, J. Zhang). What is the syntactic type (maximum number of top-level steps needed in an equational proof <ref> [ Boudet and Contejean, 1992 ] </ref> ) of the distributivity axiom? What is the syntactic type of "three-way" commutativity: f (x; y; z) = f (x; z; y) = f (y; x; z) = f (y; z; x) = f (z; x; y) = f (z; y; x) What are the
Reference: [ Breazu-Tannen and Gallier, 1989 ] <author> Val Breazu-Tannen and Jean Gallier. </author> <title> Polymorphic rewriting conserves algebraic strong normalization. </title> <booktitle> In Proceedings of the Sixteenth International Colloquium on Automata, Languages and Programming (Stresa, Italy), volume 372 of Lecture Notes in Computer Science, </booktitle> <pages> pages 137-150, </pages> <address> Berlin, </address> <month> July </month> <year> 1989. </year> <booktitle> European Association of Theoretical Computer Science, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Though the relevance of this subject resides largely in the fields of automated deduction and of proof theory, a considerable segment pertains to term rewriting. For example, much attention has been devoted to termination proofs of typed -calculi. Higher-order rewriting Beginning with <ref> [ Breazu-Tannen and Gallier, 1989 ] </ref> , researchers have been looking at ways of combining terminating confluent calculi with first-order ("algebraic") rewriting in such a way as to preserve their convergence, thereby endowing rewriting with higher-order capabilities.
Reference: [ Caron, 1991 ] <author> A.-C. Caron. </author> <title> Linear bounded automata and rewrite systems: Influence of initial configurations on decision properties. </title> <booktitle> In Proceedings of the International Joint Conference on Theory and Practice of Software Development, volume 1: Colloquium on Trees in Algebra and Programming (Brighton, U.K.), volume 493 of Lecture Notes in Computer Science, </booktitle> <pages> pages 74-89, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A less ambitious, long-standing open problem (mentioned in [ Dershowitz and Joua-nnaud, 1990 ] ) is decidability for one (length-increasing) monadic (string, semi-Thue) rule. Termination is undecidable for non-length-increasing monadic systems of rules <ref> [ Caron, 1991 ] </ref> . For one monadic rule, confluence is decidable [ Kurth, 1990; Wrathall, 1990 ] . What about confluence of one non-monadic rule? Problem 24.
Reference: [ Caron et al., 1993 ] <author> A.-C. Caron, J.-L. Coquide, and M. Dauchet. </author> <title> Encompassment properties and automata with constraints. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Related results include the following: The existential fragment of the subterm ordering is decidable, but its 3 (9 fl 8 fl 9 fl ) fragment is not [ Venkataraman, 1987 ] . The first-order theory of encompassment (the instance-of-subterm relation) is claimed decidable <ref> [ Caron et al., 1993 ] </ref> . Once we're at it, we might as well ask what the complexity of the satisfiability test for the existential fragment is|in the total case. Problem 25 (R. Treinen [ 1990 ] ). <p> Problem 51 (H. Comon, M. Dauchet). Is the first order theory of one-step rewriting (! R ) decidable? Decidability would imply the new result on the decidability of the first-order theory of encompassment (that is, being an instance of a subterm), based on pumping properties <ref> [ Caron et al., 1993 ] </ref> . (It is well known that the theory of ! fl R is in general undecidable.) Problem 52 (R. Statman). It has been remarked by C.
Reference: [ Chew, 1981 ] <author> Paul Chew. </author> <title> Unique normal forms in term rewriting systems with repeated variables. </title> <booktitle> In Proceedings of the Thirteenth Annual Symposium on Theory of Computing, </booktitle> <pages> pages 7-18. </pages> <publisher> ACM, </publisher> <year> 1981. </year>
Reference-contexts: Oyamaguchi). Is any "strongly" non-overlapping right-linear term-rewriting system confluent? ("Strong" in the sense that left-hand sides are nonoverlapping even when the occurrences of variables have been renamed apart <ref> [ Chew, 1981 ] </ref> .) On the one hand, strongly non-overlapping systems need not be confluent [ Huet, 1980 ] ; on the other hand, strongly non-overlapping right-ground systems are [ Oyamaguchi and Ohta, 1993 ] . Problem 59 (M. Kurihara, M. Krishna Rao).
Reference: [ Cohen and Watson, 1991 ] <author> D. Cohen and P. Watson. </author> <title> An efficient representation of arithmetic for term rewriting. </title> <editor> In R. Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lecture Notes in Computer Science, </booktitle> <pages> pages 240-251, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Problem 65 (D. Cohen, P. Watson [ 1991 ] ). An interesting system for doing arithmetic by rewriting was presented in <ref> [ Cohen and Watson, 1991 ] </ref> . Unfortunately, its termination has not been proved. Problem 66 (F. Baader, K. Schulz [ 1992 ] ).
Reference: [ Comon, 1988 ] <author> Hubert Comon. </author> <title> Unification et Disunification: Theorie et Applications. </title> <type> PhD thesis, </type> <institution> l'Institut National Polytechnique de Grenoble, </institution> <year> 1988. </year>
Reference-contexts: Problem 42 (H. Comon). Given a first-order formula with equality as the only predicate symbol, can negation be effectively eliminated from an arbitrary formula when is equivalent to a positive formula? Equivalently, if has a finite complete set of unifiers, can they be computed? Special cases were solved in <ref> [ Comon, 1988; Lassez and Marriott, 1987 ] </ref> . A positive solution is given in [ Tajine, 1993 ] . Problem 43. Design a framework for combining constraint solving algorithms.
Reference: [ Comon, 1990 ] <author> Hubert Comon. </author> <title> Solving inequations in term algebras (Preliminary version). </title> <booktitle> In Proceedings of the Fifth Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 62-69, </pages> <address> Philadelphia, PA, </address> <month> June </month> <year> 1990. </year> <note> IEEE. </note>
Reference-contexts: What about confluence of one non-monadic rule? Problem 24. The existential fragment of the first-order theory of the "recursive path ordering" (with multiset and lexicographic "status") is decidable when the precedence on function symbols is total <ref> [ Comon, 1990; Jouannaud and Okada, 1991b ] </ref> , but is undecidable for arbitrary formulas. Is the existential fragment de cidable for partial precedences? The 4 (9 fl 8 fl 9 fl 8 fl ) fragment is undecidable, in general [ Treinen, 1992 ] .
Reference: [ Comon, 1992 ] <author> Hubert Comon. </author> <title> Completion of Rewrite Systems with Membership Constraints. </title> <booktitle> In Proceedings of the 19th International Conference on Automata, Languages and Programming, </booktitle> <address> Vienna, Austria, </address> <year> 1992. </year>
Reference-contexts: But deduction in such "order-sorted" algebras presents some difficulties. The most popular approach is to insist that the sort of the right-hand side is always contained in that of the left; see [ Dick and Watson, 1991 ] . A general approach requires a subcase of second-order unification <ref> [ Comon, 1992 ] </ref> . A subject of vigorous investigation is that of typed -calculi [ Bezem and Groote, 1993 ] . Though the relevance of this subject resides largely in the fields of automated deduction and of proof theory, a considerable segment pertains to term rewriting.
Reference: [ Comon, 1993 ] <author> H. Comon, </author> <type> personal communication, </type> <year> 1993. </year>
Reference: [ Contejean, 1992 ] <author> Evelyne Contejean. </author> <title> Elements pour la Decidabilite de l'Unification Modulo la Distributivite. </title> <type> PhD thesis, </type> <institution> Universite de Paris-Sud, Orsay, France, </institution> <year> 1992. </year>
Reference-contexts: Although many more cases are described in <ref> [ Contejean, 1992; Contejean, 1993 ] </ref> , the general case remains open. Problem 39. Rules are given in [ Jouannaud and Kirchner, 1991 ] for computing dag-solved forms of unification problems in equational theories.
Reference: [ Contejean, 1993 ] <author> Evelyne Contejean. </author> <title> A partial solution for D-unification based on a reduction to AC1-unification. </title> <booktitle> In Proceedings of the Twentieth International Colloquium on Automata, Languages and Programming (Lund, </booktitle> <address> Sweden, </address> <month> July </month> <year> 1993), </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <address> Berlin. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: equations in the theory of dis tributivity (unification modulo a distributivity axiom) decidable? The question should read "modulo one right- and one left-distributivity axiom". (With just one of these, the problem had already been solved in [ Tiden and Arnborg, 1987 ] .) A partial positive solution is given in <ref> [ Contejean, 1993 ] </ref> , based on a striking result on the structure of certain proofs modulo distributivity. Although many more cases are described in [ Contejean, 1992; Contejean, 1993 ] , the general case remains open. Problem 39. <p> Although many more cases are described in <ref> [ Contejean, 1992; Contejean, 1993 ] </ref> , the general case remains open. Problem 39. Rules are given in [ Jouannaud and Kirchner, 1991 ] for computing dag-solved forms of unification problems in equational theories.
Reference: [ Contejean, 1993 ] <author> Evelyne Contejean, </author> <type> personal communication, </type> <year> 1993. </year>
Reference-contexts: equations in the theory of dis tributivity (unification modulo a distributivity axiom) decidable? The question should read "modulo one right- and one left-distributivity axiom". (With just one of these, the problem had already been solved in [ Tiden and Arnborg, 1987 ] .) A partial positive solution is given in <ref> [ Contejean, 1993 ] </ref> , based on a striking result on the structure of certain proofs modulo distributivity. Although many more cases are described in [ Contejean, 1992; Contejean, 1993 ] , the general case remains open. Problem 39. <p> Although many more cases are described in <ref> [ Contejean, 1992; Contejean, 1993 ] </ref> , the general case remains open. Problem 39. Rules are given in [ Jouannaud and Kirchner, 1991 ] for computing dag-solved forms of unification problems in equational theories.
Reference: [ Dauchet, 1989 ] <author> M. Dauchet. </author> <title> Simulation of Turing machines by a left-linear rewrite rule. </title> <editor> In N. Dershowitz, editor, </editor> <booktitle> Proceedings of the Third International Conference on Rewriting Techniques and Applications (Chapel Hill, NC), volume 355 of Lecture Notes in Computer Science, </booktitle> <pages> pages 109-120, </pages> <address> Berlin, April 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Rumor has it that the conjecture has been shown true. Problem 21 (M. Dauchet). Is termination of one linear (left and right) rule decidable? Left linearity alone is not enough for decidability <ref> [ Dauchet, 1989 ] </ref> . A less ambitious, long-standing open problem (mentioned in [ Dershowitz and Joua-nnaud, 1990 ] ) is decidability for one (length-increasing) monadic (string, semi-Thue) rule. Termination is undecidable for non-length-increasing monadic systems of rules [ Caron, 1991 ] .
Reference: [ Dauchet et al., 1990 ] <author> Max Dauchet, Thierry Heuillard, Pierre Lescanne, and Sophie Tison. </author> <title> Decidability of the confluence of finite ground term rewriting systems and of other related term rewriting systems. </title> <journal> Information and Computation, </journal> <volume> 88(2) </volume> <pages> 187-201, </pages> <month> October </month> <year> 1990. </year>
Reference: [ Dauchet and Tison, 1990 ] <author> M. Dauchet and S. Tison. </author> <title> The theory of ground rewrite systems is decidable. </title> <booktitle> In Proceedings of the Fifth Symposium on Logic in Computer Science, </booktitle> <pages> pages 242-248, </pages> <address> Philadelphia, PA, </address> <month> June </month> <year> 1990. </year>
Reference: [ Delor and Puel, 1993 ] <author> C. Delor and L. Puel. </author> <title> Extension of the associative path ordering to a chain of associative commutative symbols. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Dershowitz, 1993 ] <author> Nachum Dershowitz. </author> <title> Hierarchical termination. </title> <type> Technical report 93-?, </type> <institution> Leibnitz Center for Research in Computer Science, Hebrew University, Jerusalem, Israel, </institution> <year> 1993. </year>
Reference: [ Dershowitz and Jouannaud, 1990 ] <author> Nachum Dershowitz and Jean-Pierre Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B: Formal Methods and Semantics, chapter 6, </booktitle> <pages> pages 243-320. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: Hermann). Suppose ordinary completion (as in <ref> [ Dershowitz and Jouannaud, 1990 ] </ref> , for example) is non-terminating for some initial set of equations E, completion strategy, and reduction ordering.
Reference: [ Dershowitz et al., 1991a ] <author> Nachum Dershowitz, Jean-Pierre Jouannaud, and Jan Willem Klop. </author> <title> Open problems in rewriting. </title> <editor> In R. Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lecture Notes in Computer Science, </booktitle> <pages> pages 445-456, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: 1 Introduction Two years ago, in the proceedings of the previous conference, we presented a list of open problems in the theory of rewriting <ref> [ Dershowitz et al., 1991a ] </ref> . <p> Please send any contributions by electronic or ordinary mail to any of us. We hope to continue periodically publicizing new problems and solutions to old ones. We thank all the individuals who contributed questions, updates and solutions. 2 Old Problems Five of the forty-four problems listed in <ref> [ Dershowitz et al., 1991a ] </ref> have been solved and some progress has been made on ten more. For convenience, we repeat the problems (in small type) about which we are able to report progress. Problem 1.
Reference: [ Dershowitz et al., 1991b ] <author> Nachum Dershowitz, Jean-Pierre Jouannaud, and Jan Willem Klop. </author> <title> Open problems in rewriting. </title> <type> Technical report CS-R9114, </type> <institution> Computer Science, CWI, </institution> <address> Amsterdam, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: In related work [ Boudet, 1992 ] , unification is performed in the combination of an equational theory and membership constraints. 3 New Problems Problems 45-50 appeared (with minor variations) in our technical report <ref> [ Dershowitz et al., 1991b ] </ref> . In the meantime, one (no. 48) has been answered. Problem 45 (M. Venturini-Zilli). Some reduction graphs in -calculus [ Venturini-Zilli, 1984 ] are isomorphic to ordinals. For example, the reduction graph of (x:y)((z:zzz)(z:zzz)) is isomorphic to ! + 1.
Reference: [ Dershowitz et al., 1991c ] <author> Nachum Dershowitz, Stephane Kaplan, and David A. Plaisted. </author> <title> Rewrite, rewrite, rewrite, rewrite, rewrite,: </title> : : . <journal> Theoretical Computer Science, </journal> <volume> 83(1) </volume> <pages> 71-96, </pages> <year> 1991. </year>
Reference-contexts: Problem 47. For reductions of transfinite length, a version of the Parallel Moves Lemma can be proved if one consider only "strongly converging" infinite reductions in the sense of [ Kennaway et al., 1991 ] . However, if one wants to consider converging reductions, as in <ref> [ Dershowitz et al., 1991c ] </ref> , then it is not difficult to construct a counterexample, not to the infinite Parallel Moves Lemma itself, but to the method of proof (cf. [ Kennaway et al., 1990 ] ). An infinite Parallel Moves Lemma might involve a different notion of "descendant".
Reference: [ Dershowitz and Okada, 1990 ] <author> Nachum Dershowitz and Mitsuhiro Okada. </author> <title> A rationale for conditional equational programming. </title> <journal> Theoretical Computer Science, </journal> <volume> 75 </volume> <pages> 111-138, </pages> <year> 1990. </year>
Reference: [ Dershowitz and Plaisted, 1988 ] <author> Nachum Dershowitz and David A. Plaisted. </author> <title> Equational programming. </title> <editor> In J. E. Hayes, D. Michie, and J. Richards, editors, </editor> <booktitle> Machine Intelligence 11: The logic and acquisition of knowledge, chapter 2, </booktitle> <pages> pages 21-56. </pages> <publisher> Oxford Press, Oxford, </publisher> <year> 1988. </year>
Reference-contexts: Logic programming Rewriting techniques have found applications in logic program-ming and constraint-based programming (besides their obvious application to functional programming). Semantic unification using rewrite-rules has been proposed by a number of people ( <ref> [ Reddy, 1986; Dershowitz and Plaisted, 1988 ] </ref> , among others) as an ideal basis for a synthesis of functional and logic programming; the SLOG language [ Fribourg, 1985 ] is a case in point.
Reference: [ Devie, 1991 ] <author> Herve Devie. </author> <title> Une Approche Algebrique de la Reecriture et son Application a la derivation de Procedures de Completion. </title> <type> PhD thesis, </type> <institution> Universite de Paris-Sud, Orsay, France, </institution> <year> 1991. </year>
Reference-contexts: Unfortunately, this is not always possible, even if &gt; is derivability (! + R ) in R. Is there a set of inference rules that will always succeed in computing R whenever R exists for &gt;? A proposal appears in <ref> [ Devie, 1991 ] </ref> ; more work is called for. Problem 38 (J. Siekmann).
Reference: [ Devienne, 1993 ] <author> Phillipe Devienne, </author> <type> personal communication, </type> <year> 1993. </year>
Reference-contexts: What sufficient conditions make confluence decidable? 4 New Solutions Two old problems (omitted from our previous list) which have recently been solved are the following: Problem 76. Cycle unification [ Bibel et al., 1992 ] is undecidable <ref> [ Devienne, 1993; Hanschke and Wurtz, 1993 ] </ref> . This was a long standing open problem, related to the non-termination of simple logic programs. Problem 77. J. Jezek, J. B. Nation, and R.
Reference: [ Dick and Watson, 1991 ] <author> A. J. J. Dick and P. Watson. </author> <title> Order-sorted term rewriting. </title> <journal> Computing J., </journal> <volume> 34(1) </volume> <pages> 16-19, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: But deduction in such "order-sorted" algebras presents some difficulties. The most popular approach is to insist that the sort of the right-hand side is always contained in that of the left; see <ref> [ Dick and Watson, 1991 ] </ref> . A general approach requires a subcase of second-order unification [ Comon, 1992 ] . A subject of vigorous investigation is that of typed -calculi [ Bezem and Groote, 1993 ] .
Reference: [ Diekert, 1990 ] <editor> Volker Diekert, editor. </editor> <booktitle> Proceedings of the Workshop of the ERBA-Working-Group No. 3166 on Algebraic and Syntactic Methods in Computer Science (ASMICS), </booktitle> <address> Munich, Germany, </address> <month> January </month> <year> 1990. </year> <institution> Technische Universitat Munchen. </institution>
Reference-contexts: This time, we report on progress made during the intervening time, and then list some new problems. (A few additional questions on the subject appear in the back of <ref> [ Diekert, 1990 ] </ref> .) We also mention a couple of long-standing open problems which have recently been answered. The last section contains a partisan list of interesting areas for future research. A new, comprehensive survey of the field is [ Klop, 1992 ] .
Reference: [ Dougherty, 1991 ] <author> Daniel Dougherty. </author> <title> Adding algebraic rewriting to the untyped lambda calculus (extended abstract). </title> <editor> In Ron Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lecture Notes in Computer Science, </booktitle> <pages> pages 37-48, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Fernandez, 1993 ] <author> Maribel Fernandez. </author> <title> AC-complement problems: Validity and negation elimination. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Freese, 1993 ] <author> R. Freese, </author> <type> personal communication, </type> <year> 1993. </year>
Reference-contexts: Cycle unification [ Bibel et al., 1992 ] is undecidable [ Devienne, 1993; Hanschke and Wurtz, 1993 ] . This was a long standing open problem, related to the non-termination of simple logic programs. Problem 77. J. Jezek, J. B. Nation, and R. Freese <ref> [ Freese, 1993 ] </ref> have shown that there is no finite, normal form, associative-commutative term-rewriting system for lattices.
Reference: [ Fribourg, 1985 ] <author> Laurent Fribourg. SLOG: </author> <title> A logic programming language interpreter based on clausal superposition and rewriting. </title> <booktitle> In Proceedings of the Symposium on Logic Programming, </booktitle> <pages> pages 172-184, </pages> <address> Boston, MA, </address> <month> July </month> <year> 1985. </year> <note> IEEE. </note>
Reference-contexts: Semantic unification using rewrite-rules has been proposed by a number of people ( [ Reddy, 1986; Dershowitz and Plaisted, 1988 ] , among others) as an ideal basis for a synthesis of functional and logic programming; the SLOG language <ref> [ Fribourg, 1985 ] </ref> is a case in point. Refinements of universal unification for when a rewrite system is available have been found (see [ Jouannaud and Kirchner, 1991 ] ).
Reference: [ Gilleron, 1991 ] <author> R. Gilleron. </author> <title> Decision problems for term rewriting systems and recognizable tree languages. </title> <booktitle> In Proceedings of the Eighth Symposium on Theoretical Aspects of Computer Science, </booktitle> <month> February </month> <year> 1991. </year>
Reference-contexts: Some progress has been made in [ Berarducci and Bohm, 1992 ] . Problem 7 (H. Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See <ref> [ Gilleron, 1991; Kucherov, 1991 ] </ref> . This has been answered in the affirmative [ Vagvolgyi and Gilleron, 1992; Kucherov and Tajine, 1993; Hofbauer and Huber, 1993 ] . Problem 20 (Y. Metivier [ 1985 ] ).
Reference: [ Gilleron et al., 1993 ] <author> Remy Gilleron, Sophie Tison, and Marc Tommasi. </author> <title> Solving systems of set constraints using tree automata. </title> <booktitle> In Proceedings of the Symposium on Theoretical Aspects of Computer Science (Wurzburg, Germany), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Goguen et al., 1987 ] <author> J. A. Goguen, C. Kirchner, and J. Meseguer. </author> <title> Concurrent term rewriting as a model of computation. </title> <editor> In R. Keller and J. Fasel, editors, </editor> <booktitle> Proceedings of Graph Reduction Workshop (Santa Fe, NM), volume 279 of Lecture Notes in Computer Science, </booktitle> <pages> pages 53-93. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: [ Hanschke and Wurtz, 1993 ] <author> Philipp Hanschke and Jorg Wurtz. </author> <title> Satisfiability of the smallest binary program. </title> <journal> Information Processing Letters, </journal> <volume> 45(5) </volume> <pages> 237-241, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: What sufficient conditions make confluence decidable? 4 New Solutions Two old problems (omitted from our previous list) which have recently been solved are the following: Problem 76. Cycle unification [ Bibel et al., 1992 ] is undecidable <ref> [ Devienne, 1993; Hanschke and Wurtz, 1993 ] </ref> . This was a long standing open problem, related to the non-termination of simple logic programs. Problem 77. J. Jezek, J. B. Nation, and R.
Reference: [ Heintze and Jaffar, 1990 ] <author> Nevin Heintze and Joxan Jaffar. </author> <title> A decision procedure for a class of set constraints. </title> <booktitle> In Proceedings of the Fifth Symposium on Logic in Computer Science (Philadelphia, PA), </booktitle> <pages> pages 42-51. </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference: [ Hofbauer and Huber, 1993 ] <author> D. Hofbauer and M. Huber. </author> <title> Computing linearizations using test sets. </title> <editor> In M. Rusinowitch, editor, </editor> <booktitle> Proceedings of the Third International Workshop on Conditional Rewriting Systems (Pont-a-Mousson, </booktitle> <address> France, </address> <month> July </month> <year> 1992), </year> <booktitle> volume 656 of Lecture Notes in Computer Science, </booktitle> <pages> pages 287-301, </pages> <address> Berlin, </address> <month> January </month> <year> 1993. </year> <note> Springer-Verlag. </note>
Reference: [ Hoffmann and Plump, 1991 ] <author> B. Hoffmann and D. Plump. </author> <title> Implementing term rewriting by jungle evaluation. </title> <journal> RAIRO Theoretical Informatics and Applications, </journal> <volume> 25(5) </volume> <pages> 445-472, </pages> <year> 1991. </year>
Reference-contexts: However, no embedding theorem has yet been proved for directed graphs, and (consequently?) powerful termination orderings remain to be designed. Problem 74 (D. Plump). Graph rewriting systems that implement term rewriting systems (see, for example, <ref> [ Barendregt et al., 1987; Hoffmann and Plump, 1991 ] </ref> ) are terminating whenever term rewriting is. The converse, however, does not hold [ Plump, 1991 ] .
Reference: [ Hsiang et al., 1992 ] <author> Jieh Hsiang, Helene Kirchner, Pierre Lescanne, and Michael Rusinow-itch. </author> <title> The term rewriting approach to automated theorem proving. </title> <journal> J. Logic Programming, </journal> 14(1&2):71-99, October 1992. 
Reference-contexts: Recent work has shown that using orderings on terms and formul helps restrict deduction and increase the amount of simplification and redundancy elimination that can be incorporated without forfeiting completeness. For a survey, see <ref> [ Hsiang et al., 1992 ] </ref> . These successes ought to be extended to higher-order calculi, which have been enjoying success in their own right. Ad-hoc rewriting has always been present in symbolic computation systems (e.g. Reduce, Macsyma); Grobner-basis techniques are an integral part of some modern systems.
Reference: [ Huet, 1980 ] <author> Gerard Huet. </author> <title> Confluent reductions: Abstract properties and applications to term rewriting systems. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 27(4) </volume> <pages> 797-821, </pages> <month> October </month> <year> 1980. </year>
Reference-contexts: Oyamaguchi). Is any "strongly" non-overlapping right-linear term-rewriting system confluent? ("Strong" in the sense that left-hand sides are nonoverlapping even when the occurrences of variables have been renamed apart [ Chew, 1981 ] .) On the one hand, strongly non-overlapping systems need not be confluent <ref> [ Huet, 1980 ] </ref> ; on the other hand, strongly non-overlapping right-ground systems are [ Oyamaguchi and Ohta, 1993 ] . Problem 59 (M. Kurihara, M. Krishna Rao).
Reference: [ Huet and Oppen, 1980 ] <author> Gerard Huet and Derek C. Oppen. </author> <title> Equations and rewrite rules: A survey. </title> <editor> In R. Book, editor, </editor> <booktitle> Formal Language Theory: Perspectives and Open Problems, </booktitle> <pages> pages 349-405, </pages> <address> New York, 1980. </address> <publisher> Academic Press. </publisher>
Reference: [ Inverardi and Nesi, 1991 ] <author> P. Inverardi and M. Nesi. </author> <title> Infinite normal forms for non linear term rewriting systems. </title> <type> Technical Report B4-41, </type> <institution> Istituto di Elaborazione, Pisa, Italy, </institution> <month> October </month> <year> 1991. </year>
Reference: [ Jouannaud and Kirchner, 1991 ] <author> Jean-Pierre Jouannaud and Claude Kirchner. </author> <title> Solving equations in abstract algebras: A rule-based survey of unification. </title> <editor> In J.-L. Lassez and G. Plotkin, editors, </editor> <booktitle> Computational Logic: Essays in Honor of Alan Robinson. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: Although many more cases are described in [ Contejean, 1992; Contejean, 1993 ] , the general case remains open. Problem 39. Rules are given in <ref> [ Jouannaud and Kirchner, 1991 ] </ref> for computing dag-solved forms of unification problems in equational theories. The Merge rule x s; x t ) x s; s t given there assumes that s is not a variable and its size is less than or equal to that of t. <p> Refinements of universal unification for when a rewrite system is available have been found (see <ref> [ Jouannaud and Kirchner, 1991 ] </ref> ). Combining constraints with deduction, whether equational [ Kirchner and Kirchner, 1989 ] or full first order [ Kirchner et al., 1990 ] , is another potential growth area.
Reference: [ Jouannaud and Kirchner, 1986 ] <author> Jean-Pierre Jouannaud and Helene Kirchner. </author> <title> Completion of a set of rules modulo a set of equations. </title> <journal> SIAM J. on Computing, </journal> <volume> 15 </volume> <pages> 1155-1194, </pages> <month> November </month> <year> 1986. </year>
Reference-contexts: Problem 33. Completion modulo associativity and commutativity (AC) [ Peter-son and Stickel, 1981 ] is probably the most important case of "extended completion"; the general case of finite congruence classes is treated in <ref> [ Jouannaud and Kirchner, 1986 ] </ref> . Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in [ Baird et al., 1989 ] , and solved completely in [ Jouannaud and Marche, 1990 ] .
Reference: [ Jouannaud and Kounalis, 1989 ] <author> Jean-Pierre Jouannaud and Emmanuel Kounalis. </author> <title> Automatic proofs by induction in equational theories without constructors. </title> <journal> Information and Computation, </journal> <volume> 81(1) </volume> <pages> 1-33, </pages> <year> 1989. </year>
Reference-contexts: Problem 46 (D. Kapur). Ground reducibility of extended rewrite systems, modulo congruences like associativity and commutativity (AC), is undecidable [ Kapur et al., 1987 ] . For left-linear AC systems, on the other hand, it is decidable <ref> [ Jouannaud and Kounalis, 1989 ] </ref> . What can be said more generally about restrictions on extended rewriting that give decidability? This problem is related to number 25. Problem 47.
Reference: [ Jouannaud and Marche, 1990 ] <author> Jean-Pierre Jouannaud and Claude Marche. </author> <title> Completion modulo associativity, commutativity and identity. </title> <editor> In Alfonso Miola, editor, </editor> <booktitle> Proceedings of the International Symposium on the Design and Implementation of Symbolic Computation Systems (Capri, Italy), volume 429 of Lecture Notes in Computer Science, </booktitle> <pages> pages 111-120, </pages> <address> Berlin, April 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in [ Baird et al., 1989 ] , and solved completely in <ref> [ Jouannaud and Marche, 1990 ] </ref> . The techniques, however, do not carry over to completion with idempotence (I) added; how to handle ACZI-completion effectively is open. C.
Reference: [ Jouannaud and Okada, 1991a ] <author> Jean-Pierre Jouannaud and Mitsuhiro Okada. </author> <title> Executable higher-order algebraic specification languages. </title> <booktitle> In Proceedings of the Sixth Symposium on Logic in Computer Science, </booktitle> <pages> pages 350-361, </pages> <address> Amsterdam, The Netherlands, 1991. </address> <publisher> IEEE. </publisher>
Reference-contexts: If T (F ; X ) is the term-algebra which includes only previously defined functional constants|forbidding the use of mutually recursive functional constants|termination is ensured <ref> [ Jouannaud and Okada, 1991a ] </ref> . Does termination also hold when there are mutually recursive definitions? Does this also hold when the subterm assumption is unfulfilled? (In [ Jouannaud and Okada, 1991a ] an alternative schema is proposed, with the subterm assumption weakened at the price of having only first-order <p> ; X ) is the term-algebra which includes only previously defined functional constants|forbidding the use of mutually recursive functional constants|termination is ensured <ref> [ Jouannaud and Okada, 1991a ] </ref> . Does termination also hold when there are mutually recursive definitions? Does this also hold when the subterm assumption is unfulfilled? (In [ Jouannaud and Okada, 1991a ] an alternative schema is proposed, with the subterm assumption weakened at the price of having only first-order variables in X.) Questions of confluence of combinations of typed -calculi and higher-order systems also merit investigation.
Reference: [ Jouannaud and Okada, 1991b ] <author> Jean-Pierre Jouannaud and Mitsuhiro Okada. </author> <title> Satisfiabil-ity of systems of ordinal notations with the subterm property is decidable. </title> <editor> In J. Leach Albert, B. Monien, and M. Rodrguez Artalejo, editors, </editor> <booktitle> Proceedings of the Eighteenth EATCS Colloquium on Automata, Languages and Programming (Madrid, Spain), volume 510 of Lecture Notes in Computer Science, </booktitle> <pages> pages 455-468, </pages> <address> Berlin, July 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: What about confluence of one non-monadic rule? Problem 24. The existential fragment of the first-order theory of the "recursive path ordering" (with multiset and lexicographic "status") is decidable when the precedence on function symbols is total <ref> [ Comon, 1990; Jouannaud and Okada, 1991b ] </ref> , but is undecidable for arbitrary formulas. Is the existential fragment de cidable for partial precedences? The 4 (9 fl 8 fl 9 fl 8 fl ) fragment is undecidable, in general [ Treinen, 1992 ] .
Reference: [ Kapur and Narendran, 1992 ] <author> Deepak Kapur and Paliath Narendran. </author> <title> Double-exponential complexity of computing a complete set of AC-unifiers (Preliminary report). </title> <booktitle> In Proceedings of the Seventh Symposium on Logic in Computer Science, </booktitle> <pages> pages 11-21, </pages> <address> Santa Cruz, CA, </address> <month> June </month> <year> 1992. </year> <note> IEEE. </note>
Reference-contexts: Complexity issues There is a dearth of results on the complexity of problems in rewriting and unification. (This, despite the problems posed in our lists.) One of the handful of exceptions (this one on AC-unification) is <ref> [ Kapur and Narendran, 1992 ] </ref> . There is room for a lot more work on this side of theory. Rewriting, automata and symbolic constraints Rewriting ground terms has much to do with formal language theory. In particular, bottom-up tree automata can be represented naturally by rewrite systems.
Reference: [ Kapur et al., 1987 ] <author> Deepak Kapur, Paliath Narendran, and Hantao Zhang. </author> <title> On sufficient completeness and related properties of term rewriting systems. </title> <journal> Acta Informatica, </journal> <volume> 24(4) </volume> <pages> 395-415, </pages> <month> August </month> <year> 1987. </year>
Reference-contexts: Which ordinals appear in this way as reduction graphs? It is known that all ordinals less than * 0 can be so represented. Problem 46 (D. Kapur). Ground reducibility of extended rewrite systems, modulo congruences like associativity and commutativity (AC), is undecidable <ref> [ Kapur et al., 1987 ] </ref> . For left-linear AC systems, on the other hand, it is decidable [ Jouannaud and Kounalis, 1989 ] . What can be said more generally about restrictions on extended rewriting that give decidability? This problem is related to number 25. Problem 47.
Reference: [ Kapur et al., 1990 ] <author> Deepak Kapur, G. Sivakumar, and Hantao Zhang. </author> <title> A new method for proving termination of AC-rewrite systems. </title> <booktitle> In Proceedings of the Tenth International Conference of Foundations of Software Technology and Theoretical Computer Science, volume 472 of Lecture Notes in Computer Science, </booktitle> <pages> pages 133-148, </pages> <address> Berlin, 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It would be nice to somehow combine these results in an ordering that could orient distributivity the right way and be total when the precedence is. The ordering in <ref> [ Kapur et al., 1990 ] </ref> was incorporated in the Rrl system, but most of this work has yet to filter down into widespread implemented tests that can be used within those rewrite-based theorem provers which support associativity and commutativity.
Reference: [ Kennaway et al., 1990 ] <author> J. R. Kennaway, J. W. Klop, M. R. Sleep, and F. J. de Vries. </author> <title> Transfinite reductions in orthogonal term rewriting systems. </title> <type> Technical Report CS-R9041, </type> <institution> CWI, </institution> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: However, if one wants to consider converging reductions, as in [ Dershowitz et al., 1991c ] , then it is not difficult to construct a counterexample, not to the infinite Parallel Moves Lemma itself, but to the method of proof (cf. <ref> [ Kennaway et al., 1990 ] </ref> ). An infinite Parallel Moves Lemma might involve a different notion of "descendant". Problem 48 (H.-C. Kong).
Reference: [ Kennaway et al., 1991 ] <author> J. R. Kennaway, J. W. Klop, M. R. Sleep, and F. J. de Vries. </author> <title> Transfinite reductions in orthogonal term rewriting systems (Extended abstract). </title> <editor> In Ron Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, Italy), Lecture Notes in Computer Science, </booktitle> <pages> pages 1-12, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Problem 47. For reductions of transfinite length, a version of the Parallel Moves Lemma can be proved if one consider only "strongly converging" infinite reductions in the sense of <ref> [ Kennaway et al., 1991 ] </ref> .
Reference: [ Kirchner and Kirchner, 1989 ] <author> C. Kirchner and H. Kirchner. </author> <title> Constrained equational reasoning. </title> <booktitle> In Proceedings of the ACM-SIGSAM 1989 International Symposium on Symbolic and Algebraic Computation, Portland (Oregon), </booktitle> <pages> pages 382-389. </pages> <publisher> ACM Press, </publisher> <month> July </month> <year> 1989. </year> <note> Report CRIN 89-R-220. </note>
Reference-contexts: Refinements of universal unification for when a rewrite system is available have been found (see [ Jouannaud and Kirchner, 1991 ] ). Combining constraints with deduction, whether equational <ref> [ Kirchner and Kirchner, 1989 ] </ref> or full first order [ Kirchner et al., 1990 ] , is another potential growth area.
Reference: [ Kirchner et al., 1990 ] <author> C. Kirchner, H. Kirchner, and M. Rusinowitch. </author> <title> Deduction with symbolic constraints. </title> <journal> RAIRO Theoretical Informatics and Applications, </journal> <volume> 4(3) </volume> <pages> 9-52, </pages> <year> 1990. </year> <note> Special issue on Automatic Deduction. </note>
Reference-contexts: Refinements of universal unification for when a rewrite system is available have been found (see [ Jouannaud and Kirchner, 1991 ] ). Combining constraints with deduction, whether equational [ Kirchner and Kirchner, 1989 ] or full first order <ref> [ Kirchner et al., 1990 ] </ref> , is another potential growth area.
Reference: [ Klop, 1980 ] <author> Jan Willem Klop. </author> <title> Combinatory Reduction Systems, volume 127 of Mathematical Centre Tracts. </title> <publisher> Mathematisch Centrum, </publisher> <address> Amsterdam, </address> <year> 1980. </year>
Reference-contexts: Problem 61 (T. Nipkow, M. Takahashi). For higher-order rewrite formats as given by combinatory reduction systems <ref> [ Klop, 1980 ] </ref> and higher-order rewrite systems [ Nipkow, 1991; Takahashi, 1993 ] , confluence has been proved in the restricted case of orthogonal systems. <p> Of a more general nature, proposals have been made for quite general rewriting formats that include rewriting with bound variables as in typed -calculi, yielding pleasant mixtures of pattern matching and variable binding. The suggestions in <ref> [ Klop, 1980; Nipkow, 1991; Takahashi, 1993 ] </ref> are quite close, which is encouraging, as it may hint at a canonical framework for higher-order rewriting.
Reference: [ Klop, 1992 ] <author> Jan Willem Klop. </author> <title> Term rewriting systems. </title> <editor> In S. Abramsky, D. M. Gabbay, and T. S. E. Maibaum, editors, </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> volume 2, chapter 1, </volume> <pages> pages 1-117. </pages> <publisher> Oxford University Press, Oxford, </publisher> <year> 1992. </year>
Reference-contexts: The last section contains a partisan list of interesting areas for future research. A new, comprehensive survey of the field is <ref> [ Klop, 1992 ] </ref> . Please send any contributions by electronic or ordinary mail to any of us. We hope to continue periodically publicizing new problems and solutions to old ones.
Reference: [ Kounalis and Lugiez, 1991 ] <author> Emmanuel Kounalis and Denis Lugiez. </author> <title> Compilation of pattern matching with associative commutative functions. </title> <booktitle> In Proceedings of the International Joint Conference on Theory and Practice of Software Development, volume 1: Colloquium on Trees in Algebra and Programming (Brighton, U.K.), Lecture Notes in Computer Science, </booktitle> <pages> pages 57-73, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Kounalis et al., 1991 ] <author> Emmanuel Kounalis, Denis Lugiez, and L. Pottier. </author> <title> A solution of the complement problem in associative-commutative theories. </title> <editor> In A. Tarlecki, editor, </editor> <booktitle> Proceedings of the Sixteenth International Symposium on Mathematical Foundations of Computer Science (Kazimierz Dolny, Poland), volume 520 of Lecture Notes in Computer Science, </booktitle> <pages> pages 287-297, </pages> <address> Berlin, </address> <month> September </month> <year> 1991. </year> <note> Springer-Verlag. </note>
Reference-contexts: Whether the 2 (9 fl 8 fl ) fragment is decidable remains open; see [ Treinen, 1992 ] . A positive answer was given for the important special case of "complement problems" in <ref> [ Kounalis et al., 1991 ] </ref> .
Reference: [ Kruskal, 1960 ] <author> Joseph B. Kruskal. </author> <title> Well-quasi-ordering, the Tree Theorem, and Vazsonyi's conjecture. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 95 </volume> <pages> 210-225, </pages> <month> May </month> <year> 1960. </year>
Reference-contexts: A good definition of graph transduction, that extends rational word transductions is still lacking. Problem 73 (J.-C. Raoult). Termination is, as we know, undecidable. Yet, there are several sufficient conditions ensuring termination for word and term rewritings. Most are suitable extensions of Higman's or Kruskal's embeddings <ref> [ Kruskal, 1960 ] </ref> . Robertson and Seymour [ Robertson and Seymour, 1982 ] have achieved a similar theorem for undirected graphs. However, no embedding theorem has yet been proved for directed graphs, and (consequently?) powerful termination orderings remain to be designed. Problem 74 (D. Plump).
Reference: [ Kucherov, 1991 ] <author> G. Kucherov. </author> <title> On relationship between term rewriting systems and regular tree languages. </title> <editor> In Ron Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lecture Notes in Computer Science, </booktitle> <pages> pages 299-311, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Some progress has been made in [ Berarducci and Bohm, 1992 ] . Problem 7 (H. Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See <ref> [ Gilleron, 1991; Kucherov, 1991 ] </ref> . This has been answered in the affirmative [ Vagvolgyi and Gilleron, 1992; Kucherov and Tajine, 1993; Hofbauer and Huber, 1993 ] . Problem 20 (Y. Metivier [ 1985 ] ).
Reference: [ Kucherov and Tajine, 1993 ] <author> G. Kucherov and M. Tajine. </author> <title> Decidability of regularity and related properties of ground normal form languages. </title> <editor> In M. Rusinowitch, editor, </editor> <booktitle> Proceedings of the Third International Workshop on Conditional Rewriting Systems (Pont-a-Mousson, </booktitle> <address> France, </address> <month> July </month> <year> 1992), </year> <booktitle> volume 656 of Lecture Notes in Computer Science, </booktitle> <pages> pages 272-286, </pages> <address> Berlin, </address> <month> January </month> <year> 1993. </year> <note> Springer-Verlag. To appear in Information and Computation. </note>
Reference: [ Kurihara and Ohuchi, 1992 ] <author> M. Kurihara and A. Ohuchi. </author> <title> Modularity of simple termination of term rewriting systems with shared constructors. </title> <journal> Theoretical Computer Science, </journal> <volume> 103 </volume> <pages> 273-282, </pages> <year> 1992. </year>
Reference-contexts: Problem 59 (M. Kurihara, M. Krishna Rao). One of the earliest results established on modularity of combinations of term-rewriting systems is the confluence of the union of two confluent systems which share no symbols [ Toyama, 1987 ] ; if symbols are shared modularity is not preserved by union <ref> [ Kurihara and Ohuchi, 1992 ] </ref> . Some sufficient conditions for modularity of confluence of constructor-sharing systems that are terminating have been found [ Kurihara and Ohuchi, 1992; Middeldorp and Toyama, 1991 ] . Are there interesting sufficient conditions that are independent of termination? Problem 60 (H. Zantema). <p> Some sufficient conditions for modularity of confluence of constructor-sharing systems that are terminating have been found <ref> [ Kurihara and Ohuchi, 1992; Middeldorp and Toyama, 1991 ] </ref> . Are there interesting sufficient conditions that are independent of termination? Problem 60 (H. Zantema).
Reference: [ Kurth, 1990 ] <author> W. Kurth. </author> <title> Termination und Konfluenz von Semi-Thue-Systems mit nur einer Regel. </title> <type> PhD thesis, </type> <institution> Technische Universitat Clausthal, Clausthal, Germany, </institution> <year> 1990. </year>
Reference-contexts: A less ambitious, long-standing open problem (mentioned in [ Dershowitz and Joua-nnaud, 1990 ] ) is decidability for one (length-increasing) monadic (string, semi-Thue) rule. Termination is undecidable for non-length-increasing monadic systems of rules [ Caron, 1991 ] . For one monadic rule, confluence is decidable <ref> [ Kurth, 1990; Wrathall, 1990 ] </ref> . What about confluence of one non-monadic rule? Problem 24.
Reference: [ Lankford, 1975 ] <author> Dallas S. Lankford. </author> <title> Canonical inference. Memo ATP-32, Automatic Theorem Proving Project, </title> <institution> University of Texas, Austin, TX, </institution> <month> December </month> <year> 1975. </year>
Reference: [ Lankford, 1979 ] <author> Dallas S. Lankford. </author> <title> On proving term rewriting systems are Noetherian. </title> <institution> Memo MTP-3, Mathematics Department, Louisiana Tech. University, Ruston, LA, </institution> <month> Oc-tober </month> <year> 1979. </year>
Reference-contexts: Problem 28 (P. Lescanne). Polynomial and exponential interpretations have been used to prove termination. For the former there are some reasonable methods <ref> [ Ben Cherifa and Lescanne, 1987; Lankford, 1979 ] </ref> that can help determine if a particular interpretation decreases with each application of a rule. Are there other implementable methods suitable for exponential interpretations? Some work on this problem has been reported in [ Lescanne, 1992 ] . Problem 29.
Reference: [ Lassez and Marriott, 1987 ] <author> J.-L. Lassez and K. G. Marriott. </author> <title> Explicit representation of terms defined by counter examples. </title> <journal> J. Automated Reasoning, </journal> <volume> 3(3) </volume> <pages> 1-17, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: Problem 42 (H. Comon). Given a first-order formula with equality as the only predicate symbol, can negation be effectively eliminated from an arbitrary formula when is equivalent to a positive formula? Equivalently, if has a finite complete set of unifiers, can they be computed? Special cases were solved in <ref> [ Comon, 1988; Lassez and Marriott, 1987 ] </ref> . A positive solution is given in [ Tajine, 1993 ] . Problem 43. Design a framework for combining constraint solving algorithms.
Reference: [ Lescanne, 1990 ] <author> P. Lescanne. </author> <title> Well rewrite orderings. </title> <editor> In J. Mitchell, editor, </editor> <booktitle> Proceedings of the Fifth Symposium on Logic in Computer Science, </booktitle> <pages> pages 239-256, </pages> <address> Philadelphia, PA, </address> <year> 1990. </year>
Reference-contexts: Special cases of the latter question have been studied in [ Kounalis and Lugiez, 1991; Kounalis et al., 1991; Fernandez, 1993; Lugiez and Moysset, 1993 ] . Problem 27 (P. Lescanne). In <ref> [ Lescanne, 1990 ] </ref> an extension of term embedding, called "well-rewrite orderings", was introduced, leading to an extension of the concept of simplification ordering.
Reference: [ Lescanne, 1992 ] <author> Pierre Lescanne. </author> <title> Termination of rewrite systems by elementary interpretations. </title> <editor> In H. Kirchner and G. Levi, editors, </editor> <booktitle> Proceedings of the Third International Conference on Algebraic and Logic Programming (Pisa, Italy), volume 632 of Lecture Notes in Computer Science, </booktitle> <pages> pages 21-36. </pages> <publisher> Springer-Verlag, </publisher> <month> September </month> <year> 1992. </year>
Reference-contexts: Are there other implementable methods suitable for exponential interpretations? Some work on this problem has been reported in <ref> [ Lescanne, 1992 ] </ref> . Problem 29. Any rewrite relation commutes with the strict-subterm relation; hence, the union of the latter with an arbitrary terminating rewrite relation is terminating, and also "fully invariant" (closed under instantiation).
Reference: [ Litovski et al., to appear ] <author> Igor Litovski, Yves Metivier, and Eric Sopena. </author> <title> Definitions and comparisons of local computations on graphs. </title> <journal> Mathematical Systems Theory, </journal> <note> to appear. Available as internal report 91-43 of LaBRI, University of Bordeaux 1. </note>
Reference-contexts: Raoult). There exist finite automata for words, trees, and dags. No really good comparable notion is available for graphs. (Perhaps there is one akin to the ideas in <ref> [ Litovski et al., to appear ] </ref> on label rewriting.) Problem 71 (J.-C. Raoult). There are good algorithms for pattern-matching for words and trees, but not yet for graphs. Problem 72 (J.-C. Raoult). Graph rewritings, like term or word rewritings, are usually finitely branching.
Reference: [ Lugiez and Moysset, 1993 ] <author> D. Lugiez and J.-L. Moysset. </author> <title> Complement problems and tree automata in AC-like theories. </title> <booktitle> In Proceedings of the Symposium on Theoretical Aspects of Computer Science (Wurzburg, Germany), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Marche, 1993 ] <author> Claude Marche, </author> <type> personal communication, </type> <year> 1993. </year>
Reference: [ Meseguer, 1992 ] <author> Jose Meseguer. </author> <title> Conditional rewriting logic as a unified model of concur-rency. </title> <journal> Theoretical Computer Science, </journal> <volume> 96 </volume> <pages> 73-155, </pages> <year> 1992. </year>
Reference: [ Metivier, 1985 ] <institution> Yves Metivier. Calcul de longueurs de cha^nes de reecriture dans le monode libre. Theoretical Computer Science, </institution> <month> 35(1) </month> <pages> 71-87, </pages> <month> January </month> <year> 1985. </year>
Reference-contexts: Problem 20 (Y. Metivier [ 1985 ] ). What is the best bound on the length of a derivation for a one-rule length-preserving string-rewriting (semi-Thue) system? Is it O (n 2 ) (n is the size of the initial term) as conjectured in <ref> [ Metivier, 1985 ] </ref> , or O (n k ) (k is the size of the rule) as proved there. Rumor has it that the conjecture has been shown true. Problem 21 (M. Dauchet).
Reference: [ Middeldorp, 1990 ] <author> Aart Middeldorp. </author> <title> Modular Properties of Term Rewriting Systems. </title> <type> PhD thesis, </type> <institution> Vrije Universiteit, </institution> <address> Amsterdam, The Netherlands, </address> <year> 1990. </year>
Reference: [ Middeldorp and Toyama, 1991 ] <author> Aart Middeldorp and Yoshihito Toyama. </author> <title> Completeness of combinations of constructor systems. </title> <editor> In R. Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lecture Notes in Computer Science, </booktitle> <pages> pages 174-187, </pages> <address> Berlin, April 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Some sufficient conditions for modularity of confluence of constructor-sharing systems that are terminating have been found <ref> [ Kurihara and Ohuchi, 1992; Middeldorp and Toyama, 1991 ] </ref> . Are there interesting sufficient conditions that are independent of termination? Problem 60 (H. Zantema).
Reference: [ Milner et al., 1992 ] <author> R. Milner, J. Parrow, and D. Walker. </author> <title> A calculus of mobile processes, I and II. </title> <journal> Information and Computation, </journal> <volume> 100 </volume> <pages> 1-77, </pages> <year> 1992. </year>
Reference-contexts: Much work is being done on combinations of -calculus and process calculi. A well-known example is the -calculus, which extends Milner's CCS, as well as -calculus; see <ref> [ Milner et al., 1992 ] </ref> . Graph rewriting The notion of rewriting (as it appeared already in Thue's [ 1914 ] work) can profitably be applied to structures other than finite terms.
Reference: [ Muller, 1992 ] <author> Fritz Muller. </author> <title> Confluence of the lambda calculus with left-linear algebraic rewriting. </title> <journal> Information Processing Letters, </journal> <volume> 41 </volume> <pages> 293-299, </pages> <month> April </month> <year> 1992. </year>
Reference: [ Nipkow, 1991 ] <author> Tobias Nipkow. </author> <title> Higher-order critical pairs. </title> <booktitle> In Proceedings of the Sixth Symposium on Logic in Computer Science, </booktitle> <pages> pages 342-349, </pages> <address> Amsterdam, The Netherlands, 1991. </address> <publisher> IEEE. </publisher>
Reference-contexts: Problem 61 (T. Nipkow, M. Takahashi). For higher-order rewrite formats as given by combinatory reduction systems [ Klop, 1980 ] and higher-order rewrite systems <ref> [ Nipkow, 1991; Takahashi, 1993 ] </ref> , confluence has been proved in the restricted case of orthogonal systems. Can confluence be extended to such systems when they are weakly orthogonal (all critical pairs are trivial)? When critical pairs arise only at the root, confluence is known to hold. <p> Of a more general nature, proposals have been made for quite general rewriting formats that include rewriting with bound variables as in typed -calculi, yielding pleasant mixtures of pattern matching and variable binding. The suggestions in <ref> [ Klop, 1980; Nipkow, 1991; Takahashi, 1993 ] </ref> are quite close, which is encouraging, as it may hint at a canonical framework for higher-order rewriting.
Reference: [ Nipkow, 1991 ] <author> Tobias Nipkow. </author> <title> Higher-order critical pairs. </title> <booktitle> In Proceedings of the Sixth Symposium on Logic in Computer Science, </booktitle> <pages> pages 342-349, </pages> <address> Amsterdam, The Netherlands, 1991. </address> <publisher> IEEE. </publisher>
Reference-contexts: Problem 61 (T. Nipkow, M. Takahashi). For higher-order rewrite formats as given by combinatory reduction systems [ Klop, 1980 ] and higher-order rewrite systems <ref> [ Nipkow, 1991; Takahashi, 1993 ] </ref> , confluence has been proved in the restricted case of orthogonal systems. Can confluence be extended to such systems when they are weakly orthogonal (all critical pairs are trivial)? When critical pairs arise only at the root, confluence is known to hold. <p> Of a more general nature, proposals have been made for quite general rewriting formats that include rewriting with bound variables as in typed -calculi, yielding pleasant mixtures of pattern matching and variable binding. The suggestions in <ref> [ Klop, 1980; Nipkow, 1991; Takahashi, 1993 ] </ref> are quite close, which is encouraging, as it may hint at a canonical framework for higher-order rewriting.
Reference: [ Nieuwenhuis, 1993 ] <author> Robert Nieuwenhuis. </author> <title> A new ordering constraint solving method and its applications. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Problem 64. Is confluence of ordered rewriting (using the intersection of one step replacement of equals and a reduction ordering that is total on ground terms) decidable when the (existential fragment of the) ordering is? This question was raised in <ref> [ Nieuwenhuis, 1993 ] </ref> , where some results were given for the lexicographic path ordering. Problem 65 (D. Cohen, P. Watson [ 1991 ] ). An interesting system for doing arithmetic by rewriting was presented in [ Cohen and Watson, 1991 ] . Unfortunately, its termination has not been proved.
Reference: [ O'Donnell, 1985 ] <author> Michael J. O'Donnell. </author> <title> Equational Logic as a Programming Language. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1985. </year>
Reference-contexts: For example, Combinatory Logic is directly lambda definable. On the other hand, not every orthogonal rewrite system can be directly defined in lambda calculus. Are there universal rewrite systems, with respect to direct definability? (For alternative notions of definability, see <ref> [ O'Donnell, 1985 ] </ref> .) ? The first author was supported in part by the National Science Foundation under Grants CCR-90-07195 and CCR-90-24271 and by a Meyerhoff Visiting Professorship at the Weiz-mann Institute of Science; the second author was partially supported by the ESPRIT working groups COMPASS and CCL; the third
Reference: [ Oostrom, 1992 ] <author> V. van Oostrom. </author> <title> Confluence by decreasing diagrams. </title> <type> IR 298, </type> <institution> Vrije Uni-versiteit, </institution> <address> Amsterdam, The Netherlands, </address> <month> August </month> <year> 1992. </year> <note> To appear in Theoretical Computer Science. </note>
Reference-contexts: An abstract reduction system is "decreasing Church-Rosser", if there exists a labelling of the reduction relation by a well-founded set of labels, such that all local divergences can be completed to form a "decreasing diagram" (see <ref> [ Oostrom, 1992 ] </ref> for precise definitions). Does the Church-Rosser property imply decreasing Church-Rosser? That is, is it always possible to localize the Church-Rosser property? This is known to be the case for (weakly) normalizing and finite systems. Problem 57 (F. Baader [ 1990 ] ).
Reference: [ Oyamaguchi, 1987 ] <author> M. Oyamaguchi. </author> <title> The Church-Rosser property for ground term rewrit-ing systems is decidable. </title> <journal> Theoretical Computer Science, </journal> <volume> 49(1) </volume> <pages> 43-79, </pages> <year> 1987. </year>
Reference: [ Oyamaguchi and Ohta, 1993 ] <author> M. Oyamaguchi and Y. Ohta. </author> <title> On the confluent property of right-ground term rewriting systems. </title> <journal> Trans. IEICE, </journal> <volume> J76-D-I:39-45, </volume> <year> 1993. </year>
Reference-contexts: confluent? ("Strong" in the sense that left-hand sides are nonoverlapping even when the occurrences of variables have been renamed apart [ Chew, 1981 ] .) On the one hand, strongly non-overlapping systems need not be confluent [ Huet, 1980 ] ; on the other hand, strongly non-overlapping right-ground systems are <ref> [ Oyamaguchi and Ohta, 1993 ] </ref> . Problem 59 (M. Kurihara, M. Krishna Rao).
Reference: [ Peterson and Stickel, 1981 ] <author> Gerald E. Peterson and Mark E. Stickel. </author> <title> Complete sets of reductions for some equational theories. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 233-264, </pages> <month> April </month> <year> 1981. </year>
Reference: [ Plump, 1991 ] <author> D. Plump. </author> <title> Implementing term rewriting by graph reduction: Termination of combined systems. </title> <editor> In S. Kaplan and M. Okada, editors, </editor> <booktitle> Proceedings of the Second International Workshop on Conditional and Typed Rewriting Systems (Montreal, </booktitle> <address> Canada, </address> <month> June </month> <year> 1990), </year> <booktitle> volume 516 of Lecture Notes in Computer Science, </booktitle> <pages> pages 307-317, </pages> <address> Berlin, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Problem 74 (D. Plump). Graph rewriting systems that implement term rewriting systems (see, for example, [ Barendregt et al., 1987; Hoffmann and Plump, 1991 ] ) are terminating whenever term rewriting is. The converse, however, does not hold <ref> [ Plump, 1991 ] </ref> . How can termination orderings for term rewriting be adapted to cover those cases in which graph rewriting is terminating although term rewriting is not? Problem 75 (D. Plump).
Reference: [ Plump, 1993 ] <author> D. Plump. </author> <title> Hypergraph rewriting: Critical pairs and undecidability of confluence. </title> <editor> In M. R. Sleep, M. J. Plasmeijer, and M. C. van Eekelen, editors, </editor> <title> Term Graph Rewriting: Theory and Practice, chapter 15. </title> <publisher> Wiley, </publisher> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: How can termination orderings for term rewriting be adapted to cover those cases in which graph rewriting is terminating although term rewriting is not? Problem 75 (D. Plump). In contrast to term rewriting, confluence of general (hyper-)graph rewriting|in the "Berlin approach"|is undecidable, even for terminating systems <ref> [ Plump, 1993 ] </ref> . What sufficient conditions make confluence decidable? 4 New Solutions Two old problems (omitted from our previous list) which have recently been solved are the following: Problem 76.
Reference: [ Reddy, 1986 ] <author> Uday S. Reddy. </author> <title> On the relationship between logic and functional languages. </title> <editor> In D. DeGroot and G. Lindstrom, editors, </editor> <title> Logic Programming: Functions, Relations, </title> <booktitle> and Equations, </booktitle> <pages> pages 3-36. </pages> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1986. </year>
Reference-contexts: Logic programming Rewriting techniques have found applications in logic program-ming and constraint-based programming (besides their obvious application to functional programming). Semantic unification using rewrite-rules has been proposed by a number of people ( <ref> [ Reddy, 1986; Dershowitz and Plaisted, 1988 ] </ref> , among others) as an ideal basis for a synthesis of functional and logic programming; the SLOG language [ Fribourg, 1985 ] is a case in point.
Reference: [ Ringeissen, 1992 ] <author> Christophe Ringeissen. </author> <title> Unification in a combination of equational theories with shared constants and its application to primal algebras. </title> <editor> In A. Voronkov, editor, </editor> <booktitle> Proceedings of the Conference on Logic Programming and Automated Reasoning (St. Pe-tersburg, Russia), volume 624 of Lecture Notes in Artificial Intelligence, </booktitle> <address> Berlin, July 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Some particular cases have been attacked: In [ Baader and Schulz, 1992 ] it was shown how decision procedures for solvability of unification problems can be combined. In [ Baader and Schulz, 1993 ] a similar technique is applied to (unquantified) systems of equations and disequations. In <ref> [ Ringeissen, 1992 ] </ref> the combination of unification algorithms is extended to the case where alphabets share constants.
Reference: [ Robertson and Seymour, 1982 ] <author> Neil Robertson and P. D. Seymour. </author> <title> Graph minors IV. Tree-width and well-quasi-ordering. </title> <note> Submitted 1982; revised January 1986. </note>
Reference-contexts: Problem 73 (J.-C. Raoult). Termination is, as we know, undecidable. Yet, there are several sufficient conditions ensuring termination for word and term rewritings. Most are suitable extensions of Higman's or Kruskal's embeddings [ Kruskal, 1960 ] . Robertson and Seymour <ref> [ Robertson and Seymour, 1982 ] </ref> have achieved a similar theorem for undirected graphs. However, no embedding theorem has yet been proved for directed graphs, and (consequently?) powerful termination orderings remain to be designed. Problem 74 (D. Plump).
Reference: [ Rubio and Nieuwenhuis, 1993 ] <author> A. Rubio and R. Nieuwenhuis. </author> <title> A precedence-based total AC-compatible ordering. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Schmidt-Schau, 1989 ] <author> M. Schmidt-Schau. </author> <title> Unification in a combination of arbitrary disjoint equational theories. </title> <journal> J. Symbolic Computation, </journal> 8(1&2):51-99, 1989. 
Reference-contexts: Problem 67 (F. Baader, K. Schulz [ 1992 ] ). It was shown in [ Baader and Schulz, 1992 ] that being able to solve unification problems with linear constant restrictions is a necessary and sufficient condition for the possibility of combining unification algorithms. Other approaches <ref> [ Schmidt-Schau, 1989; Boudet, 1990 ] </ref> require solvability of constant elimination problems, which was shown to be equivalent to presupposing solvability of unification problems with arbitrary constant restrictions [ Baader and Schulz, 1992 ] .
Reference: [ Statman, 1991 ] <author> R. Statman. </author> <title> There is no hyperrecurrent S,K combinator. </title> <type> Research Report 91-133, </type> <institution> Department of Mathematics, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1991. </year>
Reference-contexts: It is known that hyper-recurrent combinators don't exist for Combinatory Logic <ref> [ Statman, 1991 ] </ref> .) Problem 54 (R. Statman). Recall that M is a universal generator if each combina-tor P has a superterm Q such that M ! fl Q.
Reference: [ Statman, 1992 ] <author> R. Statman. </author> <title> A short note on a problem of Ray Smullyan. </title> <institution> Rapport, Institut National de Rechereche en Informatique et en Automatique, Le Chesnay, France, </institution> <year> 1992. </year>
Reference-contexts: Is there a uniform universal generator? (For Combinatory Logic, if we restrict the context C [] to be of the form (N ), no such term exists <ref> [ Statman, 1992 ] </ref> .) Problem 55 (R. Statman). It has been proved that (in -calculus or Combinatory Logic) every recursively enumerable set of ground terms that is closed under conversion has the form fM jP M $ fl Qg for some P and Q.
Reference: [ Tajine, 1993 ] <author> M. Tajine. </author> <title> Negation elimination for syntactic equational formula. </title> <editor> In C. Kirchner, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer Science, </booktitle> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A positive solution is given in <ref> [ Tajine, 1993 ] </ref> . Problem 43. Design a framework for combining constraint solving algorithms. Some particular cases have been attacked: In [ Baader and Schulz, 1992 ] it was shown how decision procedures for solvability of unification problems can be combined.
Reference: [ Takahashi, 1993 ] <author> M. Takahashi. </author> <title> -calculi with conditional rules. </title> <editor> In M. Bezem and J. F. Groote, editors, </editor> <booktitle> Proceedings of the International Conference on Typed Lambda Calculi and Applications (Utrecht, The Netherlands), volume 664 of Lecture Notes in Computer Science, </booktitle> <pages> pages 406-417, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Problem 61 (T. Nipkow, M. Takahashi). For higher-order rewrite formats as given by combinatory reduction systems [ Klop, 1980 ] and higher-order rewrite systems <ref> [ Nipkow, 1991; Takahashi, 1993 ] </ref> , confluence has been proved in the restricted case of orthogonal systems. Can confluence be extended to such systems when they are weakly orthogonal (all critical pairs are trivial)? When critical pairs arise only at the root, confluence is known to hold. <p> Of a more general nature, proposals have been made for quite general rewriting formats that include rewriting with bound variables as in typed -calculi, yielding pleasant mixtures of pattern matching and variable binding. The suggestions in <ref> [ Klop, 1980; Nipkow, 1991; Takahashi, 1993 ] </ref> are quite close, which is encouraging, as it may hint at a canonical framework for higher-order rewriting.
Reference: [ Thue, 1914 ] <editor> A. Thue. Probleme uber veranderungen von zeichenreihen nach gegeben regeln. Skr. Vid. Kristianaia I. Mat. Naturv. Klasse, </editor> <volume> 10/34, </volume> <year> 1914. </year>
Reference: [ Tiden and Arnborg, 1987 ] <author> Erik Tiden and Stefan Arnborg. </author> <title> Unification problems with one-sided distributivity. </title> <journal> J. of Symbolic Computation, </journal> <volume> 3 </volume> <pages> 183-202, </pages> <year> 1987. </year>
Reference-contexts: Problem 38 (J. Siekmann). Is satisfiability of equations in the theory of dis tributivity (unification modulo a distributivity axiom) decidable? The question should read "modulo one right- and one left-distributivity axiom". (With just one of these, the problem had already been solved in <ref> [ Tiden and Arnborg, 1987 ] </ref> .) A partial positive solution is given in [ Contejean, 1993 ] , based on a striking result on the structure of certain proofs modulo distributivity.
Reference: [ Toyama, 1987 ] <author> Yoshihito Toyama. </author> <title> On the Church-Rosser property for the direct sum of term rewriting systems. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 34(1) </volume> <pages> 128-143, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Problem 59 (M. Kurihara, M. Krishna Rao). One of the earliest results established on modularity of combinations of term-rewriting systems is the confluence of the union of two confluent systems which share no symbols <ref> [ Toyama, 1987 ] </ref> ; if symbols are shared modularity is not preserved by union [ Kurihara and Ohuchi, 1992 ] . Some sufficient conditions for modularity of confluence of constructor-sharing systems that are terminating have been found [ Kurihara and Ohuchi, 1992; Middeldorp and Toyama, 1991 ] .
Reference: [ Toyama et al., 1989 ] <author> Yoshihito Toyama, Jan Willem Klop, and Hendrik Pieter Baren-dregt. </author> <title> Termination for the direct sum of left-linear term rewriting systems. </title> <editor> In Nachum Dershowitz, editor, </editor> <booktitle> Proceedings of the Third International Conference on Rewriting Techniques and Applications (Chapel Hill, NC), volume 355 of Lecture Notes in Computer Science, </booktitle> <pages> pages 477-491, </pages> <address> Berlin, April 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference: [ Treinen, 1990 ] <author> Ralf Treinen. </author> <title> A new method for undecidability proofs of first order theories. </title> <editor> In K. V. Nori and C. E. Veni Madhavan, editors, </editor> <booktitle> Proceedings of the Tenth Conference on Foundations of Software Technology and Theoretical Computer Science, volume 472 of Lecture Notes in Computer Science, </booktitle> <pages> pages 48-62. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: algebra T (F )=AC (F )? It is known that the 3 fragment is undecidable when there are at least one unary function symbol (besides the AC one) and one constant; the 1 fragment is decidable; the full theory is decidable even when there are no other symbols (besides constants) <ref> [ Treinen, 1990 ] </ref> . Whether the 2 (9 fl 8 fl ) fragment is decidable remains open; see [ Treinen, 1992 ] . A positive answer was given for the important special case of "complement problems" in [ Kounalis et al., 1991 ] .
Reference: [ Treinen, 1992 ] <author> Ralf Treinen. </author> <title> A new method for undecidability proofs of first order theories. </title> <journal> J. Symbolic Computation, </journal> <volume> 14(5) </volume> <pages> 437-457, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Is the existential fragment de cidable for partial precedences? The 4 (9 fl 8 fl 9 fl 8 fl ) fragment is undecidable, in general <ref> [ Treinen, 1992 ] </ref> . The positive existential fragment for the empty precedence (that is, for homeomorphic tree embedding) is decidable [ Boudet and Comon, 1993 ] . One might also ask whether the first-order theory of total recursive path orderings is decidable. <p> Whether the 2 (9 fl 8 fl ) fragment is decidable remains open; see <ref> [ Treinen, 1992 ] </ref> . A positive answer was given for the important special case of "complement problems" in [ Kounalis et al., 1991 ] .
Reference: [ Vagvolgyi and Gilleron, 1992 ] <author> S. Vagvolgyi and R. Gilleron. </author> <title> For a rewrite system it is decidable whether the set of irreducible, ground terms is decidable. </title> <journal> Bulletin of the European Association for Theoretical Computer Science, </journal> <volume> 48 </volume> <pages> 197-209, </pages> <month> October </month> <year> 1992. </year>
Reference: [ Venkataraman, 1987 ] <author> K. N. Venkataraman. </author> <title> Decidability of the purely existential fragment of the theory of term algebras. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 34(2) </volume> <pages> 492-510, </pages> <year> 1987. </year>
Reference-contexts: One might also ask whether the first-order theory of total recursive path orderings is decidable. Related results include the following: The existential fragment of the subterm ordering is decidable, but its 3 (9 fl 8 fl 9 fl ) fragment is not <ref> [ Venkataraman, 1987 ] </ref> . The first-order theory of encompassment (the instance-of-subterm relation) is claimed decidable [ Caron et al., 1993 ] . Once we're at it, we might as well ask what the complexity of the satisfiability test for the existential fragment is|in the total case. Problem 25 (R.
Reference: [ Venturini-Zilli, 1984 ] <author> M. Venturini-Zilli. </author> <title> Reduction graphs in the Lambda Calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 29 </volume> <pages> 251-275, </pages> <year> 1984. </year>
Reference-contexts: In the meantime, one (no. 48) has been answered. Problem 45 (M. Venturini-Zilli). Some reduction graphs in -calculus <ref> [ Venturini-Zilli, 1984 ] </ref> are isomorphic to ordinals. For example, the reduction graph of (x:y)((z:zzz)(z:zzz)) is isomorphic to ! + 1. Which ordinals appear in this way as reduction graphs? It is known that all ordinals less than * 0 can be so represented. Problem 46 (D. Kapur).
Reference: [ Visser, 1980 ] <author> A. Visser. Numerations, </author> <title> lambda calculus, and arithmetic. </title> <editor> In Hindley and Seldin, editors, </editor> <booktitle> Essays on Combinatory Logic, Lambda-Calculus, and Formalism, </booktitle> <pages> pages 259-284. </pages> <publisher> Academic Press, </publisher> <year> 1980. </year>
Reference-contexts: Let's call M hyper-recurrent if N is recurrent for all N $ fl M . (Equivalently, M is hyper-recurrent if P ! fl Q ! fl P whenever P $ fl Q $ fl M .) Are there any hyper-recurrent combinators? (The problem comes up immediately when the Ershov-Visser theory <ref> [ Visser, 1980 ] </ref> for $ fl is applied to ! fl . It is known that hyper-recurrent combinators don't exist for Combinatory Logic [ Statman, 1991 ] .) Problem 54 (R. Statman).
Reference: [ Weiermann, 1992 ] <author> Andreas Weiermann. </author> <title> Well-rewrite orderings and the induced recursive path orderings. Unpublished note, </title> <institution> Institut fur Mathematische Logik und Grundlagen-forschung, </institution> <year> 1992. </year>
Reference-contexts: How can those ideas best be extended to form the basis for some new kind of "recursive path ordering"? Progress in this direction has been reported in <ref> [ Weiermann, 1992 ] </ref> . Problem 28 (P. Lescanne). Polynomial and exponential interpretations have been used to prove termination.
Reference: [ Wrathall, 1990 ] <author> C. Wrathall. </author> <title> Confluence of one-rule Thue systems. </title> <booktitle> In Proceedings of the First International Workshop on Word Equations and Related Topics (Tubingen), volume 572 of Lecture Notes in Computer Science, </booktitle> <pages> pages 237-246, </pages> <address> Berlin, 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A less ambitious, long-standing open problem (mentioned in [ Dershowitz and Joua-nnaud, 1990 ] ) is decidability for one (length-increasing) monadic (string, semi-Thue) rule. Termination is undecidable for non-length-increasing monadic systems of rules [ Caron, 1991 ] . For one monadic rule, confluence is decidable <ref> [ Kurth, 1990; Wrathall, 1990 ] </ref> . What about confluence of one non-monadic rule? Problem 24.
Reference: [ Zantema, 1993 ] <author> H. Zantema. </author> <title> Type removal in term rewriting. </title> <editor> In M. Rusinowitch, editor, </editor> <booktitle> Proceedings of the Third International Workshop on Conditional Rewriting Systems (Pont-a-Mousson, </booktitle> <address> France, </address> <month> July </month> <year> 1992), </year> <booktitle> volume 656 of Lecture Notes in Computer Science, </booktitle> <pages> pages 148-154, </pages> <address> Berlin, </address> <month> January </month> <year> 1993. </year> <title> Springer-Verlag. This article was processed using the LT E X macro package with LLNCS style </title>
Reference-contexts: Any rewrite in R is also a rewrite in R 0 . The converse does not hold, since terms and rewrite steps in R 0 are allowed that are not well-typed in R. In <ref> [ Zantema, 1993 ] </ref> it was shown that termination of R is in general not equivalent to termination of R 0 , but it is if R does not contain both collapsing and duplicating rules.
References-found: 130

