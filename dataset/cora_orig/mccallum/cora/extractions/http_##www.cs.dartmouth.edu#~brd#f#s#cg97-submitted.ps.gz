URL: http://www.cs.dartmouth.edu/~brd/f/s/cg97-submitted.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~brd/www/
Root-URL: http://www.cs.dartmouth.edu
Email: Email address: karl@IEOR.Berkeley.EDU.  brd@cs.cornell.edu.  
Title: The Area Bisectors of a Polygon and Force Equilibria in Programmable Vector Fields  
Author: Karl-Friedrich Bohringer Bruce Randall Donald Dan Halperin 
Address: Author's current address:  Berkeley.  Email address:  
Affiliation: Cornell University  Cornell University  Tel Aviv University Robotics Vision Laboratory, Department of Computer Science, Cornell University.  ALPHA laboratory, Dept. of Ind. Eng. and Op. Research, University of California,  Robotics Vision Laboratory, Department of Computer Science, Cornell University.  
Abstract: We consider the family of area bisectors of a polygon (possibly with holes) in the plane. We say that two bisectors of a polygon P are combinatorially distinct if they induce different partitionings of the vertices of P . We show that there are simple polygons with n vertices that have (n 2 ) combinatorially distinct area bisectors (matching the obvious upper bound), and we present an output-sensitive algorithm for computing an explicit representation of all the bisectors of a given polygon. We partition the range [=2; =2) of bisector slopes into maximal intervals such that all the bisectors whose slopes are in a single interval cross a fixed set of edges of P . Over each interval we describe the bisectors by a rational function. We denote the number of such maximal intervals by . Let r be the maximum number of edges of P intersected by any line, and let (t) be the time required to find the roots of a polynomial equation of degree t. For any " &gt; 0, the algorithm runs in time O( 2=3 n 2=3+" + ff() (r)), where ff() is the functional inverse of Ackermann's function. If the polygon is rectilinear then the algorithm runs in time O( 2=3 n 2=3+" ). Our study is motivated by the development of novel, flexible feeding devices for parts positioning and orienting. These devices often exploit exotic actuation technologies such as MEMS (micro electro mechanical system) actuator arrays or transversely vibrating plates. They can generate a programmable force field that induces forces and moments upon a part placed on the device. Over time, the part may come to rest in a dynamic equilibrium state. A squeeze field is one of the basic force fields for parts positioning; it consists of unit forces pointing perpendicularly towards a center line l. In a squeeze field, a part P is in equilibrium if the line l is a bisector of P (translational equilibrium), and if the line connecting the area centers of both sections of P is perpendicular to l. Finding these equilibrium poses, and determining bounds on the number of equilibrium poses, is crucial for the development of efficient parts positioning strategies. fl Work on this paper by Karl-Friedrich Bohringer and Bruce Randall Donald has been supported in part by the National Science Foundation under grants No. IRI-8802390, IRI-9000532, IRI-9201699, and by a Presidential Young Investigator award to Bruce Donald, in part by NSF/ARPA Special Grant for Experimental Research No. IRI-9403903, and in part by the Air Force Office of Sponsored Research, the Mathematical Sciences Institute, Intel Corporation, and AT&T Bell laboratories. Work on this paper by Dan Halperin has been supported by an Alon Fellowship and by ESPRIT IV LTR Project No. 21957 (CGAL). x Department of Computer Science, Tel Aviv University, Tel Aviv 69978, ISRAEL. Email address: danha@math.tau.ac.il. Part of the work on this paper was carried out while D.H. was at the Robotics Laboratory, Department of Computer Science, Stanford University. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. K. Agarwal and M. Sharir. </author> <title> Applications of a new space partitioning technique. </title> <journal> Discrete Compututational Geometry, </journal> <volume> 9 </volume> <pages> 11-38, </pages> <year> 1993. </year>
Reference-contexts: The specifications of the data structure R (V fl ) for ray shooting among the lines V fl are as follows: Proposition 5.1 <ref> [1] </ref> Given a collection L of n lines in the plane and a storage parameter n 1+" s n 2+" , we can preprocess L in time O (s 1+" ) into a data structure of size s so that a ray shooting query can be answered in time O (n
Reference: [2] <author> K.-F. Bohringer, V. Bhatt, and K. Y. Goldberg. </author> <title> Sensorless manipulation using transverse vibrations of a plate. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation (ICRA), pages 1989 - 1996, </booktitle> <address> Nagoya, Japan, </address> <month> May </month> <year> 1995. </year> <note> http://www.cs.cornell.edu/home/karl/VibratoryAlign. </note>
Reference-contexts: There we also point to open problems raised by our study. 2 Motivation: Programmable Vector Fields Programmable vector fields can be used to control a variety of flexible planar part feeders. These devices often exploit exotic actuation technologies such as arrayed, microfabricated motion pixels [5] or transverse vibrating plates <ref> [2] </ref>. These new automation designs promise great flexibility, speed, and dexterity|we believe they may be employed to orient, singulate, sort, and feed parts. However, since they have only recently been invented, programming and controlling them for manipulation tasks is challenging.
Reference: [3] <author> K.-F. Bohringer, B. R. Donald, and N. C. MacDonald. </author> <title> Single-crystal silicon actuator arrays for micro manipulation tasks. </title> <booktitle> In Proc. IEEE Workshop on Micro Electro Mechanical Systems (MEMS), </booktitle> <address> San Diego, CA, </address> <month> Feb. </month> <year> 1996. </year> <note> http://www.cs.cornell.edu/home /karl/MicroActuators. </note>
Reference-contexts: For an illustration, see in a sensorless fashion. Figure 1 (b) shows a strategy for manipulating a part to a unique orientation equilibrium (up to symmetry), using a sequence of squeeze fields. In <ref> [3] </ref>, we describe experimental devices that implement 2-dimensional programmable vector fields, as described above.
Reference: [4] <author> K.-F. Bohringer, B. R. Donald, and N. C. MacDonald. </author> <title> Upper and lower bounds for programmable vector fields with applications to MEMS and vibratory plate parts feeders. </title> <booktitle> In International Workshop on Algorithmic Foundations of Robotics (WAFR), </booktitle> <address> Toulouse, France, </address> <month> July </month> <year> 1996. </year> <note> http://www.cs.cornell.edu/home/karl/MicroManipulation. </note>
Reference-contexts: For an illustration, see in a sensorless fashion. Figure 1 (b) shows a strategy for manipulating a part to a unique orientation equilibrium (up to symmetry), using a sequence of squeeze fields. In [3], we describe experimental devices that implement 2-dimensional programmable vector fields, as described above. In <ref> [4] </ref>, we describe a technique for analyzing them called equilibrium analysis, lower bounds (i.e., impossibility results) on what the devices cannot do, and results on a classification of control strategies yielding design criteria by which well-behaved manipulation strategies may be developed. In [4], we describe new manipulation algorithms using equilibrium analysis. <p> In <ref> [4] </ref>, we describe a technique for analyzing them called equilibrium analysis, lower bounds (i.e., impossibility results) on what the devices cannot do, and results on a classification of control strategies yielding design criteria by which well-behaved manipulation strategies may be developed. In [4], we describe new manipulation algorithms using equilibrium analysis. Equilibrium analysis is a fundamentally geometric problem. To illustrate, let us make the following assumptions. <p> Such a field is defined by making all the actuators push normally towards a common squeeze line. It is possible to show that every squeeze field has potential (i.e., is conservative) for particles. Therefore, when lifted to a field for polygonal parts, we also obtain a potential field. In <ref> [4] </ref>, we show that under certain dynamic and mechanical assumptions, we can compute a sequence of squeeze fields guaranteed to bring any part into unique moment equilibrium. No sensing is required, but a clock is required to switch between fields. <p> The number of equilibria critically impacts both the complexity of plan generation, and plan size. Therefore, it is important to bound the number of equilibria for a given part or class of parts. In <ref> [4] </ref> we show that every convex part has at most O (n) equilibria, and every non-convex part has O (rn 2 ) equilibria (r is the maximum number of edges of P intersected by any line), under squeeze fields. In [4], we investigate a different class of programmable vector fields, called <p> In <ref> [4] </ref> we show that every convex part has at most O (n) equilibria, and every non-convex part has O (rn 2 ) equilibria (r is the maximum number of edges of P intersected by any line), under squeeze fields. In [4], we investigate a different class of programmable vector fields, called radial strategies, under which every polygon (even non-convex polygons) has only O (n) equilibria. However, the radial strategies employed by our improved algorithms and analysis require significant mechanical and control complexity|even though they require no sensing. <p> For this reason, it makes sense to analyze strategies composed of field sequences that we know are implementable using current (microscopic or macroscopic) technology. We have already demonstrated experimentally that squeeze fields are implementable using either MEMS, or macroscopic actuation technologies <ref> [4] </ref>. In this paper, we show how to analyze the number of area bisectors, and hence bound the number of force equilibria. Perhaps even more significantly, we provide an output-sensitive algorithm for computing area bisectors. <p> Proof: See Appendix. 2 From Lemma 6.1 we conclude that a squeeze field induces a finite number of total equilibria on a polygonal part P . In <ref> [4] </ref> we show how to exploit this finiteness property to automatically generate alignment plans that bring P into a unique (up to symmetry) orientation, by cascading squeeze fields that systematically reduce the possible orientations of P . Much remains to be done.
Reference: [5] <author> K.-F. Bohringer, B. R. Donald, R. Mihailovich, and N. C. MacDonald. </author> <title> Sensorless manipulation using massively parallel microfabricated actuator arrays. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation (ICRA), </booktitle> <pages> pages 826-833, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1994. </year> <note> http://www.cs .cornell.edu/home/karl/MicroManipulation. </note>
Reference-contexts: There we also point to open problems raised by our study. 2 Motivation: Programmable Vector Fields Programmable vector fields can be used to control a variety of flexible planar part feeders. These devices often exploit exotic actuation technologies such as arrayed, microfabricated motion pixels <ref> [5] </ref> or transverse vibrating plates [2]. These new automation designs promise great flexibility, speed, and dexterity|we believe they may be employed to orient, singulate, sort, and feed parts. However, since they have only recently been invented, programming and controlling them for manipulation tasks is challenging.
Reference: [6] <author> M. de Berg, D. Halperin, M. H. Overmars, J. Snoeyink, and M. van Kreveld. </author> <title> Efficient ray shooting and hidden surface removal. </title> <journal> Algorithmica, </journal> <volume> 12 </volume> <pages> 30-53, </pages> <year> 1994. </year>
Reference-contexts: However, since we do not know the value of in advance we do the following <ref> [6, 13] </ref>: We assume that is at most 0 := n, we choose s accordingly and run the algorithm. <p> We keep iterating the process, doubling 0 at each iteration until we have completely identified fi. It can be easily verified that the iterative process may increase the running time of the algorithm by a constant factor only (see, e.g., <ref> [6] </ref>). 2 It remains to add the time to compute all the intersection points of fi with the edges of the zone of fi. Let r denote the maximum number of edges of P intersected by a single line.
Reference: [7] <author> M. Daz and J. O'Rourke. </author> <title> Ham-sandwich sectioning of polygons. </title> <booktitle> In Proc. 2nd Canadian Conference on Computational Geometry, </booktitle> <pages> pages 98-101, </pages> <address> Ottawa, </address> <year> 1990. </year>
Reference-contexts: The zone of a 1 curve in an arrangement of lines is the collection of faces of the arrangement crossed by the curve [15]. Area bisectors were considered by Daz and O'Rourke <ref> [7] </ref>. However, their focus is on the continuous version of the Ham-sandwich cut problem, and of a problem they introduce of orthogonal four-sections; see [7] for more details. Our study is motivated by the development of novel, flexible feeding devices for parts positioning and orienting. <p> Area bisectors were considered by Daz and O'Rourke <ref> [7] </ref>. However, their focus is on the continuous version of the Ham-sandwich cut problem, and of a problem they introduce of orthogonal four-sections; see [7] for more details. Our study is motivated by the development of novel, flexible feeding devices for parts positioning and orienting. These devices often exploit exotic actuation technologies such as MEMS (micro electro mechanical system) actuator arrays or transversely vibrating plates. <p> Proof: 1. There are O (n 2 ) different placements for such that it coincides with more than one vertex of P . Hence all placements of fall into one of O (n 2 ) combinatorially equivalent classes. 2. See <ref> [7, Lemma 3.1] </ref>. 3. Assume is a bisector of P with a fixed slope x. Since P is connected and nondegenerate, the intersection between and P must be a line segment of non-zero length.
Reference: [8] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry, </title> <booktitle> volume 10 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <address> Heidelberg, Germany, </address> <year> 1987. </year> <title> 10 s a 1 0 p 1 2 1 p polygon P </title> . 
Reference-contexts: This is the well-known k-set problem (for k = n 2 ) that has been extensively studied in discrete geometry <ref> [8] </ref>. The best bounds known to-date for this problem are an upper bound O (n 3=2 = log fl n) [14] and a lower bound (n log n) [10]. <p> Our algorithm proceeds by constructing the zone of the curve fi in an arrangement of lines in a plane dual to the plane of the polygon. An arrangement of a set L of lines is the subdivision of the plane induced by L into vertices, edges, and faces <ref> [8] </ref>. The zone of a 1 curve in an arrangement of lines is the collection of faces of the arrangement crossed by the curve [15]. Area bisectors were considered by Daz and O'Rourke [7].
Reference: [9] <author> H. Edelsbrunner, L. Guibas, J. Pach, R. Pollack, R. Seidel, and M. Sharir. </author> <title> Arrangements of curves in the plane: Topology, combinatorics, and algorithms. </title> <journal> Theoretical Compututer Science, </journal> <volume> 92 </volume> <pages> 319-336, </pages> <year> 1992. </year>
Reference-contexts: Proof: We modify the arrangements A (L) as follows (by an idea borrowed from <ref> [9] </ref>). Wherever fl crosses a line ` 2 L, we make a small gap in `, splitting ` into two segments such that fl passes between them.
Reference: [10] <author> H. Edelsbrunner and E. Welzl. </author> <title> On the number of line separations of a finite set in the plane. </title> <journal> J. Combin. Theory Ser. A, </journal> <year> 1985. </year>
Reference-contexts: This is the well-known k-set problem (for k = n 2 ) that has been extensively studied in discrete geometry [8]. The best bounds known to-date for this problem are an upper bound O (n 3=2 = log fl n) [14] and a lower bound (n log n) <ref> [10] </ref>. An obvious upper bound on the number of distinct area bisectors of a polygon with n vertices is O (n 2 )|each combinatorial equivalence class of area bisectors is determined by a pair of vertices of the polygon.
Reference: [11] <author> L. J. Guibas and J. Stolfi. </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. </title> <journal> ACM Trans. Graph., </journal> <volume> 4, </volume> <year> 1985. </year>
Reference-contexts: Therefore we can construct each new face using ray shooting queries and proceed as above. We keep a data structure (say a quad-edge structure <ref> [11] </ref>) that describes all the faces of A (V fl ) that have already been constructed so that we do not construct the same face twice.
Reference: [12] <author> J. O'Rourke. </author> <title> Computational Geometry in C. </title> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: If O is a set of objects fo 1 ; o 2 ; : : : ; o n g in the plane, O fl will denote the set of dual objects fo fl 1 ; o fl n g. For details on duality transforms see, e.g., <ref> [12] </ref>. Let P be a polygon with n vertices as defined in the Introduction, namely connected, non-degenerate and possibly with holes.
Reference: [13] <author> M. H. Overmars and M. Sharir. </author> <title> Output-sensitive hidden surface removal. </title> <booktitle> In Proc. 30th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 598-603, </pages> <year> 1989. </year>
Reference-contexts: However, since we do not know the value of in advance we do the following <ref> [6, 13] </ref>: We assume that is at most 0 := n, we choose s accordingly and run the algorithm.
Reference: [14] <author> J. Pach, W. Steiger, and E. Szemeredi. </author> <title> An upper bound on the number of planar k-sets. </title> <journal> Discrete Comput. Geom., </journal> <volume> 7, </volume> <year> 1992. </year>
Reference-contexts: This is the well-known k-set problem (for k = n 2 ) that has been extensively studied in discrete geometry [8]. The best bounds known to-date for this problem are an upper bound O (n 3=2 = log fl n) <ref> [14] </ref> and a lower bound (n log n) [10]. An obvious upper bound on the number of distinct area bisectors of a polygon with n vertices is O (n 2 )|each combinatorial equivalence class of area bisectors is determined by a pair of vertices of the polygon.

References-found: 14

