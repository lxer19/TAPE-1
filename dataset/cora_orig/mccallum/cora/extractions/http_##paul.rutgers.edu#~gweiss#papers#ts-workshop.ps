URL: http://paul.rutgers.edu/~gweiss/papers/ts-workshop.ps
Refering-URL: http://paul.rutgers.edu/~gweiss/papers/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: gmweiss@att.com, hirsh@cs.rutgers.edu  
Title: Learning to Predict Rare Events in Categorical Time-Series Data  
Author: Gary M. Weiss and Haym Hirsh 
Address: Piscataway, NJ 08855  
Affiliation: Department of Computer Science Rutgers University  
Abstract: Learning to predict rare events from timeseries data with nonnumerical features is an important real-world problem. An example of such a problem is the task of predicting telecommunication equipment failures from network alarm data. For a variety of reasons, existing statistical and machine learning methods are not well suited to solving this class of problems. This paper describes timeweaver, a genetic algorithm based machine learning system that predicts rare events by identifying predictive temporal and sequential patterns within timeseries data. Timeweaver is applied to two problems and is shown to produce results which are superior to existing learning methods. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agrawal, R., and Srikant, R. </author> <year> 1995. </year> <title> Mining sequential patterns. </title> <booktitle> In Proceedings of the International Conference on Data Engineering. </booktitle>
Reference-contexts: Nonetheless, such algorithms have been used to identify regularities in telecommunication network alarm sequences in order to help predict future faults (Manilla, Toivonen & Verkamo 1995) and to find sequential patterns in a database of customer transactions <ref> (Agrawal & Srikant 1995) </ref>. The Event Prediction Problem This section defines the event prediction problem, since our formulation differs in several key ways from the traditional time-series prediction problem.
Reference: <author> Biggus, J. P. </author> <year> 1996. </year> <title> Data Mining with Neural Networks. </title> <publisher> McGraw Hill. </publisher>
Reference-contexts: Neural networks using a sliding window technique or a recurrent network architecture have also been successfully applied to timeseries prediction problems, but also require numerical features to be effective <ref> (Biggus 1996) </ref>. Previous efforts to solve event prediction problems with categorical features have relied on reformulating the problem into a concept learning problem. Dietterich & Michalski (1985) provide a general discussion of such methods.
Reference: <author> Brazma, A. </author> <year> 1993. </year> <title> Efficient Identification of Regular Expressions from Representative Examples. </title> <booktitle> In Proceedings of the Sixth Annual Workshop on Computational Learning Theory, </booktitle> <pages> 236-242. </pages>
Reference: <author> Brockwell, P. J., and Davis, R. </author> <year> 1996. </year> <title> Introduction to Time-Series and Forecasting. </title> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Classical timeseries prediction involves predicting the next n successive observations from a history of past observations. These problems have been studied extensively within the field of statistics <ref> (Brockwell & Davis 1996) </ref>, but statistical techniques are only applicable when the data is limited to numerical features. Neural networks using a sliding window technique or a recurrent network architecture have also been successfully applied to timeseries prediction problems, but also require numerical features to be effective (Biggus 1996).
Reference: <author> Cohen, W. </author> <year> 1995. </year> <title> Fast Effective Rule Induction. </title> <booktitle> In Proceedings of the Twelfth International Conference on Machine Learning, </booktitle> <pages> 115-123. </pages>
Reference-contexts: 4 0 6 0 8 0 1 0 0 R E C A L L 1 5 m in 8 h r Comparison with Other Methods The performance of timeweaver on the equipment failure prediction problem will now be compared against two rule induction systems, C4.5rules (Quinlan 1993) and RIPPER <ref> (Cohen 1995) </ref>, and FOIL, a system that learns logical definitions from relations (Quinlan 1990).
Reference: <author> Davison, B., and Hirsh, H. </author> <year> 1998. </year> <title> Probabilistic Online Action Prediction. </title> <booktitle> In Proceedings of the AAAI Spring Symposium on Intelligent Environments. </booktitle>
Reference-contexts: Timeweaver does better, and except for the more command much better, than a non-incremental version of IPAM, a probabilistic method that predicts the most likely next command based on the previous command <ref> (Davison & Hirsh 1998) </ref>. The results from IPAM are shown as individual data points. The first prediction pattern in the prediction rules generated by timeweaver to predict the ls command is the pattern: 6:cd.?.cd.?.cd (the pattern duration of 6 means the match must occur within 6 events).
Reference: <author> Dietterich, T., and Michalski, R. </author> <year> 1985. </year> <title> Discovering patterns in sequences of Events, </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 187-232. </pages>
Reference-contexts: Timeweaver also learns noise-tolerant rules, since learning to solve these difficult problems is similar to learning in a noisy environment. This contrasts with early work in the field which focused on finding sequence-generating rules from artificially generated, noise-free, datasets <ref> (Dietterich & Michalski 1985) </ref>. Timeweaver can also be applied to sequence prediction problems, since a sequence can be viewed as a timeseries where the timestamp is a sequence number.
Reference: <author> Giordana, A., Saitta, L., and Zini, F. </author> <year> 1994. </year> <title> Learning Disjunctive Concepts by Means of Genetic Algorithms. </title> <booktitle> In Proceedings of the Eleventh International Conference on Machine Learning, </booktitle> <pages> 96-104. </pages>
Reference: <author> Goldberg, D. </author> <year> 1989. </year> <title> Genetic Algorithms in Search, Optimization and Machine Learning, </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Thus, each individual represents only part of a complete solution. Our approach resembles that of classifier systems, which are GAs that evolve a set of classification rules <ref> (Goldberg 1989) </ref>. <p> We use a niching strategy called sharing to maintain a diverse population <ref> (Goldberg 1989) </ref>. Diversity is encouraged by selecting individuals proportional to their shared fitness, where shared fitness is defined as fitness divided by niche count.
Reference: <author> Jiang, T., and Li, M. </author> <year> 1991. </year> <title> On the complexity of learning strings and sequences. </title> <booktitle> In Proceedings of the Fourth Annual Workshop on Computational Learning Theory, </booktitle> <pages> 367-371. </pages> <address> Santa Cruz, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Lang, K. </author> <year> 1992. </year> <title> Random DFAs can be approximately learned from sparse uniform examples, </title> <booktitle> In Proceedings of the Fifth Annual Workshop on Computational Learning Theory. </booktitle>
Reference: <author> Manilla, H., Toivonen, H., and Verkamo, A. </author> <year> 1995. </year> <title> Discovering Frequent Episodes in Sequences. </title> <booktitle> In First International Conference on Knowledge Discovery and Data Mining, </booktitle> <pages> 210-215, </pages> <address> Montreal, Canada, </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Complete and relatively efficient algorithms exist for finding such patterns, but these common patterns are not guaranteed to be useful for prediction. Nonetheless, such algorithms have been used to identify regularities in telecommunication network alarm sequences in order to help predict future faults <ref> (Manilla, Toivonen & Verkamo 1995) </ref> and to find sequential patterns in a database of customer transactions (Agrawal & Srikant 1995). The Event Prediction Problem This section defines the event prediction problem, since our formulation differs in several key ways from the traditional time-series prediction problem.
Reference: <author> McCallum, R., and Spackman, K. </author> <year> 1990. </year> <title> Using genetic algorithms to learn disjunctive rules from examples. </title> <booktitle> In Proceedings of the Seventh International Conference on Machine Learning, </booktitle> <pages> 149-152. </pages>
Reference: <author> Murata, T., and Ishibuchi, H. </author> <year> 1995. </year> <title> MOGA: Multi-Objective Genetic Algorithms. </title> <booktitle> In IEEE International Conference on Evolutionary Computation, </booktitle> <pages> 289-294. </pages>
Reference: <author> Quinlan, J. R., </author> <year> 1990. </year> <title> Learning Logical Definitions from Relations, </title> <journal> Machine Learning, </journal> <volume> 5: </volume> <pages> 239-266. </pages>
Reference-contexts: A L L 1 5 m in 8 h r Comparison with Other Methods The performance of timeweaver on the equipment failure prediction problem will now be compared against two rule induction systems, C4.5rules (Quinlan 1993) and RIPPER (Cohen 1995), and FOIL, a system that learns logical definitions from relations <ref> (Quinlan 1990) </ref>. In order to use the example-based rule induction systems, the timeseries data was first transformed by sliding a window of size n over the data and combining the n events within the window into a single example by concatenating the features.
Reference: <author> Quinlan, J. R. </author> <year> 1993. </year> <title> C4.5: Programs for Machine Learning. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: data. 0 2 0 4 0 6 0 8 0 1 0 0 R E C A L L 1 5 m in 8 h r Comparison with Other Methods The performance of timeweaver on the equipment failure prediction problem will now be compared against two rule induction systems, C4.5rules <ref> (Quinlan 1993) </ref> and RIPPER (Cohen 1995), and FOIL, a system that learns logical definitions from relations (Quinlan 1990).
Reference: <author> Sasisekharan, R., Seshadri, V., and Weiss, S. </author> <year> 1996. </year> <title> Data mining and forecasting in large-scale telecommunication networks, </title> <journal> IEEE Expert, </journal> <volume> 11(1): </volume> <pages> 37-43. </pages>
Reference-contexts: The transformation procedure will ensure that some of the temporal information from the timeseries is preserved. Any concept learning program can then be applied to the transformed data. This approach has been used within the telecommunication industry to identify recurring transient network faults <ref> (Sasisekharan, Seshadri & Weiss 1996) </ref> and to predict catastrophic equipment failures (Weiss, Eddy, Weiss & Dube 1998). In this paper we employ a direct approach for solving event prediction problemsone that does not require reformulating the problem. Previous work has also tried to solve similar problems using a direct approach.
Reference: <author> Van Rijsbergen, C. J. </author> <year> 1979. </year> <note> Information Retrieval, Butterworth, London, second edition. </note>
Reference-contexts: The fitness of an individual prediction pattern is based on both its precision and recall and is computed using the F-measure, defined below in equation 1, where b controls the importance of precision relative to recall <ref> (Van Rijsbergen 1979) </ref>. Any fixed value of b yields a fixed bias in the algorithm and, in practice, leads to poor performance of the GA.
Reference: <author> Weiss, G. M. </author> <year> 1998. </year> <note> Timeweaver WWW Home Page: http://paul.rutgers.edu/~gweiss/thesis/timeweaver.html. </note>
Reference-contexts: The conventional approach for solving event prediction problems has been to reformulate the problem into a concept learning problem. We argue that this approach is inappropriate since it loses important temporal and sequential information. This paper describes timeweaver <ref> (Weiss 1998) </ref>, a learning system designed to solve rare event prediction problems with categorical features by identifying predictive temporal and sequential patterns. <p> Any concept learning program can then be applied to the transformed data. This approach has been used within the telecommunication industry to identify recurring transient network faults (Sasisekharan, Seshadri & Weiss 1996) and to predict catastrophic equipment failures <ref> (Weiss, Eddy, Weiss & Dube 1998) </ref>. In this paper we employ a direct approach for solving event prediction problemsone that does not require reformulating the problem. Previous work has also tried to solve similar problems using a direct approach. <p> Timeweaver produces significantly better results than these other learning methods and also achieves higher levels of recall. Timeweaver can also be compared against ANSWER, the expert system responsible for handling the 4ESS alarms <ref> (Weiss, Ros & Singhal 1998) </ref>. ANSWER uses a simple thresholding strategy to generate an alert whenever more than a specified number of interrupt alarms occur within a specified time period. These alerts can be interpreted as a prediction that the device generating the alarms is going to fail.
Reference: <author> Weiss, G. M., Eddy, J., Weiss, S., and Dube., R. </author> <year> 1998. </year> <title> Intelligent Technologies for Telecommunications. </title> <booktitle> In Intelligent Engineering Applications, Chapter 8, </booktitle> <publisher> CRC Press. </publisher>
Reference-contexts: The conventional approach for solving event prediction problems has been to reformulate the problem into a concept learning problem. We argue that this approach is inappropriate since it loses important temporal and sequential information. This paper describes timeweaver <ref> (Weiss 1998) </ref>, a learning system designed to solve rare event prediction problems with categorical features by identifying predictive temporal and sequential patterns. <p> Any concept learning program can then be applied to the transformed data. This approach has been used within the telecommunication industry to identify recurring transient network faults (Sasisekharan, Seshadri & Weiss 1996) and to predict catastrophic equipment failures <ref> (Weiss, Eddy, Weiss & Dube 1998) </ref>. In this paper we employ a direct approach for solving event prediction problemsone that does not require reformulating the problem. Previous work has also tried to solve similar problems using a direct approach. <p> Timeweaver produces significantly better results than these other learning methods and also achieves higher levels of recall. Timeweaver can also be compared against ANSWER, the expert system responsible for handling the 4ESS alarms <ref> (Weiss, Ros & Singhal 1998) </ref>. ANSWER uses a simple thresholding strategy to generate an alert whenever more than a specified number of interrupt alarms occur within a specified time period. These alerts can be interpreted as a prediction that the device generating the alarms is going to fail.
Reference: <author> Weiss, G. M., Ros J. P., and Singhal, A. </author> <year> (1998). </year> <title> ANSWER: Network Monitoring using ObjectOriented Rules. </title> <booktitle> In Proceedings of the Tenth Conference on Innovative Applications of Artificial Intelligence, </booktitle> <address> Madison, Wisconsin. </address>
Reference-contexts: The conventional approach for solving event prediction problems has been to reformulate the problem into a concept learning problem. We argue that this approach is inappropriate since it loses important temporal and sequential information. This paper describes timeweaver <ref> (Weiss 1998) </ref>, a learning system designed to solve rare event prediction problems with categorical features by identifying predictive temporal and sequential patterns. <p> Any concept learning program can then be applied to the transformed data. This approach has been used within the telecommunication industry to identify recurring transient network faults (Sasisekharan, Seshadri & Weiss 1996) and to predict catastrophic equipment failures <ref> (Weiss, Eddy, Weiss & Dube 1998) </ref>. In this paper we employ a direct approach for solving event prediction problemsone that does not require reformulating the problem. Previous work has also tried to solve similar problems using a direct approach. <p> Timeweaver produces significantly better results than these other learning methods and also achieves higher levels of recall. Timeweaver can also be compared against ANSWER, the expert system responsible for handling the 4ESS alarms <ref> (Weiss, Ros & Singhal 1998) </ref>. ANSWER uses a simple thresholding strategy to generate an alert whenever more than a specified number of interrupt alarms occur within a specified time period. These alerts can be interpreted as a prediction that the device generating the alarms is going to fail.
References-found: 21

