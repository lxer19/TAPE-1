URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P633.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts96.htm
Root-URL: http://www.mcs.anl.gov
Email: vavasis@cs.cornell.edu.  
Title: Quality Mesh Generation in Higher Dimensions  
Author: Scott A. Mitchell Stephen A. Vavasis 
Note: Part of this work was done while the author was visiting  
Address: Ithaca, NY 14853,  
Affiliation: Department of Computer Science, Cornell University,  Argonne National Laboratory.  
Date: February 4, 1997  
Abstract: We consider the problem of triangulating a d-dimensional region. Our mesh generation algorithm, called QMG, is a quadtree-based algorithm that can triangulate any polyhedral region including nonconvex regions with holes. Furthermore, our algorithm guarantees a bounded aspect ratio triangulation provided that the input domain itself has no sharp angles. Finally, our algorithm is guaranteed never to overrefine the domain, in the sense that the number of simplices produced by QMG is bounded above by a factor times the number produced by any competing algorithm, where the factor depends on the aspect ratio bound satisfied by the competing algorithm. The QMG algorithm has been implemented in C++ and is used as a mesh generator for the finite element method. fl This work supported in part by an NSF PYI award with matching funds from AT&T, Sun Microsystems, Tektronix and Xerox. Support was also received from the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Dept. of Energy, under Contract W-31-109-Eng-38 through Argonne National Laboratory. y Computational Mechanics and Visualization Department, Sandia National Laboratories, Albuquerque, NM 87185, samitch@sandia.gov.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. S. Baker, E. Gross, and C. Rafferty. </author> <title> Nonobtuse triangulation of polygons. </title> <journal> Discrete and Comp. Geometry, </journal> <volume> 3 </volume> <pages> 147-168, </pages> <year> 1988. </year>
Reference-contexts: These authors also used a quadtree approach, but the extension of their technique to higher dimensions is far from straightforward. Our QMG algorithm differs in many ways from that earlier paper. Other work on triangulation problems with optimality guarantees is the result of Baker, Grosse and Rafferty <ref> [1] </ref>, whose algorithm triangulates 2D polygons with nonobtuse angles and Chew's [7] triangulation of 2D polygons with guaranteed aspect ratio using a Delaunay approach. <p> See Fig. 10 for an illustration. Proof. For 2 <ref> [0; 1] </ref>, let C () denote the contraction by of C toward x (i.e., v 2 C iff v + (1 )x 2 C ()). Let U () be the component of C () " P that contains x.
Reference: [2] <author> M. Bern, D. Dobkin, and D. Eppstein. </author> <title> Triangulating polygons without large angles. </title> <type> Preprint, </type> <year> 1991. </year>
Reference-contexts: An example of a non-null chain in this figure would be starting from the vertex (0; 0) (whose close point is at (0; 0) and is associated with the two-dimensional face P itself), then the edge f0g fi <ref> [0; 2] </ref> containing it, whose close point is the marked point on E near (0; 2), and finally the box [0; 4] fi [0; 4], whose close point is the marked point near (4; 4) on E. <p> In the case d = 2, more is known about this problem. In particular, the algorithm of Bern, Dobkin and Eppstein <ref> [2] </ref> produces a triangulation T also satisfying T (P ) c (P ), and also T has an optimal (linear) number of triangles. 44 In the case d = 3, much less is known.
Reference: [3] <author> M. Bern and D. Eppstein. </author> <title> Mesh generation and optimal triangulation. </title> <editor> In D. Z. Du and F. K. Hwang, editors, </editor> <booktitle> Computing in Euclidean Geometry, </booktitle> <pages> pages 47-123. </pages> <publisher> World Scientific, </publisher> <address> Singapore, </address> <year> 1995. </year>
Reference-contexts: Indeed, as shown by Schonhardt [15], Steiner points are necessary for triangulating nonconvex polyhedra in three dimensions and higher. For additional background on 3 optimal triangulation, we refer the reader to the excellent surveys of Bern and Eppstein <ref> [3] </ref> and Bern and Plassmann [5]. Note that, because of the importance of mesh generation, there is a vast body literature on mesh generation algorithms. We do not attempt to survey this literature here because the majority of these papers are not concerned with mathematical quality guarantees. <p> Is there a mesh generation algorithm for three-dimensional domains that guarantees dihedral angles bounded by =2? Such a bound is important for some finite element problems [17]. It is known <ref> [3] </ref> how to solve the corresponding problem in two dimensions. 5. Can the running time bound be improved? 54 6. The optimality properties demonstrated here all involve constant fac-tors that are apparently very large.
Reference: [4] <author> M. Bern, D. Eppstein, and J. Gilbert. </author> <title> Provably good mesh generation. </title> <journal> J. Comp. Sytem Sciences, </journal> <volume> 48 </volume> <pages> 384-409, </pages> <year> 1994. </year>
Reference-contexts: Indeed, the implementation of QMG allows a user-specified refinement function to control the degree of refinement. Our work is closely related to earlier work by Bern, Eppstein and Gilbert <ref> [4] </ref>, who solved the corresponding problem for two-dimensional polygonal domains. These authors also used a quadtree approach, but the extension of their technique to higher dimensions is far from straightforward. Our QMG algorithm differs in many ways from that earlier paper. <p> figure would be starting from the vertex (0; 0) (whose close point is at (0; 0) and is associated with the two-dimensional face P itself), then the edge f0g fi [0; 2] containing it, whose close point is the marked point on E near (0; 2), and finally the box <ref> [0; 4] </ref> fi [0; 4], whose close point is the marked point near (4; 4) on E. An example of a null chain would be the vertex at (4; 0) (whose closepoint is at (4; 0)), the edge f4g fi [0; 4] (whose close point is on E near (4; 4)), <p> starting from the vertex (0; 0) (whose close point is at (0; 0) and is associated with the two-dimensional face P itself), then the edge f0g fi [0; 2] containing it, whose close point is the marked point on E near (0; 2), and finally the box <ref> [0; 4] </ref> fi [0; 4], whose close point is the marked point near (4; 4) on E. An example of a null chain would be the vertex at (4; 0) (whose closepoint is at (4; 0)), the edge f4g fi [0; 4] (whose close point is on E near (4; 4)), and finally the <p> point on E near (0; 2), and finally the box <ref> [0; 4] </ref> fi [0; 4], whose close point is the marked point near (4; 4) on E. An example of a null chain would be the vertex at (4; 0) (whose closepoint is at (4; 0)), the edge f4g fi [0; 4] (whose close point is on E near (4; 4)), and finally the box [4; 8] fi [0; 4], which has the same close point near (4; 4). <p> An example of a null chain would be the vertex at (4; 0) (whose closepoint is at (4; 0)), the edge f4g fi [0; 4] (whose close point is on E near (4; 4)), and finally the box <ref> [4; 8] </ref> fi [0; 4], which has the same close point near (4; 4). This figure shows a triangulation on both sides of E for illustrative purposes, although if E were a boundary edge, in fact only one side of E would be triangulated. <p> An example of a null chain would be the vertex at (4; 0) (whose closepoint is at (4; 0)), the edge f4g fi <ref> [0; 4] </ref> (whose close point is on E near (4; 4)), and finally the box [4; 8] fi [0; 4], which has the same close point near (4; 4). This figure shows a triangulation on both sides of E for illustrative purposes, although if E were a boundary edge, in fact only one side of E would be triangulated.
Reference: [5] <author> M. Bern and P. Plassmann. </author> <title> Mesh generation. </title> <type> Preprint, </type> <year> 1996. </year>
Reference-contexts: Indeed, as shown by Schonhardt [15], Steiner points are necessary for triangulating nonconvex polyhedra in three dimensions and higher. For additional background on 3 optimal triangulation, we refer the reader to the excellent surveys of Bern and Eppstein [3] and Bern and Plassmann <ref> [5] </ref>. Note that, because of the importance of mesh generation, there is a vast body literature on mesh generation algorithms. We do not attempt to survey this literature here because the majority of these papers are not concerned with mathematical quality guarantees.
Reference: [6] <author> B. Chazelle and L. Palios. </author> <title> Triangulating a nonconvex polytope. </title> <booktitle> In Proc. 5th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 393-400. </pages> <publisher> ACM Press, </publisher> <year> 1989. </year> <month> 55 </month>
Reference-contexts: Chew's work was extended by Ruppert [14] to handle varying degrees of refinement (and thus establishing the Bern et al. optimality properties), and later by Chew also [8] to curved surfaces. In three dimensions, no work previous to ours guaranteed bounded aspect ratio triangulations, although Chazelle and Palios <ref> [6] </ref> developed an algorithm with the best possible bound (up to a constant factor) on the cardinality of the triangulation in terms of reflex angles. Our triangulation uses Steiner points, meaning that it introduces new vertices into the domain not present in the original input.
Reference: [7] <author> L. P. Chew. </author> <title> Guaranteed-quality triangular meshes. </title> <type> Technical Report TR-89-983, </type> <institution> Department of Computer Science, Cornell University, </institution> <year> 1989. </year>
Reference-contexts: Our QMG algorithm differs in many ways from that earlier paper. Other work on triangulation problems with optimality guarantees is the result of Baker, Grosse and Rafferty [1], whose algorithm triangulates 2D polygons with nonobtuse angles and Chew's <ref> [7] </ref> triangulation of 2D polygons with guaranteed aspect ratio using a Delaunay approach. Chew's work was extended by Ruppert [14] to handle varying degrees of refinement (and thus establishing the Bern et al. optimality properties), and later by Chew also [8] to curved surfaces.
Reference: [8] <author> L. P. Chew. </author> <title> Guaranteed-quality mesh generation for curved surfaces. </title> <booktitle> In Proc. 9th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 274-280. </pages> <publisher> ACM Press, </publisher> <year> 1993. </year>
Reference-contexts: Chew's work was extended by Ruppert [14] to handle varying degrees of refinement (and thus establishing the Bern et al. optimality properties), and later by Chew also <ref> [8] </ref> to curved surfaces. In three dimensions, no work previous to ours guaranteed bounded aspect ratio triangulations, although Chazelle and Palios [6] developed an algorithm with the best possible bound (up to a constant factor) on the cardinality of the triangulation in terms of reflex angles. <p> An example of a null chain would be the vertex at (4; 0) (whose closepoint is at (4; 0)), the edge f4g fi [0; 4] (whose close point is on E near (4; 4)), and finally the box <ref> [4; 8] </ref> fi [0; 4], which has the same close point near (4; 4). This figure shows a triangulation on both sides of E for illustrative purposes, although if E were a boundary edge, in fact only one side of E would be triangulated.
Reference: [9] <author> Claes Johnson. </author> <title> Numerical Solution of Partial Differential Equations by the Finite Element Method. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1987. </year>
Reference-contexts: For good accuracy bounds in the finite element method, it is necessary that the tetrahedra have bounded aspect ratio. The aspect ratio of a simplex is defined as its maximum side-length divided by its minimum altitude. For an analysis of the accuracy of the finite element method, see Johnson <ref> [9] </ref>. The mesh produced by QMG is guaranteed to have good aspect ratio. Let ae QMG be the worst aspect ratio among all simplices in the QMG triangulation of a particular input polyhedron P .
Reference: [10] <author> G. Miller, W. Thurston, S.-H. Teng, and S. Vavasis. </author> <title> Geometric separators for finite element meshes. </title> <note> To appear in SIAM J. Scientific Computing, </note> <year> 1997. </year>
Reference-contexts: Let T 1 ; T 2 be two simplices that share a common vertex v. Then minalt (T 1 ) i 1 (ae; d) minalt (T 2 ), where the function i 1 (; ) is defined below. We omit the proof of this lemma, which is contained in <ref> [10] </ref>. Here is a sketch.
Reference: [11] <author> S. Mitchell. </author> <note> Tripoint information. See http: // sass577.endo.sandia.gov:80 / 9225 / Personnel / samitch / csstuff / csguide.html , 1996. </note>
Reference-contexts: Finally, the triangulation part of the algorithm also requires O (s) operations. Thus, 53 the total running time is O (N 2 s). 19 Implementation A two-dimensional version of QMG, called "tripoint," was implemented by S. Mitchell in C++ and is available on the World Wide Web <ref> [11] </ref>. A full version of QMG has been implemented in C++ by S. Vavasis; the implementation QMG1.1 is more general than the version described in this paper because it can also handle nonmanifold features, including several kinds of internal boundaries.
Reference: [12] <author> S. A. Mitchell and S. Vavasis. </author> <title> An aspect ratio bound for triangulating a d-grid cut by a hyperplane (extended abstract). </title> <booktitle> In Proc. 12th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 48-57, </pages> <year> 1996. </year> <note> A full version is available on line at ftp: // ftp.cs.cornell.edu / pub / vavasis / papers / asp9.ps.Z. </note>
Reference-contexts: In Section 10-Section 17 we provide the analysis of QMG, including the proofs of the two main optimality properties mentioned above. In Section 18, we consider the asymptotic running time of QMG, and in Section 19 we briefly describe the implementation. This article has a companion paper <ref> [12] </ref> that describes how to triangulate a grid of uniform boxes cut by a k-affine space. The method in that paper is used as a subroutine here, and we need some of the results of the analysis in that other paper for the analysis in Section 10. <p> The results in these sections act as lower bounds for proving QMG's optimality, but they would be useful for the analysis of other triangulation algorithms. This article, along with the companion <ref> [12] </ref>, supersedes our earlier work [13]. We briefly summarize the difference between this article and the earlier work. First, this work applies to d-dimensional regions for any d, whereas the earlier work was limited to three dimensions. <p> First, a sequence of parameters 0 &lt; * dk1;F &lt; * dk2;F &lt; &lt; * 0;F &lt; 0:5 is chosen for F . The method for choosing these parameters is described in in <ref> [12] </ref>, but must be slightly modified to take into account the containment relationship between P -faces of different dimensions. These parameters have upper and lower bounds depending only on d and k. We now process boxes in O F in the order described below. <p> We define ex (B) to be a cube concentric with B and expanded by * dk1;F in each dimension; thus B ae ex (B) ae ex (B). It follows from Lemmas 1 and 2 of <ref> [12] </ref> that if any P -face F passes through ex (B), then B has a subface close to F . The cube ex (B) is not used in our algorithm, but it plays a role in the analysis below. <p> When a box B is protected, as mentioned above, we have identified a close subface B 0 of B. This subface has the property that F passes through an 1-norm neighborhood of B 0 . We now select a point lying on F in this neighborhood (see <ref> [12] </ref> for more details on selecting the close point). The 15 rule used for choosing the close point has the property that any other box B 00 that is the same size as B and also has B 0 as its close subface will choose the same close point. <p> This data structure serves as the basis for triangulation. The triangulation algorithm is based on our other paper <ref> [12] </ref> and is as follows. <p> In this section we argue that the worst-case aspect ratio produced by QMG is bounded in terms of the ratio of sizes of neighboring boxes. This section requires an understanding of the analysis in our paper <ref> [12] </ref>. In subsequent sections, we bound this box-size ratio in terms of the sharpest angle. From now on, we denote the sharpest angle in P by (P ). Thus, the combination of these arguments bounds the aspect ratio of QMG in terms of (P ). Let B be a box. <p> Let r be the maximum box-size ratio in the whole triangulation produced by QMG. We argue in this section that the worst aspect ratio in QMG is at most c d r. Consider a simplex T generated by QMG. As in <ref> [12] </ref>, this simplex comes from a chain of d + 1 nested box subfaces. Unlike [12], these box subfaces 29 can have different sizes; in particular, the subfaces in the chain can grow in size as the dimension of the box face increases. <p> We argue in this section that the worst aspect ratio in QMG is at most c d r. Consider a simplex T generated by QMG. As in <ref> [12] </ref>, this simplex comes from a chain of d + 1 nested box subfaces. Unlike [12], these box subfaces 29 can have different sizes; in particular, the subfaces in the chain can grow in size as the dimension of the box face increases. A consequence of the alignment condition presented in Section 6 is as follows. <p> Else C is not a subface of B fl , which means that v i is bounded away by c d size (B i+1 ) from B fl as argued in <ref> [12] </ref>, because the neighborhoods N () defined earlier create an exclusion zone around B fl . Let M T be the dfid matrix associated with T defined above, with columns ordered according to the chain order. <p> Let M T be the dfid matrix associated with T defined above, with columns ordered according to the chain order. Because of (3), M T , when scaled to unit box size, satisfies analogs of the inequalities that were developed in <ref> [12] </ref> in the case of unit box size. In particular, let S T be the d fi d diagonal matrix whose ith entry is the box side length of the ith box face in the chain defining T . <p> Then the matrix N = M T S 1 T has its columns rescaled so that each column corresponds to a difference between two vertices in a unit-size cube. Slight generalizations of the bounds proved in <ref> [12] </ref> apply to N (actually, that paper considered the transpose N T ). In particular, the bounds in [12] imply that kN k and kN 1 k are at most c d . <p> Slight generalizations of the bounds proved in <ref> [12] </ref> apply to N (actually, that paper considered the transpose N T ). In particular, the bounds in [12] imply that kN k and kN 1 k are at most c d . Since (M T ) (N )(S T ), we have from the last paragraph that (M T ) c d (S T ). <p> Can this work be extended to curved boundaries? It appears that the main bottleneck is a solution to the subproblem of triangulating a uniform grid of boxes posed in the companion paper <ref> [12] </ref>. 4. Is there a mesh generation algorithm for three-dimensional domains that guarantees dihedral angles bounded by =2? Such a bound is important for some finite element problems [17]. It is known [3] how to solve the corresponding problem in two dimensions. 5.
Reference: [13] <author> S. A. Mitchell and S. A. Vavasis. </author> <title> Quality mesh generation in three dimensions. </title> <booktitle> In Proceedings of the ACM Computational Geometry Conference, </booktitle> <pages> pages 212-221, </pages> <year> 1992. </year> <note> Also appeared as Cornell C.S. TR 92-1267. </note>
Reference-contexts: The results in these sections act as lower bounds for proving QMG's optimality, but they would be useful for the analysis of other triangulation algorithms. This article, along with the companion [12], supersedes our earlier work <ref> [13] </ref>. We briefly summarize the difference between this article and the earlier work. First, this work applies to d-dimensional regions for any d, whereas the earlier work was limited to three dimensions. A consequence of this generalization is that we have discarded the case-based proofs used in [13] in favor of <p> our earlier work <ref> [13] </ref>. We briefly summarize the difference between this article and the earlier work. First, this work applies to d-dimensional regions for any d, whereas the earlier work was limited to three dimensions. A consequence of this generalization is that we have discarded the case-based proofs used in [13] in favor of more uniform treatment here. The notion of enforcing a "balance" condition in the quadtree has been dropped. <p> This efficient algorithm for d = 3 is described in our earlier paper <ref> [13] </ref>. We have not implemented a plane-sweep procedure for either d = 2 or d = 3. 11 6 Alignment In this section we describe the alignment stage. Recall that the alignment stage processes each orbit independently. <p> Several people have given us very useful comments on earlier versions, including Chandrajit Bajaj, Marshall Bern, Paul Chew, John Gilbert, Joe Mitchell, and the two referees of <ref> [13] </ref>. We thank Gail Pieper of Argonne for a careful reading of an earlier draft of this article.
Reference: [14] <author> J. Ruppert. </author> <title> A new and simple algorithm for quality 2-dimensional mesh generation. </title> <booktitle> In Proc. 4th ACM-SIAM Symp. on Disc. Algorithms, </booktitle> <pages> pages 83-92. </pages> <publisher> ACM Press, </publisher> <year> 1993. </year>
Reference-contexts: Other work on triangulation problems with optimality guarantees is the result of Baker, Grosse and Rafferty [1], whose algorithm triangulates 2D polygons with nonobtuse angles and Chew's [7] triangulation of 2D polygons with guaranteed aspect ratio using a Delaunay approach. Chew's work was extended by Ruppert <ref> [14] </ref> to handle varying degrees of refinement (and thus establishing the Bern et al. optimality properties), and later by Chew also [8] to curved surfaces.
Reference: [15] <author> E. Schohhardt. </author> <title> Uber die Zerlegung von Dreieckspolyedern in Tetraeder. </title> <journal> Math. Ann., </journal> <volume> 98 </volume> <pages> 309-312, </pages> <year> 1928. </year>
Reference-contexts: Our triangulation uses Steiner points, meaning that it introduces new vertices into the domain not present in the original input. Indeed, as shown by Schonhardt <ref> [15] </ref>, Steiner points are necessary for triangulating nonconvex polyhedra in three dimensions and higher. For additional background on 3 optimal triangulation, we refer the reader to the excellent surveys of Bern and Eppstein [3] and Bern and Plassmann [5].
Reference: [16] <author> S. A. Vavasis. QMG: </author> <title> Software for finite-element mesh generation. </title> <note> See http: // www.cs.cornell.edu / home / vavasis / qmg-home.html, 1995. 56 </note>
Reference-contexts: A full version of QMG has been implemented in C++ by S. Vavasis; the implementation QMG1.1 is more general than the version described in this paper because it can also handle nonmanifold features, including several kinds of internal boundaries. QMG1.1 is available on the Web <ref> [16] </ref> and has a number of users in several countries. It is slated to be the main mesh generator in a future release of //Ellpack.
Reference: [17] <author> S. A. Vavasis. </author> <title> Stable finite elements for problems with wild coefficients. </title> <journal> SIAM J. Numerical Analysis, </journal> <volume> 33 </volume> <pages> 890-916, </pages> <year> 1996. </year> <month> 57 </month>
Reference-contexts: Is there a mesh generation algorithm for three-dimensional domains that guarantees dihedral angles bounded by =2? Such a bound is important for some finite element problems <ref> [17] </ref>. It is known [3] how to solve the corresponding problem in two dimensions. 5. Can the running time bound be improved? 54 6. The optimality properties demonstrated here all involve constant fac-tors that are apparently very large.
References-found: 17

