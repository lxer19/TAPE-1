URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-95-09.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Distributed Degree-Constrained Multicasting in Point-to-Point Networks  
Author: Fred Bauer Anujan Varma 
Keyword: Degree-constrained multicasting, Steiner problem in networks, Distributed algorithms.  
Address: Santa Cruz, CA 95064  
Affiliation: Computer Engineering Department University of California  
Pubnum: UCSC-CRL-95-09  
Email: E-mail: ffred,varmag@cse.ucsc.edu  
Date: March 3, 1995  
Abstract: Establishing a multicast tree in a point-to-point network of switch nodes, such as a wide-area ATM network, is often modeled as the NP-complete Steiner problem in networks. In this paper, we present distributed algorithms for finding efficient multicast trees in the presence of constraints on the copying ability of the individual switch nodes in the network. We refer to this problem as the degree-constrained multicast tree problem and model it as the degree-constrained Steiner problem (DCSP) in networks. We consider two distinct approaches to the design of distributed DCPS heuristics. The first approach involves design of distributed versions of centralized DCSP algorithms. We introduce distributed versions of two DCSP heuristics: the shortest path heuristic (SPH) and the Kruskal-based shortest path heuristic (K-SPH). The second approach is to modify the solution obtained from an unconstrained heuristic to satisfy the degree constraints using a distributed post-processing algorithm. Unlike previous spanning-tree based approaches in which all nodes in the graph must participate, only nodes in the neighborhood of the multicast tree need participate in these algorithms. We compare the algorithms by simulation based on three criteria: competitiveness (the ratio between the sum of edge weights of the heuristic tree to that of the optimal tree), convergence time, and the number of unsolved networks. Our results show that each of the heuristics generated degree-constrained multicast trees within 10% of the best solution found. Surprisingly few test networks were unsolvable. The distributed post-processing heuristic presented is of particular interest since it may be used with any Steiner heuristic. When paired with a good unconstrained distributed Steiner heuristic, this post-processing heuristic gave away little competitiveness while converging rapidly. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Bauer and A. Varma. </author> <title> "Degree-constrained multicasting in point-to-point networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> Boston, </address> <month> Apr. </month> <year> 1995, </year> <pages> pp. 369-376. </pages>
Reference-contexts: Since the degree-constrained spanning tree problem is also NP-complete, distributed Steiner heuristics that use a distributed minimum spanning-tree algorithm cannot easily be modified for DCSP. In an earlier paper, we introduced several centralized DCSP heuristics and compared their run-time and the competitiveness of the solutions produced <ref> [1] </ref>. The competitiveness of a solution improves when a tree has lower cost where cost is the defined to be sum of the tree edge weights. This paper introduces and analyzes distributed algorithms for DCSP. We consider two distinct approaches to the design of distributed DCPS heuristics. <p> This paper introduces and analyzes distributed algorithms for DCSP. We consider two distinct approaches to the design of distributed DCPS heuristics. The first approach involves design of distributed versions of centralized DCSP algorithms. We introduce distributed versions of two DCSP heuristics K-SPH and SPH described in <ref> [1] </ref>. The second approach is to find a Steiner tree first with no degree constraints and then modify the solution to satisfy the degree constraints using a distributed post-processing algorithm. <p> It must (i) use the existing routing information available at each node in the network, (ii) use minimal computational and network resources, (iii) require a minimum of coordination between neighbors, and (iv) limit itself to nodes directly involved in the multicast. Of the centralized DCSP heuristics evaluated in <ref> [1] </ref>, we chose the following four heuristics as candidates for distributed implementation: the shortest-path heuristic (SPH), a variant of SPH known as SPH-Z, the Kruskal-based shortest-path heuristic (K-SPH), and the Average distance heuristic (ADH). Each heuristic's unconstrained version is described in [25] and each heuristic's degree-constrained version is described in [1]. <p> <ref> [1] </ref>, we chose the following four heuristics as candidates for distributed implementation: the shortest-path heuristic (SPH), a variant of SPH known as SPH-Z, the Kruskal-based shortest-path heuristic (K-SPH), and the Average distance heuristic (ADH). Each heuristic's unconstrained version is described in [25] and each heuristic's degree-constrained version is described in [1]. A brief summary of each degree-constrained heuristic follows. DCSP SPH Heuristic SPH, whose unconstrained version was introduced in [26], initializes the multicast tree to an arbitrary multicast member.
Reference: [2] <author> F. Bauer and A. Varma. </author> <title> "Distributed algorithms for multicast path setup in data networks," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <address> Singapore, </address> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: Our results from simulations of the unconstrained version of the algorithm show that the rates of increase of both the convergence time and the number of messages with the number of nodes fell within these bounds <ref> [2] </ref>. 2.2.2 Distributed SPH The distributed shortest path heuristic is a special case of distributed K-SPH described in section 2.2.1. In distributed SPH, any one of the multicast members may act as the source of the multicast, referred to here simply as the source node. <p> convergence time would be the number of rounds (now (Z 1)N ) times the largest possible round-trip time, or 2DN Z = O (DN Z). 14 These bounds are summarized in Tables 1 and 2, and have been found to agree with results from simulation of the unconstrained SPH heuristic <ref> [2] </ref>. 3 Post-Processing Heuristics An alternate approach to using a distributed algorithm for finding a degree-constrained Steiner tree is to first construct a Steiner tree with no degree constraints and then modify the solution to satisfy the constraints. <p> In particular, their competitiveness is often superior to that produced by previous heuristics [8, 22] that are based on a distributed minimum spanning tree algorithm. A detailed comparison of the performance of these distributed heuristics on unconstrained networks will appear in <ref> [2] </ref>.
Reference: [3] <author> J. Beasley. </author> <title> "An SST-based algorithm for the Steiner problem in graphs," </title> <journal> Networks, </journal> <volume> vol. 19, </volume> <pages> pp. 1-16, </pages> <year> 1989. </year>
Reference-contexts: Transmitting common copies of data over a multicast tree is the preferred method. However, determining the optimal multicast tree for a network is a difficult problem. Previous authors have established that the multicast tree problem may be modeled as the Steiner problem in networks <ref> [3, 4, 5, 15, 33] </ref>, referred to hereafter as the SPN, and that explicit solutions are prohibitively expensive.
Reference: [4] <author> L. Berry. </author> <title> "Graph theoretic models for multicast communications," in Traffic theories for new telecommunications services ITC Specialists Seminar, </title> <address> Adelaide, Australia, </address> <month> Sep. </month> <year> 1989, </year> <pages> pp. 95-99. </pages>
Reference-contexts: Transmitting common copies of data over a multicast tree is the preferred method. However, determining the optimal multicast tree for a network is a difficult problem. Previous authors have established that the multicast tree problem may be modeled as the Steiner problem in networks <ref> [3, 4, 5, 15, 33] </ref>, referred to hereafter as the SPN, and that explicit solutions are prohibitively expensive.
Reference: [5] <author> K. Bharath-Kumar and Jaffe. </author> <title> "Routing to multiple destinations in computer networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-31, no. 3, </volume> <pages> pp. 343-351, </pages> <month> Mar. </month> <year> 1983. </year>
Reference-contexts: Transmitting common copies of data over a multicast tree is the preferred method. However, determining the optimal multicast tree for a network is a difficult problem. Previous authors have established that the multicast tree problem may be modeled as the Steiner problem in networks <ref> [3, 4, 5, 15, 33] </ref>, referred to hereafter as the SPN, and that explicit solutions are prohibitively expensive. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33].
Reference: [6] <author> J. Byun and T. Lee. </author> <title> "The design and analysis of an ATM multicast switch with adaptive traffic controller," </title> <journal> IEEE Transactions on Networking, </journal> <volume> vol. 2, no. 3, </volume> <pages> pp. 288-298, </pages> <month> Jun. </month> <year> 1994. </year>
Reference-contexts: The routers or switches in an internetwork will likely vary in their ability to support multicasting. Some nodes may not support multicasting; others may be limited in the number of multicast copies they can reasonably make <ref> [6, 7, 19, 34] </ref>. The multicast capability of each node is represented in this paper by a degree-constraint. Thus, a degree constraint of d implies that the corresponding switch or router is able to forward copies of an incoming packet to a maximum of d 1 output ports.
Reference: [7] <author> H. Chao and B. Choe. </author> <title> "Design and analysis of a large-scale multicast output buffered ATM switch," </title> <journal> IEEE Transactions on Networking, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 126-138, </pages> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: The routers or switches in an internetwork will likely vary in their ability to support multicasting. Some nodes may not support multicasting; others may be limited in the number of multicast copies they can reasonably make <ref> [6, 7, 19, 34] </ref>. The multicast capability of each node is represented in this paper by a degree-constraint. Thus, a degree constraint of d implies that the corresponding switch or router is able to forward copies of an incoming packet to a maximum of d 1 output ports.
Reference: [8] <author> G. Chen, M. Houle, and M. Kuo. </author> <title> "The Steiner problem in distributed computing systems," </title> <journal> Information Sciences, </journal> <volume> vol. 74, no. </volume> <pages> 1-2, pp. 73-96, </pages> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: In practice, our empirical evidence indicates that these heuristics find solutions much better than twice this bound with reasonable speed in most cases. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics have been known <ref> [8, 17, 22, 24] </ref>. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem (MST) and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira [13]. <p> The resulting minimum spanning tree is then pruned of unnecessary leaves and branches. For example, Chen, et al. <ref> [8] </ref> finds a Steiner tree by applying a distributed minimum spanning tree algorithm twice. First the algorithm is applied to the original graph. <p> In particular, their competitiveness is often superior to that produced by previous heuristics <ref> [8, 22] </ref> that are based on a distributed minimum spanning tree algorithm. A detailed comparison of the performance of these distributed heuristics on unconstrained networks will appear in [2].
Reference: [9] <author> C. Cheng, R. Riley, S. Kumar, and JJ. Garcia-Luna-Aceves. </author> <title> "A loop-free extended Bellman-Ford routing protocol without bouncing effect," </title> <journal> ACM Computer Communications Review, </journal> <volume> vol. 19, no. 4, </volume> <pages> pp. 224-236, </pages> <month> Sep. </month> <year> 1989. </year>
Reference-contexts: If not, this information may be derived using a distance vector routing algorithm such as [14]. The next-to-last hop table allows distributed K-SPH processes to derive the entire shortest path between nodes by recursively considering the path as described in <ref> [9] </ref>. Each node also stores its degree-constraint information and the index of its fragment. Initially, only multicast nodes have a fragment index (its own index). Each leader maintains additional shortest path and degree-constraint information for its fragment. This information augments the shortest path information at each node.
Reference: [10] <author> S. Deering. </author> <title> "Multicast routing in internetworks and extended LANs," </title> <journal> Computer Communication Review, </journal> <volume> vol. 18, no. 4, </volume> <pages> pp. 55-64, </pages> <month> Aug. </month> <year> 1988. </year> <month> 26 </month>
Reference-contexts: Many existing networks already support multicasting. For example, the Internet MBONE service, a popular conferencing tool, already uses the multicast support recently added to the Internet <ref> [10] </ref>. Many emerging standards for packet-switched networks, notably ATM, Frame Relay and SMDS, include support for multicasting. Future applications such as audio and video conferencing, replicated database updating, and distributed resource discovery will rely on the ability of the network to perform multicast communication.
Reference: [11] <author> M. Doar and I. Leslie. </author> <title> "How bad is naive multicast routing?," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> San Francisco, CA, </address> <month> Apr. </month> <year> 1993, </year> <pages> pp. 82-89. </pages>
Reference-contexts: The 2000 networks were generated to resemble networks in a manner similar to that of Doar <ref> [11] </ref>. Each of the n nodes is distributed across a Cartesian coordinate plane with minimum and maximum coordinates (0; 0) and (2n; 2n), creating a forest of n nodes spread across this plane. In all of our test graphs, the number of nodes n was set at 200. <p> This distance is also the time it takes for a message to traverse this edge. We used 18 the probability function P (x; y) = fie 2ffn ; where d x;y is the rectilinear distance between nodes x and y <ref> [11] </ref>. The parameters ff and fi govern the density of the graph. Increasing ff increases the number of connections to nodes far away and increasing fi increases the number of edges from each node.
Reference: [12] <author> R. Douglas. </author> <title> "NP-completeness and degree restricted spanning trees," </title> <journal> Discrete Mathematics, </journal> <volume> vol. 105, </volume> <pages> pp. 41-47, </pages> <year> 1992. </year>
Reference-contexts: The degree-constrained Steiner problem in networks is a relatively new problem [16, 27, 29, 30]. The degree-constrained Steiner problem is NP-complete [30] and contains the NP-complete problem of determining a degree-constrained spanning tree <ref> [12, 18] </ref>. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. Few centralized DCSP heuristics exist in the literature [27, 30] and we know of no published distributed DCSP heuristics.
Reference: [13] <author> R. Gallager, P. Humblet, and P. Spira. </author> <title> "A distributed algorithm for minimum-weight spanning trees," </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> vol. 5, no. 1, </volume> <pages> pp. 66-77, </pages> <month> Jan. </month> <year> 1983. </year>
Reference-contexts: However, a few distributed heuristics have been known [8, 17, 22, 24]. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem (MST) and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira <ref> [13] </ref>. The resulting minimum spanning tree is then pruned of unnecessary leaves and branches. For example, Chen, et al. [8] finds a Steiner tree by applying a distributed minimum spanning tree algorithm twice. First the algorithm is applied to the original graph. <p> Finally, the distance between two trees is the distance of the shortest among all paths between any node in one tree and any node in the other tree. As in <ref> [13] </ref>, we append the weight of an edge or path with the index of its destination node in determining shortest paths so that, in case of a tie, the actions of the individual nodes would be consistent.
Reference: [14] <author> P. Humblet. </author> <title> "Another adaptive distributed shortest path algorithm," </title> <journal> IEEE/ACM Transactions on Communications, </journal> <volume> vol. 39, no. 6, </volume> <pages> pp. 995-1003, </pages> <month> Jun. </month> <year> 1991. </year>
Reference-contexts: If so, distributed K-SPH may use the existing tables, avoiding unnecessary extra storage at each node. If not, this information may be derived using a distance vector routing algorithm such as <ref> [14] </ref>. The next-to-last hop table allows distributed K-SPH processes to derive the entire shortest path between nodes by recursively considering the path as described in [9]. Each node also stores its degree-constraint information and the index of its fragment. Initially, only multicast nodes have a fragment index (its own index).
Reference: [15] <author> F. Hwang and D. Richards. </author> <title> "Steiner tree problems," </title> <journal> Networks, </journal> <volume> vol. 22, </volume> <pages> pp. 55-89, </pages> <year> 1992. </year>
Reference-contexts: Transmitting common copies of data over a multicast tree is the preferred method. However, determining the optimal multicast tree for a network is a difficult problem. Previous authors have established that the multicast tree problem may be modeled as the Steiner problem in networks <ref> [3, 4, 5, 15, 33] </ref>, referred to hereafter as the SPN, and that explicit solutions are prohibitively expensive. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33].
Reference: [16] <author> F. Hwang, D. Richards, and P. Winter. </author> <title> The Steiner Tree Problem. </title> <address> New York: </address> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: This has two benefits: (i) the task of making multicast message copies is shared among more nodes, and (ii) the damage inflicted on the tree by the failure of a single node is reduced. The degree-constrained Steiner problem in networks is a relatively new problem <ref> [16, 27, 29, 30] </ref>. The degree-constrained Steiner problem is NP-complete [30] and contains the NP-complete problem of determining a degree-constrained spanning tree [12, 18]. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks.
Reference: [17] <author> X. Jiang. </author> <title> "Distributed path finding algorithm for stream multicast," </title> <journal> Computer Communications, </journal> <volume> vol. 16, no. 12, </volume> <pages> pp. 767-775, </pages> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: In practice, our empirical evidence indicates that these heuristics find solutions much better than twice this bound with reasonable speed in most cases. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics have been known <ref> [8, 17, 22, 24] </ref>. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem (MST) and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira [13]. <p> The primary disadvantage of using a minimum spanning tree algorithm is that every node in the network must participate in the search for a Steiner tree. This may not be feasible or desirable in practice. In contrast, Jiang's Steiner heuristic <ref> [17] </ref> does not use an MST algorithm, but instead relies on flooding from the multicast source to find the shortest path tree to the multicast members. The source node repeatedly broadcasts messages and builds a Steiner tree from responses received until a suitable tree 1 is found.
Reference: [18] <author> D. Johnson. </author> <title> "The NP-completeness column: an ongoing guide," </title> <journal> Journal of Algorithms, </journal> <volume> vol. 6, no. 3, </volume> <pages> pp. 434-451, </pages> <month> Sep. </month> <year> 1985. </year>
Reference-contexts: The degree-constrained Steiner problem in networks is a relatively new problem [16, 27, 29, 30]. The degree-constrained Steiner problem is NP-complete [30] and contains the NP-complete problem of determining a degree-constrained spanning tree <ref> [12, 18] </ref>. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. Few centralized DCSP heuristics exist in the literature [27, 30] and we know of no published distributed DCSP heuristics.
Reference: [19] <author> H. Kim. </author> <title> "Design and performance of multinet switch: a multistage ATM switch architecture with partially shared buffers," </title> <journal> IEEE Transactions on Networking, </journal> <volume> vol. 2, no. 6, </volume> <pages> pp. 581-587, </pages> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: The routers or switches in an internetwork will likely vary in their ability to support multicasting. Some nodes may not support multicasting; others may be limited in the number of multicast copies they can reasonably make <ref> [6, 7, 19, 34] </ref>. The multicast capability of each node is represented in this paper by a degree-constraint. Thus, a degree constraint of d implies that the corresponding switch or router is able to forward copies of an incoming packet to a maximum of d 1 output ports.
Reference: [20] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Multicasting for multimedia applications," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1992, </year> <pages> pp. 2078-2085. </pages>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33].
Reference: [21] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Multicast routing for multimedia communications," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 286-292, </pages> <month> Jun. </month> <year> 1993. </year>
Reference-contexts: The distributed minimum spanning tree algorithm is then applied a second time to this subgraph. The solution is obtained by pruning unnecessary leaves and branches from this second minimum spanning tree. Likewise, Kompella, et al. [22] describe two distributed versions of earlier centralized heuristics proposed by the same authors <ref> [21] </ref>. Both of these distributed heuristics first build a constrained Steiner tree that reflects the combined criteria of cost and delay. Gallager, Humblet and Spira's distributed MST algorithm is then applied to this constrained Steiner tree and the solution tree is pruned.
Reference: [22] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Two distributed algorithms for the constrained Steiner tree problem," </title> <booktitle> in Proc. </booktitle> <institution> Comput. Commun. and Netw., </institution> <address> San Diego, CA, </address> <month> Jun. </month> <year> 1993. </year>
Reference-contexts: In practice, our empirical evidence indicates that these heuristics find solutions much better than twice this bound with reasonable speed in most cases. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics have been known <ref> [8, 17, 22, 24] </ref>. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem (MST) and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira [13]. <p> The distributed minimum spanning tree algorithm is then applied a second time to this subgraph. The solution is obtained by pruning unnecessary leaves and branches from this second minimum spanning tree. Likewise, Kompella, et al. <ref> [22] </ref> describe two distributed versions of earlier centralized heuristics proposed by the same authors [21]. Both of these distributed heuristics first build a constrained Steiner tree that reflects the combined criteria of cost and delay. <p> In particular, their competitiveness is often superior to that produced by previous heuristics <ref> [8, 22] </ref> that are based on a distributed minimum spanning tree algorithm. A detailed comparison of the performance of these distributed heuristics on unconstrained networks will appear in [2].
Reference: [23] <author> J. Kruskal. </author> <title> "On the shortest spanning subtree of a graph and the traveling salesman problem," </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> vol. 7, </volume> <pages> pp. 48-50, </pages> <year> 1956. </year>
Reference-contexts: This results in up to Z degree-constrained multicast trees. At SPH-Z's conclusion, the lowest cost tree is returned as the result. DCSP K-SPH Heuristic K-SPH, whose unconstrained version was introduced in <ref> [23] </ref>, differs from SPH in the manner in which tree is expanded. Instead of growing the tree one node at a time, the algorithm joins subtrees pairwise repeatedly until all the multicast nodes are part of a single tree or components can no longer be connected.
Reference: [24] <author> J. Rugelj. </author> <title> "Distributed multicast routing mechanism for global point-to-point networks," </title> <booktitle> in Proceedings of the 20th EUROMICRO Conference, </booktitle> <address> Liverpool, UK, </address> <month> Sep. </month> <year> 1994, </year> <pages> pp. 389-395. </pages>
Reference-contexts: In practice, our empirical evidence indicates that these heuristics find solutions much better than twice this bound with reasonable speed in most cases. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics have been known <ref> [8, 17, 22, 24] </ref>. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem (MST) and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira [13].
Reference: [25] <author> M. Smith and P. Winter. </author> <title> "Path-distance heuristics for the Steiner problem in undirected networks," </title> <journal> Algorithmica, </journal> <volume> vol. 7, no. </volume> <pages> 2-3, pp. 309-327, </pages> <year> 1992. </year>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33]. <p> Of the centralized DCSP heuristics evaluated in [1], we chose the following four heuristics as candidates for distributed implementation: the shortest-path heuristic (SPH), a variant of SPH known as SPH-Z, the Kruskal-based shortest-path heuristic (K-SPH), and the Average distance heuristic (ADH). Each heuristic's unconstrained version is described in <ref> [25] </ref> and each heuristic's degree-constrained version is described in [1]. A brief summary of each degree-constrained heuristic follows. DCSP SPH Heuristic SPH, whose unconstrained version was introduced in [26], initializes the multicast tree to an arbitrary multicast member. <p> The algorithm terminates when all the members have joined the tree or the remaining multicast members cannot be connected. DCSP SPH-Z Heuristic SPH-Z, whose unconstrained version is introduced in <ref> [25] </ref>, is a variant of SPH that runs SPH repeatedly, once for each multicast member (Z-node). This results in up to Z degree-constrained multicast trees. At SPH-Z's conclusion, the lowest cost tree is returned as the result. <p> In the expansion step, it finds two subtrees that are closest to each other and joins them along the shortest, degree-constrained path between them to form a single subtree. DCSP ADH Heuristic ADH, whose unconstrained version is described in <ref> [25] </ref>, is a generalization of K-SPH. The degree-constrained version repeatedly connects the two closest sub-trees using the most central node. The most central node is defined to be the node with the least average distance to all multicast members.
Reference: [26] <author> H. Takahashi and A. </author> <title> Matsuyama. "An approximate solution for the Steiner problem in graphs," </title> <journal> Math. Japonica, </journal> <volume> vol. 24, no. 6, </volume> <pages> pp. 573-577, </pages> <year> 1980. </year>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33]. <p> Each heuristic's unconstrained version is described in [25] and each heuristic's degree-constrained version is described in [1]. A brief summary of each degree-constrained heuristic follows. DCSP SPH Heuristic SPH, whose unconstrained version was introduced in <ref> [26] </ref>, initializes the multicast tree to an arbitrary multicast member. It then grows the tree by successively adding the next closest multicast member to the multicast tree by the shortest, degree-constrained path between the multicast member and the tree.
Reference: [27] <author> H. Tode, Y. Sakai, M. Yamamoto, H. Okada, and Y. Tezuka. </author> <title> "Multicast routing algorithm for nodal load balancing," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1992, </year> <pages> pp. 2086-2095. </pages>
Reference-contexts: This has two benefits: (i) the task of making multicast message copies is shared among more nodes, and (ii) the damage inflicted on the tree by the failure of a single node is reduced. The degree-constrained Steiner problem in networks is a relatively new problem <ref> [16, 27, 29, 30] </ref>. The degree-constrained Steiner problem is NP-complete [30] and contains the NP-complete problem of determining a degree-constrained spanning tree [12, 18]. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. <p> Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. Few centralized DCSP heuristics exist in the literature <ref> [27, 30] </ref> and we know of no published distributed DCSP heuristics. Since the degree-constrained spanning tree problem is also NP-complete, distributed Steiner heuristics that use a distributed minimum spanning-tree algorithm cannot easily be modified for DCSP.
Reference: [28] <author> J. Turner. </author> <title> "An optimal nonblocking multicast virtual circuit switch," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> Toronto, Canada, </address> <month> Jun. </month> <year> 1994, </year> <pages> pp. 298-305. 27 </pages>
Reference-contexts: Even when the switches allow multicasting to an arbitrary number of destination ports, there are several advantages in limiting the number of copies made by each switch. For example, some packet-switch architectures implement multicasting by circulating copies of packets through the switch fabric multiple times <ref> [28] </ref>. Thus, keeping the degree small reduces the number of passes needed through the switch fabric. In addition, a degree-constrained multicast tree also distributes the load more evenly among the nodes in the network than an unconstrained tree.
Reference: [29] <author> S. Voss. </author> <title> "A survey of some generalizations of Steiner's problem," </title> <booktitle> in Proc. of the First Balkan Conference on Operational Research, </booktitle> <year> 1988. </year>
Reference-contexts: This has two benefits: (i) the task of making multicast message copies is shared among more nodes, and (ii) the damage inflicted on the tree by the failure of a single node is reduced. The degree-constrained Steiner problem in networks is a relatively new problem <ref> [16, 27, 29, 30] </ref>. The degree-constrained Steiner problem is NP-complete [30] and contains the NP-complete problem of determining a degree-constrained spanning tree [12, 18]. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks.
Reference: [30] <editor> S. Voss. Steiner-Probleme in Graphen. Frankfurt/Main: </editor> <publisher> Hain, </publisher> <year> 1990, </year> <pages> pp. 179-184. </pages>
Reference-contexts: This has two benefits: (i) the task of making multicast message copies is shared among more nodes, and (ii) the damage inflicted on the tree by the failure of a single node is reduced. The degree-constrained Steiner problem in networks is a relatively new problem <ref> [16, 27, 29, 30] </ref>. The degree-constrained Steiner problem is NP-complete [30] and contains the NP-complete problem of determining a degree-constrained spanning tree [12, 18]. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. <p> The degree-constrained Steiner problem in networks is a relatively new problem [16, 27, 29, 30]. The degree-constrained Steiner problem is NP-complete <ref> [30] </ref> and contains the NP-complete problem of determining a degree-constrained spanning tree [12, 18]. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. <p> The degree-constrained Steiner problem in networks is a relatively new problem [16, 27, 29, 30]. The degree-constrained Steiner problem is NP-complete <ref> [30] </ref> and contains the NP-complete problem of determining a degree-constrained spanning tree [12, 18]. Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. Few centralized DCSP heuristics exist in the literature [27, 30] and we know of no published distributed DCSP heuristics. <p> Furthermore, finding a solution to the DCSP is also NP-complete [30]. In practice, however, the heuristics rarely failed to find a solution in our test networks. Few centralized DCSP heuristics exist in the literature <ref> [27, 30] </ref> and we know of no published distributed DCSP heuristics. Since the degree-constrained spanning tree problem is also NP-complete, distributed Steiner heuristics that use a distributed minimum spanning-tree algorithm cannot easily be modified for DCSP.
Reference: [31] <author> S. Voss. </author> <title> "Problems with generalized Steiner problems," </title> <journal> Algorithmica, </journal> <volume> vol. 7, no. </volume> <pages> 2-3, pp. 333-335, </pages> <year> 1992. </year>
Reference-contexts: The problem of finding a mul-ticast tree in the presence of copy constraints in individual switches is referred to as the degree-constrained multicast tree problem. We model the degree-constrained multicast tree problem as the degree-constrained Steiner problem in networks (DCSP), first described by S. Voss <ref> [31] </ref>. Formally, the DCSP as used in this paper is defined as follows. GIVEN: A simple, undirected, connected graph G = (V; E) with n nodes, non-negative edge cost c i;j , p multicast members Z V , and node degree constraints k i 2.
Reference: [32] <author> S. Voss. </author> <title> "Steiner's problem in graphs: Heuristic methods," </title> <journal> Discrete Applied Mathematics, </journal> <volume> vol. 40, </volume> <pages> pp. 45-72, </pages> <year> 1992. </year>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33].
Reference: [33] <author> P. Winter. </author> <title> "Steiner problem in networks: A survey," </title> <journal> Networks, </journal> <volume> vol. 17, no. 2, </volume> <pages> pp. 129-167, </pages> <year> 1987. </year>
Reference-contexts: Transmitting common copies of data over a multicast tree is the preferred method. However, determining the optimal multicast tree for a network is a difficult problem. Previous authors have established that the multicast tree problem may be modeled as the Steiner problem in networks <ref> [3, 4, 5, 15, 33] </ref>, referred to hereafter as the SPN, and that explicit solutions are prohibitively expensive. <p> For example, two popular explicit algorithms, the spanning tree enumeration algorithm and the dynamic programming algorithm <ref> [33] </ref>, have algorithmic complexities of O (p 2 2 (np) + n 3 ) and O (n3 p + n 2 2 p + n 3 ), respectively, where n is the number of nodes in the graph and p the number of multicast members. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [5, 15, 20, 25, 26, 32, 33] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. [33]. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere [5, 15, 20, 25, 26, 32, 33]. Some have been shown through analysis to produce solutions no worse than twice the optimal solution. <ref> [33] </ref>. That is to say, the sum of the edge weights of the heuristic tree is no more than twice the sum of edge weights of an optimal tree.
Reference: [34] <author> W. De Zhong, Y. Onozato, and J. Kaniyil. </author> <title> "A copy network with shared buffers for large-scale multicast ATM switching," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 157-165, </pages> <month> Apr. </month> <year> 1993. </year> <month> 28 </month>
Reference-contexts: The routers or switches in an internetwork will likely vary in their ability to support multicasting. Some nodes may not support multicasting; others may be limited in the number of multicast copies they can reasonably make <ref> [6, 7, 19, 34] </ref>. The multicast capability of each node is represented in this paper by a degree-constraint. Thus, a degree constraint of d implies that the corresponding switch or router is able to forward copies of an incoming packet to a maximum of d 1 output ports.
References-found: 34

