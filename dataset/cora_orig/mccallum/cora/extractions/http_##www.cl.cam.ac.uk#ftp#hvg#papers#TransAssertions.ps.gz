URL: http://www.cl.cam.ac.uk/ftp/hvg/papers/TransAssertions.ps.gz
Refering-URL: http://www.cl.cam.ac.uk/Research/HVG/FTP/FTP.html
Root-URL: 
Email: vac@air12.larc.nasa.gov  
Title: The Transition Assertions Specification Method  
Author: Victor A. Carre~no 
Address: MS 130 New Museums Site Hampton, VA 23681-0001 Pembroke Street U.S.A. Cambridge CB2 3QG U.K.  
Affiliation: NASA Langley RC Computer Laboratory  
Abstract: A modeling and specification method for real-time, reactive systems is described. Modeling is performed by constructing time dependent relations of the system parameters. A textual formal notation using higher order logic and a graphical notation are presented. The formal notation allows the use of rigorous mathematical methods on the specification, one of the primary sources of design errors. A cruise control case example is included in the paper and the HOL mechanized theorem prover is used to show that the specification complies with some top level requirements. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rajeev Alur and Thomas A. Henzinger, </author> <title> Logics and Models of Real Time: A Survey, </title> <booktitle> To appear in the proceedings of the 1991 REX workshop "Real Time: Theory in Practice" (Springer-Verlag LNCS series). </booktitle>
Reference-contexts: The generic model presented is called the Transition Assertions model. Its main characteristics are: 1. Transitions are not instantaneous; they require at least one time step. 2. The model uses assertions over variables to describe behaviour rather than the more common method of assertions over states <ref> [1, 4, 5, 7, 9, 11] </ref> 3. Variables may or may not be specified at a given time, thus the state of the system may not always be completely defined. 4. Time is discrete and is mapped to the natural numbers including zero.
Reference: [2] <author> A.J. Camilleri, </author> <title> Executing Behavioral Definitions in Higher Order Logic University of Cambridge Computer Laboratory, </title> <type> Technical Report No. 140, </type> <month> July </month> <year> 1988. </year>
Reference-contexts: Future work on the Transition Assertions method could include executable specifications to aid in the understanding of the system behaviour. Simulation of specification is incorporated in other specification methods and has been implemented for higher order logic in previous works <ref> [2, 3] </ref>. 7 Acknowledgements The idea for Transition Assertions are based on Mike Gordon's work on State Transition Assertions. Most of the work on Transition Assertions and the proofs for the cruise control was done at the Cambridge University Computer Laboratory under NASA sponsorship.
Reference: [3] <author> V.A. Carre~no, </author> <title> Definition and Partial Verification of Data Routing Circuit in Higher Order Logic, </title> <month> 10 July </month> <year> 1991. </year>
Reference-contexts: Future work on the Transition Assertions method could include executable specifications to aid in the understanding of the system behaviour. Simulation of specification is incorporated in other specification methods and has been implemented for higher order logic in previous works <ref> [2, 3] </ref>. 7 Acknowledgements The idea for Transition Assertions are based on Mike Gordon's work on State Transition Assertions. Most of the work on Transition Assertions and the proofs for the cruise control was done at the Cambridge University Computer Laboratory under NASA sponsorship.
Reference: [4] <author> M.J.C. Gordon, </author> <title> A Formal Method for Hard Real-Time Programming. </title>
Reference-contexts: The generic model presented is called the Transition Assertions model. Its main characteristics are: 1. Transitions are not instantaneous; they require at least one time step. 2. The model uses assertions over variables to describe behaviour rather than the more common method of assertions over states <ref> [1, 4, 5, 7, 9, 11] </ref> 3. Variables may or may not be specified at a given time, thus the state of the system may not always be completely defined. 4. Time is discrete and is mapped to the natural numbers including zero. <p> A functional relation is defined between time and values in which if t 1 = t 2 then v (t 1 ) = v (t 2 ). This approach is also used in <ref> [4, 8] </ref>. Variables (or system parameters) are functions from time to values. Time is a natural number used as the argument to the time dependent functions. Using the natural numbers to represent time significantly simplifies the transition assertions model.
Reference: [5] <author> D. Harel, Statecharts: </author> <title> A Visual Formalism for Complex Systems, </title> <booktitle> Sci. Computer Program., </booktitle> <volume> vol. 8, </volume> <pages> pp. 231-274, </pages> <year> 1987. </year>
Reference-contexts: The generic model presented is called the Transition Assertions model. Its main characteristics are: 1. Transitions are not instantaneous; they require at least one time step. 2. The model uses assertions over variables to describe behaviour rather than the more common method of assertions over states <ref> [1, 4, 5, 7, 9, 11] </ref> 3. Variables may or may not be specified at a given time, thus the state of the system may not always be completely defined. 4. Time is discrete and is mapped to the natural numbers including zero. <p> Two approaches can be taken to model system behaviour with respect to time. The first one, and the most widely used <ref> [5, 6, 9, 10] </ref>, assumes that the system is in a given state, and that it transitions from one state to another instantaneously. This approach is generally suitable to model a wide range of systems, but it can also bring mathematical or conceptual contradiction when formalizing a specification.
Reference: [6] <author> Leslie Lamport, </author> <title> A Temporal Logic of Actions, </title> <type> Technical Report 57, </type> <institution> Digital Equipment Corporation, Systems Research Center, </institution> <month> April 1, </month> <year> 1990. </year>
Reference-contexts: Two approaches can be taken to model system behaviour with respect to time. The first one, and the most widely used <ref> [5, 6, 9, 10] </ref>, assumes that the system is in a given state, and that it transitions from one state to another instantaneously. This approach is generally suitable to model a wide range of systems, but it can also bring mathematical or conceptual contradiction when formalizing a specification.
Reference: [7] <author> Aloysius K. Mok, </author> <title> Towards Mechanization of Real-Time System Design, </title> <booktitle> (workshop on foundations of real-time computing, Office of Naval Research, Oct 1990) in Foundation 17 of Real-Time Computing: Formal Specifications and Methods, </booktitle> <editor> Andre M. van Tilborg and Gary M. Koob, editors, </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: The generic model presented is called the Transition Assertions model. Its main characteristics are: 1. Transitions are not instantaneous; they require at least one time step. 2. The model uses assertions over variables to describe behaviour rather than the more common method of assertions over states <ref> [1, 4, 5, 7, 9, 11] </ref> 3. Variables may or may not be specified at a given time, thus the state of the system may not always be completely defined. 4. Time is discrete and is mapped to the natural numbers including zero.
Reference: [8] <author> B. C. Moszkowski, Zohar Manna, </author> <title> Reasoning in Interval Temporal Logic, </title> <type> Report No. </type> <institution> STAN-CS-83-969, Stanford University, </institution> <month> July </month> <year> 1983. </year>
Reference-contexts: A functional relation is defined between time and values in which if t 1 = t 2 then v (t 1 ) = v (t 2 ). This approach is also used in <ref> [4, 8] </ref>. Variables (or system parameters) are functions from time to values. Time is a natural number used as the argument to the time dependent functions. Using the natural numbers to represent time significantly simplifies the transition assertions model.
Reference: [9] <author> A. Pnueli, </author> <title> Applications of Temporal Logic to the Specification and Verification of Reactive Systems: A Survey of Current Trends, </title> <editor> Current Trends in Concurrency (deBakker et al. eds.) </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 224, </pages> <address> Spring-verlag, Berlin, </address> <year> 1986, </year> <pages> pp 510-584. </pages>
Reference-contexts: The generic model presented is called the Transition Assertions model. Its main characteristics are: 1. Transitions are not instantaneous; they require at least one time step. 2. The model uses assertions over variables to describe behaviour rather than the more common method of assertions over states <ref> [1, 4, 5, 7, 9, 11] </ref> 3. Variables may or may not be specified at a given time, thus the state of the system may not always be completely defined. 4. Time is discrete and is mapped to the natural numbers including zero. <p> Two approaches can be taken to model system behaviour with respect to time. The first one, and the most widely used <ref> [5, 6, 9, 10] </ref>, assumes that the system is in a given state, and that it transitions from one state to another instantaneously. This approach is generally suitable to model a wide range of systems, but it can also bring mathematical or conceptual contradiction when formalizing a specification. <p> The set of all possible system executions describes the system behaviour. The definition of system execution and behaviour is similar to the definition of computation and behaviour, respectively, in <ref> [9] </ref> for linear temporal logic. System assertions restrict the set of behaviours and are used to model the system. The assertion 8t:V cc (t) = 5 represents a system in which the value of V cc is always five (for t greater or equal to zero).
Reference: [10] <author> C. Ingvar Svensson ESML: </author> <title> An Extended System Modeling Language Based on the Data Flow Diagram Appendix B, </title> <type> NASA Contract Report 187526, </type> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: Two approaches can be taken to model system behaviour with respect to time. The first one, and the most widely used <ref> [5, 6, 9, 10] </ref>, assumes that the system is in a given state, and that it transitions from one state to another instantaneously. This approach is generally suitable to model a wide range of systems, but it can also bring mathematical or conceptual contradiction when formalizing a specification. <p> This example was chosen to evaluate the transition assertion method against the objectives listed in the introduction. The cruise control example was extracted from reference <ref> [10] </ref>. In the reference, a method called Extended System Modeling Language (ESML), based on data flow diagrams, is used for the description of the cruise control. For this paper, only the control speed module of the cruise control was used.
Reference: [11] <author> P.A. Zave, </author> <title> A Distributed Alternative to Finite-State-Machine Specification, </title> <journal> ACM Transactions on Programming Language Systems, </journal> <volume> 7, </volume> <month> 1 (Jan </month> <year> 1985), </year> <pages> 10-36. 18 </pages>
Reference-contexts: The generic model presented is called the Transition Assertions model. Its main characteristics are: 1. Transitions are not instantaneous; they require at least one time step. 2. The model uses assertions over variables to describe behaviour rather than the more common method of assertions over states <ref> [1, 4, 5, 7, 9, 11] </ref> 3. Variables may or may not be specified at a given time, thus the state of the system may not always be completely defined. 4. Time is discrete and is mapped to the natural numbers including zero.
References-found: 11

