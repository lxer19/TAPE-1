URL: http://www.eecs.umich.edu/~wuchang/work/internet/tcp/floyd/red.ps.gz
Refering-URL: http://www.eecs.umich.edu/~wuchang/work/internet/
Root-URL: http://www.cs.umich.edu
Email: floyd@ee.lbl.gov van@ee.lbl.gov  
Title: Random Early Detection Gateways for Congestion Avoidance gateways keep the average queue size low while
Author: Sally Floyd and Van Jacobson 
Note: To appear in the August 1993 IEEE/ACM Transactions on Networking RED  
Address: California  
Affiliation: Lawrence Berkeley Laboratory University of  
Abstract: This paper presents Random Early Detection (RED) gateways for congestion avoidance in packet-switched networks. The gateway detects incipient congestion by computing the average queue size. The gateway could notify connections of congestion either by dropping packets arriving at the gateway or by setting a bit in packet headers. When the average queue size exceeds a preset threshold, the gateway drops or marks each arriving packet with a certain probability, where the exact probability is a function of the average queue size. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bacon, D,. Dupuy, A., Schwartz, J., and Yemimi, Y., </author> <title> Nest: a Network Simulation and Prototyping Tool, </title> <booktitle> Proceedings of Winter 1988 USENIX Conference, </booktitle> <year> 1988, </year> <pages> pp. 17-78. </pages>
Reference-contexts: Specific questions about the most efficient implementation of the RED algorithm are discussed in Section 11. 5 A simple simulation This section describes our simulator and presents a simple simulation with RED gateways. Our simulator is a version of the REAL simulator [19] built on Columbia's Nest simulation package <ref> [1] </ref>, with extensive modifications and bug fixes made by Steven McCanne at LBL. In the simulator, FTP sources always have a packet to send and always send a maximal-sized (1000-byte) packet as soon as the congestion control window allows them to do so. <p> Thus, the calculation of p b can be accomplished with one shift and one add instruction. In the algorithm described in Section 4, when min th avg &lt; max th a new pseudo-random number R is computed for each arriving packet, where R = Random <ref> [0; 1] </ref> is from the uniform distribution on [0,1]. These random numbers could be gotten from a table of random numbers stored in memory or could be computed fairly efficiently on a 32-bit computer [3]. <p> Thus, if the average queue size was constant, then after each packet is marked the gateway could simply choose a value for the uniform random variable R = Random <ref> [0; 1] </ref>, and mark the n-th arriving packet if n R=p b . Because the average queue size changes over time, we recompute R=p b each time that p b is recomputed. <p> lookup: avg (1 w q ) (timeq time)=s avg if min th avg &lt; max th increment count p b C 1 avg C 2 if count &gt; 0 and count Approx [R=p b ] mark the arriving packet count 0 if count = 0 (choosing random number) R Random <ref> [0; 1] </ref> else if max th avg mark the arriving packet count 1 else count 1 when queue becomes empty q time time New variables: R: a random number New fixed parameters: s: typical transmission time the optimum average queue size for maximizing throughput and minimizing delay for various network configurations.
Reference: [2] <author> Bala, K., Cidon, I., and Sohraby, K., </author> <title> Congestion Control for High Speed Packet Switched Networks, </title> <booktitle> INFOCOM '90, </booktitle> <pages> pp. 520-526, </pages> <year> 1990. </year>
Reference: [3] <author> Carta, D., </author> <title> Two Fast Implementations of the `Minimal Standard' Random Number Generator, </title> <journal> Communications of the ACM, V.33 N.1, </journal> <month> January </month> <year> 1990, </year> <pages> pp. 87-88. </pages>
Reference-contexts: These random numbers could be gotten from a table of random numbers stored in memory or could be computed fairly efficiently on a 32-bit computer <ref> [3] </ref>.
Reference: [4] <author> Clark, D.D., Shenker, S., and Zhang, L., </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism, </title> <type> SIGCOMM '92, </type> <month> August </month> <year> 1992, </year> <pages> p. 14-26. </pages>
Reference-contexts: Not only is FIFO scheduling useful for sharing delay among connections, reducing delay for a particular connection during its periods of burstiness <ref> [4] </ref>, but it scales well and is easy to implement efficiently. In an alternate approach, some congestion control mechanisms that use variants of Fair Queueing [20] or hop-by-hop flow control schemes [22] propose that the gateway scheduling algorithm make use of per-connection state for every active connection.
Reference: [5] <author> Floyd, S., </author> <title> Connections with Multiple Congested Gateways in Packet-Switched Networks Part 1: One-way Traffic, </title> <journal> Computer Communication Review, V.21 N.5, </journal> <month> October </month> <year> 1991, </year> <pages> pp. 30-47. </pages>
Reference-contexts: Note that the RED gateway parameters are unchanged in these two simulations. The performance of a slightly different version of RED gateways with connections with different roundtrip times and with connections with multiple congested gateways has been analyzed and explored elsewhere <ref> [5] </ref>. 14 9 Bursty traffic This section shows that unlike Drop Tail or Random Drop gateways, RED gateways do not have a bias against bursty traffic. 5 Bursty traffic at the gateway can result from an FTP connection with a long delay-bandwidth product but a small window; a window of traffic
Reference: [6] <author> Floyd, S., </author> <title> Issues in Flexible Resource Management for Datagram Networks, </title> <booktitle> Proceedings of the 3rd Workshop on Very High Speed Networks, </booktitle> <month> March, </month> <year> 1992. </year>
Reference-contexts: There is no global synchronization. The higher throughput for the connections with shorter roundtrip times is due to the bias of TCP's window increase algorithm in favor of connections with shorter roundtrip times (as discussed in <ref> [6, 7] </ref>). For the simulation in Figure 3 the average link utilization is 76%. <p> RED gateways could also be used in routers with resource management where different classes of traffic are treated differently and each class has its own queue <ref> [6] </ref>. For example, in a router where interactive (TELNET) traffic and bulk data (FTP) traffic are in separate classes with separate queues (in order to give priority to the interactive traffic), each class could have a separate Random Early Detection queue.
Reference: [7] <author> Floyd, S., and Jacobson, V., </author> <title> On Traffic Phase Effects in Packet-Switched Gateways, </title> <journal> Internetwork-ing: Research and Experience, V.3 N.3, </journal> <month> September </month> <year> 1992, </year> <month> p.115-156. </month>
Reference-contexts: With Drop Tail gateways, the more bursty the traffic from a particular connection, the more likely it is that the gateway queue will overflow when packets from that connection arrive at the gateway <ref> [7] </ref>. Another goal in deciding which connections to notify of congestion is to avoid the global synchronization that results from notifying all connections to reduce their windows at the same time. <p> There is no global synchronization. The higher throughput for the connections with shorter roundtrip times is due to the bias of TCP's window increase algorithm in favor of connections with shorter roundtrip times (as discussed in <ref> [6, 7] </ref>). For the simulation in Figure 3 the average link utilization is 76%. <p> In order to avoid phase effects in the simulations with Drop Tail gateways, the source node takes a random time drawn from the uniform distribution on [0, t] seconds to prepare an FTP packet for transmission, where t is the bottleneck service time of 0.17 ms. <ref> [7] </ref>. The simulations with RED gateways were all run with a buffer size of 100 packets, with min th ranging from 3 to 50 packets. For the RED gateways, max th is set to 3 min th , with w q = 0:002 and max p = 1=50. <p> This goal of fairness is not well-defined, so we simply describe the performance of the RED gateway in this regard. The RED gateway does not discriminate against particular connections or classes of connections. (This is in contrast to Drop Tail or Random Drop gateways, as described in <ref> [7] </ref>). For the RED gateway, the fraction of marked packets for each connection is roughly 4 Power is defined as the ratio of throughput to delay. 11 proportional to that connection's share of the bandwidth. <p> caused by the precise timing of packet arrivals at the gateway), in the simulations with Drop Tail gateways the source takes a random time drawn from the uniform distribution on [0, t] seconds to prepare an FTP packet for transmission, where t is the bottleneck service time of 0.17 ms. <ref> [7] </ref>. In these simulations our concern is to examine the gateway's bias against bursty traffic.
Reference: [8] <author> Floyd, S., and Jacobson, V., </author> <title> The Synchronization of Periodic Routing Messages, </title> <note> to appear in SIG-COMM 93. </note>
Reference-contexts: Global synchronization has been studied in networks with Drop Tail gateways [37], and results in loss of throughput in the network. Synchronization as a general network phenomena has been explored in <ref> [8] </ref>. In order to avoid problems such as biases against bursty traffic and global synchronization, congestion avoidance gateways can use distinct algorithms for congestion detection and for deciding which connections to notify of this congestion.
Reference: [9] <author> Hansen, </author> <title> A Table of Series and Products, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1975. </year>
Reference-contexts: After the Lth packet arrives at the gateway, the average queue size avg L is avg L = i=1 = w q (1 w q ) L i=1 1 ) i (1 w q ) L+1 1 : (2) This derivation uses the following identity <ref> [9, p. 65] </ref>: L X ix i = (1 x) of values for w q and L. The x-axis shows w q from 0.001 to 0.005, and the y-axis shows L from 10 to 100.
Reference: [10] <author> Harvey, A., </author> <title> Forecasting, structural time series models and the Kalman filter, </title> <publisher> Cambridge University Press, </publisher> <year> 1989. </year>
Reference: [11] <author> Hashem, E., </author> <title> Analysis of random drop for gateway congestion control, </title> <type> Report LCS TR-465, </type> <institution> Laboratory for Computer Science, MIT, </institution> <address> Cambridge, MA, </address> <year> 1989, </year> <month> p.103. </month>
Reference-contexts: Section 12 gives conclusions and describes areas for future work. 2 Previous work on congestion avoidance gateways 2.1 Early Random Drop gateways Several researchers have studied Early Random Drop gateways as a method for providing congestion avoidance at the gateway. 1 Hashem <ref> [11] </ref> discusses some of the shortcomings of Random Drop 2 and Drop Tail gateways, and briefly investigates Early Random Drop gateways. In the implementation of Early Random Drop gateways in [11], if the queue length exceeds a certain drop level, then the gateway drops each packet arriving at the gateway with <p> Several researchers have studied Early Random Drop gateways as a method for providing congestion avoidance at the gateway. 1 Hashem <ref> [11] </ref> discusses some of the shortcomings of Random Drop 2 and Drop Tail gateways, and briefly investigates Early Random Drop gateways. In the implementation of Early Random Drop gateways in [11], if the queue length exceeds a certain drop level, then the gateway drops each packet arriving at the gateway with a fixed drop probability. This is discussed as a rough initial implementation. Hashem [11] stresses that in future implementations the drop level and the drop probability should be adjusted dynamically, <p> In the implementation of Early Random Drop gateways in <ref> [11] </ref>, if the queue length exceeds a certain drop level, then the gateway drops each packet arriving at the gateway with a fixed drop probability. This is discussed as a rough initial implementation. Hashem [11] stresses that in future implementations the drop level and the drop probability should be adjusted dynamically, depending on network traffic. Hashem [11] points out that with Drop Tail gateways each congestion period introduces global synchronization in the network. <p> This is discussed as a rough initial implementation. Hashem <ref> [11] </ref> stresses that in future implementations the drop level and the drop probability should be adjusted dynamically, depending on network traffic. Hashem [11] points out that with Drop Tail gateways each congestion period introduces global synchronization in the network. When the queue overflows, packets are often dropped from several connections, and these connections decrease their windows at the same time. This results in a loss of throughput at the gateway. <p> The paper suggests that because of this broader view of traffic distribution, Early Random Drop gateways have a better chance than Drop Tail gateways of targeting aggressive users. The conclusions in <ref> [11] </ref> are that Early Random Drop gateways deserve further investigation. 1 Jacobson [14] proposed gateways to monitor the average queue size to detect incipient congestion, and to randomly drop packets when congestion is detected. <p> These proposed gateways are a precursor to the Early Random Drop gateways that have been studied by several authors <ref> [11] </ref> [36]. We refer to the gateways in this paper as Random Early Detection or RED gateways.
Reference: [12] <author> Hoeffding, W., </author> <title> Probability Inequalities for Sums of Bounded Random Variables, </title> <journal> American Statistical Association Journal, </journal> <volume> Vol. 58, </volume> <month> March </month> <year> 1963, </year> <pages> p. 13-30. </pages>
Reference: [13] <author> Hofri, M., </author> <title> Probabilistic Analysis of Algorithms, </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year> <month> 20 </month>
Reference: [14] <author> Jacobson, V., </author> <title> Congestion Avoidance and Control, </title> <booktitle> Proceedings of SIGCOMM '88, </booktitle> <month> August </month> <year> 1988, </year> <pages> pp. 314-329. </pages>
Reference-contexts: In addition, the emphasis on avoiding the global synchronization that results from many connections reducing their windows at the same time is particularly relevant in a network with 4.3-Tahoe BSD TCP <ref> [14] </ref>, where each connection goes through Slow-Start, reducing the window to one, in response to a dropped packet. In the DECbit con gestion control scheme, for example, where each connection's response to congestion is less severe, it is also less critical to avoid this global synchronization. <p> The paper suggests that because of this broader view of traffic distribution, Early Random Drop gateways have a better chance than Drop Tail gateways of targeting aggressive users. The conclusions in [11] are that Early Random Drop gateways deserve further investigation. 1 Jacobson <ref> [14] </ref> proposed gateways to monitor the average queue size to detect incipient congestion, and to randomly drop packets when congestion is detected. These proposed gateways are a precursor to the Early Random Drop gateways that have been studied by several authors [11] [36]. <p> marking close to 1/5th of the arriving packets, then after the average queue size exceeds the maximum threshold, the gateway will mark every arriving packet. 8 Evaluation of RED gateways In addition to the design goals discussed in Section 3, several general goals have been outlined for congestion avoidance schemes <ref> [14, 16] </ref>. In this section we describe how our goals have been met by RED gateways. * Congestion avoidance. <p> This can be implemented as follows: avg avg + w q (q avg) As long as w q is chosen as a (negative) power of two, this can be implemented with one shift and two additions (given scaled versions of the parameters) <ref> [14] </ref>. Because the RED gateway computes the average queue size at packet arrivals, rather than at fixed time intervals, the calculation of the average queue size is modified when a packet arrives at the gateway to an empty queue.
Reference: [15] <author> Jain, R., </author> <title> A Delay-Based Approach for Congestion Avoidance in Interconnected Heterogeneous Computer Networks, </title> <journal> Computer Communication Review, V.19 N.5, </journal> <month> October </month> <year> 1989, </year> <pages> pp. 56-71. </pages>
Reference-contexts: In the absence of explicit feedback from the gateway, there are a number of mechanisms that have been proposed for transport-layer protocols to maintain high throughput and low delay in the network. Some of these proposed mechanisms are designed to work with current gateways <ref> [15, 23, 31, 33, 34] </ref>, while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway [20, 22].
Reference: [16] <author> Jain, R., </author> <title> Congestion Control in Computer Networks: Issues and Trends, </title> <journal> IEEE Network, </journal> <month> May </month> <year> 1990, </year> <pages> pp. 24-30. </pages>
Reference-contexts: marking close to 1/5th of the arriving packets, then after the average queue size exceeds the maximum threshold, the gateway will mark every arriving packet. 8 Evaluation of RED gateways In addition to the design goals discussed in Section 3, several general goals have been outlined for congestion avoidance schemes <ref> [14, 16] </ref>. In this section we describe how our goals have been met by RED gateways. * Congestion avoidance.
Reference: [17] <author> Jain, R., </author> <title> Myths About Congestion Management in High-Speed Networks, Internetworking: </title> <journal> Research and Experience, V.3 N.3, </journal> <month> September </month> <year> 1992, </year> <pages> pp. 101-114. </pages>
Reference: [18] <author> Jain, R., and Ramakrishnan, K.K., </author> <title> Congestion Avoidance in Computer Networks with a Con-nectionless Network Layer: Concepts, Goals, and Methodology, </title> <booktitle> Proc. IEEE Comp. Networking Symp., </booktitle> <address> Washington, D.C., </address> <month> April </month> <year> 1988, </year> <month> pp.134-143. </month>
Reference-contexts: We would suggest instead that per-connection gateway mechanisms should be used only in those circumstances where gateway scheduling mechanisms without per-connection mechanisms are clearly inadequate. The DECbit congestion avoidance scheme <ref> [18] </ref>, described later in this paper, is an early example of congestion detection at the gateway; DECbit gateways give explicit feedback when the average queue size exceeds a certain threshold. <p> The first job of a congestion avoidance mechanism at the gateway is to detect incipient congestion. As defined in <ref> [18] </ref>, a congestion avoidance scheme maintains the network in a region of low delay and high throughput. The average queue size should be kept low, while fluctuations in the actual queue size should be allowed to accommodate bursty traffic and transient congestion.
Reference: [19] <author> Keshav, S., </author> <title> REAL: a Network Simulator, </title> <type> Report 88/472, </type> <institution> Computer Science Department, University of California at Berkeley, Berkeley, Califor-nia, </institution> <year> 1988. </year>
Reference-contexts: Specific questions about the most efficient implementation of the RED algorithm are discussed in Section 11. 5 A simple simulation This section describes our simulator and presents a simple simulation with RED gateways. Our simulator is a version of the REAL simulator <ref> [19] </ref> built on Columbia's Nest simulation package [1], with extensive modifications and bug fixes made by Steven McCanne at LBL. In the simulator, FTP sources always have a packet to send and always send a maximal-sized (1000-byte) packet as soon as the congestion control window allows them to do so.
Reference: [20] <author> Keshav, S., </author> <title> A Control-Theoretic Approach to Flow Control, </title> <booktitle> Proceedings of SIGCOMM '91, </booktitle> <month> September </month> <year> 1991, </year> <month> p.3-16. </month>
Reference-contexts: Some of these proposed mechanisms are designed to work with current gateways [15, 23, 31, 33, 34], while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway <ref> [20, 22] </ref>. In the absence of explicit feedback from the gateway, transport-layer protocols could infer congestion from the estimated bottleneck service time, from changes in throughput, from changes in end-to-end delay, as well as from packet drops or other methods. <p> Not only is FIFO scheduling useful for sharing delay among connections, reducing delay for a particular connection during its periods of burstiness [4], but it scales well and is easy to implement efficiently. In an alternate approach, some congestion control mechanisms that use variants of Fair Queueing <ref> [20] </ref> or hop-by-hop flow control schemes [22] propose that the gateway scheduling algorithm make use of per-connection state for every active connection. We would suggest instead that per-connection gateway mechanisms should be used only in those circumstances where gateway scheduling mechanisms without per-connection mechanisms are clearly inadequate.
Reference: [21] <author> Mankin, A. and Ramakrishnan, K. K., </author> <title> editors for the IETF Performance and Congestion Control Working Group, Gateway congestion control survey, </title> <type> RFC 1254, </type> <month> August </month> <year> 1991, </year> <month> p.21. </month>
Reference-contexts: In these simulations, with both Random Drop and Early Random Drop gateways, the misbehaving users received roughly 75% higher throughput than the users implementing standard 4.3 BSD TCP. The Gateway Congestion Control Survey <ref> [21] </ref> considers the versions of Early Random Drop described above. The survey cites the results in which the Early Random Drop gateway is unsuccessful in controlling misbehaving users [36]. <p> As mentioned in [32], Early Random Drop gateways are not expected to solve all of the problems of unequal throughput given connections with different roundtrip times and multiple congested gateways. In <ref> [21] </ref>, the goals of Early Random Drop gateways for congestion avoidance are described as uniform, dynamic treatment of users (streams/flows), of low overhead, and of good scaling characteristics in large and loaded networks.
Reference: [22] <author> Mishra, P., and Kanakia, H,. </author> <title> A Hop by Hop Rate-based Congestion Control Scheme, </title> <booktitle> Proceedings of SIGCOMM '92, </booktitle> <month> August </month> <year> 1992, </year> <month> p.112-123. </month>
Reference-contexts: Some of these proposed mechanisms are designed to work with current gateways [15, 23, 31, 33, 34], while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway <ref> [20, 22] </ref>. In the absence of explicit feedback from the gateway, transport-layer protocols could infer congestion from the estimated bottleneck service time, from changes in throughput, from changes in end-to-end delay, as well as from packet drops or other methods. <p> In an alternate approach, some congestion control mechanisms that use variants of Fair Queueing [20] or hop-by-hop flow control schemes <ref> [22] </ref> propose that the gateway scheduling algorithm make use of per-connection state for every active connection. We would suggest instead that per-connection gateway mechanisms should be used only in those circumstances where gateway scheduling mechanisms without per-connection mechanisms are clearly inadequate.
Reference: [23] <author> Mitra, D. and Seery, J., </author> <title> Dynamic Adaptive Windows for High Speed Data Networks: Theory and Simulations, </title> <booktitle> Proceedings of SIGCOMM '90, </booktitle> <month> September </month> <year> 1990, </year> <month> p.30-40. </month>
Reference-contexts: In the absence of explicit feedback from the gateway, there are a number of mechanisms that have been proposed for transport-layer protocols to maintain high throughput and low delay in the network. Some of these proposed mechanisms are designed to work with current gateways <ref> [15, 23, 31, 33, 34] </ref>, while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway [20, 22]. <p> This question is heavily dependent of the characterization of the network traffic as well as on the physical characteristics of the network. Some work has been done in this area for other congestion avoidance algorithms <ref> [23] </ref>, but there are still many open questions. One area for further research concerns traffic dynamics with a mix of Drop Tail and RED gateways, as would result from partial deployment of RED gateways in the current internet.
Reference: [24] <author> Mitra, D. and Seery, J., </author> <title> Dynamic Adaptive Windows for High Speed Data Networks with Multiple Paths and Propagation Delays, </title> <booktitle> Proc. IEEE INFO-COM '91, </booktitle> <pages> pp. </pages> <month> 2B.1.1-2B.1.10. </month>
Reference: [25] <author> Pingali, S., Tipper, D., and Hammond, J., </author> <title> The Performance of Adaptive Window Flow Controls in a Dynamic Load Environment, </title> <booktitle> Proc. of IEEE Info-com '90, </booktitle> <month> June </month> <year> 1990, </year> <pages> pp. 55-62. </pages>
Reference-contexts: Another proposal for adaptive window schemes where the source nodes increase or decrease their windows according to feedback concerning the queue lengths at the gateways is presented in <ref> [25] </ref>. Each gateway has an upper threshold UT indicating congestion, and a lower threshold LT indicating light load conditions. Information about the queue sizes at the gateways is added to each packet.
Reference: [26] <author> Postel, J., </author> <title> Internet Control Message Protocol, </title> <type> RFC 792, </type> <month> September </month> <year> 1981. </year>
Reference-contexts: left as an open question whether or not these goals can be achieved. 2.2 Other approaches to gateway mecha nisms for congestion avoidance Early descriptions of IP Source Quench messages suggest that gateways could send Source Quench messages to source hosts before the buffer space at the gateway reaches capacity <ref> [26] </ref>, and before packets have to be dropped at the gateway. One proposal [27] suggests that the gateway send Source Quench messages when the queue size exceeds a certain threshold, and outlines a possible method for flow control at the source hosts in response to these messages.
Reference: [27] <author> Prue, W., and Postel, J., </author> <title> Something a Host Could Do with Source Quench, </title> <type> RFC 1016, </type> <month> July </month> <year> 1987. </year>
Reference-contexts: One proposal <ref> [27] </ref> suggests that the gateway send Source Quench messages when the queue size exceeds a certain threshold, and outlines a possible method for flow control at the source hosts in response to these messages.
Reference: [28] <author> Ramakrishnan, K.K., Chiu, D., and Jain, R., </author> <title> Congestion Avoidance in Computer Networks with a Connectionless Network Layer, Part IV: A Selective Binary Feedback Scheme for General Topologies, </title> <address> DEC-TR-510, </address> <month> November, </month> <year> 1987. </year>
Reference-contexts: With the DECbit congestion avoidance scheme node 5 packets have a disproportionate chance of having their congestion indication bits set. The DECbit congestion avoidance scheme's bias against bursty traffic would be corrected by DECbit congestion avoidance with selective feedback <ref> [28] </ref>, which has been proposed with a fairness goal of dividing each resource equally among all of the users sharing it. This modification uses a selective feedback algorithm at the gateway.
Reference: [29] <author> Ramakrishnan, K.K., and Jain, Raj, </author> <title> A Binary Feedback Scheme for Congestion Avoidance in Computer Networks, </title> <journal> ACM Transactions on Computer Systems, V. </journal> <volume> 8, </volume> <editor> N. </editor> <volume> 2, </volume> <pages> pp. 158-181, </pages> <year> 1990. </year>
Reference-contexts: The proposal also suggests that when the gateway queue size approaches the maximum level the gateway could discard arriving packets other than ICMP packets. The DECbit congestion avoidance scheme, a binary feedback scheme for congestion avoidance, is described in <ref> [29] </ref>. In the DECbit scheme the gateway uses a congestion-indication bit in packet headers to provide feedback about congestion in the network. <p> In high-speed networks with large buffers at the gateway, it would be desirable to explicitly control the time constant for the computed average queue size; this is done in RED gateways using time-based exponential decay. In <ref> [29] </ref> the authors report that they rejected the idea of a weighted exponential running average of the queue length because when the time interval was far from the roundtrip time, there was bias in the network.
Reference: [30] <author> Romanow, A., </author> <title> Some Performance Results for TCP over ATM with Congestion, </title> <booktitle> to appear in Second IEEE Workshop on Architecture and Implementation of High Performance Communications Subsystems (HPCS 93), </booktitle> <address> Williamsburg, VA, </address> <month> Sept. </month> <pages> 1-3, </pages> <year> 1993. </year>
Reference-contexts: There are serious performance penalties for cell-based networks if a large number of cells are dropped at the gateway; in this case it is possible that many of the cells successfully transmitted belong to a packet in which some cell was dropped at a gateway <ref> [30] </ref>. By providing advance warning of incipient congestion, RED gateways can be useful in avoiding unnecessary packet or cell drops at the gateway. The simulations in this paper use gateways where there is one output queue for each output line, as in most gateways in current networks.
Reference: [31] <author> Sanghi, D., and Agrawala, A., DTP: </author> <title> An Efficient Transport Protocol, </title> <institution> University of Maryland tech report UMIACS-TR-91-133, </institution> <month> October </month> <year> 1991. </year>
Reference-contexts: In the absence of explicit feedback from the gateway, there are a number of mechanisms that have been proposed for transport-layer protocols to maintain high throughput and low delay in the network. Some of these proposed mechanisms are designed to work with current gateways <ref> [15, 23, 31, 33, 34] </ref>, while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway [20, 22].
Reference: [32] <author> Shenker, S., </author> <title> Comments on the IETF performance and congestion control working group draft on gateway congestion control policies, </title> <type> unpublished, </type> <year> 1989. </year>
Reference-contexts: The Gateway Congestion Control Survey [21] considers the versions of Early Random Drop described above. The survey cites the results in which the Early Random Drop gateway is unsuccessful in controlling misbehaving users [36]. As mentioned in <ref> [32] </ref>, Early Random Drop gateways are not expected to solve all of the problems of unequal throughput given connections with different roundtrip times and multiple congested gateways.
Reference: [33] <author> Wang, Z., and Crowcroft, J., </author> <title> A New Congestion Control Scheme: Slow Start and Search (Tri-S), </title> <journal> Computer Communication Review, V.21 N.1, </journal> <month> Jan-uary </month> <year> 1991, </year> <pages> pp. 32-43. </pages>
Reference-contexts: In the absence of explicit feedback from the gateway, there are a number of mechanisms that have been proposed for transport-layer protocols to maintain high throughput and low delay in the network. Some of these proposed mechanisms are designed to work with current gateways <ref> [15, 23, 31, 33, 34] </ref>, while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway [20, 22].
Reference: [34] <author> Wang, Z., and Crowcroft, J., </author> <title> Eliminating Periodic Packet Losses in the 4.3-Tahoe BSD TCP Congestion Control Algorithm, </title> <journal> Computer Communication Review, V.22 N.2, </journal> <month> April </month> <year> 1992, </year> <pages> pp. 9-16. </pages>
Reference-contexts: In the absence of explicit feedback from the gateway, there are a number of mechanisms that have been proposed for transport-layer protocols to maintain high throughput and low delay in the network. Some of these proposed mechanisms are designed to work with current gateways <ref> [15, 23, 31, 33, 34] </ref>, while other mechanisms are coupled with gateway scheduling algorithms that require per-connection state in the gateway [20, 22].
Reference: [35] <author> Young, P., </author> <title> Recursive Estimation and Time-Series Analysis, </title> <publisher> Springer-Verlag, </publisher> <year> 1984, </year> <pages> pp. 60-65. </pages>
Reference-contexts: Further assume that initially the average queue size was zero. In this case it takes 1=ln (1 w q ) packet arrivals (with the queue size remaining at one) until the average queue size avg reachs 0:63 = 1 1=e <ref> [35] </ref>. For w q = 0:001, this takes 1000 packet arrivals; for w q = 0:002, this takes 500 packet arrivals; for w q = 0:003, this takes 333 packet arrivals.
Reference: [36] <author> Zhang, L., </author> <title> A New Architecture for Packet Switching Network Protocols, </title> <institution> MIT/LCS/TR-455, Laboratory for Computer Science, Massachusetts Institute of Technology, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: These proposed gateways are a precursor to the Early Random Drop gateways that have been studied by several authors [11] <ref> [36] </ref>. We refer to the gateways in this paper as Random Early Detection or RED gateways. <p> For the version of Early Random Drop gateways used in the simulations in <ref> [36] </ref>, if the queue is more than half full then the gateway drops each arriving packet with probability 0.02. Zhang [36] shows that this version of Early Random Drop gateways was not successful in controlling misbehaving users. <p> For the version of Early Random Drop gateways used in the simulations in <ref> [36] </ref>, if the queue is more than half full then the gateway drops each arriving packet with probability 0.02. Zhang [36] shows that this version of Early Random Drop gateways was not successful in controlling misbehaving users. In these simulations, with both Random Drop and Early Random Drop gateways, the misbehaving users received roughly 75% higher throughput than the users implementing standard 4.3 BSD TCP. <p> The Gateway Congestion Control Survey [21] considers the versions of Early Random Drop described above. The survey cites the results in which the Early Random Drop gateway is unsuccessful in controlling misbehaving users <ref> [36] </ref>. As mentioned in [32], Early Random Drop gateways are not expected to solve all of the problems of unequal throughput given connections with different roundtrip times and multiple congested gateways.
Reference: [37] <author> Zhang, L., and Clark, D., </author> <title> Oscillating Behavior of Network Traffic: A Case Study Simulation, </title> <journal> In-ternetworking: Research and Experience, </journal> <volume> Vol. 1, </volume> <year> 1990, </year> <pages> pp. 101-112. </pages>
Reference-contexts: Another goal in deciding which connections to notify of congestion is to avoid the global synchronization that results from notifying all connections to reduce their windows at the same time. Global synchronization has been studied in networks with Drop Tail gateways <ref> [37] </ref>, and results in loss of throughput in the network. Synchronization as a general network phenomena has been explored in [8].
Reference: [38] <author> Zhang, L., Shenker, S., and Clark, D., </author> <title> Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two-Way Traffic, </title> <address> SIG-COMM '91, </address> <month> September </month> <year> 1991, </year> <pages> pp. 133-148. 21 </pages>
Reference-contexts: Because of the effects of ack-compression with two-way traffic, the packets arriving at the gateway from each connection are somewhat bursty. When ack-packets are `compressed' in a queue, the ack packets arrive at the source node in a burst. In response, the source sends a burst of data packets <ref> [38] </ref>. The top chart in Figure 9 shows the queue for gateway A, and the next chart shows the queue for gateway B. For each chart, each `X' indicates a packet dropped at that gateway.
References-found: 38

