URL: ftp://shrimp.cs.washington.edu/pub/olympia/FPGA92.ps.Z
Refering-URL: http://www.cs.washington.edu/homes/hauck/publications.html
Root-URL: 
Title: ACM/SIGDA Workshop on Field-Programmable Gate Arrays,  Routing-directed Placement for the TRIPTYCH FPGA  
Author: Elizabeth A. Walkup, Scott Hauck, Gaetano Borriello, Carl Ebeling 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering, FR-35 University of Washington  
Date: February, 1992.  
Note: Berkeley,  
Abstract: Currently, FPGAs either divorce the issues of placement and routing by providing logic and interconnect as separate resources, or ignore the issue of routing by targeting applications that use only nearest-neighbor communication. Triptych is a new FPGA architecture that attempts to support efficient implementation of a wide range of circuits by blending the logic and interconnect resources. This allows the physical structure of the logic array to more closely match the structure of logic functions, thereby providing an efficient substrate (in terms of both area and speed) in which to implement these functions. Full utilization of this architecture requires an integrated approach to the mapping process which consists of covering, placement, and routing. While our primary goal in this work is to develop effective mapping tools for the Triptych architecture, more tightly-coupled placement and routing will be an important approach for both general-purpose and domainspecific FPGAs. In this paper, we demonstrate that a routing-directed placement algorithm for Triptych should lead to cost-effective mappings when compared to other FPGAs. 
Abstract-found: 1
Intro-found: 1
Reference: [Actel91] <author> Actel Corporation, </author> <title> ACT Family Field Programmable Gate Array Data Book, </title> <year> 1991. </year>
Reference-contexts: Finally, two copies of the array, flowing in opposite directions, are overlaid (see Figure 1c). Connections between the planes exist at the crossover points of the short diagonal wires. It is clear that this array does not allow arbitrary point-to-point routing like that associated with Xilinx and Actel FPGAs <ref> [Xilinx91, Actel91] </ref>. However, we claim that this array matches the form of many circuits, and that a mapping strategy that takes this structure into account can produce routeable implementations. Section 4 outlines the approach we are taking on integrating these routing limitations into the placement problem.
Reference: [Algotronix91] <author> Algotronix Limited, </author> <note> CAL1024 Preliminary Datasheet, </note> <year> 1991. </year>
Reference-contexts: A lack of interconnect resources also leads to decreased performance as critical paths are forced into more circuitous routes. Domainspecific FPGAs like the Algotronix CAL1024 (CAL) and the Concurrent Logic CFA6000 (CFA) increase the chip area devoted to logic by reducing routing to nearest-neighbor communication <ref> [Algotronix91, Concurrent91] </ref>. The result is that these architectures are restricted to highly pipelined dataflow applications, for which they are more efficient than general-purpose FPGAs.
Reference: [Beetem91] <author> J. F. Beetem, </author> <title> Simultaneous Placement and Routing of the Labyrinth Reconfigurable Logic Array, </title> <booktitle> International Workshop on Field-Programmable Logic and Applications, </booktitle> <address> Oxford, </address> <year> 1991. </year>
Reference-contexts: Some research has been done on integrating placement and routing for domainspecific FPGAs but this work is very preliminary <ref> [Beetem91] </ref>. It is clear that domainspecific FPGAs can benefit greatly from an integrated approach to covering, placement, and routing. But we believe it is also true that general-purpose FPGAs can take advantage of the increased flexibility offered by this approach.
Reference: [Carter86] <author> W. Carter et al., </author> <title> A User Programmable Reconfigurable Gate Array, </title> <booktitle> Proceedings of the IEEE Custom Integrated Circuits Conference, </booktitle> <month> May </month> <year> 1986. </year>
Reference-contexts: Clear separation between the logic and interconnection resources is attractive because the covering, placement, and routing decisions are highly decoupled. The price of this separation is the large area and delay cost incurred by the flexible interconnection needed to support arbitrary routing requirements. This leads to architectures like Xilinx <ref> [Carter86] </ref>, where the routing resources consume more than 90% of the chip area. Even so, the largest Xilinx FPGA (3090) seldom achieves more than 50% logic block utilization for random logic. A lack of interconnect resources also leads to decreased performance as critical paths are forced into more circuitous routes.
Reference: [Ebeling91] <editor> C. Ebeling, et. al., Triptych: </editor> <title> A N e w FP G A A r c h i te c t u r e , International Workshop of Field P r o g r a m m a b l e L o g i c a n d Applications, </title> <address> Oxford, </address> <note> September 1991; also appears at University of Washington, </note> <institution> Department of Computer Science & Engineering, </institution> <note> Technical Report 91-09-05. </note>
Reference-contexts: The Triptych Architecture The signal flow in a typical multilevel combinational logic circuit can be viewed from an input as a fanout tree to those outputs that the input affects or from an output as a fanin tree from those inputs it depends upon. The Triptych architecture <ref> [Ebeling91] </ref> emulates this fanin/fanout tree form by arranging RLBs (routing and logic blocks) into columns, with each RLB having short, hardwired connections to its nearest neighbors in adjacent columns (see Figure 1a).
Reference: [Hauck92] <author> S. Hauck, et. al., Triptych: </author> <title> An FPGA Architecture with Integrated Logic and Routing, Advanced Research in VLSI and Parallel Systems, </title> <note> to appear March 1992; </note>
Reference-contexts: Xilinx routing delays were calculated via a delay model presented in [Schlag91]. The circuits include three random logic benchmark FSMs and 8 to 10 circuits each from arithmetic, systolic, and linear and exponential-growth bit-parallel examples. For full details, please see <ref> [Hauck92] </ref>. Triptych factor CFA factor CAL factor Xilinx factor Area 1.0 2.06 1.17 3.53 Delay 1.0 1.74 1.73 0.99 Table 1. Table of area and delay comparison data for four FPGAs. 3.
Reference: [Kean89] <author> T. Kean, </author> <title> Configurable Logic: A D y n a m i c a l l y P r o g r a m m a b l e Cellular Logic Architecture and its VLSI Implementation, </title> <type> PhD Thesis, </type> <institution> Dept. of Computer Science, University of Edinburgh, </institution> <year> 1989. </year>
Reference-contexts: Implementing circuits using these FPGAs requires close attention to routing during placement, which is generally accomplished by manual placement and routing of regular structures or using specialized tools optimized to a specific circuit domain <ref> [Kean89] </ref>. Some research has been done on integrating placement and routing for domainspecific FPGAs but this work is very preliminary [Beetem91]. It is clear that domainspecific FPGAs can benefit greatly from an integrated approach to covering, placement, and routing.
Reference: [Nair87] <author> R. Nair, </author> <title> "A Simple Yet Effective Technique for Global Wiring", </title> <journal> IEEE Transactions on CAD, </journal> <volume> vol. CAD-6 no. 2, </volume> <year> 1987. </year>
Reference-contexts: Currently we are implementing a routing tool based on Nair's simple global router <ref> [Nair87] </ref>. During an iteration of this procedure, each signal is ripped up and rerouted using a standard algorithm for shortest paths with the cost of using a given routing resource proportional to the number of signals using it.
Reference: [Schlag91] <author> M. Schlag, P.K. Chan, and J. Kong, </author> <title> "Empirical Evaulation of Multilevel Logic Minimization Tools for a Field Programmable G a t e A r r a y T e c h n o l o g y " , International Workshop on Field-P r o g r a m m a b l e L o g i c a n d Applications, </title> <publisher> Oxford, </publisher> <year> 1991. </year>
Reference-contexts: Area figures for Xilinx are lower bounds as only function covering was performed and it was assumed that during placement no cells would be unreachable. Xilinx routing delays were calculated via a delay model presented in <ref> [Schlag91] </ref>. The circuits include three random logic benchmark FSMs and 8 to 10 circuits each from arithmetic, systolic, and linear and exponential-growth bit-parallel examples. For full details, please see [Hauck92]. Triptych factor CFA factor CAL factor Xilinx factor Area 1.0 2.06 1.17 3.53 Delay 1.0 1.74 1.73 0.99 Table 1.
Reference: [Shahookar91] <author> K. Shahookar, P. Masunder, </author> <title> VLSI Cell Placement Techniques, </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 23, No. 2, </volume> <month> June </month> <year> 1991. </year>
Reference-contexts: of RLBs into a three-dimensional array, where the z-dimension separates the "red" and "black" cells in the "checkerboard" of the array; stretch the x and y coordinates of the cells to force local three-dimensional Euclidean distances to match the inherent routing distance; and then implement forcedirected placement in three dimensions <ref> [Shahookar91] </ref>. We have found that inflating the z-dimension to nearly twice what it should be, thereby encouraging signals to flow in one direction, leads to placements which are generally easier to route and more closely resemble circuits which have been placed and routed by hand.
Reference: [Xilinx91] <author> Xilinx, Inc., </author> <title> "The Programmable Gate Array Data Book", </title> <year> 1991. </year>
Reference-contexts: Finally, two copies of the array, flowing in opposite directions, are overlaid (see Figure 1c). Connections between the planes exist at the crossover points of the short diagonal wires. It is clear that this array does not allow arbitrary point-to-point routing like that associated with Xilinx and Actel FPGAs <ref> [Xilinx91, Actel91] </ref>. However, we claim that this array matches the form of many circuits, and that a mapping strategy that takes this structure into account can produce routeable implementations. Section 4 outlines the approach we are taking on integrating these routing limitations into the placement problem.
References-found: 11

