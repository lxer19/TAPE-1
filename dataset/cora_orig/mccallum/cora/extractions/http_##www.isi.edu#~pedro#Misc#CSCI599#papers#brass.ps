URL: http://www.isi.edu/~pedro/Misc/CSCI599/papers/brass.ps
Refering-URL: http://www.isi.edu/~pedro/Misc/CSCI599/papers/presentations.html
Root-URL: http://www.isi.edu
Email: contact: amd@cs.berkeley.edu  
Phone: phone: (510) 643-2818 FAX: (510) 642-5775  
Title: The Case for Reconfigurable Processors  
Author: Andre DeHon and John Wawrzynek 
Date: January 31, 1997  
Address: Soda Hall #1776 Berkeley, CA 94720-1776  
Affiliation: Computer Science Division University of California at Berkeley  
Note: Preliminary Copy Contact author &lt;amd@cs.berkeley.edu&gt; for final.  
Abstract: Processors, from their inception, have been designed to heavily share a limited quantity of active hardware. This trend has continued to present, with modern microprocessors heavily multiplexing small execution engines making room to hold a large number of instructions and data on chip. As we look to the future, the real-estate available on a single VLSI IC continues to increase, shifting the premium away from simply packing computational descriptions on chip and opening up the way to pack entire active computations. Consequently, a substantial fraction of the area on future microprocessors will be devoted to reconfigurable logic supporting the spatial composition of regular computations. Furthermore, the major functional blocks traditionally found on microprocessors (e.g. processing cores, memory blocks, hardwired functional units) will be interconnected in a reconfigurable manner allowing them to be organized and deployed according to the needs of an application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Kenneth David Chapman. </author> <title> Fast Integer Multipliers fit in FPGAs. EDN, </title> <address> 39(10):80, </address> <month> May 12 </month> <year> 1993. </year> <note> Anonymous FTP www.ednmag.com:EDN/di_sig/DI1223Z.ZIP </note> . 
Reference-contexts: For instance, an application could: 1. require a smaller multiply (e.g. 8fi12) 2. be multiplying by a constant value 3. require only a limited precision result For example, [7] describes how to perform specialized multiplies on the PA-RISC processor and <ref> [1] </ref> describes them on the Xilinx 4K FPGA. Table 2 highlights how limited data sizes and constant values reduce the computationally density benefit of the hardwired multiplier. Just looking at these examples, we see the density benefit drop by an order of magnitude.
Reference: [2] <author> Andre DeHon. </author> <title> Reconfigurable Architectures for General-Purpose Computing. </title> <type> AI Technical Report 1586, </type> <institution> MIT Artificial Intelligence Laboratory, 545 Technology Sq., </institution> <address> Cam-bridge, MA 02139, </address> <month> October </month> <year> 1996. </year> <note> Anonymous FTP publications.ai.mit.edu: ai-publications/1996/AITR-1586.ps.Z. </note>
Reference-contexts: Note that while vector extensions to modern 3 Preliminary Copy Contact author &lt;amd@cs.berkeley.edu&gt; for final. Data shown is taken from published clock rates, device organization, and published and measured die sizes <ref> [2] </ref>. ALU bit Ops/ 2 s is the density of operations per unit area-time. Area is normalized by the technology feature size ( is half the minimum feature size). <p> 50 (simplification only valid for p = 0:5 and N LUT w &gt; 32) A SW Area per switch 2500 2 n ibits Number of bits per pinst 64 A mem cell Memory cell area 1200 2 (static) d Data bits stored per compute bit c (one per instruction) See <ref> [2] </ref> for further details on the assumptions used here. Model Figure 3 shows the composition of a generic computational block. The block represents the fraction of a computing device independently controlled by a single collection of instruction bits on one cycle.
Reference: [3] <author> Jahil Fadavi-Ardekani. </author> <title> M fiN Booth Encoded Multiplier Generator Using Optimized Wallace Trees. </title> <journal> IEEE Transactions on Very Large Scale Integration (VLSI) Systems, </journal> <volume> 1(2) </volume> <pages> 120-125, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Notice that the DSP achieves about the same multiply density as the FPGA, despite the fact that it includes a hardwired 16fi16 multiplier. 8 Preliminary Copy Contact author &lt;amd@cs.berkeley.edu&gt; for final. Style Design Feature Area Time Area-Time Ratio Size () ( 2 ) ( 2 s) Custom <ref> [3] </ref> 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K [8, 4] 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP [5] 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 [9, 7] 66 ns/cycle fi 44 cycles
Reference: [4] <author> Tsuyoshi Isshiki and Wayne Wei-Ming Dai. </author> <title> High-Level Bit-Serial Datapath Synthesis for Multi-FPGA Systems. </title> <booktitle> In Proceedings of the ACM/SIGDA International Symposium on Field-Programmable Gate Arrays, </booktitle> <pages> pages 167-173. </pages> <publisher> ACM, </publisher> <month> February </month> <year> 1995. </year>
Reference-contexts: Style Design Feature Area Time Area-Time Ratio Size () ( 2 ) ( 2 s) Custom [3] 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K <ref> [8, 4] </ref> 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP [5] 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 [9, 7] 66 ns/cycle fi 44 cycles Table 1: Comparison of 16fi16 Multiplier This density dilution
Reference: [5] <author> Kenji Kaneko, Tetsuya Nakagawa, Atsushi Kiuchi, Yoshimune Hagiwara, Hirotada Ueda, and Hitoshi Matsushima. </author> <title> A 50ns DSP with Parallel Processing Architecture. </title> <booktitle> In 1987 IEEE International Solid-State Circuits Conference, Digest of Technical Papers, </booktitle> <pages> pages 158-159. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1987. </year>
Reference-contexts: Style Design Feature Area Time Area-Time Ratio Size () ( 2 ) ( 2 s) Custom [3] 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K [8, 4] 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP <ref> [5] </ref> 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 [9, 7] 66 ns/cycle fi 44 cycles Table 1: Comparison of 16fi16 Multiplier This density dilution is easy to understand when you realize the hardwired multiplier added to the DSP is small compared to the rest
Reference: [6] <author> B. S. Landman and R. L. Russo. </author> <title> On Pin Versus Block Relationship for Partitions of Logic Circuits. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 20 </volume> <pages> 1469-1479, </pages> <year> 1971. </year>
Reference-contexts: Additionally, the block may be characterized by the interconnect richness, p, the Rent parameter <ref> [6] </ref>. We will assume p = 0:5 uniformly in this article in order to focus on instruction effects. A traditional FPGA, for instance, is characterized by a pinst depth of one (c = 1) and a datapath width of one (w = 1).
Reference: [7] <author> Daniel J. Magenheimer, Liz Peters, Karl Pettis, and Dan Zuras. </author> <title> Integer Multiplication and Division on the HP Precision Architecture. </title> <booktitle> In Proceedings of the Second International Confer 16 Preliminary Copy Contact author &lt;amd@cs.berkeley.edu&gt; for final. ence on the Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pages 90-99. </pages> <publisher> IEEE, </publisher> <year> 1987. </year>
Reference-contexts: 2 ) ( 2 s) Custom [3] 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K [8, 4] 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP [5] 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 <ref> [9, 7] </ref> 66 ns/cycle fi 44 cycles Table 1: Comparison of 16fi16 Multiplier This density dilution is easy to understand when you realize the hardwired multiplier added to the DSP is small compared to the rest of the programmed processor in the DSP. <p> For instance, an application could: 1. require a smaller multiply (e.g. 8fi12) 2. be multiplying by a constant value 3. require only a limited precision result For example, <ref> [7] </ref> describes how to perform specialized multiplies on the PA-RISC processor and [1] describes them on the Xilinx 4K FPGA. Table 2 highlights how limited data sizes and constant values reduce the computationally density benefit of the hardwired multiplier.
Reference: [8] <author> Xilinx, Inc., </author> <title> 2100 Logic Drive, </title> <address> San Jose, CA 95124. </address> <booktitle> The Programmable Logic Data Book, </booktitle> <year> 1994. </year>
Reference-contexts: Style Design Feature Area Time Area-Time Ratio Size () ( 2 ) ( 2 s) Custom [3] 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K <ref> [8, 4] </ref> 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP [5] 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 [9, 7] 66 ns/cycle fi 44 cycles Table 1: Comparison of 16fi16 Multiplier This density dilution

Reference: [1] <author> Maya Gokhale, William Holmes, Andrew Kopser, Sara Lucas, Ronald Minnich, Dou-glas Sweely, and Daniel Lopresti. </author> <title> Building and Using a Highly Programmable Logic Array. </title> <journal> IEEE Computer, </journal> <volume> 24(1) </volume> <pages> 81-89, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: For instance, an application could: 1. require a smaller multiply (e.g. 8fi12) 2. be multiplying by a constant value 3. require only a limited precision result For example, [7] describes how to perform specialized multiplies on the PA-RISC processor and <ref> [1] </ref> describes them on the Xilinx 4K FPGA. Table 2 highlights how limited data sizes and constant values reduce the computationally density benefit of the hardwired multiplier. Just looking at these examples, we see the density benefit drop by an order of magnitude.

Reference: [1] <author> Peter Athanas and Harvey F. Silverman. </author> <title> Processor Reconfiguration Through Instruction-Set Metamorphosis. </title> <journal> IEEE Computer, </journal> <volume> 26(3) </volume> <pages> 11-18, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: For instance, an application could: 1. require a smaller multiply (e.g. 8fi12) 2. be multiplying by a constant value 3. require only a limited precision result For example, [7] describes how to perform specialized multiplies on the PA-RISC processor and <ref> [1] </ref> describes them on the Xilinx 4K FPGA. Table 2 highlights how limited data sizes and constant values reduce the computationally density benefit of the hardwired multiplier. Just looking at these examples, we see the density benefit drop by an order of magnitude.
Reference: [2] <author> Gerald Estrin, B. Bussell, R. Turn, and J. Bibb. </author> <title> Parallel Processing in a Restructurable Computer System. </title> <journal> IEEE Transactions on Electronic Computers, </journal> <volume> 12 </volume> <pages> 747-754, </pages> <month> December </month> <year> 1963. </year>
Reference-contexts: Note that while vector extensions to modern 3 Preliminary Copy Contact author &lt;amd@cs.berkeley.edu&gt; for final. Data shown is taken from published clock rates, device organization, and published and measured die sizes <ref> [2] </ref>. ALU bit Ops/ 2 s is the density of operations per unit area-time. Area is normalized by the technology feature size ( is half the minimum feature size). <p> 50 (simplification only valid for p = 0:5 and N LUT w &gt; 32) A SW Area per switch 2500 2 n ibits Number of bits per pinst 64 A mem cell Memory cell area 1200 2 (static) d Data bits stored per compute bit c (one per instruction) See <ref> [2] </ref> for further details on the assumptions used here. Model Figure 3 shows the composition of a generic computational block. The block represents the fraction of a computing device independently controlled by a single collection of instruction bits on one cycle.
Reference: [3] <author> Rahul Razdan and Michael D. Smith. </author> <title> A High-Performance Microarchitecture with Hardware-Programmable Functional Units. </title> <booktitle> In Proceedings of the 27th Annual International Symposium on Microarchitecture, </booktitle> <pages> pages 172-180. </pages> <publisher> IEEE Computer Society, </publisher> <month> November </month> <year> 1994. </year> <note> Anonymous FTP ftp.eecs.harvard.edu:users/ smith/papers/micro94.ps.gz. </note>
Reference-contexts: Notice that the DSP achieves about the same multiply density as the FPGA, despite the fact that it includes a hardwired 16fi16 multiplier. 8 Preliminary Copy Contact author &lt;amd@cs.berkeley.edu&gt; for final. Style Design Feature Area Time Area-Time Ratio Size () ( 2 ) ( 2 s) Custom <ref> [3] </ref> 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K [8, 4] 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP [5] 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 [9, 7] 66 ns/cycle fi 44 cycles
Reference: [4] <author> Mario R. Schaffner. </author> <title> Processing by Data and Program Blocks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 27(11) </volume> <pages> 1015-1028, </pages> <month> November </month> <year> 1978. </year>
Reference-contexts: Style Design Feature Area Time Area-Time Ratio Size () ( 2 ) ( 2 s) Custom [3] 0.63 2.6M 40 ns 0.104 1.0 FPGA XC4K <ref> [8, 4] </ref> 0.6 110M 120 ns 13.2 130 88 CLBs fi 1.25M 2 /CLB, 7.5 ns/cycle fi 16 cycles DSP [5] 0.65 350M 50 ns 17.5 170 Processor PA-RISC 0.75 125M 2904 ns 363 3500 [9, 7] 66 ns/cycle fi 44 cycles Table 1: Comparison of 16fi16 Multiplier This density dilution
References-found: 13

