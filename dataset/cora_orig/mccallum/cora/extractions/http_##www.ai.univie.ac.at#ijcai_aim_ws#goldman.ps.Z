URL: http://www.ai.univie.ac.at/ijcai_aim_ws/goldman.ps.Z
Refering-URL: http://www.ai.univie.ac.at/ijcai_aim_ws/program.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: NetNeg: A Hybrid System Architecture for Composing Polyphonic Music  
Author: Claudia V. Goldman and Dan Gang and Jeffrey S. Rosenschein 
Keyword: network. Keywords: Music, Distributed Artificial Intelligence, Neural Networks, Learning, Negotiation.  
Note: The network produces aesthetic melodies based on the training examples it was given. The agents choose which are the next notes in the two-part melodies by negotiating over the possible combinations of notes suggested by the  
Address: Givat Ram, Jerusalem, Israel  
Affiliation: Computer Science Department Hebrew University  
Email: email:clag@cs.huji.ac.il, dang@cs.huji.ac.il, jeff@cs.huji.ac.il  
Phone: ph: 011-972-2-658-5353 fax: 011-972-2-658-5439  
Abstract: There are musical activities in which we are faced with symbolic and sub-symbolic processes. This research focuses on the question whether integrating a neural network together with a distributed artificial intelligence approach has any advantages in the music domain. In this work, we present a new approach for composing and analyzing poliphonic music. As a case study, we began experimenting with first species two-part counterpoint melodies. Our system design is inspired by the cognitive process of a human musician. We have developed a hybrid system composed of a connectionist module and an agent-based module to combine the symbolic and sub-symbolic levels to achieve this task. 
Abstract-found: 1
Intro-found: 1
Reference: [ Jeppesen, 1992 ] <author> K. Jeppesen. </author> <title> Counterpoint The Polyphonic Vocal Style of the Sixteenth Century. </title> <publisher> Dover, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Each agent, then, receives a new input based on this output and the negotiation step is repeated until the melody is completed. We define the system utility function to express the rules given by Jeppesen in <ref> [ Jeppesen, 1992 ] </ref> . A pair of notes is considered legal according to the following rules: 1. The intervals between pairs of notes in the two part melodies should not be dissonant. 2. There should be perfect consonance in the first and last place of the melody. 3. <p> (T t 1 ; T t 1 if (T t 2 ) is legal w.r.t the above rules 0 otherwise We have considered the contrary motion in this function because this type of motion produces the most natural and appropriate effect for this kind of music (as noticed by Jeppesen <ref> [ Jeppesen, 1992 ] </ref> ). The utility function is heuristic. <p> taking into account the contrary motion term in the function enables the system to produce con trary motion although the network might have suggested movement in the same direction. 4 Experiments 4.1 Running the Net In the training phase, the network learned to reproduce four melodies that were taken from <ref> [ Jeppesen, 1992 ] </ref> . See We have tested the performance of the network with different number of hidden units. The result we present regards to a net with 15 units in the hidden layer. <p> Both melodies are consistent with the intervals constraints. Nevertheless, there is a contour problem as pointed in (1) and (2) in A1's melody in Figure 4. According to Jeppesen <ref> [ Jeppesen, 1992 ] </ref> it is preferred to descend by a step and then perform a descending skip. After a descending skip, we are expected to have a compensating ascending movement. In (3), we prefer to approach the last note by a step. <p> We are developing more natural ways to combine both modules. In their negotiation, the agents follow the rules taken from Jeppesen <ref> [ Jeppesen, 1992 ] </ref> . The system utility function considers the activations of the current notes, whether this pair is legal or not and it prefers contrary motion. We presented preliminary results of the system, namely the two-part counterpoint melodies produced by the program.
Reference: [ Jordan, 1986 ] <author> M.I. Jordan. </author> <title> Attractor dynamics and parallelism in a connectionist sequential machine. </title> <booktitle> In Proceedings of The Eighth Annual Conference of the Cognitive Science Society, </booktitle> <address> Hillsdale, N.J., </address> <year> 1986. </year>
Reference: [ Miyata, 1991 ] <author> Yoshiro Miyata. </author> <note> A User's Guide to PlaNet Version 5.6. </note> <institution> Computer Science Dept., University of Colorado, Boulder, </institution> <year> 1991. </year>
Reference-contexts: In this sense, the goal of the agents is to agree on the pair of notes that is legal and has also achieved the maximal utility value among all the other options. 3 Implementation 3.1 The Connectionist Module We have implemented the Connectionist module in Planet <ref> [ Miyata, 1991 ] </ref> . We built a three-layer sequential net, that learns series of notes. Each series is a one part melody (i.e., cantus firmus). Each sequence of notes is labeled by a vector of plan units.
Reference: [ Montgomery et al., 1992 ] <author> T. A. Montgomery, J. Lee, D. J. Musliner, E. H. Durfee, D. Damouth, and Y. </author> <title> So. MICE Users Guide. </title> <institution> Artificial Intelligence Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, </institution> <address> Ann Arbor, Michi-gan, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: Thus, we could take into consideration other constraints that the agents could suggest, based on their rules, to enrich the learning abilities of the network. 3.2 The Agent-based Module We have implemented the agent module using the Mice testbed <ref> [ Montgomery et al., 1992 ] </ref> . Both agents are involved in a dynamic process in order to create their correspondent melodies. At each time unit, each agent gets a vector of 13 activation values corresponding to the activations of the tones in more than an octave and a half.
Reference: [ Rosenschein and Zlotkin, 1994 ] <author> Jeffrey S. Rosenschein and Gilad Zlotkin. </author> <title> Rules of Encounter:Designing Conventions for Automated Negotiation Among Computers. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: Were the agent alone in the system, he would have chosen the note that got the highest activation from the neural network, meaning that this note is the one most expected to be next in the melody. But, in order to compose species, both agents will have to negotiate <ref> [ Rosenschein and Zlotkin, 1994 ] </ref> over all the other possible combinations to obtain a globally superior result. In principle, each agent can suggest any of the n possible notes received from the network, leading to n 2 possible different combinations.
Reference: [ Todd, 1989 ] <author> P.M. Todd. </author> <title> A connectionist approach to algorithmic composition. </title> <journal> Computer Music Journal, </journal> <volume> 13 </volume> <pages> 27-43, </pages> <year> 1989. </year>
Reference-contexts: One sub-system is implemented by a modified version of Jordan's sequential neural network [ Jor-dan, 1986 ] . The second one is a two-agent model based on Distributed Artificial Intelligence. See Figure 1. The Connectionist Subsystem Each part of the melody is produced independently by a neural network. Todd <ref> [ Todd, 1989 ] </ref> has already suggested a sequential neural network that can learn a sequence of melody notes. Currently, our neural network is based on the same idea. The state units in the input layer and the units in the output layer represent the pitch and the contour.
References-found: 6

