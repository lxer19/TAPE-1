URL: http://www.cs.virginia.edu/~gjf2a/research/papers/fss98.ps
Refering-URL: http://www.cs.virginia.edu/~gjf2a/research/
Root-URL: http://www.cs.virginia.edu
Title: Constraining Planning Episodes in an Interleaved Architecture  
Author: Gabriel J. Ferrer, Glenn S. Wasson, and Worthy N. Martin Thornton Hall 
Address: Charlottesville, VA 22903  
Affiliation: Computer Science Department  University of Virginia  
Abstract: This paper discusses an approach to constraining the duration of planning episodes in an interleaved architecture by placing explicit time limits on those episodes. Determining when to stop planning and start executing is a problem for any interleaved approach. For certain types of domains, it is necessary that the planning episodes have explicit time limits in order for the agent to be able to complete the task in a timely manner. An example involving security robots pursuing intruders is presented to demonstrate the potential utility of this concept. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agre, P., and Chapman, D. </author> <year> 1987. </year> <title> Pengi: an implementation of a theory of activity. </title> <type> AAAI-86 268-272. </type>
Reference-contexts: Marker Architecture We have developed a marker-based execution system for mobile robots (Brill et al. 1998). Our system is an outgrowth of the reactive approach developed by Brooks (Brooks 1986) and the concept of deictic representation as used by Agre and Chapman <ref> (Agre & Chapman 1987) </ref> (Agre & Chapman 1990). A reactive system always computes the currently necessary information from the current set of sensor values.
Reference: <author> Agre, P., and Chapman, D. </author> <year> 1990. </year> <title> What are plans for? Robotics and Autonomous Systems 6 </title> <type> 17-34. </type>
Reference-contexts: Marker Architecture We have developed a marker-based execution system for mobile robots (Brill et al. 1998). Our system is an outgrowth of the reactive approach developed by Brooks (Brooks 1986) and the concept of deictic representation as used by Agre and Chapman (Agre & Chapman 1987) <ref> (Agre & Chapman 1990) </ref>. A reactive system always computes the currently necessary information from the current set of sensor values.
Reference: <author> Arkin, R. C., and Balch, T. </author> <year> 1997. </year> <note> AuRA: Principles and practice in review. Journal of Experimental and Theoretical Artificial Intelligence 9(2). </note>
Reference-contexts: Then, we will describe our approach in more detail and give an example to show how this approach might work in practice. Related Work Most existing hybrid agent architectures that incorporate reactive execution and planning do not pay much attention to real-time issues (Bonasso et al. 1997) <ref> (Arkin & Balch 1997) </ref> (Simmons 1994). A notable exception is the CIRCA architecture (Musliner, Durfee, & Shin 1993). CIRCA incorporates AI planning and deadline-based real-time scheduling.
Reference: <author> Bonasso, R. P.; Firby, R. J.; Gat, E.; Kortenkamp, D.; Miller, D. P.; and Slack, M. G. </author> <year> 1997. </year> <title> Experiences with an architecture for intelligent, reactive agents. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence 9(2). </journal>
Reference-contexts: Then, we will describe our approach in more detail and give an example to show how this approach might work in practice. Related Work Most existing hybrid agent architectures that incorporate reactive execution and planning do not pay much attention to real-time issues <ref> (Bonasso et al. 1997) </ref> (Arkin & Balch 1997) (Simmons 1994). A notable exception is the CIRCA architecture (Musliner, Durfee, & Shin 1993). CIRCA incorporates AI planning and deadline-based real-time scheduling.
Reference: <author> Brill, F. Z.; Wasson, G. S.; Ferrer, G. J.; and Martin, W. N. </author> <year> 1998. </year> <title> The effective field of view paradigm: Adding representation to a reactive system. </title> <journal> Engineering Applications of Artificial Intelligence. </journal>
Reference-contexts: We have previously developed an agent architecture incorporating planning and execution, using a novel mechanism for representation and communication called the marker <ref> (Brill et al. 1998) </ref>. We will be extending this architecture to incorporate interleaving planning episodes using deadlines. We will begin by discussing related work. Next, we will summarize relevant aspects of the marker-based architecture. <p> The search space reductions that result from interleaving keep the planning episodes short enough that the approach has been useful for several practical tasks. However, neither of these implementations attempts a task with particularly tight time constraints. Marker Architecture We have developed a marker-based execution system for mobile robots <ref> (Brill et al. 1998) </ref>. Our system is an outgrowth of the reactive approach developed by Brooks (Brooks 1986) and the concept of deictic representation as used by Agre and Chapman (Agre & Chapman 1987) (Agre & Chapman 1990). <p> The marker-based approach to the execution system advocates storing limited amounts of task-dependent information in small data structures called markers. Use of markers can dramatically increase agent performance when compared with a purely reactive execution system <ref> (Brill et al. 1998) </ref>. In addition to the benefits they provide at the execution level, markers can also be used as a means of communication between layers of the agent architecture. The system operating at the execution level we refer to as the Perception/Action (PA) system.
Reference: <author> Brooks, R. A. </author> <year> 1986. </year> <title> A robost layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation RA-2(1):14-23. </journal>
Reference-contexts: However, neither of these implementations attempts a task with particularly tight time constraints. Marker Architecture We have developed a marker-based execution system for mobile robots (Brill et al. 1998). Our system is an outgrowth of the reactive approach developed by Brooks <ref> (Brooks 1986) </ref> and the concept of deictic representation as used by Agre and Chapman (Agre & Chapman 1987) (Agre & Chapman 1990). A reactive system always computes the currently necessary information from the current set of sensor values.
Reference: <author> Haigh, K. Z., and Veloso, M. M. </author> <year> 1997. </year> <title> High-level planning and low-level execution: Towards a complete robotic agent. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <pages> 363-370. </pages>
Reference-contexts: Introduction A recent trend in robot architectures has been to merge a planning system with a reactive execution system by interleaving planning episodes with execution episodes (Nourbakhsh 1997) <ref> (Haigh & Veloso 1997) </ref>. An important open question when using this approach is, "How does the system determine when to stop planning and start executing?" We advocate placing real-time deadlines on the planning episodes, with the deadlines being determined dynamically by the observed state of the world. <p> The approach advocated here differs from CIRCA in that real-time guarantees will be made about the duration of planning episodes. The timeliness of the planning process itself is an issue CIRCA does not address. Existing architectures that make explicit use of interleaving (e.g. (Nourbakhsh 1997) <ref> (Haigh & Veloso 1997) </ref>) do not explicitly constrain the duration of their planning episodes. The search space reductions that result from interleaving keep the planning episodes short enough that the approach has been useful for several practical tasks.
Reference: <author> Musliner, D. J.; Durfee, E. H.; and Shin, K. G. </author> <year> 1993. </year> <title> CIRCA: A cooperative intelligent real-time control architecture. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 23(6) </journal> <pages> 1561-1573. </pages>
Reference-contexts: Related Work Most existing hybrid agent architectures that incorporate reactive execution and planning do not pay much attention to real-time issues (Bonasso et al. 1997) (Arkin & Balch 1997) (Simmons 1994). A notable exception is the CIRCA architecture <ref> (Musliner, Durfee, & Shin 1993) </ref>. CIRCA incorporates AI planning and deadline-based real-time scheduling. A real-time subsystem uses its predictable performane characteristics to deal with control-level problems that require guaranteed response times, while a separate AI subsystem reasons about task-level problems that require its powerful but unpredictable reasoning methods.
Reference: <author> Nourbakhsh, I. R. </author> <year> 1997. </year> <title> Interleaving Planning and Execution for Autonomous Robots. </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: Introduction A recent trend in robot architectures has been to merge a planning system with a reactive execution system by interleaving planning episodes with execution episodes <ref> (Nourbakhsh 1997) </ref> (Haigh & Veloso 1997). An important open question when using this approach is, "How does the system determine when to stop planning and start executing?" We advocate placing real-time deadlines on the planning episodes, with the deadlines being determined dynamically by the observed state of the world. <p> The approach advocated here differs from CIRCA in that real-time guarantees will be made about the duration of planning episodes. The timeliness of the planning process itself is an issue CIRCA does not address. Existing architectures that make explicit use of interleaving (e.g. <ref> (Nourbakhsh 1997) </ref> (Haigh & Veloso 1997)) do not explicitly constrain the duration of their planning episodes. The search space reductions that result from interleaving keep the planning episodes short enough that the approach has been useful for several practical tasks.
Reference: <author> Simmons, R. G. </author> <year> 1994. </year> <title> Structured control for autonomous robots. </title> <journal> IEEE Transactions on Robotics and Automation 10(1) </journal> <pages> 34-43. </pages>
Reference-contexts: Related Work Most existing hybrid agent architectures that incorporate reactive execution and planning do not pay much attention to real-time issues (Bonasso et al. 1997) (Arkin & Balch 1997) <ref> (Simmons 1994) </ref>. A notable exception is the CIRCA architecture (Musliner, Durfee, & Shin 1993). CIRCA incorporates AI planning and deadline-based real-time scheduling.
References-found: 10

