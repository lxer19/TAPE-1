URL: http://www.csl.sri.com/ancors/simsymp98.ps
Refering-URL: http://www.csl.sri.com/ancors/
Root-URL: 
Title: High-fidelity Distributed Simulation of Local Area Networks  
Author: Livio Ricciulli 
Address: Menlo Park, California, 94025  
Affiliation: Computer Science Laboratory SRI International  
Abstract: The Adaptable Network COntrol and Reporting System (ANCORS) project merges technology from network management, active networking, and distributed simulation in a unified paradigm to assist in the assessment, control, and design of computer networks. After motivating our approach to network engineering, we describe an initial ANCORS prototype system. In particular, we describe a high-fidelity model of a Unix-based networking protocol stack, and characterize and compare two different distributed simulation synchronization mechanisms that were used to simulate an Ethernet-based Local Area Network. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Scott Alexander, Marianne Shaw, Scott M. Nettles, and Jonathan M. Smith. </author> <title> Active bridging. </title> <booktitle> Proceedings of the ACM SIGCOMM'97 Conference, </booktitle> <address> Cannes, France, </address> <month> Septem-ber </month> <year> 1997. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. New trends in network design <ref> [12, 7, 4, 13, 11, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
Reference: [2] <author> K. M. Chandy and J. Misra. </author> <title> Asynchronous distributed simulation via a sequence of parallel computations. </title> <journal> Communications of the ACM, </journal> <month> April </month> <year> 1981. </year>
Reference: [3] <author> R. M. Fujimoto. </author> <title> Optimistic approaches to parallel discrete event driven simulation. </title> <journal> Trans. Society for Computer Simulation, </journal> <month> June </month> <year> 1990. </year>
Reference-contexts: In addition to LS, for comparison purposes we have also implemented a distributed simulation synchronization algorithm derived from the algorithms proposed by Chandy and Misra (CM)[2]. We have not yet implemented a synchronization scheme based on Time-warp <ref> [5, 3] </ref> but we plan to do so in the near future.
Reference: [4] <author> U. Manber J. Hartman, L. Peterson, and T. Proebsting. </author> <title> Liquid software: A new paradigm for networked systems. </title> <type> Technical Report 96-11, </type> <institution> University of Arizona, </institution> <year> 1996. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. New trends in network design <ref> [12, 7, 4, 13, 11, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
Reference: [5] <author> D. Jefferson. </author> <title> Virtual time. </title> <journal> ACM Trans. Programming Languages and Systems, </journal> <month> July </month> <year> 1985. </year>
Reference-contexts: In addition to LS, for comparison purposes we have also implemented a distributed simulation synchronization algorithm derived from the algorithms proposed by Chandy and Misra (CM)[2]. We have not yet implemented a synchronization scheme based on Time-warp <ref> [5, 3] </ref> but we plan to do so in the near future.
Reference: [6] <author> L. Lamport. </author> <title> Time, clocks, and the ordering of events in distributed systems. </title> <journal> Communications of the ACM, </journal> <month> July </month> <year> 1978. </year>
Reference-contexts: We have derived some of the ideas from the theory of Lam-port's virtual time <ref> [6] </ref>, and therefore we have named our technique Lamport Synchronization (LS).
Reference: [7] <author> U. Legedza, D. J. Wetherall, and J. V. Guttag. </author> <title> Improving the performance of distributed applications using active networks. </title> <note> Submitted to IEEE INFOCOM'98, </note> <year> 1998. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. New trends in network design <ref> [12, 7, 4, 13, 11, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
Reference: [8] <author> L. Ricciulli. </author> <title> A technique for the distributed simulation of parallel computers. </title> <booktitle> In MASCOTS '95, </booktitle> <month> January </month> <year> 1995. </year>
Reference-contexts: We have successfully applied these ideas to the efficient distributed simulation of a massively parallel architecture <ref> [8, 9] </ref> and, as we will see in the following sections, we have also recently applied our techniques to simulate Ethernet LANs within the scope of the ANCORS project. <p> Once the resource becomes available the execution is resumed with T g adjusted to an appropriate value. For an in-depth description of the LS technique applied to the distributed simulation of parallel computers see <ref> [8, 9] </ref>. The LS distributed simulation technique applied to 4 In the LS case from n+1 to 3 is detected, a negative acknowledgment will cause the source to back off and try again. simulating LANs is best described with a simple example.
Reference: [9] <author> L. Ricciulli, J. Meseguer, and P. Lincoln. </author> <title> Distributed simulation of parallel executions. </title> <booktitle> In 29th Annual Simulation Symposium, </booktitle> <pages> pages 15-24, </pages> <year> 1996. </year>
Reference-contexts: We have successfully applied these ideas to the efficient distributed simulation of a massively parallel architecture <ref> [8, 9] </ref> and, as we will see in the following sections, we have also recently applied our techniques to simulate Ethernet LANs within the scope of the ANCORS project. <p> Once the resource becomes available the execution is resumed with T g adjusted to an appropriate value. For an in-depth description of the LS technique applied to the distributed simulation of parallel computers see <ref> [8, 9] </ref>. The LS distributed simulation technique applied to 4 In the LS case from n+1 to 3 is detected, a negative acknowledgment will cause the source to back off and try again. simulating LANs is best described with a simple example.
Reference: [10] <author> H. Schwetman. Csim: </author> <title> A c-based, process-oriented simulation language. </title> <type> Technical report, </type> <institution> MCC, </institution> <year> 1989. </year>
Reference-contexts: Memory management and standard I/O were completely deleted and replaced by user-level functions (malloc, free, and printf) contained in the standard c library. The scheduling and the software timers were completely replaced and implemented on top of the nonpreemptive threading offered by the simulation package (CSIM <ref> [10] </ref>). The resulting service executes in a virtual timescale, offers the identical networking behavior of a real Linux kernel, and can therefore be used as a vehicle to in stantiate high-fidelity distributed simulations of virtual networks.
Reference: [11] <author> Jonathan Smith, David Farber, Carl A. Gunter, Scott Nettle, Mark Segal, William D. Sincoskie, David Feldmeier, and Scott Alexander. Switchware: </author> <title> Towards a 21st century network infrastructure. </title> <address> http://www.cis.upenn.edu/ switch-ware/papers/sware.ps, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. New trends in network design <ref> [12, 7, 4, 13, 11, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
Reference: [12] <author> D. J. Wetherall, J. V. Guttag, and D. L. Tennenhouse. </author> <title> Ants: A toolkit for building and dynamically deploying network protocols. </title> <note> Submitted to IEEES OPENARCH'98, </note> <year> 1998. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. New trends in network design <ref> [12, 7, 4, 13, 11, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
Reference: [13] <author> Y. Yemini and S. da Silva. </author> <title> Towards programmable networks. </title> <booktitle> IFIP/IEEE International Workshop on Distributed Systems: Operations and Management, </booktitle> <address> L'Aquila, Italy, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. New trends in network design <ref> [12, 7, 4, 13, 11, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
References-found: 13

