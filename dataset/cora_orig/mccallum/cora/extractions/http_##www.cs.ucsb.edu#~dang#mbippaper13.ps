URL: http://www.cs.ucsb.edu/~dang/mbippaper13.ps
Refering-URL: http://www.cs.ucsb.edu/~dang/
Root-URL: http://www.cs.ucsb.edu
Title: Specification and Analysis of Mobile IP Using ASTRAL  
Author: Zhe Dang and Richard A. Kemmerer 
Address: Santa Barbara, CA 93106  
Affiliation: Reliable Software Group Department of Computer Science University of California  
Abstract: ASTRAL is a formal specification language for real-time systems. It is intended to support formal software development, and therefore has been formally defined. This paper focuses on using ASTRAL to specify Mobile IP and testing the specification using the ASTRAL model checker component of the ASTRAL Software Development Environment. 
Abstract-found: 1
Intro-found: 1
Reference: [BBK95] <author> K. Brink, L. Bun, J. van Katwijk, and W. J. Toetenel, </author> <title> "Hybrid specification of control systems", </title> <booktitle> First IEEE International Conference on Engineering of Complex Computer Systems, </booktitle> <address> Ft. Lauderdale, Florida, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: ASTRAL has been successfully used to specify a number of interesting real-time systems, including a CCITT system [CKM94], a complex wide-area phone system by composing several ASTRAL specifications [CGK97], a hardware description language [BCF91] and a robot control system <ref> [BBK95] </ref>. In [DK 97], the use of ASTRAL to specify cryptographic protocols is demonstrated, and the ASTRAL model checker is used to uncover a number of attacks in the Needham-Schroeder Public Key Protocol and the TMN protocol.
Reference: [BCF91] <author> G. Buonanno, A. Coen-Porisini, and W. Fornaciari, </author> <title> "Hardware specification using the assertion language ASTRAL", </title> <booktitle> Proceedings of the Advanced Research Workshop on Correct Hardware Design Methodologies, </booktitle> <address> Torino, Italy, </address> <month> June </month> <year> 1991. </year>
Reference-contexts: ASTRAL has been successfully used to specify a number of interesting real-time systems, including a CCITT system [CKM94], a complex wide-area phone system by composing several ASTRAL specifications [CGK97], a hardware description language <ref> [BCF91] </ref> and a robot control system [BBK95]. In [DK 97], the use of ASTRAL to specify cryptographic protocols is demonstrated, and the ASTRAL model checker is used to uncover a number of attacks in the Needham-Schroeder Public Key Protocol and the TMN protocol.
Reference: [CGK97] <author> A. Coen-Porisini, C. Ghezzi, and R. A. Kemmerer, </author> <title> "Specification of real-time systems using ASTRAL", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 23, No. 9, </volume> <year> 1997, </year> <pages> pp. 572-598. </pages>
Reference-contexts: 1. Introduction ASTRAL is a high-level formal specification language for real-time systems. It is provided with structuring mechanisms that allow one to build modularized specifications of complex systems with layering <ref> [CGK97] </ref>. A real-time system is modeled by a collection of process specifications and a single global specification. Each process specification consists of a sequence of levels; each level is an abstract view of the process being specified. <p> Each process specification consists of a sequence of levels; each level is an abstract view of the process being specified. ASTRAL has been successfully used to specify a number of interesting real-time systems, including a CCITT system [CKM94], a complex wide-area phone system by composing several ASTRAL specifications <ref> [CGK97] </ref>, a hardware description language [BCF91] and a robot control system [BBK95]. In [DK 97], the use of ASTRAL to specify cryptographic protocols is demonstrated, and the ASTRAL model checker is used to uncover a number of attacks in the Needham-Schroeder Public Key Protocol and the TMN protocol.
Reference: [CKM94] <author> A. Coen-Porisini, R. A. Kemmerer, and D. Mandrioli, </author> <title> "A formal framework for ASTRAL intralevel proof obligations", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 20, No. 8, </volume> <year> 1994, </year> <pages> pp. </pages> <month> l548-561. </month>
Reference-contexts: Each process specification consists of a sequence of levels; each level is an abstract view of the process being specified. ASTRAL has been successfully used to specify a number of interesting real-time systems, including a CCITT system <ref> [CKM94] </ref>, a complex wide-area phone system by composing several ASTRAL specifications [CGK97], a hardware description language [BCF91] and a robot control system [BBK95].
Reference: [DK97] <author> Z. Dang and R. A. Kemmerer, </author> <title> "Using the ASTRAL model checker for cryptographic protocol analysis", </title> <booktitle> Proceedings of the DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <institution> Rutgers University, </institution> <year> 1997. </year>
Reference: [KDK98] <author> P. Z. Kolano, Z. Dang, and R. A. Kemmerer, </author> <title> "The design and analysis of real-time systems using the ASTRAL software development environment", </title> <note> submitted for publication, </note> <year> 1998 </year>
Reference: [Per96] <author> C. Perkins, </author> <title> "IP mobility support", Network Working Group Request for Comments: </title> <year> 2002, </year> <month> October </month> <year> 1996. </year> <month> 14 </month>
Reference-contexts: Thus, the code generator makes it possible to model-check a realistic protocol within a reasonable amount of time. Therefore, more realistic specifications can be validated. In this paper, the ASTRAL specification language is used to specify Mobile IP <ref> [Per96] </ref> and the protocol is then tested using the ASTRAL model checker. The paper is organized as follows. In the next section, a brief overview of Mobile IP is given. <p> Therefore, when a mobile node is away from its own home network it will not communicate with other nodes. This is because its IP address is not local to the foreign subnet that it enters. Mobile IP <ref> [Per96] </ref>, however, provides a mechanism that allows a mobile node to send and receive packets without changing its IP address, even when it is located in a foreign subnet. The operations of Mobile IP are roughly as follows.
References-found: 7

