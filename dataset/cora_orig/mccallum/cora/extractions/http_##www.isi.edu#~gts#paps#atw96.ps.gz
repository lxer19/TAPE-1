URL: http://www.isi.edu/~gts/paps/atw96.ps.gz
Refering-URL: http://www.isi.edu/~gts/pubs.html
Root-URL: http://www.isi.edu
Title: Server-Supported Signatures  
Author: N. Asokan ; G. Tsudik ? M. Waidner 
Keyword: digital signatures, non-repudiation, electronic commerce, network security, distributed systems, mobility.  
Note: In Proceedings  
Address: CH-8803 Ruschlikon, Switzerland  Waterloo, Waterloo, Canada.  USA.  ESORICS'96, Rome, Italy,  
Affiliation: 1 IBM Zurich Research Laboratory,  Department of Computer Science, University of  Information Sciences Institute, University of Southern California,  of  
Email: email: faso,wmig@zurich.ibm.com  email: gts@isi.edu  
Phone: 2  3  
Date: Sept. 25-27, 1996.  
Abstract: Non-repudiation is one of the most important security services. In this paper we present a novel non-repudiation technique, called Server-Supported Signatures, S 3 . It is based on one-way hash functions and traditional digital signatures. One of its highlights is that for ordinary users the use of asymmetric cryptography is limited to signature verification. S 3 is efficient in terms of computational, communication and storage costs. It also offers a degree of security comparable to existing techniques based on asymmetric cryptography. 
Abstract-found: 1
Intro-found: 1
Reference: [For94] <author> Warwick Ford. </author> <title> Computer Communications Security Principles, Standard Protocols and Techniques. </title> <publisher> Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1994. </year>
Reference-contexts: Furthermore, the security of originators depends on the strength of the one-way hash function and not on the security of the digital signature scheme. 11 7 Related Work Although non-repudiation of origin and receipt are among the most important security requirements, only a few basic protocols exist. See <ref> [For94] </ref> for a summary of the standard constructions. We are not aware of any previous work that aims to minimize the computational costs (on the protocol level) for ordinary users while providing the same security as standard non-repudiation techniques based on asymmetric cryptography.
Reference: [HS] <author> Stuart Haber and W. Scott Stornetta. </author> <title> How to time-stamp a digital document. </title> <note> Journal of Cryptology 3/2 (1991) 99-111. </note>
Reference-contexts: If S cannot provide a sequence of signatures that fits to the hash value contained in the last signature received by O, the arbitrator allows O to repudiate all signatures and assumes that S cheated. This idea of chaining previous signatures was used by Haber and Stornetta <ref> [HS] </ref> for the construction of a time-stamping service, based on the observation that the sequence of messages in H i cannot be changed afterwards.
Reference: [ISO95a] <author> ISO/IEC JTC1, </author> <title> Information Technology, SC 27. 2nd ISO/IEC CD 13888-1 Information Technology Security Techniques - Non-repudiation - Part1: General Model. </title> <address> ISO/IEC JTC 1/SC 27 N 1105, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: The paper concludes in Section 7 with a brief review of related work. 2 Background and Motivation The International Standardization Organization (ISO) is in the process of standardizing techniques to provide non-repudiation services in open networks. Current versions of the draft ISO standards <ref> [ISO95a, ISO95b, ISO95c] </ref> identify various classes of non-repudiation services.
Reference: [ISO95b] <author> ISO/IEC JTC1, </author> <title> Information Technology, SC 27. 2nd ISO/IEC CD 13888-2 Information Technology Security Techniques - Non-repudiation - Part2: Using symmetric encipherment algorithms. </title> <address> ISO/IEC JTC 1/SC 27 N 1106, </address> <month> July </month> <year> 1995. </year>
Reference-contexts: The paper concludes in Section 7 with a brief review of related work. 2 Background and Motivation The International Standardization Organization (ISO) is in the process of standardizing techniques to provide non-repudiation services in open networks. Current versions of the draft ISO standards <ref> [ISO95a, ISO95b, ISO95c] </ref> identify various classes of non-repudiation services.
Reference: [ISO95c] <author> ISO/IEC JTC1, </author> <title> Information Technology, SC 27. ISO/IEC CD 13888-3 Information Technology Security Techniques - Non-repudiation - Part3: Using asymmetric techniques. </title> <address> ISO/IEC JTC 1/SC 27 N 1107, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: The paper concludes in Section 7 with a brief review of related work. 2 Background and Motivation The International Standardization Organization (ISO) is in the process of standardizing techniques to provide non-repudiation services in open networks. Current versions of the draft ISO standards <ref> [ISO95a, ISO95b, ISO95c] </ref> identify various classes of non-repudiation services.
Reference: [Mer87] <author> Ralph C. Merkle. </author> <title> A digital signature based on a conventional encryption function. </title> <editor> In Carl Pomerance, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO '87, number 293 in Lecture Notes in Computer Science, </booktitle> <pages> pages 369-378, </pages> <address> Santa Barbara, CA, USA, August 1987. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany. </address>
Reference-contexts: There had been other proposals to use one-way hash functions to construct signatures. Merkle's paper <ref> [Mer87] </ref> includes an overview of these efforts. The original proposals in this category were impractical: A proposal by Lamport/Diffie requires a "public key" (i.e. an object that must be bound to the signer beforehand) and two hash operations to sign every bit. <p> Using an improvement attributed to Winternitz, with a single public key and (which is the n th hash image of the private key) and n hash operations, one can sign a single message of size log 2 n bits. Merkle introduced the notion of using a tree structure <ref> [Mer87] </ref>; in one version of his proposals, with just a single public key, it is possible to sign an arbitrary number of messages.
Reference: [Pfi] <author> Birgit Pfitzmann. </author> <title> Fail-stop signatures; principles and applications. </title> <booktitle> Proc. Compsec '91, 8th world conference on computer security, audit and control, </booktitle> <publisher> Elsevier, Oxford 1991, </publisher> <pages> 125-134. </pages>
Reference-contexts: But, it still took either a large number of hash operations or a large amount of storage in order to sign more than a handful of messages corresponding to the same public key. Motivated by completely different factors, Pfitzmann et al. <ref> [PPW91, Pfi] </ref> proposed a fail-stop signature protocol which uses the same ideas as S 3 . There, the signature server is also the recipient of the signature, and the goal is to achieve unconditional security for the signer against the server (in the sense of fail-stop signatures).
Reference: [PPW91] <author> Andreas Pfitzmann, Birgit Pfitzmann, and Michael Waidner. </author> <title> Practical signatures where individuals are unconditionally secure. </title> <type> Unpublished manuscript, </type> <note> available from the authors (pfitzb@informatik.uni-hildesheim.de), </note> <year> 1991. </year>
Reference-contexts: But, it still took either a large number of hash operations or a large amount of storage in order to sign more than a handful of messages corresponding to the same public key. Motivated by completely different factors, Pfitzmann et al. <ref> [PPW91, Pfi] </ref> proposed a fail-stop signature protocol which uses the same ideas as S 3 . There, the signature server is also the recipient of the signature, and the goal is to achieve unconditional security for the signer against the server (in the sense of fail-stop signatures).
Reference: [Sch96] <author> Bruce Schneier. </author> <title> Applied Cryptography: Protocols, Algorithms, and Source Code in C. </title> <publisher> John Wiley & Sons Inc., </publisher> <address> New York, </address> <note> second edition, </note> <year> 1996. </year> <title> This article was processed using the L a T E X macro package with LLNCS style 13 </title>
Reference-contexts: However, for ordinary users, S 3 limits the use of asymmetric cryptographic techniques to signature verification. All signature generations are done by third parties, called signature servers. For some signature schemes, e.g., RSA with a public exponent of 3, verifying signatures is significantly more efficient than generating them <ref> [Sch96] </ref>. This paper is organized as follows. We begin in the next section by briefly reviewing the standardization activities in the area of non-repudiation. Section 2 provides some more motivation for alternative non-repudiation techniques. The actual design of S 3 is described in Sections 3 and 4. <p> A one-way hash function is a one-way function h () that operates on arbitrary-length inputs to produce a fixed length value. x is called the pre-image of h (x). A large number of practically secure and efficient one-way hash functions have been invented, e.g., SHA or MD5 <ref> [Sch96] </ref>. One-way hash functions can be recursively applied to an input string. The notation h i (x) denotes the result of applying h () i times recursively to an input x. <p> The efficiency problem as addressed by specific designs of signature schemes was mainly motivated by the limited computing power of smart cards and smart tokens. <ref> [Sch96] </ref> lists most known proposals.
References-found: 9

