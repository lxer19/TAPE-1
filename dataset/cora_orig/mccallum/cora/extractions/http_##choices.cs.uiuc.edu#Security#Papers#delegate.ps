URL: http://choices.cs.uiuc.edu/Security/Papers/delegate.ps
Refering-URL: http://choices.cs.uiuc.edu/Security/index.html
Root-URL: http://www.cs.uiuc.edu
Title: Active Capability: A Unified Security Model for Supporting Mobile, Dynamic and Application Specific Delegation White Paper  
Author: Roy H. Campbell Tin Qian Willy Liao Zhaoyu Liu 
Date: February 16, 1996  
Address: 1304 W. Springfield Urbana, IL 61801  
Affiliation: Department of Computer Science University of Illinois, Urbana-Champaign Digital Computer Laboratory  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Daniel Stevenson, Nathan Hillery, and Grey Byrd. </author> <title> Secure communications in atm networks. </title> <journal> Communication of ACM, </journal> <volume> 38(2) </volume> <pages> 45-52, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: The recent advances in mobile computing have turned the internet into a dynamic communication environment, which presents even greater challenge in employing secure communication, authentication and privacy measures. The emerging point-to-point high speed networks like ATM haven't solved the security problem. On the contrary existing study <ref> [1] </ref> showed ATM networks are also vulnerable to eavesdropping and denial of service attack. Security issue in ATM networks presents new challenges. Another inadequately studied issue on computer security is denial of service protection.
Reference: [2] <author> James Gosling and Henry McGilton. </author> <title> The Java Language Enviroment: a White Paper. </title> <type> Technical report, </type> <institution> Sun Microsystems Computer Company, Mountain View, </institution> <address> CA 94043, USA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: It is essential that the system can safely run the script in a domain different from the one in which the script originated. Thus we advocate the use of a safe language such as Java <ref> [2] </ref> which is type safe and can be checked for security violations. Another benefit of using Java is that we can construct active capability in an object-oriented fashion. For example capabilities with delegation support can reuse the authentication part code through subclassing the authenticated capabilities.
Reference: [3] <author> P. Janson and R. Molva. </author> <title> Security in open networks and distributed systems. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 22(5) </volume> <pages> 323-346, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: The difficulties of devising security infrastructure for the internet are largely due to the autonomous, dynamic, diverse and distributed nature of the internet. Internet is a federation of different computer systems with very diverse security policies. In <ref> [3] </ref> P. Janson et al. listed several typical scenarios with different security protection boundaries. They pointed out that the great diversity arising in the different combinations and refinements of these scenarios requires a broad set of protection and security functions.
Reference: [4] <author> J. Kohl and C. Neuman. </author> <title> The kerberos network authentication service (v5). </title> <type> Technical Report Internet RFC 1510, </type> <month> September </month> <year> 1993. </year>
Reference-contexts: In our model delegation is supported by constructing delegatable capabilities which accepts delegate operation and generates new capabilities for delegatees. We illustrate how the active capability model can unify the existing delegation models in the rest of this section. 3.1 Centralized Model Many existing delegation architectures <ref> [4] </ref> use a centralized authentication server to provide delegation services. Because of the different delegation requirements, they often devise several different delegation mechanisms in one system.
Reference: [5] <author> Jonathan K. Millen. </author> <title> A resource allocation model for denial of service. </title> <booktitle> In 1992 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 137-147, </pages> <address> Oakland, California, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Security issue in ATM networks presents new challenges. Another inadequately studied issue on computer security is denial of service protection. The few existing research in this area were mostly about defining access-control policies which are largely based on the traditional access matrix model. Millen in <ref> [5] </ref> pointed out that the access matrix model "is not expressive enough to elucidate the problem of denial of service". Moreover access control policies are inherently application dependent.
Reference: [6] <author> B. Clifford Neuman. </author> <title> Proxy-based authorization and accounting for distributed systems. </title> <booktitle> In Proceedings of the 13th International Conference on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In that model we performed delegation in a per-service base, i.e. delegation attributes are maintained and interpreted solely by the service being delegated. Like other static access control list approaches <ref> [6] </ref>, this model is inadequate for specifying dynamic and fine-grain delegation restrictions.
Reference: [7] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A method for obtaining digital signatures and public-key cryptosystems. </title> <journal> Communication of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-127, </pages> <month> February </month> <year> 1978. </year> <month> 4 </month>
Reference-contexts: Client-Based Delegation One of the most distinctive features of the active capability model is that it can support client-based delegation, with which the delegation service can be construct in a fully distributed way. The essential idea is that with the property of some asymmetric encryptions like the RSA <ref> [7] </ref> active capabilities can be verified and authorized locally. One of the ways to implement this is to let each principle involved in a delegation process give the capability a certificate signed by its private key. Therefore the security agent or event the active capability itself can verity its validity.
Reference: [8] <author> Roy Campbell, Daniel Sturman, and Theron Tock. </author> <title> Mobile computing, security and delegation. </title> <booktitle> In the International Workshop on Mobile Computing, </booktitle> <address> Japan, </address> <year> 1994. </year> <month> 5 </month>
Reference-contexts: So some people have proposed several distributed delegation models <ref> [8] </ref>. Service-Based Delegation In one of our previous study on the security of mobile computing [8] we designed a customizable framework supporting frequent delegation and revocation. In that model we performed delegation in a per-service base, i.e. delegation attributes are maintained and interpreted solely by the service being delegated. <p> So some people have proposed several distributed delegation models <ref> [8] </ref>. Service-Based Delegation In one of our previous study on the security of mobile computing [8] we designed a customizable framework supporting frequent delegation and revocation. In that model we performed delegation in a per-service base, i.e. delegation attributes are maintained and interpreted solely by the service being delegated.
References-found: 8

