URL: http://drl.cs.uiuc.edu/pubs/vldb92.ps
Refering-URL: http://drl.cs.uiuc.edu/security/pubs.html
Root-URL: http://www.cs.uiuc.edu
Email: fksmith, winslettg@cs.uiuc.edu  
Title: Entity Modeling in the MLS Relational Model  
Author: Ken Smith Marianne Winslett 
Date: 1992  
Note: Proceedings of the 18th VLDB Conference  
Address: 1304 West Springfield Avenue Urbana, IL 61801 USA  Canada  
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  Vancouver, British Columbia,  
Abstract: Previous proposals for a multilevel secure relational model have utilized syntactic integrity properties to control problems such as polyinstantiation, pervasive ambiguity, and proliferation of tuples due to updates. Although successive versions of these models have shown steady improvement, most thorny problems have been mitigated but not resolved. We believe that the major roadblock to progress has been that no effort to date has shown what a multilevel secure database means semantically; instead the focus has been on making syntactic adjustments to avoid problems. In this paper, we introduce a belief-based semantics for multilevel secure databases that supports the description of semantic multilevel secure entities, and argue for the generality of this semantics. We also present our syntax for multilevel secure databases, and show its relationship to the semantics. Our syntax is free of most problems of previous models, and is also simpler without sacrificing security or expressiveness. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the VLDB copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Very Large Data Base Endowment. To copy otherwise, or to republish, requires a fee and/or special permission from the Endowment. 
Abstract-found: 1
Intro-found: 1
Reference: [BL74] <author> D. E. Bell and L. J. LaPadula. </author> <title> Secure Computer Systems: Mathematical Foundations and Model. </title> <type> Technical report, </type> <institution> MITRE Corporation, </institution> <year> 1974. </year>
Reference-contexts: 1 Introduction The proposals for a multilevel secure relational model [JS91, HOT91, DLS + 87] implement the policy of mandatory protection defined in [Dep85] and interpreted for computerized systems by Bell and LaPadula <ref> [BL74] </ref>. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance. Classifications and clearances are both taken from a common domain of access classes, or levels, which are partially ordered in a lattice.
Reference: [Che76] <author> P. P. Chen. </author> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM TODS, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> January </month> <year> 1976. </year>
Reference-contexts: Starship KC Objective Destination TC Voyager S Shipping Mars S Voyager S Spying Mars S In including KC in the key for an entity, we have altered the original schema for R and diverged from the standard definition of an entity. In the entity rela tionship data model <ref> [Che76] </ref>, entities are real world objects which exist, have associated attribute values, and are distinguishable from other entities. MLS relational databases differ from the standard relational model in that entity existence and attributes are not modeled by a single tuple.
Reference: [Dep85] <institution> Department of Defense, National Computer Security Center. Department of Defense Trusted Computer System Evaluation Criteria, </institution> <year> 1985. </year> <note> DOD 5200.28-STD. </note>
Reference-contexts: 1 Introduction The proposals for a multilevel secure relational model [JS91, HOT91, DLS + 87] implement the policy of mandatory protection defined in <ref> [Dep85] </ref> and interpreted for computerized systems by Bell and LaPadula [BL74]. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance.
Reference: [DLS + 87] <author> Dorothy Denning, Teresa Lunt, Roger Schell, et al. </author> <title> A Multilevel Relational Data Model. </title> <booktitle> In Proceedings: 1987 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 220-234, </pages> <address> Oakland, CA, </address> <month> April </month> <year> 1987. </year>
Reference-contexts: 1 Introduction The proposals for a multilevel secure relational model <ref> [JS91, HOT91, DLS + 87] </ref> implement the policy of mandatory protection defined in [Dep85] and interpreted for computerized systems by Bell and LaPadula [BL74]. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance. <p> Should these dubious joined tuples contribute to a query answer? * Proliferation of tuples due to updates. In the Denning-Lunt model <ref> [DLS + 87] </ref>, updates can introduce a number of new polyinstantiatied tuples that is exponential in the number of updated non-key attributes in the relation [JS90]. <p> In this section, the term `database' will refer to a database for a level of the interpretation. In Section 3 we concentrate on syntactic databases. 2 If different schemas are desirable at different levels, this can be accomplished using techniques similar to those used in the SeaView project <ref> [DLS + 87] </ref>. <p> The one-to-one correspondence between databases, as described in this section, and their semantic interpretations prevents both syntactic and semantic ambiguity. Most MLS models use an attribute level security scheme in an effort to provide maximum modeling power <ref> [JS91, DLS + 87] </ref>. We argue that attribute-level security classifications (one security attribute for every data attribute) do not model MLS entities any more powerfully than the syntax of this section does, under our semantics. <p> For example, key classifications are used in all MLS relational proposals to date. A functional dependency equivalent to Property 1 was proposed and called `Polyinstantia-tion Integrity' in [JS91] and <ref> [DLS + 87] </ref>. The semantic concept of eids has not been proposed before. A concept of MLS entities can be detected in several papers [JS91] [HOT91] as well. <p> In addition, queries are evaluated over all tuples seen by the subject, even though the answers to such a query might not be believable by any level in the database. 4.2 The Denning-Lunt Model The Denning-Lunt (DL) model <ref> [DLS + 87] </ref> is being used in the SeaView project, a joint effort between SRI International and Gemini Computers to produce an MLS relational database. This project uses attribute level security and was the first to point out the important issue of polyinstantiation. <p> We assume the MLS relations involved contain MLS entities, as described in Section 2.2. The effect of each operation on the tuples of the MLS relation is defined by its effect on the interpretation (and on the MLS entities in the interpretation). In contrast, the operations defined in <ref> [JS91, DLS + 87] </ref> are based purely on syntactic manipulations. Recall from Section 2 that subjects can only change beliefs at their own level. MLS-SQL update operations, therefore, only affect tuples at the level of the subject issuing them.
Reference: [GL90] <author> Thomas D. Garvey and Teresa F. Lunt. </author> <title> Multilevel Security for Knowledge-Based Systems. </title> <booktitle> In Proceedings: 6th Computer Security Applications Conference, </booktitle> <pages> pages 148-159, </pages> <address> Tucson, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: This work has been extended to object-oriented databases with the expert systems functionality of forward and backward chaining rules to implement, among other things, classification constraints on data <ref> [GL90] </ref> [LM89]. In a recent paper [Lun91], Lunt discussed the need for understanding the effect of semantics on polyin-stantiation. She distinguishes polyinstantiated elements and polyinstantiated tuples. Polyinstantiated elements correspond to the same real world entity, whereas polyinstantiated tuples correspond to different real world entities.
Reference: [HOT91] <author> J. Haigh, R. O'Brien, and D. Thom-sen. </author> <title> The LDV Secure Relational DBMS Model. </title> <editor> In S. Jajodia and C. Landwehr, editors, </editor> <booktitle> Database Security, IV, </booktitle> <pages> pages 265-279. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction The proposals for a multilevel secure relational model <ref> [JS91, HOT91, DLS + 87] </ref> implement the policy of mandatory protection defined in [Dep85] and interpreted for computerized systems by Bell and LaPadula [BL74]. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance. <p> A functional dependency equivalent to Property 1 was proposed and called `Polyinstantia-tion Integrity' in [JS91] and [DLS + 87]. The semantic concept of eids has not been proposed before. A concept of MLS entities can be detected in several papers [JS91] <ref> [HOT91] </ref> as well. One author goes so far as to state that tuples with the same apparent key but different key classifications refer to different entities, and tuples with the same apparent key and key classification refer to the same entity [Lun91]. <p> For example, deletion of any part of a `set of polyinstantiated elements' is propagated to all levels. The MLS-SQL operations defined in Section 5 differ from such an operation semantics, in that each level determines only its own beliefs. 4.3 The LDV Model The LDV model, proposed in <ref> [HOT91] </ref>, is also the base of a research protoype. This model eschews attribute level security, seeking instead to obtain modeling power by augmenting the model with syntactic tools such as the derive option.
Reference: [JS90] <author> S. Jajodia and R. Sandhu. </author> <title> Polyinstantia-tion Integrity in Multilevel Relations. </title> <booktitle> In Proceedings: IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 104-115, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Should these dubious joined tuples contribute to a query answer? * Proliferation of tuples due to updates. In the Denning-Lunt model [DLS + 87], updates can introduce a number of new polyinstantiatied tuples that is exponential in the number of updated non-key attributes in the relation <ref> [JS90] </ref>. The Jajodia-Sandhu model [JS90] eliminates much but not all of this proliferation, as in the following update to UPDATE SOD SET Destination = `Pluto' WHERE Starship = `Enterprise'. As Figure 2 shows, the number of Enterprise tuples doubles after this update is performed. <p> In the Denning-Lunt model [DLS + 87], updates can introduce a number of new polyinstantiatied tuples that is exponential in the number of updated non-key attributes in the relation <ref> [JS90] </ref>. The Jajodia-Sandhu model [JS90] eliminates much but not all of this proliferation, as in the following update to UPDATE SOD SET Destination = `Pluto' WHERE Starship = `Enterprise'. As Figure 2 shows, the number of Enterprise tuples doubles after this update is performed. <p> The DL model is similar to the JS model: each attribute of a tuple has an individual security level, and key attributes are uniformly classified and cannot contain null values. The most notable difference is in the treatment of polyinstanti-ation. It was shown in <ref> [JS90] </ref> that the DL model can produce a number of tuples exponential in the number of non-key attributes in a relation. [JS90] argues that these tuples are spurious. <p> The most notable difference is in the treatment of polyinstanti-ation. It was shown in <ref> [JS90] </ref> that the DL model can produce a number of tuples exponential in the number of non-key attributes in a relation. [JS90] argues that these tuples are spurious. This proliferation of tuples on updates is traced to the DL requirement that, in addition to Polyinstantiation Integrity, the key and its classification must determine each attribute and its classification via a multivalued dependency. This latter requirement is dropped in the JS model.
Reference: [JS91] <author> S. Jajodia and R. Sandhu. </author> <title> Toward A Multilevel Secure Relational Data Model. </title> <booktitle> In Proceedings: ACM SIGMOD, </booktitle> <pages> pages 50-59, </pages> <address> Denver, Colorado, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The proposals for a multilevel secure relational model <ref> [JS91, HOT91, DLS + 87] </ref> implement the policy of mandatory protection defined in [Dep85] and interpreted for computerized systems by Bell and LaPadula [BL74]. Under mandatory protection, objects (data items) are assigned a security classification and subjects (active processes, users) are assigned a security clearance. <p> As a result, MLS relations can contain multiple tuples with the same key value, known as polyinstantiated tuples. This problem has been addressed in previous models by means of syntactic integrity properties, which control the extent and form of polyinstantiation. The recent Jajodia-Sandhu model <ref> [JS91] </ref> improves on prior models. However, several problems still remain to be solved. * Semantic ambiguity. An MLS relation does not always have a single semantic interpretation. <p> An MLS relation does not always have a single semantic interpretation. For example, Figure 1 shows an instance of the relation scheme SOD (Starship, Objective, Destination), where Starship is the key, as an MLS relation under the model of <ref> [JS91] </ref>. Consider the two polyinstantiated tuples sharing the attribute value `Enterprise'. <p> The one-to-one correspondence between databases, as described in this section, and their semantic interpretations prevents both syntactic and semantic ambiguity. Most MLS models use an attribute level security scheme in an effort to provide maximum modeling power <ref> [JS91, DLS + 87] </ref>. We argue that attribute-level security classifications (one security attribute for every data attribute) do not model MLS entities any more powerfully than the syntax of this section does, under our semantics. <p> For example, key classifications are used in all MLS relational proposals to date. A functional dependency equivalent to Property 1 was proposed and called `Polyinstantia-tion Integrity' in <ref> [JS91] </ref> and [DLS + 87]. The semantic concept of eids has not been proposed before. A concept of MLS entities can be detected in several papers [JS91] [HOT91] as well. <p> A functional dependency equivalent to Property 1 was proposed and called `Polyinstantia-tion Integrity' in <ref> [JS91] </ref> and [DLS + 87]. The semantic concept of eids has not been proposed before. A concept of MLS entities can be detected in several papers [JS91] [HOT91] as well. One author goes so far as to state that tuples with the same apparent key but different key classifications refer to different entities, and tuples with the same apparent key and key classification refer to the same entity [Lun91]. <p> We assume the MLS relations involved contain MLS entities, as described in Section 2.2. The effect of each operation on the tuples of the MLS relation is defined by its effect on the interpretation (and on the MLS entities in the interpretation). In contrast, the operations defined in <ref> [JS91, DLS + 87] </ref> are based purely on syntactic manipulations. Recall from Section 2 that subjects can only change beliefs at their own level. MLS-SQL update operations, therefore, only affect tuples at the level of the subject issuing them.
Reference: [Lam73] <author> B. W. Lampson. </author> <title> A Note on the Confinement Problem. </title> <journal> CACM, </journal> <volume> 16(10) </volume> <pages> 613-615, </pages> <month> Oc-tober </month> <year> 1973. </year>
Reference-contexts: The ?-property is slightly strengthened so that a subject may only update, delete, or insert items at his or her own level. Relations in which tuples are visible based on their access class are called MLS relations. Indirect means of downward information flow, called covert channels <ref> [Lam73] </ref>, must also be prevented. For 1 example, if a database service is denied to a subject based on the presence of a tuple at a higher level, the subject can infer the existence of that tuple, resulting in downward information flow.
Reference: [LM89] <author> Teresa F. Lunt and Jonathan K. Millen. </author> <title> Se--cure Knowledge-Based Systems. </title> <type> Technical Report SRI-CSL-90-04, </type> <institution> SRI International, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: This work has been extended to object-oriented databases with the expert systems functionality of forward and backward chaining rules to implement, among other things, classification constraints on data [GL90] <ref> [LM89] </ref>. In a recent paper [Lun91], Lunt discussed the need for understanding the effect of semantics on polyin-stantiation. She distinguishes polyinstantiated elements and polyinstantiated tuples. Polyinstantiated elements correspond to the same real world entity, whereas polyinstantiated tuples correspond to different real world entities.
Reference: [Lun90] <author> Teresa Lunt. </author> <title> Multilevel Security for Object-Oriented Databases. </title> <editor> In D.L. Spooner and C. Landwehr, editors, </editor> <booktitle> Database Security, III, </booktitle> <pages> pages 199-209. </pages> <publisher> North-Holland, </publisher> <address> Amster-dam, </address> <year> 1990. </year>
Reference-contexts: This latter requirement is dropped in the JS model. Starship C 1 Objective C 2 Destination C 3 TC Enterprise U Diplomacy C Romulus C C Enterprise C Diplomacy C Romulus C C Other MLS database work done by Teresa Lunt includes work on an object-oriented model <ref> [Lun90] </ref> which proposes multilevel objects and defines constraints for their secure classification. This work has been extended to object-oriented databases with the expert systems functionality of forward and backward chaining rules to implement, among other things, classification constraints on data [GL90] [LM89].
Reference: [Lun91] <author> Teresa F. Lunt. </author> <title> Security in Database Systems: A Researcher's View. </title> <booktitle> In Proceedings: Second German Conference on Computer Security, </booktitle> <month> June </month> <year> 1991. </year>
Reference-contexts: One author goes so far as to state that tuples with the same apparent key but different key classifications refer to different entities, and tuples with the same apparent key and key classification refer to the same entity <ref> [Lun91] </ref>. Previous authors, however, have not made use of MLS entities to give meaning to relational operations as we do in Section 5. None of them have introduced a formal semantics for their data model or operations. <p> This work has been extended to object-oriented databases with the expert systems functionality of forward and backward chaining rules to implement, among other things, classification constraints on data [GL90] [LM89]. In a recent paper <ref> [Lun91] </ref>, Lunt discussed the need for understanding the effect of semantics on polyin-stantiation. She distinguishes polyinstantiated elements and polyinstantiated tuples. Polyinstantiated elements correspond to the same real world entity, whereas polyinstantiated tuples correspond to different real world entities.
Reference: [Smi92] <author> Ken Smith. </author> <title> Managing Rules in Active Databases. </title> <type> PhD thesis, </type> <institution> University of Illi-nois at Urbana-Champaign, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: The particularly difficult UPDATE operation is defined through its effect on preexisting MLS entities. We have recently generalized our model to include MLS relationships, enabling standard ER modeling techniques to be utilized in the design of a multilevel secure databases <ref> [Smi92] </ref>. Also, we have extended our model to allow a level to believe by default what a lower level believes, unless explicitly overridden, preventing the generation of potentially many tuples to state agreement with a lower belief.
Reference: [SW92] <author> Ken Smith and Marianne Winslett. </author> <title> Multilevel Secure Rules: Integrating the Multilevel and Active Data Models. </title> <booktitle> In Proceedings: 6th IFIP WG11.3 Working Conference on Database Security, </booktitle> <institution> page ??, Van-couver, British Columbia, Canada, </institution> <month> August </month> <year> 1992. </year>
Reference-contexts: We have also developed the semantics of meta-queries, involving cross-level joins, into our model using a modal language. Also, we have recently integrated database production rules, such as those implemented within the Star-burst DBMS [WF90], into the MLS database framework <ref> [SW92] </ref>. We believe levels may wish to respond automatically to certain kinds of changes that take place at lower levels, and that the flexiblity offered by rules permits the expression of contextually depen dent responsive policies which will solve such problems within the framework of mandatory security.
Reference: [WF90] <author> Jennifer Widom and Sheldon J. </author> <note> Finkelstein. </note>
Reference-contexts: We have also developed the semantics of meta-queries, involving cross-level joins, into our model using a modal language. Also, we have recently integrated database production rules, such as those implemented within the Star-burst DBMS <ref> [WF90] </ref>, into the MLS database framework [SW92].
References-found: 15

