URL: http://www.cs.brown.edu/people/mph/chain.ps
Refering-URL: http://www.cs.brown.edu/people/mph/podc95.html
Root-URL: http://www.cs.brown.edu/
Email: herlihy@cs.brown.edu  rajsbaum@crl.dec.com  
Title: Algebraic Spans (Preliminary Version)  
Author: Maurice Herlihy Sergio Rajsbaum 
Address: Providence RI 02912  One Kendall Square Cambridge, MA 02139  
Affiliation: Computer Science Department Brown University  Digital Equipment Corporation Cambridge Research Lab  
Abstract: Topological methods have yielded a variety of lower bounds and impossibility results for distributed computing. In this paper, we introduce a new tool for proving impossibility results, based on a core theorem of algebraic topology, the acyclic carrier theorem, which unifies, generalizes, and extends earlier results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Attiya, A. Bar-Noy, D. Dolev, D. Peleg, and R. Reischuk. </author> <title> Renaming in an asynchronous environment. </title> <journal> Journal of the ACM, </journal> <month> July </month> <year> 1990. </year>
Reference-contexts: Corollary 5.5 There is no t-resilient (n + 1; k)- consensus protocol that takes fewer than bt=kc + 1 rounds in the synchronous fail-stop message-passing model [8]. Each of these lower bounds is known to be tight. 6 Renaming In the renaming task of Attiya et al. <ref> [1] </ref>, n + 1 processes with unique names taken from a large name space must choose unique names taken from a small name space.
Reference: [2] <author> H. Attiya and S. Rajsbaum. </author> <title> A combinatorial topology framework for wait-free computability. </title> <type> Preprint. </type>
Reference-contexts: Finally, the Bermuda Triangle construction corresponds to an acyclic carrier s from an `-simplex S ` to P r , for r &lt; bt=`c, yielding an algebraic span : C (S ` ) ! C (P r ). These correspondences are summarized in Figure 4. Attiya and Rajsbaum <ref> [2] </ref> take a different approach to proving lower bounds for wait-free read/write memory. Instead of using subdivisions, they use a weaker, purely combinatorial notion called a "divided image," that avoids the need for the geometric and algebraic arguments used to construct geometric spans.
Reference: [3] <author> A. Bar-Noy and D. Dolev. </author> <title> Shared memory vs. message passing in an asynchronous distributed environment. </title> <booktitle> In Proceedings of the 8th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 371-382, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: This construction uses O (n 2 ) input names. Any renaming protocol for 2n + 1 input names can be transformed into a protocol for a larger number of input names simply by using the shared-memory renaming protocol of Bar-Noy and Dolev <ref> [3] </ref> to reduce the number of names to 2n+1, and therefore the impossibility of (n + 1; K)-renaming for O (n 2 ) input names implies impossibility for 2n + 1 input names. Corollary 6.3 There is no wait-free (n + 1; 2n)- consensus protocol in read/write memory [11, 13].
Reference: [4] <author> O. Biran, S. Moran, and S. Zaks. </author> <title> A combinatorial characterization of the distributed tasks which are solvable in the presence of one faulty processor. </title> <booktitle> In Proceedings of the 7th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 263-275, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models <ref> [4, 12, 13, 14] </ref>, and the circumstances under which specific problems can be solved [5, 6, 8, 12, 13, 16]. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology.
Reference: [5] <author> E. Borowsky and E. Gafni. </author> <title> Generalized flp impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models [4, 12, 13, 14], and the circumstances under which specific problems can be solved <ref> [5, 6, 8, 12, 13, 16] </ref>. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem [15, Th. 13.3], we unify, generalize, and extend earlier results. <p> Each process is required to choose some process's input value, and the set of values chosen should have size at most k. This problem independently was shown to have no t-resilient solution in read/write memory by Borowsky and Gafni <ref> [5] </ref> and by Herlihy and Shavit [13], and no wait-free solution, by Saks and Zaharoglou [16]. A variety of impossibility results for implementing (N; k)-consensus from (M; j)-consensus were given by Borowsky and Gafni [6], and by Herlihy and Rajsbaum [12]. <p> For each S 2 S n , in W F (S n ), only the processes in ids (S) take steps, so Equation 2 is satisfied. Corollary 5.2 There is no wait-free (n + 1; n)- consensus protocol in read/write memory <ref> [5, 13, 16] </ref>. Consider the acyclic carrier t for t-resilient read-write memory. <p> No input value from P t+1 ; : : : ; P n will ever be chosen. Corollary 5.3 There is no t-resilient (n + 1; t)- consensus protocol in read/write memory <ref> [5, 13] </ref>. The acyclic carrier m;j , when processes share read/write memory and (m; j)-consensus objects, does not directly satisfy Equation 2, because m;j (S) may include processes not in ids (S).
Reference: [6] <author> E. Borowsky and E. Gafni. </author> <title> The implication of the Borowsky-Gafni simulation on the set consensus hierarchy. </title> <type> Technical Report 930021, </type> <institution> UCLA Computer Science Dept., </institution> <year> 1993. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models [4, 12, 13, 14], and the circumstances under which specific problems can be solved <ref> [5, 6, 8, 12, 13, 16] </ref>. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem [15, Th. 13.3], we unify, generalize, and extend earlier results. <p> A variety of impossibility results for implementing (N; k)-consensus from (M; j)-consensus were given by Borowsky and Gafni <ref> [6] </ref>, and by Herlihy and Rajsbaum [12].
Reference: [7] <author> S. Chaudhuri. </author> <title> Agreement is harder than consensus: Set consensus problems in totally asynchronous systems. </title> <booktitle> In Proceedings Of The Ninth Annual ACM Symosium On Principles of Distributed Computing, </booktitle> <pages> pages 311-234, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Herlihy and Rajsbaum [12] considered wait-free protocols using stronger primitives characterized by their ability to solve the (m; j)-agreement task <ref> [7] </ref>, a generalization of consensus [9]. They showed that in this model, a geometric span exists only for the lower-dimensional skeleton of the input complex. <p> Instead of using subdivisions, they use a weaker, purely combinatorial notion called a "divided image," that avoids the need for the geometric and algebraic arguments used to construct geometric spans. Divided images can also be reformulated in terms of chain maps. 5 Set Agreement In the (N; k)-consensus task <ref> [7] </ref>, each process starts with a private input value from some set vals , communicates with the others by applying operations to shared objects, and then halts after choosing a private output value.
Reference: [8] <author> S. Chaudhuri, M.P. Herlihy, N. Lynch, </author> <title> and M.R. Tuttle. A tight lower bound for k-set agreement. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, </booktitle> <month> Oc-tober </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models [4, 12, 13, 14], and the circumstances under which specific problems can be solved <ref> [5, 6, 8, 12, 13, 16] </ref>. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem [15, Th. 13.3], we unify, generalize, and extend earlier results. <p> In particular, the span is defined on skel ` (I), for ` J (n + 1), where J (u) = j m + minfj; u mod mg 1: (1) The more powerful the primitive, the lower the dimension of the geometric span. Chaudhuri, Herlihy, Lynch, and Tuttle <ref> [8] </ref> considered a model in which n + 1 processes communicate by sending messages over a completely connected network. Computation in this model proceeds in a sequence of rounds. <p> Span wait-free read/write objects [13] W F : C (I) ! C (P) t-resilient read/write objects [13] t : C (I t ) ! C (P) wait-free (m; j)-consensus objects [12] m;j : C (skel ` (I)) ! C (P), for ` &lt; J (n + 1) t-resilient synchronous message-passing <ref> [8] </ref> s : C (S ` ) ! C (P r ), for r &lt; `=t In this paper, we show how these results can be unified by replacing the geometric language of subdivisions and simplicial maps with the more abstract algebraic language of chain complexes and acyclic carriers. <p> Corollary 5.4 There is no wait-free (n+1; J (n+1) 1)-consensus protocol if processes share a read/write memory and (m; j)-consensus objects. The Bermuda Triangle construction <ref> [8] </ref> satisfies Equation 2 because it associates a unique value with each vertex of S ` , and ensures that the algebraic span for each simplex (~s 0 ; : : : ; ~s m ) maps to executions where all input values are taken from the set fv 0 ; <p> Corollary 5.5 There is no t-resilient (n + 1; k)- consensus protocol that takes fewer than bt=kc + 1 rounds in the synchronous fail-stop message-passing model <ref> [8] </ref>. Each of these lower bounds is known to be tight. 6 Renaming In the renaming task of Attiya et al. [1], n + 1 processes with unique names taken from a large name space must choose unique names taken from a small name space.
Reference: [9] <author> M. Fischer, N.A. Lynch, </author> <title> and M.S. Paterson. Impossibility of distributed commit with one faulty process. </title> <journal> Journal of the ACM, </journal> <volume> 32(2), </volume> <month> April </month> <year> 1985. </year>
Reference-contexts: Herlihy and Rajsbaum [12] considered wait-free protocols using stronger primitives characterized by their ability to solve the (m; j)-agreement task [7], a generalization of consensus <ref> [9] </ref>. They showed that in this model, a geometric span exists only for the lower-dimensional skeleton of the input complex.
Reference: [10] <author> M. P. Herlihy and Mark R. Tuttle. </author> <title> Wait-free computation in message-passing systems: Preliminary report. </title> <booktitle> In Proceedings of the 9th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 347-362. </pages> <publisher> ACM, </publisher> <month> August </month> <year> 1990. </year>
Reference-contexts: This result is new. We do not analyze renaming lower bounds for synchronous message-passing systems, since it is known that log n rounds are necessary and sufficient for wait-free (n + 1; n + 1)-renaming <ref> [10] </ref> using comparison-based protocols. Appendix This appendix gives some simple examples of chain maps and chain homotopies. Readers unfamiliar with chain complexes are encouraged to work out these examples.
Reference: [11] <author> M.P. Herlihy. </author> <title> A tutorial on algebraic topology and distributed computation. </title> <address> http://www.cs.brown.edu/people/mph/home.html. </address>
Reference-contexts: Corollary 6.3 There is no wait-free (n + 1; 2n)- consensus protocol in read/write memory <ref> [11, 13] </ref>. A similar argument yields: Corollary 6.4 There is no t-resilient (n + 1; 2t)- consensus protocol in read/write memory.
Reference: [12] <author> M.P. Herlihy and S. Rajsbaum. </author> <title> Set consensus using arbitrary objects. </title> <booktitle> In Proceedings of the 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models <ref> [4, 12, 13, 14] </ref>, and the circumstances under which specific problems can be solved [5, 6, 8, 12, 13, 16]. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. <p> 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models [4, 12, 13, 14], and the circumstances under which specific problems can be solved <ref> [5, 6, 8, 12, 13, 16] </ref>. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem [15, Th. 13.3], we unify, generalize, and extend earlier results. <p> This paper makes the following contributions. fl On leave from Instituto de Matematicas, U.N.A.M., Mexico. Part of this work was done while visiting the Laboratory for Computer Science, MIT. Partly supported by DGAPA Projects. 0 * Earlier proofs <ref> [12, 13] </ref> relied on a mixture of combinatorial and continuous arguments. In this paper, we show how to make these proofs completely algebraic, requiring no continuous mathematics. <p> For t-resilient protocols, they showed that a geometric span exists on the input subcomplex I t containing the vertices colored with process ids P 0 ; : : : ; P t . Herlihy and Rajsbaum <ref> [12] </ref> considered wait-free protocols using stronger primitives characterized by their ability to solve the (m; j)-agreement task [7], a generalization of consensus [9]. They showed that in this model, a geometric span exists only for the lower-dimensional skeleton of the input complex. <p> Page 5 Model Carrier Span wait-free read/write objects [13] W F : C (I) ! C (P) t-resilient read/write objects [13] t : C (I t ) ! C (P) wait-free (m; j)-consensus objects <ref> [12] </ref> m;j : C (skel ` (I)) ! C (P), for ` &lt; J (n + 1) t-resilient synchronous message-passing [8] s : C (S ` ) ! C (P r ), for r &lt; `=t In this paper, we show how these results can be unified by replacing the geometric <p> A variety of impossibility results for implementing (N; k)-consensus from (M; j)-consensus were given by Borowsky and Gafni [6], and by Herlihy and Rajsbaum <ref> [12] </ref>. Theorem 5.1 Suppose we have a protocol for (n + 1; k)-set agreement, a properly colored simplex S ` , and an acyclic carrier from S ` to P such that vals (ffi ((S))) = vals (S) (2) for all simplexes S in S ` . <p> Corollary 5.3 There is no t-resilient (n + 1; t)- consensus protocol in read/write memory [5, 13]. The acyclic carrier m;j , when processes share read/write memory and (m; j)-consensus objects, does not directly satisfy Equation 2, because m;j (S) may include processes not in ids (S). But in <ref> [12] </ref> it is shown how to modify the decision values of the processes in ids ( m;j (S)) ids (S) so as to satisfy Equation 2 (see [12] for details). <p> But in <ref> [12] </ref> it is shown how to modify the decision values of the processes in ids ( m;j (S)) ids (S) so as to satisfy Equation 2 (see [12] for details). Corollary 5.4 There is no wait-free (n+1; J (n+1) 1)-consensus protocol if processes share a read/write memory and (m; j)-consensus objects.
Reference: [13] <author> M.P. Herlihy and N. Shavit. </author> <title> The asynchronous computability theorem for t-resilient tasks. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models <ref> [4, 12, 13, 14] </ref>, and the circumstances under which specific problems can be solved [5, 6, 8, 12, 13, 16]. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. <p> 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models [4, 12, 13, 14], and the circumstances under which specific problems can be solved <ref> [5, 6, 8, 12, 13, 16] </ref>. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem [15, Th. 13.3], we unify, generalize, and extend earlier results. <p> This paper makes the following contributions. fl On leave from Instituto de Matematicas, U.N.A.M., Mexico. Part of this work was done while visiting the Laboratory for Computer Science, MIT. Partly supported by DGAPA Projects. 0 * Earlier proofs <ref> [12, 13] </ref> relied on a mixture of combinatorial and continuous arguments. In this paper, we show how to make these proofs completely algebraic, requiring no continuous mathematics. <p> Partly supported by DGAPA Projects. 0 * Earlier proofs [12, 13] relied on a mixture of combinatorial and continuous arguments. In this paper, we show how to make these proofs completely algebraic, requiring no continuous mathematics. Some important constructs, such as the notion of a span <ref> [13] </ref>, are restated in a more ele gant algebraic form. * For each task, set agreement and renaming, we prove a single, short theorem specifying an algebraic property that prevents a protocol from solving the task. These theorems are quite general, yielding results in a variety of models. <p> Finally, we believe that these results further illustrate the benefits of formulating concepts and models from distributed computing in the language of algebraic topology, a mature branch of mainstream mathematics. 2 Decision Tasks Our model is based on <ref> [13] </ref>. Informally, a task is a problem where each process starts with a private input value, communicates with the others by applying operations to shared objects, and halts with a private output value. A protocol is a program that solves a task in a concurrent system. <p> Each simplex thus corresponds to an equivalence class of executions that "look the same" to the processes at its vertexes. 1 It is sometimes convenient to extend to simplexes of lower dimension, as in <ref> [13] </ref>. When m &lt; n, (S m ) is the set of legal final states in executions where only m + 1 out of n + 1 processes take steps. <p> Any subdivision of a complex has the "same topology" as the original complex, in the sense that the homology groups are unchanged. Much of the earlier work in this area has focused on some notion of subdivision. Herlihy and Shavit <ref> [13] </ref> considered wait-free protocols in which n + 1 processes communicate by reading and writing a shared memory. <p> In their Bermuda Trian gle construction, they identified a subcomplex of the protocol complex isomorphic to a subdivided simplex. This construction yields a geometric span from an `- simplex S ` to P r , for r &lt; bt=`c. Page 5 Model Carrier Span wait-free read/write objects <ref> [13] </ref> W F : C (I) ! C (P) t-resilient read/write objects [13] t : C (I t ) ! C (P) wait-free (m; j)-consensus objects [12] m;j : C (skel ` (I)) ! C (P), for ` &lt; J (n + 1) t-resilient synchronous message-passing [8] s : C (S <p> This construction yields a geometric span from an `- simplex S ` to P r , for r &lt; bt=`c. Page 5 Model Carrier Span wait-free read/write objects <ref> [13] </ref> W F : C (I) ! C (P) t-resilient read/write objects [13] t : C (I t ) ! C (P) wait-free (m; j)-consensus objects [12] m;j : C (skel ` (I)) ! C (P), for ` &lt; J (n + 1) t-resilient synchronous message-passing [8] s : C (S ` ) ! C (P r ), for r &lt; `=t In <p> To illustrate this remark, we focus first on the wait-free geometric span of Herlihy and Shavit <ref> [13] </ref>. Establishing the existence of geometric spans required a combination of combinatorial and continuous arguments: 1. P (S m ) is acyclic, 2. <p> Each process is required to choose some process's input value, and the set of values chosen should have size at most k. This problem independently was shown to have no t-resilient solution in read/write memory by Borowsky and Gafni [5] and by Herlihy and Shavit <ref> [13] </ref>, and no wait-free solution, by Saks and Zaharoglou [16]. A variety of impossibility results for implementing (N; k)-consensus from (M; j)-consensus were given by Borowsky and Gafni [6], and by Herlihy and Rajsbaum [12]. <p> For each S 2 S n , in W F (S n ), only the processes in ids (S) take steps, so Equation 2 is satisfied. Corollary 5.2 There is no wait-free (n + 1; n)- consensus protocol in read/write memory <ref> [5, 13, 16] </ref>. Consider the acyclic carrier t for t-resilient read-write memory. <p> No input value from P t+1 ; : : : ; P n will ever be chosen. Corollary 5.3 There is no t-resilient (n + 1; t)- consensus protocol in read/write memory <ref> [5, 13] </ref>. The acyclic carrier m;j , when processes share read/write memory and (m; j)-consensus objects, does not directly satisfy Equation 2, because m;j (S) may include processes not in ids (S). <p> Corollary 6.3 There is no wait-free (n + 1; 2n)- consensus protocol in read/write memory <ref> [11, 13] </ref>. A similar argument yields: Corollary 6.4 There is no t-resilient (n + 1; 2t)- consensus protocol in read/write memory.
Reference: [14] <author> M.P. Herlihy and N. Shavit. </author> <title> A simple constructive computability theorem for wait-free computation. </title> <booktitle> In Proceedings of the 1994 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models <ref> [4, 12, 13, 14] </ref>, and the circumstances under which specific problems can be solved [5, 6, 8, 12, 13, 16]. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology.
Reference: [15] <author> J.R. Munkres. </author> <title> Elements Of Algebraic Topology. </title> <publisher> Addison Wesley, </publisher> <address> Reading MA, </address> <year> 1984. </year> <note> ISBN 0 201-04586-9. </note>
Reference-contexts: In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem <ref> [15, Th. 13.3] </ref>, we unify, generalize, and extend earlier results. These new proofs are considerably more succinct, so we can present them here in their entirety. Although the mathematical notions underlying this theorem are abstract, they are elementary, being fully covered in the first chapter of Munkres' standard textbook [15]. <p> These new proofs are considerably more succinct, so we can present them here in their entirety. Although the mathematical notions underlying this theorem are abstract, they are elementary, being fully covered in the first chapter of Munkres' standard textbook <ref> [15] </ref>. This paper makes the following contributions. fl On leave from Instituto de Matematicas, U.N.A.M., Mexico. Part of this work was done while visiting the Laboratory for Computer Science, MIT. Partly supported by DGAPA Projects. 0 * Earlier proofs [12, 13] relied on a mixture of combinatorial and continuous arguments. <p> We prove our impossibility results by exploiting the topological properties of the protocol complex and the output complex to show that no such map exists. Page 2 3 Algebraic Preliminaries Our discussion closely follows that of Munkres <ref> [15, Section 1.13] </ref>, which the reader is encouraged to consult for more details. The Appendix presents some simple examples of chain complexes and chain homo-topies for readers unfamiliar with these notions. <p> This identity ensures that chain maps preserve cycles and boundaries. The composition of two chain maps is also a chain map. 2 Munkres <ref> [15] </ref> uses * for @ 0 . 3 Strictly speaking, these are the reduced homology groups [15, p.71]. Page 3 Recall that a simplicial map from K to L carries vertexes of K to vertexes of L so that every simplex of K maps to a simplex of L. <p> This identity ensures that chain maps preserve cycles and boundaries. The composition of two chain maps is also a chain map. 2 Munkres [15] uses * for @ 0 . 3 Strictly speaking, these are the reduced homology groups <ref> [15, p.71] </ref>. Page 3 Recall that a simplicial map from K to L carries vertexes of K to vertexes of L so that every simplex of K maps to a simplex of L. <p> (K) ! C (L) are chain maps, then a chain homotopy from to is a family of homomorphisms D q : C q (K) ! C q+1 (L); such that @ 0 Very roughly, if two chain maps are homotopic, then one can be deformed into the other; see Munkres <ref> [15] </ref> for intuitive justification for this definition. Remark 3.1 Let ; : C (K) ! C (L) be chain ho-motopic maps. Then the chain ( k k D k1 @)(S k ) of C k (L) is a cycle. <p> A homomorphism : C q (K) ! C q (L) is carried by if each simplex appearing with a non-zero coefficient in (S m ) is in the subcomplex (S m ). The next theorem reduces to <ref> [15, Th. 13.3] </ref>, when ; 0 are the identity; the proofs are similar.
Reference: [16] <author> M. Saks and F. Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year> <pages> Page 10 </pages>
Reference-contexts: 1 Introduction Combinatorial and topological methods have yielded a variety of lower bounds results for distributed computing, including general characterizations of the computational power of certain models [4, 12, 13, 14], and the circumstances under which specific problems can be solved <ref> [5, 6, 8, 12, 13, 16] </ref>. In this paper, we introduce a new tool for proving impossibility results based on a core theorem of algebraic topology. Using the acyclic carrier theorem [15, Th. 13.3], we unify, generalize, and extend earlier results. <p> This problem independently was shown to have no t-resilient solution in read/write memory by Borowsky and Gafni [5] and by Herlihy and Shavit [13], and no wait-free solution, by Saks and Zaharoglou <ref> [16] </ref>. A variety of impossibility results for implementing (N; k)-consensus from (M; j)-consensus were given by Borowsky and Gafni [6], and by Herlihy and Rajsbaum [12]. <p> For each S 2 S n , in W F (S n ), only the processes in ids (S) take steps, so Equation 2 is satisfied. Corollary 5.2 There is no wait-free (n + 1; n)- consensus protocol in read/write memory <ref> [5, 13, 16] </ref>. Consider the acyclic carrier t for t-resilient read-write memory.
References-found: 16

