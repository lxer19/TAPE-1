URL: ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/iccad94.KFB.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/kukimoto/
Root-URL: 
Title: A Redesign Technique for Combinational Circuits Based on Gate Reconnections  
Author: Yuji Kukimoto Masahiro Fujita Robert K. Brayton 
Address: Berkeley, CA 94720 San Jose, CA 95134 Berkeley, CA 94720  
Affiliation: University of California Fujitsu Laboratories of America University of California  
Abstract: In this paper, we consider a redesign technique applicable to combinational circuits implemented with gate-array or standard-cell technology, where we rectify an existing circuit only by reconnecting gates on the circuit with all the gate types unchanged. This constraint allows us to reuse the original placement as is, thereby speeding up the total time needed for a redesign. We formulate this problem as a Boolean-constraint problem and give a BDD-based algorithm to check the feasibility of redesign. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Fujita. </author> <title> A method for automatic design error correction in sequential circuits. </title> <booktitle> In Proceedings of the European Conference on Design Automation(EDAC-93), </booktitle> <pages> pages 76-80, </pages> <month> Febru-ary </month> <year> 1993. </year>
Reference-contexts: Since engineering changes arise frequently in actual design processes, the technique is of practical importance from an industrial point of view. Several synthesis techniques have already been proposed for combinational circuits [2, 3, 9, 8] and sequential circuits <ref> [1] </ref>, where an additional logic is attached before and/or after an existing circuit or a part of the existing circuit is replaced with a new logic so that the final circuit follows a new specification.
Reference: [2] <author> M. Fujita, T. Kakuda, and Y. Matsunaga. </author> <title> Redesign and automatic error correction of combinational circuits. </title> <booktitle> In Proceedings of the IFIP TC10/WG10.5 Workshop on Logic and Architecture Synthesis, </booktitle> <pages> pages 253-262. </pages> <publisher> North Holland, </publisher> <month> May </month> <year> 1990. </year>
Reference-contexts: Since engineering changes arise frequently in actual design processes, the technique is of practical importance from an industrial point of view. Several synthesis techniques have already been proposed for combinational circuits <ref> [2, 3, 9, 8] </ref> and sequential circuits [1], where an additional logic is attached before and/or after an existing circuit or a part of the existing circuit is replaced with a new logic so that the final circuit follows a new specification.
Reference: [3] <author> M. Fujita, Y. Tamiya, Y. Kukimoto, and K.-C. Chen. </author> <title> Application of Boolean unification to combinational logic synthesis. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 510-513, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Since engineering changes arise frequently in actual design processes, the technique is of practical importance from an industrial point of view. Several synthesis techniques have already been proposed for combinational circuits <ref> [2, 3, 9, 8] </ref> and sequential circuits [1], where an additional logic is attached before and/or after an existing circuit or a part of the existing circuit is replaced with a new logic so that the final circuit follows a new specification.
Reference: [4] <author> N. </author> <title> Ishiura. </title> <type> Private communication, </type> <month> April </month> <year> 1994. </year>
Reference-contexts: for a connection from a gate in a lower set to a gate in an upper set. 3 As a more general set-up, one can introduce a connection variable for every ordered pair of gates and compute, with Boolean-function matrix manipulation, the condition that the reconnected circuit has a loop <ref> [4] </ref>, which gives us a systematic way to remove all cyclic circuits from our consideration. This general approach, however, is likely to cause a BDD blowup in the following stages due to the absence of a good variable ordering. gate when reconnection is allowed.
Reference: [5] <author> Y. Kukimoto and M. Fujita. </author> <title> Rectification method for lookup-table type FPGA's. </title> <booktitle> In Proceedings of IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <pages> pages 54-61, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: In <ref> [5] </ref>, a redesign technique for lookup-table type FPGA's was proposed, where, given a combinational circuit mapped on an FPGA, the circuit is rectified by only changing the functionality of lookup-tables with all the routing preserved. <p> Note that our constraint is symmetric with the one used in FPGA rectification <ref> [5] </ref>. This constraint is reasonable in our set-up since, in gate-array or standard-cell based designs, one can make a modification to routing without changing the placement of the gates as long as there is space left for the routing. This way we get around an expensive physical placement required otherwise.
Reference: [6] <author> B. Lin and F. Somenzi. </author> <title> Minimization of symbolic relations. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 88-91, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Given redesign in a BDD, this solution can be computed in time linear to the size of the graph based on the Lin-Somenzi procedure <ref> [6] </ref>. The second criterion yields a solution which requires the minimum change in the original circuit. The corresponding assignment to c is the satisfying assignment of redesign that has the minimum Hamming distance from the assignment c which corresponds to the original circuit.
Reference: [7] <author> S. Muroga and T. Ibaraki. </author> <title> Design of optimal switching networks by integer programming. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-21:573-582, </volume> <month> June </month> <year> 1972. </year>
Reference: [8] <author> S. Muroga, Y. Kambayashi, H. C. Lai, and J. N. Culliney. </author> <title> The Transduction method design of logic network based on permissible functions. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(10) </volume> <pages> 1404-1424, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: Since engineering changes arise frequently in actual design processes, the technique is of practical importance from an industrial point of view. Several synthesis techniques have already been proposed for combinational circuits <ref> [2, 3, 9, 8] </ref> and sequential circuits [1], where an additional logic is attached before and/or after an existing circuit or a part of the existing circuit is replaced with a new logic so that the final circuit follows a new specification.
Reference: [9] <author> Y. Watanabe and R. K. Brayton. </author> <title> Incremental synthesis for engineering changes. </title> <booktitle> In Proceedings of IEEE International Conference on Computer Design,pages 40-43, </booktitle> <month> October </month> <year> 1991. </year> <title> LTEn(v) 1 return LTE(v; m; n) LTE(v; k; l) 1 if ( l &lt; 0 ) return 0 2 if ( k l ) return 1 3 if ( 9(v; k; l; f ) in cache ) return f 4 f 0 = LTE(v; k 1; l) 5 f 1 = LTE(v; k 1; l 1) 6 f = v[k]f 0 + v[k]f 1 7 save (v; k; l; f ) in cache 8 return f </title>
Reference-contexts: Since engineering changes arise frequently in actual design processes, the technique is of practical importance from an industrial point of view. Several synthesis techniques have already been proposed for combinational circuits <ref> [2, 3, 9, 8] </ref> and sequential circuits [1], where an additional logic is attached before and/or after an existing circuit or a part of the existing circuit is replaced with a new logic so that the final circuit follows a new specification.
References-found: 9

