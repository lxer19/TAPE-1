URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-93-37.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.cs.virginia.edu
Title: ABSTRACT  
Abstract: Distributed systems have long relied on shared secrets to ensure the authenticity of principals. Public key systems and zero knowledge proofs of identity have reduced this reliance. We offer a method of remote authentication that can be used with no advance shared knowledge by parties, and that allows parties to increase their confidence in the authenticity of a suspicious party to an arbitrary level. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Needham, R. M., Schroeder, M. D. </author> <title> Using encryption for authentication in large networks of computers. </title> <journal> Communications of the ACM, </journal> <volume> VolV 21, No. 12, </volume> <month> Dec </month> <year> 1978, </year> <pages> 993-999. </pages>
Reference-contexts: A central problem in establishing a logically secure channel for communication between distributed users lies in guaranteeing the identity of the two participants, known in the literature as authentication <ref> [1] </ref>, [2]. Traditionally, authentication between two principals has relied upon each knowing some information that only the two participants know and that cannot be easily guessed, i.e., a password. <p> Managing (creating, distributing and storing) these secret keys constitutes a significant security risk. One common method for resolving this issue has been to introduce a centralized trusted agent or Authentication Server (AS) <ref> [1] </ref>, [2], [4], [5]. Unfortunately, a centralized AS also introduces a single point of failure and potential bottleneck into the system. With or without a centralized AS, key management is very complex. <p> This problem is the subject of much research and many mechanisms have been proposed to resolve it <ref> [1] </ref>, [4], [5]. One way to address both the prob A TECHNIQUE FOR REMOTE AUTHENTICATION William A.Wulf, Alec Yasinsac, Katie S.
Reference: 2. <author> Burrows, M., Abadi, M., Needham, R. M, </author> <title> A Logic of Authentication, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol 8, No. 1, </volume> <month> Feb </month> <year> 1990, </year> <pages> 18-36. </pages>
Reference-contexts: A central problem in establishing a logically secure channel for communication between distributed users lies in guaranteeing the identity of the two participants, known in the literature as authentication [1], <ref> [2] </ref>. Traditionally, authentication between two principals has relied upon each knowing some information that only the two participants know and that cannot be easily guessed, i.e., a password. <p> Managing (creating, distributing and storing) these secret keys constitutes a significant security risk. One common method for resolving this issue has been to introduce a centralized trusted agent or Authentication Server (AS) [1], <ref> [2] </ref>, [4], [5]. Unfortunately, a centralized AS also introduces a single point of failure and potential bottleneck into the system. With or without a centralized AS, key management is very complex. <p> based mechanisms base authentication on the subtle rule: If two principals A and B share a secret key k [or k and k -1 ], and A sees a message M encrypted under k [or k -1 ], then A is justified in believing that B sent M [paraphrased from <ref> [2] </ref>, p21]. On the other hand, our method does not depend on encryption. No keys are generated and all values are passed in the clear since there is no concern for privacy. The purpose of our method is strictly for authentication, so there is no need for such subtle assumptions. <p> We would like to know if and how existing verification methods such as BAN Logic and Interrogator can be applied to this protocol that does not depend on shared secrets <ref> [2] </ref>, [15].
Reference: 3. <author> Lomas, M., Gong, L., Saltzer, J. H.Roger Needham, </author> <title> Reducing Risks from Poorly Chosen Keys, Operating Systems Review, </title> <booktitle> 12th ACM Symposium on Operating Systems Principles, </booktitle> <volume> Vol 23, Number 5, </volume> <pages> 3-6, </pages> <month> Dec </month> <year> 1989, </year> <pages> 14-18. </pages>
Reference-contexts: Requiring principals to share a password or other piece of secret information as the basis for authentication poses many potential problems such as vulnerabilities to guessing attacks and replay attacks <ref> [3] </ref>, [4]. Another problem with shared knowledge, or secret keys, is that with a large number of principals connected in a distributed system, it may be impractical for each principal to have a unique secret key relationship with every other principal they desire to communicate with. <p> By the time the cryptanalyst has proposed a function, the function may have changed. Even if not, an authenticator could easily keep track of erroneous authentication sequences to limit the number of guesses an intruder could make to find an accurate f as described in <ref> [3] </ref>. CONCLUSIONS AND FUTURE WORK We have presented a method for one-way authentication of users in a distributed system which requires partici pants to share only the forms of the functions f and g and the prime number n used in our example. <p> Secondly, in the sense that the functional values of the challenges are similar to encrypted data, those values are non-verifiable plaintext as described in <ref> [3] </ref>. Since there is no intuitive meaning associated with the values selected, the only way an intruder can verify them is by utilizing the function. This method can verify the authenticity of a user to an arbitrary degree of confidence.
Reference: 4. <author> D. E. Denning and G. M. Sacco, </author> <title> Timestamps in key distribution protocols, </title> <journal> Communications of the ACM, </journal> <volume> Vol 24, no. 8, </volume> <month> Aug </month> <year> 1981, </year> <pages> 33-536. </pages>
Reference-contexts: Requiring principals to share a password or other piece of secret information as the basis for authentication poses many potential problems such as vulnerabilities to guessing attacks and replay attacks [3], <ref> [4] </ref>. Another problem with shared knowledge, or secret keys, is that with a large number of principals connected in a distributed system, it may be impractical for each principal to have a unique secret key relationship with every other principal they desire to communicate with. <p> Managing (creating, distributing and storing) these secret keys constitutes a significant security risk. One common method for resolving this issue has been to introduce a centralized trusted agent or Authentication Server (AS) [1], [2], <ref> [4] </ref>, [5]. Unfortunately, a centralized AS also introduces a single point of failure and potential bottleneck into the system. With or without a centralized AS, key management is very complex. <p> This problem is the subject of much research and many mechanisms have been proposed to resolve it [1], <ref> [4] </ref>, [5]. One way to address both the prob A TECHNIQUE FOR REMOTE AUTHENTICATION William A.Wulf, Alec Yasinsac, Katie S.
Reference: 5. <author> Miller, S.P., B.C. Neumann, J.I. Schiller, & J.H. Saltzer, </author> <title> Kerberos Authentication and Authorization System, Project Athena Technical Plan, Section E.2.1, </title> <publisher> MIT. </publisher>
Reference-contexts: Managing (creating, distributing and storing) these secret keys constitutes a significant security risk. One common method for resolving this issue has been to introduce a centralized trusted agent or Authentication Server (AS) [1], [2], [4], <ref> [5] </ref>. Unfortunately, a centralized AS also introduces a single point of failure and potential bottleneck into the system. With or without a centralized AS, key management is very complex. <p> This problem is the subject of much research and many mechanisms have been proposed to resolve it [1], [4], <ref> [5] </ref>. One way to address both the prob A TECHNIQUE FOR REMOTE AUTHENTICATION William A.Wulf, Alec Yasinsac, Katie S.
Reference: 6. <author> Diffie, W., and Hellman, M., </author> <title> New directions in cryptography, </title> <journal> IEEE Transactions on Information Theory IT-22, </journal> <volume> 11(Nov. </volume> <year> 1976), </year> <pages> 644-654. </pages>
Reference-contexts: For example, when adding a node to the distributed system, normally, no secure channel exists initially between the new participant and any other participant. Nonetheless, we would like to be able to authenticate new remote users over the net. Public key cryptography, first described in <ref> [6] </ref>, circumvents the first time authentication problem by allowing a participant to broadcast their public key and later use the inverse key, which cannot be easily compromised, to authenticate themselves [7], [8], [9]. Unfortunately, an integrity problem exists with the initial distribution of the public key.
Reference: 7. <author> Rivest, R. L., Shamir, A., and Adleman, L. </author> <title> A Method for Obtaining Digital SIgnatures and Public-Key Cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> Vol 21, No. 2, </volume> <month> Feb </month> <year> 1978, </year> <pages> 120-126. </pages>
Reference-contexts: Public key cryptography, first described in [6], circumvents the first time authentication problem by allowing a participant to broadcast their public key and later use the inverse key, which cannot be easily compromised, to authenticate themselves <ref> [7] </ref>, [8], [9]. Unfortunately, an integrity problem exists with the initial distribution of the public key. That is, anyone can publish a public key and claim any identity they desire without some other authentication method in place.
Reference: 8. <author> Nechvatal, James, </author> <title> National Institute of Standards and Technology Special Publication 800-2, Public-Key Cryptography, </title> <month> Apr 199,11-11. </month>
Reference-contexts: Public key cryptography, first described in [6], circumvents the first time authentication problem by allowing a participant to broadcast their public key and later use the inverse key, which cannot be easily compromised, to authenticate themselves [7], <ref> [8] </ref>, [9]. Unfortunately, an integrity problem exists with the initial distribution of the public key. That is, anyone can publish a public key and claim any identity they desire without some other authentication method in place.
Reference: 9. <author> Luciano Dennis, Prichett, Gordon, </author> <title> Cryptology: From Caesar Ciphers to Public-key Cryp-tosystems, </title> <journal> The College Mathematics Journal, </journal> <volume> Vol 18, </volume> <month> Jan </month> <year> 1987, </year> <pages> 2-17. </pages>
Reference-contexts: Public key cryptography, first described in [6], circumvents the first time authentication problem by allowing a participant to broadcast their public key and later use the inverse key, which cannot be easily compromised, to authenticate themselves [7], [8], <ref> [9] </ref>. Unfortunately, an integrity problem exists with the initial distribution of the public key. That is, anyone can publish a public key and claim any identity they desire without some other authentication method in place.
Reference: 10. <author> Shafi Goldwasser, Silvio Micali,and Charles Rackoff, </author> <title> The Knowledge Complexity of Interactive Proof Systems, </title> <booktitle> Proc. 27th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1985, </year> <pages> 291-304. </pages>
Reference-contexts: The number of pairs of identifiers (x, f (x)) and number of functions available as f and g are unbounded when carefully selected. Relationship to Zero Knowledge Proofs This mechanism is also similar to Zero Knowledge Proofs (ZKP) first published by Goldwasser et al. in <ref> [10] </ref> and other works. ZKPs have the remarkable property of being both convincing and yielding nothing except that the assertion is indeed valid [11].
Reference: 11. <author> Oded Goldreich, Silvio Micali, Avi Wigderson, </author> <title> Proofs that Yield Nothing But their Validity and a Methodology of Cryptographic Protocol Design, </title> <publisher> IEEE, </publisher> <year> 1986, </year> <pages> 174-187. </pages>
Reference-contexts: Relationship to Zero Knowledge Proofs This mechanism is also similar to Zero Knowledge Proofs (ZKP) first published by Goldwasser et al. in [10] and other works. ZKPs have the remarkable property of being both convincing and yielding nothing except that the assertion is indeed valid <ref> [11] </ref>. The protocol described in this paper is Zero Knowledge since an intruder who uses a recorded message can only play back the recorded message if the questions asked happen to be the same.
Reference: 12. <editor> How To Prove Yourself: </editor> <title> Practical Solutions to Identification and Signature Problems, </title> <booktitle> Advances in Cryptology - Crypto 86, </booktitle> <pages> 186-194. </pages>
Reference-contexts: The trick is that the verifier can ensure that the correct answer is passed because they know the form of the question (i.e. the equations). In 1986, Fiat and Shamir presented a zero-knowledge identification scheme which enables any user to prove his identity without shared or public keys <ref> [12] </ref>. Their scheme requires users to carry a smart card as proof of identity. A trusted center is required to issue these smart cards, however no further contact with the center is required. Each smart card contains the user's unique identifier and k other values used in establishing identity. <p> When a user wished to identify herself, the verifier must prove that it knows these k values without giving away any information about their values. For specific implementation details of the protocol, the reader is referred to <ref> [12] </ref>. Fiat and Shamir's protocol is similar to the one described in this paper in that the verifier has gained no useful information that can later be used to masquerade as that user.
Reference: 13. <institution> Data Encryption Standard, </institution> <note> FIPS PUB 46, </note> <institution> National Technology Information Service, Springfiled, Va, </institution> <year> 1977. </year>
Reference-contexts: There are many well-known functions that have been designed to be one-way. DES is one such function that was specifically designed to be hard to invert <ref> [13] </ref>. However, whether DES distributes across some operation in a way that satisfies our algorithm is an open question. The Discrete Exponentiation Function Discrete exponentiation is a well-known one-way function.
Reference: 14. <author> Goldwasser, Shafi, Micali, Silvio, and Rackoff, Charles, </author> <title> The Knowledge Complexity of Interactive Proof Systems, </title> <journal> Siam Journal of Computing, </journal> <volume> Vol 18, No 1, </volume> <month> Feb </month> <year> 1989, </year> <pages> 186-208. </pages>
Reference-contexts: Additional iterations of the authentication sequence increase the probability of actual authentication exponentially. In this way, the proposed method is similar to the Zero Knowledge proofs proposed by Goldwasser et al <ref> [14] </ref>. From Bs viewpoint, the ability to achieve an arbitrary degree of confidence in the identity of a user could be highly useful. In order to ensure security of the method, g could be changed with virtually every iteration of the authentication sequence.
Reference: 15. <author> Millen, J.K., Clark, S. C., and Freedman, S. B. </author> <title> The interrogator: Protocol security analysis, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-13, 2, </volume> <month> Feb </month> <year> 1987, </year> <pages> 274-288. </pages>
Reference-contexts: We would like to know if and how existing verification methods such as BAN Logic and Interrogator can be applied to this protocol that does not depend on shared secrets [2], <ref> [15] </ref>.
Reference: 16. <author> McEliece, R.l J. </author> <title> A public-key cryptosystem based on algebraic coding theory, </title> <type> DSN Progress Report 42-44, </type> <institution> Jet Propulsion Lab., </institution> <month> Jan and Feb. </month> <year> 1978. </year>
Reference: 17. <author> Merkle, R., and Hellman, M. E., </author> <title> Hiding information and receipts in trapdoor knapsacks, </title> <journal> IEEE Transactions on Information Theory IT-24, </journal> <month> Sept </month> <year> 1978. </year>
Reference: 18. <author> R. C. Merkle, </author> <title> Secrecy, Authentication, and Public Key Systems, An Arbor: </title> <publisher> UMI Research Press, </publisher> <year> 1982. </year>
References-found: 18

