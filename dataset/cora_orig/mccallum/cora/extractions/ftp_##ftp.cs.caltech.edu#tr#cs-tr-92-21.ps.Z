URL: ftp://ftp.cs.caltech.edu/tr/cs-tr-92-21.ps.Z
Refering-URL: ftp://ftp.cs.caltech.edu/tr/INDEX.html
Root-URL: http://www.cs.caltech.edu
Title: Material Classification of Magnetic Resonance Volume Data  
Author: David H. Laidlaw 
Degree: Thesis by  In Partial Fulfillment of the Requirements for the Degree of Master of Science  
Date: 1992 (Submitted May 29, 1992)  
Address: Pasadena, California  
Affiliation: California Institute of Technology  
Abstract-found: 0
Intro-found: 1
Reference: [Barzel 92] <author> Barzel, Ronen, </author> <title> "Physically-Based Modeling for Computer Graphics: A Structured Approach," </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <note> 1992 (in press). </note>
Reference: [Blinn 89a] <author> Blinn, James F., </author> <title> "What We Need Around Here Is More Aliasing," </title> <journal> IEEE Computer Graphics and Applications,9(1), </journal> <month> January </month> <year> 1989, </year> <pages> 75-79. </pages>
Reference-contexts: Appendix A is a more detailed summary than this review for readers less familiar with the field. Sources such as [Oppenheim 83] or [Lim 90] provide an even more in-depth treatment, while <ref> [Blinn 89a] </ref> and [Blinn 89b] give a more intuitive description. Terms in this summary will be italicized at their first use. <p> Appendix A Review of Digital Signal Processing In this appendix we review some concepts from digital signal processing. Readers unfamiliar with the field should refer to a source such as [Oppenheim 83] or [Lim 90] for more detail, or <ref> [Blinn 89a] </ref> and [Blinn 89b] for a more intuitive description. We will italicize terms where they are first defined.
Reference: [Blinn 89b] <author> Blinn, James F., </author> <title> "Return of the Jaggy," </title> <journal> IEEE Computer Graphics and Applications,9(2), </journal> <month> March </month> <year> 1989, </year> <pages> 82-89. </pages>
Reference-contexts: Appendix A is a more detailed summary than this review for readers less familiar with the field. Sources such as [Oppenheim 83] or [Lim 90] provide an even more in-depth treatment, while [Blinn 89a] and <ref> [Blinn 89b] </ref> give a more intuitive description. Terms in this summary will be italicized at their first use. <p> Appendix A Review of Digital Signal Processing In this appendix we review some concepts from digital signal processing. Readers unfamiliar with the field should refer to a source such as [Oppenheim 83] or [Lim 90] for more detail, or [Blinn 89a] and <ref> [Blinn 89b] </ref> for a more intuitive description. We will italicize terms where they are first defined. For our purposes digital signal processing consists of mapping from functions of continuous parameters to sampled functions and back again, as well as operating on those functions or the samples that represent them.
Reference: [Bradley 85] <author> Bradley, William G., Jr., W. Ross Adey, and Anton N. Hasso, </author> <title> Magnetic Resonance Imaging of the Brain, Head, and Neck, </title> <publisher> Aspen Publishers, </publisher> <address> Rockville, Maryland, </address> <year> 1985. </year>
Reference-contexts: In order to compensate for geometric distortions due to distance from the detector coil, the deformation should also skew the moving dataset <ref> [Bradley 85] </ref>. While there can be more complex geometric distortions due to magnetic field inhomogeneities and other effects, we have chosen to ignore them and use a quasi-linear deformation. This choice achieves all of the goals above, is reasonably simple, and empirically seems to work adequately.
Reference: [Cline 90] <author> Cline, Harvey E., William E. Lorensen, Ron Kikinis, and Ferenc Jolesz, </author> <title> "Three-Dimensional Segmentation of MR Images of the Head Using Probability and Connectivity," </title> <journal> Journal of Computer Assisted Tomography, </journal> <volume> 14(6), </volume> <month> November/December </month> <year> 1990, </year> <pages> 1037-1045. </pages>
Reference-contexts: Material-classification techniques in computer graphics and MR are becoming more common [Drebin et al. 88], <ref> [Cline 90] </ref>, [Kikinis et al. 90]. The technique in [Drebin et al. 88] involves interactively classifying the histogram of a scalar-valued dataset.
Reference: [Drebin et al. 88] <author> Drebin, Robert, Loren Carpenter, and Pat Hanrahan, </author> <title> "Volume Rendering," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 22, </volume> <year> 1988, </year> <pages> 65-74. </pages>
Reference-contexts: Material-classification techniques in computer graphics and MR are becoming more common <ref> [Drebin et al. 88] </ref>, [Cline 90], [Kikinis et al. 90]. The technique in [Drebin et al. 88] involves interactively classifying the histogram of a scalar-valued dataset. <p> Material-classification techniques in computer graphics and MR are becoming more common <ref> [Drebin et al. 88] </ref>, [Cline 90], [Kikinis et al. 90]. The technique in [Drebin et al. 88] involves interactively classifying the histogram of a scalar-valued dataset. <p> We produce a continuous function of the volume, where each sample can consist of a mixture several materials. This function can be evaluated anywhere within the volume. This continuous classification avoids some artifacts, like aliasing and discontinuities, that discrete classification can cause in extracted models. [Levoy 88], <ref> [Drebin et al. 88] </ref>, and [Upson and Keeler 88] describe volume rendering techniques. Some earlier work is described in [Kajiya and von Herzen 84]. <p> The main goal for our material-classification technique is to enhance models and images created from sampled volumetric data. As <ref> [Drebin et al. 88] </ref> points out, classification techniques that classify voxels as one of a fixed set of materials cause artifacts when used for computer graphics because the techniques tend to create incorrect hard edges between materials. To avoid this problem, we produce smoothly varying classified voxel data.
Reference: [Duda and Hart 73] <author> Duda, Richard P., and Peter E. Hart, </author> <title> Pattern Classification and Scene Analysis, </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: We believe that within the computer graphics community the process is not applied often enough to eliminate the artifacts evident in many static geometric models derived from volume data. <ref> [Duda and Hart 73] </ref> describes matching parametric models of distributions to sets of samples by applying statistical techniques to calculate the parameters directly. Finding the mean and variance of a set of real numbers is a simple example of such a process.
Reference: [Foley et al. 90] <author> Foley, James, Andries van Dam, Steven Feiner, and John Hughes, </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice, </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1990. </year>
Reference-contexts: We present several steps towards achieving that goal, although the models we have created for this thesis are preliminary. Traditionally, computer graphics models have been created using programs or lists of graphics commands. The models have consisted of collections of connected rigid objects or of kinematically-deformed surfaces <ref> [Foley et al. 90] </ref>. More recently research has modeled fairly simple physically-based flexible objects [Terzopoulos et al. 87] [Platt and Barr 88] [Terzopoulos and Fleischer 88].
Reference: [Horwitz et al. 71] <author> Horwitz, Harold M, Richard F. Nalepka, Peter D. Hyde, and James P. Morgen-stern, </author> <title> "Estimating the Proportions of Objects within a Single Resolutions Element of a Multispectral Scanner," </title> <booktitle> International Symposium on Remote Sensing of Environment, </booktitle> <address> (7th : 1971 : Ann Arbor, </address> <publisher> Michigan), </publisher> <pages> 1307-1320. </pages>
Reference: [James 76] <author> James, Glenn, ed., </author> <title> Mathematics Dictionary, </title> <publisher> Van Nostrand Reinhold Company Inc., </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: Histogram construction 2. Gaussian fitting 3. Data classification The steps of the algorithm are listed in Fig. 4.1. First, we create a multi-dimensional histogram of the values in the image. If we have a sufficiently large number of samples in a volumetric dataset, the law of large numbers <ref> [James 76] </ref> suggests that the distribution of MR values for a given material will be gaussian. Second, we model the histogram as a sum of parameterized gaussian functions, where each function represents the distribution of samples for a single material in the volume.
Reference: [Kajiya and von Herzen 84] <author> Kajiya, James T., and Brian P. Von Herzen, </author> <title> "Ray Tracing Volume Densities," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 18, </volume> <year> 1984, </year> <pages> 165-174. </pages>
Reference-contexts: This function can be evaluated anywhere within the volume. This continuous classification avoids some artifacts, like aliasing and discontinuities, that discrete classification can cause in extracted models. [Levoy 88], [Drebin et al. 88], and [Upson and Keeler 88] describe volume rendering techniques. Some earlier work is described in <ref> [Kajiya and von Herzen 84] </ref>. Our contribution to these standard volume-rendering techniques is our method for classifying the volume data and mapping it to properties that the volume renderer can use to create images. <p> Our volume renderer ray traces volume data, integrating through densities dependent on the amount and type of material present. See <ref> [Kajiya and von Herzen 84] </ref> and [Kay 92], among others, for more details on ray tracing volumetric data. The first volume-rendered image we show is of data collected from a jade plant.
Reference: [Kay 92] <author> Kay, Timothy, </author> <title> From Geometry to Texture: Experiments Towards Realism in Computer Graphics, </title> <type> Ph. D. Thesis, </type> <institution> California Institute of Technology, </institution> <year> 1992. </year>
Reference-contexts: Our volume renderer ray traces volume data, integrating through densities dependent on the amount and type of material present. See [Kajiya and von Herzen 84] and <ref> [Kay 92] </ref>, among others, for more details on ray tracing volumetric data. The first volume-rendered image we show is of data collected from a jade plant. The dataset is transparent where the data values are small and is progressively more opaque as the data values get larger.
Reference: [Keller 88] <author> Keller, Paul, </author> <title> "Basic Principles of Magnetic Resonance Imaging," GE Medical Systems Report, </title> <address> Milwaukee, </address> <year> 1988. </year> <note> 43 BIBLIOGRAPHY Draft August 6, 1992 44 </note>
Reference-contexts: The MR literature is extensive [Wehrli 88] and describes many techniques for collecting volume datasets of objects. We are primarily collecting data using a technique called spin-echo imaging, which we describe in Section 2.2 <ref> [Keller 88] </ref>. We present guidelines for selecting objects and collecting data that can be used effectively for creating computer graphics models. The signal-processing and computer graphics literature discusses many techniques for processing data to avoid and reduce artifacts [Oppenheim 83] [Lim 90]. <p> The first is net spin density, and the other two are magnetic decay time constants characteristic for each material. These values are often referred to as (x); T 1 (x) and T 2 (x), and are functions of 3-D space. We will describe these values briefly. (See <ref> [Keller 88] </ref> [Wehrli 88] and [Wehrli] for more details.) An object in an MR machine is subjected to a strong, constant magnetic field. Because atomic nuclei are charged and are spinning, their axes tend to line up with the constant field of the machine. <p> We can look up approximate values for , T 1 , and T 2 of materials similar to those we are imaging to help choose (T R ; T E ) pairs as described in Fig. 2.1. These values are available in sources such as <ref> [Keller 88] </ref>. <p> Figure 2.3 lists the parameters and shows typical values for them. 2.2.4 MR Sampling Spin-echo data is collected from the MR imaging machine in the fourier domain (see <ref> [Keller 88] </ref>), and an inverse fourier transform is applied to it to produce images.
Reference: [Kikinis et al. 90] <author> Kikinis, Ron, Rerenc A. Jolesz, Guido Gerig, Tamas Sandor, Harvey E. Cline, William E. Lorensen, Michael Halle, Stephen A. Benton, </author> <title> "3D Morphometric and Mor-phologic Information Derived From Clinical Brain MR Image," NATO Advance Research Workshop on 3D Imaging in Medicine, </title> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> 441-454. </pages>
Reference-contexts: Material-classification techniques in computer graphics and MR are becoming more common [Drebin et al. 88], [Cline 90], <ref> [Kikinis et al. 90] </ref>. The technique in [Drebin et al. 88] involves interactively classifying the histogram of a scalar-valued dataset.
Reference: [Kirk 92] <author> Kirk, David B., Alan H. Barr, and David Laidlaw, </author> <title> "Registration and Computational Staining of MRI Data," </title> <note> Caltech Computer Science Technical Report, to appear. </note>
Reference: [Kirk 90] <author> Kirk, David B., </author> <title> "Representing Rough Surfaces and Volumes for Computer Graphics," M.S. </title> <type> Thesis, </type> <institution> California Institute of Technology, </institution> <year> 1990. </year>
Reference-contexts: By arranging those points into a matrix and finding its pseudo-inverse using singular value decomposition (SVD), we get the least-squares "best" linear transformation from feature space to color space. Applying this mapping to an image slice gives images like that on the left of Fig. 5.3. See <ref> [Kirk 90] </ref> for more information. This technique has the advantage of being able to better separate different tissues than the RGB technique. We can also choose particular colors for particular materials.
Reference: [Larson 82] <author> Larson, Harold J., </author> <title> Introduction to Probability Theory and Satistical Inference, </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: Gaussian Functions A gaussian is a multi-dimensional gaussian bump function representing a distribution of data values <ref> [Larson 82] </ref>.
Reference: [Levoy 88] <author> Levoy, Marc, </author> <title> "Display of Surfaces from Volume Data," </title> <journal> IEEE Computer Graphics and Applications,vol. </journal> <volume> 8(3), </volume> <month> May, </month> <year> 1988, </year> <pages> 29-37. </pages>
Reference-contexts: We produce a continuous function of the volume, where each sample can consist of a mixture several materials. This function can be evaluated anywhere within the volume. This continuous classification avoids some artifacts, like aliasing and discontinuities, that discrete classification can cause in extracted models. <ref> [Levoy 88] </ref>, [Drebin et al. 88], and [Upson and Keeler 88] describe volume rendering techniques. Some earlier work is described in [Kajiya and von Herzen 84].
Reference: [Lim 90] <author> Lim, Jae S., </author> <title> Two-dimensional Signal and Image Processing, </title> <publisher> Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1990. </year>
Reference-contexts: We present guidelines for selecting objects and collecting data that can be used effectively for creating computer graphics models. The signal-processing and computer graphics literature discusses many techniques for processing data to avoid and reduce artifacts [Oppenheim 83] <ref> [Lim 90] </ref>. MR machines use these techniques to produce images appropriate to the medical community, which is their primary focus. Our goal of extracting models from the data, rather than examining slices of the data, places different requirements on the sampling process. <p> Appendix A is a more detailed summary than this review for readers less familiar with the field. Sources such as [Oppenheim 83] or <ref> [Lim 90] </ref> provide an even more in-depth treatment, while [Blinn 89a] and [Blinn 89b] give a more intuitive description. Terms in this summary will be italicized at their first use. <p> Appendix A Review of Digital Signal Processing In this appendix we review some concepts from digital signal processing. Readers unfamiliar with the field should refer to a source such as [Oppenheim 83] or <ref> [Lim 90] </ref> for more detail, or [Blinn 89a] and [Blinn 89b] for a more intuitive description. We will italicize terms where they are first defined.
Reference: [Lorensen and Cline 87] <author> Lorensen, William, and Harvey Cline, </author> <title> "Marching Cubes: A High Resolution 3D Surface Construction Algorithm," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 21, </volume> <year> 1987, </year> <pages> 163-169. </pages>
Reference-contexts: Related work has utilized 2-D image data in making computer graphics models [Muraki 91], [Terzopoulos and Fleischer 88]. Our work differs because we are working with 3-D volume data. <ref> [Lorensen and Cline 87] </ref>, [Snyder 92], and [Miller et al. 91] all extract surface models from volume data. Our preliminary techniques are similar to those of [Lorensen and Cline 87] and [Snyder 92], but we extend them to create dynamic models by including the "insides" of the objects as well as <p> Our work differs because we are working with 3-D volume data. <ref> [Lorensen and Cline 87] </ref>, [Snyder 92], and [Miller et al. 91] all extract surface models from volume data. Our preliminary techniques are similar to those of [Lorensen and Cline 87] and [Snyder 92], but we extend them to create dynamic models by including the "insides" of the objects as well as the surfaces. 1.4 Thesis Organization Chapter 2, "Data Collection," discusses collecting MR imaging data.
Reference: [Miller et al. 91] <author> Miller, James, David Breen, William Lorensen, Robert O'Bara and Michael Wozny, </author> <title> "Geometrically Deformed Models: A Method for Extracting Closed Geometric Models from Volume Data," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 25, </volume> <year> 1991, </year> <pages> 217-226. </pages>
Reference-contexts: Related work has utilized 2-D image data in making computer graphics models [Muraki 91], [Terzopoulos and Fleischer 88]. Our work differs because we are working with 3-D volume data. [Lorensen and Cline 87], [Snyder 92], and <ref> [Miller et al. 91] </ref> all extract surface models from volume data.
Reference: [Moik 80] <author> Moik, Johannes G., </author> <title> Digital Processing of Remotely Sensed Images, </title> <booktitle> (NASA SP; 431), </booktitle> <year> 1980. </year>
Reference: [Muraki 91] <author> Muraki, Shigeru, </author> <title> "Volumetric Shape Description of Range Data using `Blobby Model', </title> " <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 25, </volume> <year> 1991, </year> <pages> 227-235. </pages>
Reference-contexts: Our contribution to these standard volume-rendering techniques is our method for classifying the volume data and mapping it to properties that the volume renderer can use to create images. Related work has utilized 2-D image data in making computer graphics models <ref> [Muraki 91] </ref>, [Terzopoulos and Fleischer 88]. Our work differs because we are working with 3-D volume data. [Lorensen and Cline 87], [Snyder 92], and [Miller et al. 91] all extract surface models from volume data.
Reference: [NAG] <author> NAG Fortran Library, </author> <title> Numerical Algorithms Group, </title> <address> Downers Grove, Illinois. </address>
Reference-contexts: to these points, and the mean value for that material in the moving dataset is returned by C. 20 We approximate the integral E (p) with a sum over a finite number of points using numerical techniques, such as Monte Carlo integration, and have minimized it using a quasi-Newton minimizer <ref> [NAG] </ref>. Figure 3.7 shows two volume datasets before alignment, on the left, and after alignment, on the right. 3.4 Calculating New Spin-echo Values The fourth type of processing that we perform on the MR data can help to create data values that differ for different materials. <p> Figure 4.8 shows a one-dimensional histogram that this algorithm has fit with nine gaussians. Minimization We use a quasi-Newton minimizer <ref> [NAG] </ref>. It runs faster when the objective function is scaled to lie between zero and one.
Reference: [Oppenheim 83] <author> Oppenheim, Alan V., and Alan S. Willsky, with Ian T. Young, </author> <title> Signals and Systems, </title> <publisher> Prentice-Hall, </publisher> <address> New Jersey, </address> <year> 1983. </year>
Reference-contexts: We present guidelines for selecting objects and collecting data that can be used effectively for creating computer graphics models. The signal-processing and computer graphics literature discusses many techniques for processing data to avoid and reduce artifacts <ref> [Oppenheim 83] </ref> [Lim 90]. MR machines use these techniques to produce images appropriate to the medical community, which is their primary focus. Our goal of extracting models from the data, rather than examining slices of the data, places different requirements on the sampling process. <p> Appendix A is a more detailed summary than this review for readers less familiar with the field. Sources such as <ref> [Oppenheim 83] </ref> or [Lim 90] provide an even more in-depth treatment, while [Blinn 89a] and [Blinn 89b] give a more intuitive description. Terms in this summary will be italicized at their first use. <p> Appendix A Review of Digital Signal Processing In this appendix we review some concepts from digital signal processing. Readers unfamiliar with the field should refer to a source such as <ref> [Oppenheim 83] </ref> or [Lim 90] for more detail, or [Blinn 89a] and [Blinn 89b] for a more intuitive description. We will italicize terms where they are first defined. <p> If f (x) is not continuous, the sample, convolution, and reconstruction operations will behave differently at any points of discontinuity, but will behave as described everywhere else. A sinc kernel function, defined in <ref> [Oppenheim 83] </ref> as k s (x) = sinc (x) = sin (x) ; (A:5) has some useful properties (Fig. A.1 and Eqn. A.5 show the sinc function for sample size h = 1). The frequency response of the sinc function is a box function, similar to that of Fig. A.2.
Reference: [Pizer 90] <author> Pizer, S., </author> <title> "Toward Interactive Object Definition in 3D Scalar Images," 3D Imaging in Medicine, </title> <booktitle> NATO ASI Series F, </booktitle> <volume> vol. 60, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990, </year> <pages> 83-105. </pages>
Reference-contexts: The other two references use interactive, supervised techniques: a person trained in anatomy determines characteristic material 4 responses, and then the classification algorithm labels the rest of a volume dataset using that information. [Yoo et al. 92] and <ref> [Pizer 90] </ref> present another technique that uses unsupervised methods to divide a dataset into multiple regions, which are then interactively placed into different classes.
Reference: [Platt and Barr 88] <author> Platt, John, and Alan Barr, </author> <title> "Constraint Methods for Flexible Models," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 22, </volume> <year> 1988, </year> <pages> 279-288. </pages>
Reference-contexts: Traditionally, computer graphics models have been created using programs or lists of graphics commands. The models have consisted of collections of connected rigid objects or of kinematically-deformed surfaces [Foley et al. 90]. More recently research has modeled fairly simple physically-based flexible objects [Terzopoulos et al. 87] <ref> [Platt and Barr 88] </ref> [Terzopoulos and Fleischer 88]. In addition to having fairly simple geometries, the flexible objects modeled generally consist of a single "part" made of a single, homogeneous "material." Examples of a single-part object include a trampoline, a cube of jello, and an eggplant.
Reference: [Siggraph Films 87] <editor> Siggraph Video Reels, </editor> <booktitle> vols. </booktitle> <pages> 36-37, </pages> <year> 1987. </year>
Reference-contexts: While multiple parts and some of the desired interactions have been successfully modeled kinematically, as can be seen in many computer graphics animations <ref> [Siggraph Films 87] </ref> [Siggraph Films 88] [Siggraph Films 89], the resulting models are often ad-hoc and lack important features of the real objects they are modeling. Using the kinematic techniques for this purpose is also very painstaking and time consuming. We propose creating models from measurements of real-world objects.
Reference: [Siggraph Films 88] <editor> Siggraph Video Reels, </editor> <booktitle> vols. </booktitle> <pages> 38-39, </pages> <year> 1988. </year>
Reference-contexts: While multiple parts and some of the desired interactions have been successfully modeled kinematically, as can be seen in many computer graphics animations [Siggraph Films 87] <ref> [Siggraph Films 88] </ref> [Siggraph Films 89], the resulting models are often ad-hoc and lack important features of the real objects they are modeling. Using the kinematic techniques for this purpose is also very painstaking and time consuming. We propose creating models from measurements of real-world objects.
Reference: [Siggraph Films 89] <editor> Siggraph Video Reels, </editor> <booktitle> vols. </booktitle> <pages> 51-52, </pages> <year> 1989. </year>
Reference-contexts: While multiple parts and some of the desired interactions have been successfully modeled kinematically, as can be seen in many computer graphics animations [Siggraph Films 87] [Siggraph Films 88] <ref> [Siggraph Films 89] </ref>, the resulting models are often ad-hoc and lack important features of the real objects they are modeling. Using the kinematic techniques for this purpose is also very painstaking and time consuming. We propose creating models from measurements of real-world objects.
Reference: [Snyder 91] <author> Snyder, John, </author> <title> Generative Modeling: An Approach to High Level Shape Design for Computer Graphics and CAD, </title> <type> Ph.D. Thesis, </type> <institution> California Institute of Technology, </institution> <year> 1991. </year> <note> BIBLIOGRAPHY Draft August 6, 1992 45 </note>
Reference-contexts: This corresponds to using a cubic gaussian approximation as a kernel for reconstructing the continuous function. A geometric model is then extracted by computing a polygonal approximation to an isosurface of this interpolation function. The isosurface extraction is computed using the algorithm for implicit surface approximation described in <ref> [Snyder 91] </ref>. The algorithm requires a function that can bound the output of the interpolation function, given a bound on its input. Using interval arithmetic, this is relatively easy to implement for tri-cubic interpolation.
Reference: [Snyder 92] <author> Snyder, John, </author> <title> Generative Modeling for Computer Graphics and CAD, </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <note> 1992 (in press). </note>
Reference-contexts: Related work has utilized 2-D image data in making computer graphics models [Muraki 91], [Terzopoulos and Fleischer 88]. Our work differs because we are working with 3-D volume data. [Lorensen and Cline 87], <ref> [Snyder 92] </ref>, and [Miller et al. 91] all extract surface models from volume data. Our preliminary techniques are similar to those of [Lorensen and Cline 87] and [Snyder 92], but we extend them to create dynamic models by including the "insides" of the objects as well as the surfaces. 1.4 Thesis <p> Our work differs because we are working with 3-D volume data. [Lorensen and Cline 87], <ref> [Snyder 92] </ref>, and [Miller et al. 91] all extract surface models from volume data. Our preliminary techniques are similar to those of [Lorensen and Cline 87] and [Snyder 92], but we extend them to create dynamic models by including the "insides" of the objects as well as the surfaces. 1.4 Thesis Organization Chapter 2, "Data Collection," discusses collecting MR imaging data.
Reference: [Snyder 92a] <author> Snyder, John, </author> <title> "Interval Analysis for Computer Graphics," </title> <note> submitted to Siggraph 92. </note>
Reference: [Terzopoulos et al. 87] <author> Terzopoulos, Demetri, John Platt, Alan Barr, and Kurt Fleischer, </author> <title> "Elastically Deformable Models," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 21, </volume> <year> 1987, </year> <pages> 205-214. </pages>
Reference-contexts: Traditionally, computer graphics models have been created using programs or lists of graphics commands. The models have consisted of collections of connected rigid objects or of kinematically-deformed surfaces [Foley et al. 90]. More recently research has modeled fairly simple physically-based flexible objects <ref> [Terzopoulos et al. 87] </ref> [Platt and Barr 88] [Terzopoulos and Fleischer 88]. In addition to having fairly simple geometries, the flexible objects modeled generally consist of a single "part" made of a single, homogeneous "material." Examples of a single-part object include a trampoline, a cube of jello, and an eggplant.
Reference: [Terzopoulos and Fleischer 88] <author> Terzopoulos, Demetri, and Kurt Fleischer, </author> <title> "Modeling Inelastic Deformation: Viscoelasticity, Plasticity, Fracture," </title> <journal> Computer Graphics (Proc. SIG-GRAPH),vol. </journal> <volume> 22, </volume> <year> 1988, </year> <pages> 269-278. </pages>
Reference-contexts: The models have consisted of collections of connected rigid objects or of kinematically-deformed surfaces [Foley et al. 90]. More recently research has modeled fairly simple physically-based flexible objects [Terzopoulos et al. 87] [Platt and Barr 88] <ref> [Terzopoulos and Fleischer 88] </ref>. In addition to having fairly simple geometries, the flexible objects modeled generally consist of a single "part" made of a single, homogeneous "material." Examples of a single-part object include a trampoline, a cube of jello, and an eggplant. <p> Our contribution to these standard volume-rendering techniques is our method for classifying the volume data and mapping it to properties that the volume renderer can use to create images. Related work has utilized 2-D image data in making computer graphics models [Muraki 91], <ref> [Terzopoulos and Fleischer 88] </ref>. Our work differs because we are working with 3-D volume data. [Lorensen and Cline 87], [Snyder 92], and [Miller et al. 91] all extract surface models from volume data.
Reference: [Upson and Keeler 88] <author> Upson, Craig, and Michael Keeler, "V-BUFFER: </author> <title> Visible Volume Rendering," </title> <journal> Computer Graphics (Proc. SIGGRAPH),vol. </journal> <volume> 22, </volume> <year> 1988, </year> <pages> 59-64. </pages>
Reference-contexts: This function can be evaluated anywhere within the volume. This continuous classification avoids some artifacts, like aliasing and discontinuities, that discrete classification can cause in extracted models. [Levoy 88], [Drebin et al. 88], and <ref> [Upson and Keeler 88] </ref> describe volume rendering techniques. Some earlier work is described in [Kajiya and von Herzen 84]. Our contribution to these standard volume-rendering techniques is our method for classifying the volume data and mapping it to properties that the volume renderer can use to create images.
Reference: [Vannier et al. 85] <author> Vannier, Michael W, Robert L. Butterfield, Douglas Jordan, William A. Mur-phy, Robert G. Levitt, Mokhtar Gado, </author> <title> "Multispectral Analysis of Magnetic Resonance Images," </title> <journal> Radiology, </journal> <volume> 154, </volume> <year> 1985, </year> <pages> 221-224. </pages>
Reference-contexts: Our technique differs from all of these supervised ones because it does not require a trained operator to distinguish the different materials and regions. <ref> [Vannier et al. 85] </ref> and [Vannier et al. 88] use techniques originally designed and written to process satellite images to identify different materials in data. Some of these techniques are unsupervised, but they all identify each voxel as a single material.
Reference: [Vannier et al. 88] <author> Vannier, Michael W. Christopher M. Speidel, and Douglas L. Rickman, </author> <title> "Magnetic Resonance Imaging Multispectral Tissue Classification," </title> <booktitle> Neural Information Processing Systems (NIPS), </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: Our technique differs from all of these supervised ones because it does not require a trained operator to distinguish the different materials and regions. [Vannier et al. 85] and <ref> [Vannier et al. 88] </ref> use techniques originally designed and written to process satellite images to identify different materials in data. Some of these techniques are unsupervised, but they all identify each voxel as a single material.
Reference: [Wehrli 88] <author> Wehrli, Felix, </author> <title> "Advanced MR Imaging Techniques," GE Medical Systems Report, </title> <address> Mil-waukee, </address> <year> 1988. </year>
Reference-contexts: As examples, we will show images created from processed data of human heads, a human hand, bananas, and a jade plant. 1.3 Related Work This work extends and combines work from medical magnetic resonance imaging, pattern classification, image processing, and computer graphics. The MR literature is extensive <ref> [Wehrli 88] </ref> and describes many techniques for collecting volume datasets of objects. We are primarily collecting data using a technique called spin-echo imaging, which we describe in Section 2.2 [Keller 88]. We present guidelines for selecting objects and collecting data that can be used effectively for creating computer graphics models. <p> The first is net spin density, and the other two are magnetic decay time constants characteristic for each material. These values are often referred to as (x); T 1 (x) and T 2 (x), and are functions of 3-D space. We will describe these values briefly. (See [Keller 88] <ref> [Wehrli 88] </ref> and [Wehrli] for more details.) An object in an MR machine is subjected to a strong, constant magnetic field. Because atomic nuclei are charged and are spinning, their axes tend to line up with the constant field of the machine.
Reference: [Wehrli] <author> Wehrli, Felix, </author> <title> "Introduction to Fast-Scan MR," GE Medical Systems Report, </title> <address> Milwaukee. </address>
Reference-contexts: These values are often referred to as (x); T 1 (x) and T 2 (x), and are functions of 3-D space. We will describe these values briefly. (See [Keller 88] [Wehrli 88] and <ref> [Wehrli] </ref> for more details.) An object in an MR machine is subjected to a strong, constant magnetic field. Because atomic nuclei are charged and are spinning, their axes tend to line up with the constant field of the machine.
Reference: [Wiersma et al. 76] <author> Wiersma, D. J. and D. Landgrebe, </author> <title> The Use of Spatial Characteristics for the Improvement of Multispectral Classification of Remotely Sensed Data, </title> <booktitle> IEEE Symposium on Machine Processing of Remotely Sensed Data, 1976, </booktitle> <address> 2A-18 2A-22. </address>
Reference: [Yoo et al. 92] <author> Yoo, Terry S., Ulrich Neumann, Henry Fuchs, Stephen M. Pizer, Tim Cullip, John Rhoades, Ross Whitaker, </author> <title> "Direct Visualization of Volume Data," </title> <journal> IEEE Computer Graphics and Applications,vol. </journal> <volume> 12(4), </volume> <month> July, </month> <year> 1992, </year> <pages> 63-71. </pages>
Reference-contexts: The technique in [Drebin et al. 88] involves interactively classifying the histogram of a scalar-valued dataset. The other two references use interactive, supervised techniques: a person trained in anatomy determines characteristic material 4 responses, and then the classification algorithm labels the rest of a volume dataset using that information. <ref> [Yoo et al. 92] </ref> and [Pizer 90] present another technique that uses unsupervised methods to divide a dataset into multiple regions, which are then interactively placed into different classes.
References-found: 42

