URL: ftp://ftp.eecs.umich.edu/people/durfee/smc-dsn91.ps.Z
Refering-URL: http://ai.eecs.umich.edu/diag/CADS.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Partial Global Planning: A Coordination Framework for Distributed Hypothesis Formation  
Author: Edmund H. Durfee Victor R. Lesser 
Keyword: Cooperative Problem Solving, Distributed AI, Interpretation, Vehicle Monitoring, Distributed Computing, Blackboard Systems, Planning, Negotiation  
Note: 0 This research has been sponsored, in part, by the National Science Foundation under CER Grant DCR-8500332, by the National Science Foundation under under RIA Grant IRI-9010645 and CTCT Grant IRI-9015423, and by the Office of Naval Research under University Research Initiative Grant Contract N00014-86-K-0764, and under DARPA Contracts N00014-79-C-0439 and N00014-89-J-1877.  
Address: Ann Arbor, MI 48109 Amherst, MA 01003  
Affiliation: Dept. of EE and CS Dept. of Comp. and Info Science University of Michigan University of Massachusetts  
Abstract: For distributed sensor network applications, a practical approach to generating complete interpretations from distributed data must coordinate how separate, concurrently-running systems form, exchange, and fuse their individual hypotheses to form consistent interpretations. Partial global planning provides a framework for coordinating multiple AI systems that are cooperating in a distributed sensor network. By combining a variety of coordination techniques into a single, unifying framework, partial global planning enables separate AI systems to reason about their roles and responsibilities as part of group problem solving, and to modify their planned processing and communication actions to act as a more coherent team. Partial global planning is uniquely suited for coordinating systems that are working in continuous, dynamic, and unpredictable domains because it interleaves coordination with action and allows systems to make effective decisions despite incomplete and possibly obsolete information about network activity. We have implemented and extensively evaluated partial global planning in a simulated vehicle monitoring application, and have identified promising extensions to our framework. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Alan H. Bond and Les Gasser. </editor> <booktitle> Readings in Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kauf-mann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: CDPS has garnered a small but growing research community over the last 10 years <ref> [1, 22, 25] </ref>. While most CDPS researchers have AI backgrounds and use AI methodologies, they have been drawn to the study of CDPS from different motivations.
Reference: [2] <author> Stephanie Cammarata, David McArthur, and Randall Steeb. </author> <title> Strategies of cooperation in distributed problem solving. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 767-770, </pages> <institution> Karlsruhe, Federal Republic of Germany, </institution> <month> August </month> <year> 1983. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 102-105, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Other techniques involving contracting and negotiation have addressed applications 7 for communication network management [3], for manufacturing systems [32], and for choosing a leading controller for rerouting air traffic <ref> [2] </ref>. Result-Sharing. While the emphasis in contracting is in distributing tasks that are assumed to initially arise in one location, result-sharing concentrates on problem domains where tasks are inherently and possibly unpredictably distributed [35]. <p> When multiple agents are involved, the plans usually include synchronization actions between the agents to enforce important orderings between 9 their actions. Multiagent plans can be formed by a single, centralized agent <ref> [2, 24] </ref>, or the planning itself can be distributed among multiple agents [4, 33]. <p> Because DSN tasks are very dynamic and unpredictable, planning for DSN interpretation tasks cannot assume detailed coordination, but instead must coordinate at a more abstract level in order to maintain flexibility and recover from unexpected events. Thus, although multiagent planning has been used in simplified air-traffic control problems <ref> [2] </ref>, traditional multiagent planning systems are unsuited for the dynamic behavior of DSNs. 2.2 DSN Requirements To be fully successful in the type of DSN task exemplified by distributed vehicle monitoring, a technique for coordination must incorporate the strengths of all of these CDPS approaches, allowing nodes to: * dynamically decompose
Reference: [3] <author> Susan E. Conry, Robert A. Meyer, and Victor R. Lesser. </author> <title> Multistage negotiation in distributed planning. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 367-384. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1988. </year>
Reference-contexts: Thus, contractors and managers mutually select each other. Mutual selection is a characteristic of the protocol that sets it apart from simpler mechanisms for coordination where "masters" unilaterally decide what tasks "slaves" will perform. Other techniques involving contracting and negotiation have addressed applications 7 for communication network management <ref> [3] </ref>, for manufacturing systems [32], and for choosing a leading controller for rerouting air traffic [2]. Result-Sharing. While the emphasis in contracting is in distributing tasks that are assumed to initially arise in one location, result-sharing concentrates on problem domains where tasks are inherently and possibly unpredictably distributed [35].
Reference: [4] <author> Daniel D. Corkill. </author> <title> Hierarchical planning in a distributed environment. </title> <booktitle> In Proceedings of the Sixth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 168-175, </pages> <address> Cambridge, Massachusetts, </address> <month> August </month> <year> 1979. </year> <note> (An extended version was published as Technical Report 79-13, </note> <institution> Department of Computer and Information Science, University of Massachusetts, </institution> <address> Amherst, Massachusetts 01003, </address> <month> February </month> <year> 1979.). </year>
Reference-contexts: When multiple agents are involved, the plans usually include synchronization actions between the agents to enforce important orderings between 9 their actions. Multiagent plans can be formed by a single, centralized agent [2, 24], or the planning itself can be distributed among multiple agents <ref> [4, 33] </ref>.
Reference: [5] <author> Daniel D. Corkill and Victor R. Lesser. </author> <title> The use of meta-level control for coordination in a distributed problem solving network. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 748-756, </pages> <institution> Karlsruhe, Federal Republic of Germany, </institution> <month> August </month> <year> 1983. </year> <note> (Also appeared in Computer Architectures for Artificial Intelligence Applications, </note> <editor> Benjamin W. Wah and G.-J. Li, editors, </editor> <publisher> IEEE Computer Society Press, </publisher> <pages> pages 507-515, </pages> <year> 1986). </year>
Reference-contexts: CDPS researchers have used organizational concepts to propose alternative perspectives on how groups of problem solvers coordinate their actions, including using organizational structuring as a form of meta-level control <ref> [5] </ref>, viewing coordination as a process of organizing based on settling and unsettling sets of questions [23], and applying organizational intuitions such as the scientific community metaphor [26].
Reference: [6] <author> Daniel David Corkill. </author> <title> A Framework for Organizational Self-Design in Distributed Problem Solving Networks. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, </institution> <month> February </month> <year> 1983. </year> <note> (Also published as Technical Report 82-33, </note> <institution> Department of Computer and Information Science, University of Massachusetts, </institution> <address> Amherst, Massachusetts 01003, </address> <month> December </month> <year> 1982.). </year>
Reference-contexts: Of particular interest to DSN applications is the work on organizational structuring to control how nodes in a DSN form and exchange partial solutions <ref> [6] </ref>. This work explored differences between hierarchical and lateral styles of problem solving, and showed how a result-sharing approach could be constrained to work effectively.
Reference: [7] <author> Randall Davis and Reid G. Smith. </author> <title> Negotiation as a metaphor for distributed problem solving. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 63-109, </pages> <year> 1983. </year>
Reference-contexts: This view of coordination as decomposing and distributing tasks is often called task-sharing [35]. Research in this area has principally focused on subtask allocation, and the most well-known research developed the Contract-Net protocol that allowed nodes to use a bidding process to distribute tasks <ref> [7, 34] </ref>. This technique was applied to a DSN task, with particular emphasis on initializing the network so that appropriate nodes were allocated to different sensor areas to ensure coverage.
Reference: [8] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Some initial thoughts on a generic architecture for cdps network control. </title> <booktitle> In Proceedings of the 1989 Distributed AI Workshop, </booktitle> <pages> pages 73-94, </pages> <month> September 35 </month> <year> 1989. </year>
Reference-contexts: Goals can be related in various ways <ref> [8] </ref>, often based on characteristics of the domain. In vehicle monitoring, a typical relationship between goals to generate partial tracks is that they could be part of some larger goal to generate a complete track. <p> One direction that we are pursuing is in generalizing partial global planning to enable coordination in pursuing a wider range of goals and more varied relationships between the goals of different agents, including competitive goals among heterogeneous agents <ref> [8] </ref>. Moreover, because the timing of interactions is critical to effective coordination, we have been investigating the use of approximate processing techniques to enable agents to meet their time 32 constraints [9, 30], and for treating time constraints as being socially imposed and, hence, negotiable [11].
Reference: [9] <author> Keith S. Decker, Victor R. Lesser, and Robert C. Whitehair. </author> <title> Extending a blackboard architecture for approximate processing. </title> <journal> The Journal of Real-Time Systems, </journal> 2(1/2):47-79, 1990. 
Reference-contexts: Hence, although planning relys on having coarse approximations of potential goals, the perceived goals can change over time and planning will adapt. We describe techniques for economically forming and using approximations elsewhere <ref> [9, 30] </ref>. A plan represents future activity at two levels of detail. At a high level, it outlines the 14 major steps it expects to take in achieving the goal (s). <p> Moreover, because the timing of interactions is critical to effective coordination, we have been investigating the use of approximate processing techniques to enable agents to meet their time 32 constraints <ref> [9, 30] </ref>, and for treating time constraints as being socially imposed and, hence, negotiable [11].
Reference: [10] <author> Edmund H. Durfee. </author> <title> Coordination of Distributed Problem Solvers. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: This simplification clarifies the discussion below, but we have applied our framework to problems where data arrives incrementally as well <ref> [10] </ref>. If each node works independently, then node-1 will process the more strongly sensed data in the upper left corner first (the d 0 track), eventually recognizing that the signals cannot be correlated into a believable track. The signals thus must correspond to sensor noise or echoes in the environment. <p> While tailoring the PGP mechanisms to this application requires examining many domain-level details, the concepts and algorithms outlined in Section 3.4 form the core of the implementation. Details on the implementation are given elsewhere <ref> [10] </ref>. One of many possible distributed hypothesis formation strategies is implicit in our implementation of the knowledge-based heuristics that guide local and partial global planning.
Reference: [11] <author> Edmund H. Durfee. </author> <title> Towards intelligent real-time cooperative systems. </title> <booktitle> In Notes of the 1990 AAAI Spring Symposium on Planning in Uncertain, Unpredictable, or Changing Environments, </booktitle> <pages> pages 29-33, </pages> <month> March </month> <year> 1990. </year> <note> (Available in University of Maryland Systems Research Center technical report Planning in Uncertain, </note> <editor> Unpredictable, </editor> <title> or Changing Environments (SRC-TR-90-45), </title> <publisher> James Hendler (ed.)). </publisher>
Reference-contexts: Moreover, because the timing of interactions is critical to effective coordination, we have been investigating the use of approximate processing techniques to enable agents to meet their time 32 constraints [9, 30], and for treating time constraints as being socially imposed and, hence, negotiable <ref> [11] </ref>.
Reference: [12] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Incremental planning to control a blackboard-based problem solver. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 58-64, </pages> <address> Philadelphia, Pennsylvania, </address> <month> August </month> <year> 1986. </year>
Reference-contexts: A plan also contains details of specific primitive actions to achieve the next major plan step. As a plan is pursued, new details are added incrementally <ref> [12] </ref>. Details can also be added in reaction to a changing situation without affecting the major plan steps.
Reference: [13] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Using partial global plans to coordinate distributed problem solvers. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 875-883, </pages> <address> Milan, Italy, </address> <month> August </month> <year> 1987. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 285-293, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: We have developed partial global planning as a general coordination framework for solving these problems. Using a distributed vehicle monitoring application as the context for discussion, we have previously described our framework at a conceptual level <ref> [13] </ref>, and at this level have illustrated its ability to balance predictability and responsiveness among problem solvers [15] and to enable task passing as well as result sharing [16]. In contrast, our objective in this paper is to solidify how the conceptual framework maps into the particular application domain. <p> In this section, we first investigate whether partial global planning indeed allows nodes to coordinate in the variety of ways needed, and to do this we go beyond our previous descriptions <ref> [13] </ref> by providing a detailed look at the concurrent behaviors of nodes. We then explore how alternative organizations perform as the problems are scaled up, leading to important observations that have motivated much of our ongoing research. 25 4.2.1 Flexible Coordination and Meta-Level Organizations.
Reference: [14] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Incremental planning to control a time-constrained, blackboard-based problem solver. </title> <journal> IEEE Transactions on Aerospace and Electronics Systems, </journal> <volume> 24(5) </volume> <pages> 647-662, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: steps rather than at individual operations, adapting to minor deviations in plans can be restricted to local modifications such as adding actions to form a desired result in a different way or deleting actions when the result they were intended to form has been formed serendipitously in some other way <ref> [14] </ref>. However, these local deviations can impact coordination when a node can no longer form and transmit an anticipated partial result at the expected time. <p> To enable a blackboard system to behave more predictably while still retaining some opportunistic capabilities, we implemented local planning mechanisms based on the concepts in Section 3.1. The details of these mechanisms are given elsewhere <ref> [14] </ref>, but the upshot is that the blackboard system can plan and represent its near-future problem-solving activities, both at a long-term strategy level, and at a detailed level. 24 Distributed Hypothesis Formation.
Reference: [15] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Predictability versus responsiveness: Coordinating problem solvers in dynamic domains. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 66-71, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Using a distributed vehicle monitoring application as the context for discussion, we have previously described our framework at a conceptual level [13], and at this level have illustrated its ability to balance predictability and responsiveness among problem solvers <ref> [15] </ref> and to enable task passing as well as result sharing [16]. In contrast, our objective in this paper is to solidify how the conceptual framework maps into the particular application domain.
Reference: [16] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Negotiating task decomposition and allocation using partial global planning. </title> <editor> In Les Gasser and Michael N. Huhns, editors, </editor> <booktitle> Distributed Artificial Intelligence, volume 2 of Research Notes in Artificial Intelligence, </booktitle> <pages> pages 229-243. </pages> <publisher> Pitman, </publisher> <year> 1989. </year>
Reference-contexts: Using a distributed vehicle monitoring application as the context for discussion, we have previously described our framework at a conceptual level [13], and at this level have illustrated its ability to balance predictability and responsiveness among problem solvers [15] and to enable task passing as well as result sharing <ref> [16] </ref>. In contrast, our objective in this paper is to solidify how the conceptual framework maps into the particular application domain. <p> The experiments we describe in Section 4.2 do not focus on issues in task relocation, but we have detailed them elsewhere <ref> [16] </ref>. ** Figure ?? about here ** 3.4.3 Autonomy and Conformity When a node receives a PGP from a node that has authority over it, it can adopt that PGP and modify its local plans accordingly in order to conform to the coordination decisions of the higher authority node.
Reference: [17] <author> Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill. </author> <title> Coherent cooperation among com-municating problem solvers. </title> <journal> IEEE Transactions on Computers, </journal> <note> C-36(11):1275-1291, Novem-ber 1987. (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 268-284, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: On the other hand, the more freedom a node has, the more difficult it is for other nodes to anticipate its actions <ref> [17] </ref>. Thus, it appeared that additional, more dynamic, mechanisms must augment the use of organizations|mechanisms that allow nodes to communicate about which of their possible roles they were currently playing. Planning. <p> We thus can conclude that relatively static organizations should be flexible to allow nodes to undertake whatever tasks are currently pending, but nodes should be able to dynamically update each other regarding which of their possible roles they are currently filling <ref> [17] </ref>. A node's plans embody the situation-specific expectations of activity that nodes need to refine their organizational knowledge dynamically. In our partial global planning framework, therefore, nodes communicate selected plan information in order to model near-term node activities within the more general, long-term organizational structure.
Reference: [18] <author> Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill. </author> <title> Cooperation through communication in a distributed problem solving network. </title> <editor> In Michael N. Huhns, editor, </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, chapter 2, </booktitle> <pages> pages 29-58. </pages> <publisher> Pitman, </publisher> <year> 1987. </year> <editor> (Also in S. Robertson, W. Zachary, and J. Black (eds.), </editor> <booktitle> Cognition, Computing, and Cooperation, </booktitle> <publisher> Ablex 1990.). </publisher>
Reference-contexts: Decisions about which partial results to transmit are based on the conflicting desires of trying to send predictive results in a timely manner (which leads to early transmissions) and trying to send few, more complete, results (which leads to delaying transmissions) <ref> [18] </ref>. The partial global planning mechanisms explicitly consider both of these desires as they search through the sequence of planned-actions to identify predictive results and to find the portions of the overall result that each participating node should form so that the complete result can be constructed most quickly.
Reference: [19] <author> Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill. </author> <title> Cooperative distributed problem solving. </title> <editor> In Avron Barr, Paul R. Cohen, and Edward A. Feigenbaum, editors, </editor> <booktitle> The Handbook of Artificial Intelligence, volume IV, chapter XVII, </booktitle> <pages> pages 83-137. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Our approach falls in the area where these fields overlap, called cooperative distribute problem solving (CDPS), which is concerned with how multiple intelligent systems can reason about their individual and collective behaviors in order to cooperatively solve large problems <ref> [19] </ref>. CDPS has garnered a small but growing research community over the last 10 years [1, 22, 25]. While most CDPS researchers have AI backgrounds and use AI methodologies, they have been drawn to the study of CDPS from different motivations.
Reference: [20] <author> Edmund H. Durfee and Thomas A. Montgomery. </author> <title> A hierarchical protocol for coordinating mul-tiagent behaviors. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 86-93, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: This capability is an important direction of our ongoing research <ref> [20] </ref>. 31 5 Conclusions Partial global planning combines abilities for task-sharing, result-sharing, planning, and organizational structuring into a single unified framework that is both powerful and practical. <p> have also been extending the representation to allow intelligent agents to communicate and reason about not only their plans and goals, but also about their temporal and spatial relationships, their memberships in temporary or permanent teams, and their long-term motivations that led them to adopt their current goals and plans <ref> [20] </ref>. This work builds on partial global planning to more completely combine theories from organizational science and operations research with AI concepts.
Reference: [21] <author> Lee D. Erman, Frederick Hayes-Roth, Victor R. Lesser, and D. Raj Reddy. </author> <title> The Hearsay-II speech-understanding system: Integrating knowledge to resolve uncertainty. </title> <journal> Computing Surveys, </journal> <volume> 12(2) </volume> <pages> 213-253, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: As vehicles move among the sensors, information about a sig-nal's approximate location, frequency class, and strength is supplied at discrete times to the corresponding interpretation nodes. Local Hypothesis Formation. A node is an AI system based on the blackboard architecture originally built for speech signal interpretation <ref> [21, 31] </ref>. In the blackboard paradigm, a number of processing elements, called knowledge sources (KSs), communicate through a shared data structure (the blackboard) to incrementally construct interpretations of data.
Reference: [22] <editor> Les Gasser and Michael N. Huhns, editors. </editor> <booktitle> Distributed Artificial Intelligence, volume 2 of Research Notes in Artificial Intelligence. </booktitle> <publisher> Pitman, </publisher> <year> 1989. </year>
Reference-contexts: CDPS has garnered a small but growing research community over the last 10 years <ref> [1, 22, 25] </ref>. While most CDPS researchers have AI backgrounds and use AI methodologies, they have been drawn to the study of CDPS from different motivations.
Reference: [23] <author> Les Gasser and Nicolas Rouquette. </author> <title> Representing and using organizational knowledge in distributed AI systems. </title> <booktitle> In Proceedings of the 1988 Distributed AI Workshop, </booktitle> <month> May </month> <year> 1988. </year>
Reference-contexts: CDPS researchers have used organizational concepts to propose alternative perspectives on how groups of problem solvers coordinate their actions, including using organizational structuring as a form of meta-level control [5], viewing coordination as a process of organizing based on settling and unsettling sets of questions <ref> [23] </ref>, and applying organizational intuitions such as the scientific community metaphor [26]. Of particular interest to DSN applications is the work on organizational structuring to control how nodes in a DSN form and exchange partial solutions [6].
Reference: [24] <author> Michael Georgeff. </author> <title> Communication and interaction in multi-agent planning. </title> <booktitle> In Proceedings of the Third National Conference on Artificial Intelligence, </booktitle> <pages> pages 125-129, </pages> <address> Washington, D.C., </address> <month> August </month> <year> 1983. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 200-204, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: When multiple agents are involved, the plans usually include synchronization actions between the agents to enforce important orderings between 9 their actions. Multiagent plans can be formed by a single, centralized agent <ref> [2, 24] </ref>, or the planning itself can be distributed among multiple agents [4, 33].
Reference: [25] <editor> Michael Huhns, editor. </editor> <booktitle> Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: CDPS has garnered a small but growing research community over the last 10 years <ref> [1, 22, 25] </ref>. While most CDPS researchers have AI backgrounds and use AI methodologies, they have been drawn to the study of CDPS from different motivations.
Reference: [26] <author> William A. Kornfeld and Carl E. Hewitt. </author> <title> The scientific community metaphor. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <note> SMC-11(1):24-33, January 1981. (Also published 37 in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 311-320, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: to propose alternative perspectives on how groups of problem solvers coordinate their actions, including using organizational structuring as a form of meta-level control [5], viewing coordination as a process of organizing based on settling and unsettling sets of questions [23], and applying organizational intuitions such as the scientific community metaphor <ref> [26] </ref>. Of particular interest to DSN applications is the work on organizational structuring to control how nodes in a DSN form and exchange partial solutions [6]. This work explored differences between hierarchical and lateral styles of problem solving, and showed how a result-sharing approach could be constrained to work effectively.
Reference: [27] <author> Victor R. Lesser and Daniel D. Corkill. </author> <title> Functionally accurate, cooperative distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> SMC-11(1):81-96, </volume> <month> January </month> <year> 1981. </year>
Reference-contexts: Because of the uncertainty they face, nodes must be able to recover from incorrect initial decisions and tolerate inconsistencies in their partial solutions. Result-sharing through iterative exchanges of tentative, uncertain information has been termed functionally-accurate, cooperative <ref> [27] </ref>. Considering how differently task-sharing and result-sharing approaches view cooperative problem solving, it is interesting to note that DSNs have been a fertile domain for studying each approach.
Reference: [28] <author> Victor R. Lesser and Daniel D. Corkill. </author> <title> The Distributed Vehicle Monitoring Testbed: A tool for investigating distributed problem solving networks. </title> <journal> AI Magazine, </journal> <volume> 4(3) </volume> <pages> 15-33, </pages> <month> Fall </month> <year> 1983. </year> <note> (Also published in Blackboard Systems, </note> <editor> Robert S. Engelmore and Anthony Morgan, </editor> <booktitle> editors, </booktitle> <pages> pages 353-386, </pages> <note> Addison-Wesley, 1988 and in Readings from AI Magazine: Volumes 1-5, </note> <editor> Robert Engelmore, </editor> <booktitle> editor, </booktitle> <pages> pages 69-85, </pages> <publisher> AAAI, </publisher> <address> Menlo Park, California, </address> <year> 1988). </year>
Reference-contexts: The Distributed Vehicle Monitoring Testbed. The distributed vehicle monitoring testbed (DVMT) is a flexible, instrumented research tool for studying cooperative distributed problem solving <ref> [28] </ref>. The DVMT simulates a distributed sensor network, where each sensor detects acoustic signals and sends signal information to one or more problem-solving 23 systems for interpretation.
Reference: [29] <author> Victor R. Lesser and Lee D. Erman. </author> <title> Distributed interpretation: A model and experiment. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1144-1163, </volume> <month> December </month> <year> 1980. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 120-139, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Node-3 will later extend this track to include d 3 , and then d 4 , and so on. Node-3 should therefore make a judicious decision about when it has built a sufficiently large partial result to make communication worthwhile <ref> [29] </ref>. As data arrives and problem solving proceeds, nodes that initially were underutilized might become overly burdened with processing data. For example, if data arrives over time, node-2 is initially idle, but once it begins receiving data the noise in its data overwhelm it quickly.
Reference: [30] <author> Victor R. Lesser, Jasmina Pavlin, and Edmund H. Durfee. </author> <title> Approximate processing in real-time problem solving. </title> <journal> AI Magazine, </journal> <volume> 9(1) </volume> <pages> 49-61, </pages> <month> Spring </month> <year> 1988. </year> <note> (Also published in Blackboard Architectures and Applications, </note> <editor> V. Jagannathan, R. Dodhiawala, and L. Baum, editors, </editor> <publisher> Academic Press, 1989.). </publisher>
Reference-contexts: Hence, although planning relys on having coarse approximations of potential goals, the perceived goals can change over time and planning will adapt. We describe techniques for economically forming and using approximations elsewhere <ref> [9, 30] </ref>. A plan represents future activity at two levels of detail. At a high level, it outlines the 14 major steps it expects to take in achieving the goal (s). <p> Moreover, because the timing of interactions is critical to effective coordination, we have been investigating the use of approximate processing techniques to enable agents to meet their time 32 constraints <ref> [9, 30] </ref>, and for treating time constraints as being socially imposed and, hence, negotiable [11].
Reference: [31] <author> H. Penny Nii. </author> <title> Blackboard systems: The blackboard model of problem solving and the evolution of blackboard architectures. </title> <journal> AI Magazine, </journal> <volume> 7(2) </volume> <pages> 38-53, </pages> <month> Summer </month> <year> 1986. </year>
Reference-contexts: As vehicles move among the sensors, information about a sig-nal's approximate location, frequency class, and strength is supplied at discrete times to the corresponding interpretation nodes. Local Hypothesis Formation. A node is an AI system based on the blackboard architecture originally built for speech signal interpretation <ref> [21, 31] </ref>. In the blackboard paradigm, a number of processing elements, called knowledge sources (KSs), communicate through a shared data structure (the blackboard) to incrementally construct interpretations of data.
Reference: [32] <author> H. Van Dyke Parunak. </author> <title> Manufacturing experience with the contract net. </title> <editor> In Michael N. Huhns, editor, </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, chapter 10, </booktitle> <pages> pages 285-310. </pages> <publisher> Pitman, </publisher> <year> 1987. </year>
Reference-contexts: Mutual selection is a characteristic of the protocol that sets it apart from simpler mechanisms for coordination where "masters" unilaterally decide what tasks "slaves" will perform. Other techniques involving contracting and negotiation have addressed applications 7 for communication network management [3], for manufacturing systems <ref> [32] </ref>, and for choosing a leading controller for rerouting air traffic [2]. Result-Sharing. While the emphasis in contracting is in distributing tasks that are assumed to initially arise in one location, result-sharing concentrates on problem domains where tasks are inherently and possibly unpredictably distributed [35].
Reference: [33] <author> Jeffrey S. Rosenschein and Michael R. Genesereth. </author> <title> Communication and cooperation among logic-based agents. </title> <booktitle> In Proceedings of the Sixth Phoenix Conference on Computers and Communications, </booktitle> <pages> pages 594-600, </pages> <address> Scottsdale, AZ, </address> <month> February </month> <year> 1987. </year>
Reference-contexts: When multiple agents are involved, the plans usually include synchronization actions between the agents to enforce important orderings between 9 their actions. Multiagent plans can be formed by a single, centralized agent [2, 24], or the planning itself can be distributed among multiple agents <ref> [4, 33] </ref>.
Reference: [34] <author> Reid G. Smith. </author> <title> The contract net protocol: High-level communication and control in a distributed problem solver. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1104-1113, </volume> <month> December </month> <year> 1980. </year>
Reference-contexts: This view of coordination as decomposing and distributing tasks is often called task-sharing [35]. Research in this area has principally focused on subtask allocation, and the most well-known research developed the Contract-Net protocol that allowed nodes to use a bidding process to distribute tasks <ref> [7, 34] </ref>. This technique was applied to a DSN task, with particular emphasis on initializing the network so that appropriate nodes were allocated to different sensor areas to ensure coverage.
Reference: [35] <author> Reid G. Smith and Randall Davis. </author> <title> Frameworks for cooperation in distributed problem solving. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <note> SMC-11(1):61-70, January 1981. (Also 38 published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 61-70, </address> <publisher> Morgan Kaufmann, 1988.). </publisher> <pages> 39 </pages>
Reference-contexts: Hence, the underlying perspective is one where there is one big problem and many potential problem solvers, and the goal of coordination is to utilize the problem solvers to the utmost. This view of coordination as decomposing and distributing tasks is often called task-sharing <ref> [35] </ref>. Research in this area has principally focused on subtask allocation, and the most well-known research developed the Contract-Net protocol that allowed nodes to use a bidding process to distribute tasks [7, 34]. <p> Result-Sharing. While the emphasis in contracting is in distributing tasks that are assumed to initially arise in one location, result-sharing concentrates on problem domains where tasks are inherently and possibly unpredictably distributed <ref> [35] </ref>. In such domains, a number of problem solvers are distributed such that each has its own local information that it uses to solve problems, but the problems that the nodes are solving are potentially related.
References-found: 35

