URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/import/papers/printed/qpoly.ps
Refering-URL: 
Root-URL: 
Title: An Exact Quantum Polynomial-Time Algorithm for Simon's Problem  
Author: Gilles Brassard Peter Hyer 
Address: C.P. 6128, succursale centre-ville Montreal (Quebec) Canada H3C 3J7  Campusvej 55  Denmark  
Affiliation: Departement IRO Universite de Montreal  Dept. of Math. and Computer Science Odense University  Odense M  
Note: quant-ph/9704027  
Pubnum: DK5230  
Email: Email: brassard@iro.umontreal.ca  Email: u2pi@imada.ou.dk  
Date: 14 Apr 1997  
Abstract: We investigate the power of quantum computers when they are required to return an answer that is guaranteed to be correct after a time that is upper-bounded by a polynomial in the worst case. We show that a natural generalization of Simon's problem can be solved in this way, whereas previous algorithms required quantum polynomial time in the expected sense only, without upper bounds on the worst-case running time. This is achieved by generalizing both Simon's and Grover's algorithms and combining them in a novel way. It follows that there is a decision problem that can be solved in exact quantum polynomial time, which would require expected exponential time on any classical bounded-error probabilistic computer if the data is supplied as a black box. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Barenco, </author> <title> Quantum physics and computers, </title> <journal> Contemporary Physics, </journal> <volume> Vol. 38, </volume> <year> 1996, </year> <pages> pp. 357 389. </pages>
Reference-contexts: Since the final application of Proposition 2 also runs in polyno mial time, the claimed running time follows. fl 3 Simon's quantum algorithm We assume in this extended abstract that the reader is familiar with the basic notions of quantum computing <ref> [1, 6, 10] </ref>. We denote a register holding m qubits, all in the zero state, by j0 m i. When its dimension is of no importance, we sometimes just write j0i. For any nonempty subset X G, let jXi denote the equally-weighted superposition 1 p jXj x2X jxi.
Reference: [2] <author> A. Barenco, C. H. Bennett, R. Cleve, D. P. DiVin-cenzo, N. Margolus, P. Shor, T. Sleator, J. A. Smolin and H. Weinfurter, </author> <title> Elementary gates for quantum computation, </title> <journal> Physical Review A, </journal> <volume> Vol. 52, </volume> <year> 1995, </year> <pages> pp. 3457 3467. </pages>
Reference-contexts: The phase-change operator S f0g can be applied in time linear in the number of qubits, while S A can be applied by computing U twice and doing a constant amount of addi tional work <ref> [2] </ref>.
Reference: [3] <author> C. H. Bennett, </author> <title> Logical reversibility of computation, </title> <journal> IBM Journal of Research and Development, </journal> <volume> Vol. 17, </volume> <year> 1973, </year> <pages> pp. 525 532. </pages>
Reference-contexts: A classical function f is evaluated reversibly by the operation U f which maps jxijyi to jxijy f (x)i <ref> [3] </ref>. Note that a second application of U f will restore the second register to its original value since jxijy f (x) f (x)i = jxijyi.
Reference: [4] <author> E. Bernstein and U. Vazirani, </author> <title> Quantum complexity theory, </title> <booktitle> Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1993, </year> <pages> pp. 11 20. </pages>
Reference-contexts: Later, Bernstein and Vazirani provided a relativized problem that can be solved in exact quantum polynomial time, but not in time n o (log n) on any classical bounded-error probabilistic machine <ref> [4] </ref>. More recently, we constructed such a problem that would require exponential time on any classical bounded-error probabilistic machine [11]. <p> A subset X G is linearly independent in G if no proper subset of X generates hXi. If H 6 G is a subgroup then g 2 G is called a representative for the coset g H. 2 QP has been called EQP (E for Exact) by some authors <ref> [4] </ref>. Define a bilinear map G fi G ! Z 2 by g h = i=1 where g = (g 1 ; : : : ; g n ) and h = (h 1 ; : : : ; h n ).
Reference: [5] <author> E. Bernstein and U. Vazirani, </author> <title> Quantum complexity theory, </title> <note> final version of [4]. To appear in SIAM Journal on Computing. </note>
Reference-contexts: Also, in the soon-to-be-published journal version of their paper, Bernstein and Vazirani extend their result to a decision problem <ref> [5] </ref>. 1 bounded-error probabilistic computation, even for decision problems. Of independent interest are the techniques developed to obtain our results. Two of the most fundamental techniques discovered so far in the field of quantum computation are Simon's [18] and Grover's [15].
Reference: [6] <author> A. Berthiaume, </author> <title> Quantum computation, in Complexity Theory Retrospective II, </title> <editor> L. Hemaspaandra and A. Selman (editors), </editor> <publisher> Springer-Verlag, to appear. </publisher>
Reference-contexts: Since the final application of Proposition 2 also runs in polyno mial time, the claimed running time follows. fl 3 Simon's quantum algorithm We assume in this extended abstract that the reader is familiar with the basic notions of quantum computing <ref> [1, 6, 10] </ref>. We denote a register holding m qubits, all in the zero state, by j0 m i. When its dimension is of no importance, we sometimes just write j0i. For any nonempty subset X G, let jXi denote the equally-weighted superposition 1 p jXj x2X jxi.
Reference: [7] <author> A. Berthiaume and G. Brassard, </author> <title> The quantum challenge to structural complexity theory, </title> <booktitle> Proceedings of the 7th Annual IEEE Structure in Complexity Theory Conference, </booktitle> <year> 1992, </year> <pages> pp. 132 137. </pages>
Reference-contexts: This provides the first evidence of an exponential gap between the power of exact quantum computation and that of classical 1 The DeutschJozsa problem gives rise to an oracle decision problem <ref> [7, 8] </ref>. Also, in the soon-to-be-published journal version of their paper, Bernstein and Vazirani extend their result to a decision problem [5]. 1 bounded-error probabilistic computation, even for decision problems. Of independent interest are the techniques developed to obtain our results.
Reference: [8] <author> A. Berthiaume and G. Brassard, </author> <title> Oracle quantum computing, </title> <journal> Journal of Modern Optics, </journal> <volume> Vol. 41, </volume> <year> 1994, </year> <pages> pp. 2521 2535. </pages>
Reference-contexts: This provides the first evidence of an exponential gap between the power of exact quantum computation and that of classical 1 The DeutschJozsa problem gives rise to an oracle decision problem <ref> [7, 8] </ref>. Also, in the soon-to-be-published journal version of their paper, Bernstein and Vazirani extend their result to a decision problem [5]. 1 bounded-error probabilistic computation, even for decision problems. Of independent interest are the techniques developed to obtain our results.
Reference: [9] <author> M. Boyer, G. Brassard, P. Hyer and A. Tapp, </author> <title> Tight Bounds on Quantum Searching, </title> <booktitle> Proceedings of the 4th Workshop on Physics and Computation, New England Complex Systems Institute, </booktitle> <year> 1996, </year> <pages> pp. </pages> <note> 36 43. Available on Los Alamos e-Print archive (http://xxx.lanl.gov) as quant-ph/9605034. </note>
Reference-contexts: Using a generalization of the technique in Grover's algorithm [15], we encapsulate A in a larger quantum algorithm Q such that the probability that Q returns a good solution is significantly better compared to the probability that A returns a good solution. In <ref> [9] </ref>, it is shown that if A = W n 2 is the Walsh-Hadamard transform and the probability of success of A is exactly one quarter (a = 1=4) then Q can be constructed such that it succeeds with certainty.
Reference: [10] <editor> G. Brassard, </editor> <booktitle> A quantum jump in computer science, in Computer Science Today, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 1000, </volume> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 1 14. </pages>
Reference-contexts: Since the final application of Proposition 2 also runs in polyno mial time, the claimed running time follows. fl 3 Simon's quantum algorithm We assume in this extended abstract that the reader is familiar with the basic notions of quantum computing <ref> [1, 6, 10] </ref>. We denote a register holding m qubits, all in the zero state, by j0 m i. When its dimension is of no importance, we sometimes just write j0i. For any nonempty subset X G, let jXi denote the equally-weighted superposition 1 p jXj x2X jxi.
Reference: [11] <author> G. Brassard and P. Hyer, </author> <title> On the power of exact quantum polynomial time, </title> <note> unpublished, 1996. Available on Los Alamos e-Print archive (http://xxx.lanl.gov) as quant-ph/9612017. </note>
Reference-contexts: More recently, we constructed such a problem that would require exponential time on any classical bounded-error probabilistic machine <ref> [11] </ref>. None of these problems were decision problems. 1 Here we recast Simon's problem in a natural group-theoretic framework, we generalize it, and we give an exact quantum polynomial-time algorithm to solve it.
Reference: [12] <author> R. Cleve, </author> <title> A note on computing Fourier transformation by quantum programs, </title> <institution> Department of Computer Science, University of Calgary, </institution> <year> 1994. </year>
Reference-contexts: Yet, this suffices to imply a ZQP algorithm for the Abelian subgroup problem. A direct generalization of our QPalgorithm would require the solutions to two problems. The first problem is that we must be capable of computing the Fourier transform F G exactly. Cleve <ref> [12] </ref> and Coppersmith [13], building on the work of Shor [17], showed that it can be applied exactly in polynomial time whenever G is of smooth order.
Reference: [13] <author> D. Coppersmith, </author> <title> An approximate Fourier transform useful in quantum factoring, </title> <institution> IBM T. J. Wat-son Research Report RC 19642, </institution> <address> Yorktown Heights, NY 10598, </address> <year> 1994. </year>
Reference-contexts: Yet, this suffices to imply a ZQP algorithm for the Abelian subgroup problem. A direct generalization of our QPalgorithm would require the solutions to two problems. The first problem is that we must be capable of computing the Fourier transform F G exactly. Cleve [12] and Coppersmith <ref> [13] </ref>, building on the work of Shor [17], showed that it can be applied exactly in polynomial time whenever G is of smooth order. Here the order of a group G is smooth if all its prime factors are at most log c jGj for some fixed constant c.
Reference: [14] <author> D. Deutsch and R. Jozsa, </author> <title> Rapid solution of problems by quantum computation, </title> <journal> Proceedings of the Royal Society, London, </journal> <volume> Vol. A439, </volume> <year> 1992, </year> <pages> pp. 553 558. </pages>
Reference-contexts: The study of exact quantum polynomial time is not new. The very first algorithm ever designed to demonstrate an advantage of quantum computers over classical computers, due to Deutsch and Jozsa <ref> [14] </ref>, was of this exact nature. However, it solved a problem that could be handled just as efficiently with a classical probabilistic computer, provided an arbitrarily small (one-sided) error probability is tolerated.
Reference: [15] <author> L. K. Grover, </author> <title> A fast quantum mechanical algorithm for database search, </title> <booktitle> Proceedings of the 28th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1996, </year> <pages> pp. 212 219. </pages>
Reference-contexts: Of independent interest are the techniques developed to obtain our results. Two of the most fundamental techniques discovered so far in the field of quantum computation are Simon's [18] and Grover's <ref> [15] </ref>. Here, we generalize both techniques and we show for the first time that they can be made to work together toward a common goal: our algorithm crucially requires the availability of both these tools. In this paper, we shall use the term ZQP algorithm (resp. <p> Write ji = jAi + jBi. Let a = hAjAi denote the probability that we measure a good solution, and similarly let b = hBjBi. Note that hAjBi = 0 and hence a + b = 1. Using a generalization of the technique in Grover's algorithm <ref> [15] </ref>, we encapsulate A in a larger quantum algorithm Q such that the probability that Q returns a good solution is significantly better compared to the probability that A returns a good solution. <p> To obtain this result, we use complex phases, whereas in Grover's original algorithm only the real phases 1 are needed <ref> [15] </ref>. Let - = p 1 denote the square root of 1. (Do not confuse imaginary with integer i.) The formal setting and the lemma are as follows. <p> Here jxj denotes the norm of x 2 C . Note that j (1; 1)i = ji = Aj0i. Now, instead of measuring j (1; 1)i = ji immediately, we add one Grover iteration before the measure ment. This Grover iteration is not the one from Grover's paper <ref> [15] </ref> but a generalized version defined as follows. Let the phase-change operator S A be defined by S A jiij i i = ( - jiij i i if i 2 A jiij i i if i 2 B. <p> Define the Grover iteration as G = A S f0g A 1 S A : Straightforward calculations show that applying G on a superposition of the form j (k; l)i has the same kind of effect as the one in <ref> [15] </ref>. In particular, we have Gj (1; 1)i = j (2-(1 a) 1; -(1 2a))i: Let Q be the quantum algorithm in which we first apply A and then G. Then applying Q on input j0i produces Qj0i = Gj (1; 1)i and the first part of the lemma follows.
Reference: [16] <author> A. Yu. Kitaev, </author> <title> Quantum measurements and the Abelian stabilizer problem, </title> <type> manuscript, </type> <year> 1995. </year> <note> Available on Los Alamos e-Print archive (http://xxx.lanl.gov) as quant-ph/9511026. </note>
Reference-contexts: By a result of Kitaev <ref> [16] </ref>, for all finite additive Abelian groups G, the Fourier transform F G can be applied in polynomial time in log jGj. However, his method applies the transform not with perfection, but only with arbitrary good precision (see [16] for details). <p> By a result of Kitaev <ref> [16] </ref>, for all finite additive Abelian groups G, the Fourier transform F G can be applied in polynomial time in log jGj. However, his method applies the transform not with perfection, but only with arbitrary good precision (see [16] for details). Yet, this suffices to imply a ZQP algorithm for the Abelian subgroup problem. A direct generalization of our QPalgorithm would require the solutions to two problems. The first problem is that we must be capable of computing the Fourier transform F G exactly.
Reference: [17] <author> P. W. Shor, </author> <title> Algorithms for quantum computation: Discrete logarithms and factoring, </title> <booktitle> Proceedings of the 35th Annual IEEE Symposium on the Foundations of Computer Science, </booktitle> <year> 1994, </year> <pages> pp. </pages> <note> 124 134. Final version to appear in SIAM Journal on Computing under title Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer. </note>
Reference-contexts: Canada's NSERC, Quebec's FCAR, and the Canada Council. y Supported in part by the ESPRIT Long Term Research Programme of the EU under project number 20244 (ALCOM-IT). it may run on any given instance if it keeps being unlucky. (The same can be said about Shor's celebrated quantum factoring algorithm <ref> [17] </ref>.) In this paper, we address the issue of exact quantum polynomial time, which concerns problems that quantum computers can solve in guaranteed worst-case polynomial time with zero error probability. <p> A direct generalization of our QPalgorithm would require the solutions to two problems. The first problem is that we must be capable of computing the Fourier transform F G exactly. Cleve [12] and Coppersmith [13], building on the work of Shor <ref> [17] </ref>, showed that it can be applied exactly in polynomial time whenever G is of smooth order. Here the order of a group G is smooth if all its prime factors are at most log c jGj for some fixed constant c. <p> The discrete logarithm problem is given p, a generator of Z ? p , and an element a 2 Z ? p , find 0 r &lt; p such that r = a in Z ? p . Shor gave in <ref> [17] </ref> a ZQP algorithm for this problem. In our language, his solution consists in a reduction to a problem equivalent to a special case of the Abelian subgroup problem, followed by an algorithm for that problem.
Reference: [18] <editor> D. R. Simon, </editor> <booktitle> On the power of quantum computation, Proceedings of the 35th Annual IEEE Symposium on the Foundations of Computer Science, </booktitle> <year> 1994, </year> <pages> pp. </pages> <note> 116 123. Final version to appear in SIAM Journal on Computing. 12 </note>
Reference-contexts: This belief has been seriously challenged by the theory of quantum computing. In particular, Simon <ref> [18] </ref> provided the first example of a problem that can be solved in polynomial time on a quantum computer, yet any classical bounded-error probabilistic algorithm would require exponential time if the data is supplied as a black box. <p> Of independent interest are the techniques developed to obtain our results. Two of the most fundamental techniques discovered so far in the field of quantum computation are Simon's <ref> [18] </ref> and Grover's [15]. Here, we generalize both techniques and we show for the first time that they can be made to work together toward a common goal: our algorithm crucially requires the availability of both these tools. In this paper, we shall use the term ZQP algorithm (resp. <p> the construction of an oracle under which there is a decision problem in QP that would not only lie outside of the classical class BPP which was known already [5]but that would require exponential time on any classical bounded-error probabilistic computer. 2 Simon's subgroup problem We first state Simon's problem <ref> [18] </ref>. Let n 1 be any integer and R any set representable on a quantum computer. Let () : f0; 1g n fi f0; 1g n ! f0; 1g n denote the bitwise exclusive-or, written using infix notation. <p> Problem: Find a generating set for H 0 . We say of such a function that it fulfills Simon's promise with respect to subgroup H 0 . In Simon's original problem <ref> [18] </ref>, H 0 is assumed to have order 2, that is, H 0 = f0; sg for some s 2 G and the problem is then to find s. We shall, however, in the rest of this paper, refer to the above problem as Simon's subgroup problem. Simon gave in [18] <p> <ref> [18] </ref>, H 0 is assumed to have order 2, that is, H 0 = f0; sg for some s 2 G and the problem is then to find s. We shall, however, in the rest of this paper, refer to the above problem as Simon's subgroup problem. Simon gave in [18] a very simple and beautiful quantum algorithm for solving the subgroup problem. We now review the main ideas behind that algorithm, but we use a language which is rather different from Simon's. <p> Moreover, the algorithm runs in time polynomial in n. From these two propositions, and since (H ? ) ? = H for all subgroups H, it follows that to solve Simon's subgroup problem it suffices to find a generating set for H ? 0 . In <ref> [18] </ref>, Simon proved a special case of Theorem 3 below, which gives an efficient quantum algorithm for finding a random element of H ? 0 with respect to the uniform probability dis tribution. <p> general algorithm and see if it turns out zero or one generator for H 0 . (Recall that Si-mon's original algorithm could distinguish these two cases with certainty after expected polynomial time, or alternatively it could distinguish them with bounded error probability after guaranteed worst-case polynomial time.) In his paper <ref> [18] </ref>, Simon proves the existence of an oracle O and a decision problem L such that (1) no classical probabilistic oracle machine that queries O fewer than 2 n=4 times on input 1 n can decide L with bounded error probability, and (2) deciding L given O reduces efficiently and deterministically
References-found: 18

