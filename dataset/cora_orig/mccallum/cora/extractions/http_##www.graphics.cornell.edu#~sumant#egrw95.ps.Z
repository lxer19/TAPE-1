URL: http://www.graphics.cornell.edu/~sumant/egrw95.ps.Z
Refering-URL: http://www.graphics.cornell.edu/~sumant/cv.html
Root-URL: 
Title: Linear Radiosity with Error Estimation  
Author: Sumanta N. Pattanaik and Kadi Bouatouch 
Date: February 28, 1996  
Address: 35042 RENNES CEDEX, France  
Affiliation: IRISA, Campus Universitaire de Beaulieu,  
Abstract: We present a simple and inexpensive method for computing the estimates of error in a hierarchical linear radiosity method. Similar to the approach used in [1] for constant radiosity method, we compute lower and upper linear bounds of the actual radiosity function over the surface elements. We carry out this by computing linear upper and lower bounds of the kernel of the radiosity equation. Also we compute these bounds in a form which makes trivial the effort of projecting the integral equation involving such kernels. We provide the hierarchical algorithm for computing the radiosity bounds. We derive the expression for computing error-estimates from these bounds. Finally we propose a refinement indicator for carrying out the link refinement. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Dani Lischinski, Brian Smits, and Don Greenberg. </author> <title> Bounds and error es 15 3(a) at various levels of subdivision. 16 radiosity and the bounds for constant and linear radiosity, along the dotted line of the scene. timates for radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <volume> 28(4) </volume> <pages> 67-74, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: That is why the adaptive refinement of radiosity via error estimation has not been a common practice. More recently we have come across the interesting work of Lischinski et al <ref> [1] </ref> where they have proposed a practical method of estimating this error. They have applied this to the constant radiosity computation method, and have demonstrated that the error estimation approach can lead to an improved method for computing radiosity solution. <p> The key to estimation of error is the computation of the lower and the upper bound of the radiosity function over the elements. Lischinski et al <ref> [1] </ref> have chosen to use the lower and upper bounds of the form-factor between the elements, i.e. the double integral of the kernel function of the integral equation, to compute the bounds of the radiosity function. <p> These functions are orthonormal and the 2D function set formed by combining these functions, is also orthonormal. If we assume that u; v in the range <ref> [1; +1] </ref>, are the parameters defined over a surface element, then we can construct the following orthonormal basis set for the whole environment: n (i) o 3 where n (i) o is the basis set over the surface element i, and n is the total number of elements. <p> B (s; t) = k (i) (i) X B k N k (s; t) All we have to do now is to write an algorithm to compute the unknown B (i) and B k s. 5.1 Algorithm for Computing Radiosity Bounds In <ref> [1] </ref> we have seen the adaptation of both the standard full matrix [4] and hierarchical radiosity [10] methods to the computation of the constant radiosity bounds. Here we shall extend the method of [1] to support the computation of linear radiosity bounds. <p> to compute the unknown B (i) and B k s. 5.1 Algorithm for Computing Radiosity Bounds In <ref> [1] </ref> we have seen the adaptation of both the standard full matrix [4] and hierarchical radiosity [10] methods to the computation of the constant radiosity bounds. Here we shall extend the method of [1] to support the computation of linear radiosity bounds. <p> For the upper bound computation, a little change is required to take care of the additional kernel elements. As in <ref> [1] </ref>, for each node element i we zero out all the K k;l coefficients corresponding to the dimmer elements till the condition P (i j) is satisfied. <p> The two main operations in the hierarchical solution method are: gathering at nodes and push/pull operation. Lower bound gathering at the nodes of the hierarchy are same as that in <ref> [1] </ref>. The upper bound gathering and the associated push/pull operations require special attention. We saw above, in the full matrix computation of upper bound, the convergence of the iterative solution requires ordering of contributors before any gathering is done. <p> For any node element in a hierarchy, the contributors are not only the ones specified in its links but also all those specified in the links of its parent and its ancestor nodes. That is why the algorithm in <ref> [1] </ref> collects all such links in a list called contribList. We have to do the same thing. But it is not enough. <p> Now we have all the modification necessary for writing a gathering algorithm for the lower and upper radiosity bound in a hierarchical framework. We have given these algorithms in figures 1 and 2. 6 Error Norms One of the main contributions of <ref> [1] </ref> is relating the error in the computed ra-diosity to the upper and lower bounds of the radiosity. Assuming that we are taking out computed radiosity as the average of the lower and upper bound ra-diosity functions then we can use the same relationship as [1] and derive below a quantitative <p> of the main contributions of <ref> [1] </ref> is relating the error in the computed ra-diosity to the upper and lower bounds of the radiosity. Assuming that we are taking out computed radiosity as the average of the lower and upper bound ra-diosity functions then we can use the same relationship as [1] and derive below a quantitative error estimate over each surface element. * (i) 2 fl (i) fl fl 2 k fi (i) (i) fi fi fl (i) fl fl where k:k is a functional norm.
Reference: [2] <author> Harold R. Zatz. </author> <title> Galerkin radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 213-220, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction Radiosity in an environment is governed by an integral equation of the following form <ref> [2] </ref>: B (i) (s; t) = E (i) (s; t) + (i) j=1 K (i j) (s; t; u; v)B (j) (u; v)dudv (1) where i and j are the indices of the surface elements, n is the total number of surface elements in the environment, (u; v) and (s; t) <p> In general, higher the degree of polynomial the better is the approximation. However, the expenses involved in the projection and in subsequent solution also grow with the degree of polynomial. Though there have been various attempts with piecewise polynomials of different degrees <ref> [5, 6, 7, 8, 2] </ref>, it is not very clear what is the most optimal degree of choice for radiosity computation. In this paper we have preferred to use a piecewise linear basis set. A piecewise linear basis set leads to linear (more correctly, bi-linear) radiosity over surface elements.
Reference: [3] <author> L. M. Delves and J. L. Mohamed. </author> <title> Computational Methods for Integral Equations. </title> <publisher> Cambridge University Press, </publisher> <year> 1985. </year>
Reference-contexts: However, error computation requires the knowledge of the actual solution which in general does not exist. Hence, instead of trying to compute the actual error, one aims to compute an estimate of its upper bound. Though theoretical expressions of error estimates for integral equation solution methods exist <ref> [3] </ref>, they do not lend themselves to practical use. That is why the adaptive refinement of radiosity via error estimation has not been a common practice.
Reference: [4] <author> Cindy M. Goral, Kenneth E. Torrance, Donald P. Greenberg, and Bennett Battaile. </author> <title> Modelling the interaction of light between diffuse surfaces. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings), </booktitle> <volume> 18(3) </volume> <pages> 212-222, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: As said earlier, radiosity solution proceeds by projection onto a set of basis functions. Piecewise polynomial functions are oftenly used for this projection. Among the various polynomials, piecewise constants, the lowest degree polynomials, have been the widely used basis functions <ref> [4] </ref> for radiosity computations. Use of piecewise constants leads to constant radiosity solution over surface elements. Radiosity functions are in general continuous and it is well known that piecewise constants make poor approximations to a continuous function. In general, higher the degree of polynomial the better is the approximation. <p> k (i) (i) X B k N k (s; t) All we have to do now is to write an algorithm to compute the unknown B (i) and B k s. 5.1 Algorithm for Computing Radiosity Bounds In [1] we have seen the adaptation of both the standard full matrix <ref> [4] </ref> and hierarchical radiosity [10] methods to the computation of the constant radiosity bounds. Here we shall extend the method of [1] to support the computation of linear radiosity bounds.
Reference: [5] <author> Nelson L. Max and Michael J. Allison. </author> <title> Linear radiosity approximation using vertex to vertex form-factors. </title> <editor> In David Kirk, editor, </editor> <title> Graphics Gems III. </title> <publisher> Academic Press, Inc, </publisher> <address> Boston, </address> <year> 1992. </year>
Reference-contexts: In general, higher the degree of polynomial the better is the approximation. However, the expenses involved in the projection and in subsequent solution also grow with the degree of polynomial. Though there have been various attempts with piecewise polynomials of different degrees <ref> [5, 6, 7, 8, 2] </ref>, it is not very clear what is the most optimal degree of choice for radiosity computation. In this paper we have preferred to use a piecewise linear basis set. A piecewise linear basis set leads to linear (more correctly, bi-linear) radiosity over surface elements.
Reference: [6] <author> Paul Heckbert. </author> <title> Discontinuity meshing for radiosity. </title> <booktitle> Third Eurographics Workshop on Rendering, </booktitle> <pages> pages 203-216, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: In general, higher the degree of polynomial the better is the approximation. However, the expenses involved in the projection and in subsequent solution also grow with the degree of polynomial. Though there have been various attempts with piecewise polynomials of different degrees <ref> [5, 6, 7, 8, 2] </ref>, it is not very clear what is the most optimal degree of choice for radiosity computation. In this paper we have preferred to use a piecewise linear basis set. A piecewise linear basis set leads to linear (more correctly, bi-linear) radiosity over surface elements.
Reference: [7] <author> Steven Gortler, Peter Schroder, Michel F. Cohen, and Pat Hanrahan. </author> <title> Wavelet radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 221-230, </pages> <year> 1993. </year>
Reference-contexts: In general, higher the degree of polynomial the better is the approximation. However, the expenses involved in the projection and in subsequent solution also grow with the degree of polynomial. Though there have been various attempts with piecewise polynomials of different degrees <ref> [5, 6, 7, 8, 2] </ref>, it is not very clear what is the most optimal degree of choice for radiosity computation. In this paper we have preferred to use a piecewise linear basis set. A piecewise linear basis set leads to linear (more correctly, bi-linear) radiosity over surface elements. <p> The method presented here has a similar flavor of the kernel approximation principle 5 used in the oracle process of <ref> [7] </ref>. The oracle approximates the kernel between an interacting surface element pair and used the magnitude of error in this approximation to decide on whether the link can be established or not. In a similar fashion, we first find out a linear approximation of the kernel. <p> We have chosen the extremes of their parametric domain i.e. -1 and +1 as the required points. Thus we have the necessary 16 kernel evaluation points as: f (-1,-1,-1,-1),. . . ,(1,1,1,1)g. Gortler et al <ref> [7] </ref> used Gauss quadrature points for the polynomial approximation in their oracle. This choice facilitated the subsequent Gauss quadrature for the evaluation of kernel coefficients. <p> The pushing operation also amounts to a re-parameterisation of the radiosity function defined in parent domain, to get the function defined in child's domain. This re-parameterisation is same as applying a push filter as done in the wavelet radiosity method <ref> [7] </ref>. The pull operation for lower/upper bound radiosity can be viewed as constructing the minimum/maximum bound of the radiosity function resulting from the combination of the child functions. So this can be performed exactly as was done for the kernel bound computation.
Reference: [8] <author> Roy Troutman and Nelson L. Max. </author> <title> Radiosity algorithms using higher order finite element methods. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 209-212, </pages> <year> 1993. </year>
Reference-contexts: In general, higher the degree of polynomial the better is the approximation. However, the expenses involved in the projection and in subsequent solution also grow with the degree of polynomial. Though there have been various attempts with piecewise polynomials of different degrees <ref> [5, 6, 7, 8, 2] </ref>, it is not very clear what is the most optimal degree of choice for radiosity computation. In this paper we have preferred to use a piecewise linear basis set. A piecewise linear basis set leads to linear (more correctly, bi-linear) radiosity over surface elements.
Reference: [9] <author> William H. Press, Brian P. Flannery, Saul A. Teukolsky, and William T. Vetterling. </author> <title> Numerical Recipes in C: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cam-bridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: We compute the coefficients K k;l by solving the linear system in equation 8. If the kernel at any of the evaluated points is singular then its reevaluated by shifting the position of that point. Step II Compute the maximum and minimum kernel deviation: Using a searching technique <ref> [9] </ref> we compute the maximum and minimum deviation, respectively d max and d min , of the original kernel function from ^ K (s; t; u; v).
Reference: [10] <author> Pat Hanrahan, David Salzman, and Larry Aupperle. </author> <title> A rapid hierarchical radiosity algorithm. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 197-206, </pages> <month> July </month> <year> 1991. </year> <month> 18 </month>
Reference-contexts: B k N k (s; t) All we have to do now is to write an algorithm to compute the unknown B (i) and B k s. 5.1 Algorithm for Computing Radiosity Bounds In [1] we have seen the adaptation of both the standard full matrix [4] and hierarchical radiosity <ref> [10] </ref> methods to the computation of the constant radiosity bounds. Here we shall extend the method of [1] to support the computation of linear radiosity bounds.
References-found: 10

