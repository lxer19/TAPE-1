URL: http://www.iro.umontreal.ca/~drissi/tttt.ps
Refering-URL: http://www.iro.umontreal.ca/~drissi/
Root-URL: http://www.iro.umontreal.ca
Email: bochmann -@iro.umontreal.ca  yevtushenko@elephot.tsu.tomsk.su  petrenko@crim.ca  
Phone: Phone: (514) 343-7535, Fax: (514) 343-5834, -drissi,  2  3  Phone: (514) 840-1234, Fax: (514) 840-1244,  
Title: On the design of a submodule based on the input/output FSM model*  
Author: J. Drissi N. Yevtushenko A. Petrenko and G. v. Bochmann 
Address: Montral, CP. 6128, Succ. Centre-Ville, Montral, H3C 3J7, Canada,  36 Lenin str., Tomsk, 634050, Russia,  Montral, 1801 Avenue McGill College, Suite 800, Montral, H3A 2N4, Canada,  
Affiliation: 1 Universit de  Tomsk State University,  CRIM, Centre de Recherche Informatique de  
Abstract: This paper addresses the problem of designing a submodule of a given system of communicating input/output FSMs. The problem may be formulated mathematically by the equation CXA, where C represents the specification of the known part of the system, called the context, A represents the specification of the whole system, X represents the specification of the submodule to be constructed, is a composition operator and is the trace equivalence relation. The set of solutions to the equation (if they exist) can be represented as a subset of the set of D-reductions of a proper nondeterministic FSM. The algorithm for finding this nondeterministic FSM is based on the use of a chaos machine and the construction of a machine which separates the permissible and the forbidden traces. After removing all the forbidden traces, we obtain the sought-after machine. Due to the existence of livelocks, some reductions of the obtained machine are not solutions to the equation since their composition with the context can not be modeled by an FSM. If there are no livelocks, the set of solutions to the equation coincides with the set of D-reductions of the obtained machine and then we can characterize all the solutions. 
Abstract-found: 1
Intro-found: 1
Reference: [Aziz 95] <author> A. Aziz, F. Balarin, R. K. Brayton, M. D. DiBenedetto and A. Saldanha, </author> <booktitle> Supervisory Control of Finite State Machines , Proceedings of the 7th International Conference, </booktitle> <address> CAV'95, Lige, Belgium., </address> <pages> pp. 279-292, </pages> <month> July 3-5, </month> <year> 1995. </year>
Reference-contexts: feedback, in the case where the sets X' and Y' in Figure 3.1 are empty, the set of permissible behaviors to the equation (if not empty), where a 7 permissible behavior is one represented by a solution, can be represented as the set of reductions of a specific nondeterministic FSM <ref> [Watanabe 93, Aziz 95] </ref>. We use a chaos machine (Figure 3.7), defined by Ch=(-ch -, X' "U, Y' "Z, H, ch ), where H (ch, v )=-(ch , w ) | w [Y'"Z- for all v [X'"U.
Reference: [Drissi 98] <author> J. Drissi, A. Petrenko and N. Yevtushenko, </author> <title> On the Reduction of Nondeterministic Finite State Machine , to be submitted soon. </title>
Reference-contexts: Different criteria can be used for this optimization. The first possible criterion 16 might be the number of states, in this case, we have to construct a D-reduction of the largest solution with the minimal number of states <ref> [Drissi 98] </ref>. Others criteria could be the design of a component "easy" to test or having a minimal number of outputs or a minimal number of internal interactions.
Reference: [Gill 62] <author> A. Gill, </author> <title> Introduction to the theory of FiniteState Machines , Mc Graw-Hill Book Company, </title> <publisher> Inc, </publisher> <year> 1962. </year>
Reference: [Lin 95] <author> B. Lin, G. de Jong and T. Kolks, </author> <booktitle> Hierarchical Optimization of Asynchronous Circuits , Proceedings of the 32nd Design Automation Conference, </booktitle> <pages> pp 712-717, </pages> <year> 1995. </year>
Reference-contexts: Approaches to the construction of a submodule specification based on the LTS model have been presented in <ref> [Merlin 83, Qin 91, Lin 95] </ref>. Here, we consider this problem in the context of the input/output Finite State Machine model (I/O FSM). The direct application of an approach based on the LTS model is not possible since the solutions obtained are not in general I/O FSMs.
Reference: [Merlin 83] <author> P. Merlin and G. v. Bochmann, </author> <title> On the Construction of Submodule Specifications and Communication Protocols, </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> Vol. 5, No. 1, </volume> <pages> pp. 1-25, </pages> <month> Jan. </month> <year> 1983. </year>
Reference-contexts: Approaches to the construction of a submodule specification based on the LTS model have been presented in <ref> [Merlin 83, Qin 91, Lin 95] </ref>. Here, we consider this problem in the context of the input/output Finite State Machine model (I/O FSM). The direct application of an approach based on the LTS model is not possible since the solutions obtained are not in general I/O FSMs.
Reference: [Petrenko 93] <author> A. Petrenko, N. Yevtushenko, A. Lebedev and A. Das, </author> <title> Nondeterministic state machines in protocol conformance testing, </title> <booktitle> Proceedings of the IFIP Sixth International Workshop on Protocol Test Systems, Pau, France, </booktitle> <pages> pp. 363-378, </pages> <month> September </month> <year> 1993. </year>
Reference: [Petrenko 94] <author> A. Petrenko, N. Yevtushenko and G. v. Bochmann, </author> <title> Experiments on Nondeterministic Systems for the Reduction Relation, </title> <publisher> IWTCS'96. </publisher>
Reference: [Petrenko 96] <author> A. Petrenko and G. v. Bochmann, </author> <title> On fault coverage of tests for finite state specifications , in Computer Networks and ISDN Systems, special issue on Protocol Testing, </title> <year> 1996. </year>
Reference: [Qin 91] <author> H. Qin and P. Lewis, </author> <title> Factorisation of Finite State Machines under Strong and Observational Equivalences, </title> <journal> Journal of Formal Aspects of Computing, </journal> <volume> Vol. 3, </volume> <pages> pp 284 - 307, </pages> <month> July-Sept. </month> <year> 1991. </year>
Reference-contexts: Approaches to the construction of a submodule specification based on the LTS model have been presented in <ref> [Merlin 83, Qin 91, Lin 95] </ref>. Here, we consider this problem in the context of the input/output Finite State Machine model (I/O FSM). The direct application of an approach based on the LTS model is not possible since the solutions obtained are not in general I/O FSMs.
Reference: [Starke 72] <author> P. H. </author> <title> Starke, </title> <publisher> Abstract automata , American Elsevier Publishing Company, </publisher> <address> Inc - New York, </address> <year> 1972. </year>
Reference-contexts: nonempty finite set of states with s o as the initial state, X is a nonempty finite set of input symbols, Y is a nonempty finite set of output symbols and h is a total behavior function h: SX fi P (SY)"-fl-, where P (SY) is the powerset of SY <ref> [Starke 72] </ref>. Given two states s and p, input x and output y , if (p, y)h (s, x) then we say that there is a transition from s to p with the input x and output y. Such a transition is denoted s-x/y-&gt;p. <p> Such a transition is denoted s-x/y-&gt;p. The FSM A is called an observable machine, if |-s' | (s' ,y)h (s,x)-|1 holds for all (s, x)SX and all y Y <ref> [Starke 72] </ref>. This means, in observable machines, a state and an I/O sequence uniquely determine the next state. The machine A becomes deterministic when |h ( s, x)|=1 for all (s, x)SX.
Reference: [Unger 69] <author> S. H. Unger, </author> <title> Asynchronous Sequential Switching Circuits. </title> <address> New York, </address> <publisher> Wiley-Interscience, </publisher> <year> 1969. </year>
Reference-contexts: The FAIL state has looping transitions for every element of X' "U with the output fail. Any undefined transition is considered as a don't care transition and we use a TRAP state similar to <ref> [Unger 69] </ref> to formally specify "don't care" situations. In reality, these transitions are not executed in the composition with the given context. 1 2 3 x'1, x'2, u1, u2/fail u2/z1 u2/z1 u2/y'2 u1/z1 x'2/z2 u1/y'1 u2/z2, y'1 u1/z2, y'2 Proposition 3.3.
Reference: [Watanabe 93] <author> Watanabe, Y, and Brayton, </author> <title> R K 'The maximal set of permissible behaviors for fsm networks' Proc. </title> <booktitle> of the IEEE/ACM International Conference on Computer-Aided Design , pp 316-320, </booktitle> <year> 1993. </year>
Reference-contexts: feedback, in the case where the sets X' and Y' in Figure 3.1 are empty, the set of permissible behaviors to the equation (if not empty), where a 7 permissible behavior is one represented by a solution, can be represented as the set of reductions of a specific nondeterministic FSM <ref> [Watanabe 93, Aziz 95] </ref>. We use a chaos machine (Figure 3.7), defined by Ch=(-ch -, X' "U, Y' "Z, H, ch ), where H (ch, v )=-(ch , w ) | w [Y'"Z- for all v [X'"U.
Reference: [Wood 87] <editor> D. Wood, </editor> <publisher> Theory of Computation , John Wiley & Sons, Inc, </publisher> <year> 1987. </year>
References-found: 13

