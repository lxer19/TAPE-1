URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/fu-bin/Papers/app4.ps
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/fu-bin/research.html
Root-URL: http://www.cs.yale.edu
Title: On Molecular Approximation Algorithms for NP Optimization Problems  
Author: Bin Fu Richard Beigel 
Affiliation: Yale U. U. Maryland  Yale U. U. Maryland Lehigh U.  
Abstract: We develop a general technique for constructing molecular-based approximation algorithms for NP optimization problems. Our algorithms exhibit a useful volume-accuracy tradeoff. In particular we solve the Covering problem of Hochbaum and Maass using polynomial time and O ` 2 =2 volume with error ratio (1 + 1 ` ) 2 . We also present the first candidate for a problem that can be solved more efficiently with the Amplify operation than without.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Adleman. </author> <title> Molecular computation of solutions to combinatorial problems. </title> <journal> Science, </journal> <volume> 266 </volume> <pages> 1021-1024, </pages> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: 1. Introduction Molecular computers were introduced by Adleman <ref> [1, 8] </ref>, but so far the field lacks a "killer application." It is well known that a DNA computer can solve SAT in linear time [8], but using an exponential number of DNA strands.
Reference: [2] <author> S. Arora, A. Frieze, and H. Kaplan. </author> <title> A new rounding procedure for the assignment problem with applications to dense graph arrangement problems. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Theorem 19. For each ` &gt; 0, there is a MOL-A 0 ` 2 =2 ) algorithm of error ratio (1 + 1 ` ) 2 for Opt-covering, where c = 0:823. Proof: By Theorem 18 and Theorem 6 and Hochbaum and Maass's algorithm. 4. Other NP-optimization Problems In <ref> [3, 2] </ref> some approximation algorithms are described for the dense case of a class of NP-optimization problems. They can also be transformed into molecular algorithms. We will give details in the full version of this paper.
Reference: [3] <author> S. Arora, D. Karger, and M. Karpinski. </author> <title> Polynomial time approximation schemes for dense instances of graph problems. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1995. </year>
Reference-contexts: Theorem 19. For each ` &gt; 0, there is a MOL-A 0 ` 2 =2 ) algorithm of error ratio (1 + 1 ` ) 2 for Opt-covering, where c = 0:823. Proof: By Theorem 18 and Theorem 6 and Hochbaum and Maass's algorithm. 4. Other NP-optimization Problems In <ref> [3, 2] </ref> some approximation algorithms are described for the dense case of a class of NP-optimization problems. They can also be transformed into molecular algorithms. We will give details in the full version of this paper.
Reference: [4] <author> E. Bach, A. Condon, E. Glaser, and C. Tanguay. </author> <title> DNA models and algorithms for NP-complete problems. </title> <booktitle> In Proceedings of the 11th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 290-299, </pages> <year> 1996. </year>
Reference-contexts: The number of strands used by an algorithm is called the "volume." Although recent papers <ref> [5, 4, 9] </ref> solve NP problems using smaller exponential volume, we believe that it is essential to find applications of DNA computers that use subexponential volume. In this paper we apply DNA computers to the approximate solution of NP-optimization problem.
Reference: [5] <author> R. Beigel and B. Fu. </author> <title> Molecular computing, bounded nondeterminism, and efficient recursion. </title> <booktitle> In Proceedings of the 24th ICALP, </booktitle> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: The number of strands used by an algorithm is called the "volume." Although recent papers <ref> [5, 4, 9] </ref> solve NP problems using smaller exponential volume, we believe that it is essential to find applications of DNA computers that use subexponential volume. In this paper we apply DNA computers to the approximate solution of NP-optimization problem. <p> MOL (s (n)) is the class of languages accepted by such a computation where the running time t (n) is polynomial bounded and the operations permitted are Append, Separate and Merge. Theorem 8 (Beigel and Fu <ref> [5] </ref>). NPinit (s (n)) MOL (s (n)). Theorem 9. Covering 2 MOL ( n (n1) Proof: Follows from Theorem 8 and Theorem 4. Definition 10.
Reference: [6] <author> B. Fu and R. Beigel. </author> <title> A comparison of resource-bounded molecular computation models. </title> <booktitle> In Proceedings of the 5th Israeli Symposium on Theory of Computing and Systems, </booktitle> <year> 1997. </year> <note> To appear. 8 </note>
Reference-contexts: Theorem 17 (Fu and Beigel <ref> [6] </ref>). NPpath (s (n)) = MOL-A (s (n)). Theorem 18. Covering 2 MOL-A 0 m , where c = 0:823. Proof: By Theorem 17 and Theorem 13. Theorem 19.
Reference: [7] <author> D. S. Hochbaum and W. Maass. </author> <title> Approximation schemes for covering and packing problems in image processing and VLSI. </title> <journal> J. ACM, </journal> <volume> 32(1) </volume> <pages> 130-136, </pages> <year> 1985. </year>
Reference-contexts: In this paper we apply DNA computers to the approximate solution of NP-optimization problem. We show how DNA algorithms using subexponential volume and polynomial time can achieve much better accuracy than classical polynomial time approximation algorithms. We illustrate our method on Hochbaum and Maass's classical approximation algorithm <ref> [7] </ref> for the Covering problem. Our molecular algorithm runs in polynomial time and uses O ` 2 (log `)n 2 n (n1) volume to achieve error ratio (1 + 1 ` ) 2 . This algorithm does not use controversial operations like Intersection or even Amplify. <p> We think that approximation algorithms may be the "killer application" that will motivate the construction of DNA computers. 2. Hochbaum and Maass's Approximation Algorithm and Molecular Implementation In this section we give a description of Hochbaum and Maass's approximation algorithm for the Opt-covering problem <ref> [7] </ref> and its implementation via molecular computation.
Reference: [8] <author> R. Lipton. </author> <title> Using DNA to solve NP-complete problems. </title> <journal> Science, </journal> <volume> 268 </volume> <pages> 542-545, </pages> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: 1. Introduction Molecular computers were introduced by Adleman <ref> [1, 8] </ref>, but so far the field lacks a "killer application." It is well known that a DNA computer can solve SAT in linear time [8], but using an exponential number of DNA strands. <p> 1. Introduction Molecular computers were introduced by Adleman [1, 8], but so far the field lacks a "killer application." It is well known that a DNA computer can solve SAT in linear time <ref> [8] </ref>, but using an exponential number of DNA strands. The number of strands used by an algorithm is called the "volume." Although recent papers [5, 4, 9] solve NP problems using smaller exponential volume, we believe that it is essential to find applications of DNA computers that use subexponential volume.
Reference: [9] <author> M. Ogihara. </author> <title> Breadth first search 3SAT algorithms for DNA computers. </title> <type> Technical Report 629, </type> <institution> University of Rochester, </institution> <month> July </month> <year> 1996. </year> <month> 9 </month>
Reference-contexts: The number of strands used by an algorithm is called the "volume." Although recent papers <ref> [5, 4, 9] </ref> solve NP problems using smaller exponential volume, we believe that it is essential to find applications of DNA computers that use subexponential volume. In this paper we apply DNA computers to the approximate solution of NP-optimization problem.
References-found: 9

