URL: ftp://ftp.cs.virginia.edu/pub/techreports/IPC-89-12.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.cs.virginia.edu
Title: SPECTRUM: A PARALLEL SIMULATION TESTBED  
Author: Paul F. Reynolds, Jr. Phillip M. Dickens 
Note: This research was supported in part by Jet Propulsion Laboratory Contract #957721.  
Address: Charlottesville, VA 22903  
Affiliation: Institute for Parallel Computation School of Engineering and Applied Science University of Virginia  
Date: MARCH 12, 1989  
Pubnum: IPC-TR-89-012  
Abstract-found: 0
Intro-found: 1
Reference: [ChMi79] <author> Chandy, K.M. and J. Misra, </author> <title> "Distributed Simulation: A Case Study in Design and Verification of Distributed Programs," </title> <journal> IEEE Trans on Software Engineering., </journal> <volume> SE-5,5, </volume> <month> May, </month> <year> 1979, </year> <pages> 440-452. </pages>
Reference-contexts: We give a brief overview of the state of research into parallel simulation protocols and then discuss the SPECTRUM testbed. Parallel simulation, generally called distributed simulation in the literature, is concerned with the parallel execution of discrete event simulations. Beginning with the research of Chandy and Misra <ref> [ChMi79] </ref> and Peacock et al. [PeWo79], a number of approaches have been described for coordinating cooperating processes so that the outcome of a parallel simulation is the same as would occur in a more conventional sequential simulation. <p> Others have explored variations on the optimistic approach including [Jeff85] and [Soko88]. SRADS and moving time window [Soko88] have features that bridge these characterizations. Parallel simulation was originally named distributed simulation in the early Chandy and Misra paper <ref> [ChMi79] </ref>. More recently distributed simulation has come to be associated with geographically distributed simulations, for example the National Testbed [Word88] and BBN's SIMNET [PoMi87]. <p> Otherwise, this filter schedules an event for the receiving LP to send a proceed message when its simulation time does equal or exceed the requesting LP's time. Null Messages The null message protocol <ref> [ChMi79] </ref>, a non-aggressive, accurate, non-risk protocol, is simple to characterize: after setting initial conditions among LP's, special non-event messages, called null messages, should be sent on all remaining paths of a fork whenever an event message is sent along any path of the fork.
Reference: [ChMi81] <author> Chandy, K.M. and J. Misra, </author> <title> "Asynchronous Distributed Simulation via a Sequence of Parallel Computations," </title> <journal> CACM, </journal> <volume> 24,4, </volume> <month> April, </month> <year> 1981, </year> <pages> 198-205. </pages>
Reference-contexts: A survey of parallel simulation appeared in [Misr86]. Examples of additional approaches generally considered conservative include the blocking table protocol [PeMa80], deadlock detection <ref> [ChMi81] </ref>, SRADS [Reyn82], hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh This research was supported in part by JPL Contract #957721. appointments [NiRe84], feed-forward [Kuma86], conditional knowledge [ChMi87] and bounded lag [Luba87]. The optimistic approach has its foundation in the time warp method [JeSo82]. Others have explored variations on the optimistic approach including [Jeff85] and [Soko88].
Reference: [ChMi87] <author> Chandy, K.M. and J. Misra, </author> <title> "Conditional Knowledge as a basis for Distributed Simulation," </title> <type> CalTech Report, </type> <institution> 5251:TR:87, </institution> <month> Sept </month> <year> 1987. </year>
Reference-contexts: A survey of parallel simulation appeared in [Misr86]. Examples of additional approaches generally considered conservative include the blocking table protocol [PeMa80], deadlock detection [ChMi81], SRADS [Reyn82], hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh This research was supported in part by JPL Contract #957721. appointments [NiRe84], feed-forward [Kuma86], conditional knowledge <ref> [ChMi87] </ref> and bounded lag [Luba87]. The optimistic approach has its foundation in the time warp method [JeSo82]. Others have explored variations on the optimistic approach including [Jeff85] and [Soko88]. SRADS and moving time window [Soko88] have features that bridge these characterizations.
Reference: [JeSo82] <author> Jefferson, D. and H Sowizral, </author> <title> "Fast Concurrent Simulation Using the Time Warp Mechanism," </title>
Reference-contexts: The optimistic approach has its foundation in the time warp method <ref> [JeSo82] </ref>. Others have explored variations on the optimistic approach including [Jeff85] and [Soko88]. SRADS and moving time window [Soko88] have features that bridge these characterizations. Parallel simulation was originally named distributed simulation in the early Chandy and Misra paper [ChMi79]. <p> SPECTRUM supports protocols using knowledge embedding through the isolation of data structures as discussed above. It is assumed that filters can access those isolated data structures. This kind of protocol requires a more detailed understanding of a simulation than the approaches discussed above. Time warp <ref> [Jeso82] </ref>, which is an aggressive, accurate, at risk approach to parallel simulation, requires the identification of out-of-sequence messages. This is easily done using a filter on incoming messages.
References-found: 4

