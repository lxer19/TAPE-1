URL: ftp://theory.lcs.mit.edu/pub/people/oded/gv.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/cryptography.html
Root-URL: 
Email: Email: oded@wisdom.weizmann.ac.il  
Title: an old troff file. How to Solve any Protocol Problem An Efficiency Improvement (Extended Abstract)  
Author: Oded Goldreich and Ronen Vainish Oded Goldreich 
Address: ISRAEL.  Rehovot, Israel.  
Affiliation: Department of Computer Science Technion Israel Institute of Technology, Haifa,  Department of Computer Science and Applied Mathematics Weizmann Institute of Science,  
Note: Appeared in Crypto87, Springer Verlag, Lecture Note in Computer Science (293), pages 73-86. Reproduced (in June 1997) from  This research was supported by grant No. 86-00301 from the United States Israel Binational Science Foundation (BSF), Jerusalem, Israel. Updated affiliation for  
Abstract: Consider n parties having local inputs x 1 ; x 2 ; :::; x n respectively, and wishing to compute the value f (x 1 ; :::; x n ), where f is a predetermined function. Loosely speaking, an n-party protocol for this purpose has maximum privacy if whatever a subset of the users can efficiently compute when participating in the protocol, they can also compute from their local inputs and the value f (x 1 ; :::; x n ). Recently, Goldreich, Micali and Wigderson have presented a polynomial-time algorithm that, given a Turing machine for computing the function f , outputs an n-party protocol with maximum privacy for distributively computing f (x 1 ; :::; x n ). The maximum privacy protocol output uses as a subprotocol a maximum privacy two-party protocol for computing a particular simple function p 1 (; ). More recently, Haber and Micali have improved the efficiency of the above n-party protocols, using a maximum privacy two-party protocol for computing another particular function p 2 (; ). Both works use a general result of Yao in order to implement protocols for the particular functions p 1 and p 2 . In this paper, we present direct solutions to the above two particular protocol problems, avoiding the use of Yao's general result. In fact, we present two alternative approaches for solving both problems. The first approach consists of a simple reduction of these two problems to a variant of Oblivious Transfer. The second approach consists of designing direct solutions to these two problems, assuming the intractability of the Quadratic Residuosity problem. Both approaches yield simpler and more efficient solutions than the ones obtained by Yao's result. 
Abstract-found: 1
Intro-found: 1
Reference: [Bar] <author> Barrington, D.A., </author> <title> "Bounded-Width Polynomial-Size Branching Programs Recognize Exactly Those Languages in N C 1 ", Proc. </title> <booktitle> 18th STOC, </booktitle> <year> 1986, </year> <pages> pp. 1-5. </pages>
Reference: [CGMA] <author> Chor, B., S. Goldwasser, S. Micali, and B. Awerbuch, </author> <title> "Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults", </title> <booktitle> Proc. 26th FOCS, </booktitle> <year> 1985, </year> <pages> pp. 383-395. </pages>
Reference: [Coh] <author> Cohen, J.D., </author> <title> "Secret Sharing Homomorphisms: Keeping Shares of a Secret", </title> <type> technical report YALEU/DCS/TR-453, </type> <institution> Yale University, Dept. of Computer Science, </institution> <month> Feb. </month> <year> 1986. </year> <note> Presented in Crypto86, </note> <year> 1986. </year>
Reference: [DH] <author> Diffie, W., and M.E. Hellman, </author> <title> "New Directions in Cryptography", </title> <journal> IEEE Trans. on Inform. Theory, </journal> <volume> Vol. IT-22, No. 6, </volume> <month> November </month> <year> 1976, </year> <pages> pp. 644-654. </pages>
Reference: [EGL] <author> Even, S., O. Goldreich, and A. Lempel, </author> <title> "A Randomized Protocol for Signing Contracts", </title> <journal> CACM, </journal> <volume> Vol. 28, No. 6, </volume> <year> 1985, </year> <pages> pp. 637-647. </pages>
Reference-contexts: This method (modified in [GMW2] by using ideas from <ref> [EGL] </ref>) guarantees maximum privacy under the assumption that trapdoor one-way permutations exist. In this paper, we present direct solutions to the above two particular protocol problems, avoiding the use of Yao's general result. In fact, we present two alternative approaches for solving both problems.
Reference: [GMW1] <author> Goldreich, O., S. Micali, and A. Wigderson, </author> <title> "Proofs that Yield Nothing But their Validity and a Methodology of Cryptographic Protocol Design", </title> <booktitle> Proc. 27th FOCS, </booktitle> <year> 1986. </year>
Reference-contexts: In this paper we are concerned only with the privacy condition. This can be motivated in two ways. First we believe that privacy and correctness are distinct notions which are better understood when dealt separately. Correctness is easily dealt using zero-knowledge proofs <ref> [GMW1] </ref>, while privacy even in the semi-honest model requires different techniques [GMW2].
Reference: [GMW2] <author> Goldreich, O., S. Micali, and A. Wigderson, </author> <title> "How to Play any Mental Game or A Completeness Theorem for Protocols with Honest Majority", </title> <booktitle> Proc. 19th STOC, </booktitle> <year> 1987. </year>
Reference-contexts: P n i=1 x i ). Equivalently, all they learned about the local inputs of the other parties is their sum (i.e. i=2T x i ), and this of course can not be avoided. Goldreich, Micali and Wigderson <ref> [GMW2] </ref> have proposed a method for generating maximum privacy protocols for computing any function f . Their method is in fact a polynomial-time algorithm that given as input a Turing Machine description of the (n-argument) function f , outputs a maximum privacy n-party protocol for computing f . <p> Output: A's local output is a permutation t 0 2 S 5 , and B's local output is a permutation 0 2 S 5 such that t = 0 t 0 . (Here means permutation composition.) Recently, an efficiency improvement of the <ref> [GMW2] </ref> algorithm has been suggested by Haber and Micali [HM]. <p> Output: A's local output is a bit a 0 , while B's local output is a bit b 0 such that a 0 + b 0 = P 2 Both, <ref> [GMW2] </ref> and [HM] use for solving the above problems, a general result of Yao [Y2]: a method for generating maximum privacy two-party protocols for any two-argument function. This method (modified in [GMW2] by using ideas from [EGL]) guarantees maximum privacy under the assumption that trapdoor one-way permutations exist. <p> B's local output is a bit b 0 such that a 0 + b 0 = P 2 Both, <ref> [GMW2] </ref> and [HM] use for solving the above problems, a general result of Yao [Y2]: a method for generating maximum privacy two-party protocols for any two-argument function. This method (modified in [GMW2] by using ideas from [EGL]) guarantees maximum privacy under the assumption that trapdoor one-way permutations exist. In this paper, we present direct solutions to the above two particular protocol problems, avoiding the use of Yao's general result. In fact, we present two alternative approaches for solving both problems. <p> Our protocols and their applications are presented in a model where parties follow the protocol properly, except that they may store all intermediate computations done during the execution. Thus, we concentrate only in guaranteeing that the protocols have maximum privacy. Using the results of <ref> [GMW2] </ref>, each maximum privacy protocol in the above model can be transformed into a protocol guaranteeing both maximum privacy and correctness of output in a model where a minority of the parties may deviate from the protocol in arbitrary (but polynomial-time) manner. <p> Note that even if a program of a semi-honest specifies that it has to erase the contents of his working tape, this contents still appear on the history tape. Yao [Y2] (resp. Goldreich, Micali and Wigderson <ref> [GMW2] </ref>) presents a method of "forcing" the participants of any two-party (resp. multi-party) protocol to behave in a semi-honest manner. <p> This can be motivated in two ways. First we believe that privacy and correctness are distinct notions which are better understood when dealt separately. Correctness is easily dealt using zero-knowledge proofs [GMW1], while privacy even in the semi-honest model requires different techniques <ref> [GMW2] </ref>. Secondly, it is natural to consider setting in which the parties are very interested in obtaining the correct value of the function and on top of this seek to gain additional information (but not at the cost of not getting the correct value). <p> The privacy in the semi-honest model holds by the definition of OT 1 2 in the semi-honest model. An OT 1 2 is simply implemented in the semi-honest model, assuming the existence of trapdoor one way permutation <ref> [GMW2] </ref>, unfortunately this implementation does not have maximum privacy. Zero knowledge proofs can be used in order to ensure that this OT 1 2 protocol has maximum privacy, however the modified protocol is no longer simple and efficient.
Reference: [GM] <author> Goldwasser, S., and S. Micali, </author> <title> "Probabilistic Encryption", </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: Polynomial Indistinguishability A fundamental notion regarding probability distributions is the inability to efficiently tell them apart. This notion is captured by the definition of polynomially indistinguishable probability ensembles originating in <ref> [GM, Y1] </ref> and sketched below. A probability ensemble Y = (Y 1 ; Y 2 ; :::) is an infinite sequence of probability distributions, where Y k is a probability distribution on binary strings. Typically, the support of Y k will contain strings of length polynomial in k. <p> The Quadratic Residuosity problem is to determine, on input x and m, the value of QC m (x). This task is considered intractable in the following sense Intractability Assumption of Quadratic Residuosity <ref> [GM] </ref>: Let C = fC i g be an infinite sequence of Boolean circuits such that C i has 2i input bits. <p> Theorem <ref> [GM] </ref>: Under the intracability Assumption of Quadratic Residuosity, there exist no family of polynomial size circuits that polynomially approximates Quadratic Residuosity. 2.7. Notations * Let S be a finite set.
Reference: [GMR] <author> Goldwasser, S., S. Micali, and C. Rackoff, </author> <title> "Knowledge Complexity of Interactive Proofs", </title> <booktitle> Proc. 17th STOC, </booktitle> <year> 1985, </year> <pages> pp. 291-304. </pages>
Reference: [HM] <author> Haber, S., and S. Micali, </author> <title> private communication, </title> <year> 1986. </year>
Reference-contexts: A's local output is a permutation t 0 2 S 5 , and B's local output is a permutation 0 2 S 5 such that t = 0 t 0 . (Here means permutation composition.) Recently, an efficiency improvement of the [GMW2] algorithm has been suggested by Haber and Micali <ref> [HM] </ref>. <p> Output: A's local output is a bit a 0 , while B's local output is a bit b 0 such that a 0 + b 0 = P 2 Both, [GMW2] and <ref> [HM] </ref> use for solving the above problems, a general result of Yao [Y2]: a method for generating maximum privacy two-party protocols for any two-argument function. This method (modified in [GMW2] by using ideas from [EGL]) guarantees maximum privacy under the assumption that trapdoor one-way permutations exist. <p> local output is a bit a 0 , while B's local output is a bit b 0 such that a 0 + b 0 = P t In fact, we are interested in the case t = 2, which is exactly the subprotocol required for the Haber Micali protocol generator <ref> [HM] </ref>. For simplicity, we present a protocol for the following related problem: Input: A's local input is a pair of bits a 0 and a 1 , while B's input is a single bit b 1 .
Reference: [Y1] <author> Yao, </author> <title> A.C., "Theory and Applications of Trapdoor Functions", </title> <booktitle> Proc. of the 23rd IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: Polynomial Indistinguishability A fundamental notion regarding probability distributions is the inability to efficiently tell them apart. This notion is captured by the definition of polynomially indistinguishable probability ensembles originating in <ref> [GM, Y1] </ref> and sketched below. A probability ensemble Y = (Y 1 ; Y 2 ; :::) is an infinite sequence of probability distributions, where Y k is a probability distribution on binary strings. Typically, the support of Y k will contain strings of length polynomial in k.
Reference: [Y2] <author> Yao, </author> <title> A.C., "How to Generate and Exchange Secrets", </title> <booktitle> Proc. 27th FOCS, </booktitle> <year> 1986. </year>
Reference-contexts: Output: A's local output is a bit a 0 , while B's local output is a bit b 0 such that a 0 + b 0 = P 2 Both, [GMW2] and [HM] use for solving the above problems, a general result of Yao <ref> [Y2] </ref>: a method for generating maximum privacy two-party protocols for any two-argument function. This method (modified in [GMW2] by using ideas from [EGL]) guarantees maximum privacy under the assumption that trapdoor one-way permutations exist. <p> Note that even if a program of a semi-honest specifies that it has to erase the contents of his working tape, this contents still appear on the history tape. Yao <ref> [Y2] </ref> (resp. Goldreich, Micali and Wigderson [GMW2]) presents a method of "forcing" the participants of any two-party (resp. multi-party) protocol to behave in a semi-honest manner.
References-found: 12

