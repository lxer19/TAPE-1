URL: http://www.robotics.stanford.edu/users/assembly/asme.ps.gz
Refering-URL: http://www.robotics.stanford.edu/users/assembly/assembly.html
Root-URL: http://www.robotics.stanford.edu
Title: AN EFFICIENT SYSTEM FOR GEOMETRIC ASSEMBLY SEQUENCE GENERATION AND EVALUATION  
Author: Bruce Romney Cyprien Godard Michael Goldwasser G. Ramkumar 
Address: Stanford, California  
Affiliation: Computer Science Department Stanford University  
Note: Proc. 1995 ASME. Intl Computers in Engineering Conf., pp. 699-712  
Abstract: In this paper, we present a software system which can automatically determine how to assemble a product from its parts, given only a geometric description of the assembly. Incorporated into a larger CAD tool, this system, the Stanford Assembly Analysis Tool (STAAT), could thus provide immediate feedback to a team of product designers about the complexity of assembling the product being designed. This would be particularly useful in complex assemblies where each designer may not be fully aware of the impact of his design changes on the assem-blability of the product as a whole. STAAT's underlying data structure is an efficient version of the non-directional blocking graph (NDBG), a compact representation of the blocking relationships in an assembly. STAAT implements several techniques using this structure, under a unified approach in which the same software machinery can analyze the product under different assembly constraints. In initial experiments conducted on relatively small polyhedral assemblies of 20 to 40 parts and 500 to 1500 faces, using one-step translational motions, STAAT generated assembly sequences much more quickly than did previous NDBG-based systems. We are working now on extending both these results and the underlying theory to more sophisticated cases. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Aho, A. V., Hopcroft, J. E., and Ullman, J. D., </author> <year> 1985, </year> <title> Data Structures and Algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <pages> pp. 222-226. </pages>
Reference: <author> Bourjault, A., </author> <year> 1984, </year> <title> Contribution a une approche methodo-logique de l'assemblage automatise: elaboration automatique des sequences operatoires, </title> <type> Ph.D. thesis, </type> <institution> Faculte des Sciences et des Techniques de l'Universite de Franche-Comte. </institution>
Reference: <author> Chazelle, B., and Incerpi, J., </author> <year> 1984, </year> <title> Triangulation and shape-complexity, </title> <journal> ACM Transactions on Graphics, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 135-152. </pages>
Reference: <author> DeFazio, T. L., and Whitney, D. E., </author> <month> Dec. </month> <year> 1987, </year> <title> Simplified generation of all mechanical assembly sequences, </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> vol. RA-3, no. 6, </volume> <pages> pp. 640-658. </pages>
Reference: <author> Goldwasser, M., </author> <year> 1995, </year> <title> An implementation for maintaining arrangements of polygons, </title> <booktitle> Communication in Proceedings, 11th Annual ACM Symposium on Computational Geometry, (to appear). </booktitle>
Reference: <author> Guibas L. J., Halperin, D., Hirukawa, H., Latombe, J.-C., and Wilson, R. H., </author> <year> 1995, </year> <title> A simple and efficient procedure for polyhedral assembly partitioning under infinitesimal motions, </title> <booktitle> Proceedings, IEEE International Conference on Robotics and Automation, </booktitle> <address> (Nagoya, Japan), </address> <note> (to appear). </note>
Reference-contexts: Work is presently underway on applying this more advanced reasoning to a practical system (and, in fact, a new but related procedure to handle translations with rotations has just recently been developed <ref> (Guibas et al., 1995) </ref>). Nonetheless, within the context of assembly plans using one-step translations, STAAT represents a significant advance in speed and efficiency over previous work. <p> As noted earlier, work is presently underway on finding useful algorithms to apply this theory in a practical system, with some promising early results <ref> (Guibas et al., 1995) </ref>. Even within the realm of NDBGs for single-step translations, there are two types of NDBGs available: one for infinitesimal translations and one for extended translations. In this paper we shall focus primarily on the infinitesimal version (complemented by sweeping operations for global analysis).
Reference: <author> Hoffman, R., </author> <year> 1990, </year> <title> Automated assembly planning for B-rep products, </title> <booktitle> Proceedings, 1990 IEEE International Conference on Systems Engineering, </booktitle> <address> (Pittsburgh, PA), </address> <pages> pp. 391-394. </pages>
Reference: <author> Hoffman, R., </author> <year> 1991, </year> <title> A common sense approach to assembly sequence planning, Computer-Aided Mechanical Assembly Planning, </title> <publisher> Kluwer Academic Publishers, Boston, </publisher> <pages> pp. 289-313. </pages>
Reference: <author> Homem de Mello, L. S., and Sanderson, A. C., </author> <year> 1986, </year> <title> AND/OR graph representation of assembly plans, IEEE 2 It should be noted that for the bell assemblies, only connected subassemblies were generated, while for the engine assemblies, STAAT generated all possible subassemblies, because the engines have no disassembly sequence using only connected subassemblies. </title> <journal> Transactions on Robotics and Automation, </journal> <volume> vol. 6, no. 2, </volume> <pages> pp. 188-199. </pages>
Reference-contexts: PRELIMINARIES Before discussing STAAT in further detail, it is first necessary to define the following terms: * A disassembly graph is an AND/OR graph representing all possible ways in which a product can be disassembled (or, conversely, assembled) <ref> (Homem de Mello and Sanderson, 1986) </ref>. Each node in the graph represents a subassembly, and each AND'ed pair of children for that node represents two subassemblies into which the given subassembly can be decomposed.
Reference: <author> Homem de Mello, L. S., and Sanderson, A. C., </author> <year> 1989, </year> <title> A correct and complete algorithm for the generation of mechanical assembly sequences, </title> <booktitle> Proceedings, 1989 IEEE International Conference on Robotics and Automation, (Scottsdale, AZ), </booktitle> <volume> vol. 1, </volume> <pages> pp. 56-61. </pages>
Reference: <author> Kavraki, L., Latombe, J.-C., and Wilson, R. H., </author> <year> 1993, </year> <title> On the complexity of assembly partitioning, </title> <journal> Information Processing Letters, </journal> <volume> vol. 48, </volume> <pages> pp. 229-235. </pages>
Reference-contexts: The problem of automatically generating assembly sequences is, in its full generality, an extraordinarily difficult one, recently shown to be NP-complete in both the two-dimensional (Kavraki and Kolountzakis, 1995) and three-dimensional <ref> (Kavraki et al., 1993) </ref> cases. As a result, much of the past and present work in this area focuses on restricted variants of the problem.
Reference: <author> Kavraki, L., and Kolountzakis, M., </author> <year> 1995, </year> <title> Partitioning a planar assembly into two connected parts is NP-complete, </title> <journal> Information Processing Letters, </journal> <note> (to appear). </note>
Reference-contexts: The problem of automatically generating assembly sequences is, in its full generality, an extraordinarily difficult one, recently shown to be NP-complete in both the two-dimensional <ref> (Kavraki and Kolountzakis, 1995) </ref> and three-dimensional (Kavraki et al., 1993) cases. As a result, much of the past and present work in this area focuses on restricted variants of the problem.
Reference: <author> Latombe, J.-C., and Wilson, R. H., </author> <year> 1995, </year> <title> Assembly sequencing with toleranced parts, </title> <booktitle> Proceedings, Third ACM/IEEE Symposium on Solid Modelling and Applications, </booktitle> <address> (Salt Lake City, UT), </address> <note> (to appear). </note>
Reference: <author> Lee, S., and Shin, Y. G., </author> <year> 1990, </year> <title> Assembly planning based on geometric reasoning, </title> <journal> Computers and Graphics, </journal> <volume> vol. 14, no. 2, </volume> <pages> pp. 237-250. </pages>
Reference: <author> Lin, A. C., and Chang, T.-C., </author> <year> 1993, </year> <title> 3D MAPS: Three-Dimensional Mechanical Assembly Planning System, </title> <journal> Journal of Manufacturing Systems, </journal> <volume> vol. 12, no. 6, </volume> <pages> pp. 437-456. </pages>
Reference: <author> Miller, J. M., and Hoffman, R. L., </author> <year> 1989, </year> <title> Automatic assembly planning with fasteners, </title> <booktitle> Proceedings, 1989 IEEE International Conference on Robotics and Automation, (Scottsdale, AZ), </booktitle> <volume> vol. 1, </volume> <pages> pp. 69-74. </pages>
Reference: <author> Mulmuley, K., </author> <year> 1993, </year> <title> Computational Geometry: An Introduction Through Randomized Algorithms, </title> <publisher> Prentice Hall, </publisher> <address> New York. </address>
Reference: <author> Pollack, R., Sharir, M., and Sifrony, S., </author> <year> 1988, </year> <title> Separating two simple polygons by a sequence of translations, </title> <journal> Discrete and Computational Geometry, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 123-136. </pages>
Reference: <author> Preparata, F. P., and Shamos, M. I., </author> <year> 1985, </year> <title> Computational Geometry, An Introduction, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <pages> pp. 278-290. </pages>
Reference-contexts: As the convolution faces are computed, they are projected straight-away onto the unit sphere. We then compute the union of all of the faces using a 2-D Bentley-Ottman style line sweep technique <ref> (Preparata and Shamos, 1985) </ref>. We save on efficiency by doing a 2-D union computation to find the projection directly rather than finding the 3-D Minkowski difference and projecting it explicitly. For more details on some of the geometric techniques used in the algorithm, the reader is referred to Ramkumar (1994).
Reference: <author> Ramkumar, G. D., </author> <year> 1994, </year> <title> Efficient algorithms to compute convolutions of non-convex polyhedra, </title> <type> Manuscript, </type> <institution> Department of Computer Science, Stanford University, Stanford, </institution> <address> CA. </address>
Reference: <author> Sanderson, A. C., </author> <year> 1990, </year> <title> Automatic generation of mechanical assembly sequences, Geometric Modeling for Product Engineering, </title> <publisher> North-Holland, Amsterdam, </publisher> <pages> pp. 461-482. </pages>
Reference: <author> Seidel, R., </author> <month> July </month> <year> 1991, </year> <title> A simple and fast incremental randomized algorithm for computing trapezoidal decompositions and for triangulating polygons, </title> <booktitle> Computational Geometry The ory and Application, </booktitle> <volume> vol. 1, no. 1, </volume> <pages> pp. 51-64. </pages>
Reference: <author> Subramani, A. K., and Dewhurst, P., </author> <year> 1991, </year> <title> Automatic generation of product disassembly sequences, </title> <journal> Manufacturing Technology CIRP Annals, </journal> <volume> vol. 40, no. 1, </volume> <pages> pp. 115-118. </pages>
Reference: <author> Valade, J.-M., </author> <year> 1985, </year> <title> Geometric reasoning and automatic synthesis of assembly trajectory, </title> <booktitle> Proceedings, 1985 International Conference on Advanced Robotics, </booktitle> <address> (Tokyo, Japan), </address> <pages> pp. 43-50. </pages>
Reference: <author> Wilson, R., </author> <year> 1992, </year> <title> On Geometric Assembly Planning, </title> <type> Ph.D. thesis, </type> <institution> Stanford University, Stanford, </institution> <address> CA. </address>
Reference: <author> Wilson, R. H., Kavraki, L., Lozano-Perez, T., and Latombe, J.-C., </author> <year> 1995, </year> <title> Two-Handed Assembly Sequencing, </title> <journal> The International Journal of Robotics Research, </journal> <note> MIT Press, (to appear). Also available as Technical Report STAN-CS-93-1478, </note> <institution> Stan-ford University, Stanford, </institution> <address> CA. </address>
Reference: <author> Wolter, J. D., </author> <year> 1988, </year> <title> On the Automatic Generation of Plans for Mechanical Assembly, </title> <type> Ph.D. thesis, </type> <institution> The University of Michigan. </institution>
Reference-contexts: Circuit boards, for example, often have stack assembly FIGURE 1: AN ASSEMBLY WITH NO MONOTONE BINARY ASSEMBLY SEQUENCE <ref> (WOLTER, 1988) </ref>. FIGURE 2: A NON-LINEAR ASSEMBLY SEQUENCE. sequences. An assembly for which a stack assembly se quence exists is called a stack assembly. * Local motion is motion over an infinitesimal distance.
Reference: <author> Wolter, J. D., </author> <year> 1989, </year> <title> On the automatic generation of assembly plans, </title> <booktitle> Proceedings, 1989 IEEE International Conference on Robotics and Automation, (Scottsdale, AZ), </booktitle> <volume> vol. 1, </volume> <pages> pp. 62-68. </pages>
Reference: <author> Woo, T. C., and Dutta, D., </author> <month> May </month> <year> 1991, </year> <title> Automatic disassembly and total ordering in three dimensions, </title> <journal> Transactions of the ASME, </journal> <volume> vol. 113, no. 2, </volume> <pages> pp. 207-213. </pages>
References-found: 29

