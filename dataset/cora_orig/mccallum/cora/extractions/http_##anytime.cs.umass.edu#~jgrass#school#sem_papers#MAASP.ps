URL: http://anytime.cs.umass.edu/~jgrass/school/sem_papers/MAASP.ps
Refering-URL: http://anytime.cs.umass.edu/~jgrass/school/seminar.html
Root-URL: 
Title: Monitoring Anytime Algorithms for Scheduling Problems  
Author: Jean-Michel Gallone and Franois Charpillet 
Note: 1 J.M. Gallone and F. Charpillet  
Abstract: 1 Scheduling techniques have been intensively studied by several research communities and have been applied to a wide range of applications in computer and manufacturing environments. Most of the scheduling problems are NP-Hard. Therefore, heuristics and approximation algorithms must be used for large problems. Obviously these methods are of interest when they provide near optimal solutions and when computational complexity can be controlled. For this purpose, we have developed a method based on Hopfield Neural Network model. This approach permits to solve in an iterative way a scheduling problem, finding a solution through the minimization of an energy function. An interesting property of this approach is its capacity to tradeoff the quality for computation time. Indeed, the convergence speed of the minimization process can be tuned by adapting several parameters that influence the quality of the results. By tuning these parameters, we can built a library of a set of runtime executions (contracts) of the Hopfield minimization process with different characteristics (quality, efficiency). Based on this set of algorithms, we propose in this paper an approach for constructing optimal sequences of contract algorithms in order to obtain the best average result of our system accounting for time constraints laid down by the application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cardeira C. and Mammeri Z. </author> <title> Neural Networks for Multiprocessor Task Scheduling. </title> <booktitle> Proc. of 8th Euromicro Workshop on Real-Time Systems, </booktitle> <publisher> IEEE CS, </publisher> <address> June, Vaesteraas, Sweden, </address> <year> 1994. </year>
Reference-contexts: Taggliarini and Christ present in [8] a simple method to encode into a simple Hopfield neural network a set of Boolean variables on witch constraints are applied. This model was applied to solve an optimization problem similar to scheduling <ref> [1] </ref> [5]. 2.2 Encoding a scheduling problem We will consider all along this paper the problem of scheduling a set of non preemptive tasks over a set of processors.
Reference: [2] <author> Cohen M. and Grossberg S. </author> <title> Absolute stability of goal pattern formation and parrallel memory storage by competitive neural networks. </title> <journal> In IEEE Transaction on Systems, Man and Cybernetics, </journal> <volume> 13, </volume> <pages> pp 815-826, </pages> <year> 1983. </year>
Reference-contexts: This model was originally proposed as a Content-Addressable-Memory, able to store and to retrieve pattern. Later, its author explained how an energy-based analysis of this model could enable its use for optimization problems. 2 J.M. Gallone and F. Charpillet The Cohen and Grossberg stability rules <ref> [2] </ref> state the conditions under which the energy function implemented by an Hopfield Neural Network converges to its minimal value. When the external input and the weights of the connections are set to define the energy function E, the result of the processing gives the output that minimizes E.
Reference: [3] <author> Gallone J-M. and Charpillet F. </author> <title> Hopfield Neural Network for Scheduling Non Preemptive Tasks. </title> <booktitle> Proc of 12th European Conference on Artificial Intelligence, </booktitle> <pages> pp 223-227, </pages> <year> 1996. </year>
Reference-contexts: Each task T i characterized by a given processing time p i , a time before which T i cannot begin its execution ( R i the ready time) and a time before which T i must complete (D i the deadline). In <ref> [3] </ref>, we proposed to solve this problem using Hopfield Neural Networks [6]. This approach permits to solve in an iterative way a scheduling problem, finding a solution through the minimization of an energy function. <p> These constraints state that at most n tasks are allocated per unit of time if n processors are available. More details about the encoding of the problem are given in <ref> [3] </ref>. 2.3 Approximations With the objective of addressing real-time applications, we have proposed a method which enables to design resource-bounded scheduling algorithms using Hopfield Neural Networks.
Reference: [4] <author> Gallone J-M. and Charpillet F. </author> <title> Real Time Scheduling with Neurosched. </title> <booktitle> Proc of 13th International Conference on Tool with Artificial Intelligence, </booktitle> <year> 1997. </year>
Reference-contexts: More details about the encoding of the problem are given in [3]. 2.3 Approximations With the objective of addressing real-time applications, we have proposed a method which enables to design resource-bounded scheduling algorithms using Hopfield Neural Networks. In <ref> [4] </ref>, we extend this work by studying the incidence of two kinds of approximation criteria on the processing time and on the success rate.
Reference: [5] <author> Herault L. Reseaux de neurones recursifs pour loptimisation combinatoire. </author> <type> PhD Thesis, </type> <institution> Institut National Polytechnique de Grenoble, </institution> <year> 1988. </year>
Reference-contexts: Taggliarini and Christ present in [8] a simple method to encode into a simple Hopfield neural network a set of Boolean variables on witch constraints are applied. This model was applied to solve an optimization problem similar to scheduling [1] <ref> [5] </ref>. 2.2 Encoding a scheduling problem We will consider all along this paper the problem of scheduling a set of non preemptive tasks over a set of processors.
Reference: [6] <author> Hopfield J.J. and Tank D.W. </author> <title> Neural computation of decisions in optimization problems. </title> <journal> Biological Cybernetics, </journal> <volume> 52, </volume> <pages> pp 141-152, </pages> <year> 1985. </year>
Reference-contexts: In [3], we proposed to solve this problem using Hopfield Neural Networks <ref> [6] </ref>. This approach permits to solve in an iterative way a scheduling problem, finding a solution through the minimization of an energy function. An interesting property of this approach is its capacity to tradeoff the quality for computation 1 LORIA, BP 239, 54506 Vandoeuvre-ls-Nancy, FRANCE. time. <p> In this case, each neuron plays a processing role for perceptual fragments. More rarely, connectionist models can also be adapted for optimization problems. In this case, some emergent properties are exploited to use the set of constraints. The Hopfield model <ref> [6] </ref> is a good example of such an approach. It is made up of a set of fully interconnected processing elements. The model relies on three major forms of parallel organization: parallel input channels, parallel output channels and parallel computation of the processing entities (called neurons). <p> Thus, if we can match the energy function to an optimization problem, the criteria will be reached when the Hopfield Neural Network will be in a stable state. Hopfield used this property to tackle the traveling salesman problem <ref> [6] </ref>. Taggliarini and Christ present in [8] a simple method to encode into a simple Hopfield neural network a set of Boolean variables on witch constraints are applied.
Reference: [7] <author> Russel S.J. and Subramanian D. </author> <title> Provably bounded-optimal agents. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> vol 1, </volume> <pages> pp 1-36, </pages> <year> 1995. </year>
Reference-contexts: i i i i i ( ) ( ) ( ( ) ) 1 1 1 = + + max D D 5.2 Exponential distribution In the particular case of an exponential distribution : F t e t ( ) = b It has been demonstrated by Russell and Subramanian <ref> [7] </ref>, that an optimal sequence can be computed in polynomial time for contract algorithms. We extends this result for interruptible anytime algorithms. Let p be the probability that an algorithm A i is interrupted during the first iteration assuming it starts at 0. Then p e = b D .
Reference: [8] <author> Tagliarini G.A., Christ Russell. </author> <title> Efficient Resource-Bounded Reasoning in AT-RALPH, </title> <booktitle> Proc. first AIPS, pp260, </booktitle> <volume> 266, </volume> <year> 1992. </year>
Reference-contexts: Thus, if we can match the energy function to an optimization problem, the criteria will be reached when the Hopfield Neural Network will be in a stable state. Hopfield used this property to tackle the traveling salesman problem [6]. Taggliarini and Christ present in <ref> [8] </ref> a simple method to encode into a simple Hopfield neural network a set of Boolean variables on witch constraints are applied.
Reference: [9] <author> Zilberstein S. </author> <title> Using anytime algorithms. </title> <journal> AI Magazine , 17(3) :73-83, </journal> <year> 1996. </year>
Reference-contexts: For example, in some application, tasks must deliver a result before a given deadline and the optimal solution is useless if the task miss the deadline. In some cases, the deadline is either not a priori known or stochastic. In these particular cases, resource bounded reasoning <ref> [9] </ref> is quite useful and overtake traditional techniques. We present in this paper such an approach for solving scheduling problems by using the anytime computation paradigm. The particular problem we want to solve consists in finding a schedule of a set of non preemptive tasks over a set of processors.
References-found: 9

