URL: http://www.win.tue.nl/cs/pa/wsinap/phd/sr.ps.Z
Refering-URL: http://www.win.tue.nl/cs/pa/wsinap/phd.html
Root-URL: http://www.win.tue.nl
Title: Single-Rail Handshake Circuits  migration and makes asynchronous circuits a potential technology of choice for low-power applications.  
Author: Ad Peeters Kees van Berkel 
Note: An important selling point for single-rail circuits is that they can be implemented in any (generic) standard-cell library. This facilitates technology  
Address: Comp. Sc. Building WAY-41  P.O. Box 513, 5600 MB Eindhoven Prof. Holstlaan 4, 5656 AA Eindhoven The Netherlands The Netherlands  
Affiliation: Dept. of Math. and  Eindhoven Univ. of Technology Philips Research Laboratories  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andrew Bailey and Mark Josephs. </author> <title> Sequencer circuits for VLSI programming. In Asynchronous Design Methodologies. </title> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1995. </year>
Reference-contexts: The control path is also a potential source for area inefficiencies. One remedy there is to identify frequent occurring combinations of handshake components and substitute these by more economic implementations. This is not further addressed here. Some ideas may be found in <ref> [1, 9, 16] </ref>. One may observe that low power or high speed are not identified as primary goals in this exercise, although low power is one of the main motivations for looking at asynchronous circuits.
Reference: [2] <author> Erik Brunvand. </author> <title> Translating Concurrent Communicating Programs into Asynchronous Circuits. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1991. </year>
Reference-contexts: The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention <ref> [2, 5, 8, 13] </ref>. Four-phase push schemes are used in [2, 4, 11]. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention [2, 5, 8, 13]. Four-phase push schemes are used in <ref> [2, 4, 11] </ref>. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention [2, 5, 8, 13]. Four-phase push schemes are used in [2, 4, 11]. Generally, only the early scheme is applied, except in <ref> [2] </ref>, where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. On a push channel, every request signals the beginning of a data-valid period, and the subsequent acknowledge signals the end of the data-valid period.
Reference: [3] <author> Hsi-Chuan Chen and David Hung-Chang Du. </author> <title> Path sensitization in critical path problem. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 12(2) </volume> <pages> 196-207, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: The actual delay of the delay-matching chains can be determined straightforwardly. Determining the critical path of the combinational part is more complex, but can done by a timing verifier <ref> [3] </ref>. We have not implemented the critical-path checks in the design flow but rather applied timing simulations based on accurate timing models of the standard cells. In these simulations the set-up and hold time constraints of the latch can be verified in various scenarios.
Reference: [4] <author> Paul Day and J. Viv Woods. </author> <title> Investigation into mi-cropipeline latch design styles. </title> <journal> IEEE Transactions on VLSI Systems, </journal> <volume> 3(2), </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention [2, 5, 8, 13]. Four-phase push schemes are used in <ref> [2, 4, 11] </ref>. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> A C-element would make the implementation very robust at the price of more area and a performance loss [5]. An alternative circuit without C-element could be based on single-phase latches, which use only one control wire, but these latches tend to be larger and slower <ref> [4] </ref>. The correct operation of the latch control circuit depends on assumptions about (i) the minimum time between w a " and w r #, and (ii) the capacitive load at the latch outputs. <p> Although this circuit uses normally-opaque control, the cycle time compares well with that reported for dedicated micropipeline latch-control structures <ref> [4] </ref>. A single-rail implementation of the DCC error decoder [15] has led to functionally and audibly correct silicon. The single-rail chip is an improvement over the double-rail version in all performance aspects. It is 40% smaller and uses only 25% of the power. <p> The use of capture-pass latches [13] would allow for a simpler latch-control circuit, but then the latches are slow and require more transistors. Recent insights seem to lead to the conclusion that a four-phase latch-control circuit is more area-efficient and leads to significant faster circuits <ref> [4] </ref>. Two-phase multiplexer control could be based on a two-phase call component, the implementation of which is quite complex and requires conversion from two-phase to four-phase signals for the control of the level-sensitive multiplexer switches.
Reference: [5] <author> S. B. Furber, P. Day, J. D. Garside, N. C. Paver, and J. V. Woods. AMULET1: </author> <title> A micropipelined ARM. </title> <booktitle> In Proceedings IEEE Computer Conference (COM-PCON), </booktitle> <pages> pages 476-485, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention <ref> [2, 5, 8, 13] </ref>. Four-phase push schemes are used in [2, 4, 11]. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> These signals are generated by a simple latch control circuit. One may observe that no Muller C-element is used to generate a completion signal from en and ne. A C-element would make the implementation very robust at the price of more area and a performance loss <ref> [5] </ref>. An alternative circuit without C-element could be based on single-phase latches, which use only one control wire, but these latches tend to be larger and slower [4]. <p> However, observability can be enhanced with scan testing techniques [10]. 7.2 Comparison with two-phase bundled data Our single-rail handshake circuits are based on a four-phase bundled-data protocol. Many implementations of bundled data circuits, however, use a two-phase signaling protocol <ref> [5, 8, 13] </ref>. The use of such a two-phase protocol at first sight leads to faster and more power-efficient circuits, since only half of the control transitions are required. However, it also leads to some complications, most notably in latch and multiplexer control circuits.
Reference: [6] <author> Bruce Gilchrist, J. H. Pomerene, and S. Y. Wong. </author> <title> Fast carry logic for digital computers. </title> <journal> IRE Transactions on Electronic Computers, </journal> <volume> EC-4(4):133-136, </volume> <month> December </month> <year> 1955. </year>
Reference-contexts: The matching is done on a worst case basis, which means that for the adder, for example, the full length carry-ripple is anticipated upon, rather than the lower average case. A double-rail carry scheme could be employed to obtain optimal delay matching, but that requires more circuitry <ref> [6] </ref>. The matching is implemented by using strings of inverters or nand and nor gates such that delays match at about equal output load, using the linear delay versus load functions from the characterized cell library.
Reference: [7] <author> A. P. Kostelijk. Vera, </author> <title> a rule-balsed verification assistant for VLSI circuit design. </title> <booktitle> In Proc. of the VLSI 89 Conference, </booktitle> <pages> pages 89-98, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: An essential property of the peephole optimizations is that they do not undermine the safety margins in the bundles. Improvements in the datapath generally reduce the latency of the rippling data, and thereby increase the margins. The optimization step has been implemented using a rule-based pattern-matching algorithm (VERA, <ref> [7] </ref>). Logic optimizers could also play a role in the datapath optimization. 6.2 Safety and margins Building a single-rail compiler in a standard-cell layout style poses some challenges due to the uncertainty before layout of the actual wiring capacitances.
Reference: [8] <author> N. C. Paver. </author> <title> The Design and Implementation of an Asynchronous Microprocessor. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Manchester, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention <ref> [2, 5, 8, 13] </ref>. Four-phase push schemes are used in [2, 4, 11]. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> However, observability can be enhanced with scan testing techniques [10]. 7.2 Comparison with two-phase bundled data Our single-rail handshake circuits are based on a four-phase bundled-data protocol. Many implementations of bundled data circuits, however, use a two-phase signaling protocol <ref> [5, 8, 13] </ref>. The use of such a two-phase protocol at first sight leads to faster and more power-efficient circuits, since only half of the control transitions are required. However, it also leads to some complications, most notably in latch and multiplexer control circuits. <p> However, it also leads to some complications, most notably in latch and multiplexer control circuits. Two-phase latch control requires Toggles and Merges (xors) to convert from the two-phase protocol to the level-sensitive enable signals. The Toggle is not a common CMOS gate, and its implementation is complex <ref> [8] </ref>. An important consequence of the use of Toggles and Merges is that they are in the critical path of the control, which leads to poor cycle times, and hence restricts the maximum attainable speed in a micropipeline.
Reference: [9] <author> Ad Peeters. </author> <title> Implementation of Handshake Circuits. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, </institution> <year> 1995. </year>
Reference-contexts: The control path is also a potential source for area inefficiencies. One remedy there is to identify frequent occurring combinations of handshake components and substitute these by more economic implementations. This is not further addressed here. Some ideas may be found in <ref> [1, 9, 16] </ref>. One may observe that low power or high speed are not identified as primary goals in this exercise, although low power is one of the main motivations for looking at asynchronous circuits. <p> This paper necessarily focuses on some essential insights required to understand and appreciate the operation and implementation of single-rail handshake circuits. A more extensive treatment of the subject can be found in <ref> [9] </ref>. 2 Handshake channels In a handshake protocol, an active and a passive partner synchronize via a handshake channel by communicating re quest and acknowledge signals. The active partner initiates a handshake by issuing a request, the passive partner then responds by sending an acknowledge. <p> The latter is considered to be important since the transferrer is a frequently used component in Tangram handshake circuits. Other im plementations of the transferrer and other interesting data--valid combinations may be found in <ref> [9] </ref>. 4.1 Early scheme A wire-only implementation of the transferrer that resembles the double-rail implementation [14] is depicted in Fig. 6. When activated along channel a, this transferrer first performs an up-handshake along b, then one along c, after which it sends an acknowledge on a.
Reference: [10] <author> Marly Roncken. </author> <title> Partial scan test for asynchronous circuits illustrated on a DCC error corrector. </title> <booktitle> In Proc. International Symposium on Advanced Research in Asynchronous Circuits and Systems, </booktitle> <pages> pages 247-256, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: This property makes stuck-at output faults in the datapath observable. In single-rail datapaths, stuck-at faults on data wires will not always give rise to deadlock, making testing more complex. However, observability can be enhanced with scan testing techniques <ref> [10] </ref>. 7.2 Comparison with two-phase bundled data Our single-rail handshake circuits are based on a four-phase bundled-data protocol. Many implementations of bundled data circuits, however, use a two-phase signaling protocol [5, 8, 13].
Reference: [11] <author> Charles L. Seitz. </author> <title> System timing. </title> <editor> In Carver A. Mead and Lynn A. Conway, editors, </editor> <title> Introduction to VLSI Systems, chapter 7. </title> <publisher> Addison-Wesley, </publisher> <year> 1980. </year>
Reference-contexts: We further fl Since May 1995 at Philips Research Laboratories, Eindhoven. more stick to the standard-cell layout style, four-phase control, and to self-initializable realizations. An obvious candidate for area reduction is the double-rail datapath. Single-rail data encoding <ref> [11] </ref> uses only one wire per bit, plus one additional wire to signal the validity of the data. This form of data encoding is also known as bundled data [13] and was already applied in the sixties in the Macromodule project [12]. <p> On pull channel the (active) receiver pulls the data through the channel and communication is demand driven. In the remainder we consider push and pull channels only. One way to encode data in the handshake protocol is to use the so-called double-rail code <ref> [11] </ref>, in which two wires, x 0 and x 1 , are used to represent a bit x. When no value is present, both wires are low. <p> In the Macromodule project, communication of data was implemented using a single-rail handshake protocol, in which the request and acknowledge signals were called initiation and completion signals [12]. The terms single and double rail are due to Seitz <ref> [11] </ref>. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention [2, 5, 8, 13]. Four-phase push schemes are used in [2, 4, 11]. <p> The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention [2, 5, 8, 13]. Four-phase push schemes are used in <ref> [2, 4, 11] </ref>. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> The return-to-zero phase now follows the same path but does not affect the value of z, and thus is redundant. This data-valid convention, where the data has to be latched when c r ^ :c a , is also described by Seitz <ref> [11, Sec. 7.8.2] </ref>. It has, however, several apparent drawbacks. First of all, the return-to-zero phase of the data-transfer is redundant, which implies that it is either wasted time, or a quick-reset should be implemented. One could, for example, apply asymmetric delays in the pull part of the handshake circuit.
Reference: [12] <editor> Mishell J. Stucki, Severo M. Ornstein, and Wesley A. Clark. </editor> <booktitle> Logical design of macromodules. In AFIPS Conference Proceedings: 1967 Spring Joint Computer Conference, </booktitle> <volume> volume 30, </volume> <pages> pages 357-364, </pages> <address> At-lantic City, NJ, 1967. </address> <publisher> Academic Press. </publisher>
Reference-contexts: Single-rail data encoding [11] uses only one wire per bit, plus one additional wire to signal the validity of the data. This form of data encoding is also known as bundled data [13] and was already applied in the sixties in the Macromodule project <ref> [12] </ref>. Especially for wide datapaths, single-rail encoding should lead to a reduction in the number of wires and transistors, and thus to a smaller area. Of course this comes at some price such as new test challenges and the need for more verification. <p> In the Macromodule project, communication of data was implemented using a single-rail handshake protocol, in which the request and acknowledge signals were called initiation and completion signals <ref> [12] </ref>. The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention [2, 5, 8, 13]. Four-phase push schemes are used in [2, 4, 11].
Reference: [13] <author> Ivan E. Sutherland. </author> <title> Micropipelines. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 720-738, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: An obvious candidate for area reduction is the double-rail datapath. Single-rail data encoding [11] uses only one wire per bit, plus one additional wire to signal the validity of the data. This form of data encoding is also known as bundled data <ref> [13] </ref> and was already applied in the sixties in the Macromodule project [12]. Especially for wide datapaths, single-rail encoding should lead to a reduction in the number of wires and transistors, and thus to a smaller area. <p> The terms single and double rail are due to Seitz [11]. In the remainder of this section two- and four-phase data valid schemes are introduced. The two-phase push scheme is also known as the bundled-data convention <ref> [2, 5, 8, 13] </ref>. Four-phase push schemes are used in [2, 4, 11]. Generally, only the early scheme is applied, except in [2], where broad is also mentioned. 3.1 Two-phase single rail In the two-phase handshake protocol, there is no choice for the data-valid and data-release signals. <p> However, observability can be enhanced with scan testing techniques [10]. 7.2 Comparison with two-phase bundled data Our single-rail handshake circuits are based on a four-phase bundled-data protocol. Many implementations of bundled data circuits, however, use a two-phase signaling protocol <ref> [5, 8, 13] </ref>. The use of such a two-phase protocol at first sight leads to faster and more power-efficient circuits, since only half of the control transitions are required. However, it also leads to some complications, most notably in latch and multiplexer control circuits. <p> An important consequence of the use of Toggles and Merges is that they are in the critical path of the control, which leads to poor cycle times, and hence restricts the maximum attainable speed in a micropipeline. The use of capture-pass latches <ref> [13] </ref> would allow for a simpler latch-control circuit, but then the latches are slow and require more transistors. Recent insights seem to lead to the conclusion that a four-phase latch-control circuit is more area-efficient and leads to significant faster circuits [4].
Reference: [14] <author> Kees van Berkel. </author> <title> Handshake Circuits: an Asynchronous Architecture for VLSI Programming, </title> <booktitle> volume 5 of International Series on Parallel Computation. </booktitle> <publisher> Cam-bridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: 1 Introduction Handshake circuits form the intermediate representation in the fully automatic compilation of Tangram programs to VLSI circuits <ref> [14] </ref>. VLSI programs written in Tangram are translated in a transparent way into handshake circuits, which are subsequently, on a component-by-component basis, replaced by gate netlists. The datapaths of these circuits have previously been implemented using double-rail data encoding. <p> The latter is considered to be important since the transferrer is a frequently used component in Tangram handshake circuits. Other im plementations of the transferrer and other interesting data--valid combinations may be found in [9]. 4.1 Early scheme A wire-only implementation of the transferrer that resembles the double-rail implementation <ref> [14] </ref> is depicted in Fig. 6. When activated along channel a, this transferrer first performs an up-handshake along b, then one along c, after which it sends an acknowledge on a. The return-to-zero path follows the same cycle. <p> This requires a slow latch-control circuit, based on an S-element <ref> [14] </ref>. <p> It was not obvious beforehand that this independence could be maintained, but it turned out that handshake circuits were indeed a viable starting point for single-rail compilation. The compilation from Tangram to handshake circuits is a transparent syntax-directed translation <ref> [14] </ref>. 6.1 Peephole optimization Post-optimization can be considered at all levels of representation. At the handshake circuit level an interesting saving is obtained by replacing trees of sequencers, mixers, and multiplexers by equivalent multi-channel components.
Reference: [15] <author> Kees van Berkel, Ronan Burgess, Joep Kessels, Ad Peeters, Marly Roncken, and Frits Schalij. </author> <title> Asynchronous circuits for low power: A DCC error corrector. </title> <journal> IEEE Design & Test of Computers, </journal> <volume> 11(2) </volume> <pages> 22-32, </pages> <month> Summer </month> <year> 1994. </year>
Reference-contexts: The datapaths of these circuits have previously been implemented using double-rail data encoding. With this approach a number of interesting circuits have been realized, such as the chips for the error decoder of the Digital Compact Cassette player <ref> [15] </ref>. Double-rail implementations of handshake circuits are robust, but they have two important disadvantages. First of all the realizations are rather area inefficient. <p> Although this circuit uses normally-opaque control, the cycle time compares well with that reported for dedicated micropipeline latch-control structures [4]. A single-rail implementation of the DCC error decoder <ref> [15] </ref> has led to functionally and audibly correct silicon. The single-rail chip is an improvement over the double-rail version in all performance aspects. It is 40% smaller and uses only 25% of the power.
Reference: [16] <author> Kees van Berkel, Ronan Burgess, Joep Kessels, Ad Peeters, Marly Roncken, Frits Schalij, and Rik van de Wiel. </author> <title> A single-rail re-implementation of a DCC error detector using a generic standard-cell library. In Asynchronous Design Methodologies. </title> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1995. </year>
Reference-contexts: The control path is also a potential source for area inefficiencies. One remedy there is to identify frequent occurring combinations of handshake components and substitute these by more economic implementations. This is not further addressed here. Some ideas may be found in <ref> [1, 9, 16] </ref>. One may observe that low power or high speed are not identified as primary goals in this exercise, although low power is one of the main motivations for looking at asynchronous circuits. <p> The verification process has been applied to multiple designs and uncovered no problems so far. The design flow has also resulted in first-time right silicon, which is functional over a wide supply-voltage range <ref> [16] </ref>. This suggests that there is room for tighter delay-matching. 7 Results All handshake components have been mapped onto a standard generic cell library without any problems. To evaluate the efficiency of the single-rail circuits, some experiments were done and compared with double-rail and results reported by others. <p> Furthermore, it is potentially 3 times as fast, which is not required in the DCC player, but allows it to be operated at a lower supply voltage. A detailed evaluation of the single-rail silicon, and a comparison with various other realizations of the same function can be found in <ref> [16] </ref>. 7.1 Comparison with double-rail Area Several other designs have also been compiled to netlists and were simulated.
Reference: [17] <author> Kees van Berkel, Ferry Huberts, and Ad Peeters. </author> <title> Stretching quasi delay insensitivity by means of extended isochronic forks. In Asynchronous Design Methodologies. </title> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1995. </year>
Reference-contexts: Data-dominated applications, such as the FIFO and the Speech codec, profit highly from the single-rail implementation of the data. A significant part of the gain in the (de)coders is due to the inefficient double-rail implementations of adders and exclusive ors. These implementations can, however, be improved <ref> [17] </ref>. The DCC controller is control dominated, so single-rail and double-rail make less of a difference. Power Energy efficiency was a second order consideration in going from double-rail to single-rail.
References-found: 17

