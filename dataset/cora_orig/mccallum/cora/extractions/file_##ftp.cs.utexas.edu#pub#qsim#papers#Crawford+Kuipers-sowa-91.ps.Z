URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Crawford+Kuipers-sowa-91.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/algy/algernon.html
Root-URL: 
Email: jc@cs.utexas.edu kuipers@cs.utexas.edu  
Title: ALL: Formalizing Access Limited Reasoning  
Author: J. M. Crawford Benjamin Kuipers 
Date: 25 May 1990  
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences The University of Texas At Austin  
Abstract: Access-Limited Logic (ALL) is a language for knowledge representation which formalizes the access limitations inherent in a network-structured knowledge base. Where a classical deductive method or logic programming language would retrieve all assertions that satisfy a given pattern, an access-limited logic retrieves all assertions reachable by following an available access path. The complexity of inference is thus independent of the size of the knowledge-base and depends only on its local connectivity. Access-Limited Logic, though incomplete, still has a well defined semantics and a weakened form of completeness, Socratic Completeness, which guarantees that for any query which is a logical consequence of the knowledge-base, there exists a series of queries after which the original query will succeed. This chapter presents an overview of ALL, and sketches the proofs of its Socratic Completeness and polynomial time complexity.
Abstract-found: 1
Intro-found: 1
Reference: [Allen, 84] <author> Allen, J. F., Giuliano, M., and Frisch A. M. </author> <year> (1984). </year> <title> The HORNE Reasoning System, </title> <type> TR 126, </type> <institution> Computer Science Department, University of Rochester, Rochester NY. </institution>
Reference: [Apt, 88] <author> Apt, Krzysztof, R. </author> <year> (1988). </year> <note> Introduction to logic programming (revised and extended version), Technical Report TR-87-35, </note> <institution> Department of Computer Science, University of Texas at Austin, Austin Texas. </institution> <note> To appear in Handbook of Theoretical Computer Science, </note> <editor> (J. van Leeuwen, Managing Editor), </editor> <publisher> North-Holland. </publisher>
Reference-contexts: Accordingly we develop the syntax of ALL generally following the notation in <ref> [Apt, 88] </ref>. 3.2.1 Alphabets, Terms and Propositions The alphabet of an Access-Limited Logic consists of countably infinite sets of variables, constants, and relations, the connectives and !, and the operators query and assert. <p> We notate the most general relevant unifier of q 1 and q 2 as mgru (q 1 ; q 2 ). 5 It has been shown in <ref> [Apt, 88] </ref> that any propositions which are unifiable, have a most general relevant unifier. 3.4.2 The Partitions of ALL Operations Intuitively, a partition of K corresponds to a part of the knowledge-base which is somehow semantically cohesive, and distinct from the rest of the knowledge-base. <p> We map K to an equivalent logic program LP (K). One can then show that for any rule in K which would apply on the next iteration of T LP (K) (where T is the immediate consequence operator in logic programming | see [Crawford & Kuipers, 90] or <ref> [Apt, 88] </ref>) there exists a path in ALL the query of which will cause the rule to fire (this result would not hold for if-added rules if we did not close our knowledge-bases | see section 3.4.5). We know from the study of logic programming (see [Apt, 88]) that `completeness' with <p> & Kuipers, 90] or <ref> [Apt, 88] </ref>) there exists a path in ALL the query of which will cause the rule to fire (this result would not hold for if-added rules if we did not close our knowledge-bases | see section 3.4.5). We know from the study of logic programming (see [Apt, 88]) that `completeness' with respect to the immediate consequence operator is sufficient to guarantee completeness. 3.6.2 Partitional Completeness Intuitively, Partitional Completeness says that if all information needed to prove a query is located `close enough' to the query then the query will succeed. <p> From this lemma the result again follows by the observation (from the study of logic programming, see <ref> [Apt, 88] </ref>) that `completeness' with respect to the immediate consequence operator is sufficient to guarantee completeness. 4 Complexity In this subsection we show that a primitive ALL operation can be computed in time polynomial in the size of the portion of the knowledge-base accessible to it. <p> The design of the inference mechanism in ALL has been heavily influenced by logic programming. In fact any function-free logic program (without negation) can be written in ALL. Further, the notation and results from the proof of the completeness of logic programming <ref> [Apt, 88, Lloyd, 84] </ref> have been used extensively in the completeness proofs for ALL. In a sense our use of access-paths is a strategy for ordering conjunctive queries and as such is related to the more elaborate approach given in [Smith & Genesereth, 85].
Reference: [Brachman, 77] <author> Brachman, R. J. </author> <year> (1977). </year> <title> What's in a concept: structural foundations for semantic networks. </title> <journal> Int. J. Man-Machine Studies 9: </journal> <pages> 127-152. </pages>
Reference: [Brachman 79] <author> Brachman, R. J. </author> <year> (1979). </year> <title> On the epistemological status of semantic networks. </title> <note> In [Findler, 79]. (Reprinted in [Brachman & Levesque, </note> <month> 85], </month> <pages> pp. 191-215.) </pages>
Reference-contexts: After Woods' influential "What's in a Link" paper [Woods, 75], many knowledge representation languages restricted the allowable relations to a small set which were given a precise syntax and semantics <ref> [Brachman 79, Shapiro, 89] </ref>. Our approach in ALL is to define our semantics by "borrowing" the model theory of predicate calculus (by mapping ALL knowledge-bases to statements in predicate calculus and proving consistency and weakened completeness results) and to allow relations to be given any names.
Reference: [Brachman et al., 83] <author> Brachman, R.J., Fikes,R. E., and Levesque H. J. </author> <year> (1983). </year> <title> Krypton: A functional approach to knowledge representation. </title> <type> FLAIR Technical Report No. 16, </type> <institution> Fairchild Laboratory for Artificial Intelligence Research, </institution> <address> Palo Alto, CA, </address> <month> May, </month> <note> 1983 (revised version in IEEE Computer 16(10), 1983, 67-73). (Reprinted in [Brachman & Levesque, </note> <month> 85], </month> <pages> pp. 412-429.) </pages>
Reference-contexts: Past work has generally 6 CONCLUSION 19 used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover <ref> [Brachman et al., 83, Schubert et al., 83] </ref> or a weaker deduction system [Levesque, 84, Patel-Schneider, 85, Vilain, 85] for general reasoning. A notable exception to this generalization is the recent work of Haan and Schubert [Schubert, 79, Haan & Schubert, 86]. <p> Past work has made other divisions | e.g. the T-box and A-box of <ref> [Brachman et al., 83] </ref>. The second answer is that our goal is to develop a knowledge representation system with understandable inferential power. To this end, Socratic Completeness is a necessary (but not yet sufficient) property.
Reference: [Brachman & Levesque, 85] <author> Brachman, Ronald J. and Levesque, Hector, J. </author> <title> Readings in Knowledge Representation, </title> <publisher> Morgan Kaufmann, Los Altos, Cal., </publisher> <year> 1985. </year>
Reference: [Bobrow & Winograd, 77] <author> Bobrow, Daniel G., and Winograd, </author> <title> Terry (1977). An overview of KRL, a knowledge representation language. </title> <booktitle> Cognitive Science 1(1), </booktitle> <pages> 3-46. </pages> <note> (Reprinted in [Brachman & Levesque, </note> <month> 85], </month> <pages> pp. 263-285.) </pages>
Reference: [Boolos & Jeffrey, 80] <author> Boolos, George S., and Jeffrey, Richard C., </author> <title> Computability and Logic, </title> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1980. </year> <note> REFERENCES 24 </note>
Reference-contexts: If a knowledge representation language is as expressive as first-order predicate calculus, then the problem of deciding what an agent implicitly knows (i.e. what an agent could logically deduce from its knowledge) is unsolvable <ref> [Boolos & Jeffrey, 80] </ref>. Thus a sound and decidable knowledge representation and reasoning system must either give up expressive power, or use a weak inference system with an incomplete set of deduction rules or artificial resource limits (e.g. bounds on the number of applications of modus ponens).
Reference: [Crawford & Kuipers, 89] <author> Crawford, J. M., and Kuipers, B. </author> <year> (1989). </year> <title> Towards a theory of access-limited logic for knowledge representation. </title> <booktitle> Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, California. </address>
Reference: [Crawford & Kuipers, 90] <author> Crawford, J. M., and Kuipers, B. </author> <title> Towards a Formalization of Access Limited Logic. </title> <type> Technical Report AI TR-90-133, </type> <institution> University of Texas at Austin, </institution> <year> 1990. </year>
Reference-contexts: There remains, at least, the less formal claim that knowledge can be organized cleanly into partitions. This claim is discussed further in sections 3.4.2 and 6.2. The rest of this section sketches the formal development of ALL. The full account can be found in <ref> [Crawford & Kuipers, 90] </ref>. Our formal work in ALL generally lags several months behind our implementation work and the results presented here only formalize a part of ALL. <p> We map K to an equivalent logic program LP (K). One can then show that for any rule in K which would apply on the next iteration of T LP (K) (where T is the immediate consequence operator in logic programming | see <ref> [Crawford & Kuipers, 90] </ref> or [Apt, 88]) there exists a path in ALL the query of which will cause the rule to fire (this result would not hold for if-added rules if we did not close our knowledge-bases | see section 3.4.5). <p> Recall that if c is a frame and r is a slot then we refer to the pair hc; ri as a frame-slot. Recall also that partitions are simply collections of frame-slots. The definition of the accessible portion of a knowledge-base is fairly technical and is given in <ref> [Crawford & Kuipers, 90] </ref>. In this section we simply give the intuitions behind the definitions. For a knowledge-base K, and p C fi R we first define rules (p) = Ar [ N rn p . <p> K (O))) into frame-slots in change n (q; par K (O)) (some amount of care is required to prove that ops includes all the assertions and queries which O n depends on | for details (and a formal definition of `the set of all operations which O depends on') see <ref> [Crawford & Kuipers, 90] </ref>).
Reference: [Crawford, Farquhar, & Kuipers, 90] <author> Crawford, J., Farquhar, A., and Kuipers, B. </author> <year> (1990). </year> <title> QPC: A Compiler from Physical Models into Qualitative Differential Equations. </title> <booktitle> AAAI-90. </booktitle>
Reference-contexts: From "Every man loves a woman" conclude that there must be some woman that George loves).. We have also solved the bank problem mentioned in the introduction. Our most recent work involves the use of ALL to express the ideas of Qualitative Process Theory [Forbus, 84]. The result <ref> [Crawford, Farquhar, & Kuipers, 90] </ref> is a system which compiles qualitative descriptions of physical situations into qualitative differential equations which can be simulated by QSIM [Kuipers, 86]. 13 Ultimately we are working towards a formal theory which has the expressive power of predicate calculus, and is consistent and Socratically Complete, but
Reference: [Etherington et al., 89] <author> Etherington, David W., Borgida, Alex, Brachman, Ronald J., and Kautz, </author> <title> Henry (1989). Vivid knowledge and tractable reasoning: </title> <type> preliminary report. </type> <pages> IJCAI-89 pp. 1146-1152. </pages>
Reference-contexts: Thus in ALL it is the structure of the knowledge itself (or more specifically the structure of the access paths in the rules) which controls access and reasoning. Another relevant line of research is the work on vivid knowledge-bases <ref> [Etherington et al., 89] </ref>. A vivid knowledge-base ": : : trades accuracy for speed : : :" [Etherington et al., 89] by constructing a complete database of ground facts, from facts that may be presented in a more expressive language. <p> Another relevant line of research is the work on vivid knowledge-bases <ref> [Etherington et al., 89] </ref>. A vivid knowledge-base ": : : trades accuracy for speed : : :" [Etherington et al., 89] by constructing a complete database of ground facts, from facts that may be presented in a more expressive language.
Reference: [Fagin & Halpern, 88] <author> Ronald Fagin and Joseph Y. Halpern. </author> <year> (1988). </year> <title> Belief, awareness, and limited reasoning. </title> <journal> Artificial Intelligence: </journal> <volume> 34: </volume> <pages> 39-76. </pages>
Reference: [Findler, 79] <author> Findler, </author> <title> N.V., Associative Networks: Representation and Use of Knowledge by Computer, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [Fine, 85] <author> Fine, </author> <title> Kit, Reasoning With Arbitrary Objects, </title> <journal> Aristotelian Society Series, </journal> <volume> Volume 3, </volume> <publisher> Basil Black-well, Oxford, </publisher> <year> 1985. </year>
Reference-contexts: Our most recent work has been on adding, to the implementation, the ability to represent, and do some kinds of reasoning with, arbitrarily nested quantified expressions. Our approach to nested quantification is based on the idea of arbitrary objects <ref> [Fine, 85] </ref>. One may, for example, reason about a large class of objects by reasoning about an `arbitrary object' having the properties common to all objects in the group.
Reference: [Forbus, 84] <author> K. D. Forbus. </author> <year> (1984). </year> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168. </pages>
Reference-contexts: From "Every man loves a woman" conclude that there must be some woman that George loves).. We have also solved the bank problem mentioned in the introduction. Our most recent work involves the use of ALL to express the ideas of Qualitative Process Theory <ref> [Forbus, 84] </ref>.
Reference: [Haan & Schubert, 86] <author> Haan, J., and Schubert, L. K. </author> <year> (1986). </year> <title> Inference in a topically organized semantic net. </title> <booktitle> AAAI-86, </booktitle> <pages> pp. 334-338. </pages>
Reference-contexts: A notable exception to this generalization is the recent work of Haan and Schubert <ref> [Schubert, 79, Haan & Schubert, 86] </ref>. ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning. <p> The solution used in ECOSYSTEM is to maintain a taxonomy of knowledge and use this taxonomy to guide reasoning <ref> [Haan & Schubert, 86] </ref>. The difference in ALL is that access is limited to known access paths, which access facts many nodes away in the network, but do so in a controlled fashion.
Reference: [Hanks & McDermott, 86] <author> Hanks, Steve, and McDermott, </author> <title> Drew (1986). Default reasoning, non-monotonic logics, and the frame problem. </title> <booktitle> AAAI-86, </booktitle> <pages> pp. 328-333. </pages>
Reference-contexts: Beyond simple examples of forward and backward-chaining we have investigated some standard examples of default inheritance (essentially implementing the inferential distance rule of Touretzky [1986]), the Yale shooting problem <ref> [Hanks & McDermott, 86] </ref>, several examples which involve reasoning about sets of similar objects, and some examples of reasoning from quantified information (e.g. From "Every man loves a woman" conclude that there must be some woman that George loves).. We have also solved the bank problem mentioned in the introduction.
Reference: [Hayes, 85] <author> Hayes, Patrick J. </author> <year> (1985). </year> <title> The second naive physics manifesto. In Formal Theories of the Com-monsense World, </title> <editor> ed. Hobbs, Jerry R. and Moore, Robert C., </editor> <publisher> Ablex Publishing Co., </publisher> <address> New Jersey, </address> <pages> pp. 18-30. </pages>
Reference: [Hayes, 79] <author> Hayes, Patrick J. </author> <year> (1979). </year> <title> The logic of frames. In Frame Conceptions and Text Understanding, </title> <editor> ed. D. Metzing, </editor> <publisher> Walter de Gruyter and Co., Berlin, </publisher> <pages> pp. 46-61. </pages> <note> (Reprinted in [Brachman & Levesque, </note> <month> 85], </month> <pages> pp. 288-295.) </pages>
Reference-contexts: known mapping between atomic propositions in predicate calculus and slots in frames; the atomic proposition that the object a stands in relation r to the object b can be written logically as r (a; b) or expressed, in frames, by including object b in the r slot of object a <ref> [Hayes, 79] </ref>. P (a; b) P: values: f : : : b : : : g We refer to the pair ha; ri as a frame-slot. Thus r (a; b) is equivalent to saying that the value b is in the frame-slot ha; ri.
Reference: [Hayes-Roth, 85] <author> Hayes-Roth, B. </author> <year> (1985). </year> <title> A blackboard architecture for control. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 26 </volume> <pages> 251-321. </pages>
Reference: [Hintikka, 62] <author> Hintikka, J. </author> <title> Knowledge and Belief. </title> <publisher> Cornell University Press, </publisher> <address> Ithaca, NY, </address> <year> 1962. </year>
Reference: [Kay, 73] <author> Kay, M. </author> <year> (1973). </year> <title> The MIND system. In Natural Language Processing, </title> <editor> ed. R. Rustin. </editor> <publisher> Algorithmics Press, </publisher> <address> New York. </address>
Reference: [Kuipers, 78] <author> Kuipers, B. J. </author> <year> (1978). </year> <title> Modeling spatial knowledge. </title> <booktitle> Cognitive Science 2: </booktitle> <pages> 129-153. </pages>
Reference: [Kuipers, 79] <author> Kuipers, B. J. </author> <year> (1979). </year> <title> On representing commonsense knowledge. </title> <booktitle> In [Findler, </booktitle> <pages> 79]. </pages>
Reference: [Kuipers, 86] <author> B. J. Kuipers. </author> <year> (1986). </year> <title> Qualitative simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 29 </volume> <pages> 289-338. </pages>
Reference-contexts: Our most recent work involves the use of ALL to express the ideas of Qualitative Process Theory [Forbus, 84]. The result [Crawford, Farquhar, & Kuipers, 90] is a system which compiles qualitative descriptions of physical situations into qualitative differential equations which can be simulated by QSIM <ref> [Kuipers, 86] </ref>. 13 Ultimately we are working towards a formal theory which has the expressive power of predicate calculus, and is consistent and Socratically Complete, but is still computationally tractable.
Reference: [Lenat et al., 86] <author> Doug Lenat, Mayank Prakash, and Mary Shepard. </author> <year> (1986). </year> <title> CYC: Using common sense knowledge to overcome brittleness and knowledge acquisition bottlenecks. </title> <journal> AI Magazine VI(4), </journal> <month> Winter, </month> <year> 1986. </year> <note> REFERENCES 25 </note>
Reference: [Levesque, 86] <author> Levesque, H. J. </author> <year> (1986). </year> <title> Knowledge representation and reasoning. </title> <journal> In Ann. Rev. Comput. Sci. </journal> <volume> 1 </volume> <pages> 255-87. </pages> <publisher> Annual Reviews Inc, </publisher> <address> Palo Alto, California. </address>
Reference-contexts: However, such inference systems tend to be difficult to describe semantically and tend to place unnatural limits on an agent's reasoning ability <ref> [Levesque, 86] </ref>. As an example of non-trivial inference, consider the following problem (from [Wylie, 57]): In a certain bank the positions of cashier, manager, and teller are held by Brown, Jones and Smith, though not necessarily respectively. The teller, who was an only child, earns the least.
Reference: [Levesque, 84] <author> Levesque, H.J. </author> <year> (1984). </year> <title> A logic of implicit and explicit belief, </title> <booktitle> AAAI-84, </booktitle> <pages> pp. 198-202. </pages>
Reference-contexts: Past work has generally 6 CONCLUSION 19 used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover [Brachman et al., 83, Schubert et al., 83] or a weaker deduction system <ref> [Levesque, 84, Patel-Schneider, 85, Vilain, 85] </ref> for general reasoning. A notable exception to this generalization is the recent work of Haan and Schubert [Schubert, 79, Haan & Schubert, 86]. ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [Lloyd, 84] <author> Lloyd, J.W. </author> <title> Foundations of Logic Programming, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: The design of the inference mechanism in ALL has been heavily influenced by logic programming. In fact any function-free logic program (without negation) can be written in ALL. Further, the notation and results from the proof of the completeness of logic programming <ref> [Apt, 88, Lloyd, 84] </ref> have been used extensively in the completeness proofs for ALL. In a sense our use of access-paths is a strategy for ordering conjunctive queries and as such is related to the more elaborate approach given in [Smith & Genesereth, 85].
Reference: [McCarthy, 87] <author> McCarthy, J. </author> <year> (1987). </year> <journal> Generality in artificial intelligence. </journal> <volume> CACM 30 </volume> <pages> 1030-1035. </pages>
Reference: [Minsky, 75] <author> Minsky, Marvin. </author> <year> (1975). </year> <title> A framework for representing knowledge. In The Psychology of Computer Vision, </title> <editor> ed. P.H. Winston, </editor> <publisher> McGraw-Hill, </publisher> <address> New York. </address> <note> (A later version reprinted in [Brachman & Levesque, </note> <month> 85], </month> <pages> pp. 246-262.) </pages>
Reference-contexts: This has long been a key intuition behind semantic networks: "...the knowledge required to perform an intellectual task generally lies in the semantic vicinity of the concepts involved in the task." [Schubert, 79]. In particular, ALL draws from semantic networks its frame based data structures <ref> [Minsky, 75] </ref> and the idea of access paths. Our use of access paths is closely related to previous work on path based inference. Path based inference can be traced back (at least) to [Raphael, 68] and later to [Schwarcz et al., 70] and [Shapiro & Woodmansee, 69].
Reference: [Moore, 79] <author> Moore, R. </author> <year> (1979). </year> <title> Reasoning about Knowledge and Action, </title> <type> MIT PhD thesis. </type>
Reference: [Patel-Schneider, 85] <author> Patel-Schneider, P. </author> <year> (1985). </year> <title> A decidable first-order logic for knowledge representation. </title> <journal> IJCAI-85. </journal>
Reference-contexts: Past work has generally 6 CONCLUSION 19 used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover [Brachman et al., 83, Schubert et al., 83] or a weaker deduction system <ref> [Levesque, 84, Patel-Schneider, 85, Vilain, 85] </ref> for general reasoning. A notable exception to this generalization is the recent work of Haan and Schubert [Schubert, 79, Haan & Schubert, 86]. ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [Palamidessi, 89] <author> Palamidessi, Catuscia. </author> <year> (1989). </year> <title> Algebraic Properties of Idempotent Substitutions. </title> <institution> University of Pisa, </institution> <type> manuscript. </type>
Reference: [Powers, 78] <author> Powers, L. H. </author> <year> (1978). </year> <title> Knowledge by deduction. </title> <journal> The Philosophical Review, LXXXVII, </journal> <volume> No. 3, </volume> <pages> pp. 337-371. </pages>
Reference-contexts: From this vague definition we can conclude that a knowledge-representation system must have the following properties: 1 We have since discovered that the idea of Socratic Completeness is also used in <ref> [Powers, 78] </ref> where it is referred to as Socratic Adequacy. 2 OVERVIEW OF ACCESS-LIMITED LOGIC 3 1. It must have a reasonably compact syntax. 2. It must have a well defined semantics so that one can say precisely what is being represented. 3.
Reference: [Quillian, 67] <author> Quillian, M. Ross. </author> <year> (1967). </year> <title> Word concepts: A theory and simulation of some basic semantic capabilities. </title> <booktitle> Behavioral Science 12, </booktitle> <pages> 410-430. </pages> <note> (Reprinted in [Brachman & Levesque, </note> <month> 85], </month> <pages> pp. 98-118.) </pages>
Reference: [Raphael, 68] <author> Raphael, B. </author> <year> (1968). </year> <title> SIR: </title> <booktitle> semantic information retrieval. In Semantic Information Processing, </booktitle> <editor> ed. M. Minsky, </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA., </address> <pages> pp. 33-145. </pages>
Reference-contexts: In particular, ALL draws from semantic networks its frame based data structures [Minsky, 75] and the idea of access paths. Our use of access paths is closely related to previous work on path based inference. Path based inference can be traced back (at least) to <ref> [Raphael, 68] </ref> and later to [Schwarcz et al., 70] and [Shapiro & Woodmansee, 69].
Reference: [Schubert, 79] <author> Schubert, L.K., R.G. Goebel, and N.J. Cercone, </author> <year> (1979). </year> <title> The structure and organization of a semantic net for comprehension and inference. </title> <editor> In [Findler, </editor> <volume> 79], </volume> <pages> pp. 121-175. </pages>
Reference-contexts: This has long been a key intuition behind semantic networks: "...the knowledge required to perform an intellectual task generally lies in the semantic vicinity of the concepts involved in the task." <ref> [Schubert, 79] </ref>. In particular, ALL draws from semantic networks its frame based data structures [Minsky, 75] and the idea of access paths. Our use of access paths is closely related to previous work on path based inference. <p> A notable exception to this generalization is the recent work of Haan and Schubert <ref> [Schubert, 79, Haan & Schubert, 86] </ref>. ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [Schubert et al., 83] <author> Schubert, L.K., Papalaskaris, M.A., and Taugher, J. </author> <year> (1983). </year> <title> Determining type, part, color, and time relationships. </title> <journal> IEEE Computer, </journal> <volume> 16(10), </volume> <pages> 53-60. </pages>
Reference-contexts: Past work has generally 6 CONCLUSION 19 used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover <ref> [Brachman et al., 83, Schubert et al., 83] </ref> or a weaker deduction system [Levesque, 84, Patel-Schneider, 85, Vilain, 85] for general reasoning. A notable exception to this generalization is the recent work of Haan and Schubert [Schubert, 79, Haan & Schubert, 86].
Reference: [Schubert & Hwang] <author> Schubert, L.K., and Hwang C.H. </author> <year> (1989). </year> <title> An Episodic Knowledge Representation for Narrative Texts. </title> <booktitle> Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, California. </address>
Reference: [Schwarcz et al., 70] <author> Schwarcz, R.M., Burger, J.F., and Simmons, R.F. </author> <year> (1970). </year> <title> A deductive question-answerer for natural language inference. </title> <type> CACM 13, </type> <month> 3 (March </month> <year> 1970), </year> <pages> 167-183. </pages>
Reference-contexts: Our use of access paths is closely related to previous work on path based inference. Path based inference can be traced back (at least) to [Raphael, 68] and later to <ref> [Schwarcz et al., 70] </ref> and [Shapiro & Woodmansee, 69]. A good discussion of path based and node based inference (both of which are partially subsumed by inference in ALL and would be totally subsumed if ALL supported full quantification | see section 6.4) is given in [Shapiro, 78].
Reference: [Shapiro, 78] <author> Shapiro, S.C. </author> <year> (1978). </year> <title> Path-based and node-based inference in semantic networks. </title> <booktitle> Tinlap-2: Theoretical Issues in Natural Languages Processing, </booktitle> <editor> ed. D. Waltz, </editor> <publisher> ACM, </publisher> <address> New York, </address> <pages> 219-225. </pages>
Reference-contexts: A good discussion of path based and node based inference (both of which are partially subsumed by inference in ALL and would be totally subsumed if ALL supported full quantification | see section 6.4) is given in <ref> [Shapiro, 78] </ref>. One difference between ALL and much recent careful work on knowledge representation is that ALL (along with first-order logic and the original work on semantic networks) allows the knowledge-base designer to name the relations used in the knowledge-base.
Reference: [Shapiro, 89] <author> Shapiro, </author> <title> S.C. and the SNePS Implementation Group (1989). SNePS-2 User's Manual. </title> <institution> Department of Computer Science, SUNY at Buffalo, 31pp. </institution>
Reference-contexts: After Woods' influential "What's in a Link" paper [Woods, 75], many knowledge representation languages restricted the allowable relations to a small set which were given a precise syntax and semantics <ref> [Brachman 79, Shapiro, 89] </ref>. Our approach in ALL is to define our semantics by "borrowing" the model theory of predicate calculus (by mapping ALL knowledge-bases to statements in predicate calculus and proving consistency and weakened completeness results) and to allow relations to be given any names.
Reference: [Shapiro & Woodmansee, 69] <author> Shapiro, S.C. and Woodmansee, G.H. </author> <year> (1969). </year> <title> A net structure based relational question answerer: description and examples. </title> <institution> IJCAI-69, The MITRE Corp., Bedford, </institution> <address> MA., </address> <pages> pp. 325-346. </pages>
Reference-contexts: Our use of access paths is closely related to previous work on path based inference. Path based inference can be traced back (at least) to [Raphael, 68] and later to [Schwarcz et al., 70] and <ref> [Shapiro & Woodmansee, 69] </ref>. A good discussion of path based and node based inference (both of which are partially subsumed by inference in ALL and would be totally subsumed if ALL supported full quantification | see section 6.4) is given in [Shapiro, 78].
Reference: [Smith & Genesereth, 85] <author> Smith, David E., and Genesereth, Michael R. </author> <year> (1985). </year> <title> Ordering conjunctive queries. </title> <journal> Artificial Intelligence, </journal> <volume> 26: 171 - 215. </volume>
Reference-contexts: In a sense our use of access-paths is a strategy for ordering conjunctive queries and as such is related to the more elaborate approach given in <ref> [Smith & Genesereth, 85] </ref>. In fact, if one follows a discipline of avoiding frame-slots containing a large number of frames 11 then the use of access-paths enforces an ordering on conjunctive queries much like that discussed in [Smith & Genesereth, 85]. 6 Conclusion Given a knowledge representation system with a model <p> queries and as such is related to the more elaborate approach given in <ref> [Smith & Genesereth, 85] </ref>. In fact, if one follows a discipline of avoiding frame-slots containing a large number of frames 11 then the use of access-paths enforces an ordering on conjunctive queries much like that discussed in [Smith & Genesereth, 85]. 6 Conclusion Given a knowledge representation system with a model theory and a knowledge-base, one may divide the set of all possible queries in several ways. For example, one can distinguish the queries which succeed from those which fail.
Reference: [Touretzky, 86] <author> Touretzky, David S. </author> <title> The Mathematics of Inheritance Systems, </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, California, </address> <year> 1986. </year> <note> REFERENCES 26 </note>
Reference: [Treitel & Genesereth, 87] <author> Treitel, Richard, and Genesereth, Michael R. </author> <year> (1987). </year> <title> Choosing directions for rules. </title> <journal> Journal of Automated Reasoning 3: </journal> <pages> 395-431. </pages>
Reference: [Vilain, 85] <author> Vilain, M. </author> <year> (1985). </year> <title> The restricted language architecture of a hybrid representation system. </title> <booktitle> IJCAI-85, </booktitle> <pages> pp. 547-551. </pages>
Reference-contexts: Past work has generally 6 CONCLUSION 19 used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover [Brachman et al., 83, Schubert et al., 83] or a weaker deduction system <ref> [Levesque, 84, Patel-Schneider, 85, Vilain, 85] </ref> for general reasoning. A notable exception to this generalization is the recent work of Haan and Schubert [Schubert, 79, Haan & Schubert, 86]. ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [Woods, 75] <author> Woods, W. </author> <year> (1975). </year> <title> What's in a link: foundations for semantic networks. In Representation and Understanding: Studies in Cognitive Science , ed. </title> <editor> Bobrow, D. and Collins, A., </editor> <publisher> Academic, </publisher> <address> New York, </address> <pages> pp. 35-82. </pages>
Reference-contexts: One difference between ALL and much recent careful work on knowledge representation is that ALL (along with first-order logic and the original work on semantic networks) allows the knowledge-base designer to name the relations used in the knowledge-base. After Woods' influential "What's in a Link" paper <ref> [Woods, 75] </ref>, many knowledge representation languages restricted the allowable relations to a small set which were given a precise syntax and semantics [Brachman 79, Shapiro, 89].
Reference: [Wylie, 57] <author> Wylie, C.R., Jr. </author> <title> 101 Puzzles in Thought & Logic, </title> <publisher> Dover Publications Inc, </publisher> <address> Mineola, New York, </address> <year> 1957. </year>
Reference-contexts: However, such inference systems tend to be difficult to describe semantically and tend to place unnatural limits on an agent's reasoning ability [Levesque, 86]. As an example of non-trivial inference, consider the following problem (from <ref> [Wylie, 57] </ref>): In a certain bank the positions of cashier, manager, and teller are held by Brown, Jones and Smith, though not necessarily respectively. The teller, who was an only child, earns the least. Smith, who married Brown's sister, earns more than the manager.
References-found: 51

