URL: http://www.cs.utah.edu/~ganesh/w97-uv/summer97/halbwachs-network-invariant-paper.ps
Refering-URL: http://www.cs.utah.edu/~ganesh/w97-uv/summer97/
Root-URL: 
Title: Automatic Construction of Network Invariants (Extended Abstract)  
Author: David Lesens, Nicolas Halbwachs, Pascal Raymond 
Abstract: We describe a method to verify safety properties of parameterized linear networks of processes. A network invariant is defined as a fixpoint, and computed using heuristics based on Cousot's widening techniques.
Abstract-found: 1
Intro-found: 1
Reference: [AK86] <author> K. R. Apt and D. C. Kozen. </author> <title> Limits for automatic verification of finite-state concurrent systems. </title> <journal> Information Processing Letters, </journal> <volume> 22 </volume> <pages> 307-309, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction After the very first success of automatic verification of finite-state systems [QS82, CES86], Apt and Kozen <ref> [AK86] </ref> shown that these techniques cannot be applied to regular networks of processes of unknown size. <p> operators over processes, and consider the family F of processes generated by: 8i = 1 : : : n; P i 2 F and P 2 F =) P fi i P i 2 F The problem of verifying that every P 2 F satisfies a property ' is undecidable <ref> [AK86] </ref>, even if it is decidable for each P i ; i = 1 : : : n.
Reference: [CC77] <author> P. Cousot and R. Cousot. </author> <title> Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints. </title> <booktitle> In 4th ACM Symposium on Principles of Programming Languages, </booktitle> <address> Los Angeles, </address> <month> January </month> <year> 1977. </year>
Reference-contexts: In this paper, we first state the problem of invariant synthesis as the resolution of a fix-point equation. Then we propose a set of heuristics, based on Cousot's widening techniques <ref> [CC77, CC92] </ref>, to compute such fix-points. The point is that the heuristic can be arbitrarily refined to get stronger invariants. 2 Synchronous Observers of Safety Properties We model processes as synchronous input/output automata [HLR93]. <p> This is why we are more interested in computing T M I . In this section, we will try to compute under-approximations of T M I , using Cousot's extrapolation technique <ref> [CC77, CC92] </ref>. Notice that a solution T T M I can be sufficient to achieve the verification, if it happens that 8i = 1:::k; T P i T . 4.1 Principle of Extrapolation In order to under-approximate greatest fixpoints in a complete lattice L, the extrapolation method proposed by [CC77, CC92] <p> technique <ref> [CC77, CC92] </ref>. Notice that a solution T T M I can be sufficient to achieve the verification, if it happens that 8i = 1:::k; T P i T . 4.1 Principle of Extrapolation In order to under-approximate greatest fixpoints in a complete lattice L, the extrapolation method proposed by [CC77, CC92] consists in defining a binary operator r on L, called "widening", satisfying the following two properties: [INCL]: 8x; y 2 L; xry x " y [CHAIN]: for any decreasing chain x 0 x 1 : : : x n : : : in L, the sequence (y 0 ;
Reference: [CC92] <author> P. Cousot and R. Cousot. </author> <title> Comparing the Galois connection and widening/narrowing approaches to abstract interpretation. </title> <institution> Research Report LIX/RR/92/09, Ecole Polytechnique, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: In this paper, we first state the problem of invariant synthesis as the resolution of a fix-point equation. Then we propose a set of heuristics, based on Cousot's widening techniques <ref> [CC77, CC92] </ref>, to compute such fix-points. The point is that the heuristic can be arbitrarily refined to get stronger invariants. 2 Synchronous Observers of Safety Properties We model processes as synchronous input/output automata [HLR93]. <p> This is why we are more interested in computing T M I . In this section, we will try to compute under-approximations of T M I , using Cousot's extrapolation technique <ref> [CC77, CC92] </ref>. Notice that a solution T T M I can be sufficient to achieve the verification, if it happens that 8i = 1:::k; T P i T . 4.1 Principle of Extrapolation In order to under-approximate greatest fixpoints in a complete lattice L, the extrapolation method proposed by [CC77, CC92] <p> technique <ref> [CC77, CC92] </ref>. Notice that a solution T T M I can be sufficient to achieve the verification, if it happens that 8i = 1:::k; T P i T . 4.1 Principle of Extrapolation In order to under-approximate greatest fixpoints in a complete lattice L, the extrapolation method proposed by [CC77, CC92] consists in defining a binary operator r on L, called "widening", satisfying the following two properties: [INCL]: 8x; y 2 L; xry x " y [CHAIN]: for any decreasing chain x 0 x 1 : : : x n : : : in L, the sequence (y 0 ;
Reference: [CES86] <author> E. M. Clarke, E. A. Emerson, and A. P. Sistla. </author> <title> Automatic verification of finite-state concurrent systems using temporal logic specifications. </title> <journal> ACM TOPLAS, </journal> <volume> 8(2), </volume> <year> 1986. </year>
Reference-contexts: 1 Introduction After the very first success of automatic verification of finite-state systems <ref> [QS82, CES86] </ref>, Apt and Kozen [AK86] shown that these techniques cannot be applied to regular networks of processes of unknown size.
Reference: [CGJ95] <author> E. M. Clarke, O. Grumberg, and S. Jha. </author> <title> Verifying parameterized networks using abstraction and regular languages. In CONCUR'95. </title> <publisher> LNCS 962, Springer Verlag, </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: Verimag is a joint laboratory of CNRS, Institut National Polytechnique de Grenoble, Universite J. Fourier and Verilog SA associated with IMAG. E-mail: fDavid.Lesens|Nicolas.Halbwachs|Pascal.Raymondg@imag.fr 1 (b) How to find a suitable network invariant I, if such an invariant exists? In <ref> [CGJ95] </ref>, the problem (a) is solved by noticing that a state of a process in F is a multi-set of elementary process states; a state is considered as a word on the alphabet of elementary process states, and a set of states as a language on this alphabet. <p> For the time being, we restrict ourselves to safety properties, and we use trace inclusion pre-order. Concerning the construction of the network invariant, the method proposed in <ref> [CGJ95] </ref> can raise the following problem: If the synthesized invariant I does not satisfy the desired property ', the method does not provide any way to look for a stronger invariant. In this paper, we first state the problem of invariant synthesis as the resolution of a fix-point equation. <p> We present here the processing of Dijkstra's token ring, an example also used in <ref> [CGJ95] </ref>. Let n units U 1 , U 2 ,: : : ,U n share a resource in mutual exclusion. The units are connected in a ring (see Fig.3), along which a token can travel in the clockwise direction.
Reference: [Eil74] <author> S. Eilenberg. </author> <title> Automata, Languages, and Machines. </title> <publisher> Academic Press, </publisher> <year> 1974. </year>
Reference-contexts: For solving problem (b), a clever method is proposed, based on the construction of the syntactic monoid <ref> [Eil74] </ref> of a regular language. We propose here an other specification method, based on synchronous observers ([HLR93]). A synchronous observer is a process that is able to observe the behavior of a process without changing its behavior.
Reference: [HLR92] <author> N. Halbwachs, F. Lagnier, and C. Ratel. </author> <title> An experience in proving regular networks of processes by modular model checking. </title> <journal> Acta Informatica, </journal> 29(6/7):523-543, 1992. 
Reference-contexts: Several attempts <ref> [KM89, WL89, HLR92] </ref> were made to solve this problem, using the following induction principle: Let be a pre-order relation over processes, such that (P Q ^ Q j= ') =) P j= ' Find a process I, called a network invariant, such that 8i = 1 : : : n; P
Reference: [HLR93] <author> N. Halbwachs, F. Lagnier, and P. Raymond. </author> <title> Synchronous observers and the verification of reactive systems. </title> <editor> In M. Nivat, C. Rattray, T. Rus, and G. Scollo, editors, </editor> <booktitle> Third Int. Conf. on Algebraic Methodology and Software Technology, AMAST'93, Twente, </booktitle> <month> June </month> <year> 1993. </year> <title> Workshops in Computing, </title> <publisher> Springer Verlag. </publisher>
Reference-contexts: Then we propose a set of heuristics, based on Cousot's widening techniques [CC77, CC92], to compute such fix-points. The point is that the heuristic can be arbitrarily refined to get stronger invariants. 2 Synchronous Observers of Safety Properties We model processes as synchronous input/output automata <ref> [HLR93] </ref>. A transition of such an automaton is guarded by an input event (a set of signals) and its firing involves the simultaneous emission of output signals.
Reference: [KM89] <author> R. P. Kurshan and K McMillan. </author> <title> A structural induction theorem for processes. </title> <booktitle> In 8th ACM Symposium on Principles of Distributed Computing, </booktitle> <address> Edmonton (Alberta), </address> <pages> pages 239-247, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Several attempts <ref> [KM89, WL89, HLR92] </ref> were made to solve this problem, using the following induction principle: Let be a pre-order relation over processes, such that (P Q ^ Q j= ') =) P j= ' Find a process I, called a network invariant, such that 8i = 1 : : : n; P
Reference: [QS82] <author> J. P. Queille and J. Sifakis. </author> <title> Specification and verification of concurrent systems in Cesar. </title> <booktitle> In International Symposium on Programming. </booktitle> <publisher> LNCS 137, Springer Verlag, </publisher> <month> April </month> <year> 1982. </year>
Reference-contexts: 1 Introduction After the very first success of automatic verification of finite-state systems <ref> [QS82, CES86] </ref>, Apt and Kozen [AK86] shown that these techniques cannot be applied to regular networks of processes of unknown size.
Reference: [WL89] <author> P. Wolper and V. Lovinfosse. </author> <title> Verifying properties of large sets of processes with network invariants. In International Workshop on Automatic Verification Methods for Finite State Systems, Grenoble. </title> <publisher> LNCS 407, Springer Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Several attempts <ref> [KM89, WL89, HLR92] </ref> were made to solve this problem, using the following induction principle: Let be a pre-order relation over processes, such that (P Q ^ Q j= ') =) P j= ' Find a process I, called a network invariant, such that 8i = 1 : : : n; P <p> Let ' be a safety property, represented by a (prefix-closed) set of traces T ' T X . Our parameterized verification problem consists in showing: 8P 2 F ; T P T ' . Following <ref> [WL89] </ref>, we can look for a process I, called a network invariant, satisfying [SAT] T I T ' [INIT] 8i = 1:::k; T P i T I [INDUC] 8i = 1:::k; T Ifi i P i T I Now, the condition [INDUC] can be rewritten either in 9X 0 ; 9X
References-found: 11

