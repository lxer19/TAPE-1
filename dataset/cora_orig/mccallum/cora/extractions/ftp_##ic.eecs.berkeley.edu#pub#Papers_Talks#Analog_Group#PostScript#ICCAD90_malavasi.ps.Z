URL: ftp://ic.eecs.berkeley.edu/pub/Papers_Talks/Analog_Group/PostScript/ICCAD90_malavasi.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu:80/~charbon/publications/analog-group-publications.html
Root-URL: http://www.cs.berkeley.edu
Title: A Routing Methodology for Analog Integrated Circuits  
Author: Enrico Malavasi Umakanta Choudhury Alberto Sangiovanni-Vincentelli 
Address: UC Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences  
Abstract: A general methodology for the design of the interconnections of analog circuits respecting high-level constraints on performances is described in this work. In our approach, sensitivities of performances to parasitics are computed, and a set of bounding constraints for parasitics is determined. Sensitivities are then used to generate the weights for a new cost function-driven analog area router. After the routing is completed, the actual values of critical parasitics are used to check if the user-defined constraints on circuit performances are met. If the requirements have not been satisfied, the bounding constraints generated on the parasitics are used to increase the weights associated to the parasitics which violated the constraints, and the circuit rerouted. Results are reported validating the effectiveness of this approach for layout-design automation of analog circuits. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> C.D.Kimble et al. </editor> <booktitle> "Autorouted Analog VLSI". Proc. </booktitle> <address> CICC, </address> <year> 1985. </year>
Reference-contexts: The goal of analog CAD tools should not be simply to achieve a layout in minimum area, but also to meet the user-defined performance constraints. Digital-targeted tools in general are not suitable for performing this task. Some tools for the synthesis of analog layout have recently been developed. In <ref> [1] </ref>, a standard-cell design style is proposed in which nets having critical coupling capacitances are routed in different channels; however, this approach is very restrictive. In [2], channel routing driven by bounds on capacitances is described, but the issue of obtaining these bounds is not addressed. <p> parasitic p j is defined as follows: w j = w 0 i=1 S 4K + i;j i P 0 (2) where w 0 is a normalization factor, such that, if sensitivities are not all zero, at least one weight is set to 1, and the others are all in <ref> [0; 1] </ref>. p 0 is a dimensional parameter equal to R 0 , C 0 or C P , depending on the type of parasitic. <p> the performances which exceeded respectively their lower and upper bound. 0 is a normalization factor such that at least one of the increased weights, the one associated to the parasitic which gave the most important contribution to the constraint violation, is brought to 1, while the others w j 2 <ref> [0; 1] </ref>; 8j. 4 Priority Factors and Iteration Control It is easy to show that the iterative approach based on weight modification terminates.
Reference: 2. <author> R.S.Gyurcsik and J.-C. Jeen. </author> <title> "A Generalized Approach to Routing Mixed Analog and Digital Signal Nets in a Channel". </title> <journal> IEEE JSSC, </journal> <volume> 24, N.2:436-442, </volume> <month> April </month> <year> 1989. </year>
Reference-contexts: Some tools for the synthesis of analog layout have recently been developed. In [1], a standard-cell design style is proposed in which nets having critical coupling capacitances are routed in different channels; however, this approach is very restrictive. In <ref> [2] </ref>, channel routing driven by bounds on capacitances is described, but the issue of obtaining these bounds is not addressed. In ILAC [3] emphasis is given to module generation, but performances are not directly considered while routing.
Reference: 3. <editor> J. Rijmenants et al., "ILAC: </editor> <title> An Automated Layout Tool for Analog CMOS Circuits". </title> <booktitle> Proc. IEEE CICC, </booktitle> <pages> pages 761-764, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: In [1], a standard-cell design style is proposed in which nets having critical coupling capacitances are routed in different channels; however, this approach is very restrictive. In [2], channel routing driven by bounds on capacitances is described, but the issue of obtaining these bounds is not addressed. In ILAC <ref> [3] </ref> emphasis is given to module generation, but performances are not directly considered while routing. The problem of analog routing is not specifically dealt with in [4], where a digital router [5] is used in a module generator for CMOS operational amplifiers.
Reference: 4. <author> H. Y. Koh, C. H. Sequin, and P. R. Gray, </author> <title> "Automatic Layout Generation for CMOS Operational Amplifiers". </title> <booktitle> Proc. IEEE ICCAD, </booktitle> <pages> pages 548-551, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: In [2], channel routing driven by bounds on capacitances is described, but the issue of obtaining these bounds is not addressed. In ILAC [3] emphasis is given to module generation, but performances are not directly considered while routing. The problem of analog routing is not specifically dealt with in <ref> [4] </ref>, where a digital router [5] is used in a module generator for CMOS operational amplifiers. In ANAGRAM [6], a cost function in terms of routing parasitics is used, but with no explicit reference to performance specifications of the circuit.
Reference: 5. <author> H. Shin and A. Sangiovanni-Vincentelli, </author> <title> "A Detailed Router Based on Incremental Routing Modifications: </title> <journal> Mighty". IEEE Trans. on CAD, CAD-6, </journal> <volume> N.6:942-955, </volume> <month> November </month> <year> 1987. </year>
Reference-contexts: In ILAC [3] emphasis is given to module generation, but performances are not directly considered while routing. The problem of analog routing is not specifically dealt with in [4], where a digital router <ref> [5] </ref> is used in a module generator for CMOS operational amplifiers. In ANAGRAM [6], a cost function in terms of routing parasitics is used, but with no explicit reference to performance specifications of the circuit.
Reference: 6. <author> D. J. Garrod, R. A. Rutenbar, and L. R. Carley, </author> <title> "Automatic Layout of Custom Analog Cells in ANAGRAM". </title> <booktitle> Proc. IEEE ICCAD, </booktitle> <pages> pages 544-547, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: In ILAC [3] emphasis is given to module generation, but performances are not directly considered while routing. The problem of analog routing is not specifically dealt with in [4], where a digital router [5] is used in a module generator for CMOS operational amplifiers. In ANAGRAM <ref> [6] </ref>, a cost function in terms of routing parasitics is used, but with no explicit reference to performance specifications of the circuit. In all the previous approaches, performance constraints of a general analog circuit can not be handled directly.
Reference: 7. <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "Constraint Generation for Routing Analog Circuits". </title> <booktitle> Proc. DAC, </booktitle> <month> June </month> <year> 1990. </year>
Reference-contexts: In section 3 the algorithms for the generation and modification of weights are presented. Some remarks about the iterative behavior are reported in section 4. An example showing the suitability of our approach is illustrated in section 5. 2 The Performance-Driven Routing Framework The constraint generator PARCAR <ref> [7] </ref> computes the sensitivities of performance functions to all possible parasitics in the circuit and detects the critical parasitics. It also generates a set of bounds on critical parasitics to satisfy performance constraints while providing maximum flexibility to the router.
Reference: 8. <author> E. Malavasi, M. Chilanti, and R. Guerrieri, </author> <title> "A General Router for Analog Layout". </title> <booktitle> Proc. COMPEURO '89, Hamburg, </booktitle> <pages> pages 549-551, </pages> <month> May </month> <year> 1989. </year>
Reference-contexts: However, its flexibility makes its use possible with very complicate geometries, as it is often required in full custom design. The tool used in our framework is a maze router called ROAD, derived by the router described in <ref> [8] </ref> with a number of substantial improvements. Maze routing is particularly appropriate for circuits with intricate geometries, although it is applicable to relatively small systems, because of its high computational cost. <p> But since most of the analog parts of complex systems are either small or deeply hierarchical, this approach is quite acceptable for a large variety of applications. The tool described in <ref> [8] </ref> was based on the Lee algorithm [9] [10] and controlled by a cost function defined on the edges of a relative grid with dynamic allocation. In ROAD, the Lee algorithm has been substituted with the A* algorithm [11,Ch.3][12] which uses a "depth-first" approach.
Reference: 9. <author> C. Lee, </author> <title> "An algorithm for path connections and applications". </title> <journal> IRE Trans. Electron. Computer, </journal> <volume> EC-10:346-365, </volume> <month> September </month> <year> 1961. </year>
Reference-contexts: But since most of the analog parts of complex systems are either small or deeply hierarchical, this approach is quite acceptable for a large variety of applications. The tool described in [8] was based on the Lee algorithm <ref> [9] </ref> [10] and controlled by a cost function defined on the edges of a relative grid with dynamic allocation. In ROAD, the Lee algorithm has been substituted with the A* algorithm [11,Ch.3][12] which uses a "depth-first" approach.
Reference: 10. <author> T. Ohtsuki, </author> <title> "Maze-Running and Line-Search Algorithms". Layout Design and Verification, </title> <booktitle> chapter 3, </booktitle> <pages> pages 99-131. </pages> <address> T.Ohtsuki Ed.North Holland, </address> <year> 1986. </year>
Reference-contexts: But since most of the analog parts of complex systems are either small or deeply hierarchical, this approach is quite acceptable for a large variety of applications. The tool described in [8] was based on the Lee algorithm [9] <ref> [10] </ref> and controlled by a cost function defined on the edges of a relative grid with dynamic allocation. In ROAD, the Lee algorithm has been substituted with the A* algorithm [11,Ch.3][12] which uses a "depth-first" approach.
Reference: 11. <editor> N.J.Nilsson, </editor> <booktitle> Problem-Solving Methods in Artificial Intelligence. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1971. </year>
Reference: 12. <author> G.W.Clow, </author> <title> "A Global Routing Algorithm for General Cells". </title> <booktitle> Proc. 21st DAC, </booktitle> <pages> pages 45-51, </pages> <year> 1984. </year>
Reference: 13. <author> J.Pearl, </author> <title> Heuristics: intelligent search strategies for computer problem solving. </title> <publisher> Addison Wesley, </publisher> <year> 1984. </year> <title> routing of analog circuits. a) b) of figure 2a, crossing could not be avoided. In figure 2b, all crossings were avoided, choosing a longer path for one of the wires. </title>
References-found: 13

