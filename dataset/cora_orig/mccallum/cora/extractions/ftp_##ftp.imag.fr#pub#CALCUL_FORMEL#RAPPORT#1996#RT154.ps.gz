URL: ftp://ftp.imag.fr/pub/CALCUL_FORMEL/RAPPORT/1996/RT154.ps.gz
Refering-URL: http://www-lmc.imag.fr/CF/publi.html
Root-URL: http://www.imag.fr
Title: RAPPORT TECHNIQUE DESIR II  
Author: Eckhard Pfl ugel 
Date: (URA 397)  RT 154 Fevrier 1996  
Affiliation: IMAG Institut d'Informatique et de Mathematiques Appliquees de Grenoble LMC Laboratoire de Modelisation et de Calcul  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> A. Barkatou. </author> <title> Rational Newton Algorithm for Computing Formal Solutions of Linear Differential Equations. </title> <booktitle> In Proceedings of ISSAC '88, </booktitle> <address> Rome, Italy, </address> <pages> pages 183-195. </pages> <publisher> ACM Press, </publisher> <year> 1988. </year>
Reference-contexts: In order to compute the parametrization, we determine the relation between x and z: x = t r = (za u ) r = b u z r : A detailed description of the method can be found in <ref> [1] </ref>, [2], [4]. 2 An improved Frobenius' Algorithm The Frobenius' algorithm computes the solution series t appearing in (2). To be more precise, if deg (N 0 ) = m, exactly m linear independent solutions are computed. A detailed analysis of the algorithm can be found in [8].
Reference: [2] <author> A. Barkatou. </author> <title> Contribution a l'etude des equations differentielles et de differences dans le champ complexe. </title> <type> PhD thesis, </type> <institution> INPG, </institution> <year> 1989. </year>
Reference-contexts: In <ref> [2] </ref> the notion of generalized formal solutions is introduced. <p> In order to compute the parametrization, we determine the relation between x and z: x = t r = (za u ) r = b u z r : A detailed description of the method can be found in [1], <ref> [2] </ref>, [4]. 2 An improved Frobenius' Algorithm The Frobenius' algorithm computes the solution series t appearing in (2). To be more precise, if deg (N 0 ) = m, exactly m linear independent solutions are computed. A detailed analysis of the algorithm can be found in [8].
Reference: [3] <author> F. Jung. </author> <title> Representations graphiques de solutions d'equations differentielles dans le champ complexe. </title> <type> PhD thesis, </type> <institution> Universite Louis Pasteur, </institution> <year> 1988. </year>
Reference-contexts: We compute formal power series which are not necessarily convergent. The solver DESIR computes a formal fundamental system for equations of nth order in the neighbourhood of zero. Several tools have been added to perform changes of variables, handle parameters and to display the solutions graphically <ref> [3] </ref>. Let ~ K be a finite algebraic extension of K. <p> If k = 0, one computes the exponent and the solution series (t) with the Frobenius algorithm | we describe an improved method in the following section. For a detailed analysis of the classical Newton and Frobenius algorithm, see [8], <ref> [3] </ref>. The rational Newton algorithm computes the more general parametrization x (t) = flx r : This reduces the degree of algebraic extensions in the solution coefficients. Furthermore, only one representant for r solutions has to be determined. These r solutions are then obtained by a simple substitution.
Reference: [4] <author> F. Jung. </author> <title> Algorithme de Newton et algorithme de Newton rationnel. </title> <type> RT 143, </type> <institution> IMAG, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: In order to compute the parametrization, we determine the relation between x and z: x = t r = (za u ) r = b u z r : A detailed description of the method can be found in [1], [2], <ref> [4] </ref>. 2 An improved Frobenius' Algorithm The Frobenius' algorithm computes the solution series t appearing in (2). To be more precise, if deg (N 0 ) = m, exactly m linear independent solutions are computed. A detailed analysis of the algorithm can be found in [8].
Reference: [5] <author> W. Koepf. </author> <title> Power Series in Computer Algebra. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 13 </volume> <pages> 581-603, </pages> <year> 1992. </year>
Reference-contexts: If gcd (c 0 ; : : : ; c n ) = 1, we call L a simple operator <ref> [5] </ref>. Our algorithms suppose that the given differential operator is simple. 2 1.2 Formal solutions With a linear differential operator we can associate a local fundamental system of formal solutions. Formal solutions in this sense are asymptotic representations of analytic solutions in a neighbourhood of 0. <p> Let the indicial equation be of degree greater than zero. We know that at least one formal power series y = x i=0 exists which is a formal solution of L (y) = 0. The coefficients of y satisfy a recurrence equation <ref> [5] </ref> p 0 ( + i)a i + p 1 ( + i)a i1 + + p l ( + i)a il = 0 (5) where we set a i = 0 for i &lt; 0.
Reference: [6] <author> E. Pflugel. </author> <title> Algorithmen zur formalen Losung von linearen homogenen Differential-gleichungen. </title> <type> Master's thesis, </type> <institution> IAKS Universitat Karlsruhe, </institution> <year> 1995. </year>
Reference-contexts: This reduces the cost of symbolic computations for the initial values since deg (F ) &lt; deg (N 0 ) in the general case. 2.5 Implementation We have implemented the algorithm in the computer algebra system Maple. (See also <ref> [6] </ref>). The Frobenius algorithm computes the NTPS-representation and other information like 9 the indicial equation and the exponents. Our algorithmic approach of primitives (cf. next section) allows to pretty print the solutions, to generate more coefficients etc.
Reference: [7] <author> E. Pflugel. DESIR-II: </author> <title> A package for computing formal solutions of linear differential and difference equations. </title> <editor> In L.R.Oudin A.Carriere, editor, </editor> <booktitle> Proceedings of the 5th Rhine Workshop on Computer Algebra, </booktitle> <address> pages 6.1 - 6.3. </address> <institution> Institut Franco-Allemand de recherches de Saint-Louis, </institution> <month> April </month> <year> 1996. </year> <month> 13 </month>
Reference: [8] <author> E. Tournier. </author> <title> Solutions formelles d'equations differentielles. </title> <institution> These d'Etat, IMAG, Grenoble, </institution> <year> 1987. </year>
Reference-contexts: A generalized formal system is a set of generalized formal solutions which represents n classical formal solutions. 1.3 The Newton polygon The computation of formal solutions is strongly related to the concept of the Newton polygon of a differential operator (see <ref> [8] </ref> for more details). Given an operator L of the form (1), we write c i = j=(c i ) for i = 0; : : :; n; c i 6= 0. Let lc (c i ) = c i;(c i ) . <p> If k = 0, one computes the exponent and the solution series (t) with the Frobenius algorithm | we describe an improved method in the following section. For a detailed analysis of the classical Newton and Frobenius algorithm, see <ref> [8] </ref>, [3]. The rational Newton algorithm computes the more general parametrization x (t) = flx r : This reduces the degree of algebraic extensions in the solution coefficients. Furthermore, only one representant for r solutions has to be determined. These r solutions are then obtained by a simple substitution. <p> To be more precise, if deg (N 0 ) = m, exactly m linear independent solutions are computed. A detailed analysis of the algorithm can be found in <ref> [8] </ref>. Our goal is to improve the algorithm in the following way: * We want to represent the solution series as NTPS (non truncated power series). This means that we have to compute the recurrence equations of the solution series.
Reference: [9] <author> S. Watanabe. </author> <title> Formula Manipulation Solving Linear Differential Equations (I). </title> <type> Technical Report 6, </type> <institution> RIMS Kyoto University, </institution> <year> 1970. </year> <month> 14 </month>
Reference-contexts: A simple condition on k is given in <ref> [9] </ref>. Instead of the Kronecker formula, we can use A () = Q k t i=1 F (+i) where F = Q t i n ij ) m ij when treating the ith entry of the list.
References-found: 9

