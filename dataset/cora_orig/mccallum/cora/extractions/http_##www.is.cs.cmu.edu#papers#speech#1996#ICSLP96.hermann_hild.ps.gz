URL: http://www.is.cs.cmu.edu/papers/speech/1996/ICSLP96.hermann_hild.ps.gz
Refering-URL: http://www.is.cs.cmu.edu/ISL.speech.publications.html
Root-URL: 
Email: hhild@ira.uka.de,ahw@cs.cmu.edu  
Title: RECOGNITION OF SPELLED NAMES OVER THE TELEPHONE  
Author: Hermann Hild and Alex Waibel 
Address: 76128 Karlsruhe, Germany  Pittsburgh, USA  
Affiliation: Interactive Systems Laboratories University of Karlsruhe  Carnegie Mellon University  
Abstract: Recognition of spelled names over the telephone line is essential for applications such as telephone directory assistance, or automatic mail ordering. We present recognition results on the spelling section of the OGI Spelled and Spoken Word Telephone Corpus, using a Multi-State Time Delay Neural Network (MS-TDNN). Many applications allow for strong language modeling constraints. In our experiments we examined the beneficial effects of reducing the search space to a list of last names, ranging from about 1000 to 14 million entries. We compare tree search methods and show that significant improvements can be achieved by enriching the search trees with probabilities. International Conference on Speech and Language Processing (ICSLP '96), Philadelphia, USA, October 3-6, 1996 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Martin Betz and Hermann Hild. </author> <title> Language Models for a Spelled Letter Recognizer. </title> <booktitle> In Proc. IEEE International Conference on Acoustics, Speech, and Signal Processing, </booktitle> <pages> pages 856-859. </pages> <publisher> IEEE, </publisher> <month> May 9-12 </month> <year> 1995. </year>
Reference-contexts: 1. INTRODUCTION This paper presents recognition results on the OGI Spelled and Spoken Word Telephone Corpus, using a Multi-State Time Delay Neural Network (MS-TDNN). While it is desirable to recognize spelled strings which are embedded in spontaneous speech <ref> [1] </ref>, ("Smith please, thats S-M-I-T-H"), the task here is to recognize letters only. Spelled letters over the telephone are easily confused. Current systems achieve in the order of 90% letter accuracy, which results in string (i.e. name) accuracies far below practical usefullness. <p> The drawback is that names not in S can not be recognized. In [2], a score (interpreted as probability) is computed for each letter. These scores are used in a tree search to retrieve names from a set of 50,000 names. <ref> [1] </ref> compares several techniques, which use the constraints either within the search or in a postprocessing step such as nearest neighbor search. In [6], a complex procedure using a mixture of techniques and several recognition passes is proposed. <p> Without using any language modeling, the baseline result on SLP test set is 90.6% LA. As expected the SLN set is more difficult, 88.2% LA was achieved. These results are only about 2 - 3% worse than our results on high quality speech spellings <ref> [5, 1] </ref> probably because people tend to spell more careful under adverse telephone condition. Bi-and trigrams achieve only moderate improvements. If the search is constrained to a given set of names, high letter and string accuracies can be achieved. Enriching the search tree with probabilities proved to be astonishingly helpful.
Reference: 2. <author> Roland A. Cole, Mark Fanty, Gopalakrishnan, and Rik D.T. Janssen. </author> <title> Speaker-Independent Name Retrival from Spellings using a Database of 50,000 Names. </title> <booktitle> In Proceedings of the International Conference on Acoustics, Speech and Signal Processing, </booktitle> <address> Toronto, Ontario, Canada, </address> <month> May </month> <year> 1991. </year> <note> IEEE. </note>
Reference-contexts: In the following we examine techniques which confine the recognition to the names in S. The advantage is a high increase in recognition accuracy. The drawback is that names not in S can not be recognized. In <ref> [2] </ref>, a score (interpreted as probability) is computed for each letter. These scores are used in a tree search to retrieve names from a set of 50,000 names. [1] compares several techniques, which use the constraints either within the search or in a postprocessing step such as nearest neighbor search.
Reference: 3. <author> P. Haffner, M. Franzini, and A. Waibel. </author> <title> Integrating Time Alignment and Neural Networks for High Performance Continuous Speech Recognition. </title> <booktitle> In Proc. International Conference on Acoustics, Speech, and Signal Processing. IEEE, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: THE LETTER RECOGNIZER A connectionist recognizer, the Multi-State Time Delay Neural Network (MS-TDNN) <ref> [3, 5] </ref> is used for connected spelled letter recognition. The MS-TDNN integrates the time-shift invariant architecture of a TDNN and a nonlinear time alignment procedure (DTW) into a word-level classifier. The front-end TDNN uses sliding windows with time-delayed connections to compute a score for each phoneme-like state in every frame.
Reference: 4. <author> J. Hampshire and A. Waibel. </author> <title> A Novel Objective Function for Improved Phoneme Recognition Using Time-Delay Neural Networks. </title> <booktitle> In Proceedings of the 1989 International Joint Conference on Neural Networks, </booktitle> <month> June </month> <year> 1989. </year>
Reference-contexts: Algorithms for search in finite state grammars are described below. Training starts with a bootstrapping phase, which involves only the first three layers of the net and establishes a phoneme classification. Then the system is trained on "letter level", using the "classification figure of merit" (CFM) <ref> [4] </ref> error function for discriminative training. 3. LANGUAGE MODELS Let S = fs 1 ; : : : ; s N g be a set of names or strings. In the following we examine techniques which confine the recognition to the names in S.
Reference: 5. <author> Hermann Hild and Alex Waibel. </author> <title> Speaker-Independent Connected Letter Recognition With a Multi-State Time Delay Neural Network. </title> <booktitle> In 3rd European Conference on Speech, Communication and Technology (EU-ROSPEECH) 93, </booktitle> <pages> pages 1481 - 1484, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: THE LETTER RECOGNIZER A connectionist recognizer, the Multi-State Time Delay Neural Network (MS-TDNN) <ref> [3, 5] </ref> is used for connected spelled letter recognition. The MS-TDNN integrates the time-shift invariant architecture of a TDNN and a nonlinear time alignment procedure (DTW) into a word-level classifier. The front-end TDNN uses sliding windows with time-delayed connections to compute a score for each phoneme-like state in every frame. <p> Without using any language modeling, the baseline result on SLP test set is 90.6% LA. As expected the SLN set is more difficult, 88.2% LA was achieved. These results are only about 2 - 3% worse than our results on high quality speech spellings <ref> [5, 1] </ref> probably because people tend to spell more careful under adverse telephone condition. Bi-and trigrams achieve only moderate improvements. If the search is constrained to a given set of names, high letter and string accuracies can be achieved. Enriching the search tree with probabilities proved to be astonishingly helpful.
Reference: 6. <author> Jean-Claude Junqua, Stephane Valente, Dominique Fohr, and Jean-Francois Mari. </author> <title> An N-Best Strategy, Dynamic Grammars and Selectively Trained Neural Networks for Real-Time Recognition of Continuously Spelled Names over the Telephone. </title> <booktitle> In Proc. IEEE International Conference on Acoustics, Speech, and Signal Processing, </booktitle> <pages> pages 852-855. </pages> <publisher> IEEE, </publisher> <month> May 9-12 </month> <year> 1995. </year>
Reference-contexts: These scores are used in a tree search to retrieve names from a set of 50,000 names. [1] compares several techniques, which use the constraints either within the search or in a postprocessing step such as nearest neighbor search. In <ref> [6] </ref>, a complex procedure using a mixture of techniques and several recognition passes is proposed. The approach presented below uses very large, but conceptionally simple finite state grammars (FSG) to exactly represent the names in S. 3.1.
References-found: 6

