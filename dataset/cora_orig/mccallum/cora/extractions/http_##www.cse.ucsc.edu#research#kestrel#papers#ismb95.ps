URL: http://www.cse.ucsc.edu/research/kestrel/papers/ismb95.ps
Refering-URL: http://www.cse.ucsc.edu/research/kestrel/papers.html
Root-URL: http://www.cse.ucsc.edu
Email: cricket@cse.ucsc.edu  rph@cse.ucsc.edu  
Title: Parallel Sequence Alignment in Limited Space  
Author: J Alicia Grice Richard Hughey Don Speck 
Address: Santa Cruz, CA 95064  Santa Cruz, CA 95064  Santa Cruz, CA 95064  
Affiliation: Computer Engineering University of California  Computer Engineering University of California  Computer Engineering University of California  
Note: Proc. Int. Conf. Intelligent Systems for Molecular, AAAI/MIT Press, July 16-19, 1995, pp. 145-153.  
Abstract: Sequence comparison with affine gap costs is a problem that is readily parallelizable on simple single-instruction, multiple-data stream (SIMD) parallel processors using only constant space per processing element. Unfortunately, the twin problem of sequence alignment, finding the optimal character-by-character correspondence between two sequences, is more complicated. While the innovative O(n 2 )- time and O(n)-space serial algorithm has been paral-lelized for multiple-instruction, multiple-data stream (MIMD) computers with only a communication-time slowdown, typically O(log n), it is not suitable for hardware-efficient SIMD parallel processors with only local communication. This paper proposes several methods of computing sequence alignments with limited memory per processing element. The algorithms are also well-suited to serial implementation. The simpler algorithms feature, for an arbitrary integer L, a factor of L slowdown in exchange for reducing space requirements from O(n) to O( L p n) per processing element. Using this result, we describe an O(n log n) parallel time algorithm that requires O(log n) space per processing element on O(n) SIMD processing elements with only a mesh or linear interconnection network.
Abstract-found: 1
Intro-found: 1
Reference: <author> Chow, E.; Hunkapiller, T.; Peterson, J.; and Water-man, M. S. </author> <year> 1991. </year> <title> Biological information signal processor. </title> <editor> In Valero, M., et al., eds., </editor> <booktitle> Proc. Int. Conf. Application Specific Array Processors, </booktitle> <pages> 144-160. </pages> <publisher> IEEE Computer Society. </publisher>
Reference: <author> Edmiston, E. W.; Core, N. G.; Saltz, J. H.; and Smith, R. M. </author> <year> 1988. </year> <title> Parallel processing of biological sequence comparison algorithms. </title> <booktitle> International Journal of Parallel Programming 17(3) </booktitle> <pages> 259-275. </pages>
Reference: <author> Gokhale, M., et al. </author> <year> 1991. </year> <title> Building and using a highly parallel programmable logic array. </title> <booktitle> Computer 24(1) </booktitle> <pages> 81-89. </pages>
Reference: <author> Gribskov, M.; Luthy, R.; and Eisenberg, D. </author> <year> 1990. </year> <title> Profile analysis. </title> <booktitle> Methods in Enzymology 183 </booktitle> <pages> 146-159. </pages>
Reference: <author> Hirschberg, D. S. </author> <year> 1975. </year> <title> A linear space algorithm for computing maximal common subsequences. </title> <journal> Communications of the ACM 18(6) </journal> <pages> 341-343. </pages>
Reference-contexts: Dynamic programming efficiently organizes sequence comparison by comparing shorter subsequences first, so their costs can be made available in a table (like Figure 1) for the next longer subsequence comparisons. Comparison normally starts from the beginning or end of the sequences, or even both <ref> (Hirschberg 1975) </ref>. The final entry becomes the comparison rating. Exact sequence comparison (with or without gaps) is an O (n 2 )-time dynamic programming algorithm: serial machines require time proportional to the square of the sequence length to solve the problem. 1 Distance calculation is governed by a simple recurrence.
Reference: <author> Huang, X.; Miller, W.; Schwartz, S.; and Hardison, R. C. </author> <year> 1992. </year> <title> Parallelization of a local similarity algorithm. </title> <booktitle> CABIOS 8(2) </booktitle> <pages> 155-165. </pages>
Reference: <author> Huang, X.; Hardison, R. C.; and Miller, W. </author> <year> 1990. </year> <title> A space-efficient algorithm for local similarities. </title> <booktitle> CABIOS 6(4) </booktitle> <pages> 373-381. </pages>
Reference: <author> Huang, X. </author> <year> 1989. </year> <title> A space-efficient parallel sequence comparison algorithm for a message-passing multiprocessor. </title> <booktitle> International Journal of Parallel Programming 18(3) </booktitle> <pages> 223-239. </pages>
Reference: <author> Hughey, R., and Krogh, A. </author> <year> 1995. </year> <title> SAM: Sequence alignment and modeling software system. </title> <type> Technical Report UCSC-CRL-95-7, </type> <institution> University of California, </institution> <address> Santa Cruz, CA. </address>
Reference: <author> Hughey, R., and Lopresti, D. P. </author> <year> 1991. </year> <title> B-SYS: A 470-processor programmable systolic array. In Wu, </title> <editor> C., ed., </editor> <booktitle> Proc. Int. Conf. Parallel Processing, </booktitle> <volume> volume 1, </volume> <pages> 580-583. </pages> <publisher> CRC Press. </publisher>
Reference: <author> Krogh, A.; Brown, M.; Mian, I. S.; Sjolander, K.; and Haussler, D. </author> <year> 1994. </year> <title> Hidden Markov models in computational biology: Applications to protein modeling. </title>
Reference-contexts: Optimization then maximizes the total match value (Needleman & Wunsch 1970) or minimizes the total cost of mismatches and insert and delete gaps. Selecting an appropriate cost function can result in better alignments. There are many ways to develop a cost metric including using linear hidden Markov models <ref> (Krogh et al. 1994) </ref>. Dynamic programming efficiently organizes sequence comparison by comparing shorter subsequences first, so their costs can be made available in a table (like Figure 1) for the next longer subsequence comparisons. Comparison normally starts from the beginning or end of the sequences, or even both (Hirschberg 1975).
Reference: <author> J. </author> <title> Mol. </title> <journal> Biol. </journal> <volume> 235 </volume> <pages> 1501-1531. </pages>
Reference: <author> Lipton, R. J., and Lopresti, D. </author> <year> 1985. </year> <title> A systolic array for rapid string comparison. </title> <editor> In Fuchs, H., ed., </editor> <booktitle> 1986 Chapel Hill Conference on VLSI . Rockville, </booktitle> <address> MD: </address> <publisher> Computer Science Press. </publisher> <pages> 363-376. </pages>
Reference: <author> Masek, W. J., and Paterson, M. S. </author> <year> 1983. </year> <title> How to compute string-edit distances quickly. In Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher> <pages> 337-349. </pages>
Reference-contexts: the j-th character of b to the j-th processor. 1 Masek and Paterson describe an O (n 2 = log n) algorithm for strings of equal length from a finite alphabet with restrictions on the cost function, but it has a large constant factor and is not amenable to parallelization <ref> (Masek & Pa-terson 1983) </ref>.
Reference: <author> Myers, E. W., and Miller, W. </author> <year> 1988. </year> <title> Optimal alignments in linear space. </title> <booktitle> CABIOS 4(1) </booktitle> <pages> 11-17. </pages>
Reference: <author> Needleman, S. B., and Wunsch, C. D. </author> <year> 1970. </year> <title> A general method applicable to the search for similarities in the amino acid sequences of two proteins. </title> <journal> J. Mol. Biol. </journal> <volume> 48 </volume> <pages> 443-453. </pages>
Reference-contexts: Good alignments and sequence comparisons come from solutions of an appropriately chosen optimization problem. The problem formulation defines a set of edit primitives, including replace, insert, and delete, and assigns them values or costs. Optimization then maximizes the total match value <ref> (Needleman & Wunsch 1970) </ref> or minimizes the total cost of mismatches and insert and delete gaps. Selecting an appropriate cost function can result in better alignments. There are many ways to develop a cost metric including using linear hidden Markov models (Krogh et al. 1994).
Reference: <author> Nickolls, J. R. </author> <year> 1990. </year> <title> The design of the Maspar MP-1: A cost effective massively parallel computer. </title> <booktitle> In Proc. COMPCON Spring 1990, </booktitle> <pages> 25-28. </pages> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: Beyond our system, however, these results are applicable to any nearest-neighbor-connected array processor, such as the MasPar family of mesh-connected parallel computers, whose global communication is considerably slower than local com munication <ref> (Nickolls 1990) </ref>, as well as serial machines. Algorithm Let us define several parameters. Let n be the length of the longest of the two sequences compared and m be the length of the shorter.
Reference: <author> Sellers, P. H. </author> <year> 1974. </year> <title> On the theory and computation of evolutionary distances. </title> <journal> SIAM J. Appl. Math. </journal> <volume> 26 </volume> <pages> 787-793. </pages>
Reference-contexts: 6 6 I 6 6 6 I I I I I T R ACE B A C K TRACE B A C K B A C K T R A C - K I 6 c i1;j1 c i;j1 cost edit of "BACKTRACK" into "TRACEBACK" using Sellers' evolutionary distance metric <ref> (Sellers 1974) </ref>. Matches propagate the cost diagonally, insert/delete move horizontally/vertically with a cost of 1 per character. On a parallel machine with one processor per column, the dotted lines are isotimes. Below the dynamic programming table are two possible alignments and an illustration of the data dependencies.
Reference: <author> Singh, R., et al. </author> <year> 1993. </year> <title> A scalable systolic multiprocessor system for bioseqeunce similarity analysis. </title> <editor> In Snyder, L., ed., </editor> <booktitle> Symposium on Integrated Systems, </booktitle> <pages> 169-181. </pages> <institution> University of Washington. </institution>
References-found: 19

