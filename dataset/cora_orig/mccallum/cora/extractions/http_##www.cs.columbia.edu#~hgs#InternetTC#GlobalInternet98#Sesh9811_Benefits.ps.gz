URL: http://www.cs.columbia.edu/~hgs/InternetTC/GlobalInternet98/Sesh9811_Benefits.ps.gz
Refering-URL: http://www.cs.columbia.edu/~hgs/InternetTC/GlobalInternet98/
Root-URL: http://www.cs.columbia.edu
Email: srini@watson.ibm.com  stemm,randy-@cs.berkeley.edu  
Title: BENEFITS OF TRANSPARENT CONTENT NEGOTIATION IN HTTP  
Author: Srinivasan Seshan Mark Stemm, Randy H. Katz 
Address: Yorktown Heights, NY 10598  Berkeley, CA 94720  
Affiliation: IBM T.J. Watson Research Center  Computer Science Division University of California at Berkeley  
Abstract: Over the past several years, the popularity of the World Wide Web (WWW) has steadily increased. Unfortunately, as a result of overloaded servers and lack of bandwidth between clients and servers, response times observed by end users have also steadily increased. Response times are often so unbearable that the popular press has relabeled the World Wide Web the World Wide Wait. In this paper, we propose the use of content negotiation to allow clients and servers to tune response times to meet user demands. In our system, a client can negotiate content to match the bandwidth available between the server and itself. Clients obtain information about the available bandwidth from a SPAND performance prediction server [10]. When the available bandwidth is low or the original page is large, the client requests a smaller version of the document to reduce the response time. Our experiments show that the client is able to identify the subset of transfers that will perform poorly and that transferring a smaller amount of information on these connections helps improve the overall response time. In our system, servers that are limited by the bandwidth leaving their site reduce the quality and thereby the size of the documents being transferred. This allows the servers to serve many more requests when they are under heavy load. Our measurements show that the benefits can be significant, but are very dependent on the ratio of negotiable to nonnegotiable content. For example, in a typical mix of 60% image or other negotiable content, a server can increase the number of requests it handles by 50%. When 90% of the content is negotiable, a fourfold increase in Web server throughput is possible. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Barford. </author> <title> surge Scalable URL Reference Generator. </title> <note> http://www.cs.bu.edu/students/grads/barford/Home.ht-ml, 1998. </note>
Reference-contexts: The bandwidth of the link between the client and router was limited to 1.5 Mbits/sec, using a network emulator driver written by Venkata Padmanabhan. The Web client was running Surge, a HTTP request generator written at Boston University <ref> [1] </ref>. The Web server was running Apache 1.3b5. The Web server document pool consisted of 200 objects with sizes from 198 bytes to 700 kbytes with a distribution in sizes described in [2].
Reference: [2] <author> P. Barford and M. Crovella. </author> <title> Generating Representative Web Workloads for Network and Server Performance Evaluation. </title> <booktitle> In Proc. ACM Sigmetrics 98, </booktitle> <year> 1998. </year>
Reference-contexts: The Web client was running Surge, a HTTP request generator written at Boston University [1]. The Web server was running Apache 1.3b5. The Web server document pool consisted of 200 objects with sizes from 198 bytes to 700 kbytes with a distribution in sizes described in <ref> [2] </ref>. Characteristics of the request pattern (in particular, document popularity, temporal locality of requests, embedded document count of HTML pages, and length of a clients active and inactive periods) all follow representative distributions reported in [2]. <p> with sizes from 198 bytes to 700 kbytes with a distribution in sizes described in <ref> [2] </ref>. Characteristics of the request pattern (in particular, document popularity, temporal locality of requests, embedded document count of HTML pages, and length of a clients active and inactive periods) all follow representative distributions reported in [2]. We made approximately 75% of the documents negotiable by creating Type Map files for them and alternate representations of the documents.
Reference: [3] <author> N. Borenstein and N. Freed. </author> <title> MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies, </title> <month> Sep </month> <year> 1993. </year> <note> RFC 1521. </note>
Reference-contexts: Separate work is being done on a Feature Tag Registry [7] that allows developers to define Feature Tags in a unified framework similar to that used for MIME types <ref> [3] </ref>. Negotiation. A Web server responds to a request for a Web object with a HTTP 300 Multiple Choices response that lists the variants and their features. Figure 5 shows the format of a Multiple Choices response.
Reference: [4] <author> A. Fox, S. Gribble, E. Brewer, , and E. Amir. </author> <title> Adapting to Network and Client Variability via On-Demand Dynamic Transcoding. </title> <booktitle> In Proc. 16th ACM Symposium on Operating Systems Principles, </booktitle> <year> 1996. </year>
Reference-contexts: The idea of changing object fidelity to match network characteristics is not unique to HTTP. Related work has experimented with different ways to achieve the same goal by maintaining or generating multiple representations of Web content [9] [5] <ref> [4] </ref>, sometimes in ad-hoc ways. For example, the administrators of the CNN Web site www.cnn.com turn off advertisements during periods of heavy client traffic as an attempt to reduce server load. Using HTTP content negotiation, clients and servers can modify content fidelity to obtain acceptable response times.
Reference: [5] <author> A. Fox, S. Gribble, Y. Chawathe, and E. Brewer. </author> <title> Cluster-based Scalable Network Services. </title> <booktitle> In Proc. 16th ACM Symposium on Operating Systems Principles, </booktitle> <month> Oc-tober </month> <year> 1997. </year>
Reference-contexts: The idea of changing object fidelity to match network characteristics is not unique to HTTP. Related work has experimented with different ways to achieve the same goal by maintaining or generating multiple representations of Web content [9] <ref> [5] </ref> [4], sometimes in ad-hoc ways. For example, the administrators of the CNN Web site www.cnn.com turn off advertisements during periods of heavy client traffic as an attempt to reduce server load. Using HTTP content negotiation, clients and servers can modify content fidelity to obtain acceptable response times. <p> As previously mentioned, we only consider negotiation of image files. To generate alternate representations for gif and jpeg image files, we used transcoding programs written by the GloMop group at UC Ber-keley for their TranSend WWW proxy <ref> [5] </ref>. Our Web content crawler generated 6 alternate representations for each image file, each of a different size. Each alternate was 70% of the size of the next larger alternate, leading to possible alternates that are 70%, 49%, 34.3%, 24%, 16.8%, and 11.8% of the size of the original image.
Reference: [6] <author> S. Gribble and E. Brewer. </author> <title> System Design Issues for Internet Middleware Services: Deductions from a Large Client Trace. </title> <booktitle> In Proc. 1997 Usenix Symposium on Internet Technologies and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: With this partition of negotiable and nonnegotiable documents and the access pattern requested by Surge, 60% of the bytes transferred were from negotiable documents and 68% of the documents transferred were negotiable documents, both agreeing with characteristics from clientside traces <ref> [6] </ref> To stress the Web server, we started with an initial fixed client population requesting objects from the Web server. Every 800 seconds, additional clients were added to the client population by restarting the Surge process on the client machine.
Reference: [7] <author> K. Holtman and T. Hardie. </author> <title> Content Feature Tag Registration Procedure. </title> <address> http://genis.win.tue.nl/ koen/conneg/ draft-ietf-http-feature-reg-03.txt, </address> <month> November </month> <year> 1997. </year>
Reference-contexts: Typically, clients and servers can negotiate on the following dimensions of an object: Mime Type Language Character Set Encoding Length Negotiation can also be done on other arbitrarily defined feature tags (for example, screen size, color depth, etc.). Separate work is being done on a Feature Tag Registry <ref> [7] </ref> that allows developers to define Feature Tags in a unified framework similar to that used for MIME types [3]. Negotiation. A Web server responds to a request for a Web object with a HTTP 300 Multiple Choices response that lists the variants and their features.
Reference: [8] <author> K. Holtman and A. Mutz. </author> <note> Tranparent Content Negotiation in HTTP. http://genis.win.tue.nl/ koen/conneg/ draft-ietf-http-negotiation-06.html, </note> <month> January </month> <year> 1998. </year>
Reference-contexts: HTTP Transparent Content Negotiation This section describes the details of the IETF Transparent Content Negotiation Protocol and Apaches implementation of the protocol. A complete description is provided in <ref> [8] </ref>. 0 0.4 0.8 0 10 20 30 40 50 60 Time (seconds) P r e t a e clients at IBM research from servers in the Internet. 0 0.4 0.8 0 0.2 0.4 0.6 0.8 1 Bandwidth (Mbit/sec) P r e t a e IBM Research and servers in the
Reference: [9] <author> B. Noble, M. Satyanarayanan, D. Narayanan, J. Tilton, J. Flinn, and K. Walker. </author> <title> Agile Application-Aware Adaptation for Mobility. </title> <booktitle> In Proc. 16th ACM Symposium on Operating Systems Principles, </booktitle> <month> Oct </month> <year> 1997. </year>
Reference-contexts: The idea of changing object fidelity to match network characteristics is not unique to HTTP. Related work has experimented with different ways to achieve the same goal by maintaining or generating multiple representations of Web content <ref> [9] </ref> [5] [4], sometimes in ad-hoc ways. For example, the administrators of the CNN Web site www.cnn.com turn off advertisements during periods of heavy client traffic as an attempt to reduce server load. Using HTTP content negotiation, clients and servers can modify content fidelity to obtain acceptable response times.
Reference: [10] <author> S. Seshan, M. Stemm, and R. H Katz. SPAND: </author> <title> Shared Passive Network Performance Discovery. </title> <booktitle> In Proc. Us-enix Symposium on Internet Technologies and Systems (USITS 97), </booktitle> <month> Dec </month> <year> 1997. </year> <title> 5 15 25 35 45 90% Negotiable 60% Negotiable Not Negotiable Time (sec*10^3) Increasing Number of Clients T r o g p t ( c n s / s e ) negotiable documents. </title>
Reference-contexts: We chose to use the SPAND performance prediction system <ref> [10] </ref> to provide these estimates. SPAND ( S hared PA ssive N etwork performance D iscovery) is a network performance prediction system that allows a group of similarly connected clients to pool information about the network characteristics of the path to a distant network host.
References-found: 10

