URL: http://www.cs.indiana.edu/l/www/pub/shirley/cg92.ps.Z
Refering-URL: http://www.cs.indiana.edu/l/www/pub/shirley/
Root-URL: http://www.cs.indiana.edu
Title: Time Complexity of Monte Carlo Radiosity Computers and Graphics  
Author: Peter Shirley 
Affiliation: Department of Computer Science Indiana University  
Note: 16(1) 1992 (originally in Eurographics '91)  
Abstract: The time complexity of Monte Carlo radiosity is discussed, and a proof is given that the expected number of rays required to produce a statistical radiosity solution below a specified variance for N zones is O(N ). A satisfactory solution is defined to be one in which the variance of radiance estimates for each zone is below a predefined threshold. The proof assumes that the radiance is bounded, and the area ratio of the largest to smallest zone is bounded.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> John M. Airey and Ming Ouh-young. </author> <title> Two adaptive techniques let progressive radiosity outperform the traditional radiosity algorithm. </title> <type> Technical Report TR89-20, </type> <institution> University of North Carolina at Chapel Hill, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: In a highly complex scene this may be nontrivial. fl Department of Computer Science, Lindley Hall, Indiana University, Bloomington, IN 47405. Email: shirley@cs.indiana.edu. One method that does not rely on such an ability is a Monte Carlo simulation <ref> [11, 12, 1, 13, 10] </ref>. The Monte Carlo method can be applied to gravitational simulation by probabilistically choosing which of the N 2 relationships to calculate, and using these as estimates of the uncalculated relationships. <p> , we can simply use: r = V 0 Thus, the number of rays needed for this Monte Carlo simulation is O (N ), where N is the number of zones. 3 Including Indirect Lighting One way to extend the Monte Carlo method is to use a progressive refinement technique <ref> [3, 1, 14] </ref>, where each zone, in turn, sends the power it received in direct lighting. This process could continue until most of the power is absorbed. Unfortunately, it is algebraicly difficult to extend the reasoning from the last section to such this algorithm.
Reference: [2] <author> John M. Airey, John H. Rohlf, and Frederick P. Brooks. </author> <title> Towards image realism with interactive update rates in complex virtual building environments. </title> <journal> Computer Graphics, </journal> <volume> 24(1) </volume> <pages> 41-50, </pages> <year> 1990. </year> <booktitle> ACM Workshop on Interactive Graphics Proceedings. </booktitle>
Reference-contexts: In a Monte Carlo radiosity program, each zone sends power to other zones by sending rays in the directions that power is radiated. Details of this approach can be found in [14]. Both Airey <ref> [2] </ref> and this author [14] have observed that, in practice, only O (N ) rays seem to be required for an N zone solution.
Reference: [3] <author> Michael F. Cohen, Shenchang Eric Chen, John R. Wallace, and Donald P. Greenberg. </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 75-84, </pages> <month> August </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference-contexts: , we can simply use: r = V 0 Thus, the number of rays needed for this Monte Carlo simulation is O (N ), where N is the number of zones. 3 Including Indirect Lighting One way to extend the Monte Carlo method is to use a progressive refinement technique <ref> [3, 1, 14] </ref>, where each zone, in turn, sends the power it received in direct lighting. This process could continue until most of the power is absorbed. Unfortunately, it is algebraicly difficult to extend the reasoning from the last section to such this algorithm.
Reference: [4] <author> Micheal F. Cohen, Donald P. Greenberg, David S. Immel, and Philip J. Brock. </author> <title> An efficient radioisty approach for realistic image synthesis. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 6(2) </volume> <pages> 26-35, </pages> <year> 1986. </year>
Reference-contexts: One of the first schemes to lower the radiosity calculation time was to group the N zones into p patches, and transfer power from patches to zones (elements) <ref> [4] </ref>. Still, the computation time will be at least O (N p), so many zones need to be grouped before a large savings occurs. Hanrahan and Salzmann [8] observed that there are similarities between the N zone radiosity problem and the N body gravitational simulation problem.
Reference: [5] <author> Andrew S. Glassner. </author> <title> Space subdivision for fast ray tracing. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 4(10) </volume> <pages> 15-22, </pages> <year> 1984. </year>
Reference-contexts: We still do not have a solution for the time needed, as opposed to the number of rays needed. Ideally, if a divide and conquer search structure, such as an octree <ref> [5] </ref>, is used, the average time to trace a ray can be O (log N ). In practice, this seems to usually be true. This would make our solution time O (N log N ).
Reference: [6] <author> Cindy M. Goral, Kenneth E. Torrance, and Donald P. Greenberg. </author> <title> Modeling the interaction of light between diffuse surfaces. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 213-222, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle>
Reference-contexts: 1 Introduction In a radiosity (zonal) program, the surfaces in the environment are broken into N zones, z i , and the radiance, L i , of each zone is calculated <ref> [6, 7] </ref>. In the most straightforward radiosity method, all N 2 relationships (form-factors) are explicitly calculated, so the time complexity of the program is at least O (N 2 ).
Reference: [7] <author> Roy Hall. </author> <title> Illumination and Color in Computer Generated Imagery. </title> <publisher> Springer-Verlag, </publisher> <address> New York, N.Y., </address> <year> 1988. </year>
Reference-contexts: 1 Introduction In a radiosity (zonal) program, the surfaces in the environment are broken into N zones, z i , and the radiance, L i , of each zone is calculated <ref> [6, 7] </ref>. In the most straightforward radiosity method, all N 2 relationships (form-factors) are explicitly calculated, so the time complexity of the program is at least O (N 2 ).
Reference: [8] <author> Pat Hanrahan and David Salzman. </author> <title> A rapid hierarchical radiosity algorithm for unoccluded environments. </title> <booktitle> In Proceedings of the Eurographics Workshop on Photosimulation, Realism and Physics in Computer Graphics, </booktitle> <pages> pages 151-171, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Still, the computation time will be at least O (N p), so many zones need to be grouped before a large savings occurs. Hanrahan and Salzmann <ref> [8] </ref> observed that there are similarities between the N zone radiosity problem and the N body gravitational simulation problem. In the gravitation problem, all N 2 relationships must be established to calculate the accelerations of the bodies.
Reference: [9] <author> Pat Hanrahan, David Salzman, and Larry Aupperle. </author> <title> A rapid hierarchical radiosity algorithm. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 197-206, </pages> <month> July </month> <year> 1991. </year> <booktitle> ACM Siggraph '91 Conference Proceedings. </booktitle>
Reference-contexts: Hanrahan et al. extended this work to shadowed environments by adding a ray tracing shadow test, and showed that this required a total of O (N ) rays <ref> [9] </ref>. One potential drawback of the two optimization techniques described above, is that they rely on the ability to group zones into larger patches. In a highly complex scene this may be nontrivial. fl Department of Computer Science, Lindley Hall, Indiana University, Bloomington, IN 47405. Email: shirley@cs.indiana.edu.
Reference: [10] <author> Paul S. Heckbert. </author> <title> Adaptive radiosity textures for bidirectional ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 24(3) </volume> <pages> 145-154, </pages> <month> August </month> <year> 1990. </year> <booktitle> ACM Siggraph '90 Conference Proceedings. </booktitle>
Reference-contexts: In a highly complex scene this may be nontrivial. fl Department of Computer Science, Lindley Hall, Indiana University, Bloomington, IN 47405. Email: shirley@cs.indiana.edu. One method that does not rely on such an ability is a Monte Carlo simulation <ref> [11, 12, 1, 13, 10] </ref>. The Monte Carlo method can be applied to gravitational simulation by probabilistically choosing which of the N 2 relationships to calculate, and using these as estimates of the uncalculated relationships.
Reference: [11] <author> Malvin H. Kalos and Paula A. Whitlock. </author> <title> Monte Carlo Methods. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, N.Y., </address> <year> 1986. </year>
Reference-contexts: In a highly complex scene this may be nontrivial. fl Department of Computer Science, Lindley Hall, Indiana University, Bloomington, IN 47405. Email: shirley@cs.indiana.edu. One method that does not rely on such an ability is a Monte Carlo simulation <ref> [11, 12, 1, 13, 10] </ref>. The Monte Carlo method can be applied to gravitational simulation by probabilistically choosing which of the N 2 relationships to calculate, and using these as estimates of the uncalculated relationships.
Reference: [12] <author> Thomas J. V. Malley. </author> <title> A shading method for computer generated images. </title> <type> Master's thesis, </type> <institution> University of Utah, </institution> <month> June </month> <year> 1988. </year>
Reference-contexts: In a highly complex scene this may be nontrivial. fl Department of Computer Science, Lindley Hall, Indiana University, Bloomington, IN 47405. Email: shirley@cs.indiana.edu. One method that does not rely on such an ability is a Monte Carlo simulation <ref> [11, 12, 1, 13, 10] </ref>. The Monte Carlo method can be applied to gravitational simulation by probabilistically choosing which of the N 2 relationships to calculate, and using these as estimates of the uncalculated relationships.
Reference: [13] <author> Peter Shirley. </author> <title> Physically Based Lighting Calculations for Computer Graphics. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> November </month> <year> 1990. </year>
Reference-contexts: In a highly complex scene this may be nontrivial. fl Department of Computer Science, Lindley Hall, Indiana University, Bloomington, IN 47405. Email: shirley@cs.indiana.edu. One method that does not rely on such an ability is a Monte Carlo simulation <ref> [11, 12, 1, 13, 10] </ref>. The Monte Carlo method can be applied to gravitational simulation by probabilistically choosing which of the N 2 relationships to calculate, and using these as estimates of the uncalculated relationships.
Reference: [14] <author> Peter Shirley. </author> <title> A ray tracing algorithm for global illumination. </title> <booktitle> Graphics Interface '90, </booktitle> <month> May </month> <year> 1990. </year>
Reference-contexts: In a Monte Carlo radiosity program, each zone sends power to other zones by sending rays in the directions that power is radiated. Details of this approach can be found in <ref> [14] </ref>. Both Airey [2] and this author [14] have observed that, in practice, only O (N ) rays seem to be required for an N zone solution. <p> In a Monte Carlo radiosity program, each zone sends power to other zones by sending rays in the directions that power is radiated. Details of this approach can be found in <ref> [14] </ref>. Both Airey [2] and this author [14] have observed that, in practice, only O (N ) rays seem to be required for an N zone solution. <p> , we can simply use: r = V 0 Thus, the number of rays needed for this Monte Carlo simulation is O (N ), where N is the number of zones. 3 Including Indirect Lighting One way to extend the Monte Carlo method is to use a progressive refinement technique <ref> [3, 1, 14] </ref>, where each zone, in turn, sends the power it received in direct lighting. This process could continue until most of the power is absorbed. Unfortunately, it is algebraicly difficult to extend the reasoning from the last section to such this algorithm.
References-found: 14

