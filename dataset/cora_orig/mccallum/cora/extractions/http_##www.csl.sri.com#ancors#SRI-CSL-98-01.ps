URL: http://www.csl.sri.com/ancors/SRI-CSL-98-01.ps
Refering-URL: http://www.csl.sri.com/ancors/
Root-URL: 
Author: Livio Ricciulli, Phillip Porras, Nachum Shacham 
Date: March 19, 1998  
Web: SRI-CSL-98-01  
Note: System  
Abstract: ANCORS: Adaptable Network COntrol and Reporting Abstract ANCORS is a distributed tool suite that merges technology from network management, active networking, and distributed simulation in a unified paradigm to assist in the assessment, control, and design of computer networks. This paper explores some of the advantages that can be obtained from merging the three technologies, and describes how ANCORS integrates complementary elements of each. ANCORS's architecture offers substantial software reuse, scalability, and flexibility and supports an extensible mechanism to employ multiple network management protocols of varying degrees of complexity. This paper also describes network engineering and monitoring services that were implemented to prototype some of ANCORS's architectural ideas and provide practical experience for their refinement. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Scott Alexander, Marianne Shaw, Scott M. Nettles, and Jonathan M. Smith. </author> <title> Active bridging. </title> <booktitle> To appear in the Proceedings of the ACM SIGCOMM'97 Conference, </booktitle> <address> Cannes, France, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. * New trends in network design <ref> [12, 4, 3, 13, 9, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness. <p> kinds of data services that may benefit from dynamic deployment in the network and that naturally map to the three services we want to support: data transport, monitoring and control, and engineering. 2.1.1 Data Transport Services Data transport services offer communication protocols, either quite general and extensible as proposed in <ref> [12, 3, 13, 9, 1] </ref>, or more traditional services derived from the ones available today. In all cases, we assume that their deployment may be dynamic. The scope of this paper does not permit us to give a detailed description of these services and their possible applications.
Reference: [2] <author> F. Barillaud, L. Deri, and M. Feredun. </author> <title> Network management using internet technologies. Integrated Network Management V, </title> <address> San Diego, </address> <year> 1997. </year>
Reference-contexts: Yet another approach is for the service to respond by providing Java byte-code that can then be embedded either in the central management stations or in a distributed monitoring agent, using a scheme similar to the one proposed in <ref> [2] </ref>. Other interesting technologies that are being developed, and that may be included, are DRP [10] and NESTOR [15]. We think ANCORS's simple query mechanism can be the foundation for solving the problem of how to extend the monitoring and control capability as new network services are deployed.
Reference: [3] <author> L. Peterson J. Hartman, U. Manber and T. Proebsting. </author> <title> Liquid software: A new paradigm for networked systems. </title> <type> Technical Report 96-11, </type> <institution> University of Arizona, </institution> <year> 1996. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. * New trends in network design <ref> [12, 4, 3, 13, 9, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness. <p> kinds of data services that may benefit from dynamic deployment in the network and that naturally map to the three services we want to support: data transport, monitoring and control, and engineering. 2.1.1 Data Transport Services Data transport services offer communication protocols, either quite general and extensible as proposed in <ref> [12, 3, 13, 9, 1] </ref>, or more traditional services derived from the ones available today. In all cases, we assume that their deployment may be dynamic. The scope of this paper does not permit us to give a detailed description of these services and their possible applications. <p> The management of short-lived services should be directly embedded in the mechanisms that deploy and control them and therefore are integral parts of their dynamic loading mechanisms. This kind of micro-management, currently being addressed by several research projects <ref> [12, 3, 13] </ref>, is beyond the scope of this paper. From a system management point of view, all services constituting ANCORS's architecture (Figure 2) are equal. Their deployment, operation, and monitoring can be performed using the same mechanisms, and therefore they can be managed in the same paradigm.
Reference: [4] <author> U. Legedza, D. J. Wetherall, and J. V. Guttag. </author> <title> Improving the performance of distributed applications using active networks. </title> <note> Submitted to IEEE INFOCOM'98, </note> <year> 1998. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. * New trends in network design <ref> [12, 4, 3, 13, 9, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness.
Reference: [5] <author> P.A. Porras and A.Valdes. </author> <title> Live traffic analysis of tcp/ip gateways. </title> <booktitle> To appear in Proceedings of the Network and Distributed System Security Symposium, </booktitle> <address> San Diego, </address> <month> March, </month> <year> 1998. </year>
Reference-contexts: Upon deployment, the ANCORS daemon receives both the intrusion-detection code module and a resource object, which it instantiates to provide dynamically deployable and customizable surveillance. A detailed discussion of the ANCORS intrusion-detection module's abilities to detect misuse and other exceptional activities on TCP/IP gateway machines can be found in <ref> [5] </ref>. 5 Conclusion As the dynamic deployment of networking services becomes standard technology to support user applications, network operators will require an efficient and flexible infrastructure to assist them in network design, configuration, and monitoring.
Reference: [6] <author> P.A. Porras and P.G. Neumann. </author> <title> Emerald: Event monitoring enabling responses to anomalous live disturbances. </title> <booktitle> Proceedings of the National Information Systems Security Conference, </booktitle> <address> Baltimore, MD, </address> <month> October, </month> <year> 1997. </year>
Reference-contexts: These services perform tasks analogous to those performed by today's network management agents. In addition, specialized monitoring and control network services may be dynamically deployed to perform user-defined targeted analyses such as those proposed in <ref> [6] </ref>. <p> The statistical profiling engine monitors the degree to which various user-defined metrics change with respect to the current operational behavior of the network. The algorithms used to provide the heuristic assessment and the statistical profiling of network data will be adapted from related research effort on information survivability <ref> [6] </ref>. 2.3 Control layer The output from the assessment layer is propagated to the control layer, where these results are displayed for the administrator or processed by an expert system decision engine capable of providing predetermined responses, given the receipt of various assessment results. <p> focused in implementing (1) a prototype of a root ANCORS daemon that dynamically accepts and instantiates network services, (2) a representative example of an engineering service that could be used to conduct very accurate, end-to-end quantitative experimentation, and (3) the integration of a monitoring and control service for intrusion detection <ref> [6] </ref>. 4.1 ANCORS Root daemon The current prototype of an ANCORS root daemon accepts commands to download network service from a remote location. <p> The operational data is forwarded to the intrusion-detection module's analysis engines, which consist of both a signature analysis (an expert-system) engine and a statistical anomaly detection engine. Details of the architectural structure and analysis capabilities of the ANCORS intrusion-detection service can be found in <ref> [6] </ref>. Fundamental to the intrusion-detection module's ability to support rapid deployment to a variety of ANCORS hosts, and to conduct a variety of analyses on heterogeneous event streams, is the implementation of a pluggable configuration library that allows strong separation between the analysis semantics and the code-base.
Reference: [7] <author> L. Ricciulli. </author> <title> High-fidelity distributed simulation of local area networks. </title> <booktitle> To appear in Proceedings of the 31st Annual Simulation Symposium, </booktitle> <address> Boston, </address> <month> April, </month> <year> 1998. </year>
Reference-contexts: The resulting service executes in a virtual timescale, offers the identical networking behavior of a real Linux kernel and can therefore be used as a vehicle to instantiate high fidelity distributed simulations of virtual networks <ref> [7] </ref>. One of the model's configuration functions accepts several different timing configurations to approximate the protocol stack timing behavior of four different kernels (SunOS 4.13, SunOS 5.5, Linux 2.02, and BSD 2.2).
Reference: [8] <author> H. Schwetman. Csim: </author> <title> A c-based, process-oriented simulation language. </title> <type> Technical report, </type> <institution> MCC, </institution> <year> 1989. </year>
Reference-contexts: Memory management was completely deleted and replaced by user-level memory allocation functions (malloc and free). The scheduling was also completely replaced by nonpreemptive threading offered by the simulation package (CSIM <ref> [8] </ref>). The resulting service executes in a virtual timescale, offers the identical networking behavior of a real Linux kernel and can therefore be used as a vehicle to instantiate high fidelity distributed simulations of virtual networks [7].
Reference: [9] <author> Jonathan Smith, David Farber, Carl A. Gunter, Scott Nettle, Mark Segal, William D. Sincoskie, David Feldmeier, and Scott Alexander. Switchware: </author> <title> Towards a 21st century network infrastructure. </title> <address> http://www.cis.upenn.edu/ switchware/papers/sware.ps, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. * New trends in network design <ref> [12, 4, 3, 13, 9, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness. <p> kinds of data services that may benefit from dynamic deployment in the network and that naturally map to the three services we want to support: data transport, monitoring and control, and engineering. 2.1.1 Data Transport Services Data transport services offer communication protocols, either quite general and extensible as proposed in <ref> [12, 3, 13, 9, 1] </ref>, or more traditional services derived from the ones available today. In all cases, we assume that their deployment may be dynamic. The scope of this paper does not permit us to give a detailed description of these services and their possible applications.
Reference: [10] <author> Arthur van Hoff, John Giannandrea, Mark Hapner, Steve Carter, and Milo Medin. </author> <title> The HTTP Distribution and Replication Protocol. </title> <note> http://www.marimba.com/standards/drp.html, August 25, </note> <year> 1997. </year>
Reference-contexts: Besides offering powerful assessment and design tools, adaptable networks should also provide a flexible infrastructure to manage and distribute software. New standards being proposed to assist in the distribution and maintenance of software through the network <ref> [11, 10] </ref> would allow users to install or update software components by simply accessing HTML-like pages, thus providing more cost-effective mechanisms for distributing and maintaining application software. <p> Some searching and browsing capabilities should be offered so that network operators may also easily locate the appropriate executable codes. Existing protocols such as HTTP and LDAP/X500 or newer and richer protocols such as the ones described in <ref> [10, 11] </ref> could be used for user-friendly code storage and retrieval. Configuration functions write control data into the network services after they have been loaded onto the intended nodes for the purpose of integrating them into the network node and possibly tailoring the service to particular needs. <p> Other interesting technologies that are being developed, and that may be included, are DRP <ref> [10] </ref> and NESTOR [15]. We think ANCORS's simple query mechanism can be the foundation for solving the problem of how to extend the monitoring and control capability as new network services are deployed.
Reference: [11] <author> Arthur van Hoff, Hadi Partovi, and Tom Thai. </author> <title> Specification for the Open Software Description (OSD) Format. </title> <note> http://www.microsoft.com/standards/osd/, August 11, </note> <year> 1997. </year>
Reference-contexts: Besides offering powerful assessment and design tools, adaptable networks should also provide a flexible infrastructure to manage and distribute software. New standards being proposed to assist in the distribution and maintenance of software through the network <ref> [11, 10] </ref> would allow users to install or update software components by simply accessing HTML-like pages, thus providing more cost-effective mechanisms for distributing and maintaining application software. <p> Some searching and browsing capabilities should be offered so that network operators may also easily locate the appropriate executable codes. Existing protocols such as HTTP and LDAP/X500 or newer and richer protocols such as the ones described in <ref> [10, 11] </ref> could be used for user-friendly code storage and retrieval. Configuration functions write control data into the network services after they have been loaded onto the intended nodes for the purpose of integrating them into the network node and possibly tailoring the service to particular needs.
Reference: [12] <author> D. J. Wetherall, J. V. Guttag, and D. L. Tennenhouse. </author> <title> Ants: A toolkit for building and dynamically deploying network protocols. </title> <note> Submitted to IEEES OPENARCH'98, </note> <year> 1998. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. * New trends in network design <ref> [12, 4, 3, 13, 9, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness. <p> kinds of data services that may benefit from dynamic deployment in the network and that naturally map to the three services we want to support: data transport, monitoring and control, and engineering. 2.1.1 Data Transport Services Data transport services offer communication protocols, either quite general and extensible as proposed in <ref> [12, 3, 13, 9, 1] </ref>, or more traditional services derived from the ones available today. In all cases, we assume that their deployment may be dynamic. The scope of this paper does not permit us to give a detailed description of these services and their possible applications. <p> The management of short-lived services should be directly embedded in the mechanisms that deploy and control them and therefore are integral parts of their dynamic loading mechanisms. This kind of micro-management, currently being addressed by several research projects <ref> [12, 3, 13] </ref>, is beyond the scope of this paper. From a system management point of view, all services constituting ANCORS's architecture (Figure 2) are equal. Their deployment, operation, and monitoring can be performed using the same mechanisms, and therefore they can be managed in the same paradigm.
Reference: [13] <author> Y. Yemini and S. da Silva. </author> <title> Towards programmable networks. </title> <booktitle> IFIP/IEEE International Workshop on Distributed Systems: Operations and Management, </booktitle> <address> L'Aquila, Italy, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The Internet will become increasingly dynamic. Changes in the Internet will affect both its control mechanisms and the nature of information exchanged. * New trends in network design <ref> [12, 4, 3, 13, 9, 1] </ref> seek to render network protocols more flexible and extensible, and to thus improve their overall usefulness. <p> kinds of data services that may benefit from dynamic deployment in the network and that naturally map to the three services we want to support: data transport, monitoring and control, and engineering. 2.1.1 Data Transport Services Data transport services offer communication protocols, either quite general and extensible as proposed in <ref> [12, 3, 13, 9, 1] </ref>, or more traditional services derived from the ones available today. In all cases, we assume that their deployment may be dynamic. The scope of this paper does not permit us to give a detailed description of these services and their possible applications. <p> The management of short-lived services should be directly embedded in the mechanisms that deploy and control them and therefore are integral parts of their dynamic loading mechanisms. This kind of micro-management, currently being addressed by several research projects <ref> [12, 3, 13] </ref>, is beyond the scope of this paper. From a system management point of view, all services constituting ANCORS's architecture (Figure 2) are equal. Their deployment, operation, and monitoring can be performed using the same mechanisms, and therefore they can be managed in the same paradigm.
Reference: [14] <author> Y. Yemini, G. Goldszmidt, and S. Yemini. </author> <title> Network management by delegation. </title> <booktitle> Second International Symposium on Integrated Network Management, </booktitle> <address> Washington DC, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: While we intend to formulate a protocol that best suits the nature of our adaptable management paradigm based on delegation <ref> [14] </ref>, we recognize that legacy protocols and simple Web-based solutions should also be possible. Standards like SNMP should be supported in those cases where backward compatibility is desirable; HTML could be employed for services to be configured and monitored interactively.
Reference: [15] <author> Y. Yemini, A. V. Konstantinou, and Danilo Florissi. </author> <title> Nestor : Network self management and organization. </title> <note> http://www.cs.columbia.edu/dcc/nestor/, 1998. 15 </note>
Reference-contexts: Other interesting technologies that are being developed, and that may be included, are DRP [10] and NESTOR <ref> [15] </ref>. We think ANCORS's simple query mechanism can be the foundation for solving the problem of how to extend the monitoring and control capability as new network services are deployed.
References-found: 15

