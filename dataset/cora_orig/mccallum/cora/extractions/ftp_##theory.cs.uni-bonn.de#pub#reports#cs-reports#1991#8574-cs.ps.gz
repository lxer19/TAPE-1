URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1991/8574-cs.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1991-en.html
Root-URL: http://cs.uni-bonn.de
Title: Read-Once Threshold Formulas, Justifying Assignments, and Generic Transformations (Revised Version)  
Author: Nader H. Bshouty Thomas R. Hancock Lisa Hellerstein Marek Karpinski and 
Keyword: Read-Once Formulas, Threshold Functions, Monotone Functions, Learning Algorithms, Interpolation, Computational Complexity.  
Note: Subject classifications. 68Q20, 68Q25, 68T05. This research was supported in part by the NSERC of Canada. Supported by ONR grant N00014-85-K-0445. Supported in part by a grant from the Siemens Corporation and ONR grant N00014-85-K-0445. Portions of this research were done while the author was visiting the  Supported in part by the Leibniz Center for Research in Computer Science, by the DFG Grant KA 673/4-1 and by the SERC Grant GR-E 68297.  
Address: 2500 University Drive N.W. Calgary, Alberta, Canada T2N 1N4  33 Oxford Street Cambridge, MA 02138  2145 Sheridan Road Evanston, IL 60208-3118  5300 Bonn 1  Berkeley, California  
Affiliation: Department of Computer Science The University of Calgary  Aiken Computation Laboratory Harvard University  Department of EECS Northwestern University  Dept. of Computer Science University of Bonn  International Computer Science Institute  Dept. of Computer Science, University of Bonn, the University of California at Santa Cruz, and the Massachusetts Institute of Technology  
Abstract: We present a membership query (i.e. interpolation) algorithm for exactly identifying the class of read-once formulas over the basis of boolean threshold functions. Using a generic transformation from [Angluin, Hellerstein, Karpin-ski 89], this gives an algorithm using membership and equivalence queries for exactly identifying the class of read-once formulas over the basis of boolean threshold functions and negation. We also present a a series of generic transformations that can be used to convert an algorithm in one learning model into an algorithm in a different model. 
Abstract-found: 1
Intro-found: 1
Reference: [A 87] <author> D. Angluin. </author> <title> Queries and concept learning. </title> <booktitle> In Machine Learning, </booktitle> <volume> 2 </volume> <pages> 319-342, </pages> <year> 1987. </year>
Reference-contexts: The last term is made up of all but m variables, with one variable missing from each of the first m 15 terms. This class is learnable by the membership and equivalence query algorithm for learning monotone DNF <ref> [A 87] </ref>. The formulas in this class differ only in their last term, so learning a formula in this class is equivalent to learning the last term in the formula.
Reference: [AHK 89] <author> D. Angluin, L. Hellerstein, and M. Karpinski. </author> <title> Learning read-once formulas with queries. </title> <type> Technical report, Report No. </type> <institution> UCB/CSD 89/528, Computer Science Division, University of California Berkeley, </institution> <year> 1989. </year> <note> To appear, J. ACM '91. </note>
Reference-contexts: Such transformations can be regarded as reductions, in that they reduce the problem of designing an algorithm in one learning model, into the problem of designing an algorithm in another learning model. The results in this paper generalize the work of Angluin, Hellerstein, and Karpinski on learning read-once formulas <ref> [AHK 89] </ref>. A read-once formula is a boolean formula over the basis (AND,OR,NOT) that contains at most one occurrence of each variable. Angluin, Hellerstein, and Karpinski gave a polynomial time membership query algorithm for exactly identifying (i.e. interpolating) the class of monotone read-once formulas, where the basis is just (AND,OR). <p> Then they applied a generic transformation to produce a polynomial time membership and equivalence query algorithm for the non-monotone case. It is easily shown that there is no membership query only algorithm for the non-monotone case. We generalize the monotone <ref> [AHK 89] </ref> algorithm by presenting a polynomial time membership query algorithm to exactly identify read-once formulas over the basis of boolean threshold functions (a superset of the basis (AND,OR)). The [AHK 89] transformation then implies a membership and equivalence query algorithm to identify read-once formulas over the basis of boolean threshold <p> We generalize the monotone <ref> [AHK 89] </ref> algorithm by presenting a polynomial time membership query algorithm to exactly identify read-once formulas over the basis of boolean threshold functions (a superset of the basis (AND,OR)). The [AHK 89] transformation then implies a membership and equivalence query algorithm to identify read-once formulas over the basis of boolean threshold and negation. The class of read-once formulas over the basis of boolean threshold and negation was previous studied by Heiman, Newman, and Wigderson [HNW 90] . <p> The second part of this paper demonstrates a more extensive set of generic transformations. As in the <ref> [AHK 89] </ref> transformation, in these transformations we assume the technical condition that the classes being learned are projection closed. <p> The first transformation we present is a very simple one that we call M (M)!MJ (U), which converts a membership query algorithm for learning a monotone class into a membership query and justifying assignments algorithm for learning the corresponding unate class (This transformation is almost identical to one presented in <ref> [AHK 89] </ref>. We present it here for completeness). We then present a second transformation, MJ!ME which converts an algorithm for learning a class of formulas in the membership and justifying assignments model, into an algorithm for learning the same class of formulas in the membership and equivalence query model. <p> We then present a second transformation, MJ!ME which converts an algorithm for learning a class of formulas in the membership and justifying assignments model, into an algorithm for learning the same class of formulas in the membership and equivalence query model. The main transformation presented in <ref> [AHK 89] </ref> is M (M)!ME (U) (Membership query algorithm for monotone class ! Membership and equivalence query algorithm for unate class). By combining the M (M)!MJ (U) transformation with the MJ!ME transformation, we get an M (M)!ME (U) transformation which is slightly different from the one presented in [AHK 89]. <p> presented in <ref> [AHK 89] </ref> is M (M)!ME (U) (Membership query algorithm for monotone class ! Membership and equivalence query algorithm for unate class). By combining the M (M)!MJ (U) transformation with the MJ!ME transformation, we get an M (M)!ME (U) transformation which is slightly different from the one presented in [AHK 89]. As in [AHK 89], we also show that these transformations can be modified to include equivalence queries in the base and target models of the transformation (i.e. we argue that transformations of the form ME (M)!MJE (U), MJE!ME, and hence ME (M)!ME (U) all exist). <p> By combining the M (M)!MJ (U) transformation with the MJ!ME transformation, we get an M (M)!ME (U) transformation which is slightly different from the one presented in <ref> [AHK 89] </ref>. As in [AHK 89], we also show that these transformations can be modified to include equivalence queries in the base and target models of the transformation (i.e. we argue that transformations of the form ME (M)!MJE (U), MJE!ME, and hence ME (M)!ME (U) all exist). <p> Proof: The class of read-once threshold formulas is the unate extension of the class of monotone read-once threshold formulas. The theorem follows directly from the results of Angluin, Hellerstein and Karpinski <ref> [AHK 89] </ref>, who showed that if a class M can be learned in time O (n k ) with O (n j ) membership queries, then the corresponding unate class can be learned in time O (n k+1 ) with O (n j+1 ) membership queries, and O (n) equivalence queries.
Reference: [BHH 91a] <author> Nader H. Bshouty, Thomas R. Hancock, and Lisa Hellerstein. </author> <title> Learning arithmetic read-once formulas. </title> <note> to appear in 24 th ACM STOC 1992. </note>
Reference-contexts: The transformations in this paper have also been used in designing algorithms for learning read-once formulas over other bases [HH 91], <ref> [BHH 91a] </ref>, [BHH 91b]. We note that for some classes of formulas (including the restricted classes of read-once formulas discussed in [GKS 90a], and the arithmetic read-once formulas discussed in [BHH 91a]), justifying assignments can be generated with high probability using random membership queries. <p> transformations in this paper have also been used in designing algorithms for learning read-once formulas over other bases [HH 91], <ref> [BHH 91a] </ref>, [BHH 91b]. We note that for some classes of formulas (including the restricted classes of read-once formulas discussed in [GKS 90a], and the arithmetic read-once formulas discussed in [BHH 91a]), justifying assignments can be generated with high probability using random membership queries. For such classes, it is trivial to transform a learning algorithm using membership queries and justifying assignments into an algorithm that interpolates (with high probability) using deterministic and random membership queries.
Reference: [BHH 91b] <author> Nader H. Bshouty, Thomas R. Hancock, and Lisa Hellerstein. </author> <title> Learning boolean read-once formulas over extended bases. </title> <note> Manuscript in Preparation. </note>
Reference-contexts: The transformations in this paper have also been used in designing algorithms for learning read-once formulas over other bases [HH 91], [BHH 91a], <ref> [BHH 91b] </ref>. We note that for some classes of formulas (including the restricted classes of read-once formulas discussed in [GKS 90a], and the arithmetic read-once formulas discussed in [BHH 91a]), justifying assignments can be generated with high probability using random membership queries.
Reference: [GKS 90a] <author> Sally A. Goldman, Michael J. Kearns, and Robert E. Schapire. </author> <title> Exact identification of circuits using fixed points of amplification functions. </title> <booktitle> In Proceedings of the 31st Symposium on Foundations of Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: The transformations in this paper have also been used in designing algorithms for learning read-once formulas over other bases [HH 91], [BHH 91a], [BHH 91b]. We note that for some classes of formulas (including the restricted classes of read-once formulas discussed in <ref> [GKS 90a] </ref>, and the arithmetic read-once formulas discussed in [BHH 91a]), justifying assignments can be generated with high probability using random membership queries.
Reference: [Han 90] <author> Thomas Hancock. </author> <title> Identifying -formula decision trees with queries. </title> <type> Technical report, </type> <institution> Harvard University TR-16-90, </institution> <year> 1990. </year>
Reference-contexts: Our interest in these transformations began with an alternative membership and equivalence query algorithm for identifying read-once formulas over the basis of threshold functions and negations <ref> [Han 90] </ref>. This algorithm is qualitatively different from the one described in the 2 first part of this paper, but achieves the same bounds. <p> We present a class of formulas that can be learned in the model of membership and equivalence queries but not in the model of membership queries and justifying assignments. Some of the results in this paper appeared in a preliminary form in [HK 91], <ref> [Han 90] </ref>, and [HH 91]. 2 Basic Definitions Let V n denote the set fX 1 ; X 2 ; :::; X n g.
Reference: [HH 91] <author> Thomas Hancock and Lisa Hellerstein. </author> <title> Learning read-once formulas over fields and extended bases. </title> <booktitle> In The 1991 Workshop on Computational Learning Theory, </booktitle> <year> 1991. </year>
Reference-contexts: Unfortunately, the resulting algorithm is a factor of n less efficient than the membership query only interpolation algorithm presented in this paper (hence our decision not to present it here). The transformations in this paper have also been used in designing algorithms for learning read-once formulas over other bases <ref> [HH 91] </ref>, [BHH 91a], [BHH 91b]. We note that for some classes of formulas (including the restricted classes of read-once formulas discussed in [GKS 90a], and the arithmetic read-once formulas discussed in [BHH 91a]), justifying assignments can be generated with high probability using random membership queries. <p> We present a class of formulas that can be learned in the model of membership and equivalence queries but not in the model of membership queries and justifying assignments. Some of the results in this paper appeared in a preliminary form in [HK 91], [Han 90], and <ref> [HH 91] </ref>. 2 Basic Definitions Let V n denote the set fX 1 ; X 2 ; :::; X n g.
Reference: [HNW 90] <author> R. Heiman, I. Newman, A. Wigderson, </author> <title> On Read Once Threshold Formulas and their Randomized Decision Tree Complexity, </title> <booktitle> In IEEE Symp. on Structures in Complexity 1990, </booktitle> <pages> pp. 78-87. </pages>
Reference-contexts: The [AHK 89] transformation then implies a membership and equivalence query algorithm to identify read-once formulas over the basis of boolean threshold and negation. The class of read-once formulas over the basis of boolean threshold and negation was previous studied by Heiman, Newman, and Wigderson <ref> [HNW 90] </ref> . They proved that each non-degenerate read-once formula over this basis expresses a unique function (this result follows implicitly from our learning algorithm), and proved bounds on the size of randomized decision trees computing such functions.
Reference: [HK 91] <author> L. Hellerstein and M. Karpinski. </author> <title> Computational Complexity of Learning Read-Once Formulas over Different Bases Technical Report, </title> <booktitle> International Computer Science Institute TR-91-014, </booktitle> <year> 1991. </year> <month> 18 </month>
Reference-contexts: We present a class of formulas that can be learned in the model of membership and equivalence queries but not in the model of membership queries and justifying assignments. Some of the results in this paper appeared in a preliminary form in <ref> [HK 91] </ref>, [Han 90], and [HH 91]. 2 Basic Definitions Let V n denote the set fX 1 ; X 2 ; :::; X n g.
References-found: 9

