URL: http://www.cs.virginia.edu/~sullivan/finance/prototyping-icse-submission.ps
Refering-URL: http://www.cs.virginia.edu/~sullivan/finance/finance.html
Root-URL: http://www.cs.virginia.edu
Email: chal@cs.cmu.edu  sjha@cs.cmu.edu  sullivan@cs.virginia.edu  
Phone: +1 412 268 3194  +1 412 268 3740  +1 804 982 2206  
Title: An Options Approach to Software Prototyping  
Author: Prasad Chalasani Somesh Jha Kevin Sullivan 
Keyword: Software engineering economics, prototyping, real options, financial option theory, sequential investment.  
Address: Pittsburgh, PA 15213-3890, USA  Pittsburgh, PA 15213-3890, USA  Charlottesville, VA 22903, USA  
Affiliation: Carnegie Mellon University  Carnegie Mellon University  University of Virginia  
Abstract: Prototyping is often used to predict, or reduce the uncertainty over, the future profitability of a software design choice. Boehm [3] pioneered the use of techniques from Bayesian decision theory to provide a basis for making prototyping decisions. However, this approach does not apply to situations where the software engineer has the flexibility of waiting for more information before making a prototyping decision. Also, this framework only assumes uncertainty over one time period, and assumes a design-choice must be made immediately after prototyping. We propose a more general multi-period approach that takes into account the flexibility of being able to postpone the prototyping and design decisions. In particular, we argue that this flexibility is analogous to the flexibility of exercise of certain financial instruments called options, and that the value of the flexibility is the value of the corresponding financial option. The field of real option theory in finance provides a rigorous framework to analyze the optimal exercise of such options, and this can be applied to the prototyping decision problem. Our approach integrates the timing of prototype decisions and design decisions within a single framework. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Baldwin and K. Clark. Modularity-in-design: </author> <title> An analysis based on the theory of real options. </title> <booktitle> Management Science, </booktitle> <year> 1994. </year>
Reference-contexts: A more detailed paper that applies our ideas to software design decisions appears in [14]. Withey [15] also applies real options ideas to analyze strategies for building reusable software modules. Baldwin and Clark <ref> [1] </ref> have used the theory of real options to quantify the benefits of modularity in terms of increased design flexibility. The present paper focusses on developing models for analyzing prototyping strategies as well as design strategies that are influenced by prototyping.
Reference: [2] <author> B. W. Boehm. </author> <booktitle> Software Engineering Economics. Advances in Computing Science and Technology. </booktitle> <publisher> Prentice Hall, </publisher> <year> 1981. </year>
Reference-contexts: The software engineer must therefore weigh the cost of prototyping against the benefit of prototyping. The benefit of prototyping (as we show in an example later) is the increased expected payoff from a more informed decision based on prototyping, compared to a decision without prototyping. Boehm <ref> [2, 3] </ref> was among the first to propose an appealing economics-based approach to providing a sound basis for software decisions in general and prototyping decisions in particular. His approach views software decisions as problems of investing in the face of uncertainty over the future payoffs from the investment. <p> Our models are more general and cover scenarios such as those discussed by Boehm. To understand our model it will be useful to review Boehm's example in <ref> [2] </ref> which we describe in the next subsection. 4.1 Boehm's example In the example in Boehm's book [2], we are required to choose between a bold (B) and conservative (C) approach in developing a certain special-purpose operating system. <p> Our models are more general and cover scenarios such as those discussed by Boehm. To understand our model it will be useful to review Boehm's example in <ref> [2] </ref> which we describe in the next subsection. 4.1 Boehm's example In the example in Boehm's book [2], we are required to choose between a bold (B) and conservative (C) approach in developing a certain special-purpose operating system. Since there is no operating system to start with, a choice between these two approaches must be made at the present time, which we call time 0.
Reference: [3] <author> B. W. </author> <title> Boehm. </title> <journal> Software engineering economics. In IEEE Transactions on Software Engineering (SE), </journal> <volume> volume 10, </volume> <month> Jan </month> <year> 1984. </year>
Reference-contexts: The software engineer must therefore weigh the cost of prototyping against the benefit of prototyping. The benefit of prototyping (as we show in an example later) is the increased expected payoff from a more informed decision based on prototyping, compared to a decision without prototyping. Boehm <ref> [2, 3] </ref> was among the first to propose an appealing economics-based approach to providing a sound basis for software decisions in general and prototyping decisions in particular. His approach views software decisions as problems of investing in the face of uncertainty over the future payoffs from the investment. <p> In particular, we can view the prototype as being done just before, the current state unfolds, and the same mathematics holds. For instance in Boehm's <ref> [3] </ref> example the prototype reveals information about whether or not the current state is favorable to a certain design change. Our models are more general and cover scenarios such as those discussed by Boehm.
Reference: [4] <author> R. Brealy and S. Myers. </author> <title> Principles of Corporate Finance. </title> <publisher> McGraw-Hill, </publisher> <year> 1992. </year>
Reference-contexts: Next calculate the (expectation of the) present value of the proto-typing and design cost. The NPV is the first quantity minus the second, i.e., benefit minus cost. The software engineer then applies the NPV rule traditionally found in business textbooks (e.g., <ref> [4] </ref>): if the NPV is positive then proceed with the investment, otherwise don't. However, this simple rule is 1 often suboptimal, since it is founded on a faulty assumption.
Reference: [5] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> The Design and Analysis of Computer Algorithms. </title> <address> Cambridge, Mass.: </address> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: This viewpoint is the one that we will find most useful in this paper. The value V k can be computed for all k by a simple dynamic programming procedure (see <ref> [5] </ref>) as follows. First observe that V N = (S N L) + . This is clear both from formula (5) and from observing that the since option expires at time N , there is no advantage to waiting.
Reference: [6] <author> G. Daily. </author> <title> Beyond puts and calls: Option pricing as a powerful tool in decision-making. </title> <journal> The Actuary, </journal> <volume> 30(3), </volume> <year> 1996. </year>
Reference-contexts: In this paper we view the prototyping and design decisions not merely as investments under uncertainty (as previous work has done), but more specifically as irreversible but de-layable investments under uncertainty. In a growing body of research <ref> [6, 7, 8, 9, 12] </ref>, this viewpoint is being increasingly accepted as the appropriate one (as opposed to the traditional NPV rule) for analyzing capital investments by companies in the face of an uncertain future.
Reference: [7] <author> A. Dixit and R. Pindyck. </author> <title> Investment under uncertainty. </title> <publisher> Princeton Univ. Press, </publisher> <year> 1994. </year>
Reference-contexts: In this paper we view the prototyping and design decisions not merely as investments under uncertainty (as previous work has done), but more specifically as irreversible but de-layable investments under uncertainty. In a growing body of research <ref> [6, 7, 8, 9, 12] </ref>, this viewpoint is being increasingly accepted as the appropriate one (as opposed to the traditional NPV rule) for analyzing capital investments by companies in the face of an uncertain future. <p> This idea is at the heart of the theory of real options <ref> [7, 12] </ref>. The above approach applies to any investment situation where (a) there is an expenditure of limited resources, (b) there is uncertainty over the future profitability of the investment, (c) the decision to invest is irreversible, and (d) the decision can be delayed. <p> Secondly, we are now considering two decisions (prototyping and design-change) rather than just one. The models presented in the present paper are therefore significantly richer. The combination of prototyping and design-change decisions is a special kind of sequential investment scenario studied in financial contexts <ref> [7] </ref>, since the prototyping cost and the cost of switching to a different implementation are, after all, investments with an uncertain profitability. A firm may invest in a large factory stage by stage, and may want to time its decisions in order maximize the expected payoff.
Reference: [8] <author> A. Dixit and R. Pindyck. </author> <title> The options approach to capital invesment. </title> <booktitle> Harvard Business Review, </booktitle> <pages> pages 105115, </pages> <month> May-June </month> <year> 1995. </year>
Reference-contexts: In this paper we view the prototyping and design decisions not merely as investments under uncertainty (as previous work has done), but more specifically as irreversible but de-layable investments under uncertainty. In a growing body of research <ref> [6, 7, 8, 9, 12] </ref>, this viewpoint is being increasingly accepted as the appropriate one (as opposed to the traditional NPV rule) for analyzing capital investments by companies in the face of an uncertain future.
Reference: [9] <author> J. Flatto. </author> <title> The application of real options to the information technology valuation process: A benchmark study. </title> <type> PhD thesis, </type> <institution> Univ. of New Haven, </institution> <year> 1996. </year>
Reference-contexts: In this paper we view the prototyping and design decisions not merely as investments under uncertainty (as previous work has done), but more specifically as irreversible but de-layable investments under uncertainty. In a growing body of research <ref> [6, 7, 8, 9, 12] </ref>, this viewpoint is being increasingly accepted as the appropriate one (as opposed to the traditional NPV rule) for analyzing capital investments by companies in the face of an uncertain future.
Reference: [10] <author> J. Hull. </author> <title> Options, Futures, and Other Derivative Securities. </title> <publisher> Prentice Hall, </publisher> <address> 2nd edition, </address> <year> 1993. </year>
Reference-contexts: For further details the reader is referred to Hull's <ref> [10] </ref> excellent introductory text. The simplest kinds of options are call options.
Reference: [11] <author> J.Sick. </author> <title> Real options. </title> <editor> In R. Jarrow, V. Maksimovic, and W.T.Ziemba, editors, </editor> <booktitle> Finance, volume 9 of Handbooks in OR and Mgmt. </booktitle> <address> Sc. Elsevier/North-Holland, </address> <year> 1995. </year>
Reference-contexts: In fact, to make the analogy explicit, the investment opportunity available to the company has been called a real option. A real option is the flexibility a manager has for making decisions about real assets (in contrast to shares of stock) <ref> [11] </ref>. Thus the company's investment problem is essentially one of optimally exercising its call option. The valuation and optimal exercise of financial options has been an active area of research in finance over the past two decades.
Reference: [12] <author> R. McDonald and D. Siegel. </author> <title> The value of waiting to invest. </title> <journal> Quarterly Journal of Economics, </journal> <volume> 101:707727, </volume> <year> 1986. </year>
Reference-contexts: In this paper we view the prototyping and design decisions not merely as investments under uncertainty (as previous work has done), but more specifically as irreversible but de-layable investments under uncertainty. In a growing body of research <ref> [6, 7, 8, 9, 12] </ref>, this viewpoint is being increasingly accepted as the appropriate one (as opposed to the traditional NPV rule) for analyzing capital investments by companies in the face of an uncertain future. <p> This idea is at the heart of the theory of real options <ref> [7, 12] </ref>. The above approach applies to any investment situation where (a) there is an expenditure of limited resources, (b) there is uncertainty over the future profitability of the investment, (c) the decision to invest is irreversible, and (d) the decision can be delayed.
Reference: [13] <author> K. Sullivan. </author> <title> Software design: the options approach. </title> <booktitle> In Proc. Software Architectures Workshop, </booktitle> <year> 1996. </year>
Reference-contexts: This has the benefit that we can draw upon the research done in the area of real options. A preliminary paper outlining this approach was presented by one of the authors at the 1996 Software Architectures Workshop <ref> [13] </ref>. A more detailed paper that applies our ideas to software design decisions appears in [14]. Withey [15] also applies real options ideas to analyze strategies for building reusable software modules.
Reference: [14] <author> K. Sullivan, P. Chalasani, and S. Jha. </author> <title> The options approach to software design. </title> <type> Technical report, </type> <institution> University of Virginia, Computer Science Dept., </institution> <year> 1997. </year> <note> Also submitted to IEEE Trans. Soft. Engg. </note>
Reference-contexts: A preliminary paper outlining this approach was presented by one of the authors at the 1996 Software Architectures Workshop [13]. A more detailed paper that applies our ideas to software design decisions appears in <ref> [14] </ref>. Withey [15] also applies real options ideas to analyze strategies for building reusable software modules. Baldwin and Clark [1] have used the theory of real options to quantify the benefits of modularity in terms of increased design flexibility. <p> The models just mentioned therefore cannot be used to model the effects of pro-totyping. An additional complication in the current paper is that we study the optimal timing of both the prototyping decision and the resulting design decision in the same framework. (Our earlier paper <ref> [14] </ref> alludes informally to the possibility of modeling multiple decisions.) Thus in the present paper we need a significantly richer model. Our proposal is that formulating software prototyping criteria in terms of real options addresses the limitations of earlier work on prototyping. <p> Section 5 concludes with a discussion of the contributions of this paper, and future research directions. 2 Preliminaries 2.1 Probability concepts In this section we introduce some standard mathematical terminology and notation that is used in the paper. Much of this material appears in our earlier paper <ref> [14] </ref>. We will model future uncertainty by means of a discrete decision tree of finite depth N , where N represents the maximum number of future time steps (e.g. months, years, etc) that we wish to model. <p> This consists of finding which t maximizes the payoff Y k (x) defined in 17. At this point the problem is very similar to that of deciding the optimal exercise strategy of a call option, and this analogy has been explored at great length in our earlier paper <ref> [14] </ref>. We only note here that it may be optimal to wait for a while after prototyping before switching to the new implementation. 4.3 Boehm's example revisited As an illustration, we now analyze Boehm's one-period example of Subsection 4.1 in the model just introduced. <p> We must instead appeal to a more advanced but well-established theory, namely that of financial options. The basic ideas of this approach to software decisions were introduced by the present authors in a different paper <ref> [14] </ref>. In a sense the present pa per extends that approach to software prototyping decisions. However, prototyping adds two novel twists: Firstly, the pro-totyping decision can change the future payoffs (depending on which of the two models we use).
Reference: [15] <author> J. Withey. </author> <title> Investment analysis of software assets for product lines. </title> <type> Technical Report CMU/SEI-96-TR-010, </type> <institution> Carnegie Mel-lon University Software Engineering Institute, </institution> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: A preliminary paper outlining this approach was presented by one of the authors at the 1996 Software Architectures Workshop [13]. A more detailed paper that applies our ideas to software design decisions appears in [14]. Withey <ref> [15] </ref> also applies real options ideas to analyze strategies for building reusable software modules. Baldwin and Clark [1] have used the theory of real options to quantify the benefits of modularity in terms of increased design flexibility.
References-found: 15

