URL: ftp://ftp.win.tue.nl/pub/techreports/cosor/95-16.ps
Refering-URL: http://www.win.tue.nl/math/bs/cosor95.html
Root-URL: http://www.win.tue.nl
Title: Approximation Algorithms for the k-Clique Covering Problem  
Author: Olivier Goldschmidt Dorit S. Hochbaum Cor Hurkens Gang Yu 
Keyword: Key words: Approximation Algorithms; Clique Covering; Set Covering; Worst Case Analysis.  
Address: Netherlands  
Note: Suggested running title: Approximation Algorithms for k-Clique Covering.  This research has been supported in part by ONR grant N00014-91-J-1241.  This research has been supported in part by ONR grant N00014-91-J-1241.  
Affiliation: Eindhoven University of Technology  Department of Mechanical Engineering, The University of Texas at Austin I.E.& O.R. Department, University of California at Berkeley.  Department of Mathematics and Computing Science, Eindhoven University of Technology, the  M.S.I.S. Department, The University of Texas at Austin.  
Date: 95-16, 1995,  May 10, 1995  
Pubnum: Memorandum COSOR  
Abstract: The problem of covering edges and vertices in a graph (or in a hypergraph) was motivated by a problem arising in the context of component assembly problem. The problem is, given a graph and a clique size k, find the minimum number of k-cliques such that all edges and vertices of the graph are covered by (included in) the cliques. This paper provides a collection of approximation algorithms for various clique sizes with proven worst-case bounds. The problem has a natural extension to hypergraphs, for which we consider one particular class. The k-clique covering problem can be formulated as a Set Covering problem. It is shown that the algorithms we design, that exploit the structure of this special Set Covering problem, have better performance than those derived from direct applications of general purpose algorithms for the Set Covering. In particular, these special classes of Set Covering problems can be solved with better worst-case bounds and/or complexity than if treated as general Set Covering problems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora, C. Lund, R. Motwani, M. Sudan and M. Szegedy, </author> <title> "Proof Verification and Intractability of Approximation Problems," </title> <booktitle> In Proc. of the 33rd IEEE Symp. on Foundations of Computer Science (1992), </booktitle> <address> Pittsburgh, PA, USA, 24-27 Oct. </address> <year> 1992), </year> <pages> 14-23. </pages>
Reference: [2] <author> M. L. Balinski, </author> <title> "On a Selection Problem," </title> <booktitle> Management Science, </booktitle> <address> 17:3, </address> <month> (November </month> <year> 1970), </year> <pages> 230-231. </pages>
Reference: [3] <author> J. F. Bard, </author> <title> "A Heuristic for Minimizing the Number of Tool Switches on a Flexible Machine," </title> <journal> IIE Transactions 20:4, </journal> <year> (1988). </year>
Reference: [4] <author> V. Chvatal, </author> <title> "A Greedy Heuristic for the Set-Covering Problem," </title> <institution> Math. of Oper. Res. 4:3, </institution> <month> 233-235 </month> <year> (1979). </year>
Reference-contexts: In Section 2, we discuss the reduction of the k-Clique Covering problem to the Set Covering problem. Once reduced to the Set Covering problem, the greedy heuristic <ref> [4] </ref> for Set Covering becomes applicable. Throughout this paper, we refer to the greedy heuristic as greedy. <p> There are two known approximation algorithms available for (SC). One bounds the worst-case error by the maximum number of sets that an element belongs to, [10]. The other is the greedy with worst-case error bound equal to the Harmonic series H (d), where d is the largest set size <ref> [16, 17, 4] </ref>. The running time of the greedy is O (n log n), where n is the number of sets.
Reference: [5] <author> D. A. Collier, </author> <title> "The Measurement and Operating Benefits of Component Part Commonality," </title> <institution> Decision Science, 12:1, </institution> <year> (1981), </year> <pages> 85-96. </pages>
Reference: [6] <author> Y. Crama and A. Oerlemans, </author> <title> "A Column Generations Approach to Job Grouping for Flexible Manufacturing Systems," </title> <journal> European Journal of Operational Research, </journal> <note> in press. </note>
Reference: [7] <author> M. Daskin, P. C. Jones, and T. J. Lowe, </author> <title> "Rationalizing Tool Selection in a Flexible Manufacturing System for Sheet-Metal Products," </title> <journal> Operations Research, </journal> <volume> 38:6, </volume> <year> (1990), </year> <pages> 1104-1115. </pages>
Reference: [8] <author> G. Gallo, M. D. Grigoriadis and R. E. Tarjan, </author> <title> "A Fast Parametric Maximum Flow Algorithm," </title> <journal> SIAM J. Comput., </journal> <volume> 18, </volume> <pages> 30-55, </pages> <year> (1989). </year>
Reference: [9] <author> O. Goldschmidt, D. S. Hochbaum, and G. Yu, </author> <title> "A Modified Greedy Heuristic for the Set Covering Problem with Improved Worst-case Bound," </title> <journal> Information Processing Letters, </journal> <volume> 48, </volume> <pages> 305-310, </pages> <year> 1993. </year>
Reference-contexts: Consequently, these classes of Set Covering problems can be solved with better worst-case bounds and/or complexity than if 2 treated as general Set Covering problems. The (CC k ) problem has many practical applications in flexible manufacturing systems and component assembly in the semiconductor industry. In <ref> [9] </ref>, Gold-schmidt et al. provide a detailed description of some related applications. In related literature, Tang and Denardo [22] developed a branch-and-bound procedure for solving the (CC k ) problem. The lower bound is generated by a so called sweeping procedure and it can be arbitrarily bad. <p> At each iteration, at least one hyperedge gets covered and thus removed. So the greedy iterates at most m times. Therefore, the running time of the greedy on an instance of (CC k ) is O ( n In a companion paper, <ref> [9] </ref>, we demonstrated an improvement to the greedy called the modified greedy heuristic or simply the modified greedy. The modified greedy is a H (d) 1 6 -approximation algorithm. <p> We present a linear time 7=3-approximation algorithm, algorithm (H 3 ). An alternative approximation algorithm is the modified greedy applied to the problem presented as Set Covering problem. The worst-case bound of the modified greedy in this case is 23 12 (see <ref> [9] </ref>) which is better than 7 3 : The running time of the modified greedy is O (n 4 log n), where n is the number of vertices of the graph, which is worse than the running time of algorithm (H 3 ); O (m): Algorithm (H 3 ) runs in <p> For this case the greedy for Set Covering gives a bound of H ( k ) 2 log k with running time O (n k ), and the modified greedy <ref> [9] </ref> improves the bound to H ( k 6 . In this section, we present a linear time ( 1 2 + 1 k1 )k-approximation algorithm (H 4 ) for the k-clique covering problem. <p> To check if a hyperedge is covered by a set, we need to scan the hyperedge's vertex set which takes O (k) time. Since the modified greedy applied in phase 2 takes only O (m 2:5 ) <ref> [9] </ref>, the overall running time of (H 5 ) is O (( m As observed earlier, any clique containing more than one hyperedge must have a spanning pair.
Reference: [10] <author> D. S. </author> <title> Hochbaum " Approximation Algorithms for the Weighted Set Covering and Node Cover Problems," </title> <note> GSIA Working Paper No. 64-79-80, April 1980; also, SIAM J. Comput., 11:3, 555-556, </note> <year> (1982). </year>
Reference-contexts: There are two known approximation algorithms available for (SC). One bounds the worst-case error by the maximum number of sets that an element belongs to, <ref> [10] </ref>. The other is the greedy with worst-case error bound equal to the Harmonic series H (d), where d is the largest set size [16, 17, 4]. The running time of the greedy is O (n log n), where n is the number of sets.
Reference: [11] <author> R. Hirabayashi, H. Suzuki, and N. Tsuchiya, </author> <title> "Optimal Tool Module Design Problem for NC Machine Tools," </title> <journal> Journal of the Operations Research Society of Japan, </journal> <volume> 23:3, </volume> <year> (1984), </year> <pages> 205-228. </pages>
Reference: [12] <author> J. Holyer, </author> <title> "The NP-Completeness of Some Edge Partition Problems," </title> <journal> SIAM J. Comput., </journal> <volume> 10:4, </volume> <pages> 713-717, </pages> <month> Nov. </month> <year> (1981). </year>
Reference-contexts: One problem addressed in the literature that is related to the 3-clique covering problem is the partitioning of a graph into triangles. The feasibility decision problem whether the edges of a graph can be partitioned into triangles was proved NP-complete by Holyer <ref> [12] </ref>. Therefore finding the minimum number of triangles to cover the edges of a graph is NP-hard. A general definition of the (CC k ) problem for hypergraphs is as follows. <p> When m is a multiple of 3, this is achievable only if the edges of G can be partitioned into triangles. Recognizing whether a graph has a partition into triangles was shown to be NP-complete by Holyer <ref> [12] </ref>. The rest of this section is organized as follows. We first analyze the cases k = 3 and k = 4.
Reference: [13] <author> S. Hwang, </author> <title> "A Constraint-Directed Method to Solve the Part Selection Problem in Flexible Manufacturing Systems Planning Stage," </title> <booktitle> Proceedings of the Second ORSA/TIMS Conference on Flexible Manufacturing Systems (1986), </booktitle> <pages> 297-309. 23 </pages>
Reference: [14] <author> S. S. Hwang and A. W. Shogan, </author> <title> "Modelling and Solution of an FMS Part Selection Problem," </title> <journal> International J. of Production Research, </journal> <volume> 27, </volume> <pages> 1349-1366, </pages> <month> Aug. </month> <year> (1989). </year>
Reference: [15] <author> A. Itai and M. Rodeh, </author> <title> "Finding a Minimum Circuit in a Graph". </title> <journal> SIAM J. Computing, </journal> <volume> 7:4, </volume> <pages> 413-423, </pages> <month> Aug. </month> <year> (1978). </year>
Reference-contexts: Algorithm (H 1 ) runs in two phases. In the first phase, a maximal number of edge-disjoint triangles of G are covered. To find a maximal number of edge-disjoint triangles, we use the procedure by Itai and Rodeh <ref> [15] </ref> for determining whether a graph contains a triangle. The complexity of this procedure is O (m 3=2 ). We adapt it to find a maximal number of edge-disjoint triangles without increasing the complexity. The edges of these edge-disjoint triangles are covered and deleted from the graph.
Reference: [16] <author> D. S. </author> <title> Johnson "Approximation Algorithms for Combinatorial Problems Problems," </title> <journal> Journal of Computer and System Sciences , 9, </journal> <month> 256-278 </month> <year> (1974). </year>
Reference-contexts: There are two known approximation algorithms available for (SC). One bounds the worst-case error by the maximum number of sets that an element belongs to, [10]. The other is the greedy with worst-case error bound equal to the Harmonic series H (d), where d is the largest set size <ref> [16, 17, 4] </ref>. The running time of the greedy is O (n log n), where n is the number of sets.
Reference: [17] <author> L. Lovasz, </author> <title> "On the Ratio of Optimal Integral and Fractional Covers," </title> <journal> Discrete Math., </journal> <volume> 13, </volume> <month> 383-390 </month> <year> (1975). </year>
Reference-contexts: There are two known approximation algorithms available for (SC). One bounds the worst-case error by the maximum number of sets that an element belongs to, [10]. The other is the greedy with worst-case error bound equal to the Harmonic series H (d), where d is the largest set size <ref> [16, 17, 4] </ref>. The running time of the greedy is O (n log n), where n is the number of sets.
Reference: [18] <author> C. Lund and M. Yanakakis, </author> <title> "On the Hardness of Approximating Minimization Problems," </title> <booktitle> Proc., 25th Annual ACM Symp. on Theory of Computing, </booktitle> <month> 286-293 </month> <year> (1993). </year>
Reference-contexts: The running time of the greedy is O (n log n), where n is the number of sets. With the recent result of Lund and Yanakakis, <ref> [18] </ref>, the greedy is, up to a constant factor, a best possible approximation algorithm for the Set Covering problem, as it cannot be improved unless all NP problems are in DTIME [n poly (log n) ].
Reference: [19] <author> S. Masuyama and T. Ibaraki, </author> <title> "Chain packing in graphs," </title> <type> Technical Report 87014, </type> <institution> Department of Applied Mathematics and Physics, Faculty of Engineering, Kyoto University, </institution> <address> Kyoto 606, Japan. </address> <year> (1987). </year>
Reference-contexts: It is known (<ref> [19] </ref>) that if the number of edges m of a connected graph is even, then one can cover the edges with exactly m=2 2-chains. Masuyama and Ibaraki [19] provide a linear time algorithm for solving this problem optimally. If a connected component of the triangle-free graph has an odd number of edges, then exactly one triangle is necessary to cover a single edge of the component while all others cover 2-chains. <p> In phase 2, we find a maximum packing of 2-chains in a triangle-free graph G. This can be done in linear time by using the following procedure, which is an adaptation of the one by Masuyama and Ibaraki <ref> [19] </ref>. The procedure is presented for one connected component of G, G i = (V i ; E i ). Consider any spanning tree in that component. All non-tree edges are appended to the tree, each with a new vertex assigned to one of its endpoints.
Reference: [20] <author> S. Micali and V.V. Vazirani, </author> <title> "An O(jV j 1=2 jEj) Algorithm for Finding Maximum Matching in General Graphs," </title> <booktitle> Proc. Twenty-first Annual Symposium on Foundations of Computer Science, </booktitle> <address> Long Beach, California (1980) 17-27. </address>
Reference: [21] <author> J. M. W. Rhys, </author> <title> "A Selection Problem of Shared Fixed Costs and Network Flows," </title> <booktitle> Management Science, </booktitle> <address> 17:3, </address> <month> (November </month> <year> 1970), </year> <pages> 200-207. </pages>
Reference: [22] <author> C. S. Tang and E. V. Denardo, </author> <title> "Models Arising From a Flexible Manufacturing Machine, Part II: Minimizing the Number of Switching Instants," </title> <journal> Operations Research, </journal> <volume> 36:5, </volume> <year> (1988), </year> <pages> 778-784. </pages>
Reference-contexts: The (CC k ) problem has many practical applications in flexible manufacturing systems and component assembly in the semiconductor industry. In [9], Gold-schmidt et al. provide a detailed description of some related applications. In related literature, Tang and Denardo <ref> [22] </ref> developed a branch-and-bound procedure for solving the (CC k ) problem. The lower bound is generated by a so called sweeping procedure and it can be arbitrarily bad. Several heuristic procedures have been proposed and tested for generating feasible solutions. <p> Several heuristic procedures have been proposed and tested for generating feasible solutions. These heuristics are similar to bin packing heuristics in that they select a starting seed hyperedge for a new bin (clique) and sequentially fill it according to some precedence rule. Tang and Denardo <ref> [22] </ref>, and Whitney and Gaul [23] propose different rules for selecting next hyperedge to add to the current clique. In these papers, no analysis and worst-case bounds have been provided for the heuristic solutions.
Reference: [23] <author> C. Whitney, and T. Gaul, </author> <title> "Sequential Decision Problems for Batching and Balancing in FMSs," </title> <journal> Annals of Operations Research, </journal> <volume> 3, </volume> <year> (1985), </year> <pages> 301-316. </pages>
Reference-contexts: These heuristics are similar to bin packing heuristics in that they select a starting seed hyperedge for a new bin (clique) and sequentially fill it according to some precedence rule. Tang and Denardo [22], and Whitney and Gaul <ref> [23] </ref> propose different rules for selecting next hyperedge to add to the current clique. In these papers, no analysis and worst-case bounds have been provided for the heuristic solutions.
Reference: [24] <author> G. Yu, D. Nehme and N. Nayak, </author> <title> "Designing and Managing Multiple Product Setups for Electronic Circuit Board Assembly Process ," IBM Internal Report, </title> <year> (1992). </year>
References-found: 24

