URL: http://www.cs.tamu.edu/faculty/vaidya/papers/fault-tolerance/94-043.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/Vaidya-ftc.html
Root-URL: http://www.cs.tamu.edu
Email: E-mail: vaidya@cs.tamu.edu  
Title: A Case for Multi-Level Distributed Recovery Schemes  
Author: Nitin H. Vaidya 
Date: May 1994  
Address: College Station, TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report 94-043  
Abstract: Most of the distributed recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures, with a few notable exceptions of schemes designed to tolerate single failures. In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes. A "multi-level" recovery scheme is one that can tolerate different number of faults at different costs, tolerance of larger number of failures requiring larger costs. The costs are incurred during failure-free operation as well as during recovery. To demonstrate the advantages of multi-level recovery, we analyze a hypothetical 2-level recovery scheme that takes two different types of checkpoints, namely, 1-checkpoints and N -checkpoints. A single failure can be tolerated by rolling the system back to a 1-checkpoint, while multiple failure recovery is possible by rolling back to an N -checkpoint. The cost of a 1-checkpoint may be expected to be smaller than that of an N -checkpoint. For such a system, we demonstrate that to minimize the average overhead, it is often necessary to take both 1-checkpoints and N -checkpoints. While the conclusions of this report are intuitive, the work on appropriate recovery schemes is lacking. The objective of this report is to motivate research into recovery schemes that can provide multiple levels of fault tolerance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. M. Chandy, J. C. Browne, C. W. Dissly, and W. R. Uhrig, </author> <title> "Analytic models for rollback and recovery strategies in data base systems," </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> vol. 1, </volume> <pages> pp. 100-110, </pages> <month> March </month> <year> 1975. </year>
Reference-contexts: An appropriate failure effect model must be chosen for a given recovery scheme. As noted earlier, in this report, we analyze a hypothetical 2-level recovery scheme. The system model used here is a simple generalization of a model used previously <ref> [1] </ref> for analysis of single processor systems. The system is assumed to consist of N processors. (At this point, we do not differentiate between a process and a processor. <p> If the failure is detected when t time units of computation was performed after checkpoint CP, then it is assumed that t units of execution is required to re-do the lost computation (in absence of further failures). In the past, many researchers have assumed (e.g., <ref> [1] </ref>) that the time required to re-do the computation is fft for some constant ff. Thus, we assume ff = 1 here. However, our analysis can be easily revised when ff 6= 1. 5 Failure Effect Model The effect of failures is dependent on the failure recovery scheme used. <p> Significant effort has been devoted in the past for analytically determining optimal checkpoint intervals for checkpointing and rollback recovery schemes <ref> [1, 5, 15, 23, 24] </ref>. Due to the complexity of the expressions for the 2-level recovery scheme under consideration, an analytical approach for determining optimal k and is not very attractive. Instead, we choose to determine the optimal values numerically. <p> Observe that the curve for k = 3 has many minimas while the curve for k = 10 has only two minimas. These curves are not convex, unlike the traditional checkpointing and rollback schemes (e.g., <ref> [1] </ref>). The curve for k = 1 is shown in Figure 7. When k = 1, all the checkpoints are N -checkpoints, and the two-level recovery scheme reduces to traditional checkpointing and rollback schemes. Therefore, as shown previously [1], the curve for k = 1 is convex and has exactly one <p> curves are not convex, unlike the traditional checkpointing and rollback schemes (e.g., <ref> [1] </ref>). The curve for k = 1 is shown in Figure 7. When k = 1, all the checkpoints are N -checkpoints, and the two-level recovery scheme reduces to traditional checkpointing and rollback schemes. Therefore, as shown previously [1], the curve for k = 1 is convex and has exactly one minimum. Figures 8 through 11 plot the percentage overhead versus for various values of k and C 1 .
Reference: [2] <author> E. N. Elnozahy and W. Zwaenepoel, "Manetho: </author> <title> Transparent rollback-recovery with low overhead, limited rollback, and fast output commit," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 41, </volume> <month> May </month> <year> 1992. </year> <month> 27 </month>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [3] <author> R. E. Gantenbein, </author> <title> "A bibliography of dependable distributed computing," </title> <journal> Operating Systems Review, </journal> <volume> vol. 26, </volume> <pages> pp. 60-81, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [4] <author> S. Garg and K. F. Wong, </author> <title> "Analysis of an improved distributed checkpointing algorithm," </title> <type> Tech. Rep. </type> <institution> WUCS-93-37, Dept. of Comp. Sc., Washington University, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: For example, the variation in size of the checkpoint, number and size of messages sent by the processes can affect the cost model. For example, models similar to those presented in <ref> [4, 23] </ref> may be used to more accurately model an application's behavior. * Failure model: In the analysis above, we assumed that the failures of different processors are independent. Additionally, we did not differentiate between a processor and a process.
Reference: [5] <author> E. Gelenbe and D. Derochette, </author> <title> "Performance of rollback recovery systems under intermittent failures," </title> <journal> Comm. ACM, </journal> <volume> vol. 21, </volume> <pages> pp. 493-499, </pages> <month> June </month> <year> 1978. </year>
Reference-contexts: Significant effort has been devoted in the past for analytically determining optimal checkpoint intervals for checkpointing and rollback recovery schemes <ref> [1, 5, 15, 23, 24] </ref>. Due to the complexity of the expressions for the 2-level recovery scheme under consideration, an analytical approach for determining optimal k and is not very attractive. Instead, we choose to determine the optimal values numerically.
Reference: [6] <author> E. Gelenbe, </author> <title> "On the optimum checkpointing interval," </title> <journal> J. ACM, </journal> <volume> vol. 2, </volume> <pages> pp. 259-270, </pages> <month> April </month> <year> 1979. </year>
Reference: [7] <author> V. Grassi, L. Donatiello, and S. Tucci, </author> <title> "On the optimal checkpoiting of critical tasks and transaction-oriented systems," </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> vol. 18, </volume> <pages> pp. 72-77, </pages> <month> January </month> <year> 1992. </year>
Reference: [8] <author> D. B. Johnson, </author> <title> "Efficient transparent optimistic rollback recovery for distributed application programs," </title> <booktitle> in Symposium on Reliable Distributed Systems, </booktitle> <pages> pp. 86-95, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [9] <author> D. B. Johnson and W. Zwaenepoel, </author> <title> "Sender-based message logging," </title> <booktitle> in Digest of papers: The 17 th Int. Symp. Fault-Tolerant Comp., </booktitle> <pages> pp. 14-19, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., [2, 3, 8, 12, 16, 17, 18, 22]), with a few notable exceptions of schemes designed to tolerate single failures (e.g., <ref> [9] </ref>). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes. A "multi-level" recovery scheme is one that can tolerate different number of faults at different costs, tolerance of larger number of failures requiring larger overhead.
Reference: [10] <author> V. G. Kulkarni, V. F. Nicola, and K. S. Trivedi, </author> <title> "Effects of checkpointing and queueing on program performance," </title> <journal> Commun. Statist.-Stochastic Models, </journal> <volume> vol. 4, no. 6, </volume> <pages> pp. 615-648, </pages> <year> 1990. </year>
Reference: [11] <author> P. L'Ecuyer and J. Malenfant, </author> <title> "Computing optimal checkpointing strategies for rollback and recovery systems," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 37, </volume> <pages> pp. 491-496, </pages> <month> April </month> <year> 1988. </year>
Reference: [12] <author> A. Lowry, J. R. Russell, and A. P. Goldberg, </author> <title> "Optimistic failure recovery for very large networks," </title> <booktitle> in Symposium on Reliable Distributed Systems, </booktitle> <pages> pp. 66-75, </pages> <year> 1991. </year>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [13] <author> V. F. Nicola and J. M. van Spanje, </author> <title> "Comparative analysis of different models of check-pointing and recovery," </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> vol. 16, </volume> <pages> pp. 807-821, </pages> <month> August </month> <year> 1990. </year>
Reference: [14] <author> A. Reuter, </author> <title> "Performance analysis of recovery techniques," </title> <journal> ACM Trans. Database Systems, </journal> <volume> vol. 9, </volume> <pages> pp. 526-559, </pages> <month> December </month> <year> 1984. </year>
Reference: [15] <author> K. Shin, T.-H. Lin, and Y.-H. Lee, </author> <title> "Optimal checkpointing of real-time tasks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 36, </volume> <pages> pp. 1328-1341, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: Significant effort has been devoted in the past for analytically determining optimal checkpoint intervals for checkpointing and rollback recovery schemes <ref> [1, 5, 15, 23, 24] </ref>. Due to the complexity of the expressions for the 2-level recovery scheme under consideration, an analytical approach for determining optimal k and is not very attractive. Instead, we choose to determine the optimal values numerically.
Reference: [16] <author> A. P. Sistla and J. L. Welch, </author> <title> "Efficient distributed recovery using message logging," </title> <booktitle> in Proc. ACM Symp. on Principles of Distributed Computing, </booktitle> <pages> pp. 223-238, </pages> <month> August </month> <year> 1989. </year> <month> 28 </month>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [17] <author> R. E. Strom, D. F. Bacon, and S. A. Yemini, </author> <booktitle> "Volatile logging in n-fault-tolerant dis-tributed systems," in Digest of papers: The 18 th Int. Symp. Fault-Tolerant Comp., </booktitle> <pages> pp. 44-49, </pages> <year> 1988. </year>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [18] <author> R. E. Strom and S. A. Yemini, </author> <title> "Optimistic recovery in distributed systems," </title> <journal> ACM Trans. Comp. Syst., </journal> <volume> vol. 3, </volume> <pages> pp. 204-226, </pages> <month> August </month> <year> 1985. </year>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [19] <author> A. N. Tantawi, </author> <title> "Performance analysis of checkpointing strategies," </title> <journal> ACM Trans. Comp. Syst., </journal> <volume> vol. 2, </volume> <pages> pp. 123-144, </pages> <month> May </month> <year> 1984. </year>
Reference: [20] <author> S. J. Upadhyaya and K. K. Saluja, </author> <title> "An experimental study to determine task size for rollback recovery schemes," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 37, </volume> <pages> pp. 872-877, </pages> <month> July </month> <year> 1988. </year>
Reference: [21] <author> N. H. Vaidya, </author> <title> "Distributed recovery units: An approach for hybrid and adaptive distributed recovery," </title> <type> Tech. Rep. 93-052, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: In this context, the 2-level recovery scheme presented earlier can be redesigned to tolerate a single cluster failure at a low cost and multiple cluster failures at a higher cost. We previously proposed the distributed recovery unit abstraction <ref> [21] </ref>, which can potentially be used to design such recovery schemes. 6 Discussion The numerical results presented in Section 4 imply that sometimes neither 1-checkpoints nor N -checkpoints can be used exclusively to achieve optimal performance.
Reference: [22] <author> Y. Wang and W. K. Fuchs, </author> <title> "Lazy checkpoint coordination for bounding rollback propagation," </title> <booktitle> in Symposium on Reliable Distributed Systems, </booktitle> <pages> pp. 78-85, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: Many of the so called "grand-challenge" problems are of the above types. Most of the recovery schemes proposed in the literature are designed to tolerate arbitrary number of failures (e.g., <ref> [2, 3, 8, 12, 16, 17, 18, 22] </ref>), with a few notable exceptions of schemes designed to tolerate single failures (e.g., [9]). In this report, we demonstrate that, it is often advantageous to use "multi-level" recovery schemes.
Reference: [23] <author> K. Wong and M. Franklin, </author> <title> "Distributed computing systems and checkpointing," </title> <booktitle> in Proc. 2nd Int. Symp. High Perf. Distr. Comp., </booktitle> <address> Spokane, Washington, </address> <pages> pp. 224-233, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Also much of this analysis treats the entire system as faulty or fault-free, and does not model failure of each individual processor separately. Recently, Wong and Franklin <ref> [23] </ref> presented analysis of distributed checkpointing schemes that allows each processor to fail independently, however, they do not address the issue of multi-level recovery. To demonstrate the advantages of multi-level recovery, we analyze a hypothetical 2-level recovery scheme that takes two different types of checkpoints, namely, 1-checkpoints and N -checkpoints. <p> Significant effort has been devoted in the past for analytically determining optimal checkpoint intervals for checkpointing and rollback recovery schemes <ref> [1, 5, 15, 23, 24] </ref>. Due to the complexity of the expressions for the 2-level recovery scheme under consideration, an analytical approach for determining optimal k and is not very attractive. Instead, we choose to determine the optimal values numerically. <p> For example, the variation in size of the checkpoint, number and size of messages sent by the processes can affect the cost model. For example, models similar to those presented in <ref> [4, 23] </ref> may be used to more accurately model an application's behavior. * Failure model: In the analysis above, we assumed that the failures of different processors are independent. Additionally, we did not differentiate between a processor and a process.
Reference: [24] <author> J. W. Young, </author> <title> "A first order approximation to the optimum checkpoint interval," </title> <journal> Comm. ACM, </journal> <volume> vol. 17, </volume> <pages> pp. 530-531, </pages> <month> September </month> <year> 1974. </year> <month> 29 </month>
Reference-contexts: Significant effort has been devoted in the past for analytically determining optimal checkpoint intervals for checkpointing and rollback recovery schemes <ref> [1, 5, 15, 23, 24] </ref>. Due to the complexity of the expressions for the 2-level recovery scheme under consideration, an analytical approach for determining optimal k and is not very attractive. Instead, we choose to determine the optimal values numerically.
References-found: 24

