URL: ftp://theory.lcs.mit.edu/pub/people/oded/cc:ip.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/complexity.html
Root-URL: 
Email: oded@wisdom.weizmann.ac.il  johanh@nada.kth.se  
Title: On the Complexity of Interactive Proofs with Bounded Communication an interactive proof in which the
Author: Oded Goldreich Johan H-astad 
Note: If L has  Work done while being on a sabbatical leave at LCS, MIT.  
Date: November 2, 1997  
Address: Rehovot, Israel.  10044 Stockholm, Sweden.  
Affiliation: Department of Computer Science Weizmann Institute of Science  Department of Computer Science Royal Institute of Technology  
Abstract: We investigate the computational complexity of languages which have interactive proof systems of bounded message complexity. In particular, denoting the length of the input by n, we show that 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Babai. </author> <title> Trading Group Theory for Randomness. </title> <booktitle> In 17th STOC, </booktitle> <pages> pages 421-429, </pages> <year> 1985. </year> <note> (Publication [2] is considered the journal version.) </note>
Reference-contexts: Furthermore, this proof system is in the public-coins (aka Arthur-Merlin) model of Babai <ref> [1] </ref>. 1 Perfect zero-knowledge is a strict variant of zero-knowledge. The above stated belief does not refer to the more relaxed notion of zero-knowledge (aka computational zero-knowledge). <p> Then L 2 BPtime (2 O (c ()log c ()) poly ()) NP . 2 Formal Treatment We assume that the reader is familiar with the basic definitions of interactive proofs as introduced by Goldwasser, Micali and Rackoff [9] and Babai <ref> [1] </ref>. Here we merely recall them, while focusing on some parameters.
Reference: [2] <author> L. Babai and S. Moran. </author> <title> Arthur-Merlin Games: A Randomized Proof System and a Hierarchy of Complexity Classes. </title> <journal> JCSS, </journal> <volume> Vol. 36, </volume> <pages> pages 254-276, </pages> <year> 1988. </year>
Reference: [3] <author> M. Bellare, O. Goldreich and E. Petrank. </author> <title> Uniform Generation of NP-witnesses using an NP-oracle. </title> <note> In preparation, </note> <year> 1997. </year>
Reference: [4] <author> M. Bellare and E. Petrank. </author> <title> Making Zero-Knowledge Provers Efficient. </title> <booktitle> In 24th STOC, </booktitle> <pages> pages 711-722, </pages> <year> 1992. </year> <note> See [3]. </note>
Reference: [5] <author> R. Boppana, J. H-astad, and S. Zachos. </author> <title> Does Co-NP Have Short Interactive Proofs? IPL, </title> <journal> Vol. </journal> <volume> 25, </volume> <pages> pages 127-132, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: On one hand, it is widely believed that not all languages in N P have perfect zero-knowledge interactive proofs (cf., [7]). 1 In particular, the negation of this conjecture implies the collapse of the polynomial-time hierarchy (cf., <ref> [5] </ref>). On the other hand, assuming that factoring is hard, all languages in N P have perfect zero-knowledge computationally-sound proofs [6]. Our aim in this note is to point out another significant difference between interactive proof systems and computationally-sound proof systems. <p> provide evidence that coN P is not contained in IP (c (); c ()) for small, non-constant, function c? How about c (n) = log log n? It is widely believed that coN P is not contained in IP (poly; O (1)) (or else, for example, the polynomial-time hierarchy collapses <ref> [5] </ref>). Actually, stronger evidence for coN P 6 IP (O (1); O (1)) will be of interest too. Acknowledgments We are grateful to the anonymous referees for their helpful comments.
Reference: [6] <author> G. Brassard, D. Chaum and C. Crepeau. </author> <title> Minimum Disclosure Proofs of Knowledge. </title> <journal> JCSS, </journal> <pages> pages 156-189, </pages> <year> 1988. </year> <note> Preliminary version by Brassard and Crepeau in 27th FOCS, </note> <year> 1986. </year>
Reference-contexts: The difference between statistical soundness and computational soundness translates to a difference between interactive proof systems as defined by Goldwasser, Micali and Rackoff [9], and computationally-sound proof systems (aka argument systems) as defined by Brassard, Chaum and Crepeau <ref> [6] </ref>. A significant difference between interactive proof systems and computationally-sound proof systems has been observed in the domain of zero-knowledge. <p> On the other hand, assuming that factoring is hard, all languages in N P have perfect zero-knowledge computationally-sound proofs <ref> [6] </ref>. Our aim in this note is to point out another significant difference between interactive proof systems and computationally-sound proof systems. Specifically, we refer to the "expressive power" of the two types of proof systems when bounding their message complexity (i.e., the number of bits sent throughout the interaction).
Reference: [7] <author> L. Fortnow, </author> <title> The Complexity of Perfect Zero-Knowledge. </title> <booktitle> Advances in Computing Research: a research annual, Vol. 5 (Randomness and Computation, </booktitle> <editor> S. Micali, </editor> <publisher> ed.), </publisher> <pages> pages 327-343, </pages> <year> 1989. </year>
Reference-contexts: A significant difference between interactive proof systems and computationally-sound proof systems has been observed in the domain of zero-knowledge. On one hand, it is widely believed that not all languages in N P have perfect zero-knowledge interactive proofs (cf., <ref> [7] </ref>). 1 In particular, the negation of this conjecture implies the collapse of the polynomial-time hierarchy (cf., [5]). On the other hand, assuming that factoring is hard, all languages in N P have perfect zero-knowledge computationally-sound proofs [6].
Reference: [8] <author> O. Goldreich, S. Micali and A. Wigderson. </author> <title> Proofs that Yield Nothing but their Validity or All Languages in NP Have Zero-Knowledge Proof Systems. </title> <journal> JACM, </journal> <volume> Vol. 38, No. 1, </volume> <pages> pages 691-729, </pages> <year> 1991. </year> <note> Preliminary version in 27th FOCS, </note> <year> 1986. </year>
Reference-contexts: The above stated belief does not refer to the more relaxed notion of zero-knowledge (aka computational zero-knowledge). In fact, assuming the existence of commitment schemes, all languages in N P do have (computational) zero-knowledge interactive proofs <ref> [8] </ref>. 1 Interactive proofs of bounded message complexity: Our first observation indicates that Kilian's result (as stated above) is unlikely for interactive proof (rather than computationally-sound) systems. <p> Theorem 3 may not hold for general interactive proofs, and if it does this may be hard to establish. The reason being that supposedly hard languages such as Quadratic Non-Residuosity and Graph Non-Isomorphism have interactive proof systems in which the prover sends a single bit <ref> [9, 8] </ref>. Thus, we are currently content with a weaker result. Theorem 4 (interactive proofs with bounded prover-messages): Let c () be an integer function and L f0; 1g fl .
Reference: [9] <author> S. Goldwasser, S. Micali and C. Rackoff. </author> <title> The Knowledge Complexity of Interactive Proof Systems. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 18, </volume> <pages> pages 186-208, </pages> <year> 1989. </year> <note> Preliminary version in 17th STOC, </note> <year> 1985. </year>
Reference-contexts: In light of the growing acceptability of randomized and distributed computations, it is only natural to associate the notion of efficient computation with probabilistic and interactive polynomial-time computations. This leads to the notion of an interactive proof system (cf., <ref> [9] </ref>) in which the verification procedure is interactive and randomized, rather than being non-interactive and deterministic. Intuitively, one may think of this interaction as consisting of "tricky" questions asked by the verifier, to which the prover has to reply "convincingly". <p> The difference between statistical soundness and computational soundness translates to a difference between interactive proof systems as defined by Goldwasser, Micali and Rackoff <ref> [9] </ref>, and computationally-sound proof systems (aka argument systems) as defined by Brassard, Chaum and Crepeau [6]. A significant difference between interactive proof systems and computationally-sound proof systems has been observed in the domain of zero-knowledge. <p> Theorem 3 may not hold for general interactive proofs, and if it does this may be hard to establish. The reason being that supposedly hard languages such as Quadratic Non-Residuosity and Graph Non-Isomorphism have interactive proof systems in which the prover sends a single bit <ref> [9, 8] </ref>. Thus, we are currently content with a weaker result. Theorem 4 (interactive proofs with bounded prover-messages): Let c () be an integer function and L f0; 1g fl . <p> Then L 2 BPtime (2 O (c ()log c ()) poly ()) NP . 2 Formal Treatment We assume that the reader is familiar with the basic definitions of interactive proofs as introduced by Goldwasser, Micali and Rackoff <ref> [9] </ref> and Babai [1]. Here we merely recall them, while focusing on some parameters.
Reference: [10] <author> M. Jerrum, L. Valiant and V. Vazirani. </author> <title> Random Generation of Combinatorial Structures from a Uniform Distribution. </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 43, </volume> <pages> pages 169-188, </pages> <year> 1986. </year>
Reference: [11] <author> J. Kilian. </author> <title> A Note on Efficient Zero-Knowledge Proofs and Arguments. </title> <booktitle> In 24th STOC, </booktitle> <pages> pages 723-732, </pages> <year> 1992. </year>
Reference-contexts: Computationally-sound proofs of bounded message complexity: In 1992, Kilian demonstrated that computationally-sound proof systems may be able to recognize any language in N P while using only polylogarithmic message complexity <ref> [11] </ref>. Specifically, assuming the existence of hashing functions for which collisions cannot be found by subexponential-size circuits, Kilian showed that any language in N P has a computationally-sound proof system in which both the bidirectional message complexity and the randomness complexity are polylogarithmic.
Reference: [12] <author> M. Sipser. </author> <title> A Complexity Theoretic Approach to Randomness. </title> <booktitle> In 15th STOC, </booktitle> <pages> pages 330 335, </pages> <year> 1983. </year>
Reference: [13] <author> L. Stockmeyer. </author> <title> The Complexity of Approximate Counting. </title> <booktitle> In 15th STOC, </booktitle> <pages> pages 118-126, </pages> <year> 1983. </year>
References-found: 13

