URL: file://ftp.cis.ohio-state.edu/pub/communication/techreports/tr02-98-nic_sw.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~kesavan/publications.html
Root-URL: 
Title: Where to Provide Support for Efficient Multicasting in Irregular Networks: Network Interface or Switch?  
Author: Rajeev Sivaram, Ram Kesavan, Dhabaleswar K. Panda, and Craig B. Stunkel 
Abstract: Technical Report OSU-CISRC-02/98-TR05 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Abali. </author> <title> A Deadlock Avoidance Method for Computer Networks. </title> <booktitle> In Proceedings of the First International Workshop on Communication and Architectural Support for Network-Based Parallel Computing (CANPC '97). </booktitle> , <pages> pages 61-72, </pages> <month> February </month> <year> 1997. </year> <note> Available as Lecture Notes in Computer Science #1199, Springer-Verlag. </note>
Reference-contexts: However, these topologies do not possess many of the attractive mathematical properties of the regular topologies. A lot of the problems relating to inter-processor/inter-node communication that were solved for regular topologies (such as the deadlock-free cut-through routing of packets <ref> [1, 31, 33] </ref>) are therefore being revisited for such irregular topologies. Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes [20, 26]. Examples of collective operations include multicast [24], barrier synchronization [36], reduction, etc.
Reference: [2] <author> M. A. Blumrich, K. Li, R. Alpert, C. Dubnicki, E. W. Felten, and J. Sandberg. </author> <title> Virtual Memory Mapped Network Interface for the SHRIMP Multicomputer. </title> <booktitle> In International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), </booktitle> <pages> pages 96-107, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Such messaging systems also try to minimize buffer copying which contributes to a major part of 5 the overhead. Examples of such messaging systems are Active Messages [19, 43], U-Net [42], Fast Messages (FM) [25], and SHRIMP <ref> [2, 8] </ref>. Let us examine how these lightweight messaging systems achieve message transfer. An application is typically linked to a communication library in the host, and a portion of the host memory is allocated for DMA to and from the network interface.
Reference: [3] <author> N. J. Boden, D. Cohen, and et al. Myrinet: </author> <title> A Gigabit-per-Second Local Area Network. </title> <booktitle> IEEE Micro, </booktitle> <pages> pages 29-35, </pages> <month> Feb </month> <year> 1995. </year>
Reference-contexts: Thus, the interconnection topology of the network can be denoted by a graph G = (V,E) where V is the set of switches, and E is the set of bidirectional links between the switches <ref> [3, 32] </ref>. Figure 1 (b) shows the interconnection graph for the irregular network in Fig. 1 (a). <p> Figure 1 (b) shows the interconnection graph for the irregular network in Fig. 1 (a). It is to be noted that all links are bidirectional and multiple links between two switches are possible. 2.2 Routing Issues Several deadlock-free routing schemes have been proposed in the literature for irregular networks <ref> [3, 10, 31, 32] </ref>. Without loss of generality, in this paper we assume the routing scheme for our irregular network to be similar to that used in Autonet [32] due to its simplicity and its commercial implementation. <p> A k-port switch typically provides a k fi k crossbar connectivity in order to enable concurrent transfer of messages from the input buffers to any of the output buffers <ref> [3, 32, 37, 38, 40] </ref>. dedicated communication processor is embedded in the NIC. This allows the sophisticated processing of the 4 network transactions to be off-loaded to the NI processor, thus freeing up the host processor for computation.
Reference: [4] <author> C. M. Chiang and L. M. Ni. </author> <title> Deadlock-Free Multi-Head Wormhole Routing. </title> <booktitle> In Proceedings of the First High Performance Computing-Asia, </booktitle> <year> 1995. </year>
Reference-contexts: Multicast using switch support for replication has been proposed in the context of regular networks. Chiang and Ni <ref> [4] </ref> proposed a method for performing multicast in wormhole routed MINs using tree-based multi-head worms with synchronous replication. Similarly, path-based multicast was originally proposed in the context of mesh networks by Lin and Ni [17], and was enhanced to a base routing conformed path model by Panda et al. [28].
Reference: [5] <author> Cray Research, Inc. </author> <title> Cray T3D System Architecture Overview, </title> <year> 1993. </year>
Reference-contexts: Much recent research has therefore focussed on extending parallel processing solutions to such networks of commodity workstations (NOWs). Traditionally, parallel processing machines have been built with processing nodes interconnected in regular topologies such as a mesh [12], torus <ref> [5] </ref>, hypercube [11], multistage interconnection network (MIN) [22, 40], etc. Such regular topologies have important mathematical properties that make message communication easier/better by making message routing simpler, lowering the average distance per communication, and/or increasing the bisection bandwidth [7].
Reference: [6] <author> D. Dai and D. K. Panda. </author> <title> Reducing Cache Invalidation Overheads in Wormhole DSMs Using Multidesti-nation Message Passing. </title> <booktitle> In International Conference on Parallel Processing, pages I:138-145, </booktitle> <address> Chicago, IL, </address> <month> Aug </month> <year> 1996. </year>
Reference-contexts: Such collective operations are also used for system level operations in Distributed Shared Memory systems, such as for cache invalidations, acknowledgment collection, and synchronization <ref> [6] </ref>. Of these collective operations, multicast is most fundamental and important and is used for implementing several of the other collective operations. Traditionally, multicast has been implemented using the underlying support for point-to-point (unicast) communication.
Reference: [7] <author> J. Duato, S. Yalamanchili, and L. Ni. </author> <title> Interconnection Networks: An Engineering Approach. </title> <publisher> The IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: Such regular topologies have important mathematical properties that make message communication easier/better by making message routing simpler, lowering the average distance per communication, and/or increasing the bisection bandwidth <ref> [7] </ref>. However, networks of workstations environments have typically evolved from computing environments where communication requirements are much lower (both in terms of latency and bandwidth). In such an environment, the workstations that form the processing nodes are typically interconnected in arbitrary, irregular topologies.
Reference: [8] <author> E. W. Felten, R. A. Alpert, A. Bilas, M. A. Blumrich, D. W. Clark, S. N. Damianakis, C. Dubnicki, L. Iftode, and K. Li. </author> <title> Early Experience with Message-Passing on the SHRIMP Multicomputer. </title> <booktitle> In International Symposium on Computer Architecture (ISCA), </booktitle> <pages> pages 296-307, </pages> <year> 1996. </year>
Reference-contexts: Such messaging systems also try to minimize buffer copying which contributes to a major part of 5 the overhead. Examples of such messaging systems are Active Messages [19, 43], U-Net [42], Fast Messages (FM) [25], and SHRIMP <ref> [2, 8] </ref>. Let us examine how these lightweight messaging systems achieve message transfer. An application is typically linked to a communication library in the host, and a portion of the host memory is allocated for DMA to and from the network interface.
Reference: [9] <author> David Garcia and William Watson. </author> <title> Servernet II. </title> <booktitle> In Proceedings of the 2nd Parallel Computer Routing and Communication Workshop, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: We will assume such input buffered switches in the rest of this paper. For simplicity, we will assume that the buffers use a single FIFO queue to store packets (as in the switches of <ref> [9] </ref>). Given such support for replication at the switches, there are two schemes that have been proposed for carrying out multicast in switch based irregular networks: tree-based [35] and path-based [15].
Reference: [10] <author> R. Horst. </author> <title> ServerNet Deadlock Avoidance and Fractahedral Topologies. </title> <booktitle> In Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pages 274-280, </pages> <year> 1996. </year>
Reference-contexts: Figure 1 (b) shows the interconnection graph for the irregular network in Fig. 1 (a). It is to be noted that all links are bidirectional and multiple links between two switches are possible. 2.2 Routing Issues Several deadlock-free routing schemes have been proposed in the literature for irregular networks <ref> [3, 10, 31, 32] </ref>. Without loss of generality, in this paper we assume the routing scheme for our irregular network to be similar to that used in Autonet [32] due to its simplicity and its commercial implementation.
Reference: [11] <author> Intel Corporation. </author> <title> Intel iPSC System Overview, </title> <year> 1986. </year>
Reference-contexts: Much recent research has therefore focussed on extending parallel processing solutions to such networks of commodity workstations (NOWs). Traditionally, parallel processing machines have been built with processing nodes interconnected in regular topologies such as a mesh [12], torus [5], hypercube <ref> [11] </ref>, multistage interconnection network (MIN) [22, 40], etc. Such regular topologies have important mathematical properties that make message communication easier/better by making message routing simpler, lowering the average distance per communication, and/or increasing the bisection bandwidth [7].
Reference: [12] <author> Intel Corporation. </author> <title> Paragon XP/S Product Overview, </title> <year> 1991. </year>
Reference-contexts: Much recent research has therefore focussed on extending parallel processing solutions to such networks of commodity workstations (NOWs). Traditionally, parallel processing machines have been built with processing nodes interconnected in regular topologies such as a mesh <ref> [12] </ref>, torus [5], hypercube [11], multistage interconnection network (MIN) [22, 40], etc. Such regular topologies have important mathematical properties that make message communication easier/better by making message routing simpler, lowering the average distance per communication, and/or increasing the bisection bandwidth [7].
Reference: [13] <author> R. Kesavan, K. Bondalapati, and D. K. Panda. </author> <title> Multicast on Irregular Switch-based Networks with Wormhole Routing. </title> <booktitle> In Proceedings of the International Symposium on High Performance Computer Architecture (HPCA-3), </booktitle> <pages> pages 48-57, </pages> <month> February </month> <year> 1997. </year>
Reference-contexts: This means that some destinations serve as intermediate sources, i.e., when they receive a message, they forward copies of it to other destinations. Many such hierarchical algorithms have been proposed in the literature <ref> [13, 20, 21, 30] </ref> to implement multicast. numbers in brackets indicate the step numbers. It can be easily be observed that dlog 2 ne communication steps are required for such a binomial tree based hierarchical multicast to be completed [21]. <p> However, very little of this work has concentrated on irregular networks. A simple multi-phase approach to perform multicast in wormhole-routed irregular networks so that contention among the constituent messages of the multicast is reduced/minimized has been proposed by Kesavan et al. <ref> [13] </ref>. Verstoep et al. [41] have proposed (and implemented) a better method for performing multicast in switch-based systems using network interface support for absorbing and retransmitting messages.
Reference: [14] <author> R. Kesavan and D. K. Panda. </author> <title> Minimizing Node Contention in Multiple Multicast on Wormhole k-ary n-cube Networks. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, pages I:188-195, </booktitle> <address> Chicago, IL, </address> <month> Aug </month> <year> 1996. </year>
Reference-contexts: Extensions of the latter method to support multiple multicast more efficiently have been proposed by Kesavan and Panda <ref> [14] </ref>. None of these papers have evaluated the alternative enhanced multicasting schemes in comparison to one another in the context of irregular networks and in the presence of multiple multicast traffic. 7 Conclusion In this paper, we have compared three schemes for performing multicast efficiently in switch-based irregular networks.
Reference: [15] <author> R. Kesavan and D. K. Panda. </author> <title> Multicasting on Switch-based Irregular Networks using Multi-drop Path-based Multidestination Worms. </title> <booktitle> In Proceedings of the 2nd Workshop on Parallel Computer Routing and Communication (PCRCW '97), </booktitle> <pages> pages 179-192, </pages> <month> June </month> <year> 1997. </year> <month> 23 </month>
Reference-contexts: Such a method allows 1 messages (christened multidestination messages) to be communicated to multiple destinations incurring a single software overhead for sending the message. There are two subclasses of switch-based multicasting schemes: tree-based [35] and path-based <ref> [15] </ref>. In the best tree-based multicasting scheme, multicast can be performed in a single phase using one multidestination worm from the source node to all the destinations [35, 39]. The path-based multicasting schemes typically require multiple multidestination worms to perform multicast to arbitrary destination sets. <p> The path-based multicasting schemes typically require multiple multidestination worms to perform multicast to arbitrary destination sets. These worms are transmitted in multiple phases with the destinations in a phase acting as secondary sources in succeeding phases of the multicast <ref> [15] </ref>. The second category of multicasting schemes is referred to as network interface-based or NI-based multi-casting schemes. Typically, communication between two nodes incurs software overhead at both the host and at the network interface for both sending and receiving a message. <p> Given such support for replication at the switches, there are two schemes that have been proposed for carrying out multicast in switch based irregular networks: tree-based [35] and path-based <ref> [15] </ref>. The two schemes differ in the restrictions placed on worm replication, the number of worms required to perform multicast to an arbitrary destination set, the complexity of multicast header formation, and the complexity of the header decoding logic required at the switches. <p> replicated to all the output ports of the switch. with participating switches in the multicast highlighted, b) the tree-based multidestination worm, and c) an example of a bit-string encoded header and the various reachability strings in a 4-port switch. 3.4.4 Path-based Multicasting using Multidestination Worms Under the path-based multicasting scheme <ref> [15] </ref>, multidestination worms use almost exactly the same path followed by a unicast worm from a source to one of its destinations (as allowed under the base routing algorithm). <p> Furthermore, to arrive at a relatively small number of multidestination worms that cover a given destination set, an algorithm is needed that chooses appropriate paths so that as many destinations as possible are covered by each of the worms. Multiple algorithms have been proposed for this <ref> [15] </ref>. In addition, a multi-phase algorithm is required to cover the destination set using the multidestination worms so that contention is reduced and multicast can be performed efficiently. <p> Details of this algorithm can be found in <ref> [15] </ref>, where this algorithm was shown to perform best among the proposed algorithms. 10 The encoding used for the header of each of the multidestination worms under the path-based scheme is as follows.
Reference: [16] <author> R. Kesavan and D. K. Panda. </author> <title> Optimal Multicast with Packetization and Network Interface Support. </title> <booktitle> In Proceedings of International Conference on Parallel Processing, </booktitle> <pages> pages 370-377, </pages> <month> Aug </month> <year> 1997. </year>
Reference-contexts: Smart NI support can reduce this overhead for multicast, especially for multi-packet messages. Current lean messaging layers allow modification of part of the software running on the NI processor. This part of the software can be modified to allow it to identify a multicast packet <ref> [16, 41] </ref>. If the next outgoing packet in the send queue of the source node is a multicast packet, the NI processor forwards replicas of the packet to the nodes adjacent to the root of the multicast tree. <p> There are two possible implementations of the smart network interface support described above. These implementations are discussed in <ref> [16] </ref>, and the FPFS (First-Packet-First-Served) implementation is shown to be superior in terms of ease of implementation and buffer requirements at the NIC. The FPFS implementation is described briefly below. In this implementation, the NI forwards the message on a per-packet basis. <p> Subsequently, when the second packet of the multicast message arrives at the NI, it forwards the packet to each of the children, and so on till the last packet is forwarded. The k-binomial tree has been shown to be optimal for multi-packet multicast on systems with smart NI support <ref> [16] </ref>. A k-binomial tree is defined as a recursively doubling tree where each vertex has at most k children. Figures 5 (a) and 5 (b) show examples of 3-binomial and 4-binomial trees with multicast set size of 16. <p> Thus, this table requires less than O (n D n p ) memory. A method for constructing k-binomial trees with minimized contention on irregular switch-based networks has also been proposed in the literature <ref> [16] </ref>. tree. 3.4.2 Multicasting using Switch Support Another method for improving multicast performance is to provide switches with support for replicating incoming messages to multiple output ports. <p> It has been shown in <ref> [16] </ref> that given a multicast set of size n D and an n p -packet message, the time taken by NI-based scheme is ff + (n p 1)kfi, where ff is the time for the first packet to reach all the destinations, fi is the time for a node to inject <p> It can also be shown that the value of fi is t g + l p t p . (A detailed description of this derivation can be found in <ref> [16] </ref>.) Thus, the multicast latency for an n p -packet message using the NI-based scheme is given by: t ni = A 0 + f (n p ; n D )(B + dt ru ) + (n p 1)kl p t p (5) where A 0 = t hs + t
Reference: [17] <author> X. Lin and L. M. Ni. </author> <title> Multicast Communication in Multicomputer Networks. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <pages> pages 114-118, </pages> <year> 1990. </year>
Reference-contexts: Chiang and Ni [4] proposed a method for performing multicast in wormhole routed MINs using tree-based multi-head worms with synchronous replication. Similarly, path-based multicast was originally proposed in the context of mesh networks by Lin and Ni <ref> [17] </ref>, and was enhanced to a base routing conformed path model by Panda et al. [28]. Extensions of the latter method to support multiple multicast more efficiently have been proposed by Kesavan and Panda [14].
Reference: [18] <author> X. Lin and L. M. Ni. </author> <title> Deadlock-free Multicast Wormhole Routing in Multicomputer Networks. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pages 116-124, </pages> <year> 1991. </year>
Reference-contexts: The basic idea behind such a scheme is to communicate a single message (called a multidestination message) from a source to multiple destinations in almost the same time it takes to send a unicast message to another node <ref> [18, 29] </ref>. The number of destinations covered depends 8 on the type of encoding/decoding used for the message header. Replication of messages in switches that support cut-through routing is deadlock-prone.
Reference: [19] <author> R. P. Martin. HPAM: </author> <title> An Active Message Layer for a Network of HP Workstations. </title> <booktitle> In Proceedings of the Hot Interconnects Symposium, </booktitle> <year> 1994. </year>
Reference-contexts: Such messaging systems also try to minimize buffer copying which contributes to a major part of 5 the overhead. Examples of such messaging systems are Active Messages <ref> [19, 43] </ref>, U-Net [42], Fast Messages (FM) [25], and SHRIMP [2, 8]. Let us examine how these lightweight messaging systems achieve message transfer.
Reference: [20] <author> P. K. McKinley and D. F. Robinson. </author> <title> Collective Communication in Wormhole-Routed Massively Parallel Computers. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 39-50, </pages> <month> Dec </month> <year> 1995. </year>
Reference-contexts: Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes <ref> [20, 26] </ref>. Examples of collective operations include multicast [24], barrier synchronization [36], reduction, etc. The importance of such operations is underlined by the inclusion of several primitives for collective communication in the newly drafted Message Passing Interface (MPI) standard [23]. <p> This means that some destinations serve as intermediate sources, i.e., when they receive a message, they forward copies of it to other destinations. Many such hierarchical algorithms have been proposed in the literature <ref> [13, 20, 21, 30] </ref> to implement multicast. numbers in brackets indicate the step numbers. It can be easily be observed that dlog 2 ne communication steps are required for such a binomial tree based hierarchical multicast to be completed [21].
Reference: [21] <author> P. K. McKinley, H. Xu, A.-H. Esfahanian, and L. M. Ni. </author> <title> Unicast-based Multicast Communication in Wormhole-routed Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(12) </volume> <pages> 1252-1265, </pages> <month> Dec </month> <year> 1994. </year>
Reference-contexts: To improve multicast performance, many schemes have been proposed that use a multi-phase approach starting with the source sending out a multicast message to one of its destinations <ref> [21, 44] </ref>. In succeeding phases, the destinations that have received the message act as secondary sources and transmit the message to other destinations. Such a scheme reduces the impact of the high overhead associated with sending/receiving point-to-point messages by allowing multiple nodes to simultaneously transmit/receive messages in a given phase. <p> This means that some destinations serve as intermediate sources, i.e., when they receive a message, they forward copies of it to other destinations. Many such hierarchical algorithms have been proposed in the literature <ref> [13, 20, 21, 30] </ref> to implement multicast. numbers in brackets indicate the step numbers. It can be easily be observed that dlog 2 ne communication steps are required for such a binomial tree based hierarchical multicast to be completed [21]. <p> Many such hierarchical algorithms have been proposed in the literature [13, 20, 21, 30] to implement multicast. numbers in brackets indicate the step numbers. It can be easily be observed that dlog 2 ne communication steps are required for such a binomial tree based hierarchical multicast to be completed <ref> [21] </ref>. A communication step is the time required for a message to sent from one host node to another. Even with lightweight messaging layers, the latency of such a multicast operation is still dominated by the communication software overhead. <p> It has been well documented that given a multicast set of size n D such an algorithm takes dlog 2 n D e steps to complete <ref> [21] </ref>. Each step involves the delivery of a message from one node to another.
Reference: [22] <author> Meiko Limited. </author> <title> Meiko CS-2 System Overview, </title> <year> 1994. </year>
Reference-contexts: Much recent research has therefore focussed on extending parallel processing solutions to such networks of commodity workstations (NOWs). Traditionally, parallel processing machines have been built with processing nodes interconnected in regular topologies such as a mesh [12], torus [5], hypercube [11], multistage interconnection network (MIN) <ref> [22, 40] </ref>, etc. Such regular topologies have important mathematical properties that make message communication easier/better by making message routing simpler, lowering the average distance per communication, and/or increasing the bisection bandwidth [7].
Reference: [23] <author> Message Passing Interface Forum. </author> <title> MPI: A Message-Passing Interface Standard, </title> <month> Mar </month> <year> 1994. </year>
Reference-contexts: Examples of collective operations include multicast [24], barrier synchronization [36], reduction, etc. The importance of such operations is underlined by the inclusion of several primitives for collective communication in the newly drafted Message Passing Interface (MPI) standard <ref> [23] </ref>. Such collective operations are also used for system level operations in Distributed Shared Memory systems, such as for cache invalidations, acknowledgment collection, and synchronization [6]. Of these collective operations, multicast is most fundamental and important and is used for implementing several of the other collective operations.
Reference: [24] <author> Lionel Ni. </author> <booktitle> Should Scalable Parallel Computers Support Efficient Hardware Multicasting? In ICPP Workshop on Challenges for Parallel Processing, </booktitle> <pages> pages 2-7, </pages> <year> 1995. </year>
Reference-contexts: Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes [20, 26]. Examples of collective operations include multicast <ref> [24] </ref>, barrier synchronization [36], reduction, etc. The importance of such operations is underlined by the inclusion of several primitives for collective communication in the newly drafted Message Passing Interface (MPI) standard [23].
Reference: [25] <author> S. Pakin, M. Lauria, and A. Chien. </author> <title> High Performance Messaging on Workstations: Illinois Fast Messages (FM). </title> <booktitle> In Proceedings of the Supercomputing, </booktitle> <year> 1995. </year>
Reference-contexts: Such messaging systems also try to minimize buffer copying which contributes to a major part of 5 the overhead. Examples of such messaging systems are Active Messages [19, 43], U-Net [42], Fast Messages (FM) <ref> [25] </ref>, and SHRIMP [2, 8]. Let us examine how these lightweight messaging systems achieve message transfer. An application is typically linked to a communication library in the host, and a portion of the host memory is allocated for DMA to and from the network interface. <p> At the sender side, one of two schemes is used: (a) programmed I/O, or (b) DMA. The host processor at the sender fragments the message into fixed size packets and transfers them to the send queue of the NI using programmed I/O <ref> [25] </ref>. Alternatively, the host processor copies data into the host DMA memory, writes the message pointers to the network interface, and the processor uses DMA to copy the packets to the send queue [42]. <p> This value corresponds to the software overhead incurred at the host using many of the current-day lightweight messaging layers (such as FM <ref> [25] </ref>).
Reference: [26] <author> D. K. Panda. </author> <title> Issues in Designing Efficient and Practical Algorithms for Collective Communication in Wormhole-Routed Systems. </title> <booktitle> In ICPP Workshop on Challenges for Parallel Processing, </booktitle> <pages> pages 8-15, </pages> <year> 1995. </year>
Reference-contexts: Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes <ref> [20, 26] </ref>. Examples of collective operations include multicast [24], barrier synchronization [36], reduction, etc. The importance of such operations is underlined by the inclusion of several primitives for collective communication in the newly drafted Message Passing Interface (MPI) standard [23].
Reference: [27] <author> D. K. Panda, D. Basak, D. Dai, R. Kesavan, R. Sivaram, M. Banikazemi, and V. Moorthy. </author> <title> Simulation of Modern Parallel Systems: A CSIM-based approach. </title> <booktitle> In Proceedings of the 1997 Winter Simulation Conference (WSC'97), </booktitle> <pages> pages 1013-1020, </pages> <month> December </month> <year> 1997. </year>
Reference-contexts: The results of our experiments with single multicast are presented next, followed by the results for our experiments to measure the impact of increasing applied load on multicast latency. 5.1 Experiments and Performance Measures We used a C++/CSIM based simulation testbed <ref> [27] </ref> for our experiments. The simulation testbed is capable of modeling a large number of topologies, and can model a variety of flow control techniques ranging from wormhole routing to virtual cut-through routing.
Reference: [28] <author> D. K. Panda, S. Singal, and R. Kesavan. </author> <title> Multidestination Message Passing in Wormhole k-ary n-cube Networks with Base Routing Conformed Paths. </title> <type> Technical report, </type> <institution> The Ohio State University, </institution> <month> December </month> <year> 1995. </year> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <note> to appear. </note>
Reference-contexts: However, we assume the multidestination worms under either scheme conform to the base up*/down* routing algorithm, i.e., the path followed by a multicast packet does not violate any of the rules for routing unicast packets in the system <ref> [28] </ref>. These schemes are discussed in greater detail in the following two subsections. 3.4.3 Tree-Based Multicasting using Multidestination Worms Tree-based multicasting places no restriction on the replication of a worm at a given switch. <p> Similarly, path-based multicast was originally proposed in the context of mesh networks by Lin and Ni [17], and was enhanced to a base routing conformed path model by Panda et al. <ref> [28] </ref>. Extensions of the latter method to support multiple multicast more efficiently have been proposed by Kesavan and Panda [14].
Reference: [29] <author> D. K. Panda, S. Singal, and P. Prabhakaran. </author> <title> Multidestination Message Passing Mechanism Conforming to Base Wormhole Routing Scheme. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pages 131-145, </pages> <year> 1994. </year> <note> Available as Lecture Notes in Computer Science #853, Springer-Verlag. </note>
Reference-contexts: The basic idea behind such a scheme is to communicate a single message (called a multidestination message) from a source to multiple destinations in almost the same time it takes to send a unicast message to another node <ref> [18, 29] </ref>. The number of destinations covered depends 8 on the type of encoding/decoding used for the message header. Replication of messages in switches that support cut-through routing is deadlock-prone.
Reference: [30] <author> J. Y. L. Park, H. A. Choi, N. Nupairoj, and L. M. Ni. </author> <title> Construction of Optimal Multicast Trees Based on the Parameterized Communication Model. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <address> Chicago, IL, </address> <month> Aug </month> <year> 1996. </year>
Reference-contexts: This means that some destinations serve as intermediate sources, i.e., when they receive a message, they forward copies of it to other destinations. Many such hierarchical algorithms have been proposed in the literature <ref> [13, 20, 21, 30] </ref> to implement multicast. numbers in brackets indicate the step numbers. It can be easily be observed that dlog 2 ne communication steps are required for such a binomial tree based hierarchical multicast to be completed [21].
Reference: [31] <author> W. Qiao and L. M. Ni. </author> <title> Adaptive Routing in Irregular Networks Using Cut-Through Switches. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, pages I:52-60, </booktitle> <address> Chicago, IL, </address> <month> Aug </month> <year> 1996. </year>
Reference-contexts: However, these topologies do not possess many of the attractive mathematical properties of the regular topologies. A lot of the problems relating to inter-processor/inter-node communication that were solved for regular topologies (such as the deadlock-free cut-through routing of packets <ref> [1, 31, 33] </ref>) are therefore being revisited for such irregular topologies. Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes [20, 26]. Examples of collective operations include multicast [24], barrier synchronization [36], reduction, etc. <p> Figure 1 (b) shows the interconnection graph for the irregular network in Fig. 1 (a). It is to be noted that all links are bidirectional and multiple links between two switches are possible. 2.2 Routing Issues Several deadlock-free routing schemes have been proposed in the literature for irregular networks <ref> [3, 10, 31, 32] </ref>. Without loss of generality, in this paper we assume the routing scheme for our irregular network to be similar to that used in Autonet [32] due to its simplicity and its commercial implementation.
Reference: [32] <author> M. D. Schroeder et al. Autonet: </author> <title> A High-speed, Self-configuring Local Area Network Using Point-to-point Links. </title> <type> Technical Report SRC research report 59, </type> <month> DEC, Apr </month> <year> 1990. </year>
Reference-contexts: Thus, the interconnection topology of the network can be denoted by a graph G = (V,E) where V is the set of switches, and E is the set of bidirectional links between the switches <ref> [3, 32] </ref>. Figure 1 (b) shows the interconnection graph for the irregular network in Fig. 1 (a). <p> Figure 1 (b) shows the interconnection graph for the irregular network in Fig. 1 (a). It is to be noted that all links are bidirectional and multiple links between two switches are possible. 2.2 Routing Issues Several deadlock-free routing schemes have been proposed in the literature for irregular networks <ref> [3, 10, 31, 32] </ref>. Without loss of generality, in this paper we assume the routing scheme for our irregular network to be similar to that used in Autonet [32] due to its simplicity and its commercial implementation. <p> Without loss of generality, in this paper we assume the routing scheme for our irregular network to be similar to that used in Autonet <ref> [32] </ref> due to its simplicity and its commercial implementation. Such routing allows adaptivity, and is deadlock-free. 3 In this routing scheme, a breadth-first spanning tree (BFS) on the graph G is first computed using a distributed algorithm. <p> Putting it in the negative, a packet may never traverse a link along the "up" direction after having traversed one in the "down" direction. Details of this routing scheme can be found in <ref> [32] </ref>. In order to implement the above routing, each switch has an indexed forwarding table. The forwarding tables can be constructed to support both minimal and non-minimal adaptive routing. In this paper, we only consider minimal adaptive routing. <p> A k-port switch typically provides a k fi k crossbar connectivity in order to enable concurrent transfer of messages from the input buffers to any of the output buffers <ref> [3, 32, 37, 38, 40] </ref>. dedicated communication processor is embedded in the NIC. This allows the sophisticated processing of the 4 network transactions to be off-loaded to the NI processor, thus freeing up the host processor for computation.
Reference: [33] <author> F. Silla, M. P. Malumbres, A. Robles, P. Lopez, and J. Duato. </author> <title> Efficient Adaptive Routing in Networks of Workstations with Irregular Topology. </title> <booktitle> In Proceedings of the First International Workshop on Communication and Architectural Support for Network-Based Parallel Computing (CANPC '97), </booktitle> <pages> pages 46-60, </pages> <month> February </month> <year> 1997. </year> <note> Available as Lecture Notes in Computer Science #1199, Springer-Verlag. 24 </note>
Reference-contexts: However, these topologies do not possess many of the attractive mathematical properties of the regular topologies. A lot of the problems relating to inter-processor/inter-node communication that were solved for regular topologies (such as the deadlock-free cut-through routing of packets <ref> [1, 31, 33] </ref>) are therefore being revisited for such irregular topologies. Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes [20, 26]. Examples of collective operations include multicast [24], barrier synchronization [36], reduction, etc.
Reference: [34] <author> R. Sivaram, D. K. Panda, and C. B. Stunkel. </author> <title> Efficient Broadcast and Multicast on Multistage Intercon--nection Networks using Multiport Encoding. </title> <journal> IEEE Transactions on Parallel and Distributed Systems. </journal> <note> In Press. </note>
Reference-contexts: These schemes can be classified into two main categories. The first category of schemes is referred to as switch-based multicasting schemes. These schemes use enhancements at the routers/switches of the network to allow an incoming packet to be forwarded to multiple output ports of the router/switch <ref> [34, 39] </ref>. Such a method allows 1 messages (christened multidestination messages) to be communicated to multiple destinations incurring a single software overhead for sending the message. There are two subclasses of switch-based multicasting schemes: tree-based [35] and path-based [15]. <p> Replication of messages in switches that support cut-through routing is deadlock-prone. A deadlock-free replication method that uses distributed arbitration but guarantees that there is space for the multicast packet to eventually be completely buffered at the switch has been proposed in <ref> [34, 39] </ref>. This ensures that the available resources can be used and freed up while continuing to wait for other resources (output ports in our case) to be freed.
Reference: [35] <author> R. Sivaram, D. K. Panda, and C. B. Stunkel. </author> <title> Multicasting in Irregular Networks with Cut-Through Switches using Tree-Based Multidestination Worms. </title> <booktitle> In Proceedings of the 2nd Parallel Computer Routing and Communication Workshop (PCRCW '97), </booktitle> <pages> pages 35-48, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: Such a method allows 1 messages (christened multidestination messages) to be communicated to multiple destinations incurring a single software overhead for sending the message. There are two subclasses of switch-based multicasting schemes: tree-based <ref> [35] </ref> and path-based [15]. In the best tree-based multicasting scheme, multicast can be performed in a single phase using one multidestination worm from the source node to all the destinations [35, 39]. The path-based multicasting schemes typically require multiple multidestination worms to perform multicast to arbitrary destination sets. <p> There are two subclasses of switch-based multicasting schemes: tree-based [35] and path-based [15]. In the best tree-based multicasting scheme, multicast can be performed in a single phase using one multidestination worm from the source node to all the destinations <ref> [35, 39] </ref>. The path-based multicasting schemes typically require multiple multidestination worms to perform multicast to arbitrary destination sets. These worms are transmitted in multiple phases with the destinations in a phase acting as secondary sources in succeeding phases of the multicast [15]. <p> For simplicity, we will assume that the buffers use a single FIFO queue to store packets (as in the switches of [9]). Given such support for replication at the switches, there are two schemes that have been proposed for carrying out multicast in switch based irregular networks: tree-based <ref> [35] </ref> and path-based [15]. The two schemes differ in the restrictions placed on worm replication, the number of worms required to perform multicast to an arbitrary destination set, the complexity of multicast header formation, and the complexity of the header decoding logic required at the switches. <p> The basic idea of tree based replication is to have multiple copies of a packet propagate down a tree which has switches as internal vertices and destinations nodes as leaf vertices. Two methods have been proposed for tree-based multicast in irregular networks <ref> [35] </ref>. In this paper, we use the method that uses a single multidestination worm with a bit-string encoded header to perform multicast [35, 39] as a representative of the tree-based multicasting method. <p> Two methods have been proposed for tree-based multicast in irregular networks [35]. In this paper, we use the method that uses a single multidestination worm with a bit-string encoded header to perform multicast <ref> [35, 39] </ref> as a representative of the tree-based multicasting method. The basic idea is to encode the multidestination worm header using an N -bit string where N is the number of nodes in the system. <p> Details of the logic to do this and the method for setting up the reachability strings are presented in <ref> [35] </ref>. one destination node connected to each of the switches that are highlighted, and that the source node is 9 connected to switch 10. Figure 6 (b) shows the tree-based multidestination worm that covers all the destina-tions of the multicast.
Reference: [36] <author> R. Sivaram, C. B. Stunkel, and D. K. Panda. </author> <title> A Reliable Hardware Barrier Synchronization Scheme. </title> <booktitle> In Proceedings of the 11th IEEE International Parallel Processing Symposium, </booktitle> <pages> pages 274-280, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Collective communication is an important type of communication operation in parallel systems, and involves communication among groups of (3 or more) processes [20, 26]. Examples of collective operations include multicast [24], barrier synchronization <ref> [36] </ref>, reduction, etc. The importance of such operations is underlined by the inclusion of several primitives for collective communication in the newly drafted Message Passing Interface (MPI) standard [23].
Reference: [37] <author> R. Sivaram, C. B. Stunkel, and D. K. Panda. HIPIQS: </author> <title> A High Performance Switch Architecture using Input Queuing. </title> <booktitle> In Proceedings of the 12th International Parallel Processing Symposium, </booktitle> <month> April </month> <year> 1998. </year> <note> To appear. </note>
Reference-contexts: A k-port switch typically provides a k fi k crossbar connectivity in order to enable concurrent transfer of messages from the input buffers to any of the output buffers <ref> [3, 32, 37, 38, 40] </ref>. dedicated communication processor is embedded in the NIC. This allows the sophisticated processing of the 4 network transactions to be off-loaded to the NI processor, thus freeing up the host processor for computation.
Reference: [38] <author> C. B. Stunkel, D. Shea, D. G. Grice, P. H. Hochschild, and M. Tsao. </author> <title> The SP1 High Performance Switch. </title> <booktitle> In Scalable High Performance Computing Conference, </booktitle> <pages> pages 150-157, </pages> <year> 1994. </year>
Reference-contexts: A k-port switch typically provides a k fi k crossbar connectivity in order to enable concurrent transfer of messages from the input buffers to any of the output buffers <ref> [3, 32, 37, 38, 40] </ref>. dedicated communication processor is embedded in the NIC. This allows the sophisticated processing of the 4 network transactions to be off-loaded to the NI processor, thus freeing up the host processor for computation.
Reference: [39] <author> C. B. Stunkel, R. Sivaram, and D. K. Panda. </author> <title> Implementing Multidestination Worms in Switch-Based Parallel Systems: Architectural Alternatives and their Impact. </title> <booktitle> In Proceedings of the 24th IEEE/ACM Annual International Symposium on Computer Architecture (ISCA-24), </booktitle> <pages> pages 50-61, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: These schemes can be classified into two main categories. The first category of schemes is referred to as switch-based multicasting schemes. These schemes use enhancements at the routers/switches of the network to allow an incoming packet to be forwarded to multiple output ports of the router/switch <ref> [34, 39] </ref>. Such a method allows 1 messages (christened multidestination messages) to be communicated to multiple destinations incurring a single software overhead for sending the message. There are two subclasses of switch-based multicasting schemes: tree-based [35] and path-based [15]. <p> There are two subclasses of switch-based multicasting schemes: tree-based [35] and path-based [15]. In the best tree-based multicasting scheme, multicast can be performed in a single phase using one multidestination worm from the source node to all the destinations <ref> [35, 39] </ref>. The path-based multicasting schemes typically require multiple multidestination worms to perform multicast to arbitrary destination sets. These worms are transmitted in multiple phases with the destinations in a phase acting as secondary sources in succeeding phases of the multicast [15]. <p> Replication of messages in switches that support cut-through routing is deadlock-prone. A deadlock-free replication method that uses distributed arbitration but guarantees that there is space for the multicast packet to eventually be completely buffered at the switch has been proposed in <ref> [34, 39] </ref>. This ensures that the available resources can be used and freed up while continuing to wait for other resources (output ports in our case) to be freed. <p> Two methods have been proposed for tree-based multicast in irregular networks [35]. In this paper, we use the method that uses a single multidestination worm with a bit-string encoded header to perform multicast <ref> [35, 39] </ref> as a representative of the tree-based multicasting method. The basic idea is to encode the multidestination worm header using an N -bit string where N is the number of nodes in the system. <p> We use such traffic for our second type of experiments. We apply an increasing load consisting of multicast traffic alone and examine the load at which the network saturates with each of the three multicasting schemes under the influence of the various parameters. As in <ref> [39] </ref>, we use effective applied load as a measure of our stimulus. For a multicast of degree m and a load of B i , the effective applied load is mB i .
Reference: [40] <author> Craig B. Stunkel, D. G. Shea, B. Abali, et al. </author> <title> The SP2 High-Performance Switch. </title> <journal> IBM System Journal, </journal> <volume> 34(2) </volume> <pages> 185-204, </pages> <year> 1995. </year>
Reference-contexts: Much recent research has therefore focussed on extending parallel processing solutions to such networks of commodity workstations (NOWs). Traditionally, parallel processing machines have been built with processing nodes interconnected in regular topologies such as a mesh [12], torus [5], hypercube [11], multistage interconnection network (MIN) <ref> [22, 40] </ref>, etc. Such regular topologies have important mathematical properties that make message communication easier/better by making message routing simpler, lowering the average distance per communication, and/or increasing the bisection bandwidth [7]. <p> A k-port switch typically provides a k fi k crossbar connectivity in order to enable concurrent transfer of messages from the input buffers to any of the output buffers <ref> [3, 32, 37, 38, 40] </ref>. dedicated communication processor is embedded in the NIC. This allows the sophisticated processing of the 4 network transactions to be off-loaded to the NI processor, thus freeing up the host processor for computation.
Reference: [41] <author> K. Verstoep, K. Langendoen, and H. Bal. </author> <title> Efficient Reliable Multicast on Myrinet. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pages III:156-165, </pages> <month> Aug </month> <year> 1996. </year>
Reference-contexts: The NI-based schemes use enhancements at the network interface so that multicast messages are forwarded to the next destination as soon as they are received at the network interface of an intermediate destination (and the message has begun to be transferred to the memory of the local host) <ref> [41] </ref>. This hides the significant software overhead for receiving a message at an intermediate destination host, and eliminates the overhead at the host for sending the message to other destinations in the succeeding phases of the multicast. <p> Smart NI support can reduce this overhead for multicast, especially for multi-packet messages. Current lean messaging layers allow modification of part of the software running on the NI processor. This part of the software can be modified to allow it to identify a multicast packet <ref> [16, 41] </ref>. If the next outgoing packet in the send queue of the source node is a multicast packet, the NI processor forwards replicas of the packet to the nodes adjacent to the root of the multicast tree. <p> Figure 4 (b) shows such forwarding with smart network interface support. An example of the use of such a smart network interface has been described in <ref> [41] </ref>. and (b) smart NI support. Let us estimate the latency of a multicast operation using smart network interface support. <p> However, very little of this work has concentrated on irregular networks. A simple multi-phase approach to perform multicast in wormhole-routed irregular networks so that contention among the constituent messages of the multicast is reduced/minimized has been proposed by Kesavan et al. [13]. Verstoep et al. <ref> [41] </ref> have proposed (and implemented) a better method for performing multicast in switch-based systems using network interface support for absorbing and retransmitting messages. However, 21 and 15-way multicasts. the scheme uses only a heuristically derived binary tree to order the destinations into various phases of the multicast.
Reference: [42] <author> T. von Eicken, A. Basu, V. Buch, and W. Vogels. U-Net: </author> <title> A User-level Network Interface for Parallel and Distributed Computing. </title> <booktitle> In ACM Symposium on Operating Systems Principles, </booktitle> <year> 1995. </year>
Reference-contexts: Such messaging systems also try to minimize buffer copying which contributes to a major part of 5 the overhead. Examples of such messaging systems are Active Messages [19, 43], U-Net <ref> [42] </ref>, Fast Messages (FM) [25], and SHRIMP [2, 8]. Let us examine how these lightweight messaging systems achieve message transfer. An application is typically linked to a communication library in the host, and a portion of the host memory is allocated for DMA to and from the network interface. <p> Alternatively, the host processor copies data into the host DMA memory, writes the message pointers to the network interface, and the processor uses DMA to copy the packets to the send queue <ref> [42] </ref>. The DMA setup overhead makes the programmed I/O method more efficient for small message sizes, but DMA proves more efficient for large message sizes. Subsequently, the software executing at the NI processor detects entries in the send queue, and sends the packets out to the network channel.
Reference: [43] <author> T. von Eicken, D. E. Culler, S. C. Goldstein, and K. E. Schauser. </author> <title> Active Messages: A Mechanism for Integrated Communication and Computation. </title> <booktitle> In International Symposium on Computer Architecture, </booktitle> <pages> pages 256-266, </pages> <year> 1992. </year>
Reference-contexts: Such messaging systems also try to minimize buffer copying which contributes to a major part of 5 the overhead. Examples of such messaging systems are Active Messages <ref> [19, 43] </ref>, U-Net [42], Fast Messages (FM) [25], and SHRIMP [2, 8]. Let us examine how these lightweight messaging systems achieve message transfer.
Reference: [44] <author> H. Xu, Y.-D. Gui, and L. M. Ni. </author> <title> Optimal Software Multicast in Wormhole-Routed Multistage Networks. </title> <booktitle> In Proceedings of the Supercomputing Conference, </booktitle> <pages> pages 703-712, </pages> <year> 1994. </year> <month> 25 </month>
Reference-contexts: To improve multicast performance, many schemes have been proposed that use a multi-phase approach starting with the source sending out a multicast message to one of its destinations <ref> [21, 44] </ref>. In succeeding phases, the destinations that have received the message act as secondary sources and transmit the message to other destinations. Such a scheme reduces the impact of the high overhead associated with sending/receiving point-to-point messages by allowing multiple nodes to simultaneously transmit/receive messages in a given phase.
References-found: 44

