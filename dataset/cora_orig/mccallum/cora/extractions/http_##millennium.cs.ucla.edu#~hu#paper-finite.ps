URL: http://millennium.cs.ucla.edu/~hu/paper-finite.ps
Refering-URL: http://millennium.cs.ucla.edu/hu.html
Root-URL: http://www.cs.ucla.edu
Title: An Analytical Model for Wormhole Routing with Finite Size Input Buffers  
Author: Po-Chi Hu a and Leonard Kleinrock b 
Address: 200 Schulz Drive, Red Bank, NJ 07701, USA  Los Angeles, Los Angeles, CA 90095-1596, USA  
Affiliation: a Lucent Technologies, Inc.,  b Department of Computer Science, University of California at  
Abstract: In this paper, we develop a queueing model for wormhole routing with finite size buffers. This model assumes the use of a deadlock-free routing scheme that guarantees no cycle of link dependency (defined in section 3). Several approximation methods for estimating the output link contention delay and buffer queueing delay are proposed. Comparing the analytical results to simulation, we show that the model is pessimistic with regard to network performance and that the difference in network throughput is less than 10 percent. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.D. Schroeder, A.D. Birrell, M. Burrows, H. Murray, et al. "Autonet: </author> <title> A High-speed, Self-configuring Local Area Network Using Point-to-point Links". </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 9(8) </volume> <pages> 1318-1335, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Wormhole routing is a simple, low-cost switching scheme often used for supercomputer interconnections. It has the merits of low latency, low cost, and simple implementation. In addition to its use for supercomputer interconnection, wormhole routing also has been applied to high-speed local area networks (LANs) <ref> [1, 2, 3] </ref> to support applications such as cluster computing that demand a very fast, high-data-rate communication media. 1.1 Wormhole Routing Wormhole routing was developed from the earlier idea of cut-through switching [4], and was first introduced in [5]. <p> They are only used for the convenience of presen tation. Only the first two moments of each distribution are required. 7 Comparison of Results Using a 3 fi 3 torus (totally, 9 switches and 36 hosts) with up/down deadlock-free routing <ref> [1] </ref> and symmetric traffic load (see [14] for details), the performance results estimated by both the model and simulation are shown in figure 5-a. The results are derived with the assumptions of exponential worm size distribution and Poisson worm arrivals.
Reference: [2] <author> C. Seitz, D. Cohen, and R. </author> <title> Felderman. </title> <journal> "Myrinet|A Gigabit-per-second Local-Area Network". IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 29-36, </pages> <month> February </month> <year> 1995. </year> <note> [3] et. </note> <author> al L. Kleinrock. </author> <title> "The Supercomputer Supernet: A Scalable Distributed Ter--abit Network". Journal of High Speed Networks: </title> <journal> special issue on Optical Networks, </journal> 4(4):407-24, 1995. 
Reference-contexts: 1 Introduction Wormhole routing is a simple, low-cost switching scheme often used for supercomputer interconnections. It has the merits of low latency, low cost, and simple implementation. In addition to its use for supercomputer interconnection, wormhole routing also has been applied to high-speed local area networks (LANs) <ref> [1, 2, 3] </ref> to support applications such as cluster computing that demand a very fast, high-data-rate communication media. 1.1 Wormhole Routing Wormhole routing was developed from the earlier idea of cut-through switching [4], and was first introduced in [5]. <p> As an example, a 640 Mbps Myrinet with a link length of 25 meters needs a buffer size of at least 54 bytes <ref> [2] </ref> per port to prevent data loss due to a buffer overflow or a transmission break due to the possibility of the buffer being empty before transmission is resumed. <p> To facilitate this paper presentation, we measure packet length by flits, which is the amount of data that can be transmitted in one time unit. For example, the 640Mbps Myrinet <ref> [2] </ref> has one byte per flit lasting 12.5ns. The followings define some notation used through this paper.
Reference: [4] <author> P. Kermani and L. Kleinrock. </author> <title> "Virtual cut-through: A New Computer Communication Switching Technique". </title> <journal> Computer Networks, </journal> <volume> 3 </volume> <pages> 267-289, </pages> <year> 1979. </year>
Reference-contexts: to its use for supercomputer interconnection, wormhole routing also has been applied to high-speed local area networks (LANs) [1, 2, 3] to support applications such as cluster computing that demand a very fast, high-data-rate communication media. 1.1 Wormhole Routing Wormhole routing was developed from the earlier idea of cut-through switching <ref> [4] </ref>, and was first introduced in [5]. A wormhole routing network is composed of several switches which have relatively small input buffers (see figure 1-a). As opposed to store-and-forward switching, a packet is forwarded to the next switch as soon as its header (or its routing information) is received (cut-through).
Reference: [5] <author> C. Seitz et al. </author> <title> "The Hypercube Communications Chip". </title> <type> Technical report, </type> <institution> Dep. Computer Science, California Inst., </institution> <month> March </month> <year> 1985. </year> <note> Display File 5128:DF:85. </note>
Reference-contexts: wormhole routing also has been applied to high-speed local area networks (LANs) [1, 2, 3] to support applications such as cluster computing that demand a very fast, high-data-rate communication media. 1.1 Wormhole Routing Wormhole routing was developed from the earlier idea of cut-through switching [4], and was first introduced in <ref> [5] </ref>. A wormhole routing network is composed of several switches which have relatively small input buffers (see figure 1-a). As opposed to store-and-forward switching, a packet is forwarded to the next switch as soon as its header (or its routing information) is received (cut-through).
Reference: [6] <author> L. M. Ni and P. K. McKinley. </author> <title> "A Survey of Wormhole Routing Techniques in Direct Networks". </title> <booktitle> Computer, </booktitle> <pages> pages 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Consequently, fl This work was supported by the Advanced Research Projects Agency, ARPA/CSTO, under Contract DABT63-93-C-0055 "The Distributed Supercomputer Supernet | A Multi Service Optical Intelligent Network". deadlocks are possible unless a deadlock-free routing strategy is employed. A survey of wormhole routing can be found in <ref> [6] </ref>. 1.2 Wormhole Routing Analysis Many performance models for wormhole routing in a multi-processor environment have been proposed and presented in the literature [7, 8, 9, 10, 11]. However, they all assumed a negligible size of input buffers.
Reference: [7] <author> W. J. Dally. </author> <title> "Performance Analysis of K-ary n-cube Interconnection Networks". </title> <journal> IEEE Trans. on Computers, </journal> <volume> 39(6), </volume> <month> June </month> <year> 1990. </year>
Reference-contexts: A survey of wormhole routing can be found in [6]. 1.2 Wormhole Routing Analysis Many performance models for wormhole routing in a multi-processor environment have been proposed and presented in the literature <ref> [7, 8, 9, 10, 11] </ref>. However, they all assumed a negligible size of input buffers. This buffer size must increase in a LAN environment to accommodate transit data that cannot be stopped immediately due to the longer link propagation delay than in a multiprocessor interconnection application.
Reference: [8] <author> W-J. Guan, W. K. Tsai, and D. Blough. </author> <title> "An Analytical Model for Wormhole Routing in Multicomputer Interconnection Networks". </title> <booktitle> In Proceedings of Seventh International Parallel Processing Symposium, </booktitle> <pages> pages 650-654, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: A survey of wormhole routing can be found in [6]. 1.2 Wormhole Routing Analysis Many performance models for wormhole routing in a multi-processor environment have been proposed and presented in the literature <ref> [7, 8, 9, 10, 11] </ref>. However, they all assumed a negligible size of input buffers. This buffer size must increase in a LAN environment to accommodate transit data that cannot be stopped immediately due to the longer link propagation delay than in a multiprocessor interconnection application.
Reference: [9] <author> J. Kim and C. R. Das. </author> <title> "Hypercube Communication Delay with Wormhole Routing". </title> <journal> IEEE Trans. on Computers, </journal> <volume> 43(7), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: A survey of wormhole routing can be found in [6]. 1.2 Wormhole Routing Analysis Many performance models for wormhole routing in a multi-processor environment have been proposed and presented in the literature <ref> [7, 8, 9, 10, 11] </ref>. However, they all assumed a negligible size of input buffers. This buffer size must increase in a LAN environment to accommodate transit data that cannot be stopped immediately due to the longer link propagation delay than in a multiprocessor interconnection application.
Reference: [10] <author> J. T. Draper and J. Ghosh. </author> <title> "A Comprehensive Analytical Model for Wormhole Routing in Multicomputer Systems". </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 23 </volume> <pages> 202-214, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: A survey of wormhole routing can be found in [6]. 1.2 Wormhole Routing Analysis Many performance models for wormhole routing in a multi-processor environment have been proposed and presented in the literature <ref> [7, 8, 9, 10, 11] </ref>. However, they all assumed a negligible size of input buffers. This buffer size must increase in a LAN environment to accommodate transit data that cannot be stopped immediately due to the longer link propagation delay than in a multiprocessor interconnection application.
Reference: [11] <author> Po-Chi Hu and L. Kleinrock. </author> <title> "A Queueing Model for Wormhole Routing with Timeout". </title> <booktitle> In Proceedings of the 4th International Conference on Computer Communications and Networks, </booktitle> <pages> pages 584-593, </pages> <address> Las Vegas, NV, U.S., </address> <month> September </month> <year> 1995. </year>
Reference-contexts: A survey of wormhole routing can be found in [6]. 1.2 Wormhole Routing Analysis Many performance models for wormhole routing in a multi-processor environment have been proposed and presented in the literature <ref> [7, 8, 9, 10, 11] </ref>. However, they all assumed a negligible size of input buffers. This buffer size must increase in a LAN environment to accommodate transit data that cannot be stopped immediately due to the longer link propagation delay than in a multiprocessor interconnection application. <p> Definition 2 We say that there is a cycle of link dependency if 9l ab ; l cd such that l ab l cd and l cd l ab . Link dependency provides the relationship between link occupancy time and blocking time. In our earlier paper <ref> [11] </ref>, we developed the relations between their distributions but relied on iterative methods to find the solution. Actually, a computation order, which indicates the sequence of links for blocking delay analysis can be derived if there is no cycle of link dependency, as illustrated in [14]. <p> When there is no buffer available at switches, the relation between the link occupancy time (b l p i ) and waiting time (! l p i ) has been well established in <ref> [11] </ref>. The Laplace-Stieltjes transform equation is: B fl i d p Y W fl j Introducing a finite size buffer on each input port reduces the number of links that a worm can spread over.
Reference: [12] <author> J. Duato. </author> <title> "A Necessary and Sufficient Condition for Deadlock-free Adaptive Routing in Wormhole Networks". </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 6(10) </volume> <pages> 1055-67, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: No cycle of link dependency is a sufficient, but not necessary, condition for deadlock free routing, as discussed in <ref> [12, 13] </ref>. * source routing. Routing is made by the source host and cannot be changed by switches (i.e., no deflection or adaptive routing). * only one finite size buffer at each input port of a switch.
Reference: [13] <author> L. Schwiebert and D.N. Jayasimha. </author> <title> "A Necessary and Sufficient Condition for Deadlock-free Wormhole Routing". </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 32(1) </volume> <pages> 103-117, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: No cycle of link dependency is a sufficient, but not necessary, condition for deadlock free routing, as discussed in <ref> [12, 13] </ref>. * source routing. Routing is made by the source host and cannot be changed by switches (i.e., no deflection or adaptive routing). * only one finite size buffer at each input port of a switch.
Reference: [14] <author> Po-Chi Hu. </author> <title> High-Speed Local Area Networks Using Wormhole Routing: Modeling and Extensions. </title> <type> PhD thesis, </type> <institution> University of California, </institution> <address> Los Angeles, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: In our earlier paper [11], we developed the relations between their distributions but relied on iterative methods to find the solution. Actually, a computation order, which indicates the sequence of links for blocking delay analysis can be derived if there is no cycle of link dependency, as illustrated in <ref> [14] </ref>. The method is simply the topological sorting [15]. For examples, if l ab l cd l ef , we have a computation order, l ef ! l cd ! l ab . <p> Moreover, B l p i derived by equation (7) is monotonically increasing with X l p i , as proven in <ref> [14] </ref>. <p> Therefore, an iterative method (e.g., bi-section [19]) needs to be applied to solve P B and 0 l ab first (see <ref> [14] </ref> for details). <p> Read in all paths and their worm arrival rates, p . 3. Compute the worm arrival rate at each single link (e.g., l ab ). 4. With the given worm size distribution, compute l p i (j) and #(j), 8j and l i . 5. Use topological sorting (see <ref> [14] </ref>) to construct the link computation order. 6. For k = 1 to the highest order, compute (in the following order) S fl (s), W fl (s), H fl (s), Q fl (s), and B fl (s) for all links belonging to order k. <p> They are only used for the convenience of presen tation. Only the first two moments of each distribution are required. 7 Comparison of Results Using a 3 fi 3 torus (totally, 9 switches and 36 hosts) with up/down deadlock-free routing [1] and symmetric traffic load (see <ref> [14] </ref> for details), the performance results estimated by both the model and simulation are shown in figure 5-a. The results are derived with the assumptions of exponential worm size distribution and Poisson worm arrivals.
Reference: [15] <author> Ralph P. Grimaldi. </author> <title> Discrete and Combinatorial Mathematics : An Applied Introduction. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., 2nd edition, </address> <year> 1989. </year>
Reference-contexts: Actually, a computation order, which indicates the sequence of links for blocking delay analysis can be derived if there is no cycle of link dependency, as illustrated in [14]. The method is simply the topological sorting <ref> [15] </ref>. For examples, if l ab l cd l ef , we have a computation order, l ef ! l cd ! l ab .
Reference: [16] <author> Jacob Willem Cohen. </author> <title> The Single Server Queue. </title> <publisher> North-Holland Pub. </publisher> <address> Co., </address> <note> revised edition, </note> <year> 1982. </year>
Reference-contexts: A worm flows in the buffer constantly when it is not full. However, the outgoing flow of the buffer may be interrupted due to worm blocking. The queueing model for a finite dam system developed in <ref> [16] </ref> cannot be applied directly in this case. Furthermore, the status of the buffer is tightly related to its upstream node, and vice versa. To analyze both independently could result in a poor model.
Reference: [17] <author> L. Kleinrock. </author> <title> Communication Nets: Stochastic Message Flow and Delay. </title> <address> MgGraw-Hill, New York, 1964. </address> <publisher> Reprinted by Dover Publications, </publisher> <year> 1972. </year>
Reference-contexts: The range of the capacity is actually finite, since the worm size must be larger than a flit. The finite capacity queue of figure 3 is modeled with the Poisson arrival assumption. This assumption is justified by the multiplexing of various inputs and demultiplexing of outputs <ref> [17] </ref>. The details of the procedure to solve the steady-state probability and waiting time distribution, fl l p (j + ; s), of an M/G/1/K queue is available in [18]. The solution is lengthy and hence not reproduced in this paper.
Reference: [18] <author> Hideaki Takagi. </author> <title> Queueing Analysis : A Foundation of Performance Evaluation, volume 2. </title> <publisher> North-Holland, </publisher> <address> New York, NY, U.S.A., </address> <year> 1993. </year>
Reference-contexts: This assumption is justified by the multiplexing of various inputs and demultiplexing of outputs [17]. The details of the procedure to solve the steady-state probability and waiting time distribution, fl l p (j + ; s), of an M/G/1/K queue is available in <ref> [18] </ref>. The solution is lengthy and hence not reproduced in this paper. Nevertheless, a few changes about the procedure should be noted here. First, the total worm arrival rate on link l ab is derived as: l ab = P p:l ab 2L p p . <p> However, to apply the solutions for the M/G/1/K queue, l ab needs to be normalized with the probability of encountering a full queue. That is, 0 l ab (10) where P B is the probability of no waiting room left (blocking) in the M/G/1/K queueing system <ref> [18, Chapter 5, page 202] </ref>, and it, as well as the steady-state probabilities, can be derived if the normalized traffic arrival rate, 0 l ab , is known. <p> Therefore, an iterative method (e.g., bi-section [19]) needs to be applied to solve P B and 0 l ab first (see [14] for details). Another change is about the integration <ref> [18, Chapter 5, equation (1.7)] </ref>, Z 1 l ab t k! 0 s l ab (t )dt Though s l ab (t ) can be recovered by inverting its Laplace-Stieltjes transform, S fl l ab (s), the inversion is not completely systematic. <p> With and ffi, s l ab (t ) and its moments can be approximated. This two moment approximation is also applied for other distributions that need the probability density function explicitly. Finally, fl l p (K; s) is evaluated through <ref> [18, Chapter 5, equation (1.75)] </ref>: fl i 0 s @ 1 0 i l ab (s) l p s 1 s 0 i l p S fl + S fl i K1 K1 X j @ l p 0 i 1 Kj where j is the steady-state probability of j worms
Reference: [19] <author> William H. Press et al. </author> <title> Numerical Recipes: </title> <booktitle> The Art of Scientific computing. </booktitle> <publisher> Cam-bridge University Press, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: Therefore, an iterative method (e.g., bi-section <ref> [19] </ref>) needs to be applied to solve P B and 0 l ab first (see [14] for details).
Reference: [20] <author> L. Kleinrock. </author> <title> Queueing Systems, Vol. I: Theory. </title> <publisher> Wiley Interscience, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: l ab 1 ffi+1 u 0 t S l ab if C 2 &lt; 1 where C s l ab = q l ab S l ab S l ab is the coefficient of variation for s l ab , and u 0 (t ) is the unit impulse function <ref> [20, Appendix I.3] </ref>. <p> Note that the buffering delay at the first link is not counted, since it is part of the host queueing delay, which is directly derived from the M/G/1 queue solution <ref> [20] </ref>, v a = fl a S 2 2 (1fl a S l ab ) . 6 Model Summary Here, we summarize the full modeling process. 1. Read in the network topology. 2. Read in all paths and their worm arrival rates, p . 3.
References-found: 19

