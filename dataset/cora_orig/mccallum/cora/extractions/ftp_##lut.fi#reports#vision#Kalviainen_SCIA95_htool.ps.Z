URL: ftp://lut.fi/reports/vision/Kalviainen_SCIA95_htool.ps.Z
Refering-URL: http://www.lut.fi/dep/tite/XHoughtool/xhoughtool.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: Heikki.Kalviainen@lut.fi  
Phone: 2.  
Title: Houghtool|a Software Package for Hough Transform Calculation 1  
Author: Heikki Kalviainen Petri Hirvonen and Erkki Oja 
Address: P.O. Box 20, FIN-53851 Lappeenranta, Finland,  Rakentajanaukio 2 C, FIN-02150, Espoo, Finland  
Affiliation: 1. Lappeenranta University of Technology, Department of Information Technology,  Helsinki University of Technology, Laboratory of Computer and Information Science,  
Note: Proceedings of the 9th Scandinavian Conference on Image Analysis, Uppsala, Swe- den, June 1995, pp. 841-848.  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.O. Duda and P.E. Hart, </author> <title> "Use of the Hough Transform To Detect Lines and Curves in Pictures," </title> <journal> Communications of the ACM, </journal> <volume> vol. 15, no. 1, </volume> <pages> pp. 11-15, </pages> <year> 1972. </year>
Reference-contexts: 1 Introduction The Hough Transform (HT) <ref> [1] </ref> has been designed for detecting complex patterns of points in binary image data. Several Hough Transform algorithms have been proposed to solve the parameters of the patterns like lines, circles, or ellipses [2, 5].
Reference: [2] <author> J. Illingworth and J. Kittler, </author> <title> "A Survey of the Hough Transform," </title> <journal> CVGIP, </journal> <volume> vol. 44, </volume> <pages> pp. 87-116, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction The Hough Transform (HT) [1] has been designed for detecting complex patterns of points in binary image data. Several Hough Transform algorithms have been proposed to solve the parameters of the patterns like lines, circles, or ellipses <ref> [2, 5] </ref>. Usually, it is not obvious which algorithm should be selected to a special computer vision task. In this paper, a software package, called the Houghtool, is suggested to help to choose a suitable method. <p> UNIX-like commands implemented method by method are available for further analysis. Algorithms implemented in the package are divided into two categories, non-probabilistic Hough Transforms and probabilistic Hough Transforms [3, 4], as follows (for more details of the methods see e.g. <ref> [2, 5, 3, 4] </ref>): * Non-probabilistic Hough Transforms Standard Hough Transform Adaptive Hough Transform Combinatorial Hough Transform Curve Fitting Hough Transform * Probabilistic Hough Transforms Probabilistic Hough Transform of Kiryati et al.
Reference: [3] <author> H. Kalviainen, P. Hirvonen, L. Xu, and E. Oja, </author> <title> "Comparisons of Probabilistic and Non-probabilistic Hough Transforms," </title> <booktitle> Proc. of 3rd European Conference on Computer Vision ECCV'94, </booktitle> <address> Stockholm, Sweden, </address> <month> May </month> <year> 1994, </year> <pages> pp. 351-360. </pages>
Reference-contexts: The aim of the XHoughtool is to visualize Hough transform calculation and to find roughly suitable parameters of methods. UNIX-like commands implemented method by method are available for further analysis. Algorithms implemented in the package are divided into two categories, non-probabilistic Hough Transforms and probabilistic Hough Transforms <ref> [3, 4] </ref>, as follows (for more details of the methods see e.g. [2, 5, 3, 4]): * Non-probabilistic Hough Transforms Standard Hough Transform Adaptive Hough Transform Combinatorial Hough Transform Curve Fitting Hough Transform * Probabilistic Hough Transforms Probabilistic Hough Transform of Kiryati et al. <p> UNIX-like commands implemented method by method are available for further analysis. Algorithms implemented in the package are divided into two categories, non-probabilistic Hough Transforms and probabilistic Hough Transforms [3, 4], as follows (for more details of the methods see e.g. <ref> [2, 5, 3, 4] </ref>): * Non-probabilistic Hough Transforms Standard Hough Transform Adaptive Hough Transform Combinatorial Hough Transform Curve Fitting Hough Transform * Probabilistic Hough Transforms Probabilistic Hough Transform of Kiryati et al.
Reference: [4] <author> H. Kalviainen, P. Hirvonen, L. Xu, and E. Oja, </author> <title> "Probabilistic and Non-probabilistic Hough Transforms: Overview and Comparisons," </title> <note> to appear in Image and Vision Computing. </note>
Reference-contexts: The aim of the XHoughtool is to visualize Hough transform calculation and to find roughly suitable parameters of methods. UNIX-like commands implemented method by method are available for further analysis. Algorithms implemented in the package are divided into two categories, non-probabilistic Hough Transforms and probabilistic Hough Transforms <ref> [3, 4] </ref>, as follows (for more details of the methods see e.g. [2, 5, 3, 4]): * Non-probabilistic Hough Transforms Standard Hough Transform Adaptive Hough Transform Combinatorial Hough Transform Curve Fitting Hough Transform * Probabilistic Hough Transforms Probabilistic Hough Transform of Kiryati et al. <p> UNIX-like commands implemented method by method are available for further analysis. Algorithms implemented in the package are divided into two categories, non-probabilistic Hough Transforms and probabilistic Hough Transforms [3, 4], as follows (for more details of the methods see e.g. <ref> [2, 5, 3, 4] </ref>): * Non-probabilistic Hough Transforms Standard Hough Transform Adaptive Hough Transform Combinatorial Hough Transform Curve Fitting Hough Transform * Probabilistic Hough Transforms Probabilistic Hough Transform of Kiryati et al.
Reference: [5] <author> V.F. Leavers, </author> <title> "Which Hough Transform?," CVGIP: </title> <booktitle> Image Understanding, </booktitle> <volume> vol. 58, no. 2, </volume> <pages> pp. 250-264, </pages> <year> 1993. </year> <title> 4 The X Window System is a trademark of the Massachusetts Institute of Technology. 5 Xview is a trademark of Sun Microsystems, </title> <publisher> Inc. </publisher> <pages> 848 </pages>
Reference-contexts: 1 Introduction The Hough Transform (HT) [1] has been designed for detecting complex patterns of points in binary image data. Several Hough Transform algorithms have been proposed to solve the parameters of the patterns like lines, circles, or ellipses <ref> [2, 5] </ref>. Usually, it is not obvious which algorithm should be selected to a special computer vision task. In this paper, a software package, called the Houghtool, is suggested to help to choose a suitable method. <p> UNIX-like commands implemented method by method are available for further analysis. Algorithms implemented in the package are divided into two categories, non-probabilistic Hough Transforms and probabilistic Hough Transforms [3, 4], as follows (for more details of the methods see e.g. <ref> [2, 5, 3, 4] </ref>): * Non-probabilistic Hough Transforms Standard Hough Transform Adaptive Hough Transform Combinatorial Hough Transform Curve Fitting Hough Transform * Probabilistic Hough Transforms Probabilistic Hough Transform of Kiryati et al.
References-found: 5

