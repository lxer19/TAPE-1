URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/pend/UMC-98/flattop.ps
Refering-URL: 
Root-URL: 
Title: A Scalable Reversible Computer in Silicon Revision: 1.11  
Author: Michael Frank, Carlin Vieri, M. Josephine Ammer, Nicole Love, Norman H. Margolus, Thomas F. Knight, Jr. 
Address: Cambridge, MA 02139, USA  
Affiliation: MIT Artificial Intelligence Laboratory,  
Abstract: The reversible and "adiabatic" transfer of charge in digital circuits has recently been a subject of interest in the low-power electronics community, but until now, no one had created a complete, fully reversible CPU using this technology. Fundamental physical scaling laws imply that a fully reversible processing element would permit unbound-edly greater efficiency at some tasks, by several different metrics, than can be achieved with any possible irreversible computer. This paper describes the design of Flattop, a fully-adiabatic chip now in fabrication, which can serve as a general-purpose parallel processor when tiled in large arrays. Flattop implements the Billiard Ball Cellular Automaton, a universal and reversible model of computation. Flattop is implemented in a standard 0.5 m cmos silicon process using the Split-Level Charge Recovery Logic (scrl) circuit family developed at our lab. Calculations indicate that our circuit can operate with about 2000 times the energy efficiency of an equivalent chip based on standard circuit techniques, modulo some unsolved power supply issues. Although Flattop is itself not a very practical architecture for performing arbitrary computations, it is an important proof-of-concept, demonstrating that physically reversible universal computers can actually be built using current technology.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Michael P. Frank and Thomas F. Knight, Jr. </author> <title> Ultimate theoretical models of nanocomputers. </title> <booktitle> Nanotechnology, 1997. To be presented at the Fifth Foresight Conference on Molecular Nanotechnology, </booktitle> <address> Palo Alto, California, </address> <month> Nov. </month> <year> 1997. </year> <note> http:/ /www.ai.mit.edu/~mpf/Nano97/paper.html. </note>
Reference-contexts: For further discussion of scaling issues see <ref> [1, 2] </ref>. 1.3 Flattop Despite interest in reversible and adiabatic computation, no one has yet designed a complete computer based on fully reversible, adiabatic technology. Such a design would demonstrate the physical realizability of universal reversible computation and provide practice analyzing and programming such a computer.
Reference: 2. <author> Michael P. Frank, Thomas F. Knight, Jr., and Norman H. Margolus. </author> <title> Reversibil-ity in optimally scalable computer architectures. </title> <booktitle> In proc. of the First International Conference on Unconventional Models of Computation (UMC-98), </booktitle> <address> Auckland, New Zealand, </address> <month> January </month> <year> 1998. </year> <note> http://www.ai.mit.edu/~mpf/rc/scaling_paper/ scaling.html. </note>
Reference-contexts: For further discussion of scaling issues see <ref> [1, 2] </ref>. 1.3 Flattop Despite interest in reversible and adiabatic computation, no one has yet designed a complete computer based on fully reversible, adiabatic technology. Such a design would demonstrate the physical realizability of universal reversible computation and provide practice analyzing and programming such a computer.
Reference: 3. <author> J. G. Koller and W. C. Athas. </author> <title> Adiabatic switching, low energy computing, and the physics of storing and erasing information. </title> <booktitle> In Physics of Computation Workshop, </booktitle> <year> 1992. </year>
Reference-contexts: In a common cmos technology, this energy is about 10 8 times higher than kT ln 2. 1.1 Adiabatic circuits The recent development of so-called "adiabatic" circuits (e.g., see <ref> [3] </ref>) has shown that this large 1 2 CV 2 energy per bit-change is not strictly necessary. If circuit nodes are charged and discharged gradually, under the control of redundant information stored in other circuit nodes, then the circuit can change state in a quasistatic, adiabatic fashion.
Reference: 4. <author> R. Landauer. </author> <title> Irreversibility and heat generation in the computing process. </title> <journal> IBM J. Research and Development, </journal> <volume> 5 </volume> <pages> 183-191, </pages> <year> 1961. </year>
Reference-contexts: Adding one bit of entropy to a thermal system having temperature T requires adding at least k B T ln 2 of energy into the system, ? This work was supported by arpa contract DABT63-95-C-0130. where k B is Boltzmann's constant, in order to increase the number of available states <ref> [4] </ref>. This rule can even be considered to be a definition of temperature in terms of energy and entropy.
Reference: 5. <author> K. K. Likharev. </author> <title> Classical and quantum limitations on energy consumption in com-putation. </title> <journal> Int'l J. Theoretical Physics, </journal> 21(3/4):311-326, 1982. 
Reference-contexts: The dynamic power may then be reduced by slowing the speed of operation. Problems due to resistance will diminish as technology improves. Circuits built from exotic but existing low-temperature superconducting switches, such as Josephson junctions <ref> [5] </ref>, offer extremely low resistance to fast reversible changes of state and negligible leakage effects. Moreover, even with the high resistance and measurable leakage of conven-tional transistors at ordinary voltages and temperatures, scrl is still capable of much greater energy-efficiencies than conventional cmos circuits.
Reference: 6. <author> N. H. Margolus. </author> <title> Physics and Computation. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1988. </year>
Reference-contexts: To make the project more feasible, Flattop has the simplest parallel universal computer model the group is aware of: Margolus's Billiard Ball Model Cellular Automaton (BBMCA) <ref> [6] </ref>. The BBMCA is not the most convenient computer to program, but it is simple, universal, reversible, and scalable. Though the BBMCA model itself is only a two-dimensional cellular automaton, Flattop could in principle be wired in a 3-D mesh as well, for scalably executing reversible 3-D algorithms.
Reference: 7. <author> J.M. Rabaey. </author> <title> Digital Integrated Circuits: A Design Perspective. </title> <publisher> Prentice-Hall, </publisher> <year> 1996. </year> <note> http://infopad.EECS.Berkeley.EDU/~icdesign. </note>
Reference-contexts: Device parameters for the HP cmos 14 process, from HSPICE models. In general, the standard equations that we use in our analysis can be obtained from any modern VLSI textbook, such as <ref> [7] </ref>.
Reference: 8. <author> S. G. Younis. </author> <title> Asymptotically Zero Energy Computing Using Split-Level Charge Recovery Logic. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1994. </year>
Reference-contexts: Here, as in the study of heat engines, an adiabatic process is one that takes place without any heat flow into or out of the system. A few years ago, members of this group invented scrl <ref> [9, 8] </ref>, a particularly simple and elegant adiabatic circuit technique that allows construction of integrated, reversible, pipelined circuits using ordinary commercial cmos fabrication processes. scrl's operation is described in more detail in section 3. <p> Programming the initial conditions is somewhat difficult and byond the scope of this paper. 3 SCRL This section provides a very brief overview of the scrl circuit family. A more detailed and complete discussion may be found in <ref> [8] </ref>. The scrl [9] circuit family has several advantages over its predecessors in adiabatic logic. The main one is that scrl can be pipelined, allowing for continuously-running adiabatic circuits. <p> Basic scrl stages cannot compute non-inverting logic functions, but it is possible to compute non-inverting functions by providing an extra pair of "fast" rails that split before the main rails do, and re-combine after the main ones. (See <ref> [9, 8] </ref>.) These rails can be used to drive an extra level of logic (such as an inverter) to drive the inputs of the main logic. In this way, a single scrl stage can compute inverting or non-inverting logic functions. <p> Due to the relative simplicity of Flattop's circuits, a single non-inverting stage was needed and was implemented using "fast" rails. Additionally, some signals were distributed in dual rails. The Flattop array is implemented in so-called "3-phase scrl" <ref> [8] </ref> because it is the simplest version of scrl that doesn't depend on dynamic charge storage.
Reference: 9. <author> Saed G. Younis and Thomas F. Knight, Jr. </author> <title> Asymptotically zero energy split-level charge recovery logic. </title> <booktitle> In International Workshop on Low Power Design, </booktitle> <pages> pages 177-182, </pages> <year> 1994. </year>
Reference-contexts: Here, as in the study of heat engines, an adiabatic process is one that takes place without any heat flow into or out of the system. A few years ago, members of this group invented scrl <ref> [9, 8] </ref>, a particularly simple and elegant adiabatic circuit technique that allows construction of integrated, reversible, pipelined circuits using ordinary commercial cmos fabrication processes. scrl's operation is described in more detail in section 3. <p> Programming the initial conditions is somewhat difficult and byond the scope of this paper. 3 SCRL This section provides a very brief overview of the scrl circuit family. A more detailed and complete discussion may be found in [8]. The scrl <ref> [9] </ref> circuit family has several advantages over its predecessors in adiabatic logic. The main one is that scrl can be pipelined, allowing for continuously-running adiabatic circuits. This pipelining requires that each gate that computes a function be paired with another gate to compute the inverse of that function. <p> Basic scrl stages cannot compute non-inverting logic functions, but it is possible to compute non-inverting functions by providing an extra pair of "fast" rails that split before the main rails do, and re-combine after the main ones. (See <ref> [9, 8] </ref>.) These rails can be used to drive an extra level of logic (such as an inverter) to drive the inputs of the main logic. In this way, a single scrl stage can compute inverting or non-inverting logic functions.
References-found: 9

