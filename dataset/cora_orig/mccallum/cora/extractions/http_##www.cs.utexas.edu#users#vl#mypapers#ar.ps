URL: http://www.cs.utexas.edu/users/vl/mypapers/ar.ps
Refering-URL: http://www.cs.utexas.edu/users/risto/cs395t-cs/schedule.html
Root-URL: 
Title: Representing Action: Indeterminacy and Ramifications  
Author: Enrico Giunchiglia G. Neelakantan Kartha Vladimir Lifschitz 
Address: 16145 Genoa, Italy  1603 LBJ Freeway, Suite 780 Dallas, Texas 75234, USA  Austin, Texas 78712, USA  
Affiliation: DIST University of Genoa  i2 Technologies  University of Texas at Austin  
Abstract: We define and study a high-level language for describing actions, more expressive than the action language A introduced by Gelfond and Lif-schitz. The new language, AR, allows us to describe actions with indirect effects (ramifications), nondeterministic actions, and actions that may be impossible to execute. It has symbols for nonpropositional fluents and for the fluents that are exempt from the commonsense law of inertia. Temporal projection problems specified using the language AR can be represented as nested abnormality theories based on the situation calculus. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andrew Baker. </author> <title> Nonmonotonic reasoning in the framework of situation calculus. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 5-23, </pages> <year> 1991. </year>
Reference-contexts: The language A has been used as a tool for investigating the relationship between several other techniques for describing actions. For instance, in [11], the methods for formalizing actions in classical logic developed in [25] and [26], as well as the use of circumscription in <ref> [1] </ref>, are described as translations from A, and each of the translations is found to be sound and complete relative to the semantics of A. These theorems show that, for the action domains that can be represented in A, the three formalization methods produce equivalent results. <p> This idea was among the first examples of default reasoning that motivated the development of nonmonotonic logics, including circumscription. However, the first circumscriptive solution to the frame problem [22] turned out to be unsatisfactory [10]. Among the formalizations proposed in response to this criticism, <ref> [1] </ref> was particularly influential, because it could handle actions with indirect effects; see [12] on its limitations. A survey of nonmonotonic solutions to the frame problem can be found in [28].
Reference: [2] <author> Chitta Baral and Michael Gelfond. </author> <title> Representing concurrent actions in extended logic programming. </title> <booktitle> In Proc. of IJCAI-93, </booktitle> <pages> pages 866-871, </pages> <year> 1993. </year>
Reference-contexts: Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency <ref> [2] </ref>, dependent fluents [9] and static causal laws [21], [30], [19]. Combining these proposals in one action language is a topic for future work.
Reference: [3] <author> Patrick Doherty, Witold L ukaszewicz, </author> <title> and Andrzey Sza l as. Computing circumscription revisited: A reduction algorithm. </title> <journal> Journal of Automated Reasoning, </journal> <note> 1995. To appear. </note>
Reference-contexts: In Section 6 we show how temporal projection problems of this kind can be expressed in terms of the version of circumscription [22] called nested abnormality theories [18]. Reductions of this kind are of special interest in connection with recent advances in the automation of circumscriptive reasoning [6], <ref> [3] </ref>. The relation of this paper to earlier work on action is discussed in Section 7. Proofs are relegated to the appendix. Preliminary reports on this work are published as [14] and [8]. AR differs from the language AR 0 described in the first of these papers in two ways.
Reference: [4] <author> Phan Minh Dung. </author> <title> Representing actions in logic programming and its applications in database updates. </title> <booktitle> In Logic Programming: Proceedings of the Tenth Int'l Conf. on Logic Programming, </booktitle> <pages> pages 222-238, </pages> <year> 1993. </year>
Reference-contexts: Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters <ref> [4] </ref>, concurrency [2], dependent fluents [9] and static causal laws [21], [30], [19]. Combining these proposals in one action language is a topic for future work.
Reference: [5] <author> Charles Elkan. </author> <title> Reasoning about action in first-order logic. </title> <booktitle> In Proc. of the 1992 Canadian Conf. on Artificial Intelligence, </booktitle> <year> 1992. </year>
Reference-contexts: The assumption that "if a person has a telephone, he still has it after looking up a number in the telephone book" [24] is an example. Methods have been developed for expressing such "frame axioms" in a systematic and compact way [29], [26], <ref> [5] </ref>. An alternative approach to the frame problem is to formalize, once and for all, the commonsense law of inertia, which, in combination with any set of domain-specific effect axioms, would lead to exactly the same conclusions as the appropriate set of frame axioms.
Reference: [6] <author> Dov Gabbay and Hans Ohlbach. </author> <title> Quantifier elimination in second-order predicate logic. </title> <editor> In Bernhard Nebel, Charles Rich, and William Swartout, editors, </editor> <booktitle> Proc. of the Third Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 425-435, </pages> <year> 1992. </year>
Reference-contexts: In Section 6 we show how temporal projection problems of this kind can be expressed in terms of the version of circumscription [22] called nested abnormality theories [18]. Reductions of this kind are of special interest in connection with recent advances in the automation of circumscriptive reasoning <ref> [6] </ref>, [3]. The relation of this paper to earlier work on action is discussed in Section 7. Proofs are relegated to the appendix. Preliminary reports on this work are published as [14] and [8].
Reference: [7] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Representing action and change by logic programs. </title> <journal> Journal of Logic Programming, </journal> <volume> 17 </volume> <pages> 301-322, </pages> <year> 1993. </year>
Reference-contexts: Properties of actions can be conveniently described in specialized "action languages," such as the language A from <ref> [7] </ref>. Consider, for instance, the background knowledge about the effects of actions that is involved in the examples of commonsense reasoning above. Mary has performed three actions: jumping into the lake (J), getting out of the lake (G) and putting her hat on (P ). <p> The fluent C is noninertial. Noninertial fluents are needed also for expressing explicit definitions (Section 4.3). The next two sections of the paper describe the syntax and semantics of AR and relate this language to the action language A from <ref> [7] </ref>. Our work on the "debugging" of the semantics of AR has involved the verification of several properties of the language that can be naturally expected to hold for action languages; these properties are discussed in Section 4. <p> Theorem 1. Let D be a simple action description. For any action name A and any state , Res D (A; ) = fRes fl D (A; )g: An "effect proposition" of the action language A <ref> [7] </ref> is essentially a simple proposition (2) which does not include nonpropositional fluent names and in which C is atomic. The description of the semantics of such propositions in A is similar to the definition of Res fl D (A; ) given above. <p> Three approaches to the systematic study of actions that are being pursued today most actively are associated with the ideas of a causal theory [20], of a dynamical system [27], and of an action language <ref> [7] </ref>. Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency [2], dependent fluents [9] and static causal laws [21], [30], [19].
Reference: [8] <author> Enrico Giunchiglia, G. Neelakantan Kartha, and Vladimir Lifschitz. </author> <title> Actions with indirect effects (extended abstract). </title> <booktitle> In Working Notes of the Symposium on Extending Theories of Actions, </booktitle> <year> 1995. </year>
Reference-contexts: The relation of this paper to earlier work on action is discussed in Section 7. Proofs are relegated to the appendix. Preliminary reports on this work are published as [14] and <ref> [8] </ref>. AR differs from the language AR 0 described in the first of these papers in two ways. First, AR 0 did not include symbols for nonpropositional fluents (see the end of Section 4.4).
Reference: [9] <author> Enrico Giunchiglia and Vladimir Lifschitz. </author> <title> Dependent fluents. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> pages 1964-1969, </pages> <year> 1995. </year>
Reference-contexts: Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency [2], dependent fluents <ref> [9] </ref> and static causal laws [21], [30], [19]. Combining these proposals in one action language is a topic for future work. The circumscriptive approach to action presented in Section 6 uses nested abnormality theories to combine the "theory update" view of [31] with the syntax of the situation calculus.
Reference: [10] <author> Steve Hanks and Drew McDermott. </author> <title> Nonmonotonic logic and temporal projection. </title> <journal> Artificial Intelligence, </journal> <volume> 33(3) </volume> <pages> 379-412, </pages> <year> 1987. </year>
Reference-contexts: This idea was among the first examples of default reasoning that motivated the development of nonmonotonic logics, including circumscription. However, the first circumscriptive solution to the frame problem [22] turned out to be unsatisfactory <ref> [10] </ref>. Among the formalizations proposed in response to this criticism, [1] was particularly influential, because it could handle actions with indirect effects; see [12] on its limitations. A survey of nonmonotonic solutions to the frame problem can be found in [28]. <p> For a long time, the tradition was to explain every new approach with reference to a few standard examples, such as the blocks world or the shooting scenario from <ref> [10] </ref>. Competing approaches used to be evaluated and compared mostly in terms of their ability to handle these examples and 24 their enhancements. Such analysis does not say much about the range of applicability of each method.
Reference: [11] <author> G. Neelakantan Kartha. </author> <title> Soundness and completeness theorems for three formalizations of action. </title> <booktitle> In Proc. of IJCAI-93, </booktitle> <pages> pages 724-729, </pages> <year> 1993. </year>
Reference-contexts: The language A has been used as a tool for investigating the relationship between several other techniques for describing actions. For instance, in <ref> [11] </ref>, the methods for formalizing actions in classical logic developed in [25] and [26], as well as the use of circumscription in [1], are described as translations from A, and each of the translations is found to be sound and complete relative to the semantics of A.
Reference: [12] <author> G. Neelakantan Kartha. </author> <title> Two counterexamples related to Baker's approach to the frame problem. </title> <journal> Artificial Intelligence, </journal> <volume> 69 </volume> <pages> 379-391, </pages> <year> 1994. </year>
Reference-contexts: However, the first circumscriptive solution to the frame problem [22] turned out to be unsatisfactory [10]. Among the formalizations proposed in response to this criticism, [1] was particularly influential, because it could handle actions with indirect effects; see <ref> [12] </ref> on its limitations. A survey of nonmonotonic solutions to the frame problem can be found in [28]. It can be argued that the difference between the two kinds of theories of action|"classical" and "nonmonotonic"|is not as significant as commonly thought ([18], Section 5.3).
Reference: [13] <author> G. Neelakantan Kartha. </author> <title> A Mathematical Investigation of Reasoning about Actions. </title> <type> PhD thesis, </type> <institution> University of Texas at Austin, </institution> <year> 1995. </year> <note> (Available by anonymous ftp from ftp.cs.utexas.edu as /pub/techreports/tr95-17.ps). </note>
Reference-contexts: This theorem is technically more difficult than the others, and what is presented in this section is only an outline of the proof. A complete proof of a similar result can be found in Chapter 8 of <ref> [13] </ref>. 32 Recall that the result of circumscribing a predicate constant P , with object, function and/or predicate constants Z varied, in a sentence A is denoted by CIRC [A; P ; Z].
Reference: [14] <author> G. Neelakantan Kartha and Vladimir Lifschitz. </author> <title> Actions with indirect effects (preliminary report). </title> <booktitle> In Proc. of the Fourth Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 341-350, </pages> <year> 1994. </year>
Reference-contexts: The relation of this paper to earlier work on action is discussed in Section 7. Proofs are relegated to the appendix. Preliminary reports on this work are published as <ref> [14] </ref> and [8]. AR differs from the language AR 0 described in the first of these papers in two ways. First, AR 0 did not include symbols for nonpropositional fluents (see the end of Section 4.4). <p> If an action description D 0 is obtained from D by replacing some occurrences of F with F 0 then Res S [D = Res S [D 0 : As mentioned in the introduction, the earlier version of AR described in <ref> [14] </ref> treats indeterminate effect propositions differently, in a less satisfactory way. A problem with that version was that the assertion of Theorem 2 does not hold for it. An example communicated to us by Fangzhen Lin (Octo-ber 26, 1993) demonstrated the importance of verifying this replacement property.
Reference: [15] <author> G. Neelakantan Kartha and Vladimir Lifschitz. </author> <title> A simple formalization of actions using circumscription. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> pages 1970-1975, </pages> <year> 1995. </year>
Reference-contexts: The circumscriptive approach to action presented in Section 6 uses nested abnormality theories to combine the "theory update" view of [31] with the syntax of the situation calculus. Some computational experiments based on a similar use of circumscription are described in <ref> [15] </ref>. Acknowledgments We are grateful to Michael Gelfond, Fangzhen Lin, Norman McCain and Hudson Turner for comments on a draft of this paper. This work was partially supported by National Science Foundation under grant IRI-9306751. Appendix. Proofs A.1 Proof of Theorem 1 (Section 3.4) Theorem 1.
Reference: [16] <author> Vladimir Lifschitz. </author> <title> Restricted monotonicity. </title> <booktitle> In Proc. AAAI-93, </booktitle> <pages> pages 432-437, </pages> <year> 1993. </year>
Reference-contexts: The consequence relation defined above is nonmonotonic, because some consequences of D [ I can be lost when a proposition is added to D. Adding an initial condition, however, can only make the set of consequences bigger. This fact is a restricted monotonicity property in the sense of <ref> [16] </ref>. 19 6 Temporal Projection Problems as Abnormality Theories In this section, we assume that the underlying language has finitely many fluent names, each with a finite range, and finitely many action names. We restrict attention to finite action descriptions in this language.
Reference: [17] <author> Vladimir Lifschitz. </author> <title> Circumscription. In D.M. </title> <editor> Gabbay, C.J. Hogger, and J.A. Robinson, editors, </editor> <booktitle> The Handbook of Logic in AI and Logic Programming, </booktitle> <volume> volume 3, </volume> <pages> pages 298-352. </pages> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: Second, this circumscription can be computed us ing the following general fact (Proposition 3.4.1 from <ref> [17] </ref>): Theorem. Let E be a predicate expression without parameters, containing neither P nor Z.
Reference: [18] <author> Vladimir Lifschitz. </author> <title> Nested abnormality theories. </title> <journal> Artificial Intelligence, </journal> <volume> 74 </volume> <pages> 351-365, </pages> <year> 1995. </year>
Reference-contexts: In Section 6 we show how temporal projection problems of this kind can be expressed in terms of the version of circumscription [22] called nested abnormality theories <ref> [18] </ref>. Reductions of this kind are of special interest in connection with recent advances in the automation of circumscriptive reasoning [6], [3]. The relation of this paper to earlier work on action is discussed in Section 7. Proofs are relegated to the appendix. <p> We restrict attention to finite action descriptions in this language. An arbitrary temporal projection problem associated with such a description is encoded here, in a simple and modular fashion, as a problem of reasoning in a nested abnormality theory <ref> [18] </ref> based on the situation calculus. <p> The semantics of nested abnormality theories <ref> [18] </ref> is characterized by a map ' that translates blocks into sentences of the underlying language of classical logic. <p> First, introduce a new predicate constant Imposs, and let A (Imposs; F R 1 ; : : :; F R l ) be the conjunction of formulas (30)-(32) with :Imposs substituted for Poss. Propositions 1 and 2 from <ref> [18] </ref> allow us to reduce the result of applying ' to block (29) to the circumscription of Imposs, with F R 1 ; : : : ; F R l varied, in A (Imposs; F R 1 ; : : : ; F R l ).
Reference: [19] <author> Vladimir Lifschitz. </author> <title> Two components of an action language. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <note> 1997. To appear. </note>
Reference-contexts: Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency [2], dependent fluents [9] and static causal laws [21], [30], <ref> [19] </ref>. Combining these proposals in one action language is a topic for future work. The circumscriptive approach to action presented in Section 6 uses nested abnormality theories to combine the "theory update" view of [31] with the syntax of the situation calculus.
Reference: [20] <author> Fangzhen Lin and Yoav Shoham. </author> <title> Provably correct theories of action (preliminary report). </title> <booktitle> In Proc. AAAI-91, </booktitle> <pages> pages 349-354, </pages> <year> 1991. </year> <month> 36 </month>
Reference-contexts: More recently, several researchers attempted to overcome this problem and to discuss representing action in a methodical and theoretically sound way. Three approaches to the systematic study of actions that are being pursued today most actively are associated with the ideas of a causal theory <ref> [20] </ref>, of a dynamical system [27], and of an action language [7].
Reference: [21] <author> Norman McCain and Hudson Turner. </author> <title> A causal theory of ramifications and qualifications. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 1978-1984, </pages> <year> 1995. </year>
Reference-contexts: Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency [2], dependent fluents [9] and static causal laws <ref> [21] </ref>, [30], [19]. Combining these proposals in one action language is a topic for future work. The circumscriptive approach to action presented in Section 6 uses nested abnormality theories to combine the "theory update" view of [31] with the syntax of the situation calculus.
Reference: [22] <author> John McCarthy. </author> <title> Applications of circumscription to formalizing common sense knowledge. </title> <journal> Artificial Intelligence, </journal> <volume> 26(3) </volume> <pages> 89-116, </pages> <year> 1986. </year> <note> Reproduced in [23]. </note>
Reference-contexts: In Section 6 we show how temporal projection problems of this kind can be expressed in terms of the version of circumscription <ref> [22] </ref> called nested abnormality theories [18]. Reductions of this kind are of special interest in connection with recent advances in the automation of circumscriptive reasoning [6], [3]. The relation of this paper to earlier work on action is discussed in Section 7. Proofs are relegated to the appendix. <p> Situations. Intuitively, a situation "is the complete state of the universe at an instant of time" [24]. The universe of situations will include also an auxiliary object which stands for "undefined." It will help us represent actions that are not always executable. 4. Aspects. As in <ref> [22] </ref>, aspects will be used to distinguish between differ ent kinds of abnormality. <p> This idea was among the first examples of default reasoning that motivated the development of nonmonotonic logics, including circumscription. However, the first circumscriptive solution to the frame problem <ref> [22] </ref> turned out to be unsatisfactory [10]. Among the formalizations proposed in response to this criticism, [1] was particularly influential, because it could handle actions with indirect effects; see [12] on its limitations. A survey of nonmonotonic solutions to the frame problem can be found in [28].
Reference: [23] <author> John McCarthy. </author> <title> Formalizing common sense: papers by John McCarthy. </title> <publisher> Ablex, </publisher> <address> Norwood, NJ, </address> <year> 1990. </year>
Reference: [24] <author> John McCarthy and Patrick Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> volume 4, </volume> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year> <note> Reproduced in [23]. </note>
Reference-contexts: We will write this as impossible G if :L: In fact, this will be treated as an abbreviation for the proposition G causes False if :L: 4. The language AR has symbols for nonpropositional fluents. Generally, a "fluent" <ref> [24] </ref> is something that depends on the state of the world. For instance, L (being in the lake), W (being wet) and H (having the hat on) are fluents, because each can be false or true depending on the particular situation. <p> Values. The universe of values will be in a one-to-one correspondence with the union of the ranges of the fluent names of D. 3. Situations. Intuitively, a situation "is the complete state of the universe at an instant of time" <ref> [24] </ref>. The universe of situations will include also an auxiliary object which stands for "undefined." It will help us represent actions that are not always executable. 4. Aspects. As in [22], aspects will be used to distinguish between differ ent kinds of abnormality. <p> The assumption that "if a person has a telephone, he still has it after looking up a number in the telephone book" <ref> [24] </ref> is an example. Methods have been developed for expressing such "frame axioms" in a systematic and compact way [29], [26], [5].
Reference: [25] <author> Edwin Pednault. </author> <title> ADL: Exploring the middle ground between STRIPS and the situation calculus. </title> <editor> In Ronald Brachman, Hector Levesque, and Raymond Reiter, editors, </editor> <booktitle> Proc. of the First Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 324-332, </pages> <year> 1989. </year>
Reference-contexts: The language A has been used as a tool for investigating the relationship between several other techniques for describing actions. For instance, in [11], the methods for formalizing actions in classical logic developed in <ref> [25] </ref> and [26], as well as the use of circumscription in [1], are described as translations from A, and each of the translations is found to be sound and complete relative to the semantics of A.
Reference: [26] <author> Raymond Reiter. </author> <title> The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Vladimir Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <year> 1991. </year>
Reference-contexts: The language A has been used as a tool for investigating the relationship between several other techniques for describing actions. For instance, in [11], the methods for formalizing actions in classical logic developed in [25] and <ref> [26] </ref>, as well as the use of circumscription in [1], are described as translations from A, and each of the translations is found to be sound and complete relative to the semantics of A. <p> The assumption that "if a person has a telephone, he still has it after looking up a number in the telephone book" [24] is an example. Methods have been developed for expressing such "frame axioms" in a systematic and compact way [29], <ref> [26] </ref>, [5]. An alternative approach to the frame problem is to formalize, once and for all, the commonsense law of inertia, which, in combination with any set of domain-specific effect axioms, would lead to exactly the same conclusions as the appropriate set of frame axioms.
Reference: [27] <editor> Erik Sandewall. Features and fluents, </editor> <volume> volume 1. </volume> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: Three approaches to the systematic study of actions that are being pursued today most actively are associated with the ideas of a causal theory [20], of a dynamical system <ref> [27] </ref>, and of an action language [7]. Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency [2], dependent fluents [9] and static causal laws [21], [30], [19].
Reference: [28] <author> Erik Sandewall and Yoav Shoham. </author> <title> Non-monotonic temporal reasoning. In D.M. </title> <editor> Gabbay, C.J. Hogger, and J.A. Robinson, editors, </editor> <booktitle> The Handbook of Logic in AI and Logic Programming, </booktitle> <volume> volume 4, </volume> <pages> pages 439-498. </pages> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: Among the formalizations proposed in response to this criticism, [1] was particularly influential, because it could handle actions with indirect effects; see [12] on its limitations. A survey of nonmonotonic solutions to the frame problem can be found in <ref> [28] </ref>. It can be argued that the difference between the two kinds of theories of action|"classical" and "nonmonotonic"|is not as significant as commonly thought ([18], Section 5.3).
Reference: [29] <author> Lenhart Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyburg, R. Loui, and G. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defeasible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer, </publisher> <year> 1990. </year>
Reference-contexts: The assumption that "if a person has a telephone, he still has it after looking up a number in the telephone book" [24] is an example. Methods have been developed for expressing such "frame axioms" in a systematic and compact way <ref> [29] </ref>, [26], [5]. An alternative approach to the frame problem is to formalize, once and for all, the commonsense law of inertia, which, in combination with any set of domain-specific effect axioms, would lead to exactly the same conclusions as the appropriate set of frame axioms.
Reference: [30] <author> Hudson Turner. </author> <title> Representing actions in logic programs and default theories: a situation calculus approach. </title> <journal> Journal of Logic Programming, </journal> <note> 1997. To appear. 37 </note>
Reference-contexts: Some extensions of the original action language A proposed in the literature include features that are not incorporated in the language AR studied in this paper: parameters [4], concurrency [2], dependent fluents [9] and static causal laws [21], <ref> [30] </ref>, [19]. Combining these proposals in one action language is a topic for future work. The circumscriptive approach to action presented in Section 6 uses nested abnormality theories to combine the "theory update" view of [31] with the syntax of the situation calculus.
Reference: [31] <author> Marianne Winslett. </author> <title> Reasoning about action using a possible models approach. </title> <booktitle> In Proc. AAAI-88, </booktitle> <pages> pages 89-93, </pages> <year> 1988. </year> <month> 38 </month>
Reference-contexts: Combining these proposals in one action language is a topic for future work. The circumscriptive approach to action presented in Section 6 uses nested abnormality theories to combine the "theory update" view of <ref> [31] </ref> with the syntax of the situation calculus. Some computational experiments based on a similar use of circumscription are described in [15]. Acknowledgments We are grateful to Michael Gelfond, Fangzhen Lin, Norman McCain and Hudson Turner for comments on a draft of this paper.
References-found: 31

