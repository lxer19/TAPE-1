URL: http://www.cs.toronto.edu/~fpitt/papers/proposal.ps
Refering-URL: http://www.cs.toronto.edu/~fpitt/research.html
Root-URL: 
Title: A Quantifier-Free Theory based on a String Algebra for NC 1 (Research Proposal)  
Author: Franc~ois Pitt 
Date: 1996 April 11  
Abstract: I outline a project of research, including problems I wish to solve, approaches to solving those problems, and possible extensions to the research. In the appendix, I present a string algebra L 1 which contains exactly the functions in NC 1 , and define a corresponding quantifier-free theory T 1 which should capture NC 1 reasoning. (1)
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bill Allen. </author> <title> Arithmetizing uniform NC. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 53 </volume> <pages> 1-50, </pages> <year> 1991. </year>
Reference: [2] <author> Stephen Bellantoni and Stephen Cook. </author> <title> A new recursion-theoretic characterization of the polytime functions. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 97-110, </pages> <year> 1992. </year>
Reference: [3] <author> Stephen Bloch. </author> <title> Functional characterizations of uniform log-depth and polylog-depth circuit families. </title> <booktitle> In Proceedings of IEEE 7th Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 193-206, </pages> <address> Boston, Massachusetts, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Because COMP and CRN preserve the size and depth of the circuits for the functions involved, all functions in L 1 are in NC 1 . To prove the inclusion in the other direction, we use Bloch's result <ref> [3] </ref>. As we will see in the following sections, it is easy to define all of Bloch's initial functions in L 1 . Also, we can easily simulate Bloch's "very safe divide-and-conquer recursion" using TRN. <p> The definitions follow and are inspired by similar definitions in Bloch's paper <ref> [3] </ref>. (The tuple function is defined in terms of an auxiliary function tuple which has an extra parameter specifying the length to which each value should be padded.) tuple 1 (x; z) = ls 0 (x; z) tuple 2k (~x k ; ~y k ; z) = tuple k (~x k
Reference: [4] <author> Samuel R. Buss. </author> <title> The Boolean formula value problem is in ALOGTIME. </title> <journal> Journal of the Association for Computing Machinery, </journal> <pages> pages 123-131, </pages> <year> 1987. </year>
Reference: [5] <author> Samuel R. Buss. </author> <title> Polynomial size proofs of the propositional pigeonhole principle. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 52(4) </volume> <pages> 916-927, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: ; x k ) (i 1 b b i k ) k (~" k ) = " iff b k (x 1 ; : : : ; x k ) (i 1 = b i 2 ) ^ b ^ b (i k1 = b i k )) Following Buss <ref> [5] </ref>, we can now define functions which implement carry-save addition: CScar to compute the carry bits and CSadd to compute the addition bits. <p> yJ) (x # Iy) otherwise jxj = &lt; 1 x if x = "; 0; 1 2 (x) ? l jxJj 0; jxJj 1 otherwise And a couple of functions defined by TRN 2 which count the number of 1's in the string x, using the carry-save technique of Buss <ref> [5] </ref>.
Reference: [6] <author> Peter Clote. </author> <title> Sequential, machine-independent characterizations of the parallel complexity classes ALOGTIME, AC k , NC k , and NC. </title> <editor> In S. R. Buss and P. Scott, editors, </editor> <booktitle> Feasible Mathematics, </booktitle> <pages> pages 49-69. </pages> <publisher> Birkhauser, </publisher> <year> 1989. </year>
Reference-contexts: Note that when we defined less n , we used Clote's "programming trick" <ref> [6] </ref> of making a sweep through the bits of the strings x and y, appending a 1 when some condition is met so that the final composition with OR yields 1 iff the condition was met at some position.
Reference: [7] <author> Peter Clote. ALOGTIME and a conjecture of S. A. </author> <title> Cook. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 6 </volume> <pages> 57-106, </pages> <year> 1992. </year> <title> Extended abstract in: </title> <booktitle> Proceedings of IEEE Symposium on Logic in Computer Science, </booktitle> <address> Philadelphia, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: the connections between the relationship of F to eF and the relationship of T 1 to PV . (c) Study the connections between the relationship of NC 1 to P and the relationship of T 1 to PV . 3. (a) Compare T 1 to Clote's ALV or ALV 0 <ref> [7, 8] </ref>. (b) Define a first-order theory based on T 1 and compare it to Clote and Takeuti's TNC 0 [9].
Reference: [8] <author> Peter Clote. </author> <title> On polynomial size Frege proofs of certain combinatorial principles. </title> <editor> In P. Clote and J. Krajcek, editors, </editor> <booktitle> Arithmetic, Proof Theory and Computational Complexity, </booktitle> <pages> pages 162-184. </pages> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: the connections between the relationship of F to eF and the relationship of T 1 to PV . (c) Study the connections between the relationship of NC 1 to P and the relationship of T 1 to PV . 3. (a) Compare T 1 to Clote's ALV or ALV 0 <ref> [7, 8] </ref>. (b) Define a first-order theory based on T 1 and compare it to Clote and Takeuti's TNC 0 [9].
Reference: [9] <author> Peter Clote and Gaisi Takeuti. </author> <title> First order bounded arithmetic and small Boolean circuit complexity classes. </title> <note> Manuscript (to appear in Feasible Mathematics II), </note> <month> December </month> <year> 1994. </year>
Reference-contexts: the connections between the relationship of NC 1 to P and the relationship of T 1 to PV . 3. (a) Compare T 1 to Clote's ALV or ALV 0 [7, 8]. (b) Define a first-order theory based on T 1 and compare it to Clote and Takeuti's TNC 0 <ref> [9] </ref>.
Reference: [10] <author> Stephen A. Cook and Alasdair Urquhart. </author> <title> Functional interpretations of feasibly constructive arithmetic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 63(2) </volume> <pages> 103-200, </pages> <month> September </month> <year> 1993. </year>
Reference: [11] <author> Gaisi Takeuti. </author> <title> Frege proof system and TNC 0 . Manuscript, </title> <year> 1994. </year>
References-found: 11

