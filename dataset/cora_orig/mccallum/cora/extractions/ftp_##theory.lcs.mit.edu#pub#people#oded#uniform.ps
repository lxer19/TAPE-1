URL: ftp://theory.lcs.mit.edu/pub/people/oded/uniform.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/zk.html
Root-URL: 
Title: A Uniform-Complexity Treatment of Encryption and Zero-Knowledge  
Author: Oded Goldreich 
Note: Research was partially supported by the Fund for Basic Research Administered by the Israeli Academy of Sciences and Humanities. Revision of this work was supported by grant No. 89-00312 from the United States Israel Binational Science Foundation (BSF), Jerusalem, Israel.  
Date: July 1991  
Address: Israel.  
Affiliation: Computer Science Dept., Technion, Haifa,  
Abstract: We provide a treatment of encryption and zero-knowledge in terms of uniform complexity measures. This treatment is appropriate for cryptographic settings modeled by probabilistic polynomial-time machines. Our uniform treatment allows to construct secure encryption schemes and zero-knowledge proof systems (for all INP) using only uniform complexity assumptions. We show that uniform variants of the two definitions of security, presented in the pioneering work of Goldwasser and Micali, are in fact equivalent. Such a result was known before only for the non-uniform formalization. Non-uniformity is implicit in all previous treatments of zero-knowledge in the sense that a zero-knowledge proof is required to "leak no knowledge" on all instances. For practical purposes, it suffices to require that it is infeasible to find instances on which a zero-knowledge proof "leaks knowledge". We show how to construct such zero-knowledge proof systems for every language in INP, using only a uniform complexity assumption. Properties of uniformly zero-knowledge proofs are investigated and their utility is demonstrated. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Babai, L., </author> <title> "Trading Group Theory for Randomness", </title> <booktitle> Proc. 17th STOC, </booktitle> <year> 1985, </year> <pages> pp. 421-429. </pages>
Reference-contexts: Contradiction to the hypothesis that M flfl simulates B flfl A follows. Hence, the hybrids are indeed polynomially indistinguishable and the lemma follows. 2 4.3 Uniformly Zero-Knowledge Proof Systems for NP and MA Interactive proof systems were introduced as protocols (games) between infinitely powerful provers and probabilistic polynomial-time verifiers <ref> [19, 1] </ref>. In practical applications it is often the case that the prover is also a probabilistic polynomial-time interactive machine and that its "computational advantage" over the verifier is in having a-priori knowledge. <p> Hence, without loss of generality, y mentioned in the completeness condition satisfies jyj = poly (jxj). Remark 19 : Probabilistic polynomial-time interactive proofs exist exactly for the languages in the class IMA defined in <ref> [1] </ref> 9 . The class IMA seem a conservative extension of INP (in contrast 9 The class IMA consists of all languages L such that there is an interactive proof for L in which the prover sends the first and only message.
Reference: [2] <author> Ben-Or, M., O. Goldreich, S. Goldwasser, J. Hastad, J. Kilian, S. Micali, and P. Rogaway, </author> <title> "Everything Provable is Provable in Zero-Knowledge", </title> <booktitle> Advances in Cryptology - Crypto 88, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 403, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> pp. 37-56. </pages>
Reference-contexts: In addition we believe that, in its details, the proof appearing here is more elegant than the one appearing in [15]. The proof of Proposition 4, carefully adapts the ideas of [22] to the uniform setting. It is worthwhile mentioning that the alternative ideas of <ref> [2] </ref> which build on [14] fail here. Proof of Proposition 3. The proof follows ideas of [15], but there are some modifications in the constructions which are due to the fact that we cannot use non-uniformity here. <p> Here, we use the same transformation, but the proof that the transformation produces a (uniformly) zero-knowledge system is different as we cannot use non-uniformity in the reductions. The ideas in the alternative transformation of <ref> [2] </ref> (also demonstrating that "all IIP is in zero-knowledge") are not applicable here, since they require first to transform IMA to " IMA with no error on yes-instances".
Reference: [3] <author> Blum, M., </author> <title> "Coin Flipping by Phone", </title> <booktitle> IEEE Spring COMPCOM, </booktitle> <pages> pp. 133-137, </pages> <month> February </month> <year> 1982. </year> <journal> See also SIGACT News, </journal> <volume> Vol. 15, No. 1, </volume> <year> 1983. </year>
Reference-contexts: For conventions regarding the commitment scheme C, see Appendix B. P1) In this step, the prover commits itself to y (commitment c 2 below) and starts a subprotocol of "coin-tossing-into-the-well" <ref> [3] </ref> by committing itself to a randomly chosen string (commitment c 1 below).
Reference: [4] <author> Blum, M., and Micali, S., </author> <title> "How to Generate Cryptographically Strong Sequences of Pseudo-Random Bits", </title> <journal> SIAM Jour. on Computing, </journal> <volume> Vol. 13, </volume> <year> 1984, </year> <pages> pp. 850-864. </pages> <note> Extended abstract in FOCS 82. </note>
Reference-contexts: In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from <ref> [4, 29, 13, 21, 20] </ref> (resp. [18, 29]), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators [13, 21, 20], which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. <ref> [4] </ref>). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes [18, 29, 5]. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols.
Reference: [5] <author> Blum, M., and S. Goldwasser, </author> <title> "An Efficient Probabilistic Public-Key Encryption Scheme which hides all partial information", </title> <booktitle> Advances in Cryptology: Proc. of Crypto 84, </booktitle> <editor> ed. B Blakely, </editor> <booktitle> Springer Verlag Lecture Notes in Computer Science, </booktitle> <volume> Vol. 196, </volume> <pages> pp. 289-302. </pages>
Reference-contexts: In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators [13, 21, 20], which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. [4]). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes <ref> [18, 29, 5] </ref>. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols. The security of these schemes, which is analogous to the security of encryption schemes, is usually defined in terms of non-uniform complexity. Here we provide a uniform treatment of their security.
Reference: [6] <author> Brassard, G., D. Chaum, and C. Crepeau, </author> <title> "Minimum Disclosure Proofs of knowledge", </title> <journal> JCSS, </journal> <volume> Vol. 37, No. 2, </volume> <year> 1988, </year> <pages> pp. 156-189. </pages>
Reference-contexts: Remark 17 : In the above definition, secrecy is with respect to probabilistic polynomial-time machines, while nonambiguousity is absolute (i.e. even with respect to non-uniform machines C fl with no time bounds). A dual definition, requiring information theoretic secrecy and infeasibility of creating ambiguousities, is presented in <ref> [8, 10, 6] </ref>. The following results establish sufficient conditions (which are also necessary) for the existence of secure bit commitments. Theorem (Naor [24]): Assuming the existence of (uniformly) pseudorandom generators, there exist (uniformly) secure bit commitment schemes. <p> The soundness of the proof system does not rely on an intractability assumption concerning the party which provides the evidence. This notion should not be confused with the notion of an interactive argument (introduced in <ref> [8, 10, 6] </ref> see also [9]) where the soundness condition relies on the assumption that the prover is probabilistic polynomial-time.
Reference: [7] <author> Brassard, G., and C. Crepeau, </author> <title> "Zero-Knowledge Simulation of Boolean Circuits", </title> <booktitle> Advances in Cryptology - Crypto86 (proceedings), A.M. </booktitle> <editor> Odlyzko (ed.), Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. 263, </volume> <pages> pp. 223-233, </pages> <year> 1987. </year>
Reference: [8] <author> Brassard, G., and C. Crepeau, </author> <title> "Non-Transitive Transfer of Confidence: A Perfect Zero-Knowledge Interactive Protocol for SAT and Beyond", </title> <booktitle> Proc. 27th FOCS, </booktitle> <pages> pp. 188-195, </pages> <year> 1986. </year>
Reference-contexts: Remark 17 : In the above definition, secrecy is with respect to probabilistic polynomial-time machines, while nonambiguousity is absolute (i.e. even with respect to non-uniform machines C fl with no time bounds). A dual definition, requiring information theoretic secrecy and infeasibility of creating ambiguousities, is presented in <ref> [8, 10, 6] </ref>. The following results establish sufficient conditions (which are also necessary) for the existence of secure bit commitments. Theorem (Naor [24]): Assuming the existence of (uniformly) pseudorandom generators, there exist (uniformly) secure bit commitment schemes. <p> The soundness of the proof system does not rely on an intractability assumption concerning the party which provides the evidence. This notion should not be confused with the notion of an interactive argument (introduced in <ref> [8, 10, 6] </ref> see also [9]) where the soundness condition relies on the assumption that the prover is probabilistic polynomial-time.
Reference: [9] <author> Brassard, G., C. Crepeau, and M. Yung, </author> <title> "Everything in NP can be argued in perfect zero-knowledge in a bounded number of rounds", </title> <booktitle> Proc. of the 16th ICALP, </booktitle> <month> July </month> <year> 1989. </year>
Reference-contexts: The soundness of the proof system does not rely on an intractability assumption concerning the party which provides the evidence. This notion should not be confused with the notion of an interactive argument (introduced in [8, 10, 6] see also <ref> [9] </ref>) where the soundness condition relies on the assumption that the prover is probabilistic polynomial-time. Though zero-knowledge arguments suffice for the practical purposes we consider, we stick to the more conservative formulation of interactive proof systems (as introduced in [19]), a formulation which we are able to meet as well.
Reference: [10] <author> Chaum, D., </author> <title> "Demonstrating that a Public Predicate can be Satisfied Without Revealing Any Information About How", </title> <booktitle> Advances in Cryptology - Crypto86 (proceedings), A.M. </booktitle> <editor> Odlyzko (ed.), Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. 263, </volume> <pages> pp. 195-199, </pages> <year> 1987. </year>
Reference-contexts: Remark 17 : In the above definition, secrecy is with respect to probabilistic polynomial-time machines, while nonambiguousity is absolute (i.e. even with respect to non-uniform machines C fl with no time bounds). A dual definition, requiring information theoretic secrecy and infeasibility of creating ambiguousities, is presented in <ref> [8, 10, 6] </ref>. The following results establish sufficient conditions (which are also necessary) for the existence of secure bit commitments. Theorem (Naor [24]): Assuming the existence of (uniformly) pseudorandom generators, there exist (uniformly) secure bit commitment schemes. <p> The soundness of the proof system does not rely on an intractability assumption concerning the party which provides the evidence. This notion should not be confused with the notion of an interactive argument (introduced in <ref> [8, 10, 6] </ref> see also [9]) where the soundness condition relies on the assumption that the prover is probabilistic polynomial-time.
Reference: [11] <author> Chor, B., and E. Kushilevitz, </author> <title> "Secret Sharing Over Infinite Domains", </title> <booktitle> Crypto89, </booktitle> <year> 1989. </year>
Reference: [12] <author> Goldreich, O., and H. Krawczyk, </author> <title> "On Sequential and Parallel Composition of Zero-Knowledge Protocols", </title> <booktitle> 17th International Colloquium on Automata Languages and Programming, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 443, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> pp. 268-282. </pages>
Reference-contexts: Definition 7 only requires that for every B fl there exists a machine M fl simulating (A; B fl ) conversations. A stronger requirement, met in all known cases, is that there exists a universal machine simulating (A; B fl ) conversations by using B fl as a black-box <ref> [25, 17, 12] </ref>. Following are some remarks concerning the relations among these parameters: * Consider the definitions in which a-priori information is given to the potential "knowledge-receiver" in form of an auxiliary input. <p> It has been showed that non-uniform zero-knowledge with auxiliary input is preserved under sequential composition [25, 17]. On the other hand, the "semi-uniform" formalization 7 with no auxiliary input is not preserved under sequential composition <ref> [12] </ref>. Here we demonstrate that the auxiliary input is the only essential ingredient in proving preservation of zero-knowledge under sequential composition. Namely Lemma 1 (Sequential Composition Lemma): Let A be a probabilistic polynomial-time interactive machine which is uniformly zero-knowledge (over S), and Q () be a polynomial.
Reference: [13] <author> Goldreich O., and L.A. Levin, </author> <title> "Hard-core Predicates for any One-Way Function". </title> <booktitle> Proc. of the 21th ACM Symp. on Theory of Computing (STOC), </booktitle> <pages> pp. 25-32, </pages> <year> 1989. </year>
Reference-contexts: In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from <ref> [4, 29, 13, 21, 20] </ref> (resp. [18, 29]), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators <ref> [13, 21, 20] </ref>, which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. [4]). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes [18, 29, 5]. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols.
Reference: [14] <author> Goldreich, O., Y. Mansour, and M. </author> <title> Sipser "Interactive Proof Systems: Provers that Never Fail and Random Selection", </title> <booktitle> 28th FOCS, </booktitle> <pages> pp. 449-461, </pages> <year> 1987. </year>
Reference-contexts: In addition we believe that, in its details, the proof appearing here is more elegant than the one appearing in [15]. The proof of Proposition 4, carefully adapts the ideas of [22] to the uniform setting. It is worthwhile mentioning that the alternative ideas of [2] which build on <ref> [14] </ref> fail here. Proof of Proposition 3. The proof follows ideas of [15], but there are some modifications in the constructions which are due to the fact that we cannot use non-uniformity here. <p> However, the transformation of IMA to " IMA with no error on yes-instances" presented in <ref> [14] </ref> requires powerful provers which are not probabilistic polynomial-time machines with probabilistic polynomial-time generated auxiliary input. Let L 2 IMA and R L be the probabilistic polynomial-time witness-checking algorithm for L, guaranteed by the definition of IMA.
Reference: [15] <author> Goldreich, O., S. Micali, and A. Wigderson, </author> <title> "Proofs that Yield Nothing But their Validity and a Methodology of Cryptographic Protocol Design", </title> <note> To appear in JACM, </note> <year> 1991. </year>
Reference-contexts: It is thus not surprising that all the constructions of zero-knowledge proof systems for INP-complete languages (e.g. <ref> [15] </ref>), employ non-uniform complexity assumptions. Clearly, for practical purposes it suffices to require that it is infeasible to find instances on which a zero-knowledge proof system "leak knowledge". <p> Such (possibly weaker) zero-knowledge proof systems can be employed within cryptographic protocols, and in particular in the automatic generation of cryptographic protocols for any computable game (cf. [30, 16]). We formalize this (possibly weaker) variant of zero-knowledge, and show (following the ideas in <ref> [15] </ref>) how to construct such zero-knowledge proof systems for every language in INP using only a uniform complexity assumption (e.g. the existence of one-way functions). <p> In particular, the uniformly secure primitives (i.e. encryption and zero-knowledge proofs for all languages in INP) can be constructed using only uniform complexity assumptions. This should be confronted with the (seemingly stronger) non-uniform assumptions used in the construction of the non-uniformly secure primitives (cf. <ref> [18, 15] </ref>). However, something is lost when relying on these (seemingly weaker) uniform assumptions. Namely, the security we obtain is only against the (seemingly weaker) uniform adversaries. We believe that this loss in security is immaterial. <p> Convention 3 is used in an essential way in the proof of Proposition 2. 2.2 Interactive Machines (Protocols) The notion of an interactive machine, suggested by M. Blum, is the key to a formalization of the notion of a protocol (cf. <ref> [19, 15] </ref>). We assume that the reader is familiar with this notion, and present some conventions regarding interactive machines. 4 Convention 4 : Let = (A; B) be a pair of (probabilistic) interactive machines (i.e. a "two--party protocol"). <p> We rely on the fact that fX n Y n Z n g n2 IN , not merely fZ n g n2 IN , is polynomial-time 20 has a (non-uniformly) zero-knowledge interactive proof in which the prover is a probabilistic polynomial-time machine which gets an NP-witness as an auxiliary input <ref> [15] </ref>. The fact that the prover is probabilistic polynomial-time is crucial for the cryptographic applicability of these zero-knowledge proofs. <p> We prove Theorem 2 in two steps. We start by proving the claim of Theorem 2 only for languages in INP (see Proposition 3 below). This is done by showing that the (probabilistic polynomial-time) interactive proof for Graph Colorability (i.e. G3C) presented in <ref> [15] </ref> is uniformly zero-knowledge 10 . The proof, which carefully adapts the ideas of [15] to the uniform setting, uses a uniform intractability assumption (instead of the non-uniform assumption used in [15]). <p> This is done by showing that the (probabilistic polynomial-time) interactive proof for Graph Colorability (i.e. G3C) presented in <ref> [15] </ref> is uniformly zero-knowledge 10 . The proof, which carefully adapts the ideas of [15] to the uniform setting, uses a uniform intractability assumption (instead of the non-uniform assumption used in [15]). The proof of Theorem 2 is completed by using a zero-knowledge proof system for INP to prove membership in languages in IMA (see Proposition 4 below). <p> This is done by showing that the (probabilistic polynomial-time) interactive proof for Graph Colorability (i.e. G3C) presented in <ref> [15] </ref> is uniformly zero-knowledge 10 . The proof, which carefully adapts the ideas of [15] to the uniform setting, uses a uniform intractability assumption (instead of the non-uniform assumption used in [15]). The proof of Theorem 2 is completed by using a zero-knowledge proof system for INP to prove membership in languages in IMA (see Proposition 4 below). The interactive proof for Graph Colorability presented in [15] consists of polynomially many sequential applications of the same atomic protocol. <p> the uniform setting, uses a uniform intractability assumption (instead of the non-uniform assumption used in <ref> [15] </ref>). The proof of Theorem 2 is completed by using a zero-knowledge proof system for INP to prove membership in languages in IMA (see Proposition 4 below). The interactive proof for Graph Colorability presented in [15] consists of polynomially many sequential applications of the same atomic protocol. Each execution of the atomic protocol adds "stochastic confidence" towards believing the claim (this statement is given precise meaning in Definition 11 below). <p> Demonstrating that the atomic protocol is uniformly zero-knowledge, and using the Sequential Composition Lemma we complete the first step of the proof of Theorem 2. 10 We do not know whether the <ref> [15] </ref> interactive proof can be proven (non-uniformly) zero-knowledge assuming only a uniform intractability assumption. This holds also for the "semi-uniform" formulation of zero-knowledge in which non-uniformity is present only in the universal quantification over all x 2 G3C. <p> Then every language in IMA has a uniformly zero-knowledge proof system. We conclude this section with the proofs of Proposition 3 and 4. As stated above, the proof of Proposition 3, carefully adapts the ideas of <ref> [15] </ref> to the uniform setting. In addition we believe that, in its details, the proof appearing here is more elegant than the one appearing in [15]. The proof of Proposition 4, carefully adapts the ideas of [22] to the uniform setting. <p> As stated above, the proof of Proposition 3, carefully adapts the ideas of <ref> [15] </ref> to the uniform setting. In addition we believe that, in its details, the proof appearing here is more elegant than the one appearing in [15]. The proof of Proposition 4, carefully adapts the ideas of [22] to the uniform setting. It is worthwhile mentioning that the alternative ideas of [2] which build on [14] fail here. Proof of Proposition 3. The proof follows ideas of [15], but there are some modifications in the constructions which <p> here is more elegant than the one appearing in <ref> [15] </ref>. The proof of Proposition 4, carefully adapts the ideas of [22] to the uniform setting. It is worthwhile mentioning that the alternative ideas of [2] which build on [14] fail here. Proof of Proposition 3. The proof follows ideas of [15], but there are some modifications in the constructions which are due to the fact that we cannot use non-uniformity here. The protocol we prove to be a uniformly zero-knowledge weak interactive for Graph 3-Colorability is exactly the basic step in the zero-knowledge proof system of [15]. <p> proof follows ideas of <ref> [15] </ref>, but there are some modifications in the constructions which are due to the fact that we cannot use non-uniformity here. The protocol we prove to be a uniformly zero-knowledge weak interactive for Graph 3-Colorability is exactly the basic step in the zero-knowledge proof system of [15]. For sake of self-containment, we repeat the protocol here. Protocol 1 Inputs: The common input is a 3-colorable graph, denoted G (V; E). The auxiliary input to the prescribed prover is a legal 3-colouring of the vertices, denote : V 7! f1; 2; 3g.
Reference: [16] <author> Goldreich, O., S. Micali, and A. Wigderson, </author> <title> "How to Play any Mental Game or A Completeness Theorem for Protocols with Honest Majority", </title> <booktitle> Proc. of 19th STOC, </booktitle> <pages> pp. 218-229, </pages> <year> 1987. </year>
Reference-contexts: Such (possibly weaker) zero-knowledge proof systems can be employed within cryptographic protocols, and in particular in the automatic generation of cryptographic protocols for any computable game (cf. <ref> [30, 16] </ref>). We formalize this (possibly weaker) variant of zero-knowledge, and show (following the ideas in [15]) how to construct such zero-knowledge proof systems for every language in INP using only a uniform complexity assumption (e.g. the existence of one-way functions). <p> of M fl and M fl 1 ) into a distinguisher of C (Y n ) from C (1 m ), in contradiction to the security of the commitment scheme C. 3 Combining Claims 4.1 through 4.4, Proposition 4 follows. 2 5 Discussion Yao [30] and Goldreich, Micali and Wigderson <ref> [16] </ref> presented methods for automatically constructing (two-party and multi-party) fault-tolerant protocols for any computable game. <p> Here we only point out that if the inputs to the game are generated by probabilistic procedures of complexity comparable to that of the game, then the constructions of <ref> [30, 16] </ref> can be carried out using uniform complexity assumptions. In particular, we will use uniformly secure public-key encryption and uniformly secure zero-knowledge proof systems for languages in INP.
Reference: [17] <author> Goldreich, O., and Y. Oren, </author> <title> "Definitions and Properties of Zero-Knowledge Proof Systems", </title> <institution> TR-610, Computer Science Dept., Technion, Haifa, Israel. </institution> <note> Submitted to Jour. of Cryptology. </note>
Reference-contexts: Definition 7 only requires that for every B fl there exists a machine M fl simulating (A; B fl ) conversations. A stronger requirement, met in all known cases, is that there exists a universal machine simulating (A; B fl ) conversations by using B fl as a black-box <ref> [25, 17, 12] </ref>. Following are some remarks concerning the relations among these parameters: * Consider the definitions in which a-priori information is given to the potential "knowledge-receiver" in form of an auxiliary input. <p> Hence, using a non-uniform formalization without introducing an auxiliary input to the machines (and in particular to B fl ) is not satisfactory. * Formulating zero-knowledge protocols in a way which allows a-priori information to the parties is crucial to all known cryptographic applications of zero-knowledge (cf. <ref> [25, 17] </ref>). This point is demonstrated by considering the sequential composition of zero-knowledge protocols. As we shall see in the next subsection, the formulation of zero-knowledge with respect to auxiliary input allows to prove a sequential composition lemma (even for nonconstant number of repetitions). <p> Namely, if A is uniformly (resp., non-uniformly) zero-knowledge in the stronger sense described in item (3) above, then A is uniformly (resp., non-uniformly) zero-knowledge with respect to auxiliary input <ref> [25, 17] </ref>. 4.2 Sequential Composition of Uniformly Zero-Knowledge Protocols A desired property of zero-knowledge protocols is that their sequential composition is zero-knowledge as well. It has been showed that non-uniform zero-knowledge with auxiliary input is preserved under sequential composition [25, 17]. <p> A is uniformly (resp., non-uniformly) zero-knowledge with respect to auxiliary input <ref> [25, 17] </ref>. 4.2 Sequential Composition of Uniformly Zero-Knowledge Protocols A desired property of zero-knowledge protocols is that their sequential composition is zero-knowledge as well. It has been showed that non-uniform zero-knowledge with auxiliary input is preserved under sequential composition [25, 17]. On the other hand, the "semi-uniform" formalization 7 with no auxiliary input is not preserved under sequential composition [12]. Here we demonstrate that the auxiliary input is the only essential ingredient in proving preservation of zero-knowledge under sequential composition. <p> This impression is changed once one realizes that the parties may act "differently" (and/or on different parts of their inputs) in the various phases. These changes can be monitored by the other party (e.g., the prescribed B). Proof (following ideas of <ref> [25, 17] </ref>): Let B fl be an arbitrary probabilistic polynomial-time interactive machine.
Reference: [18] <author> Goldwasser, S., and S. Micali, </author> <title> "Probabilistic Encryption", </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: 1 Introduction In this paper we provide a treatment of the notions of secure encryption and zero-knowledge proofs in terms of uniform complexity. These two notions were treated before mainly in terms of non-uniform complexity. In the seminal work of Goldwasser and Micali <ref> [18] </ref>, two definitions of security are presented and considered. The formalization is carried out in terms of non-uniform complexity, but this is not essential to the results presented which include a one-directional implication between these definitions. <p> In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from [4, 29, 13, 21, 20] (resp. <ref> [18, 29] </ref>), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In particular, the uniformly secure primitives (i.e. encryption and zero-knowledge proofs for all languages in INP) can be constructed using only uniform complexity assumptions. This should be confronted with the (seemingly stronger) non-uniform assumptions used in the construction of the non-uniformly secure primitives (cf. <ref> [18, 15] </ref>). However, something is lost when relying on these (seemingly weaker) uniform assumptions. Namely, the security we obtain is only against the (seemingly weaker) uniform adversaries. We believe that this loss in security is immaterial. <p> In the sequel, we will consider only probabilistic polynomial-time protocols. 3 Uniform Security of Encryption Schemes In this section we present several uniform-complexity variants of the two definitions of security introduced by Goldwasser and Micali <ref> [18] </ref>, and prove the equivalence of these variants. The first definition, called semantic security, is the most natural one. Semantic security is a computational complexity analogue of Shannon's definition of perfect privacy [27]. <p> This definition is technically useful in demonstrating the security of a proposed encryption scheme, and for arguments concerning properties of cryptographic protocols which utilize an encryption scheme. 3.1 Semantic Security Loosely speaking, semantic security as defined in <ref> [18] </ref> means that whatever can be efficiently computed from the encryption of the message, can be efficiently computed given only the length of the message. Here we augment this definition by requiring that the above remains valid in presence of auxiliary partial information about the message. <p> Remark 4 : The function h provides both algorithms with partial information on X n . These algorithms then try to find the value f (X n ). In the definition of semantic security appearing in <ref> [18] </ref>, the function h : f0; 1g fl 7! f0; 1g fl does not appear (i.e. h (x) = , for all x). In the non-uniform case these formalizations are equivalent 1 , but in the uniform case our choice seems stronger. <p> In the non-uniform case these formalizations are equivalent 1 , but in the uniform case our choice seems stronger. The function h plays an essential role in the proof of Proposition 2. Remark 5 : As in <ref> [18] </ref>, we do not require that the function f : f0; 1g fl 7! f0; 1g fl is even computable. <p> Otherwise, consider a random variable X n uniformly distributed over f0 n ; 1 n g. This observation may justify the title of <ref> [18] </ref> (but indeed this seems a rather poor justification). 6 definition of semantic security allows fX n g n2IN to be computed in probabilistic polynomial-time from the public-key (and not only from 1 n ). <p> Remark 9 : In the definition of semantic security appearing in <ref> [18] </ref>, the term max u;v fProb (f (X n ) = vjh (X n ) = u)g appears instead of the term Prob (A 0 (h (X n ); 1 n ; jX n j) = f (X n )). <p> In view of our results (see subsection 3.3), it suffices to consider only this special case (both in the uniform and non-uniform formulations). It follows that the two formulations are equivalent. 3.2 Indistinguishability of Encryptions The definition presented here is a uniform-complexity variant of the definition appearing in <ref> [18] </ref> under the title "polynomial security". We prefer to use the more informative (and cumbersome) term of "indistinguishability of encryptions". This technical definition states that it is infeasible to find pairs of messages for which an efficient test can distinguish the corresponding encryptions. <p> A special case of interest is when Z n = X n Y n . In view of our results (see subsection 3.3), restricting attention to this special case (as done in <ref> [18] </ref>) is equivalent to the general case. <p> the public-key (i.e. the string G 1 (1 n )) as an additional input (and possibly allowing fX n g to be computed in probabilistic polynomial-time from the public-key). 3.3 Equivalence of the Security Definitions The equivalence of the non-uniform versions of the definitions of security has been proved in <ref> [18, 23] </ref>. Goldwasser and Micali proved that indistinguishability of encryptions implies semantic security [18]. Their proof carries through also to the uniform case. <p> Goldwasser and Micali proved that indistinguishability of encryptions implies semantic security <ref> [18] </ref>. Their proof carries through also to the uniform case. This implication is very important since it seems easier to prove that a proposed encryption scheme has indistinguishable encryptions (than to prove directly that it is semantically secure). <p> Micali, Rackoff and Sloan proved that semantic security implies indistinguishability of encryptions [23], but their proof seems to use non-uniformity in an essential way. Since our variant of semantic security seems stronger than the uniform variant implicit in <ref> [18] </ref> we present here both directions of the proof of equivalence of Definitions 4 and 5. We state and prove our result for "private-key" encryption scheme. <p> In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators [13, 21, 20], which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. [4]). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes <ref> [18, 29, 5] </ref>. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols. The security of these schemes, which is analogous to the security of encryption schemes, is usually defined in terms of non-uniform complexity. Here we provide a uniform treatment of their security.
Reference: [19] <author> Goldwasser, S., S. Micali, and C. Rackoff, </author> <title> "The Knowledge Complexity of Interactive Proof Systems", </title> <journal> SIAM J. on Comput., </journal> <volume> Vol. 18, No. 1, </volume> <year> 1989, </year> <pages> pp. 186-208. </pages>
Reference-contexts: All previous formalizations of zero-knowledge, including and following the introduction of the concept in the pioneering work of Goldwasser, Micali and Rackoff <ref> [19] </ref>, are non-uniform in the sense that they require that the proof system "leaks no knowledge" on all instances. It is thus not surprising that all the constructions of zero-knowledge proof systems for INP-complete languages (e.g. [15]), employ non-uniform complexity assumptions. <p> Convention 3 is used in an essential way in the proof of Proposition 2. 2.2 Interactive Machines (Protocols) The notion of an interactive machine, suggested by M. Blum, is the key to a formalization of the notion of a protocol (cf. <ref> [19, 15] </ref>). We assume that the reader is familiar with this notion, and present some conventions regarding interactive machines. 4 Convention 4 : Let = (A; B) be a pair of (probabilistic) interactive machines (i.e. a "two--party protocol"). <p> Parenthetical subsection: classification of zero-knowledge formulations As many variants of the notion of zero-knowledge have been proposed in the literature (cf. <ref> [19, 25, 28] </ref>), a classification attempt is indeed called for. We distinguish three parameters: 1. Existence or absence of a-priori information for the potential knowledge-receiver (i.e., ma chine B, or in the context of interactive proof, the verifier). <p> In Definition 7, this auxiliary input is denoted by Z n . 17 2. Uniform or non-uniform formalization. Definition 7 is the first (totally) uniform formal-ization of zero-knowledge. The original definition of zero-knowledge (as appearing in early versions of <ref> [19] </ref>) is "semi-uniform": it uses uniform machines (esp., in the roles of B fl and D) but quantifies over all common inputs (i.e., x). <p> Contradiction to the hypothesis that M flfl simulates B flfl A follows. Hence, the hybrids are indeed polynomially indistinguishable and the lemma follows. 2 4.3 Uniformly Zero-Knowledge Proof Systems for NP and MA Interactive proof systems were introduced as protocols (games) between infinitely powerful provers and probabilistic polynomial-time verifiers <ref> [19, 1] </ref>. In practical applications it is often the case that the prover is also a probabilistic polynomial-time interactive machine and that its "computational advantage" over the verifier is in having a-priori knowledge. <p> Though zero-knowledge arguments suffice for the practical purposes we consider, we stick to the more conservative formulation of interactive proof systems (as introduced in <ref> [19] </ref>), a formulation which we are able to meet as well. <p> The probabilistic relaxation of the verifier's decision is the only additional power that this proof system has over the NP-proof system. 21 to the class IIP defined in <ref> [19] </ref> and recently shown to equal IPSPACE [26]). However, we are not interested here in the complexity theoretic aspects of interactive proofs but rather in their utility in practice.
Reference: [20] <author> Hastad, J., </author> <title> "Pseudo-Random Generators under Uniform Assumptions", </title> <booktitle> 22nd STOC, </booktitle> <year> 1990, </year> <pages> pp. 395-404. </pages>
Reference-contexts: In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from <ref> [4, 29, 13, 21, 20] </ref> (resp. [18, 29]), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators <ref> [13, 21, 20] </ref>, which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. [4]). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes [18, 29, 5]. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols. <p> The following results establish sufficient conditions (which are also necessary) for the existence of secure bit commitments. Theorem (Naor [24]): Assuming the existence of (uniformly) pseudorandom generators, there exist (uniformly) secure bit commitment schemes. Theorem (Impagliazzo, Levin and Luby [21] and Hastad <ref> [20] </ref>): Pseudorandom generators exist if and only if one-way functions exist. 4 Uniformly Zero-Knowledge Proof Systems In this section we provide a uniform complexity treatment of zero-knowledge. Using the conventions presented in subsection 2.2, we define uniformly zero-knowledge proof systems. <p> Assuming the existence of one-way functions, which in turn imply the existence of uniformly secure bit commitment (cf. <ref> [21, 20, 24] </ref>), we derive the main result of this subsection: every language having a probabilistic polynomial-time interactive proof system, also has one which is uniformly zero-knowledge.
Reference: [21] <author> Impagliazzo, R., L.A. Levin, and M. Luby, </author> <title> "Pseudorandom Generation from One-Way Functions", </title> <booktitle> 21st STOC, </booktitle> <pages> pp. 12-24, </pages> <year> 1989. </year>
Reference-contexts: In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from <ref> [4, 29, 13, 21, 20] </ref> (resp. [18, 29]), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators <ref> [13, 21, 20] </ref>, which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. [4]). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes [18, 29, 5]. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols. <p> The following results establish sufficient conditions (which are also necessary) for the existence of secure bit commitments. Theorem (Naor [24]): Assuming the existence of (uniformly) pseudorandom generators, there exist (uniformly) secure bit commitment schemes. Theorem (Impagliazzo, Levin and Luby <ref> [21] </ref> and Hastad [20]): Pseudorandom generators exist if and only if one-way functions exist. 4 Uniformly Zero-Knowledge Proof Systems In this section we provide a uniform complexity treatment of zero-knowledge. Using the conventions presented in subsection 2.2, we define uniformly zero-knowledge proof systems. <p> Assuming the existence of one-way functions, which in turn imply the existence of uniformly secure bit commitment (cf. <ref> [21, 20, 24] </ref>), we derive the main result of this subsection: every language having a probabilistic polynomial-time interactive proof system, also has one which is uniformly zero-knowledge.
Reference: [22] <author> Impagliazzo, R., and M. Yung, </author> <title> "Direct Minimum-Knowledge Computations", </title> <booktitle> Advances in Cryptology - Crypto87 (proceedings), </booktitle> <editor> C. Pomerance (ed.), Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. 293, </volume> <year> 1987, </year> <pages> pp. 40-51. </pages>
Reference-contexts: As stated above, the proof of Proposition 3, carefully adapts the ideas of [15] to the uniform setting. In addition we believe that, in its details, the proof appearing here is more elegant than the one appearing in [15]. The proof of Proposition 4, carefully adapts the ideas of <ref> [22] </ref> to the uniform setting. It is worthwhile mentioning that the alternative ideas of [2] which build on [14] fail here. Proof of Proposition 3. <p> The proof follows ideas of Impagliazzo and Yung <ref> [22] </ref>, which proved that under non-uniform assumptions all languages in IIP have zero-knowledge proof systems. Their proof is in fact a transformation of a given interactive proof into a (non-uniformly) zero-knowledge proof for the same language.
Reference: [23] <author> Micali, S., C. Rackoff, and B. Sloan, </author> <title> "The Notion of Security for Probabilistic Cryptosys-tems", </title> <journal> SIAM Jour. of Computing, 1988, </journal> <volume> Vol. 17, </volume> <pages> pp. 412-426. </pages>
Reference-contexts: In the seminal work of Goldwasser and Micali [18], two definitions of security are presented and considered. The formalization is carried out in terms of non-uniform complexity, but this is not essential to the results presented which include a one-directional implication between these definitions. In <ref> [23] </ref>, non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. <p> the public-key (i.e. the string G 1 (1 n )) as an additional input (and possibly allowing fX n g to be computed in probabilistic polynomial-time from the public-key). 3.3 Equivalence of the Security Definitions The equivalence of the non-uniform versions of the definitions of security has been proved in <ref> [18, 23] </ref>. Goldwasser and Micali proved that indistinguishability of encryptions implies semantic security [18]. Their proof carries through also to the uniform case. <p> Their proof carries through also to the uniform case. This implication is very important since it seems easier to prove that a proposed encryption scheme has indistinguishable encryptions (than to prove directly that it is semantically secure). Micali, Rackoff and Sloan proved that semantic security implies indistinguishability of encryptions <ref> [23] </ref>, but their proof seems to use non-uniformity in an essential way. Since our variant of semantic security seems stronger than the uniform variant implicit in [18] we present here both directions of the proof of equivalence of Definitions 4 and 5.
Reference: [24] <author> M. Naor, </author> <title> "Bit Commitment Using Pseudorandomness", </title> <booktitle> Advances in Cryptology - Crypto 89, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 435, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> pp. 128-137. </pages>
Reference-contexts: Here X n is identically 1, so Z n is statistically independent of X n and the problem does not arise. 15 ambiguous. We choose to present a more conservative (and simpler) formulation since it can be achieved as well using the same complexity assumptions (cf. <ref> [24] </ref>). Remark 16 : The secrecy requirement refers explicitly to the situation at the end of the first phase. <p> A dual definition, requiring information theoretic secrecy and infeasibility of creating ambiguousities, is presented in [8, 10, 6]. The following results establish sufficient conditions (which are also necessary) for the existence of secure bit commitments. Theorem (Naor <ref> [24] </ref>): Assuming the existence of (uniformly) pseudorandom generators, there exist (uniformly) secure bit commitment schemes. Theorem (Impagliazzo, Levin and Luby [21] and Hastad [20]): Pseudorandom generators exist if and only if one-way functions exist. 4 Uniformly Zero-Knowledge Proof Systems In this section we provide a uniform complexity treatment of zero-knowledge. <p> Assuming the existence of one-way functions, which in turn imply the existence of uniformly secure bit commitment (cf. <ref> [21, 20, 24] </ref>), we derive the main result of this subsection: every language having a probabilistic polynomial-time interactive proof system, also has one which is uniformly zero-knowledge.
Reference: [25] <author> Oren, Y., </author> <title> "On the Cunning Power of Cheating Verifiers: Some Observations about Zero-Knowledge Proofs", </title> <booktitle> Proc. 28th FOCS, </booktitle> <pages> pp. 462-471, </pages> <year> 1987. </year>
Reference-contexts: Parenthetical subsection: classification of zero-knowledge formulations As many variants of the notion of zero-knowledge have been proposed in the literature (cf. <ref> [19, 25, 28] </ref>), a classification attempt is indeed called for. We distinguish three parameters: 1. Existence or absence of a-priori information for the potential knowledge-receiver (i.e., ma chine B, or in the context of interactive proof, the verifier). <p> Definition 7 only requires that for every B fl there exists a machine M fl simulating (A; B fl ) conversations. A stronger requirement, met in all known cases, is that there exists a universal machine simulating (A; B fl ) conversations by using B fl as a black-box <ref> [25, 17, 12] </ref>. Following are some remarks concerning the relations among these parameters: * Consider the definitions in which a-priori information is given to the potential "knowledge-receiver" in form of an auxiliary input. <p> Hence, using a non-uniform formalization without introducing an auxiliary input to the machines (and in particular to B fl ) is not satisfactory. * Formulating zero-knowledge protocols in a way which allows a-priori information to the parties is crucial to all known cryptographic applications of zero-knowledge (cf. <ref> [25, 17] </ref>). This point is demonstrated by considering the sequential composition of zero-knowledge protocols. As we shall see in the next subsection, the formulation of zero-knowledge with respect to auxiliary input allows to prove a sequential composition lemma (even for nonconstant number of repetitions). <p> Namely, if A is uniformly (resp., non-uniformly) zero-knowledge in the stronger sense described in item (3) above, then A is uniformly (resp., non-uniformly) zero-knowledge with respect to auxiliary input <ref> [25, 17] </ref>. 4.2 Sequential Composition of Uniformly Zero-Knowledge Protocols A desired property of zero-knowledge protocols is that their sequential composition is zero-knowledge as well. It has been showed that non-uniform zero-knowledge with auxiliary input is preserved under sequential composition [25, 17]. <p> A is uniformly (resp., non-uniformly) zero-knowledge with respect to auxiliary input <ref> [25, 17] </ref>. 4.2 Sequential Composition of Uniformly Zero-Knowledge Protocols A desired property of zero-knowledge protocols is that their sequential composition is zero-knowledge as well. It has been showed that non-uniform zero-knowledge with auxiliary input is preserved under sequential composition [25, 17]. On the other hand, the "semi-uniform" formalization 7 with no auxiliary input is not preserved under sequential composition [12]. Here we demonstrate that the auxiliary input is the only essential ingredient in proving preservation of zero-knowledge under sequential composition. <p> This impression is changed once one realizes that the parties may act "differently" (and/or on different parts of their inputs) in the various phases. These changes can be monitored by the other party (e.g., the prescribed B). Proof (following ideas of <ref> [25, 17] </ref>): Let B fl be an arbitrary probabilistic polynomial-time interactive machine.
Reference: [26] <author> Shamir, A., </author> <title> "IP = PSPACE", </title> <booktitle> Proc. 31st FOCS, </booktitle> <pages> pp. 11-15, </pages> <year> 1990. </year> <month> 33 </month>
Reference-contexts: The probabilistic relaxation of the verifier's decision is the only additional power that this proof system has over the NP-proof system. 21 to the class IIP defined in [19] and recently shown to equal IPSPACE <ref> [26] </ref>). However, we are not interested here in the complexity theoretic aspects of interactive proofs but rather in their utility in practice.
Reference: [27] <author> Shannon, C.E., </author> <title> "Communication Theory of Secrecy Systems", </title> <journal> Bell Sys. Tech. J., </journal> <volume> 28, </volume> <pages> pp. 656-715, </pages> <year> 1949. </year>
Reference-contexts: The first definition, called semantic security, is the most natural one. Semantic security is a computational complexity analogue of Shannon's definition of perfect privacy <ref> [27] </ref>. Loosely speaking, an encryption scheme is semantically secure if the encryption of a message does not yield any information on the message to an adversary which is computationally restricted (e.g. to polynomial-time). The second definition has a more technical flavour.
Reference: [28] <author> Tompa, M., and H. Woll, </author> <title> "Random Self-Reducibility and Zero-Knowledge Interactive Proofs of Possession of Information", </title> <booktitle> Proc. 28th FOCS, </booktitle> <pages> pp. 472-482, </pages> <year> 1987. </year>
Reference-contexts: Parenthetical subsection: classification of zero-knowledge formulations As many variants of the notion of zero-knowledge have been proposed in the literature (cf. <ref> [19, 25, 28] </ref>), a classification attempt is indeed called for. We distinguish three parameters: 1. Existence or absence of a-priori information for the potential knowledge-receiver (i.e., ma chine B, or in the context of interactive proof, the verifier).
Reference: [29] <author> Yao, </author> <title> A.C., "Theory and Applications of Trapdoor Functions", </title> <booktitle> Proc. of the 23rd IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from <ref> [4, 29, 13, 21, 20] </ref> (resp. [18, 29]), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In [23], non-uniform variants of the two definitions are proved equivalent (but the argument uses non-uniformity in an essential way). In this paper, we present several uniform variants of the two definitions and demonstrate that they are equivalent. It follows from [4, 29, 13, 21, 20] (resp. <ref> [18, 29] </ref>), that uniformly secure private-key (resp. public-key) encryption schemes can be constructed based on the existence of one-way functions (resp. trapdoor permutations). <p> In particular, * Using any (uniform strong) one-way function one can construct pseudorandom generators [13, 21, 20], which in turn can be used to produce (uniformly) secure private-key encryption schemes (cf. [4]). * Using any (uniform strong) trapdoor one-way permutation one can construct (uniformly) secure public-key encryption schemes <ref> [18, 29, 5] </ref>. 14 3.5 Commitment Schemes Commitment schemes are a basic ingredient in many cryptographic protocols. The security of these schemes, which is analogous to the security of encryption schemes, is usually defined in terms of non-uniform complexity. Here we provide a uniform treatment of their security.
Reference: [30] <author> Yao, </author> <title> A.C., "How to Generate and Exchange Secrets", </title> <booktitle> Proc. 27th FOCS, </booktitle> <pages> pp. 162-167, </pages> <year> 1986. </year>
Reference-contexts: Such (possibly weaker) zero-knowledge proof systems can be employed within cryptographic protocols, and in particular in the automatic generation of cryptographic protocols for any computable game (cf. <ref> [30, 16] </ref>). We formalize this (possibly weaker) variant of zero-knowledge, and show (following the ideas in [15]) how to construct such zero-knowledge proof systems for every language in INP using only a uniform complexity assumption (e.g. the existence of one-way functions). <p> programs (i.e. steps (S2) and (S3) of M fl and M fl 1 ) into a distinguisher of C (Y n ) from C (1 m ), in contradiction to the security of the commitment scheme C. 3 Combining Claims 4.1 through 4.4, Proposition 4 follows. 2 5 Discussion Yao <ref> [30] </ref> and Goldreich, Micali and Wigderson [16] presented methods for automatically constructing (two-party and multi-party) fault-tolerant protocols for any computable game. <p> Here we only point out that if the inputs to the game are generated by probabilistic procedures of complexity comparable to that of the game, then the constructions of <ref> [30, 16] </ref> can be carried out using uniform complexity assumptions. In particular, we will use uniformly secure public-key encryption and uniformly secure zero-knowledge proof systems for languages in INP.
References-found: 30

