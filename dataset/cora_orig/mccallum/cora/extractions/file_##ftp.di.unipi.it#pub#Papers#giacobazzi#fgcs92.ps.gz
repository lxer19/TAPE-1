URL: file://ftp.di.unipi.it/pub/Papers/giacobazzi/fgcs92.ps.gz
Refering-URL: http://www.di.unipi.it/di/groups/lp/papers.html
Root-URL: 
Email: fgiaco,levig@di.unipi.it  debray@cs.arizona.edu  
Phone: 2)  
Title: A Generalized Semantics for Constraint Logic Programs  
Author: Roberto Giacobazzi Saumya K. Debray Giorgio Levi 
Note: In FGCS'92 proceedings  
Address: Corso Italia 40, 56125 Pisa  Tucson, AZ 85721  
Affiliation: 1) Dipartimento di Informatica Universita di Pisa  Department of Computer Science The University of Arizona  
Abstract: We present a simple and powerful generalized algebraic semantics for constraint logic programs that is parameterized with respect to the underlying constraint system. "Generalized semantics" abstract away from standard semantics objects, by focusing on the general properties of any (possibly non-standard) semantics definition. In constraint logic programming, this corresponds to a suitable definition of the constraint system supporting the semantics definition. An algebraic structure is introduced to formalize the constraint system notion, thus making applicable classical mathematical results and both a top-down and bottom-up semantics are considered. Non-standard semantics for CLP can then be formally specified by means of the same techniques used to define standard semantics. Different non-standard semantics for constraint logic languages can be specified in this framework: e.g. abstract interpretation, machine level traces and any computation based on an instance of the constraint system. 
Abstract-found: 1
Intro-found: 1
Reference: [Aho et al. 74] <author> A.V. Aho, J.E. Hopcroft, and J.D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Ad-dison Wesley Publishing Company, </publisher> <year> 1974. </year>
Reference-contexts: Definition 2.2 A Closed Semiring <ref> [Aho et al. 74] </ref> is an algebraic structure (C; ; ; 1; 0), such that: (1) (C; ; 0) is a (join-)idempotent and commutative monoid; (2) (C; ; 1) is a (meet-)monoid; (3) 0 is an annihilator for ; (4) if a 1 ; :::; a n ; :: is a
Reference: [Barbuti et al. 92] <author> R. Barbuti, M. Codish, R. Giacobazzi, and G. Levi. </author> <title> Modelling Prolog Control. </title> <booktitle> In Proc. Nineteenth Annual ACM Symp. on Principles of Programming Languages, </booktitle> <pages> pages 95-104, </pages> <year> 1992. </year>
Reference-contexts: In this paper we address the problem of defining a generalized semantics for constraint logic programs. This can also be the base to specify non-standard semantics for other logic-based languages (e.g. in <ref> [Barbuti et al. 92] </ref> Prolog control features are expressed in terms of a constraint logic language). The algebraic approach we take to constraint interpretation makes it easy to identify a suitable set of operators, which can be instantiated in different ways to obtain the definition of different non-standard semantics.
Reference: [Barbuti et al. 91] <author> R. Barbuti, R. Giacobazzi, and G. </author> <note> Levi. </note>
Reference-contexts: Applications of this analysis are: compile time overflow, mutual exclusion, constraint propagation, termination etc. [Jtrgensen et al. 91]. 4.1 Generalized Rigidity Analysis There exists a wide class of abstract interpretation techniques for the analysis of ground dependences (also named covering) of pure logic programs <ref> [Barbuti et al. 91, Cortesi et al. 91] </ref>. In this section we extend the ground dependence notion by means of the notion of rigidity. A norm is a function weighting terms. Let us recall some basic concepts about norms. <p> Example 4.3 The following weighting map is a norm on the Herbrand term system: jtj size = 0 if t is a variable or t = [], jtj size = 1 + jtailj size if t = [hjtail]. 2 In order to extend the notion of groundness and ground dependences <ref> [Barbuti et al. 91, Cortesi et al. 91] </ref> to deal with a more refined one, able to take into account only the relevant subterms of a given (possibly non-ground) term t, we address the notion of rigidity as introduced in [Bossi et al. 90].
References-found: 3

