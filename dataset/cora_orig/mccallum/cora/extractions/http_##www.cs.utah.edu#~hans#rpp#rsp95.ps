URL: http://www.cs.utah.edu/~hans/rpp/rsp95.ps
Refering-URL: http://www.cs.utah.edu/~hans/rpp/rpp.html
Root-URL: 
Title: Imposing a Unified Design Methodology on Independent Rapid Prototyping Tools  
Author: Anders Hedberg, Hans Jacobson, Mats Einarsson and Glenn Jennings 
Address: S-971 87 Lule-a, Sweden  
Affiliation: Division of Computer Engineering Lule-a Institute of Technology  
Note: (in) Proceedings of the Sixth IEEE International Work--shop on Rapid Systems Prototyping (RSP 95), pages 217 222, June 1995. 1074-6005/95 $04.00 (C) 1995 IEEE  
Abstract: The teaching of digital design requires a design platform which presents a coherent design methodology to the students. Yet we found ourselves with different tools and hardware subsystems, each having its own idea about what digital design was about. Here we record our effort to forge a single design platform for beginning designers from three separate software subsystems and two hardware subsystems. In the process we developed software which not only smoothed out the design flow, but also filled in some glaring gaps in the platform's functionality which had not been provided by any vendor. The insight gained from the exercise is reflected in a "wish-list" of features which we hope will be provided by vendors in the near future. 
Abstract-found: 1
Intro-found: 1
Reference: [B + 86] <author> R. Brayton et al. </author> <title> Multiple-Level Logic Optimization System. </title> <booktitle> In Proceedings, Int'l Conference on Computer-Aided Design (ICCAD '86), </booktitle> <year> 1986. </year>
Reference-contexts: This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic. Other front-ends such as BBDS [BA92] or any other tool which emits a netlist of primitive components mappable to ORCA primitives <ref> [B + 86] </ref> [SS + 92] should be likewise relatively simple to adapt into our design environment.
Reference: [BA92] <author> B. Breidegard and P. Andersson. </author> <title> BBDS A Design Tool for Architectural Evaluation and Rapid Proto-typing of Performance Critical Digital Systems. </title> <booktitle> In Third Int'l Workshop on Rapid System Prototyping, </booktitle> <year> 1992. </year>
Reference-contexts: This was a real irritation to us, since we had been working with other RTL capture tools which had solutions to most of these problems [Jen91b] <ref> [BA92] </ref> [Jen91d]. Hierarchy was well-supported by the graphical editor, but the usual problems concerning functional hierarchy vs physical hierarchy raised their heads, as we discuss in Section 4 below. Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. <p> This design had passed all simulations and subsequent mapping steps, yet when downloaded exhibited a failure during one particular instruction. ORCAMASH discovered a number of questionable timing constructs <ref> [BA92] </ref>, several redundant synchronizers [Jen92b], even a NAND gate whose output was coupled to its input. The offending constructs were removed, and the microprocessor worked. This same topology-checking design tool became an invaluable "glue" tool in our design flow, see Figure 1. <p> This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic. Other front-ends such as BBDS <ref> [BA92] </ref> or any other tool which emits a netlist of primitive components mappable to ORCA primitives [B + 86] [SS + 92] should be likewise relatively simple to adapt into our design environment.
Reference: [Bra83] <author> Daniel Brand. </author> <title> Redundancy and Don't Cares in Logic Synthesis. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-32(10):947-952, </volume> <month> October </month> <year> 1983. </year>
Reference-contexts: Lule-a has been addressing at the research level for over a year now [Jen95a] [Jen94] namely the widespread carelessness in defining what is meant by the "don't-care" value `X' and the "don't-know" value `X', that is, the need to rigorously define which ternary logic system is being applied [Hay86] [Jen95b] <ref> [Bra83] </ref>. We feared that the synthesis tool had taken the liberty of defining "don't-care" to mean completely undriven, which could cause downstream synchronizers to go metastable, CMOS circuitry to draw current heavily, and so forth. Therefore we refused to install the tristate gate into the technology mapping library.
Reference: [Hay86] <author> John P. Hayes. </author> <title> Digital Simulation with Multiple logic Values. </title> <journal> IEEE Trans. Computer Aided Design, </journal> <volume> CAD-5(2):274-283, </volume> <month> April </month> <year> 1986. </year>
Reference-contexts: something which Lule-a has been addressing at the research level for over a year now [Jen95a] [Jen94] namely the widespread carelessness in defining what is meant by the "don't-care" value `X' and the "don't-know" value `X', that is, the need to rigorously define which ternary logic system is being applied <ref> [Hay86] </ref> [Jen95b] [Bra83]. We feared that the synthesis tool had taken the liberty of defining "don't-care" to mean completely undriven, which could cause downstream synchronizers to go metastable, CMOS circuitry to draw current heavily, and so forth. Therefore we refused to install the tristate gate into the technology mapping library.
Reference: [Jen91a] <author> G. Jennings. </author> <title> A Case against Event-Driven Simulation for Digital System Design. </title> <editor> In Alan H. Rutan, editor, </editor> <booktitle> Proceedings, 24th Annual Simulation Symposium, </booktitle> <pages> pages 170-176, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: These will be discussed in Section 5. Regarding simulation, we also found that the performance difference between the discrete-event scheduled simulator and the compiled simulator was surprisingly small, whereas we had expected the compiled simulator to be up to two orders of magnitude faster than the event-driven simulator <ref> [Jen91a] </ref> at the expense of losing the transient waveforms prior to circuit quiescense. We do not yet fully understand these results, but they made it difficult to motivate to our students when they should choose one method over the other.
Reference: [Jen91b] <author> G. Jennings. </author> <title> GRTL a Graphical Platform for Pipelined System Design. </title> <booktitle> In Proceedings of the 1991 European Conference on Design Automation (EDAC 1991), </booktitle> <pages> pages 424-428, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: This was a real irritation to us, since we had been working with other RTL capture tools which had solutions to most of these problems <ref> [Jen91b] </ref> [BA92] [Jen91d]. Hierarchy was well-supported by the graphical editor, but the usual problems concerning functional hierarchy vs physical hierarchy raised their heads, as we discuss in Section 4 below. Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. <p> This is still being investigated. The point is that we were finding that ORCA-MASH had in fact made us independent of our original choice of Viewlogic as synthesis platform and graphical front-end. For example, an interface from the GRTL RTL design tool <ref> [Jen91b] </ref> (with its innovations of self-deduced wide-component widths and bus widths [Jen91d] and of reversible simulation [Jen91c] [Jen92c]) to the ORCA and APTIX environment is now under development. This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic.
Reference: [Jen91c] <author> G. Jennings. </author> <title> Reversible Functional Simulation for Digital System Design. </title> <booktitle> In Proceedings of the IEEE 1991 Custom Integrated Circuits Conference (CICC '91), </booktitle> <pages> pages 8.2.1-8.2.4, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: For example, an interface from the GRTL RTL design tool [Jen91b] (with its innovations of self-deduced wide-component widths and bus widths [Jen91d] and of reversible simulation <ref> [Jen91c] </ref> [Jen92c]) to the ORCA and APTIX environment is now under development. This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic.
Reference: [Jen91d] <author> G. Jennings. </author> <title> Using Constraint Logic in a Graphical Electronics Tool Interface. </title> <booktitle> In Proceedings, Fourth Intl. Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems (IEA/AIE 91), </booktitle> <pages> pages 557-561, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: This was a real irritation to us, since we had been working with other RTL capture tools which had solutions to most of these problems [Jen91b] [BA92] <ref> [Jen91d] </ref>. Hierarchy was well-supported by the graphical editor, but the usual problems concerning functional hierarchy vs physical hierarchy raised their heads, as we discuss in Section 4 below. Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. <p> The point is that we were finding that ORCA-MASH had in fact made us independent of our original choice of Viewlogic as synthesis platform and graphical front-end. For example, an interface from the GRTL RTL design tool [Jen91b] (with its innovations of self-deduced wide-component widths and bus widths <ref> [Jen91d] </ref> and of reversible simulation [Jen91c] [Jen92c]) to the ORCA and APTIX environment is now under development. This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic.
Reference: [Jen92a] <author> G. Jennings. </author> <title> On Cycle Borrowing Analyses for Interconnected Chips Driven by Clocks Having Different but Commensurable Speeds. </title> <editor> In J. Fortes et al., editors, </editor> <booktitle> Proc., Int'l Conference on Application Specific Array Processors (ASAP '92), </booktitle> <pages> pages 81-88. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> August 4-7 </month> <year> 1992. </year> <institution> Berkeley, California. </institution> <address> 3 glenn@sm.luth.se </address>
Reference-contexts: Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. First, at Lule-a we have research interests in the use of transparent latches [Jen92b] [JJ94] <ref> [Jen92a] </ref> [JJ + 93] [Jen93] so we wanted to teach our students to work with them. This is in fact one of the reasons why we selected the ORCA FPLD family in the first place.
Reference: [Jen92b] <author> G. Jennings. </author> <title> On the Detection and Elimination of Superfluous Level-Sensitive Latches. </title> <booktitle> In Proceedings, Second Great Lakes Symposium on VLSI (GLSV '92), </booktitle> <pages> pages 176-182, </pages> <month> February 28-29 </month> <year> 1992. </year>
Reference-contexts: Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. First, at Lule-a we have research interests in the use of transparent latches <ref> [Jen92b] </ref> [JJ94] [Jen92a] [JJ + 93] [Jen93] so we wanted to teach our students to work with them. This is in fact one of the reasons why we selected the ORCA FPLD family in the first place. <p> This design had passed all simulations and subsequent mapping steps, yet when downloaded exhibited a failure during one particular instruction. ORCAMASH discovered a number of questionable timing constructs [BA92], several redundant synchronizers <ref> [Jen92b] </ref>, even a NAND gate whose output was coupled to its input. The offending constructs were removed, and the microprocessor worked. This same topology-checking design tool became an invaluable "glue" tool in our design flow, see Figure 1.
Reference: [Jen92c] <author> G. Jennings. </author> <title> The GRTL Reversible Compiled Register Transfer Simulator. </title> <editor> In John Stephenson, editor, </editor> <booktitle> Modelling and Simulation 1992, Proceedings of the 1992 European Simulation Multiconference, </booktitle> <pages> pages 480-484. </pages> <booktitle> Society for Computer Simulation International (SCSI), </booktitle> <address> June 1-3 1992. York, England. </address>
Reference-contexts: For example, an interface from the GRTL RTL design tool [Jen91b] (with its innovations of self-deduced wide-component widths and bus widths [Jen91d] and of reversible simulation [Jen91c] <ref> [Jen92c] </ref>) to the ORCA and APTIX environment is now under development. This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic.
Reference: [Jen93] <author> G. Jennings. </author> <title> On Short Paths, Hold Times, Clock Skew, and the Linearity of the Cycle Borrowing Problem. In Tau 93: </title> <booktitle> 1993 Workshop on Timing Issues in the Specification and Synthesis of Digital Systems, </booktitle> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. First, at Lule-a we have research interests in the use of transparent latches [Jen92b] [JJ94] [Jen92a] [JJ + 93] <ref> [Jen93] </ref> so we wanted to teach our students to work with them. This is in fact one of the reasons why we selected the ORCA FPLD family in the first place.
Reference: [Jen94] <author> G. Jennings. </author> <title> Experience Using Ordered Ternary Decision Diagrams for Compiled Logic Simulation. </title> <booktitle> In Proceedings, SIMS '94, Stockholm. Scandinavian Simulation Society, </booktitle> <address> COMSOL, Bjornnasvagen 21, 11347 Stockholm, Sweden, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: To our surprise we were face to face with an industrial example of something which Lule-a has been addressing at the research level for over a year now [Jen95a] <ref> [Jen94] </ref> namely the widespread carelessness in defining what is meant by the "don't-care" value `X' and the "don't-know" value `X', that is, the need to rigorously define which ternary logic system is being applied [Hay86] [Jen95b] [Bra83]. <p> Lule-a's recent results in `X'-correct ternary simulation for example [Jen95a] <ref> [Jen94] </ref> could be implemented in ORCAMASH, and emitted as a compiled simulator. This is still being investigated. The point is that we were finding that ORCA-MASH had in fact made us independent of our original choice of Viewlogic as synthesis platform and graphical front-end.
Reference: [Jen95a] <author> G. Jennings. </author> <title> Accurate Ternary-Valued Compiled Logic Simulation of Complex Logic Networks by OTDD Composition. </title> <booktitle> In Proceedings, 28th Annual Simulation Symposium, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: To our surprise we were face to face with an industrial example of something which Lule-a has been addressing at the research level for over a year now <ref> [Jen95a] </ref> [Jen94] namely the widespread carelessness in defining what is meant by the "don't-care" value `X' and the "don't-know" value `X', that is, the need to rigorously define which ternary logic system is being applied [Hay86] [Jen95b] [Bra83]. <p> Lule-a's recent results in `X'-correct ternary simulation for example <ref> [Jen95a] </ref> [Jen94] could be implemented in ORCAMASH, and emitted as a compiled simulator. This is still being investigated. The point is that we were finding that ORCA-MASH had in fact made us independent of our original choice of Viewlogic as synthesis platform and graphical front-end.
Reference: [Jen95b] <author> G. Jennings. </author> <title> Symbolic Incompletely Specified Functions for Correct Evaluation in the Presence of Indeterminate Input Values. </title> <booktitle> In Twenty-Eighth Annual Hawaii Int'l Conference on System Sciences, </booktitle> <address> HICSS-28, </address> <month> January </month> <year> 1995. </year>
Reference-contexts: which Lule-a has been addressing at the research level for over a year now [Jen95a] [Jen94] namely the widespread carelessness in defining what is meant by the "don't-care" value `X' and the "don't-know" value `X', that is, the need to rigorously define which ternary logic system is being applied [Hay86] <ref> [Jen95b] </ref> [Bra83]. We feared that the synthesis tool had taken the liberty of defining "don't-care" to mean completely undriven, which could cause downstream synchronizers to go metastable, CMOS circuitry to draw current heavily, and so forth. Therefore we refused to install the tristate gate into the technology mapping library.
Reference: [JJ + 93] <author> G. Jennings, A. Joshi, et al. </author> <title> Practical Cycle Borrowing Analysis Using Interior Point Algorithms. In Tau 93: </title> <booktitle> 1993 Workshop on Timing Issues in the Specification and Synthesis of Digital Systems, </booktitle> <month> Sept. </month> <year> 1993. </year> <note> Also presented by Prof. </note> <author> P. Vaidya, UIUC, </author> <booktitle> at the TIMS/ORSA 34th Joint National Meeting as invited paper, </booktitle> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. First, at Lule-a we have research interests in the use of transparent latches [Jen92b] [JJ94] [Jen92a] <ref> [JJ + 93] </ref> [Jen93] so we wanted to teach our students to work with them. This is in fact one of the reasons why we selected the ORCA FPLD family in the first place.
Reference: [JJ94] <author> G. Jennings and E. Jennings. </author> <title> A Discrete Syntax for Level-Sensitive Latched Circuits having n Clocks and m Phases. </title> <type> Technical report, </type> <institution> Div. of Computer Eng., Lule-a University, Lule-a, Sweden, </institution> <month> January </month> <year> 1994, </year> <title> to appear, </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <month> January </month> <year> 1996. </year>
Reference-contexts: Concerning the use of the synchronous synthesis capabilities of the synthesis tool, we had the following objections. First, at Lule-a we have research interests in the use of transparent latches [Jen92b] <ref> [JJ94] </ref> [Jen92a] [JJ + 93] [Jen93] so we wanted to teach our students to work with them. This is in fact one of the reasons why we selected the ORCA FPLD family in the first place. <p> This was true even of the "compiled" simulator included in our tool suite. But this meant that the simulator had no constructive definition for what a "correct" synchronous circuit was <ref> [JJ94] </ref> and therefore the student was given no feedback as to whether he had inadvertently created a construct which was questionable for synchronous design. Therefore we had to write a separate program which accepted the resulting gate netlist and subjected it to topological analysis.
Reference: [LE92] <author> Brian Lockyear and Carl Ebeling. </author> <title> Optimal Retiming of Multi-Phase, Level-Clocked Circuits. </title> <editor> In Thomas Knight and John Savage, editors, </editor> <booktitle> Advanced Research in VLSI and Parallel Systems, </booktitle> <pages> pages 265-280, </pages> <year> 1992. </year>
Reference-contexts: that placing the "cuts" can be timing driven, so that there is still opportunity for logic and timing optimizations and pad minimization across the "cuts," and so that there is the opportunity to retime the entire design [LS91] even if it contains latches, exploiting cycle borrowing in that case [Szy92] <ref> [LE92] </ref>. 5 Board-Level Routing For each ORCA FPLD to be mapped, it was a simple task to generate a Viewlogic schematic symbol for it automatically.
Reference: [LS91] <author> Charles E. Leiserson and James B. Saxe. </author> <title> Retiming Synchronous Circuitry. </title> <journal> Algorithmica, </journal> <volume> 6 </volume> <pages> 5-35, </pages> <year> 1991. </year>
Reference-contexts: we hope that the total design can be managed as a unit, so that placing the "cuts" can be timing driven, so that there is still opportunity for logic and timing optimizations and pad minimization across the "cuts," and so that there is the opportunity to retime the entire design <ref> [LS91] </ref> even if it contains latches, exploiting cycle borrowing in that case [Szy92] [LE92]. 5 Board-Level Routing For each ORCA FPLD to be mapped, it was a simple task to generate a Viewlogic schematic symbol for it automatically.
Reference: [MS + 91] <author> Sharad Malik, Ellen M. Sentovich, et al. </author> <title> Retiming and Resynthesis: Optimizing Sequential Networks with Combinational Techniques. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 10(1) </volume> <pages> 74-84, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: For example, suppose the ODS mapping tool performed both logic resynthesis and retiming, both of which could completely change the topology of the original circuit <ref> [MS + 91] </ref>.
Reference: [SS + 92] <author> E. M. Sentovich, K. J. Singh, et al. </author> <title> SIS: A System for Sequential Circuit Synthesis. </title> <institution> Memo UCB/ERL M92/41, Dept. of EECS, </institution> <address> U. C. Berkeley, </address> <month> May 4 </month> <year> 1992. </year>
Reference-contexts: This involves simply having ORCAMASH accept a topological netlist from GRTL instead of the netlist it presently accepts from View-logic. Other front-ends such as BBDS [BA92] or any other tool which emits a netlist of primitive components mappable to ORCA primitives [B + 86] <ref> [SS + 92] </ref> should be likewise relatively simple to adapt into our design environment.
Reference: [Szy92] <author> Thomas G. Szymanski. </author> <title> Computing Optimal Clock Schedules. </title> <booktitle> In Proceedings of the 29th Design Automation Conference, </booktitle> <pages> pages 399-404, </pages> <month> June </month> <year> 1992. </year> <month> 222 </month>
Reference-contexts: so that placing the "cuts" can be timing driven, so that there is still opportunity for logic and timing optimizations and pad minimization across the "cuts," and so that there is the opportunity to retime the entire design [LS91] even if it contains latches, exploiting cycle borrowing in that case <ref> [Szy92] </ref> [LE92]. 5 Board-Level Routing For each ORCA FPLD to be mapped, it was a simple task to generate a Viewlogic schematic symbol for it automatically.
References-found: 22

