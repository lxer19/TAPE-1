URL: http://www.cs.umn.edu/Users/dept/users/kencham/VCR-Ops.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kencham/
Root-URL: http://www.cs.umn.edu
Email: fkencham,srivastag@cs.umn.edu  
Title: I/O Scheduling for Digital Continuous Media Part II: VCR-like Operations  
Author: Deepak R. Kenchammana-Hosekote Jaideep Srivastava 
Keyword: Multimedia, Continuous Media, I/O Scheduling, VCR-like operations, Response time  
Note: This work was supported in part by Honeywell Inc. under grant F30602-93-C-0172 from Rome Air Force  
Address: MN 55455  Rome, NY.  
Affiliation: Department of Computer Science, University of Minnesota,  Labs,  
Abstract: Advances in storage, compression, and network technology are making support for digital video and audio, collectively called continuous media (CM), possible. To provide economically feasible access to CM data an emerging service model is one in which many clients connect across a network to specialized CM servers (CMS). The continuous and real-time data needs in providing such a service requires effective resource management and scheduling of storage devices at the CMS. In this paper we study the effect of executing VCR-like operations by clients on the BSCAN[KHS94] scheduling strategy at the CMS. We first define a suite of primitive VCR-like operations that clients can execute to change the flow of CM data. The effect of the execution of such operations on BSCAN is then analyzed. We show that the uncontrolled change in the BSCAN schedule will affect clients' playback. In order to avoid breakdown in playback guarantees while executing VCR-like operations at the CMS we develop two general techniques, namely the passive accumulation and active accumulation. Using the response time, i.e. the time to execute a VCR-like operation, as a comparison metric we show that active accumulation algorithms outperform passive accumulation algorithms. We then derive the optimal response time algorithm in a class of active accumulation strategies. The results presented here are confirmed by simulation studies. 
Abstract-found: 1
Intro-found: 1
Reference: [AHPR94] <author> M. Agrawal, J. Huang, S. Prabhakar, and J. Richardson. </author> <title> Integrated System Support for Continuous Multimedia Applications. </title> <booktitle> In Proceedings of International Conference on Distributed Multimedia Systems and Applications, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: Simulation studies support the analyses presented here. 8 Future Work The techniques described here are being implemented on a Sun SparcStation 20 with a Parallax Video Card, 168M main memory, and 8G secondary storage running Solaris 2.3 as part of the 27 Presto project <ref> [AHPR94] </ref>. The I/O scheduler is being implemented as a single thread sharing address space with the clients using the real-time and multi-thread support in Solaris 2.3 [KSZ92]. Panels analogous to those on VCRs are provided to clients to execute VCR-like operations.
Reference: [AOG92] <author> D. Anderson, Y. Osawa, and R. Govindan. </author> <title> A file system for continuous media. </title> <journal> ACM Transaction on Computer Systems, </journal> <volume> 10(4), </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: We then derive the optimal response time algorithm in a class of active accumulation strategies. Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], <ref> [AOG92] </ref>, [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. <p> However, their main focus is on synchronous delivery of data across the network. Also, their protocols provide probabilistic playback guarantees to clients. Much of the previous work on designing CM servers discussed supporting concurrency set operations like Open, and Close. [RV93] and <ref> [AOG92] </ref> discuss safe state transition algorithms to handle this set of operations. However, they do not try to minimize response time of such operations. The importance of maintaining finite slack time in a cycle to handle VCR-like operations has been mentioned in [TPBG93].
Reference: [BG88] <author> D. Bitton and J. Gray. </author> <title> Disk shadowing. </title> <booktitle> In 14th International Conference on Very Large Data Bases, </booktitle> <pages> pages 331-338, </pages> <year> 1988. </year>
Reference-contexts: A basic constraint of the storage system is that data accesses must be in integral multiples of the physical block size. For example, it is not possible to fetch 4.37 blocks since it involves fetching a fraction of the 5 th block. 2 In <ref> [BG88] </ref> the seek time for t tracks in a disk with non-linear actuator is o (t) = ff 0 + ff 1 p t; ff 0 ; ff 1 &gt; 0, when t &gt; 0, o (0) = 0. 2.
Reference: [CKY93] <author> M. Chen, D. Kandlur, and P.S. Yu. </author> <title> Optimization of the Group Sweep Scheduling with Heterogeneous Multimedia Streams. </title> <booktitle> In Proceedings of the ACM Multimedia, </booktitle> <pages> pages 235-242, </pages> <address> Anaheim, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like <ref> [CKY93] </ref>, [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [CKY94] <author> M. Chen, D. Kandlur, and P.S. Yu. </author> <title> Support For Fully Interactive Playout in a disk-array based Video Server. </title> <booktitle> In Proceedings of 2 nd ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], <ref> [CKY94] </ref>, [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. <p> However, they do not provide playback guarantees while such operations are being executed. Concurrent with our work on supporting VCR-like operations like FastForward and ReversePlay are <ref> [CKY94] </ref> and [DSKT94]. By anticipating the execution of such operations at the server, [CKY94] places CM data in the storage system using techniques like segment sampling wherein some groups of units are marked for display based on the type of VCR-like operation. <p> However, they do not provide playback guarantees while such operations are being executed. Concurrent with our work on supporting VCR-like operations like FastForward and ReversePlay are <ref> [CKY94] </ref> and [DSKT94]. By anticipating the execution of such operations at the server, [CKY94] places CM data in the storage system using techniques like segment sampling wherein some groups of units are marked for display based on the type of VCR-like operation. The efficacy of such an approach is constrained by the placement strategy selected at storage time.
Reference: [CL93] <author> H.-J. Chen and T.D.C Little. </author> <title> Physical storage organization for time dependent multimedia data. </title> <booktitle> In 4 th Intl. Conference on Foundation of Data Organization and Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: We then derive the optimal response time algorithm in a class of active accumulation strategies. Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], <ref> [CL93] </ref> [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [DSKT94] <author> J. Dey, J. Salehi, J. Kurose, and D. Towsley. </author> <title> VCR Capabilities for Very Large Scale Video On Demand. </title> <booktitle> In Proceedings of 2 nd ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: However, they do not provide playback guarantees while such operations are being executed. Concurrent with our work on supporting VCR-like operations like FastForward and ReversePlay are [CKY94] and <ref> [DSKT94] </ref>. By anticipating the execution of such operations at the server, [CKY94] places CM data in the storage system using techniques like segment sampling wherein some groups of units are marked for display based on the type of VCR-like operation. <p> The efficacy of such an approach is constrained by the placement strategy selected at storage time. The approach taken by <ref> [DSKT94] </ref> has been to provide probabilistic guarantees when such operations are being executed, 4 especially for operations like FastForward. Recently [LV95] has presented a placement technique to store compressed video, specifically MPEG streams, to support robust playback during operations like FastForward and ReversePlay.
Reference: [GC92] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of Delay-sensitive Multimedia Storage and Retrieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], <ref> [GC92] </ref>, [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [Gem93] <author> J. </author> <title> Gemmell. Multimedia Network File Servers: Multi-channel Delay Sensitive Data Retrieval. </title> <booktitle> In Proceedings of 1 st ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1993. </year> <month> 28 </month>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], <ref> [Gem93] </ref>, [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. <p> Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], <ref> [Gem93] </ref>, [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [KEL94] <author> R. Keller, W. Effelsberg, and B. Lamparter. </author> <title> Performance bottlenecks in digital movie systems. </title> <booktitle> In Proc. of 4 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1994. </year>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], <ref> [KEL94] </ref>, [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [KH] <author> D.R. Kenchammana-Hosekote. </author> <title> The magellan Continuous Media Server Simulator. </title> <note> Document in preparation. </note>
Reference-contexts: Such an algorithm minimizes the response time of the VCR-like operation. 6 Simulation Studies In this section we validate our analyses of the preceeding sections via simulation studies. The experiments presented here were conducted using MAGELLAN <ref> [KH] </ref>. MAGELLAN is a process oriented similator written in C++/CSIM [Sch90] and MATLAB. A schematic of MAGELLAN is illustrated in For results presented in this paper, MAGELLAN simulated a CMS with parameters described in Table 3.
Reference: [KHS94] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Scheduling Continuous Media on a Video-On-Demand Server. </title> <booktitle> In International Conference on Multi-media Computing Systems, </booktitle> <address> Boston, MA, </address> <month> May </month> <year> 1994. </year> <note> IEEE. </note>
Reference-contexts: The discussion for the case when clients store data is assumed to follow symmetrically. 3 1.1 Summary of Contributions In this paper we study the effect of executing VCR-like operations by clients on the BSCAN <ref> [KHS94] </ref> scheduling strategy at the CMS. We first define a suite of primitive VCR-like operations that clients can execute to change the flow of CM data. The effect of the execution of such operations on BSCAN is then analyzed. <p> In Section 5 we analyse a class of active accumulation algorithms with the aim of deriving an algorithm with optimal response time. Simulation studies reported in Section 6 confirm our findings. 2 Scheduling Strategy at CMS 2.1 The BSCAN Algorithm In <ref> [KHS94] </ref> we described a scheduling approach called the BSCAN (Batched-SCAN) algorithm to service concurrent accesses by clients to the storage system at the CMS. BSCAN uses the SCAN [TP72] algorithm to service different streams and batches accesses to data of a single stream. <p> Thus, in the computed schedule it is neccessary to ensure that the entire frame is available in buffer at the time of decompression/rendition. The solution to the problem of computing feasible BSCAN schedules that satisfy these two constraints while guaranteeing smooth playback is discussed in <ref> [KHS94] </ref>. We supply an outline of the solution here. <p> The solution to Problem P is given as n BSCAN = dn fl e + p u fl where n fl i = 1 j=1 v j ae j u j fl is computed by Algorithm P U STAR . The proof for this claim is given in <ref> [KHS94] </ref>. We sketch its outline here. The solution for Problem P is greater than (or equal to) dn fl e. P U STAR commences its search of the feasible subspace from this point in R s . Due to the additional constraints it examines only integer solutions for n. <p> In the period before t = 3.2512 seconds some finite slack exists that causes data build up in the buffer over time. This accumulation is bounded using the technique described in <ref> [KHS94] </ref>. In that scheme as soon as an integral number of blocks are accumulated the service vector is appropriately adjusted. <p> In fact for about 2.25 seconds the client perceives jitter caused due to starvation at the CMS. On reaching S new at time t = 5:57 seconds, B k 0 +c 1 is consumed during the servicing of the new schedule. Thereafter, the bounded-buffer algorithm in <ref> [KHS94] </ref> bounds data accumulation to 1 block causing the saw-tooth like pattern once again. 7 We translated frame rate into data rate. 23 Parameter S S new Units r 78.125 312.5 KBps v 0.004 0.004 seconds n 0.9907 8.9167 blocks a 0.0093 0.0833 blocks n + a 1 9 blocks M
Reference: [KSZ92] <author> S. Khanna, M. Sebree, and J. Zolnowsky. </author> <title> Real-time Scheduling in SunOS 5.0. </title> <booktitle> In Proceedings of Winter USENIX. USENIX, </booktitle> <year> 1992. </year>
Reference-contexts: The I/O scheduler is being implemented as a single thread sharing address space with the clients using the real-time and multi-thread support in Solaris 2.3 <ref> [KSZ92] </ref>. Panels analogous to those on VCRs are provided to clients to execute VCR-like operations. The problem of finding the optimal algorithm, i.e. with least response time, to handle state transitions remains unsolved. Its construction is part of our future efforts.
Reference: [LS92] <author> P. Lougher and D. Shepherd. </author> <title> Design and implementation of a continuous media storage server. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1992. </year>
Reference-contexts: We then derive the optimal response time algorithm in a class of active accumulation strategies. Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] <ref> [LS92] </ref>, [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. <p> They discuss the relationship between slack and the response time of concurrency set operations, which they denote as start-up latency. A key difference between our work and [TPBG93] is that our strategy provides playback guarantee at all time besides supporting an extended suite of operations. <ref> [LS92] </ref> discusses support for Pause, Stop, Play operations, besides Open and Close. However, they do not provide playback guarantees while such operations are being executed. Concurrent with our work on supporting VCR-like operations like FastForward and ReversePlay are [CKY94] and [DSKT94].
Reference: [LV95] <author> T.D. Little and D. Venkatesh. </author> <title> A Scalable Video-on-Demand Service for the Provision of VCR-like Functions. </title> <booktitle> In IEEE Multimedia. IEEE, </booktitle> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: The efficacy of such an approach is constrained by the placement strategy selected at storage time. The approach taken by [DSKT94] has been to provide probabilistic guarantees when such operations are being executed, 4 especially for operations like FastForward. Recently <ref> [LV95] </ref> has presented a placement technique to store compressed video, specifically MPEG streams, to support robust playback during operations like FastForward and ReversePlay. <p> Panels analogous to those on VCRs are provided to clients to execute VCR-like operations. The problem of finding the optimal algorithm, i.e. with least response time, to handle state transitions remains unsolved. Its construction is part of our future efforts. Recent work like <ref> [LV95] </ref> is leading us to consider some mixed solutions, i.e. solutions that rely on the placement strategy as well as the scheduling strategy to provide fast executions of VCR-like operations.
Reference: [NYT94a] <author> NYT. </author> <title> Demanding Task:Video on Demand. Article in New York Times, </title> <note> Sunday 23 rd , January 1994. </note>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment <ref> [NYT94a] </ref>, medical services [NYT94b], office automation [ONWC87] to national defence [USA94]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM).
Reference: [NYT94b] <author> NYT. </author> <title> Multi-media in Medicine. Article in New York Times, </title> <note> Sunday 23 rd , January 1994. </note>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment [NYT94a], medical services <ref> [NYT94b] </ref>, office automation [ONWC87] to national defence [USA94]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM).
Reference: [NYT95] <author> NYT. </author> <title> Perspectives on Video-on-Demand. </title> <journal> IEEE Spectrum Special Issue, </journal> <month> April </month> <year> 1995. </year>
Reference-contexts: Many of these applications require audio and video data which is collectively described by the term continuous media (CM). Due to the large size and the high data bandwidth needed to transmit CM data providing economically feasible access by these applications is the challenge <ref> [NYT95] </ref>. In order to provide such a service an emerging service model is one in which many clients (applications) connect across high speed interconnection networks to specialized data servers that store and retrieve CM data.
Reference: [ONWC87] <author> B.C. Ooi, A.N. Narasimalu, K.Y. Wang, and I.F. Chang. </author> <title> Design of a multi-media files server using optical disks for office automation. </title> <booktitle> In IEEE Computer Society Office Automation Symposium, </booktitle> <pages> pages 157-163, </pages> <year> 1987. </year>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment [NYT94a], medical services [NYT94b], office automation <ref> [ONWC87] </ref> to national defence [USA94]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM). Due to the large size and the high data bandwidth needed to transmit CM data providing economically feasible access by these applications is the challenge [NYT95].
Reference: [RS92] <author> L. Rowe and B.C. Smith. </author> <title> A Continuous Media Player. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1992. </year>
Reference-contexts: Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. Using single buffers can restrict the subscribers' consumption sequence thereby disallowing certain kinds of VCR-like operations. <ref> [RS92] </ref> enumerates a similar list of VCR-like operations as enumerated in Table 1 in the context of a retrieval tool for CM data. However, their main focus is on synchronous delivery of data across the network. Also, their protocols provide probabilistic playback guarantees to clients.
Reference: [RV93] <author> V.P. Rangan and H.M. Vin. </author> <title> Designing a multi-user HDTV storage server. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(1), </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: We then derive the optimal response time algorithm in a class of active accumulation strategies. Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in <ref> [RV93] </ref>, [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. <p> However, their main focus is on synchronous delivery of data across the network. Also, their protocols provide probabilistic playback guarantees to clients. Much of the previous work on designing CM servers discussed supporting concurrency set operations like Open, and Close. <ref> [RV93] </ref> and [AOG92] discuss safe state transition algorithms to handle this set of operations. However, they do not try to minimize response time of such operations. The importance of maintaining finite slack time in a cycle to handle VCR-like operations has been mentioned in [TPBG93].
Reference: [RVG + 93] <author> K.K. Ramakrishnan, L. Vaitzblit, C. Gray, U. Vahalia, D. Ting, P. Tzelnic, S. Glasner, and W. Duso. </author> <title> Operating system support for a Video-On-Demand service. </title> <booktitle> In Proc. of 4 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1993. </year>
Reference-contexts: We then derive the optimal response time algorithm in a class of active accumulation strategies. Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], <ref> [RVG + 93] </ref>, [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [RW93] <author> A.L.N. Reddy and J. Wyllie. </author> <title> Disk Scheduling in a Multimedia Server. </title> <booktitle> In Proceedings of the ACM Multimedia, </booktitle> <pages> pages 225-234, </pages> <address> Anaheim, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], [TPBG93]. Servicing strategies like [CKY93], <ref> [RW93] </ref>, and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [Sch90] <author> H.D. Schwetman. </author> <title> CSIM Reference Manual (Revision 15). </title> <type> Technical Report ACA-ST-257-87, </type> <institution> Microelectronics and Computer Technology Corporation, Austin Texas, </institution> <year> 1990. </year> <month> 29 </month>
Reference-contexts: Such an algorithm minimizes the response time of the VCR-like operation. 6 Simulation Studies In this section we validate our analyses of the preceeding sections via simulation studies. The experiments presented here were conducted using MAGELLAN [KH]. MAGELLAN is a process oriented similator written in C++/CSIM <ref> [Sch90] </ref> and MATLAB. A schematic of MAGELLAN is illustrated in For results presented in this paper, MAGELLAN simulated a CMS with parameters described in Table 3.
Reference: [SMRD94] <author> J. Schnepf, V. Mashayekhi, J. Riedl, and D.H.-C. Du. </author> <title> Closing the Gap in Dis--tance Learning Education: Computer-Supported, </title> <journal> Participative, Media-Rich Education. ED-TECH Review, </journal> <year> 1994. </year> <month> Fall/Winter. </month>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education <ref> [SMRD94] </ref>, entertainment [NYT94a], medical services [NYT94b], office automation [ONWC87] to national defence [USA94]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM).
Reference: [TP72] <author> T.J. </author> <title> Teorey and T.B. Pinkerton. A Comparitive Analysis of Disk Scheduling Policy. </title> <journal> Communications of the ACM, </journal> <volume> 15(3) </volume> <pages> 177-184, </pages> <month> March </month> <year> 1972. </year>
Reference-contexts: Simulation studies reported in Section 6 confirm our findings. 2 Scheduling Strategy at CMS 2.1 The BSCAN Algorithm In [KHS94] we described a scheduling approach called the BSCAN (Batched-SCAN) algorithm to service concurrent accesses by clients to the storage system at the CMS. BSCAN uses the SCAN <ref> [TP72] </ref> algorithm to service different streams and batches accesses to data of a single stream. Since the SCAN algorithm services the s streams in an order based on their location in the storage system, it minimizes the retrieval latency.
Reference: [TPBG93] <author> F. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID A disk array management system for video files. </title> <booktitle> In 1 st Conference on Multimedia, </booktitle> <pages> pages 393-400. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: Simulation studies are used to validate analytical results presented here. 1.2 Relation to Previous Work The problem of designing a scheduling strategy for CM data has been previously addressed in [RV93], [CL93] [LS92], [AOG92], [RVG + 93], [KEL94], [Gem93], [GC92], [CKY94], <ref> [TPBG93] </ref>. Servicing strategies like [CKY93], [RW93], and [Gem93] use single buffers while allowing head scheduling algorithms like C-SCAN to decide the servicing order. <p> However, they do not try to minimize response time of such operations. The importance of maintaining finite slack time in a cycle to handle VCR-like operations has been mentioned in <ref> [TPBG93] </ref>. They discuss the relationship between slack and the response time of concurrency set operations, which they denote as start-up latency. A key difference between our work and [TPBG93] is that our strategy provides playback guarantee at all time besides supporting an extended suite of operations. [LS92] discusses support for Pause, <p> The importance of maintaining finite slack time in a cycle to handle VCR-like operations has been mentioned in <ref> [TPBG93] </ref>. They discuss the relationship between slack and the response time of concurrency set operations, which they denote as start-up latency. A key difference between our work and [TPBG93] is that our strategy provides playback guarantee at all time besides supporting an extended suite of operations. [LS92] discusses support for Pause, Stop, Play operations, besides Open and Close. However, they do not provide playback guarantees while such operations are being executed.
Reference: [USA94] <editor> USAF. C4I: </editor> <booktitle> The Advanced Warrior Program. USAF Publication, </booktitle> <year> 1994. </year>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment [NYT94a], medical services [NYT94b], office automation [ONWC87] to national defence <ref> [USA94] </ref>. Many of these applications require audio and video data which is collectively described by the term continuous media (CM). Due to the large size and the high data bandwidth needed to transmit CM data providing economically feasible access by these applications is the challenge [NYT95].
References-found: 28

