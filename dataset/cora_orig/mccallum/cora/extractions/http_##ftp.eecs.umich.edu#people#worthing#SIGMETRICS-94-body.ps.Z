URL: http://ftp.eecs.umich.edu/people/worthing/SIGMETRICS-94-body.ps.Z
Refering-URL: http://ftp.eecs.umich.edu/people/worthing/
Root-URL: http://www.eecs.umich.edu
Email: worthing@eecs.umich.edu  
Title: Scheduling Algorithms for Modern Disk Drives  
Author: Bruce L. Worthington, Gregory R. Ganger, Yale N. Patt 
Address: Ann Arbor 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Note: Appeared in the Proceedings of the ACM Sigmetrics Conference,May, 1994, pp. 241-251.  
Abstract: Disk subsystem performance can be dramatically improved by dynamically ordering, or scheduling, pending requests. Via strongly validated simulation, we examine the impact of complex logical-to-physical mappings and large prefetching caches on scheduling effectiveness. Using both synthetic workloads and traces captured from six different user environments, we arrive at three main conclusions: (1) Incorporating complex mapping information into the scheduler provides only a marginal (less than 2%) decrease in response times for seek-reducing algorithms. (2) Algorithms which effectively utilize prefetching disk caches provide significant performance improvements for workloads with read sequentiality. The cyclical scan algorithm (C-LOOK), which always schedules requests in ascending logical order, achieves the highest performance among seek-reducing algorithms for such workloads. (3) Algorithms that reduce overall positioning delays produce the highest performance provided that they recognize and exploit a prefetching cache. 
Abstract-found: 1
Intro-found: 1
Reference: [Denn67] <author> P. J. Denning, </author> <title> "Effects of scheduling on file memory operations", </title> <booktitle> AFIPS Spring Joint Computer Conference, </booktitle> <month> April </month> <year> 1967, </year> <pages> pp. 9-21. </pages>
Reference-contexts: Many scheduling algorithms have been proposed that achieve higher performance by taking into account information about individual requests and the current state of the disk subsystem. 3.1 Seek Delay Reduction Over 25 years ago, <ref> [Denn67] </ref> analyzed the advantages of a Shortest Seek Time First (SSTF) policy. This algorithm chooses the next request to service by selecting the pending request that will incur the smallest seek delay. <p> Given a heavy workload, the arm tends to hover over a subset of the cylinders in an attempt to exhaust all requests to that region, thereby starving any requests outside of that space. <ref> [Denn67] </ref> also examined the SCAN or "elevator" algorithm, which provides a lower response time variance than SSTF with only a marginal increase in the average response time (for the random workloads studied).
Reference: [Gang93] <author> G. Ganger, Y. Patt, </author> <title> "The Process-Flow Model: Examining I/O Performance from the System's Point of View", </title> <booktitle> SIGMETRICS, </booktitle> <year> 1993, </year> <pages> pp. 86-97. </pages>
Reference-contexts: Finally, we believe that scheduling decisions should be based both on subsystem characteristics and system-level requirements. By understanding the system performance consequences of different disk requests, one can design scheduling algorithms optimized for overall system performance <ref> [Gang93] </ref>. For example, a request that prevents a critical process from executing should be serviced before a low-priority background request.
Reference: [Geis87] <author> R. Geist, S. Daniel, </author> <title> "A Continuum of Disk Scheduling Algorithms", </title> <journal> ACM Transactions on Computer Systems, </journal> <month> February </month> <year> 1987, </year> <pages> pp. 77-92. </pages>
Reference-contexts: C-SCAN treats each cylinder equally, rather than favoring the center cylinders. The LOOK algorithm, another SCAN variation, changes the scanning direction if no pending requests exist in the current direction of travel [Mert70]. C-SCAN and LOOK can be combined, resulting in the C-LOOK algorithm. VSCAN (R), proposed in <ref> [Geis87] </ref>, creates a continuum of algorithms between SSTF and LOOK. The R parameter denotes how strongly biased the scheduler is towards maintaining the current direction of travel. VSCAN (0.0) is equivalent to SSTF, and VSCAN (1.0) reduces to LOOK. [Geis87] suggests that VSCAN (0.2) provides a good balance between average response <p> VSCAN (R), proposed in <ref> [Geis87] </ref>, creates a continuum of algorithms between SSTF and LOOK. The R parameter denotes how strongly biased the scheduler is towards maintaining the current direction of travel. VSCAN (0.0) is equivalent to SSTF, and VSCAN (1.0) reduces to LOOK. [Geis87] suggests that VSCAN (0.2) provides a good balance between average response time and starvation resistance. 3.2 Positioning Delay Reduction Reducing the average seek delay only requires knowledge about the relative seek distances between requested data. <p> FCFS has the lowest coefficient for lighter work-loads. As FCFS begins to saturate and its response time variance expands, C-LOOK emerges as the algorithm with the best starvation resistance. SSTF, as expected, is highly susceptible to starvation. These results compare well with previous studies of scheduling for random workloads <ref> [Geis87, Selt90, Teor72] </ref>. 5.2 Scheduling with Known Mapping If the scheduler has knowledge of LBN-to-PBN mappings, it can more accurately predict seek delays and thereby fl fl FCFS C-LOOK fi fi LOOK ffi ffi VSCAN (0.2) SSTF | | | | | | | | | 0 | 100 | 200
Reference: [HP92] <author> Hewlett-Packard Company, </author> <title> "HP C2240 Series 3.5-inch SCSI-2 Disk Drive, Technical Reference Manual", Part Number 5960-8346, </title> <address> Edition 2, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: The simulator accurately models zoned recording, spare regions, defect management, disk buffers and caches, various prefetch algorithms, bus delays, and control and communication overheads. For this paper, the simulator was configured to model the HP C2240 series of disk drives <ref> [HP92] </ref>. Table 1 lists some basic specifications for the HP C2247. To accurately model this drive, an extensive set of parameters was obtained from published documentation and by monitoring the SCSI activity generated by this particular disk.
Reference: [Jaco91] <author> D. Jacobson, J. Wilkes, </author> <title> "Disk Scheduling Algorithms Based on Rotational Position", </title> <type> Hewlett-Packard Technical Report, </type> <institution> HPL-CSP-91-7, </institution> <month> Feb. 26, </month> <year> 1991. </year>
Reference-contexts: Given this information, the scheduler can choose the request with the minimum positioning delay (i.e., combined seek and rotational latency). This algorithm was denoted as Shortest Time First (STF) in [Selt90] and Shortest Access Time First (SATF) in <ref> [Jaco91] </ref>, but we use the term Shortest Positioning Time First (SPTF) to clarify the exact focus of the algorithm. SPTF, like SSTF, suffers from poor starvation resistance. To reduce response time variance, priority can be given to requests that have been in the pending queue for excessive periods of time. <p> To reduce response time variance, priority can be given to requests that have been in the pending queue for excessive periods of time. The priority may slowly increase as the request ages, or a time limit may be set after which requests are given a higher priority <ref> [Selt90, Jaco91] </ref>. <p> For this reason, we also examined an aging algorithm based on SPTF. Denoted as Aged Shortest Positioning Time First (ASPTF), this algorithm is equivalent to the ASATF algorithm proposed in <ref> [Jaco91] </ref>. ASPTF adjusts each positioning delay prediction (T pos ) by subtracting a weighted value corre sponding to the amount of time the request has been waiting for service (T wait ). <p> The resulting effective positioning delay (T eff ) is used in selecting the next request: T eff = T pos (W fl T wait ) The weight suggested in <ref> [Jaco91] </ref> translates approximately to ASPTF (6.3). Figures 3a and 3b show performance data for values of W ranging from 0 (SPTF) to 30. As W in creases, the average response time slowly grows, but response time variance drops significantly. <p> In fact, ASPTF (12) has lower response time variance than C-LOOK, even though its coefficient of variation is slightly higher. Selecting the request with the smallest positioning delay entails significant computational effort (especially for large queues). See <ref> [Jaco91] </ref> for further information on this topic. 6 Traced Workloads To gain an understanding of how various scheduling algorithms perform under actual user workloads, we used traces of disk activity collected from systems in use at various industry and research installations.
Reference: [McNu86] <author> B. McNutt, </author> <title> "An Empirical Study of Variations in DASD Volume Activity", </title> <booktitle> CMG, </booktitle> <year> 1986, </year> <pages> pp. 274-283. </pages>
Reference-contexts: 1 Introduction Disk subsystems must be carefully managed to compensate for the growing performance disparity between processing and storage components. Disk workloads are often characterized by intense bursts of activity, creating long queues of pending requests <ref> [McNu86, Ruem93] </ref>. The disk scheduler is responsible for dynamically ordering the pending requests. A significant portion of request service time may be comprised of mechanical positioning delays, which are highly dependent on the relative positions of the various request blocks and the current disk arm position.
Reference: [Mert70] <author> A. G. Merten, </author> <title> "Some quantitative techniques for file organization", </title> <type> Ph.D. Thesis, Technical Report No. 15, </type> <institution> U. of Wisconsin Comput. Center, </institution> <year> 1970. </year>
Reference-contexts: C-SCAN treats each cylinder equally, rather than favoring the center cylinders. The LOOK algorithm, another SCAN variation, changes the scanning direction if no pending requests exist in the current direction of travel <ref> [Mert70] </ref>. C-SCAN and LOOK can be combined, resulting in the C-LOOK algorithm. VSCAN (R), proposed in [Geis87], creates a continuum of algorithms between SSTF and LOOK. The R parameter denotes how strongly biased the scheduler is towards maintaining the current direction of travel.
Reference: [Rama92] <author> K. Ramakrishnan, P. Biswas, R. Karedla, </author> <title> "Analysis of File I/O Traces in Commercial Computing Environments", </title> <booktitle> ACM SIGMETRICS, </booktitle> <year> 1992, </year> <pages> pp. 78-90. </pages>
Reference-contexts: The worst-case demerit figure observed over all validation runs was 1.9% of the corresponding average response time. 4.2 Workloads We use synthetically generated random workloads and extensive traces captured from actual systems. We describe the traces only briefly as they have been described elsewhere in more detail <ref> [Ruem93, Rama92] </ref>. The traced workloads span a broad range of environments, and each is at least a full workshift (8 hours) in length. Two of the traces come from Hewlett-Packard systems running HP-UX T M , a version of the UNIX T M operating system [Ruem93]. <p> While these traces are actually two months in length, we report data for a single week-long snapshot (5/30/92 to 6/6/92). The other four traces are from commercial VAX T M systems running the VMS T M operating system <ref> [Rama92] </ref>. Air-Rsv is from a transaction processing environment in which about 500 travel agents made airline and hotel reservations. Sci-TS is from a scientific time-sharing environment in which analytic modeling software and graphical and statistical packages were used. Order and Report are from a machine parts distribution company.
Reference: [Ruem93] <author> C. Ruemmler, J. Wilkes, </author> <title> "UNIX Disk Access Patterns", </title> <booktitle> Winter USENIX, </booktitle> <year> 1993. </year>
Reference-contexts: 1 Introduction Disk subsystems must be carefully managed to compensate for the growing performance disparity between processing and storage components. Disk workloads are often characterized by intense bursts of activity, creating long queues of pending requests <ref> [McNu86, Ruem93] </ref>. The disk scheduler is responsible for dynamically ordering the pending requests. A significant portion of request service time may be comprised of mechanical positioning delays, which are highly dependent on the relative positions of the various request blocks and the current disk arm position. <p> The worst-case demerit figure observed over all validation runs was 1.9% of the corresponding average response time. 4.2 Workloads We use synthetically generated random workloads and extensive traces captured from actual systems. We describe the traces only briefly as they have been described elsewhere in more detail <ref> [Ruem93, Rama92] </ref>. The traced workloads span a broad range of environments, and each is at least a full workshift (8 hours) in length. Two of the traces come from Hewlett-Packard systems running HP-UX T M , a version of the UNIX T M operating system [Ruem93]. <p> The traced workloads span a broad range of environments, and each is at least a full workshift (8 hours) in length. Two of the traces come from Hewlett-Packard systems running HP-UX T M , a version of the UNIX T M operating system <ref> [Ruem93] </ref>. Cello comes from a server at HP Labs used for program development, simulation, mail, and news. Snake is from a file server at the University of California at Berke-ley used primarily for compilation and editing. <p> For Cello, C-LOOK produces a higher average response time than the other seek-reducing algorithms. The Cello environment is dominated by large bursts of write requests to a single disk <ref> [Ruem93] </ref>. Almost half of the requests are serviced by this disk, with maximum queue lengths approaching 1000 at the identity scaling factor. In addition, this trace contains the smallest fraction of sequential read requests, thus benefiting the least from the prefetching cache.
Reference: [Ruem94] <author> C. Ruemmler, J. Wilkes, </author> <title> "Modelling Disks", </title> <booktitle> IEEE Computer, </booktitle> <month> March </month> <year> 1994. </year>
Reference-contexts: More aggressive algorithms may require highly accurate knowledge of the data layout. As mentioned above, such mappings may be unavailable or very difficult to obtain. The complexity of the mappings is increased by zoned recording, track/cylinder skew, and defect management <ref> [Ruem94, Wort94] </ref>. 2.3 On-Board Cache The use of memory within embedded disk drive control logic has progressed from small, speed-matching buffers to dynamically-controlled caches containing megabytes of storage. The disk logic can automatically prefetch data into the cache to more quickly satisfy sequential read requests. <p> The average response times of the actual disk and the simulator match to within 0.8% in all cases. Unpredictable host delays partially account for this difference. Greater insight can be achieved by comparing the response time distributions <ref> [Ruem94] </ref>. Figure 1 shows measured and simulated response time distributions for a sample validation workload. As with most of our validation results, one can barely see that two curves are present. [Ruem94] defines the root mean square horizontal distance between the two distributions as a demerit figure for disk model calibration. <p> Greater insight can be achieved by comparing the response time distributions <ref> [Ruem94] </ref>. Figure 1 shows measured and simulated response time distributions for a sample validation workload. As with most of our validation results, one can barely see that two curves are present. [Ruem94] defines the root mean square horizontal distance between the two distributions as a demerit figure for disk model calibration.
Reference: [Seam66] <author> P. H. Seaman, R. A. Lind, T. L. </author> <title> Wilson "An analysis of auxiliary-storage activity", </title> <journal> IBM System Journal, </journal> <volume> Vol. 5, No. 3, </volume> <year> 1966, </year> <pages> pp. 158-170. </pages>
Reference-contexts: As a result, SCAN resists starvation more effectively (i.e., has lower response time variance) than SSTF. Several variations of the SCAN algorithm have been proposed. The Cyclical SCAN algorithm (C-SCAN) replaces the bidirectional scan with a single direction of arm travel <ref> [Seam66] </ref>. When the arm reaches the last cylinder, a full-stroke seek returns it to the first cylinder without servicing any requests along the way. C-SCAN treats each cylinder equally, rather than favoring the center cylinders.
Reference: [Selt90] <author> M. Seltzer, P. Chen, J. Ousterhout, </author> <title> "Disk Scheduling Revisited", </title> <booktitle> Winter USENIX, </booktitle> <year> 1990, </year> <pages> pp. 313-324. </pages>
Reference-contexts: In addition, the current physical location of the active read/write head must be known. Given this information, the scheduler can choose the request with the minimum positioning delay (i.e., combined seek and rotational latency). This algorithm was denoted as Shortest Time First (STF) in <ref> [Selt90] </ref> and Shortest Access Time First (SATF) in [Jaco91], but we use the term Shortest Positioning Time First (SPTF) to clarify the exact focus of the algorithm. SPTF, like SSTF, suffers from poor starvation resistance. <p> To reduce response time variance, priority can be given to requests that have been in the pending queue for excessive periods of time. The priority may slowly increase as the request ages, or a time limit may be set after which requests are given a higher priority <ref> [Selt90, Jaco91] </ref>. <p> FCFS has the lowest coefficient for lighter work-loads. As FCFS begins to saturate and its response time variance expands, C-LOOK emerges as the algorithm with the best starvation resistance. SSTF, as expected, is highly susceptible to starvation. These results compare well with previous studies of scheduling for random workloads <ref> [Geis87, Selt90, Teor72] </ref>. 5.2 Scheduling with Known Mapping If the scheduler has knowledge of LBN-to-PBN mappings, it can more accurately predict seek delays and thereby fl fl FCFS C-LOOK fi fi LOOK ffi ffi VSCAN (0.2) SSTF | | | | | | | | | 0 | 100 | 200
Reference: [Teor72] <author> T. Teorey, T. Pinkerton, </author> <title> "A Comparative Analysis of Disk Scheduling Policies", </title> <journal> Communications of the ACM, </journal> <month> March </month> <year> 1972, </year> <pages> pp. 177-184. </pages>
Reference-contexts: The squared coefficient of variation (oe 2 = 2 ) is also used, as in <ref> [Teor72] </ref>. Given a constant average response time, a decrease in the coefficient of variation implies reduced response time variance (i.e., improved starvation resistance). 5 Synthetic Workloads Synthetically generated random workloads were used in order to replicate previous work and to obtain a starting point for further experiments. <p> FCFS has the lowest coefficient for lighter work-loads. As FCFS begins to saturate and its response time variance expands, C-LOOK emerges as the algorithm with the best starvation resistance. SSTF, as expected, is highly susceptible to starvation. These results compare well with previous studies of scheduling for random workloads <ref> [Geis87, Selt90, Teor72] </ref>. 5.2 Scheduling with Known Mapping If the scheduler has knowledge of LBN-to-PBN mappings, it can more accurately predict seek delays and thereby fl fl FCFS C-LOOK fi fi LOOK ffi ffi VSCAN (0.2) SSTF | | | | | | | | | 0 | 100 | 200
Reference: [Wort94] <author> B. Worthington, G. Ganger, Y. Patt, </author> <title> "Scheduling for Modern Disk Drives and Non-Random Workloads", </title> <type> U. </type> <institution> of Michigan, </institution> <type> Technical Report CSE-TR-194-94, </type> <year> 1994. </year>
Reference-contexts: Sections 5 and 6 present our results using random workloads and traces, respectively. Section 7 summarizes this work and suggests avenues for future research. Additional data and descriptions, excluded due to space limitations, can be found in <ref> [Wort94] </ref>. 2 Modern Disk Drives A disk drive contains a set of rapidly rotating platters (on a common axis) coated on both sides with magnetic media. Data are written in circular tracks on each surface. <p> More aggressive algorithms may require highly accurate knowledge of the data layout. As mentioned above, such mappings may be unavailable or very difficult to obtain. The complexity of the mappings is increased by zoned recording, track/cylinder skew, and defect management <ref> [Ruem94, Wort94] </ref>. 2.3 On-Board Cache The use of memory within embedded disk drive control logic has progressed from small, speed-matching buffers to dynamically-controlled caches containing megabytes of storage. The disk logic can automatically prefetch data into the cache to more quickly satisfy sequential read requests. <p> We also determined the exact LBN-to-PBN mappings for several of these disks, which provided information about zoning, sparing, and existing defects. The validated simulator configuration, including values for all relevant parameters, is described in <ref> [Wort94] </ref>. The simulator was validated by exercising an HP C2247 and capturing traces of all SCSI activity. Each traced request stream was run through the simulator, using the observed request interarrival delays.
References-found: 14

