URL: http://www.isi.edu/soar/gratch/aaai99.ps
Refering-URL: http://www.isi.edu/soar/gratch/home.html
Root-URL: http://www.isi.edu
Email: gratch@isi.edu  
Title: How to Make Your Planner Rude and Other Issues in Multi-Agent Planning  
Author: Jonathan Gratch 
Address: 4676 Admiralty Way, Marina del Rey, CA 90405  
Affiliation: University of Southern California Information Sciences Institute  
Abstract: This article presents an extension to classical planning techniques that facilitates their use in dynamic multi-agent domains. The approach augments an integrated model of plan generation, execution and repair with two additional capabilities. The first is a general approach to multi-agent reasoning that allows an agent to reason about the plans of other agents and alter its planning behavior based on its relationship to those agents. Second, it incorporates an approach to plan management that implements higher-level planning constructs such as intentions to structure multi-agent interactions. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ambros-Ingerson, J. A. and Steel, S. </author> <year> 1988. </year> <title> Integrating Planning, Execution and Monitoring, </title> <booktitle> in AAAI-88. </booktitle>
Reference: <author> Bratman, M., Israel, D. and Pollack, M. </author> <year> 1988. </year> <title> Plans and resource-bounded practical reasoning, </title> <journal> Computational Intelligence, </journal> <volume> 4, </volume> <pages> pp 349-355. </pages>
Reference: <author> Cohen, P. and Levesque, H., </author> <year> 1990. </year> <title> Intention is choice with commitment, </title> <journal> Artificial Intelligence, </journal> <volume> 42(3). </volume>
Reference: <author> Firby, J. </author> <year> 1987. </year> <title> An investigation into reactive planning in complex domains, </title> <note> In AAAI-87. </note>
Reference-contexts: The vehicle agents execute the commanders high-level plans, making appropriate reactions based on the current state of the environment (Tambe 1997). The commander agent is based on the planning architecture described above, whereas the vehicle agents can be viewed as RAP-like execution systems <ref> (Firby 1987) </ref> supplemented with Tambes teamwork and agent tracking techniques. Most recently, I have extended the approach higher in the army command hierarchy, introducing a battalion commander agent that collaborates with its company commander agents to plan and execute a battalion deep attack mission.
Reference: <author> Georgeff, M. P., and Lansky, A. L. </author> <year> 1987. </year> <title> Reactive reasoning and planning, </title> <booktitle> in AAAI-87, </booktitle> <pages> pp. 677-682. </pages>
Reference-contexts: For predicates such as ON (A,B), this truth value is assigned by sensing the environment. With predicates containing a plan designator, I am essentially making the plan network part of the environment, much as in the PRS planner <ref> (Georgeff and Lansky, 1987) </ref>.
Reference: <author> Golden, K., Etzioni, O., and Weld, D. </author> <year> 1994. </year> <title> Omnipotence without Omniscience: Efficient Sensor Management for Planning. </title> <booktitle> in AAAI-94, </booktitle> <address> Seattle, WA. </address>
Reference-contexts: These ideas have been implemented atop the CFOR planner (Gratch, 1997) that incorporates a number of novel features, but for the purposes of this discussion it may be considered equivalent to IPEM (Ambros-Ingerson and Steel 1988), which shares many features with XII <ref> (Golden et al. 1994) </ref>. Some differences between the approach and IPEM are briefly considered later in the article. IPEM was designed to support planning, execution and replanning for environments where actions have duration and the world can change in surprising ways.
Reference: <author> Gratch, J. </author> <year> 1997. </year> <title> Task-decomposition planning for command decision-making, </title> <booktitle> 6 th Conf on Computer Generated Forces and Behavioral Representation. </booktitle>
Reference-contexts: While the extensions I will describe could in principle be incorporated into a variety of planning architectures, some of the details would likely change so I focus the discussion on a particular architecture. These ideas have been implemented atop the CFOR planner <ref> (Gratch, 1997) </ref> that incorporates a number of novel features, but for the purposes of this discussion it may be considered equivalent to IPEM (Ambros-Ingerson and Steel 1988), which shares many features with XII (Golden et al. 1994).
Reference: <author> Grosz, B., and Kraus, S. </author> <year> 1996. </year> <title> Collaborative Plans for Complex Group Action, </title> <journal> Artificial Intelligence, </journal> <volume> 86(2). </volume>
Reference: <author> Hill, R., Chen, J., Gratch, G., Rosenbloom, P., and Tambe, M. </author> <year> 1997. </year> <title> Intelligent Agents for the Synthetic Battlefield, </title> <booktitle> in AAAI-97/IAAI-97, </booktitle> <pages> pp. 1006-1012. </pages>
Reference-contexts: Application The design of this integrated approach to planning has been strongly influenced by its application to a large-scale military decision-making problem. The planner has been used to implement the core reasoning component of battalion and company-level command and control agents for distributed military simulations <ref> (Hill et. al. 1997) </ref>. I illustrate the capabilities of the planner through a discussion of this application domain. The command agents participated in a simulated military exercises known as Synthetic Theater of War '97 (Stow-97).
Reference: <author> Kambhampati, S. and Hendler, J. </author> <year> 1992. </year> <title> A validation-structure-based theory of plan modification and reuse. </title> <booktitle> Artificial Intelligence 55, </booktitle> <pages> pp 193-258. </pages>
Reference-contexts: IPEM has some general plan repair operators that allow it to nonchronologically retract problematic constraints from the plan network. The CFOR planner augments this capability by incorporating a validationstructure approach to plan repair <ref> (Kambhampati, 1992) </ref>. The details of this are unimportant to understand the basic ideas in this article. The main point is that the planner has a number of operations that allow it to modify its current plans.
Reference: <author> Kautz, H. and Selman, B. </author> <year> 1996. </year> <title> Pushing the Envelope: Planning, Propositional Logic, and Stochastic Search, </title> <booktitle> in AAAI-96, </booktitle> <address> Portland, OR, </address> <pages> pp. 1194-1201. </pages>
Reference-contexts: One key issue is how the planner searches the space of plans. Maintaining multiple (roughly independent) plans in the same network may favor different search methods than those commonly used. A novel feature of the CFOR planner is that it generates plans via local iterative repair search <ref> (Kautz and Selman 1996) </ref>, rather than conventional systematic backtracking search of IPEM and other classical planners. I suspect that iterative repair search is more appropriate for planners that perform replanning and it also interacts well with the notion of multiple plans, but this conjecture needs further evaluation.
Reference: <author> Knoblock, C. </author> <year> 1995. </year> <title> Planning, executing, </title> <booktitle> sensing, and replanning for information gathering, IJCAI-95 McAllester, </booktitle> <editor> D. and Rosenblitt, D. </editor> <year> 1991. </year> <title> Systematic Nonlinear Planning, </title> <booktitle> in AAAI-91. </booktitle>
Reference: <author> Minsky, M. </author> <year> 1985. </year> <title> The Society of Mind. </title> <editor> Simon and Schuster Newell, A. </editor> <year> 1990. </year> <title> Unified Theories of Cognition. </title> <publisher> Harvard Press. </publisher>
Reference-contexts: One is the society-of-mind view <ref> (Minsky 1985) </ref> (perhaps more accurately, the tinker-toy approach) where you link different reasoning modules into a single system. For example, Myers CPEF system combines a planner and a plan repair module and a plan manager and some other components to try to attain this flexibility.
Reference: <author> Pollack, M.E., </author> <year> 1992. </year> <title> The uses of plans, </title> <journal> Artificial Intelligence, </journal> <volume> 57(1), </volume> <pages> pp 43-68. </pages>
Reference-contexts: But one may also wish to dynamically alter the way a planner treats certain tasks at different stages of the planning process. For example, Pollack argues people adopt intentions to lock in certain courses of action, thereby constraining subsequent reasoning <ref> (Pollack, 1992) </ref>. Coordinating with other agents may also require a planner to treat its plans differently at different stages in time. For example, the United States Army has invested significant effort in trying to characterize the process by which commanders develop and execute their mission plans.
Reference: <author> Rickel, J. and Johnson, L. </author> <year> 1997. </year> <title> Intelligent tutoring in virtual reality, </title> <booktitle> in Proc. of World Conf on AI in Education. </booktitle>
Reference-contexts: Introduction Recent applications have illustrated the power of planning techniques in remarkably complex applications such as virtual-reality tutoring systems <ref> (Rickel and Johnson, 1997) </ref>, controlling unmanned vehicles (Lee et al., 1994) and a variety military command and control problems (Hill, 1997; desJardins and Wolverton, 1998; Wilkins and Myers, 1996). Applications such as these require the integration of a variety of capabilities that have rarely been addressed by a single system.
Reference: <author> Traum, D. and Allen, J., </author> <year> 1994. </year> <title> Towards a formal theory of repair in plan execution and plan recognition. </title> <journal> Procedings of UK planning and scheduling special interest group. </journal>
Reference: <author> Tambe, M. </author> <year> 1997. </year> <title> Agent Architectures for Flexible, Practical Teamwork, </title> <booktitle> in AAAI-97, </booktitle> <pages> pp. 22-28. </pages>
Reference-contexts: A company of helicopters consists of five vehicles that coordinate their activities as a group, and a commander agent that performs all high-level planning, replanning, and execution monitoring. The vehicle agents execute the commanders high-level plans, making appropriate reactions based on the current state of the environment <ref> (Tambe 1997) </ref>. The commander agent is based on the planning architecture described above, whereas the vehicle agents can be viewed as RAP-like execution systems (Firby 1987) supplemented with Tambes teamwork and agent tracking techniques.
Reference: <author> Wilensky, R. </author> <year> 1980. </year> <title> Meta-Planning, </title> <booktitle> Proceedings AAAI-80, </booktitle> <address> Stanford, CA, </address> <pages> pp. 334-336. </pages>
Reference: <author> Wilkins D. E. and Myers, K. </author> <year> 1996. </year> <title> Asynchronous dynamic replanning in a multiagent planning architecture. Advanced Planning Technology, Austin Tate, </title> <publisher> AAAI Press. </publisher>
References-found: 19

