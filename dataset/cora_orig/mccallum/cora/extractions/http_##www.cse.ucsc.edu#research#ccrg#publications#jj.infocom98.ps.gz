URL: http://www.cse.ucsc.edu/research/ccrg/publications/jj.infocom98.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Loop-Free Multipath Routing Using Generalized Diffusing Computations  
Author: William T. Zaumen J.J. Garcia-Luna-Aceves 
Address: 901 San Antonio Avenue  Palo Alto, CA 94043  Santa Cruz, CA 95064  
Affiliation: Sun Microsystems, Inc. Computer Engineering Department  School of Engineering  University of California  
Abstract: A new distributed algorithm for the dynamic computation of multiple loop-free paths from source to destination in a computer network or internet are presented, validated, and analyzed. According to this algorithms, which is called DASM (Diffusing Algorithm for Shortest Multipath), each router maintains a set of entries for each destination in its routing table, and each such entry consists of a set of tuples specifying the next router and distance in a loop-free path to the destination. DASM guarantees instantaneous loop freedom of multipath routing tables by means of a generalization of Dijkstra and Scholten's diffusing computations. With generalized diffusing computations, a node in a directed acyclic graph (DAG) defined for a given destination has multiple next nodes in the DAG and is able to modify the DAG without creating a directed loop. DASM is shown to be loop-free at every instant, and its average performance is analyzed by simulation and compared against an ideal link-state algorithm and the Diffusing Update Algorithm (DUAL). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Bosack, </author> <title> Method and Apparatus for Routing Communications among Computer Networks, </title> <type> U.S. Patent 5,088,032, </type> <institution> Cisco Systems, </institution> <address> Menlo Park, California, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: The provision of multiple paths in existing internet routing protocols is very limited. For example, OSPF [15] allows a router to choose more than one path to the same destination only when multiple paths of minimum cost exist. IGRP <ref> [1] </ref> allows a router to forward packets through paths whose length is less than the product of the shortest-path length times a variance factor specified by the network administrator.
Reference: [2] <author> J. Cain, S. Adams, M. Noakes, and E. Althouse, </author> <title> A Near-Optimum Multiple Path Routing Algorithm for Space-Based SDI Networks, </title> <booktitle> Proc. IEEE MILCOM '87, </booktitle> <address> Washington, D.C., </address> <pages> pp. </pages> <address> 29.3.1-29.3.7, </address> <year> 1987. </year>
Reference-contexts: If the variance is too small, this approach becomes one of routing through one or more shortest paths; if the variance is too large, long-term routing loops can occur even when all routing tables are correct. The link-state algorithm reported in <ref> [2] </ref> and [3] attempts to provide multiple loop-free paths by requiring a router to forward packets to a destination through neighbors who have reported a smaller distance than the router forwarding the packet. None of these three approaches prevents routing loops when routing tables are inconsistent.
Reference: [3] <author> J. Cain, S.L. Adams, and M. Noakes, </author> <title> Multiple-Path Routing Mechanism for Packet Communications Network, </title> <type> U.S. Patent No. </type> <institution> 4,905,233, Harris Corp., Mel-bourne, Florida, </institution> <month> February </month> <year> 1990. </year>
Reference-contexts: If the variance is too small, this approach becomes one of routing through one or more shortest paths; if the variance is too large, long-term routing loops can occur even when all routing tables are correct. The link-state algorithm reported in [2] and <ref> [3] </ref> attempts to provide multiple loop-free paths by requiring a router to forward packets to a destination through neighbors who have reported a smaller distance than the router forwarding the packet. None of these three approaches prevents routing loops when routing tables are inconsistent. <p> None of these three approaches prevents routing loops when routing tables are inconsistent. To prevent routing loops due to inconsistent routing tables, the algorithm in <ref> [3] </ref> requires every router to have consistent topology information; however, requiring that the topology tables of all routers be consistent is impractical in large internets.
Reference: [4] <author> E.W. Dijkstra and C.S. Scholten, </author> <title> Termination Detection for Diffusing Computations, </title> <journal> Information Processing Letters, </journal> <volume> Vol. 11, No. 1, </volume> <month> August </month> <year> 1980, </year> <pages> pp. 1-4. </pages>
Reference-contexts: In this paper, we introduce the Diffusing Algorithm for Shortest Multipath (DASM) to compute shortest multipaths distributedly. DASM is based on a generalization of the basic scheme first proposed by Dijkstra and Scholten for the dissemination of distributed operations <ref> [4] </ref>, [13]. This generalization, which we call Generalized Diffusing Computations, permits a router to synchronize the updating of the routing-table entry for a given destination while maintaining multiple successors in loop-free paths to the destination.
Reference: [5] <author> J.J. Garcia-Luna-Aceves, </author> <title> Loop-Free Routing Using Diffusing Computations, </title> <journal> IEEE Trans. Networking, </journal> <volume> Vol. 1, No. 1, </volume> <year> 1993. </year>
Reference-contexts: Although several approaches for shortest-path routing with instantaneous loop-freedom have been proposed based on Dijkstra and Scholten's diffusing computations [10] <ref> [5] </ref> or similar appo-raches [14], [16], all of these algorithms guarantee instantaneous loop freedom only if the single successor chosen by each router according to the algorithm is the one used for packet forwarding. <p> Sections 5 and 6 analyze DASM's complexity and average performance; it is shown that DASM provides considerable improvements over DUAL <ref> [5] </ref> and the ideal link-state algorithm, which constitutes an upper bound on the performance of existing routing protocols based on topology broadcast (e.g., OSPF). 2. <p> The basic objective in DASM is to permit routers to maintain at all times a DAG for each destination that has much more connectivity than the directed trees obtained with prior loop-free routing algorithms <ref> [5] </ref>, [7], [10], [14]. To accomplish this, each router has a successor set for each destination, rather than a single successor. <p> A flag r i jk is maintained to ensure this behavior: r jk is true if router i has sent a query to router k for destination j but has not yet received a reply and false otherwise. As with DUAL <ref> [5] </ref>, DASM cannot send a query during an active phase, so that once a router sends a query to its neighbors for destination j, the same router cannot send more queries for desti-nation j, until all replies are received. <p> If router i becomes active, it will receive a reply from each neighbor (with link failures generating implicit replies) in a finite time. The formal proof is essentially the same as the proof for DUAL <ref> [5] </ref>, and can be described informally as follows: The first requirement for showing that generalized diffusing computations terminate is to show that a router that sends a query will always receive a reply to that query and will eventually become passive. <p> Termination follows because DASM does not send messages (other than replies to queries) when passive unless distances change. 4.4 Convergence in C j The proof for convergence in C j is omitted; it is similar to the proof for DUAL <ref> [5] </ref> and follows by an inductive argument. The idea behind the proof is to show that, with a stable topology, all routers in C j eventually have obtained distances from each neighbor at least as large as the distances along the shortest paths through those neighbors. <p> DASM has the same time and communication complexity as DUAL. After a single link failure or link-cost increase, DASM has TC = O (x) <ref> [5] </ref> [10], where x is the number of routers affected by the routing-table perturbation. <p> DASM's communication complexity is the same as DUAL's, i.e., CC = O (6D x), where D is the maximum degree of a router; this is verified in <ref> [5] </ref>.
Reference: [6] <author> J.J. Garcia-Luna-Aceves and J. Behrens, </author> <title> Distributed, Scalable Routing based on Vectors of Link States, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol 13, No. 8, </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: Recently, Garcia-Luna-Aceves and Behrens introduced a hybrid type of routing algorithm, called link-vector algorithms <ref> [6] </ref>, in which a router communicates to its neighbors the costs of those links that belong to its preferred paths to reach destinations. Data packets can be routed using either incremental routing or source routing.
Reference: [7] <author> J.J. Garcia-Luna-Aceves and S. Murthy, </author> <title> A Path-Finding Algorithm for Loop-Free Routing, </title> <journal> IEEE/ACM Trans. Networking, </journal> <month> February </month> <year> 1997. </year>
Reference-contexts: Some distance-vector algorithms and protocols also specify the second to last hop in the shortest path <ref> [7] </ref> [9] or the entire path to a destination [12]. In a link-state algorithm, each router broadcasts messages containing the state of each of the router's adjacent links to every other router in the network; routers use this information to compute shortest paths to all network destinations. <p> The basic objective in DASM is to permit routers to maintain at all times a DAG for each destination that has much more connectivity than the directed trees obtained with prior loop-free routing algorithms [5], <ref> [7] </ref>, [10], [14]. To accomplish this, each router has a successor set for each destination, rather than a single successor.
Reference: [8] <author> M.L. Gardner, </author> <title> I.S. Loobeek, and S.N. Cohn, Type-of-Service Routing: Preliminary Design, </title> <type> BBN Report No. 6195, </type> <institution> BBN Communications Corporation, </institution> <year> 1986. </year>
Reference-contexts: Because of the routing loops that can occur with incremental routing based on any shortest-path algorithm, Gardner, et al. <ref> [8] </ref> argue that source routing be used. This paper demonstrates that incremental routing over multiple loop-free paths is possible, even when routing tables are inconsistent.
Reference: [9] <author> P. Humblet, </author> <title> Another Adaptive Distributed Shortest Path Algorithm, </title> <journal> IEEE Trans. Commun., </journal> <volume> Vol. COM-39, No. 6, </volume> <year> 1991, </year> <pages> pp. 995-1003. </pages>
Reference-contexts: Some distance-vector algorithms and protocols also specify the second to last hop in the shortest path [7] <ref> [9] </ref> or the entire path to a destination [12]. In a link-state algorithm, each router broadcasts messages containing the state of each of the router's adjacent links to every other router in the network; routers use this information to compute shortest paths to all network destinations.
Reference: [10] <author> J.M. Jaffe and F.M. Moss, </author> <title> A Responsive Routing Algorithm for Computer Networks, </title> <journal> IEEE Trans. Commun., </journal> <volume> Vol. COM-30, No. 7, </volume> <month> July </month> <year> 1982, </year> <pages> pp. 1758-1762. </pages>
Reference-contexts: Although several approaches for shortest-path routing with instantaneous loop-freedom have been proposed based on Dijkstra and Scholten's diffusing computations <ref> [10] </ref> [5] or similar appo-raches [14], [16], all of these algorithms guarantee instantaneous loop freedom only if the single successor chosen by each router according to the algorithm is the one used for packet forwarding. <p> The basic objective in DASM is to permit routers to maintain at all times a DAG for each destination that has much more connectivity than the directed trees obtained with prior loop-free routing algorithms [5], [7], <ref> [10] </ref>, [14]. To accomplish this, each router has a successor set for each destination, rather than a single successor. <p> DASM has the same time and communication complexity as DUAL. After a single link failure or link-cost increase, DASM has TC = O (x) [5] <ref> [10] </ref>, where x is the number of routers affected by the routing-table perturbation. To verify this, we note that in the worst case all routers upstream of a destination router j in SG j must participate in a diffusing computation for router j, which corresponds to the operation of DUAL.
Reference: [11] <author> L. Kleinrock, </author> <title> Queueing Systems, </title> <publisher> John Wiley & Sons, </publisher> <year> 1975. </year>
Reference-contexts: In this chain, p is the probability that a link cost increases per step and q = 1 p. In states other than state 1, q is the probability of a link cost decreases per step. For the steady-state probabilities, one obtains <ref> [11] </ref> P 1 = (1 p=q) and P n+1 = p This was used to provide an initial set of link costs for a simulation.
Reference: [12] <author> Y. Rekhter and T. Li, </author> <title> A Border Gateway Protocol 4 (BGP-4), </title> <type> RFC 1654, </type> <month> July </month> <year> 1994. </year>
Reference-contexts: Some distance-vector algorithms and protocols also specify the second to last hop in the shortest path [7] [9] or the entire path to a destination <ref> [12] </ref>. In a link-state algorithm, each router broadcasts messages containing the state of each of the router's adjacent links to every other router in the network; routers use this information to compute shortest paths to all network destinations.
Reference: [13] <author> N. Lynch, </author> <title> Distributed Algorithms, </title> <booktitle> Morgan-Kauffmann, 1996, Ch. </booktitle> <pages> 9. </pages>
Reference-contexts: In this paper, we introduce the Diffusing Algorithm for Shortest Multipath (DASM) to compute shortest multipaths distributedly. DASM is based on a generalization of the basic scheme first proposed by Dijkstra and Scholten for the dissemination of distributed operations [4], <ref> [13] </ref>. This generalization, which we call Generalized Diffusing Computations, permits a router to synchronize the updating of the routing-table entry for a given destination while maintaining multiple successors in loop-free paths to the destination.
Reference: [14] <author> P.M. Merlin and A. Segall, </author> <title> A Failsafe Distributed Routing Protocol, </title> <journal> IEEE Trans. Commun., </journal> <volume> Vol. COM-27, No. 9, </volume> <month> September </month> <year> 1979, </year> <pages> pp. 1280-1288. </pages>
Reference-contexts: Although several approaches for shortest-path routing with instantaneous loop-freedom have been proposed based on Dijkstra and Scholten's diffusing computations [10] [5] or similar appo-raches <ref> [14] </ref>, [16], all of these algorithms guarantee instantaneous loop freedom only if the single successor chosen by each router according to the algorithm is the one used for packet forwarding. <p> The basic objective in DASM is to permit routers to maintain at all times a DAG for each destination that has much more connectivity than the directed trees obtained with prior loop-free routing algorithms [5], [7], [10], <ref> [14] </ref>. To accomplish this, each router has a successor set for each destination, rather than a single successor.
Reference: [15] <author> J. Moy, </author> <note> OSPF Version 2, RFC 1583, </note> <month> March </month> <year> 1994. </year>
Reference-contexts: The provision of multiple paths in existing internet routing protocols is very limited. For example, OSPF <ref> [15] </ref> allows a router to choose more than one path to the same destination only when multiple paths of minimum cost exist.
Reference: [16] <author> A. Segall, </author> <title> Distributed Network Protocols, </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> Vol. IT-29, No. 1, </volume> <month> January </month> <year> 1983, </year> <pages> pp. 23-35. </pages>
Reference-contexts: Although several approaches for shortest-path routing with instantaneous loop-freedom have been proposed based on Dijkstra and Scholten's diffusing computations [10] [5] or similar appo-raches [14], <ref> [16] </ref>, all of these algorithms guarantee instantaneous loop freedom only if the single successor chosen by each router according to the algorithm is the one used for packet forwarding.
Reference: [17] <author> W. Zaumen and J.J. Garcia-Luna Aceves, </author> <title> Dynamics of Link-State and Loop-Free Distance-Vector Routing Algorithms, </title> <journal> Journal of Internetworking, </journal> <volume> Vol. 3, </volume> <year> 1992, </year> <pages> pp. 161-188. </pages>
Reference-contexts: Average Performance and Consistency Tests A series of simulations were run using an existing network simulator <ref> [17] </ref> to compare the performance of DASM with that of DUAL and an ideal link-state algorithm (ILS). <p> After each sequence of changes, the algorithm was allowed to run until it converged. In both cases, we compared the shortest-path distances computed by DUAL and DASM (using a previously validated simulation of DUAL <ref> [17] </ref>, and showed that these distances were identical. Every router was used as a destination in these runs to increase the coverage of the tests.
References-found: 17

