URL: http://www.ics.uci.edu/~bic/messengers/COMPUTER.ps
Refering-URL: http://www.cnri.reston.va.us/home/koe/bib/mobile-abs.bib.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: bic@ics.uci.edu  
Phone: Phone: (714)-824-5248  
Title: Distributed Computing using Autonomous Objects  
Author: Lubomir F. Bic Munehiro Fukuda Michael B. Dillencourt Lubomir Bic 
Keyword: distributed computing, automonous messages, simulation, process migration, open-ended applications, individual-based models, coordination  
Date: Revised February 26, 1996  
Note: Contact author:  
Address: Irvine, CA 92717  
Affiliation: Department of Information and Computer Science University of California,  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [BL87] <author> L. Bic and C. Lee. </author> <title> A data-driven model for a subset of logic programming. </title> <journal> ACM TOPLAS, </journal> <volume> 9(4), </volume> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: later approaches, where messages propagating autonomously through networks are the primary vehicle for solving problems. 2.3 BPEM Another paradigm based on the principles of intelligent messages propagating asynchronously and autonomously through a network of interpreters is the Binary Predicate Execution Model (BPEM) model developed at the University of California, Irvine <ref> [BL87] </ref>. BPEM is a computational model designed to facilitate the parallel processing of knowledge, represented in the form of semantic nets. In a traditional implementation, these nets are viewed as passive repositories of knowledge, where programs are the active 2 objects that search for and process the recorded information.
Reference: [BN84] <author> A.D. Birrell and B.J. Nelson. </author> <title> Implementing remote procedure calls. </title> <journal> ACM Trans. Computer Systems, </journal> <volume> 2, </volume> <year> 1984. </year>
Reference-contexts: This gives messages a certain degree of autonomy in navigating through the underlying network and allows them to be viewed as first-class objects. 2.1 RPCs, Method Invocations, and Remote Evaluation Remote Procedure Calls (RPCs) <ref> [BN84] </ref> are one of the most common mechanisms for high-level communication in distributed systems, especially in client-server type applications. The basic idea is for the client to send a message containing the name of a procedure to be invoked on a remote node, together with the necessary parameters.
Reference: [Cha82] <author> E.J.H. Chang. </author> <title> Echo algorithms: depth parallel operations on general graphs. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> SE-8(4), </volume> <year> 1982. </year>
Reference-contexts: 2.2 Echo Algorithms One of the first approaches to distributed computing based on the philosophy of propagating self-contained intelligent messages through a system of simple interpretive nodes were Echo Algorithms, developed to solve a variety of graph-based problems, such as finding shortest paths or biconnected components of a given graph <ref> [Cha82] </ref>. The basic idea of Echo Algorithms is to start a wave of messages spreading from one or more initial nodes into neighboring nodes until all network nodes have been visited.
Reference: [DS80] <author> E.W. Dijkstra and C.S. Scholten. </author> <title> Termination detection in diffusing computations. </title> <journal> Inf. Process. Letters, </journal> <volume> 16(5), </volume> <month> August </month> <year> 1980. </year>
Reference-contexts: Nevertheless, it is very natural for the programmer to think in terms of waves of autonomous messages when solving certain classes of graph-related problems. Hence this paradigm, together with Dijkstra's diffusing computations <ref> [DS80] </ref> can be viewed as the foundation for later approaches, where messages propagating autonomously through networks are the primary vehicle for solving problems. 2.3 BPEM Another paradigm based on the principles of intelligent messages propagating asynchronously and autonomously through a network of interpreters is the Binary Predicate Execution Model (BPEM) model
Reference: [GC92] <author> D. Gelernter and N. Carriero. </author> <title> Coordination languages and their significance. </title> <journal> Comm. ACM, </journal> <volume> 35(2), </volume> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: The need for specialized coordination paradigms has been argued for eloquently by Gelernter and Carriero in a recent article <ref> [GC92] </ref>. They observe that most existing programming languages focus primarily on computing, while leaving the aspects of communication (including I/O) and coordination to be handled outside the scope of the computing model, i.e., through ad hoc language extensions or library routines.
Reference: [Gee91] <author> T.H. Geesink. </author> <title> The coordination of distributed active messages in a dynamic network topology. </title> <journal> The Computer Journal, </journal> <volume> 34(6), </volume> <year> 1991. </year>
Reference-contexts: The objective is to elevate electronic mail messages from simple carriers of data to entities of a higher rank, called active messages, intelligent messages, active entities, or envoys by the different projects <ref> [Gee91, RD89] </ref>. The purpose is to allow messages, having reached their remote destinations, to perform actions of their own, including collecting data, interacting with other processes or users on the remote host, or sending themselves to other destinations.
Reference: [HW92] <author> A. Huth and C. Wissel. </author> <title> The simulation of the movement of fish schools. </title> <journal> Journal of Theoretical Biology, </journal> <volume> 156 </volume> <pages> 365-385, </pages> <year> 1992. </year> <month> 15 </month>
Reference-contexts: It has been observed that schools of fish are capable of performing complex maneuvers, for example, when avoiding a predator, without any particular individual taking on the role of a leader. The complex behavior of the entire school is the results of local interactions among neighboring fish. In <ref> [HW92] </ref>, a specific model has been formulated, where each fish periodically adjusts its position and velocity by coordinating its movement with up to four of its neighbors. Each individual fish has a circle of visibility with a certain radius r.
Reference: [LuPD95] <author> A. Lingnau and O. Drobnik und P. Doemel. </author> <title> An http-based infrastructure for mobile agents. </title> <booktitle> In 4th International World Wide Web Conference, </booktitle> <month> Dec </month> <year> 1995. </year>
Reference-contexts: The infrastructure necessary to support such mobile agents consists of specialized servers, capable of interpreting the agent's behavior, and communicating with each other using various protocols. For example, the infrastructure developed at the University of Frankfurt <ref> [LuPD95] </ref> is based on a specialized World Wide Web server using the HTTP protocol. Perhaps the best known representative of the mobile agents paradigm is Tele-script, a commercial product developed by General Magic, Inc. (Mountain View, CA).
Reference: [RD89] <author> P.W. Richardson and T. Danielsen. </author> <title> Intelligent messages or when messages come alive. </title> <editor> In K. Boyanov and R. Angelinov, editors, </editor> <booktitle> Network Information Processing Systems. </booktitle> <publisher> North-Holland, </publisher> <year> 1989. </year>
Reference-contexts: The objective is to elevate electronic mail messages from simple carriers of data to entities of a higher rank, called active messages, intelligent messages, active entities, or envoys by the different projects <ref> [Gee91, RD89] </ref>. The purpose is to allow messages, having reached their remote destinations, to perform actions of their own, including collecting data, interacting with other processes or users on the remote host, or sending themselves to other destinations. <p> The purpose is to allow messages, having reached their remote destinations, to perform actions of their own, including collecting data, interacting with other processes or users on the remote host, or sending themselves to other destinations. An example of an active message application given in <ref> [RD89] </ref> is the publicizing of a conference. Initially, an active message would be sent to a list of potential attendees.
Reference: [SB94] <author> P.S. Sapaty and P.M. Borst. </author> <title> An overview of the WAVE language and system for distributed processing of open networks. </title> <type> Technical report, </type> <institution> University of Surrey, UK, </institution> <year> 1994. </year>
Reference-contexts: The basic idea is to let a given graph template be carried by autonomous objects and used as a "road map" to navigate through the underlying network in the search for a topological match. 2.4 WAVE Another representative of the Autonomous Objects paradigm is WAVE <ref> [SB94] </ref>, developed at the University of Surrey, UK, and the University of Karlsruhe, Germany. Like BPEM and Echo Algorithm, WAVE also rejects the notion of precompiled programs running in each node of the underlying network and communicating with other programs via data messages.
Reference: [SG90] <author> J.W. Stamos and D.K. Gifford. </author> <title> Remote evaluation. </title> <journal> ACM TOPLAS, </journal> <volume> 12(4), </volume> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: Hence, in terms of their autonomy and coordination capability, RPCs and invocations of methods are at the same level. The basic RPC concept has been extended by a mechanism called Remote Evaluation <ref> [SG90] </ref>. The essential idea is for the caller to supply the procedure body to be evaluated on the remote computer. This code is carried by the request message along with the necessary parameters and the results are returned to the caller in a way analogous to RPCs.
Reference: [Whi94] <author> J.E. White. </author> <title> Telescript technology. </title> <type> Technical report, </type> <institution> General Magic, Inc., Mountain View, </institution> <address> CA 94040, </address> <year> 1994. </year> <month> 16 </month>
Reference-contexts: While the details of the language have not yet been released, the general operational principles are known and have been reported on in trade journals and technical reports <ref> [Whi94] </ref>. At the core of Telescript are two languages, High Telescript and Low Telescript. The former is object-oriented and translated into the latter, which is interpreted rather than compiled.
References-found: 12

