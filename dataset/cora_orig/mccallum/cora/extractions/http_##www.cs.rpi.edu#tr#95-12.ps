URL: http://www.cs.rpi.edu/tr/95-12.ps
Refering-URL: http://www.cs.rpi.edu/tr/
Root-URL: 
Abstract: THE QUALITY OF PAR TITIONS PRODUCED BY AN ITERATIVE LOAD BALANCER Carlo L. Bottasso, Joseph E. Flaherty*, Can Ozturan*, Mark S. Shephard, Boleslaw K. Szymanski*, James D. Teresco*, Louis H. Ziantz* Scientific Computation Research Center (SCOREC) * and Department of Computer Science, Rensselaer Polytechnic Institute, Troy, NY 12180 USA ABSTRACT We examine the quality of partitions produced by an iterative load balancer in parallel adaptive finite element calculations. We present several metrics which we use to evaluate the quality of a mesh partitioning, and report statistics generated from our analysis of adaptively refined meshes produced during the solution of computational fluid dynamics problems. Timings from the finite element solution phase for runs involving these meshes on 16 and 32 processors of an IBM SP2 are also presented. 1 INTRODUCTION Adaptive finite element methods (FEMs) have gained importance based on their ability to offer reliable solutions to partial differential equations. In such an analysis, the computational domain is first discretized to create a mesh. During the solution process, portions of this mesh are recursively refined or coarsened (h-refinement) and/or the finite element approximation is varied in order (p-refinement) to improve the convergence rate and concentrate the computational effort in parts of the domain where the solution resolution is inadequate [3]. In order to solve large problems within a reasonable period of time, these methods have been implemented on parallel computers. The current methodology for optimizing parallel FEM programs relies on the initial partitioning of the meshes involved in the computation. However, in parallel adaptive codes, a good initial partitioning is not sufficient to assure high performance throughout the computation. Load imbalance caused by adaptive enrichment necessitates a dynamic redistribution of data. Since 1 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> M. W. Beall. </author> <title> SCOREC mesh database version 2.3 user's guide. </title> <institution> Scientific Computation Research Center, Rensselaer Polytechnic Institute, Troy, </institution> <year> 1994. </year> <note> 14 Chapter 1 </note>
Reference: [2] <author> C. L. Bottasso, H. L. de Cougny, M. Dindar, J. E. Flaherty, C. Ozturan, Z. Rusak, and M. S. Shephard. </author> <title> Compressible aerodynamics using a parallel adaptive time-discontinuous galerkin least-squares finite element method. </title> <booktitle> In Proceedings of the Twelveth AIAA Applied Aerodynamics Conference, </booktitle> <pages> pp. 1-11, </pages> <address> Colorado Springs, </address> <year> 1994. </year>
Reference: [3] <author> K. Clark, J. E. Flaherty, and M. S. Shephard, Eds. </author> <title> Applied Numerical Mathematics, 14, special ed. on Adaptive Methods for Partial Differential Equations, </title> <year> 1994. </year>
Reference: [4] <author> L. Dagum. </author> <title> Automatic partitioning of unstructured grids into connected components. </title> <booktitle> In Proceedings of the Supercomputing Conference 1993, </booktitle> <pages> pp. 94-101, </pages> <address> Los Alamitos, </address> <year> 1993. </year>
Reference-contexts: However, iterative migratory load balancing simply modifies existing partitions to rebalance load, and so undesirable features of a poor initial partitioning may propagate to subsequent partitionings. Thus, it might be worthwhile to investigate partitioning methods that guarantee geometrically connected initial partitions <ref> [4] </ref>, as well as developing others that focus on minimizing the number of interprocessor connections, though the importance of these characteristics is still under study.
Reference: [5] <author> H. L. de Cougny, K. D. Devine, J. E. Flaherty, R. M. Loy, C. Ozturan, and M. S. Shephard. </author> <title> Load balancing for the parallel adaptive solution of partial differential equations. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 16 </volume> <pages> 157-182, </pages> <year> 1994. </year>
Reference: [6] <author> H. L. de Cougny, M. S. Shephard, and C. Ozturan. </author> <title> Parallel three-dimensional mesh generation on distributed memory MIMD computers. </title> <note> Submitted to Engineering with Computers. </note>
Reference: [7] <author> B. Hendrickson and R. Leland. </author> <title> The Chaco user's guide, version 1.0. </title> <type> Technical Report SAND93-2339, </type> <institution> Sandia National Laboratories, </institution> <address> Albuquerque, </address> <year> 1993. </year>
Reference-contexts: We would like to measure the effect that the initial partitioning has on subsequent repartitionings necessitated by h-refinement. At present, we have ORB, IRB, and Spectral Recursive Bisection (SRB) available to us. Only ORB and IRB are implemented directly as part of our system. Chaco <ref> [7] </ref>, the SRB package made available The Quality of Partitions... 13 to us by Sandia National Laboratories, runs serially and does not operate directly on meshes in our framework.
Reference: [8] <author> B. Hendrickson and R. Leland. </author> <title> Multidimensional spectral load balancing. </title> <type> Technical Report SAND93-0074, </type> <institution> Sandia National Laboratories, </institution> <address> Albuquerque, </address> <year> 1993. </year>
Reference: [9] <author> S.-H. Hsieh, G. H. Paulino, and J. F. Abel. </author> <title> Evaluation of automatic domain partitioning algorithms for parallel finite element analysis. </title> <type> Structural Engineering Report 94-2, </type> <institution> School of Civil and Environmental Engineering, Cornell University, Ithaca, </institution> <year> 1994. </year>
Reference: [10] <author> C. Ozturan. </author> <title> Distributed environment and load balancing for adaptive unstructured meshes. </title> <type> PhD dissertation, </type> <institution> Computer Science Dept., Rensselaer Polytechnic Institute, Troy, </institution> <year> 1995. </year>
Reference: [11] <author> Y. Saad and M. Schultz. </author> <title> A generalized minimum residual algorithm for solving nonsymmetric linear systems. </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 7 </volume> <pages> 856-869, </pages> <year> 1986. </year>
Reference: [12] <author> F. Shakib, T. J. R. Hugues, and Z. Johan. </author> <title> New finite element formulation for computational fluid dynamics: X. The compressible Euler and Navier-Stokes equations. </title> <booktitle> Computer Methods in Applied Mechanics and Engineering, </booktitle> <volume> 89 </volume> <pages> 141-219, </pages> <year> 1991. </year>
Reference: [13] <author> M. S. Shephard, J. E. Flaherty, H. L. de Cougny, C. Ozturan, C. L. Bottasso, and M. W. Beall. </author> <title> Parallel automated adaptive procedures for unstructured meshes. </title> <note> To appear in Parallel Computing in CFD, AGARD, Neuilly-Sur-Seine, </note> <year> 1995. </year>
Reference: [14] <author> H. D. Simon. </author> <title> Partitioning of unstructured problems for parallel processing. </title> <booktitle> Computer Systems in Engineering, </booktitle> <volume> 2 </volume> <pages> 135-148, </pages> <year> 1991. </year>
Reference: [15] <author> V. Vidwans, Y. Kallinderis, and V. Venkatakrishnan. </author> <title> Parallel dynamic load-balancing algorithm for three-dimensional adaptive unstructured grids. </title> <journal> AIAA Journal, </journal> <volume> 32 </volume> <pages> 497-505, </pages> <year> 1994. </year>
Reference-contexts: We are now experimenting with geometric methods which take advantage of the geometric location of elements that are candidates for migration and their positions in space relative to the centroids of the processors which are sending and receiving load. Vidwans et al. <ref> [15] </ref> have presented divide-and-conquer load balancing methods that take advantage of the geometric information in a similar framework. We have yet to work with inertial heuristics, but such algorithms should give results similar to geometric methods while being potentially less expensive.
References-found: 15

