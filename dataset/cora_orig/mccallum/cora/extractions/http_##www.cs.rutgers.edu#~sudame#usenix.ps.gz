URL: http://www.cs.rutgers.edu/~sudame/usenix.ps.gz
Refering-URL: http://www.cs.rutgers.edu/~sudame/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fsudame,badrig@cs.rutgers.edu  
Title: Transformer Tunnels: A Framework for Providing Route-Specific Adaptations  
Author: Pradeep Sudame B. R. Badrinath 
Address: Piscataway, NJ 08855  
Affiliation: Department of Computer Science Rutgers University  
Date: June, 1998. 1  
Note: The USENIX Annual Technical Conference,  
Abstract: In a network using links with diverse properties, a packet flow that is fine tuned for some links (by selecting a proper packet size, transmission rate, encryption method, etc.) may be inappropriate for other links. Ability to change the flow properties over segments of the network allows flows with different characteristics to coexist; making it possible to adapt to diverse link properties. Application-specific adaptation mechanisms (such as proxies) do not force adaptations on every packet flowing over the link and are therefore insufficient for this purpose. We propose the concept of transformer tunnels that force adaptations on all the packets flowing through them. Transformer tunnels can coexist with proxies because the adaptations provided by both are independent of each other. Transformer tunnels provide adaptations by means of transformation functions. By attaching various transformation functions to such tunnels, we can efficiently fine tune the flow properties. We also provide an API for developing transformation functions. We have implemented transformer tunnels and have used them in our wireless network. In this paper, we present the effects on mobile hosts that use this mechanism to transform flows over the last-hop link for reducing losses during handoffs, and for improving the link utilization. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Atkinson. RFC1825: </author> <title> Security architecture for the Internet Protocol, </title> <month> August </month> <year> 1995. </year> <note> http://globecom.net/(nobg)/ietf/rfc/rfc1825.shtml. </note>
Reference-contexts: A more secure method can be used where the mobile host and the base station share a secret key. This secret key can be established (by using public key encryption) when the mobile host requests encryption over the link. If required, a sophisticated IP-encryption mechanism <ref> [1] </ref> may be used. We do not deal with the issue of key management as it is orthogonal to the mechanism of transformer tunnels. Once the key is obtained, it can be passed as an argument to the encryption function (by using the API described in section 2.1.2).
Reference: [2] <author> N. G. Badr. </author> <title> Cellular Digital Packet Data CDPD. </title> <booktitle> In Proceedings of the IEEE 14th Annual International Phoenix Conference, </booktitle> <pages> pages 659-665, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The availability of various networking technologies leads to a flow of packets over links with diverse properties. Mobile hosts increase this diversity by using wireless technologies such as WaveLAN [35], CDPD <ref> [2] </ref>, Metricom Ricochet [25], Satellites, cellular modems, and so on. Sometimes such wireless networks are used as the backbone technology as well [17]. In such networks, some links are cheap, fast, reliable, and secure; whereas some links are expensive, slow, lossy, and insecure.
Reference: [3] <author> A. Bakre and B.R. Badrinath. I-TCP: </author> <title> Indirect TCP for mobile hosts. </title> <booktitle> In Proceedings of the 15th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 136-143, </pages> <address> Vancouver, Canada, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Support from the base station has been used for adaptation at various layers of the protocol stack. I-TCP <ref> [3] </ref> and Snoop TCP [6] use base stations to improve TCP performance for mobile hosts. At the network layer, base stations have been used to improve the performance during handoffs [9].
Reference: [4] <author> Hari Balakrishnan. </author> <title> Discussion on the end2end mailing list, </title> <month> 20 February </month> <year> 1996. ftp://ftp.isi.edu/end2end/end2end-interest-1996.mail. </year>
Reference-contexts: Dropped ACKs do not affect the reliability of the protocol because TCP ACKs are cumulative. However, ACK filtering leads to bursty transmission from the sender [5]. To alleviate this problem, the base station can regenerate filtered ACKs and can send them to the sender at a steady rate <ref> [4] </ref>. Support for proxies: Transformation functions at the link layer are unaware of the semantics of the data. Proxies can do better filtering based on the data-type-specific operations. A module can be written that provides support for developing proxies. If required, this module can propagate packets to some filter application.
Reference: [5] <author> Hari Balakrishnan, Venkata Padmanabhan, and Randy Katz. </author> <title> The effect of asymmetry on TCP performance. </title> <booktitle> In Proceedings of the 3rd MOBICOM Conference, </booktitle> <pages> pages 77-89, </pages> <address> Budapest, Hungary, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: Transformation tunnels provide a simple framework for implementing Snoop TCP. Dealing with asymmetry: Asymmetric links (where the uplink bandwidth is small as compared to the downlink bandwidth) result in poor TCP performance <ref> [12, 5] </ref>. A slow uplink results in underutilization of the fast downlink because TCP senders decide the transmission rate based on the frequency of incoming ACKs. A transformation function that suppresses a few TCP ACKs reduces the load on the uplink [5]. <p> A slow uplink results in underutilization of the fast downlink because TCP senders decide the transmission rate based on the frequency of incoming ACKs. A transformation function that suppresses a few TCP ACKs reduces the load on the uplink <ref> [5] </ref>. Dropped ACKs do not affect the reliability of the protocol because TCP ACKs are cumulative. However, ACK filtering leads to bursty transmission from the sender [5]. To alleviate this problem, the base station can regenerate filtered ACKs and can send them to the sender at a steady rate [4]. <p> A transformation function that suppresses a few TCP ACKs reduces the load on the uplink <ref> [5] </ref>. Dropped ACKs do not affect the reliability of the protocol because TCP ACKs are cumulative. However, ACK filtering leads to bursty transmission from the sender [5]. To alleviate this problem, the base station can regenerate filtered ACKs and can send them to the sender at a steady rate [4]. Support for proxies: Transformation functions at the link layer are unaware of the semantics of the data.
Reference: [6] <author> Hari Balakrishnan, Srinivasan Seshan, Elan Amir, and Randy Katz. </author> <title> Improving TCP/IP performance over wireless networks. </title> <booktitle> In Proceedings of the 1st MOBI-COM Conference, </booktitle> <address> Berkeley, CA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: We describe some of them here. These functions have not been implemented yet in the transformer tunnels framework. Snoop TCP: Losses on wireless links are usually due to noise on the link. TCP interprets all losses as a symptom of congestion and slows down the transmission. Snoop TCP <ref> [6] </ref> deals with this problem by having faster retrans-missions of lost packets on the wireless link. Transformation tunnels provide a simple framework for implementing Snoop TCP. Dealing with asymmetry: Asymmetric links (where the uplink bandwidth is small as compared to the downlink bandwidth) result in poor TCP performance [12, 5]. <p> Support from the base station has been used for adaptation at various layers of the protocol stack. I-TCP [3] and Snoop TCP <ref> [6] </ref> use base stations to improve TCP performance for mobile hosts. At the network layer, base stations have been used to improve the performance during handoffs [9]. Even at the link layer, use of base stations has been suggested for scheduling packet transmissions to reduce losses [8].
Reference: [7] <institution> Bay Area Research Wireless Access Networks (BARWAN). </institution> <address> http://http.cs.berkeley.edu/randy/Daedalus/BARWAN /BARWAN over.html. </address>
Reference-contexts: Further, a user can have access to multiple devices such as PDAs, laptops, cellular phones and can connect using different networking technologies at different times and different places (as in overlay networks <ref> [7] </ref>). Such dynamic changes makes the fine tuning of the flow difficult. A mobile user invariably encounters a heterogeneous network consisting of segments with diverse properties (bandwidth, asymmetry, reliability, etc.). We need the ability to modify the packet flow over various segments of a route for adapting to such properties.
Reference: [8] <author> P. Bhagwat, P. Bhattacharya, A. Krishna, and S. K. Tripathi. </author> <title> Enhancing throughput over wireless LANs using channel state dependent packet scheduling. </title> <booktitle> In Proceedings of the INFOCOM, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: At the network layer, base stations have been used to improve the performance during handoffs [9]. Even at the link layer, use of base stations has been suggested for scheduling packet transmissions to reduce losses <ref> [8] </ref>. These mechanisms provide a fixed transformation function to solve specific problems introduced by mobility. Transformer tunnels suggested in this paper is not an alternative for above solutions. It merely provides a simple way of using such features whenever they are appropriate.
Reference: [9] <author> Ram on Caceres and N. Padmanabhan. </author> <title> Fast and scalable handoffs for wireless internetworks. </title> <booktitle> In Proceedings of the 2nd MOBICOM Conference, </booktitle> <pages> pages 56-66, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Buffering: Whenever a mobile host performs a handoff, some packets are lost. These losses can be reduced by buffering the last few packets and forwarding them to the mobile host's new location <ref> [9] </ref>. A buffering tunnel acts like a write-through buffer that buffers the last few packets sent to the mobile host. Whenever the mobile host experiences a burst loss, which may be due to a handoff, it asks the tunnel manager to flush the buffer (retransmit the last few packets). <p> Support from the base station has been used for adaptation at various layers of the protocol stack. I-TCP [3] and Snoop TCP [6] use base stations to improve TCP performance for mobile hosts. At the network layer, base stations have been used to improve the performance during handoffs <ref> [9] </ref>. Even at the link layer, use of base stations has been suggested for scheduling packet transmissions to reduce losses [8]. These mechanisms provide a fixed transformation function to solve specific problems introduced by mobility. Transformer tunnels suggested in this paper is not an alternative for above solutions.
Reference: [10] <author> Mikael Degermark and Stephen Pink. </author> <title> Soft state header compression for wireless networks. </title> <booktitle> In Proceedings of the 2nd MOBICOM Conference, </booktitle> <pages> pages 1-14, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Once the key is obtained, it can be passed as an argument to the encryption function (by using the API described in section 2.1.2). Compression: On slow links, the time for transmitting packets is large and compressing packets before transmission improves performance. Header compression techniques <ref> [10, 21] </ref> have been proposed to improve performance for such links. On very slow links, compressing the data portion leads to even more gains [28, 29]. Compressing data is not useful on fast links, because the compression and decompression overheads offset the savings obtained by sending fewer bits.
Reference: [11] <author> Abhijit Dixit, Vipul Gupta, and Ben Lancki. </author> <title> Linux mobile IP: Implementation overview. </title> <address> http://anchor.cs.binghamton.edu/mobileip/. </address>
Reference-contexts: However, the buffer space at the base station is limited. Therefore, the mobile host has to wake up periodically. (Mobile-IP implementation <ref> [11] </ref> requires that the mobile hosts renew their registration every 5 seconds. So in our implementation, a mobile host cannot sleep for more than 5 seconds.) Moreover, the beaconing interval at the base station should be small enough to avoid buffer overflow during the interval. <p> The base stations as well as the mobile hosts use 2-Mbps WaveLAN technology for wireless communication. In addition, the base stations have a wired interface to a 10-Mbps Ethernet. To support mobility, the machines run the mobile-IP code developed at the State University of New York at Binghamton <ref> [11] </ref>. 5.1 Overheads The overheads introduced by the transformer tunnels depend on the adaptations requested. A complex encryption function will lead to reduced throughput. Tunnel overheads should thus be measured when the transformation function introduces a little extra overheads of its own.
Reference: [12] <author> Robert Durst, Gregory J. Miller, and Eric J. Travis. </author> <title> TCP extensions for space communication. </title> <booktitle> In Proceedings of the 2nd MOBICOM Conference, </booktitle> <pages> pages 15-26, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Transformation tunnels provide a simple framework for implementing Snoop TCP. Dealing with asymmetry: Asymmetric links (where the uplink bandwidth is small as compared to the downlink bandwidth) result in poor TCP performance <ref> [12, 5] </ref>. A slow uplink results in underutilization of the fast downlink because TCP senders decide the transmission rate based on the frequency of incoming ACKs. A transformation function that suppresses a few TCP ACKs reduces the load on the uplink [5].
Reference: [13] <author> D. C. Feldmeier, A. J. McAuley, and J. M. Smith. </author> <title> Protocol boosters. </title> <booktitle> To appear in IEEE JSAC Special Issue on Protocol Architecture for the 21st Century, </booktitle> <year> 1997. </year>
Reference-contexts: It merely provides a simple way of using such features whenever they are appropriate. Some other mechanisms extend system functionality by interposing agents [22] between applications and the kernel. The University of Arizona's x-Kernel [19] provides support for composing protocols from simple elements. Protocol boosters <ref> [13] </ref> provide a way to insert such elements into the kernel on-the-fly. Such protocol boosters are similar to the transformation functions described in this paper.
Reference: [14] <author> Marc E. Fiuczynski and Brian N. Bershad. </author> <title> An extensible protocol architecture for application-specific networking. </title> <booktitle> In 1996 Winter USENIX Technical Conference. </booktitle>
Reference-contexts: Another way of adapting to link conditions is by using high-level proxies (HLP) [37]. An HLP allows developing proxies similar to the Daedalus system. There are several systems that provide mechanisms for safely adding code to the system for configuring protocols. For example, the SPIN operating system <ref> [14] </ref> allows dynamic configuration of protocols. The ANTS toolkit [36] allows even more flexibility by shipping the processing code along with the packet.
Reference: [15] <author> A. Fox, S. D. Gribble, E. A. Brewer, and E. Amir. </author> <title> Adapting to network and client variability via on-demand distillation. </title> <booktitle> In Proceedings of the ASPLOS, </booktitle> <pages> pages 160-170, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: The transformation agent can be placed anywhere on the network as long as it can intercept the client's packets. In our network, the base station is the logical choice for transformation agents. Use of proxies has been suggested in the literature for similar adaptations <ref> [15, 26, 37] </ref>. Transformer tunnels are not a replacement for proxies; rather they supplement proxies. Transformer tunnels differ from proxies in three ways. Layer of operation: Proxies usually operate at the application layer. Transformer tunnels, on the other hand, provide a low-level application-transparent adaptation. <p> There are application-layer adaptation techniques that allow greater flexibility. These techniques provide adaptations that are specific to some applications or application-layer protocols. In the Odyssey architecture [26], the granularity of data being sent over the network is decided based on the available resources. The Daedalus system <ref> [15] </ref> uses proxies to performs on-demand distillation of data. That includes converting color images to black-and-white images, converting PostScript to Rich Text Format (RTF), dropping video frames, and so on. Another way of adapting to link conditions is by using high-level proxies (HLP) [37].
Reference: [16] <author> R. H. Frenkiel and Tomasz Imielinski. Infostations: </author> <title> The joy of many-time many-where communications. </title> <type> Technical Report 119, </type> <institution> WINLAB, Rutgers University, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: Thus proxies and transformer tunnels can coexist. Proxies can perform application-specific filtering of data (for example, dropping frames in a video stream), whereas transformer tunnels can provide link-specific optimization of the flow (for example, deferring packets for a mobile host till it is in range of an infostation <ref> [16] </ref>). Mandatory adaptation: High-level proxies operate on streams associated with a particular application or an application-layer protocol like HTTP; whereas transformer tunnels force adaptations on all the packets passing through them.
Reference: [17] <author> J. J. Garcia-Luna-Aceves et al. </author> <title> Wireless internet gateways (WINGS). </title> <booktitle> In Proceedings of the IEEE MIL-COM, </booktitle> <address> Monteresy, California, </address> <month> November </month> <year> 1997. </year>
Reference-contexts: Mobile hosts increase this diversity by using wireless technologies such as WaveLAN [35], CDPD [2], Metricom Ricochet [25], Satellites, cellular modems, and so on. Sometimes such wireless networks are used as the backbone technology as well <ref> [17] </ref>. In such networks, some links are cheap, fast, reliable, and secure; whereas some links are expensive, slow, lossy, and insecure.
Reference: [18] <author> Michael Hicks, Pankaj Kakkar, Jonathan T. Moore, Carl A. Gunter, and Scott Nettles. </author> <title> PLAN: A programming language for active networks. </title> <note> Submitted to PLDI, </note> <year> 1998. </year>
Reference-contexts: For example, the SPIN operating system [14] allows dynamic configuration of protocols. The ANTS toolkit [36] allows even more flexibility by shipping the processing code along with the packet. Another approach is at language level where the PLAN (Programmable Language for Active Networks) <ref> [18] </ref> language is used for programs that are carried in the packets of a programmable network. The SwitchWare [30] project suggests use of switchlets for dynamically linking new functionalities with network elements. 7 Conclusions and Future Work Today's networks are composed of links with diverse properties.
Reference: [19] <author> Norman C. Hutchinson and Larry L. Peterson. </author> <title> The x-Kernel: An architecture for implementing network protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(1) </volume> <pages> 64-76, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Transformer tunnels suggested in this paper is not an alternative for above solutions. It merely provides a simple way of using such features whenever they are appropriate. Some other mechanisms extend system functionality by interposing agents [22] between applications and the kernel. The University of Arizona's x-Kernel <ref> [19] </ref> provides support for composing protocols from simple elements. Protocol boosters [13] provide a way to insert such elements into the kernel on-the-fly. Such protocol boosters are similar to the transformation functions described in this paper.
Reference: [20] <author> RealNetworks, Inc. </author> <title> Live and on-demand audio, video and animation for the Internet. </title> <address> http://www.real.com. </address>
Reference-contexts: Err] % [St. Err] No buffering 2.32 [0.36] 14.19 [0.54] With buffering 0.63 [0.16] 6.91 [0.72] % reduction 73 54 Table 2: Effect of buffering tunnel on handoffs To evaluate the buffering tunnel, we used raplayer and raserver (from RealNetworks, Inc. <ref> [20] </ref>). For this experiment, we used two base stations, an audio server (another fixed machine), and a mobile host. Handoffs were forced every 10 seconds. The mobile host fetched audio files (total 1.2 MB). The buffer size used was 5 packets.
Reference: [21] <author> V. Jacobson. </author> <title> RFC 1144: Compressing TCP/IP headers for low speed serial links, </title> <year> 1990. </year>
Reference-contexts: Once the key is obtained, it can be passed as an argument to the encryption function (by using the API described in section 2.1.2). Compression: On slow links, the time for transmitting packets is large and compressing packets before transmission improves performance. Header compression techniques <ref> [10, 21] </ref> have been proposed to improve performance for such links. On very slow links, compressing the data portion leads to even more gains [28, 29]. Compressing data is not useful on fast links, because the compression and decompression overheads offset the savings obtained by sending fewer bits.
Reference: [22] <author> M. B. Jones. </author> <title> Interposing agents: Transparently interposing code at the system interface. </title> <booktitle> In Proceedings of the 14th SOSP, </booktitle> <pages> pages 80-93, </pages> <address> Asheville, NC, </address> <year> 1993. </year>
Reference-contexts: Transformer tunnels suggested in this paper is not an alternative for above solutions. It merely provides a simple way of using such features whenever they are appropriate. Some other mechanisms extend system functionality by interposing agents <ref> [22] </ref> between applications and the kernel. The University of Arizona's x-Kernel [19] provides support for composing protocols from simple elements. Protocol boosters [13] provide a way to insert such elements into the kernel on-the-fly. Such protocol boosters are similar to the transformation functions described in this paper.
Reference: [23] <author> R. Frank Quick Jr. and Kumar Balachandran. </author> <title> An overview of the cellular digital packet data (CDPD) system. </title> <booktitle> In Proceedings of the Fourth International Symposium on Personal, Indoor and Mobile Radio Communications (PIMRC), </booktitle> <address> Yokohama, Japan, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: The mobile host then stays awake. Based on some inactivity threshold, it decides to enter the energy-savings mode again (card spin-down). This spin-up-spin-down mechanism has already been used for CDPD links <ref> [23] </ref>.
Reference: [24] <author> Jacob R. Lorch and Alan Jay Smith. </author> <title> Software strategies for portable computer energy management. </title> <note> To appear in IEEE Personal Communications. </note>
Reference-contexts: To simplify the implementation we combine at most two packets. Energy savings: Wireless devices usually have power-saving features that are built in the hardware. Software strategies to take advantage of these features are gaining importance <ref> [24] </ref>. We demonstrate a simple energy-saving strategy by using the transformer tunnels. For devices like WaveLAN, energy consumed while waiting for a packet is about seven to eight times higher than the energy consumed when the card is in sleep mode.
Reference: [25] <editor> Metricom ricochet modem. </editor> <address> http://www.metricom.com/ricochet/. </address>
Reference-contexts: 1 Introduction The availability of various networking technologies leads to a flow of packets over links with diverse properties. Mobile hosts increase this diversity by using wireless technologies such as WaveLAN [35], CDPD [2], Metricom Ricochet <ref> [25] </ref>, Satellites, cellular modems, and so on. Sometimes such wireless networks are used as the backbone technology as well [17]. In such networks, some links are cheap, fast, reliable, and secure; whereas some links are expensive, slow, lossy, and insecure.
Reference: [26] <author> Brian Noble, M. Satyanarayanan, Dushyanth Narayanan, J. Eric Tilton, Jason Flinn, and Kevin R. Walker. </author> <title> Agile application-aware adaptation for mobility. </title> <booktitle> In Proceedings of the 16th SOSP, </booktitle> <year> 1997. </year>
Reference-contexts: The transformation agent can be placed anywhere on the network as long as it can intercept the client's packets. In our network, the base station is the logical choice for transformation agents. Use of proxies has been suggested in the literature for similar adaptations <ref> [15, 26, 37] </ref>. Transformer tunnels are not a replacement for proxies; rather they supplement proxies. Transformer tunnels differ from proxies in three ways. Layer of operation: Proxies usually operate at the application layer. Transformer tunnels, on the other hand, provide a low-level application-transparent adaptation. <p> All this is achieved without any changes to the kernel code. There are application-layer adaptation techniques that allow greater flexibility. These techniques provide adaptations that are specific to some applications or application-layer protocols. In the Odyssey architecture <ref> [26] </ref>, the granularity of data being sent over the network is decided based on the available resources. The Daedalus system [15] uses proxies to performs on-demand distillation of data. That includes converting color images to black-and-white images, converting PostScript to Rich Text Format (RTF), dropping video frames, and so on.
Reference: [27] <author> Markus Franz Xaver Johannes Ober-humer. </author> <title> miniLZO mini version of the LZO real-time data compression library. </title> <address> http://www.infosys.tuwien.ac.at/Staff/lux/marco/lzo.html. </address>
Reference-contexts: On slow links, however, a fast compression function (where the time per byte for compression and decompression multiplied by the bandwidth is less than the fraction of bytes saved) leads to improved performance. We have used a simple compression function provided by the minilzo library <ref> [27] </ref>. If the packet is incompressible, we send the original packet without any modifications. The LZO compression method is fast enough to be useful even on WaveLAN. For slower devices like CDPD, it will lead to more gains.
Reference: [28] <author> A. Sacham, R. Monsour, R. Pereiera, and M. Thomas. </author> <title> IP payload compression protocol (IPComp), </title> <month> October </month> <year> 1997. </year> <title> Internet draft, </title> <booktitle> Work in progress. </booktitle>
Reference-contexts: Compression: On slow links, the time for transmitting packets is large and compressing packets before transmission improves performance. Header compression techniques [10, 21] have been proposed to improve performance for such links. On very slow links, compressing the data portion leads to even more gains <ref> [28, 29] </ref>. Compressing data is not useful on fast links, because the compression and decompression overheads offset the savings obtained by sending fewer bits.
Reference: [29] <author> V. Schryver. RFC1977: </author> <title> PPP BSD compression protocol, </title> <month> August </month> <year> 1996. </year>
Reference-contexts: Compression: On slow links, the time for transmitting packets is large and compressing packets before transmission improves performance. Header compression techniques [10, 21] have been proposed to improve performance for such links. On very slow links, compressing the data portion leads to even more gains <ref> [28, 29] </ref>. Compressing data is not useful on fast links, because the compression and decompression overheads offset the savings obtained by sending fewer bits.
Reference: [30] <author> J. M. Smith, D. J. Farber, C. A. Gunter, Scott Nettles, D. C. Feldmeier, and W. D. Sincoskie. Switchware: </author> <title> Accelerating network evolution (white paper), </title> <note> 1996. http://www.cis.upenn.edu/jms/white-paper.ps. </note>
Reference-contexts: The ANTS toolkit [36] allows even more flexibility by shipping the processing code along with the packet. Another approach is at language level where the PLAN (Programmable Language for Active Networks) [18] language is used for programs that are carried in the packets of a programmable network. The SwitchWare <ref> [30] </ref> project suggests use of switchlets for dynamically linking new functionalities with network elements. 7 Conclusions and Future Work Today's networks are composed of links with diverse properties.
Reference: [31] <author> Mark Stemm, Paul Gauthier, Daishi Harada, and Randy Katz. </author> <title> Reducing power consumption of network interfaces in hand-held devices. </title> <booktitle> In Proceedings of the 3rd International Workshop on Mobile Multimedia Communications (MoMuc-3), </booktitle> <pages> pages 130-142, </pages> <year> 1996. </year>
Reference-contexts: For devices like WaveLAN, energy consumed while waiting for a packet is about seven to eight times higher than the energy consumed when the card is in sleep mode. Thus the amount of time the card can be put in sleep mode determines how much energy can be saved <ref> [31] </ref>. The mobile host may put its WaveLAN card in sleep mode only if it knows when not to expect packets. This knowledge can be provided by making the traffic over the wireless link bursty and by informing the mobile host about the time slots when the bursts are sent. <p> The energy-savings transformation function allows any other device to use the same mechanism without modifying the corresponding device driver, but is useful only when energy required to power up and power down the device is low (for example, WaveLAN <ref> [31] </ref>.) The mobile host can sleep for as long as it wants if the base station can buffer any number of packets. However, the buffer space at the base station is limited.
Reference: [32] <author> Pradeep Sudame and B. R. Badrinath. </author> <title> On providing support for protocol adaptation in mobile wireless networks. </title> <type> Technical Report 333, </type> <institution> Department of Computer Science, Rutgers University, </institution> <month> July </month> <year> 1997. </year> <note> http://www.cs.rutgers.edu/pub/technical-reports/dcs-tr-333.ps.Z. </note>
Reference-contexts: Thus, whenever the link conditions change, the tunnel can be reconfigured. This can be achieved by combining the transformer tunnels with our work on exposing link conditions to higher layers of the protocol stack <ref> [32] </ref>. Depending on the transformation functions attached, a transformer tunnel modifies incoming packets. The modified packets contain sufficient information so that they can be restored at the other end of the tunnel. <p> Moreover, packets can be selectively sent to a proxy server allowing easy development of client-proxy-server applications. We also plan to combine transformer tunnels with a mechanism for exposing link conditions to higher layers of the protocol stack <ref> [32] </ref>. This will allow automatic reconfiguration of the tunnels in response to changes in the link conditions. 8 Acknowledgments We would like to thank the anonymous reviewers for their valuable insight, detailed comments, and also for providing pointers to related work on protocol boosters.
Reference: [33] <author> Andrew S. Tanenbaum. </author> <title> Computer Networks. </title> <booktitle> Prentice-Hall, second edition, 1993. Section on cryptography. </booktitle>
Reference-contexts: A transformer tunnel with a simple encryption function may be used here. Depending on the security requirements, various encryption methods can be used. To demonstrate the feasibility of such a transformation function, we have used a simple XOR function to encrypt data <ref> [33] </ref>. A more secure method can be used where the mobile host and the base station share a secret key. This secret key can be established (by using public key encryption) when the mobile host requests encryption over the link. If required, a sophisticated IP-encryption mechanism [1] may be used.
Reference: [34] <author> D. L. Tennenhouse, J. M. Smith, W. D. Sincoskie, D. J. Wetherall, and G. Minden. </author> <title> A survey of active network research. </title> <journal> In IEEE Communications, </journal> <month> January </month> <year> 1997. </year>
Reference-contexts: The origi nal destination address, if different, is stored in the data por-tion of the packet. Some metadata (list of functions to apply to restore the original packet) is also added to the packet. Transformer tunnels provide a way to build a restricted form of active networks <ref> [34] </ref>. In case of transformer tunnels, the packets cannot be transformed at intermediate nodes. All the transformations are performed at the end points of the tunnels. This restriction allows an efficient implementation and is still powerful enough to deal with the problems introduced by mobility.
Reference: [35] <author> Wavelan. </author> <note> http://www.wavelan.com/. </note>
Reference-contexts: 1 Introduction The availability of various networking technologies leads to a flow of packets over links with diverse properties. Mobile hosts increase this diversity by using wireless technologies such as WaveLAN <ref> [35] </ref>, CDPD [2], Metricom Ricochet [25], Satellites, cellular modems, and so on. Sometimes such wireless networks are used as the backbone technology as well [17]. In such networks, some links are cheap, fast, reliable, and secure; whereas some links are expensive, slow, lossy, and insecure.
Reference: [36] <author> David J. Wetherall, John V. Guttag, and David L. Ten-nenhouse. </author> <title> ANTS: A toolkit for building and dynamically deploying network protocols. </title> <note> Submitted to IEEE OPENARCH, </note> <year> 1998. </year>
Reference-contexts: An HLP allows developing proxies similar to the Daedalus system. There are several systems that provide mechanisms for safely adding code to the system for configuring protocols. For example, the SPIN operating system [14] allows dynamic configuration of protocols. The ANTS toolkit <ref> [36] </ref> allows even more flexibility by shipping the processing code along with the packet. Another approach is at language level where the PLAN (Programmable Language for Active Networks) [18] language is used for programs that are carried in the packets of a programmable network.
Reference: [37] <author> Bruce Zenel and Dan Duchamp. </author> <title> A general purpose proxy filtering mechanism applied to the mobile environment. </title> <booktitle> In Proceedings of the 3rd MOBICOM Conference, </booktitle> <pages> pages 248-259, </pages> <address> Budapest, Hungary, </address> <month> Septem-ber </month> <year> 1997. </year>
Reference-contexts: The transformation agent can be placed anywhere on the network as long as it can intercept the client's packets. In our network, the base station is the logical choice for transformation agents. Use of proxies has been suggested in the literature for similar adaptations <ref> [15, 26, 37] </ref>. Transformer tunnels are not a replacement for proxies; rather they supplement proxies. Transformer tunnels differ from proxies in three ways. Layer of operation: Proxies usually operate at the application layer. Transformer tunnels, on the other hand, provide a low-level application-transparent adaptation. <p> If required, this module can propagate packets to some filter application. Other packets can be sent over the link without changes. Application filters can take appropriate actions and send the filtered packets back onto the network. Such a module would be similar to the low-level proxies (LLP) <ref> [37] </ref> for application-independent adaptation. 5 Evaluation This section describes the experiments we performed to evaluate the transformer tunnels. For all our experiments, we used a wireless LAN configuration. The wireless LAN consists of fixed hosts (or base stations) and mobile hosts. <p> The Daedalus system [15] uses proxies to performs on-demand distillation of data. That includes converting color images to black-and-white images, converting PostScript to Rich Text Format (RTF), dropping video frames, and so on. Another way of adapting to link conditions is by using high-level proxies (HLP) <ref> [37] </ref>. An HLP allows developing proxies similar to the Daedalus system. There are several systems that provide mechanisms for safely adding code to the system for configuring protocols. For example, the SPIN operating system [14] allows dynamic configuration of protocols.
References-found: 37

