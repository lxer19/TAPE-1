URL: http://www.cs.iastate.edu/tech-reports/TR92-14.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: 
Title: An Observation on Probability versus Randomness with Applications to Complexity Classes  
Author: TR - Ronald V. Book, Jack H. Lutz and Klaus W. Wagner 
Address: 226 Atanasoff Ames, IA 50011  
Affiliation: Iowa State University of Science and Technology Department of Computer Science  
Date: May 1992  
Abstract-found: 0
Intro-found: 1
Reference: [Amb86] <author> K. Ambos-Spies. </author> <title> Randomness, relativations, and polynomial reducibilities. </title> <booktitle> In Lecture Notes in Computer Sci. </booktitle> <volume> 223, </volume> <pages> pages 23-34. </pages> <booktitle> Proc. 1st Conf. Stucture in Complexity Theory, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: Two of the best-known examples are the following: (i) For almost every oracle A, P (A) 6= NP (A) 6= coNP (A) [BG81]. (ii) For every recursive language B, B 2 BPP if and only if for almost every oracle A, B 2 P (A) <ref> [BG81, Amb86] </ref>. <p> Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m <ref> [Amb86] </ref>, P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. <p> Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T <ref> [BG81, Amb86] </ref>, BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. <p> Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt <ref> [Amb86, TB91] </ref>, AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. The class RAND is considered to be the class of those languages having the greatest possible information content.
Reference: [BBS86] <author> J. Balcazar, R. Book, and U. Schoning. </author> <title> The polynomial-time hierarchy and sparse oracles. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 33 </volume> <pages> 603-617, </pages> <year> 1986. </year>
Reference-contexts: Finally, (c) ) (a) is an immediate consequence of Theorem 7 (a). 2 Theorem 8 remains true for P versus PSPACE via a result from [OL91], and similar statements are true for NP versus PH and PH versus PSPACE (cf. [KL82], <ref> [BBS86] </ref> and [LS86]). The similarity between the results for sparse sets and algorithmically random sets, resp., in Theorem 8 is striking.
Reference: [BDG88] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity I. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: (i') For every A 2 RAND, P (A) 6= NP (A) 6= coNP (A). (ii') For every recursive language B, B 2 BPP if and only if B 2 P (RAND). 2 2 Preliminaries For the most part our notation is standard, following that used by Balcazar, Daz, and Gabarro <ref> [BDG88, BDG90] </ref>. We assume that the reader is familiar with the standard recursive reducibilities and the variants obtained by imposing resource bounds such as time or space on the algorithms that compute these reducibilities. A word (string) is an element of f0; 1g fl .
Reference: [BDG90] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity II. </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: (i') For every A 2 RAND, P (A) 6= NP (A) 6= coNP (A). (ii') For every recursive language B, B 2 BPP if and only if B 2 P (RAND). 2 2 Preliminaries For the most part our notation is standard, following that used by Balcazar, Daz, and Gabarro <ref> [BDG88, BDG90] </ref>. We assume that the reader is familiar with the standard recursive reducibilities and the variants obtained by imposing resource bounds such as time or space on the algorithms that compute these reducibilities. A word (string) is an element of f0; 1g fl .
Reference: [Ben88] <author> C. Bennett. </author> <title> Logical depth and physical complexity. </title> <editor> In R. Herken (ed.), </editor> <booktitle> The Universal Turing Machine: A Half-Century Survey, </booktitle> <pages> pages 227-257. </pages> <publisher> Oxford University Press, </publisher> <year> 1988. </year> <month> 10 </month>
Reference-contexts: ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in <ref> [Ben88] </ref>. The class RAND is considered to be the class of those languages having the greatest possible information content.
Reference: [BG81] <author> C. Bennett and J. Gill. </author> <title> Relative to a random oracle P A 6= NP A 6= coNP A with probability 1. </title> <journal> SIAM J. Computing, </journal> <volume> 10 </volume> <pages> 96-113, </pages> <year> 1981. </year>
Reference-contexts: 1 Introduction Many results in complexity theory involve conditions that are satisfied by " almost every " oracle. Two of the best-known examples are the following: (i) For almost every oracle A, P (A) 6= NP (A) 6= coNP (A) <ref> [BG81] </ref>. (ii) For every recursive language B, B 2 BPP if and only if for almost every oracle A, B 2 P (A) [BG81, Amb86]. <p> Two of the best-known examples are the following: (i) For almost every oracle A, P (A) 6= NP (A) 6= coNP (A) [BG81]. (ii) For every recursive language B, B 2 BPP if and only if for almost every oracle A, B 2 P (A) <ref> [BG81, Amb86] </ref>. <p> By the Kolmogorov 0-1 Law the latter is equivalent to Prob [fA 6= C (A) D (A)g] = 1. 2 &gt;From Theorem 4 and known probability one oracle separations, it follows im mediately that every algorithmically random set A satisfies * P (A) 6= NP (A) 6= coNP (A) <ref> [BG81] </ref>, * BH (A) has infinitely many levels [Cai87], * PH (A) 6= PSPACE (A) [Cai89], etc. Similarly, if with probability one, the relativized polynomial-time hierarchy has infinitely many levels, then this separation is achieved relative to every algorithmically random set. <p> Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T <ref> [BG81, Amb86] </ref>, BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88].
Reference: [Cai87] <author> J.-Y. Cai. </author> <title> Probability one separation of the boolean hierarchy. </title> <booktitle> In Lecture Notes in Computer Sci. </booktitle> <volume> 38, </volume> <pages> pages 148-158. </pages> <address> STACS 87, </address> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference-contexts: is equivalent to Prob [fA 6= C (A) D (A)g] = 1. 2 &gt;From Theorem 4 and known probability one oracle separations, it follows im mediately that every algorithmically random set A satisfies * P (A) 6= NP (A) 6= coNP (A) [BG81], * BH (A) has infinitely many levels <ref> [Cai87] </ref>, * PH (A) 6= PSPACE (A) [Cai89], etc. Similarly, if with probability one, the relativized polynomial-time hierarchy has infinitely many levels, then this separation is achieved relative to every algorithmically random set. Next we wish to develop characterizations of complexity classes in terms of RAND via Theorem 2.
Reference: [Cai89] <author> J.-Y. Cai. </author> <title> With probability one, a random oracle separates PSPACE from the polynomial-time hierarchy. </title> <journal> J. Comput. Systems Sci., </journal> <volume> 38 </volume> <pages> 68-85, </pages> <year> 1989. </year>
Reference-contexts: (A) D (A)g] = 1. 2 &gt;From Theorem 4 and known probability one oracle separations, it follows im mediately that every algorithmically random set A satisfies * P (A) 6= NP (A) 6= coNP (A) [BG81], * BH (A) has infinitely many levels [Cai87], * PH (A) 6= PSPACE (A) <ref> [Cai89] </ref>, etc. Similarly, if with probability one, the relativized polynomial-time hierarchy has infinitely many levels, then this separation is achieved relative to every algorithmically random set. Next we wish to develop characterizations of complexity classes in terms of RAND via Theorem 2.
Reference: [KL82] <author> R. Karp and R. Lipton. </author> <title> Turing machines, that take advice. </title> <booktitle> L'Enseignement Mathematique, 28 2nd series:191-209, </booktitle> <year> 1982. </year>
Reference-contexts: Finally, (c) ) (a) is an immediate consequence of Theorem 7 (a). 2 Theorem 8 remains true for P versus PSPACE via a result from [OL91], and similar statements are true for NP versus PH and PH versus PSPACE (cf. <ref> [KL82] </ref>, [BBS86] and [LS86]). The similarity between the results for sparse sets and algorithmically random sets, resp., in Theorem 8 is striking.
Reference: [LS86] <author> T. Long and A. Selman. </author> <title> Relativizing complexity classes with sparse oracles. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 33 </volume> <pages> 618-627, </pages> <year> 1986. </year>
Reference-contexts: Finally, (c) ) (a) is an immediate consequence of Theorem 7 (a). 2 Theorem 8 remains true for P versus PSPACE via a result from [OL91], and similar statements are true for NP versus PH and PH versus PSPACE (cf. [KL82], [BBS86] and <ref> [LS86] </ref>). The similarity between the results for sparse sets and algorithmically random sets, resp., in Theorem 8 is striking.
Reference: [Mar66] <author> P. Martin-Lof. </author> <title> On the definition of random sequences. </title> <journal> Info. and Control, </journal> <volume> 9 </volume> <pages> 602-619, </pages> <year> 1966. </year>
Reference-contexts: The class RAND of algorithmically random languages, defined by Martin-Lof <ref> [Mar66] </ref> (and in Section 3 below) contains almost every oracle. Thus, for every property that is satisfied by almost every oracle, there exists an oracle A 2 RAND satisfying (A). In this paper we prove that the converse holds for a wide variety of properties . <p> The Kolmogorov 0-1 Law says that every 3 measurable set C f0; 1g ! that is closed under finite variation has either measure 0 or measure 1. 3 Main Result The definition of a random language is due to Martin-Lof <ref> [Mar66] </ref>. A class C is called a constructive null set if there is a total recursive function g with the properties that for every k, (i) C W g (k) f0; 1g ! , and (ii) Prob [W g (k) f0; 1g ! ] 2 k .
Reference: [Mar71] <author> P. Martin-Lof. </author> <title> Complexity oscillations in infinite binary sequences. </title> <journal> Zeitschrift fur Wahrscheinlichkeitstheorie und Verwandte Gebiete, </journal> <volume> 19 </volume> <pages> 225-230, </pages> <year> 1971. </year>
Reference-contexts: = fx 2 A j jxj ng is not greater than 2 n+1 + c. (Recall that the Kolmogorov complexity of the finite language A n is the Kolmogorov complexity of its characteristic string, that is, the prefix of length 2 n+1 1 of the characteristic sequence of A.) Martin-Lof <ref> [Mar71] </ref> proved that every language A in RAND has nearly maximal information content in the sense that the Kolmogorov complexity of A n is strictly greater than 2 n+1 2n for all but finitely many n.
Reference: [NW88] <author> N. Nisan and A. Wigderson. </author> <title> Hardness versus randomness. </title> <booktitle> In Proc. 29th IEEE Symp. Found. of Comput. Sci., </booktitle> <pages> pages 2-11, </pages> <year> 1988. </year>
Reference-contexts: Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T <ref> [NW88] </ref>, and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. The class RAND is considered to be the class of those languages having the greatest possible information content. <p> Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T <ref> [NW88] </ref>, and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. The class RAND is considered to be the class of those languages having the greatest possible information content.
Reference: [OL91] <author> M. Ogiwara and A. Lozano. </author> <title> On one query self-reducible sets. </title> <booktitle> In Proc. 6th IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 139-151, </pages> <year> 1991. </year>
Reference-contexts: Proof The equivalence of (a) and (b) is proved in [OW91]. Further, (a) , (d), (a) , (e), and (e) ) (c) are obvious. Finally, (c) ) (a) is an immediate consequence of Theorem 7 (a). 2 Theorem 8 remains true for P versus PSPACE via a result from <ref> [OL91] </ref>, and similar statements are true for NP versus PH and PH versus PSPACE (cf. [KL82], [BBS86] and [LS86]). The similarity between the results for sparse sets and algorithmically random sets, resp., in Theorem 8 is striking.
Reference: [OW91] <author> M. Ogiwara and O. Watanabe. </author> <title> On polynomial bounded truth table reducibility of NP sets to sparse sets. </title> <journal> SIAM J. Computing, </journal> <volume> 20 </volume> <pages> 471-483, </pages> <year> 1991. </year>
Reference-contexts: Proof The equivalence of (a) and (b) is proved in <ref> [OW91] </ref>. Further, (a) , (d), (a) , (e), and (e) ) (c) are obvious.
Reference: [Rog67] <author> H. Rogers. </author> <title> Theory of Recursive Functions and Effective Computability. </title> <publisher> McGraw-Hill, </publisher> <year> 1967. </year>
Reference-contexts: Let further REC denote the class of recursive languages. Theorem 6 If R is a bounded reducibility that is invariant under finite variations of the oracle, then ALMOSTR = R (RAND) " REC. Proof &gt;From a result of Sacks (see <ref> [Rog67] </ref>, p.272), we have A 2 ALMOSTR if and only if Prob [R 1 (A)] = 1 and A 2 REC.
Reference: [TB91] <author> S. Tang and R. </author> <title> Book. Polynomial-time reducibilities and "almost-all" oracle sets. </title> <journal> Theoret. Computer Sci., </journal> <volume> 81 </volume> <pages> 36-47, </pages> <year> 1991. </year> <month> 11 </month>
Reference-contexts: Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT <ref> [TB91] </ref>, 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt [Amb86, TB91], AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. <p> Proof These follow immediately from Theorem 6 and the known facts that P = ALMOSTP m [Amb86], P = ALMOSTP btt = ALMOSTP log nT [TB91], 8 BPP = ALMOSTP T [BG81, Amb86], BPP = ALMOSTP tt <ref> [Amb86, TB91] </ref>, AM = ALMOSTNP T [NW88], and PH = ALMOSTPH [NW88]. 2 Note that BPP = P T (RAND) " REC has already been proved in [Ben88]. The class RAND is considered to be the class of those languages having the greatest possible information content.
References-found: 17

