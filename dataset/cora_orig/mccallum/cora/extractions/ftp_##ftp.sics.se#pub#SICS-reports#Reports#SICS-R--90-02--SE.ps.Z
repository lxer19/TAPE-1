URL: ftp://ftp.sics.se/pub/SICS-reports/Reports/SICS-R--90-02--SE.ps.Z
Refering-URL: http://www.sics.se/libindex.html
Root-URL: 
Email: Email: seif@sics.se, sverker@sics.se  
Title: KERNEL ANDORRA PROLOG AND ITS COMPUTATION MODEL in the Kernel Andorra Prolog computation model. There
Author: Seif Haridi and Sverker Janson 
Note: The languages Prolog, GHC, Parlog, and Atomic Herbrand, are all exe cutable  in which all of these languages are embeddable.  
Address: Box 1263, S-164 28 KISTA, Sweden  
Affiliation: Swedish Institute of Computer Science  
Date: JANUARY 9, 1990  
Abstract: The logic programming language framework Kernel Andorra Prolog is de fined by a formal computation model. In Kernel Andorra Prolog, general combina - tions of concurrent reactive languages and nondeterministic transformational languages may be specified. The framework is based on constraints. 
Abstract-found: 1
Intro-found: 1
Reference: [Bahgat & Gregory 89] <author> Reem Bahgat and Steve Gregory, Pandora, </author> <title> in: </title> <booktitle> Proceedings of the ICLP-89, </booktitle> <address> Portugal 1989. </address>
Reference-contexts: Nevertheless, research in these two subareas is maturing, and the time has come to tackle the problem of their combination. Several languages of this kind have ap peared recently, such as Andorra-I [Yang 89], flat Andorra Prolog [Haridi 89], and Pandora <ref> [Bahgat & Gregory 89] </ref>, but none of these are fully general. In this paper, a logic programming language framework called Kernel Andorra Prolog is defined.
Reference: [Brand 89] <author> Per Brand, </author> <title> Andorra Implementation Proposal, </title> <type> Internal Report, </type> <institution> SICS 1989. </institution>
Reference: [Haridi 89] <author> Seif Haridi, </author> <title> A Logic Programming Language Based on the Andorra Model, New Generation Computing, </title> <publisher> forthcoming. </publisher>
Reference-contexts: Nevertheless, research in these two subareas is maturing, and the time has come to tackle the problem of their combination. Several languages of this kind have ap peared recently, such as Andorra-I [Yang 89], flat Andorra Prolog <ref> [Haridi 89] </ref>, and Pandora [Bahgat & Gregory 89], but none of these are fully general. In this paper, a logic programming language framework called Kernel Andorra Prolog is defined. <p> Thirdly, the Andorra model reduces the search space by executing the determinate goals first. Goals can fail early, and the constraints produced by a reduction can reduce the number of alternatives for other goals. This has proved to be very relevant for the coding of constraint satisfaction problems <ref> [Kornfeld 89, Saraswat 89b, Bahgat& Gregory 89, Haridi 89, Yang 89a] </ref>. The Andorra model in items: 6 An atomic goal fails if it is known that no clause would succeed for the goal.
Reference: [Haridi & Brand 88] <author> Andorra Prolog, </author> <title> an Integration of Prolog and Committed Choice Languages , in: </title> <booktitle> Proceedings of the FGCS 1988, </booktitle> <address> Japan. </address>
Reference-contexts: Deep guards can also be used to encapsulate nondeterministic transformational parts of a program while maintain - ing a reactive indeterministic computation at an outer level. The computation model is a nontrivial generalization of the so called Andorra Model for pure definite clauses <ref> [Warren 87, Haridi & Brand 88] </ref>. The Andorra Model exploits implicit and-parallelism in the execution of definite clauses. The gen eralized model features a carefully controlled nondeterminism, which is avail able uniformly in a compu tation.
Reference: [Kornfeld 89] <author> William Kornfeld, </author> <title> Constraint Programming in Andorra Prolog, </title> <booktitle> Presented at the Swedish-Japanese-Italian workshop, </booktitle> <year> 1989. </year>
Reference-contexts: Thirdly, the Andorra model reduces the search space by executing the determinate goals first. Goals can fail early, and the constraints produced by a reduction can reduce the number of alternatives for other goals. This has proved to be very relevant for the coding of constraint satisfaction problems <ref> [Kornfeld 89, Saraswat 89b, Bahgat& Gregory 89, Haridi 89, Yang 89a] </ref>. The Andorra model in items: 6 An atomic goal fails if it is known that no clause would succeed for the goal.
Reference: [Lloyd 84] <author> J. W. Lloyd, </author> <title> Foundations of Logic Programming, </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference: [Saraswat 89a] <editor> Vijay A. Saraswat, </editor> <booktitle> Concurrent Constraint Programming Languages , PhD thesis, </booktitle> <institution> Carnegie-Mellon University, </institution> <month> January </month> <year> 1989. </year>
Reference: [Saraswat 89b] <author> Vijay A. Saraswat, </author> <title> Programming in Andorra Prolog, </title> <note> Xerox PARC 1989. </note>
Reference-contexts: Thirdly, the Andorra model reduces the search space by executing the determinate goals first. Goals can fail early, and the constraints produced by a reduction can reduce the number of alternatives for other goals. This has proved to be very relevant for the coding of constraint satisfaction problems <ref> [Kornfeld 89, Saraswat 89b, Bahgat& Gregory 89, Haridi 89, Yang 89a] </ref>. The Andorra model in items: 6 An atomic goal fails if it is known that no clause would succeed for the goal.
Reference: [Warren 87] <author> David H. D. Warren, </author> <title> The Andorra Principle, Presented at Gigalips work - shop, </title> <address> Stockholm, </address> <year> 1987. </year>
Reference-contexts: Deep guards can also be used to encapsulate nondeterministic transformational parts of a program while maintain - ing a reactive indeterministic computation at an outer level. The computation model is a nontrivial generalization of the so called Andorra Model for pure definite clauses <ref> [Warren 87, Haridi & Brand 88] </ref>. The Andorra Model exploits implicit and-parallelism in the execution of definite clauses. The gen eralized model features a carefully controlled nondeterminism, which is avail able uniformly in a compu tation.
Reference: [Yang 89a] <author> Rong Yang, </author> <title> Solving Simple Substitution Ciphers in Andorra-I, </title> <booktitle> in: Proceedings of the ICLP-89, </booktitle> <address> Portugal, </address> <year> 1989. </year>
Reference-contexts: Thirdly, the Andorra model reduces the search space by executing the determinate goals first. Goals can fail early, and the constraints produced by a reduction can reduce the number of alternatives for other goals. This has proved to be very relevant for the coding of constraint satisfaction problems <ref> [Kornfeld 89, Saraswat 89b, Bahgat& Gregory 89, Haridi 89, Yang 89a] </ref>. The Andorra model in items: 6 An atomic goal fails if it is known that no clause would succeed for the goal.
Reference: [Yang 89b] <author> Rong Yang, </author> <title> Implementation Notes on Andorra-I, </title> <type> Internal Report, </type> <institution> University of Bristol. </institution>
References-found: 11

