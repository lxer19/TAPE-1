URL: http://www.pmg.lcs.mit.edu/papers/thetaref.ps.gz
Refering-URL: http://www.pmg.lcs.mit.edu/areas/object-impl.html
Root-URL: 
Title: Theta Reference Manual Preliminary Version  
Author: Barbara Liskov Dorothy Curtis Mark Day Sanjay Ghemawat Robert Gruber Paul Johnson Andrew C. Myers 
Note: This research was supported in part by the Advanced Research Projects Agency of the Department of Defense, monitored by the Office of Naval Research under contract N00014-91-J-4136 and in part by the National Science Foundation under Grant CCR-8822158. The authors also wish to thank all the members of the Programming Methodology Group at MIT for their help and suggestions; there were many group meetings that helped us refine the Theta design.  
Date: February 8, 1995  
Address: Cambridge, MA 02139  
Affiliation: Programming Methodology Group  MIT Laboratory for Computer Science  
Pubnum: Memo 88  
Abstract: This document describes a new programming language called Theta. Theta is a sequential, strongly-typed, object-oriented language. It provides separate mechanisms for type hierarchy, inheritance, and parametric polymorphism. It also provides separate mechanisms for specifications, which define the interfaces of new abstractions, and code that implements the new abstractions, and it allows multiple implementations of types and routines. It has a module mechanism that encapsulates the details of type and routine implementations, while allowing related implementations to share implementation-specific information. Theta is largely derived from CLU, but has also been influenced by Trellis/Owl, Modula-3, C++, and Emerald. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Liskov, M. Day, S. Ghemawat, R. Gruber, U. Maheshwari, A. Myers, and L. Shrira. </author> <title> The Language-Independent Interface of the Thor Persistent Object System. </title> <editor> In O. Bukhres and A. Elmagarmid, editors, </editor> <title> Object-Oriented Multidatabase Systems. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year> <note> Also available as Programming Methodology Group Memo 80, </note> <institution> MIT Lab. for Computer Science, </institution> <address> Cambridge, MA, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: : : : : : : : : : : : : : : : : : : : : : : 79 C Additional Types and Routines 80 1 Overview of the Language Theta is an object-oriented language that was developed for use within the Thor object-oriented database system <ref> [1, 2] </ref>, and its origins within Thor have had a major impact on its design. The requirement that code run safely inside Thor has led to the inclusion of several features, such as strong, static type checking and automatic garbage collection. <p> ith character of self else signals bounds. rest (i: int) returns (string) signals (bounds) % effects returns a string containing self [i],...,self [self.length ()]; % signals bounds if i is not a legal index in self. first (i: int) returns (string) signals (bounds) % effects returns a string containing self <ref> [1] </ref>, ..., self [i]; % signals bounds if i is not a legal index in self. concat (s: string) returns (string) % effects returns a string containing the characters of self followed by the % characters of s; signals failure if the resulting string is bigger % than what can be
Reference: [2] <author> B. Liskov, R. Gruber, P. Johnson, and L. Shrira. </author> <title> A Highly Available Object Repository for Use in a Heterogeneous Distributed System. </title> <booktitle> In Proceedings of the Fourth International Workshop on Persistent Object Systems, </booktitle> <pages> pages 255-266, </pages> <address> Martha's Vineyard, MA, </address> <month> September </month> <year> 1990. </year> <title> Proceedings published as Implementing Persistent Object Bases: Principles and Practice, </title> <editor> A. Dearle, G. Shaw, and S. Zdonik, editors, </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year> <note> Also available as Programming Methodology Group Memo 70, </note> <institution> MIT Lab. for Computer Science, </institution> <address> Cambridge, MA, </address> <month> August </month> <year> 1990. </year>
Reference-contexts: : : : : : : : : : : : : : : : : : : : : : : 79 C Additional Types and Routines 80 1 Overview of the Language Theta is an object-oriented language that was developed for use within the Thor object-oriented database system <ref> [1, 2] </ref>, and its origins within Thor have had a major impact on its design. The requirement that code run safely inside Thor has led to the inclusion of several features, such as strong, static type checking and automatic garbage collection.

References-found: 2

