URL: http://potato.cs.man.ac.uk/papers/step97.ps.gz
Refering-URL: http://potato.cs.man.ac.uk/seanb/publications.html
Root-URL: http://www.cs.man.ac.uk
Email: seanb@cs.man.ac.uk  
Phone: Tel: +44 161 275 6239  
Title: Terminologies and Terminology Servers for Information Environments used in applications relating to medicine and is
Author: S. K. Bechhofer, C.A. Goble, A.L. Rector, W.D. Solomon, W.A. Nowlan 
Note: GRAIL, to represent the terms. The Terminology Server has been extensively  
Address: Oxford Road Manchester M13 9PL  
Affiliation: and the GALEN Consortium Medical Informatics Group University of Manchester  
Abstract: Terminologies, or constrained vocabularies, are a potentially rich means of representing the metadata required for applications that have partially structured and incomplete dynamic data to describe, and exploratory and inexact queries to express. Such applications include digital libraries and multimedia repositories and software management; specific application communities include medicine and art. We propose that terminologies are ideal for meeting today's information requirements and that a dynamic terminology service is the appropriate architectural approach. We present the requirements of a terminology server, and describe the implementation and practical use of one developed by the authors that uses a Description Logic, 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. L. Alpay, W. A. Nowlan, W. D. Solomon, C. Lovis, R. H. Baud, T. Rush, and J.-R. Scherrer. </author> <title> Model-Based Application: The GALEN Structured Clinical User Interface. </title> <booktitle> In AIME 95, </booktitle> <year> 1995. </year>
Reference-contexts: An example of such a tool is the SCUI <ref> [1] </ref>, which provides clinicians with the facility to append detailed clinical information to a clinical record. We describe the dialogue which takes place between the client application and the server. 1. The client requires an initial entry point into the con-ceptual model.
Reference: [2] <author> Y. Arens, C. Y. CHee, C.-N. Hsu, and C. A. Knoblock. </author> <title> Retrieving and Integrating Data From Multiple Information Sources. </title> <journal> International Journal on Intelligent And Cooperative Information Systems, </journal> <volume> 2(2):127158, </volume> <year> 1993. </year>
Reference-contexts: The common description must be rich enough to be all encompassing, and the mappings will be incomplete, imprecise and changeable as sources have missing data or are altered. As sources are described they should be classified with respect to one another to support imprecise cross-mappings <ref> [2] </ref>. <p> Description Logics have been used in a wide variety of applications including the representation of complex schemas for cars [30], software management [8] and medicine [27], data archaeology [6], mediation between heterogeneous data stores <ref> [2] </ref> and database querying [16]. However, interacting with Description Logic implementations can often prove difficult. In the past, solutions involved embedding the logic in large monolithic systems with all the attached problems of maintenance and implementation, lack of consistency, and the hampering the exchange of terms between applications. <p> In addition, terminologies can be used as mediators be tween information sources the server can provide infor-mation about the concrete representation of a conceptual definition in a particular information source. These mappings to other representations can be seen as examples of extrinsic information services <ref> [2] </ref>. As examples, the concept (EstateCar which hasEngi-neSize 1000cc) could be mapped to code A11X from the scheme presented earlier. <p> A terminology service would appear to be orthogonal to these families and contribute to all of them: ontologies for service brokering; terms for describing the semantic content of different services; terminological inferencing etc. SIMS <ref> [2] </ref>, and Observer [19], part of the InfoQuilt pro-gramme [14], use the Description Logics LOOM and Clas sic respectively to mediate between heterogeneous information sources. SIMS still seems to perceive the terminology as an embedded component rather than an information service.
Reference: [3] <author> Y. Arens, R. Hull, and R. King. </author> <title> REFERENCE ARCHITECTURE for the Intelligent Integration of Information, </title> <note> Version 2.0, </note> <year> 1995. </year>
Reference-contexts: Workers in the area of information integration have taken a more architectural viewpoint, for example those working within the I3 (Intelligent Information Integration) initiative. The I3 reference architecture <ref> [3] </ref> proposes four families of services; co-ordination and management, semantic integration and transformation, functional extensions and wrapping. A terminology service would appear to be orthogonal to these families and contribute to all of them: ontologies for service brokering; terms for describing the semantic content of different services; terminological inferencing etc.
Reference: [4] <author> F. Baader and B. </author> <title> Hollunder. A Terminological Knowledge Representation System with Complete Inference Algorithms. </title> <booktitle> In Processing declarative knowledge: International workshop PDK'91, number 567 in Lecture Notes in Computer Science, </booktitle> <pages> pages 6786. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This automatic classification allows us to incrementally elaborate and specialise descriptions (or terms) without having to worry about maintaining a consistent hierarchy explicitly. Recent work has provided a sound formal basis for several description logics along with results concerning their complexity <ref> [4] </ref>. The power of DLs is derived from the automatic determination of subsumption between compositional descriptions. <p> The algorithms are sound however, in that any subsumption relationships determined by the classifier will hold and research is ongoing in the development of tableaux-calculus based algorithms for classification which exhibit better behaviour with respect to completeness <ref> [4] </ref>. Our architecture will enable us to replace the subsump-tion algorithms without any visible difference to client applications. Language Module. The Language Module is responsible primarily for the generation of natural language expressions for concept definitions.
Reference: [5] <author> A. Borgida. </author> <title> Description Logics in Data Management. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 7(5):671782, </volume> <year> 1995. </year>
Reference-contexts: These have enjoyed considerable attention from the Knowledge Representation section of the AI community in the last few years and there are a number of well known prototype DLs, descendants of the KL-ONE language, including CANDIDE, BACK, CLASSIC, and LOOM; for an overview see <ref> [5] </ref>. All DLs define complex entities in terms of composite descriptions made up of a limited set of elementary concepts assembled according to explicit rules. <p> Car hasWheelType WheelType. Car hasCountryOfOrigin Country. defined concepts (Car which hasCountryOfOrigin Germany) name GermanCar. SportsCar which h hasCountryOfOrigin Germany, hasWheelType Alloy i. 2.1. Benefits of a Description Logic Description logics have two functions that make them particularly attractive as models for describing semi-structured and complex information <ref> [5] </ref>. A type system. <p> Concept Services. Along with maintaining the representation of the concepts, the services include operations which both extend and query the content of the model; these operations are commonly known as TELL and ASK <ref> [5] </ref>. Operations for extension include the introduction of new primitive concepts, the introduction of new relations, and the addition of new constraints on roles.
Reference: [6] <author> R. Brachman, P. Selfridge, L. Terveen, B. Altman, A. Borgida, F. Halper, T. Kirk, A. Lazar, D. McGuinness, and L. Renick. </author> <title> Integrated Support for Data Archaeology. </title> <journal> International Journal of Applied and Cooperative Information Systems, </journal> <volume> 2(2):159185, </volume> <year> 1993. </year>
Reference-contexts: Description Logics have been used in a wide variety of applications including the representation of complex schemas for cars [30], software management [8] and medicine [27], data archaeology <ref> [6] </ref>, mediation between heterogeneous data stores [2] and database querying [16]. However, interacting with Description Logic implementations can often prove difficult.
Reference: [7] <author> R. Cote, D. Rothwell, J.L.Palotay, R. Becket, and L.Brochu. </author> <booktitle> The Systemised Nomenclature of Medicine: SNOMED International. </booktitle> <institution> College of American Pathologists, Northfield, IL, </institution> <year> 1993. </year>
Reference-contexts: The use of ter minologies is widespread within communities which have a need or desire to share standardised information, including systems for such diverse purposes as: * classification of medical conditions (e.g. SNOMED) <ref> [7] </ref>, * descriptions of works of art (e.g. Iconclass) [33], * library cataloguing (e.g. Dewey Decimal). The application of terminologies is now receiving attention from the more general information management community because they appear particularly powerful for describing semi-structured information flexibly but with coherence and rigour.
Reference: [8] <author> P. Devanbu, R. Brachman, P. Selfridge, and B. Ballard. </author> <title> LaSSIE: A Knowledge-based software information system. </title> <journal> Communications of the ACM, </journal> <volume> 34(5), </volume> <year> 1991. </year>
Reference-contexts: Description Logics have been used in a wide variety of applications including the representation of complex schemas for cars [30], software management <ref> [8] </ref> and medicine [27], data archaeology [6], mediation between heterogeneous data stores [2] and database querying [16]. However, interacting with Description Logic implementations can often prove difficult.
Reference: [9] <author> M. Doerr. </author> <title> Authority Services in Global Information Spaces. </title> <type> Technical report, </type> <institution> Institute of Computer Science, Foundation for Research and Technology - Hellas, </institution> <address> Heraklion, Crete, Greece., </address> <year> 1996. </year>
Reference-contexts: From an application viewpoint, that of digital libraries, <ref> [9] </ref> discusses the need for an authority tool which is an application providing a knowledge service and the functionality of a thesaurus; this can be interpreted as a terminology server. 6.
Reference: [10] <author> A. Farquhar, R. Fikes, W. Pratt, and J. Rice. </author> <title> Collaborative Ontology Construction for Information Integration. </title> <type> Technical report, </type> <institution> Knowledge Systems Laboratory, Dept of Computer Science, Stanford University, </institution> <year> 1995. </year>
Reference-contexts: CANDIDE [21], but this work is not described in detail and there is little evidence of its practical application. Likewise [18] theoretically applies a terminology logic to information retrieval but without any view on a terminological service architecture. Farquhar et al <ref> [10] </ref> present the case for an ontology server that supports the ability of users to publish, browse, create and edit ontologies through the World Wide Web.
Reference: [11] <author> C. Goble, C. Haul, and S. Bechhofer. </author> <title> Describing and Classifying Multimedia using the Description Logic GRAIL. In Conference on Storage and Retrieval of Still Images and Video IV, </title> <address> San Jose, </address> <year> 1996. </year> <note> SPIE Vol 2670. </note>
Reference-contexts: Application examples include: digital libraries and document/image archives [31], broadcast video archives <ref> [11] </ref> and open hyperme dia systems; * the description of highly complex domains: domains such as medicine and art are so complex, and the variability of description of instances is so great, that a static type system is impracticable without massive loss of descriptive richness [22]; * ontologically-supported mediation between diverse
Reference: [12] <author> I. Horrocks. </author> <title> Optimisation Techniques for Expressive Description Logics. </title> <type> Technical Report UMCS-97-2-1, </type> <institution> University of Manchester, Department of Computer Science, </institution> <year> 1997. </year>
Reference-contexts: Expressive DLs are known to have problems with tractability. If a terminology server is to be used in an interactive fashion as we suggest, the performance of the classifier must be adequate. We have investigated the benefits of parallelism [28], and research is ongoing into optimisation techniques for classification <ref> [12] </ref>. Instances. Using a terminology as a query language requires the full integration of an instance space with the classification operations offered by the concept model.
Reference: [13] <author> Jorke, Matthias and Gallersdorfer, Rainer and Jeusfeld, Manfred A. and Staudt, Martin and Eherer, Stefan. </author> <title> Con-ceptBase A Deductive Object Base for Meta Data Management. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 3:167 192, </volume> <year> 1994. </year>
Reference-contexts: We have described a particular implementation of a service using a particular tech nique known as Description Logics; however, there is no reason to presume that this is the only representation for terms. Indeed, ConceptBase <ref> [13] </ref> could be considered as a terminological service where the concepts are represented in a deductive frame-based model, although it happens that DLs are particularly suited to interface building.
Reference: [14] <author> V. Kashyap and A. Sheth. </author> <title> Semantic Heterogeneity in Global Information Systems: The Role of Metadata, Context and Ontologies. </title> <editor> In G. Papazoglou, M. & Schlageter, editor, </editor> <title> Cooperative Information Systems: Current Trends and Directions. </title> <note> (to appear). </note>
Reference-contexts: A terminology service would appear to be orthogonal to these families and contribute to all of them: ontologies for service brokering; terms for describing the semantic content of different services; terminological inferencing etc. SIMS [2], and Observer [19], part of the InfoQuilt pro-gramme <ref> [14] </ref>, use the Description Logics LOOM and Clas sic respectively to mediate between heterogeneous information sources. SIMS still seems to perceive the terminology as an embedded component rather than an information service. <p> However, Observer describes an ontology server an application providing access to ontologies represented using a description logic, and mappings from terms in the ontologies to data repositories. This can be seen as a kind of terminology server as described here. The InfoQuilt project <ref> [14] </ref> advocates the use of an ontology to describe multimedia and although does not suggest Description Logics or an ontology server as an approach one presumes from their work in integration that this is an approach that they are considering.
Reference: [15] <author> J. Kirby. </author> <title> PEN & PAD: The Next Generation. In Primary Health Care Specialist Group, </title> <address> Cambridge, UK, </address> <year> 1995. </year>
Reference-contexts: An example is PEN & PAD, a product which has evolved from experiments with user interface requirements for clinical data entry [22] and now forms part of the latest version of a major computer package for General Practitioners <ref> [15] </ref>. The application relies on the notion of controlled data entry, where interfaces are built according to the information present in the conceptual model. In particular this constrains the construction of complex expressions, ensuring that incoherent expressions cannot be generated.
Reference: [16] <author> T. Kirk, A. Y. Levy, Y. Sagiv, and D. Srivastava. </author> <title> The Information Manifold. </title> <booktitle> In AAI Spring Symposium on Information Gathering in Distributed Heterogeneous Environments., </booktitle> <address> Stanford, California, 1995. </address> <publisher> AAAI. </publisher>
Reference-contexts: Description Logics have been used in a wide variety of applications including the representation of complex schemas for cars [30], software management [8] and medicine [27], data archaeology [6], mediation between heterogeneous data stores [2] and database querying <ref> [16] </ref>. However, interacting with Description Logic implementations can often prove difficult. In the past, solutions involved embedding the logic in large monolithic systems with all the attached problems of maintenance and implementation, lack of consistency, and the hampering the exchange of terms between applications.
Reference: [17] <author> E. Mays, R. Dionne, and R. Weida. </author> <title> K-Rep System Overview. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3):9397, </volume> <year> 1991. </year>
Reference-contexts: The hierarchy is kept as a graph or semantic network, with nodes representing concept definitions and arcs represent relationships such as subsumption (the specialisation or is-a relationship), usage and so on. The network may actually be held in an external database, as in K-Rep <ref> [17] </ref>. Subsumption test algorithms. Classification depends primarily on a subsumption test a test which determines when one concept definition is a generalization of another. The current implementation of the concept module uses a normalize and compare or structural style of subsumption algorithm [35].
Reference: [18] <author> C. Meghini, F. Sebastiani, U. Straccia, and C. Thanos. </author> <title> A model of information retrieval based on a terminology logic. </title> <booktitle> In Proc ACM SIGIR93. </booktitle> <address> Pittsburg, USA, </address> <pages> pages 298307, </pages> <year> 1993. </year>
Reference-contexts: Some forays have been made into the application of DLs to document description, e.g. CANDIDE [21], but this work is not described in detail and there is little evidence of its practical application. Likewise <ref> [18] </ref> theoretically applies a terminology logic to information retrieval but without any view on a terminological service architecture. Farquhar et al [10] present the case for an ontology server that supports the ability of users to publish, browse, create and edit ontologies through the World Wide Web.
Reference: [19] <author> E. Mena, V. Kashyap, A. Illaramendi, and A. Sheth. </author> <title> Managing Multiple Information Sources through Ontologies: Relationship between Vocabulary Heterogeneity and Loss of Information. In Knowledge Representation meets Databases KRDB '96, </title> <booktitle> ECAI '96, </booktitle> <address> Budapest, Hungary, </address> <year> 1996. </year>
Reference-contexts: A terminology service would appear to be orthogonal to these families and contribute to all of them: ontologies for service brokering; terms for describing the semantic content of different services; terminological inferencing etc. SIMS [2], and Observer <ref> [19] </ref>, part of the InfoQuilt pro-gramme [14], use the Description Logics LOOM and Clas sic respectively to mediate between heterogeneous information sources. SIMS still seems to perceive the terminology as an embedded component rather than an information service.
Reference: [20] <author> J. Nanard and M. Nanard. </author> <title> Should Anchors Be Typed Too? An Experiment with MacWeb. </title> <booktitle> In Hypertext '93, </booktitle> <pages> pages 51 62, </pages> <year> 1993. </year>
Reference-contexts: Recent work in Semantic Hypermedia systems proposes the reintroduction of database conceptual models to hypermedia systems <ref> [20] </ref> otherwise links are rarely typed or represent any rigorously expressed semantic model.
Reference: [21] <author> S. Navathe, A. Savasere, T. Anwar, H. Beck, and S. Gala. </author> <title> Object Modelling Using Classification in CANDIDE and its Applications. </title> <editor> In A. Dogac, T. Ozsu, A. Briliris, and T. Sel-lis, editors, </editor> <booktitle> Advances in Object-Oriented Database Systems, volume 130 of ASI Series, </booktitle> <pages> pages 435476. NATO, </pages> <year> 1994. </year>
Reference-contexts: Some forays have been made into the application of DLs to document description, e.g. CANDIDE <ref> [21] </ref>, but this work is not described in detail and there is little evidence of its practical application. Likewise [18] theoretically applies a terminology logic to information retrieval but without any view on a terminological service architecture.
Reference: [22] <author> W. A. Nowlan, A. L. Rector, S. Kay, B. Horan, and A. Wil-son. </author> <title> A Patient Care Workstation Based on User Centred Design and a Formal Theory of Medical Terminology: PEN & PAD and the SMK Formalism. </title> <booktitle> In Fifteenth Annual Symposium on Computer Applications in Medical Care. Proceedings of SCAMC91, </booktitle> <pages> pages 855857. </pages> <publisher> McGraw-Hill Inc., </publisher> <year> 1991. </year>
Reference-contexts: archives [31], broadcast video archives [11] and open hyperme dia systems; * the description of highly complex domains: domains such as medicine and art are so complex, and the variability of description of instances is so great, that a static type system is impracticable without massive loss of descriptive richness <ref> [22] </ref>; * ontologically-supported mediation between diverse in-formation sources: a terminology can be used to represent a common ontology that different information sources can map to. <p> The model is used as a framework upon which we can hang useful facts, exploiting the inheritance hierarchy to decorate the model sparsely. An example of the use of extrinsics is a drug interaction model produced as part of PEN & PAD <ref> [22] </ref>. A taxonomy of drugs was defined, and using extrinsic information, known interactions between different classes of drugs were recorded. This information was not considered to be important in terminological terms, but it is useful to be able to rely on the hierarchy for retrieval. <p> PEN & PAD Several applications have been built which rely on server functionality to support data entry. An example is PEN & PAD, a product which has evolved from experiments with user interface requirements for clinical data entry <ref> [22] </ref> and now forms part of the latest version of a major computer package for General Practitioners [15]. The application relies on the notion of controlled data entry, where interfaces are built according to the information present in the conceptual model.
Reference: [23] <author> J. O'Neill. </author> <title> An Investigation into the use of GRAIL as a Hy-permedia Authoring Tool. </title> <institution> University of Manchester, Department of Computer Science, </institution> <year> 1996. </year>
Reference-contexts: A terminology server approach is essential if we are to build generic plug and play mixed systems, for example if a semantic hypermedia system is to use the TeS as a link resolution service along with conventional link following or information retrieval services <ref> [23] </ref>. 3.1. Services The services can be broken down into three main types: pure terminological or concept services, language or linguistic services, and extrinsic information services. Concept Services.
Reference: [24] <author> P. Pole and A. Rector. </author> <title> Mapping the GALEN CORE Model to SNOMED III:Initial Experiments. </title> <booktitle> In 1996 AMIA Annual Fall Symposium (Formerly SCAMC), </booktitle> <year> 1996. </year>
Reference-contexts: Such functionality is essential if a new system is to prove compatible with existing work. Domains in which a terminology server would prove useful are often those domains which already have existing terminologies thus legacy systems must be supported <ref> [24] </ref>. In addition, terminologies can be used as mediators be tween information sources the server can provide infor-mation about the concrete representation of a conceptual definition in a particular information source. These mappings to other representations can be seen as examples of extrinsic information services [2]. <p> A1 ... A1.2 ... A2.1 ... H17-A ... J49-A ... SCHEME 1 SCHEME 2 X Y Coding Services Module. The Coding Services Module was built for the specific purpose of relating the GALEN conceptual model to existing coding schemes for medicine <ref> [24] </ref>. It is in fact a spe-cialised example of the more general Extrinsic Information Module. Coding Schemes are a limited form of terminology which generally consist of a collection of terms arranged in a (single-axial) hierarchy, with all relationships between terms explicitly asserted.
Reference: [25] <author> A. Rector, P. Zanstra, </author> <title> and The GALEN Consortium. The GALEN-IN-USE Project. </title> <note> To appear in: European Health Telematics Observatory Journal 1996, </note> <year> 1996. </year>
Reference-contexts: Application Programmers Interface Module Interface Concept Hierarchy Module Interface Lexicon and Grammar Module Interface Code Mappings Concept Module Language Module Coding Module Server and Reference Management Terminology Server 3.3. The Galen Terminology Server The GALEN and GALEN-IN-USE <ref> [25] </ref> EU-funded projects have developed a Terminology Server for the support of medical applications. The Terminology Server presents clinical concepts to applications which may then use the concepts to drive content-sensitive user interfaces, to mediate between medical classification systems or to act as types for medical records. <p> The added value gained from the use of the server is that language and codes can be produced quickly and found without having to resort to the usual methods of navigation through such systems which can be troublesome, as described earlier. 4.2. GALEN-IN-USE GALEN-IN-USE <ref> [25] </ref> is a follow on project to GALEN [27]. The intention in GALEN-IN-USE is to use a terminological model to aid in the building of the next generation of coding schemes for medicine.
Reference: [26] <author> A. L. Rector, S. K. Bechhofer, C. A. Goble, I. Horrocks, W. A. Nowlan, and W. D. Solomon. </author> <title> The GRAIL Concept Modelling Language for Medical Terminology. </title> <booktitle> Artificial Intelligence in Medicine, </booktitle> <address> (9):139171, </address> <year> 1997. </year>
Reference-contexts: The paper deals primarily with the architecture and motivation for a terminology server, and where possible avoids detailed discussion of the description logic used within the implementation. Sections 3 and 4, however, make reference to the GRAIL description logic <ref> [26] </ref> developed during GALEN, as the techniques described there make use of special features of GRAIL. 2. Terminology Logics Conventional approaches to managing terms pre-date computation (medical terminologies have been in use since the 18th Century) and do not in general have a great deal of underlying structure. <p> In contrast to some representations, certain constructs are excluded (for example, negation). GRAIL chiefly differs from its KL-ONE relatives in that it has: conceptual assertions (concept inclusions) that take part in classification; the management of part-whole relationships and limited expressions of cardinality <ref> [26] </ref>. For the purposes of this paper only one of GRAIL's differences needs explanation, as it is used by the linguistic and interface building services, namely role sanctioning. A sanction is an assertion that two concepts may be related via some role.
Reference: [27] <author> A. L. Rector, P. Zanstra, W. D. Solomon, </author> <title> and The GALEN Consortium. GALEN: Terminology Services for Clinical Information Systems. </title> <editor> In M. Laires, M. Ladeira, and J. Chris-tensen, editors, </editor> <booktitle> Health in the new Communications Age, volume 24 of Health Technology and Informatics. </booktitle> <publisher> IOS Press, </publisher> <year> 1995. </year>
Reference-contexts: We have built a terminology server for a clinical environment and report on our practical experiences from that effort. Section 2 describes Terminology Logics and the requirements for a Terminology Server and Section 3 describes the architecture of a Terminology Server and the implementation for the GALEN <ref> [27] </ref> project and other programmes. Section 4 describes applications making use of the GALEN server. Section 5 discusses related work and Section 6 presents our conclusions. <p> Description Logics have been used in a wide variety of applications including the representation of complex schemas for cars [30], software management [8] and medicine <ref> [27] </ref>, data archaeology [6], mediation between heterogeneous data stores [2] and database querying [16]. However, interacting with Description Logic implementations can often prove difficult. <p> GALEN-IN-USE GALEN-IN-USE [25] is a follow on project to GALEN <ref> [27] </ref>. The intention in GALEN-IN-USE is to use a terminological model to aid in the building of the next generation of coding schemes for medicine.
Reference: [28] <author> G. D. Riley, J. M. Bull, and A. P. Nisbet. </author> <title> Parallelisation of a Semantic Network Classifier. </title> <booktitle> In 2nd European School of Computer Science, Parallel Programming Environments for High Performance Computing,, </booktitle> <address> l'Alpe d'Huez, </address> <year> 1996. </year>
Reference-contexts: Early implementations were built in Smalltalk a language supporting rapid prototyping and the easy construction of user interface tools. However, as the models grow larger, the performance of the Smalltalk implementations becomes unacceptable. Alternative implementations of the core conceptual functionality have been built in C++ <ref> [28] </ref>. The modular nature of the server internals allowed the replacement of the classification engine with a minimum of disruption. 5. <p> Performance. Expressive DLs are known to have problems with tractability. If a terminology server is to be used in an interactive fashion as we suggest, the performance of the classifier must be adequate. We have investigated the benefits of parallelism <ref> [28] </ref>, and research is ongoing into optimisation techniques for classification [12]. Instances. Using a terminology as a query language requires the full integration of an instance space with the classification operations offered by the concept model.
Reference: [29] <author> J. E. Rogers, S. W. D., A. L. Rector, P. Pole, P. Zanstra, and E. van der Haring. </author> <note> Rubrics to Dissections to GRAIL to Classifications. In To appear in: MIE 97, </note> <year> 1997. </year>
Reference-contexts: In addition, much use is made of metadata and templates. Intermediate representations are used to insulate modellers from the complexities of the underlying representations. Rubrics are dissected into an intermediate format which can then be translated into GRAIL expressions using tools such as the SPET and TIGGER <ref> [29] </ref>. The modelling process is often interactive, requiring a certain level of performance from the classification engines which form the heart of the terminology server. Early implementations were built in Smalltalk a language supporting rapid prototyping and the easy construction of user interface tools.
Reference: [30] <author> N. Rychtyckyj. DLMS: </author> <title> An Evaluation of KL-ONE in the Automobile Industry. </title> <booktitle> In KR' 96, </booktitle> <pages> pages 588596, </pages> <year> 1996. </year>
Reference-contexts: Description Logics have been used in a wide variety of applications including the representation of complex schemas for cars <ref> [30] </ref>, software management [8] and medicine [27], data archaeology [6], mediation between heterogeneous data stores [2] and database querying [16]. However, interacting with Description Logic implementations can often prove difficult.
Reference: [31] <author> J. Schmidt, G. Schroder, C. Niederee, and F. Matthes. </author> <title> Linguistic and Architectural Requirements for Personalized Digital Libraries. </title> <journal> International Journal of Digital Libraries (JODL), </journal> <volume> 1(1), </volume> <year> 1996. </year>
Reference-contexts: Application examples include: digital libraries and document/image archives <ref> [31] </ref>, broadcast video archives [11] and open hyperme dia systems; * the description of highly complex domains: domains such as medicine and art are so complex, and the variability of description of instances is so great, that a static type system is impracticable without massive loss of descriptive richness [22]; *
Reference: [32] <author> TAMBIS. </author> <note> Tambis www home page. http://www.cs.man.ac.uk/mig/tambis/index.html, 1996. </note>
Reference-contexts: The use of the model for querying rather than data entry poses new problems in terms of user interfaces which are being addressed as part of the TAMBIS project <ref> [32] </ref>. In general, the level at which queries can be asked will differ to the level at which information must be specified for data entry.
Reference: [33] <author> H. v. d. Waal. ICONCLASS: </author> <title> An Iconographic Classification System. </title> <publisher> Koninklijke Nederlandse Akademie van Weten-schappen, </publisher> <pages> 1973-1985. </pages>
Reference-contexts: The use of ter minologies is widespread within communities which have a need or desire to share standardised information, including systems for such diverse purposes as: * classification of medical conditions (e.g. SNOMED) [7], * descriptions of works of art (e.g. Iconclass) <ref> [33] </ref>, * library cataloguing (e.g. Dewey Decimal). The application of terminologies is now receiving attention from the more general information management community because they appear particularly powerful for describing semi-structured information flexibly but with coherence and rigour.
Reference: [34] <author> J. C. Wagner, R. H. Baud, and J.-R. Scherrer. </author> <title> Generating Noun Phrases from a Medical Knowledge Representation. </title> <booktitle> In MIE 94, </booktitle> <pages> pages 218223, </pages> <address> Lisbon, Portugal, </address> <year> 1994. </year>
Reference-contexts: Language generation uses a lexicon containing words or phrases for elementary concept definitions, along with grammar rules which describe how phrases should be combined together. The concept hierarchy is used extensively, allowing the addition of general rules which describe phrase construction for a large number of situations <ref> [34] </ref>. The central grey area represents the conceptual hierarchy (as stored and represented in the Concept Module). There are some elementary concepts such as Country, Car, Ger-many, along with some composite definitions (which will have been placed in the hierarchy by the classifier).
Reference: [35] <author> W. Woods. </author> <title> Understanding Subsumption and Taxonomy: A Framework for Progress. </title> <editor> In J. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks: Explorations in the representation of knowledge, </booktitle> <pages> pages 4594. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: Subsumption test algorithms. Classification depends primarily on a subsumption test a test which determines when one concept definition is a generalization of another. The current implementation of the concept module uses a normalize and compare or structural style of subsumption algorithm <ref> [35] </ref>. Such algorithms have been shown to have problems with incompleteness the classifier may not spot all subsumption relationships that hold.
References-found: 35

