URL: http://www.cs.toronto.edu/~chow/papers/astc-hpc98.ps.gz
Refering-URL: http://www.cs.toronto.edu/~chow/interests.html
Root-URL: 
Email: E-mail chow@cs.toronto.edu and enright@cs.toronto.edu  
Title: DISTRIBUTED PARALLEL SHOOTING FOR BVODES  
Author: Kwok L. Chow and Wayne H. Enright 
Keyword: Distributed processors, Numerical methods, Differential equation solvers, Error analysis, Performance analysis  
Address: 10 King's College Road, Toronto, Ontario, Canada M5S 3G4  
Affiliation: Department of Computer Science, University of Toronto  
Abstract: Many important scientific problems can be formulated as systems of ordinary differential equations with two-point boundary value constraints (BVODE). Multiple shooting is one of the most widely used numerical techniques for solving BVODE problems. In this work, we present a distributed parallel numerical algorithm for BVODEs which is based on multiple shooting. We investigate the numerical stability of this distributed algorithm and identify difficulties that can arise. We propose a parallel iterative refinement scheme to cope with some specific numerical difficulties identified in our investigation. Computational experience is presented to demonstrate the potential effectiveness of our approach. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ascher, U.M. and S.Y.P. Chan. </author> <year> 1991. </year> <title> "On parallel methods for boundary value ODEs." </title> <booktitle> Computing 46 </booktitle> <pages> 1-17. </pages>
Reference: <author> Chow, K.L. and W.H. Enright. </author> <year> 1997. </year> <title> "Distributed parallel shooting for BVODEs." </title> <type> Technical Report 310/97. </type> <institution> Department of Computer Science, University of Toronto, Toronto, Canada. </institution>
Reference-contexts: For i = 0; ; m 1 pardo Compute y l+1 i = y l i Endfor Endfor Indeed, the PBN and BN iterations will compute the same Y l+1 if exact arithmetic is used. This fact is assured by the following theorem, see <ref> (Chow and Enright 1997) </ref> for the proof. Theorem 1 The PBN and the BN formulations of multiple shooting are algorithmically equivalent under an exact arithmetic assumption. In a distributed memory machine, processors are connected using a message passing interconnection network. <p> This induced perturbation, ds l 0 , will be propagated (and possibly amplified) by the recursion scheme and accumulated in ds l i of s l i , for i = 1; ; m1. Theorem 2 gives the upper bound on the size of the induced per turbations, see <ref> (Chow and Enright 1997) </ref> for the proof. Theorem 2 Let s l 0 and s l 0 be the exact solutions of the linear systems, Bu = 0 and Bu = ( 0 +d 0 ), respectively. <p> 2x 0 1 + 19 sin 2x 1 + 19 sin 2x 0 1 + 19 cos 2x ; q = e x e x BCs: y 1 (0) = 1; y 3 (0) + y 3 () = 1 + e Discussion, Conclusion, and Future Work Note that, in <ref> (Chow and Enright 1997) </ref>, we report more detailed performance analysis of our approach on a wider class of test problems. The results presented here in Tables 1-6 z reflect typical performance improvements that were observed.
Reference: <author> Bader, G. and P. Deuflhard. </author> <year> 1982. </year> <title> "Multiple shooting techniques revisited." </title> <type> Technical Report Preprint 163. </type> <institution> Universitat Heidelberg, Institut fur Angewandte Mathematik, Im Neuenheimer Feld 293, 6900 Heidel-berg, Federal Republic of Germany. </institution>
Reference-contexts: By restricting the length of mesh intervals, one can control the size of k L i k and at the same time avoid numerical singular blocks. However, the number of mesh intervals and the corresponding increase in storage may be unacceptable. In <ref> (Bader and Deuflhard 1982) </ref>, it has been shown that there are BVODE problems which are comparatively well-conditioned even though the corresponding initial value problems are ill-conditioned. These well-conditioned BVODEs exhibit both rapidly growing and decaying solution components.
Reference: <author> Higham, N.J. </author> <year> 1996. </year> <title> Accuracy and stability of numerical algorithms. </title> <publisher> SIAM Press. </publisher>
Reference-contexts: One iterative refinement step will usually be enough to improve the accuracy of the computed solution, see <ref> (Higham 1996) </ref>. Consider the solution of the linear system, JS l = . We examine the stability of the exact solution, S l , relative to a perturbation, d , of the right side, .
Reference: <author> Hull, T.E.; W.H. Enright; and K.R. Jackson. </author> <year> 1976. </year> <title> "User's guide for DVERK a subroutine for solving non-stiff ODE's." </title> <type> Technical Report 100. </type> <institution> Department of Computer Science, University of Toronto, Toronto, Canada. </institution>
Reference-contexts: Implementations and Test Problems We have tested our parallel approach by modifying j-ms (a locally developed version of BVPMS). All modifications of this multiple shooting algorithm employ dverk as the initial value problem solver. This is a routine based on Verner's fifth and sixth order pair of Runge-Kutta formulas <ref> (Hull et al. 1976) </ref>. We have first implemented a serial version of our block Newton method on a SUN SPARCstation. We will refer to this serial implementation as bn-ms.
Reference: <author> Jackson, K.R. and R.N. Pancer. </author> <year> 1992. </year> <title> "The parallel solution of ABD systems arising in numerical methods for BVPs for ODEs." </title> <type> Technical Report 255/91. </type> <institution> Department of Computer Science, University of Toronto, Toronto, Canada. </institution>
Reference-contexts: Thus, if the number of subintervals, m, is large, parallel computation should have a significant influence on the processing time of some components of the algorithm. A survey discussion of existing parallel algorithms for BVODE problems can be found in <ref> (Jackson and Pancer 1992) </ref>. We have developed our distributed algorithm by taking advantages of the inherent structure of the large linear systems that arise when using multiple shooting. In particular, we employ efficient prefix and fan-in associative operations to solve these systems.
Reference: <author> JaJa, J. </author> <year> 1992. </year> <title> An introduction to parallel algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> New York. </address>
Reference-contexts: We observe that the BN iteration results in first-order linear recurrences involving vector and matrix operations. We realize that such linear recurrences can be solved effectively in parallel using the prefix operation, see <ref> (JaJa 1992) </ref>. For solving (3), we must first construct B and 0 before we can determine s l 0 and then solve a linear recurrence for s l i .
Reference: <author> Jankowski, M. and H. Wozniakowski. </author> <year> 1977. </year> <title> "Iterative refinement implies numerical stability." </title> <journal> BIT 17 </journal> <pages> 303-311. </pages>
Reference: <author> Keller, H.B. </author> <year> 1992. </year> <title> Numerical methods for two-point boundary-value problems. </title> <publisher> Dover, </publisher> <address> New York. </address>
Reference-contexts: BVODEs have many important scientific applications and arise in such diverse areas as the modeling of semiconductor devices and the simulation of the re-entry of space vehicles from orbit. Multiple shooting <ref> (Keller 1992) </ref> is one of the most widely used numerical techniques for solving BVODE problems. It is based on the idea of reformulating the problem as a sequence of initial value problems defined on subintervals of [a; b] with continuity constraints.
Reference: <author> Kumar, V.; A. Grama; A. Gupta; and G. Karypis. </author> <year> 1994. </year> <title> Introduction to parallel computing : Design and analysis of algorithms. </title> <address> Benjamin/Cummings, Redwood City, California. </address>
Reference-contexts: In order to study the communication complexity of the PBN iteration, we need to know the underlying communication routing technique used in the distributed memory machine model. Suppose that the store-and-forward routing technique <ref> (Kumar et al. 1994) </ref> is employed. In this case, total communication time required by a single PBN iteration is then bounded by (1 + c d )O (n 2 log m) time units where c d is the communication diameter of a distributed memory machine.
Reference: <author> Mattheij, R.M.M. </author> <year> 1982. </year> <title> "The conditioning of linear boundary value problems." </title> <journal> SIAM Journal of Numerical Analysis 19, </journal> <volume> no. 5 </volume> <pages> 963-978. </pages>
Reference-contexts: In many cases, these numerical difficulties can be attributed to the conditioning of the linear system arising in the Newton iteration. Even for well-conditioned BVODE problems, the blocks L i may possess both decaying and growing solution components, see <ref> (Mattheij 1982) </ref>. If the length of a mesh interval [x i1 ; x i ] is large, one can either incur overflow in the computation of L i or the columns can become numerically dependent.
Reference: <author> Skeel, R.D. </author> <year> 1980. </year> <title> "Iterative refinement implies numerical stability for Gaussian elimination." </title> <journal> Mathematics of Computation 35, </journal> <volume> no. 151 </volume> <pages> 817-832. </pages>
Reference: <author> Wright, S. </author> <year> 1992. </year> <title> "Stable parallel algorithms for two-point boundary value problems." </title> <journal> SIAM Journal of Scientific and Statistical Computing 13 </journal> <pages> 742-764. </pages>
Reference: <author> Wright, S. </author> <year> 1994. </year> <title> "Stable parallel elimination for boundary value ODEs." </title> <journal> Numerische Mathematik 67, </journal> <volume> no. 4 </volume> <pages> 521-535. </pages>
References-found: 14

