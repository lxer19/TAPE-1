URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-93-8-1.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-93-8-1.html
Root-URL: http://www.cs.man.ac.uk
Title: Understanding the differences between VDM and Z  
Author: I. J. Hayes, C. B. Jones and J. E. Nicholls 
Affiliation: Computer Science University of Manchester  
Pubnum: Technical Report UMCS-93-8-1  
Abstract-found: 0
Intro-found: 0
Reference: [AI91] <author> D. Andrews and D. Ince. </author> <title> Practical Formal Methods with VDM. </title> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of <ref> [AI91, LBC90] </ref> might be more approachable. A good overview of VDM-SL is contained in [Daw91]; although there are several books on the language description and compiler development aspects of VDM, they haven't really come up very much in our discussion.
Reference: [BCJ84] <author> H. Barringer, J.H. Cheng, and C. B. Jones. </author> <title> A logic covering undefinedness in program proofs. </title> <journal> Acta Informatica, </journal> <volume> 21 </volume> <pages> 251-269, </pages> <year> 1984. </year>
Reference-contexts: Moreover, the user has to keep the distinction between the logical equality and the computational equality operator of the programming language in mind. As they say `There ain't no such thing as a free lunch'. 7 A fuller discussion can be found in <ref> [BCJ84, CJ91, JM93] </ref>. 11 Zebedee: Yes, but I did say Spivey took that approach; in the beginning, I believe that Jean--Raymond Abrial wanted to formalize the view that while `the law of the excluded middle' held, for undefined formulae, one never knew which disjunct was true. (The work on the new
Reference: [BJ78] <editor> D. Bjorner and C. B. Jones, editors. </editor> <title> The Vienna Development Method: The Meta-Language, </title> <booktitle> volume 61 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1978. </year>
Reference: [BJ82] <author> D. Bjorner and C. B. Jones. </author> <title> Formal Specification and Software Development. </title> <publisher> Prentice Hall International, </publisher> <year> 1982. </year> <month> 17 </month>
Reference-contexts: Both of these books have now been supplanted. The language description work is best accessed in <ref> [BJ82] </ref> and the non-language work is best seen in second edition - [Jon90].
Reference: [Bow92] <author> J.P. Bowen. </author> <title> Select Z bibliography. </title> <editor> In J.E. Nicholls, editor, </editor> <booktitle> Z User Workshop, York 1991, Workshops in Computing, </booktitle> <pages> pages 367-397. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Meanwhile, industry users are busy using Z on projects, writing tools for Z and considering how it can be combined with other notations and methods. A good idea of the breadth and variety of interest can be gained from the Z Bibliography <ref> [Bow92] </ref>. 16 The standards committees for Z and VDM-SL keep in touch by exchange of documents and by the appointment of liaison members. They are both subcommittees of the same BSI standards committee.
Reference: [CJ91] <author> J. H. Cheng and C. B. Jones. </author> <title> On the usability of logics which handle partial functions. </title> <editor> In C. Morgan and J. C. P. Woodcock, editors, </editor> <booktitle> 3rd Refinement Workshop, </booktitle> <pages> pages 51-69. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Moreover, the user has to keep the distinction between the logical equality and the computational equality operator of the programming language in mind. As they say `There ain't no such thing as a free lunch'. 7 A fuller discussion can be found in <ref> [BCJ84, CJ91, JM93] </ref>. 11 Zebedee: Yes, but I did say Spivey took that approach; in the beginning, I believe that Jean--Raymond Abrial wanted to formalize the view that while `the law of the excluded middle' held, for undefined formulae, one never knew which disjunct was true. (The work on the new
Reference: [Daw91] <author> J. Dawes. </author> <title> The VDM-SL Reference Guide. </title> <publisher> Pitman, </publisher> <year> 1991. </year>
Reference-contexts: Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable. A good overview of VDM-SL is contained in <ref> [Daw91] </ref>; although there are several books on the language description and compiler development aspects of VDM, they haven't really come up very much in our discussion. Florence: You have both ignored details of concrete syntax of the mathematical notation: these differences confuse some people.
Reference: [FJ90] <author> J.S. Fitzgerald and C. B. Jones. </author> <title> Modularizing the formal description of a database system. </title> <editor> In D. Bjorner, C. A. R. Hoare, and H. Langmaack, editors, VDM'90: </editor> <title> VDM and Z Formal Methods in Software Development, </title> <booktitle> volume 428 of Lecture Notes in Computer Science, </booktitle> <pages> pages 189-210. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: It is worth noting that Z notation the first two levels has been used with a different set of conventions for other purposes, such as specifying real-time systems. 3 Originally formally specified in [Wel82] and revised in [Wal90], this was used as a challenge problem in <ref> [FJ90] </ref> to which a Z response is given in [Hay92]. 4 The description of the NDB state presented here is given postfacto rather than attempting to emulate the process by which specifications are produced. 2 two elements: a from value and a to value. <p> One possible module syntax is illustrated in Appendix A. But I have to confess that this is still a subject of debate. In fact <ref> [FJ90] </ref> was written precisely because this debate is not yet settled. Zebedee: Z also needs a modularisation mechanism and one proposal is developed in [HW93]. <p> Florence: Well, it's time for bed. Zebedee: Boing! Dougal: Chases his tail for a bit before running off to bed. Acknowledgements We would like to acknowledge the input from John Fitzgerald, and for permission to reuse the NDB material from <ref> [FJ90] </ref>. Peter Gorm Larsen, Lynn Marshall, Anthony Hall, Tony Hoare and Tim Clement gave us useful comments on drafts of this paper.
Reference: [GLW91] <author> P.H.B. Gardiner, P.J. Lupton, and Jim C.P. Woodcock. </author> <title> A simpler semantics for Z. </title> <editor> In J.E. Nicholls, editor, </editor> <booktitle> Z User Workshop, Oxford 1990, Workshops in Computing, </booktitle> <pages> pages 3-11. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: The Z Standard Group developed new material for the standard, not only providing a newly written document in the style needed for a standard, but also introducing new material for the semantics (see for example <ref> [GLW91] </ref>) and logic [WB92] defined in the standard. The first draft, Version 1.0 (reference) was presented at the Z Users Meeting in December 1992 and the standards committee is now at work, reviewing and revising the document as it becomes ready for standardisation in ISO.
Reference: [Hay92] <author> I. J. Hayes. </author> <title> VDM and Z: A comparative case study. </title> <journal> Formal Aspects of Computing, </journal> <volume> 4(1) </volume> <pages> 76-99, </pages> <year> 1992. </year>
Reference-contexts: Z notation the first two levels has been used with a different set of conventions for other purposes, such as specifying real-time systems. 3 Originally formally specified in [Wel82] and revised in [Wal90], this was used as a challenge problem in [FJ90] to which a Z response is given in <ref> [Hay92] </ref>. 4 The description of the NDB state presented here is given postfacto rather than attempting to emulate the process by which specifications are produced. 2 two elements: a from value and a to value. <p> This leads to simpler predicates in the specifications because the Z operators on binary relations are closer to the operations required for NDB's binary relations. Entities is defined using Z's binary relations in <ref> [Hay92] </ref>, but for our comparison here it is simpler 4 to use the same state as the VDM version. That way we can concentrate on more fundamental differences. <p> We would also like to thank the BCS journal Formal Aspects of Computing for permission to reuse the NDB material from <ref> [Hay92] </ref>.
Reference: [Hay93] <author> Ian Hayes, </author> <title> editor. Specification Case Studies. </title> <publisher> Prentice Hall International, </publisher> <address> second edition, </address> <year> 1993. </year>
Reference-contexts: PRG members carrying out case studies included Carroll Morgan, Ian Hayes, Bernard Sufrin, Ib Sorensen, and others. Ian Hayes, in addition to his contributions to the IBM CICS project, later collected these case studies and published them in the first book on Z <ref> [Hay93] </ref>. 15 One of the most extensive case studies has been the use of Z for defining CICS, a transaction processing system developed by IBM. <p> The complete language description, The Z Handbook by B. A. Sufrin [Suf88], was given only a limited circulation, and in fact the first account of the notation published in book form was in the 1987 edition of the collection of Case Studies (second edition <ref> [Hay93] </ref>) mentioned above. Theoretical work on the foundations of Z continued in the PRG and elsewhere, and an important contribution was provided by the D.Phil. thesis of Mike Spivey, subsequently published as a book [Spi88]. <p> However, this is a language reference manual and there are some more introductory texts such as [PST91, Wor92] and a book of case studies <ref> [Hay93] </ref>. Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable.
Reference: [Hoa91] <author> C. A. R. Hoare. </author> <title> Preface. </title> <booktitle> In [PT91], </booktitle> <pages> pages vii-x, </pages> <year> 1991. </year>
Reference-contexts: operation it is only when you have the final operation that the concept of a pre-condition really makes sense. 6 Florence: What does a pre-condition mean? I'm really not clear about whose responsibility it is to avoid calls that violate the pre-condition or are these exceptions? 5 Tony Hoare in <ref> [Hoa91] </ref> appears to argue for the use of Z to develop specifications and the use of VDM for development of the design and implementation. 6 Although it is possible to define operators similar to schema conjunction and disjunction on pre/postcondition pairs; see [War93]. 9 Dougal: A pre-condition is essentially a warning
Reference: [HW93] <author> I. J. Hayes and L. P. Wildman. </author> <title> Towards libraries for Z. </title> <editor> In J. P. Bowen and J. E. Nicholls, editors, </editor> <booktitle> Z User Workshop: Proceedings of the Seventh Annual Z User Meeting, </booktitle> <address> London, </address> <month> December </month> <year> 1992, </year> <title> Workshops in Computing. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: One possible module syntax is illustrated in Appendix A. But I have to confess that this is still a subject of debate. In fact [FJ90] was written precisely because this debate is not yet settled. Zebedee: Z also needs a modularisation mechanism and one proposal is developed in <ref> [HW93] </ref>. Florence: Does the issue of pre-conditions have any connection with the fact that I suspect the two notations handle partial functions differently? Dougal: Yes, there is a loose connection and there are differences between Z and VDM here.
Reference: [ISO91] <author> ISO. </author> <title> Japan's input on the VDM-SL standardization, </title> <month> April </month> <year> 1991. </year> <note> ISO/IEC JTC1/SC22/WG19-VDM-SL. </note>
Reference-contexts: Florence: You have both ignored details of concrete syntax of the mathematical notation: these differences confuse some people. Zebedee: Yes, but they are just an accident of history. Dougal: A list of the syntactic differences has been given in a note <ref> [ISO91] </ref> from the Japanese ISO representatives. Florence: Well, it's time for bed. Zebedee: Boing! Dougal: Chases his tail for a bit before running off to bed. Acknowledgements We would like to acknowledge the input from John Fitzgerald, and for permission to reuse the NDB material from [FJ90].
Reference: [JM93] <author> C.B. Jones and C.A. Middelburg. </author> <title> A typed logic of partial functions reconstructed classically. Logic Group Preprint Series 89, </title> <institution> Utrecht University, Department of Philosophy, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Moreover, the user has to keep the distinction between the logical equality and the computational equality operator of the programming language in mind. As they say `There ain't no such thing as a free lunch'. 7 A fuller discussion can be found in <ref> [BCJ84, CJ91, JM93] </ref>. 11 Zebedee: Yes, but I did say Spivey took that approach; in the beginning, I believe that Jean--Raymond Abrial wanted to formalize the view that while `the law of the excluded middle' held, for undefined formulae, one never knew which disjunct was true. (The work on the new
Reference: [Jon80] <author> C. B. Jones. </author> <title> Software Development: A Rigorous Approach. </title> <publisher> Prentice Hall International, </publisher> <year> 1980. </year>
Reference-contexts: LNCS 61 ([BJ78]) is a description of that work. At ESRI, Cliff Jones also developed the work on those aspects of VDM not specifically related to compiler development and the first book on what is now generally thought of as VDM is <ref> [Jon80] </ref>. Both of these books have now been supplanted. The language description work is best accessed in [BJ82] and the non-language work is best seen in second edition - [Jon90].
Reference: [Jon90] <author> C. B. Jones. </author> <title> Systematic Software Development using VDM. </title> <publisher> Prentice Hall International, </publisher> <address> second edition, </address> <year> 1990. </year>
Reference-contexts: If one considers updating operations, the flat representation provides even simpler descriptions of operations. Dougal: The recursive approach description is used in <ref> [Jon90] </ref> and I'm not sure that I'd concede the advantages that Zebedee claims for the flat specification. But that's a modelling issue not a difference between the two specification languages. <p> Both of these books have now been supplanted. The language description work is best accessed in [BJ82] and the non-language work is best seen in second edition - <ref> [Jon90] </ref>. Dines Bjorner's group at the Technical University of Denmark strenuously pursued the use of VDM for language description and he and his colleagues were responsible for descriptions 14 of the CHILL programming language and a major effort to document the semantics of the Ada programming language. <p> However, this is a language reference manual and there are some more introductory texts such as [PST91, Wor92] and a book of case studies [Hay93]. Dougal: For the non-compiler aspects of VDM, the standard reference has been <ref> [Jon90] </ref> and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable.
Reference: [JS90] <editor> C. B. Jones and R. C. F. Shaw, editors. </editor> <title> Case Studies in Systematic Software Development. </title> <publisher> Prentice Hall International, </publisher> <year> 1990. </year>
Reference-contexts: However, this is a language reference manual and there are some more introductory texts such as [PST91, Wor92] and a book of case studies [Hay93]. Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is <ref> [JS90] </ref>; but [WH93] refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable.
Reference: [Lar93] <author> Peter Gorm Larsen. </author> <title> VDM as a mature formal method. </title> <type> Technical report, </type> <institution> Institute of Applied Computer Science, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: There are now many books on VDM and more papers than even Dines Bjorner's energy could keep in a bibliography although Peter Gorm-Larsen has made an attempt to continue the work of keeping the key references in a single bibliography <ref> [Lar93] </ref>. The ideas in VDM have influenced several other specification languages including RAISE, COLD-K and VVSL.
Reference: [LBC90] <author> J. T. Latham, V. J. Bush, and I. D. Cottam. </author> <title> The Programming Process: An Introduction Using VDM and Pascal. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year> <month> 18 </month>
Reference-contexts: Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of <ref> [AI91, LBC90] </ref> might be more approachable. A good overview of VDM-SL is contained in [Daw91]; although there are several books on the language description and compiler development aspects of VDM, they haven't really come up very much in our discussion.
Reference: [MS84] <author> C.C. Morgan and B.A. Sufrin. </author> <title> Specification of the UNIX file system. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> SE-10(2): </volume> <pages> 128-142, </pages> <month> March </month> <year> 1984. </year>
Reference-contexts: For example, the specification of the Unix filing system <ref> [MS84] </ref> represents the hierarchical directory structure by a mapping from full path names to the file's contents. All prefixes of any path name in the domain of the map must also be in the domain of the map.
Reference: [PST91] <author> Ben Potter, Jane Sinclair, and David Till. </author> <title> An Introduction to Formal Specification and Z. </title> <publisher> Prentice Hall International, </publisher> <year> 1991. </year>
Reference-contexts: Florence: Could you give me some useful references? Zebedee: For Z, the standard reference for the language (until the language standard appears) is Mike Spivey's [Spi92]. However, this is a language reference manual and there are some more introductory texts such as <ref> [PST91, Wor92] </ref> and a book of case studies [Hay93]. Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable.
Reference: [PT91] <editor> S. Prehn and W. J. Toetenel, editors. </editor> <booktitle> VDM'91 Formal Software Development Methods. Proceedings of the 4th International Symposium of VDM Europe, </booktitle> <address> Noord-wijkerhout, The Netherlands, </address> <month> October </month> <year> 1991, </year> <title> Vol.2: Tutorials, </title> <booktitle> volume 552 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference: [Spi88] <author> J.M. Spivey. </author> <title> Understanding Z|A Specification Language and its Formal Semantics. </title> <booktitle> Cambridge Tracts in Computer Science 3. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: VDM uses non-standard logical operators which cope with possibly undefined operands: so true _ undefined is true as is undefined _ true. Zebedee: In <ref> [Spi88] </ref> Mike Spivey uses existential equality which always delivers a truth value where either of the operands are undefined, the whole expression is false. This enables him to stay with classical (two-valued) logic. <p> Zebedee: To the average user, the semantics of the meta-language might not be bedtime reading. The aim has always been to base the semantics of Z on set theory; Mike Spivey gives a semantics in <ref> [Spi88] </ref> but a new semantics is being developed for the language standard. Dougal: VDM has its origins in language description and it has to cope with reflexive domains etc. <p> Theoretical work on the foundations of Z continued in the PRG and elsewhere, and an important contribution was provided by the D.Phil. thesis of Mike Spivey, subsequently published as a book <ref> [Spi88] </ref>. With a growing number of industrial users of Z, requests for standardisation were made at Z User Meetings in 1987 and 1988. Work was started in the Programming Research Group to establish an agreed definition of the language.
Reference: [Spi92] <author> J.M. Spivey. </author> <title> The Z Notation: A Reference Manual. </title> <publisher> Prentice Hall International, </publisher> <address> second edition, </address> <year> 1992. </year>
Reference-contexts: In Z, T is a new type, whereas for the VDM binnode is a new type but T is not a new type. Also, in neither 8 We avoid consideration of inodes and links here. 12 Spivey <ref> [Spi92] </ref> nor the Z Base Standard are mutually recursive structures (as used in the VDM version above) allowed. <p> M. Spivey became a widely accepted description of Z and provided the main starting point for the standards work described below it is now in its second edition <ref> [Spi92] </ref>. Florence: I believe there is now a draft standard for Z what is the status of this? Zebedee: Towards the end of 1989 a project to develop Standards, Methods and Tools for Z was set up, with supporting funding from the UK Department of Trade and Industry. <p> They are both subcommittees of the same BSI standards committee. Florence: Could you give me some useful references? Zebedee: For Z, the standard reference for the language (until the language standard appears) is Mike Spivey's <ref> [Spi92] </ref>. However, this is a language reference manual and there are some more introductory texts such as [PST91, Wor92] and a book of case studies [Hay93].
Reference: [Suf88] <author> B. A. Sufrin. </author> <title> Notes for a Z handbook: </title> <booktitle> Part 1 the mathematical language, 1988. Programming Research Group, </booktitle> <publisher> Oxford University. </publisher>
Reference-contexts: Florence: You've talked about the PRG contribution to application case studies what about the underlying theory? Zebedee: In early stages of Z development, the notation was described in documents produced in the PRG and locally distributed. The complete language description, The Z Handbook by B. A. Sufrin <ref> [Suf88] </ref>, was given only a limited circulation, and in fact the first account of the notation published in book form was in the 1987 edition of the collection of Case Studies (second edition [Hay93]) mentioned above. <p> With a growing number of industrial users of Z, requests for standardisation were made at Z User Meetings in 1987 and 1988. Work was started in the Programming Research Group to establish an agreed definition of the language. Starting with the best available documentation, including <ref> [Suf88] </ref>, the document produced in 1989 as a result of this work, the Reference Manual by J. M. Spivey became a widely accepted description of Z and provided the main starting point for the standards work described below it is now in its second edition [Spi92].
Reference: [Wal90] <editor> A. Walshe. NDB. In [JS90], </editor> <volume> chapter 2, </volume> <pages> pages 11-46. </pages> <publisher> Prentice Hall International, </publisher> <year> 1990. </year>
Reference-contexts: It is worth noting that Z notation the first two levels has been used with a different set of conventions for other purposes, such as specifying real-time systems. 3 Originally formally specified in [Wel82] and revised in <ref> [Wal90] </ref>, this was used as a challenge problem in [FJ90] to which a Z response is given in [Hay92]. 4 The description of the NDB state presented here is given postfacto rather than attempting to emulate the process by which specifications are produced. 2 two elements: a from value and a
Reference: [War93] <author> N. Ward. </author> <title> Adding specification constructors to the refinement calculus. </title> <editor> In J.C.P. Woodcock and P.G. Larsen, editors, </editor> <booktitle> Proceedings, Formal Methods Europe'93, volume 670 of Lecture Notes in Computer Science, </booktitle> <pages> pages 652-670. </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: or are these exceptions? 5 Tony Hoare in [Hoa91] appears to argue for the use of Z to develop specifications and the use of VDM for development of the design and implementation. 6 Although it is possible to define operators similar to schema conjunction and disjunction on pre/postcondition pairs; see <ref> [War93] </ref>. 9 Dougal: A pre-condition is essentially a warning to the user: the behaviour defined in the post-condition is only guaranteed if the starting state satisfies the pre-condition.
Reference: [WB92] <author> J.C.P. Woodcock and S.M. Brien. </author> <title> W: A logic for Z. </title> <editor> In J.E. Nicholls, editor, </editor> <booktitle> Z User Workshop, York 1991, Workshops in Computing, </booktitle> <pages> pages 77-96. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The Z Standard Group developed new material for the standard, not only providing a newly written document in the style needed for a standard, but also introducing new material for the semantics (see for example [GLW91]) and logic <ref> [WB92] </ref> defined in the standard. The first draft, Version 1.0 (reference) was presented at the Z Users Meeting in December 1992 and the standards committee is now at work, reviewing and revising the document as it becomes ready for standardisation in ISO.
Reference: [Wel82] <author> A. Welsh. </author> <title> The specification, design and implementation of NDB. </title> <type> Master's thesis, </type> <institution> University of Manchester, </institution> <month> October </month> <year> 1982. </year>
Reference-contexts: It is worth noting that Z notation the first two levels has been used with a different set of conventions for other purposes, such as specifying real-time systems. 3 Originally formally specified in <ref> [Wel82] </ref> and revised in [Wal90], this was used as a challenge problem in [FJ90] to which a Z response is given in [Hay92]. 4 The description of the NDB state presented here is given postfacto rather than attempting to emulate the process by which specifications are produced. 2 two elements: a
Reference: [WH93] <author> M. Woodman and B. Heal. </author> <title> Introduction to VDM. </title> <publisher> McGraw-Hill, </publisher> <year> 1993. </year>
Reference-contexts: However, this is a language reference manual and there are some more introductory texts such as [PST91, Wor92] and a book of case studies [Hay93]. Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but <ref> [WH93] </ref> refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable. A good overview of VDM-SL is contained in [Daw91]; although there are several books on the language description and compiler development aspects of VDM, they haven't really come up very much in our discussion.
Reference: [Wor92] <author> J. B. Wordsworth. </author> <title> Software Development with Z. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year> <month> 19 </month>
Reference-contexts: Florence: Could you give me some useful references? Zebedee: For Z, the standard reference for the language (until the language standard appears) is Mike Spivey's [Spi92]. However, this is a language reference manual and there are some more introductory texts such as <ref> [PST91, Wor92] </ref> and a book of case studies [Hay93]. Dougal: For the non-compiler aspects of VDM, the standard reference has been [Jon90] and a case studies book is [JS90]; but [WH93] refers to Jones' book as `austere' and either of [AI91, LBC90] might be more approachable.
References-found: 32

