URL: ftp://ftp.wins.uva.nl/pub/computer-systems/aut-sys/reports/DamKroGro96a.ps.gz
Refering-URL: http://www.fwi.uva.nl/research/neuro/publications/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: dam@fwi.uva.nl  
Title: Neural Network Applications in Sensor Fusion For An Autonomous Mobile Robot  
Author: Joris W.M. van Dam, Ben J.A. Krose and Franciscus C.A. Groen 
Note: The investigations were supported by the Foundation for Computer Science in the Netherlands (SION) with financial support from the Netherlands Organisation for Scientific Research (NWO).  
Address: Kruislaan 403 NL 1098 SJ Amsterdam  
Affiliation: Faculty of Mathematics, Computer Science Physics and Astronomy University of Amsterdam  
Abstract-found: 0
Intro-found: 1
Reference: [Millan93] <author> J. del R. Millan, </author> <title> "Reinforcement learning of goal-directed obstacle avoiding reaction strategies in an autonomous mobile robot", </title> <booktitle> Robotics and Autonomous Systems (15) 3, </booktitle> <year> 1995. </year>
Reference: [Elfes89] <author> Alberto Elfes, </author> <title> "Using occupancy grids for mobile robot perception and navigation," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 46-57, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: These considerations led to the choice of a robot-centered occupancy grid. An occupancy grid (see <ref> [Elfes89] </ref>) G is defined as a tesselation of the environment in a number of cells c j , j = 1 : : : N where for each cell the probability g j is given that the cell is occupied. <p> In this section, we will give a short impression of these approaches and in the next section we will introduce a neural network approach to the problem of finding accurate conversion functions C j . Initially standard mathematical functions were used as sensor models for ease of computation. In <ref> [Elfes89] </ref> Gaussian shaped sensor models were proposed; this has become a common approach in the use of occupancy grids. If such Gaussian shaped sensor models are used, the sensor measurements can be converted to an occupancy grid using (3.2). An example of such a conversion is sketched in fig. 1.
Reference: [Vandorpe94] <author> J. Vandorpe, H. van Brussel, </author> <title> "A Reflexive Navigation Algorithm for an Autonomous Mobile Robot", </title> <booktitle> Proc. of the 1994 IEEE Int. Conf. on Multisensor Fusion and Integration for IntelligentSystems (MFI'94), </booktitle> <address> Las Vegas, NV, </address> <year> 1994, </year> <month> pp.251-258. </month>
Reference: [Braunegg93] <author> D.J. Braunegg, "MARVEL: </author> <title> A System That Recognizes World Locations with Stereo Vision", </title> <journal> IEEE Trans. on Rob. and Aut., </journal> <volume> vol 9, no 3, </volume> <month> June </month> <year> 1993, </year> <month> pp.303-308. </month>
Reference: [Shirai94] <author> Y. Shirai, </author> <title> "Visual Sensor Fusion", </title> <booktitle> Proc. of 1994 Int. Conf on Multisensor Fusion and Integration for IntelligentSystems, </booktitle> <address> Las Vegas, Nevada, </address> <month> October </month> <year> 1994. </year> <title> Tutorial. </title>
Reference: [Sabater91] <author> A. Sabater, </author> <title> "Set Membership approach to the propagation of uncertain geometric information", </title> <booktitle> Proc. of 1991 IEEE Int. Conf. on Rob. and Aut., </booktitle> <address> Sacramento, California, </address> <month> April </month> <year> 1991, </year> <pages> pp 2718-2723 </pages>
Reference-contexts: This indicates that this model is probably derived from an acoustic sensor. It was found, however, that Gaussian shaped sensor models are rather inaccurate and various alternatives were suggested. E.g., in [Konolige95] an extension to the method is defined which takes care of specular reflections and redundant readings; in <ref> [Sabater91] </ref> it is proposed to use uncertainty sets as sensor models and in [Chen93] a polynomial model is defined.
Reference: [Moravec92] <author> Moravec and Blackwell, </author> <title> "Learning sensor models for evidence grids", </title> <booktitle> Robotics Institute Research Review, </booktitle> <address> Pittsburgh, PA, </address> <year> 1992. </year>
Reference-contexts: This conversion involves modeling of the sensors' error characteristics. At first the sensor's performance was modeled with standard mathematical models ([Elfes89, Sabater91]) but it has been generally acknowledged that these models are not sufficiently accurate. Therefore, several algortihms were devised to learn these models in a calibration phase <ref> [Moravec92, Bessiere, Chen93] </ref>). In this article we present a neural network approach to the learning of (inverse) sensor models.
Reference: [Bessiere] <author> P. Bessiere, E. Dedieu and E. Mazer, </author> <title> "Representing robot/environment interactions using probabilities: the beam in the bin experiment" </title>
Reference-contexts: This conversion involves modeling of the sensors' error characteristics. At first the sensor's performance was modeled with standard mathematical models ([Elfes89, Sabater91]) but it has been generally acknowledged that these models are not sufficiently accurate. Therefore, several algortihms were devised to learn these models in a calibration phase <ref> [Moravec92, Bessiere, Chen93] </ref>). In this article we present a neural network approach to the learning of (inverse) sensor models.
Reference: [Chen93] <author> Y.D. Chen and J. Ni, </author> <title> "Dynamic calibration and compensation of a 3-D laser radar scanning system", </title> <journal> IEEE Trans. on Rob. and Aut., </journal> <volume> vol 9, no.3, </volume> <month> June </month> <year> 1993, </year> <month> pp.318-323. </month>
Reference-contexts: This conversion involves modeling of the sensors' error characteristics. At first the sensor's performance was modeled with standard mathematical models ([Elfes89, Sabater91]) but it has been generally acknowledged that these models are not sufficiently accurate. Therefore, several algortihms were devised to learn these models in a calibration phase <ref> [Moravec92, Bessiere, Chen93] </ref>). In this article we present a neural network approach to the learning of (inverse) sensor models. <p> E.g., in [Konolige95] an extension to the method is defined which takes care of specular reflections and redundant readings; in [Sabater91] it is proposed to use uncertainty sets as sensor models and in <ref> [Chen93] </ref> a polynomial model is defined.
Reference: [Konolige95] <author> K. Konolige, </author> <title> "A refined method for occupancy grid interpretation", </title> <booktitle> Proc. of Workshop Reasoning with Uncertainty in Robotics (RUR), </booktitle> <address> Ams-terdam, </address> <year> 1995. </year> <note> Proc to appear feb. </note> <year> 1996. </year>
Reference-contexts: This indicates that this model is probably derived from an acoustic sensor. It was found, however, that Gaussian shaped sensor models are rather inaccurate and various alternatives were suggested. E.g., in <ref> [Konolige95] </ref> an extension to the method is defined which takes care of specular reflections and redundant readings; in [Sabater91] it is proposed to use uncertainty sets as sensor models and in [Chen93] a polynomial model is defined. <p> In this section we introduce a neural network wich learns the functions C j from sensor measurements s to occupancy values g j directly. Thus, we do not explicitely learn the sensor model and the free space hypothesis, but these are included 1 The sensor model defined in <ref> [Konolige95] </ref> also includes influences from reflection coefficients. 6 in the learned conversion functions. 4.1 Network topology A neural network is to be defined which learns the conversion functions g j = C j (s).
Reference: [Rummelhart86] <author> D. E. Rumelhart, G. E. Hinton, R. J. Williams, </author> <title> "Learning representations by back-propagating errors," </title> <journal> Nature, </journal> <volume> vol 323, </volume> <pages> pp. 533-536, </pages> <year> 1986. </year>
Reference-contexts: The weights to the hidden units can be adjusted similarly by first back-propagating the summed squared error to the hidden untis and then applying gradient descent to the back-propagated error (see <ref> [Rummelhart86] </ref>). 4.3 The learning samples Unfortunately, is it not possible to obtain such learning samples (s; G fl ) in practice. In practice, we can only obtain sensor measurements s in environments for which we now for certain whether or not the cells in the grid G are occupied.
Reference: [VanDam94] <author> J.W.M. van Dam, B.J.A. Krose and F.C.A. Groen, </author> <title> "Transforming the Ego-centered Internal Representation of an Autonomous Robot with the Cascaded Neural Network", </title> <booktitle> Proc. of 1994 Int. Conf on Multisensor Fusion and Integration for Intelligent Systems, </booktitle> <address> Las Vegas, Nevada, </address> <month> October </month> <year> 1994 </year>
Reference-contexts: Instead samples (s; G bin ) are used for which the expected values of the outputs g bin i equal the desired output values g fl i . This method for supervised training of neural networks is also succesfully applied in <ref> [VanDam94] </ref>.
Reference: [Krose89] <author> Krose, B.J.A. and E. </author> <title> Dondorp,"A Sensor Simulation System for Mobile Robots", </title> <editor> in: T. Kanade, F.C.A. Groen and L.O. Hertzberger (ed.), </editor> <booktitle> Intelligent Autonomous Systems 2, </booktitle> <month> December </month> <year> 1989. </year> <month> 12 </month>
Reference-contexts: at run time and where G fl are the occupancy grids representing the robot's local environment, obtained by the fusion of the converted sensor measurements. 4.5 Experiments and results The learning algorithm described in the previous sections was tested with a simulator of an ultra sonic rage sensor (ASSIM, see <ref> [Krose89] </ref>). After the robot takes a sensor measurement s with the simulated acoustic sensor, it follows a path to explore the (local) environment with touch sensors. This path is then represented in an occupancy grid G and the network is trained with (s; G).
References-found: 13

