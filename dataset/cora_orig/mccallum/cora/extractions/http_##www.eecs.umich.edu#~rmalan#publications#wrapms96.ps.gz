URL: http://www.eecs.umich.edu/~rmalan/publications/wrapms96.ps.gz
Refering-URL: http://www.eecs.umich.edu/~rmalan/terse.html
Root-URL: http://www.cs.umich.edu
Email: E-mail: frmalan,farnamg@eecs.umich.edu  
Phone: Phone: (313) 763-5243  
Title: Application-level Quality of Service Architecture for Internet  
Author: Collaboratories G. Robert Malan and Farnam Jahanian 
Address: 1301 Beal Ave. Ann Arbor, Michigan 48109-2122  
Affiliation: University of Michigan Department of Electrical Engineering and Computer Science  
Note: An  
Abstract: A version of this paper appeared in the Proceedings of the RTSS '96 Workshop on Resource Allocation Problems in Multimedia Systems 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Clauer, C.R., Kelly, J.D., Rosenberg, T.J., Rasmussen, C.E., Stauning, E., Friis-Christensen, E., Niciejewski, R.J., Killeen, T.L., Mende, S.B., Zambre, Y., Weymouth, T.E., Prakash, A., Olson, G.M., McDaniel, S.E., Finholt, T.A., and Atkins, D.E. </author> <title> "A New Project to Support Scientific Collaboration Electronically." </title> <journal> In EOS Transactions on American Geophysical Union, </journal> <month> June 28, </month> <year> 1994 </year> <month> (75). </month>
Reference-contexts: The Upper Atmospheric Research Collaboratory (UARC) is an experimental distributed testbed developed at the University of Michigan to fl This work is supported by the National Science Foundation under the cooperative agreement IRI-92-16848. 1 examine issues in supporting collaborative scientific work over wide-area networks <ref> [1, 6, 5] </ref>. The UARC testbed connects a geographically dispersed community of space scientists via the Internet. These scientists perform experiments on remote instruments, evaluate their work, and discuss experimental results in real-time over the Internet.
Reference: [2] <author> Fiuczynski, M., Bershad, B. </author> <title> "An Extensible Protocol Architecture for Application-Specific Networking." </title> <booktitle> In Proceedings of the 1996 Winter USENIX Conference, </booktitle> <address> San Diego, CA., </address> <pages> pp. 55-64, </pages> <month> January </month> <year> 1996 </year>
Reference-contexts: These servers then distribute the data to subscribed participants using application-level quality of service policies. data streams. Finally the schedulers provide a mechanism for the direct allocation of the available network bandwidth. Providing application specific protocol handlers is not a new idea. They are used in <ref> [2, 9] </ref> to provide application-specific protocol handlers in an operating system kernel. Active network proponents [8] argue that Internet routers should be enabled to run arbitrary application-level code to assist in protocol processing.
Reference: [3] <author> Floyd, S., Jacobson, V., Liu, C., McCanne, S., and Zhang, L. </author> <title> "A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing." </title> <booktitle> In Proceedings of ACM SigComm '95, </booktitle> <pages> pp. 342-356, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: The current version of the server uses multiple unicast TCP connections to distribute data between servers and their clients. We have avoided using a reliable multicast protocol, such as SRM <ref> [3] </ref>, due to the fine-grain control our system provides to the collaboratory's users. A reliable internet multicast protocol would introduce unwanted semantic dependencies between the data streams. For our target applications, the bandwidth near the servers is generally not the problem.
Reference: [4] <author> Fox, A., Gribble, S.D., Brewer, E.A., Amir, E. </author> <title> "Adapting to Network and Client Variability via On-Demand Dynamic Distillation." </title> <booktitle> Proceedings of the ACM ASPLOS VII, </booktitle> <month> Oct </month> <year> 1996. </year>
Reference-contexts: In this case it made sense to place a module on the client where it could use application knowledge close to the user to determine which data were displayed and which were discarded. Other work in on-demand data manipulation includes the work by Fox et.al. <ref> [4] </ref>. Their work focuses on data distillation as a means for supporting resource poor clients. They propose a general proxy architecture for the support of these clients. <p> However, our work differs in that it allows for the dynamic placement of data manipulation modules at any point in the system, including suppliers and clients. Our system allows for the integration and allocation of multiple real-time data streams, whereas the work in <ref> [4] </ref> supports the effective delivery of a single type of data. 4 Conclusions and Future Work By explicitly managing the scarce bandwidth of slow collaboratory participants at the application level, our architecture provides useful and effective support for real-time scientific collaboration.
Reference: [5] <author> Hall, R.W., Mathur, A.G, Jahanian, F., Prakash, A., Rasmussen, C. "Corona: </author> <title> A Communication Service for Scalable, Reliable Group Collaboration Systems." </title> <booktitle> Proceedings of the Sixth ACM Conf. on Computer Supported Cooperative Work (CSCW '96), </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: The Upper Atmospheric Research Collaboratory (UARC) is an experimental distributed testbed developed at the University of Michigan to fl This work is supported by the National Science Foundation under the cooperative agreement IRI-92-16848. 1 examine issues in supporting collaborative scientific work over wide-area networks <ref> [1, 6, 5] </ref>. The UARC testbed connects a geographically dispersed community of space scientists via the Internet. These scientists perform experiments on remote instruments, evaluate their work, and discuss experimental results in real-time over the Internet.
Reference: [6] <author> Malan, G.R., Jahanian, F., Rasmussen, C., Knoop, P. </author> <title> "Performance of a Distributed Object-Based Internet Collaboratory." </title> <institution> University of Michigan EECS Department. CSE-TR-297-96, </institution> <month> July </month> <year> 1996 </year>
Reference-contexts: The Upper Atmospheric Research Collaboratory (UARC) is an experimental distributed testbed developed at the University of Michigan to fl This work is supported by the National Science Foundation under the cooperative agreement IRI-92-16848. 1 examine issues in supporting collaborative scientific work over wide-area networks <ref> [1, 6, 5] </ref>. The UARC testbed connects a geographically dispersed community of space scientists via the Internet. These scientists perform experiments on remote instruments, evaluate their work, and discuss experimental results in real-time over the Internet.
Reference: [7] <author> Schulzrinne, H., Casner, S., Frederick, R., Jacobson, V. "RTP: </author> <title> A Transport Protocol for Real-Time Applications." </title> <type> IETF RFC 1889. </type> <month> January </month> <year> 1996. </year>
Reference-contexts: Application-level quality of service policies will be instrumental in achieving this goal. A natural progression would be to integrate the multistream synchronization policies with RTP's <ref> [7] </ref> synchronization of continuous media. There are significant problems here to be solved, especially with the intergration of single connection resource allocations (RSVP) and RTP streams. Load balancing also becomes a problem with CPU allocation to provide effective synchronization through on-demand degradation of the various streams.
Reference: [8] <author> Tennenhouse, D.L., Wetherall, </author> <title> D.J. "Towards an Active Network Architecture." </title> <journal> Computer Communication Review, </journal> <volume> (26)2, </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: Finally the schedulers provide a mechanism for the direct allocation of the available network bandwidth. Providing application specific protocol handlers is not a new idea. They are used in [2, 9] to provide application-specific protocol handlers in an operating system kernel. Active network proponents <ref> [8] </ref> argue that Internet routers should be enabled to run arbitrary application-level code to assist in protocol processing. Our work takes the middle ground: an explicit topology that an application can administer to allow for protocol processing at any point along the datapath.
Reference: [9] <author> Wallach, D.A., Engler, D.R., Kaashoek, M.F. "ASHs: </author> <title> Application-Specific Handlers for High-Performance Messaging." </title> <booktitle> In Proceedings of the ACM SigComm '96, </booktitle> <pages> pp. 40-52, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: These servers then distribute the data to subscribed participants using application-level quality of service policies. data streams. Finally the schedulers provide a mechanism for the direct allocation of the available network bandwidth. Providing application specific protocol handlers is not a new idea. They are used in <ref> [2, 9] </ref> to provide application-specific protocol handlers in an operating system kernel. Active network proponents [8] argue that Internet routers should be enabled to run arbitrary application-level code to assist in protocol processing.
Reference: [10] <author> Zhang, L., Deering, S., Estrin, D., Shenker, S., and Zappala, D. "RSVP: </author> <title> A New Resource ReSerVation Protocol." </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year> <month> 8 </month>
Reference-contexts: Instead, application-level quality of service policies are used to allocate the available bandwidth between the subscribed streams. These policies provide a participant with an effective throughput based on semantic thresholds that only the application and user can specify. If network-level guarantees are available <ref> [10] </ref>, they can of course be exploited. These application-level qos policies are provided by utilizing dynamically placed data processing modules in the real-time data stream paths. Figure 3 shows an example topology with several types of modules. These modules generalize into several categories: filters; synthesizers and harmonizers; and schedulers. <p> One collaboratory server has supported up to 50 simultaneous clients during UARC experiments. Another reason for choosing a unicast distribution mechanism is the availability of Internet resource reservations <ref> [10] </ref>. There is currently no comparable multicast reservation scheme. 3.2 Discrete-Data Delivery Policies The collaboratory's transport service provides a flexible and powerful delivery mechanism by explicitly managing the connections from the server to the clients.
References-found: 10

