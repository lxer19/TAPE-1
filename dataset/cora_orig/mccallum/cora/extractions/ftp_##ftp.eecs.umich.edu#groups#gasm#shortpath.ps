URL: ftp://ftp.eecs.umich.edu/groups/gasm/shortpath.ps
Refering-URL: http://www.eecs.umich.edu/gasm/algorithm.html
Root-URL: http://www.cs.umich.edu
Email: Karl.Stroetmann@mchp.siemens.de)  
Title: The Constrained Shortest Path Problem: A Case Study in Using ASMs  
Author: Karl Stroetmann 
Address: 81730 Munich, Germany  
Affiliation: (Siemens AG,  
Abstract: This paper addresses the correctness problem of an algorithm solving the constrained shortest path problem. We define an abstract, nondeterministic form of the algorithm and prove its correctness from a few simple axioms. We then define a sequence of natural refinements which can be proved to be correct and lead from the abstract algorithm to an efficient implementation due to Ulrich Lauther [Lauther 1996] and based on [Desrosiers et al. 1995]. Along the way, we also show that the abstract algorithm can be regarded as a natural extension of Moore's algorithm [Moore 1957] for solving the shortest path problem. Key Words: abstract state machine, software verification, shortest path problem, constrained shortest path problem Category: D.2.4, F.3.1, G.2.2 
Abstract-found: 1
Intro-found: 1
Reference: [Borger 1995] <author> Borger, E.: </author> <title> "Why Use Evolving Algebras for Hardware and Software Engineering". </title> <editor> In Miroslav Bartosek, Jan Staudek, and Jiri Wiedermann, editors, </editor> <booktitle> SOFSEM `95, 22nd Seminar on Current Trends in Theory and Practice of Informatics, volume 1012 of Lecture Notes in Computer Science, </booktitle> <pages> pages 236-271, </pages> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: The above explanation of abstract state machines should be sufficient for the rest of this paper. The reader interested in a rigorous definition is advised to consult [Gurevich 1995]. The methodology applied in this paper has been suggested by Borger, cf. <ref> [Borger 1995] </ref>. 2 Preliminaries The constrained shortest path problem is a generalization of the shortest path problem. For didactic purposes, we define this simpler and well known problem first.
Reference: [Borger and Durdanovic 1996] <author> Borger, E. and Durdanovic, I.: </author> <title> "Correctness of Compiling Occam to Transputer Code". </title> <journal> In The Computer Journal, </journal> <volume> volume 39, no. 1, </volume> <pages> pages 52-92, </pages> <year> 1996. </year>
Reference-contexts: We skip the (standard) proof that this queue implementation is correct. (The sceptical reader may look at the more elaborate proof given for the implementation of the slightly more complex queue concept in the Transputer using ASMs in <ref> [Borger and Durdanovic 1996] </ref>.) 6 Instantiation of the ASM shortest path3 Up to now the ASMs we have presented are generic since they all contain the abstract data type W.
Reference: [Desrosiers et al. 1995] <author> Desrosiers, J., Dumas Y., Solomon M., and Soumis, F.: </author> <title> "Time Constrained Routing and Scheduling". </title> <editor> In M. O. Ball, T. L. Magnanti, C. L. Monma, and G. L. Nemhauser, editors, </editor> <title> Network Routing, </title> <booktitle> volume 8 of Handbooks in Operations Research and Management Science, chapter 4, </booktitle> <pages> pages 35-140. </pages> <publisher> North-Holland, </publisher> <year> 1995. </year>
Reference: [Gurevich 1993] <author> Gurevich, Y.: </author> <title> "Evolving Algebras: An Attempt to Discover Semantics". </title> <editor> In G. Rozenberg and A. Salomaa, editors, </editor> <booktitle> Current Trends in Theoretical Computer Science, </booktitle> <pages> pages 266-292. </pages> <publisher> World Scientific, </publisher> <year> 1993. </year>
Reference-contexts: To this end, we provide an implementation of certain operations on step functions. The resulting algorithm can readily be translated into an efficient C++ program. The algorithms are presented as abstract state machines (ASM), a notion introduced by Gurevich under the name of evolving algebras <ref> [Gurevich 1993] </ref>. ASMs can be regarded as pseudo code. However, in contrast to pseudo code, ASMs have a rigorous semantics, formally defined in Gurevich [Gurevich 1995]. The notation used to present an ASM is mostly self explanatory.
Reference: [Gurevich 1995] <author> Gurevich, Y.: </author> <title> "Evolving Algebras 1993: Lipari Guide". </title> <editor> In Egon Borger, editor, </editor> <booktitle> Specification and Validation Methods, </booktitle> <pages> pages 3-36. </pages> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: The algorithms are presented as abstract state machines (ASM), a notion introduced by Gurevich under the name of evolving algebras [Gurevich 1993]. ASMs can be regarded as pseudo code. However, in contrast to pseudo code, ASMs have a rigorous semantics, formally defined in Gurevich <ref> [Gurevich 1995] </ref>. The notation used to present an ASM is mostly self explanatory. For the reader not familiar with [Gurevich 1995] we explain this notation and its semantics on an informal level. The basic notion of an ASM is the notion of an update. <p> ASMs can be regarded as pseudo code. However, in contrast to pseudo code, ASMs have a rigorous semantics, formally defined in Gurevich <ref> [Gurevich 1995] </ref>. The notation used to present an ASM is mostly self explanatory. For the reader not familiar with [Gurevich 1995] we explain this notation and its semantics on an informal level. The basic notion of an ASM is the notion of an update. <p> All further notations used like, e.g. the initialization, are self explanatory. The above explanation of abstract state machines should be sufficient for the rest of this paper. The reader interested in a rigorous definition is advised to consult <ref> [Gurevich 1995] </ref>. The methodology applied in this paper has been suggested by Borger, cf. [Borger 1995]. 2 Preliminaries The constrained shortest path problem is a generalization of the shortest path problem. For didactic purposes, we define this simpler and well known problem first.
Reference: [Lauther 1996] <author> Lauther, U.: </author> <title> "C++ Implementation of Constrained Shortest Path Calculations". </title> <type> Personal communication, </type> <year> 1996. </year>
Reference-contexts: Based on the precise semantical ASM description given in [Wallace 1995] for the semantics of C++ we can transform the ASM obtained here to a C++-program and further optimize this program in the spirit of <ref> [Lauther 1996] </ref>. In this way we can prove the correctness of a highly sophisticated program that solves a non-trivial graph theoretical problem.
Reference: [Moore 1959] <author> Moore, E. F.: </author> <title> "The Shortest Path Through a Maze". </title> <booktitle> In Proc. International Symposium on the Theory of Switching, Part II, volume 30 of The Annals of the Computation Laboratory of Harvard University, </booktitle> <address> Cambridge, MA, 1959. </address> <publisher> Harvard University Press. </publisher>
Reference: [Tarjan 1983] <author> Tarjan, R. E.: </author> <title> "Data Structures and Network Algorithms." </title> <booktitle> volume 44 of CBMS-NSF Regional Conference Series in Applied Mathematics. </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1983. </year>
Reference-contexts: The method that we use is known in the literature as the labeling and scanning method, cf. <ref> [Tarjan 1983] </ref>. It is essentially a bookkeeping method that works by maintaining a set S of nodes that still need to be scanned, where scanning a node v is carried out in three steps: 1. The set E of all edges originating in v is computed.
Reference: [Wallace 1995] <author> Wallace, C.: </author> <title> "The Semantics of the C++ Programming Language". </title> <editor> In Egon Borger, editor, </editor> <booktitle> Specification and Validation Methods, </booktitle> <pages> pages 131-164. </pages> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: Proof: This lemma can be shown by a simple expansion of the definitions. 2 Concluding Remark: At this point the implementation of SF is complete and we have developed an algorithm to solve the constrained shortest path problem. Based on the precise semantical ASM description given in <ref> [Wallace 1995] </ref> for the semantics of C++ we can transform the ASM obtained here to a C++-program and further optimize this program in the spirit of [Lauther 1996]. In this way we can prove the correctness of a highly sophisticated program that solves a non-trivial graph theoretical problem.
References-found: 9

