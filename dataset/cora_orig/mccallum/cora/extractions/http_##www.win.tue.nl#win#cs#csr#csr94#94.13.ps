URL: http://www.win.tue.nl/win/cs/csr/csr94/94.13.ps
Refering-URL: http://www.win.tue.nl/win/cs/csr/csr94.html
Root-URL: http://www.win.tue.nl
Email: e-mail: seljee@kub.nl  
Title: A NEW METHOD FOR INTEGRITY CONSTRAINT CHECKING IN DEDUCTIVE DATABASES  
Author: Ron Seljee, 
Date: October 26, 1994  
Address: the Netherlands  
Affiliation: Co-operation Centre Tilburg and Eindhoven Universities  
Abstract: In the literature, several integrity checking methods for updates in deductive databases are described. All these methods try to instantiate the specified integrity constraints with the update in order to constrain the full check to only a relevant part of the database. Globally, they can be divided in two major classes of methods; methods based on "induced updates" and methods based on "potential updates". In this article a new method will be presented. This method represents also a new class of methods. While in the first two classes one has to generate induced updates and potential updates respectivily, even if they are not relevant to any of the constraints, the new method, which will be called the "method based on inconsistency rules", does not have this drawback. Therefore, the proposed method is potentially far more efficient than any other method based on induced updates or potential updates. 
Abstract-found: 1
Intro-found: 1
Reference: [BDM 88] <author> Bry, Francois, Hendrik Decker and Rainer Manthey, </author> <title> "A Uniform Approach to Constraint Satisfaction and Constraint Satisfiability in Deductive Databases", </title> <booktitle> in [SCM88], </booktitle> <pages> pp. 488-505, </pages> <note> also: ECRC Technical Report KB-16, 7 Nov. </note> <year> 1987. </year>
Reference: [DAW 89] <author> Das, S.K. and M.H. </author> <title> Williams "Integrity Checking Methods in Deductive Databases: A Comparative Evaluation", </title> <booktitle> in [WIL 89], </booktitle> <pages> pp. 85-116. </pages>
Reference-contexts: will show that the method based on inconsistency rules is potentially far more efficient than all methods based on induced updates or potential updates. 21 7 COMPARISON WITH EXISTING METHODS Some tables below show the results of Das and Williams, who implemented and tested several integrity constraint checking methods. (See <ref> [DAW 89] </ref>). One of these methods is called the simple method . This method checks all inconsistency indicators using all possible facts in the database to check the consistency of the updated database. <p> we find resp. the results of Das and Williams and the results of the proposed method based on inconsistency rules Method Time Simple 336.1 Lloyd et al. 10.0 Decker 31.5 Kowalski et al. 133.7 Das and Williams 18.4 Table 2: The timings of Das & Williams of the example from <ref> [DAW 89] </ref>. The reason why the proposed method is far more efficient than the other presented methods is that in the proposed method all possible violations of updates are represented in the inconsistency rules, which become a part of the deductive database. <p> But instead of the fact base and inconsistency indicators of the first example we have: 24 Method Time Lloyd et al. 3.4 Decker 0.8 Kowalski et al. 0.4 Das and Williams 0.2 Table 4: Timings of Das & williams of example A from <ref> [DAW 89] </ref>. <p> Method Operation add del Lloyd et al. 0.7 0.7 Decker 62.9 63.0 Kowalski et al. AE 100.0 AE 100.0 Das and Williams 37.4 0.3 Table 6: Timings of Das & Williams of example B from <ref> [DAW 89] </ref>. <p> This example can also be found in <ref> [DAW 89] </ref>. This database was tested with three different fact bases, so we can see how the results of the different methods evolve when the amount of base facts increases. <p> with the number of facts. 27 Method Number of Facts 1010 3062 5119 Simple 37.0 311.5 860.6 Lloyd et al. 2.9 11.7 28.3 Decker 16.6 54.0 99.4 Kowalski et al. 14.2 58.6 129.1 Das and Williams 2.5 11.9 29.0 Table 8: Timings of Das & Williams of example C from <ref> [DAW 89] </ref>.
Reference: [DEC 87] <author> Decker, H. </author> <title> "Integrity Enforcement on Deductive Databases", </title> <booktitle> in [KER 87], </booktitle> <pages> pp. 271-285. </pages>
Reference: [DWI 89] <author> Das, K. and M. </author> <title> Howard Williams "A path finding method for constraint checking in deductive databases", </title> <booktitle> in Data & Knowledge Engineering 4, </booktitle> <pages> pp. 223-244, </pages> <year> 1989. </year>
Reference: [LLT 85] <author> Lloyd, J.W. and R.W. </author> <title> Topor "A Basis for Deductive Database Systems", </title> <editor> J. </editor> <booktitle> Logic Programming 2, </booktitle> <pages> pp. 93-109, </pages> <year> 1985. </year>
Reference: [LLT 86] <author> Lloyd, J.W. and R.W. </author> <title> Topor "A Basis for Deductive Database Systems II", </title> <editor> J. </editor> <booktitle> Logic Programming 3 (1), </booktitle> <pages> pp. 55-67, </pages> <year> 1986. </year>
Reference: [LST 87] <author> Lloyd, J.W., E.A. Sonenberg and R.W. </author> <title> Topor "Integrity Constraint Checking in Stratified Databases", </title> <editor> J. </editor> <booktitle> Logic Programming 4, </booktitle> <pages> pp. 331-343, </pages> <year> 1987. </year>
Reference: [LLO 87] <author> Lloyd, J.W. </author> <title> "Foundations of Logic Programming", 2nd, Extended Edition, </title> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference: [NIC 82] <author> Nicolas, J.M. </author> <title> "Logic for Improving Integrity Checking in Relational Databases". </title> <journal> Acta Informatica 18 (3), </journal> <pages> pp. 227-253, </pages> <year> 1982. </year>
Reference: [NIY 78] <author> Nicolas, J.M. and K. </author> <title> Yazdanian "Integrity Checking in Deductive Data Bases", </title> <booktitle> 30 in "Logic and Databases",[GAM78], </booktitle> <pages> pp. 325-346, </pages> <year> 1978. </year>
Reference: [SAD 88] <author> Sadri, Fariba, </author> <title> and Robert Kowalski "A Theorem-Proving Approach to Database Integrity", in [MIN 88], </title> <booktitle> Chapter 9. PROCEEDINGS </booktitle>
Reference: [GAM 78] <author> Gallaire, H. and J. </author> <title> Minker "Logic and Databases", </title> <publisher> Plenum Press, </publisher> <address> New York 1978. </address>
Reference: [KER 87] <editor> Kerschberg, Larry (Ed.) </editor> <booktitle> "Expert Database Systems: Proceedings from the First International Conference", </booktitle> <address> Charleston, Sc. ,1987. </address>
Reference: [MIN 88] <editor> Minker, J. (Ed.) </editor> <booktitle> "Foundations of Deductive Databases and Logic Programming", </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1988. </year>
Reference: [SCM 88] <editor> Schmidt, J.W., S. Ceri and M. Missikoff (Eds.) </editor> <booktitle> "Advances in Databases Technology, EDBT '88", International Conference on Extending Database Technology, Proceedings, </booktitle> <address> Venice, Italy, </address> <month> 14-18 March </month> <year> 1988, </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <pages> 303. </pages>
Reference: [WIL 89] <editor> Williams, M.H. (Ed.) </editor> <booktitle> "Proceedings of the Seventh British National Conference on Databases", </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1989. </year> <title> 10 APPENDIX Figure I : the induced updates Figure II : the potential updates 32 Figure III : the potential update tree Figure IV : instantiation of the potential update tree 33 Figure V : the inconsistency trees Figure VI : the one level inconsistency trees 34 </title>
References-found: 16

