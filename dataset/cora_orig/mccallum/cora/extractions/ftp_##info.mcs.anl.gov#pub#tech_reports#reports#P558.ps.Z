URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P558.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts96.htm
Root-URL: http://www.mcs.anl.gov
Title: Parallel Computation of Three-Dimensional Nonlinear Magnetostatic Problems  
Author: David Levine William Gropp Kimmo Forsman Lauri Kettunen 
Abstract: We describe a general-purpose parallel electromagnetic code for computing accurate solutions to large computationally demanding, 3D, nonlinear magnetostatic problems. The code, CORAL, is based on a volume integral equation formulation. Using an IBM SP parallel computer and iterative solution methods, we successfully solved the dense linear systems inherent in such formulations. A key component of our work was the use of the PETSc library, which provides parallel portability and access to the latest linear algebra solution technology. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Bossavit. </author> <title> Whitney forms: A class of finite elements for three-dimensional computations in electromagnetism. </title> <booktitle> In IEE Proceedings, </booktitle> <volume> volume 135, Pt. A, </volume> <pages> pages 493-499, </pages> <year> 1988. </year>
Reference-contexts: After a few cycles the Newton-Raphson method is applied to accelerate the convergence. 3 The CORAL Program CORAL uses a three-dimensional tetrahedral mesh generated by the PROBE [4] mesh generator. The mesh uses Whitney elements, a class of finite elements introduced by Bossavit in connection with computational electromagnetics <ref> [1] </ref>. Whitney elements differ from traditional 4 finite-elements in that the degrees of freedom are related to all the simplices in a simplicial mesh (i.e., the nodes, edges, facets, and volumes). CORAL is written primarily in Fortran 77 with a few routines written in C.
Reference: [2] <author> E. Anderson et al. </author> <title> LAPACK Users's Guide. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year>
Reference-contexts: Compilation was done by using the IBM xlf Fortran compiler with level O3 optimizations. Chameleon generated EUI-H message-passing calls. In the work reported in [3] we compared LAPACK's LU solver <ref> [2] </ref> with several different iterative solvers and preconditioners on a DEC Alpha workstation. In one set of tests, generalized minimal residual (GMRES), bi-conjugate gradient stabilized (Bi-CGSTAB), and conjugate gradient stabilized (CGS) using a band preconditioner were all more efficient than LU, with GMRES being the most efficient.
Reference: [3] <author> K. Forsman, W. Gropp, L. Kettunen, D. Levine, and J. Salonen. </author> <title> Solution of dense systems of linear equations arising from integral formulations. </title> <publisher> IEEE Antennas and Propagation (in press). </publisher>
Reference-contexts: Compilation was done by using the IBM xlf Fortran compiler with level O3 optimizations. Chameleon generated EUI-H message-passing calls. In the work reported in <ref> [3] </ref> we compared LAPACK's LU solver [2] with several different iterative solvers and preconditioners on a DEC Alpha workstation. <p> As the granularity decreased, so did the speedup. In fact, when the granularity got too small, the parallel computing overheads degraded performance overall. To show that GMRES compares favorably with LU in a parallel computing environment, we reproduce Table VI from <ref> [3] </ref> in Table 3. The times given are for solving only the second nonlinear iteration of the APS dipole magnet.
Reference: [4] <author> K. Forsman and L. Kettunen. </author> <title> Tetrahedral mesh generation in convex primitives by maximizing solid angles. </title> <journal> IEEE Transaction on Magnetism, </journal> <volume> 30 </volume> <pages> 3535-3538, </pages> <year> 1994. </year>
Reference-contexts: After a few cycles the Newton-Raphson method is applied to accelerate the convergence. 3 The CORAL Program CORAL uses a three-dimensional tetrahedral mesh generated by the PROBE <ref> [4] </ref> mesh generator. The mesh uses Whitney elements, a class of finite elements introduced by Bossavit in connection with computational electromagnetics [1].
Reference: [5] <author> W. Gropp, L. Curfman McInnes, and B. Smith. </author> <title> PETSc World Wide Web home page. </title> <note> http://www.mcs.anl.gov/petsc/petsc.html, 1995. 12 </note>
Reference-contexts: The PSVSetUp call allocates scratch memory and sets to default values parameters and options not otherwise set. Finally, PSVSolve solves the system of equations with right-hand side b. The answer is returned in the array x. 1 We used PETSc 1.0 in this work. PETSc 2.0 is now available <ref> [5] </ref>. 2 At the time of this work, MPI, the Message Passing Interface, had not yet been defined. 5 smat = SpDnCreateFromData (m, m, n, matrix) pmat = PSPCreate ( smat, m ) If ( precnd .eq. PSVJacobi ) then method = PSVJacobi Else If ( precnd .eq.
Reference: [6] <author> W. Gropp and B. Smith. </author> <title> Scalable, extensible, and portable numerical libraries. </title> <booktitle> In Proceed--ings of Scalable Parallel Libraries Conference, </booktitle> <pages> pages 87-93. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: For this reason we focused on the message-passing programming model. To satisfy the portability requirement, not only the message-passing primitives, but also the linear algebra routines and I/O facilities must be portable. Our solution to this requirement was to use PETSc (Portable and Extensible Tools for Scientific Computing) <ref> [6] </ref>, a large toolkit of software for portable, parallel (and serial) scientific computation. 1 The two components of PETSc that we used were the Chameleon and PSLES (Parallel Simplified Linear Equation Solvers) libraries.
Reference: [7] <author> L. Kettunen. </author> <title> Volume Integral Formulations for Three Dimensional Electromagnetic Field Computation. </title> <type> PhD thesis, </type> <institution> Tampere University of Technology, </institution> <year> 1992. </year> <note> Publication 86, Tam-pere, Finland. </note>
Reference-contexts: Indeed, several methods have already been developed to efficiently solve dense systems of linear equations on parallel computers. 2.2 Numerical Formulation Motivated by these advantages of IEMs we developed the CORAL code. CORAL <ref> [7, 9] </ref>, solves three-dimensional, nonlinear magnetostatics problems. The formulation we use in CORAL is based on the idea of superposition of fields from current and magnetization sources. We denote magnetic flux density with B, magnetic field strength with H, magnetization with M , permeability with , and susceptibility with O.
Reference: [8] <author> L. Kettunen, K. Forsman, D. Levine, and W. Gropp. </author> <title> Volume integral equations in nonlinear 3-d magnetostatics. </title> <journal> International Journal of Numerical Methods in Engineering, </journal> <volume> 38 </volume> <pages> 2655-2675, </pages> <year> 1995. </year>
Reference-contexts: We then briefly discuss the integral equation formulation we use. More complete details of the integral equation approach may be found in <ref> [8] </ref>. 2.1 Comparison of Finite Elements and Integral Methods in Electromagnetic Programs The first widely used three-dimensional nonlinear magnetostatics program was the integral code GFUN [11]. However, beginning in the mid-1970s, finite-element programs came more into favor. <p> We focus on the computational performance. Details of the accuracy of the calculated electromagnetic field are given in <ref> [8] </ref>. 4.1 Test Problems We present results for two test problems. TEAM 13 is one of the international TEAM (Testing Electromagnetic) benchmark problems [10]. It consists of thin steel plates that are exited below the saturation level.
Reference: [9] <author> L. Kettunen and L. Turner. </author> <title> A Volume integral formulation for nonlinear magnetostatics and eddy currents using edge elements. </title> <journal> IEEE Transactions on Magnetics, </journal> <volume> 28(2) </volume> <pages> 1639-1642, </pages> <year> 1992. </year>
Reference-contexts: Indeed, several methods have already been developed to efficiently solve dense systems of linear equations on parallel computers. 2.2 Numerical Formulation Motivated by these advantages of IEMs we developed the CORAL code. CORAL <ref> [7, 9] </ref>, solves three-dimensional, nonlinear magnetostatics problems. The formulation we use in CORAL is based on the idea of superposition of fields from current and magnetization sources. We denote magnetic flux density with B, magnetic field strength with H, magnetization with M , permeability with , and susceptibility with O.
Reference: [10] <author> T. Nakata, N. Takahashi, K. Fujiwara, K. Muramatsu, T. Imai, and Y. Shiraki. </author> <title> Numerical analysis and experiments of 3-D non-linear magnetostatic model. </title> <booktitle> In Proceedings of TEAM Workshop on Computation of Applied Electromagnetics in Materials, </booktitle> <pages> pages 308-310, </pages> <address> Okayama, Japan, </address> <year> 1990. </year>
Reference-contexts: We focus on the computational performance. Details of the accuracy of the calculated electromagnetic field are given in [8]. 4.1 Test Problems We present results for two test problems. TEAM 13 is one of the international TEAM (Testing Electromagnetic) benchmark problems <ref> [10] </ref>. It consists of thin steel plates that are exited below the saturation level. One of the difficulties when modeling TEAM 13 is the narrow air gap between the steel plates, which requires a large number of elements to achieve accurate results below the saturation level.
Reference: [11] <author> M. J. Newman, L. Turner, and C. W. Trowbridge. </author> <title> GFUN: An interactive program as an aid to magnet design. </title> <booktitle> In Proceedings 4th Magnet Technology Conference, </booktitle> <address> Brookhaven, </address> <year> 1972. </year> <month> 13 </month>
Reference-contexts: We then briefly discuss the integral equation formulation we use. More complete details of the integral equation approach may be found in [8]. 2.1 Comparison of Finite Elements and Integral Methods in Electromagnetic Programs The first widely used three-dimensional nonlinear magnetostatics program was the integral code GFUN <ref> [11] </ref>. However, beginning in the mid-1970s, finite-element programs came more into favor. A comparison of the advantages of the two approaches can help illustrate how this situation evolved and why we believe integral methods deserve reexamination at this time. Three advantages of finite-element programs stand out.
References-found: 11

