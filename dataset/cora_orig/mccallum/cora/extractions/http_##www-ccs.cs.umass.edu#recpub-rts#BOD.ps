URL: http://www-ccs.cs.umass.edu/recpub-rts/BOD.ps
Refering-URL: http://www-ccs.cs.umass.edu/recpub-rts/index.html
Root-URL: 
Email: krithi-@cs.umass.edu  
Title: Broadcast on Demand: Efficient and Timely Dissemination of Data in Mobile Environments  
Author: Ping Xuan, Subhabrata Sen, Oscar Gonz alez, Jesus Fernandez and Krithi Ramamritham -pxuan, sen, ogonzale, jefer, 
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science, University of Massachusetts  
Abstract: The demand for efficient, scalable and cost effective mobile information access systems is rapidly growing. Radio frequency broadcast plays a major role in mobile computing, and there is a need to provide service models for broadcasting information according to mobile users' needs. In this paper we present a model called Broadcast on Demand (BoD), which provides timely broadcasts according to requests from users. Compared to static broadcast, this approach has a different emphasis: it is based on a demand driven framework, aimed at satisfying the temporal constraints of the requests, and uses scheduling techniques at the server side to utilize the limited bandwidth dynamically and efficiently. In this paper, several broadcast transmission scheduling policies for BoD are examined. The study indicates that EDF-based policies combined with batching of requests achieve good performance. The results show that BoD is successful in satisfying the temporal constraints of the requests and is a viable service model for wireless broadcast stations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Acharya, R. Alonso, M. Franklin, and S. Zdonik, </author> <title> Broadcast Disk Data Management for Asymmetric Communication Environments, </title> <booktitle> Proceedings of ACM SIGMOD International Conference, </booktitle> <address> San Jose, Califor-nia, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: This is accomplished by intelligent scheduling at the server and using the broadcast nature of the medium, one broadcast satisfying many requests for the same data, leading to an efficient utilization of the bandwidth. Our model is in contrast to the model of Broadcast Disks <ref> [1] </ref>, and in some ways our model can be viewed as encompassing Broadcast Disks, since it exploits the characteristics inherent in broadcast communication. A Broadcast Disk involves periodic and continuous broadcast of data by a stationary server. <p> Repeat steps 2 and 3 until all N items have been laid out. 5. Compact the list towards the beginning of the list by eliminating empty slots between data items. Similar, but more complex layout alternatives, such as the layout discussed in <ref> [1] </ref>, could also be used to meet the same problem specification. In the future we are planning to examine if they can lead to any performance gains. 3.2.
Reference: [2] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> Balancing Push and Pull for Data Broadcast, </title> <booktitle> Proceedings of ACM SIGMOD International Conference, </booktitle> <address> Tucson, Arizona, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Without direct requests from the clients, it is very difficult to quickly adjust the broadcast to the client needs. As a result, in <ref> [2] </ref>, broadcast disk architecture has also been extended to allow explicit requests from clients, thus moving from push-only service to a balance of push and pull. More recently, broadcast disk organizations that try to satisfy deadline constraints have been proposed in [3].
Reference: [3] <author> A. Bestavros, </author> <title> AIDA-based Real-Time Fault-Tolerant Broadcast Disks, </title> <booktitle> Proceedings of IEEE Real-Time Technology and Applications Symposium, </booktitle> <year> 1996. </year>
Reference-contexts: As a result, in [2], broadcast disk architecture has also been extended to allow explicit requests from clients, thus moving from push-only service to a balance of push and pull. More recently, broadcast disk organizations that try to satisfy deadline constraints have been proposed in <ref> [3] </ref>. This work discusses techniques to allocate data items to broadcast disks so as to mask the impact of intermittent failures, and avoid the long delay for waiting for server retransmission. Specifically, the paper considers three possible organizations for broadcasts: flat, rate-monotonic and slotted rate monotonic.
Reference: [4] <author> T. Chiueh, </author> <title> Scheduling for Broadcast-based File Systems, </title> <institution> University of New York at Stony Brook, Computer Science Department Technical report, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: When the requests have locality, broadcast information can be organized in a way that improves access time for hot data, exploiting the information extracted from the monitoring of user access patterns to dynamically adjust the data to be broadcast. This technique, temporal replication <ref> [4] </ref>, broadcasts more popular data items with a higher frequency than cold ones, so overall average data access latency is minimized (accesses to hot data experience shorter delays). When the data at server side is not being updated often, caching and prefetching can be applied to achieve better data availability.
Reference: [5] <author> T. Imielinski, S. Vishnatwan, B. R. Badrinath, </author> <title> Energy efficient indexing on air, </title> <booktitle> Proceedings of ACM SIG-MOD conference, </booktitle> <address> Minneapolis, MN, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: 1 Introduction In the evolving field of mobile computing, there is a growing concern to provide mobile users with timely access to large amounts of information <ref> [5] </ref>. Examples of such services include weather, highway conditions, traffic directions, news and stock quotes. Due to the intrinsic constraints of mobility such as bandwidth restrictions, power consumption, connection reliability, the design of an efficient, scalable and cost effective mobile information access system is a challenging task. <p> For example, when the broadcast schedule is known (or even partially known), indexing can be used to provide power-efficient access. Indexing of data within a broadcast disk has been addressed previously in <ref> [5, 6, 7] </ref>. Organization techniques that multiplex index information together with data on the wireless communication channels allow a mobile client to minimize the energy spent while tuning and keeping the access time under control.
Reference: [6] <author> T. Imielinski, S. Vishnatwan, B. R. Badrinath, </author> <title> Power efficient filtering of data on the air, </title> <booktitle> Proceedings of EDBT, </booktitle> <publisher> LNCS, Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: For example, when the broadcast schedule is known (or even partially known), indexing can be used to provide power-efficient access. Indexing of data within a broadcast disk has been addressed previously in <ref> [5, 6, 7] </ref>. Organization techniques that multiplex index information together with data on the wireless communication channels allow a mobile client to minimize the energy spent while tuning and keeping the access time under control.
Reference: [7] <author> T. Imielinski, Vishnatwan, B. R. Badrinath, </author> <title> Data on Air: Organization and Access, </title> <journal> IEEE Transactions of Data and Knowledge Engineering, </journal> <month> July </month> <year> 1996. </year>
Reference-contexts: For example, when the broadcast schedule is known (or even partially known), indexing can be used to provide power-efficient access. Indexing of data within a broadcast disk has been addressed previously in <ref> [5, 6, 7] </ref>. Organization techniques that multiplex index information together with data on the wireless communication channels allow a mobile client to minimize the energy spent while tuning and keeping the access time under control.
Reference: [8] <author> S. Zdonik, M. Franklin, R. Alonso and S. Acharya, </author> <title> Are Disks in the Air Just Pie in the Sky?, </title> <booktitle> Proceedings of the IEEE Workshop on Mobile Computing Systems and Applications, </booktitle> <address> Santa Cruz, CA, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: When the data at server side is not being updated often, caching and prefetching can be applied to achieve better data availability. In <ref> [8] </ref>, prefetching and client cache management issues are addressed. BoD can benefit from caching in such scenarios as well, since more availability inherently means less requests and faster response times.
Reference: [9] <author> G. K. Zipf, </author> <title> Human Behaviour and the Principles of Least Effort, </title> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1949. </year>
Reference-contexts: We assume that the server is cognizant of the relative hotness or coldness of the different data items. This could be computed by the broadcast server based on past access patterns. In our simulations, we assume that the different data items have associated access probabilities governed by Zipf's law <ref> [9] </ref>. The data item requested by a client is modeled using the same Zipf distribution, i.e., we model the case where the actual access patterns match the expected access behavior.
References-found: 9

