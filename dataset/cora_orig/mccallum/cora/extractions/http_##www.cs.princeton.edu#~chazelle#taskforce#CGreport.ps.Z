URL: http://www.cs.princeton.edu/~chazelle/taskforce/CGreport.ps.Z
Refering-URL: http://www.cs.princeton.edu/~chazelle/
Root-URL: 
Title: Application Challenges to Computational Geometry CG Impact Task Force  
Pubnum: Report  
Abstract: With rapid advances in computer hardware and visualization systems, geometric computing is creeping into virtually every corner of science and engineering, from design and manufacturing to astrophysics to molecular biology to fluid dynamics. This report assesses the opportunities and challenges this presents for the field of computational geometry in the years ahead. Can CG meet the algorithmic needs of practitioners? Should it look to applied areas for new sources of problems? Can CG live up to its potential and become a key player in the vast and diverse world of geometric computing? These are some of the questions addressed in this document. It was prepared by a group of computer scientists, engineers, and mathematicians with extensive experience in geometric computing. This report is intended as a wake-up call rather than an agenda setter. It is hoped it will engage a community-wide discussion on the future of computational geometry.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Agarwal, P.K., Sharir, M., Toledo, S. </author> <title> Applications of parametric searching in geometric optimization, </title> <booktitle> Proc. 3rd ACM-SIAM Symp. Disc. Alg. </booktitle> <year> (1992), </year> <pages> 72-82. </pages>
Reference-contexts: A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations. Cost functions based on the Hausdorff distance have been investigated in both the computational geometry <ref> [1, 3, 78] </ref> and computer vision [79, 128] literatures. The applied methods developed in the vision community are provably good approximation schemes for solving the combinatorial problems that were originally investigated in the computational geometry community. Image Representation.
Reference: [2] <author> Airey, J.M., Rohlf, J.H., Brooks, </author> <title> F.P. Towards image realism with interactive update rates in complex virtual building environments, </title> <booktitle> ACM Siggraph, Special Issue on 1990 Symp. Interactive 3D Graphics 24 (1990), </booktitle> <pages> 41-50. </pages>
Reference-contexts: For the sake of concreteness, here are some specific problems. Note that in any real graphics application, a successful algorithm should be output-sensitive and incremental (as, for example, fly-throughs in complex building environments <ref> [2, 54, 55, 137] </ref>). Given a scene of n convex polygons (or balls) in general position: 1. Determine the scene visible from a synthetic eyepoint. If z-buffer hardware is available, it might be advantageous to identify a superset of the surfaces visible from the eyepoint. 2.
Reference: [3] <author> Alt, H., Behrends, B., Blomer, J. </author> <title> Measuring the resemblance of polygonal shapes, </title> <booktitle> Proc. 7th Ann. ACM Symp. Comp. Geom. </booktitle> <year> (1991), </year> <pages> 186-193. </pages>
Reference-contexts: A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations. Cost functions based on the Hausdorff distance have been investigated in both the computational geometry <ref> [1, 3, 78] </ref> and computer vision [79, 128] literatures. The applied methods developed in the vision community are provably good approximation schemes for solving the combinatorial problems that were originally investigated in the computational geometry community. Image Representation.
Reference: [4] <author> Arge, L. </author> <title> The buffer tree: a new technique for optimal I/O-algorithms, </title> <booktitle> in Workshop on Data Structures and Algorithms, </booktitle> <year> 1995. </year>
Reference-contexts: External memory models have been proposed which let researchers design I/O efficient algorithms. Recently several I/O efficient algorithms for specifically geometric problems have been proposed which make use of novel techniques <ref> [4, 24] </ref>. Chiang [34] gives experimental evidence of the importance of redesigning geometric algorithms to minimize page faults and to optimize the number of I/O accesses. Computational Topology. An important feature of a galaxy is its topology.
Reference: [5] <author> Arkin, E.M., Fekete, S., Mitchell, J.S.B. </author> <title> Optimal tours for lawnmowing and milling, </title> <institution> SUNY Stony Brook, </institution> <year> 1995. </year> <note> An earlier paper appears in the 5th Canad. Conf. on Comp. Geom., </note> <year> 1993, </year> <pages> 461-466. </pages>
Reference-contexts: Provably good approximation algorithms for specific (simplified) classes of problems have been devised by CG'ers for minimizing the total tool motion <ref> [5] </ref> and the number of retractions necessary in "zigzag" pocket machining [6]. But many more problems must be addressed, particularly those that deal with realistic models of machining.
Reference: [6] <author> Arkin, E.M., Held, M., Smith, C.L. </author> <title> Optimization problems related to zigzag pocket machining, </title> <booktitle> Proc. 6th ACM-SIAM Symp. Disc. Alg. </booktitle> <year> (1996), </year> <pages> 419-428. 49 </pages>
Reference-contexts: Provably good approximation algorithms for specific (simplified) classes of problems have been devised by CG'ers for minimizing the total tool motion [5] and the number of retractions necessary in "zigzag" pocket machining <ref> [6] </ref>. But many more problems must be addressed, particularly those that deal with realistic models of machining. So far, the discussion has been limited to "nominal spatial effects." It has been assumed that the tool moves exactly as specified and removes all material within its swept volume.
Reference: [7] <author> Armstrong, G.T., Carey, G.C., dePennington, A. </author> <title> Numerical Code Generation From a Geometric Modeling System, Solid Modeling by Computers: From Theory to Applications, </title> <editor> ed. M.S. Pickett and J.W. Boyse, </editor> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: The generation of error-free NC programs directly from computer-based geometric models would significantly shorten the product development cycle. While some limited attempts at automatic NC program generation have been reported in the literature <ref> [7] </ref>, a practical system has yet to be achieved. Producing such a system would be a very valuable step, and is quite likely to use a mix of computational geometry and classical optimization.
Reference: [8] <author> Arya, S., Mount, D.M., Netanyahu, N.S., Silverman, R., Wu, A. </author> <title> An optimal algorithm for approximate nearest neighbor, Sympos. </title> <journal> Disc. Alg., </journal> <year> 1994. </year>
Reference-contexts: This is a difficult problem to solve efficiently (see <ref> [8] </ref> for a good history of the problem). In practice, one can implement a simpler version of the problem called approximate nearest neighbor [8] which takes a parameter ", and finds an object in the database whose distance to q is at most (1 + ") times the distance to the <p> This is a difficult problem to solve efficiently (see <ref> [8] </ref> for a good history of the problem). In practice, one can implement a simpler version of the problem called approximate nearest neighbor [8] which takes a parameter ", and finds an object in the database whose distance to q is at most (1 + ") times the distance to the actual nearest neighbor. * k-Nearest Neighbors Query [8]: Given a query object q, find k-nearest objects (approximate) to q in the database. * <p> In practice, one can implement a simpler version of the problem called approximate nearest neighbor <ref> [8] </ref> which takes a parameter ", and finds an object in the database whose distance to q is at most (1 + ") times the distance to the actual nearest neighbor. * k-Nearest Neighbors Query [8]: Given a query object q, find k-nearest objects (approximate) to q in the database. * Proximity Query: Given two regions in d-space and a parameter ffi, find all pairs of objects, one in each region, that lie within a distance ffi of each other. <p> Actually, the current advances in space partitioning raises the hope for yet more efficient algorithms. For the nearest neighbor problem, Voronoi diagram-based methods are doomed because of the exponential blow in the dimension. Approximation methods have considered <ref> [8] </ref>. A full taxonomy should be developed so that the best algorithm for any given dimension can be identified. When the dimension is very large, projection methods might work well: pick a random k-flat for small k, and project the points normally to it.
Reference: [9] <author> Asano, T., Kimura, S. </author> <title> Contour representation of an image with applications, </title> <booktitle> Proc. SPIE's International Symposium on Vision Geometry IV, </booktitle> <address> San Diego (July 1995), </address> <pages> 14-22. </pages>
Reference-contexts: Image Representation. Quantized images are commonly represented as sets of pixels encoding color/brightness information in matrix form. An alternative model is based on contour lines: A contour representation allows for easy retrieval of the full image in bitmap form <ref> [9] </ref>. It has been used primarily for data compression of an image. The idea is to encode, for each level l, the boundaries of connected regions of pixels at levels greater than or equal to l. It is easy to reconstruct an original image from those boundaries.
Reference: [10] <author> Asano, T., Chen, D.Z., Katoh, N., Tokuyama, T. </author> <title> Polynomial-time solutions to image segmentation, </title> <booktitle> Proc. of the 7th Ann. SIAM-ACM Conference on Discrete Algorithms (Jan. </booktitle> <year> 1996), </year> <pages> 104-113. </pages>
Reference-contexts: Without getting into details, it is apparent that several variants of this heuristic can be designed. Efficient implementations and classifications of these heuristics would be very useful. 12 Image Segmentation. A central problem, called segmentation, is to distinguish objects from background <ref> [10] </ref>. For intensity images (ie, those represented by point-wise intensity levels) four popular approaches are: threshold techniques, edge-based methods, region-based techniques, and connectivity-preserving relaxation methods.
Reference: [11] <author> Atherton, P., Earl, C., Fred, C. </author> <title> A graphical simulation system for dynamic five-axis NC verification, </title> <booktitle> Autofact Show of the Society of Manufacturing Engineers, </booktitle> <address> Detroit, </address> <month> Nov. </month> <year> 1987, </year> <pages> 2-1 - 2-12. </pages>
Reference-contexts: Several researchers used an image-space approach, where an extended Z-buffer is provided for each pixel in a given graphical view of the part, and each tool movement updates the pixel information for each pixel that it passes over <ref> [11, 138, 143] </ref>. CGTech's Vericut simulator 32 uses such an approach. These methods are faster than the complete methods but they are view-dependent. Because of this, errors might not be visible from a certain view direction and would therefore be missed. (Consider a nearly flat surface viewed edge-on.
Reference: [12] <author> Baird, H.S. </author> <title> Mode-Based Image Matching Using Location, </title> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference-contexts: The matching problem is then to search for transformations bringing each point or line segment of the model into such a polygonal region in the image. These problems can be structured as sweeping 11 arrangements, using algorithms from computational geometry <ref> [12, 28] </ref>. A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations.
Reference: [13] <author> Baker, T.J. </author> <title> Developments and trends in three-dimensional mesh generation, </title> <journal> Appl. </journal> <note> Numerical Mathematics 5 (1989) 275-304. </note>
Reference-contexts: See for example, http://www.csn.net/~bthoen/ores/gis/index.html For GIS FAQ, see http://www.census.gov/geo/gis/faq-index.html Finally, for ESRI (ARC/Info), see: http://www.esri.com/. 19 7 Mesh Generation A mesh is a discretization of a geometric domain, e.g., the air around a wing, into small simple shapes called elements <ref> [13, 15, 67, 75, 93, 130] </ref>. A structured mesh is usually a warped grid of boxes, while an unstructured mesh is typically a triangulation. Some advantages of structured meshes that hold generally over most applications, are simplicity, availability of code, and suitability for multigrid and finite difference methods.
Reference: [14] <author> Barequet, G., Sharir, M. </author> <title> Piecewise-linear interpolation between polygonal slices, CVGIP: Image Understanding, </title> <note> to appear. </note>
Reference-contexts: An alternative approach was recently pursued in Israel <ref> [14] </ref> (see this paper for an extensive review of the relevant literature). This technique is based on the idea of geometric hashing, which was developed for object recognition problems in computer vision.
Reference: [15] <author> Bern, M., Eppstein, D. </author> <title> Mesh generation and optimal triangulation, In "Computing in Euclidean Geometry" (2nd Edition). </title> <editor> Eds. D.-Z. Du and F.K. Hwang, </editor> <publisher> World Scientific Press (1995), </publisher> <pages> 47-123. </pages>
Reference-contexts: See for example, http://www.csn.net/~bthoen/ores/gis/index.html For GIS FAQ, see http://www.census.gov/geo/gis/faq-index.html Finally, for ESRI (ARC/Info), see: http://www.esri.com/. 19 7 Mesh Generation A mesh is a discretization of a geometric domain, e.g., the air around a wing, into small simple shapes called elements <ref> [13, 15, 67, 75, 93, 130] </ref>. A structured mesh is usually a warped grid of boxes, while an unstructured mesh is typically a triangulation. Some advantages of structured meshes that hold generally over most applications, are simplicity, availability of code, and suitability for multigrid and finite difference methods.
Reference: [16] <author> Boissonnat, J.-D. </author> <title> Shape reconstruction from planar cross sections, </title> <booktitle> Computer Vision, Graphics and Image Processing 44 (1988), </booktitle> <pages> 1-29. </pages>
Reference-contexts: Efficient geometric solutions began to emerge on the practical scene only in the late eighties. With few exceptions, all such methods make use of recent data structuring techniques developed by computational geometers. For example, a Voronoi-diagram based method was developed at INRIA (France) <ref> [16, 18] </ref>. It involves computing the Delaunay triangulation of pairs of successive slices, then projecting each pair element against the other, thus tetrahe-dralizing the space between consecutive slices. The code was commercialized by two companies.
Reference: [17] <author> Boissonnat, J.-D., Faugeras, </author> <title> O.D. Triangulation of 3-D objects, </title> <booktitle> Proc. 7th Int. Joint Conf. on Artificial Intelligence (1981), </booktitle> <pages> 658-660. </pages>
Reference-contexts: It considers slice entities (contours) and, by considering each pair of successive slices in turn, it then concatenates all the layer interpolations. Hybrid methods have also been tried: for example, one might fit a surface to an unstructured cloud of points in 3D <ref> [17] </ref>. The first approach has been dominant in the past decade, despite the severe limitations caused by its storage requirements.
Reference: [18] <author> Boissonnat, J.-D., Geiger, B. </author> <title> Three-dimensional reconstruction of complex shapes based on the Delaunay triangulation, </title> <editor> eds., Acharya, R.S. and Goldgof, D.B. </editor> <booktitle> In "Biomedical Image Processing and Biomedical Visualization", 1905 (1993), SPIE, </booktitle> <pages> 964-975. </pages>
Reference-contexts: Efficient geometric solutions began to emerge on the practical scene only in the late eighties. With few exceptions, all such methods make use of recent data structuring techniques developed by computational geometers. For example, a Voronoi-diagram based method was developed at INRIA (France) <ref> [16, 18] </ref>. It involves computing the Delaunay triangulation of pairs of successive slices, then projecting each pair element against the other, thus tetrahe-dralizing the space between consecutive slices. The code was commercialized by two companies.
Reference: [19] <author> Boissonnat, J.-D., Teillaud, M. </author> <title> On the randomized construction of the Delaunay tree, </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 112 </month> <year> (1993), </year> <pages> 339-354. </pages>
Reference-contexts: Many of the underlying ideas were borrowed from the recent work on randomized algorithms in computational geometry [36, 108]. In particular, the algorithm uses a hierarchical representation, the so-called Delaunay tree <ref> [19] </ref>, to construct a terrain in real-time and automatically adapt the database to the specifications of the graphics device as well as to the distance of the observer from the terrain. 4 Shape Reconstruction In many application domains, it is necessary to reconstruct 3D models of objects from 2D cross-sections: medical
Reference: [20] <author> Bouma, W., Fudos, I., Hoffmann, C.M., Cai, J., Paige, R. </author> <title> A geometric constraint solver, </title> <booktitle> Computer Aided Design 27 (1995), </booktitle> <pages> 487-501. </pages>
Reference: [21] <author> Brost, R., Goldberg, K. </author> <title> A complete algorithm for synthesizing modular fixtures for polygonal parts. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <note> 1996. To appear. </note>
Reference: [22] <author> Brunner, R., Ramaiyer, K., Szalay, A., Connolly, A., Lupton, R. </author> <title> An object-oriented approach to astronomical databases, </title> <booktitle> Proc. 4th Ann. Conf. Astronomical Data Analysis Software and Systems, </booktitle> <address> Baltimore, </address> <year> 1994. </year>
Reference-contexts: New software will have to compete with the available packages, which are already widely used, and it will need to follow data and calling standards so components can be plugged together to solve large problems. 12 Astrophysics Large ongoing projects, such as the Sloan Digital Sky Survey (SDSS) <ref> [83, 22, 123] </ref>, aim at creating a comprehensive digital map of the northern sky. The project SDSS will result in a complex archive of about 20 terabytes containing exquisitely calibrated digital images of the accessible half of the northern sky, in 5 wavelength bands, from the ultraviolet to the infrared.
Reference: [23] <editor> Buttenfield, B., McMaster, R., eds. </editor> <title> Map Generalization: Making Rules for Knowledge Representation, </title> <publisher> John Wiley & Sons, </publisher> <year> 1991. </year>
Reference-contexts: Nevertheless, there is an associated level of detail which determines a range of scales at which the data can be displayed without being too crowded or too sparse. Generalization is the process whose goal is to extend this range <ref> [23] </ref>. Several geometric problems fall under the heading of generalization: Line simplification: Approximate a polygonal line by one with less data (but hopefully the same information). This is has been the subject of much research in GIS, image processing, and computational geometry.
Reference: [24] <author> Callahan, P., Goodrich, M., Ramaiyer, K. </author> <title> Topology B-trees and their applications, </title> <booktitle> Workshop on Data Structures and Algorithms, </booktitle> <year> 1995. </year> <month> 50 </month>
Reference-contexts: External memory models have been proposed which let researchers design I/O efficient algorithms. Recently several I/O efficient algorithms for specifically geometric problems have been proposed which make use of novel techniques <ref> [4, 24] </ref>. Chiang [34] gives experimental evidence of the importance of redesigning geometric algorithms to minimize page faults and to optimize the number of I/O accesses. Computational Topology. An important feature of a galaxy is its topology.
Reference: [25] <author> Callahan, P., Kosaraju, </author> <title> S.R. A decomposition of multi-dimensional point-sets with applications to k-nearest-neighbors and n-body potential fields, </title> <booktitle> Proc. 24th Ann. ACM Sympos. Theory Comput. </booktitle> <year> (1992), </year> <pages> 546-556. </pages>
Reference-contexts: Assuming infinite arithmetic, it is easy to compute the potential in O (n 2 ) time, where n is the number of particles. A method, called the fast multipole method, based on multipole expansion was developed in [65] and refined by introducing computational-geometric ideas in distance geometry <ref> [25] </ref>. To apply the fast multipole method, one must first construct a tree decomposition of the set of particles, along with a set of pairs of nodes in the tree. This step can be shown to require fi (n log n) time in the algebraic model.
Reference: [26] <author> Canny, J. </author> <title> The Complexity of Robot Motion Planning, </title> <publisher> M.I.T. Press, </publisher> <address> Cambridge, </address> <year> 1988. </year>
Reference-contexts: Path planning problems have been widely studied by computational geometers, with some spectacular theoretical successes. General motion planning problems were first shown to be solvable in polynomial time [132], then with a practical exponent (equal to the number of degrees of freedom) <ref> [26] </ref>, and then with a tightened exponent in many cases with the aid of Davenport-Schinzel sequences [133]. For the case of industrial robots, the degrees of freedom range from four to six. Multi-robot systems and robot hands are much higher.
Reference: [27] <author> Canny, J., Goldberg, K. </author> <title> A RISC approach to sensing and manipulation, </title> <journal> Journal of Robotic Systems, </journal> <volume> 12(6) </volume> <pages> 351-362, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: One idea is to formally model a small "vocabulary" of parameterized modular components (e.g., robot arms, conveyor belts, flexible part feeders, modular fixtures, light beams, 2D vision systems) and develop CG-based algorithms to efficiently compile them into an assembly system for a given CAD product model <ref> [27] </ref>. Here are a few relevant problem areas: 1. Convex Decomposition: For motion planning, collision checking is currently most efficient for convex polyhedra, so we need better methods for convex decomposition of polyhedra. Algorithms should produce a near-optimal number of convex components.
Reference: [28] <author> Cass, T.A. </author> <title> Feature matching for object localization in the presence of uncertainty, </title> <booktitle> Proc. IEEE Conf. Computer Vision and Pattern Recognition (1990), </booktitle> <pages> 360-364. </pages>
Reference-contexts: The matching problem is then to search for transformations bringing each point or line segment of the model into such a polygonal region in the image. These problems can be structured as sweeping 11 arrangements, using algorithms from computational geometry <ref> [12, 28] </ref>. A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations.
Reference: [29] <author> Chalasani, P., Motwani, R., Rao, A. </author> <title> Approximating tsp variants for robot grasp and delivery, </title> <note> in preparation, </note> <month> July </month> <year> 1994. </year>
Reference-contexts: Although this problem can be reduced to TSP, recent approximation results were successfully adapted to this and variations where the points to be visited are moving with known velocity <ref> [29] </ref>. Approximation algorithms have rarely been applied to problems in industrial robotics but hold great promise. 4. Geometric Probing: CAD models are assumed by many algorithms but are often unavailable. Geometric probing can be used to generate such models. Probing hardware includes touch probes, light beams, scanline and raster cameras.
Reference: [30] <author> Chappel, </author> <title> I.T. A new approach to automatic tool path generation for numerically controlled milling machines, </title> <booktitle> Proc. 4 th Int. Conf. on Manufacturing Engineering, </booktitle> <address> Brisbane, Australia, </address> <month> May </month> <year> 1988, </year> <pages> 29-32. </pages>
Reference-contexts: A large surface would be mapped into a thin line represented by only a few pixels, and errors that occurred where there were no pixels would be missed.) Another approach is to grow vectors normal to the surface of the part <ref> [30] </ref>. These vectors are "mowed down" by the passage of the cutting tool, and their lengths are checked at the end of the run. Vectors that stick out above the surface indicate excess material and vectors cut below the surface point to gouges.
Reference: [31] <author> Chazelle, B. </author> <title> Computational geometry: a retrospective, In "Computing in Euclidean Geometry" (2nd Edition), </title> <editor> Eds. D.-Z. Du and F. Hwang, </editor> <publisher> World Scientific Press (1995), </publisher> <pages> 22-46. </pages>
Reference-contexts: Any new field needs to build itself a home and a home needs foundations. On that score one may strike a celebratory note. Indeed, computational geometry has met with considerable success in resolving the asymptotic complexity of basic geometric problems (e.g., convex hulls, Voronoi diagrams, triangulations, low-dimensional optimization) <ref> [31] </ref>. Most of the classical problems posed in the first decade of the field have been solved. Many of them entailed building entirely new sub-areas in the field of algorithm design. <p> A new way of thinking must first take hold. Finally, CG needs not only to open up to experimental and software-building work but also to rethink its approach towards theoretical research. Several fundamental theoretical questions remain open in geometric optimization, combinatorial geometry, geometric primitives, geometric searching, etc. <ref> [31] </ref>. But the list of open problems whose centrality is so compelling as to draw a consensus -even within the CG community- is not nearly as long as one might think. We believe that many of the more interesting theoretical questions have not been formulated yet. <p> The data is organized as points in R d . Typically the dimension d is fairly low, e.g., 8: right ascension, declination, five colors, redshift. Astrophysical Database. The information should be stored in a database that can support geometric queries of the kind: * Range Query <ref> [31, 97] </ref>: Given a d-dimensional rectangular box defined by intervals f (a i ; b i ) : 1 i dg, where a i ; b i 2 R i (R i is the range of the attribute i), find all the objects which lie within the specified box.
Reference: [32] <author> Chazelle, B., Dobkin, D.P., Shouraboura, N., Tal, A. </author> <title> Strategies for polyhedral surface decomposition: an experimental study, Computational Geometry: </title> <journal> Theory and Applications, </journal> <note> 1995, to appear. </note>
Reference-contexts: Algorithms should produce a near-optimal number of convex components. As for other research areas, fast, robust code is needed. Convex decomposition has many applications and is currently a bottleneck. See [33] for a survey of current methods and <ref> [32] </ref> for a practical approach to the problem. 2. Grasping and Fixturing: The goal here is to place contacts fingers or fixture elements so as to constrain object motion. This is one of the central problems in 23 robotics.
Reference: [33] <author> Chazelle, B., Palios, L. </author> <title> Decomposition algorithms in geometry, Algebraic Geometry and its Applications, </title> <editor> C. Bajaj, Ed., Chap.27, </editor> <publisher> Springer-Verlag (1994), </publisher> <pages> 419-447. </pages>
Reference-contexts: Algorithms should produce a near-optimal number of convex components. As for other research areas, fast, robust code is needed. Convex decomposition has many applications and is currently a bottleneck. See <ref> [33] </ref> for a survey of current methods and [32] for a practical approach to the problem. 2. Grasping and Fixturing: The goal here is to place contacts fingers or fixture elements so as to constrain object motion. This is one of the central problems in 23 robotics.
Reference: [34] <author> Chiang, Y.J. </author> <title> Experiments on the practical I/O efficiency of geometric algorithms: distribution sweep vs. plane sweep, </title> <booktitle> Workshop on Data Structures and Algorithms, </booktitle> <year> 1995. </year>
Reference-contexts: External memory models have been proposed which let researchers design I/O efficient algorithms. Recently several I/O efficient algorithms for specifically geometric problems have been proposed which make use of novel techniques [4, 24]. Chiang <ref> [34] </ref> gives experimental evidence of the importance of redesigning geometric algorithms to minimize page faults and to optimize the number of I/O accesses. Computational Topology. An important feature of a galaxy is its topology.
Reference: [35] <author> Choi, J., Sellen, J., Yap, C. </author> <title> Precision-sensitive Euclidean shortest path in 3-space, </title> <booktitle> Proc. 11th Ann. ACM Symp. </booktitle> <institution> Comput. Geom. </institution> <year> (1995), </year> <pages> 350-359. </pages>
Reference-contexts: Since K can be exponential in the input size, exploiting this new parameter can be quite significant. Notice that precision-sensitivity is the bit-complexity analogue of the very fruitful idea of "output-sensitivity" invented by CG. The paper <ref> [35] </ref> first applied this concept to the NP-hard problem of Euclidean shortest paths. A second floating-point approach is error analysis. This approach is modeled on the error analysis of numerical methods, particularly linear algebra.
Reference: [36] <author> Clarkson, K.L. </author> <title> Randomized geometric algorithms, In "Computing in Euclidean Geometry", </title> <editor> Eds. D.-Z. Du and F. Hwang, </editor> <publisher> World Scientific Press (1992), </publisher> <pages> 117-162. </pages>
Reference-contexts: In addition, a fully dynamic algorithm for constructing Delaunay triangulations was developed, which runs in real-time on the new machine. Many of the underlying ideas were borrowed from the recent work on randomized algorithms in computational geometry <ref> [36, 108] </ref>.
Reference: [37] <author> Cohen, M.F., Wallace, J.R. </author> <title> Radiosity and Realistic Image Synthesis, </title> <publisher> Academic Press Professional, </publisher> <address> San Diego, CA (1993). </address>
Reference-contexts: Computer graphics therefore combines the notion of combinatorial structures with some notion of each element's weight or importance [44]. Rendering is one of the most computationally intensive tasks in computer graphics. For example, some state-of-the-art rendering techniques use radiosity methods to compute global illumination distributions in the scene <ref> [37] </ref>. Such methods recursively divide the surfaces in the environment into smaller patches, then reduce the rendering equation to a linear system based on the pairwise interaction between these patches. At the inner loop of these methods is the computation of form factors.
Reference: [38] <author> Connolly, </author> <title> M.L. Analytical molecular surface calculation, </title> <journal> J. Appl. Cryst. </journal> <volume> 16 (1983), </volume> <pages> 548-558. </pages>
Reference-contexts: There are still open questions as to what extent this simplification is sufficiently accurate and how physical questions can be approached through studying large conglomerates of spheres. Based on various extensions of the spherical model [91, 126], the biology community has developed its own geometric software <ref> [38] </ref>. The geometry is enhanced by graphics and numerical software visualizing and utilizing the geometric information.
Reference: [39] <author> Cook, L.T., Cook, P.N., Lee, K.R., Batnitzky, S., Wong, B.Y.S., Fritz, S.L. Ophir, J., Dwyer III, S.J., Bigongiari, </author> <title> L.R., Tempelton, A.W. An algorithm for volume estimation based on polyhedral approximation, </title> <journal> IEEE Trans. Biomedical Engineering 27 (1980), </journal> <pages> 493-500. </pages>
Reference-contexts: Finally, it is worth reiterating that medical applications motivate a wealth of interesting geometric reconstruction and analysis problems. For example, sometimes an organ needs to be reconstructed so that its volume can be estimated <ref> [39] </ref>. Rapid prototyping of medical models is an area of growth with an abundance of challenging computational-geometric problems [85]. Advances on these problems might have a significant impact in fields such as computer-aided surgery. 10 5 Computer Vision Most problems in computer vision are inherently computational-geometric.
Reference: [40] <author> Crippen, G.M., Havel, T.F. </author> <title> Distance Geometry and Molecular Conformation, </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: X-ray crystallography is currently the primary source of structural information, followed next by magnetic 39 resonance imaging (MRI). To derive molecular structure from MRI data, one must resolve atomic positions given a set of approximate pairwise distances. The traditional tools for this problem come from distance geometry <ref> [40] </ref>. Lacking X-ray and MRI data, one can only resort to structural analysis of unknown proteins by looking for patterns in the amino acid residue sequence that match those of known proteins.
Reference: [41] <author> Daniels, K., Milenkovic, V.J. </author> <title> Multiple translational containment. Part I: An approximation algorithm, </title> <journal> Algorithmica, </journal> <note> special issue on CG in manufacturing, to appear. </note>
Reference-contexts: Motivated by applications in the apparel industry, CG'ers have been investigating these layout problems, with some recent successes <ref> [103, 41, 101, 105] </ref>. In an application at Boeing, where very expensive sheet metal stock can be wasted in inefficient layouts, a software package ("2NA: 2-Stage Nesting Algorithm") is in current use on the factory floor, built on principles of optimization and basic computational geometry primitives.
Reference: [42] <author> Delfinado, C. J. A. and Edelsbrunner, H. </author> <title> An incremental algorithm for betti numbers of simplicial complexes, </title> <booktitle> Proc. 9th Ann. Symp. </booktitle> <institution> Comput. Geom., </institution> <year> 1993, </year> <pages> 232-239. </pages>
Reference-contexts: Graph algorithms seek to exploit the inner combinatorial structure of graphs to avoid generic algebraic treatments. Similarly, computational geometry can be used to bypass linear algebra in the computation of homologies. An example is the algorithm for simplicial complexes embedded in R 3 described in <ref> [42] </ref>. In particular, the use of Mayer-Vietoris sequences should be useful in designing efficient divide-and-conquer schemes for computing the homology of higher-dimensional complexes by computational geometric means. N-Body Problem. One of the most central computational problems in physics is the simulation of a particle system with gravitational or Coulombic forces.
Reference: [43] <author> Drysdale, R.L., Jerard, R.B., Schaudt, B., Hauck, K. </author> <title> Discrete simulation of NC machining, </title> <booktitle> Algorithmica 4 (1989), </booktitle> <pages> 33-60. 51 </pages>
Reference-contexts: One might use pixels to select these vectors (one vector for each pixel) [113]. Or one might use properties of the tool size and the surface curvature to pick fewer vectors while still guaranteeing that they will find all errors greater than a user-set tolerance <ref> [43] </ref>. A recent modification of the extended Z-buffer, called ray representations (ray-reps), has been proposed [99].
Reference: [44] <author> Dobkin, D., and Teller, S. </author> <title> Computer Graphics, To appear in "CRC Handbook of Discrete and Computational Geometry" XXX publisher, </title> <address> YYY city (1996). </address>
Reference-contexts: Computer graphics therefore combines the notion of combinatorial structures with some notion of each element's weight or importance <ref> [44] </ref>. Rendering is one of the most computationally intensive tasks in computer graphics. For example, some state-of-the-art rendering techniques use radiosity methods to compute global illumination distributions in the scene [37].
Reference: [45] <author> Edelsbrunner, H. </author> <title> Algorithms in Combinatorial Geometry, </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems.
Reference: [46] <author> Edelsbrunner, H. </author> <title> The union of balls and its dual shape, </title> <journal> Disc. Comput. Geom. </journal> <volume> 13 (1995), </volume> <pages> 415-440. </pages>
Reference-contexts: First, clip the balls to within their Voronoi cells. The resulting cells overlap along their boundaries. The alpha complex represents pairwise, triplewise, and quadruplewise overlap by edges, triangles, and tetrahedra. The complex is homotopy equivalent to the union of balls <ref> [46] </ref>, and there is a fast linear space algorithm that computes the three betti numbers. The number of surfaces, their genuses, and how they are nested is readily derived from this information.
Reference: [47] <author> Edelsbrunner, H., Mucke, </author> <title> E.P. Simulation of simplicity: a technique to cope with degenerate cases in geometric algorithms, </title> <journal> ACM Trans. Graphics, </journal> <volume> 9 (1990), </volume> <pages> 66-104. </pages>
Reference-contexts: The effect of degeneracy is to vastly increase the number of special cases. While a sorting algorithm must deal only with the possibility of two keys being equal, a typical geometric algorithm faces the possibility of dozens or hundreds of different special cases <ref> [47, 49, 71, 148] </ref>. The presence of numerical data, added to the inherent complexity of geometric data types, makes geometric algorithms much harder to implement correctly than combinatorial (say, graph-theoretical) ones.
Reference: [48] <author> Edelsbrunner, H., Mucke, </author> <title> E.P. Three-dimensional alpha shapes, </title> <journal> ACM Trans. Graphics 13 (1994), </journal> <pages> 43-72. </pages>
Reference-contexts: Abstractly, the docking problem is related to the computer vision problem of matching a 3-dimensional geometric model to range data. The widely used schemes for representing the molecular surface and receptor sites in docking algorithms may not be the best choices. Other descriptions, such as alpha-shapes <ref> [48] </ref>, and other matching criteria, such as Hausdorff distance rather than least squares, may be more appropriate. A problem related to docking is the recognition of motifs in proteins, which are substructures of the proteins with similar geometry. Matching motifs may indicate genetic links or active sites with similar properties.
Reference: [49] <author> Emiris, I., Canny, J. </author> <title> A general approach to removing degeneracies, </title> <journal> SIAM J. Comput. </journal> <volume> 24 (1995), </volume> <pages> 650-664. </pages>
Reference-contexts: The effect of degeneracy is to vastly increase the number of special cases. While a sorting algorithm must deal only with the possibility of two keys being equal, a typical geometric algorithm faces the possibility of dozens or hundreds of different special cases <ref> [47, 49, 71, 148] </ref>. The presence of numerical data, added to the inherent complexity of geometric data types, makes geometric algorithms much harder to implement correctly than combinatorial (say, graph-theoretical) ones.
Reference: [50] <institution> ESRI White Paper Series. Environmental Systems Research Institute, Inc. ARC/INFO: GIS Today and Tomorrow, </institution> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: Because of the increase in data and computational effort, this will work best with smaller maps. What is the best way to combine these ideas with tiling ideas to operate on large amounts of data? Polygon Overlay and Update. The spatial data in GIS's from ARC/INFO <ref> [50] </ref> down to the Digital Chart of the World [51] is organized into layers, each of which is a subdivision of the plane with explicitly stored neighbor relations. Custom maps are produced by selecting layers of interest and overlaying them to produce new maps.
Reference: [51] <institution> Federal Geomatics Bulletin, 4(1), 1992. GIS Division, Energy, Mines and Resources. </institution> <address> Ottawa, Canada. </address>
Reference-contexts: What is the best way to combine these ideas with tiling ideas to operate on large amounts of data? Polygon Overlay and Update. The spatial data in GIS's from ARC/INFO [50] down to the Digital Chart of the World <ref> [51] </ref> is organized into layers, each of which is a subdivision of the plane with explicitly stored neighbor relations. Custom maps are produced by selecting layers of interest and overlaying them to produce new maps.
Reference: [52] <author> Fortune, S., Van Wyk, C. </author> <title> Efficient exact arithmetic for computational geometry, </title> <booktitle> Proc. 9th ACM Symp. Comp. Geometry (1993), </booktitle> <pages> 163-172. </pages>
Reference-contexts: Furthermore, there is evidence that software exact arithmetic can be better designed for computational geometry applications, decreasing its effective cost. Exact-arithmetic implementation of geometric algorithms would be much more attractive with the development of software arithmetic packages appropriate for computational geometry <ref> [52, 110] </ref>. There are many issues to be explored: for example, the use of adaptive-precision arithmetic, the granularity of evaluation, algorithms for primitive evaluation, required arithmetic operations. For example, beyond speeding up basic arithmetic operations, more effective optimization techniques could be used at the expression level.
Reference: [53] <author> Fridshal, R., Cheng, K.P., Duncan, D., Zucker, W. </author> <title> Numerical control part program verification system, </title> <booktitle> Proc. Conf. CAD/CAM Technology in Mechanical Engineering, </booktitle> <address> MIT (March 1982), </address> <publisher> MIT Press, </publisher> <pages> 236-254. </pages>
Reference-contexts: Thus, an important practical problem is: "Given a surface of known equation and a file of NC tool movements, does the shape that the tool cuts match the mathematical shape to within a given tolerance?" It has been claimed <ref> [53] </ref> that "current methods of verifying NC part programs result in one of the highest non-recurring cost factors in producing NC machined parts within the aerospace industry." It is also a significant cost within the aircraft and automotive industries, among others.
Reference: [54] <author> Funkhouser, T., Sequin, C., and Teller, S., </author> <title> Management of Large Amounts of Data in Interactive Building Walkthroughs, </title> <booktitle> Proc. 1992 Workshop on Interactive 3D Graphics, </booktitle> <pages> 11-20. </pages>
Reference-contexts: For the sake of concreteness, here are some specific problems. Note that in any real graphics application, a successful algorithm should be output-sensitive and incremental (as, for example, fly-throughs in complex building environments <ref> [2, 54, 55, 137] </ref>). Given a scene of n convex polygons (or balls) in general position: 1. Determine the scene visible from a synthetic eyepoint. If z-buffer hardware is available, it might be advantageous to identify a superset of the surfaces visible from the eyepoint. 2.
Reference: [55] <author> Funkhouser, T., Sequin, C. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments, </title> <booktitle> Computer Graphics 27, Proc. Siggraph (1993), </booktitle> <pages> 247-254. </pages>
Reference-contexts: For the sake of concreteness, here are some specific problems. Note that in any real graphics application, a successful algorithm should be output-sensitive and incremental (as, for example, fly-throughs in complex building environments <ref> [2, 54, 55, 137] </ref>). Given a scene of n convex polygons (or balls) in general position: 1. Determine the scene visible from a synthetic eyepoint. If z-buffer hardware is available, it might be advantageous to identify a superset of the surfaces visible from the eyepoint. 2. <p> the k th polygon, and A k is its screen area, identify a superset of polygons visible from an eyepoint so as to minimize the total frame rendering cost. (This is a fairly good model of the cost to render a polygon using standard computer graphics hardware, eg, an SGI <ref> [55] </ref>.) 3. Given a surface fragment with non-zero area, what (portions of) other surfaces are visible from this fragment? (This is the "area-to-area" visibility problem, which is much harder than the standard "point" visibility problem.) 4. Identify all pairs of intervisible polygons, or a tight superset.
Reference: [56] <author> Gigus, Z., Canny, J.F., Seidel, R. </author> <title> Efficiently computing and representing aspect graphs of polyhedral objects, </title> <journal> IEEE Trans. Pat. Anal. Mach. Intel. </journal> <volume> 13 (1991), </volume> <pages> 542-551. </pages>
Reference-contexts: The set of combinatorially distinct views is referred to as the aspect graph. Combinatorially precise descriptions of the aspect graph and algorithms for computing it were developed using techniques from computational geometry <ref> [56] </ref>. There are a number of other approaches to model-based recognition which employ nontrivial geometric algorithms, and which often draw explicitly on results from computational geometry.
Reference: [57] <author> Gold, C. M. </author> <title> Problems with handling spatial data|the Voronoi approach, </title> <journal> CISM Journal 45 (1991), </journal> <pages> 65-80. </pages>
Reference-contexts: This task is complicated by the fact that the input data may be huge, imprecise, and occasionally erroneous; it is usually seen as an expensive batch computation process. Gold <ref> [57] </ref> has further advocating Voronoi diagrams as way of maintaining topology as a map is constructed. Because of the increase in data and computational effort, this will work best with smaller maps.
Reference: [58] <author> Gold, C. M. </author> <title> An object-based dynamic spatial model, and its application in the development of a user-friendly digitizing system, </title> <booktitle> Proc. 5th Intl. Symp. Spatial Data Handling, IGU Commission on GIS (1992), </booktitle> <pages> 495-504. </pages>
Reference-contexts: Digitizing. Many maps are constructed by a labor-intensive digitization process. One of the exciting applications of computational geometry in GIS is an idea of Chris Gold <ref> [58] </ref>.
Reference: [59] <editor> Goldberg, K., Latombe, J.-C., Halperin, D., Wilson, R. editors. </editor> <booktitle> The Algorithmic Foundations of Robotics: First Workshop. </booktitle> <editor> A. K. Peters, </editor> <address> Boston, MA, </address> <year> 1995. </year>
Reference-contexts: In addition to path planning, robotics suggests a rich variety of geometric problems. A workshop was initiated in 1994 to encourage interaction between researchers from robotics and computational geometry <ref> [59] </ref>; a second workshop is currently being planned. Industrial Robots. To cope with shrinking product life cycles, computational methods are needed to reduce the time required to configure assembly lines.
Reference: [60] <author> Goodchild, M. F. </author> <title> A spatial analytical perspective on geographical information systems, </title> <journal> Int. J. </journal> <volume> GIS 1 (1987), </volume> <pages> 327-334. </pages>
Reference-contexts: See the survey [62]. Computation in floating point is one source of error. GIS data sets are riddled with degeneracies, so robust computation can be important. Spatial Analysis. Thus far, GIS's have offered only rudimentary spatial analysis capabilities <ref> [60] </ref>, such as polygon overlay and area computation. More interesting queries require more interesting data structures: e.g., Okabe et al. [112] list 35 GIS queries that can be answered using different types of Voronoi diagram. Terrain analysis.
Reference: [61] <author> Goodchild, M. F. </author> <title> Geographic information systems and cartography, </title> <booktitle> Cartography 19 (1990), </booktitle> <pages> 1-13. </pages>
Reference-contexts: Second, the "geometric" is only one aspect of a GIS. In a survey for cartographers, Goodchild <ref> [61] </ref> lists four ways in which to view GIS; geometers may want to keep these views in mind when weighing the importance of problems motivated by GIS: 1. Automated Mapping: facilitating the production of standard maps, 2.
Reference: [62] <author> Goodchild, M. F. </author> <title> Issues of quality and uncertainty, </title> <editor> J. C. Muller, editor, </editor> <booktitle> Advances in Cartography, </booktitle> <publisher> Elsevier Applied Science, </publisher> <address> London (1991), </address> <pages> 113-139. </pages>
Reference-contexts: There has been much discussion on the topic. In 1966, Perkal [118], for example, proposed fattening boundaries by convolving them with a disk of radius *; these are usually called buffer zones [146], and queries with buffer zones are an important type of overlay. See the survey <ref> [62] </ref>. Computation in floating point is one source of error. GIS data sets are riddled with degeneracies, so robust computation can be important. Spatial Analysis. Thus far, GIS's have offered only rudimentary spatial analysis capabilities [60], such as polygon overlay and area computation.
Reference: [63] <author> Goodchild, M. F., Kemp, K. K., Poiker, T. K. </author> <title> NCGIA Core Curriculum, National Center for Geographic Information Analysis, </title> <institution> University of California, </institution> <address> Santa Barbara CA 93106-4060, USA, </address> <year> 1989. </year> <note> On WWW at http://www.env.gov.bc.ca/~tclover/giscourse/ToC.html. 52 </note>
Reference-contexts: According to Unit 1 of the NGCGIA Core 13 Curriculum <ref> [63] </ref>, "a GIS can be seen as a system of hardware, software and procedures de-signed to support the capture, management, manipulation, analysis, modeling and display of spatially-referenced data for solving complex planning and management problems." The key phrase is "spatially-referenced data." A database system that combines data sets of different types
Reference: [64] <author> Goodman, J.E., O'Rourke, J. (eds), </author> <title> CRC Handbook of Discrete and Computational Geometry, </title> <publisher> CRC Press, </publisher> <address> Boca Raton, </address> <note> to appear. </note>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems.
Reference: [65] <author> Greengard, </author> <title> L.F. The Rapid Evolution of Potential Fields in Particle Systems, </title> <publisher> The MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: Assuming infinite arithmetic, it is easy to compute the potential in O (n 2 ) time, where n is the number of particles. A method, called the fast multipole method, based on multipole expansion was developed in <ref> [65] </ref> and refined by introducing computational-geometric ideas in distance geometry [25]. To apply the fast multipole method, one must first construct a tree decomposition of the set of particles, along with a set of pairs of nodes in the tree.
Reference: [66] <author> Guibas, L.J., Marimont, D. H. </author> <title> Rounding arrangements dynamically, </title> <booktitle> Proc. 11th Ann. Symp. </booktitle> <institution> Comput. Geom., </institution> <year> 1995 </year> <month> (190-199). </month>
Reference-contexts: However, many applications are insensitive to changes in the combinatorial structure. If the structure is permitted to change, there are methods to round polygons or other planar objects made up of line segments to the integer grid <ref> [70, 66] </ref> or any nonuniform grid [102, 104]. In general, rounding algorithms, particularly for curved or higher dimensional structures, are as yet inadequately developed. There are important applications, such as operations on algebraic curves and surfaces, where bit-length estimates appear to rule out the use of exact arithmetic.
Reference: [67] <author> Hamann, B. and Moorhead, </author> <title> R.J. A survey of grid generation methodologies, the National Grid Project, and scientific visualization efforts at the NSF Engineering Research Center for Computational Field Simulation, </title> <note> to appear in: </note> <editor> Nielson, G. M. et al., eds., </editor> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California. </address>
Reference-contexts: See for example, http://www.csn.net/~bthoen/ores/gis/index.html For GIS FAQ, see http://www.census.gov/geo/gis/faq-index.html Finally, for ESRI (ARC/Info), see: http://www.esri.com/. 19 7 Mesh Generation A mesh is a discretization of a geometric domain, e.g., the air around a wing, into small simple shapes called elements <ref> [13, 15, 67, 75, 93, 130] </ref>. A structured mesh is usually a warped grid of boxes, while an unstructured mesh is typically a triangulation. Some advantages of structured meshes that hold generally over most applications, are simplicity, availability of code, and suitability for multigrid and finite difference methods.
Reference: [68] <author> Heckbert, P.S., Garland, M. </author> <title> Fast polygonal approximation of terrains and height fields, </title> <type> Technical Report CMU-CS-95-181, </type> <institution> Carnegie Mellon University, </institution> <year> 1995. </year>
Reference-contexts: The simplification methods he uses, however, are probably not the best possible. (Also, error measure that reflect curvature or symmetric volume difference should be considered.) Simplifications with some sort of hierarchical structure are especially useful. See Heck-bert and Garland's survey <ref> [68] </ref> for many citations to geometry and graphics papers on surface simplification methods. 18 * Drainage: For many natural resource management tasks, the watershed|or region that drains to the same point|is the natural management unit.
Reference: [69] <author> Held, M. </author> <title> On the computational geometry of pocket machining, </title> <booktitle> Vol. 500 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <month> June </month> <year> 1991. </year>
Reference-contexts: The special case of pocket machining has received recent attention and has had some success both in the algorithmic understanding of the problem, and in the automatic generation of NC programs. Held's thesis <ref> [69] </ref> brought to the forefront some of the issues of interest to computational geometers. Offshoots from Held's thesis, including software for offsetting polygonal boundaries, have made it into commercial products, such as LARK (available from MTA SZTAKI, a subdivision of the Hungarian Academy of Sciences, and the spin-off company, CADMUS).
Reference: [70] <author> Hobby, J. </author> <title> Practical segment intersection with finite precision arithmetic, </title> <type> Manuscript, </type> <institution> AT&T Bell Labs, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: However, many applications are insensitive to changes in the combinatorial structure. If the structure is permitted to change, there are methods to round polygons or other planar objects made up of line segments to the integer grid <ref> [70, 66] </ref> or any nonuniform grid [102, 104]. In general, rounding algorithms, particularly for curved or higher dimensional structures, are as yet inadequately developed. There are important applications, such as operations on algebraic curves and surfaces, where bit-length estimates appear to rule out the use of exact arithmetic.
Reference: [71] <author> Hoffmann, </author> <title> C.M. The problems of accuracy and robustness in geometric computation, </title> <booktitle> IEEE Computer 22 (1989), </booktitle> <pages> 31-42. </pages>
Reference-contexts: Hence, the correctness proof of the mathematical algorithm does not extend to the program, 34 and the program can fail on seemingly appropriate input data. This is the well-known problem of "nonrobustness" in geometric computing <ref> [71] </ref>. The failure rate of a floating-point implementation can be reduced with various ad-hoc methods, such as tolerancing (taking a nearly-zero expression value as exactly zero has the effect of treating a nearly-degenerate configuration as exactly degenerate) or input perturbation. <p> The effect of degeneracy is to vastly increase the number of special cases. While a sorting algorithm must deal only with the possibility of two keys being equal, a typical geometric algorithm faces the possibility of dozens or hundreds of different special cases <ref> [47, 49, 71, 148] </ref>. The presence of numerical data, added to the inherent complexity of geometric data types, makes geometric algorithms much harder to implement correctly than combinatorial (say, graph-theoretical) ones.
Reference: [72] <author> Hoffmann, </author> <title> C.M. Geometric and Solid Modeling, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: A number of recent resources have emphasized the prominence of geometry in manufacturing <ref> [72, 82, 140, 141, 145, 151] </ref>. A forthcoming special issue of Algorithmica (J. Mitchell, guest editor) focuses on applications of computational geometry to manufacturing. Solid Modeling. A first issue to tackle is solid modeling, by which is meant the computer representation and manipulation of 3D shapes.
Reference: [73] <author> Hoffmann, </author> <title> C.M. Geometric approaches to mesh generation, in "Modeling, Mesh Generation, and Adaptive Numerical Methods for Partial Differential Equations", </title> <editor> eds. I. Babuska, J. Flaherty, W. Henshaw, J. Hopcroft, J. Oliger, T. Tezduyar, </editor> <address> Springer Verlag, </address> <note> IMA Volumes in Mathematics and its Applications 75 (1995). </note>
Reference: [74] <author> Hoffmann, </author> <title> C.M., Vermeer, P.J. Geometric constraint solving in R 2 and R 3 , Computing in Eu-clidean Geometry, </title> <editor> eds. D. Z. Du and F. Hwang, </editor> <publisher> World Scientific Publishing, </publisher> <editor> 2nd ed., </editor> <year> 1994. </year>
Reference: [75] <author> Ho-Le, K. </author> <title> Finite element mesh generation methods: a review and classification, </title> <booktitle> Computer-Aided Design 20 (1988) 27-38. </booktitle>
Reference-contexts: See for example, http://www.csn.net/~bthoen/ores/gis/index.html For GIS FAQ, see http://www.census.gov/geo/gis/faq-index.html Finally, for ESRI (ARC/Info), see: http://www.esri.com/. 19 7 Mesh Generation A mesh is a discretization of a geometric domain, e.g., the air around a wing, into small simple shapes called elements <ref> [13, 15, 67, 75, 93, 130] </ref>. A structured mesh is usually a warped grid of boxes, while an unstructured mesh is typically a triangulation. Some advantages of structured meshes that hold generally over most applications, are simplicity, availability of code, and suitability for multigrid and finite difference methods.
Reference: [76] <author> Hunt, </author> <title> W.A., Voelcker, H.B. An exploratory study of Automatic verification of programs for numerically controlled machine tools, Production Automation Project Tech Memo No. </title> <type> 34, </type> <institution> University of Rochester, </institution> <month> Jan. </month> <year> 1982. </year>
Reference-contexts: Some of these methods use "complete" representations of the current state of the partially cut workpiece. Researchers investigated the feasibility of using CSG systems or solid modelers for the simulation of NC programs <ref> [76] </ref>. Others developed systems based on octree [111] or boundary representation [135] of the workpiece. For each method, every tool movement would update the workpiece, and at the end the workpiece was compared to the desired piece. Unfortunately, all of these approaches were slow.
Reference: [77] <author> Hutchinson, S. </author> <title> Exploiting visual constraints in robot motion planning, </title> <booktitle> IEEE Conference on Robotics and Automation (1991), </booktitle> <pages> 1722-1727. </pages>
Reference-contexts: Geometric models of uncertainty have been used, based on the existence of landmarks, which are uniquely recognizable features in the environment. In [90], a nearsighted robot with a bad compass wandered between "islands" of certainty near landmarks. In <ref> [77] </ref>, a robot with better vision moved along corridors in space formed by aligning landmarks. The argument is made below that the chief goals of autonomous robotics require a further understanding of geometric complexity.
Reference: [78] <author> Huttenlocher, D.P., Kedem, K., Sharir, M., </author> <title> The upper envelope of Voronoi surfaces and its applications, </title> <journal> Disc. Comp. Geom. </journal> <volume> 9 (1993), </volume> <pages> 267-291. </pages>
Reference-contexts: A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations. Cost functions based on the Hausdorff distance have been investigated in both the computational geometry <ref> [1, 3, 78] </ref> and computer vision [79, 128] literatures. The applied methods developed in the vision community are provably good approximation schemes for solving the combinatorial problems that were originally investigated in the computational geometry community. Image Representation.
Reference: [79] <author> Huttenlocher, </author> <title> D.P., Klanderman, G.A., Rucklidge, W.J. Comparing images using the Hausdorff distance, </title> <journal> IEEE Trans. Pat. Anal. Mach. Intel. </journal> <volume> 15 (1993), </volume> <pages> 850-863. </pages>
Reference-contexts: A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations. Cost functions based on the Hausdorff distance have been investigated in both the computational geometry [1, 3, 78] and computer vision <ref> [79, 128] </ref> literatures. The applied methods developed in the vision community are provably good approximation schemes for solving the combinatorial problems that were originally investigated in the computational geometry community. Image Representation. Quantized images are commonly represented as sets of pixels encoding color/brightness information in matrix form.
Reference: [80] <author> Huttenlocher, D.P., Ullman, S. </author> <title> Recognizing solid objects by alignment with an image, </title> <journal> Int. J. Computer Vision, </journal> <volume> 5 (1990), </volume> <pages> 195-212. </pages>
Reference-contexts: In practice this algorithm has better running time than the hypothesize-and-test approach, which consists of considering each pair of model and image bases explicitly, as is done in the alignment method <ref> [80] </ref>. However, the sensitivity of the affine hashing approach to sensor errors is difficult to characterize. Several researchers have developed recognition methods that explicitly account for sensor errors. These methods make considerable use of results on arrangements from computational geometry.
Reference: [81] <author> Iles, K. </author> <title> Data considerations Some principles for accuracy and reliability of data in a GIS system, </title> <booktitle> GIS'89 Symposium (1989), </booktitle> <address> Vancouver, Canada, 103. </address> <month> 53 </month>
Reference-contexts: GIS use in government and marketing applications continues to expand. Of course, a rudimentary GIS leads to the complaint <ref> [81] </ref>: "A GIS is basically a tool that mines data and displays it. It doesn't clean it up, or maintain it, and seldom even looks to see if it's reasonable." Computational geometers see their potential contribution here: in providing the algorithms and data structures to support analysis of geometric data.
Reference: [82] <institution> Information Technology for Manufacturing: A Research Agenda, National Academy Press, </institution> <year> 1995. </year>
Reference-contexts: A number of recent resources have emphasized the prominence of geometry in manufacturing <ref> [72, 82, 140, 141, 145, 151] </ref>. A forthcoming special issue of Algorithmica (J. Mitchell, guest editor) focuses on applications of computational geometry to manufacturing. Solid Modeling. A first issue to tackle is solid modeling, by which is meant the computer representation and manipulation of 3D shapes.
Reference: [83] <author> Kent, S.M., Stoughton, C., Newberg, H., Loveday, J. Petravick, D., Gurbani, V., Berman, E., Sergey, G. </author> <title> Sloan digital sky survey, </title> <booktitle> Proc. 3rd Ann. Conf. Astronomical Data Analysis Software and systems, </booktitle> <address> Victoria, British Colombia, </address> <year> 1993. </year>
Reference-contexts: New software will have to compete with the available packages, which are already widely used, and it will need to follow data and calling standards so components can be plugged together to solve large problems. 12 Astrophysics Large ongoing projects, such as the Sloan Digital Sky Survey (SDSS) <ref> [83, 22, 123] </ref>, aim at creating a comprehensive digital map of the northern sky. The project SDSS will result in a complex archive of about 20 terabytes containing exquisitely calibrated digital images of the accessible half of the northern sky, in 5 wavelength bands, from the ultraviolet to the infrared.
Reference: [84] <author> Kirkpatrick, D., Mishra, B., Yap, C.K. </author> <title> Quantitative Steinitz's theorems with applications to multifingered grasping, </title> <journal> Disc. Comput. Geom. </journal> <month> 7 </month> <year> (1992). </year>
Reference-contexts: This is one of the central problems in 23 robotics. A number of basic questions have been answered, such as the minimum number of contacts sufficient 2 to hold any nonrotational part in form closure (4 in 2D, 7 for polyhedra) <ref> [96, 84] </ref> but efficient algorithms are still needed. In modular fixturing, where fixture elements are constrained to a regular lattice, recent results suggest a number of open questions about the existence of solutions for classes of fixtures and parts [154, 142, 115].
Reference: [85] <editor> Klein, H.M, Schneider, W., Alzen, G., Voy, E.D., Gunter, R.W. Pediatric craniofacial surgery: </editor> <title> Comparison of milling and stereolithography for 3D model manufacturing, </title> <booktitle> Pediatric Radiology 22 (1992), </booktitle> <pages> 458-460. </pages>
Reference-contexts: For example, sometimes an organ needs to be reconstructed so that its volume can be estimated [39]. Rapid prototyping of medical models is an area of growth with an abundance of challenging computational-geometric problems <ref> [85] </ref>. Advances on these problems might have a significant impact in fields such as computer-aided surgery. 10 5 Computer Vision Most problems in computer vision are inherently computational-geometric. Why they have not been tackled by computational geometers is a mystery.
Reference: [86] <author> Kumler, M. P. </author> <title> Intensive comparison of triangulated irregular networks (TINS) and digital elevation models (DEMS), </title> <note> Cartographica 31 (1994), monograph 45. </note>
Reference-contexts: Delaunay triangulations are often suggested (and used) as good TINs. Other (data-dependent) triangulations may sometimes be more appropriate. * Simplification: Kumler's monograph <ref> [86] </ref> compares elevation accuracy of TINs to DEMs and finds that, byte for byte, Digital Elevation Models are better.
Reference: [87] <author> Lamdan, Y., Wolfson, H.J. </author> <title> Geometric hashing: A general and efficient model-based recognition scheme, </title> <booktitle> International Conference on Computer Vision (1988), </booktitle> <pages> 238-249. </pages>
Reference-contexts: Combinatorially precise descriptions of the aspect graph and algorithms for computing it were developed using techniques from computational geometry [56]. There are a number of other approaches to model-based recognition which employ nontrivial geometric algorithms, and which often draw explicitly on results from computational geometry. The affine hashing method <ref> [87] </ref> uses a redundant representation of a set of points in order to locate that point set under an affine transformation, in the presence of extraneous data points.
Reference: [88] <author> Latombe, J.-C. </author> <title> Robot Motion Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference-contexts: Concepts such as generalized Voronoi diagrams or skeletons, critical orientations, line and plane sweep, and random sampling have been used in heuristic planners that are fast and robust. Latombe's text <ref> [88] </ref> provides a comprehensive overview. A basic representational problem for robotics and CG more generally is that the world contains many curved objects. Curved 3D configuration spaces arise even when objects are polygonal and motion is restricted to the plane.
Reference: [89] <author> Laurini, R., Thompson, D. </author> <title> Fundamentals of spatial information systems. </title> <publisher> Academic Press, </publisher> <address> Lon-don, </address> <year> 1992. </year>
Reference-contexts: This line of research relates directly to what has long been an active line of research in computational geometry, point clustering: Partition a set of points in R d into k clusters so that some inter-cluster criterion is minimized. 6 Geographical Information Systems Geographic Information Systems (GIS) <ref> [89] </ref> are increasingly being cited as a motivating application for computational geometry research.
Reference: [90] <author> Lazanas, A., Latombe, J.-C. </author> <title> Landmark-based robot navigation, </title> <booktitle> American Association for Artificial Intelligence Conference (1992), </booktitle> <pages> 816-822. </pages>
Reference-contexts: These methods used performance measures derived from path length and were early examples of competitive ratios in path planning, [116]. Geometric models of uncertainty have been used, based on the existence of landmarks, which are uniquely recognizable features in the environment. In <ref> [90] </ref>, a nearsighted robot with a bad compass wandered between "islands" of certainty near landmarks. In [77], a robot with better vision moved along corridors in space formed by aligning landmarks. The argument is made below that the chief goals of autonomous robotics require a further understanding of geometric complexity.
Reference: [91] <author> Lee, B., Richards, </author> <title> F.M. The interpretation of protein structures: estimation of static accessibility, </title> <journal> J. Mol. Biol. </journal> <volume> 55 (1971), </volume> <pages> 379-400. </pages>
Reference-contexts: The sphere model for atoms is the fundamental idea connecting particle physics with geometry. There are still open questions as to what extent this simplification is sufficiently accurate and how physical questions can be approached through studying large conglomerates of spheres. Based on various extensions of the spherical model <ref> [91, 126] </ref>, the biology community has developed its own geometric software [38]. The geometry is enhanced by graphics and numerical software visualizing and utilizing the geometric information.
Reference: [92] <author> Li, S.X., Jerard, R.B. </author> <title> 5-Axis Machining of Sculptured Surfaces with a Flat-End Cutter, CAD, </title> <booktitle> 26 (1994), </booktitle> <pages> 165-178. </pages>
Reference-contexts: For 5-axis cutter movement, an efficient method has been given for computing the intersection within a given error bound by using 3-axis tool movement as an approximation and relying on tree-based localization technique to quickly decide which of the 3-axis movements is the one intersected first [122]. See also <ref> [92] </ref>. What remains open is to find a method for generating a polygonal approximation for the 5-axis envelope with a provable error bound that generates a reasonable number of triangles.
Reference: [93] <author> Lohner, R. </author> <title> Finite elements in CFD: what lies ahead, </title> <journal> Int. J. Numer. Meth. Eng. </journal> <volume> 24 (1987), </volume> <pages> 1741-1756. </pages>
Reference-contexts: See for example, http://www.csn.net/~bthoen/ores/gis/index.html For GIS FAQ, see http://www.census.gov/geo/gis/faq-index.html Finally, for ESRI (ARC/Info), see: http://www.esri.com/. 19 7 Mesh Generation A mesh is a discretization of a geometric domain, e.g., the air around a wing, into small simple shapes called elements <ref> [13, 15, 67, 75, 93, 130] </ref>. A structured mesh is usually a warped grid of boxes, while an unstructured mesh is typically a triangulation. Some advantages of structured meshes that hold generally over most applications, are simplicity, availability of code, and suitability for multigrid and finite difference methods.
Reference: [94] <author> Lorensen, </author> <title> W.E., Cline, H.E. Marching cubes: A high resolution 3D surface construction algorithm, </title> <booktitle> Computer Graphics 21 (1987), </booktitle> <pages> 163-169. </pages>
Reference-contexts: This approach is volume- or voxel-based; the interpolation is usually done in the vicinity of each voxel, or based on a pillar of voxels of all slices with the same (x; y) coordinates <ref> [94] </ref>. The second approach is more boundary oriented; it attempts to construct a polyhedral model of the object that interpolates the boundaries of the cross-sections. It considers slice entities (contours) and, by considering each pair of successive slices in turn, it then concatenates all the layer interpolations.
Reference: [95] <author> Lumelsky, V. </author> <title> Algorithmic and complexity issues of robot motion in an uncertain environment, </title> <journal> Journal of Complexity 3 (1987), </journal> <pages> 146-182. </pages>
Reference-contexts: While some researchers have nevertheless tackled the model-building problem for mobile robots (which leaves the robot with a classical motion planning problem on the map), others have sought simpler routes to navigation. These algorithms are typically online algorithms with limited state. In <ref> [95] </ref>, robots navigating in the plane used local decision rules to provably reach the goal. These methods used performance measures derived from path length and were early examples of competitive ratios in path planning, [116].
Reference: [96] <author> Markenscoff, X., Ni, L., Papadimitriou, C.H. </author> <note> The geometry of grasping, IJRR 9 (1990). </note>
Reference-contexts: This is one of the central problems in 23 robotics. A number of basic questions have been answered, such as the minimum number of contacts sufficient 2 to hold any nonrotational part in form closure (4 in 2D, 7 for polyhedra) <ref> [96, 84] </ref> but efficient algorithms are still needed. In modular fixturing, where fixture elements are constrained to a regular lattice, recent results suggest a number of open questions about the existence of solutions for classes of fixtures and parts [154, 142, 115].
Reference: [97] <author> Matousek, J. </author> <title> Geometric range searching, </title> <journal> ACM Comput. Surveys 26 (1995), </journal> <pages> 421-461. </pages>
Reference-contexts: The data is organized as points in R d . Typically the dimension d is fairly low, e.g., 8: right ascension, declination, five colors, redshift. Astrophysical Database. The information should be stored in a database that can support geometric queries of the kind: * Range Query <ref> [31, 97] </ref>: Given a d-dimensional rectangular box defined by intervals f (a i ; b i ) : 1 i dg, where a i ; b i 2 R i (R i is the range of the attribute i), find all the objects which lie within the specified box.
Reference: [98] <author> Mehlhorn, K. </author> <title> Data Structures and Algorithms 3: Multidimensional Searching and Computational Geometry, </title> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, Germany, </address> <year> 1984. </year>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems.
Reference: [99] <author> Menon, J.P., Robinson, </author> <title> D.M. Advanced verification via massively parallel raycasting, </title> <booktitle> Manufacturing Review 6 (1993), </booktitle> <pages> 141-154. </pages>
Reference-contexts: Or one might use properties of the tool size and the surface curvature to pick fewer vectors while still guaranteeing that they will find all errors greater than a user-set tolerance [43]. A recent modification of the extended Z-buffer, called ray representations (ray-reps), has been proposed <ref> [99] </ref>.
Reference: [100] <author> Menon, J.P., Voelcker, H.B., </author> <title> Towards a comprehensive formulation of NC verification as a mathematical and computational problem, </title> <editor> J. </editor> <booktitle> Design and Manufacturing 3 (1993), </booktitle> <pages> 263-277. </pages>
Reference-contexts: In the 70's, work began on programs that actually detected errors in NC programs or verified that none existed. A good overview of this problem, including a precise mathematical formulation, history, and summary of its current state is found in <ref> [100] </ref>. Some of these methods use "complete" representations of the current state of the partially cut workpiece. Researchers investigated the feasibility of using CSG systems or solid modelers for the simulation of NC programs [76]. Others developed systems based on octree [111] or boundary representation [135] of the workpiece.
Reference: [101] <author> Milenkovic, V.J. </author> <title> Multiple translational containment. Part II: Exact algorithms, </title> <journal> Algorithmica, </journal> <note> special issue on CG in manufacturing, to appear. 54 </note>
Reference-contexts: Motivated by applications in the apparel industry, CG'ers have been investigating these layout problems, with some recent successes <ref> [103, 41, 101, 105] </ref>. In an application at Boeing, where very expensive sheet metal stock can be wasted in inefficient layouts, a software package ("2NA: 2-Stage Nesting Algorithm") is in current use on the factory floor, built on principles of optimization and basic computational geometry primitives.
Reference: [102] <author> Milenkovic, V.J. </author> <title> Robust polygon modeling, </title> <booktitle> Special issue of Computer-Aided Design on Uncer--tainties in Geometric Computations, 25 (1993), </booktitle> <pages> 546-566. </pages>
Reference-contexts: However, many applications are insensitive to changes in the combinatorial structure. If the structure is permitted to change, there are methods to round polygons or other planar objects made up of line segments to the integer grid [70, 66] or any nonuniform grid <ref> [102, 104] </ref>. In general, rounding algorithms, particularly for curved or higher dimensional structures, are as yet inadequately developed. There are important applications, such as operations on algebraic curves and surfaces, where bit-length estimates appear to rule out the use of exact arithmetic.
Reference: [103] <author> Milenkovic, V.J., Li, Z. </author> <title> A compaction algorithm for nonconvex polygons and its application, </title> <journal> European J. Operations Research, </journal> <volume> 84 (1995), </volume> <pages> 539-560, </pages>
Reference-contexts: Motivated by applications in the apparel industry, CG'ers have been investigating these layout problems, with some recent successes <ref> [103, 41, 101, 105] </ref>. In an application at Boeing, where very expensive sheet metal stock can be wasted in inefficient layouts, a software package ("2NA: 2-Stage Nesting Algorithm") is in current use on the factory floor, built on principles of optimization and basic computational geometry primitives.
Reference: [104] <author> Milenkovic, V.J. </author> <title> Practical methods for set operations on polygons using exact arithmetic, </title> <booktitle> Proc. 7th Canad. Conf. </booktitle> <institution> Comput. Geom., </institution> <year> 1995 </year> <month> (55-60). </month>
Reference-contexts: However, many applications are insensitive to changes in the combinatorial structure. If the structure is permitted to change, there are methods to round polygons or other planar objects made up of line segments to the integer grid [70, 66] or any nonuniform grid <ref> [102, 104] </ref>. In general, rounding algorithms, particularly for curved or higher dimensional structures, are as yet inadequately developed. There are important applications, such as operations on algebraic curves and surfaces, where bit-length estimates appear to rule out the use of exact arithmetic.
Reference: [105] <author> Milenkovic, V.J. </author> <title> Translational polygon containment and minimal enclosure using linear programming based restriction, </title> <booktitle> Proc. 28th Ann. ACM Symp. </booktitle> <institution> Theory Comput. </institution> <note> (to appear) 1996. </note>
Reference-contexts: Motivated by applications in the apparel industry, CG'ers have been investigating these layout problems, with some recent successes <ref> [103, 41, 101, 105] </ref>. In an application at Boeing, where very expensive sheet metal stock can be wasted in inefficient layouts, a software package ("2NA: 2-Stage Nesting Algorithm") is in current use on the factory floor, built on principles of optimization and basic computational geometry primitives.
Reference: [106] <author> Moore, B., Frenk, C.S., Weinberg, D.H., Saunders, W., Lawrence, A., Ellis, R.S., Kaiser, N., Efstathiou, G., Rowan-Robinson, M. </author> <title> The topology of the QDOT IRAS redshift survey, </title> <journal> Monthly Notices Royal Astronomical Society, </journal> <volume> 256 (1992), </volume> <pages> 477-499. </pages>
Reference-contexts: The integral is computed by sampling the surface by a fine enough grid. These techniques work fairly well and have been used to determine the topology of many galaxies from satellite observations <ref> [106] </ref>. Alternatively, the points can be connected to form a simplicial complex. Instead of a weighting function we choose a spherical ball around each point and consider the boundary of the union of balls.
Reference: [107] <author> Muller, H., Klingert, A. </author> <title> Surface interpolation from cross sections, in: Focus on Scientific Visualization (H. </title> <editor> Hagen, H. Muller, and G.M. Nielson, eds.), </editor> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1993, </year> <pages> 139-189. </pages>
Reference-contexts: specifications of the graphics device as well as to the distance of the observer from the terrain. 4 Shape Reconstruction In many application domains, it is necessary to reconstruct 3D models of objects from 2D cross-sections: medical imaging, microscopy, geology, and aerospace manufacturing are all heavy users of shape reconstruction <ref> [107, 131] </ref>. Two main approaches have been developed. The first is inspired by image processing techniques and treats the data as a 3D image obtained by piling up the images of the cross-sections.
Reference: [108] <author> Mulmuley, K. </author> <title> Computational Geometry: An Introduction Through Randomized Algorithms, </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems. <p> In addition, a fully dynamic algorithm for constructing Delaunay triangulations was developed, which runs in real-time on the new machine. Many of the underlying ideas were borrowed from the recent work on randomized algorithms in computational geometry <ref> [36, 108] </ref>.
Reference: [109] <author> Murray, R., Li, Z., Sastry, S. </author> <title> A Mathematical Introduction to Robotics Manipulation. </title> <publisher> CRC Press, </publisher> <year> 1994. </year>
Reference-contexts: There has also been a flurry of interest in algorithms for non-holonomic motion 22 planning, where motion constraints are not integrable. A textbook covering the theory of non-holonomic planning has recently appeared <ref> [109] </ref>. Path planning problems have been widely studied by computational geometers, with some spectacular theoretical successes.
Reference: [110] <author> Naher, S. </author> <title> The LEDA user manual, </title> <note> Version 3.1 (Jan. 16, 1995). Available by anonymous ftp from ftp.mpi-sb.mpg.de in directory /pub/LEDA. </note>
Reference-contexts: Furthermore, there is evidence that software exact arithmetic can be better designed for computational geometry applications, decreasing its effective cost. Exact-arithmetic implementation of geometric algorithms would be much more attractive with the development of software arithmetic packages appropriate for computational geometry <ref> [52, 110] </ref>. There are many issues to be explored: for example, the use of adaptive-precision arithmetic, the granularity of evaluation, algorithms for primitive evaluation, required arithmetic operations. For example, beyond speeding up basic arithmetic operations, more effective optimization techniques could be used at the expression level.
Reference: [111] <author> Navazo, I., Ayala, A.D., Brunet, P. </author> <title> A geometric modeler based on the exact octree representation of polyhedra, </title> <journal> Computer Graphics Forum, </journal> <volume> 5, </volume> <pages> 91-104. </pages>
Reference-contexts: Some of these methods use "complete" representations of the current state of the partially cut workpiece. Researchers investigated the feasibility of using CSG systems or solid modelers for the simulation of NC programs [76]. Others developed systems based on octree <ref> [111] </ref> or boundary representation [135] of the workpiece. For each method, every tool movement would update the workpiece, and at the end the workpiece was compared to the desired piece. Unfortunately, all of these approaches were slow.
Reference: [112] <author> Okabe, A., Boots, B., Sugihara, K. </author> <title> Nearest neighbourhood operations with generalized Voronoi diagrams: A review. </title> <journal> Int. J. </journal> <volume> GIS 8 (1994), </volume> <pages> 43-71. </pages>
Reference-contexts: GIS data sets are riddled with degeneracies, so robust computation can be important. Spatial Analysis. Thus far, GIS's have offered only rudimentary spatial analysis capabilities [60], such as polygon overlay and area computation. More interesting queries require more interesting data structures: e.g., Okabe et al. <ref> [112] </ref> list 35 GIS queries that can be answered using different types of Voronoi diagram. Terrain analysis. Research on representation and computation of terrains has been an active area. * TIN: Triangulated surfaces were suggested in GIS in 1978, and dubbed TINs or Triangulated Irregular Networks [119].
Reference: [113] <author> Oliver, J.H., Goodman, E.D., </author> <title> Color graphic verification of NC milling programs for sculptured surfaces, </title> <booktitle> 10th Ann. Automotive Computer Graphics Conference and Exposition, Engineering Society of Detroit, </booktitle> <month> Dec. </month> <year> 1985. </year>
Reference-contexts: Vectors that stick out above the surface indicate excess material and vectors cut below the surface point to gouges. One might use pixels to select these vectors (one vector for each pixel) <ref> [113] </ref>. Or one might use properties of the tool size and the surface curvature to pick fewer vectors while still guaranteeing that they will find all errors greater than a user-set tolerance [43]. A recent modification of the extended Z-buffer, called ray representations (ray-reps), has been proposed [99].
Reference: [114] <author> O'Rourke, J. </author> <title> Computational Geometry in C, </title> <publisher> Cambridge Univ. Press, </publisher> <year> 1994. </year>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems.
Reference: [115] <author> Overmars, M., Rao, A., Schwarzkopf, O., Wentink, C. </author> <title> Immobilizing polygons against a wall, </title> <booktitle> ACM Symp. Comput. Geom. (1995), </booktitle> <address> Vancouver, BC. </address>
Reference-contexts: In modular fixturing, where fixture elements are constrained to a regular lattice, recent results suggest a number of open questions about the existence of solutions for classes of fixtures and parts <ref> [154, 142, 115] </ref>. When there is uncertainty in part pose or applied forces, minimizing the number of grasp points can be posed as a convex set covering problem. Recently, CG researchers have described efficient and probably practical algorithms for near-optimal grasps.
Reference: [116] <author> Papadimitriou, C.H., Yannakakis, M. </author> <title> Shortest paths without a map, </title> <booktitle> Theoretical Computer Science 84 (1991), </booktitle> <pages> 127-150. </pages>
Reference-contexts: These algorithms are typically online algorithms with limited state. In [95], robots navigating in the plane used local decision rules to provably reach the goal. These methods used performance measures derived from path length and were early examples of competitive ratios in path planning, <ref> [116] </ref>. Geometric models of uncertainty have been used, based on the existence of landmarks, which are uniquely recognizable features in the environment. In [90], a nearsighted robot with a bad compass wandered between "islands" of certainty near landmarks.
Reference: [117] <author> Pellegrini, M. </author> <title> Monte Carlo approximation of form factors with error bounded a priori, </title> <booktitle> Proc. 11th Ann. ACM Symp. </booktitle> <institution> Comput. Geom. </institution> <year> (1995), </year> <pages> 287-296. </pages>
Reference-contexts: Computing visibility in this manner is a well-studied problem in computational geometry, but one for which efficient practical solutions have yet to be found. Fast, practical methods for computing form factors could have a significant impact in rendering. Efficient approximation methods should also be sought <ref> [117] </ref>. Current methods use quadtrees or k-D trees to divide each patch into a hierarchy of patches at different resolutions. Interactions between surfaces occur at different resolutions determined by the ratio of their sizes to the distance separating them, and by some estimate of the energy flowing between them.
Reference: [118] <author> Perkal, J. </author> <title> On the length of empirical curves, </title> <type> Discussion Paper 10, </type> <institution> Michigan Inter-University Community of Mathematical Geographers, University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1966. </year>
Reference-contexts: One of the major challenges in GIS is a computationally efficient theory of spatial error. There has been much discussion on the topic. In 1966, Perkal <ref> [118] </ref>, for example, proposed fattening boundaries by convolving them with a disk of radius *; these are usually called buffer zones [146], and queries with buffer zones are an important type of overlay. See the survey [62]. Computation in floating point is one source of error.
Reference: [119] <author> Peucker, T. K., Fowler, R. J., Little, J. J., Mark, D. M. </author> <title> The triangulated irregular network, </title> <booktitle> Amer. Soc. Photogrammetry Proc. Digital Terrain Models Symposium (1978), </booktitle> <pages> 516-532. </pages>
Reference-contexts: Terrain analysis. Research on representation and computation of terrains has been an active area. * TIN: Triangulated surfaces were suggested in GIS in 1978, and dubbed TINs or Triangulated Irregular Networks <ref> [119] </ref>. Delaunay triangulations are often suggested (and used) as good TINs. Other (data-dependent) triangulations may sometimes be more appropriate. * Simplification: Kumler's monograph [86] compares elevation accuracy of TINs to DEMs and finds that, byte for byte, Digital Elevation Models are better.
Reference: [120] <author> Preparata, </author> <title> F.P, Shamos, M.I. Computational Geometry: an Introduction, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1988. </year> <month> 55 </month>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems.
Reference: [121] <author> Pribble, </author> <title> W.I. Molds for reaction injection, </title> <booktitle> structural foam and expandable styrene molding, in: Plastics mold engineering handbook, </booktitle> <editor> J.H. DuBois and W.I. Pribble (Eds.), </editor> <publisher> Van Nostrand Reinhold Company Inc., </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: At present, many aspects of the manufacturing processes and their ensuing geometric problems are tackled by relying on heuristics in trial-and-error fashion, which necessitates a great deal of human intervention. To quote from an injection molding book <ref> [121] </ref>. "During injection, the mold is tilted into a favorable position that will eliminate surface defects such as bubbles and insure a complete fill.
Reference: [122] <author> Quinn, J., </author> <title> Accurate Verification of Five-Axis Numerically Controlled Machining, </title> <type> Ph.D. Thesis, </type> <institution> Dartmouth College, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: For 5-axis cutter movement, an efficient method has been given for computing the intersection within a given error bound by using 3-axis tool movement as an approximation and relying on tree-based localization technique to quickly decide which of the 3-axis movements is the one intersected first <ref> [122] </ref>. See also [92]. What remains open is to find a method for generating a polygonal approximation for the 5-axis envelope with a provable error bound that generates a reasonable number of triangles.
Reference: [123] <author> Ramaiyer, K., Brunner, R., Szalay, A., Connolly, A., Lupton, R. </author> <title> Prototype astronomical database, </title> <booktitle> Proc. 2nd ACM Workshop on Advances in Geographic Information Systems, </booktitle> <address> Gaithers-burg, Maryland, </address> <year> 1994. </year>
Reference-contexts: New software will have to compete with the available packages, which are already widely used, and it will need to follow data and calling standards so components can be plugged together to solve large problems. 12 Astrophysics Large ongoing projects, such as the Sloan Digital Sky Survey (SDSS) <ref> [83, 22, 123] </ref>, aim at creating a comprehensive digital map of the northern sky. The project SDSS will result in a complex archive of about 20 terabytes containing exquisitely calibrated digital images of the accessible half of the northern sky, in 5 wavelength bands, from the ultraviolet to the infrared.
Reference: [124] <author> Rao, A., Goldberg, K. </author> <title> Manipulating algebraic parts in the plane, </title> <journal> IEEE Transactions on Robotics and Automation 11 (1995). </journal>
Reference-contexts: Current feeders are designed by human trial and error. Complete algorithms are needed to take part geometry as input and generate feeding strategies or feeder hardware specifications as output. A complete algorithm for feeding 2D parts with algebraic boundaries is described in <ref> [124] </ref>. More work is needed to design feeders for 3d parts and to provide accurate mechanical simulation of collisions and statistical behavior of parts arriving in bulk. 6. Assembly Sequence Planning: The problem of disassembling a collection of parts has a strong geometric component.
Reference: [125] <author> Raper, J., ed. </author> <title> Three Dimensional Applications in Geographic Information Systems, </title> <publisher> Taylor & Francis, </publisher> <year> 1989. </year>
Reference-contexts: Adding Dimensions 3 and 4. Adding the spatial and temporal dimensions to the flat maps in a GIS is a subject of current research <ref> [125] </ref>. None of the standard GIS's support functions of three variables. In such systems, geological cross sections or floors of buildings must be treated as flat, horizontal data sets which offer no geological or architectural interconnections. Time creates interesting geometric problems.
Reference: [126] <author> Richards, </author> <title> F.M. Areas, volumes, packing, and protein structures, </title> <journal> Ann. Rev. Biophys. Bioeng. </journal> <volume> 6 (1977), </volume> <pages> 151-176. </pages>
Reference-contexts: The sphere model for atoms is the fundamental idea connecting particle physics with geometry. There are still open questions as to what extent this simplification is sufficiently accurate and how physical questions can be approached through studying large conglomerates of spheres. Based on various extensions of the spherical model <ref> [91, 126] </ref>, the biology community has developed its own geometric software [38]. The geometry is enhanced by graphics and numerical software visualizing and utilizing the geometric information.
Reference: [127] <author> Richards, </author> <title> F.M. The protein folding problem, </title> <booktitle> Scientific American 264 (1991), </booktitle> <pages> 54-63. </pages>
Reference-contexts: Modeling based on such analysis may also be valuable. The most difficult version of the problem is also the one with the largest potential benefit. It is the ab initio determination of structure from the amino acid residue sequence <ref> [127] </ref>. While one can in principle use Newtonian mechanics to simulate the natural folding of the molecule, the sheer scale of the calculation is daunting. A modest-size protein folding simulation with current algorithms would require in the neighborhood of 10 19 floating-point operations.
Reference: [128] <author> Rucklidge, W.J. </author> <title> Locating objects using the Hausdorff distance, </title> <booktitle> Proc. 5th Int. Conf. on Computer Vision (1995), </booktitle> <pages> 457-464. </pages>
Reference-contexts: A different approach to model-based matching problems involves the development of cost functions for measuring the difference between two sets of points and line segments under various transformations. Cost functions based on the Hausdorff distance have been investigated in both the computational geometry [1, 3, 78] and computer vision <ref> [79, 128] </ref> literatures. The applied methods developed in the vision community are provably good approximation schemes for solving the combinatorial problems that were originally investigated in the computational geometry community. Image Representation. Quantized images are commonly represented as sets of pixels encoding color/brightness information in matrix form.
Reference: [129] <editor> Sack, J.-R., Urrutia, J. (eds), </editor> <booktitle> Handbook of Computational Geometry, </booktitle> <publisher> Elsevier Science Publishers, in preparation. </publisher>
Reference-contexts: Where does computational geometry fit into all this? Twenty-odd years ago, the nascent field of computational geometry set sail on a mission to build general tools | analytical and computational | to satisfy the algorithmic needs of geometric computing <ref> [45, 64, 98, 108, 114, 120, 129] </ref>. The intention was to create a body of knowledge to which computer programmers could turn for help when wrestling with geometric problems.
Reference: [130] <author> Sapidis, N. and Perucchio, R. </author> <title> Advanced techniques for automatic finite element meshing from solid models, </title> <booktitle> Computer-Aided Design 21 (1989) 248-253. </booktitle>
Reference-contexts: See for example, http://www.csn.net/~bthoen/ores/gis/index.html For GIS FAQ, see http://www.census.gov/geo/gis/faq-index.html Finally, for ESRI (ARC/Info), see: http://www.esri.com/. 19 7 Mesh Generation A mesh is a discretization of a geometric domain, e.g., the air around a wing, into small simple shapes called elements <ref> [13, 15, 67, 75, 93, 130] </ref>. A structured mesh is usually a warped grid of boxes, while an unstructured mesh is typically a triangulation. Some advantages of structured meshes that hold generally over most applications, are simplicity, availability of code, and suitability for multigrid and finite difference methods.
Reference: [131] <author> Schumaker, </author> <title> L.L. Reconstructing 3D objects from cross-sections, in: Computation of Curves and Surfaces (W. </title> <editor> Dahmen, M. Gasca, and C.A. Micchelli, eds.), </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> 1989, </year> <pages> 275-309. </pages>
Reference-contexts: specifications of the graphics device as well as to the distance of the observer from the terrain. 4 Shape Reconstruction In many application domains, it is necessary to reconstruct 3D models of objects from 2D cross-sections: medical imaging, microscopy, geology, and aerospace manufacturing are all heavy users of shape reconstruction <ref> [107, 131] </ref>. Two main approaches have been developed. The first is inspired by image processing techniques and treats the data as a 3D image obtained by piling up the images of the cross-sections.
Reference: [132] <author> Schwartz, J.T., Sharir, M. </author> <title> On the piano movers' problem: 2. general techniques for computing topological properties of real algebraic manifolds, </title> <booktitle> Advances in Applied Mathematics 4 (1983), </booktitle> <pages> 298-351. </pages>
Reference-contexts: A textbook covering the theory of non-holonomic planning has recently appeared [109]. Path planning problems have been widely studied by computational geometers, with some spectacular theoretical successes. General motion planning problems were first shown to be solvable in polynomial time <ref> [132] </ref>, then with a practical exponent (equal to the number of degrees of freedom) [26], and then with a tightened exponent in many cases with the aid of Davenport-Schinzel sequences [133]. For the case of industrial robots, the degrees of freedom range from four to six.
Reference: [133] <author> Sharir, M. </author> <title> Almost tight upper bounds for lower envelopes in higher dimensions, </title> <journal> Disc. Comput. Geom. </journal> <volume> 12 (1994), </volume> <pages> 327-345. </pages>
Reference-contexts: General motion planning problems were first shown to be solvable in polynomial time [132], then with a practical exponent (equal to the number of degrees of freedom) [26], and then with a tightened exponent in many cases with the aid of Davenport-Schinzel sequences <ref> [133] </ref>. For the case of industrial robots, the degrees of freedom range from four to six. Multi-robot systems and robot hands are much higher. AGVs (autonomous guided vehicles) have 3 degrees of freedom with non-holonomic constraints.
Reference: [134] <author> Skiena, S.S. </author> <title> Problems in geometric probing, </title> <booktitle> Algorithmica 4 (1989), </booktitle> <pages> 599-605. </pages>
Reference-contexts: Geometric probing can be used to generate such models. Probing hardware includes touch probes, light beams, scanline and raster cameras. Depending on the application and sensor, the probing strategy may compute convex hull, line hull or ray hull. See <ref> [134] </ref> for a review. More work is needed on online probing strategies that include models of probe and control uncertainty. The problem of probing to minimize error turns out to be dual to grasping, so the algorithms mentioned there are directly relevant. 5.
Reference: [135] <author> Speen, R.B. </author> <title> A dynamic approach to modeling for numerically controlled verification, </title> <type> Masters Thesis, </type> <institution> Purdue University, </institution> <year> 1985. </year>
Reference-contexts: Some of these methods use "complete" representations of the current state of the partially cut workpiece. Researchers investigated the feasibility of using CSG systems or solid modelers for the simulation of NC programs [76]. Others developed systems based on octree [111] or boundary representation <ref> [135] </ref> of the workpiece. For each method, every tool movement would update the workpiece, and at the end the workpiece was compared to the desired piece. Unfortunately, all of these approaches were slow. Each tool movement subtracts a fairly complex shape from the current workpiece representation and requires significant updating.
Reference: [136] <editor> Stucki, P., Bresenham, J., Earnshaw, R., Guest Editors. </editor> <title> Rapid prototyping technology, </title> <journal> Special issue of IEEE Comp. Graphics and Applications 15 (1995), </journal> <pages> 17-55. </pages>
Reference-contexts: Efficient solutions from computational geometry might provide a handle on the geometric component of the problem. * Stereolithography: Stereolithography, a form of "layered manufacturing", is one of a growing set of processes used in rapid prototyping; for recent surveys of this and related technologies, see <ref> [136, 147] </ref>.
Reference: [137] <author> Teller, S. </author> <title> Visibility Computations in Densely Occluded Polyhedral Environments, </title> <institution> CS Dept., UC Berkeley (1992), </institution> <note> TR UCB/CSD 92/708 or http://cs-tr.cs.berkeley.edu:80/TR/UCB:CSD-92-708. </note>
Reference-contexts: For the sake of concreteness, here are some specific problems. Note that in any real graphics application, a successful algorithm should be output-sensitive and incremental (as, for example, fly-throughs in complex building environments <ref> [2, 54, 55, 137] </ref>). Given a scene of n convex polygons (or balls) in general position: 1. Determine the scene visible from a synthetic eyepoint. If z-buffer hardware is available, it might be advantageous to identify a superset of the surfaces visible from the eyepoint. 2.
Reference: [138] <author> Van Hook, T. </author> <title> Real-time shaded NC milling display, </title> <journal> ACM SIGGRAPH, </journal> <volume> 20, 4, </volume> <year> (1986), </year> <pages> 15-20. </pages> <note> [139] van Oosterom, </note> <author> P. </author> <title> Reactive Data Structures For Geographic Information Systems, </title> <publisher> Oxford University Press, </publisher> <year> 1993. </year> <month> 56 </month>
Reference-contexts: Several researchers used an image-space approach, where an extended Z-buffer is provided for each pixel in a given graphical view of the part, and each tool movement updates the pixel information for each pixel that it passes over <ref> [11, 138, 143] </ref>. CGTech's Vericut simulator 32 uses such an approach. These methods are faster than the complete methods but they are view-dependent. Because of this, errors might not be visible from a certain view direction and would therefore be missed. (Consider a nearly flat surface viewed edge-on.
Reference: [140] <author> Voelcker, H.B., Requicha, A.A.G., Conway, R.W. </author> <booktitle> Computer applications in manufacturing, in "Annual Review of Computer Science", </booktitle> <editor> Ed. J. F. Traub, </editor> <volume> Vol. </volume> <pages> 3. </pages> <address> Palo Alto, CA: </address> <publisher> Annual Reviews Inc. </publisher> <year> (1988), </year> <pages> 349-387. </pages>
Reference-contexts: A number of recent resources have emphasized the prominence of geometry in manufacturing <ref> [72, 82, 140, 141, 145, 151] </ref>. A forthcoming special issue of Algorithmica (J. Mitchell, guest editor) focuses on applications of computational geometry to manufacturing. Solid Modeling. A first issue to tackle is solid modeling, by which is meant the computer representation and manipulation of 3D shapes.
Reference: [141] <author> Voelcker, H.B., Requicha, A.A.G. </author> <title> Research in solid modeling at the University of Rochester: 1972-1987, in "Fundamental Developments of Computer-Aided Geometric Modeling", </title> <editor> Ed. L. Piegl, </editor> <publisher> Academic Press Ltd., </publisher> <address> London, England (1993), </address> <pages> 203-254. </pages>
Reference-contexts: A number of recent resources have emphasized the prominence of geometry in manufacturing <ref> [72, 82, 140, 141, 145, 151] </ref>. A forthcoming special issue of Algorithmica (J. Mitchell, guest editor) focuses on applications of computational geometry to manufacturing. Solid Modeling. A first issue to tackle is solid modeling, by which is meant the computer representation and manipulation of 3D shapes.
Reference: [142] <author> Wallack, A., Canny, J. </author> <title> Planning for modular and hybrid fixtures, </title> <booktitle> IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: In modular fixturing, where fixture elements are constrained to a regular lattice, recent results suggest a number of open questions about the existence of solutions for classes of fixtures and parts <ref> [154, 142, 115] </ref>. When there is uncertainty in part pose or applied forces, minimizing the number of grasp points can be posed as a convex set covering problem. Recently, CG researchers have described efficient and probably practical algorithms for near-optimal grasps.
Reference: [143] <author> Wang, W.P., Wang, K.K. </author> <title> Real-time verification of multiaxis NC programs with raster graphics, </title> <booktitle> IEEE Proc. 1986 Int. Conf. Robotics and Automation, </booktitle> <address> San Francisco (April 1986), </address> <pages> 166-171. </pages>
Reference-contexts: Several researchers used an image-space approach, where an extended Z-buffer is provided for each pixel in a given graphical view of the part, and each tool movement updates the pixel information for each pixel that it passes over <ref> [11, 138, 143] </ref>. CGTech's Vericut simulator 32 uses such an approach. These methods are faster than the complete methods but they are view-dependent. Because of this, errors might not be visible from a certain view direction and would therefore be missed. (Consider a nearly flat surface viewed edge-on.
Reference: [144] <author> Wilson, R.H., Kavraki, L., Lozano-Perez, T., Latombe, J.-C. </author> <title> Two-handed assembly sequencing, </title> <journal> Intl. J. of Robotics Research, </journal> <volume> 14 (1995), </volume> <pages> 335-350. </pages>
Reference-contexts: Assembly Sequence Planning: The problem of disassembling a collection of parts has a strong geometric component. For local motions, a disassembly sequence can be found in polynomial time. The worst case running time is O (n 4 ), but it is fast in practice <ref> [144] </ref>. More recently, good worst-case bounds have been given for an important special case: where the set of possible disassembly directions is fixed a priori (true for many robotic workcells). The latter methods use lower envelopes and Davenport-Schinzel sequences to efficient find collisions along the disassembly direction.
Reference: [145] <editor> Wozny, M.J., Regli, W.C., Guest Editors. </editor> <booktitle> Computer science in manufacturing, Special issue of Comm. ACM 39 (1996), </booktitle> <pages> 33-85. </pages>
Reference-contexts: A number of recent resources have emphasized the prominence of geometry in manufacturing <ref> [72, 82, 140, 141, 145, 151] </ref>. A forthcoming special issue of Algorithmica (J. Mitchell, guest editor) focuses on applications of computational geometry to manufacturing. Solid Modeling. A first issue to tackle is solid modeling, by which is meant the computer representation and manipulation of 3D shapes.
Reference: [146] <author> Xiang, W.-N. </author> <title> A GIS method for riparian water quality buffer generation, </title> <journal> Int. J. </journal> <volume> GIS 7 (1993), </volume> <pages> 57-70. </pages>
Reference-contexts: One of the major challenges in GIS is a computationally efficient theory of spatial error. There has been much discussion on the topic. In 1966, Perkal [118], for example, proposed fattening boundaries by convolving them with a disk of radius *; these are usually called buffer zones <ref> [146] </ref>, and queries with buffer zones are an important type of overlay. See the survey [62]. Computation in floating point is one source of error. GIS data sets are riddled with degeneracies, so robust computation can be important. Spatial Analysis.
Reference: [147] <author> Yan, X., Gu, P. </author> <title> A review of rapid prototyping technologies and systems, </title> <booktitle> Computer-Aided Design 28 (1996), </booktitle> <pages> 307-318. </pages>
Reference-contexts: Efficient solutions from computational geometry might provide a handle on the geometric component of the problem. * Stereolithography: Stereolithography, a form of "layered manufacturing", is one of a growing set of processes used in rapid prototyping; for recent surveys of this and related technologies, see <ref> [136, 147] </ref>.
Reference: [148] <author> Yap, C. </author> <title> Symbolic treatment of geometric degeneracies, </title> <journal> J. Symb. Comput. </journal> <volume> 10 (1990), </volume> <pages> 349-370. </pages>
Reference-contexts: The effect of degeneracy is to vastly increase the number of special cases. While a sorting algorithm must deal only with the possibility of two keys being equal, a typical geometric algorithm faces the possibility of dozens or hundreds of different special cases <ref> [47, 49, 71, 148] </ref>. The presence of numerical data, added to the inherent complexity of geometric data types, makes geometric algorithms much harder to implement correctly than combinatorial (say, graph-theoretical) ones.
Reference: [149] <author> Yap, C. </author> <title> Towards exact geometric computation, </title> <booktitle> Fifth Canadian Conf. on Computational Geometry (1993), </booktitle> <pages> 405-419. </pages> <note> To appear, Comp.Geom.Theory and Appl. </note>
Reference-contexts: We close this section by discussing one application area that seems ideally suited to the techniques of computational geometry and the requirements of exact computation <ref> [149, 150] </ref>. Dimensional tolerancing theory and practice form a key cornerstone of modern precision engineering, allowing designers to specify tolerances in a specific way that also, in principle, allows machinists to verify them. It has been observed that the precision requirement on manufacturing is essentially increasing linearly with time.
Reference: [150] <author> Yap, C. </author> <title> Exact computational geometry and tolerancing metrology, </title> <booktitle> In "Snapshots of Computational and Discrete Geometry, </booktitle> <volume> Vol 3," </volume> <editor> Eds. </editor> <title> by David Avis and Jit Bose, </title> <institution> McGill School of Comp.Sci, Tech.Rep. No.SOCS-94.50, </institution> <year> 1994. </year> <note> (A special issue dedicated to Godfried Toussaint) </note>
Reference-contexts: We close this section by discussing one application area that seems ideally suited to the techniques of computational geometry and the requirements of exact computation <ref> [149, 150] </ref>. Dimensional tolerancing theory and practice form a key cornerstone of modern precision engineering, allowing designers to specify tolerances in a specific way that also, in principle, allows machinists to verify them. It has been observed that the precision requirement on manufacturing is essentially increasing linearly with time.
Reference: [151] <author> Yap, C. </author> <title> Report on NSF Workshop on Manufacturing and Computational Geometry, </title> <journal> IEEE Computational Science and Engineering, </journal> <volume> 2 (1995), </volume> <pages> 82-84. </pages> <note> Full report on web at URL http://cs.nyu.edu/cs/faculty/yap/index.html. </note>
Reference-contexts: A number of recent resources have emphasized the prominence of geometry in manufacturing <ref> [72, 82, 140, 141, 145, 151] </ref>. A forthcoming special issue of Algorithmica (J. Mitchell, guest editor) focuses on applications of computational geometry to manufacturing. Solid Modeling. A first issue to tackle is solid modeling, by which is meant the computer representation and manipulation of 3D shapes.
Reference: [152] <author> Yap, C., Dube, T. </author> <title> The exact computation paradigm, In "Computing in Euclidean Geometry" (2nd Edition). </title> <editor> Eds. D.-Z. Du and F.K. Hwang, </editor> <publisher> World Scientific Press (1995), </publisher> <pages> 452-492. </pages>
Reference-contexts: It has turned out to be much more difficult to argue that the numeric error associated with combinatorial structure is small. Full error analysis has been carried only for a few simple algorithms. Exact computation Exact geometric computation <ref> [152] </ref> requires that every predicate evaluation be correct. This can be achieved either by computing every numeric value exactly, or by some symbolic or implicit numeric representation that allows predicate values to be computed exactly.
Reference: [153] <author> Zagajac, J. </author> <title> A fast method for estimating discrete field values in early engineering design, </title> <note> to appear in IEEE CG&A. </note>
Reference-contexts: At present, the frontiers in solid modeling for manufacturing include how to define surfaces subject to constraints that require variational approaches and differential equations. Another major push is an attempt to integrate shape design with other aspects of engineering design, such as analysis and costing <ref> [153] </ref>. One particular challenge for CG, worthy serious attention, is anisotropy.
Reference: [154] <author> Zhuang, Y., Goldberg, K. </author> <title> On the existence of solutions in modular fixturing, </title> <journal> International Journal of Robotics Research, </journal> <note> to appear. 57 </note>
Reference-contexts: In modular fixturing, where fixture elements are constrained to a regular lattice, recent results suggest a number of open questions about the existence of solutions for classes of fixtures and parts <ref> [154, 142, 115] </ref>. When there is uncertainty in part pose or applied forces, minimizing the number of grasp points can be posed as a convex set covering problem. Recently, CG researchers have described efficient and probably practical algorithms for near-optimal grasps.
References-found: 153

