URL: http://www.cs.brandeis.edu/~bukatin/dist.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~bukatin/papers.html
Root-URL: http://www.cs.brandeis.edu
Email: bukatin@cs.brandeis.edu  josh@neu.edu  
Title: Computing Distances between Programs via Domains: a Symmetric Continuous Generalized Metric for Scott Topology on
Author: Michael A. Bukatin and Joshua S. Scott 
Address: Waltham, MA 02254, USA;  360 Huntington Avenue, Boston, MA 02115, USA;  
Affiliation: Department of Computer Science, Brandeis University,  Department of Mathematics, Northeastern University,  
Date: October 6, 1996  
Abstract: This paper presents a description of Scott topology on continuous Scott domains via continuous generalized distances. The continuity of these distances makes it possible to compute them in many cases. In particular, applications of this construction to semantic domains allow to compute meaningful distances between programs. The paper starts with a very simple variation of the Kopperman-Flagg generalized asymmetric distance for the Scott topology on a Scott domain described in [3]. This variation works for any continuous lattice with a countable basis and makes all distances non-negative real numbers. Unfortunately, the resulting distance is not continuous, which prevents its effective computation in many cases. A different version of generalized metric is then developed. The values are interpreted as upper estimates of real numbers. This metric is Scott continuous. It is symmetric, yet surprisingly still yields the asymmetric Scott topology. The classical metric property sacrificed is the requirement that the distance from an element to itself be zero. The intuition behind our construction is discussed. This construction is then generalized to continuous Scott domains with countable bases. The resulting distances are interval numbers. All properties described in the previous paragraph hold. When a domain is equipped with a regular countable basis, the restriction of the generalized metric fl Version 3.0 please CIRCULATE. The latest version can be requested via e-mail or obtained via Web: http://www.cs.brandeis.edu/~bukatin/papers.html. If you know that this is done, or if we need to include additional references, please let us know. Any feedback is greatly appreciated. Partially supported by NSF Grant CCR-9216185 and Office of Naval Research Grant ONR N00014-93-1-1015 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abbas Edalat. </author> <title> Domain theory and integration. </title> <journal> Theoretical Computer Science, </journal> <volume> 151 </volume> <pages> 163-193, </pages> <year> 1995. </year>
Reference-contexts: All distances in this paper will have values in one of these three domains. Moreover, all distances will be between 0 and 1, although their sums may, of course, be larger than 1. In case of interval distances, all distances will be within the interval <ref> [0; 1] </ref>. All distances will obey some form of the triangle inequality, d (x; z) d (x; y) + d (y; z). <p> Associate weights with all basic elements: w (?) = 0; w (k i ) = 2 i . Then the sum of weights of all basic elements equals 1 and the sum of weights of elements from any subset of K is well defined and belongs to <ref> [0; 1] </ref>. For K 0 K denote this sum as W (K 0 ) and call it the weight of the subset K 0 . 3 An asymmetric non-continuous distance 3.1 Definitions Here we define a distance in the spirit of [3]. <p> First, consider an ideal and unrealistic situation | that the sets K x and K y are recursive. In fact, what we really need is a decision procedure for the question whether k 2 K x nK y for k 2 K. Then we can start with <ref> [0; 1] </ref> as an approximation of d (x; y) and for every k 2 K (assume that they are recursively enumerated) if k 2 K x n K y , then add w (k) to the lower boundary, otherwise subtract w (k) from the upper boundary. <p> Also see the Introduction for an example of this type of distance on interval numbers. 10 The actual computation of (x; y) goes as follows. Start with <ref> [0; 1] </ref> and go along the recursive enumerations of K x and K y . Whenever we discover, that some k occurs in both K x and K y , subtract w (k) from the upper boundary. <p> 0 , and take k 2 K x 0 , k 62 K x . k 2 K x 0 implies k 62 I x , which together with k 62 K x implies k 62 U , k 62 V | contradiction. 2 Lemma 5.7 ffi (x; x) = <ref> [0; 1] </ref> iff u (x; x) = 1 iff x = ?. 12 Lemma 5.8 (Monotonicity) If x v y then K x K y and I x I y , which implies u (x; z) u (y; z) and l (x; z) l (y; z), i.e. ffi (x; z) v <p> Start with <ref> [0; 1] </ref> and go along the recursive enumerations of K x , K y , I x , and I y . <p> In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is <ref> [1; 1] </ref>, but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to <ref> [0; 1] </ref>. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. One serious drawback is that some desirable distances on certain domains are not partial cases of our current construction. The typical example is a segment <ref> [0; 1] </ref>, considered as a vertical domain ordered as in R + . The desirable distance would be (x; y) = 1 min (x; y), or ffi (x; y) = [0; 1 min (x; y)]. <p> Please observe that measure theory also came up as candidate number one for purely mathematical reasons as discussed in Subsection 5.5. Lately there were serious developments linking measure theory and domain theory (see <ref> [1] </ref>). We do not know whether they are applicable to the goal of developing measure theory on domains and programs. If this goal is achieved, a lot of algorithms from numerical analysis including some optimization methods will become immediately applicable to sets of programs.
Reference: [2] <author> R. Hoofman. </author> <title> Continuous information systems. </title> <journal> Information and Computation, </journal> <volume> 105(1) </volume> <pages> 42-71, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: By this we mean the distances related to differences in computational behavior of programs rather than differences in their texts. One possible route to this goal seems to go via metric structures on domains for denotational semantics. We will use <ref> [2] </ref> as the main reference for domain theory, since its setting is the closest to ours; see also references therein. The typical setting in denotational semantics is as follows. <p> Section 2 contains basic definitions and should be used as a reference. 2 Basic notions 2.1 Continuous Scott domains with bases We introduce basics of the theory of algebraic and continuous domains in the spirit of <ref> [2] </ref>. Consider a bounded complete dcpo A and denote its partial order as v. We say that x t y (x is way below y) if for any directed set S A, y v tS implies the existence of s 2 S, such that x v s. <p> One should think that (x; y) measures this potential divergence even when x = y. The following analogy with interval numbers might help to clarify this: <ref> [2; 2] </ref> 2 = [0; 4], but [2; 2] fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. <p> One should think that (x; y) measures this potential divergence even when x = y. The following analogy with interval numbers might help to clarify this: <ref> [2; 2] </ref> 2 = [0; 4], but [2; 2] fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. The fact that [2; 2] fi [2; 2] <p> One should think that (x; y) measures this potential divergence even when x = y. The following analogy with interval numbers might help to clarify this: <ref> [2; 2] </ref> 2 = [0; 4], but [2; 2] fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. The fact that [2; 2] fi [2; 2] contains negative numbers <p> One should think that (x; y) measures this potential divergence even when x = y. The following analogy with interval numbers might help to clarify this: <ref> [2; 2] </ref> 2 = [0; 4], but [2; 2] fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. The fact that [2; 2] fi [2; 2] contains negative numbers breaks conventional intuition in exactly the same way and via essentially the same <p> The following analogy with interval numbers might help to clarify this: <ref> [2; 2] </ref> 2 = [0; 4], but [2; 2] fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. The fact that [2; 2] fi [2; 2] contains negative numbers breaks conventional intuition in exactly the same way and via essentially the same mechanism, as the fact that (x; x) &gt; 0 does. <p> = [0; 4], but <ref> [2; 2] </ref> fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. The fact that [2; 2] fi [2; 2] contains negative numbers breaks conventional intuition in exactly the same way and via essentially the same mechanism, as the fact that (x; x) &gt; 0 does. <p> but <ref> [2; 2] </ref> fi [2; 2] = [4; 4]. Of course, in the second case, the left [2; 2] may approximate some point x, and the right [2; 2] may approximate some point y, and x does not have to be equal to y. The fact that [2; 2] fi [2; 2] contains negative numbers breaks conventional intuition in exactly the same way and via essentially the same mechanism, as the fact that (x; x) &gt; 0 does. <p> In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between <ref> [2; 2] </ref> and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances <p> In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between <ref> [2; 2] </ref> and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> The distance between <ref> [2; 2] </ref> and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. <p> and [3; 3] is [1; 1], but the distances between <ref> [2; 2] </ref> and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. <p> is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. <p> the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. <p> Thus the lower estimate of the distance between <ref> [2; 2] </ref> and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. <p> of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. One serious drawback is that some desirable distances on certain domains are not partial cases of our current construction.
Reference: [3] <author> Ralph Kopperman and Bob Flagg. </author> <title> The asymmetric topology of computer science. </title> <editor> In S. Brooks et al., editor, </editor> <booktitle> Mathematical Foundations of Programming Semantics, volume 802 of Lecture Notes in Computer Science, </booktitle> <pages> pages 544-553. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <month> 18 </month>
Reference-contexts: Then the composition of and [[ ]] would yield a computationally meaningful distance between programs: &lt; p 1 ; p 2 &gt;7! ([[p 1 ]]; [[p 2 ]]). We start with the attempt to adopt the well known Kopperman-Flagg generalized distance <ref> [3] </ref> for this purpose. Initially it seems, that the only obstacle would be the fact that under this approach distances are complicated sets rather than real numbers. <p> We keep in mind the desire to be able to actually write a program computing distances between programs. It turns out, that it is indeed not difficult to modify the construction from <ref> [3] </ref> for Scott domains, so that the distances are real numbers and the Scott topology still results (Section 3). Unfortunately, we discover that this distance is not continuous, and it seems unlikely, that any small modification would fix that. <p> For K 0 K denote this sum as W (K 0 ) and call it the weight of the subset K 0 . 3 An asymmetric non-continuous distance 3.1 Definitions Here we define a distance in the spirit of <ref> [3] </ref>. Define the distance between x and y in A as d (x; y) = W (K x n K y ). Define an open ball with the center x 2 A and real radius * as B x;* = fy 2 A j d (x; y) &lt; *g. <p> In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and <ref> [3; 3] </ref> is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and <ref> [3; 3] </ref> is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> The distance between [2; 2] and <ref> [3; 3] </ref> is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. <p> is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. <p> the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. <p> [2; 2] and [2; 3] and between [2; 3] and <ref> [3; 3] </ref> are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. <p> Thus the lower estimate of the distance between [2; 2] and <ref> [3; 3] </ref> is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. One serious drawback is that some desirable distances on certain domains are not partial cases of our current construction. <p> of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. Let us now discuss some remaining mathematical problems and drawbacks of our construction. The discussion of applications is in the Conclusion. One serious drawback is that some desirable distances on certain domains are not partial cases of our current construction.
References-found: 3

