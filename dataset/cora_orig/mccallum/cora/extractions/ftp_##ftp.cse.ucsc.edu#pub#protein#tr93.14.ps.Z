URL: ftp://ftp.cse.ucsc.edu/pub/protein/tr93.14.ps.Z
Refering-URL: http://www.cse.ucsc.edu/research/compbio/sam.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: rph@ce.ucsc.edu  
Phone: (408) 459-2939  
Title: Massively Parallel Biosequence Analysis  
Author: Richard Hughey 
Keyword: Computational biology, dynamic programming, parallel algorithms, systolic co-processors, hidden Markov models.  
Address: Santa Cruz  
Affiliation: Computer Engineering Board of Studies University of California,  
Abstract: Technical Report UCSC-CRL-93-14 April 2, 1993 Abstract Massive parallelism is required for the analysis of the rapidly growing biosequence databases. First, this paper compares and benchmarks methods for dynamic programming sequence analysis on several parallel platforms. Next, a new hidden Markov model method and its implementation on several parallel machines is discussed. Finally, the results of a series of experiments using this massively parallel implementation are de scribed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. F. Altschul et al., </author> <title> "Basic local alignment search tool," </title> <journal> J. Mol. Biol., </journal> <volume> vol. 215, </volume> <pages> pp. 403-410, </pages> <year> 1990. </year>
Reference-contexts: Comparison with gap penalties involves three recurrences of a similar form. An efficient and widely used statistical heuristic for sequence analysis has been developed by Altschul and colleagues in implemented in the BLAST program <ref> [1] </ref>.
Reference: [2] <author> P. Bertin, D. Roncin, and J. Vuillemin, </author> <title> "Introduction to programmable active memories," </title> <type> Tech. Rep. 3, </type> <institution> Digital Paris Research Laboratory, Rueil Malmaison, France, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: As with BISP, B-SYS can implement dynamic programming with gap penalties. A reimplimentation on the order of BISP or BioScan could place 256 PEs on each chip, and be clocked 3-6 times faster. Splash and PAM are field-programmable gate array systems specifically designed for configuration as special-purpose co-processors <ref> [12, 2, 15] </ref>. Thus, they provide for the implementation of sequence comparison algorithms in hardware without the need to fabricate new chips for each algorithm. Programming specific algorithms is, unfortunately, time consuming.
Reference: [3] <author> M. J. Bishop and C. J. Rawlings, eds., </author> <title> Nucleic Acid and Protein Sequence Analysis. </title> <publisher> Oxford, </publisher> <address> England: </address> <publisher> IRL Press, </publisher> <year> 1987. </year>
Reference-contexts: Computational biologists have several metrics for comparison which involve different costs between nucleotides as well as the possible use of affine costs or gap penalties to indicate an added penalty for commencing a series of deletions or insertions in the matching <ref> [3, 5, 20, 26, 28] </ref>.
Reference: [4] <author> C. R. Cantor, </author> <title> "Orchestrating the Humane Genome Project," </title> <journal> Science, </journal> <volume> vol. 248, </volume> <pages> pp. 49-51, </pages> <month> 6 Apr. </month> <year> 1990. </year>
Reference-contexts: 1 Introduction The goal of the Human Genome Project is to decode and understand human genetic information <ref> [4, 10, 29] </ref>. Biosequence databases currently contain on the order of 10 8 characters in 10 5 full and fragmentary biosequences; massive parallelism is required to fully analyze this vast, rapidly growing store of information.
Reference: [5] <author> S. C. Chan, A. K. C. Wong, and D. K. Y. Chiu, </author> <title> "A survey of multiple sequence comparison methods," </title> <journal> Bul. of Math. Biology, </journal> <volume> vol. 54, no. 4, </volume> <pages> pp. 563-598, </pages> <year> 1992. </year>
Reference-contexts: Sequence alignment information can be extracted from most sequence comparison algorithms. Regions of the sequences that vary little between sequences or organisms are referred to as "conserved" regions. Multiple sequence alignment Find the best alignment among a group of sequences <ref> [5] </ref>. This differs considerably from pairwise sequence alignment, and can require O (N M ) time for M sequences, if straight-forward dynamic programming is used. Thus, heuristics using pairwise alignments are more commonly used. Multiple alignments can be instrumental for creating informed guesses about sequence function. <p> Computational biologists have several metrics for comparison which involve different costs between nucleotides as well as the possible use of affine costs or gap penalties to indicate an added penalty for commencing a series of deletions or insertions in the matching <ref> [3, 5, 20, 26, 28] </ref>.
Reference: [6] <author> E. Chow, T. Hunkapiller, J. Peterson, and M. S. Waterman, </author> <title> "Biological information signal processor," </title> <booktitle> in Proc. Int. Conf. Application Specific Array Processors (M. </booktitle> <editor> Valero et al., </editor> <booktitle> eds.), </booktitle> <pages> pp. 144-160, </pages> <publisher> IEEE Computer Society, </publisher> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Internally, BioScan has 16-bit words and uses an infinity value to prevent overflow and minimum value (0) to prevent underflow. BISP takes a different approach, implementing in hardware full dynamic programming with gaps <ref> [6] </ref>. Each 400 000-transistor, 1 m CMOS chip contains 16 sequence comparison PEs. Each PE has about 35 16-bit registers, comparators, and multiplexors, in addition to local random access memory (RAM) for the storage of cost tables. About 20% of each chip is devoted to controlling the PEs. <p> 85 | 1 | 6.5 153 k Sun 4/50 90 | 1 | 0.75 1333 k MP-1 90 512 8192 | 0.031 55 M 107 k Splash [12] 90 64 248 123 0.020 50 M 781 k B-SYS [17] 90 10 470 470 0.351 13 M 1300 k BISP (est) <ref> [6] </ref> 91 64 1024 1024 0.0003 3072 M 192 M BioScan [27] 91 16 12992 12992 0.0004 25 G 1583 M Table 1: Edit distance calculation (arranged by CUPS/chip). experimentation. Note that the table is for the simplest dynamic programming edit-distance calculation.
Reference: [7] <author> B. I. Cohen and F. E. Cohen, </author> <title> "Predictions of protein secondary and teriary structure," in Biocomputing: Genome Sequence Analysis (D. </title> <editor> Smith, ed.), </editor> <address> San Diego, CA: </address> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: While secondary structure is a simpler energy minimization problem than tertiary, the complexity of the energy functions and length of the molecules have steered research toward neural network pattern recognition of sequence segments that form particular structures. Current results, however, have only achieved around 60% accuracy in prediction <ref> [7] </ref>. Multiple sequence alignments can form a starting point for 2-D and 3-D structure prediction when crystallographic data is available for one or more of the aligned sequences. 1.1 Biosequence analysis methods Perhaps the most commonly desired analysis is the determination of the similarity between two biosequences.
Reference: [8] <author> N. G. Core, E. W. Edmiston, J. H. Saltz, and R. M. Smith, </author> <title> "Supercomputers and biological sequence comparison algorithms," </title> <journal> Computers and Biomedical Research, </journal> <volume> vol. 22, </volume> <pages> pp. 497-515, </pages> <year> 1989. </year>
Reference-contexts: Core has compared dynamic programming and the BLAST algorithm on the CM-1 and Intel iPSC hypercube computer <ref> [8] </ref>. 2 Hidden Markov model sequence analysis An evolving and exciting means of biosequence analysis developed at UCSC uses a hidden Markov model (HMM) to generate position-dependent cost tables for each amino acid. 5 Given a set of biologically-similar sequences (such as the globins), the statistical model can be iteratively trained
Reference: [9] <author> M. O. Dayhoff, R. M. Schwartz, and B. C. Orcutt, </author> <title> "A model of evolutionary change in proteins," in Atlas of Protein Sequence and Structure, </title> <journal> ch. </journal> <volume> 22, </volume> <pages> pp. 345-358, </pages> <address> Washington, D. C.: </address> <publisher> National Biomedical Research Foundation, </publisher> <year> 1978. </year>
Reference-contexts: The governing (simple) recurrence is: d 0;i = d j;0 = 0 d i;j = d i1;j1 + dist (a i ; b j ): The dist values are a table that reflects the evolutionary cost in mutating one amino acid to another (for example, variations on Dayhoff's matrix <ref> [9] </ref>). This method reduces the cell calculation from 3 minimizations and additions (9 with gaps) to a single addition. Statistical methods are then used to calculate, based on the d i;n diagonal point-mutation scores, a good alignment between sequences.
Reference: [10] <author> C. DeLisi, </author> <title> "Computers in molecular biology: </title> <booktitle> Current applications and emerging trends," Science, </booktitle> <volume> vol. 246, </volume> <pages> pp. 47-51, </pages> <month> 6 Apr. </month> <year> 1988. </year>
Reference-contexts: 1 Introduction The goal of the Human Genome Project is to decode and understand human genetic information <ref> [4, 10, 29] </ref>. Biosequence databases currently contain on the order of 10 8 characters in 10 5 full and fragmentary biosequences; massive parallelism is required to fully analyze this vast, rapidly growing store of information.
Reference: [11] <author> K. Forchhammer, W. Leinfelder, and A. Bock, </author> <title> "Identification of a novel translation factor necessary for the incorporation of selenocysteine into protein," </title> <journal> Nature, </journal> <volume> vol. 342, </volume> <pages> pp. 453-456, </pages> <month> 23 Nov. </month> <year> 1989. </year>
Reference-contexts: 830-858 6 0.98 Table 3: Elongation factor training set statistics. 5 Biological Results To evaluate the effectiveness of the massively parallel implementation (as well as gain familiarity with parts of the system outside the dynamic programming inner loop), the author has been studying elongation factors, a biologically interesting protein structure <ref> [11] </ref>. One particularly important aid has been the availability of a structural alignment of 3 members of the class from X-ray crystallographic data. This alignment provides a "sanity check" on the trained HMMs. <p> Interesting models were first identified by distance statistics between the training set and the trained HMM (average, maximum, and sample deviation). The three structurally aligned sequences (SELB, Ef-Tu, and FIEC2 <ref> [11] </ref>) were then aligned to the model, and the results compared to the true alignment (automation of this processes is currently under development). <p> Note that the third test sequence has 394 amino acids in an insertion state before its elongation factor region begins. The first four alignment rows correspond to and are virtually identical to the structural alignment reported by Forchhammer, Leinfelder, and Bock <ref> [11] </ref>. 9 SELB_ECOLI m.........IIATAGHVDHGKTTLLQAIT---GVNA--........-------.....-DRLPEEKKRGMTIDLGYAYwPQ EFTU_ECOLI skekfert12NVGTIGHVDHGKTTLTAAITTVLAKTY--........GGAARAFDQ.....IDNAPEEKARGITINTSHVE.YD FIEC2 mtdvtik394VVTIMGHVDHGKTSLLDYIR--STKVA--........SKEAG----.....--------GITQHIGAYH.VE EF10_XENLA mgkekthi..NIVVIGHVDSGKSTTTGHLIYKCGGIDKRtiekfekeAAEMGKGSFkyawvLDKLKAERERGITIDISLWK.FE SELB_ECOLI PDGRVPGFIDVPGHEKFLSNMLAGVGGIDHALLVVACDDGVMA.......QTREHLAILQLTGNPMLTVALTKADRVD.EARVD EFTU_ECOLI TPTRHYAHVDCPGHADYVKNMITGAAQMDGAILVVAATDGPMP.......QTREHILLGRQVGVPYIIVFLNKCDMVD.DEELL FIEC2 TENGMITFLDTPGHAAFTSMRARGAQATDIVLVVVAADDGVMP.......QTIQAIQHAKAAQVPV-VVAVNKIDKPEaDPD-EF10_XENLA TSKYYVTIIDAPGHRDFIKNMITGTSQADCAVLIVAAGVGEFEagiskngQTREHALLAYTLGVKQLIVGINKMDSTE.PPYSQ SELB_ECOLI ....E-VERQVKEVLREYGFAEAKLFITA----------.......ATEGR..........GMDALREHLLQ..LPERE EFTU_ECOLI ....ELVEMEVRELLSQYDFPGDDTPIVRGSALKALEGDA---.......EWEAK..........ILELAGFLDSY..IPEPE FIEC2 ....----RVKNELSQYGILPE-----------EWGGESqfvhvsaKAGTG..........IDELLDAILLQaeVLELK EF10_XENLA kryeEIVKEVSTYIKKIGYNPDTVAFVPISGWNGDNMLEPSPNM.......PWFKGwkitrkegsgSGTTLLEALDC..ILPPS SELB_ECOLI HASQHSFRLAIDRAFTVKGAGLVVTGTALSGEVKVGDSL....WLTGVNKP..MRVRALHAQNQPTETANAGQRIALNIAGdAE EFTU_ECOLI RAIDKPFLLPIEDVFSISGRGTVVTGRVERGIIKVGEEV....EIVGIKETqkSTCTGVEMFRKLLDEGRAGENVGVLLRG.IK FIEC2 AVRKGMASGAVIESFLDKGRGPVATVLVREGTLHKGDIVlcgfEYGRVRAM..RNELGQE-------------.- EF10_XENLA RPTDKPLRLPLQDVYKIGGIGTVPVGRVETGVIKPGMVV....TFAPVNVT..TEVKSVEMHHEALTEAVPGDNVGFNVKN.VS SELB_ECOLI KEQINRGDW...LLADVPPEPFTRVIVELQTHTPLTqwqplhihhAASHVTGRVSLLEDNLAELVFDTPLWLadNDRL---VLR EFTU_ECOLI REEIERGQV...LAKPGTIKPHTKFESEVYILSKDE.........GGRHT---PFFKGYRPQFYFRTTDVTG..TIEL---- FIEC2 --------V...LEAGPSIP-----VEILGLSGV.........PAAGD-------------EVTT..VVRD--EKKA EF10_XENLA VKDVRRGNVagdSKNDPPMEAGSFTAQVIILNHPGQ.........IGAGYAP-VLDCHTAHIACKFAELKEK..IDRRSGKKLE SELB_ECOLI DISARNTLAGARVVMLNPPRRGKRKPEYLQWLAs..LARAQSDADALSVHLERGAVNLA-dfawarq233. EFTU_ECOLI ---------PEGVEMVMPGDNIKMVVTLIHPIAmddGLRFAIREGGRTVGAGVVAKVLS-........... FIEC2 REVALYRQGKFREVKLARQQKSKLE------...NMFANMTEG-----EVHEVNIV-lkadvqg199.
Reference: [12] <author> M. Gokhale et al., </author> <title> "Building and using a highly parallel programmable logic array," </title> <journal> Computer, </journal> <volume> vol. 24, </volume> <pages> pp. 81-89, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: As with BISP, B-SYS can implement dynamic programming with gap penalties. A reimplimentation on the order of BISP or BioScan could place 256 PEs on each chip, and be clocked 3-6 times faster. Splash and PAM are field-programmable gate array systems specifically designed for configuration as special-purpose co-processors <ref> [12, 2, 15] </ref>. Thus, they provide for the implementation of sequence comparison algorithms in hardware without the need to fabricate new chips for each algorithm. Programming specific algorithms is, unfortunately, time consuming. <p> All others are based on personal experimentation or extrapolation from published 4 Machine Year Chips PEs Max N 100fi100 (s) CUPS CUPS/chip Cray 2 <ref> [12] </ref> 85 | 1 | 6.5 153 k Sun 4/50 90 | 1 | 0.75 1333 k MP-1 90 512 8192 | 0.031 55 M 107 k Splash [12] 90 64 248 123 0.020 50 M 781 k B-SYS [17] 90 10 470 470 0.351 13 M 1300 k BISP (est) <p> are based on personal experimentation or extrapolation from published 4 Machine Year Chips PEs Max N 100fi100 (s) CUPS CUPS/chip Cray 2 <ref> [12] </ref> 85 | 1 | 6.5 153 k Sun 4/50 90 | 1 | 0.75 1333 k MP-1 90 512 8192 | 0.031 55 M 107 k Splash [12] 90 64 248 123 0.020 50 M 781 k B-SYS [17] 90 10 470 470 0.351 13 M 1300 k BISP (est) [6] 91 64 1024 1024 0.0003 3072 M 192 M BioScan [27] 91 16 12992 12992 0.0004 25 G 1583 M Table 1: Edit distance calculation (arranged by
Reference: [13] <author> D. Haussler, A. Krogh, S. Mian, and K. Sjolander, </author> <title> "Protein modelling using hidden Markov models: Analysis of globins," </title> <type> Tech. Rep. </type> <institution> UCSC-CRL-92-23, University of California, </institution> <address> Santa Cruz, CA, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: In aligning a sequence to a model, the most probable generation of that sequence is assumed. For information on training and updating the HMM, the reader is referred to the UCSC technical report and the related, condensed conference paper <ref> [13, 14] </ref>. Suffice to say, the vast majority of training time is spent calculating the probability of entering each state with each character of a training sequence.
Reference: [14] <author> D. Haussler, A. Krogh, S. Mian, and K. Sjolander, </author> <title> "Protein modelling using hidden Markov models: Analysis of globins," </title> <booktitle> in Proc. Hawaii Int. Conf. System Sciences, </booktitle> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: In aligning a sequence to a model, the most probable generation of that sequence is assumed. For information on training and updating the HMM, the reader is referred to the UCSC technical report and the related, condensed conference paper <ref> [13, 14] </ref>. Suffice to say, the vast majority of training time is spent calculating the probability of entering each state with each character of a training sequence.
Reference: [15] <author> D. T. Hoang, </author> <title> "A systolic array for the sequence alignment problem," </title> <type> Tech. Rep. </type> <institution> CS-92-22, Dept. Computer Science, Brown University, Providence, RI, </institution> <month> Apr. </month> <year> 1992. </year>
Reference-contexts: As with BISP, B-SYS can implement dynamic programming with gap penalties. A reimplimentation on the order of BISP or BioScan could place 256 PEs on each chip, and be clocked 3-6 times faster. Splash and PAM are field-programmable gate array systems specifically designed for configuration as special-purpose co-processors <ref> [12, 2, 15] </ref>. Thus, they provide for the implementation of sequence comparison algorithms in hardware without the need to fabricate new chips for each algorithm. Programming specific algorithms is, unfortunately, time consuming.
Reference: [16] <author> R. Hughey, </author> <title> Programmable Systolic Arrays. </title> <type> PhD thesis, </type> <institution> Dept. Computer Science, Brown University, Providence, RI, </institution> <year> 1991. </year> <type> Tech. Rep. </type> <institution> CS-91-34. </institution> <month> 11 </month>
Reference-contexts: The chips can execute instructions at about 4 MHz, and the basic sequence comparison operation requires 6-25 instructions (660-160 kCPS), depending on algorithm. Although sentinels can be programmed, typically modulo sequence comparison, in which dynamic programming values are compared modulo 256, is used <ref> [21, 16] </ref>. As with BISP, B-SYS can implement dynamic programming with gap penalties. A reimplimentation on the order of BISP or BioScan could place 256 PEs on each chip, and be clocked 3-6 times faster. <p> By making full use of modulo sequence comparison to reduce data communication, this author estimates that a factor of 2-4 performance increase is attainable over the CM-2 and MP-1 results of Table 1 for long sequences <ref> [16] </ref>.
Reference: [17] <author> R. Hughey and D. P. Lopresti, </author> <title> "A software approach to fault detection on pro-grammable systolic arrays," </title> <booktitle> in Proc. Symp. Parallel and Distributed Processing (B. Shi-razi and H. Sudborough, eds.), </booktitle> <pages> pp. 523-526, </pages> <publisher> IEEE Computer Society, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: B-SYS is a general-purpose systolic array that, although optimized for a variety of sequence comparison algorithms, can perform several other functions such as text compression and decompression <ref> [17] </ref>. With its less aggressive implementation, each 85 000-transistor 2 m CMOS chip features 47 PEs in a linear array. Each 8-bit ALU shares 16 registers with each of its two neighbors, enabling shared data and zero-overhead communication. <p> Year Chips PEs Max N 100fi100 (s) CUPS CUPS/chip Cray 2 [12] 85 | 1 | 6.5 153 k Sun 4/50 90 | 1 | 0.75 1333 k MP-1 90 512 8192 | 0.031 55 M 107 k Splash [12] 90 64 248 123 0.020 50 M 781 k B-SYS <ref> [17] </ref> 90 10 470 470 0.351 13 M 1300 k BISP (est) [6] 91 64 1024 1024 0.0003 3072 M 192 M BioScan [27] 91 16 12992 12992 0.0004 25 G 1583 M Table 1: Edit distance calculation (arranged by CUPS/chip). experimentation.
Reference: [18] <author> R. Jones, </author> <title> "Sequence pattern matching on a massively parallel computer," </title> <journal> CABIOS, </journal> <volume> vol. 8, no. 4, </volume> <pages> pp. 377-383, </pages> <year> 1992. </year>
Reference-contexts: Jones reports 75 MCUPS on a 64K CM-2 (corresponding to two times faster than the results in the table) by microcoding the inner loop of the dynamic programming algorithm [19]; Jones has also presented methods for database pattern searching with limited gap length on the CM-2 <ref> [18] </ref>. By making full use of modulo sequence comparison to reduce data communication, this author estimates that a factor of 2-4 performance increase is attainable over the CM-2 and MP-1 results of Table 1 for long sequences [16].
Reference: [19] <editor> R. Jones et al., </editor> <title> "Protein sequence comparison on the Connection Machine CM-2," in Computers and DNA, </title> <booktitle> SFI Studies in the Sciences of Complexity, </booktitle> <volume> vol. </volume> <editor> VII (G. Bell and T. Marr, </editor> <booktitle> eds.), </booktitle> <pages> pp. 1-9, </pages> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Jones reports 75 MCUPS on a 64K CM-2 (corresponding to two times faster than the results in the table) by microcoding the inner loop of the dynamic programming algorithm <ref> [19] </ref>; Jones has also presented methods for database pattern searching with limited gap length on the CM-2 [18].
Reference: [20] <author> A. M. Lesk, ed., </author> <title> Computational Molecular Biology. </title> <publisher> Oxford, </publisher> <address> England: </address> <publisher> Oxford University Press, </publisher> <year> 1988. </year>
Reference-contexts: Computational biologists have several metrics for comparison which involve different costs between nucleotides as well as the possible use of affine costs or gap penalties to indicate an added penalty for commencing a series of deletions or insertions in the matching <ref> [3, 5, 20, 26, 28] </ref>.
Reference: [21] <author> R. J. Lipton and D. P. Lopresti, </author> <title> "Delta transformations to simplify VLSI processor arrays for serial dynamic programming," </title> <booktitle> in Proc. Int. Conf. Parallel Processing (K. </booktitle> <editor> Hwang et al., </editor> <booktitle> eds.), </booktitle> <pages> pp. 917-920, </pages> <publisher> CRC Press, </publisher> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: The chips can execute instructions at about 4 MHz, and the basic sequence comparison operation requires 6-25 instructions (660-160 kCPS), depending on algorithm. Although sentinels can be programmed, typically modulo sequence comparison, in which dynamic programming values are compared modulo 256, is used <ref> [21, 16] </ref>. As with BISP, B-SYS can implement dynamic programming with gap penalties. A reimplimentation on the order of BISP or BioScan could place 256 PEs on each chip, and be clocked 3-6 times faster.
Reference: [22] <author> D. P. Lopresti, "P-NAC: </author> <title> A systolic array for comparing nucleic acid sequences," </title> <journal> Computer, </journal> <volume> vol. 20, </volume> <pages> pp. 98-99, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Table 1 summarizes the performance of several of these machines. The number of PEs, maximum native sequence length, and the approximate number of chips are listed for each machine. Performance metrics include 100 fi 100 sequence comparison, a metric first used with the nMOS P-NAC system <ref> [22] </ref>; the maximum attained or attainable number of dynamic programming cell updates per second (CUPS), generally not for the 100 fi 100 problem; and the CUPS per chip, a rough measurement of efficiency or performance per dollar.
Reference: [23] <author> W. J. Masek and M. S. Paterson, </author> <title> "How to compute string-edit distances quickly," in Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison, </title> <journal> pp. </journal> <pages> 337-349, </pages> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: It will be faster for values of n greater than 263 000, and is not amenable to parallelization <ref> [23] </ref>. 2 Distance calculation is governed by a simple recurrence.
Reference: [24] <author> J. R. Nickolls, </author> <title> "The design of the Maspar MP-1: A cost effective massively parallel computer," </title> <booktitle> in Proc. COMPCON Spring 1990, </booktitle> <pages> pp. 25-28, </pages> <publisher> IEEE Computer Society, </publisher> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: This is solved two-step forward-backward dynamic programming algorithm implemented on a massively parallel array processor. 3 Massively Parallel Implementation At their simplest level, the Maspar MP-1 and MP-2 computers are array processors with an 8-nearest-neighbor mesh connection and wraparound at the edges <ref> [24] </ref>. Each PE has 40 32-bit registers, 64 kbytes of locally addressable memory, and a bit-parallel ALU (the MP-1 has 32 4-bit PEs per chip, while the MP-2 has 32 32-bit PEs per chip).
Reference: [25] <author> L. R. Rabiner, </author> <title> "A tutorial on hidden Markov models and selected applications in speech recognition," </title> <journal> Proc. IEEE, </journal> <volume> vol. 77, </volume> <pages> pp. 257-286, </pages> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Thus, the HMM is a probabilistic consensus sequence that contains a probability distribution over all amino acids at each node. The protein HMM is displayed in Figure 1 (the reader is referred to the tutorial by Rabiner for an introduction to HMMs <ref> [25] </ref>). The squares are match states, corresponding to the matching of the model state to a character from the input sequence. The diamonds are insertion states, corresponding to characters in the sequence that are not matched.
Reference: [26] <author> D. Sankoff and J. B. Kruskal, </author> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: Computational biologists have several metrics for comparison which involve different costs between nucleotides as well as the possible use of affine costs or gap penalties to indicate an added penalty for commencing a series of deletions or insertions in the matching <ref> [3, 5, 20, 26, 28] </ref>.
Reference: [27] <author> R. Singh et al., </author> <title> "A scalable systolic multiprocessor system for analysis of biological sequences," </title> <booktitle> in Proc. Symp. on Integrated Systems, </booktitle> <institution> University of Washington, </institution> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Four recent directions are illustrated by BioScan, BISP, B-SYS, and PAM and Splash. BioScan is a massively parallel VLSI implementation of the BLAST algorithm <ref> [27] </ref>. BioScan chips are fabricated in 1.2 m CMOS, contain 812 PEs (537 000 transistors), and run at 32 MHz. This chips can accept a character every 17 clocks, or 1.88 million characters per second (1.88 MCPS), though the actual system is slower. <p> 1 | 0.75 1333 k MP-1 90 512 8192 | 0.031 55 M 107 k Splash [12] 90 64 248 123 0.020 50 M 781 k B-SYS [17] 90 10 470 470 0.351 13 M 1300 k BISP (est) [6] 91 64 1024 1024 0.0003 3072 M 192 M BioScan <ref> [27] </ref> 91 16 12992 12992 0.0004 25 G 1583 M Table 1: Edit distance calculation (arranged by CUPS/chip). experimentation. Note that the table is for the simplest dynamic programming edit-distance calculation.
Reference: [28] <author> G. von Heijne, </author> <title> Sequence Analaysis in Molecular Biology. </title> <address> San Diego, CA: </address> <publisher> Academic Press, </publisher> <year> 1987. </year>
Reference-contexts: Computational biologists have several metrics for comparison which involve different costs between nucleotides as well as the possible use of affine costs or gap penalties to indicate an added penalty for commencing a series of deletions or insertions in the matching <ref> [3, 5, 20, 26, 28] </ref>.
Reference: [29] <author> J. D. Watson, </author> <title> "The Human Genome Project: Past, present, and future," </title> <journal> Science, </journal> <volume> vol. 248, </volume> <pages> pp. 44-48, </pages> <month> 6 Apr. </month> <year> 1990. </year> <month> 12 </month>
Reference-contexts: 1 Introduction The goal of the Human Genome Project is to decode and understand human genetic information <ref> [4, 10, 29] </ref>. Biosequence databases currently contain on the order of 10 8 characters in 10 5 full and fragmentary biosequences; massive parallelism is required to fully analyze this vast, rapidly growing store of information.
References-found: 29

