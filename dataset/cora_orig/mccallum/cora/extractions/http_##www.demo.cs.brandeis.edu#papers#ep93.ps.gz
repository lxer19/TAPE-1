URL: http://www.demo.cs.brandeis.edu/papers/ep93.ps.gz
Refering-URL: http://www.demo.cs.brandeis.edu/papers/long.html
Root-URL: http://www.cs.brandeis.edu
Email: pja@cis.ohio-state.edu pollack@cis.ohio-state.edu  
Title: Evolutionary Module Acquisition  
Author: Peter J. Angeline and Jordan Pollack 
Date: February 25-26, 1993  
Note: To Appear in the Proceedings of: The Second Annual Conference on Evolutionary Programming,  La Jolla, California  
Address: Columbus, Ohio 43210  
Affiliation: Laboratory for Artificial Intelligence Research Computer and Information Science Department The Ohio State University  
Abstract-found: 0
Intro-found: 1
Reference: <author> Angeline, P. </author> <title> (1993) An analysis of evolutionary algorithms, </title> <note> Submitted to International Conference on Genetic Algorithms 1993. </note>
Reference-contexts: Where these techniques intersect is a profitable place to look for phenomena that reveal deeper truths about the structure of all similar algorithms. Our research concentrates on the more general set of evolutionary algorithms (EAs) <ref> (Angeline 1993) </ref>, which contains both evolutionary programming and genetic algorithms in addition to many other methods that use analogies to evolution for problem solving, search and optimization. One phenomenon that many evolutionary algorithms share is the manipulation of representational components that are necessary for the viability of the individual. <p> The initial state is indicated by the oversized arrow. Evolutionary Module Acquisition Angeline and Pollack The Ohio State University February 24, 1993 8 the representations syntax. For instance, Figure 5 shows the effect of this compression operator on the labeled tree representation used in the Genetic Library Builder (GLiB) <ref> (Angeline and Pollack 1993) </ref>. GLiB is a genetic algorithm which evolves modular expression trees to solve problems. The expression trees are interpreted as Lisp programs and are executed to produce a behavior in an environment.
Reference: <author> Angeline, P. and Pollack, J. </author> <title> (1993) Coevolving high-level representations, </title> <booktitle> Artificial Life III, </booktitle> <institution> Santa Fe Institute Studies in the Sciences of Complexity. </institution> <note> To Appear. </note>
Reference-contexts: Where these techniques intersect is a profitable place to look for phenomena that reveal deeper truths about the structure of all similar algorithms. Our research concentrates on the more general set of evolutionary algorithms (EAs) <ref> (Angeline 1993) </ref>, which contains both evolutionary programming and genetic algorithms in addition to many other methods that use analogies to evolution for problem solving, search and optimization. One phenomenon that many evolutionary algorithms share is the manipulation of representational components that are necessary for the viability of the individual. <p> The initial state is indicated by the oversized arrow. Evolutionary Module Acquisition Angeline and Pollack The Ohio State University February 24, 1993 8 the representations syntax. For instance, Figure 5 shows the effect of this compression operator on the labeled tree representation used in the Genetic Library Builder (GLiB) <ref> (Angeline and Pollack 1993) </ref>. GLiB is a genetic algorithm which evolves modular expression trees to solve problems. The expression trees are interpreted as Lisp programs and are executed to produce a behavior in an environment.
Reference: <author> Angeline, P., Saunders, G. and Pollack, J. </author> <title> (1993) An evolutionary algorithm that constructs recurrent neural networks, </title> <type> LAIR Technical Report #93-PA-GNARLY, </type> <note> Submitted to IEEE Transactions on Neural Networks Special Issue on Evolutionary Programming. </note>
Reference-contexts: Where these techniques intersect is a profitable place to look for phenomena that reveal deeper truths about the structure of all similar algorithms. Our research concentrates on the more general set of evolutionary algorithms (EAs) <ref> (Angeline 1993) </ref>, which contains both evolutionary programming and genetic algorithms in addition to many other methods that use analogies to evolution for problem solving, search and optimization. One phenomenon that many evolutionary algorithms share is the manipulation of representational components that are necessary for the viability of the individual. <p> The initial state is indicated by the oversized arrow. Evolutionary Module Acquisition Angeline and Pollack The Ohio State University February 24, 1993 8 the representations syntax. For instance, Figure 5 shows the effect of this compression operator on the labeled tree representation used in the Genetic Library Builder (GLiB) <ref> (Angeline and Pollack 1993) </ref>. GLiB is a genetic algorithm which evolves modular expression trees to solve problems. The expression trees are interpreted as Lisp programs and are executed to produce a behavior in an environment.
Reference: <author> Bck, T., Hoffmeister, F. and Schwefel, H.-P. </author> <title> (1991) A survey of evolution strategies, </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> R.K. </pages> <note> Belew and L.B. </note>
Reference: <editor> Booker (eds.), </editor> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo. </address>
Reference: <editor> Davis, L. (ed.) </editor> <booktitle> (1991) Handbook of Genetic Algorithms, </booktitle> <address> New York, </address> <publisher> Van Nostrand Reinhold. </publisher>
Reference: <editor> Fogel, D. </editor> <booktitle> (1992) Evolving Artificial Intelligence, </booktitle> <institution> Doctoral dissertation, University of California, </institution> <address> San Diego. </address>
Reference: <author> Fogel, L., Owens, A., and Walsh, M. </author> <title> (1966) Artificial Intelligence through Simulated Evolution. </title> <publisher> John Wiley & Sons, </publisher> <address> New York. </address>
Reference: <author> Goldberg, D. </author> <title> (1989) Genetic Algorithms in Search, Optimization, </title> <booktitle> and Machine Learning, </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley Publishing Company, Inc. </publisher>
Reference: <author> Grefensttete, J. </author> <title> (1989) Incorporating problem specific knowledge into genetic algorithms, In Genetic Algorithms and Simulated Annealing, </title> <editor> L. Davis editor, </editor> <publisher> Morgan Kaufman. </publisher>
Reference: <author> Holland, J. </author> <booktitle> (1975) Adaptation in Natural and Artificial Systems, </booktitle> <address> Ann Arbor, MI: </address> <publisher> The University of Michigan Press. </publisher>
Reference: <author> Jefferson, D., R. Collins, C. Cooper, M. Dyer, </author> <note> M. </note>
Reference: <author> Flowers, R. Korf, C. Taylor, and A. Wang. </author> <title> (1992) Evolution as a Theme in Artificial Life: The Genesys/Tracker System. In Artificial Life II, edited by C. </title> <editor> Langton, C. Taylor, J. </editor> <publisher> Farmer and S. </publisher>
Reference: <editor> Rasmussen. </editor> <address> Reading, MA: </address> <publisher> Addison-Wesley Publishing Company, Inc. </publisher>
Reference: <editor> Koza, J. </editor> <booktitle> (1992) Genetic Programming, </booktitle> <address> Cam-bridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Michalewicz, Z. </author> <title> (1993) A hierarchy of evolution programs: an experimental study, Evolutionary Computation, </title> <type> 1 (1), </type> <note> To appear March 1993. </note>
Reference: <editor> Rich, E. </editor> <booktitle> (1983) Artificial Intelligence, </booktitle> <address> New York: </address> <publisher> McGraw Hill. </publisher>
Reference-contexts: Evolutionary Algorithms Evolutionary algorithms (EAs) are a set of search and optimization methods that simultaneously manipulate a population of search space points. These algorithms differ from parallel implementations of what can be called single point methods, e.g. any classical AI search technique <ref> (Rich 1983) </ref>, Evolutionary Module Acquisition Peter J.
References-found: 17

