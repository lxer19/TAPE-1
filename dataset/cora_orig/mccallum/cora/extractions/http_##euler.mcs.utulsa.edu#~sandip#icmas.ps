URL: http://euler.mcs.utulsa.edu/~sandip/icmas.ps
Refering-URL: http://euler.mcs.utulsa.edu/~sandip/DAI.html
Root-URL: 
Email: sandip@kolkata.mcs.utulsa.edu durfee@engin.umich.edu  
Title: Unsupervised Surrogate Agents and Search Bias Change in Flexible Distributed Scheduling  
Author: Sandip Sen Edmund H. Durfee 
Address: 600 South College Avenue 1101 Beal Avenue Tulsa, OK 74104 Ann Arbor, MI 48109  
Affiliation: Mathematical Computer Sciences Dept Department of EECS University of Tulsa University of Michigan  
Abstract: Computational infrastructures for cooperative work should contain embedded agents for handling many routine tasks (Galegher, Kraut, & Egido 1990), but as the number of agents increases and the agents become geographically and/or conceptually dispersed, supervision of the agents will become increasingly problematic. We argue that agents should be provided with deep domain knowledge that allows them to make justifiable decisions, rather than shallow models of users to mimic. In this paper, we use the application domain of distributed meeting scheduling to investigate how agents embodying deeper domain knowledge can choose among alternative strategies for searching their calendars in order to create flexible schedules within reasonable cost. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bell, C. E. </author> <year> 1989. </year> <title> Maintaining project networks in automated artificial intelligence planning. </title> <booktitle> Management Science 35(10) </booktitle> <pages> 1192-1214. </pages>
Reference-contexts: Our future efforts will involve addressing broader class of scheduling problems using the techniques developed here. We are particularly interested in the dynamic, concurrent scheduling of a multitude of resource-constrained project networks (possibly managed by different departments in an organization) with significant resource interdependencies <ref> (Bell 1989) </ref>. We also believe that our approach of distributed, incremental scheduling in a dynamic domain can be successfully applied to a wide variety of scheduling problems on which other AI techniques have been used (Noronha & Sarma 1991).
Reference: <author> Galegher, J.; Kraut, R. E.; and Egido, C. </author> <year> 1990. </year> <title> Intellectual Teamwork: Social and Technological Foundations of Cooperative Work. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference: <author> Haralick, R., and Elliott, G. </author> <year> 1980. </year> <title> Increasing tree search efficiency for constraint satisfaction problems. </title> <booktitle> Artificial Intelligence 14(3) </booktitle> <pages> 263-313. </pages>
Reference-contexts: Search Bias We view a search bias as an a priori measure of the goodness of certain particular solutions being evaluated. In this respect, different search biases can be related to different Value Goodness measures <ref> (Haralick & Elliott 1980) </ref>, as used in the constraint satisfaction literature. Our earlier work tacitly assumed that meetings should be scheduled as early as possible, and yielded solutions where calendars tended to be dense at the beginning and sparse at the end.
Reference: <author> Johansen, R. </author> <year> 1988. </year> <title> Groupware: Computer Support for Business Teams. </title> <address> New York, NY: </address> <publisher> Free Press. </publisher>
Reference-contexts: Introduction In characterizing computational tools for supporting cooperative work, researchers have often considered how dimensions of time and space lead to different tools. The result is often a characterization <ref> (Johansen 1988) </ref> of tools like that shown in Table 1, with representative entries in each of the matrix elements. Implicit in the entries of this matrix is the question being addressed by these tools.
Reference: <author> Malone, T. W.; Grant, K. R.; Turbak, F. A.; Brobst, S. A.; and Cohen, M. D. </author> <year> 1987. </year> <journal> Intelligent information-sharing systems. Communications of the ACM 30(5) </journal> <pages> 390-402. </pages>
Reference: <author> Noronha, S., and Sarma, V. </author> <year> 1991. </year> <title> Knowledge-based approaches for scheduling problems: A survey. </title> <journal> IEEE Transactions on Knowledge and Data Engineering 3(2) </journal> <pages> 160-171. </pages>
Reference-contexts: The evaluated search biases can also be used in batch mode scheduling systems, but we believe more efficient heuristics are available for such problems <ref> (Noronha & Sarma 1991) </ref>. Problem Specification A meeting schedule consists of a group of meetings for a group of persons. <p> We also believe that our approach of distributed, incremental scheduling in a dynamic domain can be successfully applied to a wide variety of scheduling problems on which other AI techniques have been used <ref> (Noronha & Sarma 1991) </ref>. In particular, we have showed that our proposed system of distributed contract-based negotiation can be effectively used in a manufacturing environment (Sen & Durfee 1993). We are currently implementing an distributed meeting scheduler on a local area network supporting workstations, PCs, and Macintoshes.
Reference: <author> Peterson, J. L., and Silberschatz, A. </author> <year> 1985. </year> <title> Operating System Concepts. </title> <address> Reading, MA: </address> <publisher> Addison Wesley. </publisher>
Reference-contexts: The agent then steps down this ranked list and negotiates with other attendees of the meeting until it can schedule the meeting. This search bias can be likened to a local form of Worst Fit memory allocation strategy <ref> (Peterson & Silberschatz 1985) </ref>. Hierarchical (H): With this search bias, an agent tries to schedule a meeting in the least dense part of the combined search space of all the attendees of the calendar.
Reference: <author> Sen, S., and Durfee, E. H. </author> <year> 1992. </year> <title> A formal analysis of communication and commitment in distributed meeting scheduling. </title> <booktitle> In Working Papers of the 11th International Workshop on Distributed Artificial Intelligence, </booktitle> <pages> 333-342. </pages>
Reference-contexts: Our particular domain of inquiry has been the meeting-scheduling application, and elsewhere we have analytically developed and experimentally verified quantitative predictions of performance for various strategies for proposing, counterproposing, and committing to meetings <ref> (Sen & Durfee 1992) </ref>. In this paper, we consider a different aspect of the problem, namely, strategies for ordering the possible meeting times to propose.
Reference: <author> Sen, S., and Durfee, E. H. </author> <year> 1993. </year> <title> Dependent subtask processing in a contract-net for manufacturing. </title> <booktitle> In Proc. of AAAI-93 Workshop on Intelligent Manufacturing Technology, </booktitle> <pages> 7-13. </pages>
Reference-contexts: For invitee x, let n x K be the number of these intervals open on the day under question. If the host was using the one proposal per iteration, the probability that it will take i iterations to schedule the meeting is given by <ref> (Sen 1993) </ref> P i;1 = j=0 j Q A n x j 1 Q A n x (1) If the host was proposing N intervals per iteration, the probability that it will take i iterations to schedule the meeting is given by P i;N = Nfli X j=N (i1)+1 Now we <p> Let the number of intervals of length l currently free under node x for agent i be f i (l; x). We can then calculate the following (see <ref> (Sen 1993) </ref> for details of the calcula tion): P fAt least one interval is free in each attendees calendar under node xg = j=1 (1) j+1 a (l; x) i=1 a (l; x) j i=1 a (l; x) : Given the two level hierarchy (days and hours) that we are considering <p> In particular, we have showed that our proposed system of distributed contract-based negotiation can be effectively used in a manufacturing environment <ref> (Sen & Durfee 1993) </ref>. We are currently implementing an distributed meeting scheduler on a local area network supporting workstations, PCs, and Macintoshes.
Reference: <author> Sen, S., and Durfee, E. H. </author> <year> 1994. </year> <title> The role of commitment in cooperative negotiation. </title> <journal> International Journal of Intelligent and Cooperative Information Systems 3(1) </journal> <pages> 67-81. </pages>
Reference-contexts: In our past work, we have noted that, in situations where concurrent scheduling of several meetings is taking place, greater time spent in local search will lead to increased probability of mutually harmful interactions between scheduling processes that share the same calendar <ref> (Sen & Durfee 1994) </ref>. So, although the significance of this metric is not apparent in this simulation (with no concurrent scheduling), in real-life this metric will greatly impact the other cost metrics.
Reference: <author> Sen, S. </author> <year> 1993. </year> <title> Predicting Tradeoffs in Contract-Based Distributed Scheduling. Ph.D. Dissertation, University of Michigan. biases (from left to right) on the metric evaluating quality of schedule generated (DPC) for the case where H = 100. </title>
Reference-contexts: For invitee x, let n x K be the number of these intervals open on the day under question. If the host was using the one proposal per iteration, the probability that it will take i iterations to schedule the meeting is given by <ref> (Sen 1993) </ref> P i;1 = j=0 j Q A n x j 1 Q A n x (1) If the host was proposing N intervals per iteration, the probability that it will take i iterations to schedule the meeting is given by P i;N = Nfli X j=N (i1)+1 Now we <p> Let the number of intervals of length l currently free under node x for agent i be f i (l; x). We can then calculate the following (see <ref> (Sen 1993) </ref> for details of the calcula tion): P fAt least one interval is free in each attendees calendar under node xg = j=1 (1) j+1 a (l; x) i=1 a (l; x) j i=1 a (l; x) : Given the two level hierarchy (days and hours) that we are considering <p> In particular, we have showed that our proposed system of distributed contract-based negotiation can be effectively used in a manufacturing environment <ref> (Sen & Durfee 1993) </ref>. We are currently implementing an distributed meeting scheduler on a local area network supporting workstations, PCs, and Macintoshes.
References-found: 11

