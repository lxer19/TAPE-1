URL: http://ptolemy.eecs.berkeley.edu/papers/96/genMdsdf/icassp96.fm.ps.Z
Refering-URL: http://ptolemy.eecs.berkeley.edu/papers/96/genMdsdf/
Root-URL: 
Email: -murthy,eal-@eecs.berkeley.edu  
Title: AN EXTENSION OF MULTIDIMENSIONAL SYNCHRONOUS DATAFLOW TO HANDLE ARBITRARY SAMPLING LATTICES  
Author: Praveen K. Murthy, Edward A. Lee 
Address: California, Berkeley CA 94720  
Affiliation: Dept. of EECS, University of  
Abstract: 1 Multidimensional Synchronous Dataflow (MDSDF) [5][2] is a model of computation that has been proposed and implemented for specifying multidimensional multirate signal processing systems such as image and video processing algorithms. The model is an extension of synchronous dataow (SDF) [4] and has all of the desirable properties of the SDF model such as static schedu-lability, exposure of data and functional parallelism, and a visually pleasing syntax well suited for block diagram signal processing environments such as Ptolemy [1] and Khoros [3]. However, the MDSDF model as specif ied in [5] is limited to modeling multidimensional systems sampled on the rectangular lattice. Since some multidimensional systems of practical interest use non-rectangular sampling lattices and non-rectangular multi-rate operators like hexagonal decimators, models that are capable of representing and simulating such systems are of interest. This paper describes an extension of the MDSDF model that allo ws signals on arbitrary sampling lattices to be represented, and that allows the use of non-rectangular downsamplers and upsamplers. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Buck, S. Ha, E. A. Lee, D. G. Messerschmitt, Ptolemy: </author> <title> a Framework for Simulating and Prototyping Heterogeneous Sys tems, </title> <journal> International Journal of Computer Simulation, </journal> <month> Jan., </month> <year> 1994. </year>
Reference: [2] <author> M. C. Chen, </author> <title> De veloping a Multidimensional Synchronous Dataflow Domain in Ptolemy, </title> <type> MS Report, </type> <note> UC-Berk eley, UCB/ ERL Memo No. M94/16, </note> <month> June </month> <year> 1994 </year>
Reference-contexts: Although a multidimensional object such as an array can be embedded in a one dimensional stream, it may be a wkward to do so. In particular , compile time information about data parallelism and flow of control may not be very clear <ref> [2] </ref>. Multidimensional Synchronous Dataf low (MDSDF) was proposed recently for specifying multidimensional systems [5]; this model is an e xtension of SDF and preserves all of the nice properties of SDF such as compile-time schedulability.
Reference: [3] <author> K. Konstantinides, J. R. Rasure, </author> <title> The Khoros software devel opment environment for image and signal processing, </title> <journal> IEEE Transactions on Image Processing, </journal> <month> May </month> <year> 1994. </year>
Reference: [4] <author> E. A. Lee, D. G Messerschmitt, </author> <title> Static Scheduling of Syn chronous Dataflow Programs for Digital Signal Processing, </title> <journal> IEEE Trans. on Computers, </journal> <month> Jan. </month> <year> 1987 </year>
Reference: [5] <author> E. A. Lee, </author> <title> Multidimensional Streams Rooted in Dataf low, </title> <booktitle> Proceedings of the IFIP Working Conference on Architectures and Compilation Techniques for Fine and Medium Grain P aral lelism, </booktitle> <month> Jan. </month> <pages> 20-22, </pages> <address> 1993, Orlando, FL </address>
Reference-contexts: In particular , compile time information about data parallelism and flow of control may not be very clear [2]. Multidimensional Synchronous Dataf low (MDSDF) was proposed recently for specifying multidimensional systems <ref> [5] </ref>; this model is an e xtension of SDF and preserves all of the nice properties of SDF such as compile-time schedulability. <p> Moreover, it is also capable of e xposing data parallelism in multidimensional systems to a much greater e xtent than would be possible with multidimensional objects embedded in one dimensional streams in SDF. However, the model reported in <ref> [5] </ref> was limited to expressing systems sampled on the standard rectangular lattice. <p> In this paper, we present an e xtension of the MDSDF model to handle such systems, without sacrificing either compile-time schedula-bility or exposition of data-parallelism. In f act, extending the model without sacrificing these properties is the main challenge since it was conjectured in <ref> [5] </ref> that a dynamic dataf low model might have to be extended to multiple dimensions in order to model non-rectangular index spaces.
Reference: [6] <author> P. K. Murthy, E. A. Lee, </author> <title> A Generalization of Multidimen sional Synchronous Dataflow to Arbitrary Sampling Lattices, </title> <type> Technical report, </type> <institution> UCB/ERL M95/59, Electronics Research Lab oratory, UC Berkeley, </institution> <address> Ca 94720, </address> <month> Mar. </month> <year> 1995 </year>
Reference-contexts: augment t h e b a l a n c e e q u a t i o n s w i t h a n a d d i t i o n a l c o n s t r a i n t : expressions for using <ref> [6] </ref>: , and The solution to 1 gives . With these values, we get Since this matrix is not inte ger-valued, it appears that its inte ger volume has to be computed by brute force; it turns out to be 47. Hence, is not satisfied. <p> Hence, is not satisfied. One way to satisfy it is to force to be an inte ger matrix.; the smallest values that do it are . It is shown in <ref> [6] </ref> that it is always possible to solve these augmented balance equations. 5. Future Work The different choices of factorizations leads to different sets of balance equations, and these in turn will lead to dif ferent schedules. <p> One optimization problem that arises is to choose these factorizations in such a w ay that the schedules are as small as possible. Some of these issues are discussed in more detail in <ref> [6] </ref>, although general solutions have not been obtained yet. Parallel scheduling issues have not been dealt with yet. In order to effectively exploit data parallelism, techniques de veloped in the systolic arrays community [10], and the loop parallelization community [11] might prove to be useful.
Reference: [7] <author> P. K. Murthy, S. S. Bhattacharyya, E. A. Lee, </author> <title> Combined Code and Data Minimization for Synchronous Dataf low Pro grams, </title> <note> ERL Memo No. </note> <institution> UCB/ERL M94/93, Electronics Research Lab, UC Berkeley, </institution> <address> CA 94720, </address> <month> Nov. </month> <year> 1994 </year>
Reference-contexts: F33615-93-C-1317), the Semiconductor Research Corporation (SRC) (project 95-DC-324-016), the National Science Foundation (MIP-9201605), the State of California MICRO program, and the following companies: Bell Northern Research, Cadence, Dolby, Hitachi, Lucky-Goldstar, Mentor Graphics, Mitsubishi, Motorola, NEC, Philips, and Rockwell. mized for any of several criteria including program and data memory usage <ref> [7] </ref>, and high throughput multiprocessor schedules taking interprocessor communication into account [8]. The second possibility, namely that of constructing good multiprocessor implementations, is due to the ability of SDF to e xpose not just the functional parallelism b ut also data parallelism in the algorithm.
Reference: [8] <author> G. C. Sih and E. A. Lee, </author> <title> Declustering: A New Multiproces sor Scheduling Technique, </title> <journal> IEEE Trans. on Parallel and Distrib uted Systems, </journal> <month> June </month> <year> 1993. </year>
Reference-contexts: Foundation (MIP-9201605), the State of California MICRO program, and the following companies: Bell Northern Research, Cadence, Dolby, Hitachi, Lucky-Goldstar, Mentor Graphics, Mitsubishi, Motorola, NEC, Philips, and Rockwell. mized for any of several criteria including program and data memory usage [7], and high throughput multiprocessor schedules taking interprocessor communication into account <ref> [8] </ref>. The second possibility, namely that of constructing good multiprocessor implementations, is due to the ability of SDF to e xpose not just the functional parallelism b ut also data parallelism in the algorithm.
Reference: [9] <author> P. P. Vaidyanathan, </author> <title> Multirate Systems and Filter Banks, </title> <publisher> Pren tice Hall, </publisher> <year> 1993 </year>
Reference-contexts: However, the model reported in [5] was limited to expressing systems sampled on the standard rectangular lattice. Since there is a benef it sometimes in using non-separable lattices for sampling multidimensional signals <ref> [9] </ref>, and for using non-separable multirate operations such as hexagonal decimation or quincunx upsampling, it is of interest to ha ve dataflow models that can also e xpress these systems. <p> T h e s e t o f p o i n t s w h e r e , with , is called the fundamental parallelepiped of and is denoted <ref> [9] </ref>. The set of integer points within is denoted by the set . If is an integer matrix, then the number of elements (called the integer volume) in is given by . Suppose that is a point on . Then there exists an integer vector such that .
Reference: [10] <author> S. Y. Kung, </author> <title> VLSI Array Processors, </title> <publisher> Prentice Hall, </publisher> <year> 1988 </year>
Reference-contexts: Some of these issues are discussed in more detail in [6], although general solutions have not been obtained yet. Parallel scheduling issues have not been dealt with yet. In order to effectively exploit data parallelism, techniques de veloped in the systolic arrays community <ref> [10] </ref>, and the loop parallelization community [11] might prove to be useful.

References-found: 10

