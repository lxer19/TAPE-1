URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-94-44.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Spectral-Based Multi-Way FPGA Partitioning  
Author: Pak K. Chan Martine D.F. Schlag, and Jason Y. Zien 
Date: November 21, 1994  
Address: Santa Cruz, California 95064 USA  
Affiliation: Computer Engineering University of California, Santa Cruz  
Abstract: Recent research on FPGA partitioning has focussed on finding minimum cuts between partitions without regard to the routability of the partitioned subcircuits. In this paper we develop a spectral approach to multi-way partitioning in which the primary goal is to produce routable subcircuits while maximizing FPGA device utilization. To assist the partitioner in assessing the routability of the partitioned subcircuits, we have developed a theory to predict the routability of the partitioned subcircuits prior to partitioning. Advancement over the current work is evidenced by results of experiments on the standard MCNC benchmarks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> XILINX: </author> <title> The Programmable Gate Array Data Book. 2100 Logic Drive, </title> <address> San Jose, CA 95124, </address> <year> 1993. </year>
Reference-contexts: Also, our result is less expensive than [15] with a monetary cost function. But the vendor's placement and routing tool apr <ref> [1] </ref> cannot complete the routing of this XC3090 subcircuit, the tool reports 50 unrouted nets! This demonstrates that partitioning without consideration for routability could be an exercise of futility.
Reference: [2] <author> C. J. Alpert and A. B. Kahng. </author> <title> Multi-way partitioning via spacefilling curves and dynamic programming. </title> <booktitle> In ACM IEEE 31 st Design Automation Conference Proceedings, </booktitle> <pages> pages 652-657, </pages> <address> San Diego, California, </address> <month> June </month> <year> 1994. </year>
Reference: [3] <author> E. R. Barnes. </author> <title> An algorithm for partitioning the nodes of a graph. </title> <journal> SIAM Journal on Algorithm and Discrete Method, </journal> <volume> 3(4) </volume> <pages> 541-550, </pages> <month> Dec. </month> <year> 1982. </year>
Reference: [4] <author> N. Bhat and D. Hill. </author> <title> Routable Technology Mapping for LUT FPGAs. </title> <booktitle> In 1992 IEEE International Conference on Computer Design: VLSI in Computers and Processors, </booktitle> <pages> pages 95-98, </pages> <month> October </month> <year> 1992. </year>
Reference: [5] <author> P. K. Chan, M. Schlag, and J. Zien. </author> <title> On routability prediction for field-programmable gate arrays. </title> <booktitle> In ACM IEEE 30 th Design Automation Conference Proceedings, </booktitle> <pages> pages 326-330, </pages> <address> Dallas, Texas, </address> <month> June </month> <year> 1993. </year>
Reference: [6] <author> P. K. Chan, M. Schlag, and J. Zien. </author> <title> Spectral k-way ratio-cut partitioning and clustering. </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> 13(9) </volume> <pages> 1088-1096, </pages> <month> Sept. </month> <year> 1994. </year>
Reference: [7] <author> N.-C. Chou, L.-T. Liu, C.-K. Cheung, W.-J. Dai, and R. Lindelof. </author> <title> Circuit partitioning for huge logic emulation systems. </title> <booktitle> In ACM IEEE 31 st Design Automation Conference Proceedings, </booktitle> <pages> pages 244-249, </pages> <address> San Diego, California, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Kuznar et al's result [15] is used as a reference, their partitioner is targetted for heterogeneous FPGA systems. Chou et al's partitioner (SC) <ref> [7] </ref> is targetted for homogeneous FPGA hardware emulators. where f is a weight parameter associated with the heuristics. We use 0:5 &lt; f &lt; 2:5; a typical value is 1. We have two different strategies. We call them the pcut and pcluster heuristics, respectively. <p> Routability results are presented in the next section. Overall, the results in Table 1 demonstrate that our spectral-based graph partitioner KPF is capable of handling hard constraints and producing good partitions in reasonable time. We used the results from <ref> [15, 7] </ref> as references. The partitioner of Kuznar et al [15] is targeted for heterogeneous systems, while our partitioner KPF is targeted for homogeneous systems. We only list our homogeneous partitioning results in Table 1. However, our partitioner is also capable of generating very competitive heterogeneous results.
Reference: [8] <author> D. M. Cvetkovic, M. Doob, and H. Sachs. </author> <title> Spectra of Graphs: Theory and Application. </title> <publisher> Academic Press,Inc., </publisher> <address> New York, New York, </address> <year> 1979. </year>
Reference: [9] <author> W. Donath and A. Hoffman. </author> <title> Lower bounds for the partitioning of graphs. </title> <journal> IBM Journal of Research and Development, </journal> <pages> pages 420-425, </pages> <year> 1973. </year>
Reference: [10] <author> A. El Gamal. </author> <title> Two-Dimensional Stochastic Model for Interconnections in Master Slice Integrated Circuits. </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> 28(2) </volume> <pages> 127-138, </pages> <month> Feb. </month> <year> 1981. </year>
Reference: [11] <author> J. Frankle and R. M. Karp. </author> <title> Circuit placements and cost bounds by eigenvector decomposition. </title> <booktitle> In IEEE International Conference on Computer-Aided Design ICCAD-86, </booktitle> <pages> pages 414-417, </pages> <address> Santa Clara, California, </address> <month> November </month> <year> 1986. </year>
Reference-contexts: We refer to our k-way spectral-based partitioning algorithm as KPF. We ran the graphs derived from the MCNC FPGA partitioning 1993 benchmarks for the Xilinx XC3000 series. The hypergraphs of the benchmarks were transformed into graphs by using Frankle's clique expansion net model <ref> [11] </ref>, or the star graph net model. Unlike the clique net model, the star graph net model produces a very sparse graph matrix, which accelerates the eigensolver. On the other hand, this hypergraph model generates auxiliary vertices that have to be filtered out from the eigenvector embedding.
Reference: [12] <author> S. W. Hadley, B. L. Mark, and A. Vanelli. </author> <title> An Efficient Eigenvector Approach for Finding Netlist Partitions. </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> CAD-11(7):885-892, </volume> <month> July </month> <year> 1992. </year>
Reference: [13] <author> K. M. Hall. </author> <title> An r-dimensional quadratic placement algorithm. </title> <journal> Management Science, </journal> <volume> 17(3) </volume> <pages> 219-229, </pages> <month> Nov. </month> <year> 1970. </year>
Reference: [14] <institution> IDA Supercomputing Research Center, 17100 Science Drive, Bowie, MD 20715. Splash2: </institution> <note> Programmer's Manual Version 0.7, </note> <year> 1992. </year>
Reference: [15] <author> R. Kuznar, F. Brglez, and K. Kozminski. </author> <title> Cost minimization of partition into multiple devices. </title> <booktitle> In ACM IEEE 30 th Design Automation Conference Proceedings, </booktitle> <pages> pages 315-320, </pages> <address> Dallas, Texas, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Partitioning results using a SUN IPC workstation with 32 Mbyte of memory. The number of chips generated by the partitioners is presented as f# of XC3020, # of XC3030, # of XC3042, # of XC3064, # of XC3090g Xilinx XC3000 FPGAs. Kuznar et al's result <ref> [15] </ref> is used as a reference, their partitioner is targetted for heterogeneous FPGA systems. Chou et al's partitioner (SC) [7] is targetted for homogeneous FPGA hardware emulators. where f is a weight parameter associated with the heuristics. We use 0:5 &lt; f &lt; 2:5; a typical value is 1. <p> Routability results are presented in the next section. Overall, the results in Table 1 demonstrate that our spectral-based graph partitioner KPF is capable of handling hard constraints and producing good partitions in reasonable time. We used the results from <ref> [15, 7] </ref> as references. The partitioner of Kuznar et al [15] is targeted for heterogeneous systems, while our partitioner KPF is targeted for homogeneous systems. We only list our homogeneous partitioning results in Table 1. However, our partitioner is also capable of generating very competitive heterogeneous results. <p> Routability results are presented in the next section. Overall, the results in Table 1 demonstrate that our spectral-based graph partitioner KPF is capable of handling hard constraints and producing good partitions in reasonable time. We used the results from [15, 7] as references. The partitioner of Kuznar et al <ref> [15] </ref> is targeted for heterogeneous systems, while our partitioner KPF is targeted for homogeneous systems. We only list our homogeneous partitioning results in Table 1. However, our partitioner is also capable of generating very competitive heterogeneous results. For example, in [15] the authors use a monetary cost function, their partitioner generates <p> The partitioner of Kuznar et al <ref> [15] </ref> is targeted for heterogeneous systems, while our partitioner KPF is targeted for homogeneous systems. We only list our homogeneous partitioning results in Table 1. However, our partitioner is also capable of generating very competitive heterogeneous results. For example, in [15] the authors use a monetary cost function, their partitioner generates a device distribution of f0; 0; 1; 0; 1g meaning one XC3042 and one XC3090 FPGA to implement the benchmark circuit s5378 (routability re sults are not reported in [15]). <p> For example, in <ref> [15] </ref> the authors use a monetary cost function, their partitioner generates a device distribution of f0; 0; 1; 0; 1g meaning one XC3042 and one XC3090 FPGA to implement the benchmark circuit s5378 (routability re sults are not reported in [15]). But without balancing constraints, our partitioner generates a better device distribution f1; 0; 0; 0; 1g meaning one XC3020 and one XC3090 FPGAs to implement the circuit, and the average CLB utilization is 99.6%. Also, our result is less expensive than [15] with a monetary cost function. <p> s5378 (routability re sults are not reported in <ref> [15] </ref>). But without balancing constraints, our partitioner generates a better device distribution f1; 0; 0; 0; 1g meaning one XC3020 and one XC3090 FPGAs to implement the circuit, and the average CLB utilization is 99.6%. Also, our result is less expensive than [15] with a monetary cost function. But the vendor's placement and routing tool apr [1] cannot complete the routing of this XC3090 subcircuit, the tool reports 50 unrouted nets! This demonstrates that partitioning without consideration for routability could be an exercise of futility.
Reference: [16] <author> B. Mohar and S. Poljak. </author> <title> Eigenvalues in Combinatorial Optimization. </title> <institution> University of Ljubljana, </institution> <address> Jadranska 19, 61 111 Ljubljana, Slovenia, </address> <year> 1993. </year>
Reference: [17] <author> B. N. Parlett and D. S. Scott. </author> <title> The Lanczos algorithm with selective orthogonalization. </title> <journal> Mathematics and Computations, </journal> <volume> 33(11) </volume> <pages> 217-238, </pages> <year> 1979. </year>
Reference-contexts: Also, the hypergraphs of the benchmarks were pre-processed to remove high-fanout nets of degree greater than 99. Nets whose degree were greater than 99 were removed in order to reduce storage space and processing time. This step is essential in facilitating the eigensolver (Scott/Parlett implementation of the Lanczos algorithm <ref> [17] </ref>) to run on a low-end SPARC station with only 32 Mbyte of memory.
Reference: [18] <author> A. Pothen, H. D. Simon, and K.-P. Liou. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <journal> SIAM Journal of Matrix Analysis and Applications, </journal> <volume> 11(3) </volume> <pages> 430-452, </pages> <year> 1990. </year>
Reference: [19] <institution> Quickturn Design Systems, Inc. Quickturn Emulation System. </institution> <address> 325 East Middlefield Road, Mountain View, CA 94043, </address> <year> 1993. </year>
Reference: [20] <author> F. Rendl and H. Wolkowicz. </author> <title> A projection technique for partitioning the nodes of a graph. </title> <type> Technical report, </type> <institution> University of Waterloo, </institution> <month> Apr. </month> <year> 1991. </year>
Reference: [21] <author> M. Schlag, J. Kong, and P. K. Chan. </author> <title> Routability-driven technology mapping for lookup table-based FPGAs. </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> (1):13-26, Jan. 1994. 
Reference: [22] <author> S. Trimberger and M.-R. Chene. </author> <title> Placement-Based Partitioning for Lookup-Table-Based FPGAs. </title> <booktitle> In 1992 IEEE International Conference on Computer Design: VLSI in Computers and Processors, </booktitle> <pages> pages 91-94, </pages> <month> October </month> <year> 1992. </year>
Reference: [23] <author> N.-S. Woo and J. Kim. </author> <title> An efficient method of partitioning circuits for multiple-FPGA implementation. </title> <booktitle> In ACM IEEE 30 th Design Automation Conference Proceedings, </booktitle> <pages> pages 202-207, </pages> <address> Dallas, Texas, </address> <month> June </month> <year> 1993. </year>
References-found: 23

