URL: file://ftp.di.unito.it/pub/articles/robotics/learning_ex.ecml94.ps.Z
Refering-URL: http://www.di.unito.it/WWW/MLgroup/attiliobib.html
Root-URL: 
Email: e-mail:  
Title: Learning Control Functions from Examples  
Author: C. Baroglio, A. Giordana, G. Lo Bello, R. Piola 
Date: March 19, 1994  
Web: fattilio,baroglio,piolagdi.unito.it  
Address: C.so Svizzera 10149, Torino, Italy,  
Affiliation: Dipartimento di Informatica, Universita di Torino,  
Abstract: The process for developing control programs for industrial robots is an expensive task which can benefit from machine learning at a great extent. In this paper we propose two viable methods for synthesising control programs both integrating symbolic and sub-symbolic learning algorithms. Fuzzy controllers are used as function approximators owing to their architecture which, while exhibiting excellent adaptive capabilities to numeric signals, still allows a symbolic interpretation of the knowledge they encode. The first method learns the rule set for a fuzzy controller using a classical system (SMART+) for learning classification rules. This is achieved by transforming the problem of learning a continuous function into the problem of learning an histogram. The second method achieves the same goal using regression trees. In both cases, the automatically synthesised fuzzy controller is refined using a variant of the backpropagation algorithm. The two methods are evaluated and compared on a test case consisting of a robot KUKA IR-361 engaged into the "peg-into-hole" task. A comparison with Time Delay Neural Networks is also provided on the same task. The conclusion is that both methods perform better than TDNNs. Moreover the method based on regression trees is more accurate than the other one based on SMART+. Nevertheless, the latter can be more useful in the case domain knowledge, for designing the fuzzy controller layout, be available.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Kaiser A. Giordana and M. Nuttin. </author> <title> Behavioural learning: Combining sensing and action. </title> <type> Technical Report D202-7274, </type> <institution> Project B-Learn II Technical Annex, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: The input signals for the seven sequences are reported as a unique consecutive sequence in Figure 4. the angular velocity was less interesting (too easy), the corresponding description and the obtained results are not reported here for the sake of space; the complete description can be found in <ref> [1] </ref>. The same traces were used in [17], too, for synthesising controllers based on Multi-Layer Perceptron and TDNN. 4 How to Learn a Fuzzy Controller In the practice of industrial applications, fuzzy controllers are designed and refined manually.
Reference: [2] <author> R.S. Sutton A.G. Barto and C.W. Anderson. </author> <title> Neuronlike adaptive elements that can solve difficult learning prolems. </title> <journal> IEEE Transaction on System Men and Cybernetics, </journal> <volume> SMC-13:834-836, </volume> <year> 1986. </year>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line <ref> [3, 2, 27] </ref> or off-line [9, 24] with ANNs; several examples can be found in [10, 5, 11] Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [3] <author> A.G. Barto and R.S. Sutton. </author> <title> Landmark learning: an illustration of associative search. </title> <journal> Biological Cybernetics, </journal> <volume> 42 </volume> <pages> 1-8, </pages> <year> 1981. </year>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line <ref> [3, 2, 27] </ref> or off-line [9, 24] with ANNs; several examples can be found in [10, 5, 11] Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [4] <author> H.R. Berenji. </author> <title> Fuzzy logic controllers. In R.R. </title> <editor> Yager and L.A. Zadeh, editors, </editor> <title> An Introduction to Fuzzy Logic Applications in Intelligent Systems. </title> <publisher> Kluver Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: The fundamental difference is that a RBF-NN splits the domain into closed regions, whereas a MLP uses open regions defined by hyperplanes. 2 Starting from a very different approach, the Fuzzy Logic community arrived at developing another kind of function approximator, called fuzzy logic controller (FLC) <ref> [28, 4] </ref>, which gained a large popularity in automated control engineering [6]. In spite of the very different cultural perspective, fuzzy controllers have many features in common with the RBF architecture. <p> Then, a fifth level of neurons is used for combining the activated outputs in order to obtain a more smooth output signal. Many different methods are available in the literature for implementing this smoothing function (see <ref> [4] </ref> for a survey). Here we will limit ourselves to describe our specific choice. in the fuzzy set literature, a symbolic interpretation is given to this architecture.
Reference: [5] <author> H.R. Berenji and P. Khedkar. </author> <title> Learning and tuning fuzzy controllers through rein forcements. </title> <journal> IEEE Transactions on neural networks, </journal> <volume> 3(5) </volume> <pages> 724-740, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line [3, 2, 27] or off-line [9, 24] with ANNs; several examples can be found in <ref> [10, 5, 11] </ref> Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron. <p> For the sake of brevity, we will only report those equations that are different from the original ones that can be found in <ref> [5] </ref>. As the same architecture is used both with supervised learning and with reinforcement learning in the framework of the GARIC architecture, the rules for parameter updates have a slightly different form depending on the learning paradigm used.
Reference: [6] <author> P.P. Bonissone and K.H. Chiang. </author> <title> Fuzzy logic controllers: from development to deployment. </title> <booktitle> In IEEE International Conference on Neural Networks, volume II, </booktitle> <address> San Francisco, CA, </address> <year> 1993. </year>
Reference-contexts: In fact fuzzy controllers share properties both with neural networks and with symbolic rule based systems and are suitable for combining symbolic and sub-symbolic learning algorithms. Moreover, fuzzy controllers technology is now well assessed and widely used in industry both in U.S.A <ref> [6] </ref> and in Japan [20]. Then they are a good tool to invest on for a project with industrial perspectives. In this paper we present and compare two methods for synthesising fuzzy controllers from examples, both combining non-connectionist and connectionist learning techniques. <p> splits the domain into closed regions, whereas a MLP uses open regions defined by hyperplanes. 2 Starting from a very different approach, the Fuzzy Logic community arrived at developing another kind of function approximator, called fuzzy logic controller (FLC) [28, 4], which gained a large popularity in automated control engineering <ref> [6] </ref>. In spite of the very different cultural perspective, fuzzy controllers have many features in common with the RBF architecture. In particular, they also split the function domain in closed regions, with the only difference that they use rectangular areas instead of circular ones. <p> a closed area in the feauture space than to an open one, fuzzy controllers can be some time understandable to a human expert (at least as much as a decision tree), or, alternatively, a human expert can use some qualitative knowledge to design the layout of the first four layers <ref> [6] </ref>. Second, fuzzy controllers exhibit locality with respect to changes in the structure. In fact, modifiying the action range of a feature detector or one of the real values associated to the neurons in the fourth layer, only affects a restricted region of the co-domain.
Reference: [7] <author> M. Botta and A. Giordana. </author> <title> SMART+: A multi-strategy learning tool. </title> <booktitle> In IJCAI-93, Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, volume 2, </booktitle> <address> Chambery, France, </address> <year> 1993. </year>
Reference-contexts: Then they are a good tool to invest on for a project with industrial perspectives. In this paper we present and compare two methods for synthesising fuzzy controllers from examples, both combining non-connectionist and connectionist learning techniques. The first method relies on a classical symbolic system ( Smart+ <ref> [7] </ref> in the specific case) for learning the control rules of the fuzzy controller from a set of training examples. The second one achieves the same goal using the regression tree methodology (CART [18]). <p> N intervals, we will obtain a set of N classes to learn from examples. Notice that, this is equivalent to approximate the function with a histogram. Following this method, in the present case we used Smart+ <ref> [7] </ref> because of its capabilities of dealing with continuous features. In particular, Smart+ automatically constructs the input linguistic variables together with the associated activation functions. The criterion for guiding the inductive search in Smart+ has been modified in order to account for the specific needs of the learning task. <p> Two integrated learning methods have been described and compared: one based on a classical system (Smart+ <ref> [7] </ref>) for learning classification rules from examples, and another 13 based on regression trees [18]. We have shown that both methods can compete favorably with back-propagation networks. Moreover, we have shown that the method based on CART plus backpropagation is better than the method based on Smart+. <p> Moreover, we have shown that the method based on CART plus backpropagation is better than the method based on Smart+. Even so, we believe this last can become competitive when domain knowledge for predicting the qualitative structure of the control function is available. In this case, Smart+ (see <ref> [7] </ref>) is able to incorporate the domain knowledge in the classification theory it generate, whereas CART isn't. Finally, in order to check the performance of the method based on CART outside the specific domain, a test on the Mackey-Glass series has been made.
Reference: [8] <author> D. Kedzier C. Sammut, S. Hurst and D. Michie. </author> <title> Learning to fly. </title> <editor> In D. Sleeman and P. Edwards, editors, </editor> <booktitle> Machine Learning Proceedings of the Ninth International Workshop (ML92), </booktitle> <pages> pages 385-393. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year> <month> 14 </month>
Reference-contexts: Afterwards, the rules and the discretisation of the input features can be learned using a regression tree [23] or other systems capable of dealing with numeric features. A similar solution was adopted by <ref> [8] </ref> for learning the control for a flight simulator. Then, suppose we supply a discretisation of the co-domain of the control function into 7 the previous figure. N intervals, we will obtain a set of N classes to learn from examples.
Reference: [9] <author> G.E. Hinton D.E. Rumelhart and R.J. Williams. </author> <title> Learning internal representations by error propagation. </title> <type> Technical Report 8506, </type> <institution> Institute for Cognitive Science, La Jolla: University of California, </institution> <address> San Diego, </address> <year> 1985. </year>
Reference-contexts: The first one is based on the multi-layer perceptron architecture (MLP) <ref> [9] </ref>, whereas the second one sees in the Radial Basis Function Neural Network (RBF-NN) [16] its major representative. <p> However, several proposals emerged in the literature adapting the methods used for learning them on-line [3, 2, 27] or off-line <ref> [9, 24] </ref> with ANNs; several examples can be found in [10, 5, 11] Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [10] <author> G.V.Raju and J.Zhou. </author> <title> Adaptive hierarchical fuzzy controller. </title> <journal> IEEE Trans. on SMC, </journal> <volume> 23 </volume> <pages> 973-980, </pages> <year> 1993. </year>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line [3, 2, 27] or off-line [9, 24] with ANNs; several examples can be found in <ref> [10, 5, 11] </ref> Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [11] <author> C.C. Hung. </author> <title> Building a neuro-fuzzy learning control system. </title> <journal> AI expert, </journal> <pages> pages 40-49, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line [3, 2, 27] or off-line [9, 24] with ANNs; several examples can be found in <ref> [10, 5, 11] </ref> Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [12] <author> R.S. Crowder III. </author> <title> Predicting the macke-glass time series with cascade-correlation learning. </title> <editor> In G. Hinton D. Touretzky and T.Sejnovsky, editors, </editor> <booktitle> Proceedings of the 1990 Connectionist Models Summer School, </booktitle> <pages> pages 117-123. </pages> <institution> Carnegie Mellon University, </institution> <year> 1990. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]). <p> by [12, 13, 15, 19, 21, 22, 25], so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from <ref> [12, 13] </ref>). If we do not consider ANFIS that has been designed manually (see [13]) we see that even on this task, the fuzzy controller designed by CART compare reasonably well with other fully automated methods such as cascade correlation.
Reference: [13] <author> J.S.R. Jang. ANFIS: </author> <title> Adaptive-Network-Based Fuzzy Inference System. </title> <journal> IEEE Trans actions on Systems, Men and Cybernetics, </journal> <volume> SMC-23(3):665-687, </volume> <month> May/June </month> <year> 1993. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]). <p> by [12, 13, 15, 19, 21, 22, 25], so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from <ref> [12, 13] </ref>). If we do not consider ANFIS that has been designed manually (see [13]) we see that even on this task, the fuzzy controller designed by CART compare reasonably well with other fully automated methods such as cascade correlation. <p> If we do not consider ANFIS that has been designed manually (see <ref> [13] </ref>) we see that even on this task, the fuzzy controller designed by CART compare reasonably well with other fully automated methods such as cascade correlation.
Reference: [14] <author> J.S.R. Jang and C.T. Sun. </author> <title> Functional equivalence between radial basis function networks and fuzzy inference systems. </title> <journal> IEEE Transactions on Neural Networks, </journal> <year> 1992. </year>
Reference-contexts: In particular, they also split the function domain in closed regions, with the only difference that they use rectangular areas instead of circular ones. This fact leads to a little more complex network topology (see also <ref> [14] </ref>). In general, rectangular feature detectors are constructed using two levels of neurons.
Reference: [15] <author> R.D. Jones, Y.C. Lee, C.W. Barnes, G.W. Flake, K. Lee, and P.S. Lewis. </author> <title> Function approximation and time series prediction with neural networks. </title> <booktitle> In Proceedings of IEEE International Joint Conference on Neural Networks, </booktitle> <pages> pages I-649-665, </pages> <year> 1990. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]).
Reference: [16] <author> J.Park and W.Sandberg. </author> <title> Universal approximation using radial-basis functions. </title> <journal> Neu ral Computation, </journal> <volume> 3 </volume> <pages> 246-257, </pages> <year> 1990. </year>
Reference-contexts: The first one is based on the multi-layer perceptron architecture (MLP) [9], whereas the second one sees in the Radial Basis Function Neural Network (RBF-NN) <ref> [16] </ref> its major representative.
Reference: [17] <author> M. Kaiser. </author> <title> Evaluation of time-delay neural networks for control function approxi mation. </title> <booktitle> In Proceedings of the Workshop on Learning Robots, </booktitle> <address> Torino, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: The same traces were used in <ref> [17] </ref>, too, for synthesising controllers based on Multi-Layer Perceptron and TDNN. 4 How to Learn a Fuzzy Controller In the practice of industrial applications, fuzzy controllers are designed and refined manually. <p> V y 8.49 7.25% 0.05% 0.31% V z 56.10 62.29% 0.45% 2.75% Table 1: Statistical comparative results Table 1 summarizes the results for V x , V y and V z obtained using both methods described in this paper and TDNNs; results for TDNN are cited from <ref> [17] </ref>. Finally, Table 2 shows how controller precision and complexity depends upon tangling and pruning for the FLC controller generated by CART + backpropagation. Tangling was applied in Number of Number Number of Precision Precision Pruning Tangling Feature of Conse- before after Detectors rules quents backprop. backprop.
Reference: [18] <author> R.A. Ohlsen L. Breiman, J.H. Friedman and C.J. Stone. </author> <title> Classification And Regres sion Trees. </title> <publisher> Wadsworth & Brooks, </publisher> <address> Pacific Grove, CA, </address> <year> 1984. </year>
Reference-contexts: The first method relies on a classical symbolic system ( Smart+ [7] in the specific case) for learning the control rules of the fuzzy controller from a set of training examples. The second one achieves the same goal using the regression tree methodology (CART <ref> [18] </ref>). Afterwards, in both cases an modification of the back-propagation algorithm is used to refine off-line (or on-line) the fuzzy controller. The comparison is made using a robot KUKA-IR 361 in the classical task of inserting a peg into a hole. <p> To this aim, two methods have been experimented: one based on the classical paradigm of learning concept description from examples, and the other based on regression trees <ref> [18] </ref>. In both cases a three steps learning procedure has been 6 to the force sensors along the three coordinates while T x , T y and T z correspond to the torque sensors. <p> Then, the evaluation criterion used by Smart+ for guiding the induction process has ben modified in order to weight in a different way the classification errors between adjacents and non adjacent classes. 4.2 Learning the fuzzy controller layout with CART Regression Trees were introduced by <ref> [18] </ref> for function approximation, and they present the advantage, with respect to the method described above, of not requiring the definition of the target classes. <p> The algorithm for generating a Regression Tree (CART) is simple and a detailed description can be found in <ref> [18] </ref>. 8 A step of refinement can be executed in order to simplify the tree: the regression tree is explored bottom-up and every test (node) is suppressed if doing so does not increase the error on a second learning set, called "pruning set". <p> Two integrated learning methods have been described and compared: one based on a classical system (Smart+ [7]) for learning classification rules from examples, and another 13 based on regression trees <ref> [18] </ref>. We have shown that both methods can compete favorably with back-propagation networks. Moreover, we have shown that the method based on CART plus backpropagation is better than the method based on Smart+.
Reference: [19] <author> A.S. Lapedes and R.Farber. </author> <title> Nonlinear signal processing using neural networks: Prediction and system modeling. </title> <type> Technical Report LA-UR-87-2662, </type> <institution> Los Alamos National Laboratory, </institution> <year> 1987. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]).
Reference: [20] <author> J. Nishino M. Sugeno, T. Murofushi and H. Miwa. </author> <title> Helicopter flight control based on fuzzy logic. </title> <booktitle> In Proceedings of the International Fuzzy Engeneering Symposium, volume 2, </booktitle> <address> Yokohama, Japan, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: In fact fuzzy controllers share properties both with neural networks and with symbolic rule based systems and are suitable for combining symbolic and sub-symbolic learning algorithms. Moreover, fuzzy controllers technology is now well assessed and widely used in industry both in U.S.A [6] and in Japan <ref> [20] </ref>. Then they are a good tool to invest on for a project with industrial perspectives. In this paper we present and compare two methods for synthesising fuzzy controllers from examples, both combining non-connectionist and connectionist learning techniques.
Reference: [21] <author> J. Moody. </author> <title> Fast learning in multi-resolution hierarchies. </title> <editor> In D. Touretzky, editor, </editor> <booktitle> Advances in Neural Information Processing. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]).
Reference: [22] <author> J. Moody and C.J. Darken. </author> <title> Fast learning in networks of locally tuned processing units. </title> <journal> Neural Computation, </journal> <volume> 1 </volume> <pages> 282-294, </pages> <year> 1989. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]).
Reference: [23] <author> J.R. Quinlan. </author> <title> Combining instance-based and model-based learning. </title> <booktitle> In Proceedings of the 10 th machine learning conference, </booktitle> <pages> pages 236-243, </pages> <address> Amherst, MA, </address> <year> 1993. </year>
Reference-contexts: Afterwards, the rules and the discretisation of the input features can be learned using a regression tree <ref> [23] </ref> or other systems capable of dealing with numeric features. A similar solution was adopted by [8] for learning the control for a flight simulator. Then, suppose we supply a discretisation of the co-domain of the control function into 7 the previous figure.
Reference: [24] <author> D.E. Rumelhart and J.L. McClelland. </author> <title> Parallel distributed processing: Explorations in the microstructure of cognition. </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1985. </year> <month> 15 </month>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line [3, 2, 27] or off-line <ref> [9, 24] </ref> with ANNs; several examples can be found in [10, 5, 11] Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [25] <author> T.D. Sanger. </author> <title> A tree-structured adaptive network for function approximate in high dimensional spaces. </title> <journal> IEEE Transactions on Neural Networks, </journal> <volume> 2(2) </volume> <pages> 285-293, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: This task was used also by <ref> [12, 13, 15, 19, 21, 22, 25] </ref>, so we can directly compare our results with their (Table 3; the Non-Dimensional Error Index is defined as the Root Mean Square Error divided by the Standard Deviation of the target series and all entries not referring to CART are cited from [12, 13]).
Reference: [26] <author> Li-Xin Wang. </author> <title> Fuzzy systems are universal approximators. </title> <booktitle> In Proceeding of the 1992 IEE International Conference on Fuzzy Systems, </booktitle> <pages> pages 1163-1170. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: After experimenting with several types of neural networks, the final choice has been to use fuzzy controllers as function approximators <ref> [26] </ref>. In fact fuzzy controllers share properties both with neural networks and with symbolic rule based systems and are suitable for combining symbolic and sub-symbolic learning algorithms. Moreover, fuzzy controllers technology is now well assessed and widely used in industry both in U.S.A [6] and in Japan [20].
Reference: [27] <author> C.J.C.H. Watkins and P. Dayan. </author> <title> Technical note: </title> <journal> Q-learning. Machine Learning, </journal> <volume> 8 </volume> <pages> 279-292, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: However, several proposals emerged in the literature adapting the methods used for learning them on-line <ref> [3, 2, 27] </ref> or off-line [9, 24] with ANNs; several examples can be found in [10, 5, 11] Anyhow, in all those cases, the structure of the controller continues to be supplied by a human expert, as it happens for the network topology in a multi-layer perceptron.
Reference: [28] <author> L.A. Zadeh. </author> <title> Knowledge representation in fuzzy logic. In R.R. </title> <editor> Yager and L.A. Zadeh, editors, </editor> <title> An Introduction to Fuzzy Logic Applications in Intelligent Systems. </title> <publisher> Kluver Academic Publishers, </publisher> <year> 1992. </year> <month> 16 </month>
Reference-contexts: The fundamental difference is that a RBF-NN splits the domain into closed regions, whereas a MLP uses open regions defined by hyperplanes. 2 Starting from a very different approach, the Fuzzy Logic community arrived at developing another kind of function approximator, called fuzzy logic controller (FLC) <ref> [28, 4] </ref>, which gained a large popularity in automated control engineering [6]. In spite of the very different cultural perspective, fuzzy controllers have many features in common with the RBF architecture.
References-found: 28

