URL: http://www.ecs.umass.edu/ece/labs/vlsicad/papers/edac95.ps
Refering-URL: http://www.ecs.umass.edu/ece/labs/vlsicad/ciesielski.html
Root-URL: 
Title: Elimination of Multi-Cycle False Paths by State Encoding  
Author: Zafar Hasan Maciej J. Ciesielski 
Address: Amherst, MA 01003, USA  
Affiliation: Department of Electrical Computer Engineering University of Massachusetts  
Abstract: In this paper we present a technique to remove multi-cycle false paths from a sequential circuit by the encoding of its states. Based on behavioral level analysis, we derive the necessary and sufficient condition for the encoding of FSM to obtain a false path free implementation. This condition requires the satisfaction of false path dichotomies obtained from symbolic output and next state equations of the machine. The presented approach can significantly impact the multi-cycle false path removal techniques, traditionally applied to gate-level circuits. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Ashar, S. Dey, and S. Malik. </author> <title> Exploiting multi-cycle false paths in the performance optimization of sequential circuits. </title> <booktitle> In Proceedings of the International Conference on Computer-Aided Design, </booktitle> <pages> pages 510-517, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Multi-cycle false paths have also been investigated in literature to some extent <ref> [1] </ref>, [6], [7]. It has been demonstrated that the presence of MFPs in sequential circuits may significantly affect their performance. First of all, it may lead to overestimation of the cycle time of the circuit if it is computed based on the longest (rather than critical, true) path. <p> Removing multi-cycle false paths from the sequential circuit fl This work was supported by a grant from NSF under contract number MIP-9208267 often results in circuit restructuring that may enable additional retiming and in effect can lead to performance improvement <ref> [1] </ref>. Multi-cycle false paths also reduce the testability of sequential circuits. It is therefore desirable to identify and remove multi-cycle false paths from sequential circuits to help improve their performance and testability. <p> It is therefore desirable to identify and remove multi-cycle false paths from sequential circuits to help improve their performance and testability. This problem has been investigated recently, but only in the context of restructuring the circuits implemented on gate level, <ref> [1] </ref>, [7]. In this approach the gate delays are known and can be used to selectively remove long false paths. On the other hand, it requires the knowledge of the final, gate-level, circuit implementation. <p> State Code r 1 r 2 r 3 S 1 0 0 0 S 3 1 1 1 S 5 0 1 0 machine with this state encoding. This gate-level circuit was shown to have multi-cycle false paths terminating on output o 2 <ref> [1] </ref>. If restructured to remove the MFPs, it results in a circuit shown in Figure 3 (b) [1], to be analyzed later in Section 5. <p> This gate-level circuit was shown to have multi-cycle false paths terminating on output o 2 <ref> [1] </ref>. If restructured to remove the MFPs, it results in a circuit shown in Figure 3 (b) [1], to be analyzed later in Section 5. <p> The circuit is smaller and has fewer registers than the circuit in <ref> [1] </ref> obtained after false path removal and retiming, Figure 3 (b). It can operate at the same clock period as in [1] without additional retiming. We have implemented our FPF encoding technique as a C program. It identifies potential false paths in a given FSM and generates the necessary FPDs. <p> The circuit is smaller and has fewer registers than the circuit in <ref> [1] </ref> obtained after false path removal and retiming, Figure 3 (b). It can operate at the same clock period as in [1] without additional retiming. We have implemented our FPF encoding technique as a C program. It identifies potential false paths in a given FSM and generates the necessary FPDs.
Reference: [2] <author> H. C. Chen, D.H. Du, and S. W. Cheng. </author> <title> Circuit enhancement by eliminating long false paths. </title> <booktitle> In Proceedings of the Design Automation Conference, </booktitle> <pages> pages 249-252, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The problem of false paths in logic circuits has been studied extensively in recent years (e.g. [8], [5], <ref> [2] </ref>, [9]). False path in the circuit is a path that is never exercised during the operation of the circuit due to the circuit functionality and/or delay values of the circuit components. We shall differentiate between false paths in combinational circuits and false paths in sequential circuits.
Reference: [3] <author> M. Ciesielski, J. J. Shen, and M. Davio. </author> <title> A unified approach to input-output encoding for FSM state assignment. </title> <booktitle> In Proceedings of the Design Automation Conference, </booktitle> <month> June </month> <year> 1991. </year>
Reference-contexts: Table 1 summarizes the properties of different types of paths in the context of our approach. We formulate the FPF encoding problem as a dichotomy covering problem, encountered in the constrained encod ing [10], <ref> [3] </ref>. We shall illustrate our approach with the machine example used earlier, Figure 1 (a). <p> paths terminating at o i if and only if the encoding of the states of the machine satisfies all dichotomies in DS k i . 4.2 Encoding as a Dichotomy Covering Problem The removal of false paths on behavioral level can now be formulated as a dichotomy covering problem [10], <ref> [3] </ref>. For each output with a potential false path we generate the corresponding set of dichotomies and include it in the final constraint set for the state code of the FSM.
Reference: [4] <author> G. DeMicheli, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Optimal state assignment of finite state machines. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 269-285, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: For a false path to be removed, the corresponding dichotomy must be covered by at least one of the encoding bits. Any constrained encoding method <ref> [4] </ref> which is capable of satisfying all of these constraints will result in a code, and subsequently in a circuit, which does not contain any multi-cycle false paths. 5 Results and Conclusion path dichotomies.
Reference: [5] <author> S. Devadas, K. Keutzer, and S. Malik. </author> <title> Delay computation in combinational circuits: Theory and Algorithms. </title> <booktitle> In Proceedings of the International Conference on Computer-Aided Design, </booktitle> <month> November </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The problem of false paths in logic circuits has been studied extensively in recent years (e.g. [8], <ref> [5] </ref>, [2], [9]). False path in the circuit is a path that is never exercised during the operation of the circuit due to the circuit functionality and/or delay values of the circuit components. We shall differentiate between false paths in combinational circuits and false paths in sequential circuits.
Reference: [6] <author> Z. Hasan and M. J. Ciesielski. </author> <title> On multi-cycle false paths. </title> <booktitle> In Proceedings of the IFIP Workshop on Logic and Architecture Synthesis, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: Multi-cycle false paths have also been investigated in literature to some extent [1], <ref> [6] </ref>, [7]. It has been demonstrated that the presence of MFPs in sequential circuits may significantly affect their performance. First of all, it may lead to overestimation of the cycle time of the circuit if it is computed based on the longest (rather than critical, true) path. <p> On the other hand, it requires the knowledge of the final, gate-level, circuit implementation. Algorithms for false path removal operating at the gate level tend to become very computation intensive and slow. We have demonstrated in our earlier work <ref> [6] </ref> that the presence of MFPs in a sequential circuit can be readily detected on behavioral and functional levels, where only the behavior of the machine (e.g. state transition table) or its logic is available. <p> This is in contrast with the false paths observed in combinational circuits. Let us briefly review the following problems addressed in our earlier work <ref> [6] </ref>: P1: Given a sequential circuit on functional level, repre sented by its state transition information and state encoding, identify and remove multi-cycle false paths. P2: Given a sequential circuit on behavioral level, represented by its state transition information without the state encoding, identify all multi-cycle false paths. <p> Such a simplification corresponds to an implementation of a circuit with the k-cycle false-paths being removed. The proof of this lemma is presented in <ref> [6] </ref>. 3.2 False Paths on Behavioral Level Here we consider problem P2 stated earlier. We show that a behavioral specification (STG, state charts, etc) may contain multi-cycle false paths. Our goal is to identify these false paths.
Reference: [7] <author> W. K. C. Lam, R. K. Brayton, and A. L. Sangiovanni-Vincentelli. </author> <title> Exact minimum cycle time for finite state machines. </title> <booktitle> In Proceedings of the Design Automation Conference, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: Multi-cycle false paths have also been investigated in literature to some extent [1], [6], <ref> [7] </ref>. It has been demonstrated that the presence of MFPs in sequential circuits may significantly affect their performance. First of all, it may lead to overestimation of the cycle time of the circuit if it is computed based on the longest (rather than critical, true) path. <p> It is therefore desirable to identify and remove multi-cycle false paths from sequential circuits to help improve their performance and testability. This problem has been investigated recently, but only in the context of restructuring the circuits implemented on gate level, [1], <ref> [7] </ref>. In this approach the gate delays are known and can be used to selectively remove long false paths. On the other hand, it requires the knowledge of the final, gate-level, circuit implementation.
Reference: [8] <author> P. C. McGeer and R. K. Brayton. </author> <title> Integrating Functional and Temporal Domains in Logic Design. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: 1 Introduction The problem of false paths in logic circuits has been studied extensively in recent years (e.g. <ref> [8] </ref>, [5], [2], [9]). False path in the circuit is a path that is never exercised during the operation of the circuit due to the circuit functionality and/or delay values of the circuit components. We shall differentiate between false paths in combinational circuits and false paths in sequential circuits.
Reference: [9] <author> A. Saldanha, R. K. Brayton, and A. L. Sangiovanni-Vincentelli. </author> <title> Circuit structure relations to redundancy and delay: The KMS algorithm revisited. </title> <booktitle> In Proceedings of the Design Automation Conference, </booktitle> <pages> pages 245-248, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The problem of false paths in logic circuits has been studied extensively in recent years (e.g. [8], [5], [2], <ref> [9] </ref>). False path in the circuit is a path that is never exercised during the operation of the circuit due to the circuit functionality and/or delay values of the circuit components. We shall differentiate between false paths in combinational circuits and false paths in sequential circuits.
Reference: [10] <author> S. Yang and M. J. Ciesielski. </author> <title> Optimum and suboptimum algorithms for input encoding and its relationship to logic minimization. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 4-12, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: This 2-block partition is referred to as a dichotomy, and denoted as D i = (l i : r i ) <ref> [10] </ref>. The dichotomy (l i : r i ) implies that for all the symbols z i in l i , z i = 1 (or 0), while for all the symbols z i in r i , z i = 0 (or 1). <p> Table 1 summarizes the properties of different types of paths in the context of our approach. We formulate the FPF encoding problem as a dichotomy covering problem, encountered in the constrained encod ing <ref> [10] </ref>, [3]. We shall illustrate our approach with the machine example used earlier, Figure 1 (a). <p> false paths terminating at o i if and only if the encoding of the states of the machine satisfies all dichotomies in DS k i . 4.2 Encoding as a Dichotomy Covering Problem The removal of false paths on behavioral level can now be formulated as a dichotomy covering problem <ref> [10] </ref>, [3]. For each output with a potential false path we generate the corresponding set of dichotomies and include it in the final constraint set for the state code of the FSM. <p> Only 11 of the examples (shown in the table) were found to have potential false paths. The encoding was done using DIET <ref> [10] </ref>. The encoded circuits were optimized using the script.delay script and mapped to the lib2 library of SIS. The delay values for both encodings (original and FPF) are given in the table.
References-found: 10

