URL: http://www.cs.brown.edu/research/graphics/research/pub/papers/viz94-annotation.ps
Refering-URL: http://www.cs.brown.edu/research/graphics/research/pub/
Root-URL: http://www.cs.brown.edu
Email: loughlin@crl.dec.com jfh@cs.brown.edu  
Title: An Annotation System for 3D Fluid Flow Visualization  
Author: Maria M. Loughlin John F. Hughes 
Address: Box 1910 One Kendall Sq., Cambridge, MA 02139 Providence, RI 02812  
Affiliation: Cambridge Research Lab Department of Computer Science Digital Equipment Corporation Brown University,  
Abstract: Annotation is a key activity of data analysis. However, current data analysis systems focus almost exclusively on visualization. We propose a system which integrates annotations into a visualization system. Annotations are embedded in 3D data space, using the Post-it 1 metaphor. This embedding allows contextual-based information storage and retrieval, and facilitates information sharing in collaborative environments. We provide a traditional database filter and a Magic Lens 2 filter to create specialized views of the data. The system is customized for fluid flow applications, with features which allow users to store parameters of visualization tools and sketch 3D volumes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Bancroft, F. Merritt, T. Plessel, P. Kelaita, R. McCabe, and A. Globus. </author> <title> Fast: A multi-processed environment for visualization of computational fluid dynamics. </title> <booktitle> Proc. First IEEE Conference on Visualization, </booktitle> <pages> pages 14-27, </pages> <year> 1990. </year>
Reference-contexts: In the last two sections, we discuss possible future work and conclusions. 2 Background Scientific visualization systems provide little, if any, support for annotation. For example, the Application Visualization System (AVS) [15] and the Flow Analysis Software Toolkit (FAST) <ref> [1] </ref>, two software environments for visualizing scientific data, facilitate attachment of labels to static 2D images.
Reference: [2] <author> C. Barber, D. Dobkin, and H. Huhdanpaa. </author> <title> The quickhull algorithm for convex hull. </title> <type> Technical Report GCG53, </type> <institution> Geometry Center, U. Minnesota, </institution> <month> July </month> <year> 1993. </year>
Reference-contexts: We therefore allow users to associate an annotation with a volume of the data space, rather than a single point in the space. To specify a volume, the user positions "pegs" that define the region's extreme vertices. The convex hull of the pegs is computed using the quickhull algorithm <ref> [2] </ref> and is rendered in either wireframe or transparent mode. Vertices can be added, deleted and moved, and the volume redrawn repeatedly. Figure 2 shows a volume which has been defined in this way. This implementation provides a simple way to draw volumes.
Reference: [3] <author> J. Bertin. </author> <title> Graphics and Graphic Information Processing. </title> <publisher> Walter de Gruyter and Co., </publisher> <year> 1981. </year> <title> 3 IBM is a registered trademark of the International Business Machines Corporation. 4 NCR is a registered trademark of the NCR Corporation. 5 Sun is a registered trademark of Sun Microsystems, Inc. 6 HP is a registered trademark of the Hewlett-Packard Company. </title>
Reference-contexts: Guideline 2: Annotations must be powerful enough to capture information considered important by the user. There are different types of information. Tanimoto [14] distinguishes between data (raw figures and measurements), information (refined data which may answer the users' questions) and knowledge (information in context). Similarly, Bertin <ref> [3] </ref> considers information as a relationship which can exist between elements, subsets or sets. The broader the relationship, the higher the level of information. In our annotation system, we provide support for different levels of information in two ways.
Reference: [4] <author> E. Bier, M. Stone, K. Pier, W. Buxton, and T. DeRose. Toolglass and magic lenses: </author> <title> The see-through interface. </title> <booktitle> Proc. SIGGRAPH '93, </booktitle> <pages> pages 73-80, </pages> <year> 1993. </year>
Reference-contexts: First, a traditional database filter allows users to specify selection criteria (such as the annotation author or keyword) via a Motif panel. Markers of annotations that satisfy the search criteria are highlighted. A second filter uses the Magic Lens metaphor introduced by Bier et al. <ref> [4] </ref>. A Magic Lens filter is a rectangular frame, placed in front of the visualization, that appears as if it moves on a sheet of glass between the cursor and the display. The lens performs some function on the application objects behind it.
Reference: [5] <author> D. Conner, S. Snibbe, K. Herndon, D. Robbins, R. Zeleznik, and A. van Dam. </author> <title> Three-dimensional widgets. </title> <booktitle> Proc. Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 183-188, </pages> <year> 1992. </year>
Reference-contexts: In our system, annotation markers give visual feedback on the location of annotations, and marker geometry gives feedback on annotation content. Because the geometric data space of fluid flow applications has three dimensions, we considered design issues specific to 3D graphical user interfaces <ref> [5] </ref>. One issue is the complexity introduced by 3D viewing projections, visibility determination, etc. A second issue is that the degrees of freedom in the 3D world are not easily specified with common hardware input devices. A third issue is that a 3D interface can easily obscure itself.
Reference: [6] <author> J. Foley, A. van Dam, S. Feiner, and J. Hughes. </author> <booktitle> Computer Graphics Principles and Practice. Ad-dison Wesley, 2nd edition, </booktitle> <year> 1992. </year>
Reference-contexts: Guideline 3: The user interface (UI) of an annotation system will play a key role in determining its acceptance (or lack thereof) by scientists. We considered many established UI rules <ref> [6] </ref> and designed our annotation system accordingly. One rule states that a UI should allow users to work with minimal conscious attention to its tools. We achieve this goal by using a direct manipulation interface, that is, an interface in which the objects that can be manipulated are represented physically.
Reference: [7] <author> E. Francik, S. Rudman, D. Cooper, and S. Levine. </author> <title> Putting innovation to work: Adoption strategies for multimedia communication systems. </title> <journal> Communications of the ACM, </journal> <volume> 34(12) </volume> <pages> 53-63, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: The format of annotations has been expanded, but their use is still limited to presentation of information in a static environment. Document annotation is used as a means of communication in the Wang Laboratories multi-media communication system, Freestyle <ref> [7] </ref>. Freestyle's multimedia messages are based on images, including screen snapshots and hand-drawn sketches. Freestyle advances the concept of annotations as communicators, but does not address the issues of clutter and management of annotations in the environment.
Reference: [8] <author> R. Haimes and D. Darmofal. </author> <title> Visualization in computational fluid dynamics:a case study. </title> <booktitle> Proc. Second IEEE Conference on Visualization, </booktitle> <pages> pages 392-397, </pages> <year> 1991. </year>
Reference-contexts: CFD visualization tools allow a scientist to examine the characteristics of the data with 3D computer displays. Interaction with the visual representation is essential in the exploration and analysis of the data, and has three goals: feature identification, scanning, and probing <ref> [8] </ref>. Feature identification techniques help find flow features over the entire domain, and give the scientist a feel for the position of interesting parts of the flow volume.
Reference: [9] <author> K. </author> <title> Herndon. Interactive shadows. </title> <booktitle> UIST Proceedings, </booktitle> <pages> pages 1-6, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Using the mouse, a scientist can translate and rotate markers. He can also project interactive shadows of the marker on the planes defined by the principal axes <ref> [9] </ref>. Each shadow is constrained to move in the plane in which it lies. If a user moves a shadow, the marker moves in a parallel plane. This constrained translation helps to precisely position a marker. Markers can be highlighted in response to a filter request.
Reference: [10] <author> T. Meyer and N. Huang. </author> <title> Programming in flesh. </title> <type> Technical report, </type> <institution> Department of Computer Science, Brown University, </institution> <year> 1993. </year>
Reference-contexts: The annotation system was built as part of this visualization system. This provided a test-bed for techniques to integrate visualization and annotation functionality. 4.2 The Development Environment The annotation system was developed using C++ and FLESH, an object oriented animation and modeling scripting language <ref> [10] </ref>. The FLESH objects defined for the annotation system include annotation markers, lenses, and filters. Some of these FLESH classes have corresponding C++ classes, in which data is stored and compute-intensive operations performed.
Reference: [11] <author> R. Phillips. Mediaview, </author> <title> a general multimedia digital publication system. </title> <journal> Communications of the ACM, </journal> <volume> 34(7) </volume> <pages> 74-83, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Outside the scientific visualization domain, annotations have been integrated in different applications. MacDraw, a 2D paint program, introduced a notes feature, which allows static 2D annotations using the Post-it metaphor. Media View <ref> [11] </ref>, a multi-media publication system, allows annotations in all media components including text, line art, images, sound, video, and computer animations. The format of annotations has been expanded, but their use is still limited to presentation of information in a static environment.
Reference: [12] <author> S. Snibbe, K. Herndon, D. Robbins, D. Conner, and A. van Dam. </author> <title> Using deformations to explore 3d widget design. </title> <booktitle> Proc. SIGGRAPH '92, </booktitle> <pages> pages 351-352, </pages> <year> 1992. </year>
Reference-contexts: A second issue is that the degrees of freedom in the 3D world are not easily specified with common hardware input devices. A third issue is that a 3D interface can easily obscure itself. We use guidelines outlined by Snibbe et al. <ref> [12] </ref> to deal with these problems. For example, we provide shadows, constrained to move in a plane, to simplify positioning of annotation markers (see section 4.3.2). We provide feedback on the orientation of the data by optionally drawing the principal axes and planes.
Reference: [13] <author> R. Springmeyer, M. Blattner, and N. Max. </author> <title> A characterization of the scientific data analysis process. </title> <booktitle> Proc. Second IEEE Conference on V isu-alization, </booktitle> <pages> pages 351-352, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction In a study to characterize the data analysis process, Springmeyer et al. <ref> [13] </ref> observed scientists analyzing scientific data. They found that recording results and histories of analysis sessions is a key activity of data analysis. Two types of annotating were observed: * recording, or preserving contextual information throughout an investigation * describing, or capturing conclusions of the analy sis sessions.
Reference: [14] <author> S. </author> <title> Tanimoto. </title> <booktitle> The Elements of Artificial Intelligence. </booktitle> <publisher> Computer Science Press, </publisher> <year> 1990. </year>
Reference-contexts: Separating the annotation's content from the annotation marker in this way allows direct insertion of arbitrarily large annotations. Guideline 2: Annotations must be powerful enough to capture information considered important by the user. There are different types of information. Tanimoto <ref> [14] </ref> distinguishes between data (raw figures and measurements), information (refined data which may answer the users' questions) and knowledge (information in context). Similarly, Bertin [3] considers information as a relationship which can exist between elements, subsets or sets. The broader the relationship, the higher the level of information.
Reference: [15] <author> C. Upson and et al. </author> <title> The application visualization system: A computational environment for scientific visualization. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 9(4) </volume> <pages> 60-69, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: Section 4 details our implementation of annotation within a visualization system. In the last two sections, we discuss possible future work and conclusions. 2 Background Scientific visualization systems provide little, if any, support for annotation. For example, the Application Visualization System (AVS) <ref> [15] </ref> and the Flow Analysis Software Toolkit (FAST) [1], two software environments for visualizing scientific data, facilitate attachment of labels to static 2D images.
Reference: [16] <author> J. Verlinden, J. Bolter, and C. van der Mast. </author> <title> Voice annotation: Adding verbal information to virtual environments. </title> <booktitle> Proc. European Simulation Symposium, </booktitle> <pages> pages 60-69, </pages> <year> 1993. </year>
Reference-contexts: Freestyle's multimedia messages are based on images, including screen snapshots and hand-drawn sketches. Freestyle advances the concept of annotations as communicators, but does not address the issues of clutter and management of annotations in the environment. Verlinden et al. <ref> [16] </ref> developed an annotation system to explore communication in Virtual Reality (VR) environments. In general, annotation in immersive VR systems is restricted, as the user must interrupt the session to interact with objects in the real world, such as notebooks and computer monitors.
References-found: 16

