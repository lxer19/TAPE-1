URL: http://www.daimi.aau.dk/~bromille/Papers/bitprobe.ps
Refering-URL: http://www.daimi.aau.dk/~bromille/Papers/index.html
Root-URL: http://www.daimi.aau.dk
Email: E-mail: pbmiltersen@daimi.aau.dk  
Title: The bit probe complexity measure revisited  
Author: Peter Bro Miltersen 
Address: Ny Munkegade, Building 540, DK-8000 Aarhus C, Denmark.  
Affiliation: Aarhus University, Computer Science Department,  
Abstract: A static data structure problem consists of a set of data D, a set of queries Q and a function f with domain DfiQ. Given a space bound b, a (good) solution to the problem is an encoding e : D ! f0; 1g b , so that for any y, f(x; y) can be determined (quickly) by probing e(x). The worst case number of probes needed is C b (f), the bit probe complexity of f. We study the properties of the complexity measure C b (). 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> L. Adleman, </author> <title> Two theorems on random polynomial time, </title> <booktitle> 19th Symp. </booktitle> <institution> Found. of Comp. Sci. </institution> <year> (1978), </year> <pages> 75-83. </pages>
Reference-contexts: Then BP [h (n); g (m)] = ALL. Theorem 11. Let h; g be functions with h (i) i and h (g (i)) 2 i for all i and g (i) = !(log i). Then for any * &gt; 0. (BP <ref> [h (n); 1] </ref> " BP [n; g (m)]) BP [(1 *)h (n); (1 *)g (m)] 6= ; We see that the classes BP [h; g] form a very tight hierarchy.
Reference: 2. <author> M. Ajtai, </author> <title> A lower bound for finding predecessors in Yao's cell probe model, </title> <address> Com-binatorica 8 (1988) 235-247. </address>
Reference-contexts: can be found in constant time, and if (1 + *)g (m) probes are allowed, a non-redundant representation of the data is sufficient. 5 Lower bounds for explicitly defined functions How large lower bounds can be proven for explicitly defined functions with a small query set? Yao [13] and Ajtai <ref> [2] </ref> proved lower bounds in the cell probe model for various dictionary problems. These lower bounds are however quite small, compared to the lower bounds we know most problems have.
Reference: 3. <author> L. Babai, P. Frankl, J. Simon, </author> <title> Complexity classes in communication complexity theory, </title> <booktitle> Proc. 27th IEEE FOCS (1986) 337-347. </booktitle>
Reference-contexts: Note that this reduction is actually a slight variation of the rectangular reduction suggested for communication problems by Babai, Frankl and Simon <ref> [3] </ref>.
Reference: 4. <author> H. Chernoff, </author> <title> A measure of asymptotic efficiency for tests based on the sum of observations, </title> <journal> Ann. Math. Statist. </journal> <volume> 23 (1952), </volume> <pages> 493-509. </pages>
Reference: 5. <author> P. Elias, R.A. Flower, </author> <title> The complexity of some simple retrieval problems, </title> <journal> J. Ass. Comp. Mach. </journal> <volume> 22 (1975), </volume> <pages> 367-379. </pages>
Reference-contexts: 1 Introduction and preliminaries Elias and Flower <ref> [5] </ref> introduced the following model of retrieval problems: A set D, called the set of data, a set Q, called the set of queries and a set A, called the set of answers is given, along with a function f : D fi Q ! A. <p> These lower bounds are however quite small, compared to the lower bounds we know most problems have. The best known lower bound in the bit probe model appears to be the one derived by Elias and Flower <ref> [5] </ref>, showing in our notation that for the equality function ffi : Q fi Q ! f0; 1g with ffi (x; y) = 1 iff x = y has 2 C b (ffi)+1 C b (ffi) jQj, log jQj log b ).
Reference: 6. <author> T. Hagerup, C. Rub, </author> <title> A guided tour of Chernoff bounds, </title> <journal> Inform. Proces. Lett. </journal> <volume> 33 (1990), </volume> <pages> 305-308. </pages>
Reference: 7. <author> L. Lovasz, </author> <title> Communication complexity: A survey, in "Paths, Flows, and VLSI Layout", edited by B.H. Korte, </title> <publisher> Springer Verlag, </publisher> <address> Berlin New York (1990). </address>
Reference-contexts: A slightly different form of their lower bound is given as a corollary. For a function f : D fi Q ! f0; 1g, let C 2 (f ) be the (two-way) communication complexity of f (for definitions and a survey on communication complexity, see e.g. Lovasz <ref> [7] </ref>). Theorem 12. C b (f ) C 2 (f )=(dlog be + 1) Proof. Let an optimal static data structure for f be given. Let Alice be in pos-session of x 2 D and Bob in possession of y 2 Q.
Reference: 8. <author> K. Mehlhorn, </author> <title> E.M. Schmidt, Las Vegas is better than determinism in VLSI and distributed computing, </title> <booktitle> Proc. 14th ACM STOC (1982) 330-337. </booktitle>
Reference-contexts: After this, Bob knows f (x; y). Thus C 2 (f) (dlog be + 1)C b (f ) 2 Several interesting functions with jDj = jQj has linear communication complexity. A useful inequality for showing this is the rank lower bound by Mehlhorn and Schmidt <ref> [8] </ref>: Let M f be the jDj fi jQj matrix defined by M f ij = f (i; j). Then C 2 (f) dlog rank F (M f )e, where the rank of the matrix is taken over any field F . We thus get Corollary 13.
Reference: 9. <author> A.R. Meyer, L. Stockmeyer, </author> <title> The equivalence problem for regular expressions with squaring requires exponential space, </title> <booktitle> IEEE 13th Annual Symposium on Switching and Automata Theory (1972), </booktitle> <pages> 125-129. </pages>
Reference-contexts: For a natural example of this consider the following problem, equiv: Given a finite alphabet and two expressions r 1 ; r 2 over , (concatena tion), [ (union), fl (Kleene star) and 2 (squaring), tell whether they denote the same language. It is known <ref> [9] </ref> that equiv is EX PSPACE -complete in the usual sense. The domain of this problem has a natural factorization, i.e. we can consider it as a static data structure problem, where r 1 is the datum and r 2 the query.
Reference: 10. <author> P.B. Miltersen, </author> <title> On-line reevaluation of functions, </title> <institution> Aarhus University Tech. </institution> <note> Report DAIMI PB-380. </note>
Reference-contexts: We pose it as an open problem to find any such examples, and also non-trivial examples of P-completeness. 7 An application to dynamic problems Sairam, Vitter and Tamassia [11] proposed a complexity theory of dynamic problems, and defined the class incr-POLYLOGT IME . Miltersen <ref> [10] </ref> independently defined the same class under the name D. In both cases, the conjecture P 6= incr-POLYLOGT IME was made. We show a link between this question and the question considered in the previous section. Theorem 19.
Reference: 11. <author> S. Sairam, J.S. Vitter, R. Tamassia, </author> <title> A complexity theoretic approach to incremental computation, </title> <booktitle> these proceedings. </booktitle>
Reference-contexts: We do unfortunately not know any natural problems, complete for EX PSPACE with respect to static reductions. We pose it as an open problem to find any such examples, and also non-trivial examples of P-completeness. 7 An application to dynamic problems Sairam, Vitter and Tamassia <ref> [11] </ref> proposed a complexity theory of dynamic problems, and defined the class incr-POLYLOGT IME . Miltersen [10] independently defined the same class under the name D. In both cases, the conjecture P 6= incr-POLYLOGT IME was made.
Reference: 12. <author> A. C.-C. Yao, </author> <title> Some complexity questions related to distributive computing, </title> <booktitle> Proc. 11th ACM STOC (1979) 209-213. </booktitle>
Reference: 13. <author> A. C.-C. Yao, </author> <title> Should tables be sorted?, JACM 28 (1981), 615-628. This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: A complexity measure considered by Elias and Flower was the bit probe measure, measuring only the number of bitwise accesses to the data structure. Computation is for free. The bit probe measure was later generalized to the cell probe measure by Yao <ref> [13] </ref>, where memory cells, accessed in a single operation, may contain more than one bit. While these models do not necessarily provide realistic upper bounds, lower bounds derived in this model are certainly valid as lower bound for any realistic, sequential model of computation. <p> encoding, the answer can be found in constant time, and if (1 + *)g (m) probes are allowed, a non-redundant representation of the data is sufficient. 5 Lower bounds for explicitly defined functions How large lower bounds can be proven for explicitly defined functions with a small query set? Yao <ref> [13] </ref> and Ajtai [2] proved lower bounds in the cell probe model for various dictionary problems. These lower bounds are however quite small, compared to the lower bounds we know most problems have.
References-found: 13

