URL: http://www-icparc.doc.ic.ac.uk/papers/ecai98.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Title: Minimal Perturbation in Dynamic Scheduling  
Author: Hani El Sakkout, Thomas Richards, and Mark Wallace 
Abstract: This paper describes an algorithm, unimodular probing, conceived to optimally reconfigure schedules in response to a changing environment. In the problems studied, resources may become unavailable, and scheduled activities may change. The total shift in the start and end times of activities should be kept to a minimum. This requirement is captured in terms of a linear optimization function over linear constraints. However, the disjunctive nature of many scheduling problems impedes traditional mathematical programming approaches. The unimodular probing algorithm interleaves constraint programming and linear programming. The linear programming solver is applied to a dynamically controlled subset of the problem constraints, to guarantee that the values returned are discrete. Using a repair strategy, these values are naturally integrated into the constraint programming search. We explore why the algorithm is effective and discuss its applicability to a wider class of problems. It appears that other problems comprising disjunctive constraints and a linear optimization function may be suited to the algorithm. Unimodular probing outperforms alternative algorithms on randomly generated benchmarks, and on a major airline application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Beringer and B. de Backer, </author> <title> `Satisfiability of boolean formulas over linear constraints', </title> <booktitle> in IJCAI-93, </booktitle> <pages> pp. 296301, </pages> <year> (1993). </year>
Reference-contexts: El Sakkout, T. Richards, and M. Wallace Table 2. CPU Seconds versus No. of Activities No. Activities UP Avg CPU/sec MIP Avg CPU/sec 10 2 2 50 247 398 6 RELATED WORK Many integrations of CP and LP are in existence <ref> [1, 9] </ref>. A general framework for the integration of LP with logical methods is presented in [8]. Unimodular probing may be viewed as a restriction of these frameworks since LP is limited to easy constraints. This is a natural progression from work on adaptive propagation [6].
Reference: [2] <author> R. Dechter and A. Dechter, </author> <title> `Belief maintenance in dynamic constraint networks', </title> <booktitle> in Proc. of AAAI-88, </booktitle> <pages> pp. 3742, </pages> <year> (1988). </year>
Reference-contexts: A dynamic CSP (DCSP) is a sequence of CSPs, where each one differs from its predecessor by constraint additions or deletions <ref> [2] </ref>. Consider the case of a CSP fi i about to be transformed into a new CSP fi i+1 .
Reference: [3] <author> A. El-Kholy and B. Richards, </author> <title> `Temporal and resource reasoning in planning: The parcPLAN approach', </title> <booktitle> in Proc. of ECAI-96, </booktitle> <pages> pp. 614618, </pages> <year> (1996). </year>
Reference-contexts: To minimize disruption, the new schedule should differ minimally from the old one. Effective solutions to this NP-hard problem are theoretically and commercially significant. Resource-constrained scheduling problems give rise to the NP-complete resource feasibility problem of planning (RFP) <ref> [3] </ref>. A predecessor of our algorithm is a constraint satisfaction algorithm proposed to solve the RFP. We are currently exploring the utility of using unimodular probing to guide the introduction of actions in an incremental planner. <p> In the resource feasibility problem (RFP), the goal is to fix the start and end times of activities such that resource capacities are not exceeded. For simplicity, we restrict here the general RFP model described in <ref> [3] </ref> such that there is only one resource type, and activities require only one resource. However, unimodular probing extends naturally to problems with multiple resource types [5]. c fl 1998 H. El Sakkout, T. Richards, and M. <p> In the CP community, the idea of using a probe assignment, or a set of temporary values to improve the effectiveness of backtrack search is increasingly utilized [13, 11]. The constraint model and a heuristic for solving the RFP were described in <ref> [3, 12] </ref>. [14] gives a scheduling strategy that bears similarities to the RFP unimodular probing algorithm; it resolves bottlenecks using probe assignments that are optimal with respect to criteria such as tardiness and inventory costs.
Reference: [4] <author> H. El Sakkout, T. Richards, and M. Wallace, </author> <title> `Unimodular probing for minimal perturbance in dynamic resource feasibility problems', </title> <booktitle> in Proc. of CP97 workshop on Dynamic Constraint Satisfaction, </booktitle> <year> (1997). </year>
Reference-contexts: The RFP algorithm described here differs because it minimizes perturbation, deploys a temporally consistent probe assignment, and searches a richer scheduling problem with variable durations and flexible temporal constraints. Finally, an early version of this paper was presented in <ref> [4] </ref> and a deeper analysis and empirical study is given in [5]. 7 DISCUSSION The results of Sect. 5 stated the algorithm proposed is capable of proving optimality for many problems where a CP-based algorithm fails.
Reference: [5] <author> H. El Sakkout and M. Wallace, </author> <title> `A strategy for minimal temporal perturbation in dynamic scheduling', Constraints, </title> <note> (1998). Submitted April. </note>
Reference-contexts: For simplicity, we restrict here the general RFP model described in [3] such that there is only one resource type, and activities require only one resource. However, unimodular probing extends naturally to problems with multiple resource types <ref> [5] </ref>. c fl 1998 H. El Sakkout, T. Richards, and M. Wallace ECAI 98. 13th European Conference on Artificial Intelligence Edited by Henri Prade Published in 1998 by John Wiley & Sons, Ltd. <p> Under certain conditions, this can cause the local consistency procedure to infer further distance constraints. Unimodular probing handles dynamic scheduling problems in a uniform manner using the above contention point strategy; temporal inconsistencies (generated by imposing new temporal constraints) are transformed into resource contention <ref> [5] </ref>. Resource utilization problems are thus representative of other dynamic scheduling prob lems since they introduce resource contention directly. 4 UNIMODULAR PROBING The resource utilization problem shows up the deficiencies of constraint programming (CP) and mathematical programming. <p> Finally, an early version of this paper was presented in [4] and a deeper analysis and empirical study is given in <ref> [5] </ref>. 7 DISCUSSION The results of Sect. 5 stated the algorithm proposed is capable of proving optimality for many problems where a CP-based algorithm fails. The dramatic reduction in the number of LP solver calls by unimodular probing as opposed to MIP are also encouraging.
Reference: [6] <author> H. El Sakkout, M. Wallace, and B. Richards, </author> <title> `An instance of adaptive constraint propagation', </title> <booktitle> in Proc. of CP96, </booktitle> <pages> pp. 164178. </pages> <publisher> Springer Ver-lag, </publisher> <year> (1996). </year>
Reference-contexts: A general framework for the integration of LP with logical methods is presented in [8]. Unimodular probing may be viewed as a restriction of these frameworks since LP is limited to easy constraints. This is a natural progression from work on adaptive propagation <ref> [6] </ref>. By avoiding rounding or semantically weak interpretations of non-integer LP solutions in discrete problems, the restriction maintains algorithm soundness and completeness, and simplifies the interface.
Reference: [7] <author> R. Garfinkel and G. Nemhauser, </author> <title> Integer Programming, </title> <publisher> John Wiley & Sons, </publisher> <year> 1972. </year>
Reference-contexts: By contrast with previous algorithms combining CP with LP, the algorithm passes only a restricted subset of the linear constraints to the LP solver. This is to ensure that the solver Primal or Dual Simplex works on constraints that have a property known as total unimodu-larity (TU) <ref> [7] </ref>. As detailed in Sect. 4.1 this property guarantees that the values returned by the LP algorithm are discrete. Instead of returning consistent solutions to a relaxed, non-discrete version of the discrete problem, LP is made to return values that are discrete but only partially consistent. <p> The unary (bounding) constraints are handled separately, and do not violate TU when the bounds are integer. The nec essary conditions for this property to hold in the matrix are not given here, but a more practical set of sufficient conditions are relayed <ref> [7] </ref>. 2 For example, the aircraft utilization problem driving our work required flights to be fixed with a 5 minute resolution. Rounding non-integer LP solutions can lead to inconsistency or sub-optimality. Planning and Scheduling 505 H. El Sakkout, T. Richards, and M.
Reference: [8] <author> J. Hooker and M. Osorio, </author> <title> `Mixed logical/linear programming', </title> <note> Discrete Applied Mathematics (to appear), </note> <year> (1998). </year>
Reference-contexts: CPU Seconds versus No. of Activities No. Activities UP Avg CPU/sec MIP Avg CPU/sec 10 2 2 50 247 398 6 RELATED WORK Many integrations of CP and LP are in existence [1, 9]. A general framework for the integration of LP with logical methods is presented in <ref> [8] </ref>. Unimodular probing may be viewed as a restriction of these frameworks since LP is limited to easy constraints. This is a natural progression from work on adaptive propagation [6].
Reference: [9] <author> J. Jaffar and J.-L. Lassez, </author> <title> `Constraint logic programming', </title> <booktitle> in Proc. of the 14th ACM Symp. on Princ. of Prog. Langs., </booktitle> <pages> pp. 111119, </pages> <year> (1987). </year>
Reference-contexts: El Sakkout, T. Richards, and M. Wallace Table 2. CPU Seconds versus No. of Activities No. Activities UP Avg CPU/sec MIP Avg CPU/sec 10 2 2 50 247 398 6 RELATED WORK Many integrations of CP and LP are in existence <ref> [1, 9] </ref>. A general framework for the integration of LP with logical methods is presented in [8]. Unimodular probing may be viewed as a restriction of these frameworks since LP is limited to easy constraints. This is a natural progression from work on adaptive propagation [6].
Reference: [10] <author> O. Lhomme, </author> <title> `Consistency techniques for numeric csps', </title> <booktitle> in Proc. of IJCAI-93, </booktitle> <pages> pp. 232238, </pages> <year> (1993). </year>
Reference-contexts: Inductive Step: If E has TU then E [ fd x x c; d x c xg has TU, where d x is unconstrained in E. 4.3.2 The local consistency and the search heuristics The algorithm applies arc-B consistency propagation on the problem's constraints <ref> [10] </ref>. An additional form of lookahead is applied after each decision; a minimum resource usage profile is built for affected portions of the schedule. Backtracking is initiated when the minimal usage exceeds the resource bound. Resource contention constraints are ordered according to the degree to which they are violated.
Reference: [11] <author> S. Minton, M. Johnston, A. Philips, and P. Laird, </author> <title> `Minimizing conflicts: a heuristic repair method for constraint satisfaction and scheduling problems', </title> <journal> Artificial Intelligence, </journal> <volume> 58, 161205, </volume> <year> (1992). </year>
Reference-contexts: In the CP community, the idea of using a probe assignment, or a set of temporary values to improve the effectiveness of backtrack search is increasingly utilized <ref> [13, 11] </ref>. The constraint model and a heuristic for solving the RFP were described in [3, 12]. [14] gives a scheduling strategy that bears similarities to the RFP unimodular probing algorithm; it resolves bottlenecks using probe assignments that are optimal with respect to criteria such as tardiness and inventory costs.
Reference: [12] <author> D. Pothos, </author> <title> `A constraint-based approach to the british airways schedule re-timing problem', </title> <type> Technical Report 97/04-01, </type> <institution> IC-Parc, </institution> <year> (1997). </year>
Reference-contexts: This approach increases the chances of finding a good solution early. The heuristics and lookahead check are based on an earlier algorithm for solving the RFP <ref> [12] </ref>. 4.3.3 Extending the TU set Since search decisions are made through the imposition of a new temporal distance constraint, that means at every search node a at least one new temporal constraint preserving TU is added to the set. <p> Details of these and other benchmarks have been made available on the Internet for future comparisons. 4 Unimodular probing is compared with two algorithms. The first is an extension of a pure CP algorithm detailed in <ref> [12] </ref>. This algorithm, designated CP0, conducts the search in two search phases. In phase 1, CP0 reduces resource conflict by forcing apart temporal variables until resource conflicts are no longer possible. <p> In the CP community, the idea of using a probe assignment, or a set of temporary values to improve the effectiveness of backtrack search is increasingly utilized [13, 11]. The constraint model and a heuristic for solving the RFP were described in <ref> [3, 12] </ref>. [14] gives a scheduling strategy that bears similarities to the RFP unimodular probing algorithm; it resolves bottlenecks using probe assignments that are optimal with respect to criteria such as tardiness and inventory costs.
Reference: [13] <author> P. Purdom, Jr. and G. </author> <title> Haven, `Probe order backtracking', </title> <journal> Siam Journal of Computing, </journal> <volume> 26, 456483, </volume> <year> (1997). </year>
Reference-contexts: In the CP community, the idea of using a probe assignment, or a set of temporary values to improve the effectiveness of backtrack search is increasingly utilized <ref> [13, 11] </ref>. The constraint model and a heuristic for solving the RFP were described in [3, 12]. [14] gives a scheduling strategy that bears similarities to the RFP unimodular probing algorithm; it resolves bottlenecks using probe assignments that are optimal with respect to criteria such as tardiness and inventory costs.
Reference: [14] <author> N. Sadeh, </author> <title> `Micro-opportunistic scheduling: The micro-boss factory scheduler', in Intelligent Scheduling, </title> <editor> eds., M. Zweben and M. Fox, </editor> <volume> chapter 4, 99136, </volume> <publisher> Morgan Kaufman, </publisher> <year> (1994). </year> <title> Planning and Scheduling 508 H. </title> <editor> El Sakkout, T. Richards, and M. </editor> <publisher> Wallace </publisher>
Reference-contexts: In the CP community, the idea of using a probe assignment, or a set of temporary values to improve the effectiveness of backtrack search is increasingly utilized [13, 11]. The constraint model and a heuristic for solving the RFP were described in [3, 12]. <ref> [14] </ref> gives a scheduling strategy that bears similarities to the RFP unimodular probing algorithm; it resolves bottlenecks using probe assignments that are optimal with respect to criteria such as tardiness and inventory costs.
References-found: 14

