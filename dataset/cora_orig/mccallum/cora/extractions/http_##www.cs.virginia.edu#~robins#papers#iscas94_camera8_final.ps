URL: http://www.cs.virginia.edu/~robins/papers/iscas94_camera8_final.ps
Refering-URL: http://www.cs.virginia.edu/~robins/publications.html
Root-URL: http://www.cs.virginia.edu
Title: Dynamically-Wiresized Elmore-Based Routing Constructions  
Author: Todd D. Hodes, Bernard A. McCoy, and Gabriel Robins 
Address: Charlottesville, VA 22903-2442  
Affiliation: Department of Computer Science, University of Virginia,  
Abstract: We analyze the impact of wiresizing on the performance of Elmore-based routing constructions. Whereas previous wiresizing schemes are static (i.e., they wiresize an existing topology), we introduce a new dynamic wiresizing technique, which uses wire-sizing considerations to drive the routing construction itself. Simulations show that dynamic wiresiz-ing affords superior performance over static wiresiz-ing, and also avoids topological degeneracies. Moreover, dynamically-wiresized Elmore-based routing constructions significantly outperform all previous methods (including A-Trees) in term of maximum source-sink signal delay, affording up to 73% average SPICE delay improvement over traditional Steiner routing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, T. C. Hu, J. H. Huang, and A. B. Kahng, </author> <title> A Direct Combination of the Prim and Dijk-stra Constructions for Improved Performance-Driven Global Routing, </title> <type> Tech. Rep. </type> <institution> CSD-TR-920051, Computer Science Department, UCLA, </institution> <year> 1992. </year>
Reference-contexts: The cost-radius tradeoff may also be viewed as one between competing minimum spanning tree (MST) (or minimum-cost Steiner tree) and shortest-path tree (SPT) constructions <ref> [1] </ref>. Along similar lines, [7] have recently proposed the use of rectilinear Steiner arborescences [17] (or A-Trees), and use wiresizing to minimize signal delay.
Reference: [2] <author> K. D. Boese, A. B. Kahng, B. A. McCoy, and G. Robins, </author> <title> Fidelity and Near-Optimality of Elmore-Based Routing Constructions, </title> <booktitle> in Proc. IEEE Intl. Conf. Computer Design, </booktitle> <address> Cambridge, MA, </address> <month> October </month> <year> 1993, </year> <pages> pp. 81-84. </pages>
Reference-contexts: Not only are these constructions adaptable to the prevailing technology parameters, but they were found to be near-optimal with respect to Elmore delay for a wide range of technology parameters <ref> [2] </ref>. Moreover, it was shown that Elmore delay has high fidelity to physical (SPICE-computed) delay over a range of IC technologies, i.e. near-optimal Elmore delay implies near-optimal SPICE delay [3]. In this paper, we analyze the impact of wiresiz-ing on the performance of Elmore-based routing constructions. <p> However, the computation times required by SPICE are prohibitive for routing tree construction, and therefore more efficient delay estimators are needed. As recently shown by Boese, Kahng, McCoy, and Robins <ref> [2] </ref>, both the fidelity and accuracy of Elmore's distributed RC delay approximation are surprisingly high with respect to more complex delay estimators, such as the "Two-Pole" distributed RCL simulator of [20], as well as the SPICE circuit simulator [14]. We therefore use the Elmore formula to guide our routing constructions.
Reference: [3] <author> K. D. Boese, A. B. Kahng, B. A. McCoy, and G. Robins, </author> <title> Towards Optimal Routing Trees, </title> <booktitle> in Proc. ACM/SIGDA Physical Design Workshop, </booktitle> <address> Lake Arrowhead, CA, </address> <month> April </month> <year> 1993, </year> <pages> pp. 44-51. </pages>
Reference-contexts: Moreover, it was shown that Elmore delay has high fidelity to physical (SPICE-computed) delay over a range of IC technologies, i.e. near-optimal Elmore delay implies near-optimal SPICE delay <ref> [3] </ref>. In this paper, we analyze the impact of wiresiz-ing on the performance of Elmore-based routing constructions.
Reference: [4] <author> K. D. Boese, A. B. Kahng, and G. Robins, </author> <title> High-Performance Routing Trees With Identified Critical Sinks, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> Dallas, </address> <month> June </month> <year> 1993, </year> <pages> pp. 182-187. </pages>
Reference-contexts: To overcome these flaws, Boese, Kahng and Robins <ref> [4] </ref> have recently developed a construction which greedily optimizes the Elmore delay formula directly to produce low-delay routing trees. Not only are these constructions adaptable to the prevailing technology parameters, but they were found to be near-optimal with respect to Elmore delay for a wide range of technology parameters [2]. <p> With this in mind, we give a dynamic wiresizing algorithm that hybridizes the routing topology construction with the wiresizing process. Our new construction combines the Elmore routing tree method of <ref> [4] </ref> with the greedy wiresizing method above. Following [4], our method is analogous to Prim's minimum spanning tree construction [16]: starting with a degenerate tree initially consisting of only the source pin, we grow the tree at each step by finding a new pin to connect to the tree, as to <p> With this in mind, we give a dynamic wiresizing algorithm that hybridizes the routing topology construction with the wiresizing process. Our new construction combines the Elmore routing tree method of <ref> [4] </ref> with the greedy wiresizing method above. Following [4], our method is analogous to Prim's minimum spanning tree construction [16]: starting with a degenerate tree initially consisting of only the source pin, we grow the tree at each step by finding a new pin to connect to the tree, as to minimize the Elmore delay in the wiresized current <p> We have compared it to: (i) the best-performing Iterated 1-Steiner (I1S) construction of Kahng and Robins [12]; (ii) the SERT construction of <ref> [4] </ref> (which is equivalent to DWSERT without the wiresizing); and (iii) the arborescence-based A-Tree method of [7], as well as the statically wiresized version of these (WI1S, WSERT, and WA-Tree, respectively).
Reference: [5] <author> J. Cohoon and J. Randall, </author> <title> Critical Net Routing, </title> <booktitle> in Proc. IEEE Intl. Conf. Computer Design, </booktitle> <address> Cambridge, MA, </address> <month> October </month> <year> 1991, </year> <pages> pp. 174-177. </pages>
Reference-contexts: The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] [11] [12] [13] [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous <ref> [5] </ref>. A general tradeoff formulation was given in [6], where both the cost and radius of the routing construction are guaranteed to simultaneously be within constant factors of optimal.
Reference: [6] <author> J. Cong, A. B. Kahng, G. Robins, M. Sar-rafzadeh, and C. K. Wong, </author> <title> Provably Good Performance-Driven Global Routing, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. 739-752. </pages>
Reference-contexts: Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] [11] [12] [13] [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5]. A general tradeoff formulation was given in <ref> [6] </ref>, where both the cost and radius of the routing construction are guaranteed to simultaneously be within constant factors of optimal. The cost-radius tradeoff may also be viewed as one between competing minimum spanning tree (MST) (or minimum-cost Steiner tree) and shortest-path tree (SPT) constructions [1].
Reference: [7] <author> J. Cong, K. S. Leung, and D. Zhou, </author> <title> Performance-Driven Interconnect Design Based on Distributed RC Delay Model, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> Dallas, </address> <month> June </month> <year> 1993, </year> <pages> pp. 606-611. </pages>
Reference-contexts: The cost-radius tradeoff may also be viewed as one between competing minimum spanning tree (MST) (or minimum-cost Steiner tree) and shortest-path tree (SPT) constructions [1]. Along similar lines, <ref> [7] </ref> have recently proposed the use of rectilinear Steiner arborescences [17] (or A-Trees), and use wiresizing to minimize signal delay. <p> S and construct a routing tree T = (N [S; E), E (N [S)fi (N [S), with each e 2 E having weight w (e) 2 W , such that t (T ) = k i=1 is minimized. 3 Dynamic Wiresizing Given a fixed topology, the greedy wiresizing scheme of <ref> [7] </ref> recursively wiresizes each subtree; as long as overall maximum tree delay improvement is possible, each edge connecting the root to a subtree is widened. This static greedy wiresizing (SGW) scheme is formalized in Figure 1; it generalizes the greedy wiresizing scheme of [7], in that it allows for an arbitrary <p> fixed topology, the greedy wiresizing scheme of <ref> [7] </ref> recursively wiresizes each subtree; as long as overall maximum tree delay improvement is possible, each edge connecting the root to a subtree is widened. This static greedy wiresizing (SGW) scheme is formalized in Figure 1; it generalizes the greedy wiresizing scheme of [7], in that it allows for an arbitrary delay calculation to be used. Note that this method is static, meaning that the interconnect topology is determined before wiresizing commences and is not allowed to change during the wiresizing process. <p> the subtree routed at n i Repeat delay old = t (T ) Increase w r to w r+1 of edge e Until delay old &lt; t (T ) Decrease w r to w r1 of edge e While static greedy wiresizing provides a near-optimal wiresizing for a given topology <ref> [7] </ref>, such a wiresizing process is largely constrained by that fixed input topology. Ideally we would like to compute the optimal combination of routing topology and wiresiz-ing; unfortunately, this is not computationally feasible. <p> Ideally we would like to compute the optimal combination of routing topology and wiresiz-ing; unfortunately, this is not computationally feasible. On the other hand, we do not want to completely dissociate the topology construction from the wiresiz-ing issues (as was done in <ref> [7] </ref>), since such a strategy will not benefit from a possible synergy between these. With this in mind, we give a dynamic wiresizing algorithm that hybridizes the routing topology construction with the wiresizing process. <p> We have compared it to: (i) the best-performing Iterated 1-Steiner (I1S) construction of Kahng and Robins [12]; (ii) the SERT construction of [4] (which is equivalent to DWSERT without the wiresizing); and (iii) the arborescence-based A-Tree method of <ref> [7] </ref>, as well as the statically wiresized version of these (WI1S, WSERT, and WA-Tree, respectively). We tested these algorithms on 50 random nets of up to 25 pins, uniformly distributed in the 100000 fi 100000 grid, with the source being one of the pins chosen at random.
Reference: [8] <author> W. E. Donath, R. J. Norman, B. K. Agrawal, S. E. Bello, S. Y. Han, J. M. Kurtzberg, P. Lowy, and R. I. McMillan, </author> <title> Timing Driven Placement Using Complete Path Delays, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1990, </year> <pages> pp. 84-89. </pages>
Reference-contexts: 1 Introduction Due to the scaling of VLSI technology, interconnect delay has recently become a dominant concern in the design of complex, high-performance circuits <ref> [8] </ref> [19]. The typical goal of performance-driven routing is to minimize average or maximum source-sink delay.
Reference: [9] <author> A. E. Dunlop, V. D. Agrawal, D. Deutsch, M. F. Jukl, P. Kozak, and M. Wiesel, </author> <title> Chip Layout Optimization Using Critical Path Weighting, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1984, </year> <pages> pp. 133-136. </pages>
Reference-contexts: The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing <ref> [9] </ref> [11] [12] [13] [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5].
Reference: [10] <author> W. C. </author> <title> Elmore, The Transient Response of Damped Linear Networks with Particular Regard to WideBand Amplifiers, </title> <journal> J. Appl. Phys., </journal> <volume> 19 (1948), </volume> <pages> pp. 55-63. </pages>
Reference-contexts: Our goal is to construct a routing which spans the net and which minimizes the maximum source-sink delay. While it is known that delay in a routing tree is a non-linear phenomenon <ref> [10] </ref>, many previous methods for routing tree construction have either implicitly or explicitly assumed that delay is proportional to source-sink pathlength. <p> Thus, we strive to directly optimize a more realistic delay measure, such as the Elmore delay <ref> [10] </ref> [18]. Given a routing tree T rooted at n 0 , let e i denote the edge from n i to its parent. The resistance and capacitance of edge e i are denoted by r e i and c e i , respectively.
Reference: [11] <author> M. A. B. Jackson, E. S. Kuh, and M. Marek-Sadowska, </author> <title> Timing-Driven Routing for Building Block Layout, </title> <booktitle> in Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <year> 1987, </year> <pages> pp. 518-519. </pages>
Reference-contexts: The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] <ref> [11] </ref> [12] [13] [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5].
Reference: [12] <author> A. B. Kahng and G. Robins, </author> <title> A New Class of Iterative Steiner Tree Heuristics With Good Performance, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. 893-902. </pages>
Reference-contexts: The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] [11] <ref> [12] </ref> [13] [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5]. A general tradeoff formulation was given in [6], where both the cost and radius of the routing construction are guaranteed to simultaneously be within constant factors of optimal. <p> We have compared it to: (i) the best-performing Iterated 1-Steiner (I1S) construction of Kahng and Robins <ref> [12] </ref>; (ii) the SERT construction of [4] (which is equivalent to DWSERT without the wiresizing); and (iii) the arborescence-based A-Tree method of [7], as well as the statically wiresized version of these (WI1S, WSERT, and WA-Tree, respectively).
Reference: [13] <author> A. B. Kahng and G. Robins, </author> <title> On Performance Bounds for a Class of Rectilinear Steiner Tree Heuristics in Arbitrary Dimension, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. 1462-1465. </pages>
Reference-contexts: The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] [11] [12] <ref> [13] </ref> [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5]. A general tradeoff formulation was given in [6], where both the cost and radius of the routing construction are guaranteed to simultaneously be within constant factors of optimal.
Reference: [14] <author> L. Nagel, </author> <title> SPICE2: A Computer Program to Simulate Semiconductor Circuits, </title> <month> May </month> <year> 1975. </year>
Reference-contexts: Ideally, a routing algorithm will compute and optimize signal delays according to a detailed circuit simulation, such as that provided by SPICE <ref> [14] </ref>. However, the computation times required by SPICE are prohibitive for routing tree construction, and therefore more efficient delay estimators are needed. <p> As recently shown by Boese, Kahng, McCoy, and Robins [2], both the fidelity and accuracy of Elmore's distributed RC delay approximation are surprisingly high with respect to more complex delay estimators, such as the "Two-Pole" distributed RCL simulator of [20], as well as the SPICE circuit simulator <ref> [14] </ref>. We therefore use the Elmore formula to guide our routing constructions. We begin with some definitions and notation.
Reference: [15] <author> S. Prasitjutrakul and W. J. Kubitz, </author> <title> A Timing-Driven Global Router for Custom Chip Design, </title> <booktitle> in Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <address> Santa Clara, CA, </address> <month> November </month> <year> 1990, </year> <pages> pp. 48-51. </pages>
Reference-contexts: The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] [11] [12] [13] <ref> [15] </ref>, but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5]. A general tradeoff formulation was given in [6], where both the cost and radius of the routing construction are guaranteed to simultaneously be within constant factors of optimal.
Reference: [16] <author> A. Prim, </author> <title> Shortest Connecting Networks and Some Generalizations, </title> <institution> Bell Syst. Tech J., </institution> <month> 36 </month> <year> (1957), </year> <pages> pp. 1389-1401. </pages>
Reference-contexts: With this in mind, we give a dynamic wiresizing algorithm that hybridizes the routing topology construction with the wiresizing process. Our new construction combines the Elmore routing tree method of [4] with the greedy wiresizing method above. Following [4], our method is analogous to Prim's minimum spanning tree construction <ref> [16] </ref>: starting with a degenerate tree initially consisting of only the source pin, we grow the tree at each step by finding a new pin to connect to the tree, as to minimize the Elmore delay in the wiresized current topology.
Reference: [17] <author> S. K. Rao, P. Sadayappan, F. K. Hwang, and P. W. Shor, </author> <title> The Rectilinear Steiner Arborescence Problem, </title> <journal> Algorithmica, </journal> <year> (1992), </year> <pages> pp. 277-288. </pages>
Reference-contexts: The cost-radius tradeoff may also be viewed as one between competing minimum spanning tree (MST) (or minimum-cost Steiner tree) and shortest-path tree (SPT) constructions [1]. Along similar lines, [7] have recently proposed the use of rectilinear Steiner arborescences <ref> [17] </ref> (or A-Trees), and use wiresizing to minimize signal delay.
Reference: [18] <author> J. Rubinstein, P. Penfield, and M. A. Horowitz, </author> <title> Signal Delay in RC Tree Networks, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 2 (1983), </volume> <pages> pp. 202-211. </pages>
Reference-contexts: Thus, we strive to directly optimize a more realistic delay measure, such as the Elmore delay [10] <ref> [18] </ref>. Given a routing tree T rooted at n 0 , let e i denote the edge from n i to its parent. The resistance and capacitance of edge e i are denoted by r e i and c e i , respectively. <p> is: t ED (n i ) = r d C n 0 + e j 2path (n 0 ;n i ) r e j (c e j =2 + C j ) Elmore delay has a compact definition and can be quickly evaluated at all sinks in O (k) time <ref> [18] </ref>, which enables an efficient implementation. Wiresizing (i.e., increasing the widths of certain wires) can improve signal propagation delay by trading-off capacitance for resistance: when a wire width is increased, additional capacitance is induced, but some overall source-sink resistances may decrease.
Reference: [19] <author> S. Sutanthavibul and E. Shragowitz, </author> <title> An Adaptive Timing-Driven Layout for High Speed VLSI, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1990, </year> <pages> pp. 90-95. </pages>
Reference-contexts: 1 Introduction Due to the scaling of VLSI technology, interconnect delay has recently become a dominant concern in the design of complex, high-performance circuits [8] <ref> [19] </ref>. The typical goal of performance-driven routing is to minimize average or maximum source-sink delay. Much early work implicitly equated optimal routing with minimum-cost Steiner routing [9] [11] [12] [13] [15], but recently it became increasingly apparent that for leading-edge technologies, delay minimization and wirelength minimization are not synonymous [5].
Reference: [20] <author> D. Zhou, S. Su, F. Tsui, D. S. Gao, and J. Cong, </author> <title> Analysis of Trees of Transmission Lines, </title> <type> Tech. Rep. </type> <institution> CSD-TR-920010, Computer Science Department, UCLA, </institution> <year> 1992. </year>
Reference-contexts: As recently shown by Boese, Kahng, McCoy, and Robins [2], both the fidelity and accuracy of Elmore's distributed RC delay approximation are surprisingly high with respect to more complex delay estimators, such as the "Two-Pole" distributed RCL simulator of <ref> [20] </ref>, as well as the SPICE circuit simulator [14]. We therefore use the Elmore formula to guide our routing constructions. We begin with some definitions and notation.
References-found: 20

