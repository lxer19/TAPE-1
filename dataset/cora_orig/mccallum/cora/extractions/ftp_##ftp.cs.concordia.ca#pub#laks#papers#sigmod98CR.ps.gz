URL: ftp://ftp.cs.concordia.ca/pub/laks/papers/sigmod98CR.ps.gz
Refering-URL: http://www.cs.concordia.ca/~faculty/laks/papers.html
Root-URL: http://www.cs.concordia.ca
Email: rng@cs.ubc.ca  laks@cs.concordia.ca  han@cs.sfu.ca  cpang@cs.ubc.ca  
Title: Exploratory Mining and Pruning Optimizations of Constrained Associations Rules  
Author: Raymond T. Ng Laks V.S. Lakshmanan Jiawei Han Alex Pang 
Affiliation: University of British Columbia  Concordia University  Simon Fraser University  University of British Columbia  
Abstract: From the standpoint of supporting human-centered discovery of knowledge, the present-day model of mining association rules suffers from the following serious shortcomings: (i) lack of user exploration and control, (ii) lack of focus, and (iii) rigid notion of relationships. In effect, this model functions as a black-box, admitting little user interaction in between. We propose, in this paper, an architecture that opens up the black-box, and supports constraint-based, human-centered exploratory mining of associations. The foundation of this architecture is a rich set of constraint constructs, including domain, class, and SQL-style aggregate constraints, which enable users to clearly specify what associations are to be mined. We propose constrained association queries as a means of specifying the constraints to be satisfied by the antecedent and consequent of a mined association. In this paper, we mainly focus on the technical challenges in guaranteeing a level of performance that is commensurate with the selectivities of the constraints in an association query. To this end, we introduce and analyze two properties of constraints that are critical to pruning: anti-monotonicity and succinctness. We then develop characterizations of various constraints into four categories, according to these properties. Finally, we describe a mining algorithm called CAP, which achieves a maximized degree of pruning for all categories of constraints. Experimental results indicate that CAP can run much faster, in some cases as much as 80 times, than several basic algorithms. This demonstrates how important the succinctness and anti-monotonicity properties are, in delivering the performance guarantee. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal, T. Imielinski and A. Swami. </author> <title> Mining association rules between sets of items in large databases. </title> <booktitle> SIG-MOD 93, </booktitle> <pages> pp 207-216. </pages>
Reference-contexts: 1 Introduction Since its introduction <ref> [1] </ref>, the problem of mining association rules from large databases has been the subject of numerous studies.
Reference: [2] <author> R. Agrawal and J. C. Shafer. </author> <title> Parallel mining of association rules: Design, implementation, </title> <journal> and experience. IEEE TKDE, </journal> <volume> 8, </volume> <pages> pp 962-969, </pages> <month> Dec </month> <year> 1996. </year>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms <ref> [6, 2, 8] </ref>; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours.
Reference: [3] <author> R. Agrawal and R. Srikant. </author> <title> Fast algorithms for mining association rules. </title> <booktitle> VLDB 94, </booktitle> <pages> pp 487-499. </pages>
Reference-contexts: 1 Introduction Since its introduction [1], the problem of mining association rules from large databases has been the subject of numerous studies. These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework <ref> [3, 13] </ref>, partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours. <p> As illustrated in the computation of classical frequent sets, C freq provides good pruning (cf: Property P1 in Section 4). Algorithm Apriori + shown in Figure 4 is a straightforward extension of the classical Apriori Algorithm <ref> [3] </ref>. It first computes the frequent sets (i.e., Steps 1 and 2), each of which is then verified against the remaining constraints (i.e., Step 3). <p> We used the program developed at IBM Almaden Research Center <ref> [3] </ref> to generate the transactional databases. While we experimented with various databases, the results cited below are based on a database of 100,000 records and a domain of 1000 items. The page size was 4Kbytes.
Reference: [4] <author> E. Baralis and G. Psaila. </author> <title> Designing templates for mining association rules. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 9, </volume> <pages> pp 7-32, </pages> <year> 1997. </year>
Reference-contexts: 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages <ref> [15, 4] </ref>. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows. First, the user specifies the part of the database to be mined. Next, the user specifies minimum thresholds for measures such as support and confidence.
Reference: [5] <author> S. Brin, R. Motwani, and C. Silverstein. </author> <title> Beyond market basket: Generalizing association rules to correlations. </title> <booktitle> SIGMOD 97, </booktitle> <pages> pp 265-276. </pages>
Reference-contexts: While such associations are useful, other notions of relationships may also be useful. First, there exist several significance metrics other than confidence that are equally meaningful. For example, Brin et al. argue why correlation can be more useful in many circumstances <ref> [5] </ref>. Second, there may be separate criteria for selecting candidates for the antecedent and consequent of a rule. For example, the user may want to find associations from sets of items to sets of types. <p> Prior to entering Phase II, the user can specify the desired significance metric, and can give different conditions that must be satisfied by the antecedent and consequent of the relationships to be formed. There are already several proposals in the literature that make the notion of associations less rigid <ref> [5, 7, 9, 12, 14, 21] </ref>. We are not proposing another here.
Reference: [6] <author> D.W. Cheung, J. Han, V. Ng, and C.Y. Wong. </author> <title> Maintenance of discovered association rules in large databases: An incremental updating technique. </title> <booktitle> ICDE 96, </booktitle> <pages> pp 106-114. </pages>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms <ref> [6, 2, 8] </ref>; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours.
Reference: [7] <author> T. Fukuda, Y. Morimoto, S. Morishita, and T. Tokuyama. </author> <title> Data mining using two-dimensional optimized association rules: Scheme, algorithms, and visualization. </title> <booktitle> SIGMOD 96, </booktitle> <pages> pp 13-23. </pages>
Reference-contexts: of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules <ref> [7, 14, 12] </ref>; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows. <p> Prior to entering Phase II, the user can specify the desired significance metric, and can give different conditions that must be satisfied by the antecedent and consequent of the relationships to be formed. There are already several proposals in the literature that make the notion of associations less rigid <ref> [5, 7, 9, 12, 14, 21] </ref>. We are not proposing another here.
Reference: [8] <author> E.-H. Han, G. Karypis, and V. Kumar. </author> <title> Scalable parallel data mining for association rules. </title> <booktitle> SIGMOD 97, </booktitle> <pages> pp 277-288. </pages>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms <ref> [6, 2, 8] </ref>; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours.
Reference: [9] <author> J. Han and Y. Fu. </author> <title> Discovery of multiple-level association rules from large databases. </title> <booktitle> VLDB 95, </booktitle> <pages> pp 420-431. </pages>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules <ref> [21, 9] </ref>; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. <p> Prior to entering Phase II, the user can specify the desired significance metric, and can give different conditions that must be satisfied by the antecedent and consequent of the relationships to be formed. There are already several proposals in the literature that make the notion of associations less rigid <ref> [5, 7, 9, 12, 14, 21] </ref>. We are not proposing another here.
Reference: [10] <author> J. Hellerstein, P. Haas and H. Wang. </author> <title> Online Aggregation. </title> <booktitle> SIGMOD 97, </booktitle> <pages> pp 171-182. </pages>
Reference-contexts: While we focus on conjunctions and negations of constraints, rather than arbitrary boolean combinations, constraints of the form S:Type = sodas do permit implicit forms of disjunction. 1 The spirit of this principle is very similar to the principle suggested by Hellerstein et al. for online aggregation <ref> [10] </ref>, in that the user is given the final say as to the amount of information wanted, and is not charged for the cost of computation that is deemed unnecessary by the user.
Reference: [11] <author> T. Imielinski and H. Mannila. </author> <title> A database perspective on knowledge discovery. </title> <journal> Communications of ACM, </journal> <volume> 39, </volume> <pages> pp 58-64, </pages> <year> 1996. </year>
Reference-contexts: Below, we discuss these problems, and highlight our contributions to solving them. Problem 1 Lack of User Exploration and Control: Mining (of associations) should be an activity that allows for exploration on the user's part <ref> [11, 20] </ref>. However, the present-day model for mining treats the mining process as an impenetrable black-box only allowing the user to set the thresholds at the beginning, showing the user all associations satisfying the thresholds at the end, but nothing in between. <p> Suggested Principle: (3) Provide the user with many opportunities to express the focus. (4) Use the focus to ensure that the system does an amount of computation proportional to what the user gets. This is the first step towards ad hoc mining of associations <ref> [11, 20] </ref>. Our Contributions: The architecture presented in Section 2 provides a rich interface for the user to express focus. The critical component is the notion of constrained association queries (CAQ) to be introduced in Section 3. <p> Many believe that this is crucial for the technology of database mining to reach its full potential (see also <ref> [11] </ref>). We believe this paper takes an important step in this direction.
Reference: [12] <author> M. Kamber, J. Han, and J. Y. Chiang. </author> <title> Metarule-guided mining of multi-dimensional association rules using data cubes. </title> <booktitle> KDD 97, </booktitle> <pages> pp 207-210. </pages>
Reference-contexts: of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules <ref> [7, 14, 12] </ref>; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows. <p> Prior to entering Phase II, the user can specify the desired significance metric, and can give different conditions that must be satisfied by the antecedent and consequent of the relationships to be formed. There are already several proposals in the literature that make the notion of associations less rigid <ref> [5, 7, 9, 12, 14, 21] </ref>. We are not proposing another here.
Reference: [13] <author> M. Klemettinen, H. Mannila, P. Ronkainen, H. Toivonen, and A.I. Verkamo. </author> <title> Finding interesting rules from large sets of discovered association rules. </title> <booktitle> CIKM 94, </booktitle> <pages> pp 401-408. </pages>
Reference-contexts: 1 Introduction Since its introduction [1], the problem of mining association rules from large databases has been the subject of numerous studies. These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework <ref> [3, 13] </ref>, partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours. <p> Similarly, for constraints involving min (), min (S) v is anti-monotone, but min (S) v is not. The proof of Theorem 1 below shows why min (S) v is anti-monotone. But 4 In <ref> [13] </ref> Mannila et al. refer to this property as monotonicity. But we prefer the term anti-monotone for the reason mentioned above. for min (S) v, even if min (S) 6 v, it is possible that some superset S 0 of S may satisfy min (S 0 ) v.
Reference: [14] <author> B. Lent, A. Swami, and J. Widom. </author> <title> Clustering association rules. </title> <address> ICDE 97. </address>
Reference-contexts: of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules <ref> [7, 14, 12] </ref>; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows. <p> Prior to entering Phase II, the user can specify the desired significance metric, and can give different conditions that must be satisfied by the antecedent and consequent of the relationships to be formed. There are already several proposals in the literature that make the notion of associations less rigid <ref> [5, 7, 9, 12, 14, 21] </ref>. We are not proposing another here.
Reference: [15] <author> R. Meo, G. Psaila, and S. Ceri. </author> <title> A new SQL-like operator for mining association rules. </title> <booktitle> VLDB 96, </booktitle> <pages> pp 122-133. </pages>
Reference-contexts: 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages <ref> [15, 4] </ref>. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows. First, the user specifies the part of the database to be mined. Next, the user specifies minimum thresholds for measures such as support and confidence. <p> The classification of constraints based on anti-monotonicity and succinctness is fundamentally new. Moreover, Algorithm CAP provides highly effective pruning for much larger classes of constraints than the algorithms given in [23]. Meo et al. propose a language for association mining with conditions <ref> [15] </ref>. They focus more on sophisticated ways of grouping tuples and do not consider pruning optimizations effected by the conditions. Tsur et al. [25] propose an interesting notion, called "query flocks," for describing parameterized query and filter (a condition applied to the result of the query).
Reference: [16] <author> R.J. Miller and Y. Yang. </author> <title> Association rules over interval data. </title> <booktitle> SIGMOD 97, </booktitle> <pages> pp 452-461. </pages>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules <ref> [22, 16] </ref>; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows.
Reference: [17] <author> Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han, and Alex Pang. </author> <title> Exploratory Mining and Optimization of Constrained Association Queries. </title> <type> Technical Report, </type> <institution> University of British Columbia and Concordia University, </institution> <month> October </month> <year> 1997. </year>
Reference-contexts: For space limitations, in this paper, we only focus on the specification and optimization of constrained association queries, and do not pursue the issue of how to specify minable view and transactions. We refer the reader to <ref> [17] </ref> which gives a complete example of how a constrained association query can be "wrapped" in a SQL environment. For the purpose of this paper, we may simply regard the minable view as one or a set of relations. <p> All the above examples are based on the basket domain. See <ref> [17] </ref> for examples based on the WWW domain. Satisfaction of a constraint by a pair of sets (S 1 ; S 2 ) is defined in the obvious manner. Satisfaction with respect to a conjunction and negation of constraints is defined in the usual sense as well. <p> We have developed pruning optimizations for 2-var constraints as well. But for space limitations, we will only discuss them in a forthcoming paper. Also for space limitations, we suppress several proofs and further discussions on details in this paper. The complete details can be found in the full version <ref> [17] </ref>. 4 Optimization Using Anti-Monotone Constraints The first property of constraints that we identify and analyze is anti-monotonicity. <p> It can be shown that when C is anti-monotone as well, then the MGF must be of the form fS j S oe p (Item) & S 6= ;g <ref> [17] </ref>. Then the set C 1 of candidate sets of size 1 in the Apriori Algorithm can simply be replaced by C c 1 = fe j e 2 C 1 & e 2 oe p (Item)g. <p> Complete details can be found in the full paper <ref> [17] </ref>. 6.3.3 Anti-monotone but Non-succinct Constraints Because constraint C is not succinct, it does not admit an MGF that can be used to avoid the generate-and-test paradigm completely.
Reference: [18] <author> J.S. Park, M.S. Chen, and P.S. Yu. </author> <title> An effective hash-based algorithm for mining association rules. </title> <booktitle> SIGMOD 95, </booktitle> <pages> pp 175-186. </pages>
Reference-contexts: 1 Introduction Since its introduction [1], the problem of mining association rules from large databases has been the subject of numerous studies. These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning <ref> [19, 18] </ref>, and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours.
Reference: [19] <author> A. Savasere, E. Omiecinski, and S. Navathe. </author> <title> An efficient algorithm for mining association rules in large databases. </title> <booktitle> VLDB 95, </booktitle> <pages> pp 432-443. </pages>
Reference-contexts: 1 Introduction Since its introduction [1], the problem of mining association rules from large databases has been the subject of numerous studies. These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning <ref> [19, 18] </ref>, and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours.
Reference: [20] <author> A. Silberschatz and S. Zdonik. </author> <title> Database systems breaking out of the box. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 26, </volume> <pages> pp 36-50, </pages> <year> 1997. </year>
Reference-contexts: Below, we discuss these problems, and highlight our contributions to solving them. Problem 1 Lack of User Exploration and Control: Mining (of associations) should be an activity that allows for exploration on the user's part <ref> [11, 20] </ref>. However, the present-day model for mining treats the mining process as an impenetrable black-box only allowing the user to set the thresholds at the beginning, showing the user all associations satisfying the thresholds at the end, but nothing in between. <p> Suggested Principle: (3) Provide the user with many opportunities to express the focus. (4) Use the focus to ensure that the system does an amount of computation proportional to what the user gets. This is the first step towards ad hoc mining of associations <ref> [11, 20] </ref>. Our Contributions: The architecture presented in Section 2 provides a rich interface for the user to express focus. The critical component is the notion of constrained association queries (CAQ) to be introduced in Section 3.
Reference: [21] <author> R. Srikant and R. Agrawal. </author> <title> Mining generalized association rules. </title> <booktitle> VLDB 95, </booktitle> <pages> pp 407-419. </pages>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules <ref> [21, 9] </ref>; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. <p> Prior to entering Phase II, the user can specify the desired significance metric, and can give different conditions that must be satisfied by the antecedent and consequent of the relationships to be formed. There are already several proposals in the literature that make the notion of associations less rigid <ref> [5, 7, 9, 12, 14, 21] </ref>. We are not proposing another here.
Reference: [22] <author> R. Srikant and R. Agrawal. </author> <title> Mining quantitative association rules in large relational tables. </title> <booktitle> SIGMOD 96, </booktitle> <pages> pp 1-12. </pages>
Reference-contexts: These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules <ref> [22, 16] </ref>; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows.
Reference: [23] <author> R. Srikant, Q. Vu and R. Agrawal. </author> <title> Mining association rules with item constraints. </title> <booktitle> KDD 97, </booktitle> <pages> pp 67-73. </pages>
Reference-contexts: levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling [24]; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints <ref> [23] </ref>; and (vii) association-rule based query languages [15, 4]. However, from the standpoint of the user's interaction with the system, the process of association mining can be summarized as follows. First, the user specifies the part of the database to be mined. <p> The interface for expressing focus offered by the present-day model is extremely impoverished, because it only allows thresholds for support and confidence to be specified. We note that some recent studies (e.g., <ref> [23, 25] </ref>) are moving towards the same direction of constraint/query-based association mining and these works will be reviewed below. <p> Experimental results shown in Section 7 indicate that CAP can run as much as 80 times faster than several algorithms based on the classical Apriori framework. Srikant et al. consider association mining with item constraints <ref> [23] </ref>. They consider essentially membership constraints in the context of an item taxonomy, which correspond to a small subclass one of the categories of constraints (see Section 6.3.2) studied in this paper. <p> The classification of constraints based on anti-monotonicity and succinctness is fundamentally new. Moreover, Algorithm CAP provides highly effective pruning for much larger classes of constraints than the algorithms given in <ref> [23] </ref>. Meo et al. propose a language for association mining with conditions [15]. They focus more on sophisticated ways of grouping tuples and do not consider pruning optimizations effected by the conditions.
Reference: [24] <author> H. Toivonen. </author> <title> Sampling large databases for association rules. </title> <booktitle> VLDB 96, </booktitle> <pages> pp 134-145. </pages>
Reference-contexts: 1 Introduction Since its introduction [1], the problem of mining association rules from large databases has been the subject of numerous studies. These studies cover a broad spectrum of topics including: (i) fast algorithms based on the levelwise Apriori framework [3, 13], partitioning [19, 18], and sampling <ref> [24] </ref>; (ii) incremental updating and parallel algorithms [6, 2, 8]; (iii) mining of generalized and multi-level rules [21, 9]; (iv) mining of quantitative rules [22, 16]; (v) mining of multidimensional rules [7, 14, 12]; (vi) mining rules with item constraints [23]; and (vii) association-rule based query languages [15, 4]. <p> However, despite the development of many efficient algorithms <ref> [2, 3, 6, 8, 13, 18, 19, 24] </ref>, association mining remains a process typically taking hours to complete. Before a new invocation of the black-box, the user is not allowed to preempt the process and needs to wait for hours.
Reference: [25] <author> D. Tsur, J. D. Ullman, S. Abitboul, C. Clifton, R. Motwani, and S. Nestorov. </author> <title> Query flocks: A generalization of association-rule mining. </title> <address> http://www-db.stanford.edu/ullman/pub/qflocks.ps, 1-20, </address> <month> Oct. </month> <year> 1997. </year>
Reference-contexts: The interface for expressing focus offered by the present-day model is extremely impoverished, because it only allows thresholds for support and confidence to be specified. We note that some recent studies (e.g., <ref> [23, 25] </ref>) are moving towards the same direction of constraint/query-based association mining and these works will be reviewed below. <p> Meo et al. propose a language for association mining with conditions [15]. They focus more on sophisticated ways of grouping tuples and do not consider pruning optimizations effected by the conditions. Tsur et al. <ref> [25] </ref> propose an interesting notion, called "query flocks," for describing parameterized query and filter (a condition applied to the result of the query). However, the filter is confined to lower bound constraints on the number of tuples returned by the query.
References-found: 25

