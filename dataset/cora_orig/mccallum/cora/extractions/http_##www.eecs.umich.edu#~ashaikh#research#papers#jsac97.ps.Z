URL: http://www.eecs.umich.edu/~ashaikh/research/papers/jsac97.ps.Z
Refering-URL: http://www.eecs.umich.edu/~ashaikh/research/
Root-URL: http://www.cs.umich.edu
Email: E-mail: fashaikh, kgshing@eecs.umich.edu  Email: kgshin@eecs.umich.edu  
Phone: Telephone numbers: 313-763-0391 (voice); 313-763-4617 (fax)  
Title: Destination-Driven Routing for Low-Cost Multicast  
Author: Anees Shaikh and Kang G. Shin Kang G. Shin 
Keyword: multicast routing, Steiner trees, shortest-path trees, point-to-point networks  
Note: All correspondence should be made to:  
Address: Ann Arbor, MI 48109-2122  Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: The increasing interest in distributed applications like multimedia and collaborative work calls for efficient means to support multicast communication. A fundamental issue in mul-ticast communication is route selection, usually based on trees. We present a destination-driven algorithm that optimizes for applications, such as group video- or tele-conferencing, that require multicast trees with low total cost. The destination-driven algorithm uses a greedy strategy based on shortest-path trees and minimal spanning trees but biases routes through destinations. The performance of the algorithm is analyzed through extensive simulation and compared with several Steiner tree heuristics and the popular shortest-path tree (SPT) method. The algorithm is found to produce trees with significantly lower overall cost than the SPT while maintaining reasonable per-destination performance. Its performance is also shown to compare well with other well-known Steiner heuristics. Moreover, the algorithm does not suffer from high complexity common to most Steiner tree heuristics and builds a route by querying only incident links for cost information. The work reported in this paper was supported in part by the Office of Naval Research (ONR) under Grant N00014-1-0229 and by the National Science Foundation under Grant MIP-9203895. Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the funding agencies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Rajagopalan, </author> <title> "Reliability and scaling issues in multicast communication," </title> <booktitle> in Proc. of ACM SIGCOMM, </booktitle> <address> (Baltimore, MD), </address> <pages> pp. 188-198, </pages> <month> October </month> <year> 1992. </year>
Reference: [2] <author> W. Sincoskie, </author> <title> "System architecture for a large scale video-on-demand service," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 22, </volume> <pages> pp. 155-162, </pages> <month> September </month> <year> 1991. </year>
Reference: [3] <author> Y. Tanaka and P. C. Huang, </author> <title> "Multiple destination routing algorithms," </title> <journal> IEICE Trans. Communications, </journal> <volume> vol. E76-B, </volume> <pages> pp. 544-552, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Link cost may also reflect the actual or anticipated congestion or error rate. It could also measure buffer space or channel bandwidth requirements. Still other networks may use an estimate of packet transmission delay as the link cost <ref> [3] </ref> or assume that cost reflects both delay and installation cost, for example [14]. Recent work has split cost and delay, in some cases trying to provide low cost while meeting some delay constraint to each destination [13, 18].
Reference: [4] <author> L. Wei and D. Estrin, </author> <title> "The tradeoffs of multicast trees and algorithms," </title> <booktitle> in Proc. International Conference on Computer Communications and Networks, </booktitle> <address> (San Francisco, CA), </address> <month> September </month> <year> 1994. </year> <month> 16 </month>
Reference-contexts: This differs from multicast achieved through multiple unicasts where every unicast requires a copy of the message. Using multiple unicasts may result in many copies of the same message traveling the same network links. Generally, multicast trees fall into two categories, namely shortest-path trees (SPTs) and group shared trees <ref> [4] </ref>. SPTs for a single multicast may consist of many distinct trees, one for each source. That is, the shortest paths to each member of the multicast is different depending on which node is originating messages. Hence, SPTs are often referred to as source-specific SPTs. <p> Finding a Steiner tree is known to be NP-complete in the most general case [16]. Steiner tree heuristics, though providing near-optimal results, are sometimes dismissed as too difficult to implement in practical protocols or too computationally intensive <ref> [4, 7] </ref>. In fact, most of the proposed heuristics for the Steiner tree require global network information and can be quite complex relative to SPT schemes [17-19].
Reference: [5] <author> S. E. Deering and D. R. Cheriton, </author> <title> "Multicast routing in datagram internetworks and extended LANs," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 8, </volume> <pages> pp. 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference: [6] <author> H. Eriksson, "MBone: </author> <title> The multicast backbone," </title> <journal> Communications of the ACM, </journal> <volume> vol. 37, </volume> <pages> pp. 54-60, </pages> <month> August </month> <year> 1994. </year>
Reference: [7] <author> C. Huitema, </author> <title> Routing in the Internet, ch. </title> <booktitle> Multicast, </booktitle> <pages> pp. 235-260. </pages> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Finding a Steiner tree is known to be NP-complete in the most general case [16]. Steiner tree heuristics, though providing near-optimal results, are sometimes dismissed as too difficult to implement in practical protocols or too computationally intensive <ref> [4, 7] </ref>. In fact, most of the proposed heuristics for the Steiner tree require global network information and can be quite complex relative to SPT schemes [17-19].
Reference: [8] <author> E. Dijkstra, </author> <title> "A note on two problems in connexion with graphs," </title> <journal> Numerische Math-emtik, </journal> <volume> vol. 1, </volume> <pages> pp. 269-271, </pages> <year> 1959. </year>
Reference-contexts: This type of tree is currently used in the Distance-Vector Multicast Routing Protocol (DVMRP) for Internet multicast traffic on the virtual MBone network [5-7]. Another example of multicast SPTs is the Multicast Extensions for OSPF (MOSPF) which uses distributed link state and Dijkstra's algorithm <ref> [8] </ref> to calculate shortest paths [9]. The primary advantage of SPTs is, of course, the minimal delay to each destination. 2 This feature makes SPTs desirable for interactive applications such as video-conferencing which are characterized by very high data rates.
Reference: [9] <author> J. Moy, </author> <title> "Multicast routing extensions for OSPF," </title> <journal> Communications of the ACM, </journal> <volume> vol. 37, </volume> <pages> pp. 61-66, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: This type of tree is currently used in the Distance-Vector Multicast Routing Protocol (DVMRP) for Internet multicast traffic on the virtual MBone network [5-7]. Another example of multicast SPTs is the Multicast Extensions for OSPF (MOSPF) which uses distributed link state and Dijkstra's algorithm [8] to calculate shortest paths <ref> [9] </ref>. The primary advantage of SPTs is, of course, the minimal delay to each destination. 2 This feature makes SPTs desirable for interactive applications such as video-conferencing which are characterized by very high data rates.
Reference: [10] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C.-G. Liu, and L. Wei, </author> <title> "An architecture for wide-area multicast routing," </title> <booktitle> in Proc. of ACM SIGCOMM, </booktitle> <address> (London, UK), </address> <pages> pp. 126-135, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: As an internetwork grows in size, the broadcast behavior of these routing methods can result in poor scalability. On the other hand, some multicast applications may have very dense groups 1 for which the broadcast may not represent a substantial penalty <ref> [10] </ref>. To combat the scalability problems, a relatively new shared tree method, classified as the center-based tree, has been proposed. A center-based tree has one (or more) central router node with branches that emanate outward to destinations. <p> The tree is shared per group rather than per (source, group) pair, and its formation is initiated by receivers once the central node is known. Examples of center-based trees are the Core Based Tree (CBT) [11] and the shared-tree mode of the Protocol Independent Multicast (PIM) 2 architecture <ref> [10] </ref>. The drawback of center-based and other shared trees is that the same tree is used for all members of the multicast. This means that multiple sources in the group will be transmitting over the same set of links, leading to high traffic concentrations on those links.
Reference: [11] <author> T. Ballardie, P. Francis, and J. Crowcroft, </author> <title> "Core based trees: An architecture for scalable inter-domain multicast routing," </title> <booktitle> in Proc. of ACM SIGCOMM, </booktitle> <address> (Ithaca, New York), </address> <pages> pp. 85-95, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: The tree is shared per group rather than per (source, group) pair, and its formation is initiated by receivers once the central node is known. Examples of center-based trees are the Core Based Tree (CBT) <ref> [11] </ref> and the shared-tree mode of the Protocol Independent Multicast (PIM) 2 architecture [10]. The drawback of center-based and other shared trees is that the same tree is used for all members of the multicast.
Reference: [12] <author> K. Bharath-Kumar and J. M. Jaffe, </author> <title> "Routing to multiple destinations in computer networks," </title> <journal> IEEE Trans. Communications, </journal> <volume> vol. 31, </volume> <pages> pp. 343-353, </pages> <month> March </month> <year> 1983. </year>
Reference-contexts: The advantage of center-based trees is that they do not exhibit the broadcast behavior of SPTs and thus do not tax routers uninterested in the multicast with data or group information. The goals addressed by various multicast tree types fall into two general categories <ref> [12, 13] </ref>. The first is to minimize the delay to each destination, which is effectively what the SPT achieves. Another optimization goal is to minimize the overall cost of the multicast tree 3 . <p> In fact, most of the proposed heuristics for the Steiner tree require global network information and can be quite complex relative to SPT schemes [17-19]. Fortunately, there are several versions of Steiner tree heuristics that may be executed in a distributed fashion or using information only from nearby nodes <ref> [12, 20, 21] </ref>, though these are not without their limitations [22]. In this paper we present a heuristic for the shared Steiner tree that is comparable in complexity to SPTs and suitable for similar dense-mode multicast groups. <p> The problem has been addressed both in a multicast communication context <ref> [12, 26] </ref>, and as a purely graph theoretic problem [15, 19]. Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths.
Reference: [13] <author> Q. Zhu, M. Parsa, and J. Garcia-Luna-Aceves, </author> <title> "A source-based algorithm for delay-constrained minimum-cost multicasting," </title> <booktitle> in IEEE INFOCOM, </booktitle> <address> (Boston, MA), </address> <pages> pp. 377-385, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: The advantage of center-based trees is that they do not exhibit the broadcast behavior of SPTs and thus do not tax routers uninterested in the multicast with data or group information. The goals addressed by various multicast tree types fall into two general categories <ref> [12, 13] </ref>. The first is to minimize the delay to each destination, which is effectively what the SPT achieves. Another optimization goal is to minimize the overall cost of the multicast tree 3 . <p> In keeping with its goal of simplicity, DDMC executes only one pass through the network using the greedy strategy, rather than iteratively trying to reduce the cost of the tree as in some other approaches <ref> [13] </ref>. Note that we construct a spanning tree rooted at s for the graph G. A multicast routing tree from s to D is obtained by trimming this tree so that all leaves are destination nodes. The correctness of the algorithm follows almost directly from Prim's algorithm. <p> Recent work has split cost and delay, in some cases trying to provide low cost while meeting some delay constraint to each destination <ref> [13, 18] </ref>. In these cases, cost is most often associated with bandwidth consumption although the relationship between delay and cost is rarely explained in the context of simulation-based studies. The focus of the comparison here is more general.
Reference: [14] <author> S. Khuller, B. Raghavachari, and N. Young, </author> <title> "Balancing minimum spanning trees and shortest-path trees," </title> <journal> Algorithmica, </journal> <volume> vol. 14, no. 4, </volume> <pages> pp. 305-321, </pages> <year> 1995. </year>
Reference-contexts: Another optimization goal is to minimize the overall cost of the multicast tree 3 . Other graph theoretic research has considered the problem of combining a minimum spanning tree and a shortest path tree to form a spanning tree that maintains near-shortest path costs <ref> [14] </ref>. The tree cost may be a measure of bandwidth consumption, transmission delay, or channel congestion. <p> It could also measure buffer space or channel bandwidth requirements. Still other networks may use an estimate of packet transmission delay as the link cost [3] or assume that cost reflects both delay and installation cost, for example <ref> [14] </ref>. Recent work has split cost and delay, in some cases trying to provide low cost while meeting some delay constraint to each destination [13, 18].
Reference: [15] <author> F. Hwang, D. Richards, and P. Winter, </author> <title> The Steiner Tree Problem. No. </title> <booktitle> 53 in Annals of Discrete Mathematics, </booktitle> <address> New York: </address> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: Cost of the tree is generally represented as the sum of the costs of each link in the multicast tree. The problem of finding the least cost tree is the Steiner tree problem in networks, and is formulated as follows <ref> [15] </ref>: GIVEN: An undirected network G = (V; E; c) and a nonempty set of destinations D, where V and E are the set of vertices and edges of the network, respectively, and c is a cost function associated with each edge in G. <p> The problem has been addressed both in a multicast communication context [12, 26], and as a purely graph theoretic problem <ref> [15, 19] </ref>. Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths. <p> The three primary path-distance approaches are the shortest-path heuristic (SPH) [28], average distance heuristic (ADH) [29], and distance network heuristic (DNH) [17]. In our study we consider only ADH and SPH, however, since previous studies have shown that they generally outperform DNH (although their dominance is not strict) <ref> [15, 29] </ref>. We also include, for more practical reasons, comparison with the simple minimum spanning tree heuristic (MST). MST executes a minimum spanning tree algorithm (e.g., Prim [23]) and then prunes non-destination nodes with node degree 1.
Reference: [16] <author> R. Karp, </author> <title> "Reducibility among combinatorial problems," in Complexity of Computer Computations (R. </title> <editor> Miller and J. Thatcher, eds.), </editor> <address> (New York), </address> <pages> pp. 85-103, </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: The vertices included in the final solution that are not members of D are called Steiner nodes. Finding a Steiner tree is known to be NP-complete in the most general case <ref> [16] </ref>. Steiner tree heuristics, though providing near-optimal results, are sometimes dismissed as too difficult to implement in practical protocols or too computationally intensive [4, 7]. In fact, most of the proposed heuristics for the Steiner tree require global network information and can be quite complex relative to SPT schemes [17-19].
Reference: [17] <author> L. Kou, G. Markowsky, and L. Berman, </author> <title> "A fast algorithm for Steiner trees in graphs," </title> <journal> Acta Informatica, </journal> <volume> vol. 15, </volume> <pages> pp. 141-145, </pages> <year> 1981. </year>
Reference-contexts: Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths. The three primary path-distance approaches are the shortest-path heuristic (SPH) [28], average distance heuristic (ADH) [29], and distance network heuristic (DNH) <ref> [17] </ref>. In our study we consider only ADH and SPH, however, since previous studies have shown that they generally outperform DNH (although their dominance is not strict) [15, 29]. We also include, for more practical reasons, comparison with the simple minimum spanning tree heuristic (MST).
Reference: [18] <author> V. P. Kompella, J. C. Pasquale, and G. C. Polyzos, </author> <title> "Multicast routing for multimedia communication," </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> vol. 1, </volume> <pages> pp. 286-292, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Recent work has split cost and delay, in some cases trying to provide low cost while meeting some delay constraint to each destination <ref> [13, 18] </ref>. In these cases, cost is most often associated with bandwidth consumption although the relationship between delay and cost is rarely explained in the context of simulation-based studies. The focus of the comparison here is more general.
Reference: [19] <author> P. Winter, </author> <title> "Steiner problem in networks: A survey," </title> <journal> Networks, </journal> <volume> vol. 17, </volume> <pages> pp. 129-167, </pages> <year> 1987. </year>
Reference-contexts: The problem has been addressed both in a multicast communication context [12, 26], and as a purely graph theoretic problem <ref> [15, 19] </ref>. Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths.
Reference: [20] <author> D. W. Wall, </author> <title> "Mechanisms for broadcast and selective broadcast," </title> <type> Ph.D. Thesis CSL-TR-80-190, </type> <institution> Stanford University, </institution> <month> June </month> <year> 1980. </year> <month> 17 </month>
Reference-contexts: In fact, most of the proposed heuristics for the Steiner tree require global network information and can be quite complex relative to SPT schemes [17-19]. Fortunately, there are several versions of Steiner tree heuristics that may be executed in a distributed fashion or using information only from nearby nodes <ref> [12, 20, 21] </ref>, though these are not without their limitations [22]. In this paper we present a heuristic for the shared Steiner tree that is comparable in complexity to SPTs and suitable for similar dense-mode multicast groups.
Reference: [21] <author> F. Bauer and A. Varma, </author> <title> "Distributed algorithms for multicast path setup in data networks," </title> <booktitle> in Proc. of IEEE GLOBECOM, (Singapore), </booktitle> <pages> pp. 1374-1378, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: In fact, most of the proposed heuristics for the Steiner tree require global network information and can be quite complex relative to SPT schemes [17-19]. Fortunately, there are several versions of Steiner tree heuristics that may be executed in a distributed fashion or using information only from nearby nodes <ref> [12, 20, 21] </ref>, though these are not without their limitations [22]. In this paper we present a heuristic for the shared Steiner tree that is comparable in complexity to SPTs and suitable for similar dense-mode multicast groups.
Reference: [22] <author> J. M. Jaffe, </author> <title> "Distributed multi-destination routing: The constraints of local information," </title> <journal> SIAM Journal on Computing, </journal> <volume> vol. 14, </volume> <pages> pp. 875-888, </pages> <month> November </month> <year> 1985. </year>
Reference-contexts: Fortunately, there are several versions of Steiner tree heuristics that may be executed in a distributed fashion or using information only from nearby nodes [12, 20, 21], though these are not without their limitations <ref> [22] </ref>. In this paper we present a heuristic for the shared Steiner tree that is comparable in complexity to SPTs and suitable for similar dense-mode multicast groups. It uses a greedy strategy combining Dijkstra's shortest path and Prim's minimal spanning tree [23] algo 4 rithms.
Reference: [23] <author> R. Prim, </author> <title> "Shortest connection networks and some generalizations," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 36, </volume> <pages> pp. 1389-1401, </pages> <year> 1957. </year>
Reference-contexts: In this paper we present a heuristic for the shared Steiner tree that is comparable in complexity to SPTs and suitable for similar dense-mode multicast groups. It uses a greedy strategy combining Dijkstra's shortest path and Prim's minimal spanning tree <ref> [23] </ref> algo 4 rithms. It reduces tree cost by biasing toward paths that pass through destination nodes. We show through simulation that the heuristic offers competitive performance with some other Steiner tree heuristics but at a much lower computational cost. <p> D V , the indicator function I D : V 7! f0; 1g of D is defined as I D (u) = 0 if u 2 D, and 1 if u 62 D. 2.2 Algorithm operation The algorithm executes in a manner very similar to Prim's minimum spanning tree algorithm <ref> [23] </ref>. We follow the basic framework for tree construction shown in [25] and proceed in three basic steps as shown below. A more detailed description of the algorithm may be found in [24]. Pseudocode for DDMC is given in Figure 1. 1. <p> We also include, for more practical reasons, comparison with the simple minimum spanning tree heuristic (MST). MST executes a minimum spanning tree algorithm (e.g., Prim <ref> [23] </ref>) and then prunes non-destination nodes with node degree 1. While MST performs relatively poorly on average, it has the advantage of having substantially lower computational complexity and requires cost information only from neighboring nodes as it proceeds. DDMC shares these same advantages.
Reference: [24] <author> A. Shaikh, S. Lu, and K. Shin, </author> <title> "Localized multicast routing," </title> <booktitle> in Proc. of IEEE GLOBECOM, (Singapore), </booktitle> <pages> pp. 1352-1356, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: We modify these to distinguish between destination and non-destination nodes <ref> [24] </ref>. This distinguishing information is used to give "preference" to destination nodes. 2.1 Algorithm overview The shortest path algorithm always makes its decisions about routes by measuring cost to each destination in terms of individual accumulated cost. <p> We follow the basic framework for tree construction shown in [25] and proceed in three basic steps as shown below. A more detailed description of the algorithm may be found in <ref> [24] </ref>. Pseudocode for DDMC is given in Figure 1. 1. Initialization involves setting parent pointers indeterminate and cost estimates for each node to infinity, except the source which receives cost estimate 0. In addition, we create priority queue, Q, and fill it with all the nodes.
Reference: [25] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest, </author> <title> Introduction to Algorithms. </title> <address> Cam-bridge, MA (New York): </address> <publisher> MIT Press (McGraw-Hill), </publisher> <year> 1990. </year>
Reference-contexts: We follow the basic framework for tree construction shown in <ref> [25] </ref> and proceed in three basic steps as shown below. A more detailed description of the algorithm may be found in [24]. Pseudocode for DDMC is given in Figure 1. 1. <p> Some improvement is possible if Fibonacci heaps are used for the priority queue <ref> [25] </ref>. with the solution formed by SPT. The square designates the source node while destinations 7 DDMC SPT Tree cost=16 Tree cost=20 Avg. cost/dest=7.5 Avg. cost/dest=7.5 Max cost=10 Max cost=10 are double circles. Note that the DDMC paths all pass through destination node 2 en route to the other destination.
Reference: [26] <author> B. M. Waxman, </author> <title> "Routing of multipoint connections," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, </volume> <pages> pp. 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: The problem has been addressed both in a multicast communication context <ref> [12, 26] </ref>, and as a purely graph theoretic problem [15, 19]. Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths.
Reference: [27] <author> P. Winter and J. M. Smith, </author> <title> "Path-distance heuristics for the Steiner problem in undi-rected networks," </title> <journal> Algorithmica, </journal> <volume> vol. 7, </volume> <pages> pp. 309-327, </pages> <year> 1992. </year>
Reference-contexts: The problem has been addressed both in a multicast communication context [12, 26], and as a purely graph theoretic problem [15, 19]. Most of the well-known heuristics fall into the class known as path-distance heuristics <ref> [27] </ref> since they approach the problem by iteratively enlarging partial solutions using shortest paths. The three primary path-distance approaches are the shortest-path heuristic (SPH) [28], average distance heuristic (ADH) [29], and distance network heuristic (DNH) [17].
Reference: [28] <author> H. Takahashi and A. </author> <title> Matsuyama, "An approximate solution for the Steiner tree problem in graphs," </title> <journal> Mathematica Japonica, </journal> <volume> vol. 24, no. 6, </volume> <pages> pp. 573-577, </pages> <year> 1980. </year>
Reference-contexts: Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths. The three primary path-distance approaches are the shortest-path heuristic (SPH) <ref> [28] </ref>, average distance heuristic (ADH) [29], and distance network heuristic (DNH) [17]. In our study we consider only ADH and SPH, however, since previous studies have shown that they generally outperform DNH (although their dominance is not strict) [15, 29].
Reference: [29] <author> V. Rayward-Smith and A. Clare, </author> <title> "On finding Steiner vertices," </title> <journal> Networks, </journal> <volume> vol. 16, </volume> <pages> pp. 283-294, </pages> <year> 1986. </year>
Reference-contexts: Most of the well-known heuristics fall into the class known as path-distance heuristics [27] since they approach the problem by iteratively enlarging partial solutions using shortest paths. The three primary path-distance approaches are the shortest-path heuristic (SPH) [28], average distance heuristic (ADH) <ref> [29] </ref>, and distance network heuristic (DNH) [17]. In our study we consider only ADH and SPH, however, since previous studies have shown that they generally outperform DNH (although their dominance is not strict) [15, 29]. <p> The three primary path-distance approaches are the shortest-path heuristic (SPH) [28], average distance heuristic (ADH) [29], and distance network heuristic (DNH) [17]. In our study we consider only ADH and SPH, however, since previous studies have shown that they generally outperform DNH (although their dominance is not strict) <ref> [15, 29] </ref>. We also include, for more practical reasons, comparison with the simple minimum spanning tree heuristic (MST). MST executes a minimum spanning tree algorithm (e.g., Prim [23]) and then prunes non-destination nodes with node degree 1.
Reference: [30] <author> M. Doar and I. Leslie, </author> <title> "How bad is na ive multicast routing?," </title> <booktitle> in IEEE INFOCOM, </booktitle> <address> (San Francisco, California), </address> <pages> pp. 82-89, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Also, we do not address the issue of dynamic groups where members may join and leave. It is possible, however, to use either the na ive approach <ref> [30] </ref> adding shortest paths to new nodes or the recently proposed ARIES algorithm [31] which selectively repairs parts of the tree after a given number of membership changes. Additional goals include the development of an actual protocol using DDMC.
Reference: [31] <author> F. Bauer and A. Varma, </author> <title> "ARIES: A rearrangeable inexpensive edge-based on-line Steiner algorithm," </title> <type> Tech. Rep. </type> <institution> UCSC-CRL-95-36, Dept. of Computer Engineering, University of California, Santa Cruz, </institution> <month> July </month> <year> 1995. </year> <month> 18 </month>
Reference-contexts: Also, we do not address the issue of dynamic groups where members may join and leave. It is possible, however, to use either the na ive approach [30] adding shortest paths to new nodes or the recently proposed ARIES algorithm <ref> [31] </ref> which selectively repairs parts of the tree after a given number of membership changes. Additional goals include the development of an actual protocol using DDMC.
References-found: 31

