URL: ftp://ftp.ifad.dk/pub/papers/petri.ps.gz
Refering-URL: http://www.ifad.dk/publications/publications.html
Root-URL: 
Title: Giving semantics to SA/RT by means of high-level timed Petri nets  
Author: Rene Elmstrtm Raino Lintulampi Mauro Pezze 
Note: This material is based upon work supported by the CEC under the ESPRIT programme project no. EP5570 IPTES, by the Piano Finalizzato  and by The  
Address: Forskerparken 10, DK-5230 Odense, Denmark  P.O. Box 201, SF-90571 Oulu, Finland  Piazza Leornardo Da Vinci 32, 20133 Milano, Italy  
Affiliation: The Institute of Applied Computer Science (IFAD)  Technical Research Centre of Finland (VTT) Computer Technology Laboratory  Politecnico di Milano Dipartimento di Elettronica  Sistemi Informatici e Calcolo Parallelo (CNR)  Technical Development Centre of Finland (TEKES)  
Abstract: In the IPTES project a dual language approach is proposed for overcoming both the problems derived from the use of a user-friendly, high-level, but not-formally-defined language and from a lower-level, formal, but difficult-to-use language. The approach uses a user-friendly, high-level language as user interface and a lower-level, formal language as machine language. In this way the users can both access the IPTES environment through a nice interface and can profit from non-ambiguity-checks and proofs algorithms based on the formal kernel machine language. The correspondence between the two languages is built-in in the IPTES environment that provides a transparent mapping mechanism that relates the users specifications expressed by means of the high-level interface-language with the formal definitions expressed in the formal machine language. This paper presents the mapping mechanism that relates the current IPTES user interface (SA/RT [Ward&85]) with the IPTES machine language (high-level timed Petri nets [Ghezzi&91]). As a side effect, it also presents the formal seman tics of SA/RT defined by means of high-level timed Petri nets. 
Abstract-found: 1
Intro-found: 1
Reference: [Berthomieu&91] <author> Bernard Berthomieu and Michal Diaz. </author> <title> Modeling and Verification of Time Dependent Systems Using Time Petri Nets. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(3) </volume> <pages> 259-273, </pages> <month> March </month> <year> 1991. </year> <pages> 12 pages. </pages>
Reference-contexts: A third major open question is related with the possibility of analyzing the kernel model. Many kinds of analysis are already available, including execution, simulation, testing, reachability analysis of original and timed Petri nets <ref> [Berthomieu&91] </ref>. However, several more are needed in order to further increase the advantages of using high-level Petri nets. In particular we are investigating analysis algorithms for proving temporal properties.
Reference: [Elmstrtm&92] <author> Rene Elmstrtm, Raino Lintulampi and Mauro Pezze. </author> <title> Automatic translation of SA/RT to ER nets. </title> <type> Technical Report, </type> <institution> IFAD, VTT and PDM, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: All the relevant aspects of the mapping are considered here; a complete discussion of all the details not explicitly addressed in this paper and the formal definition of the full mapping algorithm can be found in <ref> [Elmstrtm&92] </ref>. Next section (Section 2) describes the guidelines followed in the definition of the algorithm for mapping SA/RT into HLTPNs and their rational. The most significant mapping rules are described in Section 3. <p> The mapping rules have been defined so that it should be possible to implement an execution strategy according with the choices of the users. The problems related with the implementation of different execution strategies are not discussed in this paper. A complete discussion can be found in <ref> [Elmstrtm&92] </ref>. 3 Mapping Rules In this paper we only describe the most relevant mapping rules; the complete set of mapping rules is presented in [Elmstrtm&92]. In particular we do not 6 describe signals and triggers whose representation can be easily tracked back to the representation of discrete data flows. <p> The problems related with the implementation of different execution strategies are not discussed in this paper. A complete discussion can be found in <ref> [Elmstrtm&92] </ref>. 3 Mapping Rules In this paper we only describe the most relevant mapping rules; the complete set of mapping rules is presented in [Elmstrtm&92]. In particular we do not 6 describe signals and triggers whose representation can be easily tracked back to the representation of discrete data flows. We also limit the description of enabling/disabling signals to the case of a discrete data transformation as target of the enabling/disabling signal.
Reference: [Felder&91] <author> Miguel Felder, Carlo Ghezzi and Mauro Pezze. </author> <title> Task T24 report: HLTPN Kernel Model. </title> <type> Technical Report, </type> <institution> Politechnico di Milano, </institution> <month> October </month> <year> 1991. </year>
Reference-contexts: Among the already acquired results, the most important concern the definition of a way of representing resource allocation with high-level timed Petri nets. Such preliminary results are documented in <ref> [Felder&91] </ref>. Another hot spot is related with the constructs for hierarchical decomposition of SA/RT.
Reference: [Felder&92] <author> Felder M., Ghezzi C., Pezze M. </author> <title> High Level Timed Petri Nets as a Kernel for Executable Specifications. </title> <note> Submitted to special issue of Real-Time Systems Journal, </note> <month> March </month> <year> 1992. </year>
Reference: [Ghezzi:analysis] <author> Carlo Ghezzi and Sandro Morasca and Mauro Pezze. </author> <title> Timing Analysis of Time Basic Nets. </title> <note> submitted for publication, </note> <year> 1992. </year>
Reference: [Ghezzi&91] <author> Carlo Ghezzi, Dino Mandrioli, Sandro Morasca and Mauro Pezze. </author> <title> A Unified High-Level Petri Net Model For Time-Critical Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(2) </volume> <pages> 160-172, </pages> <month> February </month> <year> 1991. </year> <pages> 12 pages. </pages>
Reference: [Huber&89] <author> Peter Huber and Kurt Jensen and Robert Shapiro. </author> <title> Hierarchies in Coloured Petri Nets. </title> <booktitle> 10th International Conference on Application and theory of Petri Nets, </booktitle> <month> June </month> <year> 1989. </year>
Reference: [Larsen&91] <author> Peter Gorm Larsen and Poul Btgh Lassen. </author> <title> The IPTES Meta-IV Language. </title> <type> Technical Report, </type> <institution> IFAD, </institution> <month> May </month> <year> 1991. </year>
Reference: [Lintulampi91] <author> Lintulampi, Raino. </author> <title> Definition for the executable Iptes SA/RT. </title> <type> Technical Report, </type> <institution> Technical Research Centre of Finland, Computer Technology Laboratory, </institution> <address> P.O. Box 201, SF-90571 Oulu, FINLAND, </address> <month> September </month> <year> 1991. </year>
Reference: [Pezze&92] <author> Mauro Pezze, Sandro Morasca, Dino Mandrioli, Carlo Ghezzi and Miguel Felder. </author> <title> Task T34 report: representing time by means of high level time Petri nets. </title> <type> Technical Report, </type> <institution> Po-litechnico di Milano, </institution> <month> January </month> <year> 1992. </year>
Reference: [Ward&85] <author> P.T. Ward and S.J. Mellor. </author> <title> Structured Development for Real-Time Systems. Volume 1-3, </title> <publisher> Yourdon Press, </publisher> <address> New York, </address> <pages> 1985-1986. </pages>
Reference: [Ward86] <author> P.T. Ward. </author> <title> The Transformation Schema: An Extension of the Data Flow Diagram to Represent Control and Timing. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-12(2):198-210, </volume> <month> February </month> <year> 1986. </year> <month> 23 </month>
Reference-contexts: Finally we decided not to cope with a particular execution strategy for SA/RT. In particular we do not assume the depth first execution strategy (the one suggested by Ward in <ref> [Ward86] </ref>) as the only possible strategy, but rather allow the choice of the execution strategy at the execution phase.
References-found: 12

