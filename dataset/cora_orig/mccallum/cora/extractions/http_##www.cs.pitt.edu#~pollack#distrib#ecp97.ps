URL: http://www.cs.pitt.edu/~pollack/distrib/ecp97.ps
Refering-URL: http://www.cs.pitt.edu/~pollack/distrib/guide.html
Root-URL: 
Title: Contingency Selection in Plan Generation  
Author: Nilufer Onder and Martha E. Pollack ; 
Address: Pittsburgh, Pittsburgh PA 15260, USA  
Affiliation: 1 Department of Computer Science 2 Intelligent Systems Program University of  
Web: (ECP'97)  
Note: Appears in the Proceedings of the Fourth European Conference on Planning  
Abstract: A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? One cannot, in general, plan for all the failures that can be anticipated: there are simply too many. But neither can one ignore all the possible failures, or one will fail to produce sufficiently flexible plans. We describe a planning system that attempts to identify the contingencies that contribute the most to a plan's overall value. Plan generation proceeds by extending the plan to include actions that will be taken in case the identified contingencies fail, iterating until either a given expected value threshold is reached or the planning time is exhausted. We provide details of the algorithm, discuss its implementation in the Mahinur system, and give initial results of experiments comparing it with the C-Buridan approach to conditional planning.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Jim Blythe and Manuela Veloso. </author> <title> Analogical replay for efficient conditional planning. </title> <booktitle> In Proc. 14th Nat. Conf. on Artificial Intelligence, </booktitle> <pages> pages 668-773, </pages> <year> 1997. </year>
Reference-contexts: However, the state space can be enormous, making it difficult or impossible to generate complete policies or truly universal plans. 3 Conditional planners take the middle road. They allow for conditional actions with multiple possible outcomes and for sensing actions that allow agents to determine the current state <ref> [1, 3, 4, 5, 10, 11] </ref>. A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? In this paper, we describe Mahinur, a probabilistic partial-order planner that supports conditional planning with contingency selection. <p> However, before defining those, we will describe the prior approaches taken to conditional planning. 3 Prior Approaches The literature on conditional planning mirrors the broader literature on plan generation in having both total-order and partial-order representations for plans. Total-order conditional planners include the Plinth [5] and the Weaver <ref> [1] </ref> systems. Although these systems do not directly focus on the problem of intelligently selecting contingencies to plan for, they do in practice make such selections using heuristics. <p> We observed a similar explosion of the search space on the SHIP-REJECT problem, a standard textbook problem on conditional planning (TIREWORLD [12]), and examples from conditional planning literature (TRANSPORT PACKAGE <ref> [1] </ref> and TREATMENT [7]). Comparing the last column to the second column displays a second advantage of forming contingencies. The search space is decreased by heuristically selecting one outcome in a contingency rather than generate a plan for each outcome.
Reference: 2. <author> T. Dean, L. P. Kaelbling, J. Kirman, and A. Nicholson. </author> <title> Planning under time constraints in stochastic domains. </title> <journal> Artificial Intelligence, </journal> <volume> 76 </volume> <pages> 35-74, </pages> <year> 1995. </year>
Reference: 3. <author> Denise Draper, Steve Hanks, and Daniel Weld. </author> <title> Probabilistic planning with information gathering and contingent execution. </title> <booktitle> In Proc. 2nd Int. Conf. on AI Planning Systems, </booktitle> <pages> pages 31-36, </pages> <year> 1994. </year>
Reference-contexts: However, the state space can be enormous, making it difficult or impossible to generate complete policies or truly universal plans. 3 Conditional planners take the middle road. They allow for conditional actions with multiple possible outcomes and for sensing actions that allow agents to determine the current state <ref> [1, 3, 4, 5, 10, 11] </ref>. A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? In this paper, we describe Mahinur, a probabilistic partial-order planner that supports conditional planning with contingency selection. <p> One of our research aims has been to explore this conjecture, and we have therefore focused on partial-order approaches to conditional planning. The most well-known probabilistic partial-order planner is C-Buridan <ref> [3] </ref>. C-Buridan constructs conditional plans in a somewhat indirect fashion. In some situations, there will be more than one operator that can achieve a goal G. To increase the support for G, C-Buridan may introduce multiple steps into the plan, only to realize that those steps conflict with one another. <p> To resolve the conflict, it has a special mechanism for introducing an observation action. The observation action will have two possible outcomes, and C-Buridan will split the plan into two branches, associating each branch arbitrarily with one of the conflicting outcomes. Consider the example from the C-Buridan paper <ref> [3] </ref>. It involves a part which must be processed. Two alternative actions, SHIP and REJECT, both have an effect PROCESSED; thus, C-Buridan will insert both a SHIP and a REJECT step into the plan.
Reference: 4. <author> Oren Etzioni, Steve Hanks, Daniel Weld, Denise Draper, Neal Lesh, and Mike Williamson. </author> <title> An approach to planning with incomplete information. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Repr. and Reasoning, </booktitle> <pages> pages 115-125, </pages> <year> 1992. </year>
Reference-contexts: However, the state space can be enormous, making it difficult or impossible to generate complete policies or truly universal plans. 3 Conditional planners take the middle road. They allow for conditional actions with multiple possible outcomes and for sensing actions that allow agents to determine the current state <ref> [1, 3, 4, 5, 10, 11] </ref>. A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? In this paper, we describe Mahinur, a probabilistic partial-order planner that supports conditional planning with contingency selection.
Reference: 5. <author> Robert P. Goldman and Mark S. Boddy. </author> <title> Epsilon-safe planning. </title> <booktitle> In Proc. 10th Conf. on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 253-261, </pages> <year> 1994. </year>
Reference-contexts: However, the state space can be enormous, making it difficult or impossible to generate complete policies or truly universal plans. 3 Conditional planners take the middle road. They allow for conditional actions with multiple possible outcomes and for sensing actions that allow agents to determine the current state <ref> [1, 3, 4, 5, 10, 11] </ref>. A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? In this paper, we describe Mahinur, a probabilistic partial-order planner that supports conditional planning with contingency selection. <p> However, before defining those, we will describe the prior approaches taken to conditional planning. 3 Prior Approaches The literature on conditional planning mirrors the broader literature on plan generation in having both total-order and partial-order representations for plans. Total-order conditional planners include the Plinth <ref> [5] </ref> and the Weaver [1] systems. Although these systems do not directly focus on the problem of intelligently selecting contingencies to plan for, they do in practice make such selections using heuristics.
Reference: 6. <author> Peter Haddawy and Steve Hanks. </author> <title> Utility models for goal-directed decision-theoretic planners. </title> <type> Technical Report 93-06-04, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <year> 1993. </year>
Reference-contexts: c with respect to g is: evg (c; g) = val (g); if c directly supports g, max (k 1 ; : : : ; k n+1 ) fi val (g); otherwise. 6 The utility of one subgoal does not depend on the degree to which other goals are satisfied <ref> [6] </ref>. For z top-level goals, the expected value of c is, EV (c) = P z We next consider the computation of expected disutility of a contingency's failure.
Reference: 7. <author> Peter Haddawy and Meliani Suwandi. </author> <title> Decision-theoretic refinement planning using inheritance abstraction. </title> <booktitle> In Proc. 2nd Int. Conf. on AI Planning Systems, </booktitle> <pages> pages 266-271, </pages> <year> 1994. </year>
Reference-contexts: We observed a similar explosion of the search space on the SHIP-REJECT problem, a standard textbook problem on conditional planning (TIREWORLD [12]), and examples from conditional planning literature (TRANSPORT PACKAGE [1] and TREATMENT <ref> [7] </ref>). Comparing the last column to the second column displays a second advantage of forming contingencies. The search space is decreased by heuristically selecting one outcome in a contingency rather than generate a plan for each outcome. <p> Other relevant work includes the recent decision-theoretic planning literature, e.g., the Pyrrhus system [13] which prunes the search space by using domain-specific heuristic knowledge, and the DRIPS system <ref> [7] </ref> which uses an abstraction hierarchy. Our approach combines the Buridan mechanism for managing probabilistic actions with a CNLP-style of conditional branch formation and adds techniques for identifying contingencies and computing their effect on overall plan success.
Reference: 8. <author> Nicholas Kushmerick, Steve Hanks, and Daniel S. Weld. </author> <title> An algorithm for probabilistic planning. </title> <journal> Artificial Intelligence, </journal> <volume> 76 </volume> <pages> 239-286, </pages> <year> 1995. </year>
Reference-contexts: The planner simply has to try every possible pairing of observation labels and subsequent actions into distinct contexts, resulting in needless expansion of the search space. 4 The Mahinur System Our approach to conditional planning combines the Buridan system <ref> [8] </ref> for managing probabilistic actions with a CNLP-style [10] approach to handling contingencies. 4 Given the problems outlined in the previous section, we needed to keep several features of the CNLP system that C-Buridan had chosen to modify. We also added mechanisms for intelligent contingency selection. <p> The actions that are inserted to support the new goal then constitute the "other" branch of the conditional plan. 5 4.1 Actions and Contingencies We build on the representation for probabilistic actions that was developed for Buridan <ref> [8, p. 247] </ref>. Causal actions are those that alter the state of the world.
Reference: 9. <author> Nilufer Onder and Martha E. Pollack. </author> <title> Contingency selection in plan generation. </title> <booktitle> In AAAI Fall Symp. on Plan Execution: Problems and Issues, </booktitle> <pages> pages 102-108, </pages> <year> 1996. </year>
Reference-contexts: We therefore define a composite step as a portion of the plan graph rooted at an observation action. Although composite steps are an important part of our overall framework we will omit the formal definitions for brevity in this paper (See <ref> [9] </ref> for the general definitions). 4.3 Expected Disutility The importance of planning for the failure of any particular contingency can be seen to be a factor of two things: the probability that the contingency will fail, and the degree to which the failure will affect the overall success of the plan.
Reference: 10. <author> Mark A. Peot and David E. Smith. </author> <title> Conditional nonlinear planning. </title> <booktitle> In Proc. 1st Int. Conf. on AI Planning Systems, </booktitle> <pages> pages 189-197, </pages> <year> 1992. </year>
Reference-contexts: However, the state space can be enormous, making it difficult or impossible to generate complete policies or truly universal plans. 3 Conditional planners take the middle road. They allow for conditional actions with multiple possible outcomes and for sensing actions that allow agents to determine the current state <ref> [1, 3, 4, 5, 10, 11] </ref>. A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? In this paper, we describe Mahinur, a probabilistic partial-order planner that supports conditional planning with contingency selection. <p> The planner simply has to try every possible pairing of observation labels and subsequent actions into distinct contexts, resulting in needless expansion of the search space. 4 The Mahinur System Our approach to conditional planning combines the Buridan system [8] for managing probabilistic actions with a CNLP-style <ref> [10] </ref> approach to handling contingencies. 4 Given the problems outlined in the previous section, we needed to keep several features of the CNLP system that C-Buridan had chosen to modify. We also added mechanisms for intelligent contingency selection.
Reference: 11. <author> Louise Pryor and Gregg Collins. </author> <title> Planning for contingencies: A decision based approach. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 4 </volume> <pages> 287-339, </pages> <year> 1996. </year>
Reference-contexts: However, the state space can be enormous, making it difficult or impossible to generate complete policies or truly universal plans. 3 Conditional planners take the middle road. They allow for conditional actions with multiple possible outcomes and for sensing actions that allow agents to determine the current state <ref> [1, 3, 4, 5, 10, 11] </ref>. A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? In this paper, we describe Mahinur, a probabilistic partial-order planner that supports conditional planning with contingency selection.
Reference: 12. <author> Stuart J. Russell and Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1994. </year>
Reference-contexts: In contrast, the problem quickly became hard for C-Buridan because of additional branching that results from overly frequent attempts to handle conflicts by conditional branching. We observed a similar explosion of the search space on the SHIP-REJECT problem, a standard textbook problem on conditional planning (TIREWORLD <ref> [12] </ref>), and examples from conditional planning literature (TRANSPORT PACKAGE [1] and TREATMENT [7]). Comparing the last column to the second column displays a second advantage of forming contingencies. The search space is decreased by heuristically selecting one outcome in a contingency rather than generate a plan for each outcome.
Reference: 13. <author> Mike Williamson and Steve Hanks. </author> <title> Optimal planning with a goal-directed utility model. </title> <booktitle> In Proc. 2nd Int. Conf. on AI Planning Systems, </booktitle> <pages> pages 176-181, </pages> <year> 1994. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: We will empirically compare the heuristic and exact approaches in upcoming work. 8 Summary and Related Work We presented an approach to partial-order conditional planning that directly reasons about the value of planning for alternative contingencies. Other relevant work includes the recent decision-theoretic planning literature, e.g., the Pyrrhus system <ref> [13] </ref> which prunes the search space by using domain-specific heuristic knowledge, and the DRIPS system [7] which uses an abstraction hierarchy.
References-found: 13

