URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-92-52.ps.Z
Refering-URL: http://www.cse.ucsc.edu/~golding/
Root-URL: http://www.cse.ucsc.edu
Title: Weak-consistency group communication and membership  
Author: by Richard Andrew Golding Prof. Darrell Long Prof. Charles McDowell Dr. Kim Taylor Dr. John Wilkes Dean 
Degree: A dissertation submitted in partial satisfaction of the requirements for the degree of DOCTOR OF PHILOSOPHY in  The dissertation of Richard Andrew Golding is approved:  
Date: December 1992  
Affiliation: UNIVERSITY OF CALIFORNIA SANTA CRUZ  COMPUTER AND INFORMATION SCIENCES  of Graduate Studies and Research  
Abstract-found: 0
Intro-found: 1
Reference: [Agrawal91] <author> D. Agrawal and A. Malpani. </author> <title> Efficient dissemination of information in computer networks. </title> <journal> Computer Journal, </journal> <volume> 34(6) </volume> <month> 534-41 (December </month> <year> 1991). </year>
Reference-contexts: If s principals are sending messages, the storage space is then O (sn). The unsynchronized-clocks TSAE protocol was developed independently by Agrawal and Mal-pani <ref> [Agrawal91] </ref>. However, their work did not consider the effects of dynamic group membership. 5.5 Message ordering The message ordering component ensures that messages are delivered from the message log to the application in order (Section 3.4). It also purges log entries, as discussed in Section 5.3.
Reference: [Alon87] <author> Noga Alon, Amnon Barak, and Udi Manber. </author> <title> On disseminating information reliably without broadcasting. </title> <booktitle> Proceedings of 7th International Conference on Distributed Computing Systems (Berlin), </booktitle> <month> pages 74-81 (September </month> <year> 1987). </year>
Reference-contexts: Selection can also be biased by the cost of communication, perhaps measured in terms of latency, or monetary cost of using a communication link. Alon et al. <ref> [Alon87] </ref> proposed the latin square policy, which guarantees that a message is received by all principals in O (log n) time (assuming no principal failure). A latin square is an N fiN matrix of N entries, where every row and column includes every entry once. <p> The uniform, latin squares, and distance-biased policies give essentially identical performance. Age-biased appears to provide slightly better performance, which would appear to contradict the claim by Alon that the latin squares policy is fastest <ref> [Alon87] </ref>. I believe the difference arises from a slight difference in implementation: Alon's implementation requires that every principal propagate messages in well-defined rounds, while this simulation allows propagation to occur at random intervals. This may mitigate some of the benefit derived from Alon's latin squares policy.
Reference: [Alonso90a] <author> Rafael Alonso, Daniel Barbar a, and Luis L. Cova. </author> <title> Using stashing to increase node autonomy in distributed file systems. </title> <booktitle> Proceedings of the 9th IEEE Symposium on Reliable Distributed Systems (October 1990). </booktitle>
Reference-contexts: A server may store more than one domain. Some domains have only one server, while other domains are replicated to several servers. The Clearinghouse used epidemic replication (Section 4.10) to maintain multiple copies of a domain. The quasi-copy technique <ref> [Alonso90b, Barbar a90, Alonso90a] </ref> provides a way to specify bounds on the inconsistency allowed between master and slave copies of data.
Reference: [Alonso90b] <author> Rafael Alonso, Daniel Barbar a, and Hector Garcia-Molina. </author> <title> Data caching issues in an information retrieval system. </title> <journal> ACM Transactions on Database Systems, </journal> <month> 15(3) (September </month> <year> 1990). </year>
Reference-contexts: A server may store more than one domain. Some domains have only one server, while other domains are replicated to several servers. The Clearinghouse used epidemic replication (Section 4.10) to maintain multiple copies of a domain. The quasi-copy technique <ref> [Alonso90b, Barbar a90, Alonso90a] </ref> provides a way to specify bounds on the inconsistency allowed between master and slave copies of data. <p> Slice principals prefetch items according to user-specified interests. Users specify a query, and the slice principal maintains a copy of every item that matches the query. Alonso, Barbar a, and Garcia-Molina have researched similar issues for systems that maintain quasi-copies of a central database <ref> [Alonso90b] </ref>. They point out that slices are similar to materialized views in a relational database. As with database views, the items in a slice are determined by evaluating an expression 133 that has the same form as a query on the group state.
Reference: [ANSA89] <institution> Architecture Projects Management Ltd. </institution> <month> ANSA: </month> <title> An Engineer's Introduction to the Architecture (November 1989). </title>
Reference-contexts: The second class servers contain read-only copies, and are 140 updated asynchronously from the first class servers. Caches act as an unofficial third class of service to which updates are not propagated. The Advanced Networked Systems Architecture (ANSA) defines an architecture for object-oriented distributed computing <ref> [ANSA89, ANSA91] </ref>. It includes many components, including group communication. The Trader provides a descriptive name service, which maps content-oriented queries, which include typing information, into references to objects that implement the appropriate service. The references can be used to perform a location-transparent invocation of operations on the service.
Reference: [ANSA91] <institution> Architecture Projects Management Ltd. </institution> <month> ANSA: </month> <title> A System Designer's Introduction to the Architecture (April 1991). </title>
Reference-contexts: The second class servers contain read-only copies, and are 140 updated asynchronously from the first class servers. Caches act as an unofficial third class of service to which updates are not propagated. The Advanced Networked Systems Architecture (ANSA) defines an architecture for object-oriented distributed computing <ref> [ANSA89, ANSA91] </ref>. It includes many components, including group communication. The Trader provides a descriptive name service, which maps content-oriented queries, which include typing information, into references to objects that implement the appropriate service. The references can be used to perform a location-transparent invocation of operations on the service.
Reference: [Bal89] <author> Henri E. Bal. </author> <title> The Shared Data-Object Model as a Paradigm for Programming Distributed Systems. </title> <type> PhD thesis (1989). </type> <institution> Vrije Universiteit Amsterdam. </institution>
Reference-contexts: The protocols rely on interactive message delivery, so they are sensitive to transient network and host failure. I have considered how several replication protocols can be implemented using a group multicast message delivery protocol [Golding92d, Golding91b]. 4.3 Orca RTS The Orca programming language <ref> [Bal89, Bal90] </ref> provides language constructs for distributed programming. Distributed applications are written in terms of shared data objects that can be accessed by any cooperating process. The shared objects are similar to a distributed shared memory, except that each object is a structured encapsulation of data values and operations. <p> The Orca compiler generates code that uses a run time system to manipulate shared objects. The run time system includes a group communication system and a process manager. Bal discusses three distributed run time systems, as well as one for a shared-memory multiprocessor <ref> [Bal89, Chapter 6] </ref>. One of the distributed implementations relied on reliable multicast, one on unreliable multicast, while the third used Amoeba RPC [Mullender90, Mullender86]. The first implementation is based upon a reliable, interactive multicast protocol that delivers update messages in a total order.
Reference: [Bal90] <author> Henri E. Bal, Andrew S. Tanenbaum, and M. Frans Kaashoek. Orca: </author> <title> a language for distributed programming. </title> <journal> SIGPLAN Notices, </journal> <volume> 25(5) </volume> <month> 17-24 (May </month> <year> 1990). </year>
Reference-contexts: The protocols rely on interactive message delivery, so they are sensitive to transient network and host failure. I have considered how several replication protocols can be implemented using a group multicast message delivery protocol [Golding92d, Golding91b]. 4.3 Orca RTS The Orca programming language <ref> [Bal89, Bal90] </ref> provides language constructs for distributed programming. Distributed applications are written in terms of shared data objects that can be accessed by any cooperating process. The shared objects are similar to a distributed shared memory, except that each object is a structured encapsulation of data values and operations.
Reference: [Barbar a86] <author> Daniel Barbar a, Hector Garcia-Molina, and Annemarie Spauster. </author> <title> Policies for dynamic vote reassignment. </title> <booktitle> Proceedings of the 6th International Conference on Distributed Computing Systems (Cambridge, </booktitle> <address> Massachusetts), </address> <month> pages 37-44 (May </month> <year> 1986). </year>
Reference-contexts: Each operation collects votes from replicas, and can proceed when it has collected a quorum of votes. Majority Consensus Voting protocols [Thomas79, Gifford79] assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail <ref> [Barbar a86] </ref>, or change quorum requirements [Davcev85, Jajodia87, Long88]. The Virtual Partition protocol [El-Abbadi86] is a hybrid between available copy and voting. Most of these protocols cannot scale to large numbers of replicas and require excessive communication overhead on wide-area networks.
Reference: [Barbar a90] <author> Daniel Barbar a and Hector Garcia-Molina. </author> <title> The case for controlled inconsistency in replicated data (position paper). </title> <booktitle> Proceedings of the Workshop on the Management of Replicated Data (Houston, </booktitle> <address> Texas), </address> <month> pages 35-8 (November </month> <year> 1990). </year>
Reference-contexts: A server may store more than one domain. Some domains have only one server, while other domains are replicated to several servers. The Clearinghouse used epidemic replication (Section 4.10) to maintain multiple copies of a domain. The quasi-copy technique <ref> [Alonso90b, Barbar a90, Alonso90a] </ref> provides a way to specify bounds on the inconsistency allowed between master and slave copies of data.
Reference: [Berners-Lee92] <author> Tim Berners-Lee, Robert Cailliau, Jean-Francois Groff, and Bernd Pollermann. </author> <title> World-Wide Web: the information universe. </title> <journal> Electronic Networking: Research, Applications, and Policy, </journal> <note> 1(2) (Spring 1992). 148 </note>
Reference-contexts: This is the centralized approach. A centralized group communication system requires that all group members communicate with the central group server to send and receive every message. Many current wide-area services have taken this approach, including the WAIS text-retrieval system [Kahle89, Kahle91], the World Wide Web distributed hypertext system <ref> [Berners-Lee92] </ref>, and the Archie FTP location service [Emtage92b]. A central server is easy to implement and uncomplicated to communicate with. Unfortunately, it is only as available as the host it runs on and the network between it and its clients.
Reference: [Bernstein84] <author> Philip A. Bernstein and Nathan Goodman. </author> <title> An algorithm for concurrency control and recovery in replicated distributed databases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 9(4) </volume> <month> 596-615 (December </month> <year> 1984). </year>
Reference-contexts: A principal can act both as a client and as a replica. Every read and write operation is atomic and consistent, the protocol aborts any operation that cannot observe an up-to-date value. There are three broad classes of replication protocol: available copy, voting, and hybrids. The available copy protocols <ref> [Bernstein84, Bernstein87] </ref> are sometimes called the read-one-write-all protocols. Update operations must be applied at all available replicas, while a client can read from any replica. Correct execution of these protocols require that the network never partition, and that messages be delivered reliably.
Reference: [Bernstein87] <author> P. A. Bernstein, V. Hadzilacos, and N. Goodman. </author> <title> Concurrency control and recovery in database systems (1987). </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts. </address>
Reference-contexts: A principal can act both as a client and as a replica. Every read and write operation is atomic and consistent, the protocol aborts any operation that cannot observe an up-to-date value. There are three broad classes of replication protocol: available copy, voting, and hybrids. The available copy protocols <ref> [Bernstein84, Bernstein87] </ref> are sometimes called the read-one-write-all protocols. Update operations must be applied at all available replicas, while a client can read from any replica. Correct execution of these protocols require that the network never partition, and that messages be delivered reliably.
Reference: [Birman87] <author> Kenneth P. Birman and Thomas A. Joseph. </author> <title> Reliable communication in the presence of failures. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 5(1) </volume> <month> 47-76 (February </month> <year> 1987). </year>
Reference-contexts: Other processes can maintain read-only secondary copies, which are updated by the primary copy using a two-phase locking protocol. The run time system dynamically allocates secondary copies at those processes that perform frequent read-only operations. 4.4 Isis The Isis distributed programming toolkit <ref> [Birman87, Birman91] </ref> is without doubt one of the most successful group communication systems yet developed. It has been used to develop many applications, ranging from replicated file systems to financial applications. 40 Isis provides atomic, interactive delivery with total or causal message orderings. <p> In contrast to the weak consistency mechanism presented in this chapter, other group membership mechanisms ensure greater consistency of group views at the expense of latency and communication overhead. Both the ISIS system <ref> [Birman87, Birman91] </ref> and a group membership mechanism by Cristian [Cristian89] are built on top of atomic broadcast protocols, and hence provide each principal with the same sequence of group views. Ricciardi [Ricciardi91] is investigating an alternative group membership mechanism for Isis that does not use the underlying atomic broadcast. <p> But what about principals that join after it is sent? And what of principals that leave before they can receive the message? One answer to these questions is to order group operations along with application messages. This was the approach taken in Isis <ref> [Birman87, Birman91] </ref>. If messages are delivered in a total 83 order, then the set of member principals is well-defined and consistent at every principal whenever a message is delivered. Principal join and leave operations will be delayed while other messages are being propagated.
Reference: [Birman90] <author> Kenneth Birman, Andre Schiper, and Pat Stephenson. </author> <title> Fast causal multicast. </title> <note> Technical report TR-1105 (13 April 1990). </note> <institution> Department of Computer Science, Cornell University. </institution>
Reference: [Birman91] <author> Kenneth P. Birman, Robert Cooper, and Barry Gleeson. </author> <title> Programming with process groups: group and multicast semantics. </title> <note> Technical report TR-91-1185 (29 January 1991). </note> <institution> Department of Computer Science, Cornell University. </institution>
Reference-contexts: Other processes can maintain read-only secondary copies, which are updated by the primary copy using a two-phase locking protocol. The run time system dynamically allocates secondary copies at those processes that perform frequent read-only operations. 4.4 Isis The Isis distributed programming toolkit <ref> [Birman87, Birman91] </ref> is without doubt one of the most successful group communication systems yet developed. It has been used to develop many applications, ranging from replicated file systems to financial applications. 40 Isis provides atomic, interactive delivery with total or causal message orderings. <p> In contrast to the weak consistency mechanism presented in this chapter, other group membership mechanisms ensure greater consistency of group views at the expense of latency and communication overhead. Both the ISIS system <ref> [Birman87, Birman91] </ref> and a group membership mechanism by Cristian [Cristian89] are built on top of atomic broadcast protocols, and hence provide each principal with the same sequence of group views. Ricciardi [Ricciardi91] is investigating an alternative group membership mechanism for Isis that does not use the underlying atomic broadcast. <p> But what about principals that join after it is sent? And what of principals that leave before they can receive the message? One answer to these questions is to order group operations along with application messages. This was the approach taken in Isis <ref> [Birman87, Birman91] </ref>. If messages are delivered in a total 83 order, then the set of member principals is well-defined and consistent at every principal whenever a message is delivered. Principal join and leave operations will be delayed while other messages are being propagated.
Reference: [Birrell87] <author> Andrew D. Birrell, Michael B. Jones, and Edward P. Wobber. </author> <title> A simple and efficient implementation for small databases. </title> <booktitle> Proceedings of the 11th ACM Symposium on Operating Systems Principles (Austin, </booktitle> <address> Texas). </address> <note> Published as Operating Systems Review, 21(5) </note> <month> 149-54 (November </month> <year> 1987). </year>
Reference-contexts: The analysis in Chapter 7 shows that the probability of this happening is negligible for well-written systems. However, in practice the update rates of many wide-area systems will be small enough that this problem is unimportant. Further, careful implementation can avoid most of the expense anyway <ref> [Birrell87] </ref>. 70 5.4.3 Combining anti-entropy with unreliable multicast Timestamped anti-entropy can be combined with an unreliable multicast to spread information rapidly. When a principal first sends a message, it can multicast it to other principals.
Reference: [Bloch87] <author> Joshua J. Bloch, Dean S. Daniels, and Alfred Z. Spector. </author> <title> A weighted voting algorithm for replicated directories. </title> <journal> Journal of the ACM, </journal> <volume> 34(4) </volume> <month> 859-909 (October </month> <year> 1987). </year>
Reference: [Bowman90] <author> C. Mic Bowman. Univers: </author> <title> the construction of an internet-wide descriptive naming system. </title> <type> Technical report TR 90-27 (10 August 1990). </type> <institution> Department of Computer Science, University of Arizona. </institution>
Reference-contexts: The usual solution is to have a meta-database that lists the databases that are available, and a description of their contents. The meta-database can be built using this architecture as well, perhaps as part of a descriptive naming service <ref> [Bowman90] </ref>. A user can specify what databases they want to use by specifying a selection condition on the meta-database entries. This condition can be used to build a slice of the meta-database, and user queries can be routed to those databases.
Reference: [Burrows89a] <author> Michael Burrows, Martn Abadi, and Roger Needham. </author> <title> A logic of authentication. </title> <booktitle> Proceedings of the 12th ACM Symposium on Operating Systems Principles (Litchfield Park, </booktitle> <address> Arizona). </address> <note> Published as Operating Systems Review, 23(5) </note> <month> 1-13 (December </month> <year> 1989). </year>
Reference-contexts: the amount of state principals would maintain, allow message logs to be purged more rapidly, and produce lower message traffic than the system presented here. 143 9.5 Authentication Every authentication system of which I am aware either requires a trusted authentication service, or the a priori presence of shared information <ref> [Burrows89b, Burrows89a, Lampson91] </ref>. For example, the Kerberos authentication service [Steiner88] uses a trusted server. This violates the assumption that no part of the system is centralized. These systems also implicitly assume a completely connected logical network topology.
Reference: [Burrows89b] <author> Michael Burrows, Martn Abadi, and Roger Needham. </author> <title> A login of authentication. </title> <type> Technical report 39 (February 1989). </type> <institution> Digital Equipment Corporation Systems Research Center, </institution> <address> Palo Alto, CA. </address>
Reference-contexts: the amount of state principals would maintain, allow message logs to be purged more rapidly, and produce lower message traffic than the system presented here. 143 9.5 Authentication Every authentication system of which I am aware either requires a trusted authentication service, or the a priori presence of shared information <ref> [Burrows89b, Burrows89a, Lampson91] </ref>. For example, the Kerberos authentication service [Steiner88] uses a trusted server. This violates the assumption that no part of the system is centralized. These systems also implicitly assume a completely connected logical network topology.
Reference: [Campbell92] <author> Roy H. Campbell, Nayeem Islam, and Peter Madany. </author> <title> Choices, frameworks, and refinement. </title> <journal> Computing Systems, </journal> <volume> 5(3) </volume> <month> 217-57 (Summer </month> <year> 1992). </year> <institution> Usenix Association. </institution>
Reference: [Cheriton84] <author> David R. Cheriton and Willy Zwaenepoel. </author> <title> One-to-many interprocess communication in the V-system. </title> <note> Technical report STAN-CS-84-1011 (August 1984). </note> <institution> Computer Systems Laboratory, Department of Computer Science, Stanford University. </institution>
Reference: [Comer88] <author> Douglas Comer. </author> <title> Internetworking with TCP/IP: </title> <booktitle> principles, protocols, and architecture (1988). </booktitle> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ. </address> <month> 149 </month>
Reference: [Cristian86] <author> Flaviu Cristian, Houtan Aghili, Ray Strong, and Danny Dolev. </author> <title> Atomic broadcast: from simple message diffusion to Byzantine agreement. </title> <type> Technical report RJ 5244 (30 July 1986). </type> <institution> IBM Almaden Research Center. </institution>
Reference-contexts: Formally, there must be another principal p n1 2 V (p 0 ; t 0 ; ffi n1 ) at 1 It is instructive to compare this definition and proof of diffusion to that used by Cristian <ref> [Cristian86, Cristian90] </ref> in his work on atomic broadcast. 64 ffi n1 &lt; ffi n , such that (p n1 ; p n ) 2 S ae (t + ffi n1 ; ffi n ffi n1 ). The predecessor principal p n1 can be equal to p 0 .
Reference: [Cristian89] <author> Flaviu Cristian. </author> <title> A probabilistic approach to distributed clock synchronization. </title> <booktitle> Proceedings of the 9th International Conference on Distributed Computing Systems (Newport Beach, </booktitle> <address> CA), </address> <month> pages 288-96 </month> <year> (1989). </year>
Reference-contexts: In contrast to the weak consistency mechanism presented in this chapter, other group membership mechanisms ensure greater consistency of group views at the expense of latency and communication overhead. Both the ISIS system [Birman87, Birman91] and a group membership mechanism by Cristian <ref> [Cristian89] </ref> are built on top of atomic broadcast protocols, and hence provide each principal with the same sequence of group views. Ricciardi [Ricciardi91] is investigating an alternative group membership mechanism for Isis that does not use the underlying atomic broadcast.
Reference: [Cristian90] <author> Flaviu Cristian. </author> <title> Synchronous atomic broadcast for redundant broadcast channels. </title> <note> Technical report RJ 7203 (December 1989, revised April 1990). </note> <institution> IBM Almaden Research Center. </institution>
Reference-contexts: Formally, there must be another principal p n1 2 V (p 0 ; t 0 ; ffi n1 ) at 1 It is instructive to compare this definition and proof of diffusion to that used by Cristian <ref> [Cristian86, Cristian90] </ref> in his work on atomic broadcast. 64 ffi n1 &lt; ffi n , such that (p n1 ; p n ) 2 S ae (t + ffi n1 ; ffi n ffi n1 ). The predecessor principal p n1 can be equal to p 0 .
Reference: [Cristian91] <author> Flaviu Cristian. </author> <title> Reaching agreement on processor-group membership in synchronous distributed systems. </title> <journal> Distributed Computing, </journal> <volume> 4(4) </volume> <month> 175-87 </month> <year> (1991). </year>
Reference: [Davcev85] <author> Da nco Davcev and Walter A. Burkhard. </author> <title> Consistency and recovery control for replicated files. </title> <booktitle> Proceedings of the 10th ACM Symposium on Operating Systems Principles (Orcas Island, </booktitle> <address> Washington). </address> <note> Published as Operating Systems Review, 19(5) </note> <month> 87-96 (December </month> <year> 1985). </year>
Reference-contexts: Majority Consensus Voting protocols [Thomas79, Gifford79] assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail [Barbar a86], or change quorum requirements <ref> [Davcev85, Jajodia87, Long88] </ref>. The Virtual Partition protocol [El-Abbadi86] is a hybrid between available copy and voting. Most of these protocols cannot scale to large numbers of replicas and require excessive communication overhead on wide-area networks. The voting protocols generally require communication with several replicas for every operation.
Reference: [Demers88] <author> Alan Demers, Dan Greene, Carl Hauser, Wes Irish, John Larson, Scott Shenker, Howard Sturgis, Dan Swinehart, and Doug Terry. </author> <title> Epidemic algorithms for replicated database maintenance. </title> <journal> Operating Systems Review, </journal> <volume> 22(1) </volume> <month> 8-32 (January </month> <year> 1988). </year>
Reference-contexts: Clients can request any server to 46 look up the binding for a name, and the server will forward the request to the appropriate server if necessary. The Clearinghouse uses three different mechanisms to propagate updates between servers: direct mail, anti-entropy, and rumor mongery <ref> [Demers88, Demers89] </ref>. Direct mail is simply an unreliable best-effort multicast. Rumor mongery provides unreliable eventual delivery, but it is more reliable than a one-time best-effort multicast. To be a rumor monger, a principal selects another principal and sends it one or more hot rumors. <p> Both of these features are especially important for mobile systems that can be disconnected from the Internet for extended periods. The timestamped anti-entropy (TSAE) protocol is similar to the anti-entropy protocol used in the Xerox Clearinghouse <ref> [Demers88, Demers89] </ref>. Each principal periodically contacts another principal, and the two exchange messages from their logs until both logs contain the same set of messages. The TSAE protocol maintains extra data structures that summarize the messages each principal has received, and uses this information to guide the exchanges. <p> This is a simple policy that meets the correctness requirement of contacting every neighbor. Uniform selection can lead to overloaded network links in an internetwork where the physical topology is less connected than the logical. Demers et al. compared uniform to distance-biased selection for the Clearinghouse <ref> [Demers88] </ref>. Their study found that biasing partner selection by distance could reduce traffic on critical intercontinental links in the Xerox Corporate Internetwork by more than an order of magnitude. <p> Researchers at Xerox PARC found that the original version of the Clearinghouse system overloaded their internetwork <ref> [Demers88, Demers89] </ref>. The original implementation used anti-entropy sessions with a best-effort multicast, and used a uniform partner selection policy during anti-entropy. A revised implementation reduced the network load by a combination of fixing implementation bugs, investigating a distance-biased partner selection policy, and adding a rumor mongery propagation method. <p> Communication within a region is fast, while 114 FIGURE 7.15: Traffic per network link on a ring network, varying the number of principals. communication between regions can be expensive. Demers et al. noted that this kind of topology was a problem for the original Clearinghouse protocols <ref> [Demers88] </ref>. Each simulator run was parameterized by the partner selection policy and the topology. The binary tree and mesh partner selection policies were not tested because they were patently inappropriate on ring-like topologies.
Reference: [Demers89] <author> Alan Demers, Mark Gealy, Dan Greene, Carl Hauser, Wes Irish, John Larson, Sue Manning, Scott Shenker, Howard Sturgis, Dan Swinehart, Doug Terry, and Don Woods. </author> <title> Epidemic algorithms for replicated database maintenance. </title> <note> Technical report CSL-89-1 (January 1989). </note> <institution> Xerox Palo Alto Research Center, </institution> <address> CA. </address>
Reference-contexts: Clients can request any server to 46 look up the binding for a name, and the server will forward the request to the appropriate server if necessary. The Clearinghouse uses three different mechanisms to propagate updates between servers: direct mail, anti-entropy, and rumor mongery <ref> [Demers88, Demers89] </ref>. Direct mail is simply an unreliable best-effort multicast. Rumor mongery provides unreliable eventual delivery, but it is more reliable than a one-time best-effort multicast. To be a rumor monger, a principal selects another principal and sends it one or more hot rumors. <p> Both of these features are especially important for mobile systems that can be disconnected from the Internet for extended periods. The timestamped anti-entropy (TSAE) protocol is similar to the anti-entropy protocol used in the Xerox Clearinghouse <ref> [Demers88, Demers89] </ref>. Each principal periodically contacts another principal, and the two exchange messages from their logs until both logs contain the same set of messages. The TSAE protocol maintains extra data structures that summarize the messages each principal has received, and uses this information to guide the exchanges. <p> Researchers at Xerox PARC found that the original version of the Clearinghouse system overloaded their internetwork <ref> [Demers88, Demers89] </ref>. The original implementation used anti-entropy sessions with a best-effort multicast, and used a uniform partner selection policy during anti-entropy. A revised implementation reduced the network load by a combination of fixing implementation bugs, investigating a distance-biased partner selection policy, and adding a rumor mongery propagation method.
Reference: [Deutsch92] <author> Peter Deutsch. </author> <title> Resource discovery in an Internet environment. </title> <type> Master's thesis (June 1992). </type> <institution> School of Computer Science, McGill University. </institution>
Reference: [Downing90a] <author> Alan R. Downing, Ira B. Greenberg, and Jon M. Peha. OSCAR: </author> <title> an architecture for weak-consistency replication. </title> <booktitle> Proceedings of IEEE PARBASE-90 (March 1990). </booktitle>
Reference-contexts: It is not clear how to build a group membership system that properly recomputes the spanning tree as principals join and leave a group without either centralizing the computation or involving the entire group. 4.8 OSCAR OSCAR (Open System for Consistency and Replication) <ref> [Downing90a, Downing90b] </ref> implements weak-consistency replication using a mixture of distributed and centralized elements. It provides reliable eventual message delivery, with a variety of message orderings.
Reference: [Downing90b] <author> Alan R. Downing, Ira B. Greenberg, and Jon M. Peha. OSCAR: </author> <title> a system for weak-consistency replication. </title> <booktitle> Proceedings of the Workshop on Management of Replicated Data (Houston, </booktitle> <address> Texas), </address> <month> pages 26-30 (November </month> <year> 1990). </year>
Reference-contexts: It is not clear how to build a group membership system that properly recomputes the spanning tree as principals join and leave a group without either centralizing the computation or involving the entire group. 4.8 OSCAR OSCAR (Open System for Consistency and Replication) <ref> [Downing90a, Downing90b] </ref> implements weak-consistency replication using a mixture of distributed and centralized elements. It provides reliable eventual message delivery, with a variety of message orderings.
Reference: [El-Abbadi86] <author> A. El-Abbadi and S. Toueg. </author> <title> Availability in partitioned replicated databases. </title> <booktitle> Proceedings of the 5th SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 240-51 (1986). </pages>
Reference-contexts: Majority Consensus Voting protocols [Thomas79, Gifford79] assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail [Barbar a86], or change quorum requirements [Davcev85, Jajodia87, Long88]. The Virtual Partition protocol <ref> [El-Abbadi86] </ref> is a hybrid between available copy and voting. Most of these protocols cannot scale to large numbers of replicas and require excessive communication overhead on wide-area networks. The voting protocols generally require communication with several replicas for every operation.
Reference: [Emtage92a] <author> Alan Emtage. </author> <title> Personal communication (1992). Electronic mail message. </title>
Reference: [Emtage92b] <author> Alan Emtage and Peter Deutsch. </author> <title> Archie an electronic directory service for the Internet. </title> <booktitle> Proceedings of the Winter 1992 Usenix Conference (San Francisco), </booktitle> <month> pages 93-110 (January </month> <year> 1992). </year> <month> 150 </month>
Reference-contexts: Many current wide-area services have taken this approach, including the WAIS text-retrieval system [Kahle89, Kahle91], the World Wide Web distributed hypertext system [Berners-Lee92], and the Archie FTP location service <ref> [Emtage92b] </ref>. A central server is easy to implement and uncomplicated to communicate with. Unfortunately, it is only as available as the host it runs on and the network between it and its clients.
Reference: [Fischer85] <author> M. Fischer, N. Lynch, and M. Paterson. </author> <title> Impossibility of distributed consensus with one faulty process. </title> <journal> Journal of the ACM, </journal> <volume> 32(2) </volume> <month> 374-82 (April </month> <year> 1985). </year>
Reference: [Fowler85] <author> Robert Joseph Fowler. </author> <title> Decentralized object finding using forwarding addresses. </title> <type> PhD thesis, </type> <note> published as Technical report 85-12-1 (December 1985). </note> <institution> University of Washington. </institution>
Reference-contexts: If one Refdbms replica were to miss an update, for example, the database copy at that replica could permanently diverge from others. Systems like location services that provide hints rather than authoritative answers are good candidates for unreliable mechanisms <ref> [Terry85, Oppen81, Jul88, Fowler85] </ref>. 49 Eventual delivery trades latency for reliability. The message delivery component can mask out transient network and host failures by delaying messages and resending them after the fault is repaired. <p> The implementation in Figure 6.4 can be extended to allow a possible sponsor to return a forwarding address for one or more members if it is not itself a member <ref> [Fowler85, Jul88] </ref>. This allows the location service to maintain information that is less up-to-date, as long as the principals that have left the group provide forwarding addresses for some period. This topic is taken up in more detail in Chapter 8. <p> The approach presented so far cannot make this guarantee, because any sample of a membership view can become arbitrarily far out of date. It is possible that every principal in that view has failed or left the group since it was recorded. If those principals leave forwarding addresses <ref> [Fowler85, Jul88] </ref> for other group members, then there is always a way to find a member based on location service information. Often, a change in group membership is most important to nearby clients.
Reference: [Ganatra92] <author> Nitin K. Ganatra. </author> <title> Census: collecting host information on a wide area network. </title> <note> Technical report UCSC-CRL-92-34 (June 1992). </note> <institution> Computer and Information Sciences Board, University of California at Santa Cruz. </institution>
Reference: [Garcia-Molina88] <author> Hector Garcia-Molina and Boris Kogan. </author> <title> An implementation of reliable broadcast using an unreliable multicast facility. </title> <booktitle> Proceedings of the 7th Symposium on Reliable Distributed Systems (Ohio State University, </booktitle> <address> Columbus, OH), </address> <month> pages 101-11 (10-12 October </month> <year> 1988). </year>
Reference-contexts: This support is not as important in a weak-consistency system like Refdbms that uses long-lived principals and a message delivery protocol that hides transient host failure. 4.7 A reliable multicast protocol Garcia-Molina and Kogan <ref> [Garcia-Molina88] </ref> have developed an internetwork multicast protocol that provides reliable interactive delivery. It uses an unreliable interactive (best-effort) multicast 43 protocol to try to disseminate a message. Messages include sequencing information that allows receivers to detect when they have missed one or more earlier messages.
Reference: [Gifford79] <author> D. K. Gifford. </author> <title> Weighted voting for replicated data. </title> <booktitle> Proceedings of the 7th ACM Symposium on Operating Systems Principles (Pacific Grove, </booktitle> <address> California), </address> <month> pages 150-62 (December </month> <year> 1979). </year>
Reference-contexts: In the voting protocols, each replica is assigned one or more votes. Each operation collects votes from replicas, and can proceed when it has collected a quorum of votes. Majority Consensus Voting protocols <ref> [Thomas79, Gifford79] </ref> assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail [Barbar a86], or change quorum requirements [Davcev85, Jajodia87, Long88]. The Virtual Partition protocol [El-Abbadi86] is a hybrid between available copy and voting.
Reference: [Golding91a] <author> Richard Golding and Darrell D. E. </author> <title> Long. Accessing replicated data in a large-scale distributed system. </title> <journal> International Journal in Computer Simulation, </journal> <note> 1(2) (1991, to appear). </note>
Reference: [Golding91b] <author> Richard A. Golding. </author> <title> Accessing replicated data in a large-scale distributed systems. </title> <note> Master's thesis; published as Technical report UCSC-CRL-91-18 (June 1991). </note> <institution> Computer and Information Sciences Board, University of California at Santa Cruz. </institution>
Reference-contexts: The protocols rely on interactive message delivery, so they are sensitive to transient network and host failure. I have considered how several replication protocols can be implemented using a group multicast message delivery protocol <ref> [Golding92d, Golding91b] </ref>. 4.3 Orca RTS The Orca programming language [Bal89, Bal90] provides language constructs for distributed programming. Distributed applications are written in terms of shared data objects that can be accessed by any cooperating process.
Reference: [Golding92a] <author> Richard Golding. </author> <title> A weak-consistency architecture for distributed information services. </title> <booktitle> Computing Systems, 5(4) (Fall 1992). Usenix Association. </booktitle>
Reference: [Golding92b] <author> Richard Golding. </author> <title> End-to-end performance prediction for the Internet progress report. </title> <note> Technical report UCSC-CRL-92-26 (June 1992). </note> <institution> Computer and Information Sciences Board, University of California at Santa Cruz. </institution>
Reference: [Golding92c] <author> Richard A. Golding. </author> <title> A weak-consistency architecture for distributed information services. </title> <note> Technical report UCSC-CRL-92-30 (June 1992). </note> <institution> Computer and Information Sciences Board, University of California at Santa Cruz. </institution>
Reference: [Golding92d] <author> Richard A. Golding and Darrell D. E. </author> <title> Long. Quorum-oriented multicast protocols for data replication. </title> <booktitle> Proceedings of the 8th International Conference on Data Engineering (Tempe, </booktitle> <address> Arizona), </address> <month> pages 490-7 (February </month> <year> 1992). </year>
Reference-contexts: The protocols rely on interactive message delivery, so they are sensitive to transient network and host failure. I have considered how several replication protocols can be implemented using a group multicast message delivery protocol <ref> [Golding92d, Golding91b] </ref>. 4.3 Orca RTS The Orca programming language [Bal89, Bal90] provides language constructs for distributed programming. Distributed applications are written in terms of shared data objects that can be accessed by any cooperating process.
Reference: [Gray86] <author> Jim Gray. </author> <title> Why do computers stop and what can be done about it? Proceedings of the 5th Symposium on Reliability in Distributed Software and Database Systems, </title> <month> pages 3-11 </month> <year> (1986). </year>
Reference: [Heidemann92] <author> John S. Heidemann, Thomas W. Page, Richard G. Guy, and Gerald J. Popek. </author> <title> Primarily disconnected operation: experiences with Ficus. </title> <booktitle> Proceedings of 2nd Workshop on the Management of Replicated Data (Monterey, </booktitle> <address> CA), </address> <month> pages 2-5 (November </month> <year> 1992). </year> <month> 151 </month>
Reference: [Hisgen90] <author> Andy Hisgen, Andrew Birrell, Chuck Jerian, Timothy Mann, Michael Schroeder, and Garret Swart. </author> <title> Granularity and semantic level of replication in the Echo distributed file system. </title> <booktitle> Proceedings of the Workshop on the Management of Replicated Data (Houston, </booktitle> <address> Texas), </address> <month> pages 2-4 (November </month> <year> 1990). </year>
Reference-contexts: The primary copy is responsible for sequencing operations. When a replica recovers from a failure, or when the primary 37 fails, an election is held to determine which replica becomes the primary. The Echo file system <ref> [Mann89, Hisgen90] </ref>, for example, combined primary-copy replication with client caching. The Sun Network Interface Service [Sun88] (commonly called the Yellow Pages service) also uses primary and secondary servers. The Domain Name Service [Mockapetris87] and the Clearinghouse name service [Oppen81] both combine centralization and replication.
Reference: [Islam92] <author> Nayeem Islam and Roy H. Campbell. </author> <title> Object-oriented framework design and implementation. </title> <type> Technical report UIUCDCS-R-92-1737 (March 1992). </type> <institution> Department of Computer Science, University of Illinois at Urbana-Champaign. </institution>
Reference: [Jain91] <author> Raj Jain. </author> <title> The Art of Computer Systems Performance Analysis (1991). </title> <publisher> John Wiley, </publisher> <address> New York. </address>
Reference-contexts: The simulator required several hours on a SparcStation 2 to complete 3000 runs of a 25-principal system. The simulator used the batch-means method <ref> [Jain91] </ref> to determine when the confidence interval of the sampled mean time-to-convergence was less than 2%. Each batch consisted of 500 runs, and at most 3000 batches were collected. 7.3.2 Results Membership views converge rapidly, reaching nearly complete consistency after only a few rounds of anti-entropy.
Reference: [Jajodia87] <author> Sushil Jajodia and David Mutchler. </author> <title> Dynamic voting. </title> <booktitle> Proceedings of the ACM SIGMOD 1987 Annual Conference, </booktitle> <month> pages 227-38 (May </month> <year> 1987). </year>
Reference-contexts: Majority Consensus Voting protocols [Thomas79, Gifford79] assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail [Barbar a86], or change quorum requirements <ref> [Davcev85, Jajodia87, Long88] </ref>. The Virtual Partition protocol [El-Abbadi86] is a hybrid between available copy and voting. Most of these protocols cannot scale to large numbers of replicas and require excessive communication overhead on wide-area networks. The voting protocols generally require communication with several replicas for every operation.
Reference: [Jul88] <author> Eric Jul. </author> <title> Object mobility in a distributed object-oriented system. </title> <type> PhD thesis, </type> <note> published as Technical report 88-12-06 (December 1988). </note> <institution> Computer Science Department, University of Washington. </institution>
Reference-contexts: If one Refdbms replica were to miss an update, for example, the database copy at that replica could permanently diverge from others. Systems like location services that provide hints rather than authoritative answers are good candidates for unreliable mechanisms <ref> [Terry85, Oppen81, Jul88, Fowler85] </ref>. 49 Eventual delivery trades latency for reliability. The message delivery component can mask out transient network and host failures by delaying messages and resending them after the fault is repaired. <p> The implementation in Figure 6.4 can be extended to allow a possible sponsor to return a forwarding address for one or more members if it is not itself a member <ref> [Fowler85, Jul88] </ref>. This allows the location service to maintain information that is less up-to-date, as long as the principals that have left the group provide forwarding addresses for some period. This topic is taken up in more detail in Chapter 8. <p> The approach presented so far cannot make this guarantee, because any sample of a membership view can become arbitrarily far out of date. It is possible that every principal in that view has failed or left the group since it was recorded. If those principals leave forwarding addresses <ref> [Fowler85, Jul88] </ref> for other group members, then there is always a way to find a member based on location service information. Often, a change in group membership is most important to nearby clients.
Reference: [Kahle89] <author> Brewster Kahle. </author> <title> Wide area information server concepts. </title> <type> Technical report TMC-202 (3 November 1989). </type> <institution> Thinking Machines Corporation. </institution>
Reference-contexts: This is the centralized approach. A centralized group communication system requires that all group members communicate with the central group server to send and receive every message. Many current wide-area services have taken this approach, including the WAIS text-retrieval system <ref> [Kahle89, Kahle91] </ref>, the World Wide Web distributed hypertext system [Berners-Lee92], and the Archie FTP location service [Emtage92b]. A central server is easy to implement and uncomplicated to communicate with. Unfortunately, it is only as available as the host it runs on and the network between it and its clients.
Reference: [Kahle91] <author> Brewster Kahle and Art Medlar. </author> <title> An information system for corporate users: wide area information servers. </title> <note> Technical report TMC-199 (8 April 1991). </note> <institution> Thinking Machines Corporation. </institution>
Reference-contexts: This is the centralized approach. A centralized group communication system requires that all group members communicate with the central group server to send and receive every message. Many current wide-area services have taken this approach, including the WAIS text-retrieval system <ref> [Kahle89, Kahle91] </ref>, the World Wide Web distributed hypertext system [Berners-Lee92], and the Archie FTP location service [Emtage92b]. A central server is easy to implement and uncomplicated to communicate with. Unfortunately, it is only as available as the host it runs on and the network between it and its clients.
Reference: [Kistler91] <author> James J. Kistler and M. Satyanarayanan. </author> <title> Disconnected operation in the Coda file system. </title> <booktitle> Proceedings of the 13th ACM Symposium on Operating Systems Principles (Pacific Grove, </booktitle> <address> CA), </address> <month> pages 213-25 (13 October </month> <year> 1991). </year>
Reference: [Ladin90] <author> Rivka Ladin, Barbara Liskov, Liuba Shrira, and Sanjay Ghemawat. </author> <title> Lazy replication: exploiting the semantics of distributed services. </title> <note> Technical report MIT/LCS/TR-484 (July 1990). </note> <institution> Laboratory for Computer Science, Massachusetts Institute of Technology, </institution> <address> Cambridge, MA. </address>
Reference-contexts: Further, this approach cannot function if the logical network topology is not completely connected, while the timestamped anti-entropy protocol can. 4.9 Lazy Replication The Lazy Replication system <ref> [Ladin90, Ladin91, Liskov87] </ref> provides reliable eventual message delivery with a mix of causally and totally consistent orderings. Applications can specify exactly what causal relations should be enforced between messages, so weaker orderings can be specified 45 by omitting some specification.
Reference: [Ladin91] <author> Rivka Ladin, Barbara Liskov, and Liuba Shrira. </author> <title> Lazy replication: exploiting the semantics of distributed services. </title> <note> Position paper for 4th ACM-SIGOPS European Workshop (Bologna). Published as Operating Systems Review, 25(1) </note> <month> 49-55 (January </month> <year> 1991). </year>
Reference-contexts: Further, this approach cannot function if the logical network topology is not completely connected, while the timestamped anti-entropy protocol can. 4.9 Lazy Replication The Lazy Replication system <ref> [Ladin90, Ladin91, Liskov87] </ref> provides reliable eventual message delivery with a mix of causally and totally consistent orderings. Applications can specify exactly what causal relations should be enforced between messages, so weaker orderings can be specified 45 by omitting some specification.
Reference: [Lamport78] <author> Leslie Lamport. </author> <title> Time, clocks, and the ordering of events in a distributed system. </title> <journal> Communications of the ACM, </journal> <volume> 21(7) </volume> <month> 558-65 </month> <year> (1978). </year>
Reference-contexts: This implies that the applications will have channels of communication outside of the group communication system, and outside the domain covered by any virtual time measure. This is the same problem that motivated Lamport's Strong Clock Condition <ref> [Lamport78] </ref>. Recall also that the group membership is assumed static, that the network need not be fully connected, and that principals do not fail permanently. The static membership limitation is removed in Chapter 6. <p> The simple total order will not respect potential causal relations unless the timestamps appended to each message already reflect causality. Since system clocks are unlikely to include causal information, they can be augmented by maintaining a logical clock <ref> [Lamport78] </ref> at each principal. A logical clock is a counter that is incremented every time a principal sends a message or performs an anti-entropy session. The counter is appended to every message or anti-entropy session.
Reference: [Lampson91] <author> Butler Lampson, Mart in Abadi, Michael Burrows, and Edward Wobber. </author> <title> Authentication in distributed systems: theory and practice. </title> <booktitle> Proceedings of 13th ACM Symposium on Operating Systems Principles (Asilomar, </booktitle> <address> Pacific Grove, CA), </address> <month> pages 165-82 (13 October </month> <year> 1991). </year> <month> 152 </month>
Reference-contexts: the amount of state principals would maintain, allow message logs to be purged more rapidly, and produce lower message traffic than the system presented here. 143 9.5 Authentication Every authentication system of which I am aware either requires a trusted authentication service, or the a priori presence of shared information <ref> [Burrows89b, Burrows89a, Lampson91] </ref>. For example, the Kerberos authentication service [Steiner88] uses a trusted server. This violates the assumption that no part of the system is centralized. These systems also implicitly assume a completely connected logical network topology.
Reference: [Leffler89] <author> Samuel J. Leffler, Marshall Kirk McKusick, Michael J. Karels, and John S. Quar-terman. </author> <title> Design and implementation of the 4.3BSD UNIX operating system (1989). </title> <publisher> Addison-Wesley. </publisher>
Reference: [Lesk78] <author> M. E. Lesk. </author> <title> Some applications of inverted indexes on the UNIX system. </title> <note> Computing Science technical report 69 (June 1978). </note> <institution> Bell Laboratories. </institution>
Reference: [Liskov87] <author> Barbara Liskov. </author> <title> Highly-available distributed services. Programming Methodology Group Memo 52 (February 1987). </title> <institution> Laboratory for Computer Science, Massachusetts Institute of Technology, </institution> <address> Cambridge, MA. </address>
Reference-contexts: Further, this approach cannot function if the logical network topology is not completely connected, while the timestamped anti-entropy protocol can. 4.9 Lazy Replication The Lazy Replication system <ref> [Ladin90, Ladin91, Liskov87] </ref> provides reliable eventual message delivery with a mix of causally and totally consistent orderings. Applications can specify exactly what causal relations should be enforced between messages, so weaker orderings can be specified 45 by omitting some specification.
Reference: [Little90] <author> Mark C. Little and Santosh K. Shrivastava. </author> <title> Replicated k-resilient objects in Arjuna. </title> <booktitle> Proceedings of the Workshop on Management of Replicated Data (Houston, </booktitle> <address> Texas), </address> <month> pages 53-8 (November </month> <year> 1990). </year>
Reference-contexts: Ricciardi [Ricciardi91] is investigating an alternative group membership mechanism for Isis that does not use the underlying atomic broadcast. However, it uses two- and three-phase commit protocols to maintain consistent group views. The Arjuna system <ref> [Little90] </ref> maintains a logically centralized group view via atomic transactions. This chapter begins by considering how dynamic principal group membership interacts with message reliability. The reliability guarantee developed in Chapter 5 assumed static group membership. This is followed by definitions of correctness and fault tolerance for membership views.
Reference: [Long88] <author> Darrell D. E. Long and Jehan-Francois P aris. </author> <title> A realistic evaluation of optimistic dynamic voting. </title> <booktitle> Proceedings of the 7th IEEE Symposium on Reliable Distributed Systems (Columbus, </booktitle> <address> OH), </address> <month> pages 129-37 (October </month> <year> 1988). </year>
Reference-contexts: Majority Consensus Voting protocols [Thomas79, Gifford79] assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail [Barbar a86], or change quorum requirements <ref> [Davcev85, Jajodia87, Long88] </ref>. The Virtual Partition protocol [El-Abbadi86] is a hybrid between available copy and voting. Most of these protocols cannot scale to large numbers of replicas and require excessive communication overhead on wide-area networks. The voting protocols generally require communication with several replicas for every operation.
Reference: [Long91] <author> Darrell D. E. Long, John L. Carroll, and C. J. Park. </author> <title> A study of the reliability of Internet sites. </title> <booktitle> Proceedings of the 10th IEEE Symposium on Reliable in Distributed Systems (Pisa, </booktitle> <address> Italy), </address> <month> pages 177-86 (September </month> <year> 1991). </year>
Reference: [Long92] <author> Darrell D. E. </author> <title> Long. A replicated monitoring tool. </title> <booktitle> Proceedings of the 2nd Workshop on the Management of Replicated Data (November 1992). </booktitle>
Reference: [Lottor92] <author> Mark K. Lottor. </author> <title> Internet growth (1981-1991). </title> <note> RFC 1296 (January 1992). </note> <institution> Network Information Systems Center, SRI International. </institution>
Reference: [Ma92] <author> Chaoying Ma. </author> <title> Designing a Universal Name Service. </title> <type> PhD thesis (1992). </type> <institution> University of Cambridge Computer Laboratory. </institution>
Reference-contexts: The Clearinghouse name service was very similar to the DNS, excepting that it could map a name into a list of names, as well as into an address. It used weak-consistency replication rather than primary-copy replication for replicated name servers. The Cambridge Universal Name Service (UNS) <ref> [Ma92] </ref> combines consistent and inconsistent replication by introducing two classes of name server. The first class servers are called replicas, and use a consistent update protocol. The second class servers contain read-only copies, and are 140 updated asynchronously from the first class servers.
Reference: [Mann89] <author> Timothy Mann, Andy Hisgen, and Garret Swart. </author> <title> An algorithm for data replication. </title> <note> Report #46 (June 1989). </note> <institution> Digital Equipment Corporation Systems Research Center, </institution> <address> Palo Alto, CA. </address>
Reference-contexts: The primary copy is responsible for sequencing operations. When a replica recovers from a failure, or when the primary 37 fails, an election is held to determine which replica becomes the primary. The Echo file system <ref> [Mann89, Hisgen90] </ref>, for example, combined primary-copy replication with client caching. The Sun Network Interface Service [Sun88] (commonly called the Yellow Pages service) also uses primary and secondary servers. The Domain Name Service [Mockapetris87] and the Clearinghouse name service [Oppen81] both combine centralization and replication.
Reference: [Mattern88] <author> Friedemann Mattern. </author> <title> Virtual time and global states of distributed systems. </title> <note> Technical report SFB124-38/88 (October 1988). </note> <institution> Department of Computer Science, University of Kaiserslautern. </institution>
Reference-contexts: Timestamps can be organized into timestamp vectors. A timestamp vector is a set of timestamps, each from a different principal, indexed by their host identifiers (Figure 5.2). It represents a snapshot of the state of communication in a system. In particular, it represents a cut of the communication. Mattern <ref> [Mattern88] </ref> provides a well-written introduction to the use of time measures such as cuts in reasoning about the global states of distributed systems. 51 typedef set h principalId, timestamp i timestampSet; class timestampVector f timestampSet timestamps; // update the entry for one principal update (principalId, timestamp); // merge in another vector, <p> Note that correctness is defined in terms of time as might be measured by an external observer, and not in terms of virtual time or clocks <ref> [Mattern88] </ref>. There are two reasons for this choice. First, I found it easier to reason about behavior of the protocol using time rather than clocks, especially when replica and message failure is involved. <p> The summary vector is only modified during successful anti-entropy sessions, and one value of the vector (stored in localSummary in Figure 5.7) is associated with the session. These vectors satisfy the requirements for a vector time measure as defined by Mattern <ref> [Mattern88] </ref>.
Reference: [Mills88] <author> D. Mills. </author> <title> Network Time Protocol (version 1) specification and implementation. Network Working Group RFC 1059 (July 1988). Network Information Center. </title>
Reference: [Mishra89] <author> Shikavant Mishra, Larry L. Peterson, and Richard D. Schlichting. </author> <title> Imnplementing fault-tolerant replicated objects using Psync. </title> <booktitle> Proceedings of the 8th Symposium on Reliable Distributed Systems (Seattle, </booktitle> <address> WA), </address> <month> pages 42-52 (10-12 October </month> <year> 1989). </year>
Reference-contexts: However, it scales better than strictly serialized systems, and the definitions of operation compatibility can be used to build conflict-reduction mechanisms in weak-consistency systems that do not provide concurrency control (Section 3.2.3). 4.6 Psync The Psync system <ref> [Mishra89] </ref> is a complete group communication system that provides causally consistent, atomic, interactive message delivery and group membership operations. The system is based around the Psync communication protocol. Processes start communication by joining a group, which is called a conversation in Psync. Each message has an identifier.
Reference: [Mishra92] <author> Shivakant Mishra, Larry L. Peterson, and Richard D. Schlichting. </author> <title> Protocol modularity in systems for managing replicated data. </title> <booktitle> Proceedings of the 2nd Workshop on the Management of Replicated Data (Monterey, </booktitle> <address> CA), </address> <month> pages 78-81 (November </month> <year> 1992). </year> <month> 153 </month>
Reference-contexts: The weak-consistency protocols used in Refdbms avoid the overhead of attaching O (n) state to each message by attaching causal information to batches of messages. Each message only carries a single timestamp, which is used to identify the message, while communication sessions include O (n) timestamps. The Consul system <ref> [Mishra92] </ref> provides a more complete group communication system, adding failure detection, group membership, and stable storage modules to the basic Psync protocol. This modularization of a group communication system includes many more parts than my framework because it includes support for failure detection and recovery.
Reference: [Mockapetris87] <author> P. Mockapetris. </author> <title> Domain names concepts and facilities. RFC 1034 (November 1987). </title> <booktitle> ARPA Network Working Group. </booktitle>
Reference-contexts: The Echo file system [Mann89, Hisgen90], for example, combined primary-copy replication with client caching. The Sun Network Interface Service [Sun88] (commonly called the Yellow Pages service) also uses primary and secondary servers. The Domain Name Service <ref> [Mockapetris87] </ref> and the Clearinghouse name service [Oppen81] both combine centralization and replication. In both systems, the name space database is divided into a set of domains, and each domain must be stored at one or more servers. A server may store more than one domain. <p> Many wide-area services have extremely low update rates; some services write new entries and never change them. A low update rate means that anti-entropy has a better chance of propagating an update before another update enters the system. In the Domain Name Service <ref> [Mockapetris87] </ref>, a host name or address rarely changes more than once every few months. In systems like Refdbms, new entries are added, corrected quickly, then remain stable. I expect the update rate for most wide-area services to be about a thousand times lower than the anti-entropy rate. <p> Most of them can be implemented with multiple replicas, but most do not provide adequate support for locating groups with dynamic membership. The Internet Domain Name System (DNS) <ref> [Mockapetris87] </ref> is in use throughout the world, primarily for translating host names to IP addresses. The names are organized hierarchically, and portions of the name space are under separate administrative control. All the information in an administrative zone is maintained by an authoritative name server.
Reference: [Mullender86] <author> S. J. Mullender and A. S. Tanenbaum. </author> <title> The design of a capability-based distributed operating system. </title> <journal> Computer Journal, </journal> <volume> 29(4) </volume> <month> 289-99 </month> <year> (1986). </year>
Reference-contexts: Bal discusses three distributed run time systems, as well as one for a shared-memory multiprocessor [Bal89, Chapter 6]. One of the distributed implementations relied on reliable multicast, one on unreliable multicast, while the third used Amoeba RPC <ref> [Mullender90, Mullender86] </ref>. The first implementation is based upon a reliable, interactive multicast protocol that delivers update messages in a total order. Every process is multithreaded, and contains an object manager thread plus some application threads. <p> For example, the Amoeba distributed operating system uses encrypted capabilities that can be managed in user code <ref> [Mullender86, Tanenbaum86] </ref>. These capabilities include one bit for each kind of operation that can be performed on the group state, allowing fine-grained privileges. The Refdbms system has no safeguards to ensure that a principal does not incorrectly claim to have greater privilege than it should.
Reference: [Mullender90] <author> Sape J. Mullender, Guido van Rossum, Andrew S. Tanenbaum, Robbert van Re-nesse, and Hans van Staveren. </author> <title> Amoeba: a distributed system for the 1990s. </title> <journal> IEEE Computer, </journal> <volume> 23(5) </volume> <month> 44-53 (May </month> <year> 1990). </year>
Reference-contexts: Bal discusses three distributed run time systems, as well as one for a shared-memory multiprocessor [Bal89, Chapter 6]. One of the distributed implementations relied on reliable multicast, one on unreliable multicast, while the third used Amoeba RPC <ref> [Mullender90, Mullender86] </ref>. The first implementation is based upon a reliable, interactive multicast protocol that delivers update messages in a total order. Every process is multithreaded, and contains an object manager thread plus some application threads.
Reference: [Oppen81] <author> D. C. Oppen and Y. K. Dahl. </author> <title> The Clearinghouse: a decentralized agent for locating named objects in a distributed environment. </title> <type> Technical report OPD-T8103 (1981). </type> <institution> Xerox Office Products Division, </institution> <address> Palo Alto, Ca. </address>
Reference-contexts: The Echo file system [Mann89, Hisgen90], for example, combined primary-copy replication with client caching. The Sun Network Interface Service [Sun88] (commonly called the Yellow Pages service) also uses primary and secondary servers. The Domain Name Service [Mockapetris87] and the Clearinghouse name service <ref> [Oppen81] </ref> both combine centralization and replication. In both systems, the name space database is divided into a set of domains, and each domain must be stored at one or more servers. A server may store more than one domain. <p> The TSAE protocols can use Q (n) state when loosely-synchronized clocks are available. Lazy replication performs one-way updates in its gossip messages, instead of bidirectional updates. 4.10 Epidemic replication The Xerox Clearinghouse service <ref> [Oppen81] </ref> is the name and location service for Xerox Network Systems. It maintains a distributed database that maps structured names into a set of properties, such as network addresses. The names are organized into a three-level hierarchical space, structured into organizations, domains within organizations, and local names within domains. <p> If one Refdbms replica were to miss an update, for example, the database copy at that replica could permanently diverge from others. Systems like location services that provide hints rather than authoritative answers are good candidates for unreliable mechanisms <ref> [Terry85, Oppen81, Jul88, Fowler85] </ref>. 49 Eventual delivery trades latency for reliability. The message delivery component can mask out transient network and host failures by delaying messages and resending them after the fault is repaired.
Reference: [PageJones88] <author> Meilir Page-Jones. </author> <title> The Practical Guide to Structured Systems Design, second edition (1988). </title> <publisher> Yourdon Press. </publisher>
Reference: [Postel80] <author> J. Postel. </author> <title> Transmission Control Protocol, </title> <note> RFC 761 (January 1980). </note> <institution> USC Information Sciences Institute. </institution>
Reference: [Pu91a] <author> Calton Pu and Avraham Leff. Epsilon-serializability. </author> <note> Technical report CUCS-054-90 (15 January 1991). </note> <institution> Department of Computer Science, Columbia University. </institution>
Reference-contexts: Unlike most of the other mechanisms in this chapter, it is concerned with transactions where several operations must be executed as a group. It is an extension of strict serializability that allows transactions to observe controlled inconsistency <ref> [Pu91b, Pu91a] </ref>. Rather than enforcing a strict ordering on all transactions, perhaps using a two-phase locking protocol, orderings are applied only to update operations. Pu and Leff [Pu91a] discuss four methods for implementing a replication control protocol that works with an ESR concurrency control protocol. <p> It is an extension of strict serializability that allows transactions to observe controlled inconsistency [Pu91b, Pu91a]. Rather than enforcing a strict ordering on all transactions, perhaps using a two-phase locking protocol, orderings are applied only to update operations. Pu and Leff <ref> [Pu91a] </ref> discuss four methods for implementing a replication control protocol that works with an ESR concurrency control protocol. These replica control protocols use asynchronous message propagation. Each update message contains the effects of an entire transaction.
Reference: [Pu91b] <author> Calton Pu and Avraham Leff. </author> <title> Replica control in distributed systems: an asynchronous approach. </title> <note> Technical report CUCS-053-090 (8 January 1991). </note> <institution> Department of Computer Science, Columbia University. </institution>
Reference-contexts: Unlike most of the other mechanisms in this chapter, it is concerned with transactions where several operations must be executed as a group. It is an extension of strict serializability that allows transactions to observe controlled inconsistency <ref> [Pu91b, Pu91a] </ref>. Rather than enforcing a strict ordering on all transactions, perhaps using a two-phase locking protocol, orderings are applied only to update operations. Pu and Leff [Pu91a] discuss four methods for implementing a replication control protocol that works with an ESR concurrency control protocol.
Reference: [Quarterman86] <author> John S. Quarterman and Josiah C. Hoskins. </author> <title> Notable computer networks. </title> <journal> Communications of the ACM, </journal> <volume> 29(10) </volume> <month> 932-71 (October </month> <year> 1986). </year>
Reference-contexts: Likewise, if the number becomes too small, subgroups could be coalesced. Messages would be propagated between subgroups using representatives. A final possibility is to use a simpler, sparsely-connected logical communication topology. The Usenet messaging system <ref> [Quarterman86] </ref> uses the Unix-to-Unix copy program (UUCP) to propagate messages. The logical (and physical) topology of that network is sparsely connected. Few sites are connected to more than two or three other sites, each site only knows about its neighbors.
Reference: [Ricciardi91] <author> Aleta M. Ricciardi and Kenneth P. Birman. </author> <title> Using process groups to implement failure detection in asynchronous environments. </title> <note> Technical report TR91-1188 (7 February 1991). </note> <institution> Department of Computer Science, Cornell University. </institution>
Reference-contexts: Both the ISIS system [Birman87, Birman91] and a group membership mechanism by Cristian [Cristian89] are built on top of atomic broadcast protocols, and hence provide each principal with the same sequence of group views. Ricciardi <ref> [Ricciardi91] </ref> is investigating an alternative group membership mechanism for Isis that does not use the underlying atomic broadcast. However, it uses two- and three-phase commit protocols to maintain consistent group views. The Arjuna system [Little90] maintains a logically centralized group view via atomic transactions.
Reference: [Rumbaugh91] <author> James Rumbaugh, Michael Blaha, William Premerlani, Frederick Eddy, and William Lorensen. </author> <title> Object-Oriented Modeling and Design (1991). </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ. </address>
Reference: [Schatz90] <author> Bruce Raymond Schatz. </author> <title> Interactive retrieval in information spaces distributed across a wide-area network. </title> <type> Technical report TR 90-35 (December 1990). </type> <institution> Department of Computer Science, University of Arizona. </institution>
Reference: [Seltzer90] <author> Margo Seltzer and Michael Stonebraker. </author> <title> Transaction support in read optimized and write optimized file systems. </title> <note> Technical report UCB/ERL M90/37 (April 1990). </note> <institution> Electronics Research Laboratory, College of Engineering, University of California at Berkeley. </institution>
Reference: [Steiner88] <author> Jennifer G. Steiner, Clifford Neuman, and Jeffrey I. Schiller. </author> <title> Kerberos: an authentication service for open network systems. </title> <booktitle> USENIX Winter Conference (Dallas, </booktitle> <address> TX), </address> <month> pages 191-202 (9-12 February </month> <year> 1988). </year> <month> 154 </month>
Reference-contexts: For example, the Kerberos authentication service <ref> [Steiner88] </ref> uses a trusted server. This violates the assumption that no part of the system is centralized. These systems also implicitly assume a completely connected logical network topology. If the network provides a different logical topology as the Usenet does the traditional authentication model no longer holds.
Reference: [Sullivan92] <author> Mark Sullivan and Michael Olson. </author> <title> An index implementation supporting fast recovery for the POSTGRES storage system. </title> <booktitle> Proceedings of the 8th International Conference on Data Engineering, </booktitle> <month> pages 293-300 (February </month> <year> 1992). </year>
Reference: [Sun88] <author> Sun Microsystems, </author> <title> Incorporated. </title> <booktitle> Network Programming (1988). </booktitle>
Reference-contexts: When a replica recovers from a failure, or when the primary 37 fails, an election is held to determine which replica becomes the primary. The Echo file system [Mann89, Hisgen90], for example, combined primary-copy replication with client caching. The Sun Network Interface Service <ref> [Sun88] </ref> (commonly called the Yellow Pages service) also uses primary and secondary servers. The Domain Name Service [Mockapetris87] and the Clearinghouse name service [Oppen81] both combine centralization and replication.
Reference: [Tanenbaum81] <author> A. S. Tanenbaum. </author> <title> Computer networks (1981). </title> <publisher> Prentice-Hall. </publisher>
Reference-contexts: This can speed dissemination when message order is not important. The combination of unreliable multicast and TSAE is somewhat like the selective retransmission technique used in network protocols that implement reliable streams <ref> [Tanenbaum81, Section 4.2] </ref>: the TSAE protocol delivers messages that the receiver has missed. <p> The logical (and physical) topology of that network is sparsely connected. Few sites are connected to more than two or three other sites, each site only knows about its neighbors. The Usenet software implements a simple flooding protocol <ref> [Tanenbaum81] </ref> that forwards each message to neighbor sites. Each site must maintain a log of the message identifiers it has received so that messages do not propagate forever.
Reference: [Tanenbaum86] <author> Andrew S. Tanenbaum, Sape J. Mullender, and Robbert Van Renesse. </author> <title> Using sparse capabilities in a distributed operating system. </title> <booktitle> Proceedings of the 6th International Conference on Distributed Computing Systems (Cambridge, </booktitle> <address> Mass), </address> <month> pages 558-63 (May </month> <year> 1986). </year>
Reference-contexts: For example, the Amoeba distributed operating system uses encrypted capabilities that can be managed in user code <ref> [Mullender86, Tanenbaum86] </ref>. These capabilities include one bit for each kind of operation that can be performed on the group state, allowing fine-grained privileges. The Refdbms system has no safeguards to ensure that a principal does not incorrectly claim to have greater privilege than it should.
Reference: [Terry85] <author> Douglas Brian Terry. </author> <title> Distributed name servers: naming and caching in large distributed computing environments. </title> <type> PhD thesis, </type> <note> published as Technical report CSL-85-1 (February 1985). </note> <institution> Xerox Palo Alto Research Center, </institution> <address> CA. </address>
Reference-contexts: If one Refdbms replica were to miss an update, for example, the database copy at that replica could permanently diverge from others. Systems like location services that provide hints rather than authoritative answers are good candidates for unreliable mechanisms <ref> [Terry85, Oppen81, Jul88, Fowler85] </ref>. 49 Eventual delivery trades latency for reliability. The message delivery component can mask out transient network and host failures by delaying messages and resending them after the fault is repaired.
Reference: [Thomas79] <author> R. H. Thomas. </author> <title> A majority consensus approach to concurrency control. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 4 </volume> <month> 180-209 </month> <year> (1979). </year>
Reference-contexts: In the voting protocols, each replica is assigned one or more votes. Each operation collects votes from replicas, and can proceed when it has collected a quorum of votes. Majority Consensus Voting protocols <ref> [Thomas79, Gifford79] </ref> assign each replica one 38 vote, and require each operation to collect a majority of votes. Other voting protocols change vote assignments when replicas fail [Barbar a86], or change quorum requirements [Davcev85, Jajodia87, Long88]. The Virtual Partition protocol [El-Abbadi86] is a hybrid between available copy and voting.
Reference: [Turek92] <author> John Turek and Dennis Shasha. </author> <title> The many faces of consensus in distributed systems. </title> <journal> IEEE Computer, </journal> <volume> 25(6) </volume> <month> 8-17 (June </month> <year> 1992). </year>
Reference: [Tuthill83] <author> Bill Tuthill. </author> <title> Development of refer: Bug Fixes and Enhancements (or (unofficially) Refer Madness). </title> <booktitle> Usenix Conference Proceedings (San Diego, CA), pages 99-103 (Winter 1983). Usenix Association. </booktitle>
Reference: [Wilkes91] <author> John Wilkes. </author> <title> The refdbms bibliography database user guide and reference manual. </title> <note> Technical report HPL-CSP-91-11 (20 May 1991). </note> <institution> Hewlett-Packard Laboratories. </institution>
References-found: 99

