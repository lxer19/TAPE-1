URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/papers_and_books/Moller_Decidable_CCS.ps.gz
Refering-URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/98Fall/assignments/Projects.html
Root-URL: http://www.cse.psu.edu
Title: Decidable Subsets of CCS  
Author: Soren Christensen Yoram Hirshfeld Faron Moller 
Affiliation: Laboratory for Foundations of Computer Science University of Edinburgh  
Abstract: CCS is a universal formalism: any computable function is computed by some CCS agent. Moreover, one can reduce the halting problem for Turing machines to the problem of deciding bisimilarity of two CCS agents, thus demonstrating the undecidability of the equivalence checking problem. In this paper, we demonstrate the limits of decidability of CCS. In particular, we show that by simply disallowing either of communication or both restriction and relabelling, we arrive at a sublanguage which still describes a rich class of infinite state systems but for which bisimulation is decidable. We also demonstrate complete axiomatisations for these sublanguages. We compare these results with the undecidability of all other common equivalences. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.A. Bergstra and J.W. Klop. </author> <title> The algebra of recursively defined processes and the algebra of regular processes. </title> <booktitle> In Proceedings of ICALP'84, </booktitle> <editor> J. Paredaens (ed), </editor> <booktitle> Lecture Notes in Computer Science 172, </booktitle> <address> pp82-94. </address> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: For example, in [6] it is demonstrated that the context-free process defined by X def = a (Xb + b) which generates nonempty strings of the form a n n cannot be expressed by a BPP process; and in <ref> [1] </ref> it is demonstrated that the BPP process defined by X def = a (X j b) + c (X j d) cannot be expressed as a context-free process. In our work, we have only considered the decidability of bisimilarity.
Reference: [2] <author> J.C.M. Baeten, J.A. Bergstra and J.W. Klop. </author> <title> Decidability of bisimulation equivalence for processes generating context-free languages. </title> <booktitle> In Proceedings of PARLE'87, </booktitle> <editor> J.W. de Bakker, A.J. Nijman, P.C. Treleaven (eds), </editor> <booktitle> Lecture Notes in Computer Science 259, </booktitle> <address> pp93-114. </address> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Indeed this property holds similarly for normed BPA processes, and several proofs of the decidability of bisimulation equivalence in this class exploit this property <ref> [2, 4, 17, 12] </ref>.
Reference: [3] <author> I. Castellani. </author> <title> Bisimulations for Concurrency. </title> <type> PhD thesis CST-51-88. </type> <institution> University of Edinburgh, </institution> <year> 1988. </year>
Reference-contexts: In our work, we have only considered the decidability of bisimilarity. However, many other equivalences have been suggested in the area of process algebra. In [5] it is shown that distributed bisimilarity as defined by Castellani <ref> [3] </ref> is decidable over BPP. But of more interest are the equivalences within the linear time-branching time spectrum of [11]. In [14] it is demonstrated that language equivalence is undecidable over BPP, as well as the simulation preorder.
Reference: [4] <author> D. Caucal. Graphes canoniques des graphes algebriques. </author> <note> Informatique Theorique et Applications (RAIRO) 24(4), pp339-352, </note> <year> 1990. </year>
Reference-contexts: Indeed this property holds similarly for normed BPA processes, and several proofs of the decidability of bisimulation equivalence in this class exploit this property <ref> [2, 4, 17, 12] </ref>.
Reference: [5] <author> S. Christensen. </author> <title> Distributed bisimilarity is decidable for a class of infinite-state systems. </title> <booktitle> In Proceedings of CONCUR'92, </booktitle> <editor> W.R. Cleaveland (ed), </editor> <booktitle> Lecture Notes in Computer Science 630, </booktitle> <address> pp148-161. </address> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: In our work, we have only considered the decidability of bisimilarity. However, many other equivalences have been suggested in the area of process algebra. In <ref> [5] </ref> it is shown that distributed bisimilarity as defined by Castellani [3] is decidable over BPP. But of more interest are the equivalences within the linear time-branching time spectrum of [11]. In [14] it is demonstrated that language equivalence is undecidable over BPP, as well as the simulation preorder.
Reference: [6] <author> S. Christensen. </author> <title> Decidability and Decomposition in Process Algebras. </title> <type> PhD thesis CST-105-93. </type> <institution> University of Edinburgh, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: The work is similar in spirit to the work in [9, 17] on context-free processes. However, it is worth noting that the classes of processes which we study are incomparable to the class of context-free processes. For example, in <ref> [6] </ref> it is demonstrated that the context-free process defined by X def = a (Xb + b) which generates nonempty strings of the form a n n cannot be expressed by a BPP process; and in [1] it is demonstrated that the BPP process defined by X def = a (X
Reference: [7] <author> S. Christensen, Y. Hirschfeld and F. Moller. </author> <title> Decomposability, decidability and axio-matisability for bisimulation equivalence on basic parallel processes. </title> <booktitle> In Proceedings of LICS'93. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: Let be such a process definition. The theory shall be parameterised by and consists of axioms and inference rules that enable one to derive the roots of successful tableaux. The theory is in spirit similar to that offered in <ref> [17, 16, 7] </ref> and is built around sequents of the form ` E = F where is a finite set of assumptions of the form ff = fi, and E and F are CCS expressions. <p> equational theory is the fact that it has proven applicable to a wider range of process classes such as a rich subclass of context-free processes [17] and also standard form CCS as we have demonstrated here. 5 Related Work The work reported here is based on the results presented in <ref> [7, 8] </ref>, where we consider the restriction-, relabelling- and communication-free subset of CCS, which we termed BPP for Basic Parallel Processes. The work is similar in spirit to the work in [9, 17] on context-free processes. <p> In [22] a natural notion of prime decomposition was defined, and the question was raised as to when processes can be uniquely decomposed into prime components; this question can be asked for both sequential composition as well as parallel composition. It is demonstrated in <ref> [7] </ref> that so-called normed BPP processes | those processes which at any point may follow a terminating path | have unique decompositions, and the decid-ability of bisimulation equivalence over this process class is demonstrated by exploiting a corresponding cancellation lemma.
Reference: [8] <author> S. Christensen, Y. Hirschfeld and F. Moller. </author> <title> Bisimulation equivalence is decidable for basic parallel processes. </title> <booktitle> In Proceedings of CONCUR'93, </booktitle> <editor> E. Best (ed), </editor> <booktitle> Lecture Notes in Computer Science 715, </booktitle> <address> pp143-157. </address> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: equational theory is the fact that it has proven applicable to a wider range of process classes such as a rich subclass of context-free processes [17] and also standard form CCS as we have demonstrated here. 5 Related Work The work reported here is based on the results presented in <ref> [7, 8] </ref>, where we consider the restriction-, relabelling- and communication-free subset of CCS, which we termed BPP for Basic Parallel Processes. The work is similar in spirit to the work in [9, 17] on context-free processes.
Reference: [9] <author> S. Christensen, H. Huttel and C. Stirling. </author> <title> Bisimulation equivalence is decidable for all context-free processes. </title> <booktitle> In Proceedings of CONCUR'92, </booktitle> <editor> W.R. Cleaveland (ed), </editor> <booktitle> Lecture Notes in Computer Science 630, </booktitle> <address> pp138-147. </address> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The work is similar in spirit to the work in <ref> [9, 17] </ref> on context-free processes. However, it is worth noting that the classes of processes which we study are incomparable to the class of context-free processes. <p> Based on the techniques presented there, [15] demonstrates the undecidability of all equivalences in the linear time-branching time spectrum over BPP apart from bisimulation. Thus the situation is analogous to that of BPA, for which bisimulation equivalence is decidable <ref> [9] </ref> but no other equivalence in the spectrum is decidable [18, 13]. Another natural question regards whether we can extend the expressive power of our standard form CCS whilst maintaining a decidable theory for bisimilarity.
Reference: [10] <author> R. Cleaveland, J. Parrow, B. Steffen. </author> <title> The Concurrency Workbench: A semantics-based verification tool for finite-state systems. In Proceedings of a workshop on automated verification methods for finite-state systems, </title> <booktitle> Lecture Notes in Computer Science 407, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: However, our restrictions are quite standard, do not hamper the expressive power of the calculus when describing real systems, and are thus usually assumed in practical applications, for example, when using an automated verification tool such as the Edinburgh Concurrency Workbench <ref> [10] </ref>. Any finite family of CCS equations determines a labelled transition system.
Reference: [11] <author> R.J. van Glabbeek. </author> <title> The linear time-branching time spectrum. </title> <booktitle> In Proceedings of CONCUR'90, </booktitle> <editor> J. Baeten, J.W. Klop (eds), </editor> <booktitle> Lecture Notes in Computer Science 458, </booktitle> <address> pp278-297. </address> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: However, many other equivalences have been suggested in the area of process algebra. In [5] it is shown that distributed bisimilarity as defined by Castellani [3] is decidable over BPP. But of more interest are the equivalences within the linear time-branching time spectrum of <ref> [11] </ref>. In [14] it is demonstrated that language equivalence is undecidable over BPP, as well as the simulation preorder. Based on the techniques presented there, [15] demonstrates the undecidability of all equivalences in the linear time-branching time spectrum over BPP apart from bisimulation.
Reference: [12] <author> J.F. Groote. </author> <title> A short proof of the decidability of bisimulation for normed BPA processes. </title> <journal> Information Processing Letters 42, </journal> <volume> pp167-171, </volume> <year> 1991. </year>
Reference-contexts: Indeed this property holds similarly for normed BPA processes, and several proofs of the decidability of bisimulation equivalence in this class exploit this property <ref> [2, 4, 17, 12] </ref>.
Reference: [13] <author> J.F. Groote and H. Huttel. </author> <title> Undecidable equivalences for basic process algebra. </title> <journal> Information and Computation, </journal> <note> 1994. (To appear.) </note>
Reference-contexts: Based on the techniques presented there, [15] demonstrates the undecidability of all equivalences in the linear time-branching time spectrum over BPP apart from bisimulation. Thus the situation is analogous to that of BPA, for which bisimulation equivalence is decidable [9] but no other equivalence in the spectrum is decidable <ref> [18, 13] </ref>. Another natural question regards whether we can extend the expressive power of our standard form CCS whilst maintaining a decidable theory for bisimilarity.
Reference: [14] <author> Y. Hirshfeld. </author> <title> Petri nets and the equivalence problem. </title> <booktitle> In Proceedings of CSL'93, </booktitle> <address> Swansea, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: However, many other equivalences have been suggested in the area of process algebra. In [5] it is shown that distributed bisimilarity as defined by Castellani [3] is decidable over BPP. But of more interest are the equivalences within the linear time-branching time spectrum of [11]. In <ref> [14] </ref> it is demonstrated that language equivalence is undecidable over BPP, as well as the simulation preorder. Based on the techniques presented there, [15] demonstrates the undecidability of all equivalences in the linear time-branching time spectrum over BPP apart from bisimulation.
Reference: [15] <author> H. Huttel. </author> <title> Undecidable equivalences for basic parallel processes. </title> <institution> Research report ECS-LFCS-93-275. University of Edinburgh, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: But of more interest are the equivalences within the linear time-branching time spectrum of [11]. In [14] it is demonstrated that language equivalence is undecidable over BPP, as well as the simulation preorder. Based on the techniques presented there, <ref> [15] </ref> demonstrates the undecidability of all equivalences in the linear time-branching time spectrum over BPP apart from bisimulation. Thus the situation is analogous to that of BPA, for which bisimulation equivalence is decidable [9] but no other equivalence in the spectrum is decidable [18, 13].
Reference: [16] <author> H. Huttel. </author> <title> Decidability, Behavioural Equivalences and Infinite Transition Graphs. </title> <type> PhD thesis CST-86-91. </type> <institution> University of Edinburgh, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Let be such a process definition. The theory shall be parameterised by and consists of axioms and inference rules that enable one to derive the roots of successful tableaux. The theory is in spirit similar to that offered in <ref> [17, 16, 7] </ref> and is built around sequents of the form ` E = F where is a finite set of assumptions of the form ff = fi, and E and F are CCS expressions.
Reference: [17] <author> H. Huttel and C. Stirling. </author> <title> Actions speak louder than words: proving bisimilarity for context-free processes. </title> <booktitle> In Proceedings of LICS'91, </booktitle> <address> pp376-386. </address> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: We are interested in deciding for any ff and fi of Var () whether ff fi is the case or not. The procedure for checking ff fi is based on the tableau decision method as for instance utilised by Huttel and Stirling in <ref> [17] </ref>. The tableau system is a goal directed proof system. The rules of the tableau system are built around equations E = F where E and F are CCS expressions. Each rule has the form E = F possibly with side conditions. <p> Let be such a process definition. The theory shall be parameterised by and consists of axioms and inference rules that enable one to derive the roots of successful tableaux. The theory is in spirit similar to that offered in <ref> [17, 16, 7] </ref> and is built around sequents of the form ` E = F where is a finite set of assumptions of the form ff = fi, and E and F are CCS expressions. <p> Using Milner's equational theory, it is less straightforward how proofs are built up. Finally, in favour of the sequent based equational theory is the fact that it has proven applicable to a wider range of process classes such as a rich subclass of context-free processes <ref> [17] </ref> and also standard form CCS as we have demonstrated here. 5 Related Work The work reported here is based on the results presented in [7, 8], where we consider the restriction-, relabelling- and communication-free subset of CCS, which we termed BPP for Basic Parallel Processes. <p> The work is similar in spirit to the work in <ref> [9, 17] </ref> on context-free processes. However, it is worth noting that the classes of processes which we study are incomparable to the class of context-free processes. <p> Indeed this property holds similarly for normed BPA processes, and several proofs of the decidability of bisimulation equivalence in this class exploit this property <ref> [2, 4, 17, 12] </ref>.
Reference: [18] <author> D.T. Huynh and L. Tian. </author> <title> On deciding readiness and failures equivalences for processes. </title> <institution> Research report UTDCS-31-90. University of Texas at Dallas, </institution> <month> September </month> <year> 1990. </year>
Reference-contexts: Based on the techniques presented there, [15] demonstrates the undecidability of all equivalences in the linear time-branching time spectrum over BPP apart from bisimulation. Thus the situation is analogous to that of BPA, for which bisimulation equivalence is decidable [9] but no other equivalence in the spectrum is decidable <ref> [18, 13] </ref>. Another natural question regards whether we can extend the expressive power of our standard form CCS whilst maintaining a decidable theory for bisimilarity.
Reference: [19] <author> P. Jancar. </author> <title> Decidability questions for bisimilarity of Petri nets and some related problems. </title> <institution> Research report ECS-LFCS-93-261. University of Edinburgh, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Another natural question regards whether we can extend the expressive power of our standard form CCS whilst maintaining a decidable theory for bisimilarity. By relying on Jancar's recent result on the undecidability of bisimilarity on labelled Petri nets <ref> [19] </ref> we can show that adding a notion of forced binary synchronisation will prevent bisimilarity from being decidable. So it still remains to find natural extensions to BPP (for instance by including sequential composition) for which we could demonstrate the decidability of bisimilarity.
Reference: [20] <author> R. Milner. </author> <title> A complete inference system for a class of regular behaviours. </title> <journal> Journal of Computer and System Sciences 28, </journal> <volume> pp439-466, </volume> <year> 1984. </year>
Reference-contexts: Our decidability result is based on a particular tableau systems. From this tableau system, we construct a syntactic axiomatisation for reasoning about equality for which we demonstrate soundness and completeness. Such an axiomatisation can be considered as an extension of Milner's axiomatisation for finite state systems <ref> [20] </ref>. <p> However, as our theory is sequent based it is very different from Milner's elegant theory which is build around a few laws for recursion given by an explicit fixed point operator <ref> [20] </ref>. It is not known how to extend Milner's equational theory for regular processes to our class of standard form CCS. Whether one prefers a theory in the style of Milner's or a sequent based theory is perhaps a matter of taste.
Reference: [21] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction The study of process algebras has received a great deal of attention over the past 15 years, and has merited this attention by providing a natural framework for describing and analyzing concurrent systems. Milner's CCS <ref> [21] </ref> is but one of an array of such calculi, and is representative of the area: it provides a language in which concurrent systems can be described naturally with constructs which have intuitive interpretations, such as parallel composition and abstraction. <p> The first point to settle when exploring the decidability of the equivalence checking problem is the notion of equivalence which is going to be considered. In this paper we shall be particularly interested in bisimulation equivalence <ref> [23, 21] </ref>. Apart from being the fundamental notion of equivalence for CCS, this behavioural equivalence has several pleasing properties, not least of which being that | as we shall discover | it is decidable over process classes for which all other common equivalences remain undecidable. <p> Proofs of the undecidability of bisimulation equivalence over full CCS <ref> [21, 24] </ref> involve modelling (the execution of) Turing machines in CCS and reducing the halting problem to equivalence checking. These modellings require explicit and intricate use of the communication capabilities of the calculus in conjunction with the restriction operator, the mechanism for abstraction in CCS, and relabelling. <p> X 1 = E 1 is called the leading equation. (Strictly speaking, a process is defined by some CCS term coupled with a family of process equations, but we shall ignore this point with hopefully little technical confusion for the reader.) A fuller description of these constructs is left to <ref> [21] </ref>. Notice though that a more general syntax is permitted there, allowing unguarded recursions and infinite relabelling functions. <p> Example 2.3 Let be the family fX def = a (X j b)g. By the transition rules above (modulo j) X generates the infinite-state transition graph of Figure 1. The equivalence between CCS expressions (states) which we are interested in considering here is bisimilarity <ref> [21] </ref>, defined as follows. <p> Again, we recognise the empty sum as 0, and ignore the ordering of expressions in sums, hence defining the notion of standard form modulo associativity and commutativity of choice. In <ref> [21] </ref> it is shown that any finite family of guarded CCS equations has a unique solution up to bisimilarity. Moreover, we have the following result showing when such a system can be effectively presented in standard form. <p> It is easily verified that the rules are indeed forward sound in this sense. Notice in particular that the rule Rec reflects the expansion law for composition <ref> [21] </ref> and that forward soundness of the Sub rules follows from the fact that bisimilarity is a congruence wrt composition. 2 The proof of soundness of the tableau system relies on an alternative characterisation of bisimulation, viz. as a sequence of approximations. <p> E ! E then F a 0 for some F 0 with E 0 0 ifF ! F then E a 0 for some E 0 with E 0 0 It is a standard result that for finite-branching transition graphs, bisimulation is given as the limit of the above approximations <ref> [21] </ref>: = n=0 As noted in Remark 2.1, CCS processes are finite-branching. Theorem 3.5 (Soundness) If there is a successful tableau for ff = fi then ff fi. Proof: Suppose T (ff = fi) is a tableau for ff = fi, and that ff 6 fi.
Reference: [22] <author> R. Milner and F. Moller. </author> <title> Unique decomposition of processes. </title> <journal> Journal of Theoretical Computer Science 107, </journal> <volume> pp357-363, </volume> <year> 1993. </year>
Reference-contexts: So it still remains to find natural extensions to BPP (for instance by including sequential composition) for which we could demonstrate the decidability of bisimilarity. In <ref> [22] </ref> a natural notion of prime decomposition was defined, and the question was raised as to when processes can be uniquely decomposed into prime components; this question can be asked for both sequential composition as well as parallel composition.
Reference: [23] <author> D. Park. </author> <title> Concurrency and automata on infinite sequences. </title> <booktitle> Lecture Notes in Computer Science 104, </booktitle> <address> pp168-183. </address> <publisher> Springer-Verlag, </publisher> <year> 1981. </year>
Reference-contexts: The first point to settle when exploring the decidability of the equivalence checking problem is the notion of equivalence which is going to be considered. In this paper we shall be particularly interested in bisimulation equivalence <ref> [23, 21] </ref>. Apart from being the fundamental notion of equivalence for CCS, this behavioural equivalence has several pleasing properties, not least of which being that | as we shall discover | it is decidable over process classes for which all other common equivalences remain undecidable.
Reference: [24] <author> D. Taubner. </author> <title> Finite representations of CCS and TCSP programs by automata and Petri nets. </title> <booktitle> Lecture Notes in Computer Science 369. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Proofs of the undecidability of bisimulation equivalence over full CCS <ref> [21, 24] </ref> involve modelling (the execution of) Turing machines in CCS and reducing the halting problem to equivalence checking. These modellings require explicit and intricate use of the communication capabilities of the calculus in conjunction with the restriction operator, the mechanism for abstraction in CCS, and relabelling.
References-found: 24

