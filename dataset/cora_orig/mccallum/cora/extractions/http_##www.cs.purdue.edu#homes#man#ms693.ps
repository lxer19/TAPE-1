URL: http://www.cs.purdue.edu/homes/man/ms693.ps
Refering-URL: http://www.cs.purdue.edu/homes/man/publ.html
Root-URL: http://www.cs.purdue.edu
Title: Simulation of Quorum Attainment Protocols to Experimentally Test a New Performability Measure  
Author: Melliyal Annamalai Yelena Yesha, 
Degree: A paper submitted to the Computer Science Department in partial fulfillment of the requirements for  Committee: Yelena Yesha(Advisor), Assistant Professor of Computer Science Charles Nicholas(Reader), Assistant Professor of Computer Science Certified by  
Date: September 2, 1993  Advisory  
Affiliation: at the University of Maryland Baltimore County  
Note: CMSC-693 Research and Writing Skills  CMSC-693 Advisor  
Pubnum: CMSC-693  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Daniel Menasce, Yelena Yesha and Konstantinos Kalpakis, </author> <title> On a Unified Framework for the Evaluation of Distributed Quorum Attainment Protocols, </title> <note> To be published. </note>
Reference-contexts: On the other hand, a system which parallelizes message transfer cuts down on message costs. Again Agrawal and EL Abbadi has the highest availability. As we can see, there are a lot of different views one can take while assessing the performance of a quorum attainment algorithm. <ref> [1] </ref> have proposed a measure of performability that is based on the ratio of availability with average normalized quorum attainment delay: P = A v A v = Availability of the algorithm D Q = Average normalized quorum attainment delay Average normalized quorum attainment delay is the average quorum attainment delay <p> The measure is based on two factors, the availability and delay. The higher the availability and the lower the delay, the better the performance. The claim in <ref> [1] </ref> is that assessing the performance in terms of number of messages may be less significant than being able to compute the delay in attaining the quorum. 3 The Analytical Model [1] defines a general framework for the evaluation of quorum attainment protocols. <p> The higher the availability and the lower the delay, the better the performance. The claim in <ref> [1] </ref> is that assessing the performance in terms of number of messages may be less significant than being able to compute the delay in attaining the quorum. 3 The Analytical Model [1] defines a general framework for the evaluation of quorum attainment protocols. The assumption is that the nodes are connected by an underlying communication network. <p> Thus, A i denotes the availability of the protocol, when it starts at a node of height i. <ref> [1] </ref> have provided recursive equations for T s i , T i , M s f i and A i . [2] gives an expression for the availability of their protocol. This expression repeated in terms of [1] is given below along with the recursive equations for number of messages and <p> availability of the protocol, when it starts at a node of height i. <ref> [1] </ref> have provided recursive equations for T s i , T i , M s f i and A i . [2] gives an expression for the availability of their protocol. This expression repeated in terms of [1] is given below along with the recursive equations for number of messages and delay. <p> The average number of messages, average delay and availability expressions are given below. Annamalai, Experimental Verification of a Performability Measure 10 N s N ns D s = 2* A v = 1 p 4 Simulation The purpose of the simulation was to test the analytical model given in <ref> [1] </ref>. The protocols were implemented and the data relating to availability, number of messages sent and total time for quorum attainment were collected. <p> From Figure 1 with availability as a parameter we can again say that the Majority protocol performs better. Which protocol do we say performs better given the various parameters ? This is where the idea of performability <ref> [1] </ref> comes in. a anomaly because the Primary Site protocol is shown to perform best. This is true when we make the assumption that the Primary Site will not prove to be a bottleneck.
Reference: [2] <author> D. Agrawal and A. El Abbadi, </author> <title> An Efficient and Fault-Tolerant Solution for Distributed Mutual Exclusion, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 9, No. 1, </volume> <month> February </month> <year> 1991. </year>
Reference-contexts: Thus, A i denotes the availability of the protocol, when it starts at a node of height i. [1] have provided recursive equations for T s i , T i , M s f i and A i . <ref> [2] </ref> gives an expression for the availability of their protocol. This expression repeated in terms of [1] is given below along with the recursive equations for number of messages and delay.
Reference: [3] <author> M. Maekawa, </author> <title> A sqrt(n) Algorithm for Mutual Exclusion in Decentralized Systems, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 3, No. 2, </volume> <month> May </month> <year> 1985. </year>
Reference: [4] <author> I. Suzuki and T. Kasami, </author> <title> A Distributed Mutual Exclusion Algorithm, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 3, No. 4, </volume> <month> November </month> <year> 1985. </year>
Reference: [5] <author> G. Gordon, </author> <title> System Simulation, </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference: [6] <author> Brian Kernighan and Dennis Ritchie, </author> <title> The C Programming Language, </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
References-found: 6

