URL: ftp://synapse.cs.byu.edu/pub/papers/ventura.jair.ps
Refering-URL: ftp://synapse.cs.byu.edu/pub/papers/details.html
Root-URL: 
Email: dan@axon.cs.byu.edu, martinez@cs.byu.edu  
Title: A Quantum Computational Learning Algorithm  
Author: Dan Ventura and Tony Martinez 
Affiliation: Department of Computer Science Brigham Young University  
Web: (http://axon.cs.byu.edu)  
Date: July 10 1998  
Note: Preprint submitted to the Journal of Artificial Intelligence Research,  Neural Networks and Machine Learning Laboratory  
Abstract: An interesting classical result due to Jackson allows polynomial-time learning of the function class DNF using membership queries. Since in most practical learning situations access to a membership oracle is unrealistic, this paper explores the possibility that quantum computation might allow a learning algorithm for DNF that relies only on example queries. A natural extension of Fourier-based learning into the quantum domain is presented. The algorithm requires only an example oracle, and it runs in O( 2 n ) time, a result that appears to be classically impossible. The algorithm is unique among quantum algorithms in that it does not assume a priori knowledge of a function and does not operate on a superposition that includes all possible basis states. 
Abstract-found: 1
Intro-found: 1
Reference: [Aiz91] <author> Aizenstein, H. and L. Pitt, </author> <title> Exact Learning of Read-Twice DNF formulas, </title> <booktitle> Proceedings of the 32nd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 170-9, </pages> <year> 1991. </year>
Reference: [Bar96] <author> Barenco, </author> <title> Adriano, </title> <journal> Quantum Physics and Computers, Contemporary Physics, </journal> <volume> vol. 37 no. 5, </volume> <pages> pp. 375-89, </pages> <year> 1996. </year>
Reference-contexts: introduction to quantum computation see <ref> [Bar96] </ref>; for a more rigorous treatment see for example [Deu85]. The field is still in its infancy and very theoretical but offers exciting possibilities for the field of computer science - the most important quantum algorithms discovered to date all perform tasks for which there are no classical equivalents. <p> Then the algorithm requires O (2 ) &lt; 10 operations. For comparison, <ref> [Bar96] </ref> gives estimates of how many operations might be performed before decoherence for various possible physical implementation technologies for the qubit.
Reference: [Ben82] <author> Benioff, Paul, </author> <title> Quantum Mechanical Hamiltonian Models of Turing Machines, </title> <journal> Journal of Statistical Physics, </journal> <volume> vol. 29 no. 3, </volume> <pages> pp. 515-546, </pages> <year> 1982. </year>
Reference: [Blu94] <author> Blum, A., M. Furst, J. Jackson, M. Kearns, Y. Mansour and S. Rudich, </author> <title> Weakly Learning DNF and Characterizing Statistical Query Learning Using Fourier Analysis, </title> <booktitle> Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 253-62, </pages> <year> 1994. </year>
Reference-contexts: Finding a Large Coefficient by Quantum Fourier Sampling Blum et al. have shown that under the uniform distribution, there exists a Fourier basis function that weakly approximates any DNF function f <ref> [Blu94] </ref>.
Reference: [Blu92] <author> Blum, A. and S. Rudich, </author> <title> Fast Learning of k-term DNF formulas with Queries, </title> <booktitle> Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 382-9, </pages> <year> 1992. </year>
Reference: [Bsh95] <author> Bshouty, Nader H. and Jeffrey Jackson, </author> <title> Learning DNF Over the Uniform Distribution Using A Quantum Example Oracle, </title> <booktitle> Proceedings of the 8th Annual Conference on Computational Learning Theory (COLT95), </booktitle> <address> Santa Cruz, California, </address> <pages> pp. 118-127, </pages> <year> 1995. </year>
Reference: [Bsh93] <author> Bshouty, Nader H., </author> <title> Exact Learning via the Monotone Theory, </title> <booktitle> Proceedings of the 34th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 302-11, </pages> <year> 1993. </year> <month> 20 </month>
Reference: [Chu98] <author> Chuang, Isaac, Neil Gershenfeld and Mark Kubinec, </author> <title> Experimental Implementation of Fast Quantum Searching, </title> <journal> Physical Review Letters, </journal> <volume> vol. 80 no. 15, </volume> <pages> pp. 3408-11, </pages> <month> April 13, </month> <year> 1998. </year>
Reference-contexts: These quantum algorithms take advantage of the unique features of quantum systems to provide significant speedup over classical approaches. It is worth mentioning that very recently several different groups have succeeded in physically realizing smallscale quantum computers and implementing some of the above mentioned algorithms with them [Jon98] <ref> [Chu98] </ref>. Also, work on quantum error correction has made impressive advances [Sho95] [Cor98] crucial to the construction of larger scale quantum computers.
Reference: [Cor98] <author> Cory, David G. et al., </author> <title> Experimental Quantum Error Correction, </title> <journal> LANL e-print archive, </journal> <note> quant-ph/9802018, http://xxx.lanl.gov, 1998. </note>
Reference-contexts: It is worth mentioning that very recently several different groups have succeeded in physically realizing smallscale quantum computers and implementing some of the above mentioned algorithms with them [Jon98] [Chu98]. Also, work on quantum error correction has made impressive advances [Sho95] <ref> [Cor98] </ref> crucial to the construction of larger scale quantum computers. Therefore, although some formidable technological hurdles still exist, it is not unreasonable to suggest that quantum computational systems that perform nontrivial computation are much closer to realization than was thought possible even as recently as two or three years ago.
Reference: [Deu92] <author> Deutsch, David and Richard Jozsa, </author> <title> Rapid Solution of Problems by Quantum Computation, </title> <journal> Proceedings of the Royal Society, London A, </journal> <volume> vol. 439, </volume> <pages> pp. 553-8, </pages> <year> 1992. </year>
Reference-contexts: The field is still in its infancy and very theoretical but offers exciting possibilities for the field of computer science - the most important quantum algorithms discovered to date all perform tasks for which there are no classical equivalents. For example, Deutschs algorithm <ref> [Deu92] </ref> is designed to solve the problem of identifying whether a binary function is constant (function values are either all 1 or all 0) or balanced (the function takes an equal number of 0 and 1 values).
Reference: [Deu85] <author> Deutsch, David, </author> <title> Quantum Theory, The Church-Turing Principle and the Universal Quantum Computer, </title> <journal> Proceedings of the Royal Society, London A, </journal> <volume> vol. 400, </volume> <pages> pp. 97-117, </pages> <year> 1985. </year>
Reference-contexts: introduction to quantum computation see [Bar96]; for a more rigorous treatment see for example <ref> [Deu85] </ref>. The field is still in its infancy and very theoretical but offers exciting possibilities for the field of computer science - the most important quantum algorithms discovered to date all perform tasks for which there are no classical equivalents.
Reference: [Fey86] <author> Feynman, Richard P., </author> <title> Quantum Mechanical Computers, </title> <journal> Foundations of Physics, </journal> <volume> vol. 16 no. 6, </volume> <pages> pp. 507-531, </pages> <year> 1986. </year>
Reference: [Fey65] <author> Feynman, Richard P., R. B. Leighton and Mark Sands, </author> <booktitle> The Feynman Lectures on Physics, </booktitle> <volume> vol. 3, </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading Massachusetts, </address> <year> 1965. </year>
Reference: [Fre92] <author> Freund, Y., </author> <title> An Improved Boosting Algorithm and its Implications on Learning Complexity, </title> <booktitle> Proceedings of the 5rd Annual Workshop on Computational Learning Theory, </booktitle> <pages> pp. 391-98, </pages> <year> 1992. </year>
Reference-contexts: The KMJ method 8 learns f in polynomial time by approximating a polynomial number of large Fourier coefficients in the context of a boosting algorithm due to Freund [Fre90] <ref> [Fre92] </ref>. In order to determine the set A of large coefficients, the method requires access to a membership oracle.
Reference: [Fre90] <author> Freund, Y., </author> <title> Boosting a Weak Learning Algorithm by Majority Voting, </title> <booktitle> Proceedings of the 3rd Annual Workshop on Computational Learning Theory, </booktitle> <pages> pp. 202-216, </pages> <year> 1990. </year>
Reference-contexts: The KMJ method 8 learns f in polynomial time by approximating a polynomial number of large Fourier coefficients in the context of a boosting algorithm due to Freund <ref> [Fre90] </ref> [Fre92]. In order to determine the set A of large coefficients, the method requires access to a membership oracle.
Reference: [Gol89] <author> Goldreich, O. and L. A. Levin, </author> <title> A HardCore Predicate for All One-Way Functions, </title> <booktitle> Proceedings of the 21st Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 25-32, </pages> <year> 1989. </year>
Reference: [Gro96] <author> Grover, L., </author> <title> A Fast Quantum Mechanical Algorithm for Database Search, </title> <booktitle> Proceedings of the 28th Annual ACM Symposium on the Theory of Computing, ACM, </booktitle> <address> New York, </address> <pages> pp. 212-19, </pages> <year> 1996. </year>
Reference-contexts: Here again an exponential speedup is achieved; however, admittedly, both these algorithms have been designed for artificial, somewhat contrived problems. Grovers algorithm <ref> [Gro96] </ref>, on the other hand, provides a method for searching an unordered quantum database in time O ( 2 n ), compared to the classical lower bound of O (2 n ). <p> Computing the Walsh transform of a quantum state is accomplished simply by applying the elementary quantum operator H = 2 1 -1 (34) to each qubit in parallel (see for example <ref> [Gro96] </ref>). In other words, B = HL H , where is the tensor product (direct matrix product) and H appears in the product n times, one for each input.
Reference: [Hag89] <author> Hagerup, Torben and Christine Rub, </author> <title> A Guided Tour to Chernoff Bounds, </title> <journal> Information Processing Letters, </journal> <volume> vol. 33, </volume> <pages> pp. 305-8, </pages> <year> 1989. </year>
Reference-contexts: This implies that the magnitude of the Fourier coefficient for the weak approximator is f W = O ( p (n, s) and using Chernoff bounds <ref> [Hag89] </ref> this can be closely approximated using a polynomial number m of examples drawn randomly from an example oracle, if we know which of the 2 n basis functions it is.
Reference: [Hog96] <author> Hogg, </author> <title> Tad, </title> <journal> Quantum Computing and Phase Transitions in Combinatorial Search Journal of Artificial Intelligence Research, </journal> <volume> vol. 4, </volume> <pages> pp. 91-128, </pages> <year> 1996. </year>
Reference: [Jac94] <author> Jackson, Jeff, </author> <title> An Efficient Membership-Query Algorithm for Learning DNF with Respect to the Uniform Distribution, </title> <booktitle> Proceedings of the 35th Symposium on the Foundations of Computer Science, </booktitle> <pages> pp. 42-53, </pages> <year> 1994. </year> <note> An extended version will appear in the Journal of Computer and System Sciences. </note>
Reference: [Jon98] <author> Jones, J. A. and M. Mosca, </author> <title> Implementation of a Quantum Algorithm to Solve Deutschs Problem on a Nuclear Magnetic Resonance Quantum Computer, </title> <journal> Journal of Chemical Physics, </journal> <note> to appear, </note> <year> 1998. </year>
Reference-contexts: These quantum algorithms take advantage of the unique features of quantum systems to provide significant speedup over classical approaches. It is worth mentioning that very recently several different groups have succeeded in physically realizing smallscale quantum computers and implementing some of the above mentioned algorithms with them <ref> [Jon98] </ref> [Chu98]. Also, work on quantum error correction has made impressive advances [Sho95] [Cor98] crucial to the construction of larger scale quantum computers.
Reference: [Joz97] <editor> Jozsa, Richard, </editor> <booktitle> Entanglement and Quantum Computation, Geometric Issues in the Foundations of Science, </booktitle> <editor> eds. S. Hugget, L. Mason, K. P. Tod, S. T. Tsou and N. M. J. Woodhouse, </editor> <publisher> Oxford University Press, </publisher> <year> 1997. </year> <month> 21 </month>
Reference: [Kea87] <author> Kearns, M., M. Li, L. Pitt and L. Valiant, </author> <title> On the Learnability of Boolean Formula, </title> <booktitle> Proceedings of the 19th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 285-95, </pages> <year> 1987. </year>
Reference: [Kus93] <author> Kushilevitz, Eyal and Yishay Mansour, </author> <title> Learning Decision Trees Using the Fourier Spectrum, </title> <journal> SIAM Journal of Computing, </journal> <volume> vol. 22 no. 6, </volume> <pages> pp. 1331-48, </pages> <year> 1993. </year>
Reference: [Len93] <author> Lenstra, A. K. and H. W. Lenstra, Jr., eds., </author> <title> The Development of the Number Field Sieve, </title> <booktitle> Lecture Notes in Mathematics, </booktitle> <volume> vol. 1554, </volume> <year> 1993. </year>
Reference-contexts: According to Shors paper, the best classical algorithm for prime factorization of an integer that can be represented in n bits runs in time O (g), where g = e n 1 3 (log n) 2 3 <ref> [Len93] </ref>. Since g = O ( 2 n Q ( 2 ), Shors algorithm in some sense does not achieve as much of a speedup as do Grovers algorithm and the algorithm presented here.
Reference: [Mor94] <author> Morrison, Norman, </author> <title> Introduction to Fourier Analysis, </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: The subject of discrete Fourier analysis is well developed and is treated only very briefly here. For a more in depth presentation see any book on Fourier analysis, for example <ref> [Mor94] </ref>. 4.1 Some ideas from Fourier analysis A bipolar-valued binary function f: -0,1-n fi -1,1- can be represented as a Fourier expansion (the expansion used here is actually a simplified Fourier expansion called a Walsh transform) r r a ( x ) a 0,1 -n where the Fourier basis functions a
Reference: [Riv78] <author> Rivest, R. L., A. Shamir and L. Adleman, </author> <title> A Method of Obtaining Digital Signatures and Public-key Cryptosystems, </title> <journal> Communications of the ACM, </journal> <volume> vol. 21, </volume> <pages> pp. 120-6, </pages> <year> 1978. </year>
Reference-contexts: This algorithm finds the prime factors of very large numbers in polynomial time, whereas the best known classical algorithms require exponential time. The implications for the field of cryptography are profound because many cryptographic systems, including the well-known RSA system <ref> [Riv78] </ref>, depend upon the problem of prime factorization requiring exponential time. These quantum algorithms take advantage of the unique features of quantum systems to provide significant speedup over classical approaches.
Reference: [Sha90] <author> Shapire, R. E., </author> <title> The Strength of Weak Learnability, </title> <journal> Machine Learning, </journal> <volume> vol. 5, </volume> <pages> pp. 197-227, </pages> <year> 1990. </year>
Reference: [Sho97] <author> Shor, Peter, </author> <title> Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer, </title> <journal> SIAM Journal of Computing, </journal> <volume> vol. 26 no. 5, </volume> <pages> pp. 1484-1509, </pages> <year> 1997. </year>
Reference-contexts: Here is a real-world problem for which quantum computation provides performance that is classically impossible (though the speedup is less dramatic than exponential). 7 Finally, the most well-known and perhaps the most important quantum algorithm discovered so far is Shors algorithm for prime factorization <ref> [Sho97] </ref>. This algorithm finds the prime factors of very large numbers in polynomial time, whereas the best known classical algorithms require exponential time.
Reference: [Sho95] <author> Shor, Peter, </author> <title> Scheme for Reducing Decoherence in Quantum Computer Memory, </title> <journal> Physical Review A, </journal> <volume> vol. 52 no. 4, </volume> <pages> pp. 2493-6, pp. </pages> <year> 1995. </year>
Reference-contexts: It is worth mentioning that very recently several different groups have succeeded in physically realizing smallscale quantum computers and implementing some of the above mentioned algorithms with them [Jon98] [Chu98]. Also, work on quantum error correction has made impressive advances <ref> [Sho95] </ref> [Cor98] crucial to the construction of larger scale quantum computers.
Reference: [Sim97] <author> Simon, D., </author> <title> On the Power of Quantum Computation, </title> <journal> SIAM Journal of Computation, </journal> <volume> vol. 26 no. 5, </volume> <pages> pp. 1474-83, </pages> <year> 1997. </year>
Reference-contexts: Deutschs algorithm accomplishes the task in order O (1) time, while classical methods require O (2 ) time, where n is the number of binary inputs to the function. Simons algorithm <ref> [Sim97] </ref> is constructed to solve the following promise problem. A function f:-0,1-n fi-0,1-n is guaranteed to be either a random 1-1 function or a periodic 2-1 function such that f (x) = f (xs) for all x for some n-bit string s (where denotes the bitwise exclusive OR).
Reference: [Ter98] <author> Terhal, Barbara. M. and John. A. Smolin, </author> <title> Single Quantum Querying of a Database, </title> <note> Physical Review A , to appear, </note> <month> September </month> <year> 1998. </year>
Reference: [Val84] <author> Valiant, L. G., </author> <title> A Theory of the Learnable, </title> <journal> Communications of the ACM, </journal> <volume> vol. 27 no. 11, </volume> <pages> pp. 1134-42, </pages> <year> 1984. </year>
Reference: [Ved97] <author> Vedral, V., M. B. Plenio, M. A. Rippin and P. L. Knight, </author> <title> Quantifying Entanglement, </title> <journal> Physical Review Letters, </journal> <volume> vol. 78 no. 12, </volume> <pages> pp. 2275-9, </pages> <year> 1997. </year>
Reference: [Ved96] <author> Vedral, Vlatko, Adriano Barenco, and Artur Ekert, </author> <title> Quantum Networks for Elementary Arithmetic Operations, </title> <journal> Physical Review A, </journal> <volume> vol. 54 no. 1, </volume> <pages> pp. 147-53, </pages> <year> 1996. </year>
Reference-contexts: As mentioned before, an explicit algorithm for constructing such a quantum state exists [Ven98]; however it requires 2n+1 qubits.) In contrast, Shors algorithm requires hundreds or thousands of qubits to perform an interesting factorization. For example, <ref> [Ved96] </ref> gives estimates for the number of qubits needed for modular exponentiation, which dominates Shors algorithm - anywhere from 7n+1 down to 4n+3.
Reference: [Ven98] <author> Ventura, Dan and Tony Martinez, </author> <title> Initializing the Amplitude Distribution of a Quantum State, </title> <note> submitted to Physical Review Letters, </note> <month> June </month> <year> 1998. </year>
Reference-contexts: Constructing the state f is nontrivial and a method for doing so in O (mn) time is detailed in <ref> [Ven98] </ref>. Implementing B turns out to be extremely easy on a quantum computer, and it is in fact the basis of most quantum algorithms discovered to date. <p> Further, the algorithm would require only 61 qubits. (Although it appears that the algorithm presented here requires only n qubits, the algorithm depends on a method for representing the training set as a quantum state. As mentioned before, an explicit algorithm for constructing such a quantum state exists <ref> [Ven98] </ref>; however it requires 2n+1 qubits.) In contrast, Shors algorithm requires hundreds or thousands of qubits to perform an interesting factorization. For example, [Ved96] gives estimates for the number of qubits needed for modular exponentiation, which dominates Shors algorithm - anywhere from 7n+1 down to 4n+3.
Reference: [You88] <author> Young, Nicholas, </author> <title> An Introduction to Hilbert Space, </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England, </address> <year> 1988. </year>
References-found: 37

