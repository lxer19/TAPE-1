URL: http://www.daimi.aau.dk/~bromille/Papers/merge.ps
Refering-URL: http://www.daimi.aau.dk/~bromille/Papers/index.html
Root-URL: http://www.daimi.aau.dk
Email: pbmilter@cs.toronto.edu  msp@dcs.warwick.ac.uk  jun@sw.cas.uec.ac.jp  
Title: The Asymptotic Complexity of Merging Networks  
Author: Peter Bro Miltersen Mike Paterson Jun Tarui 
Note: M (m; n) 1 in particular, 2 (m n) log 2 m O(m); in particular, A preliminary version of the paper has appeared in Proceedings of the 33rd Annual Symposium on Foundations of Computer Science, 236- 246, IEEE Computer Society Press, 1992. This work was partially supported by the ESPRIT II BRA Programme of the EC under contract 7141 (ALCOM II).  
Date: July 14, 1995  
Address: King's College Road Toronto, Ontario M5S 1A4 Canada  Coventry, CV4 7AL United Kingdom  Chofu, Tokyo 182 Japan  
Affiliation: Department of Computer Science University of Toronto  Department of Computer Science University of Warwick  Dept. of Communications Systems Engineering Univ. of Electro-Communications  
Abstract: M (n; n) n log 2 n + O(n): We prove the following lower bound that matches the upper bound above asymptotically as n m ! 1: M (n; n) n log 2 n O(n): Our proof technique extends to give similarly tight lower bounds for the size of monotone Boolean circuits for merging, and for the size of switching networks capable of realizing the set of permutations that arise from merging. 
Abstract-found: 1
Intro-found: 1
Reference: [Knu73] <author> D. Knuth, </author> <title> The Art of Computer Programming, Volume 3: Sorting and Searching, </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: Merging networks, which are the subject of this paper, and sorting networks are particularly important and have been studied extensively. For more precise definitions and a comprehensive account of comparator networks, see <ref> [Knu73, pp. 220-246] </ref>. An (m; n)-merging network is a comparator network that merges two input sequences x 1 x 2 : : : x m and y 1 y 2 : : : y n into the sequence z 1 z 2 : : : z m+n . <p> Let M (m; n) denote the minimum number of comparators needed in an (m; n)-merging network. The (m; n)-merging network based on Batcher's odd-even merge <ref> [Knu73, pp. 224-226] </ref> provides the best known upper bound for M (m; n) for all values of m, n 1. Throughout the paper we assume m n, and all logarithms are to the base 2. Let C (m; n) denote the number of comparators in Batcher's (m; n)-merging network. <p> Then, M (m; n) C (m; n) = 2 2 and in particular, M (n; n) n log n + O (n): The previous best lower bounds for M (n; n) and M (m; n) are due to Floyd <ref> [Knu73, pp. 230-232] </ref> and to Yao and Yao [YY76] who proved, respectively, M (n; n) 2 M (m; n) 2 We close this long-standing factor-of-two gap between the previous best lower and upper bounds for M (n; n) and show that the asymptotic value of M (n; n) is n log <p> The next fact is the `0-1 principle' for merging in terms of min-max circuits. (See <ref> [Knu73, p. 224] </ref> for a proof of a similar fact.) Fact 4. If a min-max circuit merges every pair of Boolean sequences of length m and n, then it is an (m; n)-merging min-max circuit. <p> Yao and Yao [YY76] have shown that for a fixed m the limit r m = lim n!1 M (m; n)=n exists and that r m log (m + 1); dlog me 2 m 2 dlog me = lim n!1 n See <ref> [Knu73, p. 226] </ref> for a proof of the last equality. Let H (n) be the minimum external path length of a binary tree with n leaves, or the total length of an optimal Huffman code for a uniform distribution over an alphabet of size n. <p> Let H (n) be the minimum external path length of a binary tree with n leaves, or the total length of an optimal Huffman code for a uniform distribution over an alphabet of size n. As shown in <ref> [Knu73, p. 374] </ref>, H (n)=n = log n + (1 + 2 ) where = dlog ne log n, and 1 + 2 oscillates between 0 and about 0.086. <p> is no pair (m; n) for which an (m; n)-merging network with fewer than 18 C (m; n) comparators is known to exist, and the problem of proving or disproving: M (m; n) = C (m; n) for all m, n 1, which was stated as an open problem in <ref> [Knu73, p. 243, Exercise 45] </ref>, remains open. For the case m = 2, Yao and Yao [YY76] have shown that M (2; n) = C (2; n) = d 3 2 ne. <p> For the case m = 2, Yao and Yao [YY76] have shown that M (2; n) = C (2; n) = d 3 2 ne. For n 5, Floyd <ref> [Knu73, p. 237, Exercise 9] </ref> has shown that M (n; n) = C (n; n). Thus for these cases Batcher's networks are exactly optimal. Improving the lower bounds shown in this paper would be a natural step towards determining M (m; n).
Reference: [Lam79] <author> E. Lamagna, </author> <title> "The complexity of monotone networks for certain bilinear forms, routing problems, sorting and merging," </title> <journal> IEEE Trans. on Comp., </journal> <volume> 28(1979), </volume> <pages> 773-782. </pages>
Reference-contexts: The previous best lower bounds are due to Lamagna <ref> [Lam79] </ref> and, independently, to Pippenger and Valiant [PV76].
Reference: [PV76] <author> N. Pippenger and L. Valiant, </author> <title> "Shifting graphs and their applications," </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 23(1976), </volume> <pages> 423-432. </pages>
Reference-contexts: In Sections 3 and 4 we prove Theorems 1 and 2 respectively. Finally in Section 5 we discuss some open problems related to this work. 4 2 Results Our theorems are in terms of the following general framework considered by Pippenger and Valiant <ref> [PV76] </ref>. Let G = (V; E) be a directed graph and let S = fs 1 ; : : : ; s k g and T = ft 1 ; : : : ; t k g be disjoint sets of vertices. <p> The previous best lower bounds are due to Lamagna [Lam79] and, independently, to Pippenger and Valiant <ref> [PV76] </ref>.
Reference: [Sh48] <author> C. Shannon, </author> <title> "A mathematical theory of communication," </title> <journal> Bell Syst. Tech. J., </journal> <volume> 27(1948), </volume> <pages> 379-423, </pages> <note> reprinted in C. </note> <author> Shannon and W. </author> <title> Weaver "The mathematical theory of communication," </title> <institution> Univ. of Illinois Press, Urbana, Illinois, </institution> <year> 1949. </year>
Reference-contexts: We have m+n X H ((z i )) i=1 i j] i=1 i j] = E [ i=1 i j] 2M i=1 i j jV Sj; where the first inequality follows from the well-known theorem of Shannon <ref> [Sh48] </ref> (for a noiseless channel and discrete memoryless source). Shannon's theorem states that the expected number of bits of a code word in a code for the source is at least the entropy of the source. See, e.g., [Wel88] for an elementary account of this theorem.
Reference: [Wel88] <author> D. Welsh, </author> <title> Codes and Cryptography, </title> <publisher> Oxford University Press, </publisher> <year> 1988. </year>
Reference-contexts: Shannon's theorem states that the expected number of bits of a code word in a code for the source is at least the entropy of the source. See, e.g., <ref> [Wel88] </ref> for an elementary account of this theorem. The equality is by the linearity of expectations.
Reference: [YY76] <author> A. Yao and F. Yao, </author> <title> "Lower bounds on merging networks," </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 23(1976), </volume> <pages> 566-571. </pages>
Reference-contexts: Then, M (m; n) C (m; n) = 2 2 and in particular, M (n; n) n log n + O (n): The previous best lower bounds for M (n; n) and M (m; n) are due to Floyd [Knu73, pp. 230-232] and to Yao and Yao <ref> [YY76] </ref> who proved, respectively, M (n; n) 2 M (m; n) 2 We close this long-standing factor-of-two gap between the previous best lower and upper bounds for M (n; n) and show that the asymptotic value of M (n; n) is n log n, by proving the following lower bound for <p> Remark. Recall that C (m; n) denotes the number of comparators in Batcher's (m; n)-merging network. Yao and Yao <ref> [YY76] </ref> have shown that for a fixed m the limit r m = lim n!1 M (m; n)=n exists and that r m log (m + 1); dlog me 2 m 2 dlog me = lim n!1 n See [Knu73, p. 226] for a proof of the last equality. <p> For the case m = 2, Yao and Yao <ref> [YY76] </ref> have shown that M (2; n) = C (2; n) = d 3 2 ne. For n 5, Floyd [Knu73, p. 237, Exercise 9] has shown that M (n; n) = C (n; n). Thus for these cases Batcher's networks are exactly optimal.
References-found: 6

