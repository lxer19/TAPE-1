URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/RTMulticastFull.ps.Z
Refering-URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/routing.html
Root-URL: http://www.csc.ncsu.edu
Title: Evaluation of Multicast Routing Algorithms for Real-Time Communication on High-Speed Networks  
Author: Hussein F. Salama Douglas S. Reeves Yannis Viniotis 
Note: This work was supported in part by IBM SUR project #1429, in part by the Center for Advanced Computing and Communication  and in part by AFOSR grants F49620-92-J-0441DEF and F49620-96-1-0061. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of the AFOSR or the U.S. Government.  
Address: Raleigh, NC 27695  
Affiliation: North Carolina State University  at North Carolina State University,  
Abstract: Multicast (MC) routing algorithms capable of satisfying the quality of service (QoS) requirements of real-time applications will be essential for future high-speed networks. We compare the performance of all of the important MC routing algorithms when applied to networks with asymmetric link loads. Each algorithm is judged based on the quality of the MC trees it generates and its efficiency in managing the network resources. Simulation results over random networks show that unconstrained algorithms are not capable of fulfilling the QoS requirements of real-time applications in wide-area networks. Simulations also reveal that one of the unconstrained algorithms, reverse path multicasting (RPM), is quite inefficient when applied to asymmetric networks. We study how combining routing with resource reservation and admission control improves RPM's efficiency in managing the network resources. The performance of one semiconstrained heuristic, MSC, three constrained Steiner tree (CST) heuristics, KPP, CAO, and BSMA, and one constrained shortest path tree (CSPT) heuristic, CDKS are also studied. Simulations show that the semiconstrained and constrained heuristics are capable of successfully constructing MC trees which satisfy the QoS requirements of real-time traffic. However, the cost performance of the heuristics varies. BSMA's MC trees are lower in cost than all other constrained heuristics. Finally, we compare the execution times of all algorithms, unconstrained, semiconstrained, and constrained. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks. </title> <booktitle> Prentice-Hall, 2nd ed., </booktitle> <year> 1992. </year>
Reference-contexts: Distributed applications will utilize future networks, and in many cases they will involve multiple users. Hence the increasing importance of multicast (MC) routing algorithms which are able to manage the network resources efficiently and to satisfy the QoS requirements of each individual application. Bertsekas and Gallager <ref> [1] </ref> define the routing function as consisting of two parts. The first part selects a route for the session during the connection establishment phase, and the second part ensures that each packet of that session is forwarded along the assigned route. <p> MC routing algorithms can be classified into one of two categories. The first category is the shortest path algorithms which minimize the cost of each path from the source node to a multicast group member node. Bellman-Ford's algorithm and Dijkstra's algorithm are two well known shortest path algorithms <ref> [1] </ref>. They are the basis of the distance vector and link state routing protocols respectively. The other category is the minimum Steiner tree algorithms. Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete [4]. <p> Our implementation of these two algorithms uses a branch and bound technique. Their execution times are very large, so we could only apply them to small networks. The third optimal algorithm is the least-delay, LD, MC routing algorithm. We implemented it as a Dijkstra's shortest path algorithm <ref> [1] </ref> in which C (e) = D (e), i.e., it guarantees minimum end-to-end delay from the 4 source to each MC group member. The worst case time complexity of Dijkstra's algorithm is O (jV j 2 ).
Reference: [2] <author> M. Macedonia and D. Brutzman, </author> <title> MBone Provides Audio and Video Across the Internet, </title> <journal> IEEE Computer, </journal> <volume> vol. 27, no. 4, </volume> <pages> pp. 30-36, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Thus simple MC routing algorithms were sufficient to manage the network bandwidth. In many cases, MC trees were simply constructed by the superposition of multiple unicast paths. The situation is different, however, for the emerging real-time applications discussed above. For example, videoconferencing is now available over the Internet <ref> [2] </ref>. So the question now is: are the simple MC routing algorithms, which were originally designed for best-effort networks, suitable for networks carrying real-time applications? A number of new MC routing algorithms designed specifically for real-time applications were proposed during the past few years.
Reference: [3] <author> H. Salama, </author> <title> Multicast Routing for Real-time Communication on High-Speed Networks. </title> <type> PhD thesis, </type> <institution> North Carolina State University, Department of Electrical and Computer Engineering, </institution> <year> 1996. </year> <note> In Preparation. </note>
Reference-contexts: A heuristic that constructs a MC tree subject to both an upper bound on end-to-end delay and an upper bound on delay variation 4 is given in [17]. In the remainder of this paper, we refer to delay-constrained MC 2 The reader is referred to <ref> [3] </ref> for a complete classification and a complete survey of MC routing algorithms for communication networks. 3 The algorithm in [12] constructs multiple optimal delay-constrained minimum Steiner trees simultaneously. 4 Delay variation is the difference between the minimum and the maximum end-to-end delays on the same tree. 3 routing algorithms simply <p> Full duplex ATM networks with homogeneous link capacities of 155 Mbps (OC3) were used in the experiments. The positions of the nodes were fixed in a rectangle of size 3000 fl 2400 Km 2 , roughly the area of the USA. A random generator <ref> [3] </ref> (based on Waxman's generator [27] with some modifications) was used to create links interconnecting the nodes. The output of this random generator is always a connected network in which each node's degree is 2. Therefore the output is always a two-connected network 6 .
Reference: [4] <author> R. Karp, </author> <title> Reducibility among Combinatorial Problems, in Complexity of Computer Computations (R. </title> <editor> Miller and J. Thatcher, </editor> <booktitle> eds.), </booktitle> <pages> pp. 85-103, </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: They are the basis of the distance vector and link state routing protocols respectively. The other category is the minimum Steiner tree algorithms. Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete <ref> [4] </ref>. Hwang [5] provides a survey of both exact and heuristic minimum Steiner tree algorithms. Efficient minimum Steiner tree heuristics are given in [6, 7, 8, 9].
Reference: [5] <author> F. Hwang and D. Richards, </author> <title> Steiner Tree Problems, </title> <journal> Networks, </journal> <volume> vol. 22, no. 1, </volume> <pages> pp. 55-89, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: They are the basis of the distance vector and link state routing protocols respectively. The other category is the minimum Steiner tree algorithms. Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete [4]. Hwang <ref> [5] </ref> provides a survey of both exact and heuristic minimum Steiner tree algorithms. Efficient minimum Steiner tree heuristics are given in [6, 7, 8, 9]. <p> Very few algorithms have been proposed for the minimum Steiner tree problem in directed networks <ref> [5] </ref>, and all of them operate under special conditions, e.g., acyclic networks, and thus they can not be applied to the networks we work on. In the case of undirected networks, however, there are several heuristics of reasonable complexity.
Reference: [6] <author> S. Ramanathan, </author> <title> An Algorithm for Multicast Tree Generation in Networks with Asymmetric Links, </title> <booktitle> in Proceedings of IEEE INFOCOM '96, </booktitle> <pages> pp. 337-344, </pages> <year> 1996. </year> <month> 18 </month>
Reference-contexts: Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete [4]. Hwang [5] provides a survey of both exact and heuristic minimum Steiner tree algorithms. Efficient minimum Steiner tree heuristics are given in <ref> [6, 7, 8, 9] </ref>. If the destination set of a minimum Steiner tree includes all nodes in the network, the problem reduces to the minimum spanning tree problem which can be solved in polynomial time [10].
Reference: [7] <author> L. Kou, G. Markowsky, and L. Berman, </author> <title> A Fast Algorithm for Steiner Trees, </title> <journal> Acta Informatica, </journal> <volume> vol. 15, no. 2, </volume> <pages> pp. 141-145, </pages> <year> 1981. </year>
Reference-contexts: Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete [4]. Hwang [5] provides a survey of both exact and heuristic minimum Steiner tree algorithms. Efficient minimum Steiner tree heuristics are given in <ref> [6, 7, 8, 9] </ref>. If the destination set of a minimum Steiner tree includes all nodes in the network, the problem reduces to the minimum spanning tree problem which can be solved in polynomial time [10]. <p> In the case of undirected networks, however, there are several heuristics of reasonable complexity. Doar and Leslie [23] show that the total cost of trees generated using the Kou, Markowsky, and Berman, KMB, heuristic <ref> [7] </ref> for the minimum Steiner tree is on the average only 5% worse than the cost of the optimal solution while its time complexity is O (jGjjV j 2 ). Thus KMB is an efficient unconstrained minimum Steiner tree heuristic for undirected networks.
Reference: [8] <author> V. Rayward-Smith, </author> <title> The Computation of Nearly Minimal Steiner Trees in Graphs, </title> <journal> International Journal of Mathematical Education in Science and Technology, </journal> <volume> vol. 14, no. 1, </volume> <pages> pp. 15-23, </pages> <month> January/February </month> <year> 1983. </year>
Reference-contexts: Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete [4]. Hwang [5] provides a survey of both exact and heuristic minimum Steiner tree algorithms. Efficient minimum Steiner tree heuristics are given in <ref> [6, 7, 8, 9] </ref>. If the destination set of a minimum Steiner tree includes all nodes in the network, the problem reduces to the minimum spanning tree problem which can be solved in polynomial time [10].
Reference: [9] <author> H. Takahashi and A. </author> <title> Matsuyama, An Approximate Solution for the Steiner Problem in Graphs, </title> <journal> Mathematica Japonica, </journal> <volume> vol. 24, no. 6, </volume> <pages> pp. 573-577, </pages> <month> February </month> <year> 1980. </year>
Reference-contexts: Their objective is to minimize the total cost of the MC tree. This problem is known to be NP-complete [4]. Hwang [5] provides a survey of both exact and heuristic minimum Steiner tree algorithms. Efficient minimum Steiner tree heuristics are given in <ref> [6, 7, 8, 9] </ref>. If the destination set of a minimum Steiner tree includes all nodes in the network, the problem reduces to the minimum spanning tree problem which can be solved in polynomial time [10].
Reference: [10] <author> R. Prim, </author> <title> Shortest Connection Networks and Some Generalizations, </title> <journal> The Bell Systems Technical Journal, </journal> <volume> vol. 36, no. 6, </volume> <pages> pp. 1389-1401, </pages> <month> November </month> <year> 1957. </year>
Reference-contexts: Efficient minimum Steiner tree heuristics are given in [6, 7, 8, 9]. If the destination set of a minimum Steiner tree includes all nodes in the network, the problem reduces to the minimum spanning tree problem which can be solved in polynomial time <ref> [10] </ref>. An analytical study of the tradeoffs between shortest path trees and minimum Steiner trees can be found in [11]. In order to support real-time applications, network protocols must be able to provide QoS guarantees. <p> However, fixing the granularity has side effects. When the granularity is comparable to the average link delays, KPP's accuracy is compromised and in many cases it can not find a solution for the CST problem when one exists. Both KMB and KPP heuristics use Prim's algorithm <ref> [10] </ref> to obtain a minimum spanning tree of a closure graph. However, Prim's algorithm is only optimal for undirected networks, and this might affect the performance of the two heuristics when applied to directed networks. Widyono [14] proposed four unconstrained MC heuristics and four CST heuristics.
Reference: [11] <author> K. Barath-Kumar and J. Jaffe, </author> <title> Routing to Multiple Destinations in Computer Networks, </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-31, no. 3, </volume> <pages> pp. 343-351, </pages> <month> March </month> <year> 1983. </year>
Reference-contexts: An analytical study of the tradeoffs between shortest path trees and minimum Steiner trees can be found in <ref> [11] </ref>. In order to support real-time applications, network protocols must be able to provide QoS guarantees. For example, a guaranteed upper bound on end-to-end delay, D, must be provided to certain distributed multimedia applications.
Reference: [12] <author> C. Noronha and F. Tobagi, </author> <title> Optimum Routing of Multicast Streams, </title> <booktitle> in Proceedings of IEEE INFOCOM '94, </booktitle> <pages> pp. 865-873, </pages> <year> 1994. </year>
Reference-contexts: MC routing algorithms proposed specifically for high-speed networks construct an efficient MC tree without violating the constraint implied by the upper bound on delay. These are called delay-constrained algorithms to distinguish them from other algorithms. Optimal algorithms for constructing delay-constrained minimum Steiner trees exist <ref> [12] </ref> 3 , but their average execution times are prohibitively large, because the problem is NP-complete [13]. Several delay-constrained Steiner tree heuristics have been proposed during the past few years [13, 14, 15]. <p> In the remainder of this paper, we refer to delay-constrained MC 2 The reader is referred to [3] for a complete classification and a complete survey of MC routing algorithms for communication networks. 3 The algorithm in <ref> [12] </ref> constructs multiple optimal delay-constrained minimum Steiner trees simultaneously. 4 Delay variation is the difference between the minimum and the maximum end-to-end delays on the same tree. 3 routing algorithms simply as constrained algorithms.
Reference: [13] <author> V. Kompella, J. Pasquale, , and G. Polyzos, </author> <title> Multicasting for Multimedia Applications, </title> <booktitle> in Proceedings of IEEE INFOCOM '92, </booktitle> <pages> pp. 2078-2085, </pages> <year> 1992. </year>
Reference-contexts: These are called delay-constrained algorithms to distinguish them from other algorithms. Optimal algorithms for constructing delay-constrained minimum Steiner trees exist [12] 3 , but their average execution times are prohibitively large, because the problem is NP-complete <ref> [13] </ref>. Several delay-constrained Steiner tree heuristics have been proposed during the past few years [13, 14, 15]. The heuristics proposed in [14] use a delay-constrained Bellman-Ford shortest path algorithm during the computation of the delay-constrained Steiner tree. <p> Optimal algorithms for constructing delay-constrained minimum Steiner trees exist [12] 3 , but their average execution times are prohibitively large, because the problem is NP-complete [13]. Several delay-constrained Steiner tree heuristics have been proposed during the past few years <ref> [13, 14, 15] </ref>. The heuristics proposed in [14] use a delay-constrained Bellman-Ford shortest path algorithm during the computation of the delay-constrained Steiner tree. Sun and Langendoerfer [16] present a delay-constrained heuristic based on Dijkstra shortest path algorithm. <p> The first heuristic for the CST problem was given by Kompella, Pasquale, and Polyzos <ref> [13] </ref>. We label this KPP 5 heuristic. KPP assumes that the link delays and the delay bound, D, are integers. The heuristic is dominated by computing a constrained closure graph which takes time O (DjV j 3 ). Thus KPP takes polynomial time only if D is bounded.
Reference: [14] <author> R. Widyono, </author> <title> The Design and Evaluation of Routing Algorithms for Real-Time Channels, </title> <type> Tech. Rep. </type> <institution> ICSI TR-94-024, University of California at Berkeley, International Computer Science Institute, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: Optimal algorithms for constructing delay-constrained minimum Steiner trees exist [12] 3 , but their average execution times are prohibitively large, because the problem is NP-complete [13]. Several delay-constrained Steiner tree heuristics have been proposed during the past few years <ref> [13, 14, 15] </ref>. The heuristics proposed in [14] use a delay-constrained Bellman-Ford shortest path algorithm during the computation of the delay-constrained Steiner tree. Sun and Langendoerfer [16] present a delay-constrained heuristic based on Dijkstra shortest path algorithm. <p> Optimal algorithms for constructing delay-constrained minimum Steiner trees exist [12] 3 , but their average execution times are prohibitively large, because the problem is NP-complete [13]. Several delay-constrained Steiner tree heuristics have been proposed during the past few years [13, 14, 15]. The heuristics proposed in <ref> [14] </ref> use a delay-constrained Bellman-Ford shortest path algorithm during the computation of the delay-constrained Steiner tree. Sun and Langendoerfer [16] present a delay-constrained heuristic based on Dijkstra shortest path algorithm. <p> Both KMB and KPP heuristics use Prim's algorithm [10] to obtain a minimum spanning tree of a closure graph. However, Prim's algorithm is only optimal for undirected networks, and this might affect the performance of the two heuristics when applied to directed networks. Widyono <ref> [14] </ref> proposed four unconstrained MC heuristics and four CST heuristics. The four CST heuristics are based on a constrained Bellman-Ford algorithm presented in the same report. Constrained Bellman-Ford uses a breadth-first search to find the constrained least-cost paths from the source to all other nodes in the network.
Reference: [15] <author> Q. Zhu, M. Parsa, and J. Garcia-Luna-Aceves, </author> <title> A Source-Based Algorithm for Delay-Constrained Minimum-Cost Multicasting, </title> <booktitle> in Proceedings of IEEE INFOCOM '95, </booktitle> <pages> pp. 377-385, </pages> <year> 1995. </year>
Reference-contexts: Optimal algorithms for constructing delay-constrained minimum Steiner trees exist [12] 3 , but their average execution times are prohibitively large, because the problem is NP-complete [13]. Several delay-constrained Steiner tree heuristics have been proposed during the past few years <ref> [13, 14, 15] </ref>. The heuristics proposed in [14] use a delay-constrained Bellman-Ford shortest path algorithm during the computation of the delay-constrained Steiner tree. Sun and Langendoerfer [16] present a delay-constrained heuristic based on Dijkstra shortest path algorithm. <p> CAO is always capable of constructing a constrained MC tree, if one exists, because of the nature of the breadth-first search it conducts. The bounded shortest multicast algorithm <ref> [15] </ref>, BSMA, is the third CST heuristic we study in this work. BSMA starts by computing a LD tree for a given source s and MC group G.
Reference: [16] <author> Q. Sun and H. Langendoerfer, </author> <title> Efficient Multicast Routing for Delay-Sensitive Applications, </title> <booktitle> in Proceedings of the Second Workshop on Protocols for Multimedia Systems (PROMS), </booktitle> <pages> pp. 452-458, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Several delay-constrained Steiner tree heuristics have been proposed during the past few years [13, 14, 15]. The heuristics proposed in [14] use a delay-constrained Bellman-Ford shortest path algorithm during the computation of the delay-constrained Steiner tree. Sun and Langendoerfer <ref> [16] </ref> present a delay-constrained heuristic based on Dijkstra shortest path algorithm. A heuristic that constructs a MC tree subject to both an upper bound on end-to-end delay and an upper bound on delay variation 4 is given in [17]. <p> In our experiments, we neither limit the value of k nor limit the number of superedge replacements, because the objective of our work is to achieve the best possible cost performance while satisfying the delay bound. A CSPT heuristic is proposed in <ref> [16] </ref>. This heuristic computes an unconstrained LC tree. If the end-to-end delay to any group member violates the delay bound, the path from the source to that group member is replaced with the least-delay path.
Reference: [17] <author> G. Rouskas and I. Baldine, </author> <title> Multicast Routing with End-to-End Delay and Delay Variation Constraints, </title> <booktitle> in Proceedings of IEEE INFOCOM '96, </booktitle> <pages> pp. 353-360, </pages> <year> 1996. </year>
Reference-contexts: Sun and Langendoerfer [16] present a delay-constrained heuristic based on Dijkstra shortest path algorithm. A heuristic that constructs a MC tree subject to both an upper bound on end-to-end delay and an upper bound on delay variation 4 is given in <ref> [17] </ref>.
Reference: [18] <author> Y. Dalal and R. Metcalfe, </author> <title> Reverse Path Forwarding of Broadcast Packets, </title> <journal> Communications of the ACM, </journal> <volume> vol. 21, no. 12, </volume> <pages> pp. 1040-1048, </pages> <month> December </month> <year> 1978. </year>
Reference-contexts: As has been mentioned in the previous section, several MC routing protocols adopt algorithms that construct shortest reverse path MC trees. We study only one of these algorithms, namely reverse path multicasting, RPM <ref> [18, 19] </ref>.
Reference: [19] <author> S. Deering and D. Cheriton, </author> <title> Multicast Routing in Datagram Internetworks and Extended LANs, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> vol. 8, no. 2, </volume> <pages> pp. 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: As has been mentioned in the previous section, several MC routing protocols adopt algorithms that construct shortest reverse path MC trees. We study only one of these algorithms, namely reverse path multicasting, RPM <ref> [18, 19] </ref>.
Reference: [20] <author> A. Ballardie, P. Francis, and J. Crowcroft, </author> <title> Core Based Trees (CBT): An Architecture for Scalable Inter-Domain 19 Multicast Routing, </title> <booktitle> in Proceedings of ACM SIGCOMM '93, </booktitle> <pages> pp. 85-95, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Such a MC tree is an optimal shortest path tree only if the link costs are symmetric. Several MC routing protocols <ref> [20, 21, 22] </ref> use algorithms which construct shortest reverse path trees, because: they require limited state information at each node and they can be implemented distributedly.
Reference: [21] <author> D. Waitzman, C. Partridge, and S. Deering, </author> <title> Distance Vector Multicast Routing Protocol. Internet RFC 1075, </title> <note> http://ds.internic.net/rfc/rfc1075.txt, November 1988. </note>
Reference-contexts: Such a MC tree is an optimal shortest path tree only if the link costs are symmetric. Several MC routing protocols <ref> [20, 21, 22] </ref> use algorithms which construct shortest reverse path trees, because: they require limited state information at each node and they can be implemented distributedly. <p> This is because the average lengths of the reverse shortest paths and the forward shortest paths are equal, and thus propagation delays are equal in both directions. RPM is used in practice <ref> [21] </ref>, because it requires only limited information to be available at each node in order to construct a reverse shortest path MC tree. Current implementations of RPM do not perform routing, resource reservation and admission control at the same stage.
Reference: [22] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C.-G. Liu, and L. Wei, </author> <title> The PIM Architecture for Wide-Area Multicast Routing, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 4, no. 2, </volume> <pages> pp. 153-162, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Such a MC tree is an optimal shortest path tree only if the link costs are symmetric. Several MC routing protocols <ref> [20, 21, 22] </ref> use algorithms which construct shortest reverse path trees, because: they require limited state information at each node and they can be implemented distributedly.
Reference: [23] <author> M. Doar and I. Leslie, </author> <title> How Bad is Naive Multicast Routing, </title> <booktitle> in Proceedings of IEEE INFOCOM '93, </booktitle> <pages> pp. 82-89, </pages> <year> 1993. </year>
Reference-contexts: In the case of undirected networks, however, there are several heuristics of reasonable complexity. Doar and Leslie <ref> [23] </ref> show that the total cost of trees generated using the Kou, Markowsky, and Berman, KMB, heuristic [7] for the minimum Steiner tree is on the average only 5% worse than the cost of the optimal solution while its time complexity is O (jGjjV j 2 ). <p> KMB heuristic yields very low tree costs. Note, however, that in the more asymmetric case (figure 2 (b)) KMB's costs are approximately 10% worse than OPT, which is not as good as its performance when applied to symmetric networks <ref> [23] </ref>. LC does not perform as well as KMB, because it attempts to minimize the cost per path from source to destination, not the total cost of the entire tree. LC's costs are up to 40% worse than OPT.
Reference: [24] <author> J. Moy, MOSPF, </author> <title> Analysis and Experience. Internet RFC 1585, </title> <address> http://ds.internic.net/ rfc/rfc1585.txt, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Thus KMB is an efficient unconstrained minimum Steiner tree heuristic for undirected networks. We will study how efficient it is when applied to directed networks with delay constraints. Dijkstra's shortest path algorithm is used in communication protocols, e.g., MOSPF <ref> [24] </ref>, and it yields satisfactory performance. It is a least-cost, LC, algorithm which minimizes the cost of the path from the source node to each MC group member individually. We study LC's performance to determine its applicability to networks that are heavily loaded with multimedia applications.
Reference: [25] <author> A. Waters, </author> <title> A New Heuristic for ATM Multicast Routing, </title> <booktitle> in Proceedings of the Second IFIP Workshop on Performance Modeling and Evaluation of ATM Networks, </booktitle> <pages> pp. </pages> <address> 8.1-8.9, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: This CSPT heuristic is O (jV j 2 ), because it uses Dijkstra's algorithm for computing both the LC and LD trees. We call it the constrained Dijkstra heuristic, CDKS. We consider the minimum Steiner tree heuristic proposed by Waters <ref> [25] </ref> to be semi-constrained, because it uses the maximum end-to-end delay from the source to any node in the network as the delay constraint. <p> The heuristic then constructs a broadcast tree that does not violate the internal delay constraint. Finally, the broadcast tree is pruned beyond the multicast nodes. We call this the semiconstrained (SC) heuristic. In [26], we implemented the original algorithm proposed in <ref> [25] </ref> which resembles a semi-constrained minimum spanning tree, and we also implemented a modified version which is closer to a semi-constrained shortest path tree.
Reference: [26] <author> H. Salama, D. Reeves, Y. Viniotis, and T.-L. Sheu, </author> <title> Comparison of Multicast Routing Algorithms for High-Speed Networks, </title> <type> Tech. Rep. TR 29.1930, </type> <institution> IBM, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: The heuristic then constructs a broadcast tree that does not violate the internal delay constraint. Finally, the broadcast tree is pruned beyond the multicast nodes. We call this the semiconstrained (SC) heuristic. In <ref> [26] </ref>, we implemented the original algorithm proposed in [25] which resembles a semi-constrained minimum spanning tree, and we also implemented a modified version which is closer to a semi-constrained shortest path tree. Simulation results given in [26] showed that the modified version, denoted as the modified semiconstrained, MSC, heuristic always performs <p> We call this the semiconstrained (SC) heuristic. In <ref> [26] </ref>, we implemented the original algorithm proposed in [25] which resembles a semi-constrained minimum spanning tree, and we also implemented a modified version which is closer to a semi-constrained shortest path tree. Simulation results given in [26] showed that the modified version, denoted as the modified semiconstrained, MSC, heuristic always performs better than the original heuristic with respect to tree costs, end-to-end delays, and network balancing. Therefore, it suffices to study MSC. SC and MSC are dominated by the computation of the internal delay bound.
Reference: [27] <author> B. Waxman, </author> <title> Routing of Multipoint Connections, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, no. 9, </volume> <pages> pp. 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Full duplex ATM networks with homogeneous link capacities of 155 Mbps (OC3) were used in the experiments. The positions of the nodes were fixed in a rectangle of size 3000 fl 2400 Km 2 , roughly the area of the USA. A random generator [3] (based on Waxman's generator <ref> [27] </ref> with some modifications) was used to create links interconnecting the nodes. The output of this random generator is always a connected network in which each node's degree is 2. Therefore the output is always a two-connected network 6 .
Reference: [28] <author> C. Noronha and F. Tobagi, </author> <title> Evaluation of Multicast Routing Algorithms for Multimedia Streams, </title> <booktitle> in Proceedings of IEEE International Telecommunications Symposium, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: The output of this random generator is always a connected network in which each node's degree is 2. Therefore the output is always a two-connected network 6 . Noronha and Tobagi <ref> [28] </ref> have shown, using simulation, that the performance of a MC routing algorithm when applied to a real network is almost identical to its performance when applied to a random two-connected network.
Reference: [29] <author> R. Guerin, h. Ahmadi, and M. Naghshineh, </author> <title> Equivalent Capacity and its Application to Bandwidth Allocation in High-speed Networks, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, no. 7, </volume> <pages> pp. 968-981, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: For the MC sources we used variable bit rate (VBR) video sources. Any session traversing a link e, reserved a fraction of e's bandwidth equal to the equivalent bandwidth <ref> [29] </ref> of the traffic it generated. The link cost, C (e), was taken equal to the reserved bandwidth on that link, because it is a suitable measure of the utilization of both the link's bandwidth and its buffer space.
Reference: [30] <author> S. Rampal and D. Reeves, </author> <title> An Evaluation of Routing and Admission Control Algorithms for Multimedia Traffic, </title> <journal> Computer Communications, </journal> <volume> vol. 18, no. 10, </volume> <pages> pp. 755-768, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: A detailed study of admission control algorithms for real-time traffic can be found in <ref> [30] </ref>. Interactive voice and video sessions have tight delay requirements. We used a value of 0.03 seconds for D which represents only an upper bound on the end-to-end propagation time across the network.

References-found: 30

