URL: http://www.cs.toronto.edu/~vassos/research/publications/AWH92/paper.ps.gz
Refering-URL: http://www.cs.toronto.edu/~vassos/research/list-of-publications.html
Root-URL: 
Title: ON THE MESSAGE COMPLEXITY OF BINARY BYZANTINE AGREEMENT UNDER CRASH FAILURES  
Author: Eugene S. Amdur Samuel M. Weber Vassos Hadzilacos 
Note: September 5, 1991  
Address: Toronto, Toronto, Canada  
Affiliation: Department of Computer Science University of  
Abstract: The binary Byzantine Agreement problem requires n 1 receivers to agree on the binary value broadcast by a sender even when some of these n processes may be faulty. We investigate the message complexity of protocols that solve this problem in the case of crash failures. In particular, we derive matching upper and lower bounds on the total, worst and average case number of messages needed in the failure-free executions of such protocols. More specifically, we prove that any protocol that tolerates up to t faulty processes requires a total of at least n + t 1 messages in its failure-free executions | and, therefore, at least d(n + t 1)=2e messages in the worst case and min(P 0 ; P 1 )(n+t1) messages in the average case, where P v is the probability that the value of the bit that the sender wants to broadcast is v. We also give protocols that solve the problem using only the minimum number of messages for these three complexity measures. These protocols can be implemented by using 1-bit messages. Since a lower bound on the number of messages is also a lower bound on the number of message bits, this means that the above tight bounds on the number of messages are also tight bounds on the number of message bits. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Amdur, </author> <title> E.S. On the Message Complexity of Byzantine Agreement. </title> <type> Master's Thesis, </type> <institution> Department of Computer Science, University of Toronto, </institution> <month> September </month> <year> 1988. </year>
Reference-contexts: Unfortunately, Dolev and Reischuk's proof does not apply to this model of failures, as it uses, in a crucial manner, faulty processes which are not silent but are prevented from receiving messages | a behaviour which is possible under general omission failures, but impossible under sending omission failures only <ref> [1] </ref>. Closing the gap between the upper and lower bounds of the worst case message complexity in the case of crash and sending omission failures remains an open problem.
Reference: [2] <author> Berman, P., J. Garray and K. Perry. </author> <title> "Recursive Phase King Protocols for Distributed Consensus". </title> <type> Technical Report CS-89-24, </type> <institution> Computer Science Department, Pennsylva-nia State University, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time [12, 7, 8, 16]. Other papers which address the message complexity of BA protocols include <ref> [6, 2, 4] </ref>. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures.
Reference: [3] <author> Bracha, G. </author> <type> Unpublished manuscript, </type> <institution> Department of Computer Science, Cornell University, </institution> <month> July </month> <year> 1984. </year>
Reference-contexts: There is no hope of extending the (n + t 2 ) bound of Dolev and Reischuk to this case, since there are algorithms that tolerate crash failures and use only O (n + t p messages in the worst case over all runs <ref> [3] </ref>. We do not know if this is a tight asymptotic bound for crash failures. The gap between upper and lower bounds on the worst case message complexity of BA over all runs is even greater in the case of sending omission failures.
Reference: [4] <author> Coan, B. and J. Welch. </author> <title> "A Byzantine Agreement Protocol with Optimal Message Bit Complexity". </title> <booktitle> Proc. of the 27th Annual Allerton Conference on Communication, Control and Computing. </booktitle> <pages> pp. 1062-1071, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time [12, 7, 8, 16]. Other papers which address the message complexity of BA protocols include <ref> [6, 2, 4] </ref>. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures.
Reference: [5] <author> Cook, S.A., C. Dwork and R. Reischuk. </author> <title> "Upper and Lower Bounds for Parallel RAMS Without Simultaneous Writes". </title> <journal> SIAM Journal on Computing 15(1) </journal> <pages> 87-97, </pages> <month> February </month> <year> 1986. </year>
Reference-contexts: It is possible to improve on this. It is a well-known trick that, in synchronous systems, the absence of a message can be used to convey information. (For example, Cook et al. <ref> [5] </ref> make use of this trick.) We can exploit this idea as follows. Each receiver adopts the 4 convention that the lack of a message from the sender means that it should decide one of the two values.
Reference: [6] <author> Dolev, D. and R. Reischuk. </author> <title> "Bounds on Information Exchange for Byzantine Agreement". </title> <type> Research Report RJ 3587, </type> <institution> IBM San Jose Research Laboratory, </institution> <month> August </month> <year> 1982. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time [12, 7, 8, 16]. Other papers which address the message complexity of BA protocols include <ref> [6, 2, 4] </ref>. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures. <p> For the worst case message complexity over all runs, Dolev and Reischuk <ref> [6] </ref> proved a tight asymptotic bound of fi (n+t 2 ) messages if the processes are subject to general omission failures, a generalisation of sending omission failures. <p> Here, the best known lower bound is the obvious one of (n) messages; while the best upper bound is O (n + t 2 ) (cf. algorithms in <ref> [6, 18] </ref> which work under general omission failures and, a fortiori, under sending omission failures). Thus, it is still possible that a lower bound of (n + t 2 ) can be established in this case.
Reference: [7] <author> Dolev, D. and H.R. </author> <title> Strong. "Authenticated Algorithms for Byzantine Agreement". </title> <journal> SIAM Journal on Computing 12(4) </journal> <pages> 656-666, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time <ref> [12, 7, 8, 16] </ref>. Other papers which address the message complexity of BA protocols include [6, 2, 4]. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures.
Reference: [8] <author> Dwork, C. and Y. Moses. </author> <title> "Knowledge and Common Knowledge in a Byzantine Environment I: Crash Failures." </title> <booktitle> In Proc. of the Conf. on Theoretical Aspects of Reasoning About Knowledge. </booktitle> <pages> pp. 149-169, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time <ref> [12, 7, 8, 16] </ref>. Other papers which address the message complexity of BA protocols include [6, 2, 4]. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures.
Reference: [9] <author> Feldman, P. and S. Micali. </author> <title> "Byzantine Agreement in Constant Expected Time (and Trusting No One)". </title> <booktitle> Proc. of the 26th Annual IEEE Symp. on Foundations of Computer Science. </booktitle> <pages> pp. 267-276, </pages> <month> October </month> <year> 1985. </year>
Reference-contexts: In this way we are implicitly assuming that processes act deterministically. This may appear as a dubious assumption since it is known that with respect to certain complexity measures, such as worst case number of rounds over all runs, ran-domised protocols have significant advantages over deterministic ones <ref> [9, 10] </ref>. However, it can be shown that with respect to the complexity measures of interest in this paper | i.e., various types of message complexity in the failure-free runs | randomisation is of no help [15, Appendix A]. Thus, we can make this assumption with no loss of generality.
Reference: [10] <author> Feldman, P. and S. Micali. </author> <title> "An Optimal Algorithm for Synchronous Byzantine Agreement". </title> <type> Technical Report MIT/LCS/TM-425, </type> <institution> Laboratory for Computer Science, Mas-sachusetts Institute of Technology, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: In this way we are implicitly assuming that processes act deterministically. This may appear as a dubious assumption since it is known that with respect to certain complexity measures, such as worst case number of rounds over all runs, ran-domised protocols have significant advantages over deterministic ones <ref> [9, 10] </ref>. However, it can be shown that with respect to the complexity measures of interest in this paper | i.e., various types of message complexity in the failure-free runs | randomisation is of no help [15, Appendix A]. Thus, we can make this assumption with no loss of generality.
Reference: [11] <author> Fischer, M.J. </author> <title> "The Consensus Problem in Unreliable Distributed Systems". </title> <institution> Research Report RR-273, Department of Computer Science, Yale University, </institution> <month> June </month> <year> 1983. </year>
Reference-contexts: The protocol is required to guarantee these three properties only in executions in which the number of faulty processes does not exceed t. The problem was introduced, albeit in a slightly different form, by Pease et al. [17] and has subsequently been subjected to voluminous investigation. Fischer <ref> [11] </ref> provides an excellent, though by now somewhat dated, survey of models and results concerning the problem. Among the many types of process failures under which the BA problem has been studied the simplest, and possibly of greatest practical value, is the class of crash failures.
Reference: [12] <author> Fischer, M.J. and N.A. Lynch. </author> <title> "A Lower Bound for the Time to Assure Interactive Consistency". </title> <journal> Information Processing Letters 14(4) </journal> <pages> 183-186, </pages> <month> June </month> <year> 1982. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time <ref> [12, 7, 8, 16] </ref>. Other papers which address the message complexity of BA protocols include [6, 2, 4]. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures.
Reference: [13] <author> Gray, J.N. </author> <title> "The Cost of Messages". </title> <booktitle> In Proc. of the 7th ACM Symp. on Principles of Distributed Computing. </booktitle> <pages> pp. 1-7, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: In this paper we investigate the message complexity of crash failure tolerant binary BA protocols in the failure-free executions. The motivation for studying message complexity is that the number of messages used by a protocol is an important, possibly the most important, factor that determines its performance <ref> [13] </ref>. The motivation for restricting our investigation to failure-free executions is that it seems plausible that the overwhelming majority of executions in a real-life system are failure-free. If so, it is reasonable to design protocols optimised for this most frequent case.
Reference: [14] <author> Hadzilacos, V. </author> <title> Issues of Fault Tolerance in Concurrent Computations. </title> <type> Ph.D. dissertation, </type> <institution> Harvard University, </institution> <month> June </month> <year> 1984. </year> <month> 21 </month>
Reference-contexts: But then such a process has determined that the sender is faulty and that the current run is not failure-free. Thus, p can "take over" as the sender and invoke any standard BA protocol that works for crash failures (cf. <ref> [14] </ref> for such protocols). Since our stated goal in this paper is to minimise the number of messages in the failure-free runs, we don't really care how many messages are used by the protocol invoked in case (c), as that case involves only non-failure-free runs.
Reference: [15] <author> Hadzilacos, V. and J.Y. Halpern. </author> <title> "Message-Optimal Protocols for Byzantine Agree--ment". </title> <publisher> Forthcoming, </publisher> <year> 1990. </year>
Reference-contexts: However, it can be shown that with respect to the complexity measures of interest in this paper | i.e., various types of message complexity in the failure-free runs | randomisation is of no help <ref> [15, Appendix A] </ref>. Thus, we can make this assumption with no loss of generality. Since we assume that processes are deterministic, a failure-free run is completely determined by the sender's initial value. <p> Also, given the great sensitivity of performance on the number of messages, it would be useful to obtain exact, rather than asymptotic, bounds | as was the case for the problem studied in this paper. 2 As this paper was in the process of being refereed Hadzilacos and Halpern <ref> [15] </ref> answered these questions by providing tight bounds on the worst and average case failure-free message complexity of binary BA protocols for all other types of failures that are considered in the literature on the BA problem.
Reference: [16] <author> Lynch, N.A. </author> <title> "A Hundred Impossibility Proofs for Distributed Computing". </title> <booktitle> In Proc. of the 8th ACM Symp. on Principles of Distributed Computing. </booktitle> <pages> pp. 1-27, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Most previous work on lower bounds for BA has concentrated on complexity measures other than the number of messages | especially on the so-called "round complexity", a measure of parallel time <ref> [12, 7, 8, 16] </ref>. Other papers which address the message complexity of BA protocols include [6, 2, 4]. These study the (worst case) message complexity over all executions, not just the failure-free ones. Furthermore, they are concerned with more liberal models of process failures than crash failures.
Reference: [17] <author> Pease, M., R. Shostak and L. Lamport. </author> <title> "Reaching Agreement in the Presence of Faults". </title> <journal> Journal of the ACM 27(2) </journal> <pages> 228-234, </pages> <month> April </month> <year> 1980. </year>
Reference-contexts: The protocol is required to guarantee these three properties only in executions in which the number of faulty processes does not exceed t. The problem was introduced, albeit in a slightly different form, by Pease et al. <ref> [17] </ref> and has subsequently been subjected to voluminous investigation. Fischer [11] provides an excellent, though by now somewhat dated, survey of models and results concerning the problem.
Reference: [18] <author> Weber, </author> <title> S.M. Bounds on the Message Complexity of Byzantine Agreement. </title> <type> Masters' Thesis, </type> <institution> Department of Computer Science, University of Toronto, </institution> <month> October </month> <year> 1989. </year> <month> 22 </month>
Reference-contexts: Here, the best known lower bound is the obvious one of (n) messages; while the best upper bound is O (n + t 2 ) (cf. algorithms in <ref> [6, 18] </ref> which work under general omission failures and, a fortiori, under sending omission failures). Thus, it is still possible that a lower bound of (n + t 2 ) can be established in this case.
References-found: 18

