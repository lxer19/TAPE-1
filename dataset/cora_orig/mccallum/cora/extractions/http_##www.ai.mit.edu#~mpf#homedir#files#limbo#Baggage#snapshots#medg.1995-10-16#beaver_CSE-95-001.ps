URL: http://www.ai.mit.edu/~mpf/homedir/files/limbo/Baggage/snapshots/medg.1995-10-16/beaver_CSE-95-001.ps
Refering-URL: 
Root-URL: 
Title: Molecular Computing  
Author: Donald Beaver 
Address: 12/5/94 last rev. 1/31/95  
Affiliation: 1  
Abstract: We design a molecular Turing machine and determine the complexity of the problems solvable by molecular computers. In [A94], a combinatorial molecular experiment to solve the NP-complete problem of Hamiltonian Path was proposed and implemented. Using our design, we show that such molecular computers can in fact compute PSPACE, under the generous assumptions implicit in [A94]. Under stronger and somewhat more practical restrictions, which [A94] fails to satisfy, we show that molecular computers are limited to solving problems in P.
Abstract-found: 1
Intro-found: 1
Reference: [A94] <author> L. Adleman. </author> <title> "Molecular Computation of Solutions to Combinatorial Problems." </title> <booktitle> Science 266 (November 1994), </booktitle> <pages> 1021-1024. </pages>
Reference-contexts: 1 Introduction Molecular and quantum computers have recently been considered as alternatives to standard models such as Turing machines, PRAM's, or logical circuits <ref> [S94, Si94, A94, B94] </ref>. Shor has shown that quantum computers can factor large numbers and calculate discrete logarithms in polynomial time, even though no known polynomial-time algorithm is known [S94]. Adleman has proposed a molecular "computer" that solves the NP-complete Hamiltonian Path problem through recombination of appropriately-constructed DNA fragments [A94]. <p> Shor has shown that quantum computers can factor large numbers and calculate discrete logarithms in polynomial time, even though no known polynomial-time algorithm is known [S94]. Adleman has proposed a molecular "computer" that solves the NP-complete Hamiltonian Path problem through recombination of appropriately-constructed DNA fragments <ref> [A94] </ref>. Such a molecular computing system is not universal, in the sense that it is a one-time experiment to derive a particular combinatorial solution to a particular sort of problem. <p> Concurrently with the publication of Adleman's results, Gifford writes, "At present, there is no known way of creating a synthetic universal system based on macromolecules." [Gi94] We design a molecular Turing machine based on interactions among DNA molecules. Unlike the non-universal methods described in <ref> [A94, B94] </ref>, our methods specify a universal computing device capable of maintaining a state and memory and performing an indefinite number of transitions. The computing device consists of a single DNA molecule. Moreover, the chemical mechanisms for state transitions permit parallel, heterogeneous, synchronized, computation. <p> Of particular interest to computational complexity theory is the question of whether such devices provide additional computing power, as seems to be the case for quantum computers. We give two precise answers. Under the generous model used in <ref> [A94] </ref> to design molecular interactions that solve NP-complete problems, the answer is far more optimistic than suggested by the Hamiltonian Path problem: polynomial-step molecular computers compute PSPACE. On the other hand, certain physical limitations suggest that the NP-complete result of [A94] is not realistic. <p> Under the generous model used in <ref> [A94] </ref> to design molecular interactions that solve NP-complete problems, the answer is far more optimistic than suggested by the Hamiltonian Path problem: polynomial-step molecular computers compute PSPACE. On the other hand, certain physical limitations suggest that the NP-complete result of [A94] is not realistic. Under suitable additional restrictions, we show that polynomial-step molecular computers including those used in [A94] to "solve" Hamiltonian Path - compute P. 2 Recombinant DNA: A Primer Deoxyribonucleic acid (DNA) consists of four bases, denoted A (adenine), C (cytosine), G (guanine) and T (thymine). <p> On the other hand, certain physical limitations suggest that the NP-complete result of <ref> [A94] </ref> is not realistic. Under suitable additional restrictions, we show that polynomial-step molecular computers including those used in [A94] to "solve" Hamiltonian Path - compute P. 2 Recombinant DNA: A Primer Deoxyribonucleic acid (DNA) consists of four bases, denoted A (adenine), C (cytosine), G (guanine) and T (thymine). The chemical structure of these molecules causes a strong affinity between A and T, and likewise between C and G. <p> In the next section, we turn this powerful technique for site-specific mutagenesis into a means to implement universal computation. 4 0 3 A Molecular Computer The mechanisms for solving Hamiltonian Path in <ref> [A94, B94] </ref> are essentially searches performed in a combinatorially-explosive search space. While they apparently permit the solution of NP-complete problems, they are incapable of indefinitely continued computation and do not represent universal computers. <p> Thus, it is not necessary to treat each molecule independently, according to the unique configuration it encodes. The massive parallelism achieved by this theoretical procedure surpasses that of <ref> [A94] </ref>. For example, any nondeterministic polynomial-time Turing machine M can be simulated by creating an initial group of molecules, each of whose tape contains a (random) prefix encoding a different sequence of nondeterministic choices, along with a given input, x. 7 Phase II: Transition. 5. <p> If such molecules are detected, then x 2 L (M ); otherwise, x 62 L (M ). In fact, such unconstrained parallelism allows us to perform any PSPACE computation, going far beyond NP (see x4). If stronger restrictions on the parallelism are made, however, both the Hamiltonian-Path solution of <ref> [A94, B94] </ref> and the PSPACE solutions in in x4 are ruled out, as discussed in x5. 4 Computing PSPACE Let M be a deterministic Turing machine that, on input x = x 1 x 2 : : : x n , uses a polynomial number S (n) of tape squares. <p> of configurations of the form C : 0 s ; 1.2. convert these to pairs of the form C : C; 1.3. convert these to pairs of the form C : ffiC; 1.4. add restriction enzyme sites (described below). 4.1.1 Configurations C : 0 s We employ the methods of <ref> [A94] </ref> to produce various combinations of fragments representing symbols or states. <p> If such an assumption is indeed made, then as shown in x4, there is no need to stop at NP; we can in fact solve PSPACE problems. If such an assumption is not made, then the results of <ref> [A94, B94] </ref> and x4 fail to scale and are ultimately inapplicable. It is important to note, however, that our description of a molecular-scale Turing machine in x3 is independent of such assumptions. <p> If exponential parallelism is permitted, as implicitly implied in <ref> [A94] </ref>, then our construction allows not just NP but indeed PSPACE computations to be executed using a polynomial number of steps. It is open to determine whether this bound is tight. <p> It is open to determine whether this bound is tight. If exponential parallelism is rejected, then the solutions of Hamiltonian Path in <ref> [A94, B94] </ref> must be rejected along with the PSPACE computations. In fact, all polymomial-step computations are then solvable in polynomial time on a Turing machine. Our construction is immune to such assumptions.
Reference: [B94] <author> D. Beaver. </author> <title> "Factoring: The DNA Solution." </title> <note> To appear, Journal of Computational Biology. Preliminary abstract in Advances in Cryptology - Asiacrypt '94 Proceedings, Springer-Verlag LNCS, </note> <year> 1994. </year>
Reference-contexts: 1 Introduction Molecular and quantum computers have recently been considered as alternatives to standard models such as Turing machines, PRAM's, or logical circuits <ref> [S94, Si94, A94, B94] </ref>. Shor has shown that quantum computers can factor large numbers and calculate discrete logarithms in polynomial time, even though no known polynomial-time algorithm is known [S94]. Adleman has proposed a molecular "computer" that solves the NP-complete Hamiltonian Path problem through recombination of appropriately-constructed DNA fragments [A94]. <p> Concurrently with the publication of Adleman's results, Gifford writes, "At present, there is no known way of creating a synthetic universal system based on macromolecules." [Gi94] We design a molecular Turing machine based on interactions among DNA molecules. Unlike the non-universal methods described in <ref> [A94, B94] </ref>, our methods specify a universal computing device capable of maintaining a state and memory and performing an indefinite number of transitions. The computing device consists of a single DNA molecule. Moreover, the chemical mechanisms for state transitions permit parallel, heterogeneous, synchronized, computation. <p> Often, substitutions spanning a large and undesired X can be ignored by separating out overly shortened molecules by length. A special case of this technique forms the basis for eliminating non-Hamiltonian paths in the molecular methods for solving Hamiltonian Path proposed in <ref> [B94] </ref>. After multiple molecules representing a candidate path are formed, those that have visited a node v i twice are eliminated by inserting a 20-base filler in each occurrence of v i . <p> In the next section, we turn this powerful technique for site-specific mutagenesis into a means to implement universal computation. 4 0 3 A Molecular Computer The mechanisms for solving Hamiltonian Path in <ref> [A94, B94] </ref> are essentially searches performed in a combinatorially-explosive search space. While they apparently permit the solution of NP-complete problems, they are incapable of indefinitely continued computation and do not represent universal computers. <p> If such molecules are detected, then x 2 L (M ); otherwise, x 62 L (M ). In fact, such unconstrained parallelism allows us to perform any PSPACE computation, going far beyond NP (see x4). If stronger restrictions on the parallelism are made, however, both the Hamiltonian-Path solution of <ref> [A94, B94] </ref> and the PSPACE solutions in in x4 are ruled out, as discussed in x5. 4 Computing PSPACE Let M be a deterministic Turing machine that, on input x = x 1 x 2 : : : x n , uses a polynomial number S (n) of tape squares. <p> But all techniques, 11 wherever they lie on the spectrum from implementable to pure Gedanken, are ultimately chained by the same practical restriction: massive parallelism is not exponential parallelism. As noted in <ref> [B94] </ref>, the solution of NP-complete problems through exponential search is misleading, since each candidate is represented by a molecule, requiring an exponential number of molecules. If the pairing between nucleotides is to occur, information must be able to traverse the region containing the experiment in reasonable polynomial- time. <p> If such an assumption is indeed made, then as shown in x4, there is no need to stop at NP; we can in fact solve PSPACE problems. If such an assumption is not made, then the results of <ref> [A94, B94] </ref> and x4 fail to scale and are ultimately inapplicable. It is important to note, however, that our description of a molecular-scale Turing machine in x3 is independent of such assumptions. <p> It is open to determine whether this bound is tight. If exponential parallelism is rejected, then the solutions of Hamiltonian Path in <ref> [A94, B94] </ref> must be rejected along with the PSPACE computations. In fact, all polymomial-step computations are then solvable in polynomial time on a Turing machine. Our construction is immune to such assumptions.
Reference: [BJLTY94] <author> A. Blum, T. Jiang, M. Li, J. Tromp, M. Yannakakis. </author> <title> "Linear Approximation of Shortest Superstrings." </title> <journal> JACM 41:4 (1994), </journal> <pages> 634-647. </pages>
Reference: [CLR90] <author> T. Cormen, C. Leiserson, R. Rivest. </author> <title> Introduction to Algorithms. </title> <address> New York: McGraw Hill, </address> <year> 1990. </year>
Reference: [Gi94] <author> D. Gifford. </author> <title> "On the Path to Computing with DNA." </title> <booktitle> Science 266 (November 1994), </booktitle> <pages> 993-994. </pages>
Reference-contexts: Concurrently with the publication of Adleman's results, Gifford writes, "At present, there is no known way of creating a synthetic universal system based on macromolecules." <ref> [Gi94] </ref> We design a molecular Turing machine based on interactions among DNA molecules. Unlike the non-universal methods described in [A94, B94], our methods specify a universal computing device capable of maintaining a state and memory and performing an indefinite number of transitions. <p> remains the case that one or several machines can be operated, even though it is impractical to run exponentially-many. 6 Conclusions We have shown how to construct a molecular-scale Turing machine, thereby achieving universal computation on a molecular scale as opposed to special-purpose, combinatorial problem solving for the first time <ref> [Gi94] </ref>. If exponential parallelism is permitted, as implicitly implied in [A94], then our construction allows not just NP but indeed PSPACE computations to be executed using a polynomial number of steps. It is open to determine whether this bound is tight.
Reference: [LP81] <author> H. Lewis, C. Papadimitriou. </author> <title> Elements of the Theory of Computation. </title> <address> New Jersey: </address> <publisher> Prentice-Hall, </publisher> <year> 1981. </year>
Reference-contexts: machine, namely a tuple (Q; ; ffi; s) where Q is a state set containing start state s and halt state h, is a finite alphabet (without loss of generality, f0; 1; #g), and ffi : Q fi ! Q fi fi fL; Rg is a transition function. (See, e.g., <ref> [LP81] </ref>.) We encode states and symbols using an alphabet of nucleotides fA,C,G,Tg. Let S be 5 an integer (the length of the Turing machine's tape), and let Enc : (Q [ ) fi f1::Sg ! fA; C; G; Tg: Let Enc () be the Watson-Crick complement of Enc ().
Reference: [S94] <author> P. Shor. </author> <title> "Algorithms for Quantum Computation: Discrete Logarithms and Factoring." </title> <booktitle> Proceedings of the 35 th FOCS, IEEE, </booktitle> <year> 1994, </year> <pages> 124-134. </pages>
Reference-contexts: 1 Introduction Molecular and quantum computers have recently been considered as alternatives to standard models such as Turing machines, PRAM's, or logical circuits <ref> [S94, Si94, A94, B94] </ref>. Shor has shown that quantum computers can factor large numbers and calculate discrete logarithms in polynomial time, even though no known polynomial-time algorithm is known [S94]. Adleman has proposed a molecular "computer" that solves the NP-complete Hamiltonian Path problem through recombination of appropriately-constructed DNA fragments [A94]. <p> Shor has shown that quantum computers can factor large numbers and calculate discrete logarithms in polynomial time, even though no known polynomial-time algorithm is known <ref> [S94] </ref>. Adleman has proposed a molecular "computer" that solves the NP-complete Hamiltonian Path problem through recombination of appropriately-constructed DNA fragments [A94]. Such a molecular computing system is not universal, in the sense that it is a one-time experiment to derive a particular combinatorial solution to a particular sort of problem.
Reference: [Si94] <editor> D. Simon. </editor> <booktitle> "On the Power of Quantum Computation." Proceedings of the 35 th FOCS, IEEE, </booktitle> <year> 1994, </year> ??? 
Reference-contexts: 1 Introduction Molecular and quantum computers have recently been considered as alternatives to standard models such as Turing machines, PRAM's, or logical circuits <ref> [S94, Si94, A94, B94] </ref>. Shor has shown that quantum computers can factor large numbers and calculate discrete logarithms in polynomial time, even though no known polynomial-time algorithm is known [S94]. Adleman has proposed a molecular "computer" that solves the NP-complete Hamiltonian Path problem through recombination of appropriately-constructed DNA fragments [A94].
Reference: [W77] <author> J. Watson. </author> <title> Molecular Biology of the Gene. </title> <address> Reading, Massachusetts: </address> <publisher> W. A. Benjamin, Inc., </publisher> <year> 1977. </year> <month> 13 </month>
References-found: 9

