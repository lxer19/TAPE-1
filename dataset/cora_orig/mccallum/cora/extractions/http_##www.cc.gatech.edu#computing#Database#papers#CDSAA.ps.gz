URL: http://www.cc.gatech.edu/computing/Database/papers/CDSAA.ps.gz
Refering-URL: http://www.cs.gatech.edu/people/home/sameer/
Root-URL: 
Email: fsham,sameer,edwardog@cc.gatech.edu  
Title: Rule Based Database Integration in HIPED Heterogeneous Intelligent Processing in Engineering Design  
Author: Shamkant B. Navathe Sameer Mahajan Edward Omiecinski 
Address: Atlanta, GA 30332-0280, USA.  
Affiliation: College of Computing, Georgia Institute of Technology,  
Abstract: In this paper 1 we describe one aspect of our research in the project called HIPED, which addressed the problem of performing design of engineering devices by accessing heterogeneous databases. The front end of the HIPED system consisted of interactive KRI-TIK, a multimodal reasoning system that combined case based and model based reasoning to solve a design problem. This paper focuses on the backend processing where five types of queries received from the front end are evaluated by mapping them appropriately using the "facts" about the schemas of the underlying databases and "rules" that establish the correspondance among the data in these databases in terms of relationships such as equivalence, overlap and set containment. The uniqueness of our approach stems from the fact that the mapping process is very forgiving in that the query received from the front end is evaluated with respect to a large number of possibilities. These possibilities are encoded in the form of rules that consider various ways in which the tokens in the given query may match relation names, attrribute names, or values in the underlying tables. The approach has been implemented using CORAL deductive database system as the rule processing engine. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Batini, S. Ceri, and S.B. Navathe, </author> <title> Conceptual Database Design: An Entity Relationship Approach, </title> <publisher> Benjamin Cummings, </publisher> <month> August </month> <year> 1991, </year> <pages> 470 pp. </pages>
Reference-contexts: Among widely implemented data models we have the hierarchical, network, relational and object oriented data models. A large body of work exists that deals with the mapping of these models among one another (e.g. see the mapping of models using the entity relationship model as an intermediate model in <ref> [1] </ref> [3]. While vendors are also providing middleware solutions to draw data from these legacy systems, the semantic problems of resolving, naming, scale, structure etc. that were pointed out several years ago [5] [6] still remain.
Reference: [2] <author> C. Batini, M. Lenzerini and S.B. Navathe, </author> <title> A Comparative Analysis of Methodologies for Database Schema Integration, </title> <journal> ACM Computing Surveys, </journal> <volume> 18, 4, </volume> <month> December </month> <year> 1986, </year> <pages> pp. 323-364. </pages>
Reference-contexts: Because of these two kinds of rules involved in the integration approach we have termed our approach a rule based approach to database integration. The present approach is an improvement over previous approaches where we handled integration by using the correspondance information to derive the process <ref> [2] </ref> [6] [7] [8]. 2 Application Context In this section we will provide the overall architecture of the HIPED system and point out the need for heterogeneous database processing which will be de 1 scribed and illustrated in the next two sections. 2.1 Overall Architecture of HIPED Our main objective in
Reference: [3] <author> R. Elmasri, S Navathe, </author> <title> Fundamentals of Database Systems, </title> <booktitle> Addision Wesley Computer Science, 2nd Edition, </booktitle> <year> 1994. </year>
Reference-contexts: A large body of work exists that deals with the mapping of these models among one another (e.g. see the mapping of models using the entity relationship model as an intermediate model in [1] <ref> [3] </ref>. While vendors are also providing middleware solutions to draw data from these legacy systems, the semantic problems of resolving, naming, scale, structure etc. that were pointed out several years ago [5] [6] still remain.
Reference: [4] <author> Ashok Goel, Andres Gomez, Nathalie Grue, William Murdock, Margaret Recker, and T. Govindaraj. </author> <title> Design Explanations in Interactive Design Environments. </title> <booktitle> In Proc. Fourth International Conference on AI in Design, </booktitle> <address> Palo Alto, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: The user would get the result, obtained after running the query against the table through the concerned "Output Data" channel (s). 2.2 Interactive KRITIK Front End We developed the HIPED architecture by assuming a frontend system called Interactive Kritik <ref> [4] </ref>. This system is a multimode reasoning system which works like a design assistant for the design of devices such as acid coolers, electrical devices. In its current form the system uses "hard-wired" knowledge in the form of LISP data structures.
Reference: [5] <author> J. Larson, S. B. Navathe, and R. </author> <title> Elmasri A Theory of Attribute Equivalence in Databases with Application to Schema Integration, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 15, No. 4, </volume> <month> April </month> <year> 1989. </year>
Reference-contexts: While vendors are also providing middleware solutions to draw data from these legacy systems, the semantic problems of resolving, naming, scale, structure etc. that were pointed out several years ago <ref> [5] </ref> [6] still remain. <p> The extended solution can exhaustively take care of all such cases. In essence, the overall rule based approach appears promising in the context of Navathe's long standing 7 investigation of the database integration problem <ref> [5] </ref> [6] [7] [8] [9]. Acknowledgement We would like to thank Ashok Goel and William Murdock for their work on Interactive KRITIK. The work crystallized the HIPED front end to our system. We are also grateful to Jeff Donahoo, Ashok Savasere and Byong-soo Jeong for initializing the implementation work.
Reference: [6] <author> S.B. Navathe, R. Elmasri and J.A. Larson, </author> <title> Integrating User Views in Database Design, </title> <journal> IEEE Computer, </journal> <volume> Vol. 19, No. 1, </volume> <month> January </month> <year> 1986, </year> <pages> pp. 50-62. </pages>
Reference-contexts: While vendors are also providing middleware solutions to draw data from these legacy systems, the semantic problems of resolving, naming, scale, structure etc. that were pointed out several years ago [5] <ref> [6] </ref> still remain. <p> Because of these two kinds of rules involved in the integration approach we have termed our approach a rule based approach to database integration. The present approach is an improvement over previous approaches where we handled integration by using the correspondance information to derive the process [2] <ref> [6] </ref> [7] [8]. 2 Application Context In this section we will provide the overall architecture of the HIPED system and point out the need for heterogeneous database processing which will be de 1 scribed and illustrated in the next two sections. 2.1 Overall Architecture of HIPED Our main objective in the <p> The extended solution can exhaustively take care of all such cases. In essence, the overall rule based approach appears promising in the context of Navathe's long standing 7 investigation of the database integration problem [5] <ref> [6] </ref> [7] [8] [9]. Acknowledgement We would like to thank Ashok Goel and William Murdock for their work on Interactive KRITIK. The work crystallized the HIPED front end to our system. We are also grateful to Jeff Donahoo, Ashok Savasere and Byong-soo Jeong for initializing the implementation work.
Reference: [7] <author> S. B. Navathe and A. Savasere, </author> <title> "A Practical Schema Integration Facility using an Object Oriented Approach," Multidatabase Systems (A. </title> <editor> El-magarmid and O.Bukhres, Eds.), </editor> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference-contexts: Because of these two kinds of rules involved in the integration approach we have termed our approach a rule based approach to database integration. The present approach is an improvement over previous approaches where we handled integration by using the correspondance information to derive the process [2] [6] <ref> [7] </ref> [8]. 2 Application Context In this section we will provide the overall architecture of the HIPED system and point out the need for heterogeneous database processing which will be de 1 scribed and illustrated in the next two sections. 2.1 Overall Architecture of HIPED Our main objective in the HIPED <p> The extended solution can exhaustively take care of all such cases. In essence, the overall rule based approach appears promising in the context of Navathe's long standing 7 investigation of the database integration problem [5] [6] <ref> [7] </ref> [8] [9]. Acknowledgement We would like to thank Ashok Goel and William Murdock for their work on Interactive KRITIK. The work crystallized the HIPED front end to our system. We are also grateful to Jeff Donahoo, Ashok Savasere and Byong-soo Jeong for initializing the implementation work.
Reference: [8] <author> S. Prabhakar, J. Srivastava, S.B. Navathe, et al., </author> <title> Federated Autonomous Databases: Project Overview, </title> <booktitle> Proceedings of the International Conference on Interoperability in Multidatabase Systems (IMS'93), </booktitle> <address> Vienna, Austria, </address> <month> April 19-20, </month> <year> 1993. </year>
Reference-contexts: Because of these two kinds of rules involved in the integration approach we have termed our approach a rule based approach to database integration. The present approach is an improvement over previous approaches where we handled integration by using the correspondance information to derive the process [2] [6] [7] <ref> [8] </ref>. 2 Application Context In this section we will provide the overall architecture of the HIPED system and point out the need for heterogeneous database processing which will be de 1 scribed and illustrated in the next two sections. 2.1 Overall Architecture of HIPED Our main objective in the HIPED project <p> The extended solution can exhaustively take care of all such cases. In essence, the overall rule based approach appears promising in the context of Navathe's long standing 7 investigation of the database integration problem [5] [6] [7] <ref> [8] </ref> [9]. Acknowledgement We would like to thank Ashok Goel and William Murdock for their work on Interactive KRITIK. The work crystallized the HIPED front end to our system. We are also grateful to Jeff Donahoo, Ashok Savasere and Byong-soo Jeong for initializing the implementation work.
Reference: [9] <author> A. Sheth, S.K. Gala, </author> <title> S.B. Navathe, On Automatic Reasoning for Schema Integration, </title> <journal> Int. Journal of Intelligent Co-operative Information Systems, </journal> <volume> Vol. 2, No.1, </volume> <month> March </month> <year> 1993. </year>
Reference-contexts: The extended solution can exhaustively take care of all such cases. In essence, the overall rule based approach appears promising in the context of Navathe's long standing 7 investigation of the database integration problem [5] [6] [7] [8] <ref> [9] </ref>. Acknowledgement We would like to thank Ashok Goel and William Murdock for their work on Interactive KRITIK. The work crystallized the HIPED front end to our system. We are also grateful to Jeff Donahoo, Ashok Savasere and Byong-soo Jeong for initializing the implementation work.
Reference: [10] <author> R. Ramakrishnan, D. Srivastava and S. Sudar-shan, </author> <title> CORAL: Control, Relations and Logic, </title> <booktitle> Proceedings of the International Conference on Very Large Databases, </booktitle> <year> 1992. </year>
Reference-contexts: A simple deduction rule can be that two tables are equivalent if all their attributes are equivalent. 4 Use of CORAL for rule representa tion and query processing The metadata is stored in the form of CORAL <ref> [10] </ref> [11] facts and rules. CORAL is a deductive database system which stores data as facts and rules, and allows for that data to be queried. By using CORAL the mediator can decide which database (s) and table (s) are useful in answering any given query.
Reference: [11] <author> R. Ramakrishnan, D. Srivastava, S. Sudarshan and P. Seshadri, </author> <title> Implementation of the CORAL deductive database system, </title> <booktitle> Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <year> 1993. </year> <month> 8 </month>
Reference-contexts: A simple deduction rule can be that two tables are equivalent if all their attributes are equivalent. 4 Use of CORAL for rule representa tion and query processing The metadata is stored in the form of CORAL [10] <ref> [11] </ref> facts and rules. CORAL is a deductive database system which stores data as facts and rules, and allows for that data to be queried. By using CORAL the mediator can decide which database (s) and table (s) are useful in answering any given query.
References-found: 11

