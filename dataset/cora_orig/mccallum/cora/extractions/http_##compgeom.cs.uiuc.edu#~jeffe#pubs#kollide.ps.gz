URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/kollide.ps.gz
Refering-URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/kollide.html
Root-URL: http://www.cs.uiuc.edu
Title: Separation-Sensitive Collision Detection for Convex Objects  
Author: Jeff Erickson Leonidas J. Guibas Jorge Stolfi Li Zhang 
Abstract: We develop a class of new kinetic data structures for collision detection between moving convex polytopes; the performance of these structures is sensitive to the separation of the polytopes during their motion. For two convex polygons in the plane, let D be the maximum diameter of the polygons, and let s be the minimum distance between them during their motion. Our separation certificate changes O(log(D=s)) times when the relative motion of the two polygons is a translation along a straight line or convex curve, O( D=s) for translation along an algebraic trajectory, and O(D=s) for algebraic rigid motion (translation and rotation). Each certificate update is performed in O(log(D=s)) time. Variants of these data structures are also shown that exhibit hysteresis|after a separation certificate fails, the new certificate cannot fail again until the objects have moved by some constant fraction of their current separation. We can then bound the number of events by the combinatorial size of a certain cover of the motion path by balls.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Barequet, B. Chazelle, L. J. Guibas, J. S. B. Mitchell, and A. Tal. BOXTREE: </author> <title> A hierarchical representation for surfaces in 3D. Comput. Graph. </title> <booktitle> Forum 15(3):C387-C484, 1996. Proc. </booktitle> <address> Eurographics'96. </address>
Reference-contexts: Klosowski et al. construct a hierarchy of bounding volumes for any object by computing the object's k-DOP, decomposing the object into a constant number of pieces, and recursively constructing a hierarchy for each piece, using the same value of k at all levels. (See <ref> [1, 11, 24] </ref> for similar bounding volume hierarchies.) In contrast, the compass hierarchy consists of a nested sequence of k-DOPs with k = 4; 8; 16; : : : , all for the same object. 3.2 The Dudley Hierarchy Our second boomerang hierarchy is based on a result of Dudley [8]
Reference: [2] <author> J. Basch, L. J. Guibas, and J. Hershberger. </author> <title> Data structures for mobile data. </title> <booktitle> Proc. 8th ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pp. 747-756, </pages> <year> 1997. </year>
Reference-contexts: In order to properly quantify the separation-sensitivity of our methods, we view the collision detection problem in the context of kinetic data structures (or KDSs for short), introduced in <ref> [2, 12] </ref>. In the kinetic setting we assume that the instantaneous motion laws for our polytopes are known, though they can be changed at will by appropriately notifying the KDS. Our sampling of time is not fixed, but is determined by the failure of certain conditions, called certificates. <p> Our results do not require any other combinatorial properties of algebraic motion|for example, that an algebraic path can be decomposed into a constant number of convex sub-paths, as in the companion paper [3]| and therefore apply to a wider range of pseudo-algebraic motions <ref> [2, 12] </ref>. 3 Polygon Approximation Hierarchies Our collision detection algorithms are based on outer approximation hierarchies for the convex polygons involved, or for their Minkowski sum.
Reference: [3] <author> J. Basch, J. Erickson, L. J. Guibas, J. Hershberger, and L. Zhang. </author> <title> Kinetic collision detection for two simple polygons. </title> <booktitle> These proceedings. </booktitle> <address> hhttp://www:uiuc:edu/ph/www/ jeffe/pubs/cdsimple:htmli. </address>
Reference-contexts: We expect that our kinetic structures will lead to improved practical algorithms for convex shapes, and we have already started an implementation of our algorithms. In a companion paper <ref> [3] </ref>, we discuss a different set of kinetic collision techniques applicable to non-convex shapes. 3 2 Models of motion In our model, each object is a closed rigid convex polygon, whose motion is described by a moving orthogonal reference frame: a point o (t) and two orthogonal unit vectors x (t); <p> We will use these last two facts, and only these two facts, throughout our analyses. Our results do not require any other combinatorial properties of algebraic motion|for example, that an algebraic path can be decomposed into a constant number of convex sub-paths, as in the companion paper <ref> [3] </ref>| and therefore apply to a wider range of pseudo-algebraic motions [2, 12]. 3 Polygon Approximation Hierarchies Our collision detection algorithms are based on outer approximation hierarchies for the convex polygons involved, or for their Minkowski sum.
Reference: [4] <author> S. Cameron. </author> <title> Enhancing GJK: Computing minimum and penetration distance between convex polyhedra. </title> <booktitle> Proc. Internat. Conf. Robotics and Automation, </booktitle> <pages> pp. 3112-3117, </pages> <year> 1997. </year>
Reference-contexts: Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny [16, 17], Mirtich [18, 19, 20], and Gilbert et al. [10] (see also <ref> [4] </ref>), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes).
Reference: [5] <author> K. Chung and W. Weng. </author> <title> Quick collision detection of poly-topes in virtual environments. </title> <booktitle> Proc. 3rd ACM Sympos. Virtual Reality Software and Technology, </booktitle> <pages> pp. 125-132. </pages> <year> 1996. </year>
Reference-contexts: The narrow phase is more specialized, according to the types of objects being considered. The simplest objects to consider are convex polytopes (polygons in the plane, or polyhedra in 3-space), and this case has been extensively considered in the literature <ref> [17, 18, 20, 10, 5] </ref>. More complex objects are then broken up into convex pieces, which are tested pairwise.
Reference: [6] <author> D. Dobkin, J. Hershberger, D. Kirkpatrick, and S. Suri. </author> <title> Implicitly searching convolutions and computing depth of collision. </title> <booktitle> Proc. 1st Annu. SIGAL Internat. Sympos. Algorithms, </booktitle> <pages> pp. 165-180. </pages> <publisher> Lecture Notes Comput. Sci. 450, Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Algorithmically, the convex polytope intersection problem is a special case of linear programming; in two and three dimensions even more efficient techniques have been developed in computational geometry, that can be applied after a suitable preprocessing of the two poly-topes <ref> [6, 7] </ref>. The methods, however, that have proven to work best in practice exploit the temporal coherence of the motion to avoid doing an ab initio intersection test at each time step. Not surprisingly, the collision detection problem is closely related to the distance computation problem. <p> In this section, we describe several new kinetic data structures that maintain a separation certificate between two moving convex polygons, where the cost and number of events depends on the distance between the polygons. Our data structures are loosely based on the algorithm of Dobkin et al. <ref> [6] </ref> for detecting intersections between preprocessed convex polygons or polyhedra. Let us first establish some notation. P and Q are convex n-gons with diameter at most D.
Reference: [7] <author> D. P. Dobkin and D. G. Kirkpatrick. </author> <title> Fast detection of polyhedral intersection. </title> <journal> Theoret. Comput. Sci. </journal> <volume> 27 </volume> <pages> 241-253, </pages> <year> 1983. </year>
Reference-contexts: Algorithmically, the convex polytope intersection problem is a special case of linear programming; in two and three dimensions even more efficient techniques have been developed in computational geometry, that can be applied after a suitable preprocessing of the two poly-topes <ref> [6, 7] </ref>. The methods, however, that have proven to work best in practice exploit the temporal coherence of the motion to avoid doing an ab initio intersection test at each time step. Not surprisingly, the collision detection problem is closely related to the distance computation problem. <p> All these hierarchies tile the space exterior to the polygon so as to simplify the combinatorial structure of the polygon as one goes away from the polygon. A well-known example of such a hierarchy in computational geometry is the Dobkin-Kirkpatrick hierarchy <ref> [7] </ref>. This hierarchy is not by itself adequate for our purposes, however, as it is not sensitive to the distance away from the polygon; any approximation in the hierarchy can have vertices arbitrarily far from the original polygon.
Reference: [8] <author> R. M. Dudley. </author> <title> Metric entropy of some classes of sets with differentiable boundaries. </title> <journal> J. Approx. Theory 10 </journal> <pages> 227-236, </pages> <year> 1974. </year>
Reference-contexts: [1, 11, 24] for similar bounding volume hierarchies.) In contrast, the compass hierarchy consists of a nested sequence of k-DOPs with k = 4; 8; 16; : : : , all for the same object. 3.2 The Dudley Hierarchy Our second boomerang hierarchy is based on a result of Dudley <ref> [8] </ref> on approximating convex bodies in arbitrary dimensions by polytopes with few facets; hence, we call it the Dudley hierarchy. Let S be a set of n regularly spaced points on a circle of radius 2D, centered inside P . <p> The resulting Dudley hierarchy has depth at most dlog 2 (2n)e. Lemma 3.4. (a) A level-i boomerang in the Dudley hierarchy of P has height O (D=4 i ) <ref> [8] </ref>. 5 (b) The Dudley hierarchy of P contains O p boomerangs with height at least s. (c) Any convex curve at distance s from P intersects O (log (D=s)) triangles in the Dudley hierarchy of P . (d) If two polygons P and Q are distance s apart, their Dudley <p> This will require a kinetic structure that implements the broad phase of collision detection and determines which pairs of objects need to be passed on to the narrow phase. Acknowledgments: We wish to thank Julien Basch for fruitful discussions, and Pankaj Agarwal for making us aware of Dudley's result <ref> [8] </ref>.
Reference: [9] <author> H. Fuchs, Z. M. Kedem, and B. Naylor. </author> <title> On visible surface generation by a priori tree structures. </title> <journal> Comput. Graph. </journal> <volume> 14(3) </volume> <pages> 124-133, </pages> <year> 1980. </year> <note> Proc. SIGGRAPH '80. </note>
Reference-contexts: This is almost identical to the construction of a binary space partition tree <ref> [9] </ref>.) For a point x outside P , the triangle in this tiling that contains x provides us with useful information about the position of x with respect to P : the base of the triangle is a side of P separating x from P , while the height of the
Reference: [10] <author> E. G. Gilbert, D. W. Johnson, and S. S. Keerthi. </author> <title> A fast procedure for computing the distance between complex objects. </title> <journal> Internat. J. Robot. Autom. </journal> <volume> 4(2) </volume> <pages> 193-203, </pages> <year> 1988. </year>
Reference-contexts: The narrow phase is more specialized, according to the types of objects being considered. The simplest objects to consider are convex polytopes (polygons in the plane, or polyhedra in 3-space), and this case has been extensively considered in the literature <ref> [17, 18, 20, 10, 5] </ref>. More complex objects are then broken up into convex pieces, which are tested pairwise. <p> Not surprisingly, the collision detection problem is closely related to the distance computation problem. Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny [16, 17], Mirtich [18, 19, 20], and Gilbert et al. <ref> [10] </ref> (see also [4]), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes). <p> convex curve at distance s from P Q inter sects O (log (D=s)) and O p triangles in the mixed compass hierarchy and mixed Dudley hierarchy of P Q, respectively. 5 Separation-Sensitive Data Structures Several authors have proposed algorithms to maintain the closest pair of features between two convex polygons <ref> [10, 17, 18] </ref>; these algorithms can easily be transformed into a kinetic data structure with constant update time. There are at least two alternative approaches that lead to the same performance.
Reference: [11] <author> S. Gottschalk, M. C. Lin, and D. Manocha. OBB-tree: </author> <title> A hierarchical structure for rapid interference detection. </title> <booktitle> Proc. SIGGRAPH '96, </booktitle> <pages> pp. 171-180, </pages> <year> 1996. </year>
Reference-contexts: Klosowski et al. construct a hierarchy of bounding volumes for any object by computing the object's k-DOP, decomposing the object into a constant number of pieces, and recursively constructing a hierarchy for each piece, using the same value of k at all levels. (See <ref> [1, 11, 24] </ref> for similar bounding volume hierarchies.) In contrast, the compass hierarchy consists of a nested sequence of k-DOPs with k = 4; 8; 16; : : : , all for the same object. 3.2 The Dudley Hierarchy Our second boomerang hierarchy is based on a result of Dudley [8]
Reference: [12] <author> L. J. Guibas. </author> <title> Kinetic data structures: A state of the art report. </title> <booktitle> To appear in Proc. 3rd Workshop on Algorithmic Foundations of Robotics, </booktitle> <year> 1998. </year>
Reference-contexts: In order to properly quantify the separation-sensitivity of our methods, we view the collision detection problem in the context of kinetic data structures (or KDSs for short), introduced in <ref> [2, 12] </ref>. In the kinetic setting we assume that the instantaneous motion laws for our polytopes are known, though they can be changed at will by appropriately notifying the KDS. Our sampling of time is not fixed, but is determined by the failure of certain conditions, called certificates. <p> Our results do not require any other combinatorial properties of algebraic motion|for example, that an algebraic path can be decomposed into a constant number of convex sub-paths, as in the companion paper [3]| and therefore apply to a wider range of pseudo-algebraic motions <ref> [2, 12] </ref>. 3 Polygon Approximation Hierarchies Our collision detection algorithms are based on outer approximation hierarchies for the convex polygons involved, or for their Minkowski sum.
Reference: [13] <author> J. Hershberger and S. Suri. </author> <title> A pedestrian approach to ray shooting: Shoot a ray, take a walk. </title> <journal> J. </journal> <volume> Algorithms 18 </volume> <pages> 403-431, </pages> <year> 1995. </year>
Reference-contexts: The space between P and P 0 comprises up to four non-convex polygons, each consisting of a concave chain and two additional edges. Following Hershberger and Suri <ref> [13] </ref>, we call these polygons boomerangs. The last coarsening step, if undone, corresponds to `cutting off a corner' of P 0 through the reintroduction of another (possibly degenerate) edge of P . This step splits one of the top-level boomerangs into a triangle and two smaller boomerangs.
Reference: [14] <author> P. M. Hubbard. </author> <title> Collision detection for interactive graphics applications. </title> <journal> IEEE Trans. Visualization and Computer Graphics 1(3) </journal> <pages> 218-230, </pages> <year> 1995. </year>
Reference-contexts: Often the problem is broken up into two parts, the so-called broad phase, in which we identify the pairs of objects we need to consider for possible collision, and the narrow phase in which we track the occurrence of collisions between a specific pair of objects <ref> [14] </ref>. (In fl Center for Geometric Computing, Department of Computer Science, Duke University, Durham, NC 27708-0129, and Department Computer Science, University of Illinois, Urbana, IL 61801-2987; jeffe@cs.uiuc.edu; http://www:uiuc:edu/ph/www/ jeffe/. Portions of this research were done at the International Computer Science Institute, Berkeley, CA.
Reference: [15] <author> J. Klosowski, H. Held, J. S. B. Mitchell, K. Zikan, and H. Sowizral. </author> <title> Efficient collision detection using bounding volume hierarchies of k-DOPs. </title> <journal> IEEE Trans. Visualizat. Com-put. Graph. </journal> <volume> 4(1), </volume> <year> 1998. </year>
Reference-contexts: Klosowski et al. <ref> [15] </ref> define the "k-DOP" or discrete orientation polytope of an object to be the bounding polytope whose facets are normal to a fixed set of k `compass' directions.
Reference: [16] <author> M. C. Lin. </author> <title> Efficient Collision Detection for Animation and Robotics. </title> <type> Ph.D. thesis, </type> <institution> Dept. Elec. Engin. Comput. Sci., Univ. California, Berkeley, </institution> <address> CA, </address> <year> 1993. </year>
Reference-contexts: Not surprisingly, the collision detection problem is closely related to the distance computation problem. Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny <ref> [16, 17] </ref>, Mirtich [18, 19, 20], and Gilbert et al. [10] (see also [4]), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes).
Reference: [17] <author> M. C. Lin and J. F. Canny. </author> <title> Efficient algorithms for incremental distance computation. </title> <booktitle> Proc. IEEE Internat. Conf. Robot. Autom., </booktitle> <volume> vol. 2, </volume> <pages> pp. 1008-1014, </pages> <year> 1991. </year>
Reference-contexts: The narrow phase is more specialized, according to the types of objects being considered. The simplest objects to consider are convex polytopes (polygons in the plane, or polyhedra in 3-space), and this case has been extensively considered in the literature <ref> [17, 18, 20, 10, 5] </ref>. More complex objects are then broken up into convex pieces, which are tested pairwise. <p> Not surprisingly, the collision detection problem is closely related to the distance computation problem. Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny <ref> [16, 17] </ref>, Mirtich [18, 19, 20], and Gilbert et al. [10] (see also [4]), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes). <p> convex curve at distance s from P Q inter sects O (log (D=s)) and O p triangles in the mixed compass hierarchy and mixed Dudley hierarchy of P Q, respectively. 5 Separation-Sensitive Data Structures Several authors have proposed algorithms to maintain the closest pair of features between two convex polygons <ref> [10, 17, 18] </ref>; these algorithms can easily be transformed into a kinetic data structure with constant update time. There are at least two alternative approaches that lead to the same performance.
Reference: [18] <author> B. Mirtich. </author> <title> Impulse-based Dynamic Simulation of Rigid Body Systems. </title> <type> Ph.D. thesis, </type> <institution> Dept. Elec. Engin. Comput. Sci., Univ. California, Berkeley, </institution> <address> CA, </address> <year> 1996. </year>
Reference-contexts: The narrow phase is more specialized, according to the types of objects being considered. The simplest objects to consider are convex polytopes (polygons in the plane, or polyhedra in 3-space), and this case has been extensively considered in the literature <ref> [17, 18, 20, 10, 5] </ref>. More complex objects are then broken up into convex pieces, which are tested pairwise. <p> Not surprisingly, the collision detection problem is closely related to the distance computation problem. Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny [16, 17], Mirtich <ref> [18, 19, 20] </ref>, and Gilbert et al. [10] (see also [4]), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes). <p> convex curve at distance s from P Q inter sects O (log (D=s)) and O p triangles in the mixed compass hierarchy and mixed Dudley hierarchy of P Q, respectively. 5 Separation-Sensitive Data Structures Several authors have proposed algorithms to maintain the closest pair of features between two convex polygons <ref> [10, 17, 18] </ref>; these algorithms can easily be transformed into a kinetic data structure with constant update time. There are at least two alternative approaches that lead to the same performance.
Reference: [19] <author> B. Mirtich. V-Clip: </author> <title> Fast and robust polyhedral collision detection. </title> <type> Technical Report TR-97-05, </type> <institution> Mitsubishi Electrical Research Laboratory, </institution> <year> 1997. </year>
Reference-contexts: Not surprisingly, the collision detection problem is closely related to the distance computation problem. Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny [16, 17], Mirtich <ref> [18, 19, 20] </ref>, and Gilbert et al. [10] (see also [4]), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes).
Reference: [20] <author> B. Mirtich and J. Canny. </author> <title> Impulse-based dynamic simulation. The Algorithmic Foundations of Robotics. </title> <editor> A. K. Peters, </editor> <year> 1995. </year>
Reference-contexts: The narrow phase is more specialized, according to the types of objects being considered. The simplest objects to consider are convex polytopes (polygons in the plane, or polyhedra in 3-space), and this case has been extensively considered in the literature <ref> [17, 18, 20, 10, 5] </ref>. More complex objects are then broken up into convex pieces, which are tested pairwise. <p> Not surprisingly, the collision detection problem is closely related to the distance computation problem. Since the distance between two continuously moving polytopes also changes continuously, many well-known collision detection algorithms, such as those of Lin and Canny [16, 17], Mirtich <ref> [18, 19, 20] </ref>, and Gilbert et al. [10] (see also [4]), are based upon tracking the closest pair of features of the polytopes during their motion (which, of course, implies knowledge of the distance between the polytopes).
Reference: [21] <author> J. S. B. Mitchell, D. M. Mount, and S. Suri. </author> <title> Query-sensitive ray shooting. </title> <booktitle> Proc. 10th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pp. 359-368, </pages> <year> 1994. </year>
Reference-contexts: Using these structures, we are able to bound the number of events by the combinatorial size of a certain cover of the motion path by balls (Section 6), somewhat reminiscent of <ref> [21] </ref>. We believe that the KDSs shown here are of theoretical and practical interest. A basic tool for all our structures are certain outer approximation hierarchies for convex polytopes and their Minkowski sums|a topic which we believe to be of independent interest (Section 3).
Reference: [22] <author> J. Orenstein. </author> <title> A comparison of spatial query processing techniques for native and parameter spaces. </title> <booktitle> Proc. ACM SIG-MOD Conf. on Management of Data, </booktitle> <pages> pp. 343-352, </pages> <year> 1990. </year>
Reference-contexts: Research partially supported by CNPq grant 301016/92-5. x Computer Science Department, Stanford University, Stanford, CA 94305; lizhang@cs.stanford.edu; http://graphics:stanford:edu/ ~ lizhang/. the spatial database literature, these are also called the filtering and refinement phases, respectively <ref> [22] </ref>.) For the broad phase, almost all authors use some kind of simple bounding volumes for the objects themselves, or for portions of their trajectories in space or space-time, so as to quickly eliminate from consideration pairs of objects that cannot possibly collide.
Reference: [23] <author> R. Schneider. </author> <title> Convex bodies: The Brunn-Minkowski theory. Encyclopedia of Mathematics and its Applications 44. </title> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: the complement of the Minkowski sum of two convex polygons into triangles and parallelograms, which we call the mixed hierarchy. (Without loss of generality, we focus on describing this hierarchy for P Q, as opposed to P (Q).) It is motivated by the theory of mixed volumes of convex bodies <ref> [23] </ref>, and it has the advantage that it changes in a very regular way as the polygons rotate.
Reference: [24] <author> G. Zachmann and W. Felger. </author> <title> The BoxTree: Enabling real-time and exact collision detection of arbitrary polyhedra. </title> <booktitle> Proc. </booktitle> <volume> SIVE '95, </volume> <pages> pp. 104-113, </pages> <year> 1995. </year>
Reference-contexts: Klosowski et al. construct a hierarchy of bounding volumes for any object by computing the object's k-DOP, decomposing the object into a constant number of pieces, and recursively constructing a hierarchy for each piece, using the same value of k at all levels. (See <ref> [1, 11, 24] </ref> for similar bounding volume hierarchies.) In contrast, the compass hierarchy consists of a nested sequence of k-DOPs with k = 4; 8; 16; : : : , all for the same object. 3.2 The Dudley Hierarchy Our second boomerang hierarchy is based on a result of Dudley [8]
References-found: 24

