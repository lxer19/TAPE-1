URL: http://www.cs.utexas.edu/users/dahlin/papers/webComputer.ps
Refering-URL: http://www.cs.utexas.edu/users/dahlin/papers.html
Root-URL: 
Title: Turning the Web Into a Computer  
Author: Amin Vahdat, Michael Dahlin, and Thomas Anderson 
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division University of California  
Abstract: The explosive growth of the World Wide Web, along with the evolution of the HTTP, HTML, and CGI standards, has enabled many applications which would not have been feasible just a few years ago. We believe that this evolution will eventually lead to support for general-purpose distributed computing over the Web. Such computation minimally requires transparent access to: i) local and remote files, ii) private and public data, and iii) local and remote computation. In this paper, we demonstrate that these requirements can be met by integrating simple protocols from existing distributed systems into the Web. In turn, we show that adding these capabilities can qualitatively improve the utility of the Web by enabling a whole new class of distributed applications. 
Abstract-found: 1
Intro-found: 1
Reference: [Bellovin & Merritt 1991] <author> S. M. Bellovin and M. Merritt. </author> <title> "Limitations of the Kerneros Authentication System". </title> <booktitle> In Proceedings of the 1991 USENIX Winter Conference, </booktitle> <year> 1991. </year> <month> 12 </month>
Reference-contexts: We plan to use these protocols to provide reintegration after disconnection in our target wide area file system. Our security model is based on the conceptual framework provided by Kerberos <ref> [Steiner et al. 1988, Bellovin & Merritt 1991] </ref>, "A Logic of Authentication" [Burrows et al. 1989], and PGP [Zimmerman 1994]. The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities.
Reference: [Brewer & Gauthier 1995] <author> E. Brewer and P. Gauthier. </author> <title> "The Inktomi Search Engine". </title> <note> http://- www.inktomi.com, 1995. </note>
Reference-contexts: In some cases however, shipping functions to remote sites is much cheaper. For example, Web indexing systems such as Inktomi <ref> [Brewer & Gauthier 1995] </ref> or Alta Vista [Dig 1995] could reduce consumed network bandwidth by sending indexing programs to target sites and retrieving the result.
Reference: [Burrows et al. 1989] <author> M. Burrows, M. Abadi, and R. Needham. </author> <title> "A Logic of Authentication". </title> <booktitle> In Proceedings of the Twelfth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 1-13, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: We plan to use these protocols to provide reintegration after disconnection in our target wide area file system. Our security model is based on the conceptual framework provided by Kerberos [Steiner et al. 1988, Bellovin & Merritt 1991], "A Logic of Authentication" <ref> [Burrows et al. 1989] </ref>, and PGP [Zimmerman 1994]. The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities.
Reference: [Cain 1995] <author> A. Cain. </author> <title> "Update of NCSA Web-Security Development". </title> <address> http://www.ncsa.uiuc.edu/- InformationServers/adam/w3c, </address> <month> July </month> <year> 1995. </year>
Reference-contexts: For example, a user running a simulation on a remote supercomputer needs to be able to grant access rights to simulation input files on the user's home file system. Finally, any overhead associated with authentication should not be incurred for access to public resources. Existing proposals <ref> [Cain 1995] </ref> for authentication across the Web generally involve use of Ker-beros [Steiner et al. 1988] as part of the HTTP GET method. However, using Kerberos across the wide area is unattractive for a number of reasons.
Reference: [Cate 1992] <author> V. Cate. </author> <title> "Alex a Global Filesystem". </title> <booktitle> In Proceedings of the 1992 USENIX File System Workshop, </booktitle> <pages> pp. 1-12, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: An alternative would be to use an existing global file system such as AFS [Howard et al. 1988] or Alex <ref> [Cate 1992] </ref>. AFS is limited by its requirement for kernel modifications, and, more importantly, the fact that many sites do not run AFS limiting the scope of the filesystem (in order to use AFS as the wide area protocol, sites must run AFS as their local file system). <p> It could also be ported to interface with the vnode [Kleiman 1986] layer in the fashion of AFS [Howard et al. 1988], or to be a user-level NFS server such as Alex <ref> [Cate 1992] </ref>. 2.1.1 Global Name Space WebFS provides access to a global name space for unmodified applications by implementing the functionality of all system calls operating on remote files. WebFS maintains a table of open remote file descriptors and a disk cache of remote file pages. <p> The original work in the Andrew File System [Howard et al. 1988] provided our cache invalidation protocol. More recent work [Spasojevic & Satyanarayanan 1994] demonstrates the viability of a wide area file systems by studying access and usage patterns of AFS. The Alex File System <ref> [Cate 1992] </ref> provided a read-only global FTP file access for unmodified binaries. A similar file system [Gschwind 1994] allowed for writing in the FTP name space. A number of studies [Gwertzman & Seltzer 1996, Chankhunthod et al. 1996] have been done to improve cache-consistency in the Web.
Reference: [Chankhunthod et al. 1996] <author> A. Chankhunthod, P. Danzig, C. Neerdaels, M. Schwartz, and K. Worrell. </author> <title> "A Hierarchical Internet Object Cache". </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference, </booktitle> <month> January </month> <year> 1996. </year>
Reference-contexts: The Alex File System [Cate 1992] provided a read-only global FTP file access for unmodified binaries. A similar file system [Gschwind 1994] allowed for writing in the FTP name space. A number of studies <ref> [Gwertzman & Seltzer 1996, Chankhunthod et al. 1996] </ref> have been done to improve cache-consistency in the Web. However, these techniques describe caching policies in the context of traditional web browsing and cannot provide sequential consistency for applications that require it.
Reference: [CVS 1995] <author> CVS. </author> <title> CVS Training Manual, </title> <month> September </month> <year> 1995. </year> <note> http://www.io.com/docs/CVS-Train/- cvstrain.html. </note>
Reference-contexts: Thus, sites need only enough hardware to deal with their average load; excess load can be dynamically shifted to the Rent-A-Server to deal with peak demand. Many of the applications described above have been done in isolation. For example Lotus Notes and CVS <ref> [CVS 1995] </ref> support collaborative computing, while WebStor [McA 1996] supports remote Internet 2 backup. However, these and other applications would benefit from a general, interoperable framework for application development.
Reference: [Diffie & Hellman 1977] <author> W. Diffie and M. Hellman. </author> <title> "New Directons in Cryptography". </title> <journal> In IEEE Transactions on Information Theory, </journal> <pages> pp. 74-84, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: More importantly, Kerberos does not provide a way for users to transfer their access rights to programs running on remote sites, or a way for users to selectively restrict access to subsets of their files . For these reasons, we choose public key cryptography <ref> [Diffie & Hellman 1977, Rivest et al. 1978] </ref> to provide authentication, access control lists and user-constructible capabilities for fine-grained access control.
Reference: [Dig 1995] <institution> Digital Equipment Corporation. Alta Vista, </institution> <year> 1995. </year> <note> http://www.altavista.digital.com/. </note>
Reference-contexts: In some cases however, shipping functions to remote sites is much cheaper. For example, Web indexing systems such as Inktomi [Brewer & Gauthier 1995] or Alta Vista <ref> [Dig 1995] </ref> could reduce consumed network bandwidth by sending indexing programs to target sites and retrieving the result. Such function shipping requires secure remote program execution, authenti cation, and a writable global file system. * Rent-A-Server Currently, HTTP servers must purchase enough hardware to deal with peak demands.
Reference: [Gen 1996] <institution> General Magic. Telescript Home Page, </institution> <year> 1996. </year> <note> http://www.genmagic.com/Telescript /index.html. </note>
Reference-contexts: Both Java [Gosling & McGilton 1995] and Omniware [Wahbe et al. 1993, Wahbe & Lucco 1995] implement virtual machines for secure remote program execution. Telescript <ref> [Gen 1996] </ref> and Horb [Satoshi 1996] have goals for network computing similar to our own but neither system provides for interoperability with existing applications or a global file system. 6 Conclusions In this paper we have shown how a general framework for distributed programming on the Web enables a number of
Reference: [Ghormley et al. 1996] <author> D. P. Ghormley, D. Petrou, and T. E. Anderson. "SLIC: </author> <title> Secure Loadable Interposition Code". </title> <month> May </month> <year> 1996. </year> <note> Submitted for publication. </note>
Reference-contexts: Alex is limited by its read-only name space and by its lack of an authentication model. Thus, we use ideas embodied in these systems to build WebFS, a new global file system. To provide global file service for unmodified applications, WebFS intercepts all filesystem related system calls using SLIC <ref> [Ghormley et al. 1996] </ref>. SLIC is a loadable device driver that patches the OS syscall table to allow forwarding of system calls to user-level servers. It allows for interoperability with existing applications without any kernel source modifications.
Reference: [Goldberg et al. 1996] <author> I. Goldberg, D. Wagner, R. Thomas, and E. Brewer. </author> <title> "A Secure Environment for Untrusted Helper Applications". </title> <booktitle> In Proceedings of the Sixth USENIX Security Symposium, </booktitle> <month> July </month> <year> 1996. </year> <note> To Appear. </note>
Reference-contexts: One of the goals of the Java programming language is to provide the desired sandboxing at the cost of rewriting all applications in a new programming language. Finally, techniques used to provide for secure remote helper applications (SRHA) <ref> [Goldberg et al. 1996] </ref> can be extended to ensure proper program behavior for unmodified binaries. The disadvantage of this technique is that multiple program binaries must be maintained for different architectures, while both SFI and Java provide architecture independent binaries.
Reference: [Gosling & McGilton 1995] <author> J. Gosling and H. McGilton. </author> <title> "The Java(tm) Language Environment: </title> <note> A White Paper". http://java.dimensionx.com/whitePaper/java-whitepaper-1.html, 1995. </note>
Reference-contexts: Next, the common gateway interface (CGI) extended this data publishing metaphor by allowing data servers to execute programs to generate custom pages in response to client input, for example, to return to a client all of the links matching a query. Most recently, the advent of Java <ref> [Gosling & McGilton 1995] </ref> allows servers to download programs, called applets, into client browsers. Java applets enable interactive Web pages that respond to user input locally without having to access CGI programs over the internet. Despite the manifest usefulness of these protocols, the Web metaphor is still limited. <p> The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities. Both Java <ref> [Gosling & McGilton 1995] </ref> and Omniware [Wahbe et al. 1993, Wahbe & Lucco 1995] implement virtual machines for secure remote program execution.
Reference: [Gschwind 1994] <author> M. K. Gschwind. </author> <title> "FTP Access as a User-Defined File System". </title> <booktitle> In Operating Systems Review, </booktitle> <volume> volume 28, </volume> <pages> pp. 73-80, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: More recent work [Spasojevic & Satyanarayanan 1994] demonstrates the viability of a wide area file systems by studying access and usage patterns of AFS. The Alex File System [Cate 1992] provided a read-only global FTP file access for unmodified binaries. A similar file system <ref> [Gschwind 1994] </ref> allowed for writing in the FTP name space. A number of studies [Gwertzman & Seltzer 1996, Chankhunthod et al. 1996] have been done to improve cache-consistency in the Web.
Reference: [Gwertzman & Seltzer 1996] <author> J. Gwertzman and M. Seltzer. </author> <title> "World-Wide Web Cache Consistency". </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference, </booktitle> <pages> pp. 141-151, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: The Alex File System [Cate 1992] provided a read-only global FTP file access for unmodified binaries. A similar file system [Gschwind 1994] allowed for writing in the FTP name space. A number of studies <ref> [Gwertzman & Seltzer 1996, Chankhunthod et al. 1996] </ref> have been done to improve cache-consistency in the Web. However, these techniques describe caching policies in the context of traditional web browsing and cannot provide sequential consistency for applications that require it.
Reference: [Howard et al. 1988] <author> J. Howard, M. Kazar, S. Menees, D. Nichols, M. Satyanarayanan, R. Sidebotham, and M. West. </author> <title> "Scale and Performance in a Distributed File System". </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 51-82, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: An alternative would be to use an existing global file system such as AFS <ref> [Howard et al. 1988] </ref> or Alex [Cate 1992]. <p> Benchmarks in Section 3 measure SLIC-related overhead for WebFS. Though the file system is currently enabled by SLIC, the WebFS architecture is independent of the method used to intercept system calls. It could also be ported to interface with the vnode [Kleiman 1986] layer in the fashion of AFS <ref> [Howard et al. 1988] </ref>, or to be a user-level NFS server such as Alex [Cate 1992]. 2.1.1 Global Name Space WebFS provides access to a global name space for unmodified applications by implementing the functionality of all system calls operating on remote files. <p> The original work in the Andrew File System <ref> [Howard et al. 1988] </ref> provided our cache invalidation protocol. More recent work [Spasojevic & Satyanarayanan 1994] demonstrates the viability of a wide area file systems by studying access and usage patterns of AFS. The Alex File System [Cate 1992] provided a read-only global FTP file access for unmodified binaries.
Reference: [Katz et al. 1994] <author> E. D. Katz, M. Butler, and R. McGrath. </author> <title> "A Scalable HTTP Server: The NCSA Prototype". </title> <booktitle> In First International Conference on the WorldWide Web, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: Many HTTP server implementations achieve scalability by replicating their data across a fixed set of servers at a single site and then using the Domain Name Service (DNS) to randomly distribute 9 requests across the servers <ref> [Katz et al. 1994] </ref>. Unfortunately, this approach still requires each site to purchase enough computing power and network bandwidth to satisfy the peak rate of demand on the site. In addition to distributing load, Rent-A-Server improves performance by increasing locality.
Reference: [Kistler & Satyanarayanan 1992] <author> J. J. Kistler and M. Satyanarayanan. </author> <title> "Disconnected Operation in the Coda File System". </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1) </volume> <pages> 3-25, </pages> <month> February </month> <year> 1992. </year> <month> 13 </month>
Reference-contexts: Other failure modes that must be dealt with include network partitions or client failures which prevent WebFS from successfully transmitting invalidation messages to remote sites. Here, the directory must be updated to indicate that the 5 remote site should be contacted periodically to attempt reintegration <ref> [Kistler & Satyanarayanan 1992] </ref>. Reintegration is not implemented in the current prototype. 2.2 Authentication Access to global system resources (CPUs and files) must be authenticated to ensure system security. In this section, we describe how we provide for authentication and fine-grained access control to remote system resources. <p> A number of studies [Gwertzman & Seltzer 1996, Chankhunthod et al. 1996] have been done to improve cache-consistency in the Web. However, these techniques describe caching policies in the context of traditional web browsing and cannot provide sequential consistency for applications that require it. Coda <ref> [Kistler & Satyanarayanan 1992] </ref> and Bayou [Terry et al. 1995] study cache consistency and reintegration assuming weakly-connected and disconnected operation. We plan to use these protocols to provide reintegration after disconnection in our target wide area file system.
Reference: [Kleiman 1986] <author> S. R. Kleiman. "Vnodes: </author> <title> An Architecture For Multiple File System Types in SUN UNIX". </title> <booktitle> In Proceedings of the 1986 USENIX Summer Technical Conference, </booktitle> <pages> pp. 238-247, </pages> <year> 1986. </year>
Reference-contexts: Benchmarks in Section 3 measure SLIC-related overhead for WebFS. Though the file system is currently enabled by SLIC, the WebFS architecture is independent of the method used to intercept system calls. It could also be ported to interface with the vnode <ref> [Kleiman 1986] </ref> layer in the fashion of AFS [Howard et al. 1988], or to be a user-level NFS server such as Alex [Cate 1992]. 2.1.1 Global Name Space WebFS provides access to a global name space for unmodified applications by implementing the functionality of all system calls operating on remote files.
Reference: [Luotonen & Atlis 1994] <author> A. Luotonen and K. Atlis. </author> <title> "World-Wide Web Proxies". </title> <booktitle> In First International Conference on the World-Wide Web, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: As an example of the importance of having server-controlled rather than client-controlled load distribution, consider the recent assertions by some sites that proxies violate copyright protections because they hide page hits that sites use to bill advertisers <ref> [Luotonen & Atlis 1994] </ref>. We can avoid this difficulty because rented subservers could update page hit statistics using CGI scripts. 4.2 Prototype Our current Rent-A-Server prototype can serve publicly available data pages for any site on the web. Execution of CGI scripts from remote sites is not yet implemented.
Reference: [McA 1996] <author> McAfee and Associates. WebStor: </author> <title> Internet Personal Storage Managment, </title> <note> 1996. http://- www.mcafee.com/prod/stormgt/wstor.html. </note>
Reference-contexts: Many of the applications described above have been done in isolation. For example Lotus Notes and CVS [CVS 1995] support collaborative computing, while WebStor <ref> [McA 1996] </ref> supports remote Internet 2 backup. However, these and other applications would benefit from a general, interoperable framework for application development. Such a framework would enable applications to avoid reimplementing common infrastructure and to take advantage of the synergy available from cooperating applications using the same underlying protocols.
Reference: [Rivest et al. 1978] <author> R. L. Rivest, A. Shamir, and L. Adelman. </author> <title> "A Method for Obtaining Digital Signatures and Public-Key Cryptosystems". </title> <journal> In Communications of the ACM, </journal> <volume> volume 21, </volume> <month> February </month> <year> 1978. </year>
Reference-contexts: More importantly, Kerberos does not provide a way for users to transfer their access rights to programs running on remote sites, or a way for users to selectively restrict access to subsets of their files . For these reasons, we choose public key cryptography <ref> [Diffie & Hellman 1977, Rivest et al. 1978] </ref> to provide authentication, access control lists and user-constructible capabilities for fine-grained access control.
Reference: [Satoshi 1996] <author> H. Satoshi. </author> <title> The Magic Carpet for Network Computing: HORB Flyer's Guide, </title> <month> March </month> <year> 1996. </year> <note> http://ring.etl.go.jp/openlab/horb/doc/guide/guide.htm. </note>
Reference-contexts: Both Java [Gosling & McGilton 1995] and Omniware [Wahbe et al. 1993, Wahbe & Lucco 1995] implement virtual machines for secure remote program execution. Telescript [Gen 1996] and Horb <ref> [Satoshi 1996] </ref> have goals for network computing similar to our own but neither system provides for interoperability with existing applications or a global file system. 6 Conclusions In this paper we have shown how a general framework for distributed programming on the Web enables a number of interesting applications.
Reference: [Spasojevic & Satyanarayanan 1994] <author> M. Spasojevic and M. Satyanarayanan. </author> <title> "A Usage Profile and Evaluation of a Wide-Area Distributed File System". </title> <booktitle> In Proceedings of the USENIX Winter Technical Conference, </booktitle> <year> 1994. </year>
Reference-contexts: The original work in the Andrew File System [Howard et al. 1988] provided our cache invalidation protocol. More recent work <ref> [Spasojevic & Satyanarayanan 1994] </ref> demonstrates the viability of a wide area file systems by studying access and usage patterns of AFS. The Alex File System [Cate 1992] provided a read-only global FTP file access for unmodified binaries.
Reference: [Steiner et al. 1988] <author> J. G. Steiner, B. C. Neuman, and J. I. S. ller. </author> <title> "Kerberos: An Authentication Service for Open Network Systems". </title> <booktitle> In Proceedings of the 1988 USENIX Conference, </booktitle> <month> March </month> <year> 1988. </year>
Reference-contexts: Finally, any overhead associated with authentication should not be incurred for access to public resources. Existing proposals [Cain 1995] for authentication across the Web generally involve use of Ker-beros <ref> [Steiner et al. 1988] </ref> as part of the HTTP GET method. However, using Kerberos across the wide area is unattractive for a number of reasons. <p> We plan to use these protocols to provide reintegration after disconnection in our target wide area file system. Our security model is based on the conceptual framework provided by Kerberos <ref> [Steiner et al. 1988, Bellovin & Merritt 1991] </ref>, "A Logic of Authentication" [Burrows et al. 1989], and PGP [Zimmerman 1994]. The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities.
Reference: [Stonebraker et al. 1996] <author> M. Stonebraker, P. Aoki, W. Litwin, A. Pfeiffer, A. Sah, J. Sidell, C. Staelin, and A. Yu. "Mariposa: </author> <title> A Wide-Area Distributed Database System". </title> <journal> In VLDB Journal, </journal> <volume> volume 5, </volume> <pages> pp. 48-63, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Care must be taken so that the application can access any necessary files such as /dev/zero and /etc/hosts 3 . * The uid of the running program is set to nobody. 2 In the long term, local sites may use a bidding system similar to that implemented by Mariposa <ref> [Stonebraker et al. 1996] </ref> to determine the best location for execution of their jobs. 3 Many programs will not run without access to certain well-known files. 7 * The job's runtime priority is set to ensure that it does not adversely affect the completion times of any higher priority jobs. *
Reference: [Terry et al. 1995] <author> D. B. Terry, M. M. Theimer, K. Petersen, A. J. Demers, M. J. Spreitzer, and C. H. Hauser. </author> <title> "Managing Update Conflicts in Bayou, a Weakly Connected Replicated Storage System". </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 172-183, </pages> <year> 1995. </year>
Reference-contexts: However, these techniques describe caching policies in the context of traditional web browsing and cannot provide sequential consistency for applications that require it. Coda [Kistler & Satyanarayanan 1992] and Bayou <ref> [Terry et al. 1995] </ref> study cache consistency and reintegration assuming weakly-connected and disconnected operation. We plan to use these protocols to provide reintegration after disconnection in our target wide area file system.
Reference: [Wahbe & Lucco 1995] <author> R. Wahbe and S. Lucco. </author> <title> Omniware Programmer's Manual. </title> <booktitle> Colusa Software, </booktitle> <year> 1995. </year>
Reference-contexts: In effect, the programs must be constrained to run in a "sandbox" whose boundaries are determined by individual system administrators. A number of different techniques are available to provide such sandboxing, each with their own tradeoffs. Software-based fault isolation (SFI) in Omniware <ref> [Wahbe et al. 1993, Wahbe & Lucco 1995] </ref> provides our required guarantees at the cost of recompilation of applications we wish to run remotely. <p> The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities. Both Java [Gosling & McGilton 1995] and Omniware <ref> [Wahbe et al. 1993, Wahbe & Lucco 1995] </ref> implement virtual machines for secure remote program execution.
Reference: [Wahbe et al. 1993] <author> R. Wahbe, S. Lucco, T. Anderson, and S. Graham. </author> <title> "Efficient Software-Based Fault Isolation". </title> <booktitle> In Proceedings of the 14th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 203-216, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: In effect, the programs must be constrained to run in a "sandbox" whose boundaries are determined by individual system administrators. A number of different techniques are available to provide such sandboxing, each with their own tradeoffs. Software-based fault isolation (SFI) in Omniware <ref> [Wahbe et al. 1993, Wahbe & Lucco 1995] </ref> provides our required guarantees at the cost of recompilation of applications we wish to run remotely. <p> The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities. Both Java [Gosling & McGilton 1995] and Omniware <ref> [Wahbe et al. 1993, Wahbe & Lucco 1995] </ref> implement virtual machines for secure remote program execution.
Reference: [Wobber et al. 1993] <author> E. Wobber, M. Abadi, M. Burrows, and B. Lampson. </author> <title> "Authentication in the Taos Operating System". </title> <booktitle> In Proceedings of the Fourteenth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 256-269, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: To provide this ability, the user requesting program execution must also provide a signed ticket certifying that the specified remote site has the right to speak on its behalf, i.e. make file accesses with some limited subset of the user's authority <ref> [Wobber et al. 1993] </ref>. The ticket also contains an expiration timestamp to ensure that the site executing the program will not have unbounded access to the user's authority. <p> Our security model is based on the conceptual framework provided by Kerberos [Steiner et al. 1988, Bellovin & Merritt 1991], "A Logic of Authentication" [Burrows et al. 1989], and PGP [Zimmerman 1994]. The "roles" with limited access rights used to perform activity on behalf of a user in Taos <ref> [Wobber et al. 1993] </ref> provide the basis for our user-constructible capabilities. Both Java [Gosling & McGilton 1995] and Omniware [Wahbe et al. 1993, Wahbe & Lucco 1995] implement virtual machines for secure remote program execution.
Reference: [Zimmerman 1994] <author> P. Zimmerman. </author> <title> "PGP User's Guide, Volume II: Special Topics". Online Documentation, </title> <booktitle> 1994. </booktitle> <pages> 14 </pages>
Reference-contexts: For these reasons, we choose public key cryptography [Diffie & Hellman 1977, Rivest et al. 1978] to provide authentication, access control lists and user-constructible capabilities for fine-grained access control. To address the key distribution problem <ref> [Zimmerman 1994] </ref> associated with public key cryptography, we assume the existence of one or more trusted certification authorities that guarantee the association of public keys to entities. A ticket encrypted in a certification authority's private key is assumed to be sufficient to associate a public key with a particular entity. <p> We plan to use these protocols to provide reintegration after disconnection in our target wide area file system. Our security model is based on the conceptual framework provided by Kerberos [Steiner et al. 1988, Bellovin & Merritt 1991], "A Logic of Authentication" [Burrows et al. 1989], and PGP <ref> [Zimmerman 1994] </ref>. The "roles" with limited access rights used to perform activity on behalf of a user in Taos [Wobber et al. 1993] provide the basis for our user-constructible capabilities.
References-found: 31

