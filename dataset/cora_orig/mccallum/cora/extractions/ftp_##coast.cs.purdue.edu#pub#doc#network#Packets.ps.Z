URL: ftp://coast.cs.purdue.edu/pub/doc/network/Packets.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ30.html
Root-URL: http://www.cs.purdue.edu
Title: Packets Found on an Internet  
Author: Steven M. Bellovin 
Date: August 23, 1993  
Abstract: As part of our security measures, we spend a fair amount of time and effort looking for things that might otherwise be ignored. Apart from assorted attempted penetrations, we have also discovered many examples of anomalous behavior. These range from excessive ICMP messages to nominally-local broadcast packets that have reached us from around the world.
Abstract-found: 1
Intro-found: 1
Reference: [Bel89] <author> Steven M. Bellovin. </author> <title> Security problems in the TCP/IP protocol suite. </title> <journal> Computer Communications Review, </journal> <volume> 19(2) </volume> <pages> 32-48, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: We were seeing non-zero counters for "bad code fields" and for "routing redirects". The latter was especially strange, since we have only one router on that network. Given the oddities, and given the theoretical possibility of an attack via ICMP Redirect <ref> [Bel89] </ref> messages, we wrote a monitor to log all ICMP messages. As usual, we saw more than we were looking for. The Redirect messages were a bit elusive; they only seemed to come from certain sites. We eventually trapped a burst of them.
Reference: [Bel92a] <author> Steven M. Bellovin. </author> <title> "Helpful" self-configuring programs. </title> <journal> RISKS Digest, </journal> <volume> 13(25), </volume> <month> March 5 </month> <year> 1992. </year>
Reference-contexts: Internet-wide broadcasts are distressing enough; the thought of implementing them by stepping through the entire address space is horrifying. This was not an isolated incident. We described what happened in the RISKS Digest <ref> [Bel92a] </ref>, and received several reports of similar incidents elsewhere. Indeed, we have had runaways bother us since then, including once from the control center of a regional networks. 4 ICMP Peculiarities A recent glance at the output of the netstat command showed several peculiarities.
Reference: [Bel92b] <author> Steven M. Bellovin. </author> <title> There be dragons. </title> <booktitle> In Proc. UNIX Security Symposium III, </booktitle> <pages> pages 1-16, </pages> <address> Baltimore, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: 1 Introduction For security reasons, AT&T's connection to the Internet is via a pair of application gateways [Che90]. To maintain the security of the gateways, we monitor them for attempted intrusions [Che92]. Recently, we have also started looking for more inventive penetration attempts <ref> [Bel92b] </ref>. We have indeed found such behavior. While looking, though, we noticed a surprising amount of other anomalous behavior, packets that do not appear to indicate an attempted break-in, but are worthy of attention nevertheless. We are currently running three types of broad-spectrum monitors. <p> Huge software packages (i.e., X11R5) can be distributed electronically. Connections span the globe. But the very success of the Internet makes some bugs invisible. Because of our monitoring, we are able to spot certain classes of misbehavior that are, in general, not seen. Unfortunately, unlike our security logging recommendations <ref> [Bel92b] </ref>, many of the techniques discussed here are not practical elsewhere. Trying to analyze bogus IP destination addresses on a busy Ethernet cable does not work, for example. But the underlying problems they are symptomatic of have not thereby gone away.
Reference: [Bra89] <editor> R.T. Braden, ed. </editor> <title> Requirements for Internet hosts communication layers., </title> <month> October </month> <year> 1989. </year> <note> RFC 1122. </note>
Reference-contexts: This appears to be an ancient bug that was part of early releases of 4.3BSD. Unfortunately, many popular ICMP implementations will ignore messages with invalid code fields, recent RFC's notwithstanding <ref> [Bra89] </ref>. Thus, at the precise time when a router is strapped for resource, it is sending useless Source Quench messages. 4.1 Firewall Routers Many of the Destination Unreachable messages we received came from so-called "firewall routers".
Reference: [CFSD90] <author> J.D. Case, M. Fedor, M.L. Schoffstall, and C. Davin. </author> <title> Simple Network Management Protocol (SNMP), </title> <month> May </month> <year> 1990. </year> <note> RFC 1157. </note>
Reference-contexts: The combination of this property of the code, and the apparent persistence of host tables, can cause a mind-boggling number of messages to be sent. 3.1 Wild and Crazy SNMP Agents The most amusing application-level oddity we have seen was an SNMP message <ref> [CFSD90] </ref> from a distant university. Investigation showed that this was a case of an overly-helpful network management system. Apparently, several such systems have automatic or semi-automatic topology discovery mechanisms.
Reference: [Che90] <author> W.R. Cheswick. </author> <title> The design of a secure internet gateway. </title> <booktitle> In Proc. Summer USENIX Conference, </booktitle> <address> Anaheim, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: 1 Introduction For security reasons, AT&T's connection to the Internet is via a pair of application gateways <ref> [Che90] </ref>. To maintain the security of the gateways, we monitor them for attempted intrusions [Che92]. Recently, we have also started looking for more inventive penetration attempts [Bel92b]. We have indeed found such behavior.
Reference: [Che92] <author> W.R. Cheswick. </author> <title> An evening with Berferd, in which a cracker is lured, </title> <booktitle> endured, and studied. In Proc. Winter USENIX Conference, </booktitle> <address> San Francisco, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: 1 Introduction For security reasons, AT&T's connection to the Internet is via a pair of application gateways [Che90]. To maintain the security of the gateways, we monitor them for attempted intrusions <ref> [Che92] </ref>. Recently, we have also started looking for more inventive penetration attempts [Bel92b]. We have indeed found such behavior. While looking, though, we noticed a surprising amount of other anomalous behavior, packets that do not appear to indicate an attempted break-in, but are worthy of attention nevertheless.
Reference: [KL86] <author> Brian Kantor and Phil Lapsley. </author> <title> Network News Transfer Protocol, </title> <month> February </month> <year> 1986. </year> <note> RFC 977. </note>
Reference-contexts: We were lucky to notice these requests; the attacker tried to connect to 9net.att.com, a Plan 9 machine, and its design philosophy made detection quite easy. On a number of occasions, we have seen attempts to connect to our NNTP port <ref> [KL86] </ref>. Since we do not run NNTP, such requests are definitely out of line. As best we can tell, the usual motivation is a desire to read newgroups disallowed by local administrative policy.
Reference: [Moc87] <author> P.V. Mockapetris. </author> <title> Domain Names | Concepts and Facilities, </title> <month> November </month> <year> 1987. </year> <note> RFC 1034. </note>
Reference-contexts: Some of these are very clearly security events | when the connections requests are only to non-existent machines nevertheless listed in the Domain Name Server (DNS) database <ref> [Moc87] </ref>, the word "random" does not apply. Similarly, systematic attempts to probe the entire network's address space are likely carried out with hostile intent. But discounting those, we still see packets we cannot easily explain, packets destined for random addresses of ours.
Reference: [Plu82] <author> D.C. Plummer. </author> <title> Ethernet Address Resolution Protocol, </title> <month> November </month> <year> 1982. </year> <note> RFC 826. </note>
Reference-contexts: Accordingly, we had a wire cutter introduce itself to the transmit leads on the drop cable. But this created a problem for ARP entries <ref> [Plu82] </ref>: the router will not transmit the packets until it has a valid Ethernet 1 address, and the monitoring machine is too crippled to supply one. The next obvious choice is to have research.att.com answer; unfortunately, it has no "raw" driver that would let an application program field ARP requests.
Reference: [Pos81] <author> Jon B. Postel. </author> <title> Internet Control Message Protocol, </title> <month> September </month> <year> 1981. </year> <note> RFC 792. </note>
Reference-contexts: We are currently running three types of broad-spectrum monitors. First, a workstation with an Ethernet controller in "promiscuous mode" looks for packets not destined for any legal machine. Second, we run "packet suckers" on a variety of potentially-interesting ports. Third, we have recently deployed an ICMP <ref> [Pos81] </ref> monitor; it logs most ICMP messages received by the machine. Each of these has detected odd behavior.
Reference: [PPTT90] <author> Rob Pike, Dave Presotto, Ken Thompson, and Howard Trickey. </author> <title> Plan 9 from Bell Labs. </title> <booktitle> In Proceedings of the Summer 1990 UKUUG Conference, </booktitle> <pages> pages 1-9, </pages> <address> London, </address> <month> July </month> <year> 1990. </year> <pages> UKUUG. </pages>
Reference-contexts: We resorted to populating its kernel's tables as best we could; unfortunately, these tables are not large enough to permit complete coverage. Our selections, though adequate to detect security incidents, will likely miss attempts to reach random addresses. In the future, we hope to use a Plan 9 machine <ref> [PPTT90] </ref> to act as our ARP agent. fl AT&T Bell Laboratories. smb@ulysses.att.com 1 Ethernet is a registered trademark of Xerox Corporation.
Reference: [RP90] <author> Joyce K. Reynolds and Jon B. Postel. Assigned numbers, </author> <month> March </month> <year> 1990. </year> <note> RFC 1060. </note>
Reference-contexts: For example, we have seen a number of requests to connect to inexplicable port numbers. We know of no standard TCP daemons that listen on ports 2, 42, 70, or 525. Nor are those ports listed in the latest Assigned Numbers RFC <ref> [RP90] </ref>. While these particular requests appeared to part of an apparent break-in attempt, it is unclear to us why attackers should bother probing unused ports.
Reference: [Sun88] <author> Sun Microsystems, Inc. </author> <title> RPC: Remote Procedure Call Protocol Specification Version 2, </title> <month> June </month> <year> 1988. </year> <note> RFC 1057. </note>
Reference-contexts: Certainly, there may be security flaws in the standard NNTP daemon. We have no evidence for or against this proposition. On several occasions, our RPC <ref> [Sun90, Sun88] </ref> monitors have detected attempts to send "wall" broadcast messages to our machine. On at least one occasion, the request came from a site in Germany.
Reference: [Sun90] <author> Sun Microsystems, Inc., </author> <title> Mountain View, CA. Network Interfaces Programmer's Guide, </title> <month> March </month> <year> 1990. </year> <note> SunOS 4.1. </note>
Reference-contexts: Certainly, there may be security flaws in the standard NNTP daemon. We have no evidence for or against this proposition. On several occasions, our RPC <ref> [Sun90, Sun88] </ref> monitors have detected attempts to send "wall" broadcast messages to our machine. On at least one occasion, the request came from a site in Germany.
References-found: 15

