URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P654.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts97.htm
Root-URL: http://www.mcs.anl.gov
Title: OPTIMIZATION ENVIRONMENTS AND THE NEOS SERVER  
Phone: 60439  
Author: William Gropp and Jorge J. More 
Date: March 1997  
Address: 9700 South Cass Avenue Argonne, Illinois  Preprint MCS-P654-0397  
Affiliation: ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  
Abstract: This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38, by a grant of Northwestern University to the Optimization Technology Center, and by the National Science Foundation, through the Center for Research on Parallel Computation, under Cooperative Agreement No. CCR-9120008. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. M. Averick, R. G. Carter, J. J. Mor e, and G.-L. Xue, </author> <title> The MINPACK-2 test problem collection, </title> <type> Preprint MCS-P153-0694, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1992. </year>
Reference-contexts: We use the formulation in the MINPACK-2 test problem collection <ref> [1] </ref>. Additional details on the problem formulation are not important to our discussion. We need to know only that in our numerical results we consider the problem of minimizing f for a fixed value of ; in this case = 0:008.
Reference: [2] <author> C. Bischof, A. Bouaricha, P. Khademi, and J. J. Mor e, </author> <title> Computing gradients in large-scale optimization using automatic differentiation, </title> <type> Preprint MCS-P488-0195, </type> <institution> Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1995. </year> <note> To appear in INFORMS Journal on Computing. </note>
Reference-contexts: This is to be expected for this problem when the user provides both the function and the gradient, but it is remarkable that this also holds for the case when the user only provides the function. The techniques <ref> [2] </ref> used to achieve these results make essential use of the partial separability of the function. Another important point about the results in Table 3.1 is that there is a factor of six penalty in the timings when only providing the function.
Reference: [3] <author> C. Bischof, A. Carle, and P. Khademi, </author> <title> Fortran 77 interface specification to the SparsLinC library, </title> <type> Technical Report ANL/MCS-TM-196, </type> <institution> Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1994. </year>
Reference-contexts: The solver (in this case vmlm) checks the data and compiles the user's code. If any errors are found at this stage, the compiler error messages are returned to the user, and execution terminates. If the user's code compiles correctly, automatic differentiation tools (ADIFOR <ref> [4, 3] </ref> for Fortran code) are used to generate the gradient. Once the gradient is obtained, the user's 5 code is linked with the software library, and execution begins. Results are returned in the window generated by the NEOS Submission tool. <p> The NEOS solvers for nonlinear optimization problems use automatic differentiation tools to compute the gradients, Jacobians, and sparsity patterns required by the solvers. At present, we rely on ADIFOR <ref> [4, 3] </ref> to process Fortran code and on ADOL-C [15] to process C code. We demonstrate the ability of NEOS to solve large-scale nonlinear optimization problems with an optimal design problem formulated by Goodman, Kohn, and Reyna [14].
Reference: [4] <author> C. Bischof, A. Carle, P. Khademi, and A. Mauer, </author> <title> The ADIFOR 2.0 system for the automatic differentiation of Fortran 77 programs, </title> <type> Preprint MCS-P381-1194, </type> <institution> Ar-gonne National Laboratory, Argonne, Illinois, </institution> <year> 1994. </year> <note> Also available as CRPC-TR94491, Center for Research on Parallel Computation, </note> <institution> Rice University. </institution>
Reference-contexts: The solver (in this case vmlm) checks the data and compiles the user's code. If any errors are found at this stage, the compiler error messages are returned to the user, and execution terminates. If the user's code compiles correctly, automatic differentiation tools (ADIFOR <ref> [4, 3] </ref> for Fortran code) are used to generate the gradient. Once the gradient is obtained, the user's 5 code is linked with the software library, and execution begins. Results are returned in the window generated by the NEOS Submission tool. <p> The NEOS solvers for nonlinear optimization problems use automatic differentiation tools to compute the gradients, Jacobians, and sparsity patterns required by the solvers. At present, we rely on ADIFOR <ref> [4, 3] </ref> to process Fortran code and on ADOL-C [15] to process C code. We demonstrate the ability of NEOS to solve large-scale nonlinear optimization problems with an optimal design problem formulated by Goodman, Kohn, and Reyna [14].
Reference: [5] <author> J. M. Blaney and J. S. Dixon, </author> <title> Distance geometry in molecular modeling, in Reviews in Computational Chemistry, </title> <editor> K. B. Lipkowitz and D. B. Boyd, eds., </editor> <volume> vol. 5, </volume> <publisher> VCH Publishers, </publisher> <year> 1994, </year> <pages> pp. 299-335. </pages>
Reference-contexts: Recent reviews of the application of distance geometry problems to protein structure determination can be found in Havel [17, 18], Torda and van Gunsteren [27], Kuntz, Thomason, and Oshiro [19], Brunger and Nilges [8], and Blaney and Dixon <ref> [5] </ref>.
Reference: [6] <author> J. Bloomer, </author> <title> Power Programming with RPC, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <year> 1992. </year>
Reference-contexts: NEOS currently has only rudimentary security features, and the interfaces do not allow access from a user program. A more traditional but more flexible and powerful method for accessing numerical capabilities is the procedural (subroutine) interface. The network analogue to this interface, the remote procedure call (RPC) <ref> [6] </ref>, is useful for some parts of the security question as well. To better understand the security issues, we first outline the problem. To make the discussion concrete, we consider the case of determining a minimizer of a function f : IR n 7! IR.
Reference: [7] <author> A. Bouaricha and J. J. Mor e, </author> <title> Impact of partial separability on large-scale optimization, </title> <type> Preprint MCS-P487-0195, </type> <institution> Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1995. </year> <note> Accepted for publication in Computational Optimization and Applications. </note>
Reference-contexts: We also note that for these results, vmlm used ADIFOR with the sparse option. This strategy is far from optimal; with the hybrid strategy of Bouaricha and More <ref> [7] </ref> the performance penalty is reduced to a factor of two. Finally, we note that the number of function evaluations needed to solve the problem grows as a function of n 1=2 . However, this is all that can be expected from a limited-memory variable metric method.
Reference: [8] <author> A. T. Br unger and M. Nilges, </author> <title> Computational challenges for macromolecular structure determination by X-ray crystallography and solution NMR-spectroscopy, Q. </title> <journal> Rev. Biophys., </journal> <volume> 26 (1993), </volume> <pages> pp. 49-125. </pages>
Reference-contexts: Recent reviews of the application of distance geometry problems to protein structure determination can be found in Havel [17, 18], Torda and van Gunsteren [27], Kuntz, Thomason, and Oshiro [19], Brunger and Nilges <ref> [8] </ref>, and Blaney and Dixon [5].
Reference: [9] <author> A. R. Conn, N. I. M. Gould, and P. L. Toint, LANCELOT, </author> <title> Springer Series in Computational Mathematics, </title> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Algorithms and software that take advantage of partial separability have been developed for various problems (for example, <ref> [23, 24, 25, 26, 9] </ref>), but this software requires that the user provide the gradient of f and the partial separability structure (a list of the dependent variables for each element function f i ).
Reference: [10] <author> G. M. Crippen and T. F. </author> <title> Havel, Distance Geometry and Molecular Conformation, </title> <publisher> John Wiley & Sons, </publisher> <year> 1988. </year>
Reference-contexts: A standard formulation of the distance geometry problem (4.1), suggested by Crippen and Havel <ref> [10] </ref>, is to find the global minimum of the function f (x) = i;j2S where the pairwise function p i;j : IR n 7! IR is defined by p i;j (x) = min 2 kxk 2 l 2 l 2 ; 0 + max 2 kxk 2 u 2 u 2 <p> Several general approaches to the solution of global optimization problems could be used to solve distance geometry problems: multi start techniques, simulated annealing, and genetic algorithms. There are also specific techniques for distance geometry problems, in particular, the embed algorithm (see Crippen and Havel <ref> [10] </ref>, and Havel [17, 18]), and the dgsol algorithm of More and Wu [22]. We have designed the NEOS Server so that additional solvers can be installed easily, with little intervention by the Server administrators. Given a solver, the user is given an interface that is intuitive and simple.
Reference: [11] <author> J. Czyzyk, M. P. Mesnier, and J. J. Mor e, </author> <title> The Network-Enabled Optimization System (NEOS) Server, </title> <type> Preprint MCS-P615-0996, </type> <institution> Argonne National Laboratory, Ar-gonne, Illinois, </institution> <year> 1996. </year> <month> 14 </month>
Reference-contexts: Department of Energy, under Contract W-31-109-Eng-38, by a grant of Northwestern University to the Optimization Technology Center, and by the National Science Foundation, through the Center for Research on Parallel Computation, under Cooperative Agreement No. CCR-9120008. 1 The NEOS (Network-Enabled Optimization System) Server <ref> [11] </ref> is a novel environment for the solution of optimization problems that allows users to solve optimization problems over the Internet while requiring only that the user provide a specification of the problem. <p> In particular, we provide evidence that the NEOS Server is able to solve large nonlinear optimization problems in time comparable to software with hand-coded gradients. We do not discuss the design and implementation of the Server because these issues are covered by Czyzyk, Mesnier, and More <ref> [11] </ref>. In Section 4 we begin to explore possible extensions to the NEOS Server by discussing the addition of solvers for global optimization problems. Section 5 discusses how a remote procedure call (RPC) interface to NEOS addresses some of the limitations of NEOS in the areas of security and usability. <p> Each line of the configuration file specifies an entry in the submission form. The form in Figure 4.3, for example, requires only a three-line configuration file. For additional details on the registration process, see Czyzyk, Mesnier, and More <ref> [11] </ref>. The main difficulty that must be faced in extending the NEOS Server to global optimization problems is the scheduling of jobs.
Reference: [12] <author> M. C. Ferris, M. P. Mesnier, and J. J. Mor e, </author> <title> The NEOS Server for complemen-tarity problems: PATH, </title> <type> Technical Report 96-08, </type> <institution> University of Wisconsin, Madison, Wisconsin, </institution> <year> 1996. </year> <note> Also available as MCS-P616-1096, </note> <institution> Mathematics and Computer Science Division, Argonne National Laboratory. </institution>
Reference-contexts: NEOS is already using Condor to solve nonlinear complementarity problems (see Ferris, Mesnier and More <ref> [12] </ref>), so the transition to global optimization problems is feasible. Other research projects that are addressing the use of large-scale computing resources include Globus [13] and Legion [16]. The approach to solving global optimization problems with NEOS offers considerable 10 advantages.
Reference: [13] <author> I. Foster and C. Kesselman, Globus: </author> <title> A metacomputing infrastructure toolkit, </title> <journal> International Journal of Supercomputer Applications, </journal> <note> (1997). To appear. </note>
Reference-contexts: NEOS is already using Condor to solve nonlinear complementarity problems (see Ferris, Mesnier and More [12]), so the transition to global optimization problems is feasible. Other research projects that are addressing the use of large-scale computing resources include Globus <ref> [13] </ref> and Legion [16]. The approach to solving global optimization problems with NEOS offers considerable 10 advantages. Solving global optimization problems in a large-scale computing center would force the user to learn scheduling policies, job submission methods, and installation-specific software libraries.
Reference: [14] <author> J. Goodman, R. Kohn, and L. Reyna, </author> <title> Numerical study of a relaxed variational problem from optimal design, </title> <journal> Comput. Methods Appl. Mech. Engrg., </journal> <volume> 57 (1986), </volume> <pages> pp. 107-127. </pages>
Reference-contexts: At present, we rely on ADIFOR [4, 3] to process Fortran code and on ADOL-C [15] to process C code. We demonstrate the ability of NEOS to solve large-scale nonlinear optimization problems with an optimal design problem formulated by Goodman, Kohn, and Reyna <ref> [14] </ref>. This optimal design problem requires determining the placement of two elastic materials in the cross section of a rod with maximal torsional rigidity.
Reference: [15] <author> A. Griewank, D. Juedes, and J. Utke, ADOL-C: </author> <title> A package for the automatic differentiation of algorithms written in C/C++, </title> <journal> ACM Trans. Math. Software, </journal> <volume> 22 (1996), </volume> <pages> pp. 131-167. </pages>
Reference-contexts: The NEOS solvers for nonlinear optimization problems use automatic differentiation tools to compute the gradients, Jacobians, and sparsity patterns required by the solvers. At present, we rely on ADIFOR [4, 3] to process Fortran code and on ADOL-C <ref> [15] </ref> to process C code. We demonstrate the ability of NEOS to solve large-scale nonlinear optimization problems with an optimal design problem formulated by Goodman, Kohn, and Reyna [14].
Reference: [16] <author> A. Grinshaw and W. Wolf, </author> <title> Legion A view from 50,000 feet, </title> <booktitle> in Proceedings of the 5th IEEE Symposium on High Performance Distributed Computing, </booktitle> <address> Los Alamitos, California, 1996, </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 89-99. </pages>
Reference-contexts: NEOS is already using Condor to solve nonlinear complementarity problems (see Ferris, Mesnier and More [12]), so the transition to global optimization problems is feasible. Other research projects that are addressing the use of large-scale computing resources include Globus [13] and Legion <ref> [16] </ref>. The approach to solving global optimization problems with NEOS offers considerable 10 advantages. Solving global optimization problems in a large-scale computing center would force the user to learn scheduling policies, job submission methods, and installation-specific software libraries.
Reference: [17] <author> T. F. </author> <title> Havel, An evaluation of computational strategies for use in the determination of protein structure from distance geometry constraints obtained by nuclear magnetic resonance, </title> <journal> Prog. Biophys. Mol. Biol., </journal> <volume> 56 (1991), </volume> <pages> pp. </pages> <month> 43-78. </month> <title> [18] , Distance geometry, in Encyclopedia of Nuclear Magnetic Resonance, </title> <editor> D. M. Grant and R. K. Harris, eds., </editor> <publisher> John Wiley & Sons, </publisher> <year> 1995, </year> <pages> pp. 1701-1710. </pages>
Reference-contexts: Recent reviews of the application of distance geometry problems to protein structure determination can be found in Havel <ref> [17, 18] </ref>, Torda and van Gunsteren [27], Kuntz, Thomason, and Oshiro [19], Brunger and Nilges [8], and Blaney and Dixon [5]. <p> Several general approaches to the solution of global optimization problems could be used to solve distance geometry problems: multi start techniques, simulated annealing, and genetic algorithms. There are also specific techniques for distance geometry problems, in particular, the embed algorithm (see Crippen and Havel [10], and Havel <ref> [17, 18] </ref>), and the dgsol algorithm of More and Wu [22]. We have designed the NEOS Server so that additional solvers can be installed easily, with little intervention by the Server administrators. Given a solver, the user is given an interface that is intuitive and simple.
Reference: [19] <author> I. D. Kuntz, J. F. Thomason, and C. M. Oshiro, </author> <title> Distance geometry, in Methods in Enzymology, </title> <editor> N. J. Oppenheimer and T. L. James, eds., </editor> <volume> vol. 177, </volume> <publisher> Academic Press, </publisher> <year> 1993, </year> <pages> pp. 159-204. </pages>
Reference-contexts: Recent reviews of the application of distance geometry problems to protein structure determination can be found in Havel [17, 18], Torda and van Gunsteren [27], Kuntz, Thomason, and Oshiro <ref> [19] </ref>, Brunger and Nilges [8], and Blaney and Dixon [5].
Reference: [20] <author> M. J. Litzkow, M. Livny, and M. W. </author> <title> Mutka, Condor A hunter of idle workstations, </title> <booktitle> in Proceedings of the 8th International Conference on Distributed Computing Systems, </booktitle> <address> Washington, District of Columbia, 1988, </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 108-111. </pages>
Reference-contexts: The main difficulty that must be faced in extending the NEOS Server to global optimization problems is the scheduling of jobs. With the current design, jobs are allocated sequentially to the first available machine, but we could use Condor <ref> [20] </ref>, a distributed resource management system developed at the University of Wisconsin, to schedule jobs on heterogeneous clusters of workstations. NEOS is already using Condor to solve nonlinear complementarity problems (see Ferris, Mesnier and More [12]), so the transition to global optimization problems is feasible.
Reference: [21] <author> J. J. Mor e and Z. Wu, </author> <title> "-optimal solutions to distance geometry problems via global continuation, in Global Minimization of Nonconvex Energy Functions: Molecular Conformation and Protein Folding, </title> <editor> P. M. Pardalos, D. Shalloway, and G. Xue, eds., </editor> <publisher> American Mathematical Society, </publisher> <year> 1995, </year> <pages> pp. </pages> <month> 151-168. </month> <title> [22] , Distance geometry optimization for protein structures, </title> <type> Preprint MCS-P628-1296, </type> <institution> Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1996. </year> <month> 15 </month>
Reference-contexts: Moreover, in our experience, even problems with a small number of atoms can be quite difficult. See More and Wu <ref> [21, 22] </ref> for additional information. Several general approaches to the solution of global optimization problems could be used to solve distance geometry problems: multi start techniques, simulated annealing, and genetic algorithms.
Reference: [23] <author> P. L. Toint, </author> <title> Numerical solution of large sets of algebraic nonlinear equations, </title> <journal> Math. Comp., </journal> <volume> 46 (1986), </volume> <pages> pp. </pages> <month> 175-189. </month> <title> [24] , On large scale nonlinear least squares calculations, </title> <journal> SIAM J. Sci. Statist. Comput., </journal> <volume> 8 (1987), </volume> <pages> pp. 416-435. </pages>
Reference-contexts: Algorithms and software that take advantage of partial separability have been developed for various problems (for example, <ref> [23, 24, 25, 26, 9] </ref>), but this software requires that the user provide the gradient of f and the partial separability structure (a list of the dependent variables for each element function f i ).
Reference: [25] <author> P. L. Toint and D. Tuyttens, </author> <title> On large-scale nonlinear network optimization, </title> <journal> Math. Programming, </journal> <volume> 48 (1990), </volume> <pages> pp. 125-159. </pages> <month> [26] , LSNNO: </month> <title> A Fortran subroutine for solving large-scale nonlinear network optimization problems, </title> <journal> ACM Trans. Math. Software, </journal> <volume> 18 (1992), </volume> <pages> pp. 308-328. </pages>
Reference-contexts: Algorithms and software that take advantage of partial separability have been developed for various problems (for example, <ref> [23, 24, 25, 26, 9] </ref>), but this software requires that the user provide the gradient of f and the partial separability structure (a list of the dependent variables for each element function f i ).
Reference: [27] <author> A. E. Torda and W. F. van Gunsteren, </author> <title> Molecular modeling using nuclear magnetic resonance data, in Reviews in Computational Chemistry, </title> <editor> K. B. Lipkowitz and D. B. Boyd, eds., </editor> <volume> vol. 3, </volume> <publisher> VCH Publishers, </publisher> <year> 1992, </year> <pages> pp. 143-172. </pages>
Reference-contexts: Recent reviews of the application of distance geometry problems to protein structure determination can be found in Havel [17, 18], Torda and van Gunsteren <ref> [27] </ref>, Kuntz, Thomason, and Oshiro [19], Brunger and Nilges [8], and Blaney and Dixon [5].
Reference: [28] <author> L. Wall, T. Christiansen, and R. L. Schwartz, </author> <title> Programming Perl, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <editor> second ed., </editor> <year> 1996. </year> <month> 16 </month>
Reference-contexts: Once this tool is installed, the user has access to all the services provided by the NEOS Server. Users may download the Submission tool from the URL http://www.mcs.anl.gov/otc/Server/submission tool.html/ Installation of the Submission tool is immediate provided that Perl <ref> [28] </ref> has been installed properly. If the installation fails, the usual remedy is to run the Perl h2ph script that changes C header files into Perl header files. Running the h2ph script is simple but must be done by the installer of Perl, which is usually the system administrator.
References-found: 24

