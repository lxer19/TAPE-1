URL: ftp://rtcl.eecs.umich.edu/outgoing/ccsu/ieeetc94.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/routing/
Root-URL: http://www.cs.umich.edu
Email: fccsu,kgshing@eecs.umich.edu  
Title: Adaptive Fault-Tolerant Deadlock-Free Routing in Meshes and Hypercubes  
Author: Chien-Chun Su and Kang G. Shin 
Keyword: Index Terms Wormhole routing, adaptive deadlock-free routing, fault-tolerant routing, hyper-cubes and meshes, k-ary n-cubes.  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: We present an adaptive deadlock-free routing algorithm which decomposes a given network into two virtual interconnection networks, V IN 1 and V IN 2 . V IN 1 supports deterministic deadlock-free routing, and V IN 2 supports fully-adaptive routing. Whenever a channel in V IN 1 or V IN 2 is available, it can be used to route a message. Each node is identified to be in one of three states: safe, unsafe, and faulty. The unsafe state is used for deadlock-free routing, and an unsafe node can still send and receive messages. When nodes become faulty/unsafe, some channels in V IN 2 around the faulty/unsafe nodes are used as the detours of those channels in V IN 1 passing through the faulty/unsafe nodes, i.e., the adaptability in V IN 2 is transformed to support fault-tolerant deadlock-free routing. Using information on the state of each node's neighbors, we have developed an adaptive fault-tolerant deadlock-free routing scheme for n-dimensional meshes and hypercubes with only two virtual channels. In an n-dimensional hypercube, any pattern of faulty nodes can be tolerated as long as the number of faulty nodes is no more than dn=2e. The maximum number of faulty nodes that can be tolerated is 2 n1 , which occurs when all faulty nodes can be encompassed in an (n 1)-cube. In an n-dimensional mesh, we use a more general fault model, called a disconnected rectangular block . Any arbitrary pattern of faulty nodes can be modeled as a rectangular block after finding both unsafe and disabled nodes (which are then treated as faulty nodes). This concept can also be applied to k-ary n-cubes with four virtual channels, two in V IN 1 and the other two in V IN 2 . Finally, we present simulation results for both hypercubes and 2-dimensional meshes by using a variety of workloads and fault patterns. The work reported in this paper was supported in part by the National Science Foundation under Grant MIP-9203895 and the Office of Naval Research under Grants N00014-J-92-1080 and N00014-J-91-1115. The opinions, findings, and recommendations expressed in this paper are those of the authors, and do not necessarily reflect the views of the funding agencies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.-S. Chen and K. G. Shin, </author> <title> "Adaptive fault-tolerant routing in hypercube multicomputers," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 39, no. 12, </volume> <pages> pp. 1406-1416, </pages> <month> Dec. </month> <year> 1990. </year> <month> 32 </month>
Reference-contexts: The paper concludes with Section 6. 2 Related Work Numerous routing algorithms in multicomputers have been proposed in recent years. Some of them consider adaptability and fault-tolerance in routing messages without considering deadlock freedom <ref> [1, 2] </ref>. However, deadlock freedom is an important design issue for multicomputer systems, so we will focus on deadlock-free routing algorithms. Dally and Seitz [8] proposed the concept of virtual channel to develop deadlock-free routing algorithms.
Reference: [2] <author> M.-S. Chen and K. G. Shin, </author> <title> "Depth-first search approach for fault-tolerant routing in hypercube mul--ticomputers," </title> <journal> IEEE Trans. on Computers, </journal> <pages> pp. 152-159, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: The paper concludes with Section 6. 2 Related Work Numerous routing algorithms in multicomputers have been proposed in recent years. Some of them consider adaptability and fault-tolerance in routing messages without considering deadlock freedom <ref> [1, 2] </ref>. However, deadlock freedom is an important design issue for multicomputer systems, so we will focus on deadlock-free routing algorithms. Dally and Seitz [8] proposed the concept of virtual channel to develop deadlock-free routing algorithms.
Reference: [3] <author> A. A. Chien and J. H. Kim, </author> <title> "Planar-adaptive routing: Low-cost adaptive networks for multiprocessors," </title> <booktitle> in 19th Annual International Symposium on Computer Architecture, </booktitle> <pages> pp. 268-277, </pages> <year> 1992. </year>
Reference-contexts: The authors of [17] modified the routing algorithm of this turn model to make it (n 1) fault-tolerant for n-dimensional meshes. However, for 4 or higher dimensional meshes, it is only an assertion or conjecture, i.e., its validity remains to be proved. Chien and Kim <ref> [3] </ref> proposed a planar-adaptive routing algorithm which limits the routing freedom to two dimensions at a time. The reduced freedom makes it possible to prevent deadlocks with only a fixed number of virtual channels, independent of network dimension. <p> However, if this channel is connected to a faulty node or runs over a faulty link, then it won't be available, which may in turn lead to a deadlock. One can solve this problem by using adaptive routing in V IN 1 , such as planar routing <ref> [3] </ref>, enabling each message to request at least two channels in different dimensions so that it can avoid the faulty link/node. However, this method requires more virtual channels than necessary for fully-adaptive routing.
Reference: [4] <author> W. Chou, A. W. Bragg, and A. A. Nilsson, </author> <title> "The need for adaptive routing in the chaotic and unbalanced traffic environment," </title> <journal> IEEE Trans. on Communications, </journal> <pages> pp. 481-490, </pages> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: Most commercial multicomputers use deterministic routing because of its deadlock freedom and ease of implementation. However, adaptive routing can reduce network latency and increase network throughput <ref> [4] </ref>. It can also tolerate more faults than deterministic routing. But, the flexibility of adaptive routing may cause deadlock and/or livelock problems. A deadlock occurs when a message waits for an event that will never happen. In contrast, a livelock keeps a message moving indefinitely without reaching the destination.
Reference: [5] <author> W. J. Dally and H. Aoki, </author> <title> "Deadlock-free adaptive routing in multicomputer networks using virtual channels," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <pages> pp. 466-475, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: The theorem states that by separating virtual channels on a physical link into restricted and unrestricted partitions, fully-adaptive deadlock-free routing can be achieved. Dally and Aoki <ref> [5] </ref> proposed a dynamic deadlock-free routing algorithm which also divides the virtual channels of each physical channel into two non-empty classes: adaptive and deterministic. Messages originate from adaptive channels.
Reference: [6] <author> W. J. Dally, </author> <title> "The message-driven processor: a multicomputer processing node with efficient mechanisms," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 23-39, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: The advance of VLSI technology has enabled the computation and communication parts in a node to be integrated into a single VLSI chip, as was done in iWarp [28], Transputer [29], Ncube and MDP <ref> [6] </ref>. For a simpler processor node such as CM-2 [31], even more processors can be integrated into a single chip. This situation makes 2 the node fault model reasonable. In our fault-tolerance scheme, each node needs to be marked as being in one of three states: safe, unsafe, and faulty.
Reference: [7] <author> W. J. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: In contrast, a livelock keeps a message moving indefinitely without reaching the destination. Four types of switching methods for sending or receiving messages are used in distributed-memory multicomputer systems: store-and-forward [18], circuit switching, virtual cut-through [19], and wormhole routing <ref> [7] </ref>. The store-and-forward and circuit switching methods were used in the first-generation multicomputer systems, such as the Intel iPSC [27]. Contemporary multicomputers use wormhole routing due mainly to its high transmission efficiency and reduced buffer size requirements [26, 33].
Reference: [8] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Some of them consider adaptability and fault-tolerance in routing messages without considering deadlock freedom [1, 2]. However, deadlock freedom is an important design issue for multicomputer systems, so we will focus on deadlock-free routing algorithms. Dally and Seitz <ref> [8] </ref> proposed the concept of virtual channel to develop deadlock-free routing algorithms. Virtual channels are time-multiplexed over a single physical link, so one separate queue must be maintained in a node for each virtual channel. <p> Virtual channels are time-multiplexed over a single physical link, so one separate queue must be maintained in a node for each virtual channel. Virtual channels are also used to remove the cycles in the channel-dependency graph (CDG), providing deadlock-freedom during message transmission. But the algorithms in <ref> [8] </ref> are deterministic and hence cannot handle component failures in the selected path. Linder and Harden [24] extended the concept of virtual channel to multiple, virtual interconnection networks that provide adaptability, deadlock-freedom, and fault-tolerance. <p> Similar to the n-dimensional mesh case, we first have to find the faulty block using the disconnected rectangular block model. Since deterministic routing for k-ary n-cubes needs two virtual channels <ref> [8] </ref> (one is the high channel and the other is the low channel), adaptive routing requires three virtual channels according to Algorithm 3.1. Considering fault-tolerant routing, both high and low channels in V IN 1 need to find the detour in V IN 2 to use.
Reference: [9] <author> J. Duato, </author> <title> "On the design of deadlock-free adaptive routing algorithms for multicomputers: </title> <booktitle> Design methodologies," in Proc. Parallel Architectures and Languages Europe, </booktitle> <pages> pp. 391-405, </pages> <month> June </month> <year> 1991. </year>
Reference: [10] <author> J. Duato, </author> <title> "On the design of deadlock-free adaptive routing algorithms for multicomputers: </title> <booktitle> Theoretical aspects," in Proc. 2nd European Distributed Memory Computing Conf., </booktitle> <pages> pp. 234-243, </pages> <month> April </month> <year> 1991. </year>
Reference: [11] <author> J. Duato, </author> <title> "Improving the efficiency of virtual channels with time-dependent selection functions," </title> <booktitle> in Proc. Parallel Architectures and Languages Europe, </booktitle> <pages> pp. 635-650, </pages> <month> June </month> <year> 1992. </year>
Reference: [12] <author> J. Duato, </author> <title> "A new theory of deadlock-free adaptive routing in wormhole networks," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <pages> pp. 1320-1331, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: The bisection bandwidth B is equal to 2 n and 2n for n-cubes and n fi n meshes, respectively. In what follows, we present the simulation results for 8-cubes and 16 fi 16 meshes for a variety of workloads and fault patterns. Duato <ref> [12] </ref> has shown that the adaptive routing algorithm for hypercubes scales well with network size. Due to the limit of space, we don't consider the scalability issue. 5.1 Simulation results for hypercubes Figs. 14 and 13 plot the latency and throughput, respectively, for different workloads and fault patterns for 8-cubes. <p> The message latency is from 24 flit cycles to 75 flit cycles before saturation. We found the curve 10 in Fig. 14 to have a similar shape to the simulation results in <ref> [12] </ref> for the adaptive routing algorithm with 2 virtual channels, confirming the 5 traffic density = (average message length)/(average message inter-arrival time fi flit number that can be transmitted per cycle) 6 s is the value of at which the network becomes saturated. 28 correctness of our simulation results.
Reference: [13] <author> P. T. Gaughan and S. Yalamanchili, </author> <title> "Pipelined circuit-switching: A fault-tolerant variant of wormhole routing," </title> <booktitle> in Proc. of the IEEE Symp. on Parallel and Distributed Processing, </booktitle> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Actually, their method relies on a stronger constraint than Duato's algorithm. Lin et al: [23] proposed a message flow model in wormhole-routed networks, and applied it to develop adaptive routing algorithms. Any routing algorithm under this message flow model can be guaranteed to have deadlock-freedom. In <ref> [13, 30] </ref>, Gaughan and Yalamanchili proposed a misrouting backtracking protocol under packet circuit switching (PCS), a variant of wormhole routing. This protocol is deadlock-free and can tolerate up to 2n 1 physical link failures in k-ary n-cubes.
Reference: [14] <author> C. Glass and L. Ni, </author> <title> "Maximally fully adaptive routing in 2d meshes," </title> <booktitle> in Proc. of the 1992 International Conference on Parallel Processing, </booktitle> <pages> pp. </pages> <address> I101-104, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: However, it may result in a livelock. One way to avoid the livelock is that the number of misrouting hops along each dimension cannot be greater than a fixed number, but the head flit should use more bits to carry this information. Dally [32] and Glass and Ni <ref> [14] </ref> mentioned the fully-adaptive routing in 2D meshes by using only one extra channel in either dimension. In our algorithm, if we don't use any free channel in dimension 0, the minimal fully-adaptive routing can still be supported. <p> Dimension 0 is always the lowest dimension for any source-destination pair, so free channels in dimension 0 are not necessary for supporting minimal fully-adaptive routing. The number of virtual channels required for 2D meshes is therefore the same as the algorithms in <ref> [14, 32] </ref>. However, for notational convenience, we still use two virtual channels over a physical link in each dimension. Note that the current VLSI technology allows for more than two virtual channels per channel in such lower dimension topologies as 2-dimensional meshes.
Reference: [15] <author> C. J. Glass and L. M. Ni, </author> <title> "Adaptive routing in mesh-connected networks," </title> <booktitle> in Proc. of the 1992 International Conference on Distributed Computing Systems, </booktitle> <pages> pp. 12-19, </pages> <year> 1992. </year>
Reference-contexts: The chief disadvantage of this method is the requirement of many virtual channels, 1 e.g., a k-ary n-cube needs 2 n1 (n + 1) virtual channels. 1 In general, its number is an exponential function of the network dimension. 3 Glass and Ni <ref> [15, 16] </ref> proposed partially-adaptive routing algorithms for n-dimensional meshes and k-ary n-cubes without adding any physical or virtual channels. They first investigated the possible deadlock cycles on 2D- and 3D- meshes, then proposed some prohibited turns of these cycles to prevent deadlocks.
Reference: [16] <author> C. J. Glass and L. M. Ni, </author> <title> "The turn model for adaptive routing," </title> <booktitle> in Proc of the 1992 International Symposium on Computer Architecture, </booktitle> <pages> pp. 278-287, </pages> <year> 1992. </year>
Reference-contexts: The chief disadvantage of this method is the requirement of many virtual channels, 1 e.g., a k-ary n-cube needs 2 n1 (n + 1) virtual channels. 1 In general, its number is an exponential function of the network dimension. 3 Glass and Ni <ref> [15, 16] </ref> proposed partially-adaptive routing algorithms for n-dimensional meshes and k-ary n-cubes without adding any physical or virtual channels. They first investigated the possible deadlock cycles on 2D- and 3D- meshes, then proposed some prohibited turns of these cycles to prevent deadlocks.
Reference: [17] <author> C. J. Glass and L. M. Ni, </author> <title> "Fault-tolerant wormhole routing in meshes," </title> <booktitle> in Proc. of IEEE 23th Int'l Symposium on Fault-Tolerant Computing, </booktitle> <pages> pp. 240-249, </pages> <year> 1993. </year>
Reference-contexts: However, if minimal routing is required, then at least one half of source-destination pairs will have only a single routing path from the source to destination. Because this algorithm cannot always route messages along shortest paths in the network, it is called partially-adaptive routing. The authors of <ref> [17] </ref> modified the routing algorithm of this turn model to make it (n 1) fault-tolerant for n-dimensional meshes. However, for 4 or higher dimensional meshes, it is only an assertion or conjecture, i.e., its validity remains to be proved. <p> The fault on each outgoing link can be treated as a corresponding node fault. There are two fault types for supporting fault-tolerant routing: dynamic and static faults <ref> [17] </ref>. For a system to tolerate dynamic faults, nodes may become faulty or nonfaulty at any time. By contrast, the static case lets faults occur only when the network is shut down. Tolerating dynamic faults can enhance the run-time life of a multicomputer, thus increasing reliability.
Reference: [18] <author> I. S. Gopal, </author> <title> "Prevention of store-and-forward deadlock in computer networks," </title> <journal> IEEE Trans. on Communications, </journal> <pages> pp. 1258-1264, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: A deadlock occurs when a message waits for an event that will never happen. In contrast, a livelock keeps a message moving indefinitely without reaching the destination. Four types of switching methods for sending or receiving messages are used in distributed-memory multicomputer systems: store-and-forward <ref> [18] </ref>, circuit switching, virtual cut-through [19], and wormhole routing [7]. The store-and-forward and circuit switching methods were used in the first-generation multicomputer systems, such as the Intel iPSC [27]. Contemporary multicomputers use wormhole routing due mainly to its high transmission efficiency and reduced buffer size requirements [26, 33]. <p> In [22], Lee and Hayes proposed a fault-tolerant deadlock-free routing scheme for n-dimensional hypercubes, but it requires (n + 1) virtual channels. It is basically derived from the hop-count method <ref> [18] </ref> used in packet-switched networks. The authors of [20] proposed a deadlock-free fault-tolerant routing scheme for hypercubes. This scheme does not require additional virtual channel, nor supports adaptive routing. The adaptive deadlock-free routing we propose in this paper also decomposes the network into 4 two virtual interconnection networks. <p> At the end of this section, we will mention how to develop a non-minimal deadlock-free routing algorithm for n-dimensional meshes. Although we don't consider the store-and-forward switching scheme, Algorithm 3.1 can also be applied to packet-switched networks. In packet-switched networks <ref> [18] </ref>, the resources in the channel-dependency graph are replaced by packet buffers, and thus, if A1|A4 are satisfied, we need two packet buffers on each node to support adaptive routing. Now, we would like to apply Algorithm 3.1 to n-dimensional meshes.
Reference: [19] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, </volume> <pages> pp. 267-286, </pages> <month> Sep. </month> <year> 1979. </year>
Reference-contexts: A deadlock occurs when a message waits for an event that will never happen. In contrast, a livelock keeps a message moving indefinitely without reaching the destination. Four types of switching methods for sending or receiving messages are used in distributed-memory multicomputer systems: store-and-forward [18], circuit switching, virtual cut-through <ref> [19] </ref>, and wormhole routing [7]. The store-and-forward and circuit switching methods were used in the first-generation multicomputer systems, such as the Intel iPSC [27]. Contemporary multicomputers use wormhole routing due mainly to its high transmission efficiency and reduced buffer size requirements [26, 33].
Reference: [20] <author> J. Kim and K. G. Shin, </author> <title> "Deadlock-free fault-tolerant routing in injured hypercubes," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 42, no. 9, </volume> <pages> pp. 1078-1088, </pages> <month> Sep. </month> <year> 1993. </year>
Reference-contexts: In [22], Lee and Hayes proposed a fault-tolerant deadlock-free routing scheme for n-dimensional hypercubes, but it requires (n + 1) virtual channels. It is basically derived from the hop-count method [18] used in packet-switched networks. The authors of <ref> [20] </ref> proposed a deadlock-free fault-tolerant routing scheme for hypercubes. This scheme does not require additional virtual channel, nor supports adaptive routing. The adaptive deadlock-free routing we propose in this paper also decomposes the network into 4 two virtual interconnection networks.
Reference: [21] <author> T. C. Lee and J. P. Hayes, </author> <title> "Routing and broadcasting in faulty hypercube computers," </title> <booktitle> in Proc. 3rd Conf. Hypercube Concurrent Comput. and Appl., </booktitle> <pages> pp. 346-354, </pages> <month> Jan. </month> <year> 1988. </year>
Reference-contexts: Definition 1: A "good" node connected to two or more faulty/unsafe nodes is called an "unsafe" node; otherwise, it is called a "safe" node. Before running user programs on the machine, the operating system on each node should determine the state of its neighbors. The authors of <ref> [21] </ref> developed a distributed algorithm of communication complexity O (n 3 ) to identify all unsafe nodes in an n-cube. Each faulty/unsafe node belongs to a corresponding binary subcube, called an unsafe binary subcube, which is formed by faulty and/or unsafe nodes. <p> By contrast, our proposed algorithm requires only two virtual channels, and moreover, it provides partial adaptability when nodes became faulty. The number of faulty nodes that can be tolerated and the maximum message path needed are the same as those of the algorithm in <ref> [21, 22] </ref>.
Reference: [22] <author> T. C. Lee and J. P. Hayes, </author> <title> "A fault-tolerant communication scheme for hypercube computers," </title> <journal> IEEE Trans. on Computers, </journal> <pages> pp. 1242-1256, </pages> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: This protocol is deadlock-free and can tolerate up to 2n 1 physical link failures in k-ary n-cubes. Like traditional circuit switching, PCS needs to set up a path before transmitting messages, and hence, the path setup overhead is relatively high for small-size messages. In <ref> [22] </ref>, Lee and Hayes proposed a fault-tolerant deadlock-free routing scheme for n-dimensional hypercubes, but it requires (n + 1) virtual channels. It is basically derived from the hop-count method [18] used in packet-switched networks. The authors of [20] proposed a deadlock-free fault-tolerant routing scheme for hypercubes. <p> Due to the limit of space, we discuss briefly the adaptive fault-tolerant deadlock-free routing for k-ary n-cubes. 2 To be defined later in Definition 1. 10 4.1 Hypercubes Fault model for hypercubes: We use unsafe binary subcubes to model node faults in hyper-cubes <ref> [22] </ref>. Each node is in one of three states: safe, unsafe, and faulty. The unsafe nodes [22] are used to facilitate deadlock-free routing. A node marked as safe or unsafe can still transmit or receive messages. <p> the adaptive fault-tolerant deadlock-free routing for k-ary n-cubes. 2 To be defined later in Definition 1. 10 4.1 Hypercubes Fault model for hypercubes: We use unsafe binary subcubes to model node faults in hyper-cubes <ref> [22] </ref>. Each node is in one of three states: safe, unsafe, and faulty. The unsafe nodes [22] are used to facilitate deadlock-free routing. A node marked as safe or unsafe can still transmit or receive messages. Definition 1: A "good" node connected to two or more faulty/unsafe nodes is called an "unsafe" node; otherwise, it is called a "safe" node. <p> If the number of faulty nodes is no more than dn=2e, then the message can be routed to its destination via a path of length no greater than the minimal path length plus two <ref> [22] </ref>. However, if we consider deadlock-freedom, this algorithm needs n + 1 virtual channels. By contrast, our proposed algorithm requires only two virtual channels, and moreover, it provides partial adaptability when nodes became faulty. <p> By contrast, our proposed algorithm requires only two virtual channels, and moreover, it provides partial adaptability when nodes became faulty. The number of faulty nodes that can be tolerated and the maximum message path needed are the same as those of the algorithm in <ref> [21, 22] </ref>. <p> Based on the concept of unsafe binary subcube, if V C f (R;1);1 in a safe node is connected to a faulty/unsafe node, then V C f (R;2);2 would be connected to a safe node because a safe node is connected to at most one unsafe/faulty node <ref> [22] </ref>. If only one more hop is required to reach the destination, then the message requests V C f (R;1);1 or V C f (R;2);2 , regardless whether they are connected to an unsafe node or not. <p> First, the message must leave the unsafe subcube. Based on the fault model of unsafe binary subcubes, the message can always find a channel connected to a safe node if the faulty node is no more than dn=2e <ref> [22] </ref>. This channel is assigned the smallest channel number, 1, and is always used for the first hop. After taking this hop, the message will be routed from a safe node to a safe node as described in Case 1.
Reference: [23] <author> X. Lin, P. K. McKinley, and L. M. Li, </author> <title> "The message flow model for routing in wormhole-routed networks," </title> <booktitle> in Proc. of Int. Conf. on Parallel Processing, </booktitle> <volume> vol. 1, </volume> <pages> pp. </pages> <address> I294-I297, </address> <month> Aug. </month> <year> 1993. </year> <month> 33 </month>
Reference-contexts: Messages originate from adaptive channels. Once a message is on a deterministic channel, the message must be routed in dimension order and cannot re-enter any adaptive channel. Actually, their method relies on a stronger constraint than Duato's algorithm. Lin et al: <ref> [23] </ref> proposed a message flow model in wormhole-routed networks, and applied it to develop adaptive routing algorithms. Any routing algorithm under this message flow model can be guaranteed to have deadlock-freedom.
Reference: [24] <author> D. H. Linder and J. C. Harden, </author> <title> "An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 40, no. 1, </volume> <pages> pp. 2-12, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: Virtual channels are also used to remove the cycles in the channel-dependency graph (CDG), providing deadlock-freedom during message transmission. But the algorithms in [8] are deterministic and hence cannot handle component failures in the selected path. Linder and Harden <ref> [24] </ref> extended the concept of virtual channel to multiple, virtual interconnection networks that provide adaptability, deadlock-freedom, and fault-tolerance. Each link is shared by many virtual channels, and the number of virtual channels used depends on how many virtual networks are needed.
Reference: [25] <author> T. D. Nguyen and L. Snyder, </author> <title> "Performance of a minimal adaptive router," </title> <booktitle> in Proc. of Parallel Computer Routing and Communication Workshop, </booktitle> <address> Seattle, Washington, </address> <pages> pp. 31-44, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Many different units have been used to express performance measures, including flits injected/cycle, flits/ns, bits/cycle, normalized bandwidth, etc. As a result, one has to convert units if he wants to compare one result with others. So, we use normalized bandwidth; this representation of simulation results was proposed by Synder <ref> [25] </ref>. Normalized bandwidth simply expresses the load or throughput as a fraction of the bisection bandwidth limited by the maximum bandwidth of the network under uniform random traffic.
Reference: [26] <author> L. M. Ni and P. K. McKinley, </author> <title> "A survey of wormhole routing techniques in direct networks," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 62-76, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: The store-and-forward and circuit switching methods were used in the first-generation multicomputer systems, such as the Intel iPSC [27]. Contemporary multicomputers use wormhole routing due mainly to its high transmission efficiency and reduced buffer size requirements <ref> [26, 33] </ref>. All the algorithms described in this paper are thus based on wormhole routing. In wormhole-routed multicomputers, a message contains one or more flow-control digits (flits). The first flit of a message (head flit) builds the transmission path between the source and destination.
Reference: [27] <author> D. Reed and R. Fujimoto, </author> <title> editors, Multicomputer Network: Message-Based Parallel Processing, </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass, </address> <year> 1987. </year>
Reference-contexts: Four types of switching methods for sending or receiving messages are used in distributed-memory multicomputer systems: store-and-forward [18], circuit switching, virtual cut-through [19], and wormhole routing [7]. The store-and-forward and circuit switching methods were used in the first-generation multicomputer systems, such as the Intel iPSC <ref> [27] </ref>. Contemporary multicomputers use wormhole routing due mainly to its high transmission efficiency and reduced buffer size requirements [26, 33]. All the algorithms described in this paper are thus based on wormhole routing. In wormhole-routed multicomputers, a message contains one or more flow-control digits (flits).
Reference: [28] <author> J. Sutton, P. Wiley, and C. Peterson, </author> <title> "iWarp: a 100-MOPS, LIW microprocessor for multicomputers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 26-29, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: A node fault is assumed to be the basic fault element in order to deal with fault-tolerance. The advance of VLSI technology has enabled the computation and communication parts in a node to be integrated into a single VLSI chip, as was done in iWarp <ref> [28] </ref>, Transputer [29], Ncube and MDP [6]. For a simpler processor node such as CM-2 [31], even more processors can be integrated into a single chip. This situation makes 2 the node fault model reasonable.
Reference: [29] <author> D. Talia, </author> <title> "Message-routing systems for transputer-based multicomputers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 62-72, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: A node fault is assumed to be the basic fault element in order to deal with fault-tolerance. The advance of VLSI technology has enabled the computation and communication parts in a node to be integrated into a single VLSI chip, as was done in iWarp [28], Transputer <ref> [29] </ref>, Ncube and MDP [6]. For a simpler processor node such as CM-2 [31], even more processors can be integrated into a single chip. This situation makes 2 the node fault model reasonable.
Reference: [30] <author> P. T.Gaughan and S. Yalamanchili, </author> <title> "A family of fault-tolerant routing protocols for direct multiprocessor networks," </title> <note> to appear in IEEE Trans. on Parallel and Distributed Systems, </note> <year> 1994. </year>
Reference-contexts: Actually, their method relies on a stronger constraint than Duato's algorithm. Lin et al: [23] proposed a message flow model in wormhole-routed networks, and applied it to develop adaptive routing algorithms. Any routing algorithm under this message flow model can be guaranteed to have deadlock-freedom. In <ref> [13, 30] </ref>, Gaughan and Yalamanchili proposed a misrouting backtracking protocol under packet circuit switching (PCS), a variant of wormhole routing. This protocol is deadlock-free and can tolerate up to 2n 1 physical link failures in k-ary n-cubes.
Reference: [31] <author> W.D.Hillis, </author> <title> The Connection Machine, </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass, </address> <year> 1985. </year>
Reference-contexts: The advance of VLSI technology has enabled the computation and communication parts in a node to be integrated into a single VLSI chip, as was done in iWarp [28], Transputer [29], Ncube and MDP [6]. For a simpler processor node such as CM-2 <ref> [31] </ref>, even more processors can be integrated into a single chip. This situation makes 2 the node fault model reasonable. In our fault-tolerance scheme, each node needs to be marked as being in one of three states: safe, unsafe, and faulty. The unsafe state is used to facilitate deadlock-free routing.
Reference: [32] <author> W.J.Dally, </author> <title> "Fine-grain message passing concurrent computers," </title> <booktitle> in the Proc. of the Third Conference on Hypercube Concurrent Computers, </booktitle> <pages> pp. 2-12, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: However, it may result in a livelock. One way to avoid the livelock is that the number of misrouting hops along each dimension cannot be greater than a fixed number, but the head flit should use more bits to carry this information. Dally <ref> [32] </ref> and Glass and Ni [14] mentioned the fully-adaptive routing in 2D meshes by using only one extra channel in either dimension. In our algorithm, if we don't use any free channel in dimension 0, the minimal fully-adaptive routing can still be supported. <p> Dimension 0 is always the lowest dimension for any source-destination pair, so free channels in dimension 0 are not necessary for supporting minimal fully-adaptive routing. The number of virtual channels required for 2D meshes is therefore the same as the algorithms in <ref> [14, 32] </ref>. However, for notational convenience, we still use two virtual channels over a physical link in each dimension. Note that the current VLSI technology allows for more than two virtual channels per channel in such lower dimension topologies as 2-dimensional meshes.

References-found: 32

