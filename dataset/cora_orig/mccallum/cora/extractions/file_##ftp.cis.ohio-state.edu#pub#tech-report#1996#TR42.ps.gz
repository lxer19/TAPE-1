URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1996/TR42.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: email: (mostafa,singhal)@cis.ohio-state.edu  
Phone: Phone: 614-292-5839 Fax: 614-292-2991  
Title: RMSP: A Reliable Multicast Session Protocol for Collaborative Continuous-Feed Applications  
Author: Walid Mostafa Mukesh Singhal 
Address: Columbus, OH 43210  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: This report presents a portable reliable multicast session protocol for collaborative continuous-feed applications. The protocol supports NxN group multicast communications at the session layer and runs on the top of existing reliable transport protocols (e.g., TCP). It does not assume multicast support at the network layer. The protocol is portable as a network-layer-independent library that is suitable for both LAN and WAN environments. It multiplexes messages from different group members into transport packets to reduce the transport overhead per message. It requires only two transport-level connections per node, irrespective of the multicast group size, to reduce the overhead of acknowledgements and retransmis-sions per node. We compare the throughput of this protocol with the throughput of general sender-initiated and receiver-initiated reliable multicast transport protocols. Keywords: Reliable Multicast, Transport Protocols, Session Multiplexing, Group Communication, and Distributed Systems. 
Abstract-found: 1
Intro-found: 1
Reference: [ADKM92] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. "Transis: </author> <title> A Communication Sub-System for High Availability". </title> <booktitle> In 22nd Annual International Symposium on Fault-Tolerant Computing (FTCS), </booktitle> <month> July </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The continuous growth in applications that require communications among a group of nodes or processes has led to considerable interest in multicast communication. These applications span distributed computing environments (e.g., ISIS [Bir93] and Transis <ref> [ADKM92] </ref>), audio/video multicast (e.g., MBONE [Eri94]), and distributed whiteboards ([McC92]). The quality of service required by multicast applications vary.
Reference: [Bir93] <author> K. Birman. </author> <title> The process group approach to reliable distributed computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(12) </volume> <pages> 37-53, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: 1 Introduction The continuous growth in applications that require communications among a group of nodes or processes has led to considerable interest in multicast communication. These applications span distributed computing environments (e.g., ISIS <ref> [Bir93] </ref> and Transis [ADKM92]), audio/video multicast (e.g., MBONE [Eri94]), and distributed whiteboards ([McC92]). The quality of service required by multicast applications vary.
Reference: [Dee89] <author> S. Deering. </author> <title> Host extensions for ip multicasting. Internet Request for Comment (RFC 1112), </title> <month> August </month> <year> 1989. </year>
Reference-contexts: Summary and concluding remarks are presented in Section 6. 2 Background Existing reliable multicast transport protocols, e.g., [PSK94], address the issue of reliable delivery of packets at the transport level. They assume that the network layer provides an unreliable multicast datagram delivery service (e.g., IP multicast <ref> [Dee89] </ref>) for efficient use of the network bandwidth. Since the network layer is connectionless, these protocols have to maintain all multicast information, e.g., group membership and delivery trees, at the transport level, thus adding to its complexity.
Reference: [Eri94] <author> H. Eriksson. Mbone: </author> <title> The multicast backbone. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 54-60, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The continuous growth in applications that require communications among a group of nodes or processes has led to considerable interest in multicast communication. These applications span distributed computing environments (e.g., ISIS [Bir93] and Transis [ADKM92]), audio/video multicast (e.g., MBONE <ref> [Eri94] </ref>), and distributed whiteboards ([McC92]). The quality of service required by multicast applications vary.
Reference: [FJM + 95] <author> S. Floyd, V. Jacobson, S. McCanne, C. Liu, and L. Zhang. </author> <title> "A Reliable Multi-cast Framework for Light-weight Sessions and Application Level Framing". </title> <booktitle> In Proceedings of ACM SIGCOMM '95. ACM, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: In one variation, the multicast group is structured in a tree-like hierarchy where designated nodes in the subtrees are responsible for consolidating acknowl-edgements and processing local retransmission (e.g., [YGS95]). Another variation use restricted multicasting to localize the scope of NAKs and retransmissions (e.g., <ref> [FJM + 95] </ref>). A third variation uses log servers to process retransmission requests ([HSC95]). In 1xN communication models, one sender multicasts messages to N receivers. The 1xN connection throughput is limited by the minimum of the sender throughput and the receiver throughput.
Reference: [HSC95] <author> H. Holbrook, S. Singhal, and D. Cheriton. </author> <title> "Log-Based Receiver-Reliable Mul-ticast for Distributed Interactive Simulation". </title> <booktitle> In ACM SIGCOMM Conference. ACM, </booktitle> <month> August </month> <year> 1995. </year>
Reference: [Jac94] <author> Van Jacobson. </author> <title> Multimedia conferencing on the internet. </title> <booktitle> In SICGOMM 1994 Tutorial Notes. ACM, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: These applications span distributed computing environments (e.g., ISIS [Bir93] and Transis [ADKM92]), audio/video multicast (e.g., MBONE [Eri94]), and distributed whiteboards ([McC92]). The quality of service required by multicast applications vary. While some applications are sensitive to response time but may tolerate data loss (e.g., multimedia [SCFJ96] and video conferencing <ref> [Jac94] </ref>), other types of applications require reliable receipt of all data even if it means longer response time (e.g., software distribution and file transfers). In this report, we consider a class of applications that we call continuous-feed collaborative applications.
Reference: [LP96] <author> J. Lin and S. Paul. "RMTP: </author> <title> A Reliable Multicast Transport Protocol ". In INFOCOM `96 Conference. </title> <publisher> IEEE, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: Therefore, the maximum throughput supported by a node is (N 1) times more sensitive to receiver processing time than to sender processing time. Existing protocols provide an N xN connection by using N independent 1x (N 1) connections (e.g., <ref> [LP96] </ref>). Using this model, the NxN connection throughput of protocol N 1 of [PTK94] is higher than that of protocol N 2 although the latter has higher 1x (N 1) connection throughput. 3 Protocol Description RMSP goals are portability, scalability, and efficiency.
Reference: [McC92] <author> S. McCanne. </author> <title> A distributed whiteboard for network conferencing. </title> <note> DSG Working Paper, </note> <year> 1992. </year>
Reference: [PSK94] <author> S. Paul, K. Sabnani, and D. Kristol. </author> <title> Multicast transport protocols for high speed networks. </title> <booktitle> In Proceedings of International Conference on Network Protocols, </booktitle> <month> October </month> <year> 1994. </year> <month> 26 </month>
Reference-contexts: Section 3 describes the RMSP protocol. Section 4 presents a throughput analysis of RMSP. Section 3 5 provides a performance comparison between the throughput of the RMSP protocol and those of [PTK94]. Summary and concluding remarks are presented in Section 6. 2 Background Existing reliable multicast transport protocols, e.g., <ref> [PSK94] </ref>, address the issue of reliable delivery of packets at the transport level. They assume that the network layer provides an unreliable multicast datagram delivery service (e.g., IP multicast [Dee89]) for efficient use of the network bandwidth.
Reference: [PTK94] <author> S. Pingali, D. Towsley, and J.F. Kurose. </author> <title> "A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols". </title> <booktitle> In SIGMETRICS '94 Conference. ACM, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: These applications may run on public, enterprise, or private networks with different network layers. Our goal is to provide a high-throughput protocol for reliable N xN multicast communications. As network bandwidth is increasing at a faster pace than processing speed <ref> [PTK94] </ref>, protocol processing overhead at a node is expected to be a bottleneck. Therefore, a protocol must reduce the processing overhead at a node. Node processing overhead is influenced by what protocol layer multicasting and reliable delivery of messages are provided. <p> We also compute the maximum throughput of an N xN multicast connection. We then compare the NxN connection throughput of the RMSP protocol with those of the sender-initiated and receiver-initiated reliable multicast transport protocols of <ref> [PTK94] </ref>. Section 2 describes how existing protocols address multicast communications. Section 3 describes the RMSP protocol. Section 4 presents a throughput analysis of RMSP. Section 3 5 provides a performance comparison between the throughput of the RMSP protocol and those of [PTK94]. <p> the sender-initiated and receiver-initiated reliable multicast transport protocols of <ref> [PTK94] </ref>. Section 2 describes how existing protocols address multicast communications. Section 3 describes the RMSP protocol. Section 4 presents a throughput analysis of RMSP. Section 3 5 provides a performance comparison between the throughput of the RMSP protocol and those of [PTK94]. Summary and concluding remarks are presented in Section 6. 2 Background Existing reliable multicast transport protocols, e.g., [PSK94], address the issue of reliable delivery of packets at the transport level. <p> In 1xN communication models, one sender multicasts messages to N receivers. The 1xN connection throughput is limited by the minimum of the sender throughput and the receiver throughput. Pingali et al. compared one sender-initiated, A, and two receiver-initiated, N 1 and N 2 , reliable multicast transport protocols in <ref> [PTK94] </ref>. They showed that the sender processing time is higher than the receiver processing time for all three protocols and, therefore, the throughput of their 1xN connections are bound by the throughput of their 4 senders. <p> In order to improve the 1xN connection throughput, existing protocols attempt to improve the throughput of a sender by reducing its processing time per message. Such improvement may result in an increase in the processing time at a receiver. Pingali et al. <ref> [PTK94] </ref> showed that protocol N 2 yields higher throughput than protocol N 1 . This is because the throughput of a sender using the N 2 protocol is higher than that of a sender using the N 1 protocol (even though the reverse is true for receivers). <p> Existing protocols provide an N xN connection by using N independent 1x (N 1) connections (e.g., [LP96]). Using this model, the NxN connection throughput of protocol N 1 of <ref> [PTK94] </ref> is higher than that of protocol N 2 although the latter has higher 1x (N 1) connection throughput. 3 Protocol Description RMSP goals are portability, scalability, and efficiency. Portability is realized by providing RMSP as a network-layer-independent session-layer library that supports both LAN and WAN environments. <p> We include the processing time and throughput results derived by Pingali et al. <ref> [PTK94] </ref> for the generic sender-initiated and receiver-initiated reliable multicast transport protocols. We use notations similar to those used in [PTK94]. 4.1 Multicast Group Throughput We assume that the multicast group consists of N identical nodes. Each node generates traffic at rate of session messages. <p> We include the processing time and throughput results derived by Pingali et al. <ref> [PTK94] </ref> for the generic sender-initiated and receiver-initiated reliable multicast transport protocols. We use notations similar to those used in [PTK94]. 4.1 Multicast Group Throughput We assume that the multicast group consists of N identical nodes. Each node generates traffic at rate of session messages. Therefore, each node needs to multicast session messages successfully at a rate , and receive multicast session messages from other nodes at rate (N 1). <p> throughput per session per node, R 2 , for this variation is R 2 = 1=(E [X R 2 ] + (N 1)E [Y R 2 ]) (10) 4.4 Generic RMTP Throughput Pingali et al. compared the throughput of one sender-initiated and two receiver-initiated reliable multicast transport protocols, RMTPs, in <ref> [PTK94] </ref>. These protocols support 1xN multi-cast connections. The 1xN connection throughput is the minimum of the sender throughput and the receiver throughput. We use their results to derive the NxN connection throughput for their protocols using Equation (2). <p> The maximum throughput of session messages per node is N = 1=(E [X N ] + (N 1)E [Y N ]): (17) 5 A Performance Comparison We now compare the throughput of RMSP with the protocols in <ref> [PTK94] </ref>. We are interested in the sensitivity of these protocols to multicast parameters such as the group size, N , the transport packet loss probability, p, and the multiplexing factor, F . We use processing time assumptions and parameter values similar to [PTK94]. We set all processing times to 1. <p> the throughput of RMSP with the protocols in <ref> [PTK94] </ref>. We are interested in the sensitivity of these protocols to multicast parameters such as the group size, N , the transport packet loss probability, p, and the multiplexing factor, F . We use processing time assumptions and parameter values similar to [PTK94]. We set all processing times to 1. Thus, E [X i ] = E [Y j ] = 1, where (i; j) 2 ff; s; p; t; a; ng. <p> These two protocols support a 1xN communication model. The 1xN connection throughput is the minimum of the sender throughput and the receiver throughput. Therefore, a sender is the 1xN connection bottleneck for both protocols. Pingali et al. <ref> [PTK94] </ref> showed that the NAK protocol, referred to as N 1 in their paper, has 18 much higher throughput than the ACK protocol. They also showed that the throughput of another receiver-initiated protocol they presented, N 2 , is higher than that of N 1 . <p> We analyzed its sensitivity to group size, transport packet loss probability, and session multiplexing factor. We compared RMSP throughput to the throughput of the sender-initiated and the receiver-initiated reliable multicast transport protocols presented in <ref> [PTK94] </ref>. We showed that RMSP is less sensitive to group size and packet loss than these protocols. We also showed that RMSP yields higher throughput than the other protocols for a wide range of multicast parameters (i.e., multicast group size, packet loss, and multiplexing factor). 21 22 23 24 25
Reference: [SCFJ96] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson. Rtp: </author> <title> A transport protocol for real-time applications. Internet Request for Comment (RFC 1889), </title> <month> January </month> <year> 1996. </year>
Reference-contexts: These applications span distributed computing environments (e.g., ISIS [Bir93] and Transis [ADKM92]), audio/video multicast (e.g., MBONE [Eri94]), and distributed whiteboards ([McC92]). The quality of service required by multicast applications vary. While some applications are sensitive to response time but may tolerate data loss (e.g., multimedia <ref> [SCFJ96] </ref> and video conferencing [Jac94]), other types of applications require reliable receipt of all data even if it means longer response time (e.g., software distribution and file transfers). In this report, we consider a class of applications that we call continuous-feed collaborative applications.
Reference: [YGS95] <author> R. Yavatkar, J. Griffioen, and M. Sudan. </author> <title> "A Reliable Dissemination Protocol for Interactive Collaborative Applications". </title> <booktitle> In ACM Multimedia Conference. ACM, </booktitle> <year> 1995. </year>
Reference-contexts: There are several variations to these two schemes to improve their efficiency. In one variation, the multicast group is structured in a tree-like hierarchy where designated nodes in the subtrees are responsible for consolidating acknowl-edgements and processing local retransmission (e.g., <ref> [YGS95] </ref>). Another variation use restricted multicasting to localize the scope of NAKs and retransmissions (e.g., [FJM + 95]). A third variation uses log servers to process retransmission requests ([HSC95]). In 1xN communication models, one sender multicasts messages to N receivers. <p> The manager sends the new member's information to the multicast group. A similar scenario, but in reverse order, takes place when a member leaves the group. RMSP achieves flow control by using a rate-based mechanism on the session level similar to the one used in <ref> [YGS95] </ref>. This prohibits applications from sending session messages to RMSP faster than some predefined maximum transmission rate. The transport level flow control is provided by the transport layer (e.g., window-based mechanism in TCP). RMSP does not modify the transport layer flow control mechanism.
References-found: 13

