URL: http://www.arch.su.edu.au/~josiah/aid96ws.ps
Refering-URL: http://www.arch.su.edu.au/~josiah/CoGA.html
Root-URL: 
Email: Email: (josiah, mary)@arch.su.edu.au  
Phone: Fascimile: 61-2-351 3031  
Title: CO-EVOLUTION AND EMERGENCE IN DESIGN  
Author: JOSIAH POON AND MARY LOU MAHER 
Address: Sydney NSW 2006 Australia  
Affiliation: Key Centre of Design Computing Department of Architectural and Design Science University of  
Abstract: Evolution, which can be used to describe a design process, is a metaphor borrowed from nature. However, this has been generally applied to the evolution of a solution which assumes the problem does not change throughout the process. This is a naive assumption in design because the problem indeed changes. This paper considers the evolution of both the problem and solution and introduces co-evolutionary design. This paper also addresses the related issues of evaluation and termination of co-evolutionary design in a computational implementation. Finally, the paper considers how a co-evolutionary system can generate and recognize emergent structure and behaviour. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Corne, D., Smithers, T. & Ross, P. </author> <year> (1993). </year> <title> Solving design problems by computational exploration, </title> <editor> in J. S. Gero & F. Sudweeks (eds), </editor> <booktitle> Preprints of the IFIP WG5.2 Workshop on Formal Design Methods for Computer-Aided Design, </booktitle> <pages> pp. 249270. </pages>
Reference-contexts: This is an attractive assumption because what is once a complex human activity is reduced to a relatively simple, and manageable, computing task. However, this simplified view faces a lot of challenges <ref> (Corne, Smithers & Ross 1993) </ref>, (Gero 1993), (Poon & Maher 1996). The major criticism is on the assumption that: a problem is to be found once-and-for-all. This is definitely not true.
Reference: <author> Edmonds, E. & Soufi, B. </author> <year> (1992). </year> <title> The computational modelling of emergent shapes in design, </title> <editor> in J. S. Gero & F. Sudweeks (eds), </editor> <booktitle> Preprints of the Second International Conference on Computational Models of Creative Design, Dept of Architectural and Design Science, Unveristy of Sydney, </booktitle> <pages> pp. 173189. </pages>
Reference: <author> Gero, J. </author> <year> (1992). </year> <title> Creativity, emergence and evolution in design, </title> <editor> in J. S. Gero & F. Sudweeks (eds), </editor> <booktitle> Preprints of the Second International Round-Table Conference on Computational Models of Creative Design, Key Centre of Design Computing. </booktitle>
Reference-contexts: This has recently drawn the attention of research workers in the design community, e.g. (Gero & Yan 1994), (Gero, Damski & Han 1995), (Ed-monds & Soufi 1992) etc. The most notable definition on emergence offered by CO-EVOLUTION AND EMERGENCE IN DESIGN the design community comes from <ref> (Gero 1992) </ref>, which says A property that is only implicit, i.e. not represented explicitly, is said to be an emergent property if it can be made explicit. The definitions offered from the design community are usually applied to shape only. <p> EMERGENT BEHAVIOURS ARE GOAL-ORIENTED The formulation of functional requirements is to define expected behaviour, B e <ref> (Hybs & Gero 1992) </ref>. Emergent behaviour must then be goal-oriented as well where this complex behaviour cannot emerge outside the context of a fitness function.
Reference: <author> Gero, J. </author> <year> (1993). </year> <title> Towards a model of exploration in computer-aided design, </title> <editor> in J. S. Gero & F. Sud-weeks (eds), </editor> <booktitle> Preprints of the IFIP WG5.2 Workshop on Formal Design Methods for Computer-Aided Design, Key Centre of Design Computing, </booktitle> <pages> pp. 271279. </pages>
Reference-contexts: This is an attractive assumption because what is once a complex human activity is reduced to a relatively simple, and manageable, computing task. However, this simplified view faces a lot of challenges (Corne, Smithers & Ross 1993), <ref> (Gero 1993) </ref>, (Poon & Maher 1996). The major criticism is on the assumption that: a problem is to be found once-and-for-all. This is definitely not true.
Reference: <author> Gero, J., Damski, J. & Han, J. </author> <year> (1995). </year> <title> Emergence in caad systems, </title> <editor> in M. Tan (ed.), </editor> <booktitle> Proceedings of CAAD Futures'95. </booktitle>
Reference-contexts: Emergence In nature, emergence occurs where new species are found and they exhibit characteristic traits. Emergence is an important research issue in biology as well as in creative design. This has recently drawn the attention of research workers in the design community, e.g. (Gero & Yan 1994), <ref> (Gero, Damski & Han 1995) </ref>, (Ed-monds & Soufi 1992) etc.
Reference: <author> Gero, J. & Schnier, T. </author> <year> (1995). </year> <title> Evolving representation of design cases and their use in creative design, </title> <editor> in J. Gero & F. Sudweeks (eds), </editor> <booktitle> Preprints of the Third International Conference on Computational Models of Creative Design, Key Centre of Design Computing, </booktitle> <address> Heron Island, Queensland. </address>
Reference-contexts: Emergence In nature, emergence occurs where new species are found and they exhibit characteristic traits. Emergence is an important research issue in biology as well as in creative design. This has recently drawn the attention of research workers in the design community, e.g. (Gero & Yan 1994), <ref> (Gero, Damski & Han 1995) </ref>, (Ed-monds & Soufi 1992) etc.
Reference: <author> Gero, J. & Yan, M. </author> <year> (1994). </year> <title> Shape emergence by symbolic reasoning, Environment and Planning B: Planning and Design 21: </title> <publisher> 191218. </publisher>
Reference-contexts: Emergence In nature, emergence occurs where new species are found and they exhibit characteristic traits. Emergence is an important research issue in biology as well as in creative design. This has recently drawn the attention of research workers in the design community, e.g. <ref> (Gero & Yan 1994) </ref>, (Gero, Damski & Han 1995), (Ed-monds & Soufi 1992) etc.
Reference: <author> Goldberg, D. E. </author> <year> (1989). </year> <title> Genetic algorithms: In search of optimization and machine learning, </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: The evolution of each space is guided by the most recent population in the other space. This model is called co-evolution and provides the basis for a computational model of design exploration. The basis for co-evolution is a simple genetic algorithm <ref> (Goldberg 1989) </ref> where special consideration is given to the representation and application of the fitness function so that the problem definition can change in response to the current solution space.
Reference: <author> Hybs, I. & Gero, J. S. </author> <year> (1992). </year> <title> An evolutionary process model of design, </title> <booktitle> Design Studies 13(3): </booktitle> <volume> 273 290. </volume>
Reference-contexts: EMERGENT BEHAVIOURS ARE GOAL-ORIENTED The formulation of functional requirements is to define expected behaviour, B e <ref> (Hybs & Gero 1992) </ref>. Emergent behaviour must then be goal-oriented as well where this complex behaviour cannot emerge outside the context of a fitness function.
Reference: <author> Maher, M. L. & Poon, J. </author> <year> (1995). </year> <title> Co-evolution of the fitness function and design solution for design exploration, </title> <booktitle> Proceedings of IEEE International Conference on Evolutionary Computing, IEEE. </booktitle>
Reference-contexts: More details about the computational implementation of coevolutionary design can be found in <ref> (Maher & Poon 1995) </ref> and (Maher, Poon & Boulanger 1995). 2.1. FITNESS EVALUATION The performance of a solution is traditionally evaluated against a fixed goal. This is not so in a co-evolutionary design when the fitness function (goal) changes over time. <p> More details about the computational implementation of coevolutionary design can be found in (Maher & Poon 1995) and <ref> (Maher, Poon & Boulanger 1995) </ref>. 2.1. FITNESS EVALUATION The performance of a solution is traditionally evaluated against a fixed goal. This is not so in a co-evolutionary design when the fitness function (goal) changes over time.
Reference: <author> Maher, M. L. & Poon, J. </author> <year> (1996). </year> <title> Modelling design exploration as co-evolution, </title> <booktitle> Microcomputers in Civil Engineering (Special Issues on Evolutionary Systems in Design) To appear. </booktitle>
Reference-contexts: This is an attractive assumption because what is once a complex human activity is reduced to a relatively simple, and manageable, computing task. However, this simplified view faces a lot of challenges (Corne, Smithers & Ross 1993), (Gero 1993), <ref> (Poon & Maher 1996) </ref>. The major criticism is on the assumption that: a problem is to be found once-and-for-all. This is definitely not true.
Reference: <author> Maher, M. L., Poon, J. & Boulanger, S. </author> <year> (1995). </year> <title> Formalising design exploration as co-evolution: A combined gene approach, </title> <editor> in J. S. Gero & F. Sudweeks (eds), </editor> <booktitle> Preprints of the Second IFIP WG5.2 Workshop on Advances in Formal Design Methods for CAD, Key Centre of Design Computing, </booktitle> <pages> pp. 128. </pages>
Reference-contexts: More details about the computational implementation of coevolutionary design can be found in <ref> (Maher & Poon 1995) </ref> and (Maher, Poon & Boulanger 1995). 2.1. FITNESS EVALUATION The performance of a solution is traditionally evaluated against a fixed goal. This is not so in a co-evolutionary design when the fitness function (goal) changes over time. <p> More details about the computational implementation of coevolutionary design can be found in (Maher & Poon 1995) and <ref> (Maher, Poon & Boulanger 1995) </ref>. 2.1. FITNESS EVALUATION The performance of a solution is traditionally evaluated against a fixed goal. This is not so in a co-evolutionary design when the fitness function (goal) changes over time.
Reference: <author> Poon, J. & Maher, M. L. </author> <year> (1996). </year> <title> Emergent behaviours in co-evolutionary design, </title> <booktitle> Proceedings of Fourth International Conference of Artificial Intelligence in Deisgn (AID'96). </booktitle>
Reference-contexts: This is an attractive assumption because what is once a complex human activity is reduced to a relatively simple, and manageable, computing task. However, this simplified view faces a lot of challenges (Corne, Smithers & Ross 1993), (Gero 1993), <ref> (Poon & Maher 1996) </ref>. The major criticism is on the assumption that: a problem is to be found once-and-for-all. This is definitely not true.
Reference: <author> Simon, H. A. </author> <year> (1969). </year> <booktitle> The sciences of the artificial, </booktitle> <publisher> MIT Press. </publisher>
References-found: 14

