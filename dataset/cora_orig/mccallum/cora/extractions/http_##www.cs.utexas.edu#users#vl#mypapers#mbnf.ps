URL: http://www.cs.utexas.edu/users/vl/mypapers/mbnf.ps
Refering-URL: http://www.cs.utexas.edu/users/vl/papers.html
Root-URL: 
Title: Minimal Belief and Negation as Failure  
Author: Vladimir Lifschitz 
Note: Levesque and Ray Reiter.  
Address: Austin, TX 78712, USA  
Affiliation: Department of Computer Sciences and Department of Philosophy University of Texas at Austin  
Abstract: Fangzhen Lin and Yoav Shoham defined a propositional nonmonotonic logic which uses two independent modal operators. One of them represents minimal knowledge, the other is related to the ideas of justification (as understood in default logic) and of negation as failure. We describe a simplified version of that system, show how quantifiers can be included in it, and study its relation to circumscription and default logic, to logic programming, and to the theory of epistemic queries developed by Hector 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Chen. </author> <title> Minimal knowledge + negation as failure = only knowing (sometimes). </title> <editor> In L. M. Pereira and A. Nerode, editors, </editor> <booktitle> Logic Programming and Non-monotonic Reasoning: Proceedings of the Second International Workshop, </booktitle> <pages> pages 132-150, </pages> <year> 1993. </year>
Reference-contexts: Inoue and Sakama [7] show that such generalized disjunctive rules are important for abductive logic programming. MBNF was also used in recent work on the relation of logic programming to the logic of "only knowing" <ref> [1] </ref> and autoepistemic logic [13]. We first discuss the propositional case of MBNF and show how logic programs can be viewed as propositional MBNF theories. Then quantification is added, and connections with default logic and circumscription are investigated. Then databases and answers to queries are defined.
Reference: [2] <author> M. v. Emden and R. Kowalski. </author> <title> The semantics of predicate logic as a programming language. </title> <journal> Journal of the ACM, </journal> <volume> 23(4) </volume> <pages> 733-742, </pages> <year> 1976. </year>
Reference-contexts: A positive logic program is a set of rules of the form A 0 A 1 ; : : : ; A m ; (2) where m 0, and each A i is an atom. According to van Emden and Kowalski <ref> [2] </ref>, the semantics of a positive program is defined by the smallest set of atoms 5 which is closed under its rules (that is to say, which includes A 0 whenever it includes A 1 ; : : : ; A m , for every rule (2) from ).
Reference: [3] <author> M. Gelfond. </author> <title> Strong introspection. </title> <booktitle> In Proc. AAAI-91, </booktitle> <pages> pages 386-391, </pages> <year> 1991. </year>
Reference-contexts: This paper does not claim that all important systems of nonmonotonic reasoning proposed in the literature can be embedded into MBNF. In particular, our system does not cover the concept of "strong introspection," introduced in <ref> [3] </ref>. Acknowledgments I would like to thank Michael Gelfond, Benjamin Grosof, Katsumi Inoue, Hector Levesque, Fangzhen Lin, Norman McCain, Ray Reiter, Grigori Schwarz, Miroslaw Truszczynski and Thomas Woo for useful discussions on the subject of this paper.
Reference: [4] <author> M. Gelfond and V. Lifschitz. </author> <title> The stable model semantics for logic programming. </title> <editor> In R. Kowalski and K. Bowen, editors, </editor> <booktitle> Logic Programming: Proc. of the Fifth Int'l Conf. and Symp., </booktitle> <pages> pages 1070-1080, </pages> <year> 1988. </year>
Reference-contexts: Several approaches to defining a semantics for general logic programs have been proposed. One of them is based on the notion of a "stable model" <ref> [4] </ref>. The use of the word "model" here is rather unfortunate: it would only make sense if we were willing to identify with material implication, and not with classical negation.
Reference: [5] <author> M. Gelfond and V. Lifschitz. </author> <title> Classical negation in logic programs and disjunctive databases. </title> <journal> New Generation Computing, </journal> <volume> 9 </volume> <pages> 365-385, </pages> <year> 1991. </year>
Reference-contexts: Such programs are introduced in <ref> [5] </ref> (under the name of "extended disjunctive databases").
Reference: [6] <author> J. Halpern and Y. Moses. </author> <title> Towards a theory of knowledge and ignorance: </title> <type> preliminary report. Technical Report RJ 4448 (48136), </type> <institution> IBM, </institution> <year> 1984. </year> <month> 15 </month>
Reference-contexts: the ideas of the theory of epistemic fl This research was supported in part by NSF grants IRI-89-04611 and IRI-91-01078, and by DARPA under Contract N00039-84-C-0211. 1 The idea of minimal knowledge (or "maximal ignorance") was formalized earlier, in various ways, by several authors, including Konolige [8], Halpern and Moses <ref> [6] </ref>, Shoham [19] and Lin [15]. 1 queries developed by Levesque [9] and Reiter [18]. We prove that this system, the logic of minimal belief and negation as failure (MBNF), includes some forms of default logic and circumscription, as well as some logic programming languages.
Reference: [7] <author> K. Inoue and C. Sakama. </author> <title> Representing abduction by positive not. </title> <booktitle> In ICLP-93 Postconference Workshop on Abductive Reasoning, </booktitle> <year> 1993. </year>
Reference-contexts: In [14], MBNF theories with protected literals are defined|theories that are more general than disjunctive logic programs in view of the possibility of positive occurrences of the negation as failure operator. Inoue and Sakama <ref> [7] </ref> show that such generalized disjunctive rules are important for abductive logic programming. MBNF was also used in recent work on the relation of logic programming to the logic of "only knowing" [1] and autoepistemic logic [13].
Reference: [8] <author> K. Konolige. </author> <title> Circumscriptive ignorance. </title> <booktitle> In Proc. of AAAI-82, </booktitle> <pages> pages 202-204, </pages> <year> 1982. </year>
Reference-contexts: extension is based on the ideas of the theory of epistemic fl This research was supported in part by NSF grants IRI-89-04611 and IRI-91-01078, and by DARPA under Contract N00039-84-C-0211. 1 The idea of minimal knowledge (or "maximal ignorance") was formalized earlier, in various ways, by several authors, including Konolige <ref> [8] </ref>, Halpern and Moses [6], Shoham [19] and Lin [15]. 1 queries developed by Levesque [9] and Reiter [18]. We prove that this system, the logic of minimal belief and negation as failure (MBNF), includes some forms of default logic and circumscription, as well as some logic programming languages.
Reference: [9] <author> H. Levesque. </author> <title> Foundations of a functional approach to knowledge representation. </title> <journal> Artificial Intelligence, </journal> <volume> 23(2) </volume> <pages> 155-212, </pages> <year> 1984. </year>
Reference-contexts: supported in part by NSF grants IRI-89-04611 and IRI-91-01078, and by DARPA under Contract N00039-84-C-0211. 1 The idea of minimal knowledge (or "maximal ignorance") was formalized earlier, in various ways, by several authors, including Konolige [8], Halpern and Moses [6], Shoham [19] and Lin [15]. 1 queries developed by Levesque <ref> [9] </ref> and Reiter [18]. We prove that this system, the logic of minimal belief and negation as failure (MBNF), includes some forms of default logic and circumscription, as well as some logic programming languages.
Reference: [10] <author> H. Levesque. </author> <title> All I know: a study in autoepistemic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 42(2,3):263-310, </volume> <year> 1990. </year>
Reference-contexts: suggests that one way to do that may be to add the axiom 8xy (notTeach (x; y) :Teach (x; y)): Our definition of an answer to a query is applicable to nonmonotonic databases like this. 8 Parameters are also used for this purpose in Levesque's treatment of quantified autoepistemic logic <ref> [10] </ref>. 14 12 Conclusion The logic of minimal belief and negation as failure provides a unified framework for several logic programming languages and nonmonotonic formalisms, as well as for the theory of epistemic queries.
Reference: [11] <author> V. Lifschitz. </author> <title> On open defaults. </title> <editor> In J. Lloyd, editor, </editor> <booktitle> Computational Logic: Symposium Proceedings, </booktitle> <pages> pages 80-95. </pages> <publisher> Springer, </publisher> <year> 1990. </year>
Reference-contexts: This semantics differs from the answer set semantics used in Section 5 in that it permits "non-Herbrand models." 7 In this, we follow the approach to default logic proposed in <ref> [11] </ref>. 9 8 Deriving New Theorems The positive forms of the axioms of T provide an initial supply of theorems of T . Some other theorems can be obtained from this initial supply using a closure property of the set of theorems. <p> The following theorem refers to "default logic with a fixed universe"|the modification of the system of [17] proposed in <ref> [11] </ref>. The main difference is that, in the standard default logic, the parameters of an open default are treated as metavariables for ground terms, whereas the modified system handles parameters as genuine object variables. Theorem 4. <p> Theorem 4. A nonmodal sentence F is a fixed-universe consequence of a default theory (D; W ) iff D [ BW j= BF . This theorem shows that the translation (11) embeds default logic with a fixed universe into MBNF. In <ref> [11] </ref> we showed how to embed circumscription (with all nonlogical constants varied) into default logic with a fixed universe.
Reference: [12] <author> V. Lifschitz. </author> <title> Nonmonotonic databases and epistemic queries. </title> <booktitle> In Proc. of IJCAI-91, </booktitle> <pages> pages 381-386, </pages> <year> 1991. </year>
Reference-contexts: Then quantification is added, and connections with default logic and circumscription are investigated. Then databases and answers to queries are defined. Proofs of theorems are given in the appendix. This paper is a revision of the preliminary report <ref> [12] </ref>. The system described here is somewhat different from the preliminary version; it avoids the problem with definitional extensions mentioned in the concluding section of [12]. 2 Propositional MBNF: Formulas and Interpre tations The formulas of the propositional logic of minimal belief and negation as failure are built from propositional symbols <p> Proofs of theorems are given in the appendix. This paper is a revision of the preliminary report <ref> [12] </ref>. The system described here is somewhat different from the preliminary version; it avoids the problem with definitional extensions mentioned in the concluding section of [12]. 2 Propositional MBNF: Formulas and Interpre tations The formulas of the propositional logic of minimal belief and negation as failure are built from propositional symbols (atoms) using the standard propositional connectives and two modal operators: B and not . 2 A theory is a set of formulas (axioms).
Reference: [13] <author> V. Lifschitz. </author> <title> Restricted monotonicity. </title> <booktitle> In Proc. AAAI-93, </booktitle> <pages> pages 432-437, </pages> <year> 1993. </year>
Reference-contexts: Inoue and Sakama [7] show that such generalized disjunctive rules are important for abductive logic programming. MBNF was also used in recent work on the relation of logic programming to the logic of "only knowing" [1] and autoepistemic logic <ref> [13] </ref>. We first discuss the propositional case of MBNF and show how logic programs can be viewed as propositional MBNF theories. Then quantification is added, and connections with default logic and circumscription are investigated. Then databases and answers to queries are defined. Proofs of theorems are given in the appendix. <p> In logic programming, a rule can serve as a part of a program, but not as a query. In order to cover cases like these, the general definition of a "declarative formalism" in <ref> [13] </ref> distinguishes between "postulates" and "sentences." 6 We ignore here a notational difference: Reiter's K corresponds to our B. 8 first-order logic. The universe of an interpretation I will be denoted by jIj.
Reference: [14] <author> V. Lifschitz and T. Woo. </author> <title> Answer sets in general nonmonotonic reasoning (preliminary report). </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Proc. of the Third Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 603-614, </pages> <year> 1992. </year>
Reference-contexts: Being a common framework that unifies several nonmonotonic formalisms, MBNF may help us better understand the possibilities and limitations of each of them. The uses of MBNF described in the literature so far have to do with the semantics of logic programming. In <ref> [14] </ref>, MBNF theories with protected literals are defined|theories that are more general than disjunctive logic programs in view of the possibility of positive occurrences of the negation as failure operator. Inoue and Sakama [7] show that such generalized disjunctive rules are important for abductive logic programming.
Reference: [15] <author> F. Lin. </author> <title> Circumscription in a modal logic. </title> <editor> In M. Vardi, editor, </editor> <booktitle> Theoretical Aspects of Reasoning about Knowledge: Proc. of the Second Conf., </booktitle> <pages> pages 113-127, </pages> <year> 1988. </year>
Reference-contexts: of epistemic fl This research was supported in part by NSF grants IRI-89-04611 and IRI-91-01078, and by DARPA under Contract N00039-84-C-0211. 1 The idea of minimal knowledge (or "maximal ignorance") was formalized earlier, in various ways, by several authors, including Konolige [8], Halpern and Moses [6], Shoham [19] and Lin <ref> [15] </ref>. 1 queries developed by Levesque [9] and Reiter [18]. We prove that this system, the logic of minimal belief and negation as failure (MBNF), includes some forms of default logic and circumscription, as well as some logic programming languages.
Reference: [16] <author> F. Lin and Y. Shoham. </author> <title> A logic of knowledge and justified assumptions. </title> <journal> Artificial Intelligence, </journal> <volume> 57 </volume> <pages> 271-289, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Lin and Shoham <ref> [16] </ref> defined a propositional nonmonotonic logic which uses two independent modal operators. One of them represents minimal knowledge, 1 the other is related to the ideas of justification (as understood in default logic) and of negation as failure. <p> If a formula or a theory does not contain the negation as failure operator not , we call it positive. If it contains neither B nor not , it is nonmodal. 2 The "knowledge operator" K from <ref> [16] </ref> corresponds to our B; the "assumption operator" A corresponds, in our notation, to the combination :not. 2 An interpretation is a set of atoms. A structure is a pair (I; S), where I is an interpretation, and S a set of interpretations. <p> Intuitively, the default (10) says: Derive fl from ff if fi 1 ; : : : ; fi m are consistent. In accordance with the idea of Lin and Shoham <ref> [16] </ref>, we identify a default (10) with (the universal closure of) the formula Bff ^ not :fi 1 ^ : : : ^ not :fi m Bfl: (11) Consistency is expressed here by the combination not :.
Reference: [17] <author> R. Reiter. </author> <title> A logic for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1,2):81-132, </volume> <year> 1980. </year>
Reference-contexts: A theory is now a set of sentences of the extended language; an interpretation is understood as in classical 5 We do not see a reasonable definition of theoremhood for formulas containing not. In this respect, MBNF is similar to default logic <ref> [17] </ref>, where a default can be postulated, but not derived. In logic programming, a rule can serve as a part of a program, but not as a query. <p> For instance, the axiom not p Bq can be equivalently replaced by B (not p Bq), because (9) is equivalent to 8w [B (w) (9w (N (w) ^ :p (w)) 8w (B (w) q (w)))]: 10 Relation to Default Logic and Circumscription Recall that a default theory <ref> [17] </ref> is defined by a set D of defaults of the form ff : fi 1 ; : : : ; fi m =fl (10) and a set W of sentences that play the role of axioms. <p> The following theorem refers to "default logic with a fixed universe"|the modification of the system of <ref> [17] </ref> proposed in [11]. The main difference is that, in the standard default logic, the parameters of an open default are treated as metavariables for ground terms, whereas the modified system handles parameters as genuine object variables. Theorem 4.
Reference: [18] <author> R. Reiter. </author> <title> What should a database know? Journal of Logic Programming, </title> <booktitle> 14 </booktitle> <pages> 127-153, </pages> <year> 1992. </year>
Reference-contexts: by NSF grants IRI-89-04611 and IRI-91-01078, and by DARPA under Contract N00039-84-C-0211. 1 The idea of minimal knowledge (or "maximal ignorance") was formalized earlier, in various ways, by several authors, including Konolige [8], Halpern and Moses [6], Shoham [19] and Lin [15]. 1 queries developed by Levesque [9] and Reiter <ref> [18] </ref>. We prove that this system, the logic of minimal belief and negation as failure (MBNF), includes some forms of default logic and circumscription, as well as some logic programming languages. <p> On the other hand, there is a simple connection between this relation and (the propositional case of) the relation j from <ref> [18] </ref>. <p> It is easy to check, using Theorem 3, that (12) can be equivalently written as B [A (P ) ^ 8x (not P (x) :P (x))]: 11 Epistemic Queries To illustrate the usefulness of epistemic queries, Reiter <ref> [18] </ref> introduces the database consisting of the following facts: Teach (John; Math); 9x Teach (x; CS ); Teach (Mary; Psych) _ Teach (Sue; Psych): (13) We need to distinguish between "objective" questions, such as "which courses are taught?", and "epistemic" questions, such as "which courses are taught by known individuals?". <p> This condition is different from T j= F ; it expresses that, when the axioms of T are accepted as the "explicit beliefs," F will be "implicitly believed." Our semantics of epistemic queries, although conceptually very close to the definition from <ref> [18] </ref>, is different in several ways. 1. Levesque and Reiter begin with a fixed countably infinite set of "parameters," which plays a double role.
Reference: [19] <author> Y. Shoham. </author> <title> Chronological ignorance: Time, nonmonotonicity, necessity and causal theories. </title> <booktitle> In Proc. of AAAI-86, </booktitle> <pages> pages 389-393, </pages> <year> 1986. </year> <month> 16 </month>
Reference-contexts: of the theory of epistemic fl This research was supported in part by NSF grants IRI-89-04611 and IRI-91-01078, and by DARPA under Contract N00039-84-C-0211. 1 The idea of minimal knowledge (or "maximal ignorance") was formalized earlier, in various ways, by several authors, including Konolige [8], Halpern and Moses [6], Shoham <ref> [19] </ref> and Lin [15]. 1 queries developed by Levesque [9] and Reiter [18]. We prove that this system, the logic of minimal belief and negation as failure (MBNF), includes some forms of default logic and circumscription, as well as some logic programming languages.
References-found: 19

