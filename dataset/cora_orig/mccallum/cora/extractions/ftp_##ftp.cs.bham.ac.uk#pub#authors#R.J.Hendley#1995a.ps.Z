URL: ftp://ftp.cs.bham.ac.uk/pub/authors/R.J.Hendley/1995a.ps.Z
Refering-URL: http://www.cs.bham.ac.uk/~rjh/aig.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Visualisation of complex systems prototype implementation of a development environment for the SELF programming language
Author: R.J.Hendley and N.S.Drew 
Keyword: VR, objectorientation, software visualisation, complex systems, programming environments.  
Note: A  by the user.  
Address: B15 2TT  
Affiliation: School of Computer Science University of Birmingham Birmingham  
Abstract: There are a large number of computer based, and other, systems which are composed of large numbers of interacting components. Examples include large software systems, the world wide web and a wide range of information systems. Understanding and manipulating the structure and behaviour of these systems is extraordinarily difficult, even when the systems (eg. programs) have been well designed and engineered. The approach described in this paper is to maintain a representation of the system within a virtual reality. The organisation of the components within the virtual reality is determined by behaviours attached to the components which, typically, leads to a spatial organisation which reflects the semantic structure of the system. 
Abstract-found: 1
Intro-found: 1
Reference: [Brayshaw] <author> Brayshaw, M. and Eisenstadt, M. </author> <title> A practical graphical prolog tracer. </title> <journal> International journal of man-machine studies. </journal> <volume> 35, </volume> <pages> pp 597-631, </pages> <year> 1991. </year>
Reference: [Drew & Hendley] <author> Drew, N.S, & Hendley, </author> <title> R.J. </title> <journal> Visualising Complex Interacting Systems. </journal> <note> To appear in Proceedings of CHI95. </note>
Reference: [Pang] <author> Pang, A., </author> <title> Spray Rendering. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> Volume 14 Number 5, </volume> <pages> pp 57-63, </pages> <year> 1994. </year>
Reference: [Parker&Hendley] <author> Parker, J. and Hendley, </author> <title> R.J. The Universe program development environment. </title> <editor> In Bullinger, H-J and Shackel, B. </editor> <booktitle> Interact 87, IFIP 1987. </booktitle>
Reference: [Smith] <author> Smith, R.B. </author> <title> The Alternate Reality Kit: An Animated Environment for Creating Interactive Simulations. </title> <booktitle> In Proceedings of 1986 IEEE Computer Society Workshop on Visual Languages(1986) 99-106. </booktitle>
Reference: [Smith&Ungar] <author> Smith, R.B., Ungar, D. </author> <title> SELF, The Power of Simplicity. </title> <booktitle> In OOPSLA 87 Conference Proceedings, </booktitle> <address> Orlando, FL, </address> <year> 1987. </year> <note> Published as SIGPLAN Notices 22(12), December, 1987. Also published in Lisp and Symbolic Computation 4(3), </note> <month> June, </month> <year> 1991. </year>
Reference-contexts: In the future, we will extend the work to include support for concurrent cooperative working. The rest of this paper describes in more detail a prototype system which explores some of the ideas of this work. The system is based upon the use of the Self <ref> [Smith&Ungar] </ref> programming environment although the integration is limited. The implementation of this prototype is intended purely as a testbed and many aspects are implemented only in outline and using whatever tools were available to speed the implementation.
Reference: [Sun] <author> Sun Microsystems. </author> <title> The SparcWorks Reference Manual. </title> <month> SMCC </month> <year> (1994). </year>
Reference-contexts: Even with the inherent mechanisms for managing and constraining the complexity, these tasks place a significant load upon the user. Providing support for the user's understanding of the structure and behaviour of the system will inevitably lead to improved reliability and efficiency of these processes. Increasingly, programming environments <ref> [Sun] </ref> are providing graphical support to help the user to understand the structure of their system and the interactions that occur between the components.
Reference: [Vion-Dury&Santana] <author> Vion-Dury, J.-Y., Santana, M., </author> <title> Virtual Images: Interactive Visualization of Distributed ObjectOriented Systems. </title> <booktitle> In OOPSLA 94 Conference Proceedings, </booktitle> <address> Portland, Oregon, </address> <year> 1994. </year>
Reference-contexts: One danger is that the physical representation can change when the user modifies the system either by changing the structure, by modifying the behaviour of the objects or by changing the parameters of the visualisation. One approach that has been taken in <ref> [Vion-Dury&Santana] </ref> is to generate an object's shape as a function of its name - which will, conventionally, include some semantic information. It would appear likely though, that some more sophisticated technique will be necessary and that this will probably use semantic information in some way to determine the physical representation.
Reference: [Wells&Young] <author> Wells, D. & Young, C., </author> <title> The Waite Groups ray-tracing creations. </title> <publisher> Waite Group Press. </publisher> <year> 1993. </year>
Reference-contexts: This will form a distinct, albeit abstract, physical representation of the cluster which is determined by the spatial layout of its constituent objects. Creating such a surface in an appropriate way is clearly important. One approach that could be used is that described in <ref> [Wells&Young] </ref> where a group is merged into a blob by creating a surface which corresponds to a region of uniform field potential. An alternative approach is to place an elastic sheet around the cluster and to allow this to form itself around the individual components.
Reference: [Wood et al] <author> Wood, A., Beale, R., Drew, N. & Hendley, </author> <title> R.J., Hyperspace: a Worldwide Web Visualiser and its implications for Cooperative Browsing and Agents. </title> <note> Submitted to HCI95. </note>
Reference-contexts: Although this work has been aimed at programming environments it is clear that a similar set of techniques could be valuably applied to a wide range of other domains - most notably to WWW browsers <ref> [Wood et al] </ref> and indeed to a wide range of information systems. Within a programming environment there are a number of other aspects of the overall task which could be usefully supported. - Extending the work downwards to provide a full programming system would be useful.
References-found: 10

