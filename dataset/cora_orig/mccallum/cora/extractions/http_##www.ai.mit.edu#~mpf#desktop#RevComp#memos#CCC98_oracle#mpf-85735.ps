URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/memos/CCC98_oracle/mpf-85735.ps
Refering-URL: 
Root-URL: 
Title: Separations of reversible and irreversible space-time complexity classes (extended abstract)  
Author: Michael P. Frank and M. Josephine Ammer 
Address: Cambridge, Massachusetts  
Affiliation: MIT Artificial Intelligence Laboratory  
Abstract: We prove that irreversible machines cannot always be emulated by reversible machines running in the same space and time. This suggests that certain irreversible parallel architectures cannot be efficiently implemented within our micro-reversible universe. We conjecture that the alternative reversible models, either classical or quantum, describe the most powerful computers that can physically exist.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Theodore Baker, John Gill, and Robert Solovay. </author> <title> Relativizations of the P =?N P question. </title> <journal> SIAM J. Computing, </journal> <volume> 4(4) </volume> <pages> 431-442, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. <ref> [1] </ref> proof. Gratitude to Alain Tapp of the University of Montreal for discussing his group's work [11] and commenting on our proof idea. Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument.
Reference: [2] <author> C. H. Bennett. </author> <title> Logical reversibility of computa-tion. </title> <journal> IBM J. Research and Development, </journal> <volume> 6 </volume> <pages> 525-532, </pages> <year> 1973. </year>
Reference-contexts: Lecerf '63 [12] first established that reversible Turing machines are universal, and Ben- nett '73 <ref> [2] </ref> independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones. Coppersmith and Grossman '75 [6] proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitrary boolean functions. <p> Proof. Part (a): Due to existing relativizable simulations. When S fi = T , Bennett's simple reversible simulation technique <ref> [2] </ref> can be applied because it takes time O (T ) and space O (T ). Similarly, when T fi ulation of Lange et al. can be used because it takes time O (2 S ) and space O (S).
Reference: [3] <author> C. H. Bennett. </author> <title> Time/space trade-offs for reversible computation. </title> <journal> SIAM J. Computing, </journal> <volume> 18(4) </volume> <pages> 766-776, </pages> <year> 1989. </year>
Reference-contexts: Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [8]. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 <ref> [3] </ref> introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility. <p> To do this, we show how M i can be interpreted as following the rules of Bennett's reversible "pebble game," introduced in <ref> [3] </ref> and analyzed by Li and Vitanyi in [15]. Pebble game rules. The game is played on a linear list of nodes, which we will identify with query strings q 1 ; : : : ; q t .
Reference: [4] <author> Gianfranco Bilardi and Franco Preparata. </author> <title> Horizons of parallel computation. </title> <type> Technical Report CS-9320, </type> <institution> Brown University, </institution> <month> May </month> <year> 1993. </year> <note> Also available on the web at http://www.cs.brown.edu/publi-cations/techreports/reports/CS-93-20.html. </note>
Reference-contexts: As for our speculations concerning the ultimate impact of physics on models of computation, authors who endorse similar views include Hillis '82 [9], Bilardi & Preparata '93 <ref> [4] </ref>, and Vitanyi '95 [20]. Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 [5] explain techniques for simulating physics efficiently on parallel quantum computers.
Reference: [5] <author> Bruce M. Boghosian and Washington Taylor IV. </author> <title> Simulating quantum mechanics on a quantum com-puter. </title> <type> Manuscript, </type> <month> 8 March </month> <year> 1997. </year> <note> http://xxx.- lanl.gov/abs/quant-ph/9701019. </note>
Reference-contexts: Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 <ref> [5] </ref> explain techniques for simulating physics efficiently on parallel quantum computers. Quantum computation models are reversible, but are likely to be strictly more powerful than the non-quantum reversibility considered in this paper.
Reference: [6] <author> Don Coppersmith and Edna Grossman. </author> <title> Generators for certain alternating groups with applications to cryptography. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 29(4) </volume> <pages> 624-627, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: Lecerf '63 [12] first established that reversible Turing machines are universal, and Ben- nett '73 [2] independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones. Coppersmith and Grossman '75 <ref> [6] </ref> proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitrary boolean functions. Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension.
Reference: [7] <author> Pierluigi Crescenzi and Christos H. Papadimitriou. </author> <title> Reversible simulation of space-bounded computa-tion. </title> <journal> Theoretical Computer Science, </journal> <volume> 143 </volume> <pages> 159-165, </pages> <year> 1995. </year>
Reference-contexts: Toffoli and Fredkin also developed much reversible circuit theory [8]. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 <ref> [7] </ref> extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [11] showed how to simulate Turing machines reversibly in linear space, but using exponential time.
Reference: [8] <author> E. F. Fredkin and T. Toffoli. </author> <title> Conservative logic. </title> <journal> Int'l J. Theoretical Physics, </journal> 21(3/4):219-253, 1982. 
Reference-contexts: Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory <ref> [8] </ref>. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines.
Reference: [9] <author> W. Daniel Hillis. </author> <title> New computer architectures and their relationship to physics or why computer sci-ence is no good. </title> <journal> Int'l J. Theoretical Physics, </journal> 21(3/4):255-262, 1982. 
Reference-contexts: As for our speculations concerning the ultimate impact of physics on models of computation, authors who endorse similar views include Hillis '82 <ref> [9] </ref>, Bilardi & Preparata '93 [4], and Vitanyi '95 [20]. Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 [5] explain techniques for simulating physics efficiently on parallel quantum computers.
Reference: [10] <author> R. Landauer. </author> <title> Irreversibility and heat generation in the computing process. </title> <journal> IBM J. Research and Development, </journal> <volume> 5 </volume> <pages> 183-191, </pages> <year> 1961. </year>
Reference-contexts: Another contribution of our proof is to illustrate ways to use incompressibility arguments in analyzing reversible machines. It is conceivable that similar techniques might increase the range of reversible and irreversible space-time complexity classes that we can separate without resorting to the oracle. 2 Related Work Landauer '61 <ref> [10] </ref> was probably the first to point out that irreversible computer operations cause unavoidable energy dissipation due to the laws of thermodynamics, a fact that has been the primary motivation for the study of reversible models.
Reference: [11] <author> Klaus-Jorn Lange, Pierre McKenzie, and Alain Tapp. </author> <title> Reversible space equals deterministic space. </title> <type> Manuscript, </type> <month> December </month> <year> 1996. </year> <note> To be published in proc. 12th Annual IEEE Conf. on Computational Complexity (CCC '97). </note>
Reference-contexts: Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp <ref> [11] </ref> showed how to simulate Turing machines reversibly in linear space, but using exponential time. <p> But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. [1] proof. Gratitude to Alain Tapp of the University of Montreal for discussing his group's work <ref> [11] </ref> and commenting on our proof idea. Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument.
Reference: [12] <author> Y. Lecerf. </author> <title> Machines de turing reversibles. insolubilite recursive en n 2 N de l'equation u = n , ou est un "isomorphisme de codes". </title> <journal> Comptes Rendus hebdomadaires des seances de l'academie des sciences, </journal> <volume> 257 </volume> <pages> 2597-2600, </pages> <year> 1963. </year>
Reference-contexts: Lecerf '63 <ref> [12] </ref> first established that reversible Turing machines are universal, and Ben- nett '73 [2] independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones.
Reference: [13] <author> Robert Y. Levine and Alan T. Sherman. </author> <title> A note on Bennett's time-space tradeoff for reversible compu-tation. </title> <journal> SIAM J. Computing, </journal> <volume> 19(4) </volume> <pages> 673-677, </pages> <year> 1990. </year>
Reference-contexts: The most space-efficient linear-time reversible simulation technique currently known was provided by Bennett ([3], p. 770), and analyzed by Levine and Sherman <ref> [13] </ref> to take space O (S (T =S) 1=(0:58lg (T =S)) ). Bennett's simulation can be easily seen to work with all self-reversible oracles, so it gives a relativizable upper bound on space.
Reference: [14] <author> Ming Li and Paul Vitanyi. </author> <title> An Introduction to Kolmogorov Complexity and Its Applications. Graduate Texts in Computer Science. </title> <publisher> Springer-Verlag, </publisher> <address> 2nd edition, </address> <year> 1997. </year>
Reference-contexts: Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument. Appreciation also to Ming Li and Paul Vitanyi for their analysis of the pebble game [15], and their introduction to incompressibility methods in their book on Kol- mogorov complexity <ref> [14] </ref>.
Reference: [15] <author> Ming Li and Paul M. B. Vitanyi. </author> <title> Reversibility and adiabatic computation: trading time and space for energy. </title> <journal> Proc. Royal Society of London, Ser. A, </journal> <volume> 452 </volume> <pages> 1-21, </pages> <year> 1996. </year>
Reference-contexts: Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines. Li and Vitanyi '96 <ref> [15] </ref> analyzed Bennett's techniques and characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [11] showed how to simulate Turing machines reversibly in linear space, but using exponential time. <p> In the cases where the reversible machine takes too much space, we will prove this by equating the machine's operation with the "pebble game" for which Li and Vitanyi <ref> [15] </ref> have already proven lower bounds, and by showing that if the machine does not take too much space, then we can build a shorter description of the chain of nodes using the machine's small intermediate configurations, thus contradicting our choice of an incompressible chain. <p> To do this, we show how M i can be interpreted as following the rules of Bennett's reversible "pebble game," introduced in [3] and analyzed by Li and Vitanyi in <ref> [15] </ref>. Pebble game rules. The game is played on a linear list of nodes, which we will identify with query strings q 1 ; : : : ; q t . At any time during the game some set of nodes is pebbled. Initially, no nodes are pebbled. <p> This corresponds to the fact already established that M i must at some point ask query q t1 or the oracle can be constructed to foil it trivially. Li and Vitanyi's analysis of the pebble game <ref> [15] </ref> showed that no strategy can win the game for 2 k nodes or more without at some time having more than k nodes pebbled at once. <p> Then the incompressibility of x in s shows that the assumption that q j is initially pebbled is inconsistent. Thus M i exactly obeys all the rules of the Bennett pebble game. Now, Li and Vitanyi have shown <ref> [15] </ref> that any strategy for the pebble game that eventually pebbles a node at or beyond node 2 k must at some time have at least k+1 nodes pebbled at once. <p> Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument. Appreciation also to Ming Li and Paul Vitanyi for their analysis of the pebble game <ref> [15] </ref>, and their introduction to incompressibility methods in their book on Kol- mogorov complexity [14].
Reference: [16] <author> N. H. Margolus. </author> <title> Physics and Computation. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1988. </year>
Reference-contexts: As for our speculations concerning the ultimate impact of physics on models of computation, authors who endorse similar views include Hillis '82 [9], Bilardi & Preparata '93 [4], and Vitanyi '95 [20]. Margolus '88 <ref> [16] </ref> discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 [5] explain techniques for simulating physics efficiently on parallel quantum computers. Quantum computation models are reversible, but are likely to be strictly more powerful than the non-quantum reversibility considered in this paper.
Reference: [17] <author> J. E. Pin. </author> <title> On the languages accepted by finite reversible automata. </title> <editor> In Thomas Ottman, edi-tor, </editor> <booktitle> Automata, Languages and Programming, Proc. 14th Int'l Colloq. (ICALP), volume 267 of Lecture Notes in Computer Science, </booktitle> <pages> pages 237-249. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [8]. Pin '87 <ref> [17] </ref> showed that reversible finite automata cannot decide all regular languages. Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility.
Reference: [18] <author> Peter W. Shor. </author> <title> Algorithms for quantum computa-tion: Discrete log and factoring. </title> <booktitle> In Foundations of Computer Science, Proc. 35th Ann. Symp., </booktitle> <pages> pages 124-134. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: Quantum computation models are reversible, but are likely to be strictly more powerful than the non-quantum reversibility considered in this paper. Nevertheless, our results may have implications for the possible efficiency of classical subroutines in existing serial quantum algorithms such as Shor's '94 <ref> [18] </ref> polynomial-time factoring algorithm. 3 General definitions Reversible models of computation. As is by now standard in the theory of reversible computing, we define a reversible model of computation as one in which the infinite graph of machine states has indegree one. <p> reversible and non-quantum 3D mesh model with only a constant factor slowdown. 9 Of course, ultimately we would like to also know whether quantum models of computation are really physically implementable as well, and whether they are truly more powerful than any physically-implementable classical model as results such as Shor's <ref> [18] </ref> seem to indicate. But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. [1] proof.
Reference: [19] <author> Tommaso Toffoli. </author> <title> Computation and construction universality of reversible cellular automata. </title> <journal> J. Computer and System Sciences, </journal> <volume> 15 </volume> <pages> 213-231, </pages> <year> 1977. </year>
Reference-contexts: Coppersmith and Grossman '75 [6] proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitrary boolean functions. Toffoli '77 <ref> [19] </ref> showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [8]. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages.
Reference: [20] <author> Paul M. B. Vitanyi. </author> <title> Physics and the new compu-tation. </title> <booktitle> In Mathematical Foundations of Computer Science, Proc. 20th Int'l Symp. (MFCS), volume 969 of Lecture Notes in Computer Science, </booktitle> <pages> pages 106-128. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year> <note> http://www.cwi.- nl/~paulv/physics.html. 10 </note>
Reference-contexts: As for our speculations concerning the ultimate impact of physics on models of computation, authors who endorse similar views include Hillis '82 [9], Bilardi & Preparata '93 [4], and Vitanyi '95 <ref> [20] </ref>. Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 [5] explain techniques for simulating physics efficiently on parallel quantum computers.
References-found: 20

