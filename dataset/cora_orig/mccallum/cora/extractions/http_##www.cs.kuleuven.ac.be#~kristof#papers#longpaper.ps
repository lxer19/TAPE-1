URL: http://www.cs.kuleuven.ac.be/~kristof/papers/longpaper.ps
Refering-URL: http://www.cs.kuleuven.ac.be/~kristof/publications.html
Root-URL: 
Title: Representing Ramifications in an Event-based Language  
Author: Kristof Van Belleghem Marc Denecker Daniele Theseider Dupre n 
Address: Celestijnenlaan 200A B-3001 Heverlee (Belgium)  
Affiliation: Katholieke Universiteit Leuven Department of Computer Science  
Date: 257, December 1997  
Pubnum: Report CW  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. Aczel. </author> <title> An Introduction to Inductive Definitions. </title> <editor> In J. Barwise, editor, </editor> <booktitle> Handbook of Mathematical Logic, </booktitle> <pages> pages 739-782. </pages> <publisher> North-Holland Publishing Company, </publisher> <year> 1977. </year>
Reference: [2] <author> G. Brewka and J. Hertzberg. </author> <title> How to do things with worlds: on formalizing actions and plans. </title> <journal> Journal of Logic and Computation, </journal> <volume> 3(5) </volume> <pages> 517-532, </pages> <year> 1993. </year>
Reference-contexts: For this reason we can refer to [31] for a comparison with approaches not based on causal laws (e.g. categorisation based approaches like [18], [19], <ref> [2] </ref>): with respect to those approaches ER and Thielscher's proposal have the same advantages.
Reference: [3] <author> W. Buchholz, S. Feferman, W. Pohlers, and W. Sieg. </author> <title> Iterated Inductive Definitions and Subsystems of Analysis: Recent Proof-Theoretical Studies. Springer-Verlag, </title> <booktitle> Lecture Notes in Mathematics 897, </booktitle> <year> 1981. </year>
Reference: [4] <author> M. Denecker. </author> <title> Knowledge Representation and Reasoning in Incomplete Logic Programming. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, K.U.Leuven, </institution> <year> 1993. </year>
Reference: [5] <author> M. Denecker. </author> <title> Inductive Definitions, Logic Programming, Knowledge Representation. </title> <type> Technical report, K.U. </type> <institution> Leuven, </institution> <year> 1996. </year>
Reference-contexts: Given P and a definition D on P, we need to characterise a valuation I D which defines the truth values of all atoms according to D. In IID this involves stratifying the definition, but it has been argued in <ref> [5] </ref> that techniques inspired by logic programming semantics formalise the same intuitions in a more general and syntax independent way. We present this technique. <p> Hence, we can define I O;P as: Definition 5.3 Given &lt; P; O; C &gt;, I O;P = PI O;P ". The least fixpoint of this operator can be proven to coincide with the least fixpoint of the well-founded operator of [35]. Details can be found in <ref> [5] </ref>.
Reference: [6] <author> M. Denecker, L. Missiaen, and M. Bruynooghe. </author> <title> Temporal reasoning with abductive event calculus. </title> <booktitle> In Proceedings of ECAI 92, </booktitle> <address> Vienna, </address> <year> 1992. </year>
Reference-contexts: park ^ T = t 1 to the theory leads to inconsistency. 5 Mapping E R to Open Logic Programming In the previous years we have devoted a lot of research to the use of Event Calculus in Open Logic Programming as a general formalism for temporal reasoning (see e.g. <ref> [6] </ref>, [32], [33], [7], [34]). This formalism provides the generality needed to represent a very wide range of theories of action. A problem is however that a user needs to take some non-trivial restrictions into account for the theory to remain correct, i.e. to entail the intended conclusions.
Reference: [7] <author> M. Denecker, K. Van Belleghem, G. Duchatelet, F. Piessens, and D. De Schreye. </author> <title> A realistic experiment in knowledge representation in open event calculus : Protocol specification. </title> <editor> In M. Maher, editor, </editor> <booktitle> Proceedings of the Joint International Conference and Symposium on Logic Programming, </booktitle> <year> 1996, </year> <pages> pages 170-184, </pages> <year> 1996. </year>
Reference-contexts: = t 1 to the theory leads to inconsistency. 5 Mapping E R to Open Logic Programming In the previous years we have devoted a lot of research to the use of Event Calculus in Open Logic Programming as a general formalism for temporal reasoning (see e.g. [6], [32], [33], <ref> [7] </ref>, [34]). This formalism provides the generality needed to represent a very wide range of theories of action. A problem is however that a user needs to take some non-trivial restrictions into account for the theory to remain correct, i.e. to entail the intended conclusions.
Reference: [8] <author> C. Evans. </author> <title> The Macro-Event Calculus: Representing Temporal Granularity. </title> <booktitle> In Proceedings of PRICAI, </booktitle> <address> Tokyo, </address> <year> 1990. </year>
Reference-contexts: The language allows for change propagations not related to state (or 34 An alternative but equivalent view is that the turning on of the lamp is a macro-action (as defined in <ref> [8] </ref>) which can consist of either of the primitive actions. Deriving a primitive action which satisfies the conditions of the macro-action is also a typical abductive task. 61 more general) constraints between fluents, and for recursion and cycles in the rules describing change propagation.
Reference: [9] <author> A. Galton. </author> <title> An investigation of non-intermingling principles in temporal logic. </title> <journal> Journal of Logic and Computation, </journal> <volume> 6 </volume> <pages> 271-294, </pages> <year> 1996. </year> <month> 62 </month>
Reference: [10] <author> M. Gelfond and V. Lifschitz. </author> <title> Describing Action and Change by Logic Programs. </title> <booktitle> In Proc. of the 9th Int. Joint Conf. and Symp. on Logic Programming, </booktitle> <year> 1992. </year>
Reference-contexts: 1 Introduction Recently a number of high-level languages have been proposed for modeling actions and change, as a tool for studying the principles underlying time and causality in particular simplified settings. The first of these languages to emerge, the A language of <ref> [10] </ref>, models inertia and direct effects of actions in a branching time topology, with possible uncertainty on the initial state of the world. Extensions of A tackle gradually more complex issues: for example AR 0 ([16]) deals with indirect effects of actions (ramifications) and simple forms of non-determinism.
Reference: [11] <author> M. Gelfond et al. </author> <title> What Are the Limitations of the Situation Calculus. </title> <booktitle> In Automated reasoning, Essays in Honor of Woody Bledsoe. </booktitle> <publisher> Kluwer, </publisher> <year> 1991. </year>
Reference-contexts: A nice example is found in <ref> [11] </ref>: a glass on a table spills its contents as soon as the table is in a non-horizontal position.
Reference: [12] <author> M. Ginsberg and D. Smith. </author> <title> Reasoning about action I: A possible worlds approach. </title> <journal> Artificial Intelligence, </journal> <volume> 35, </volume> <year> 1988. </year>
Reference-contexts: Also, as argued in <ref> [12] </ref>, [19] and [24], there can be multiple sets of indirect effects able to restore the validity of a state constraint, and the intended set cannot be determined without additional information.
Reference: [13] <author> M. Ginsberg and D. Smith. </author> <title> Reasoning about action II: The qualification problem. </title> <journal> Artificial Intelligence, </journal> <volume> 35, </volume> <year> 1988. </year>
Reference: [14] <author> J. Gustafsson and P. Doherty. </author> <title> Embracing occlusion in specifying the indirect effects of actions. </title> <booktitle> In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 87-98. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1996. </year>
Reference-contexts: 6 differ essentially from them in that their semantics is independent of any state constraints in the theory (as opposed to the semantics of causal rules in [31]), and in that they do not include an implicit state constraint themselves (as opposed to causal laws in [20], [22], [15], and <ref> [14] </ref>). Thanks to this uncoupling of state constraints and derived effect rules, a wider range of indirect effects, including those in the above examples, can be modelled. <p> However, the causal rules differ from the ones in ER in that they also entail the corresponding state constraint and in the fact that the minimisation policy does not allow for cyclic dependencies. The approach in <ref> [14] </ref> is based on the Features and Fluents framework ([27]), and in that sense differs considerably from ours as far as basic concepts are concerned. However, there are some interesting correspondences at a higher level. <p> In a sense this corresponds to our condition of well-founded event topology, i.e. events in ER could be mapped to the natural numbers in an order-preserving way, but we consider it more natural to see time itself as a full real line. For dealing with ramifications, <ref> [14] </ref> contains expressions (and formulae incorporating these) of the form [t]ffi &gt;> [s]fl where ffi and fl are fluent formulae and t and s temporal expressions such that t s. This allows for dealing with both immediate (if t = s) and delayed ramifications. <p> Change propagation unrelated to a state or general constraint is also in this approach excluded, unlike in ER. Finally, a disadvantage of the approach in <ref> [14] </ref> with respect to ER is that cyclic dependencies in causal laws are not dealt with correctly, as indicated by the authors. In [28] it is argued that approaches to the ramification problem should be able to deal with so-called downstream indirect effects.
Reference: [15] <author> A. Kakas and R. Miller. </author> <title> A simple declarative language for describing narratives with actions. </title> <note> to appear in : Journal of Logic Programming, Special Issue on Reasoning about Actions, </note> <year> 1996. </year>
Reference-contexts: any case). 6 differ essentially from them in that their semantics is independent of any state constraints in the theory (as opposed to the semantics of causal rules in [31]), and in that they do not include an implicit state constraint themselves (as opposed to causal laws in [20], [22], <ref> [15] </ref>, and [14]). Thanks to this uncoupling of state constraints and derived effect rules, a wider range of indirect effects, including those in the above examples, can be modelled.
Reference: [16] <author> G. N. Kartha and V. Lifschitz. </author> <title> Actions with indirect effects (preliminary report). </title> <booktitle> In Proc. of the Fourth International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 341-350, </pages> <year> 1994. </year>
Reference: [17] <author> V. Lifschitz. </author> <title> Computing Circumscription. </title> <booktitle> In Proceedings of the 9th International Joint Conference on Artificial Intelligence, </booktitle> <year> 1985, </year> <pages> pages 121-127, </pages> <year> 1985. </year>
Reference-contexts: Note moreover that I D init is unique, so there is one unique perfect model. Further, in [25] it is proven that for definite programs the perfect models coincide with the minimal models of the program read as a set of implications. On the other hand, in <ref> [17] </ref> it has been shown that an interpretation is a model of Circum (A; P ; Z) (where A is the given theory, P the set of predicates to be circumscribed and Z a set of predicates allowed to vary) iff it is minimal in the class of models of A
Reference: [18] <author> V. Lifschitz. </author> <title> Formal Theories of Action. </title> <editor> In F. Brown, editor, </editor> <booktitle> Proceedings of the 1987 Workshop on the Frame Problem in AI, </booktitle> <year> 1987. </year>
Reference-contexts: For this reason we can refer to [31] for a comparison with approaches not based on causal laws (e.g. categorisation based approaches like <ref> [18] </ref>, [19], [2]): with respect to those approaches ER and Thielscher's proposal have the same advantages.
Reference: [19] <author> V. Lifschitz. </author> <title> Frames in the Space of Situations. </title> <journal> Artificial Intelligence, </journal> <volume> 46 </volume> <pages> 365-376, </pages> <year> 1990. </year>
Reference-contexts: Also, as argued in [12], <ref> [19] </ref> and [24], there can be multiple sets of indirect effects able to restore the validity of a state constraint, and the intended set cannot be determined without additional information. <p> For this reason we can refer to [31] for a comparison with approaches not based on causal laws (e.g. categorisation based approaches like [18], <ref> [19] </ref>, [2]): with respect to those approaches ER and Thielscher's proposal have the same advantages.
Reference: [20] <author> F. Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <editor> In C. Mellish, editor, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1985-1991, </pages> <year> 1995. </year>
Reference-contexts: system in any case). 6 differ essentially from them in that their semantics is independent of any state constraints in the theory (as opposed to the semantics of causal rules in [31]), and in that they do not include an implicit state constraint themselves (as opposed to causal laws in <ref> [20] </ref>, [22], [15], and [14]). Thanks to this uncoupling of state constraints and derived effect rules, a wider range of indirect effects, including those in the above examples, can be modelled. <p> The issue of simultaneous actions will be discussed in section 4. Here we show the general applicability of complex derived effect rules. As an example we present the suitcase domain from <ref> [20] </ref>. A suitcase is equipped with a spring mechanism which opens the suitcase when its two latches are open at the same time. This can happen in several different ways: both latches may be opened simultaneously, or one latch may already be open when the second one is opened. <p> We will apply such an extension of Clark completion to E R's effect rules. 11 Lin also utilises complex causal laws in <ref> [20] </ref>. However, these laws differ from our derived effect rules in that they incorporate a state constraint component. 8 Intuitively, the semantics we propose for a set of effect rules is to read them as an inductive definition of a predicate causes. <p> In this respect the proposal is more general than the E approach. In any case, it is clear that like in E the causal laws entail the corresponding state constraints, which is the most essential difference with our approach. Another similar approach is the proposal in <ref> [20] </ref> based on the situation calculus. Lin introduces a new predicate caused (p; v; s) meaning that proposition p is caused to have truth value v in state s. This predicate is circumscribed to min-imise change.
Reference: [21] <author> F. Lin and R. Reiter. </author> <title> State constraints revisited. </title> <journal> J. of Logic and computation, special issue on actions and processes, </journal> <volume> 4 </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: Now we still need to motivate the form of the derived effect rules, in particular why we need complex fluent formulae in the body of these rules. The first reason is conciseness: as we will illustrate, 9 <ref> [21] </ref> describes an automated technique which, for a given set of direct effect rules of actions, derives from an arbitrary state constraint an equivalent explicit action precondition axiom. <p> H defines their natural interpretation; in particular = is interpreted as the identity. Moreover for all t, Ho (true; t) = Initially (true) = t and Ho (false; t) = Initially (f alse) = f. 21 This condition plays the same role as the induction axiom in for example <ref> [21] </ref>. The first part of the condition ensures that there is no sequence of events extending infinitely into the past.
Reference: [22] <author> N. McCain and H. Turner. </author> <title> A causal theory of ramifications and qualifications. </title> <editor> In C. Mellish, editor, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1978-1984, </pages> <year> 1995. </year>
Reference-contexts: In this case, the state constraint imposes an implicit precondition on the promotion. So, state constraints play an important role both as preconditions of actions and as causes of indirect effects. However, they are not sufficient for dealing with either problem. It has been argued convincingly in for example <ref> [22] </ref> that state constraints are insufficient to convey all of the information required to determine valid sets of effects: it is unclear in general if an action violating a state constraint will give rise to indirect effects or if this action is simply impossible ([13]). <p> in any case). 6 differ essentially from them in that their semantics is independent of any state constraints in the theory (as opposed to the semantics of causal rules in [31]), and in that they do not include an implicit state constraint themselves (as opposed to causal laws in [20], <ref> [22] </ref>, [15], and [14]). Thanks to this uncoupling of state constraints and derived effect rules, a wider range of indirect effects, including those in the above examples, can be modelled. <p> One consequence of this is that the mapping of E R (to OLP) is sound and complete, whereas the mapping of E (to LP) is sound but not complete. 59 Returning to the issue of ramifications, we should also consider the approach in <ref> [22] </ref>, where the need for causal laws is clearly motivated and where causal laws are presented as so-called S-conditionals, i.e. formulae ) with and propositional formulae, in an extension of S5 modal logic.
Reference: [23] <author> Y. N. Moschovakis. </author> <title> Elementary Induction on Abstract Structures. </title> <publisher> North-Holland Publishing Company, </publisher> <address> Amsterdam- New York, </address> <year> 1974. </year>
Reference: [24] <author> J. A. Pinto. </author> <title> Temporal reasoning in the situation calculus. </title> <type> Technical Report KRR-TR-94-1, </type> <institution> Computer Science Dept., University of Toronto, </institution> <year> 1994. </year>
Reference-contexts: Also, as argued in [12], [19] and <ref> [24] </ref>, there can be multiple sets of indirect effects able to restore the validity of a state constraint, and the intended set cannot be determined without additional information.
Reference: [25] <author> T. Przymuzinski. </author> <title> Perfect Model Semantics. </title> <booktitle> In Proceedings of ICLP/SLP 1988, </booktitle> <pages> pages 1081-1096, </pages> <year> 1988. </year>
Reference-contexts: Proof: If the derived effect rules have only single literals as bodies, the rules in D init contain no negative literals. Hence, they are equivalent to a definite logic program, for which the well-founded semantics has been proven to coincide with the perfect model semantics of <ref> [25] </ref> in [35]. The perfect model semantics is 2-valued, which proves the first result. Note moreover that I D init is unique, so there is one unique perfect model. Further, in [25] it is proven that for definite programs the perfect models coincide with the minimal models of the program read <p> definite logic program, for which the well-founded semantics has been proven to coincide with the perfect model semantics of <ref> [25] </ref> in [35]. The perfect model semantics is 2-valued, which proves the first result. Note moreover that I D init is unique, so there is one unique perfect model. Further, in [25] it is proven that for definite programs the perfect models coincide with the minimal models of the program read as a set of implications.
Reference: [26] <author> R. Reiter. </author> <title> Natural actions, concurrency and continuous time in the situation calculus. </title> <booktitle> In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 2-13. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1996. </year> <month> 63 </month>
Reference-contexts: Related to this but slightly different is the 53 issue of natural events, discussed for example in <ref> [26] </ref>, where events may be (immediately) triggered as soon as some fluent formula holds (rather than as soon as it is initiated).
Reference: [27] <author> E. Sandewall. </author> <title> Features and Fluents. A Systematic Approach to the Rep--resentation of Knowledge about Dynamical Systems. Volume I. </title> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference: [28] <author> E. Sandewall. </author> <title> Assessments of ramification methods that use static domain constraints. </title> <booktitle> In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 99-110. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1996. </year>
Reference-contexts: Change propagation unrelated to a state or general constraint is also in this approach excluded, unlike in ER. Finally, a disadvantage of the approach in [14] with respect to ER is that cyclic dependencies in causal laws are not dealt with correctly, as indicated by the authors. In <ref> [28] </ref> it is argued that approaches to the ramification problem should be able to deal with so-called downstream indirect effects. Sandewall gives the example of a lamp connected to two parallel switches, such that closing either switch turns on the lamp.
Reference: [29] <author> Y. Shoham. </author> <title> Nonmonotonic reasoning and causation. </title> <journal> Cognitive Science, </journal> <volume> 214 </volume> <pages> 213-252, </pages> <year> 1990. </year>
Reference: [30] <author> M. Thielscher. </author> <title> Causality and the qualification problem. </title> <booktitle> In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 51-62. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1996. </year>
Reference-contexts: Formally we define the following syntax : Definition 2.1 (ER-signature) An ER-signature is a tuple &lt; Sorts; Functors;Vars&gt; with * Sorts = fT ; A; F; Pg, representing the sorts time, action, fluent and atom. 2 However, ideas to deal with the default qualification problem can be found in <ref> [30] </ref>. 3 However, for a discussion on the choice between a linear and a branching time topology we refer to [34], where we discuss this issue in much detail. 3 * Functors consists of a set Tof constants of sort T , denoted t; t 1 ; : : :, which
Reference: [31] <author> M. Thielscher. Ramification and causality. </author> <note> to appear in : Artifical Intelligence, </note> <year> 1997. </year>
Reference-contexts: We provide a mapping of ER to the Event Calculus in Open Logic Programming under justification semantics ([5]), an extension of the well-founded semantics to logic programs with undefined predicates and FOL axioms. We extensively compare the ER-approach to the ramification problem with the one in <ref> [31] </ref>, which shows most similarities to it, and in somewhat less detail with most other recent approaches. Finally, we study the idea introduced in [31] of using influence information in a tool for (semi-)automatically deriving causal laws from state constraints. <p> We extensively compare the ER-approach to the ramification problem with the one in <ref> [31] </ref>, which shows most similarities to it, and in somewhat less detail with most other recent approaches. Finally, we study the idea introduced in [31] of using influence information in a tool for (semi-)automatically deriving causal laws from state constraints. We propose an alternative approach to this problem in the setting of ER and we illustrate the differences with Thielscher's proposal. <p> adding new direct effect rules for each action (which would be an undesirable approach in any decent knowledge representation system in any case). 6 differ essentially from them in that their semantics is independent of any state constraints in the theory (as opposed to the semantics of causal rules in <ref> [31] </ref>), and in that they do not include an implicit state constraint themselves (as opposed to causal laws in [20], [22], [15], and [14]). Thanks to this uncoupling of state constraints and derived effect rules, a wider range of indirect effects, including those in the above examples, can be modelled. <p> The first reason is conciseness: as we will illustrate, 9 [21] describes an automated technique which, for a given set of direct effect rules of actions, derives from an arbitrary state constraint an equivalent explicit action precondition axiom. However, this technique does not take indirect effects into account. 10 <ref> [31] </ref> describes an automatic way of deriving the intended causal rules related to a state constraint, using additional influence information. For derived effect rules corresponding to state constraints, we can use a variant of this method in ER. <p> I D init for this definition is unique, which proves the theorem. 2 The theorem guarantees that successor states generated by a set of determin istic effect rules are always unique. In this respect our approach differs from the one in <ref> [31] </ref>. Unless nondeterminism is explicitly introduced, the theory leaves no room for ambiguity. The following results give some alternative characterisations of the above semantics in several special cases. Moreover they shed some light on the relation to existing approaches to the frame and ramification problems. <p> We can then turn our attention to the relation between nondeterministic rules in ER and the causal rules introduced in <ref> [31] </ref>. 7 E R Compared with the Approach of Thielscher In this section we make a detailed comparison of ER derived effect rules with Thielscher's approach to the ramification problem ([31]). <p> In what follows we will distinguish between causal rules (the constructs used by Thielscher) and derived effect rules (their counterpart in ER). We will show a close correspondence between Thielscher's causal rules and nondeterministic derived effect rules. In <ref> [31] </ref>, causal rules have the form e causes l if F where e and l are fluent literals and F a fluent formula. <p> One advantage of the uniform method is that it will help us establish a correspondence with the approach in <ref> [31] </ref>. 8.3 Comparing our method with Thielscher's We study the relation between our approach and the one in [31]. <p> One advantage of the uniform method is that it will help us establish a correspondence with the approach in <ref> [31] </ref>. 8.3 Comparing our method with Thielscher's We study the relation between our approach and the one in [31]. <p> I j= e iff 8t 2 T; l 2 b F : Init (t; l) $ I D init (Init (t; l)) and Causes (t; l) $ I D init (Causes (t; l)). As an example, we present the relay problem of <ref> [31] </ref>, which is in that paper represented without explicit delays as an example of Thielscher's view on and approach to indirect effects. As we indicated before, in our approach this example should be modelled with explicit delays. <p> In addition, the entire definitions of happens and Happens only refer to time points before e, so it follows that they are equivalent. The correctness of the mapping is thereby proven. 10 Related work We have already compared our work in detail with the approach in <ref> [31] </ref>, which is most similar to ours. For this reason we can refer to [31] for a comparison with approaches not based on causal laws (e.g. categorisation based approaches like [18], [19], [2]): with respect to those approaches ER and Thielscher's proposal have the same advantages. <p> The correctness of the mapping is thereby proven. 10 Related work We have already compared our work in detail with the approach in <ref> [31] </ref>, which is most similar to ours. For this reason we can refer to [31] for a comparison with approaches not based on causal laws (e.g. categorisation based approaches like [18], [19], [2]): with respect to those approaches ER and Thielscher's proposal have the same advantages.
Reference: [32] <author> K. Van Belleghem, M. Denecker, and D. De Schreye. </author> <title> Representing continuous change in the abductive event calculus. </title> <editor> In P. V. Hentenrijck, editor, </editor> <booktitle> Proc. of the International Conference on Logic Programming, </booktitle> <year> 1994, </year> <pages> pages 225-240, </pages> <year> 1994. </year>
Reference-contexts: ^ T = t 1 to the theory leads to inconsistency. 5 Mapping E R to Open Logic Programming In the previous years we have devoted a lot of research to the use of Event Calculus in Open Logic Programming as a general formalism for temporal reasoning (see e.g. [6], <ref> [32] </ref>, [33], [7], [34]). This formalism provides the generality needed to represent a very wide range of theories of action. A problem is however that a user needs to take some non-trivial restrictions into account for the theory to remain correct, i.e. to entail the intended conclusions.
Reference: [33] <author> K. Van Belleghem, M. Denecker, and D. De Schreye. </author> <title> The Abductive Event Calculus as a General Framework for Temporal Databases. </title> <booktitle> In Proc. of the International Conference on Temporal Logic, </booktitle> <pages> pages 301-316, </pages> <year> 1994. </year>
Reference-contexts: T = t 1 to the theory leads to inconsistency. 5 Mapping E R to Open Logic Programming In the previous years we have devoted a lot of research to the use of Event Calculus in Open Logic Programming as a general formalism for temporal reasoning (see e.g. [6], [32], <ref> [33] </ref>, [7], [34]). This formalism provides the generality needed to represent a very wide range of theories of action. A problem is however that a user needs to take some non-trivial restrictions into account for the theory to remain correct, i.e. to entail the intended conclusions.
Reference: [34] <author> K. Van Belleghem, M. Denecker, and D. De Schreye. </author> <title> On the relation between situation calculus and event calculus. Journal of Logic Programming, Special Issue on Reasoning about Action and Change, </title> <address> 31(1-3):3-37, </address> <year> 1997. </year>
Reference-contexts: * Sorts = fT ; A; F; Pg, representing the sorts time, action, fluent and atom. 2 However, ideas to deal with the default qualification problem can be found in [30]. 3 However, for a discussion on the choice between a linear and a branching time topology we refer to <ref> [34] </ref>, where we discuss this issue in much detail. 3 * Functors consists of a set Tof constants of sort T , denoted t; t 1 ; : : :, which includes all real numbers; a set Aof constants of sort A, denoted a; a 1 ; : : :; a <p> t 1 to the theory leads to inconsistency. 5 Mapping E R to Open Logic Programming In the previous years we have devoted a lot of research to the use of Event Calculus in Open Logic Programming as a general formalism for temporal reasoning (see e.g. [6], [32], [33], [7], <ref> [34] </ref>). This formalism provides the generality needed to represent a very wide range of theories of action. A problem is however that a user needs to take some non-trivial restrictions into account for the theory to remain correct, i.e. to entail the intended conclusions. <p> But this extension of the OLP syntax is not necessary: an OLP theory with the same models as the nondeterministic ER theory can be cleanly constructed by introducing a number of auxiliary "degree of freedom" predicates. The technique has been discussed briefly in <ref> [34] </ref> 31 in the context of nondeterministic actions in Event and Situation Calculus. We here show how it applies to general effect rules, thereby also showing the precise semantics of theories containing such predicates (i.e. exactly the above defined semantics for nondeterministic effect rules).
Reference: [35] <author> A. Van Gelder, K. Ross, and J. Schlipf. </author> <title> The Well-Founded Semantics for General Logic Programs. </title> <journal> Journal of the ACM, </journal> <volume> 38(3) </volume> <pages> 620-650, </pages> <year> 1991. </year> <month> 64 </month>
Reference-contexts: Proof: If the derived effect rules have only single literals as bodies, the rules in D init contain no negative literals. Hence, they are equivalent to a definite logic program, for which the well-founded semantics has been proven to coincide with the perfect model semantics of [25] in <ref> [35] </ref>. The perfect model semantics is 2-valued, which proves the first result. Note moreover that I D init is unique, so there is one unique perfect model. <p> Hence, we can define I O;P as: Definition 5.3 Given &lt; P; O; C &gt;, I O;P = PI O;P ". The least fixpoint of this operator can be proven to coincide with the least fixpoint of the well-founded operator of <ref> [35] </ref>. Details can be found in [5].
References-found: 35

