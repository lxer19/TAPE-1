URL: http://www.cs.twsu.edu/~haynes/tr_clique.ps
Refering-URL: http://adept.cs.twsu.edu/~thomas/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: haynes@euler.mcs.utulsa.edu  
Title: Clique Detection via Genetic Programming  Topics in Combinatorial Optimization  
Author: Thomas Haynes 
Address: Tulsa  
Affiliation: Department of Mathematical Computer Sciences The University of  
Date: 7863  December 28, 1996  
Pubnum: CS  
Abstract: Genetic Programming is utilized as a technique for detecting cliques in a network. Candidate cliques are represented in lists, and the lists are manipulated such that larger cliques are formed from the candidates. The clique detection problem has some interesting implications to the Strongly Typed Genetic Programming paradigm, namely in forming a class hierarchy. The problem is also useful in that it is easy to add noise. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mihir Bellare and Madhu Sudan. </author> <title> Improved non-approximability results. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 184-193. </pages> <publisher> ACM, </publisher> <year> 1994. </year>
Reference: [2] <author> R. Chandraasekharam, S. Subhramanian, and S. Chaudhury. </author> <title> Genetic algorithm for node partion-ing problem and applications in VLSI design. </title> <booktitle> IEE Proceedings, Part E: Computers and Digital Techniques, </booktitle> <volume> 140(5) </volume> <pages> 255-260, </pages> <month> Sep </month> <year> 1993. </year>
Reference-contexts: The last E0 was E in [14]. 1 1.2 Applications of Clique Detection The applications for clique detection lie in scene analysis [14] and VLSI design <ref> [2] </ref>. For scene analysis, clique detection is of interest for discovering partially occluded objects. <p> I haven't been able to get to the VLSI articles, but an application I can see is in wanting to group connected chips together on PCB. 2 The Literature Search I have found two references for GA representations in the clique detection domain: <ref> [2, 14] </ref>. I have tracked down [14], but I have not been able to get [2]. The clique detection problem is one which is not covered well in the literature. <p> I have tracked down [14], but I have not been able to get <ref> [2] </ref>. The clique detection problem is one which is not covered well in the literature. Namely, I feel that it is acknowledged as NP complete, but since most people probably use it for small networks, programmers are willing to use a simple algorithm to solve it.
Reference: [3] <author> Federico Della Croce and Roberto Tadei. </author> <title> Multi-kp modeling for the maximum-clique problem. </title> <journal> Eureopean Journal of Operational Research, </journal> <volume> 73(3) </volume> <pages> 555-561, </pages> <month> Mar </month> <year> 1994. </year>
Reference: [4] <author> Anthony Hunter Dixon. </author> <title> On the Efficiency of Clique Detection in Graphs. </title> <type> PhD thesis, </type> <institution> The University of British Columbia (Canada), </institution> <year> 1973. </year>
Reference: [5] <author> Glenn Stephen Fowler. </author> <title> Graph Theoretic aspects of Combinatorial Problem Solving. </title> <type> PhD thesis, </type> <institution> Vir-ginia Polytechnic Institute and State University, </institution> <month> Nov </month> <year> 1984. </year>
Reference: [6] <author> Thomas Haynes, Roger Wainwright, Sandip Sen, and Dale Schoenefeld. </author> <title> Strongly typed genetic programming in evolving cooperation strategies. </title> <booktitle> In Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <year> 1995. </year> <note> (accepted for publication). </note>
Reference-contexts: Node Node A, Node B Table 3: Second attempt at typing for clique detection. attempt at a type system. that in Figure 8, there are extra nodes that complicate the learning of the clique set. 6 Experimental Results The clique detection problem was implemented in a modified version of GPengine <ref> [6] </ref>, a Strongly Typed Genetic Programming system. Specifically the problem of ExtConnection functions having to have either a parent which is an ExtConnection function or be the root, was addressed. 4 6.1 Example Network I clique detection system. The best and average fitness per generation are plotted in Figure 10.
Reference: [7] <author> Yoshiro Ikura. </author> <title> Algorithms for Vertex Packing and Clique Covering Problems on Some Unimodular Graphs. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <month> Oct </month> <year> 1981. </year>
Reference: [8] <author> Kenneth Kalmanson. </author> <title> An Introduction to Discrete Mathematics and its Applications. </title> <publisher> Addison-Wesley, </publisher> <year> 1986. </year>
Reference: [9] <author> John R. Koza. </author> <title> Genetic Programming, On the Programming of Computers by Means of Natural Selection. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: 1 Introduction Detecting cliques in graphs/networks 1 is NP complete [12]. In this paper, Genetic Programming (GP) <ref> [9] </ref> techniques are utilized to find cliques in a network. A pure Genetic Algorithm (GA) approach was considered, but it was dropped because of the nature of the chromosome having a variable length. GPs are ideal for variable length chromosomes.
Reference: [10] <author> Felix G. Lazebnik. </author> <title> Some Extremal Problems for Graphs with Fixed Numbers of Vertices and Edges. </title> <type> PhD thesis, </type> <institution> University of Pennslyvania, </institution> <month> Sep </month> <year> 1987. </year>
Reference: [11] <author> Thomas Lengauer. </author> <title> Combinatorial Algorithms for Integrated Circuit Layout. </title> <publisher> Wiley, </publisher> <year> 1990. </year>
Reference: [12] <author> Udi Manber. </author> <title> Introduction to Algorithms: A Creative Approach. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year> <month> 8 </month>
Reference-contexts: 1 Introduction Detecting cliques in graphs/networks 1 is NP complete <ref> [12] </ref>. In this paper, Genetic Programming (GP) [9] techniques are utilized to find cliques in a network. A pure Genetic Algorithm (GA) approach was considered, but it was dropped because of the nature of the chromosome having a variable length. GPs are ideal for variable length chromosomes.
Reference: [13] <author> David J. Montana. </author> <title> Strongly typed genetic program-ming. </title> <type> Technical Report 7866, </type> <institution> Bolt Beranek and Newman, Inc., </institution> <month> March 25, </month> <year> 1994. </year>
Reference-contexts: Every function must be able to handle input from any other function or terminal. This is called closure. In Strongly Typed Genetic Programming <ref> [13] </ref>, a simple type hierarchy is provided. The arguments and return types of all functions are typed, and each terminal is typed. The only exception to the type system is the type Generic. This allows overloading of functions.
Reference: [14] <author> Ammanamanchi Srinivasa Murthy, Guturu Parthasarthy, and V. U. K. Sastry. </author> <title> Clique finding a genetic approach. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation, </booktitle> <pages> pages 18-21. </pages> <publisher> IEEE, </publisher> <year> 1995. </year>
Reference-contexts: Less formally, the goal is to find the maximally connected subgraphs in G. Figure 2, shows a graph with 6 nodes. The cliques are f1, 2, 3, 4, 6 g and f3, 4, 5 g. 3 This formula was presented in <ref> [14] </ref>, but with an error. The last E0 was E in [14]. 1 1.2 Applications of Clique Detection The applications for clique detection lie in scene analysis [14] and VLSI design [2]. For scene analysis, clique detection is of interest for discovering partially occluded objects. <p> Figure 2, shows a graph with 6 nodes. The cliques are f1, 2, 3, 4, 6 g and f3, 4, 5 g. 3 This formula was presented in <ref> [14] </ref>, but with an error. The last E0 was E in [14]. 1 1.2 Applications of Clique Detection The applications for clique detection lie in scene analysis [14] and VLSI design [2]. For scene analysis, clique detection is of interest for discovering partially occluded objects. <p> The cliques are f1, 2, 3, 4, 6 g and f3, 4, 5 g. 3 This formula was presented in <ref> [14] </ref>, but with an error. The last E0 was E in [14]. 1 1.2 Applications of Clique Detection The applications for clique detection lie in scene analysis [14] and VLSI design [2]. For scene analysis, clique detection is of interest for discovering partially occluded objects. <p> I haven't been able to get to the VLSI articles, but an application I can see is in wanting to group connected chips together on PCB. 2 The Literature Search I have found two references for GA representations in the clique detection domain: <ref> [2, 14] </ref>. I have tracked down [14], but I have not been able to get [2]. The clique detection problem is one which is not covered well in the literature. <p> I haven't been able to get to the VLSI articles, but an application I can see is in wanting to group connected chips together on PCB. 2 The Literature Search I have found two references for GA representations in the clique detection domain: [2, 14]. I have tracked down <ref> [14] </ref>, but I have not been able to get [2]. The clique detection problem is one which is not covered well in the literature. <p> Then iteratively visit the rest of the nodes in the graph. Make lists of all the nodes that they are connected to. As each node is examined, merge all lists that are completely connected. While <ref> [14] </ref> does not discuss what they call the "enumerative" method, this algorithm probably has the same characteristics. In [14], the authors mention a related problem: given a graph, in which you know all the cliques, how can new nodes be added without destroying the clique properties? 3 Encoding of the Problem <p> Make lists of all the nodes that they are connected to. As each node is examined, merge all lists that are completely connected. While <ref> [14] </ref> does not discuss what they call the "enumerative" method, this algorithm probably has the same characteristics. In [14], the authors mention a related problem: given a graph, in which you know all the cliques, how can new nodes be added without destroying the clique properties? 3 Encoding of the Problem 3.1 Representation Scheme Each network to be examined is encoded into an adjacency matrix in an external file.
Reference: [15] <author> Bruce Michael Ian Rands. </author> <title> Maximal Cliques in Graphs Associated with Combinatorial Systems. </title> <type> PhD thesis, </type> <institution> California Institue of Technology, </institution> <month> Sep </month> <year> 1982. </year>
Reference: [16] <author> Rolf Stephen Rees. </author> <title> On Certain (1,2)-Factorizations of the Complete Graph. </title> <type> PhD thesis, </type> <institution> Queen's University at Kingston (Canada), </institution> <year> 1986. </year>
Reference: [17] <author> David Lindsay Springer. </author> <title> Coloring and Clique Partitioning for Data Path Allocation. </title> <type> PhD thesis, </type> <institution> Carnegie-Mellon University, </institution> <month> Sep </month> <year> 1991. </year>
Reference: [18] <author> N. Sriram. </author> <title> Clique Optimization: An Approach to Parsimonious, Near-Optimal Ultrmetric Hierarchies. </title> <type> PhD thesis, </type> <institution> University of Oregon, </institution> <month> Sep </month> <year> 1990. </year>
Reference: [19] <author> Chung Chian Wang. </author> <title> An Algorithm for the Chromatic Number of a Graph with application to Uniquely Colorable Graphs and Observations on Pairs of Orthogonal Cliques with Application to the Bichromatic Coloring of Random Graphs. </title> <type> PhD thesis, </type> <institution> State University of New York at Buffalo, </institution> <month> Sep </month> <year> 1974. </year>
Reference: [20] <author> Yoshiaki Yamada, Etsuji Tomita, and Haruhisa Takahashi. </author> <title> Randomized algorithm for finding a near-maximum clique and its experimental evaluations. </title> <journal> Systems and Computers in Japan, </journal> <volume> 25(2) </volume> <pages> 1-7, </pages> <month> Feb </month> <year> 1994. </year>
References-found: 20

