URL: http://www.cse.unsw.edu.au/~cs3111/Postscript/dfd2z.ps
Refering-URL: http://www.serg.cse.unsw.edu.au/~cs3111/Lectures/lectures.html
Root-URL: http://www.cse.unsw.edu.au
Email: Ken.Robinson@serg.cse.unsw.edu.au  Peter.Ho@serg.cse.unsw.edu.au  Schwenke  Martin.Schwenke@cs.anu.edu.au  
Phone: 2 385 4045 Fax: +61 2 385 5995  2 385 4052 Fax: +61 2 385 5995  Tel: +61 6 149 3227 Fax: +61 6 249 0010  
Title: To Zed and Back: Integrating Data Flow Diagrams and Z  
Author: Ken Robinson Peter S. Ho Martin 
Keyword: Formal specification, data flow di agrams, structured analysis, software engineering  
Address: +61  +61  Sydney NSW 2052 Australia  
Affiliation: Tel:  Tel:  School of Computer Science and Engineering University of NSW  
Abstract: Formal specification analysis, using Z for example, and informal specification analysis, using data flow diagrams (DFDs) for example, tend to be used on their own and not combined. In practice, informal analysis using DFDs is much more common, and formal methods are resisted. This paper reports on the teaching of a software engineering specification subject in which an attempt has been made to integrate DFDs and Z. There appear to be benefits on both sides: the data flow analysis is helpful during the initial phase of requirements analysis to obtain structural decomposition of the system, something that is usually implicit in the presentation of a Z specification. Then the rigorous type analysis, which is part of constructing the Z specification, can be used to specify the types of the data flows and data stores. Iteration between the data flow and Z analysis will eventually lead to an integrated specification document combining both DFDs and Z, and benefiting from the strengths of each. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Tom DeMarco. </author> <title> Structured Analysis and System Specification. </title> <publisher> Yourdon Press, </publisher> <year> 1978. </year>
Reference-contexts: consider a constructive response is more appropriate, and may be a useful contribution to assisting people with varying backgrounds and abilities to understand and use formal methods. 2.1 The elements of data flow A data flow diagram consists of a graph of process nodes connected by directed data flow arcs <ref> [1, 7] </ref>. The directed data arcs represent information flowing into or out of a process, and it is intended that multiple flows entering (or leaving) a process node are in some sense independent.
Reference: [2] <author> I.J. Hayes, </author> <title> editor. Specification Case Studies. </title> <booktitle> Prentice-Hall International, 2nd edition, </booktitle> <year> 1993. </year>
Reference-contexts: Data flow diagrams may also contain data stores, which are storage places for data. Data stores play an analogous role to files in software systems. 2.2 The elements of Z The formal part of a Z specification document consists of definitions, many in the form of schemas <ref> [2, 3, 6] </ref>. A Z schema fundamentally defines a named set, which may be used to model a data type, a state or an operation on a state. The components of a schema are: a name, a signature, and a predicate.
Reference: [3] <author> Ben F. Potter, Jane E. Sinclair, and David Till. </author> <title> An Introduction to Formal Specification and Z. </title> <booktitle> International Series in Computer Science. Prentice-Hall International, </booktitle> <year> 1990. </year>
Reference-contexts: Data flow diagrams may also contain data stores, which are storage places for data. Data stores play an analogous role to files in software systems. 2.2 The elements of Z The formal part of a Z specification document consists of definitions, many in the form of schemas <ref> [2, 3, 6] </ref>. A Z schema fundamentally defines a named set, which may be used to model a data type, a state or an operation on a state. The components of a schema are: a name, a signature, and a predicate.
Reference: [4] <author> G. P. Randell. </author> <title> Translating data flow diagrams into Z (and vice versa). </title> <type> Technical Report 90019, </type> <institution> Royal Signals and Radar Establishment, Procurement Executive, Ministry of Defence, RSRE, Malvern Worcestershire, </institution> <month> October </month> <year> 1990. </year>
Reference-contexts: With some rather hazy understanding of the above goals we commenced to teach this hybrid material in 1991. The rest of the paper presents some of the ideas we have been able to distill from our experience. 1.2 Relation to other work Randell <ref> [4, 5] </ref> describes a set of translation rules for translating from data flow to Z and also from Z to data flow.
Reference: [5] <author> G. P. Randell. </author> <title> Improving the translation from data flow diagrams into Z by incorporating the data dictionary. </title> <type> Technical Report 92004, </type> <institution> Royal Signals and Radar Establishment, Procurement Executive, Ministry of Defence, RSRE, Malvern Worcestershire, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: With some rather hazy understanding of the above goals we commenced to teach this hybrid material in 1991. The rest of the paper presents some of the ideas we have been able to distill from our experience. 1.2 Relation to other work Randell <ref> [4, 5] </ref> describes a set of translation rules for translating from data flow to Z and also from Z to data flow.
Reference: [6] <author> J.M. Spivey. </author> <title> The Z Notation: A Reference Manual. </title> <booktitle> Prentice-Hall International, 2nd edition, </booktitle> <year> 1992. </year>
Reference-contexts: Data flow diagrams may also contain data stores, which are storage places for data. Data stores play an analogous role to files in software systems. 2.2 The elements of Z The formal part of a Z specification document consists of definitions, many in the form of schemas <ref> [2, 3, 6] </ref>. A Z schema fundamentally defines a named set, which may be used to model a data type, a state or an operation on a state. The components of a schema are: a name, a signature, and a predicate.
Reference: [7] <author> Edward Yourdon. </author> <title> Modern Structured Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference-contexts: consider a constructive response is more appropriate, and may be a useful contribution to assisting people with varying backgrounds and abilities to understand and use formal methods. 2.1 The elements of data flow A data flow diagram consists of a graph of process nodes connected by directed data flow arcs <ref> [1, 7] </ref>. The directed data arcs represent information flowing into or out of a process, and it is intended that multiple flows entering (or leaving) a process node are in some sense independent.
References-found: 7

