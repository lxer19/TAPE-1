URL: http://www.cs.ucl.ac.uk/staff/t.yu/Recursion.ps
Refering-URL: http://www.cs.ucl.ac.uk/staff/T.Yu/research.html
Root-URL: http://www.cs.ucl.ac.uk
Title: ABSTRACT  
Abstract: Module creation and reuse are essential for Genetic Programming (GP) to be effective with larger and more complex problems. This paper presents a particular kind of program structure to serve these purposes: modules are represented as l abstractions and their reuse is achieved through an implicit recursion. A type system is used to preserve this structure. The structure of l abstraction and implicit recursion also provides structure abstraction in the program. Since the GP paradigm evolves program structure and contents simultaneously, structure abstraction can reduce the search effort for good program structure. Most evolutionary effort is then focused on the search for correct program contents rather than the structure. Experiments on the Even-N-Parity problem show that, with the structure of l abstractions and implicit recursion, GP is able to find a general solution which works for any value of N very efficiently. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Angeline, P. J. </author> <year> 1994. </year> <booktitle> Genetic programming and emergent intelligence. Advances in Genetic Programming, </booktitle> <editor> Kinnear, Jr., K.E.(ed.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <pages> pp. 75-97. </pages>
Reference: <author> Brave, S. </author> <year> 1996. </year> <title> Evolving recursive programs for tree search. </title>
Reference: <editor> Advances in Genetic Programming II, Angeline, P.J. and Kinnear, Jr., K.E. (eds.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, pp.203-219. </address>
Reference: <author> Clack, C., Myers, C., and Poon, E. </author> <year> 1995. </year> <title> Programming with Miranda. </title> <publisher> Prentice Hall International. </publisher>
Reference: <author> Clack, C., and Yu, T. </author> <year> 1997. </year> <title> Performance enhanced genetic programming, </title> <booktitle> Proceedings of the Sixth International Conference on Evolutionary Programming, </booktitle> <editor> Angeline, P.J., Reynolds, R., McDonnell, J., and Eberhart, R. (eds.), </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, pp.87-100. </address>
Reference: <author> Gathercole, C., and Ross, P. </author> <year> 1996. </year> <title> An adverse interaction between crossover and restricted tree depth in genetic programming. </title> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference Genetic Programming. </booktitle>
Reference: <editor> Koza, J.R., Goldberg, D.E., Fogel, D.B., and Riolo, R.L. (eds.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address> <pages> pp. 291-296. </pages>
Reference: <author> Harris, C. </author> <year> 1997. </year> <title> Strongly typed genetic programming to promote hierarchy through explicit syntactic constraints. </title> <booktitle> Late Breaking Papers at the Genetic Programming 1997 Conference. </booktitle> <editor> Koza, J. R. (ed.). </editor> <publisher> Stanford University Bookstore, Stanford, CA, </publisher> <pages> pp. 72-80. </pages>
Reference: <author> Haynes, T.D., Schoenefeld, D.A., and Wainwright, R.L. </author> <year> 1996. </year> <title> Type inheritance in strongly typed genetic programming. </title> <booktitle> Advances in Genetic Programming II, </booktitle> <editor> Angeline, P.J., and Kinnear, Jr., K.E. (eds), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <pages> pp. 359-376. </pages>
Reference: <author> Haynes, T.D., Wainwright, R., Sen, S., and Schoenefeld, D. </author> <year> 1995. </year> <title> Strongly typed genetic programming in evolving cooperation strategies. </title> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <editor> Eshelman, L. (ed.), </editor> <publisher> Morgan Kaufmann Publishers, Inc. </publisher> <pages> pp. 271-278. </pages>
Reference: <author> Hudak, P. </author> <year> 1989. </year> <title> Conception, evolution, and application of functional programming languages. </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 21, No. 3, </volume> <month> September, </month> <pages> pp. 359-411. </pages>
Reference: <author> Kinnear, Jr., K. E., </author> <year> 1994. </year> <title> Alternatives in automatic function definition: A comparison of performance. </title> <booktitle> Advances in Genetic Programming, </booktitle> <editor> Kinnear, Jr., K.E. (ed.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <pages> pp. 119-141. </pages>
Reference: <author> Koza, J. R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference: <author> Koza, J. R. </author> <year> 1994. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference: <editor> Koza, J. R., Goldberg, D. E., Fogel, D.B., and Riolo, R.L. editors, </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference: <editor> Koza, J. R., Goldberg, D. E., Fogel, D.B., and Riolo, R.L. editors, </editor> <booktitle> 1997. Genetic Programming 1997: Proceedings of the Second Annual Conference. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference: <author> Montana, D. J. </author> <year> 1995. </year> <title> Strongly typed genetic programming. </title> <journal> Evolutionary Computation, </journal> <volume> Vol. 3:3, </volume> <pages> pp. 199-230. </pages>
Reference: <author> OReilly, U., and Oppacher, F. </author> <year> 1995. </year> <title> The troubling aspects of a building block hypothesis for genetic programming. </title>
Reference: <institution> Foundations of Genetic Algorithms, </institution> <note> Whitley, </note> <editor> L.D., and Vose, M.D. (eds.), </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA, </address> <pages> pp. 73-88. </pages>
Reference: <author> Rosca, J. P., and Ballard, D. H. </author> <year> 1996. </year> <title> Discovery of subroutines in Genetic Programming. </title> <booktitle> Advances in Genetic Programming II, </booktitle> <editor> Angeline, P.J. and Kinnear, Jr., K.E. (eds.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, pp.177-201. </address>
Reference: <author> Whigham, P. A., and McKay, R.I. </author> <year> 1995. </year> <title> Genetic approaches to learning recursive relations. Progress in Evolutionary Computation, </title> <editor> Yao, X. (ed.), </editor> <booktitle> Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. 956, </volume> <publisher> Springer-Verlag, Heidelberg, Ger-many, </publisher> <pages> pp. 17-27. </pages>
Reference: <author> Wong, M.L., and Leung, K.S. </author> <year> 1996. </year> <title> Evolving recursive functions for the even-parity problem using genetic programming. </title> <booktitle> Advances in Genetic Programming II, </booktitle> <editor> Ange-line, P.J. and Kinnear, Jr., K.E.(eds.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, pp.222-240. </address>
Reference: <author> Wong, M.L., and Leung, K.S. </author> <year> 1997. </year> <title> Evolutionary program induction directed by logic grammars. </title> <journal> Evolutionary Computation, </journal> <volume> Vol. 5:2, </volume> <pages> pp. 143-180. </pages>
Reference: <author> Yu, T., and Clack, C. </author> <year> 1998. </year> <title> PolyGP: a polymorphic genetic programming system in Haskell. </title> <booktitle> Genetic Programming 1998: Proceedings of the Third Annual Conference Genetic Programming. (to appear) </booktitle>
References-found: 24

