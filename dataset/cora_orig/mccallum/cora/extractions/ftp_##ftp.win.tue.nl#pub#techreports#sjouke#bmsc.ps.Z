URL: ftp://ftp.win.tue.nl/pub/techreports/sjouke/bmsc.ps.Z
Refering-URL: http://www.win.tue.nl/win/cs/fm/sjouke/msc.html
Root-URL: http://www.win.tue.nl
Title: An Algebraic Semantics of Basic Message Sequence Charts  
Author: S. Mauw and M. A. Reniers 
Address: P.O. Box 513, 5600 MB Eindhoven, The Netherlands.  
Affiliation: Department of Mathematics and Computing Science, Eindhoven University of Technology,  
Abstract: Message Sequence Charts are a widely used technique for the visualization of the communications between system components. We present a formal semantics of Basic Message Sequence Charts, exploiting techniques from process algebra. This semantics is based on the semantics of the full language as being proposed for standardization in the International Telecommunication Union. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. C. M. Baeten and C. Verhoef. </author> <title> A congruence theorem for structured operational semantics with predicates. </title> <editor> In E. Best, ed., CONCUR'93, </editor> <booktitle> Lecture Notes in Computer Science 715, </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Proof The action rules fit into the syntactical for mat that is called the path format. As a consequence bisimulation is a congruence for the function symbols for which the action rules are defined. We refer to <ref> [1, 6] </ref> for both the syntactical format and the congruence theorem. Every operator in the signature of P A BMSC can be interpreted in the graph model. Without proof we state that P A BMSC is a complete axiomatization of the graph model.
Reference: [2] <author> J. C. M. Baeten and W. P. Weijland. </author> <title> Process Algebra. </title> <booktitle> Cambridge Tracts in Theoretical Computer Science 18. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1990. </year>
Reference-contexts: This means that a Message Sequence Chart is described by giving the behavior of every instance in separation. The formal semantics presented is based on the algebraic theory of process description ACP (Algebra of Communicating Processes) <ref> [2] </ref>. ACP is an algebraic theory in many ways related to the algebraic process theories CCS (Calculus of Communicating Systems) [11] and CSP (Communicating Sequential Processes) [7]. <p> Since we consider asynchronous communication and since Message Sequence Charts may be `empty', we use P A " , i.e. ACP without communication and with the empty process <ref> [2] </ref>. This paper is structured in the following way. First we will introduce Basic Message Sequence Charts. After that, we define the algebraic theory we use as a framework and the algebraic features specifically needed for Basic Message Sequence Charts. <p> PROCESS ALGEBRA P A " 3.1. Introduction The process algebra P A " is an algebraic theory for the description of process behavior <ref> [2, 3] </ref>. Such an algebraic theory is given by a signature defining the processes and a set of equations defining the equality relation on these processes. <p> Lemma 3.1 For x; y; z 2 T ( P A " ) and a 2 A [ fffig 1. x k " = x 3. (x k y) k z = x k (y k z) Proof See <ref> [2] </ref>. We can use this lemma to derive the following exam ple. ak (b + ") + (b + ")k a + (a) (b + ") = a (b + ") + ba + ffi + ffi = 4. <p> A message input may not be executed before the corresponding message output has been executed. We introduce an operator M that enables only those execution paths that respect the above constraint. The operator M is an instance of the state operator as can be found in <ref> [2] </ref>. This operator remembers all message outputs that have been executed in a set M and only allows a message input if its corresponding message output is in that set.
Reference: [3] <author> J. A. Bergstra and J. W. Klop. </author> <title> Process algebra for synchronous communication. </title> <journal> Information & Control, </journal> <volume> 60 </volume> <pages> 109-137, </pages> <year> 1984. </year>
Reference-contexts: PROCESS ALGEBRA P A " 3.1. Introduction The process algebra P A " is an algebraic theory for the description of process behavior <ref> [2, 3] </ref>. Such an algebraic theory is given by a signature defining the processes and a set of equations defining the equality relation on these processes.
Reference: [4] <author> J. de Man. </author> <title> Towards a formal semantics of Message Sequence Charts. </title> <editor> In O. Faergemand and A. Sarma, eds, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers, Amsterdam. </publisher>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. There exist several attempts towards such a formal semantics. We mention approaches based on automaton theory [10], Petri net theory [5] and on process algebra <ref> [4, 12] </ref>. None of these papers contain a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition. <p> We will give the process graph for the example of the semantics in Figure 4. FIGURE 4. Process graph 7. A CHARACTERIZATION THEOREM In this section we will relate our semantics for instance oriented Message Sequence Charts to the event oriented semantics from <ref> [4, 12] </ref>. To this end we will show that a Basic Message Sequence Chart can be represented by a single trace. First we will define three functions and a predicate on processes. These are the alphabet function ff, which The Computer Journal, Vol. 37, No. 4, 1994 8 S. <p> We used the instance oriented syntax to derive a compositional semantics and indicated that this yields a semantics which is equivalent to the approach based on sequencing for an event oriented syntax <ref> [4, 12] </ref>. The development of the semantics for the complete Message Sequence Charts language follows the same line, applying more elaborate constructs from process algebra for features such as sub Message Sequence Charts and process creation.
Reference: [5] <author> J. Grabowski, P. Graubmann and E. Rudolph. </author> <title> Towards a petri net based semantics definition for Message Sequence Charts. </title> <editor> In O. Faergemand and A. Sarma, eds, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers, Amsterdam. </publisher>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. There exist several attempts towards such a formal semantics. We mention approaches based on automaton theory [10], Petri net theory <ref> [5] </ref> and on process algebra [4, 12]. None of these papers contain a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition.
Reference: [6] <author> J. F. Groote and F. W. Vaandrager. </author> <title> Structured operational semantics and bisimulation as a congruence. </title> <journal> Information and Computation, </journal> <volume> 100 </volume> <pages> 202-260, </pages> <year> 1992. </year>
Reference-contexts: Proof The action rules fit into the syntactical for mat that is called the path format. As a consequence bisimulation is a congruence for the function symbols for which the action rules are defined. We refer to <ref> [1, 6] </ref> for both the syntactical format and the congruence theorem. Every operator in the signature of P A BMSC can be interpreted in the graph model. Without proof we state that P A BMSC is a complete axiomatization of the graph model.
Reference: [7] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1985. </year>
Reference-contexts: The formal semantics presented is based on the algebraic theory of process description ACP (Algebra of Communicating Processes) [2]. ACP is an algebraic theory in many ways related to the algebraic process theories CCS (Calculus of Communicating Systems) [11] and CSP (Communicating Sequential Processes) <ref> [7] </ref>. This process algebra is a useful framework for the description of the formal semantics of Message Sequence Charts since all features incorporated in the theory of Message Sequence Charts are related to topics already studied in process algebra such as the state operator and the global renaming operator.
Reference: [8] <author> ITU-T. </author> <title> ITU-T Recommendation Z.100: Specification and Description Language (SDL). ITU-T, </title> <address> Geneva, </address> <year> 1993. </year>
Reference-contexts: Finally we will prove a representation theorem which shows the relation between the instance oriented notation and an event oriented notation. 2. BASIC MESSAGE SEQUENCE CHARTS 2.1. Introduction Message Sequence Charts provide a graphical notation for the interaction between system components. Their main application, in addition to SDL <ref> [8] </ref>, is in the area of telecommunication systems. Their use, however, is The Computer Journal, Vol. 37, No. 4, 1994 2 S. Mauw and M. A. Reniers not restricted to the SDL methodology or to telecommunication environments.
Reference: [9] <author> ITU-T. </author> <title> ITU-T Recommendation Z.120: Message Sequence Chart (MSC). ITU-T, </title> <address> Geneva, </address> <year> 1993. </year>
Reference-contexts: 1. INTRODUCTION Message Sequence Charts are a graphical language, being standardized by the ITU-TS (the Telecommunication Standardization section of the International Telecommunication Union, the former CCITT), for the description of the interactions between entities. ITU recommendation Z.120 <ref> [9] </ref> contains the syntax and an informal explanation of the semantics. The current goal in the process of standardization is the definition of a formal semantics of the language.
Reference: [10] <author> P. B. Ladkin and S. Leue. </author> <title> What do Message Sequence Charts mean? In R. </title> <editor> L. Tenney, P. D. Amer and M. Uyar, eds, </editor> <booktitle> Formal Description Techniques, VI, IFIP Transactions C, Proceedings of the Sixth International Conference on Formal Description Techniques. </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1993. </year>
Reference-contexts: Furthermore validation of computer tools for Message Sequence Charts only makes sense if an exact meaning is available. Finally a formal semantics will help to harmonize the use of Message Sequence Charts. There exist several attempts towards such a formal semantics. We mention approaches based on automaton theory <ref> [10] </ref>, Petri net theory [5] and on process algebra [4, 12]. None of these papers contain a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition.
Reference: [11] <author> R. Milner. </author> <title> A Calculus of Communicating Systems. </title> <booktitle> Lecture Notes in Computer Science 92. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1980. </year>
Reference-contexts: The formal semantics presented is based on the algebraic theory of process description ACP (Algebra of Communicating Processes) [2]. ACP is an algebraic theory in many ways related to the algebraic process theories CCS (Calculus of Communicating Systems) <ref> [11] </ref> and CSP (Communicating Sequential Processes) [7].
Reference: [12] <author> S. Mauw, M. van Wijk and T. Winter. </author> <title> A formal semantics of synchronous Interworkings. </title> <editor> In O. Faergemand and A. Sarma, eds, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers, Amsterdam. </publisher>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. There exist several attempts towards such a formal semantics. We mention approaches based on automaton theory [10], Petri net theory [5] and on process algebra <ref> [4, 12] </ref>. None of these papers contain a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition. <p> We will not present the complete semantics here, but we restrict us to the core of the Message Sequence Charts language, which we will call Basic Message Sequence Charts. This work is related to the formal semantics of In-terworkings <ref> [12] </ref>. A difference is that we will consider asynchronous communication whereas the theory of In-terworkings only contains synchronous communication. Furthermore, Message Sequence Charts and Interwork-ings have a different approach with respect to their textual representation. <p> We will give the process graph for the example of the semantics in Figure 4. FIGURE 4. Process graph 7. A CHARACTERIZATION THEOREM In this section we will relate our semantics for instance oriented Message Sequence Charts to the event oriented semantics from <ref> [4, 12] </ref>. To this end we will show that a Basic Message Sequence Chart can be represented by a single trace. First we will define three functions and a predicate on processes. These are the alphabet function ff, which The Computer Journal, Vol. 37, No. 4, 1994 8 S. <p> We used the instance oriented syntax to derive a compositional semantics and indicated that this yields a semantics which is equivalent to the approach based on sequencing for an event oriented syntax <ref> [4, 12] </ref>. The development of the semantics for the complete Message Sequence Charts language follows the same line, applying more elaborate constructs from process algebra for features such as sub Message Sequence Charts and process creation.
Reference: [13] <author> S. Mauw and T. Winter. </author> <title> A prototype toolset for Interworkings. </title> <journal> Philips Telecommunication Review, </journal> <volume> 51(3) </volume> <pages> 41-45, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: The algebraic approach towards the definition of the formal semantics of Message Sequence Charts enables the use of term-rewriting systems for the rapid proto typing of specifications <ref> [13] </ref>. ACKNOWLEDGEMENTS We would like to thank Jos Baeten, Jan Bergstra, Ekkart Rudolph and Chris Verhoef for their useful comments and suggestions for improvements.
Reference: [14] <author> G. D. Plotkin. </author> <title> An operational semantics for CSP. </title> <booktitle> In Proceedings of the Conference on the Formal Description of Programming Concepts, </booktitle> <volume> volume 2, Garmisch, </volume> <year> 1983. </year> <journal> The Computer Journal, </journal> <volume> Vol. 37, No. 4, </volume> <year> 1994 </year>
Reference-contexts: STRUCTURAL OPERATIONAL SEMAN TICS In this section we define a structural operational semantics of Basic Message Sequence Charts in the style of Plotkin <ref> [14] </ref>. For this purpose we define action relations on closed P A BMSC terms. Then we give a graph model for the theory P A BMSC . 6.1.
References-found: 14

