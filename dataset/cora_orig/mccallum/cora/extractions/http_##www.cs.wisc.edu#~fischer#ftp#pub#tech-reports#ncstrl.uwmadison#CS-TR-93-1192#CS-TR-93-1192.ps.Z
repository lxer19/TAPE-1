URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-93-1192/CS-TR-93-1192.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-93-1192/
Root-URL: http://www.cs.wisc.edu
Email: mansha@cs.wisc.edu vernon@cs.wisc.edu  
Title: Qualitative Behavior of the EQS Parallel Processor Allocation Policy  
Author: Rajesh K. Mansharamani and Mary K. Vernon 
Date: December 9, 1993  
Address: 1210 West Dayton Street Madison, WI 53706.  
Affiliation: Computer Sciences Department University of Wisconsin  
Abstract: Several studies of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of specific parallel workloads. However, only very incomplete information is available about which workload parameters are key determinants of policy performance and how the mean response times of equiallocation policies behave as a function of key workload parameters. This paper addresses these issues for an idealization of the Spatial EQuiallocation policy (EQS) and a workload model that characterizes the essential features of parallel applications with respect to scheduling discipline performance. Important features of the workload model include general distribution for available job parallelism, controlled correlation between available parallelism and total job processing requirement, general distribution of processing requirement per class of jobs in the correlation model, and general nondecreasing deterministic job execution rates (i.e., speedups) that represent synchronization and communication overheads as well as load imbalance for parallel programs. The performance of EQS is analyzed using sample path analysis to derive bounds and using highly efficient and extensively validated interpolation approximations to derive estimates for mean response time (R EQS ). The bounds show that under exponential job processing requirements (demands) and any concave nondecreasing job execution rate function for all jobs R EQS is minimum when all jobs are fully parallel and is maximum when all jobs are fully sequential. The upper bound is also shown to hold under very general workload conditions. The approximation is used to obtain the demand and parallelism parameters that are key determinants of EQS performance and to study the behavior of R EQS as a function of changes in the workload. Mean response time is shown to decrease with stochastic increase in available parallelism, decrease in variability of parallelism, and increase in correlation. Under certain potentially realistic assumptions, the mean response time is also shown to be fairly insensitive to parallel program overheads. fl This research was partially supported by the National Science Foundation under grants CCR-9024144 and CDA-9024618.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal, R. Mansharamani, and M. Vernon. </author> <title> Response Time Bounds for Parallel Processor Allocation Policies. </title> <type> Technical Report # 1152, </type> <institution> Computer Sciences Department, University of Wisconsin-Madison, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: These assumptions are made for analytic tractability yet the solution techniques involve explicit enumeration of the state space, which yields no direct insight and grows exponentially in the number of processors. In this paper recent sample path analyses and interpolation approximation techniques <ref> [1, 16] </ref> are extended to analyze an idealization of the Spatial EQuiallocation policy (EQS) (defined in Section 2) for a workload model that we believe is broadly applicable and uses only a few parameters to characterize the essential properties of parallel applications with respect to scheduling discipline performance. <p> The lower and upper bounds in this section are generalizations of the bounds in <ref> [1] </ref> for the EQS policy, and are obtained as corollaries of more general bounds, which show that the performance of EQS improves with "increase" in available parallelism. For example, for workloads with the same available parallelism for all jobs R EQS decreases as available parallelism increases. In [1] it was shown <p> the bounds in <ref> [1] </ref> for the EQS policy, and are obtained as corollaries of more general bounds, which show that the performance of EQS improves with "increase" in available parallelism. For example, for workloads with the same available parallelism for all jobs R EQS decreases as available parallelism increases. In [1] it was shown that the mean response time of any processor conserving policy 4 under exponential job demands and linear job execution rates is minimum when N = P and maximum when N = 1. <p> m = P in Theorem 3.1 yields the following lower bound on R EQS : Corollary 3.1 Under the workload assumptions (; ; exp (1=D); r = 0; fl 2 E c ; E (j) = fl (j)), R EQS (F N ) R EQS (N = P ): In <ref> [1] </ref> a corresponding bound was given for all processor conserving policies assuming exponential demands and the linear ERF. As in [1], a tighter lower bound can be obtained when N 6 P by using the fact that R EQS S. <p> assumptions (; ; exp (1=D); r = 0; fl 2 E c ; E (j) = fl (j)), R EQS (F N ) R EQS (N = P ): In <ref> [1] </ref> a corresponding bound was given for all processor conserving policies assuming exponential demands and the linear ERF. As in [1], a tighter lower bound can be obtained when N 6 P by using the fact that R EQS S. <p> Under the workload assumptions (; ; exp (1=D); r = 0; fl 2 E c ; E (j) = fl (j)), R EQS (F N ) R EQS (N = 1): (6) For the linear ERF, the bounds in (5) and (6) can be shown to reduce to the following <ref> [1] </ref>: max DE [1=N ]; 1 P R EQS (; F N ; exp (1=D); r = 0; fl l ; E (j) = fl (j)) R M=M=P : 3.2 Experimental Evaluation of the N = P and N = 1 Bounds For the workload (; ; exp (1=D); r =
Reference: [2] <author> A. Bricker, M. Litzkow, and M. Livny. </author> <title> Condor Technical Summary. </title> <type> Technical Report TR 1069, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, WI, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: The results derived from approximation (11) in Sections 5 and 6 hold within the accuracy of the model, which is expected to be high for concave ERDs and is likely to be high for nonconcave ERDs as well. 6 Many of the simulations were run on the Condor distributed system <ref> [2] </ref>. 24 r=0, 0.5, 1, 25 5 Behavior of R EQS with respect to Key Parameters: r = 0 For the sake of simplicity we focus on uncorrelated workloads in this section and then generalize the results for correlated workloads in Section 6.
Reference: [3] <author> C. Chang, R. Nelson, and D. Yao. </author> <title> Optimal Task Scheduling on Distributed Parallel Processors. </title> <booktitle> Proceedings of Performance'93. </booktitle>
Reference-contexts: This results generalizes the corresponding results for specific workloads in Figures 6 and 7. Note that results (1) and (2) above contrast with studies of fork-join queueing systems that have shown parallelism to be harmful for other scheduling disciplines, particularly at high loads <ref> [14, 26, 3] </ref>. 31 5.3 R EQS as function of ERD Sublinearity Intuition suggests that system performance should improve with a decrease in synchronization and communication overheads. This is also shown analytically, since an increase in fl decreases E [1=fl (N )] which in turn decreases R EQS .
Reference: [4] <author> G. Dantzig. </author> <title> Linear Programming and Extensions. </title> <publisher> Princeton University Press, Princeton, </publisher> <year> 1963. </year>
Reference-contexts: Thus, for given fixed values for , D, and fl, ^ R p EQ in approximation (9) can be viewed as a linear combination of the p k 's and we can use linear programming <ref> [4] </ref> to obtain the minimum and maximum mean response times. The generic form of the linear program is given in Figure 5, where R k denotes R EQS (N = k). <p> For P = 100 and specific values of , D, and fl, the linear programs were solved for N = 1; 2; 5; 10; 25; 50; 75; and 100 using the Simplex Method of linear programming <ref> [4] </ref>. Figures 6 (a) and (b) plot the envelopes obtained from the minimum and maximum values of ^ R p EQ versus N for D = P , two different ERDs, and two different values of = D=P = .
Reference: [5] <author> L. Dowdy. </author> <title> On the Partitioning of Multiprocessor Systems. </title> <type> Technical Report, </type> <institution> Vanderbilt University, Nashville, TN, </institution> <month> July </month> <year> 1988. </year>
Reference-contexts: The second ERD is derived from a type of execution signature in <ref> [5] </ref>. 3 Mean Response Time Bounds for the EQS Policy This section first derives lower and upper bounds on R EQS for the workload (; F N ; exp (1=D); r = 0; fl 2 E c ; E (j) = fl (j)). <p> The first is simply the linear ERD. The second is a simple algebraic choice of a concave sublinear ERD, whereas the third is derived from a type of execution signature given in <ref> [5] </ref>. For the ERD fl (k) = k c , the validations include c = 0.7, 0.8, and 0.9, which are plotted for P = 100 in Figure 2 (a).
Reference: [6] <author> G. Grimmett, and D. Stirzaker. </author> <title> Probability and Random Processes. </title> <publisher> Oxford University Press, </publisher> <year> 1989. </year>
Reference: [7] <author> A. Gupta, A. Tucker, and L. Stevens. </author> <title> Making Effective Use of Shared Memory Multiprocessors: The Process Control Approach. </title> <type> Technical Report, </type> <institution> Computer Sciences Department, Stanford University, Stanford, </institution> <address> CA, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood.
Reference: [8] <author> F. Kelly. </author> <title> Reversibility and Stochastic Networks. </title> <publisher> John Wiley & Sons, </publisher> <year> 1979. </year>
Reference-contexts: The central interpolation approximation is derived by showing that the EQS system under constant available parallelism reduces to a symmetric queue <ref> [8] </ref> and then interpolating among the mean response time estimates at these extreme points to obtain an approximation for R EQS for general workloads. The mean response time approximation is extensively validated against simulation and shown to be very accurate across the workload parameter space. <p> Before proceeding, the known queueing system that will be used in deriving both the exact and approximate mean response times is the symmetric queue, which is defined as follows <ref> [8] </ref>. <p> Note that this does not hold if available parallelism is not constant across all jobs. The mean response time of a job in system k can be derived from Theorems 3.8 and 3.10 of <ref> [8] </ref>, which give the following steady state probability of i jobs in the queue for the stationary symmetric queue with arbitrary distribution of job service time: i = Q i ; i = 0; 1; 2; : : : (8) where a = D; and b = i=0 Q i # <p> Furthermore, equation (8) holds also for the case of multiple classes with different distribution of demand (see Theorem 3.8 and 3.10 of <ref> [8] </ref>), and thus R k = R EQS (N = k; r = 0). The mean response time of class k in k , R k ;C k , is obtained from part (ii) of Theorem 3.10 of Kelly [8]. <p> with different distribution of demand (see Theorem 3.8 and 3.10 of <ref> [8] </ref>), and thus R k = R EQS (N = k; r = 0). The mean response time of class k in k , R k ;C k , is obtained from part (ii) of Theorem 3.10 of Kelly [8].
Reference: [9] <author> S. </author> <title> Leutenegger. Issues in Multiprogrammed Multiprocessor Sharing. </title> <type> Ph.D. Thesis, Technical Report TR 954, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, WI, </institution> <month> August </month> <year> 1990. </year>
Reference-contexts: Experimental results in this paper will make use of the following bounded-geometric distribution for available job parallelism (similar to the distribution in <ref> [11, 9] </ref>): Definition 2.1 N has a bounded-geometric distribution with parameters P max and p if N = &lt; P; with probability P max ; min (X; P ); with probability 1 P max ; where X = Geometric (p): In some experiments, three specific bounded-geometric distributions for N will be <p> This means that R EQS is independent of C D for all distributions of job demand and all distributions of job parallelism. Simulation studies have also verified this result for specific demand distributions <ref> [11, 9] </ref>. The dependence of R EQS on D can be readily obtained from approximation (11). For a given , R EQS is directly proportional to D.
Reference: [10] <author> S. Leutenegger, and R. Nelson. </author> <title> Analysis of Spatial and Temporal Scheduling Policies for Semi-Static and Dynamic Multiprocessor Environments. </title> <type> Research Report, </type> <institution> IBM T.J. Watson Research Center, Yorktown Heights, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood. <p> In particular, previous simulation studies necessarily make specific assumptions about distributions of cumulative processing demand and parallelism, and previous analytic studies of equiallocation policies <ref> [10, 27] </ref> either assume that task service times are exponentially distributed, or assume that job service time is exponentially distributed.
Reference: [11] <author> S. Leutenegger, and M. Vernon. </author> <title> The Performance of Multiprogrammed Multiprocessor Scheduling Policies. </title> <booktitle> Proceedings of the ACM SIGMETRICS Conference on Measurement & Modeling of Computer Systems, </booktitle> <month> May </month> <year> 1990, </year> <pages> pp. 226-236. 39 </pages>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood. <p> Furthermore, the authors are not aware of any study that has allowed controlled correlation between demand and parallelism. (Some previous studies have considered specific extremes of correlation such as r = 0 and r = 1, cf. <ref> [12, 11, 32] </ref>. <p> Experimental results in this paper will make use of the following bounded-geometric distribution for available job parallelism (similar to the distribution in <ref> [11, 9] </ref>): Definition 2.1 N has a bounded-geometric distribution with parameters P max and p if N = &lt; P; with probability P max ; min (X; P ); with probability 1 P max ; where X = Geometric (p): In some experiments, three specific bounded-geometric distributions for N will be <p> This means that R EQS is independent of C D for all distributions of job demand and all distributions of job parallelism. Simulation studies have also verified this result for specific demand distributions <ref> [11, 9] </ref>. The dependence of R EQS on D can be readily obtained from approximation (11). For a given , R EQS is directly proportional to D.
Reference: [12] <author> S. Majumdar, D. Eager, and R. Bunt. </author> <title> Scheduling in Multiprogrammed Parallel Systems. Performance Evaluation Review 16, </title> <month> 1 (May </month> <year> 1988), </year> <pages> 104-113. </pages>
Reference-contexts: Furthermore, the authors are not aware of any study that has allowed controlled correlation between demand and parallelism. (Some previous studies have considered specific extremes of correlation such as r = 0 and r = 1, cf. <ref> [12, 11, 32] </ref>.
Reference: [13] <author> S. Majumdar, D. Eager, and R. Bunt. </author> <title> Characterisation of programs for scheduling in multiprogrammed parallel systems. </title> <journal> Performance Evaluation, </journal> <volume> Vol. 13, </volume> <year> 1991, </year> <pages> pp. 109-130. </pages>
Reference: [14] <author> A. Makowski, and R. Nelson. </author> <title> Distributed Parallelism Considered Harmful. </title> <type> Technical Report RC 17449, </type> <institution> IBM Research Division, </institution> <year> 1991. </year>
Reference-contexts: This results generalizes the corresponding results for specific workloads in Figures 6 and 7. Note that results (1) and (2) above contrast with studies of fork-join queueing systems that have shown parallelism to be harmful for other scheduling disciplines, particularly at high loads <ref> [14, 26, 3] </ref>. 31 5.3 R EQS as function of ERD Sublinearity Intuition suggests that system performance should improve with a decrease in synchronization and communication overheads. This is also shown analytically, since an increase in fl decreases E [1=fl (N )] which in turn decreases R EQS .
Reference: [15] <author> R. Mansharamani. </author> <title> Efficient Analysis of Parallel Processor Scheduling Policies. </title> <type> Ph.D. Thesis, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, WI, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: It can be shown that for a fixed value of N , the bounded-geometric distribution with lowest C N has P max = 0:0 and the bounded-geometric distribution with highest C N has p = 1 <ref> [15] </ref>. Thus, the first group of three are low C N workloads, the last group are high C N workloads, and the middle group are workloads with intermediate C N .
Reference: [16] <author> R. Mansharamani, and M. Vernon. </author> <title> Approximate Analysis of Parallel Processor Allocation Policies. </title> <note> In preparation. </note>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood. <p> These assumptions are made for analytic tractability yet the solution techniques involve explicit enumeration of the state space, which yields no direct insight and grows exponentially in the number of processors. In this paper recent sample path analyses and interpolation approximation techniques <ref> [1, 16] </ref> are extended to analyze an idealization of the Spatial EQuiallocation policy (EQS) (defined in Section 2) for a workload model that we believe is broadly applicable and uses only a few parameters to characterize the essential properties of parallel applications with respect to scheduling discipline performance. <p> The key extensions to the workload model in this paper as compared with <ref> [16] </ref> are (1) the model of correlation and (2) several equations that constrain the system parameter space. The constraints on the parameter space aid in evaluating the qualitative behavior of EQS and in identifying stress tests for validating the interpolation approximations. <p> In practical implementations preemption overhead will exist but preemption frequency should be limited so as to guarantee that overhead is a small fraction of the application processing time. Below we define the EQS scheduling policy (Section 2.1), the basic workload model as it was defined in <ref> [16] </ref> (Section 2.2), and extensions to that workload model to represent correlation between total job processing requirement and available parallelism (Section 2.3). <p> Extensions that would further increase the applicability of the model yet preserve its tractability and parameter simplicity would be desirable, but appear to be quite difficult to obtain. 2.3 Correlation Model The workload model defined so far is very similar to the workload model in <ref> [16] </ref>. In this section the model is extended to allow correlation between D and N . It is unknown whether or how job processing demand is correlated with parallelism in real workloads. <p> These distributions are given in Table 2. Discussion of these workloads is contained in <ref> [16] </ref>. <p> Note that when P = 1 or when N = 1 the EQS policy is identical to the PS policy, and thus R EQS (N = 1) equals R M=G=P P S = R M=M=P . For the case of the linear ERF it was shown in <ref> [16] </ref> that when P mod k = 0, R EQS (N = k) = R M=G=c P S = R M=M=c , where c = P=k. <p> however, if k &gt; 1. 4.2 Approximation for R EQS : general N and r Given equation (7) for R EQS (N = k; r = 0), the following interpolation on the pmf of N might be used to approximate the mean response time for general distributions of N (cf. <ref> [16] </ref>): R EQS (F N ; r = 0) ^ R EQ = k=1 p k R EQS (N = k; r = 0); under (; ; F u D ; r = 0; fl; E (j) = fl (j)): (9) However, it is not immediately obvious whether or how one <p> For a given , R EQS is directly proportional to D. This is because R EQS (N = k; r = 0) given by equation (7) is directly proportional to D for a given (because = P=D). These results were also shown for the linear ERF in <ref> [16] </ref>. 5.2 R EQS as a function of job parallelism To understand the behavior of R EQS as a function of available parallelism, N , we need to know which parameters of N are principal determinants of R EQS . Natural candidates are N and C N .
Reference: [17] <author> R. Mansharamani, and M. Vernon. </author> <title> Benefits of Instant Job Service for Parallel Processor Scheduling. </title> <note> In preparation. </note>
Reference-contexts: below are only with respect to the EQS policy and do not hold for all processor conserving policies. 3 The bounds also hold for the generalized exponential distribution since it can be shown analytically that the mean response time of EQ is the same under exponential and generalized exponential demands <ref> [17] </ref>. 4 A processor conserving policy does not allocate more processors to a job than the job can productively make use of, and it does not leave a processor idle if any job can make use of that processor. 14 3.1 Lower and Upper Bounds: F u D = exp; r
Reference: [18] <author> C. McCann, R. Vaswani, and J. Zahorjan. </author> <title> A Dynamic Processor Allocation Policy for Multiprogrammed, Shared Memory Multiprocessors. </title> <journal> ACM Transactions on Computer Systems 11, </journal> <month> 2 (May </month> <year> 1993), </year> <pages> 146-178. </pages>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood.
Reference: [19] <author> V. Naik, S. Setia, and M. Squillante. </author> <title> Scheduling of Large Scientific Applications on Distributed Memory Multiprocessor Systems. </title> <booktitle> Proceedings of the 6th SIAM Conference on Parallel Processing for Scientific Computation. </booktitle> <institution> IBM Research Report RC 18621, T. J. Watson Research Center, Yorktown Heights, </institution> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood.
Reference: [20] <author> V.Naik, S. Setia, and M. Squillante. </author> <title> Performance Analysis of Job Scheduling Policies in Parallel Supercomputing Environments. </title> <note> To appear, Proceedings of Supercomputing'93, </note> <month> November </month> <year> 1993. </year> <institution> IBM Research Report RC 19138, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood.
Reference: [21] <author> R. Nelson. </author> <title> A Performance Evaluation of a General Parallel Processing Model. </title> <booktitle> Proceedings of the ACM SIGMETRICS Conference on Measurement & Modeling of Computer Systems, </booktitle> <month> May </month> <year> 1990, </year> <pages> pp. 13-26 </pages> . 
Reference-contexts: When r = 1, fl is concave, and N=fl (N ) is concave, S is maximum when C N is minimum and S is minimum when C N is maximum. (The result for r = 1 holds for i.i.d. exponential task service times <ref> [21] </ref>.) For concave fl and N=fl (N ), S decreases with workload correlation r. (Note that N=fl (N ) is concave for the concave ERDs considered in the experiments in this paper.) 2.5 Notation Table 1 summarizes the notation for the model parameters and variables.
Reference: [22] <author> R. Nelson, and D. Towsley. </author> <title> A Performance Evaluation of Several Priority Policies for Parallel Processing Systems. </title> <type> COINS Technical Report 91-32, </type> <institution> Computer and Information Sciences, University of Massachusetts, </institution> <address> Amherst, MA, </address> <month> May </month> <year> 1991. </year> <note> (To appear in JACM.) </note>
Reference: [23] <author> R. Nelson, D. Towsley, and A. Tantawi. </author> <title> Performance Analysis of Parallel Processing Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <month> April </month> <year> 1988, </year> <pages> pp. 532-540. </pages>
Reference: [24] <author> A. Roberts, and D. Varberg. </author> <title> Convex Functions. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: Conversely, f is convex if f (ffx + (1 ff)y) fff (x) + (1 ff)f (y) <ref> [24] </ref>.
Reference: [25] <author> S. Ross. </author> <title> Stochastic Processes. </title> <address> New York, </address> <publisher> Wiley 1983. </publisher> <pages> 40 </pages>
Reference-contexts: In particular, consider two distributions F N 1 and F N 2 such that N 2 st N 1 (i.e., P [N 2 n] P [N 1 n], 1 n P ). Under this condition it is shown in <ref> [25] </ref> that E [f (N 1 )] E [f (N 2 )] for any nonincreasing function f . Setting f = 1=fl it follows that E [1=fl (N 1 )] E [1=fl (N 2 )] and thus R EQS (F N 1 ) R EQS (F N 2 ). <p> What if the mean parallelism is held constant but the variability in parallelism changes? More precisely, consider N 1 = N 2 and N 1 v N 2 , which means that E [f (N 1 )] E [f (N 2 )] for all convex functions f <ref> [25] </ref>. If fl is concave then 1=fl is convex and it follows that R EQS (F N 1 ) R EQS (F N 2 ) if N 1 v N 2 .
Reference: [26] <author> S. Setia, M. Squillante, and S. Tripathi. </author> <title> Analysis of Processor Allocation in Multiprogrammed Par--allel Processing Systems. </title> <type> Technical Report CS-TR-2840, </type> <institution> University of Maryland, College Park, MD, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: This results generalizes the corresponding results for specific workloads in Figures 6 and 7. Note that results (1) and (2) above contrast with studies of fork-join queueing systems that have shown parallelism to be harmful for other scheduling disciplines, particularly at high loads <ref> [14, 26, 3] </ref>. 31 5.3 R EQS as function of ERD Sublinearity Intuition suggests that system performance should improve with a decrease in synchronization and communication overheads. This is also shown analytically, since an increase in fl decreases E [1=fl (N )] which in turn decreases R EQS .
Reference: [27] <author> S. Setia, and S. Tripathi. </author> <title> An Analysis of Several Processor Partitioning Policies for Parallel Computers. </title> <type> Technical Report CS-TR-2684, </type> <institution> University of Maryland, College Park, MD, </institution> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood. <p> In particular, previous simulation studies necessarily make specific assumptions about distributions of cumulative processing demand and parallelism, and previous analytic studies of equiallocation policies <ref> [10, 27] </ref> either assume that task service times are exponentially distributed, or assume that job service time is exponentially distributed.
Reference: [28] <author> S. Stidham. </author> <title> A last word on L = W . Operations Research 22, </title> <booktitle> 2 (1974), </booktitle> <pages> 417-421. </pages>
Reference: [29] <author> D. Towsley, C. Rommel, and J. Stankovic. </author> <title> Analysis of Fork-Join Program Response Times on Multiprocessors. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <month> July </month> <year> 1990, </year> <pages> pp. 286-303. </pages>
Reference: [30] <author> A. Tucker, and A. Gupta. </author> <title> Process Control and Scheduling Issues for Multiprogrammed Shared-Memory Multiprocessors. </title> <booktitle> Proceedings of the 12th ACM Symposium on Operating System Principles, </booktitle> <month> December </month> <year> 1989, </year> <pages> pp. 159-166. </pages>
Reference-contexts: 1 Introduction Dynamic equiallocation policies are a class of parallel processor scheduling policies that attempt to allocate processing power equally to all jobs, subject to the constraint that no job is allocated more processors than its available parallelism. Several studies <ref> [30, 11, 10, 18, 7, 27, 19, 20, 16] </ref> of multiprogrammed parallel systems have observed that dynamic equiallocation policies have high performance for a variety of workloads, where the performance metric is mean response time. However, the performance characteristics of equiallocation policies are not yet thoroughly understood. <p> Ignoring variations in implementation details, the EQS policy was first defined in <ref> [30] </ref>. In this paper we analyze the EQS policy and also comment on the applicability of the results for temporal and hybrid spatial/temporal equiallocation policies.
Reference: [31] <author> J. Walrand. </author> <title> Introduction to Queueing Networks. </title> <publisher> Prentice Hall 1988. </publisher>
Reference: [32] <author> S. Zhou, and T. Brecht. </author> <title> Processor-pool-based Scheduling for Large-Scale NUMA Multiprocessors. Performance Evaluation Review 19, </title> <month> 1 (May </month> <year> 1991), </year> <pages> 133-142. 41 </pages>
Reference-contexts: Furthermore, the authors are not aware of any study that has allowed controlled correlation between demand and parallelism. (Some previous studies have considered specific extremes of correlation such as r = 0 and r = 1, cf. <ref> [12, 11, 32] </ref>.
References-found: 32

