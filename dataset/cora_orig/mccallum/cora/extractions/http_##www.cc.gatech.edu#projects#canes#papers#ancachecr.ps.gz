URL: http://www.cc.gatech.edu/projects/canes/papers/ancachecr.ps.gz
Refering-URL: http://www.cs.gatech.edu/computing/classes/cs6386_98_winter/readinglist.html
Root-URL: 
Email: fbobby,calvert,ewzg@cc.gatech.edu  
Title: Self-Organizing Wide-Area Network Caches  
Author: Samrat Bhattacharjee, Kenneth L. Calvert, Ellen W. Zegura 
Address: Atlanta, GA 30332  
Affiliation: Networking and Telecommunications Group, College of Computing Georgia Institute of Technology,  
Abstract: A substantial fraction of all network traffic today comes from applications in which clients retrieve objects from servers. The caching of objects in locations "close" to clients is an important technique for reducing both network traffic and response time for such applications. In this paper we consider the benefits of associating caches with switching nodes throughout the network, rather than in a few locations. We also consider the use of various self-organizing or active cache management strategies for organizing cache content. We evaluate caching techniques using both simulation and a general analytic model for network caching. Our results indicate that in-network caching can make effective use of cache space, and in many cases self-organizing caching schemes yield better average round-trip latencies than traditional approaches, using much smaller per-node caches. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Braun and K. Claffy, </author> <title> "Web traffic characterization: An assessment of the impact of caching documents from NCSA's web server," </title> <booktitle> in Electronic Proceedings of the Second World Wide Web Conference '94: Mosaic and the Web, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: The caching of objects in locations "close" to clients is an important technique for reducing both network traffic and response time for such applications. Studies have shown <ref> [1, 2] </ref> that caching can substantially improve performance. In this paper we consider the benefits of associating caches with switching nodes throughout the network, rather than in a few hand-chosen locations.
Reference: [2] <author> P. Danzig, M. Schwatrz, and R. Hall, </author> <title> "A case for caching file objects inside internetworks," </title> <booktitle> in Proceedings of ACM SIGCOMM '93, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: The caching of objects in locations "close" to clients is an important technique for reducing both network traffic and response time for such applications. Studies have shown <ref> [1, 2] </ref> that caching can substantially improve performance. In this paper we consider the benefits of associating caches with switching nodes throughout the network, rather than in a few hand-chosen locations.
Reference: [3] <author> D. Tennenhouse, J. Smith, W. Sincoskie, D. Wether-all, and G. Minden, </author> <title> "A survey of active network research," </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 35, no. 1, </volume> <year> 1997. </year>
Reference-contexts: We also consider the use of various self-organizing or active cache management strategies, in which nodes make globally consistent decisions about whether or not to cache an item in order to reduce overall latency. We develop the self-organizing algorithms assuming an "active" network platform <ref> [3, 10] </ref>, in which the routing nodes can manipulate packets and even execute code on behalf of users. The per-packet processing required by the self-organizing caching algorithms is a natural application for active networks.
Reference: [4] <author> M. Arlitt and C. Williamson, </author> <title> "Web server workload characterization: The search for invariants," </title> <booktitle> in Proceedings of ACM SIGMETRICS '95, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: The techniques, however, are independent of any particular active network platform. Our studies involve both analysis and simulation, and use object request distributions that are consistent with studies of actual Web traffic <ref> [4] </ref>. Our results indicate that in-network caching can make effective use of cache space. In particular, active caching yields round-trip latencies that are about as good, and in certain cases better than more traditional approaches, while requiring much smaller caches per node. <p> This models the case in which server popularity is not uniform throughout the network. These access patterns are consistent with what is known about access to objects in the World Wide Web. Among the "invariants" found by Arlitt and Williamson in their study of server logs <ref> [4] </ref> was that the number of distinct objects requested is between .3% and 2.1% of the total number of requests.
Reference: [5] <author> C. M. Bowman, P. Danzig, D. Hardy, U. Manber, M. Schwartz, and D. Wessels, "Harvest: </author> <title> A scalable, customizable discovery and access system," </title> <type> Tech. Rep. </type> <institution> CU-CS-732-94, University of Colorado Boulder, </institution> <year> 1995. </year>
Reference-contexts: We measure cache scheme performance by the average number of hops traveled by request and response messages to satisfy a client request. This metric accounts for two beneficial aspects of caching: reduction in network traffic, and reduction of the latency perceived by the requesting user. The Harvest Cache <ref> [5] </ref> project, initiated at the University of Colorado, is probably the largest wide area cache implementation in the Internet. Harvest caches are usually arranged in a hierarchy, and Web clients are manually configured to access a particular cache in the hierarchy designated as the client's proxy. <p> Cache at Stub Nodes Connected to Transit Nodes ("SCT"). Stub nodes connected to transit nodes have to be traversed in order to access the transit network. Thus, these stub nodes form good locations for network caches. The Harvest <ref> [5] </ref> scheme recommends that caches be placed at such locations. Cache at Every Node ("No AN"). We also consider an approach in which caches are located in every node (like the self-organizing schemes), but without any coordinating mechanisms enabled.
Reference: [6] <author> D. Wessels and K. Claffy, </author> <title> "Internet Cache Protocol (ICP), </title> <type> version 2," tech. rep., </type> <institution> IETF Network Working Group, </institution> <month> May 27 May </month> <year> 1997. </year> <month> draft-wessels-icp-v2-03.txt. </month>
Reference-contexts: If the client request can be satisfied at the initial proxy cache, it is served by the proxy. In case of a miss, the parent and sibling caches in the hierarchy are contacted using the Internet Cache Protocol (ICP <ref> [6] </ref> discussed below). If the requested object is not available at the sibling caches or at the parent, then the client's proxy cache generates another HTTP query with its parent cache as the target using the HTTP proxy protocol or ICP. <p> A similar push caching approach in which servers disseminate popular pages has been proposed by Oritz and German at the University of Waterloo [8]. In both schemes, the server initiates the caching of an object (that it deems popular) at a remote site. The Internet Cache Protocol (ICP) <ref> [6] </ref> defined by the Network Working Group of the IETF is a message format used for communicating among Web caches.
Reference: [7] <author> J. Gwertzman and M. Seltzer, </author> <title> "The case for geographical push caching," in Hot Operating Systems, </title> <year> 1995. </year>
Reference-contexts: This scheme is effective in reducing the wide-area bandwidth requirements, and in accessing "hot-spots" only once per hierarchy, as the "hot" item is then cached within the hierarchy, and subsequent requests to the same object can be satisfied by a Harvest cache hit. The geographical push caching scheme <ref> [7] </ref> of Seltzer and Gwertzman at Harvard uses a friends-of-friends algorithm in which servers selectively push their content to friend caches that reside in client domains. A similar push caching approach in which servers disseminate popular pages has been proposed by Oritz and German at the University of Waterloo [8].
Reference: [8] <author> A. Lopez-Ortiz and D. M. </author> <note> German, "A multicollabo-rative push-caching http protocol for the WWW," in World Wide Web Conference (WWW5), 1995. Poster Presentation. </note>
Reference-contexts: A similar push caching approach in which servers disseminate popular pages has been proposed by Oritz and German at the University of Waterloo <ref> [8] </ref>. In both schemes, the server initiates the caching of an object (that it deems popular) at a remote site. The Internet Cache Protocol (ICP) [6] defined by the Network Working Group of the IETF is a message format used for communicating among Web caches.
Reference: [9] <author> K. L. Calvert, M. B. Doar, and E. W. Zegura, </author> <title> "Modeling internet topology," </title> <journal> IEEE Communications Magazine, </journal> <month> June </month> <year> 1997. </year>
Reference-contexts: Domains are of two types, transit, which (as their name implies) carry transit traffic, and stub, through which only packets addressed to or from some node in the domain are carried. The graph models used in our simulations are constructed using the GT-ITM Internet topology modeling package <ref> [9] </ref>.
Reference: [10] <author> S. Bhattacharjee, K. L. Calvert, and E. W. Zegura, </author> <title> "An Architecture for Active Networking," </title> <booktitle> in Proceedings of High Performance Networking 97, </booktitle> <year> 1997. </year>
Reference-contexts: We also consider the use of various self-organizing or active cache management strategies, in which nodes make globally consistent decisions about whether or not to cache an item in order to reduce overall latency. We develop the self-organizing algorithms assuming an "active" network platform <ref> [3, 10] </ref>, in which the routing nodes can manipulate packets and even execute code on behalf of users. The per-packet processing required by the self-organizing caching algorithms is a natural application for active networks. <p> AN-Sim simulates an active network as described in <ref> [10] </ref>, and allows for realistic models of the network topology. This section discusses the various parameters of our simulations. Network Topologies. We simulated many networks that differ in number of nodes, diameter, average node degree, ratio of transit nodes to stub nodes, etc.
References-found: 10

