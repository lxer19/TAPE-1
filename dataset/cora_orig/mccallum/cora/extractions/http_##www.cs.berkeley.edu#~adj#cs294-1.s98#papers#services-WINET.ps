URL: http://www.cs.berkeley.edu/~adj/cs294-1.s98/papers/services-WINET.ps
Refering-URL: http://www.cs.berkeley.edu/~adj/cs294-1.s98/plan.html
Root-URL: 
Email: (hodes,randy)@cs.berkeley.edu  
Title: Composable Ad hoc Location-based Services for Heterogeneous Mobile Clients problem: 1) allowing device mobility, 2)
Author: Todd D. Hodes, Randy H. Katz 
Note: Four capabilities are needed for a comprehensive solution to this  
Date: November 24, 1997  
Address: Berkeley  
Affiliation: Computer Science Division University of California,  
Abstract: This paper introduces a comprehensive architecture that supports adapting a client device's functionality to new services it discovers as it moves into a new environment. Users wish to invoke services such as controlling the lights, printing locally, gaining access to application-specific proxies, or reconfiguring the location of DNS servers from their mobile devices. But a priori standardization of interfaces and methods for service invocation is infeasible. Thus, the challenge is to develop a new service architecture that supports heterogeneity in client devices and controlled objects while making minimal assumptions about standard interfaces and control protocols. We motivate the need for these capabilities by using an example scenario to derive the design requirements for our mobile services architecture. We then present a prototype implementation of elements of the architecture and some example services using it, including controls to audio/visual equipment, extensible mapping, server au-toconfiguration, location tracking, and local printer access. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> AMIR, E., MCCANNE, S., AND KATZ, R. </author> <title> Receiver-driven Bandwidth Allocation for Lightweight Sessions. </title> <booktitle> Proc. ACM Multimedia '97 (November 1997). </booktitle>
Reference-contexts: A failure to keep accurate time can break some security systems, notably Kerberos. Spawning a local RTP gateway/transcoder for unlayered data in MBone sessions may be necessary if movement has changed the bottleneck link to sources or to facilitate local management of inter-session bandwidth sharing <ref> [1] </ref>. Autoconfiguration also adds a level of fault tolerance. If a network link goes down, SIP beacons coming across the failed link will stop. The client will wait for other beacons to be obtained (c.f., overlay networking vertical handoff), and reconfiguration to the new servers will happen transparently.
Reference: [2] <author> AMIR, E., MCCANNE, S., AND ZHANG, H. </author> <title> An Application-level Video Gateway. </title> <booktitle> Proc. ACM Multimedia '95 (November 1995), </booktitle> <pages> 511-522. </pages>
Reference-contexts: Thus, the infrastructure needs to explicitly support spawning of these entities. Examples of such useful intermediate agents include web proxies that perform on-demand dynamic transcoding [12], network data caches, real-time media transcoders <ref> [2] </ref>, and multicast-to-unicast gateways for multicast-unaware client devices (i.e., most PDAs). Proxy, gateway, and server autoconfiguration is important in a mobile environment for more than just efficiency. <p> Using such an approach requires that devices be manually adapted to new environments. Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model [12] and implicitly in other work <ref> [6, 2] </ref> that places application-level or network-level entities near, but not at, the endpoints of communications. This is another way of thinking about Active Networks [41], driven by end-to-end design principles [31]: push agents to as close to the endpoints as possible, but no further.
Reference: [3] <author> ANDERSON, T., PATTERSON, D., CULLER, D., </author> <title> AND THE NOW TEAM. A Case for Networks of Workstations: NOW. </title> <note> IEEE Micro (February 1995). </note>
Reference-contexts: This concept of leveraging the well-connected, computationally powerful side of the wireless link (via proxies or agents) pervades mobility research. 12 It is also driven by the growing availability of workstation farms <ref> [3] </ref> designed to provide compute resources for just such applications. 7 Continuing Work and Future Direc tions Our continuing work involves iterating over the design, refining the implementation, and investigating various other approaches. 7.1 Wide-area issues The current implementation has been tested only in a local area environment; work is continuing
Reference: [4] <author> AZIZ, A., AND DIFFIE, W. </author> <title> Privacy and Authentication for Wireless Local Area Networks. </title> <booktitle> In IEEE Personal Communications (First Quarter 1994), IEEE, </booktitle> <pages> pp. 25-31. </pages>
Reference-contexts: We are still trying to quantitatively determine which data, if any, is best dedicated to these bits for optimizing reasonable client-driven workloads. 3.6 Scoped Access Control Making services available to visitors brings up a host of general security issues, including those specific to the wireless domain <ref> [7, 13, 4] </ref>. In addition to standard cryptography-basedsecurity with passwords, capabilities (e.g., Kerberos), and public-key encryption, service interaction systems specifically require additional access control. This is due to our extending devices to be network-addressable entities.
Reference: [5] <author> BAKRE, A., AND BADRINATH, B. </author> <title> Reworking the RPC Paradigm for Mobile Clients. </title> <booktitle> Mobile Networks and Applications 1, </booktitle> <month> 4 (January </month> <year> 1997), </year> <pages> 371-86. </pages>
Reference-contexts: It also requires a mechanism for securely delegating operations [24]. 7.4 Queued RPC Queued RPC mechanisms <ref> [20, 5] </ref> support disconnection and link variability by incorporating application-managed messaging state. Queued RPC and asynchronous notification support is not incorporated into our system, but should be.
Reference: [6] <author> BALAKRISHNAN, H., SESHAN, S., AMIR, E., AND KATZ, R. </author> <title> Improving TCP/IP Performance over Wireless Networks. </title> <booktitle> In Proc. 1st ACM Conf. on Mobile Computing and Networking (San Franscisco, </booktitle> <address> California, </address> <month> November </month> <year> 1995), </year> <pages> pp. 2-11. </pages>
Reference-contexts: Using such an approach requires that devices be manually adapted to new environments. Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model [12] and implicitly in other work <ref> [6, 2] </ref> that places application-level or network-level entities near, but not at, the endpoints of communications. This is another way of thinking about Active Networks [41], driven by end-to-end design principles [31]: push agents to as close to the endpoints as possible, but no further.
Reference: [7] <author> BROWN, D. </author> <title> Techniques for Privacy and Authentication in Personal Communications Systems. </title> <journal> In IEEE Personal Communications (August 1995), IEEE, </journal> <pages> pp. 6-10. </pages>
Reference-contexts: We are still trying to quantitatively determine which data, if any, is best dedicated to these bits for optimizing reasonable client-driven workloads. 3.6 Scoped Access Control Making services available to visitors brings up a host of general security issues, including those specific to the wireless domain <ref> [7, 13, 4] </ref>. In addition to standard cryptography-basedsecurity with passwords, capabilities (e.g., Kerberos), and public-key encryption, service interaction systems specifically require additional access control. This is due to our extending devices to be network-addressable entities.
Reference: [8] <author> BUKOWSKI, R., AND DOWNS, L. </author> <title> User's Guide to the 608-7 Computer Control System, </title> <month> December </month> <year> 1993. </year> <title> UC Berkeley CS260 class project. </title>
Reference-contexts: The DEC workstation talks to the AMX via a RS-232 serial connection, which allows the workstation to act as the control interface. In 1993, Bukowski and Downs designed a library for accessing the AMX from a workstation for use in a similar room <ref> [8] </ref>. They also produced a client/server package utilizing the library.
Reference: [9] <author> CLARK, D., AND TENNENHOUSE, D. </author> <title> Architectural Considerations for a New Generation of Protocols. </title> <booktitle> Proceedings of ACM SIGCOMM '90 (September 1990), </booktitle> <pages> 201-208. </pages>
Reference-contexts: The utility of beacon payload augmentation is highly dependent on the direction of the beaconing, traffic patterns, and application mix. An argument against augmenting beacons at all is that orthogonal applications shouldn't mix their data units that may have been properly sized by the application (c.f., application-level framing <ref> [9] </ref> or joint source-channel coding [28]). We choose to augment our beacons with bootstrap information, a ticket for scoping of services, and a dynamically configurable application-specific payload. The encoding is shown in Figure 5.
Reference: [10] <institution> CORBA Home Page. </institution> <note> http://www.omg.org/, 1997. </note>
Reference-contexts: Automatic layout heuristics can also be used. 3.7.2 Interface Specification The conventional notion of an Interface Definition Language (IDL) (e.g., the CORBA IDL) is to specify parameters, parameter data types, and parameter-passing conventions for remote object invocation <ref> [10] </ref>. The basic function of a Model-based User Interface [40] is to specify interfaces as structured widget hierarchies along with sets of constraints. The actual interface is derived from the model at run time or through a compilation step.
Reference: [11] <author> DAVIS, C., VIXIE, P., GOODWIN, T., AND DICKINSON, I. </author> <title> A Means for Expressing Location Information in the Domain Name System. RFC, </title> <month> Jan </month> <year> 1996. </year> <month> RFC-1876. </month>
Reference-contexts: Each SIP database contains pointers to local maps (and potentially different encodings of the same map) and to map metadata including the positioning information (latitude/longitude coordinates of two corners) and peers. This technique extends the technique used for notation of physical geography in proposed LOC DNS record type <ref> [11] </ref> to objects without IP addresses. 4.2 Proxy and Gateway Autoconfiguration Proxy and gateway autoconfiguration is a lightweight service built atop the server reconfiguration service. The difference between it and server reconfiguration (c.f., Section 2.1) is simply that proxies and gateways run in the infrastructure, between client and server.
Reference: [12] <author> FOX, A., BREWER, E., GRIBBLE, S., AND AMIR, E. </author> <title> Adapting to Network and Client Variability via On-Demand Dynamic Transcoding. </title> <booktitle> ASPLOS (1996). </booktitle>
Reference-contexts: The difference between it and server reconfiguration (c.f., Section 2.1) is simply that proxies and gateways run in the infrastructure, between client and server. Thus, the infrastructure needs to explicitly support spawning of these entities. Examples of such useful intermediate agents include web proxies that perform on-demand dynamic transcoding <ref> [12] </ref>, network data caches, real-time media transcoders [2], and multicast-to-unicast gateways for multicast-unaware client devices (i.e., most PDAs). Proxy, gateway, and server autoconfiguration is important in a mobile environment for more than just efficiency. <p> Using such an approach requires that devices be manually adapted to new environments. Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model <ref> [12] </ref> and implicitly in other work [6, 2] that places application-level or network-level entities near, but not at, the endpoints of communications.
Reference: [13] <author> FOX, A., AND GRIBBLE, S. D. </author> <title> Security on the Move: Indirect Authentication using Kerberos. </title> <booktitle> Proceedings of the 2nd ACM International Conference on Mobile Computing and Networking (1996), </booktitle> <pages> 10-12. </pages>
Reference-contexts: We are still trying to quantitatively determine which data, if any, is best dedicated to these bits for optimizing reasonable client-driven workloads. 3.6 Scoped Access Control Making services available to visitors brings up a host of general security issues, including those specific to the wireless domain <ref> [7, 13, 4] </ref>. In addition to standard cryptography-basedsecurity with passwords, capabilities (e.g., Kerberos), and public-key encryption, service interaction systems specifically require additional access control. This is due to our extending devices to be network-addressable entities.
Reference: [14] <author> GOLDBERG, I., WAGNER, D., THOMAS, R., AND BREWER, E. </author> <title> A Secure Environment for Untrusted Helper Applications: Confining the Wily Hacker. </title> <booktitle> Proc. of the 6th USENIX Security Symposium (1996). </booktitle>
Reference-contexts: end user using a high-latency, low bandwidth wireless interface can be substantially less with prefetching and transparent remapping than with demand-paging. 3.7.4 Client-side Security As for mobile code security, by transferring only an interface to the client, it is probable that a sandboxed environment (such as Java, Safe-Tcl, or Janus <ref> [14] </ref>) can be used without constraining the service's functionality. This is another benefit of the proxy-based access model: it segments the security domain and thereby allows potential internal holes to be screened from the user.
Reference: [15] <author> GUYTON, J. D., AND SCHWARTZ, M. F. </author> <title> Experiences with a Survey Tool for Discovering Network Time Protocol Servers. </title> <booktitle> Proc. of the USENIX Summer Conference (June 1994), </booktitle> <pages> 257-265. </pages>
Reference-contexts: Work has been done to allow clients to recreate these topological relationships for a small class of services using limited support from the network <ref> [15] </ref>. We'd like to overload our hierarchical service infrastructure this functionality directly. To do so, each service interaction server maintains pointers to others in the hierarchy and to peers (as in the above for fault tolerance).
Reference: [16] <author> HANDLEY, M. </author> <title> SAP: Session Announcement Protocol, draft-ietf-mmusic-sap-00.ps. </title> <type> IETF, </type> <year> 1996. </year>
Reference-contexts: Overlay networking [39] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. The developing Service Location Protocol [43], the Domain Name Service [29], and the Session Announcement Protocol <ref> [16] </ref> address some concerns in resource discovery and management; DNS and the Session Description Protocol [17] address naming. Such efforts have been instrumental in motivating this work and in deriving its design. The rest of this paper is structured as follows. <p> DNS is a widely-deployed distributed name service. SDP is a container protocol for associating a single name with a collection of application-specific multimedia transports and their (most often multicast) channels. SDP messages are delivered via the Session Announcement Protocol (SAP) <ref> [16] </ref>, an announce/listen protocol that uses scoped constant-bandwidth allocations. Alternatives for the implementation of object naming include extending DNS with new record types, extending SDP/SAP with new application types and finer scoping, hybridizing the two, or developing a separate hierarchy to match this need rather than overloading DNS and/or SDP/SAP.
Reference: [17] <author> HANDLEY, M., AND JACOBSON, V. SDP: </author> <title> Session Description Protocol, draft-ietf-mmusic-sdp-03.ps. </title> <type> IETF, </type> <year> 1997. </year>
Reference-contexts: The developing Service Location Protocol [43], the Domain Name Service [29], and the Session Announcement Protocol [16] address some concerns in resource discovery and management; DNS and the Session Description Protocol <ref> [17] </ref> address naming. Such efforts have been instrumental in motivating this work and in deriving its design. The rest of this paper is structured as follows. In Section 2, we discuss the problems of service provision and provide a framework for describing a service architecture's core functionality. <p> Existing methods for naming include using the Domain Name Service (DNS) [29] for objects with unicast IP addresses or the Session Description Protocol (SDP) <ref> [17] </ref> for lightweight sessions. DNS is a widely-deployed distributed name service. SDP is a container protocol for associating a single name with a collection of application-specific multimedia transports and their (most often multicast) channels.
Reference: [18] <author> HARTER, A., AND HOPPER, A. </author> <title> A Distributed Location System for the Active Office. </title> <journal> IEEE Network Magazine 8, </journal> <month> 1 (January </month> <year> 1994). </year>
Reference-contexts: Client beaconing is used in both the Active Badge <ref> [18] </ref> and PARCTAB systems [32], while server beaconing was used in Columbia Mobile IP [19]. IETF Mobile IP utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. <p> Our current implementation simply allows for callbakcs to be set that track VALUE entries in the SIP databases. 4.3 Location Tracking Location tracking is addressed in other systems <ref> [34, 18] </ref>, but these systems suffer from the limitation that client devices must be turned off or not carried to ensure privacy. <p> Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanismcoexist and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [32] and Active Badge <ref> [18] </ref> systems, along with related work by Schilit [33, 34, 35], were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices.
Reference: [19] <author> IOANNIDIS, J., DUCHAMP, D., AND MAGUIRE, G. </author> <title> IP-Based Protocols for Mobile Internetworking. </title> <booktitle> In ACM SIGCOMM Symposium on Communications, Architecture, and Protocols (1991), </booktitle> <pages> pp. 235-245. </pages>
Reference-contexts: Client beaconing is used in both the Active Badge [18] and PARCTAB systems [32], while server beaconing was used in Columbia Mobile IP <ref> [19] </ref>. IETF Mobile IP utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. This is indeed the case: there are trade-offs in such a decision, as it varies allowances for privacy, anonymity, particular protocols' performance, and scalability.
Reference: [20] <author> JOSEPH, A., DELESPINASSE, A., TAUBER, J., GIFFORD, D., AND KAASHOEK, M. F. </author> <title> Rover: A Toolkit for Mobile Information Access. </title> <booktitle> Proceedings of the Fifteenth Symposium on Operating System Principles (December 1995). </booktitle>
Reference-contexts: Though we have focused on access for wireless mobile clients, facets of our approach are applicable to wired networking. Examples include automatic reconfiguration of server location (for fault tolerance) and scoping of access to services through limited broadcast of tickets. 6 Related Work The Rover <ref> [20] </ref> and Wit [45] systems also recognized the need to split applications into a lightweight front-end and more heavyweight proxy at the last hop wireless link. <p> It also requires a mechanism for securely delegating operations [24]. 7.4 Queued RPC Queued RPC mechanisms <ref> [20, 5] </ref> support disconnection and link variability by incorporating application-managed messaging state. Queued RPC and asynchronous notification support is not incorporated into our system, but should be.
Reference: [21] <author> KAASHOEK, F., PICKNEY, T., AND TAUBER, J. </author> <title> Dynamic Documents. </title> <booktitle> Workshop on Mobile Computing Systems and Applications (December 1994). </booktitle>
Reference-contexts: The Mobisaic [44] and Dynamic Documents <ref> [21] </ref> projects support a HTML-based structure for varying, location-dependent interfaces. Our scheme generalizes these approaches by incorporating resource discovery and aggregating/subsetting different interface elements. The Georgia Tech CyberGuide project [26] focuses on proto-typing applications augmented with various positioning systems, potentially without communications at all.
Reference: [22] <author> KATZ, R. H. </author> <title> Wireless Overlay Networks. </title> <booktitle> In Proceedings 1996 SPIE Conference on Multimedia and Networking (San Jose, </booktitle> <address> California, </address> <month> January </month> <year> 1996). </year>
Reference-contexts: The client moves from a wide-area network to a local-area network, and between points in the local-area. Basic mobile routing support is an underlying assumption of our architecture. This functionality is available through Mobile IP [30] or similar handoff infrastructure, and can be augmented with network overlays <ref> [22] </ref> and local mul-ticast [36]. Mobile IP supplies IP-level transparency to changes in location, overlay networking augments this functionality with a policy layer for managing connectivity to multiple available network interfaces (multi-homing), while local multicast provides seamless, low-latency hand-off.
Reference: [23] <author> KATZ, R. H., BREWER, E. A., AMIR, E., BALAKRISHNAN, H., FOX, A., GRIBBLE, S., HODES, T., JIANG, D., NGUYEN, G. T., PADMANABHAN, V., AND STEMM, M. </author> <title> The Bay Area Research Wireless Access Network (BARWAN). </title> <booktitle> In Proceedings of the Spring COMPCON Conference (1996). </booktitle>
Reference-contexts: The testbed for our experiments <ref> [23] </ref> includes Intel-based laptop computers with access to a multi-tier overlay network including room-sized diffuse infrared cells (IBM IR), floor-sized wireless LAN cells (AT&T WaveLAN), and a wide-area RF packet radio network (Metricom Richocet).
Reference: [24] <author> KOTTMAN, D. A., WITTMANN, R., AND POSUR, M. </author> <title> Delegating Remote Operation Execution in a Mobile Computing Environment. </title> <booktitle> Mobile Networks and Applications 1, </booktitle> <month> 4 (January </month> <year> 1997), </year> <pages> 387-98. </pages>
Reference-contexts: It also requires a mechanism for securely delegating operations <ref> [24] </ref>. 7.4 Queued RPC Queued RPC mechanisms [20, 5] support disconnection and link variability by incorporating application-managed messaging state. Queued RPC and asynchronous notification support is not incorporated into our system, but should be.
Reference: [25] <author> LIU, G., AND MAGUIRE JR., G. </author> <title> A Class of Mobile Prediction Algorithms for Wireless Mobile Computign and Communications. </title> <booktitle> Mobile Networks and Applications 1, </booktitle> <month> 2 (October </month> <year> 1996), </year> <pages> 113-122. </pages>
Reference-contexts: Upon receipt of any beacons with a new SIP, services with the active bit set (and available in the new location) have their new ISL files prefetched automatically. (In our current implementation, the INDEX meta-service is always prefetched.) Delays can be further minimized through mobility prediction <ref> [25] </ref>, allowing prefetching in response to assumptions about user mobility patterns.
Reference: [26] <author> LONG, S., KOOPER, R., ABOWD, G., AND ATKENSON, C. </author> <title> Rapid Prototyping of Mobile Context-Aware Applications: The Cy-berGuide Case Study. </title> <booktitle> Proc. 2nd ACM Conf. on Mobile Computing and Networking (November 1996), </booktitle> <pages> 97-107. </pages>
Reference-contexts: The Mobisaic [44] and Dynamic Documents [21] projects support a HTML-based structure for varying, location-dependent interfaces. Our scheme generalizes these approaches by incorporating resource discovery and aggregating/subsetting different interface elements. The Georgia Tech CyberGuide project <ref> [26] </ref> focuses on proto-typing applications augmented with various positioning systems, potentially without communications at all. Using such an approach requires that devices be manually adapted to new environments.
Reference: [27] <author> MACINTYRE, B., AND FEINER, S. </author> <title> Future Multimedia User Interfaces. </title> <journal> Multimedia Systems Journal 4, </journal> <month> 5 (October </month> <year> 1996), </year> <pages> 250-268. </pages>
Reference-contexts: Example uses of this approach include fine-grain object tracking, directionality sensing, and event triggers keyed to particular circumstances <ref> [27] </ref>. For example, a camera can be used to detect the opening of a door or window. In this case, it is the camera that exports the control interface.
Reference: [28] <author> MCCANNE, S., JACOBSON, V., AND VETTERLI, M. </author> <title> Receiver-driven Layered Multicast. </title> <booktitle> ACM SIGCOMM '96 (August 1996), </booktitle> <pages> 117-130. </pages>
Reference-contexts: An argument against augmenting beacons at all is that orthogonal applications shouldn't mix their data units that may have been properly sized by the application (c.f., application-level framing [9] or joint source-channel coding <ref> [28] </ref>). We choose to augment our beacons with bootstrap information, a ticket for scoping of services, and a dynamically configurable application-specific payload. The encoding is shown in Figure 5. One common application-specific payload is the contents of the cells' INDEX, allowing anonymous assessment of available services and reducing discovery latency.
Reference: [29] <author> MOCKAPETRIS, P. V., AND DUNLAP, K. </author> <title> Development of the Domain Name System. </title> <note> ACM SIGCOMM '88 (August 1988). </note>
Reference-contexts: Overlay networking [39] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. The developing Service Location Protocol [43], the Domain Name Service <ref> [29] </ref>, and the Session Announcement Protocol [16] address some concerns in resource discovery and management; DNS and the Session Description Protocol [17] address naming. Such efforts have been instrumental in motivating this work and in deriving its design. The rest of this paper is structured as follows. <p> Existing methods for naming include using the Domain Name Service (DNS) <ref> [29] </ref> for objects with unicast IP addresses or the Session Description Protocol (SDP) [17] for lightweight sessions. DNS is a widely-deployed distributed name service. SDP is a container protocol for associating a single name with a collection of application-specific multimedia transports and their (most often multicast) channels.
Reference: [30] <author> PERKINS, C. </author> <title> IP Mobility Support. RFC, </title> <month> Oct </month> <year> 1996. RFC-2002. </year>
Reference-contexts: The physical components of the testbed in one of the seminar rooms (our first prototype, 405 Soda Hall) are illustrated in Figure 1. Our infrastructure builds on and extends the substantial work in mobility support provided by the networking research community. The Mobile-IP working group of the IETF <ref> [30] </ref>, among others, has made great strides in the routing aspects of the problem. Overlay networking [39] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. <p> The client moves from a wide-area network to a local-area network, and between points in the local-area. Basic mobile routing support is an underlying assumption of our architecture. This functionality is available through Mobile IP <ref> [30] </ref> or similar handoff infrastructure, and can be augmented with network overlays [22] and local mul-ticast [36].
Reference: [31] <author> SALTZER, J., REED, D., AND CLARK, D. </author> <title> End-to-end Arguments in System Design. </title> <journal> ACM Transactions on Computer Systems 2, </journal> <volume> 4 (1984), </volume> <pages> 195-206. </pages>
Reference-contexts: This is another way of thinking about Active Networks [41], driven by end-to-end design principles <ref> [31] </ref>: push agents to as close to the endpoints as possible, but no further.
Reference: [32] <author> SCHILIT, B. N., ADAMS, N., GOLD, R., TSO, M., AND WANT, R. </author> <booktitle> The PARCTAB mobile computing system. In Proceedings Fourth Workshop on Workstation Operating Systems (WWOS-IV) (October 1993), IEEE, </booktitle> <pages> pp. 34-39. </pages>
Reference-contexts: Client beaconing is used in both the Active Badge [18] and PARCTAB systems <ref> [32] </ref>, while server beaconing was used in Columbia Mobile IP [19]. IETF Mobile IP utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. <p> Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanismcoexist and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB <ref> [32] </ref> and Active Badge [18] systems, along with related work by Schilit [33, 34, 35], were among the first to attack the issues of client applications and network support for mobility in tandem.
Reference: [33] <author> SCHILIT, B. N., ADAMS, N. I., AND WANT, R. </author> <booktitle> Context-Aware Computing Applications. In Proceedings of the Workshop on Mobile Computing Systems and Applications (December 1994), IEEE Computer Society, </booktitle> <pages> pp. 85-90. </pages>
Reference-contexts: Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanismcoexist and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [32] and Active Badge [18] systems, along with related work by Schilit <ref> [33, 34, 35] </ref>, were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices. There are some key differences.
Reference: [34] <author> SCHILIT, B. N., AND THEIMER, M. M. </author> <title> Disseminating Active Map Information to Mobile Hosts. </title> <booktitle> In IEEE Network (Sept/Oct 1994), IEEE, </booktitle> <pages> pp. 22-32. </pages>
Reference-contexts: Our current implementation simply allows for callbakcs to be set that track VALUE entries in the SIP databases. 4.3 Location Tracking Location tracking is addressed in other systems <ref> [34, 18] </ref>, but these systems suffer from the limitation that client devices must be turned off or not carried to ensure privacy. <p> Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanismcoexist and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [32] and Active Badge [18] systems, along with related work by Schilit <ref> [33, 34, 35] </ref>, were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices. There are some key differences.
Reference: [35] <author> SCHILIT, W. </author> <title> System Architecture for Context-Aware Mobile Computing. </title> <type> PhD thesis, </type> <institution> Columbia University, </institution> <year> 1995. </year>
Reference-contexts: Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanismcoexist and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [32] and Active Badge [18] systems, along with related work by Schilit <ref> [33, 34, 35] </ref>, were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices. There are some key differences.
Reference: [36] <author> SESHAN, S., BALAKRISHNAN, H., AND KATZ, R. H. </author> <title> Handoffs in Cellular Wireless Networks: The Daedalus Implementation and Experience. </title> <journal> Kluwer Journal on Wireless Personal Communications (Jan. </journal> <year> 1997). </year>
Reference-contexts: Basic mobile routing support is an underlying assumption of our architecture. This functionality is available through Mobile IP [30] or similar handoff infrastructure, and can be augmented with network overlays [22] and local mul-ticast <ref> [36] </ref>. Mobile IP supplies IP-level transparency to changes in location, overlay networking augments this functionality with a policy layer for managing connectivity to multiple available network interfaces (multi-homing), while local multicast provides seamless, low-latency hand-off.
Reference: [37] <author> SMITH, B., EOLAS TECHNOLOGIES, INC., </author> <title> COMPUTERIZED PROCESSES UNLIMITED, </title> <publisher> INC., </publisher> <editor> AND ROSEMAN, M. DpTcl.tcl, </editor> <year> 1996. </year> <title> Obtained as alpha code. </title> <type> 15 </type>
Reference-contexts: In 1993, Bukowski and Downs designed a library for accessing the AMX from a workstation for use in a similar room [8]. They also produced a client/server package utilizing the library. We leverage their work, along with a new version of Tcl-DP <ref> [37] </ref> as the RPC interface, and extend it for use in our environment. 4.6.1 Design and Architecture The application, like others in our architecture, is built using the principle of application partitioning [45].
Reference: [38] <author> STEMM, M., GAUTHIER, P., HARADA, D., AND KATZ, R. H. </author> <title> Reducing Power Consumption of Network Interfaces in HandHeld Devices. </title> <booktitle> The Third Workshop on Mobile Multimedia Communications (May 1996). </booktitle>
Reference-contexts: There are a number of metrics for considering qualitative tradeoffs between the two decisions: * Power: Less power is consumed at the mobile by periodically listening than by periodically transmitting, but this difference can be mitigated by hardware/MAC design <ref> [38] </ref>. * Detection: When base stations (BSs) beacon, mobiles need not transmit to detect when all contact is lost. When clients beacon, BSs need not transmit to detect user mobility. * Multiples: With BS beaconing, detection of multiple beacons can be used to assist handoff.
Reference: [39] <author> STEMM, M., AND KATZ, R. H. </author> <title> Vertical Handoffs in Wireless Overlay Networks. </title> <journal> ACM Mobile Networking (MONET), </journal> <note> Special Issue on Mobile Networking in the Internet (Fall 1997). To appear. </note>
Reference-contexts: Our infrastructure builds on and extends the substantial work in mobility support provided by the networking research community. The Mobile-IP working group of the IETF [30], among others, has made great strides in the routing aspects of the problem. Overlay networking <ref> [39] </ref> has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity.
Reference: [40] <author> SUKAVIRIYA, P., FOLEY, J., AND GRIFFITH, T. </author> <title> A Second Generation User Interface Design Environment: The Model and The Runtime Architecture. </title> <booktitle> Proceedings of Human Factors in Computing Systems '93 (April 1993), </booktitle> <pages> 375-382. </pages>
Reference-contexts: Automatic layout heuristics can also be used. 3.7.2 Interface Specification The conventional notion of an Interface Definition Language (IDL) (e.g., the CORBA IDL) is to specify parameters, parameter data types, and parameter-passing conventions for remote object invocation [10]. The basic function of a Model-based User Interface <ref> [40] </ref> is to specify interfaces as structured widget hierarchies along with sets of constraints. The actual interface is derived from the model at run time or through a compilation step. This allows interfaces to maintain a consistent look-and-feel even as elements are added and deleted.
Reference: [41] <author> TENNENHOUSE, D., SMITH, J., SINCOSKIE, W., WETHERALL, D., AND MINDEN, G. </author> <title> A Survey of Active Network Research. </title> <journal> IEEE Communications Magazine (January 1997), </journal> <pages> 80-86. </pages>
Reference-contexts: Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model [12] and implicitly in other work [6, 2] that places application-level or network-level entities near, but not at, the endpoints of communications. This is another way of thinking about Active Networks <ref> [41] </ref>, driven by end-to-end design principles [31]: push agents to as close to the endpoints as possible, but no further.
Reference: [42] <institution> Universal Remote Console Communication Protocol. </institution> <note> http://trace.wisc.edu/world/urcc, 1997. </note>
Reference-contexts: Our current implementation has interfaces manually implemented in Tcl/Tk and Visual Basic. Currently, ISL uses an ad hoc grammar tuned to Tk. A related developing protocol with very similar needs is the Universal Remote Console Communication Protocol <ref> [42] </ref>, motivated by research in supporting interfaces for disabled users. 3.7.3 Prefetching As an optimization, clients can prefetch the ISL files for active services. We illustrate with a concrete example from our prototype. As the user moves between rooms, the light controller application UI remains the same.
Reference: [43] <author> VEIZADES, J., GUTTMAN, E., PERKINS, C., AND KAPLAN, S. </author> <title> Service Location Protocol Internet Draft #17, draft-ieft-svrloc-protocol-17.txt. </title> <type> IETF, </type> <year> 1997. </year>
Reference-contexts: The Mobile-IP working group of the IETF [30], among others, has made great strides in the routing aspects of the problem. Overlay networking [39] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. The developing Service Location Protocol <ref> [43] </ref>, the Domain Name Service [29], and the Session Announcement Protocol [16] address some concerns in resource discovery and management; DNS and the Session Description Protocol [17] address naming. Such efforts have been instrumental in motivating this work and in deriving its design. <p> This allows a single message to, in effect, advertise a collection of objects, and provides advertisement hierarchy (possibly, but not necessarily, aligned to the naming hierarchy like DNS) with scaling sub-linear in the number of advertised objects. The Service Location Protocol <ref> [43] </ref>, a resource discovery protocol under development by the IETF Service Location working group, is one proposal for implementing such a service. In SLP, query processing is performed at directory agents and distributed via multicast. Our protocol will leverage features of SLP, specifically the query grammar and message formats. <p> Rover allows the pieces that comprise the partitioned whole to migrate between these two points, but the implemented prototype applications generally only exploit this for moving application data units such as mail messages, news articles, web pages, or calendar entries. The Service Location Protocol (SLP) <ref> [43] </ref> is an example resource discovery and service registration mechanism that can also function as a fine-grained name service. We are interested in moving our resource discovery mechanism over to this evolving Internet standard.
Reference: [44] <author> VOELKER, G., AND BERSHAD, B. Mobisaic: </author> <title> An Information System for a Mobile Wireless Computing Environment. </title> <booktitle> Workshop on Mobile Computing Systems and Applications (December 1994). </booktitle>
Reference-contexts: It has the advantage that applications need not change at all, but suffers from the limitations that 1) it doesn't support transformations of the interface to formats more suitable to particular client devices, and 2) it does not expose a layer of indirection underneath widget invocations. The Mobisaic <ref> [44] </ref> and Dynamic Documents [21] projects support a HTML-based structure for varying, location-dependent interfaces. Our scheme generalizes these approaches by incorporating resource discovery and aggregating/subsetting different interface elements. The Georgia Tech CyberGuide project [26] focuses on proto-typing applications augmented with various positioning systems, potentially without communications at all.
Reference: [45] <author> WATSON, T. </author> <title> Application Design for Wireless Computing. </title> <booktitle> In Workshop on Mobile Computing Systems and Applications (Dec. 1994), </booktitle> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: We leverage their work, along with a new version of Tcl-DP [37] as the RPC interface, and extend it for use in our environment. 4.6.1 Design and Architecture The application, like others in our architecture, is built using the principle of application partitioning <ref> [45] </ref>. Due to the potential lightweight nature of clients, the server is required to bear the brunt of the effort to support fault tolerance, access control, and other such duties. <p> Though we have focused on access for wireless mobile clients, facets of our approach are applicable to wired networking. Examples include automatic reconfiguration of server location (for fault tolerance) and scoping of access to services through limited broadcast of tickets. 6 Related Work The Rover [20] and Wit <ref> [45] </ref> systems also recognized the need to split applications into a lightweight front-end and more heavyweight proxy at the last hop wireless link.
Reference: [46] <author> WEISER, M. </author> <title> Some Computer Science Issues in Ubiquitous Computing. </title> <booktitle> Communication of the ACM 36, </booktitle> <month> 7 (July </month> <year> 1993). </year>
Reference-contexts: 1 Introduction Researchers have predicted that wireless access coupled with user mobility will soon be the norm rather than the exception, allowing users to roam in a wide variety of geographically distributed environments with seamless connectivity <ref> [46] </ref>. This ubiquitous computing environment is characterized by a number of challenges, each illustrating the need for adaptation. One challenge is the continuously available but varying network connectivity, characterized by high handoff rates exacerbated by the demands of spectrum reuse.
Reference: [47] <author> WOOD, K. R., RICHARDSON, T., BENNETT, F., HARTER, A., AND HOPPER, A. </author> <title> Global Teleporting with Java: Toward Ubiquitous Personalized Computing. </title> <booktitle> IEEE Computer 30, 2 (1997), </booktitle> <pages> 53-59. </pages>
Reference-contexts: We use server beaconing rather than client beaconing, and allow the beacons to bootstrap resource location, define scope, assist fault detection, and provide for some location management. A transportable X display <ref> [47] </ref> is a variation on interface code mobility; it moves users' existing interfaces as they move, not unknown applications' interfaces or interface descriptions.
References-found: 47

