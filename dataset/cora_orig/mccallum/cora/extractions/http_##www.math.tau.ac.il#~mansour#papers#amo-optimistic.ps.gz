URL: http://www.math.tau.ac.il/~mansour/papers/amo-optimistic.ps.gz
Refering-URL: 
Root-URL: 
Title: Convergence Complexity of Optimistic Rate Based Flow Control Algorithms implies that the max-min fairness criteria
Author: Yehuda Afek Yishay Mansour Zvi Ostfeld 
Note: 2 but by no more than O(ffi 2 n This  
Date: December 12, 1997  
Address: Tel-Aviv University, Israel 69978.  
Affiliation: Computer Science Department,  
Abstract: This paper studies basic properties of rate based flow-control algorithms and of the max-min fairness criteria. For the algorithms we suggest a new approach for their modeling and analysis, which may be considered more "optimistic" and realistic than traditional approaches. Three variations of the approach are presented and their rate of convergence to the optimal max-min fairness solution is analyzed. In addition, we introduce and analyze approximate rate based flow control algorithms. We show that under certain conditions the approximate algorithms may converge faster. However, we show that the resulting flows may be substantially different than the flows dictated by the max-min fairness. We further demonstrate that the max-min fairness solution can be very sensitive to small changes, i.e., there are configurations in which an addition or deletion of a session with rate ffi may change the allocation of another session by (ffi 2 n 
Abstract-found: 1
Intro-found: 1
Reference: [BF95] <author> F. Bonomi and K. Fendick. </author> <title> The rate based flow control for available bit rate atm service. </title> <journal> IEEE Networks, </journal> <volume> 9(2) </volume> <pages> 24-39, </pages> <month> March/April </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see <ref> [BF95] </ref> for example). The major arguments for rate based flow control, is the simplicity and modest hardware requirements per virtual circuit, compared with those of the credit based scheme [KM95].
Reference: [BG87] <author> D. P. Bertsekas and R. G. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1987. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> a larger flow on the account of a session with a smaller or equal flow. 2 Given a network with link capacities and a set of sessions with transmission requirements, there is a simple iterative algorithm to compute the set of transmission rates that correspond to the max-min fairness rates <ref> [BG87] </ref>: In each iteration fix the rates of sessions that use the "most congested" link (i.e., the link which restricts a minimum rate for sessions that have not yet been fixed with their "final" rate). <p> That is, given a fixed set of sessions, it converges to the max-min rates without ever assigning a session a rate that is larger than its final rate. In other words, the rates that are assigned during the computation may only increase, until the final value is reached <ref> [BG87, GB84, Cha94] </ref>. One problem with most of the conservative algorithms is that they do not include a decrease operation that reduces the rate of sessions (with the exception of [Cha94]). <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>). <p> In an algorithm that computes the exact max-min vector an edge e is called bottleneck edge in state Q i if for every active session S j 2 fl (e) " A i , F S i (e) is the smallest fair share among the edges along S j <ref> [BG87] </ref>. <p> exact max-min vector for a set of sessions, and in any state Q i in its execution, a session S is marked done (i.e., has reached its final rate) only if there is a bottleneck edge e 2 S in Q i and rate (S) i In some algorithms (e.g. <ref> [BG87, Cha94] </ref>) that compute the max-min vector, when a session has reached its final value (i.e., marked done) then in addition to the above condition, all the active sessions that use a bottleneck edge have the same rates. (That is, they share the edge available capacity in a fair manner.) When <p> The following theorem shows the correctness of a bottleneck algorithm by stating that when it terminates (i.e., all sessions are marked done) then (rate (S 1 ); rate (S 2 ); : : : ; rate (S n )) is the max-min vector. Theorem 3.3 <ref> [BG87] </ref> In a bottleneck algorithm, if A i = ; then the rate allocation is the max-min vector. 2 The next lemma shows that the fair share of an edge is monotonically non decreasing function of time. <p> This technique is quite intuitive and indeed it turns out that the algorithm converges in fi (n 2 ) update operations. The upper bound is proved in Theorem 4.3 and the lower bound is proved in Theorem 4.4. Note that this technique is used in <ref> [BG87] </ref> for a different model where an upper bound analogous to that in Theorem 4.3 is proved. Observation 4.1 The Global Min algorithm is a bottleneck algorithm. Proof: We have to show compatibility to Definition 3.2.
Reference: [Cha94] <author> A. Charny. </author> <title> An algorithm for rate allocation in a packet-switching network with feedback. </title> <type> Technical Report MIT/LCS/TR-601, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> Roughly, the share a session may take from a link is the excess capacity of the link divided by the number of sessions that may still increase their transmission rate and share the excess. The rate of the session is then increased by this minimum (see <ref> [Cha94] </ref>). A key point in these algorithms is the computation in each step, by how much each session may be increased. This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> That is, given a fixed set of sessions, it converges to the max-min rates without ever assigning a session a rate that is larger than its final rate. In other words, the rates that are assigned during the computation may only increase, until the final value is reached <ref> [BG87, GB84, Cha94] </ref>. One problem with most of the conservative algorithms is that they do not include a decrease operation that reduces the rate of sessions (with the exception of [Cha94]). <p> One problem with most of the conservative algorithms is that they do not include a decrease operation that reduces the rate of sessions (with the exception of <ref> [Cha94] </ref>). This does not model the situation of real networks that have to be able to decrease the rate of some sessions (e.g., after a new session has been added). <p> In Roberts' algorithm the switch has only partial knowledge about the rate of the sessions that cross it and since link updates are not atomic an output link might be overloaded. Our model is somewhat similar to that of Charny <ref> [Cha94] </ref> where the switch knows the rates of all sessions that cross it. However, Charny uses a conservative approach and does not assume atomic updates. Furthermore, the convergence complexity in ([Cha94]) is measured in time while in this paper the complexity measure is abstracted by the number of update operations. <p> For arbitrary schedulers, it can be shown that the example that gives the lower bound of (2 n 2 ) on the number of steps still holds regardless of the value of ffi. The results mentioned in 3 and 4 answer an open question raised by Charny <ref> [Cha94] </ref> about the convergence of rate based flow control algorithms if the rates are restricted to discrete values. Notice that the goal of this paper is to analyze the behavior of flow control in ATM networks. <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>). <p> exact max-min vector for a set of sessions, and in any state Q i in its execution, a session S is marked done (i.e., has reached its final rate) only if there is a bottleneck edge e 2 S in Q i and rate (S) i In some algorithms (e.g. <ref> [BG87, Cha94] </ref>) that compute the max-min vector, when a session has reached its final value (i.e., marked done) then in addition to the above condition, all the active sessions that use a bottleneck edge have the same rates. (That is, they share the edge available capacity in a fair manner.) When <p> Thus, the max-min vector is not necessarily better than the vector computed by an approximate algorithm (it may suffer from large instability that may result from a modest dynamic update). One of the implications of these results is the settlement of an open question raised by Charny <ref> [Cha94] </ref> (where she asks about the convergence of rate based algorithms in the case that rates are restricted to discrete values).
Reference: [Gaf82] <author> E. Gafni. </author> <title> The Integration of Routing and Flow Control for Voice and Data in a Computer Communication Network. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, Dept. of Elec. Eng. and Comp. Science, </institution> <address> Cambridge, MA, </address> <month> August </month> <year> 1982. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>).
Reference: [GB84] <author> E. Gafni and D. P. Bertsekas. </author> <title> Dynamic control of session input rates in communication networks. </title> <journal> IEEE Trans. on Automatic Control, </journal> <volume> AC-29(11):804-823, </volume> <month> November </month> <year> 1984. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> That is, given a fixed set of sessions, it converges to the max-min rates without ever assigning a session a rate that is larger than its final rate. In other words, the rates that are assigned during the computation may only increase, until the final value is reached <ref> [BG87, GB84, Cha94] </ref>. One problem with most of the conservative algorithms is that they do not include a decrease operation that reduces the rate of sessions (with the exception of [Cha94]). <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>).
Reference: [Hay81] <author> H. Hayden. </author> <title> Voice flow control in integrated packet networks. </title> <type> Master's thesis, </type> <institution> Mas-sachusetts Institute of Technology, Dept. of Electrical Engineering, </institution> <address> Cambridge, MA, </address> <year> 1981. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> Hence, the flow control mechanisms addressed in this paper have nothing to do with the issues of routing. 2 The problem of finding the max-min fairness can be expressed as a set of linear inequalities, as presented in <ref> [Hay81] </ref>. to this approach, during the computation, sessions may be given a rate that is larger than their final rate. Hence, during the convergence process rates may go up and down. This approach is closer to the proposed rate based approach of the ATM Forum [Rob94, ST94, JKV94]. <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>).
Reference: [Jaf81] <author> J. M. Jaffe. </author> <title> Bottleneck flow control. </title> <journal> IEEE Trans on Communication, </journal> <volume> COM-29,1(7):954-962, </volume> <month> July </month> <year> 1981. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>).
Reference: [JKV94] <author> R. Jain, S. Kalyanaraman, and R. Viswanathan. </author> <title> The OSU scheme for congestion avoidance using explicit rate indication. </title> <type> Technical Report ATM-FORUM/94-0883, </type> <institution> The Ohio State University, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: Hence, during the convergence process rates may go up and down. This approach is closer to the proposed rate based approach of the ATM Forum <ref> [Rob94, ST94, JKV94] </ref>. We choose a simple abstraction for the update operations. The update operation is performed atomically on a session. This means that an update operation is not performed until the previous one has completed. <p> This model is presented for the purpose of analysis and is not expected to be implemented. However, we believe that this model captures the essential properties of the problem as faced by practical distributed rate based algorithms, such as <ref> [Rob94, ST94, JKV94] </ref>. The optimistic approach is close to the approach used by Roberts' algorithm ([Rob94]).
Reference: [KM95] <author> H.T. Kung and R. Morris. </author> <title> Credit-based flow control for atm networks. </title> <journal> IEEE Networks, </journal> <volume> 9(2) </volume> <pages> 40-48, </pages> <month> March/April </month> <year> 1995. </year> <month> 29 </month>
Reference-contexts: The major arguments for rate based flow control, is the simplicity and modest hardware requirements per virtual circuit, compared with those of the credit based scheme <ref> [KM95] </ref>.
Reference: [Mos84] <author> J. Mosely. </author> <title> Asynchronous Distributed Flow Control Algorithms. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> June </month> <year> 1984. </year>
Reference-contexts: 1 Introduction The ATM Forum on Traffic Management has adopted rate based flow control <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref> as the basis for flow control in its networks for ABR (Available Bit Rate) traffic (see [BF95] for example). <p> This computation essentially determines how the network resources (link capacities) are divided among the different virtual circuits. The basic principle guiding this computation is the desire to share the link capacities in a fair way among the different sessions. The max-min fairness criterion <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref> is widely accepted as the theoretical criteria to guide this computation. <p> We now give a formal definition for the term fair flow (similar definitions may be found in other works <ref> [Cha94, Jaf81, Hay81, Mos84, GB84, Gaf82, BG87] </ref>).
Reference: [Rob94] <author> L. Roberts. </author> <title> Enhanced PRCA (proportional rate-control algorithm). </title> <type> Technical Report ATM-FORUM/94-0735R1, </type> <institution> ATM Systems, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: Hence, during the convergence process rates may go up and down. This approach is closer to the proposed rate based approach of the ATM Forum <ref> [Rob94, ST94, JKV94] </ref>. We choose a simple abstraction for the update operations. The update operation is performed atomically on a session. This means that an update operation is not performed until the previous one has completed. <p> This model is presented for the purpose of analysis and is not expected to be implemented. However, we believe that this model captures the essential properties of the problem as faced by practical distributed rate based algorithms, such as <ref> [Rob94, ST94, JKV94] </ref>. The optimistic approach is close to the approach used by Roberts' algorithm ([Rob94]).
Reference: [ST94] <author> K. Y. Siu and H. Y. Tzeng. </author> <title> Adaptive proportional rate control (APRC) with intelligent congestion indication. </title> <type> Technical Report ATM FORUM/94-0888, </type> <institution> University of California, Irvine, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: Hence, during the convergence process rates may go up and down. This approach is closer to the proposed rate based approach of the ATM Forum <ref> [Rob94, ST94, JKV94] </ref>. We choose a simple abstraction for the update operations. The update operation is performed atomically on a session. This means that an update operation is not performed until the previous one has completed. <p> This model is presented for the purpose of analysis and is not expected to be implemented. However, we believe that this model captures the essential properties of the problem as faced by practical distributed rate based algorithms, such as <ref> [Rob94, ST94, JKV94] </ref>. The optimistic approach is close to the approach used by Roberts' algorithm ([Rob94]).
References-found: 12

