URL: http://www.cs.purdue.edu/homes/jing/reserve.ps
Refering-URL: http://www.cs.purdue.edu/homes/jing/mobile.html
Root-URL: http://www.cs.purdue.edu
Title: An Efficient and Reliable Reservation Algorithm for Mobile Transactions  
Author: Ahmed Elmagarmid Jin Jing Omran Bukhres 
Keyword: Index terms: partitioned data, replicated data, distributed transaction management, mobile computing system.  
Address: West Lafayette, IN 47907 USA  
Affiliation: Department of Computer Sciences Purdue University  
Note: Appeared in shorter form in Proceedings of the 4th International Conference on Information and Knowledge Management (CIKM'95), 1995.  
Abstract: In a mobile computing environment, a user carrying a portable computer can execute a mobile transaction by submitting the operations of the transaction to distributed data servers from different locations. As a result of this mobility, the operations of the transaction may be executed at different servers. The distribution of operations implies that the transmission of messages (such as those involved in a two phase commit protocol) may be required among these data servers in order to coordinate the execution of these operations. In this paper, we will address the distribution of operations that update partitioned data in mobile environments. We show that, for operations pertaining to resource allocation, the message overhead (e.g., for a 2PC protocol) introduced by the distribution of operations is undesirable and unnecessary. We introduce a new algorithm, the Reservation Algorithm (RA), that does not necessitate the incurring of message overheads for the commitment of mobile transactions. We address two issues related to the RA algorithm: a termination protocol and a protocol for non-partition-commutative operations. We perform a comparison between the proposed RA algorithm and existing solutions that use a 2PC protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Alonsa and A. E. Abbadi. </author> <title> Partitioned data objects in distributed databases. </title> <journal> the International Journal on Distributed and Parallel Databases, </journal> <volume> 3(1), </volume> <year> 1995. </year>
Reference-contexts: The site escrow approach proposed in [14, 16] has the potential to address problems of resource allocation in a mobile distributed environment. The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol <ref> [6, 1] </ref>, and Data Value Partitioning protocol [19], can be used for dynamically partitioning data among different server sites. 2 server sites. By utilizing the commutative property of resource allocation operations, the site escrow approach allows these operations to be executed without holding locks until the commit time. <p> As stated previously, the notion of using partitioned data to reduce message overhead and increase system throughput in distributed database environments has been investigated in the literature <ref> [2, 6, 14, 16, 19, 1] </ref>. These efforts address principally the efficient repartition or reconfiguration of a partitioned data item among different sites so that an operation on the data item can be performed at a local site.
Reference: [2] <author> R. Alonso, D. Barbara, and H. Garcia-Molina. </author> <title> Data caching issues in an information retrieval system. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 15(3) </volume> <pages> 359-384, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: As stated previously, the notion of using partitioned data to reduce message overhead and increase system throughput in distributed database environments has been investigated in the literature <ref> [2, 6, 14, 16, 19, 1] </ref>. These efforts address principally the efficient repartition or reconfiguration of a partitioned data item among different sites so that an operation on the data item can be performed at a local site.
Reference: [3] <author> R. Alonso and H. Korth. </author> <booktitle> Database issues in nomadic computing. In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 388-392, </pages> <year> 1993. </year>
Reference-contexts: A mobile host can move 1 from one cell (or radio coverage area) to another while retaining its network connections. The mobile computing paradigm introduces new technical issues in the area of database systems <ref> [9, 3] </ref>. For example, techniques for traditional distributed database management have been based on the assumption that the location of and connections among hosts in the distributed system do not change. However, in mobile computing, these assumptions are no longer valid. <p> the following theorem: Theorem 5.1 C RES is satisfiable with respect to C CEN with either ~ = 0 or 0 &lt; ~ &lt; 2m=p. 6 Related Work Some of the problems involved in supporting transaction services and distributed data management in a mobile environment have been identified recently in <ref> [9, 3] </ref>. The management of distributed data has been identified in [9] as a research area on which the mobility of host has a large impact. In [3], it is predicted that future applications of mobile computing will demand various transactional and transaction-like services. <p> The management of distributed data has been identified in [9] as a research area on which the mobility of host has a large impact. In <ref> [3] </ref>, it is predicted that future applications of mobile computing will demand various transactional and transaction-like services. A prototype of transaction service for mobile hosts is currently being implemented on the Code file system [13, 18] to support continued services in a disconnection mode.
Reference: [4] <author> A. Asthana, M. Cravatts, and P. Krzyzanowski. </author> <title> An indoor wireless system for personalized shopping assistance. </title> <booktitle> In 1994 Workshop on Mobile Computing Systems and Applications, </booktitle> <year> 1994. </year>
Reference-contexts: Problems involving resource allocation can also be found in such mobile application domains as mobile sales and inventory applications [15] and mobile shopping applications <ref> [4] </ref> etc. In a mobile environment, a mobile host can query or update a database, which is distributed in multiple data servers over a fixed network, from different locations.
Reference: [5] <author> B. R. Badrinath, A. Acharya, and T. Imielinski. </author> <title> Structuring distributed algorithms for mobile hosts. </title> <booktitle> In Proc. of the 14th International Conference on Distributed Computing Systems, </booktitle> <address> Poznan, Poland, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Advances in wireless networking technology have engendered a new computing paradigm, called mobile computing, in which users carrying portable devices have access to a shared infrastructure independent of their physical location. Following the concepts and terms introduced in <ref> [9, 7, 5] </ref>, a mobile computing environment consists of two distinct sets of entities: mobile hosts and fixed hosts. Some fixed hosts, called Mobile Support Stations (MSSs), are augmented with a wireless interface to communicate with mobile hosts. <p> The prototype, however, did not address the issue of the mobility of transaction hosts and its effect on the management of distributed data. The impact of mobility on distributed algorithms has recently been investigated in <ref> [5] </ref>. This research also emphasizes the reduction of the message costs in networks in which a mobile host involved in the execution of distributed algorithms moves across different cells.
Reference: [6] <author> D. Barbara, , and H. Garcia-Molina. </author> <title> The demarcation protocol: A technique for maintaining constraints in distributed database systems. </title> <journal> The VLDB Journal, </journal> <volume> 3(3) </volume> <pages> 325-354, </pages> <year> 1994. </year>
Reference-contexts: The site escrow approach proposed in [14, 16] has the potential to address problems of resource allocation in a mobile distributed environment. The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol <ref> [6, 1] </ref>, and Data Value Partitioning protocol [19], can be used for dynamically partitioning data among different server sites. 2 server sites. By utilizing the commutative property of resource allocation operations, the site escrow approach allows these operations to be executed without holding locks until the commit time. <p> If an pc-operation at a server is safe, the server then executes a local reservation action for the pc-operation. Otherwise, the server invokes a resource repartition procedure (such as the point-to-point demarcation protocol <ref> [6] </ref> or a dynamic quorum-based protocol [14]) to requisition additional partitioned data resources from other servers. Upon the successful completion of the resource repartition procedure, the reservation action can be executed at the local server. <p> As stated previously, the notion of using partitioned data to reduce message overhead and increase system throughput in distributed database environments has been investigated in the literature <ref> [2, 6, 14, 16, 19, 1] </ref>. These efforts address principally the efficient repartition or reconfiguration of a partitioned data item among different sites so that an operation on the data item can be performed at a local site. <p> Specifically, like the demarcation protocol presented in <ref> [6] </ref>, these repartition procedures are performed by updating the bound variables of a partitioned data item. However, the requirements for reliability procedures are quite different. In the previous approach, a repartition procedure is performed only among relatively reliable distributed servers in fixed networks.
Reference: [7] <author> D. Barbara and T. Imielinksi. Sleepers and workaholics: </author> <title> Caching strategies for mobile environments. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 1-12, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Advances in wireless networking technology have engendered a new computing paradigm, called mobile computing, in which users carrying portable devices have access to a shared infrastructure independent of their physical location. Following the concepts and terms introduced in <ref> [9, 7, 5] </ref>, a mobile computing environment consists of two distinct sets of entities: mobile hosts and fixed hosts. Some fixed hosts, called Mobile Support Stations (MSSs), are augmented with a wireless interface to communicate with mobile hosts.
Reference: [8] <author> P. Bernstein, V. Hadzilacos, and N. Goodman. </author> <title> Concurrency Control and Recovery in Databases Systems. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1987. </year>
Reference-contexts: The partition-commutative lock is applied to prevent a conflicting non-partition-commutative operation from accessing a partitioned copy, while a read lock is used to prevent a write operation from updating a replicated copy. The issue of termination for a 2PC or 3PC protocol has been well studied (see <ref> [8] </ref> for details). A server will execute a termination protocol only after it enters the first phase of a 2PC or 3PC protocol but before it receives the commit decision from the coordinator.
Reference: [9] <author> T. Imielinski and B. R. Badrinath. </author> <title> Wireless mobile computing : Challenges in data management. </title> <journal> Communication of ACM, </journal> <volume> 37(10), </volume> <year> 1994. </year>
Reference-contexts: 1 Introduction Advances in wireless networking technology have engendered a new computing paradigm, called mobile computing, in which users carrying portable devices have access to a shared infrastructure independent of their physical location. Following the concepts and terms introduced in <ref> [9, 7, 5] </ref>, a mobile computing environment consists of two distinct sets of entities: mobile hosts and fixed hosts. Some fixed hosts, called Mobile Support Stations (MSSs), are augmented with a wireless interface to communicate with mobile hosts. <p> A mobile host can move 1 from one cell (or radio coverage area) to another while retaining its network connections. The mobile computing paradigm introduces new technical issues in the area of database systems <ref> [9, 3] </ref>. For example, techniques for traditional distributed database management have been based on the assumption that the location of and connections among hosts in the distributed system do not change. However, in mobile computing, these assumptions are no longer valid. <p> the following theorem: Theorem 5.1 C RES is satisfiable with respect to C CEN with either ~ = 0 or 0 &lt; ~ &lt; 2m=p. 6 Related Work Some of the problems involved in supporting transaction services and distributed data management in a mobile environment have been identified recently in <ref> [9, 3] </ref>. The management of distributed data has been identified in [9] as a research area on which the mobility of host has a large impact. In [3], it is predicted that future applications of mobile computing will demand various transactional and transaction-like services. <p> The management of distributed data has been identified in <ref> [9] </ref> as a research area on which the mobility of host has a large impact. In [3], it is predicted that future applications of mobile computing will demand various transactional and transaction-like services.
Reference: [10] <author> R. Jain and N. Krishnakumar. </author> <title> Network support for personal information services to pcs users. </title> <booktitle> In Proceedings of the IEEE conference on Networks for Personal Communications (NPC '94), </booktitle> <address> Long Branch, NJ, </address> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: For the simplicity, in this paper, we assume that each service area supported be a server covers only a single cell. In reality, one service area may support more than one cell <ref> [10, 11] </ref>. We also assume that only one transaction may be initialized by a mobile host at any time. That is, a mobile host can initialize a transaction only after the previous transaction has finished.
Reference: [11] <author> R. Jain and N. Krishnakumar. </author> <title> Service handoffs and virtual mobility for delivery of personal information services to mobile users. </title> <type> Technical Report TM-24696, </type> <institution> Bellcore, </institution> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: For the simplicity, in this paper, we assume that each service area supported be a server covers only a single cell. In reality, one service area may support more than one cell <ref> [10, 11] </ref>. We also assume that only one transaction may be initialized by a mobile host at any time. That is, a mobile host can initialize a transaction only after the previous transaction has finished.
Reference: [12] <author> J. Jing, O. Bukhres, and A. Elmagarmid. </author> <title> Distributed lock management for mobile transactions. </title> <booktitle> In Proc. of the 15th International Conference on Distributed Computing Systems, </booktitle> <address> Vancouver, Canada, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: This method carries with it a heavy message overhead when a mobile host moves frequently across cells. Our approach to a pending partition-commutative lock is similar to that explored in <ref> [12] </ref> for a pending read lock in a replicated database for mobile transactions. In [12], the commutative semantics of read locks are utilized to reduce message overhead for the distributed read operations of a mobile transaction. <p> This method carries with it a heavy message overhead when a mobile host moves frequently across cells. Our approach to a pending partition-commutative lock is similar to that explored in <ref> [12] </ref> for a pending read lock in a replicated database for mobile transactions. In [12], the commutative semantics of read locks are utilized to reduce message overhead for the distributed read operations of a mobile transaction. <p> Although the algorithm discussed in this paper applies directly only to operations over partitioned data, it can be merged into other locking algorithms to support operations on non-partitioned data. For example, in <ref> [12] </ref>, we have shown that, if non-partitioned data are replicated among different servers, then a read unlock for an non-partitioned data item can be executed at any copy site, including sites other than that on which the read lock is set.
Reference: [13] <author> J. Kistler and M. Satyanaranyanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1), </volume> <month> February </month> <year> 1992. </year>
Reference-contexts: In [3], it is predicted that future applications of mobile computing will demand various transactional and transaction-like services. A prototype of transaction service for mobile hosts is currently being implemented on the Code file system <ref> [13, 18] </ref> to support continued services in a disconnection mode. This prototype uses the optimistic concurrency control method presented in [17] to enforce the serializable execution of transactions submitted from mobile hosts.
Reference: [14] <author> N. Krishnakumar and A. J. Bernstein. </author> <title> High throughput escrow algorithm for replicated databases. </title> <booktitle> In Proceedings of the Eighteenth International Conference on Very Large Data Bases, </booktitle> <year> 1992. </year>
Reference-contexts: A mobile host is also likely to incur long disconnection periods due to the limitations of battery energy and the mobility of hosts. This long-disconnection characteristic may cause mobile transactions that access data from servers to be long-lived. The site escrow approach proposed in <ref> [14, 16] </ref> has the potential to address problems of resource allocation in a mobile distributed environment. The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol [6, 1], and Data Value Partitioning protocol [19], can be used for dynamically partitioning <p> The site escrow approach proposed in <ref> [14, 16] </ref> has the potential to address problems of resource allocation in a mobile distributed environment. The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol [6, 1], and Data Value Partitioning protocol [19], can be used for dynamically partitioning data among different server sites. 2 server sites. <p> If an pc-operation at a server is safe, the server then executes a local reservation action for the pc-operation. Otherwise, the server invokes a resource repartition procedure (such as the point-to-point demarcation protocol [6] or a dynamic quorum-based protocol <ref> [14] </ref>) to requisition additional partitioned data resources from other servers. Upon the successful completion of the resource repartition procedure, the reservation action can be executed at the local server. The result of the reservation action is returned to the mobile host that submitted this pc-operation through its coordinator. <p> In this section, we present a comparative analysis of message costs incurred by the execution of the reservation algorithm (RES), the Escrow Log Transfering algorithm (ELT), and the 2PC-Site-Escrow algorithm (2SE) over fixed networks. The 2SE algorithm is the direct application of the site escrow method presented in <ref> [14, 16] </ref> in a mobile environment (as shown in Example 1). The ELT algorithm is a modification of a site escrow method which always transfers the escrow log for a mobile transaction to the local server in the current cell of the transaction host. This algorithm was described in [15]. <p> As stated previously, the notion of using partitioned data to reduce message overhead and increase system throughput in distributed database environments has been investigated in the literature <ref> [2, 6, 14, 16, 19, 1] </ref>. These efforts address principally the efficient repartition or reconfiguration of a partitioned data item among different sites so that an operation on the data item can be performed at a local site.
Reference: [15] <author> N. Krishnakumar and R. Jain. </author> <title> Protocols for maintaining inventory databases and user service profiles in mobile sales applications. </title> <booktitle> In Proceedings of the Mobidata Workshop, </booktitle> <institution> Rutgers University, </institution> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: Therefore, by partitioning data among server sites, transactions with resource allocation operations can be performed in a single site if the allocation updates do not violate local resource constraints. Problems involving resource allocation can also be found in such mobile application domains as mobile sales and inventory applications <ref> [15] </ref> and mobile shopping applications [4] etc. In a mobile environment, a mobile host can query or update a database, which is distributed in multiple data servers over a fixed network, from different locations. <p> Of course, if the transaction host in Example 1.1 remains fixed, transaction T can be executed in either server without involving in message transmissions. To avoid the use of a 2PC protocol at commit time, it was suggested in <ref> [15] </ref> that the move of a transaction host to a new cell should be accompanied by the transfer of the escrow log for the transaction to the local server under the cell. <p> The ELT algorithm is a modification of a site escrow method which always transfers the escrow log for a mobile transaction to the local server in the current cell of the transaction host. This algorithm was described in <ref> [15] </ref>. <p> Guaranteeing the atomicity of the series of repartition procedures therefore poses an additional issue, particularly in the development of an atomic protocol which can handle the problems introduced by the failure and extended long disconnections of the mobile host. In <ref> [15] </ref>, the problem of using the site escrow method (2SE) for mobile transactions was discussed. To avoid the use of a 2PC protocol at commit time, the authors in [15] suggested the Escrow Log Transfering (ELT) method. <p> In <ref> [15] </ref>, the problem of using the site escrow method (2SE) for mobile transactions was discussed. To avoid the use of a 2PC protocol at commit time, the authors in [15] suggested the Escrow Log Transfering (ELT) method. The method executes a handoff protocol to move the escrow log of a transaction from the server in previous cell to the new server in the current cell before the transaction can continue its execution.
Reference: [16] <author> A. Kumar and M. Stonebraker. </author> <title> Semantics-based transaction management techniques for replicated data. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <year> 1988. </year>
Reference-contexts: A mobile host is also likely to incur long disconnection periods due to the limitations of battery energy and the mobility of hosts. This long-disconnection characteristic may cause mobile transactions that access data from servers to be long-lived. The site escrow approach proposed in <ref> [14, 16] </ref> has the potential to address problems of resource allocation in a mobile distributed environment. The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol [6, 1], and Data Value Partitioning protocol [19], can be used for dynamically partitioning <p> The site escrow approach proposed in <ref> [14, 16] </ref> has the potential to address problems of resource allocation in a mobile distributed environment. The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol [6, 1], and Data Value Partitioning protocol [19], can be used for dynamically partitioning data among different server sites. 2 server sites. <p> In this section, we present a comparative analysis of message costs incurred by the execution of the reservation algorithm (RES), the Escrow Log Transfering algorithm (ELT), and the 2PC-Site-Escrow algorithm (2SE) over fixed networks. The 2SE algorithm is the direct application of the site escrow method presented in <ref> [14, 16] </ref> in a mobile environment (as shown in Example 1). The ELT algorithm is a modification of a site escrow method which always transfers the escrow log for a mobile transaction to the local server in the current cell of the transaction host. This algorithm was described in [15]. <p> As stated previously, the notion of using partitioned data to reduce message overhead and increase system throughput in distributed database environments has been investigated in the literature <ref> [2, 6, 14, 16, 19, 1] </ref>. These efforts address principally the efficient repartition or reconfiguration of a partitioned data item among different sites so that an operation on the data item can be performed at a local site.
Reference: [17] <author> H. Kung and J. Robinson. </author> <title> On optimistic methods for concurrency control. </title> <journal> ACM Trans. Database Syst., </journal> <volume> 6(2) </volume> <pages> 213-226, </pages> <month> June </month> <year> 1981. </year>
Reference-contexts: A prototype of transaction service for mobile hosts is currently being implemented on the Code file system [13, 18] to support continued services in a disconnection mode. This prototype uses the optimistic concurrency control method presented in <ref> [17] </ref> to enforce the serializable execution of transactions submitted from mobile hosts. The optimistic concurrency control method is generally suitable for applications, such as those in a file system environment, of low data contention.
Reference: [18] <author> Q. Lu and M. Satyanaranyanan. </author> <title> Isolation-only transactions for mobile computing. </title> <journal> ACM Operating Systems Review, </journal> <volume> 28(3), </volume> <year> 1994. </year> <month> 25 </month>
Reference-contexts: In [3], it is predicted that future applications of mobile computing will demand various transactional and transaction-like services. A prototype of transaction service for mobile hosts is currently being implemented on the Code file system <ref> [13, 18] </ref> to support continued services in a disconnection mode. This prototype uses the optimistic concurrency control method presented in [17] to enforce the serializable execution of transactions submitted from mobile hosts.
Reference: [19] <author> N. Soparkar and A. Siberschatz. </author> <title> Data-value partitioning and virtual messages. </title> <booktitle> In Proceedings of the Conference on Principles of Database Systems, </booktitle> <year> 1990. </year>
Reference-contexts: The approach supports the partitioning of data items among different 1 Some proposed approaches, including site escrow [14, 16], demarcation protocol [6, 1], and Data Value Partitioning protocol <ref> [19] </ref>, can be used for dynamically partitioning data among different server sites. 2 server sites. By utilizing the commutative property of resource allocation operations, the site escrow approach allows these operations to be executed without holding locks until the commit time. <p> As stated previously, the notion of using partitioned data to reduce message overhead and increase system throughput in distributed database environments has been investigated in the literature <ref> [2, 6, 14, 16, 19, 1] </ref>. These efforts address principally the efficient repartition or reconfiguration of a partitioned data item among different sites so that an operation on the data item can be performed at a local site.
Reference: [20] <author> L. Yeo and A. Zaslavsky. </author> <title> Submission of transactions from mobile workstations in a cooperative multi-database processing environment. </title> <booktitle> In Proc. of the 14th International Conference on Distributed Computing Systems, </booktitle> <address> Poznan, Poland, </address> <month> June </month> <year> 1994. </year> <month> 26 </month>
Reference-contexts: For example, a mobile host may move into a new cell after it obtains the results of previously submitted operations. In the new cell, it will submit the remainder of the transaction operations to the coordinator in the appropriate new MSS. The first approach is described in <ref> [20] </ref> and related issues regarding the interface between the mobile host and the coordinator are discussed. Our proposed model employs the second approach to transaction submissions. This approach supports the interactive execution of transactions and therefore offers increased flexibility in transaction computations.
References-found: 20

