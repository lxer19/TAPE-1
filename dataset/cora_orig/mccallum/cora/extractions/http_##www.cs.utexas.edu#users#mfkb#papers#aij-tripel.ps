URL: http://www.cs.utexas.edu/users/mfkb/papers/aij-tripel.ps
Refering-URL: http://www.cs.utexas.edu/users/porter/
Root-URL: 
Title: Answer Prediction Questions  
Author: Jeff Rickel Bruce Porter 
Keyword: Automated Modeling of Complex Systems  
Address: Marina del Rey, CA 90292 Austin, TX 78712-1188  
Affiliation: Information Sciences Institute Department of Computer Sciences University of Southern California University of Texas at Austin  
Note: to  
Email: rickel@isi.edu porter@cs.utexas.edu  
Phone: (310) 822-1511 (512) 471-9578  
Date: April 4, 1996  
Abstract: This paper has been submitted for publication Abstract A question about the behavior of a complex, physical system can be answered by simulating the system | the challenge is building a model of the system that is appropriate for answering the question. If the model omits relevant aspects of the system, the predicted behavior may be wrong. If, on the other hand, the model includes many aspects that are irrelevant to the question, it may be difficult to simulate and explain. The leading approach to automated modeling, "compositional modeling," constructs the simplest adequate model for a question from building blocks ("model fragments") that are designed by knowledge engineers. This paper presents a new compositional modeling algorithm that constructs models from simpler building blocks | the individual influences among system variables | and addresses important modeling issues that previous programs left to the knowledge engineer. In the most rigorous test of a modeling algorithm to date, we implemented our algorithm, applied it to a large knowledge base for plant physiology, and asked a domain expert to evaluate the models it produced.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Addanki, R. Cremonini, and J.S. Penberthy. </author> <title> Graphs of models. </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 145-177, </pages> <year> 1991. </year>
Reference-contexts: For example, some early programs required a knowledge base of all potentially useful models of the physical system (the "graph of models" approach <ref> [1] </ref>). These programs perform a relatively easy task: they select, but do not generate, the best model for answering each question. To answer questions about complex systems, this approach is impractical because the knowledge engineer cannot anticipate let alone, build all the models required for a wide range of questions. <p> These programs either address tasks in which the correct behavior of the variables of interest is known <ref> [1, 49] </ref> or they assume that the approximate error introduced by different approximations can be estimated [9, 10, 11, 47]. However, a prediction question does not provide the correct behavior, and error estimates are not available in the domains we have studied, so we exclude such a constraint. <p> However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak [35] discussed earlier. Several people have explored an approach to model construction called "discrepancy-driven refinement" <ref> [1, 3, 49] </ref>. After constructing an initial model, the modeler compares its predictions against the known behavior of the system. Discrepancies suggest refinements to the model, and the process is repeated until a sufficiently close match is obtained.
Reference: [2] <author> T.F.H. Allen and T.B. Starr. </author> <title> Hierarchy. </title> <publisher> University of Chicago Press, </publisher> <address> Chicago, </address> <year> 1982. </year>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. In complex systems, processes cause significant change on widely disparate time scales <ref> [2, 20, 37, 44, 46] </ref>. In a plant, for example, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires days, and surrounding ecological processes may occur on a time scale of months or years. <p> The modeling methods described in this paper do not depend on this particular criterion for significance. In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology [19, 46], ecology <ref> [2, 37] </ref>, economics [48], and many branches of engineering [26, 45]. <p> As illustrated by the example, the search for potentially relevant variables and influences will typically have to traverse only a fraction of the influence graph. In complex systems, such as plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [2, 28, 37, 44, 46] </ref>. <p> Ellipses indicate connections to the remaining variables and influences. Alternative levels of detail are not shown. (B) The potentially relevant variables and influences for the question. (C) The simplest adequate scenario model for the question. 32 subsystems cause change more slowly <ref> [2, 28, 37, 48] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem.
Reference: [3] <author> Jonathan Amsterdam. </author> <title> Automated Qualitative Modeling of Dynamic Physical Systems. </title> <type> PhD thesis, </type> <institution> Artificial Intelligence Laboratory, Massachusetts Institute of Technology, </institution> <year> 1993. </year> <type> Technical Report 1412. </type>
Reference-contexts: The requirement that a scenario model relate driving variables to variables of interest is not new, although previous work has not required differential influence paths. Nayak [35] requires an adequate model to provide a causal path linking the driving variable to the variable of interest. Amsterdam <ref> [3] </ref> requires an adequate model to provide "interaction" paths (i.e., not necessarily causal) linking every variable of interest to some driving variable. <p> However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak [35] discussed earlier. Several people have explored an approach to model construction called "discrepancy-driven refinement" <ref> [1, 3, 49] </ref>. After constructing an initial model, the modeler compares its predictions against the known behavior of the system. Discrepancies suggest refinements to the model, and the process is repeated until a sufficiently close match is obtained.
Reference: [4] <author> Catherine A. Catino. </author> <title> Automated Modeling of Chemical Plants with Application to Hazard and Operability Studies. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1993. </year>
Reference-contexts: Although our approach using influences as building blocks for models differs from other work in automated modeling, the idea is not new: human modelers have taken this approach in a variety of domains <ref> [4, 18, 29, 40, 43] </ref>. Second, Falkenhainer and Forbus require the knowledge engineer to provide more of the criteria for making modeling decisions.
Reference: [5] <author> D.J. Clancy and B.J. Kuipers. </author> <title> Behavior abstraction for tractable simulation. </title> <booktitle> In The Seventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 57-64, </pages> <address> Orcas Island, Washington, </address> <year> 1993. </year>
Reference-contexts: This is the most natural interpretation of our prediction questions in most cases. Second, we allowed qpc to use a qsim extension developed by Clancy and Kuipers <ref> [5] </ref> that abstracts the behavior of chattering variables.
Reference: [6] <author> John W. Collins and Kenneth D. Forbus. </author> <title> Reasoning about fluids via molecular collections. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence (AAAI-87), </booktitle> <pages> pages 590-595, </pages> <address> Seattle, WA, </address> <year> 1987. </year>
Reference-contexts: Analogously, processes can be aggregated. 4 A pool consists of the substance or energy of a particular type in a particular space. In AI, the concept of a pool is the basis of the "contained stuff" ontology <ref> [6, 15] </ref>. The term "pool" is common in biology and ecology. 4 For example, the chemical formula for photosynthesis summarizes the net effects of many chemical reactions. Similarly, in engineering, a system component is often treated as a black box even though it is constructed from other components.
Reference: [7] <author> Thomas H. Cormen, Charles E. Leiserson, and Ronald L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: The connectivity matrix is simply the adjacency matrix for the transitive closure of this subgraph. Given the subgraph, the connectivity matrix can be computed efficiently; the Floyd-Warshall algorithm computes it in fi (n 3 ) time, where n is the number of nodes (potentially relevant variables) in the subgraph <ref> [7] </ref>. As discussed earlier, the System Boundary Selector decides whether a variable in a partial model can be exogenous by checking cells in the connectivity matrix. <p> Second, it uses the Floyd-Warshall transitive closure algorithm to compute a connectivity matrix. The time required to perform the system boundary analysis is dominated by the transitive closure algorithm, which requires fi (n 3 ) time (where n is the number of potentially relevant variables) <ref> [7] </ref>. One of the biggest surprises during the empirical evaluation was the number of potentially relevant variables tripel found for each of the expert's questions. The number is nearly independent of the question; it depends primarily on the time scale of interest. <p> To maintain efficiency while searching for significant influence paths, tripel uses graph algorithms (such as the Floyd-Warshall algorithm) that do not record each path from one variable to another. However, these algorithms are based on a very general algebraic framework (closed semirings) <ref> [7] </ref> that allows them to efficiently summarize the properties of paths from one variable to another. Like the expert that evaluated tripel, these algorithms can use properties of paths such as length and spatial distance in assessing whether one variable significantly influences another.
Reference: [8] <author> R. Davis. </author> <title> Diagnostic reasoning based on structure and behavior. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 347-410, </pages> <year> 1984. </year>
Reference-contexts: Even in engineered systems, designed system boundaries cannot be trusted when considering faults or unintended interactions <ref> [8] </ref>. Reasoning at the level of influences provides more flexibility and overcomes the difficulty of specifying an a priori system decomposition.
Reference: [9] <author> Thomas Ellman, John Keane, and Mark Schwabacher. </author> <title> Intelligent model selection for hillclimb-ing search in computer-aided design. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 594-599, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: These programs either address tasks in which the correct behavior of the variables of interest is known [1, 49] or they assume that the approximate error introduced by different approximations can be estimated <ref> [9, 10, 11, 47] </ref>. However, a prediction question does not provide the correct behavior, and error estimates are not available in the domains we have studied, so we exclude such a constraint.
Reference: [10] <author> Brian Falkenhainer. </author> <title> Modeling without amnesia: Making experience-sanctioned approximations. </title> <booktitle> In The Sixth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 44-55, </pages> <address> Edinburgh, Scotland, </address> <year> 1992. </year> <institution> Heriot-Watt University. </institution>
Reference-contexts: These programs either address tasks in which the correct behavior of the variables of interest is known [1, 49] or they assume that the approximate error introduced by different approximations can be estimated <ref> [9, 10, 11, 47] </ref>. However, a prediction question does not provide the correct behavior, and error estimates are not available in the domains we have studied, so we exclude such a constraint.
Reference: [11] <author> Brian Falkenhainer. </author> <title> Ideal physical systems. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 600-605, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: the person encoding the model fragments and the constraints among assumptions must ensure that each compatible combination of model fragments yields an adequate set of influences. 18 Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [11, 33, 52, 53] </ref>. This is analogous to identifying an approximately complete set of influences given a complete set. <p> These programs either address tasks in which the correct behavior of the variables of interest is known [1, 49] or they assume that the approximate error introduced by different approximations can be estimated <ref> [9, 10, 11, 47] </ref>. However, a prediction question does not provide the correct behavior, and error estimates are not available in the domains we have studied, so we exclude such a constraint.
Reference: [12] <author> Brian Falkenhainer and Kenneth D. Forbus. </author> <title> Compositional modeling: Finding the right model for the job. </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 95-143, </pages> <year> 1991. </year> <month> 55 </month>
Reference-contexts: The set of models grows combinatorially with the number of phenomena in the system and the various levels of detail with which each phenomenon can be modeled. Recent modeling programs take a more practical approach, called "compositional modeling" <ref> [12] </ref>: the domain knowledge provides models of different aspects of the system ("model fragments"), and the modeling program uses them as building blocks to construct an appropriate model for each question. To build an appropriate model, the program typically faces many difficult decisions. <p> Although a system description could be provided to the modeler directly, it is typically generated from general domain knowledge and a description of the physical structure of the particular system <ref> [12] </ref>. <p> The system description is the result of exhaustively instantiating the general knowledge. Various methods are available for generating a system description this way. The method of Falkenhainer and Forbus <ref> [12] </ref>, called "scenario expansion," exhaustively generates the system description before model construction begins. In contrast, we have developed a method that interleaves generating the system description with constructing the model, thereby generating only those parts of the system description that are needed [41]. <p> However, because qpt was not designed to represent modeling alternatives, it does not include a representation for significance preconditions, encapsulation or explanation relationships, or validity preconditions. The compositional modeling framework of Falkenhainer and Forbus <ref> [12] </ref> extends the ideas of qpt to represent modeling alternatives. The building blocks for their models are "model fragments," which provide individual influences or, more typically, sets of influences (e.g., complete equations). <p> The model shows that aba is synthesized and consumed in the leaf mesophyll cells and transported to the guard cells. (The figure also describes the conventions that are used in this and subsequent figures.) As in previous work <ref> [12, 23, 31] </ref>, a scenario model is intended to support the entire simulation of the scenario. To make predictions from a particular state of the scenario, the simulator must determine which influences in the scenario model are active in that state. <p> Adequacy constraint 3 prevents our modeling algorithm from making this mistake. The modeling algorithm of Falkenhainer and Forbus <ref> [12] </ref> largely determines the system boundary by identifying relevant system components. Their algorithm requires, as input, a system decomposition. That is, each system component is also assumed to be a system, and each system can have components that represent its subsystems. <p> Most previous work in automated modeling does not enforce explicit constraints like these for the influences on a dependent variable. For those modeling programs that use the assumption class representation of Falkenhainer and Forbus <ref> [12] </ref>, the person encoding the model fragments and the constraints among assumptions must ensure that each compatible combination of model fragments yields an adequate set of influences. 18 Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <p> Theorem 4 (Model construction algorithm is admissible) Given a system description and a prediction question for which some scenario model is adequate, Find-adequate-model will return a simplest adequate scenario model. Proof See Appendix A.3. 2 4.5 Previous Model Construction Algorithms Falkenhainer and Forbus <ref> [12] </ref> take a knowledge-based approach to model construction. Each model fragment has associated "assumptions," symbolic labels that characterize the phenomena it represents and its level of detail.
Reference: [13] <author> Adam Farquhar. </author> <title> Automated Modeling of Physical Systems in the Presence of Incomplete Knowledge. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Texas at Austin, </institution> <year> 1993. </year> <note> Technical Report AI93-207. </note>
Reference-contexts: Forbus and Falkenhainer [17] have successfully used that approach. Second, each influence can specify how it combines with other influences, such as whether it is an additive term, a multiplicative term, or otherwise. After the model is constructed, equations can be generated using these specifications. Farquhar <ref> [13] </ref> has successfully used this approach for limited types of equations, and it appears feasible for other types as well.
Reference: [14] <author> Adam Farquhar. </author> <title> A qualitative physics compiler. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1168-1174, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: by the criteria) for each prediction question, assuming that one can be built from the building blocks provided by the domain knowledge. (See Section 4.) We implemented our modeling algorithm in a program called tripel. 1 In addition, we integrated tripel with a qualitative simulation program (the Qualitative Process Compiler <ref> [14] </ref>), which 1 The name tripel is an acronym for "Tailoring Relevant Influences for Predictive and Explanatory Leverage." It is also a style of strong ale made by Trappist Monks in Belgium. 2 simulates tripel's models to generate predictions. 2 Our goal is to combine the pieces needed to fully automate <p> The activity preconditions of the influence would represent that fact. To simulate a turgid (not wilting) plant whose turgor pressure is dropping, the simulator would omit this influence until turgor pressure drops below the threshold. A variety of simulators are capable of simulating scenario models in this way <ref> [14, 15, 17] </ref>. Using this approach, the modeler need only build one scenario model to answer a question, rather than building a different model for different states of the scenario. 3.1 Adequacy Intuitively, a scenario model is adequate for answering a given prediction question if it satisfies two criteria. <p> Given a question, tripel constructs a model and passes the model to the Qualitative Process Compiler (qpc) <ref> [14] </ref>. qpc converts the model to a set of qualitative differential equations, and it simulates the equations, using the qsim program [27], to generate the desired predictions. We chose to use a qualitative simulator rather than a numerical simulator because the bkb does not include quantitative details.
Reference: [15] <author> Kenneth D. Forbus. </author> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168, </pages> <year> 1984. </year>
Reference-contexts: This paper describes a new compositional modeling algorithm that does not require such knowledge. Our algorithm constructs models from simple building blocks the individual variables of the physical system, and the influences <ref> [15] </ref> among them and addresses the modeling issues that previous programs left to the knowledge engineer. <p> In this paper, we treat the system description as given, but our modeling algorithm is compatible with either approach. In the compositional modeling approach, elements of the system description serve as building blocks for model construction. We adopt the approach to compositional modeling started by Qualitative Process Theory (qpt) <ref> [15] </ref>: the system description consists primarily of variables and influences among them. However, we extend qpt's representation in several ways. Most importantly, we allow systems to be described at multiple levels of detail. <p> Analogously, processes can be aggregated. 4 A pool consists of the substance or energy of a particular type in a particular space. In AI, the concept of a pool is the basis of the "contained stuff" ontology <ref> [6, 15] </ref>. The term "pool" is common in biology and ecology. 4 For example, the chemical formula for photosynthesis summarizes the net effects of many chemical reactions. Similarly, in engineering, a system component is often treated as a black box even though it is constructed from other components. <p> While spatial relations might form the basis of some such relationships (as with pools and subpools), this need not be the case (as with processes and subprocesses). 2.1.3 Influences As in qpt <ref> [15] </ref>, the phenomena governing a system are represented as a finite set of influences. An influence is a causally-directed relation among two variables, the influencer and the influencee. There are two types of influences: differential and functional. <p> The activity preconditions of the influence would represent that fact. To simulate a turgid (not wilting) plant whose turgor pressure is dropping, the simulator would omit this influence until turgor pressure drops below the threshold. A variety of simulators are capable of simulating scenario models in this way <ref> [14, 15, 17] </ref>. Using this approach, the modeler need only build one scenario model to answer a question, rather than building a different model for different states of the scenario. 3.1 Adequacy Intuitively, a scenario model is adequate for answering a given prediction question if it satisfies two criteria. <p> can cause change in another variable in two ways: (1) with a differential influence, a specified value for the influencer (along with values for other influencing variables) provides the rate of change of the influencee; (2) in contrast, a functional influence can cause change only if the influencer is changing <ref> [15] </ref>.
Reference: [16] <author> Kenneth D. Forbus. </author> <title> Qualitative physics: Past, present, and future. </title> <editor> In Daniel S. Weld and Johan de Kleer, editors, </editor> <booktitle> Readings in Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 11-39. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: This requires their algorithm to extend models to include all variables that could "possibly influence" the chosen free variable, which will generally result in larger models with more irrelevant phenomena. The question of whether influences should be given a causal direction before model construction begins is still open <ref> [16] </ref>. However, our approach has worked well in the plant physiology domain, and we expect similar success in other domains.
Reference: [17] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Self-explanatory simulations: An integration of qualitative and quantitative knowledge. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 380-387, </pages> <address> Menlo Park, CA, 1990. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: The activity preconditions of the influence would represent that fact. To simulate a turgid (not wilting) plant whose turgor pressure is dropping, the simulator would omit this influence until turgor pressure drops below the threshold. A variety of simulators are capable of simulating scenario models in this way <ref> [14, 15, 17] </ref>. Using this approach, the modeler need only build one scenario model to answer a question, rather than building a different model for different states of the scenario. 3.1 Adequacy Intuitively, a scenario model is adequate for answering a given prediction question if it satisfies two criteria. <p> There are two possible ways to generate numerical equations from influences. First, the domain knowledge can provide a numerical equation for each useful combination of influences on a variable. Forbus and Falkenhainer <ref> [17] </ref> have successfully used that approach. Second, each influence can specify how it combines with other influences, such as whether it is an additive term, a multiplicative term, or otherwise. After the model is constructed, equations can be generated using these specifications.
Reference: [18] <author> Jay W. </author> <title> Forrester. </title> <booktitle> Principles of Systems. </booktitle> <publisher> Wright-Allen Press, </publisher> <address> Cambridge, MA, </address> <year> 1968. </year>
Reference-contexts: Although our approach using influences as building blocks for models differs from other work in automated modeling, the idea is not new: human modelers have taken this approach in a variety of domains <ref> [4, 18, 29, 40, 43] </ref>. Second, Falkenhainer and Forbus require the knowledge engineer to provide more of the criteria for making modeling decisions.
Reference: [19] <author> H.J. Gold. </author> <title> Mathematical Modeling of Biological Systems. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: The modeling methods described in this paper do not depend on this particular criterion for significance. In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology <ref> [19, 46] </ref>, ecology [2, 37], economics [48], and many branches of engineering [26, 45].
Reference: [20] <author> Arthur C. Guyton. </author> <title> Textbook of Medical Physiology. </title> <publisher> W.B. Saunders, </publisher> <address> Philadelphia, </address> <year> 1981. </year>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. In complex systems, processes cause significant change on widely disparate time scales <ref> [2, 20, 37, 44, 46] </ref>. In a plant, for example, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires days, and surrounding ecological processes may occur on a time scale of months or years.
Reference: [21] <author> Yumi Iwasaki. </author> <title> Reasoning with multiple abstraction models. </title> <editor> In Boi Faltings and Peter Struss, editors, </editor> <booktitle> Recent Advances in Qualitative Physics, </booktitle> <pages> pages 67-82. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1992. </year>
Reference-contexts: For each influence, the system description specifies the conditions under which it is active, valid, and significant; such information helps the modeler decide 8 which influences are relevant to answering a given question. Currently, our criteria for significance and validity are based on time scale <ref> [28, 22, 21] </ref>, although our model construction algorithm does not depend on any particular criteria. <p> However, some questions require using a combination of models that differ in more fundamental ways (e.g., models with different time scales). Most modeling algorithms, including ours, cannot construct such combinations, although Iwasaki <ref> [21] </ref> has begun to explore the issues. 7 Conclusions This paper has described tripel, a compositional modeling program for answering prediction questions about complex systems. Unlike previous modeling programs, tripel constructs models from simple building blocks: individual variables and influences.
Reference: [22] <author> Yumi Iwasaki and Inderpal Bhandari. </author> <title> Formal basis for commonsense abstraction of dynamic systems. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence (AAAI-88), </booktitle> <pages> pages 307-312, </pages> <address> San Mateo, CA, 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: For each influence, the system description specifies the conditions under which it is active, valid, and significant; such information helps the modeler decide 8 which influences are relevant to answering a given question. Currently, our criteria for significance and validity are based on time scale <ref> [28, 22, 21] </ref>, although our model construction algorithm does not depend on any particular criteria.
Reference: [23] <author> Yumi Iwasaki and Alon Y. Levy. </author> <title> Automated model selection for simulation. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1183-1190, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: To represent the relationships among model fragments, assumptions are organized into "assumption classes"; the assumptions in each class represent mutually incompatible modeling alternatives. Several researchers <ref> [23, 35, 36] </ref> define interesting variants of this compositional modeling framework, but the basic ideas are the same. Our representation differs in two ways. First, the person encoding the domain knowledge need not group influences into model fragments; rather, in our approach, individual influences are the building blocks for models. <p> The model shows that aba is synthesized and consumed in the leaf mesophyll cells and transported to the guard cells. (The figure also describes the conventions that are used in this and subsequent figures.) As in previous work <ref> [12, 23, 31] </ref>, a scenario model is intended to support the entire simulation of the scenario. To make predictions from a particular state of the scenario, the simulator must determine which influences in the scenario model are active in that state. <p> Despite its importance, no previous work in automated modeling has provided explicit criteria for choosing exogenous variables. Typically, modeling programs require either the system description or question to specify those variables that can be exogenous. For instance, the modeling algorithms of Williams [51] and Iwasaki and Levy <ref> [23] </ref> take this approach. Although these algorithms can determine which exogenous variables must be included in the scenario model, neither algorithm can determine exogenous variables automatically. For complex systems, this approach is impractical. <p> Thus, we define one model as simpler than another as follows: * For any two scenario models m and m', m is simpler than m' if and only if m has fewer variables than m'. In contrast to our measure of simplicity, Nayak [35] and Iwasaki and Levy <ref> [23] </ref> define one scenario model as simpler than another if, for every model fragment in the first, either that model fragment or a more-detailed alternative is in the second. 7 This is a reasonable criterion when it holds, but it leaves too many models incomparable. <p> Finally, his proofs currently place restrictions on the use of influences in model fragments, and these restrictions would seriously diminish the advantages of using influences as the building blocks for models. 8 tripel's algorithm for model construction is most similar to the one used by Iwasaki and Levy <ref> [23] </ref>. Their algorithm starts with a partial model consisting of the variables of interest, and it repeatedly extends the model to include the influences on free variables. There are three major differences between the two algorithms. First, their algorithm has no method for automatically choosing exogenous variables.
Reference: [24] <author> Yumi Iwasaki and Herbert A. Simon. </author> <title> Causality and model abstraction. </title> <journal> Artificial Intelligence, </journal> <volume> 67(1) </volume> <pages> 143-194, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Given the time scale of interest for a question, any influence that causes significant change only on a slower time scale is insignificant <ref> [24, 28, 48] </ref>. <p> As an approximation, a modeler might say that the rate of photosynthesis is functionally influenced by the concentration of carbon dioxide in the leaves. Such an approximation is reasonable when the subpools equilibrate on a time scale faster than the time scale of interest <ref> [24, 48] </ref>. <p> photosynthesis is a valid approximation to the true influence when the time scale of interest is minutes or longer. * An influence representing a quasi-static approximation is typically valid only if the underlying processes reach equilibrium on a time scale at least as fast as the time scale of interest <ref> [24, 28, 48] </ref>. For example, when the level of solutes in a plant cell changes, the process of osmosis adjusts the cell's water to a new equilibrium level. On a time scale of minutes or longer, this process can be treated as instantaneous. <p> The direction of causality is only assigned after the model is complete, using a causal ordering algorithm <ref> [24] </ref>. This requires their algorithm to extend models to include all variables that could "possibly influence" the chosen free variable, which will generally result in larger models with more irrelevant phenomena. The question of whether influences should be given a causal direction before model construction begins is still open [16].
Reference: [25] <author> Stephen J. Kline. </author> <title> Similitude and Approximation Theory. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1965. </year>
Reference-contexts: Similar comments apply to the problem of determining whether an influence is valid. Applied mathematicians have developed formal (albeit heuristic) methods for recognizing insignificant terms (i.e., influences) in equations <ref> [25, 32] </ref>. These methods are interesting because they combine the considerations mentioned above.
Reference: [26] <author> P.V. Kokotovic, R.E. O'Malley, Jr., and P. Sannuti. </author> <title> Singular perturbations and order reduction in control theory | an overview. </title> <journal> Automatica, </journal> <volume> 12 </volume> <pages> 123-132, </pages> <year> 1976. </year>
Reference-contexts: In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology [19, 46], ecology [2, 37], economics [48], and many branches of engineering <ref> [26, 45] </ref>. Moreover, empirical results (described in Section 5) show that this criterion is capable of pruning many irrelevant phenomena from models. 2.1.6 Validity Preconditions Many influences are approximations of the phenomena they represent, and these approximations typically have a limited range of validity.
Reference: [27] <author> Benjamin Kuipers. </author> <title> Qualitative simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 29 </volume> <pages> 289-338, </pages> <year> 1986. </year>
Reference-contexts: Given a question, tripel constructs a model and passes the model to the Qualitative Process Compiler (qpc) [14]. qpc converts the model to a set of qualitative differential equations, and it simulates the equations, using the qsim program <ref> [27] </ref>, to generate the desired predictions. We chose to use a qualitative simulator rather than a numerical simulator because the bkb does not include quantitative details. We have run qpc on many of tripel's models, including those models from the evaluation that the expert judged adequate.
Reference: [28] <author> Benjamin Kuipers. </author> <title> Abstraction by time scale in qualitative simulation. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence (AAAI-87), </booktitle> <pages> pages 621-625, </pages> <address> Los Altos, CA, 1987. </address> <publisher> Morgan Kaufmann. </publisher> <pages> 56 </pages>
Reference-contexts: Given the time scale of interest for a question, any influence that causes significant change only on a slower time scale is insignificant <ref> [24, 28, 48] </ref>. <p> photosynthesis is a valid approximation to the true influence when the time scale of interest is minutes or longer. * An influence representing a quasi-static approximation is typically valid only if the underlying processes reach equilibrium on a time scale at least as fast as the time scale of interest <ref> [24, 28, 48] </ref>. For example, when the level of solutes in a plant cell changes, the process of osmosis adjusts the cell's water to a new equilibrium level. On a time scale of minutes or longer, this process can be treated as instantaneous. <p> For each influence, the system description specifies the conditions under which it is active, valid, and significant; such information helps the modeler decide 8 which influences are relevant to answering a given question. Currently, our criteria for significance and validity are based on time scale <ref> [28, 22, 21] </ref>, although our model construction algorithm does not depend on any particular criteria. <p> As illustrated by the example, the search for potentially relevant variables and influences will typically have to traverse only a fraction of the influence graph. In complex systems, such as plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [2, 28, 37, 44, 46] </ref>. <p> Ellipses indicate connections to the remaining variables and influences. Alternative levels of detail are not shown. (B) The potentially relevant variables and influences for the question. (C) The simplest adequate scenario model for the question. 32 subsystems cause change more slowly <ref> [2, 28, 37, 48] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem.
Reference: [29] <author> S.A. Lapp and G.J. </author> <title> Powers. Computer-aided synthesis of fault trees. </title> <journal> IEEE Transactions on Reliability, </journal> <month> April </month> <year> 1977. </year>
Reference-contexts: Although our approach using influences as building blocks for models differs from other work in automated modeling, the idea is not new: human modelers have taken this approach in a variety of domains <ref> [4, 18, 29, 40, 43] </ref>. Second, Falkenhainer and Forbus require the knowledge engineer to provide more of the criteria for making modeling decisions.
Reference: [30] <author> James Lester. </author> <title> Generating Natural Language Explanations from Large-Scale Knowledge Bases. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Texas at Austin, </institution> <year> 1994. </year>
Reference-contexts: His goal was to encode fundamental textbook knowledge that can support a wide range of tasks, not just prediction. (In fact, the same knowledge base has been used successfully for other tasks, such as answering description questions and generating English text <ref> [30] </ref>.) Second, the domain knowledge he encoded is extensive: it describes 700 properties of a prototypical plant and 1500 influences among them, including many different levels of detail. <p> Finally, it was developed to support a wide range of tasks besides prediction; that is, the bkb encodes fundamental, textbook knowledge, and the representation of that knowledge was not chosen to facilitate its use for any single task such as prediction. (Lester <ref> [30] </ref> describes results on using the bkb to answer other types of questions.) Using the bkb, the domain expert constructed a system description for a prototypical plant and its environment (i.e., surrounding soil and atmosphere).
Reference: [31] <author> Alon Y. Levy. </author> <title> Irrelevance Reasoning in Knowledge Based Systems. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <month> July </month> <year> 1993. </year> <note> Report No. STAN-CS-93-1482. </note>
Reference-contexts: The model shows that aba is synthesized and consumed in the leaf mesophyll cells and transported to the guard cells. (The figure also describes the conventions that are used in this and subsequent figures.) As in previous work <ref> [12, 23, 31] </ref>, a scenario model is intended to support the entire simulation of the scenario. To make predictions from a particular state of the scenario, the simulator must determine which influences in the scenario model are active in that state. <p> This is a natural and useful extension of tripel's approach. 8 Nayak (personal communication) believes that the proofs could be extended to accommodate our use of influences. 9 In fact, despite Levy's proof <ref> [31] </ref>, their algorithm does not necessarily find a simplest adequate model even by their own criteria; their algorithm adds more elements to models than are required by their definition of an adequate model. <p> In contrast, our modeling algorithm is designed to ensure that the models it constructs are complete. * Their algorithm is guaranteed to run in time polynomial in the size of the system description <ref> [31] </ref>. However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak [35] discussed earlier. Several people have explored an approach to model construction called "discrepancy-driven refinement" [1, 3, 49].
Reference: [32] <author> C.C. Lin and L.A. Segal. </author> <title> Mathematics Applied to Deterministic Problems in the Natural Sciences. </title> <publisher> Macmillan, </publisher> <address> New York, </address> <year> 1974. </year>
Reference-contexts: Similar comments apply to the problem of determining whether an influence is valid. Applied mathematicians have developed formal (albeit heuristic) methods for recognizing insignificant terms (i.e., influences) in equations <ref> [25, 32] </ref>. These methods are interesting because they combine the considerations mentioned above.
Reference: [33] <author> Sui-ky Ringo Ling. </author> <title> Using a domain theory to guide automated modeling of complex physical phenomena. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1766-1772, </pages> <address> San Mateo, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: the person encoding the model fragments and the constraints among assumptions must ensure that each compatible combination of model fragments yields an adequate set of influences. 18 Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [11, 33, 52, 53] </ref>. This is analogous to identifying an approximately complete set of influences given a complete set. <p> Yip [53] has automated this procedure. However, Yip's program starts with a complete, detailed set of equations and repeatedly simplifies them. A program that could use such methods to construct an initial model would be even more valuable. Ling's msg program <ref> [33] </ref> is a promising start in this direction. As discussed in Section 5, tripel could also benefit from more sophisticated criteria for determining whether an influence path is significant.
Reference: [34] <author> Sanjay Mittal and Brian Falkenhainer. </author> <title> Dynamic constraint satisfaction problems. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 25-32, </pages> <address> Menlo Park, 1990. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: In their modeling task, a question specifies terms (e.g., variables) of interest. Their objective is to find a minimal set of assumptions that satisfy all the domain constraints and ensure that the model includes the terms of interest. They accomplish this with a constraint satisfaction algorithm ("dynamic constraint satisfaction" <ref> [34] </ref>). In their framework, unlike ours, most criteria for model adequacy are implicit in the domain knowledge. Because they have no counterpart of our function Dv-models, they require the domain knowledge to group influences into coherent bundles (model fragments).
Reference: [35] <author> P. Pandurang Nayak. </author> <title> Causal approximations. </title> <journal> Artificial Intelligence, </journal> <volume> 70 </volume> <pages> 277-334, </pages> <year> 1994. </year>
Reference-contexts: To represent the relationships among model fragments, assumptions are organized into "assumption classes"; the assumptions in each class represent mutually incompatible modeling alternatives. Several researchers <ref> [23, 35, 36] </ref> define interesting variants of this compositional modeling framework, but the basic ideas are the same. Our representation differs in two ways. First, the person encoding the domain knowledge need not group influences into model fragments; rather, in our approach, individual influences are the building blocks for models. <p> For instance, the modeling algorithms of Williams [51] and Iwasaki and Levy [23] take this approach. Although these algorithms can determine which exogenous variables must be included in the scenario model, neither algorithm can determine exogenous variables automatically. For complex systems, this approach is impractical. Nayak's modeling algorithm <ref> [35] </ref> can choose exogenous variables, but it does not have explicit criteria for doing so. <p> The requirement that a scenario model relate driving variables to variables of interest is not new, although previous work has not required differential influence paths. Nayak <ref> [35] </ref> requires an adequate model to provide a causal path linking the driving variable to the variable of interest. Amsterdam [3] requires an adequate model to provide "interaction" paths (i.e., not necessarily causal) linking every variable of interest to some driving variable. <p> Thus, we define one model as simpler than another as follows: * For any two scenario models m and m', m is simpler than m' if and only if m has fewer variables than m'. In contrast to our measure of simplicity, Nayak <ref> [35] </ref> and Iwasaki and Levy [23] define one scenario model as simpler than another if, for every model fragment in the first, either that model fragment or a more-detailed alternative is in the second. 7 This is a reasonable criterion when it holds, but it leaves too many models incomparable. <p> Yip's modeling algorithm [53] simplifies the detailed model by removing insignificant terms in the equations (analogous to eliminating insignificant influences). Nayak's modeling algorithm <ref> [35] </ref> repeatedly simplifies the detailed model by (1) eliminating irrelevant phenomena or (2) replacing one model fragment with another that represents a "causal approximation" of it (typically, this corresponds to omitting some of the influences in the original model fragment). <p> For this reason, tripel takes the latter approach. Recent work by Nayak and Joskowicz [36] addresses the impracticality of simplifying a most-detailed model. Their method generates an initial, overly detailed model and then applies Nayak's algorithm <ref> [35] </ref> to repeatedly simplify it. Their hope is that the initial model will be far simpler than the most-detailed model. Their method requires the domain knowledge to provide rules that specify the ways in which different components of the physical system can interact ("component interaction heuristics"). <p> To 36 achieve a simpler initial model, they will require component interaction rules that are sensitive to the question, the available levels of detail in the system description, and criteria for determining significance of interactions, just as our adequacy criteria and model construction algorithm are. Nayak <ref> [35] </ref> proves that his model simplification algorithm will reach the simplest adequate model in time polynomial in the size of the system description. However, his results depend on several assumptions that are inappropriate for the modeling task we address. <p> Second, their algorithm has no counterpart of our function Dv-models; the person encoding the model fragments and the constraints among assumptions must ensure that each compatible combination of model fragments yields an adequate set of influences. Finally, like Nayak <ref> [35] </ref>, their simplicity criteria leave many models incomparable, even though some of these models are intuitively much simpler than others; if more of the models were comparable, as they are under our simplicity criterion, their search strategy would not necessarily find a simplest adequate model. 9 In addition to these primary <p> However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak <ref> [35] </ref> discussed earlier. Several people have explored an approach to model construction called "discrepancy-driven refinement" [1, 3, 49]. After constructing an initial model, the modeler compares its predictions against the known behavior of the system.
Reference: [36] <author> P. Pandurang Nayak and Leo Joskowicz. </author> <title> Efficient compositional modeling for generating causal explanations. </title> <journal> Artificial Intelligence. </journal> <note> to appear. </note>
Reference-contexts: To represent the relationships among model fragments, assumptions are organized into "assumption classes"; the assumptions in each class represent mutually incompatible modeling alternatives. Several researchers <ref> [23, 35, 36] </ref> define interesting variants of this compositional modeling framework, but the basic ideas are the same. Our representation differs in two ways. First, the person encoding the domain knowledge need not group influences into model fragments; rather, in our approach, individual influences are the building blocks for models. <p> For this reason, tripel takes the latter approach. Recent work by Nayak and Joskowicz <ref> [36] </ref> addresses the impracticality of simplifying a most-detailed model. Their method generates an initial, overly detailed model and then applies Nayak's algorithm [35] to repeatedly simplify it. Their hope is that the initial model will be far simpler than the most-detailed model.
Reference: [37] <author> R.V. O'Neill, D.L. DeAngelis, J.B. Waide, and T.F.H. Allen. </author> <title> A Hierarchical Concept of Ecosystems. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1986. </year>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. In complex systems, processes cause significant change on widely disparate time scales <ref> [2, 20, 37, 44, 46] </ref>. In a plant, for example, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires days, and surrounding ecological processes may occur on a time scale of months or years. <p> The modeling methods described in this paper do not depend on this particular criterion for significance. In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology [19, 46], ecology <ref> [2, 37] </ref>, economics [48], and many branches of engineering [26, 45]. <p> Their approach has several limitations. While their modeling algorithm requires a system decomposition, our criteria for choosing a system boundary only require knowledge of the influences. Furthermore, Falkenhainer and Forbus assume that the system decomposition is based on parto-nomic structure; however, O'Neill et al. <ref> [37] </ref> argue that approximate system boundaries in natural systems arise from differences in process rates (i.e., their time scales) and that these boundaries may not correspond to standard structural decompositions. Even in engineered systems, designed system boundaries cannot be trusted when considering faults or unintended interactions [8]. <p> As illustrated by the example, the search for potentially relevant variables and influences will typically have to traverse only a fraction of the influence graph. In complex systems, such as plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [2, 28, 37, 44, 46] </ref>. <p> Ellipses indicate connections to the remaining variables and influences. Alternative levels of detail are not shown. (B) The potentially relevant variables and influences for the question. (C) The simplest adequate scenario model for the question. 32 subsystems cause change more slowly <ref> [2, 28, 37, 48] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem.
Reference: [38] <author> Judea Pearl. </author> <title> Heuristics: Intelligent Search Strategies for Computer Problem Solving. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: Therefore, it is not possible for any two partial models in the search graph to have a common descendant. 2 34 Thus, Find-adequate-model is a version of the well-known "split and prune" search algorithm <ref> [38] </ref>, and the search graph it constructs is a tree. Subsequent theorems and proofs rely on this "split and prune" view of the algorithm. Conceptually, Find-adequate-model operates by repeatedly pruning parts of the search space from consideration. <p> Therefore, the while loop must eventually terminate. 2 Most importantly, Find-adequate-model is an admissible search algorithm. A search algorithm is admissible if it is guaranteed to return an optimal solution whenever a solution exists <ref> [38] </ref>. Find-adequate-model is admissible because it is guaranteed to return a simplest adequate scenario model whenever an adequate scenario model exists.
Reference: [39] <author> B. Porter, J. Lester, K. Murray, K. Pittman, A. Souther, L. Acker, and T. Jones. </author> <title> AI research in the context of a multifunctional knowledge base: The botany knowledge base project. </title> <type> Technical Report AI88-88, </type> <institution> University of Texas at Austin, </institution> <year> 1988. </year>
Reference-contexts: Our goal was a more rigorous evaluation that could expose the strengths and weaknesses of our methods. To accomplish this goal, we evaluated tripel using knowledge and questions constructed independently by a domain expert. The knowledge was provided by the Botany Knowledge Base (bkb) <ref> [39] </ref>. The bkb is an ideal test bed for evaluating tripel for three reasons. First, its knowledge is extensive. It currently 38 contains about 200,000 facts covering plant anatomy, physiology, and development.
Reference: [40] <author> C.J. Puccia and R. Levins. </author> <title> Qualitative Modeling of Complex Systems. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1985. </year>
Reference-contexts: Although our approach using influences as building blocks for models differs from other work in automated modeling, the idea is not new: human modelers have taken this approach in a variety of domains <ref> [4, 18, 29, 40, 43] </ref>. Second, Falkenhainer and Forbus require the knowledge engineer to provide more of the criteria for making modeling decisions.
Reference: [41] <author> Jeff Rickel. </author> <title> Automated Modeling of Complex Systems to Answer Prediction Questions. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Texas at Austin, </institution> <month> May </month> <year> 1995. </year> <note> Technical Report AI95-234. </note>
Reference-contexts: The method of Falkenhainer and Forbus [12], called "scenario expansion," exhaustively generates the system description before model construction begins. In contrast, we have developed a method that interleaves generating the system description with constructing the model, thereby generating only those parts of the system description that are needed <ref> [41] </ref>. In this paper, we treat the system description as given, but our modeling algorithm is compatible with either approach. In the compositional modeling approach, elements of the system description serve as building blocks for model construction. <p> Thus, a time scale of interest allows many important model simplifications. Although the person posing a question may specify a time scale of interest, often a modeler must determine it automatically. Elsewhere <ref> [41, 42] </ref>, we describe an algorithm for choosing an appropriate time scale of interest when none is specified in the question. <p> The appropriate time scale of interest for this question is minutes. (This time scale can be determined automatically if it is not specified <ref> [41, 42] </ref>.) Part A of Figure 3 shows a portion of the system description for a prototypical plant; the driving variable (leaf turgor pressure) and variable of interest (guard cell aba amount) are shown in bold. Part B shows the simplest adequate model for answering the question. <p> Adequacy constraint 10 (entities compatible with driving variables) A scenario model is adequate only if it does not include an entity that encapsulates an entity of a driving variable and it does not include an entity that is encapsulated by an entity of a driving variable. Elsewhere <ref> [41] </ref>, we formulate additional adequacy constraints based on the entities in a model. The constraints ensure that the model is appropriate for the user's level of knowledge and desired level of detail. <p> The question of whether influences should be given a causal direction before model construction begins is still open [16]. However, our approach has worked well in the plant physiology domain, and we expect similar success in other domains. Elsewhere <ref> [41] </ref>, we argue that, regardless of the domain, most influences can be given a causal direction before model construction, and we show how tripel could be extended to handle influences for which this is not possible. * Their algorithm relies on a strong assumption about the system description (the "library coherence <p> Nevertheless, this strategy has limitations. It does not allow tripel to efficiently answer questions until all necessary connectivity matrices are built. Moreover, this strategy requires a complete system description, preventing the possibility of generating only those parts of the system description needed for model construction <ref> [41] </ref>. <p> Most of the models that tripel constructed for these questions can be found elsewhere <ref> [41] </ref>. 1. How would an increasing amount of co 2 in a plant's leaves affect the rate of photosynthesis in the leaves? 2. How does increasing soil water potential affect a plant's water distribution rate? 3.
Reference: [42] <author> Jeff Rickel and Bruce Porter. </author> <title> Automated modeling for answering prediction questions: Selecting the time scale and system boundary. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1191-1198, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Thus, a time scale of interest allows many important model simplifications. Although the person posing a question may specify a time scale of interest, often a modeler must determine it automatically. Elsewhere <ref> [41, 42] </ref>, we describe an algorithm for choosing an appropriate time scale of interest when none is specified in the question. <p> The appropriate time scale of interest for this question is minutes. (This time scale can be determined automatically if it is not specified <ref> [41, 42] </ref>.) Part A of Figure 3 shows a portion of the system description for a prototypical plant; the driving variable (leaf turgor pressure) and variable of interest (guard cell aba amount) are shown in bold. Part B shows the simplest adequate model for answering the question.
Reference: [43] <author> Nancy Roberts, David Andersen, Ralph Deal, Michael Garet, and William Shaffer. </author> <title> Introduction to Computer Simulation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: Although our approach using influences as building blocks for models differs from other work in automated modeling, the idea is not new: human modelers have taken this approach in a variety of domains <ref> [4, 18, 29, 40, 43] </ref>. Second, Falkenhainer and Forbus require the knowledge engineer to provide more of the criteria for making modeling decisions.
Reference: [44] <editor> T. Rosswall, R.G. Woodmansee, and P.G. Risser, editors. </editor> <title> Scales and Global Change: Spatial and Temporal Variability in Biospheric Processes. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1988. </year> <month> 57 </month>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. In complex systems, processes cause significant change on widely disparate time scales <ref> [2, 20, 37, 44, 46] </ref>. In a plant, for example, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires days, and surrounding ecological processes may occur on a time scale of months or years. <p> As illustrated by the example, the search for potentially relevant variables and influences will typically have to traverse only a fraction of the influence graph. In complex systems, such as plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [2, 28, 37, 44, 46] </ref>.
Reference: [45] <author> V.R. Saksena, J. O'Reilly, and P.V. Kokotovic. </author> <title> Singular perturbations and time-scale methods in control theory: Survey 1976-1983. </title> <journal> Automatica, </journal> <volume> 20(3) </volume> <pages> 273-293, </pages> <year> 1984. </year>
Reference-contexts: In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology [19, 46], ecology [2, 37], economics [48], and many branches of engineering <ref> [26, 45] </ref>. Moreover, empirical results (described in Section 5) show that this criterion is capable of pruning many irrelevant phenomena from models. 2.1.6 Validity Preconditions Many influences are approximations of the phenomena they represent, and these approximations typically have a limited range of validity.
Reference: [46] <author> L.A. Segal, </author> <title> editor. Mathematical Models in Molecular and Cellular Biology, chapter 3. </title> <publisher> Cam-bridge University Press, </publisher> <address> Cambridge, </address> <year> 1980. </year>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. In complex systems, processes cause significant change on widely disparate time scales <ref> [2, 20, 37, 44, 46] </ref>. In a plant, for example, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires days, and surrounding ecological processes may occur on a time scale of months or years. <p> The modeling methods described in this paper do not depend on this particular criterion for significance. In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology <ref> [19, 46] </ref>, ecology [2, 37], economics [48], and many branches of engineering [26, 45]. <p> As illustrated by the example, the search for potentially relevant variables and influences will typically have to traverse only a fraction of the influence graph. In complex systems, such as plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [2, 28, 37, 44, 46] </ref>.
Reference: [47] <author> Mark Shirley and Brian Falkenhainer. </author> <title> Explicit reasoning about accuracy for approximating physical systems. </title> <editor> In T. Ellman, R. Keller, and J. Mostow, editors, </editor> <booktitle> Working Notes of the AAAI Workshop on Automatic Generation of Approximations and Abstractions, </booktitle> <pages> pages 153-162, </pages> <year> 1990. </year>
Reference-contexts: These programs either address tasks in which the correct behavior of the variables of interest is known [1, 49] or they assume that the approximate error introduced by different approximations can be estimated <ref> [9, 10, 11, 47] </ref>. However, a prediction question does not provide the correct behavior, and error estimates are not available in the domains we have studied, so we exclude such a constraint.
Reference: [48] <author> H.A. Simon and A. Ando. </author> <title> Aggregation of variables in dynamic systems. </title> <journal> Econometrica, </journal> <volume> 29 </volume> <pages> 111-138, </pages> <year> 1961. </year>
Reference-contexts: Given the time scale of interest for a question, any influence that causes significant change only on a slower time scale is insignificant <ref> [24, 28, 48] </ref>. <p> In the future, we plan to incorporate other criteria as well, as discussed in Section 6.1.1. Still, time scale is an important significance criterion in many domains, including biology [19, 46], ecology [2, 37], economics <ref> [48] </ref>, and many branches of engineering [26, 45]. Moreover, empirical results (described in Section 5) show that this criterion is capable of pruning many irrelevant phenomena from models. 2.1.6 Validity Preconditions Many influences are approximations of the phenomena they represent, and these approximations typically have a limited range of validity. <p> As an approximation, a modeler might say that the rate of photosynthesis is functionally influenced by the concentration of carbon dioxide in the leaves. Such an approximation is reasonable when the subpools equilibrate on a time scale faster than the time scale of interest <ref> [24, 48] </ref>. <p> photosynthesis is a valid approximation to the true influence when the time scale of interest is minutes or longer. * An influence representing a quasi-static approximation is typically valid only if the underlying processes reach equilibrium on a time scale at least as fast as the time scale of interest <ref> [24, 28, 48] </ref>. For example, when the level of solutes in a plant cell changes, the process of osmosis adjusts the cell's water to a new equilibrium level. On a time scale of minutes or longer, this process can be treated as instantaneous. <p> Ellipses indicate connections to the remaining variables and influences. Alternative levels of detail are not shown. (B) The potentially relevant variables and influences for the question. (C) The simplest adequate scenario model for the question. 32 subsystems cause change more slowly <ref> [2, 28, 37, 48] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem.
Reference: [49] <author> Daniel S. Weld. </author> <title> Reasoning about model accuracy. </title> <journal> Artificial Intelligence, </journal> <volume> 56 </volume> <pages> 255-300, </pages> <year> 1992. </year>
Reference-contexts: These programs either address tasks in which the correct behavior of the variables of interest is known <ref> [1, 49] </ref> or they assume that the approximate error introduced by different approximations can be estimated [9, 10, 11, 47]. However, a prediction question does not provide the correct behavior, and error estimates are not available in the domains we have studied, so we exclude such a constraint. <p> However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak [35] discussed earlier. Several people have explored an approach to model construction called "discrepancy-driven refinement" <ref> [1, 3, 49] </ref>. After constructing an initial model, the modeler compares its predictions against the known behavior of the system. Discrepancies suggest refinements to the model, and the process is repeated until a sufficiently close match is obtained.
Reference: [50] <author> Daniel S. Weld and Johan de Kleer, </author> <title> editors. Readings in Qualitative Reasoning about Physical Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: For example, given the physical structure of a particular chemical processing factory, general knowledge of chemical engineering could be used to generate a system description for the factory. 2 Although tripel has only been used to construct qualitative models <ref> [50] </ref>, we believe that our modeling algorithm is equally capable of building numerical models, consisting of algebraic equations and ordinary differential equations. (See Section 6.) 3 Transpiration is the process by which water evaporates from the leaves. 3 The general knowledge provides principles (e.g., "the rate of any chemical reaction is
Reference: [51] <author> Brian C. Williams. </author> <title> Critical abstraction: Generating simplest models for causal explanation. </title> <booktitle> In The Fifth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 77-92, </pages> <address> Austin, TX, </address> <year> 1991. </year> <institution> University of Texas at Austin. </institution>
Reference-contexts: Despite its importance, no previous work in automated modeling has provided explicit criteria for choosing exogenous variables. Typically, modeling programs require either the system description or question to specify those variables that can be exogenous. For instance, the modeling algorithms of Williams <ref> [51] </ref> and Iwasaki and Levy [23] take this approach. Although these algorithms can determine which exogenous variables must be included in the scenario model, neither algorithm can determine exogenous variables automatically. For complex systems, this approach is impractical. <p> Amsterdam [3] requires an adequate model to provide "interaction" paths (i.e., not necessarily causal) linking every variable of interest to some driving variable. Williams's method for generating a "critical abstraction" <ref> [51] </ref> is designed to ensure that the chosen scenario model causally links the driving variables (in his framework, the exogenous variables of the system) to the variables of interest. <p> Removing the need for domain-specific modeling knowledge has been a driving motivation for our work. A second approach to model construction is to start with the most detailed model and repeatedly simplify it. Williams's method for generating a "critical abstraction" <ref> [51] </ref> simplifies the detailed model in three ways: (1) the method removes influences on which the variables of interest do not causally depend (such influences are never introduced into a scenario model by our algorithm), (2) the method algebraically eliminates certain intermediate variables if they are neither driving variables nor variables
Reference: [52] <author> Brian C. Williams and Olivier Raiman. </author> <title> Decompositional modeling through caricatural reasoning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1199-1204, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: the person encoding the model fragments and the constraints among assumptions must ensure that each compatible combination of model fragments yields an adequate set of influences. 18 Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [11, 33, 52, 53] </ref>. This is analogous to identifying an approximately complete set of influences given a complete set.
Reference: [53] <author> Kenneth Man-kam Yip. </author> <title> Model simplification by asymptotic order of magnitude reasoning. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 634-641, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher> <pages> 58 </pages>
Reference-contexts: the person encoding the model fragments and the constraints among assumptions must ensure that each compatible combination of model fragments yields an adequate set of influences. 18 Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [11, 33, 52, 53] </ref>. This is analogous to identifying an approximately complete set of influences given a complete set. <p> Yip's modeling algorithm <ref> [53] </ref> simplifies the detailed model by removing insignificant terms in the equations (analogous to eliminating insignificant influences). <p> Next, the modeler drops terms whose order of magnitude is very small. Finally, the modeler solves the equations and checks whether the discarded terms are in fact negligible. Yip <ref> [53] </ref> has automated this procedure. However, Yip's program starts with a complete, detailed set of equations and repeatedly simplifies them. A program that could use such methods to construct an initial model would be even more valuable. Ling's msg program [33] is a promising start in this direction.
References-found: 53

