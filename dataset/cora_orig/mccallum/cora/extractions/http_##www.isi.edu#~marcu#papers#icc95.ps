URL: http://www.isi.edu/~marcu/papers/icc95.ps
Refering-URL: http://www.isi.edu/~marcu/papers.html
Root-URL: http://www.isi.edu
Email: fmarcu,lesperan,hector,,reiter,scherlg@ai.toronto.edu  
Title: Distributed Software Agents and Communication in the Situation Calculus 1  
Author: Daniel Marcu, Yves Lesperance, Hector J. Levesque Fangzhen Lin, Raymond Reiter and Richard B. Scherl 
Address: Toronto, ON, M5S 1A4 Canada  
Affiliation: Department of Computer Science University of Toronto  
Abstract: This paper describes a theoretical framework that can be used for the implementation of software agents that reason, act, and perceive in incompletely known, dynamic software environments. Special attention is given to describing the way inter-agent communication is treated in this framework. We assume that the user provides a specification of each agent's primitive actions, and the relevant information about the software environment in which the agent is supposed to operate. On the basis of the primitive actions, the user can specify complex behaviors in a programming language, GOLOG, whose execution reflects the way the environment and the knowledge of the agent change from state to state. A simple domain consisting of two elevator controllers that negotiate the serving of a floor is used to present incremen tally the details of our approach. 
Abstract-found: 1
Intro-found: 1
Reference: [ Etzioni et al., 1993 ] <author> O. Etzioni, N. Lesh, and R. Segal. </author> <title> Building softbots for Unix (preliminary report). </title> <type> Technical Report 93-09-01, </type> <institution> University of Washington, </institution> <year> 1993. </year> <note> Available via anonymous FTP from pub/etzioni/softbots at cs.washington.edu. </note>
Reference-contexts: 1 Introduction A number of formal languages have been proposed recently for modeling inter-agent communication [ Finin et al., 1993, Shoham, 1993, Sidner, 1994 ] , and a number of implemented agents have already started to reveal the research issues one should address when dealing with real-world systems <ref> [ Etzioni et al., 1993, Kautz et al., 1994 ] </ref> . Theoretical work [ Shoham, 1993, Sidner, 1994 ] emphasizes the role of knowledge or mental state of the agents that participate in a cooperative process, while practical work [ Etzioni et al., 1993, Kautz et al., 1994 ] emphasizes the <p> the research issues one should address when dealing with real-world systems <ref> [ Etzioni et al., 1993, Kautz et al., 1994 ] </ref> . Theoretical work [ Shoham, 1993, Sidner, 1994 ] emphasizes the role of knowledge or mental state of the agents that participate in a cooperative process, while practical work [ Etzioni et al., 1993, Kautz et al., 1994 ] emphasizes the importance of agents' trustworthiness, robustness, and autonomy. We are interested in an approach that is able to address successfully both classes of problems.
Reference: [ Finin et al., 1993 ] <author> T. Finin, J. Weber, G. Wiederhold, M. Genesereth, R. Fritzson, D. McKay, J. McGuire, R. Pelavin, S. Shapiro, and C. Beck. </author> <title> Specification of the KQLM agent-communication language. The DARPA Knowledge Sharing Initiative, </title> <month> June </month> <year> 1993. </year>
Reference-contexts: 1 Introduction A number of formal languages have been proposed recently for modeling inter-agent communication <ref> [ Finin et al., 1993, Shoham, 1993, Sidner, 1994 ] </ref> , and a number of implemented agents have already started to reveal the research issues one should address when dealing with real-world systems [ Etzioni et al., 1993, Kautz et al., 1994 ] .
Reference: [ Haas, 1987 ] <author> A.R. Haas. </author> <title> The case for domain-specific frame axioms. In F.M. </title> <editor> Brown, editor, </editor> <booktitle> The Frame Problem in Artificial Intelligence: Proceedings of the 1987 Workshop, </booktitle> <pages> pages 343-348, </pages> <publisher> Lawrence, KA, </publisher> <address> April 1987. </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference: [ Kautz et al., 1994 ] <author> H. Kautz, B. Selman, M. Coen, S. Ketchpel, and C. Ramming. </author> <title> An experiment in the design of software agents. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, volume one, </booktitle> <pages> pages 438-443, </pages> <address> Seattle, Washing-ton, </address> <month> July 31 August 4 </month> <year> 1994. </year>
Reference-contexts: 1 Introduction A number of formal languages have been proposed recently for modeling inter-agent communication [ Finin et al., 1993, Shoham, 1993, Sidner, 1994 ] , and a number of implemented agents have already started to reveal the research issues one should address when dealing with real-world systems <ref> [ Etzioni et al., 1993, Kautz et al., 1994 ] </ref> . Theoretical work [ Shoham, 1993, Sidner, 1994 ] emphasizes the role of knowledge or mental state of the agents that participate in a cooperative process, while practical work [ Etzioni et al., 1993, Kautz et al., 1994 ] emphasizes the <p> the research issues one should address when dealing with real-world systems <ref> [ Etzioni et al., 1993, Kautz et al., 1994 ] </ref> . Theoretical work [ Shoham, 1993, Sidner, 1994 ] emphasizes the role of knowledge or mental state of the agents that participate in a cooperative process, while practical work [ Etzioni et al., 1993, Kautz et al., 1994 ] emphasizes the importance of agents' trustworthiness, robustness, and autonomy. We are interested in an approach that is able to address successfully both classes of problems.
Reference: [ Lesperance et al., 1994 ] <author> Y. Lesperance, H. Levesque, F. Lin, D. Marcu, R. Reiter, and R. Scherl. </author> <title> A logical approach to high-level programming a progress report. In Control of the Physical World by Intelligent Systems, </title> <booktitle> Working Notes of the 1994 AAAI Fall Symposium, </booktitle> <pages> pages 109-119, </pages> <address> New Orleans, LA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: This set of complex action expressions forms a programming language that we call GOLOG (alGOl in LOGic), which is suitable for high-level programming of robots <ref> [ Lesperance et al., 1994 ] </ref> and software agents, as well as discrete event simulation.
Reference: [ Lesperance et al., 1995 ] <author> Y. Lesperance, H.J. Levesque, F. Lin, D. Marcu, R. Reiter, and R.B. Scherl. </author> <title> Fondements d'une approche logique a la programmation d'agents. </title> <booktitle> In Actes des Troisiemes Journees Francophones sur l'Intelligence Artificielle Dis-tribuee et les Systemes Multi-Agents, </booktitle> <pages> pages 3-14, </pages> <address> Chambery-St. Badolph, France, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: We are currently building more complex softbots for assisting users in performing tedious tasks, such as meeting scheduling for example. We are also developing a theory of communication among software agents, using an extension of our theory of complex actions that handles concurrency, and its programming language counterpart, CON-GOLOG <ref> [ Lesperance et al., 1995 ] </ref> . 6 Conclusion The approach described here for programming software agents is concerned with a theory and an implementation of software agents that reason, act, and perceive in dynamically changing software environments.
Reference: [ McCarthy and Hayes, 1969 ] <author> J. McCarthy and P. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <journal> Machine Intelligence, </journal> <volume> 4 </volume> <pages> 463-502, </pages> <year> 1969. </year>
Reference-contexts: A completeness assumption allows one to automatically derive a set of successor state axioms [ Reiter, 1991, Scherl and Levesque, 1993 ] that solve the frame problem <ref> [ McCarthy and Hayes, 1969 ] </ref> for primitive actions.
Reference: [ Moore, 1980 ] <author> R.C. Moore. </author> <title> Reasoning about knowledge and action. </title> <type> Technical Report 191, </type> <institution> SRI International, AI Center, </institution> <address> Menlo Park, CA, </address> <year> 1980. </year>
Reference: [ Pednault, 1989 ] <author> E.P.D. Pednault. </author> <title> ADL: Exploring the middle ground between Strips and the situation calculus. </title> <editor> In R.J. Brachman, H.J. Levesque, and R. Reiter, editors, </editor> <booktitle> Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 324-332, </pages> <address> Toronto, ON, May 1989. </address> <publisher> Morgan Kauf-mann Publishing. </publisher>
Reference: [ Reiter, 1991 ] <author> R. Reiter. </author> <title> The frame problem in the situation calculus: A simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Vladimir Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1991. </year>
Reference-contexts: A completeness assumption allows one to automatically derive a set of successor state axioms <ref> [ Reiter, 1991, Scherl and Levesque, 1993 ] </ref> that solve the frame problem [ McCarthy and Hayes, 1969 ] for primitive actions. <p> Special emphasis is given to the treatment of communication. We conclude with implementation remarks. 2 Logical Foundations The variant of the situation calculus that we use <ref> [ Reiter, 1991 ] </ref> is a first-order language for representing dynamically changing worlds in which all of the changes are the result of named actions performed by some agent. <p> The basic idea behind this is to collect all effects axioms about a given fluent and assume that they specify all the ways the value of the fluent may change. A syntactic transformation can then be used to obtain a successor state axiom for each fluent <ref> [ Reiter, 1991 ] </ref> . The following successor state axiom specifies that a button is on if it has just been pressed or if it was on before and it was not turned off.
Reference: [ Scherl and Levesque, 1993 ] <author> R.B. Scherl and H.J. Levesque. </author> <title> The frame problem and knowledge-producing actions. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 689-695, </pages> <address> Washington, DC, July 1993. </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference-contexts: A completeness assumption allows one to automatically derive a set of successor state axioms <ref> [ Reiter, 1991, Scherl and Levesque, 1993 ] </ref> that solve the frame problem [ McCarthy and Hayes, 1969 ] for primitive actions. <p> This kind of communicative action can be accommodated in an extension of the language described so far that handles perception and knowledge <ref> [ Scherl and Levesque, 1993 ] </ref> . A binary relation K (s 0 ; s) is introduced in order to adapt the standard possible-world model of knowledge to the situation calculus, as first done by Moore [ 1980 ] .
Reference: [ Schubert, 1990 ] <author> L.K. Schubert. </author> <title> Monotonic solution to the frame problem in the situation calculus: An efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyberg, R.P. Loui, and G.N. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defea-sible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer Academic Press, </publisher> <address> Boston, MA, </address> <year> 1990. </year>
Reference: [ Shoham, 1993 ] <author> Y. Shoham. </author> <title> Agent-oriented programming. </title> <journal> Artificial Intelligence, </journal> <volume> 60(1) </volume> <pages> 51-92, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction A number of formal languages have been proposed recently for modeling inter-agent communication <ref> [ Finin et al., 1993, Shoham, 1993, Sidner, 1994 ] </ref> , and a number of implemented agents have already started to reveal the research issues one should address when dealing with real-world systems [ Etzioni et al., 1993, Kautz et al., 1994 ] . <p> Theoretical work <ref> [ Shoham, 1993, Sidner, 1994 ] </ref> emphasizes the role of knowledge or mental state of the agents that participate in a cooperative process, while practical work [ Etzioni et al., 1993, Kautz et al., 1994 ] emphasizes the importance of agents' trustworthiness, robustness, and autonomy. <p> In short, we have presented a uniform theoretical and implementation framework that integrates reasoning, perception, and action. From this perspective, we argue that our approach meets the requirements specified by previous work on agent-programming techniques <ref> [ Shoham, 1993 ] </ref> . We have paid special attention to explaining a way in which communication can be treated in this framework, that allows agents to cooperate even though they are not located on the same machine. The theory described here has been fully implemented in GOLOG.
Reference: [ Sidner, 1994 ] <author> C.L. Sidner. </author> <title> An artificial discourse language for collaborative negotiation. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, volume one, </booktitle> <pages> pages 814-819, </pages> <address> Seattle, Washington, </address> <month> July 31 August 4 </month> <year> 1994. </year>
Reference-contexts: 1 Introduction A number of formal languages have been proposed recently for modeling inter-agent communication <ref> [ Finin et al., 1993, Shoham, 1993, Sidner, 1994 ] </ref> , and a number of implemented agents have already started to reveal the research issues one should address when dealing with real-world systems [ Etzioni et al., 1993, Kautz et al., 1994 ] . <p> Theoretical work <ref> [ Shoham, 1993, Sidner, 1994 ] </ref> emphasizes the role of knowledge or mental state of the agents that participate in a cooperative process, while practical work [ Etzioni et al., 1993, Kautz et al., 1994 ] emphasizes the importance of agents' trustworthiness, robustness, and autonomy.
References-found: 14

