URL: http://www.cs.utexas.edu/users/haizhou/buffer.ps
Refering-URL: http://www.cs.utexas.edu/users/haizhou/publications.html
Root-URL: 
Email: haizhou@cs.utexas.edu adnan@ece.utexas.edu  
Title: Buffer Minimization in Pass Transistor Logic  
Author: Hai Zhou Adnan Aziz 
Abstract: Since the delay in a pass-transistor chain is quadrati-cally proportional to the number of stages, and a signal may degenerate when passing through a transistor, buffers are necessary to guarantee performance and restore signal strength in PTL circuits. In this paper, we first analyze the effects of buffer insertion on a circuit and give the sufficient and necessary condition for safe buffer insertion. Then the buffer minimization problem is formulated, which asks for a minimum number of buffers to make sure that no path has length longer than a given upper bound. Although NP-hard in general, we show that, when buffers are required on multiple fan-outs, it can be solved linearly. We also consider the case when buffers are inverters, where phase assignment need to be done with buffer insertion. Experiments are done on MCNC logic synthesis and optimization benchmarks; compared with a level-by-level insertion, a large number of buffers are saved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.K. Brayton et al., </author> <title> VIS: A system for Verification and Synthesis. </title> <booktitle> Computer Aided Verification, </booktitle> <year> 1996. </year>
Reference-contexts: It is required that each multiple fan-out node needs at least one buffer. Experiments are done on MCNC logic synthesis and optimization benchmarks. Based on discussions in section 2, BDDs are used for PTL synthesis. We use a simple threshold based BDD decomposition heuristic <ref> [1] </ref>; for simplicity, we do not optimize their representations. Since our algorithm is not base on any specific structure, it can be used on PTL circuits synthesized from other BDD methods, or even non-BDD methods if candidate insertion positions are given.
Reference: [2] <author> P. Buch, A. Narayan, A.R. Newton, and A. Sangiovanni-Vincentelli, </author> <title> Logic Synthesis for Large Pass Transistor Circuits. </title> <booktitle> IEEE/ACM International Conference on Computer Aided Design, </booktitle> <year> 1997. </year>
Reference-contexts: There, designs are first converted into monolithic BDD representations and then mapped into net-lists of cells in a pass-transistor cell library consisting of three function cells and four inverters with various drive capabilities. The approach in <ref> [2] </ref> also utilizes the natural, efficient mapping between BDD and PTL. But, to control the BDD size, it uses decomposed BDDs instead of monolithic BDDs. Furthermore, in stead of mapping to pass-transistor cells, it converts BDD directly into pass-transistor net-list. <p> In [13], buffers are inserted from top to bottom, every after a fixed number of stages. This definitely guarantees the performance of the designs, but may incur a large number of buffers than necessary. In <ref> [2] </ref>, the height of each decomposed BDD is upper-bounded, and a buffer is inserted at the root of each decomposed BDD. <p> However, insertion of inverting buffers is more difficult, as they change signals to their complements. Furthermore, in the original circuit, there may already be inverters on transit paths <ref> [2] </ref>. It will be convenient to refer to, and to represent inverters as "bubbles." Due to the nature of pass-gates, we can get a complemented signal with the same function cell by complementing all the pass signals of the cell, as shown in Figure 8. <p> Although we ignored the true timing on electrical basis and used a simple-minded pass-transistor path length for delay control, the problem defines a fundamental issue in buffering PTL circuits and was also considered in <ref> [2, 13] </ref>. Built on the greedy algorithm for leaf-DAGs, our approach for inverting buffer minimization is an effective and efficient heuristic algorithm. But, on non-critical paths, a tight bound on the number of consecutive transistors may be relaxed, and a buffer driving multiple fan-outs may need to be sized accordingly.
Reference: [3] <author> M.S. Garey and D.S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: This means the problem is in NP. We show the problem is NP-hard by transforming 3-SAT problem <ref> [3] </ref> to it. Given an instance of 3-SAT with n clauses, each has 3 literals, we can construct a circuit illustrated in node A a path with 3 pass-transistors. The control signals of these pass-transistors are the complements of literals in the clause. <p> Theorem 3 The Buffer Minimization Problem is NP-hard. Proof: This can be shown by a reduction from the INDUCED SUBGRAPH WITH PROPERTY <ref> [3] </ref>. It is defined as follows. INSTANCE: Graph G = (V; E), positive integer M jV j.
Reference: [4] <author> A. Jain and R.E. Bryant, </author> <title> Inverter Minimization in Multi-Level Logic Networks. </title> <booktitle> IEEE/ACM International Conference on Computer Aided Design, </booktitle> <year> 1993. </year>
Reference-contexts: Treating each internal vertex as a Boolean function and assuming it allows simultanous polarity change on fan-ins and fan-outs, the above problem is actually the global phase assignment problem in the literature. It was shown to be NP-complete by a transformation from MAX-CUT [12]. Heuristic algorithms were given in <ref> [4, 12] </ref>. 5 Experimental Results We implement the two phase based algorithm described in previous section for the inverting buffer minimization problem. It is required that each multiple fan-out node needs at least one buffer. Experiments are done on MCNC logic synthesis and optimization benchmarks.
Reference: [5] <author> T. Kuroda and T. Sakurai, </author> <title> Overview of Low-Power ULSI Circuit Techniques. </title> <journal> IEICE Trans. Electron., </journal> <volume> E78-C(4):334-343, </volume> <month> April </month> <year> 1995. </year>
Reference-contexts: Among these, pass transistor logic (PTL) circuits give great promise. Traditionally, hand-crafted pass transistor logic has been successfully used to implement digital systems which are smaller, faster, and more energy efficient than static CMOS implementations for the same designs <ref> [5, 6, 9, 11, 14] </ref>. But the lack of a systematic methodology restricts the use of pass transistors in industry circuits. Recently, there have been a number of attempts developing synthesis tools targeting PTL.
Reference: [6] <author> F.S. Lai and W. Hwang, </author> <title> Differential Cascade Voltage Switch with Pass-Gate (DCVSPG) Logic Tree for High Performance CMOS Digital Systems. </title> <booktitle> International Symposium on VLSI Technology, Systems, and Applications, </booktitle> <year> 1993. </year>
Reference-contexts: Among these, pass transistor logic (PTL) circuits give great promise. Traditionally, hand-crafted pass transistor logic has been successfully used to implement digital systems which are smaller, faster, and more energy efficient than static CMOS implementations for the same designs <ref> [5, 6, 9, 11, 14] </ref>. But the lack of a systematic methodology restricts the use of pass transistors in industry circuits. Recently, there have been a number of attempts developing synthesis tools targeting PTL.
Reference: [7] <author> I-M. Liu, </author> <type> Personal communication. </type> <year> 1997. </year>
Reference-contexts: Since our algorithm is not base on any specific structure, it can be used on PTL circuits synthesized from other BDD methods, or even non-BDD methods if candidate insertion positions are given. Based on work of I-Min Liu <ref> [7] </ref>, we choose three as a upper bound on the number of stages in PTL circuits. For comparison, an algorithm which inserts buffers level by level is also implemented.
Reference: [8] <author> I-M. Liu, T.-H. Liu, H. Zhou, and A. Aziz, </author> <title> Simultaneous PTL Buffer Insertion and Sizing for Minimizing Elmore Delay. </title> <booktitle> International Workshop on Logic Synthesis,, </booktitle> <year> 1998. </year>
Reference-contexts: Based on Theorem 1, a buffer can be safely inserted on this position. 3 3 Buffer minimization 3.1 General buffer minimization When circuit level issues are considered, a pass-transistor has both capacitance and resistance. Hence, the delay in a transistor chain is quadratically dependent on the number of transistors <ref> [8] </ref>. It is known for today's static CMOS that transistor chains longer than 3 or 4 in series can be unacceptably slow [10].
Reference: [9] <author> A. Parameswar, H. Hara, and T. Sakurai, </author> <title> A High Speed, Low Power, Swing Restored Pass-Transsitor Logic Based Multiply and Accumulate Circuit for Multimedia Applications. </title> <booktitle> proc. Custom Integrated Circuits Conf., </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Among these, pass transistor logic (PTL) circuits give great promise. Traditionally, hand-crafted pass transistor logic has been successfully used to implement digital systems which are smaller, faster, and more energy efficient than static CMOS implementations for the same designs <ref> [5, 6, 9, 11, 14] </ref>. But the lack of a systematic methodology restricts the use of pass transistors in industry circuits. Recently, there have been a number of attempts developing synthesis tools targeting PTL.
Reference: [10] <author> J. Rabaey, </author> <title> Digital Integrated Circuits, </title> <publisher> Prentice-Hall, Inc. </publisher> <year> 1996. </year>
Reference-contexts: Hence, the delay in a transistor chain is quadratically dependent on the number of transistors [8]. It is known for today's static CMOS that transistor chains longer than 3 or 4 in series can be unacceptably slow <ref> [10] </ref>. Therefore, the main purpose of buffer insertion in a PTL circuit is to make sure that the maximum number of consecutive pass-transistors is not greater than a given upper bound. We hope to use as few buffers as possible to achieve this objective. Therefore, we have the following problem.
Reference: [11] <author> T.S. Sheungm and K. Asada, </author> <title> Regenerative Pass-Transistor Logic: A Circuit Technique for High Speed Digital Design. </title> <journal> IEICE Trans. Electron., </journal> <volume> E79-C(9):1274-1283, </volume> <month> Septemver </month> <year> 1996. </year>
Reference-contexts: Among these, pass transistor logic (PTL) circuits give great promise. Traditionally, hand-crafted pass transistor logic has been successfully used to implement digital systems which are smaller, faster, and more energy efficient than static CMOS implementations for the same designs <ref> [5, 6, 9, 11, 14] </ref>. But the lack of a systematic methodology restricts the use of pass transistors in industry circuits. Recently, there have been a number of attempts developing synthesis tools targeting PTL.
Reference: [12] <author> A. Wang, </author> <title> Algorithms for Multilevel Logic Optimization. </title> <type> PhD thesis, </type> <address> U. C. Berkeley, </address> <month> April, </month> <year> 1989. </year>
Reference-contexts: Treating each internal vertex as a Boolean function and assuming it allows simultanous polarity change on fan-ins and fan-outs, the above problem is actually the global phase assignment problem in the literature. It was shown to be NP-complete by a transformation from MAX-CUT <ref> [12] </ref>. Heuristic algorithms were given in [4, 12]. 5 Experimental Results We implement the two phase based algorithm described in previous section for the inverting buffer minimization problem. It is required that each multiple fan-out node needs at least one buffer. <p> Treating each internal vertex as a Boolean function and assuming it allows simultanous polarity change on fan-ins and fan-outs, the above problem is actually the global phase assignment problem in the literature. It was shown to be NP-complete by a transformation from MAX-CUT [12]. Heuristic algorithms were given in <ref> [4, 12] </ref>. 5 Experimental Results We implement the two phase based algorithm described in previous section for the inverting buffer minimization problem. It is required that each multiple fan-out node needs at least one buffer. Experiments are done on MCNC logic synthesis and optimization benchmarks.
Reference: [13] <author> K. Yano, Y. Sasaki, K. Rikino, and K. Seki, </author> <title> Top-Down Pass-Transistor Logic Design. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 31(6) </volume> <pages> 792-803, </pages> <month> June, </month> <year> 1996. </year>
Reference-contexts: But the lack of a systematic methodology restricts the use of pass transistors in industry circuits. Recently, there have been a number of attempts developing synthesis tools targeting PTL. A top-down design flow for pass-transistor logic, called LEAP (Lean Integration with Pass Transistors), was proposed in <ref> [13] </ref>. There, designs are first converted into monolithic BDD representations and then mapped into net-lists of cells in a pass-transistor cell library consisting of three function cells and four inverters with various drive capabilities. The approach in [2] also utilizes the natural, efficient mapping between BDD and PTL. <p> Since the delay in a pass-transistor chain is quadrati-cally proportional to its length, and a signal may degenerate when pass through a transistor (e.g., 1 through n-MOS or 0 through p-MOS), buffers are necessary to guarantee performance and restore signals. In <ref> [13] </ref>, buffers are inserted from top to bottom, every after a fixed number of stages. This definitely guarantees the performance of the designs, but may incur a large number of buffers than necessary. <p> Although we ignored the true timing on electrical basis and used a simple-minded pass-transistor path length for delay control, the problem defines a fundamental issue in buffering PTL circuits and was also considered in <ref> [2, 13] </ref>. Built on the greedy algorithm for leaf-DAGs, our approach for inverting buffer minimization is an effective and efficient heuristic algorithm. But, on non-critical paths, a tight bound on the number of consecutive transistors may be relaxed, and a buffer driving multiple fan-outs may need to be sized accordingly.
Reference: [14] <author> K. Yano, T. Yamnaka, T. Nishida, M. Satio, K. Shimo-higashi, and A. Shimizu, </author> <title> A 3.8-ns CMOS 16x16-b Multiplier Using Complementary Pass-Transistor Logic. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 25(2) </volume> <pages> 388-395, </pages> <month> April </month> <year> 1990. </year> <month> 7 </month>
Reference-contexts: Among these, pass transistor logic (PTL) circuits give great promise. Traditionally, hand-crafted pass transistor logic has been successfully used to implement digital systems which are smaller, faster, and more energy efficient than static CMOS implementations for the same designs <ref> [5, 6, 9, 11, 14] </ref>. But the lack of a systematic methodology restricts the use of pass transistors in industry circuits. Recently, there have been a number of attempts developing synthesis tools targeting PTL.
References-found: 14

