URL: http://www.cis.ohio-state.edu/insight/papers/mcs.ps
Refering-URL: http://www.cis.ohio-state.edu/insight/abs.html
Root-URL: 
Title: Intelligent Computing About Complex Dynamical Systems  
Author: Feng Zhao 
Keyword: Qualitative reasoning, scientific computing, numeric/ symbolic processing, control system design.  
Address: Columbus, OH 43210 U.S.A.  
Affiliation: Laboratory for Artificial Intelligence Research and Department of Computer and Information Science The Ohio State University  
Note: (appeared in Mathematics and Computers in Simulation, 36:423-432, Elsevier,  
Email: E-mail: fz@cis.ohio-state.edu  
Date: 1994)  
Abstract: We develop computational mechanisms for intelligently simulating nonlinear control systems. These mechanisms enhance numerical simulations with deep domain knowledge of dynamical systems theory and control theory, a qualitative phase-space representation of dynamical systems, symbolic and geometric manipulation capabilities, and a high-level interface. Programs equipped with these capabilities are able to autonomously simulate a dynamical system, analyze the simulation results, and utilize the analysis to perform design tasks. We demonstrate the mechanisms with an implemented computational environment called the Control Engi- neer's Workbench. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Abelson and G. J. Sussman, </author> <title> "The Dynamicist's Workbench I: Automatic Preparation of Numerical Experiments." In: Symbolic Computation: Applications to Scientific Computing. </title> <editor> R. Grossman (ed.), </editor> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1989. </year>
Reference: [2] <author> H. Abelson, M. Eisenberg, M. Halfant, J. Katzenelson, E. Sacks, G.J. Sussman, J. Wisdom, and K. </author> <title> Yip, </title> <journal> "Intelligence in Scientific Computing." CACM, </journal> <volume> 32(5), </volume> <month> May </month> <year> 1989. </year>
Reference-contexts: Abelson et al. described a collection of computer programs that analyze dynamical systems at the level of expert dynamicists <ref> [2] </ref>. 2 Task Domain: Control System Simulation and Design We study the analysis and design of nonlinear control systems. A real- world control system is a complex closed-loop system with extremely rich dynamics. Computation and reasoning are pervasive in the design and 2 operation of the controller.
Reference: [3] <author> J. Guckenheimer and S. Kim, "Kaos: </author> <title> Dynamical System Toolkit with Interactive Graphic Interface." </title> <type> Technical Report (Draft), </type> <institution> Cornell University, </institution> <year> 1990. </year>
Reference: [4] <author> C. Hanson, </author> <title> "MIT Scheme Reference Manual." </title> <institution> AI-TR-1281, MIT Artificial Intelligence Lab, </institution> <year> 1991. </year>
Reference-contexts: The Workbench also embodies deep domain knowledge of dynamical systems theory and control theory that can guide quantitative simulation and reduce the amount of computation necessary for analyzing the system. We choose Scheme, a dialect of LISP, as the implementation language for the Work- bench <ref> [4] </ref> and use extensively the Scheme mathematical library supporting generic numerical and symbolic manipulations. Scheme supports procedural abstraction that facilitates the extraction of common patterns in numerical computation and the composition of numerical procedures. 3.
Reference: [5] <editor> E. Kant et al. (eds.) </editor> <booktitle> Intelligent Scientific Computation. Working notes of AAAI Fall Symposium Series, </booktitle> <year> 1992. </year>
Reference: [6] <author> The MathWorks, Simulab, </author> <title> a program for simulating dynamic sys-tems, a user's guide. The MathWorks, Inc., 1990 and Matlab User's Guide. The MathWorks, </title> <publisher> Inc., </publisher> <year> 1989. </year>
Reference-contexts: Except for very few cases in which analytic-form solutions are available, computer simulations are the main tools for analyzing nonlinear systems and for designing and verifying the controllers. 3 Existing control simulation softwares are inadequate for automati-cally designing highly complex nonlinear systems. Commercially available programs like Matlab and Simulab <ref> [6] </ref> rely on numerical simulations. These programs are, at their very best, semi-automatic and serve as interactive design aids to human engineers.
Reference: [7] <author> M. F. Russo and R. L. Peskin, </author> <title> "Automatically Identifying the Asymptotic Behaviors of Nonlinear Singularly Perturbed Boundary Value Problems." </title> <journal> J. Automated Reasoning, </journal> <volume> 8(3), </volume> <month> June </month> <year> 1992. </year>
Reference: [8] <author> E. Sacks, </author> <title> "Automatic Analysis of One-Parameter Planar Ordinary Differential Equations by Intelligent Numeric Simulation." </title> <journal> Artificial Intelligence, </journal> <volume> 48(1) </volume> <pages> 27-56, </pages> <year> 1991. </year>
Reference: [9] <author> E. Sacks and L. Widman, </author> <title> "Nonlinear Heart Model Predicts the Range of Heart Rates for 2:1 Swinging in Pericardial Effusion." </title> <journal> American Journal of Physiology, </journal> <note> 1993. to appear. 14 </note>
Reference-contexts: For example, programs equipped with AI reasoning techniques and deep domain knowledge have already helped engineers solve an open problem in hydrodynamics [10], given new insights into behaviors of a heart model in cardiology <ref> [9] </ref>, and designed a high-performance nonlinear controller in maglev engineering [12]. Abelson et al. described a collection of computer programs that analyze dynamical systems at the level of expert dynamicists [2]. 2 Task Domain: Control System Simulation and Design We study the analysis and design of nonlinear control systems.
Reference: [10] <author> K. M. Yip, KAM: </author> <title> A System for Intelligently Guiding Numerical Experimentation by Computer. </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: For example, programs equipped with AI reasoning techniques and deep domain knowledge have already helped engineers solve an open problem in hydrodynamics <ref> [10] </ref>, given new insights into behaviors of a heart model in cardiology [9], and designed a high-performance nonlinear controller in maglev engineering [12].
Reference: [11] <author> F. Zhao, </author> <title> "Extracting and Representing Qualitative Behaviors of Complex Systems in Phase Spaces." </title> <booktitle> Proc. 12th Int'l Joint Conf. on Artificial Intelligence, </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year> <note> To appear in Artificial Intelligence journal. </note>
Reference-contexts: The synthesized control law alters natural dynamics of the system through the selection and composition of the natural behaviors. We describe a qualitative representation for complex behaviors of dynamical systems in phase space and a design vocabulary for computa- tionally expressing and manipulating these behaviors <ref> [11, 14] </ref>. A phase space of a dynamical system is an n-dimensional geometric space, each dimension of which represents a state variable of the system. We are interested in representing the qualitative behaviors of dynamical systems for control analysis and design. <p> MAPS, standing for Modeler and Analyzer for Phase Spaces, is an autonomous phase-space analysis and modeling program that extracts and represents qualitative phase-space structures of nonlinear dynamical systems <ref> [11] </ref>. MAPS generates a high-level description of the behaviors of a dynamical system, sensible to humans and manipulable by other programs.
Reference: [12] <author> F. Zhao and R. Thornton, </author> <title> "Automatic Design of a Maglev Controller in State Space." </title> <booktitle> Proc. of the 31st IEEE Conf. on Decision and Control, </booktitle> <address> Tucson, Arizona, </address> <month> December </month> <year> 1992. </year>
Reference-contexts: For example, programs equipped with AI reasoning techniques and deep domain knowledge have already helped engineers solve an open problem in hydrodynamics [10], given new insights into behaviors of a heart model in cardiology [9], and designed a high-performance nonlinear controller in maglev engineering <ref> [12] </ref>. Abelson et al. described a collection of computer programs that analyze dynamical systems at the level of expert dynamicists [2]. 2 Task Domain: Control System Simulation and Design We study the analysis and design of nonlinear control systems.
Reference: [13] <author> F. Zhao, </author> <title> "Automatic Analysis and Synthesis of Controllers for Dynamical Systems Based on Phase Space Knowledge." </title> <type> Technical Report AI-TR-1385, </type> <institution> MIT Artificial Intelligence Lab, </institution> <year> 1992. </year>
Reference-contexts: We have constructed a computational environment, the Control Engi- neer's Workbench, integrating a suite of programs that automatically analyze and design high-performance, global controllers for a large class of nonlinear systems using the qualitative phase-space representation <ref> [13] </ref>. Given a model of a physical system and a control objective, the Con- trol Engineer's Workbench analyzes the system and designs a control law achieving the control objective. A user typically interacts with the Workbench in the following way. <p> MAPS generates a high-level description of the behaviors of a dynamical system, sensible to humans and manipulable by other programs. Phase Space Navigator visualizes the phase-space structure of a given system computed by MAPS, plans global control reference trajectories, and navigates the system along the planned trajectories <ref> [13] </ref>. 11 The component for model building in the figure has not yet been imple-mented. The programs in the Workbench implement various algorithms: symbolic differentiation, numerical algorithms on differential equations, modeling of geometric structures, clustering of equivalence classes, graph algorithms, etc.
Reference: [14] <author> F. Zhao, </author> <title> "Computational Dynamics: Modeling and Visualizing Trajectory Flows in Phase Space." </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <pages> 8(3-4), </pages> <year> 1993. </year> <month> 15 </month>
Reference-contexts: The synthesized control law alters natural dynamics of the system through the selection and composition of the natural behaviors. We describe a qualitative representation for complex behaviors of dynamical systems in phase space and a design vocabulary for computa- tionally expressing and manipulating these behaviors <ref> [11, 14] </ref>. A phase space of a dynamical system is an n-dimensional geometric space, each dimension of which represents a state variable of the system. We are interested in representing the qualitative behaviors of dynamical systems for control analysis and design.
References-found: 14

