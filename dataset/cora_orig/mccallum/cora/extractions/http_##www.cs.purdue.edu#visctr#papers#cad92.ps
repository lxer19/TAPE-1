URL: http://www.cs.purdue.edu/visctr/papers/cad92.ps
Refering-URL: http://www.cs.purdue.edu/visctr/cad-bib.html
Root-URL: http://www.cs.purdue.edu
Title: Automated Modeling and Kinematic Simulation of Mechanisms  
Author: Elisha Sacks Leo Joskowicz 
Note: Computer-Aided Design, Vol. 25, No. 2, 1993, pp 107-118.  
Address: Princeton, NJ 08544  P.O. Box 704 Yorktown Heights, NY 10598  
Affiliation: Computer Science Department Princeton University  IBM T.J. Watson Research Center  
Abstract: We present an analysis program for rigid part mechanisms, such as feeders, locks, and brakes. The program performs a kinematic simulation of driving motions and part contacts along with a limited dynamical simulation of gravity, springs, and friction. It produces a realistic, three-dimensional animation and a concise, symbolic interpretation of the simulation. It derives the kinematic motion equations for a large class of mechanisms, including ones with complex part shapes, varying part contacts, and multiple driving motions. It avoids collision detection during simulation by precomputing pairwise part interactions. It uses a simple model of dynamics that captures the steady-state effect of forces without the conceptual and computational cost of full dynamical simulation. We demonstrate that the simulation algorithm captures the workings of most mechanisms by surveying 2500 mechanisms from an engineering encyclopedia. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Artobolevsky, I. </author> <title> Mechanisms in Modern Engineering Design, volume 1-4. </title> <publisher> (MIR Publishers, </publisher> <address> Moscow, </address> <year> 1979). </year> <note> English translation. </note>
Reference-contexts: B3 is stationary at xb3=12.0; yb3=3.0. 7 a fixed axis, the driver, by means of the connecting link, reciprocates the piston which ejects the bottom block into a chute not shown. When the driver returns to its extreme left-hand position, the next block drops onto the processing table. Artobolevsky <ref> [1, Volume 2, page 592] </ref>. The descriptions are equivalent. <p> We chose Artobolevsky's four-volume Mechanisms in Modern Engineering Design <ref> [1] </ref> because of its scope, uniform format, and comprehensiveness. The survey shows that 59% of the mechanisms are feasible: about 30% are linkages, 23% are fixed axes, and 6% are fixed-axes connected by linkages.
Reference: [2] <author> Chace, M. </author> <booktitle> Methods and experience in computer aided design of large-displacement mechanical systems. In Haug [7]. </booktitle>
Reference: [3] <author> Cremer, J. F. and Stewart, A. J. </author> <title> The architecture of newton, a general-purpose dynamics simulator. </title> <booktitle> in: Proceedings of the 1989 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1806-1811, </pages> <year> 1989. </year>
Reference-contexts: They do not interpret their output, so the user must recognize periodic behavior and other qualitative features. Model-based simulators address these limitations by incorporating kinematic analysis into dynamical simulators. Cremer <ref> [3] </ref> describes a simulator that uses a model-based three-dimensional part representation and that handles contact changes, friction, and collisions. The program only handles a few shapes, such as spheres and polyhedra.
Reference: [4] <author> Doedel, E. </author> <title> AUTO 86 user manual: software for continuation and bifurcation problems in ordinary differential equations. </title> <type> Technical report, </type> <institution> Princeton University, </institution> <month> Feb. </month> <year> 1986. </year>
Reference-contexts: The program derives the equations of the linkage by the standard Cartesian coordinates method [13]. It eliminates the coordinates that are linear functions of other coordinates, such as the pin coordinates. It calculates the configuration at evenly spaced points throughout the input range, using the auto continuation package <ref> [4] </ref> on the remaining equations, and stores the results in a table. It calculates the configuration at intermediate points by table lookup followed by linear interpolation. It splits the table into monotone output segments to facilitate kinematic simulation. <p> In the feeder, the program propagates the fixed-axes bounds of c d and x p through the linkage, which restricts x p to f ([; ]) = <ref> [4; 10] </ref> and c d to f 1 ([5; 16]) = [0; 2:1268]. As the final step in region construction, the program asserts the frictional constraints for the touching pairs of sticky surfaces.
Reference: [5] <author> Gelsey, A. </author> <title> Automated physical modeling. </title> <booktitle> in: Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <year> 1989. </year>
Reference-contexts: The output of the program is an animation of the objects and graphs of the time evolution of their configurations, velocities, and accelerations. Gelsey <ref> [5] </ref> describes a similar simulator that also outputs behavioral summaries. Kramer [11] describes a linkage simulation program that symbolically derives the kinematic equations and calculates the linkage configurations as a function of the driving motion.
Reference: [6] <author> Hahn, J. K. </author> <title> Realistic animation of rigid bodies. </title> <booktitle> Computer Graphics 22 (1988) 299-308. </booktitle>
Reference: [7] <author> Haug, E. (Ed.). </author> <title> Computer Aided Analysis and Optimization of Mechanical Sys--tem Dynamics. </title> <publisher> (Springer-Verlag, </publisher> <year> 1984). </year>
Reference-contexts: Equation solving produces a sequence of mechanism configurations that satisfy the motion equations over the time interval of interest. Interpretation extracts qualitative and quantitative information from the configurations. Current analysis programs <ref> [7, 14] </ref> adequately automate equation solving, but have limited modeling and interpretation capabilities. They can model linkages augmented with a few higher kinematic pairs, such as gears and cams. The user must model most higher pairs, part interference, and intermittent contacts. <p> They presuppose that all contacts are permanent, hence that the motion equations are fixed and independent of the geometry of the mechanism. Haug <ref> [7] </ref> surveys some commercially available packages of this type and describes test runs on large systems. More recent simulators (such as Rasna's Applied Motion) formulate fewer equations, integrate more robustly, and 21 stress interaction and graphics [14]. Traditional simulators provide little support for modeling variable topology mechanisms.
Reference: [8] <author> Huynh, T., Joskowicz, L., Lassez, C., et al. </author> <title> Practical tools for reasoning about linear constraints, </title> <journal> Fundamenta Informaticae, </journal> <volume> Vol 15 No. </volume> <pages> 3-4, </pages> <year> 1991. </year>
Reference-contexts: It determines which surfaces touch from the pairwise region diagrams, obtains their axes of motion from the region, and adds the appropriate constraint to the region constraints. We illustrate friction in the next section. The program uses the chm program <ref> [8] </ref> to manage the linear inequality constraints that define the contact regions of the fixed-axes subassembly. We have also implemented the constraint manager with the bounder inequality reasoner [15], which is slower than chm but handles some nonlinear constraints.
Reference: [9] <author> Joskowicz, L. </author> <title> Simplification and abstraction of kinematic behaviors. </title> <booktitle> in: Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <year> 1989. </year> <note> Reprinted in [16]. </note>
Reference-contexts: More sophisticated interpretation is necessary to hide irrelevant details, such as gear chatter, and to identify behavior patterns, such as cycles and repetitions. We can produce more focused descriptions by using the CS simplification and abstraction operators developed by Joskowicz <ref> [9] </ref>. Simplification operators suppress irrelevant information by adding constraints and assumptions. The constraints restrict the type and range of driving motions based on the operating context of the mechanism 23 and on dynamical considerations. Abstraction operators suppress details by defining multiple levels of resolution.
Reference: [10] <author> Joskowicz, L. and Sacks, E. </author> <title> Computational kinematics. </title> <booktitle> Artificial Intelligence 51 (1991) 381-416. </booktitle>
Reference-contexts: Simple dynamics is a qualitative theory of steady-state motion that abstracts away transient acceleration. Applying a constant force to an object actually accelerates it to a terminal velocity at which friction balances that force, but simple dynamics assumes that it instantaneously reaches terminal velocity. In previous work <ref> [10] </ref>, we developed a kinematic analysis program that generates a complete region diagram for a mechanism in a given initial configuration. Figure 1 shows the relationship between that program and the kinematic simulator. The inputs to both programs include the structure and initial configuration of a mechanism. <p> We discuss kinematics modeling in greater detail in previous work <ref> [10] </ref>. 2.1 Configuration space We study the kinematics of mechanisms within the standard configuration space (CS) representation of mechanical engineering. <p> modeling 2. subassembly analysis 3. kinematic simulation with simple dynamics (a) find current region (b) traverse path segment in current region (c) if blocked, switch to next driving motion (d) if time and driving motions remain, go to step (a) 4. animation and interpretation Output: animation, interpretation, and region diagram <ref> [10] </ref>. Each region diagram consists of convex regions whose boundaries are accurate linearizations of the true contact curves. The program handles non-redundant, non-degenerate linkages with one degree of freedom, one input coordinate, and one output coordinate. <p> In the feeder, the program propagates the fixed-axes bounds of c d and x p through the linkage, which restricts x p to f ([; ]) = <ref> [4; 10] </ref> and c d to f 1 ([5; 16]) = [0; 2:1268]. As the final step in region construction, the program asserts the frictional constraints for the touching pairs of sticky surfaces. <p> from the University of Minnesota Geometry Center, which runs on the IRIS workstation. (We could adapt the program to another graphics package by changing the format of the part descriptions and transformation matrices.) 16 4 Examples We have tested our program on a dozen examples, including the feeder, a transmission <ref> [10] </ref>, a rim lock, and a shoe brake. Each example illustrates different aspects of kinematic simulation with simple dynamics. The feeder has many moving parts, contains a linkage, and uses gravity. The transmission has complex part shapes and interactions. <p> The program generates a CS path containing 90 configurations and a region diagram containing 16 regions. It examines 48 of the 373,248 potential regions (0:01%) in tracing the CS path, whereas our previous program <ref> [10] </ref> examines 2115 potential regions (0:5%) in constructing the full 217 region diagram. Thus, simulating the feeder is 50 times less work than constructing its full region diagram. On a workstation, the program produces the simulation in 17 a locked configuration.
Reference: [11] <author> Kramer, G. A. </author> <title> Geometric Reasoning in the Kinematic Analysis of Mechanisms. </title> <publisher> (Morgan Kaufmann, </publisher> <year> 1992). </year>
Reference-contexts: The output of the program is an animation of the objects and graphs of the time evolution of their configurations, velocities, and accelerations. Gelsey [5] describes a similar simulator that also outputs behavioral summaries. Kramer <ref> [11] </ref> describes a linkage simulation program that symbolically derives the kinematic equations and calculates the linkage configurations as a function of the driving motion. Our program improves upon previous model-based simulators by covering more mechanisms and by being faster and more robust.
Reference: [12] <author> Latombe, J.-C. </author> <title> Robot Motion Planning. </title> <publisher> (Kluwer Academic Publishers, </publisher> <year> 1991). </year>
Reference-contexts: Modeling variable topology mechanisms raises issues of collision detection, impacts, and friction. We must identify constraints that make modeling feasible, yet cover many mechanisms. Robotics research in motion planning addresses spatial reasoning problems akin to those in mechanism analysis <ref> [12] </ref>. The basic task is to plan the motion of a robot between two configurations in a cluttered environment. The field also studies extensions to the basic task, including multiple robots, moving obstacles, constraints on legal paths, and path optimization.
Reference: [13] <author> Nikravesh, P. E. </author> <title> Computer-Aided Analysis of Mechanical Systems. </title> <publisher> (Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1988). </year>
Reference-contexts: Its region diagram contains a single region, which is the graph of the configuration function. The program derives the equations of the linkage by the standard Cartesian coordinates method <ref> [13] </ref>. It eliminates the coordinates that are linear functions of other coordinates, such as the pin coordinates. It calculates the configuration at evenly spaced points throughout the input range, using the auto continuation package [4] on the remaining equations, and stores the results in a table.
Reference: [14] <author> Potter, </author> <title> C, "Mechanism analysis moves with the times", </title> <journal> Computer Graphics World, </journal> <volume> Vol. </volume> <pages> 15-5, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Equation solving produces a sequence of mechanism configurations that satisfy the motion equations over the time interval of interest. Interpretation extracts qualitative and quantitative information from the configurations. Current analysis programs <ref> [7, 14] </ref> adequately automate equation solving, but have limited modeling and interpretation capabilities. They can model linkages augmented with a few higher kinematic pairs, such as gears and cams. The user must model most higher pairs, part interference, and intermittent contacts. <p> Haug [7] surveys some commercially available packages of this type and describes test runs on large systems. More recent simulators (such as Rasna's Applied Motion) formulate fewer equations, integrate more robustly, and 21 stress interaction and graphics <ref> [14] </ref>. Traditional simulators provide little support for modeling variable topology mechanisms. The user must identify the different operating modes of the mechanism and generate the equations for every one, a tedious and error prone process.
Reference: [15] <author> Sacks, E. </author> <title> Hierarchical reasoning about inequalities. </title> <booktitle> in: Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1987. </year> <note> Reprinted in [16]. </note>
Reference-contexts: We illustrate friction in the next section. The program uses the chm program [8] to manage the linear inequality constraints that define the contact regions of the fixed-axes subassembly. We have also implemented the constraint manager with the bounder inequality reasoner <ref> [15] </ref>, which is slower than chm but handles some nonlinear constraints. We expect to use this capability to analyze infeasible mechanisms. 3.4 Animation and interpretation Animation and interpretation are straightforward once the region diagram and CS path have been constructed.
Reference: [16] <author> Weld, D. S. and de Kleer, J. </author> <title> (Eds.). Readings in Qualitative Reasoning about Physical Systems. </title> <publisher> (Morgan Kaufman, </publisher> <address> San Mateo, Ca., </address> <year> 1990). </year> <month> 25 </month>
References-found: 16

