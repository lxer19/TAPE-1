URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/1995/TR52.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/~sundar/research.html
Root-URL: 
Email: (sundar,jayasim,panda,saday)@cis.ohio-state.edu  
Title: Hybrid Algorithms for Complete Exchange in 2D Meshes  
Author: N. S. Sundar D. N. Jayasimha D. K. Panda P. Sadayappan 
Keyword: complete exchange, mesh interconnection, message combining, direct exchange, hybridizing, modeling, simulation, distributed memory systems.  
Address: Columbus, OH 43210  
Affiliation: Dept. of Computer Information Science The Ohio State University  
Abstract: Parallel algorithms for several common problems such as sorting and the FFT involve an personalized exchange of data among all the processors. Past approaches to doing this complete exchange have taken either a combining approach or a direct exchange approach. While combining reduces the number of message startups, direct exchange minimizes the volume of data transmitted. This paper presents a family of hybrid algorithms for wormhole-routed 2D meshes that can effectively utilize the complementary strengths of these two approaches to complete exchange. The performance of hybrid algorithms using Cyclic Exchange [6] and Scott's Direct Exchange [5] are studied using analytical models as well as simulation. The results show that hybrids achieve lower completion times than either pure algorithm for a large range of mesh sizes, data block sizes and message startup costs. The analytical models may be used to select the optimum hybrid for any given combination of system parameters (mesh size, startup time, flit transfer time and barrier cost) and the problem parameter (data block size). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. H. Bokhari, H. Berryman. </author> <title> Complete Exchange on a Circuit Switched Mesh. </title> <booktitle> Scalable High Performance Computing Conference 1992. pp.300-306. </booktitle> <pages> 19 </pages>
Reference-contexts: Q then forwards the data blocks towards their respective destinations in subsequent phases. This combining or indirect approach typically takes a divide-and-conquer strategy. For example, Bokhari and Berryman <ref> [1] </ref> described two algorithms that use this approach called Binary Exchange and Quadrant Exchange. Binary Exchange recursively divides the mesh into halves while Quadrant Exchange organizes the mesh in quadrants. The latter is shown to be faster than the former.
Reference: [2] <author> S. Gupta, S. Hawkinson, B. Baxter. </author> <title> A Binary Interleaved Algorithm for Complete Exchange on a Mesh Architecture. </title> <type> Intel Technical Report, Personal Communication. </type> <institution> Intel Corporation. </institution>
Reference-contexts: The latter is shown to be faster than the former. Sundar et al. [6] proposed another combining algorithm called Cyclic Exchange, which recursively divides the mesh into quadrants. (Such an algorithm was also proposed independently by Gupta et al. <ref> [2] </ref>.) This was demonstrated to be faster than Quadrant Exchange for a wide range of mesh sizes and data block sizes. The direct exchange and the indirect (combining) approach have complementary strengths.
Reference: [3] <author> S. L. Johnsson, C. T. Ho. </author> <title> Optimum Broadcasting and Personalized Communication in Hypercubes. </title> <journal> IEEE Transactions on Computers. </journal> <volume> Vol. 38, No. 9, </volume> <month> Sep. </month> <year> 1989. </year> <month> pp.1249-1268. </month>
Reference-contexts: Past approaches to performing complete exchange on 2D meshes have taken one of two distinct approaches. The direct exchange approach involves each processor directly sending a block of data to every other processor in the system. For example, the Optimal algorithm for hypercubes <ref> [3] </ref>, in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. [7] also present algorithms that take this approach.
Reference: [4] <author> H. Schwetman. </author> <title> Introduction to Process-Oriented Simulation and CSIM. </title> <booktitle> Proc. Winter Simulation Conference. </booktitle> <year> 1990. </year>
Reference-contexts: The performance of CE, DE and their hybrids, with and without the use of barriers, were studied using simulation. The simulator was written in C, using the CSIM simulation package <ref> [4] </ref>. It models a wormhole-routed network with k-ary n-cube topology, at the flit level in detail. The simulator reports the completion time, the average latency of all messages and also the average ideal (contention-free) latency. Several parameters were varied for the simulation study using a combinatorial design.
Reference: [5] <author> D. S. Scott. </author> <title> Efficient All-to-All Communication Patterns in Hypercube and Mesh Topologies. </title> <booktitle> Proc. 6th Conf. Distributed Memory Concurrent Computers. </booktitle> <year> 1991. </year> <month> pp.398-403. </month>
Reference-contexts: For example, the Optimal algorithm for hypercubes [3], in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. [7] also present algorithms that take this approach. Scott <ref> [5] </ref> has proven that, in an a fi a mesh, the number of contention-free communication steps, each of which overlaps messages between several processor pairs, must be at least 1 4 a 3 . <p> Section 2 describes Direct Exchange <ref> [5] </ref> and presents an analytical model for it which is applicable when the algorithmic steps execute in synchrony (as in an SIMD architecture or in an MIMD architecture with barriers between steps). <p> Scott <ref> [5] </ref> presented a scheme to generate complete exchange algorithms which achieve this lower bound when a is a multiple of 4.
Reference: [6] <author> N. S. Sundar, D. N. Jayasimha, D. K. Panda and P. Sadayappan. </author> <title> Complete Exchange in 2D Meshes. </title> <booktitle> Proc. Scalable High Performance Computing Conference 1994. </booktitle> <pages> pp. 406-413. </pages>
Reference-contexts: For example, Bokhari and Berryman [1] described two algorithms that use this approach called Binary Exchange and Quadrant Exchange. Binary Exchange recursively divides the mesh into halves while Quadrant Exchange organizes the mesh in quadrants. The latter is shown to be faster than the former. Sundar et al. <ref> [6] </ref> proposed another combining algorithm called Cyclic Exchange, which recursively divides the mesh into quadrants. (Such an algorithm was also proposed independently by Gupta et al. [2].) This was demonstrated to be faster than Quadrant Exchange for a wide range of mesh sizes and data block sizes. <p> Q then forwards the appropriate data blocks to the various submeshes within that submesh. This gives a recursive structure to the combining algorithms known today. The Cyclic Exchange (CE) algorithm <ref> [6] </ref> works on a 2D circuit-switched or wormhole-routed mesh. The algorithm is described for a 2 p fi 2 p mesh but it can be adapted to non-square meshes with non-power-of-two number of processors to each side.
Reference: [7] <author> R. Thakur and A. Choudhary. </author> <title> All-to-All Communication on Meshes with Wormhole Routing. </title> <booktitle> Proc. 8th International Parallel Processing Symposium. </booktitle> <month> Apr. </month> <year> 1994. </year> <month> pp.561-565. </month>
Reference-contexts: The direct exchange approach involves each processor directly sending a block of data to every other processor in the system. For example, the Optimal algorithm for hypercubes [3], in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. <ref> [7] </ref> also present algorithms that take this approach. Scott [5] has proven that, in an a fi a mesh, the number of contention-free communication steps, each of which overlaps messages between several processor pairs, must be at least 1 4 a 3 . <p> The simulation results are in close correspondence to the analytical predictions and show that the proposed hybrid algorithm is effective for a wide range of system and problem parameters. Finally, Section 6 summarizes the work and outlines the plan for future research. 2 Direct Exchange There are several algorithms <ref> [7] </ref> for complete exchange that schedule a direct communication between every pair of processors. The main issues in this approach are the high startup cost and contention for the central links of the mesh, which form a bottleneck.
References-found: 7

