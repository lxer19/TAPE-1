URL: http://www-psrg.lcs.mit.edu/ftpdir/sheldon/tr578.ps
Refering-URL: http://www-psrg.lcs.mit.edu/~sheldon/publications.html
Root-URL: 
Title: A Content Routing System for Distributed Information Servers  
Author: Mark A. Sheldon Andrzej Duda Ron Weiss James W. O'Toole, Jr. David K. Gifford 
Note: Also with Bull-IMAG Systemes, and INRIA This research was sponsored by the Defense Advanced Research Projects Agency (DARPA) under contract DABT63-92-C-0012. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency or the U.S. Government.  
Address: Cambridge, MA 02139  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology  
Date: June 1993  
Pubnum: MIT/LCS/TR-578  
Abstract-found: 0
Intro-found: 1
Reference: [AAL + 91] <author> Bob Alberti, Farhad Anklesaria, Paul Linkner, Mark McCahill, and Daniel Torrey. </author> <title> The internet Gopher protocol: A distributed document search and retrieval protocol. University of Mine-sota Microcomputer and Workstation Networks Center, </title> <note> Spring 1991. Revised Spring 1992. </note>
Reference-contexts: Also, the systems are not integrated into a file system, nor do they provide automatic attribute-based access to the contents of objects. Network navigation systems such as the Gopher system <ref> [AAL + 91] </ref> and the Word-Wide Web [BLCGP92] provide a means for organizing servers into a structure that allows navigating among and browsing through remote information on servers. If the user knows what to look for and where the resource might be located, then interesting resources can be discovered. <p> One can run editors, compilers, and standard file system tools, all without modification. Unfortunately, NFS systems do not tolerate failure well as a rule, and error reporting and recovery are awkward 13 in the protocol. Our architecture, however, is independent of the underly-ing communication protocol. We could use Gopher <ref> [AAL + 91] </ref>, World-Wide Web [BLCGP92], Z39.50 [NIS91], or any other mechanism that provides distributed access to servers. While a hierarchical system facilitates locating objects, it introduces communication delays and performance restrictions that become intolerable for larger sets of applications as the layering gets deeper.
Reference: [BC92] <author> Daniel Barbara and Chris Clifton. </author> <title> Information brokers: Sharing knowledge in a heterogeneous distributed system. </title> <type> Technical Report MITL-TR-31-92, </type> <institution> Matsushita Information Technology Laboratory, Princeton, NJ, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: The knowledge about existing sources is acquired by exchanging messages with neighboring hosts. This approach has a probabilistic query semantics because finding all relevant objects is not guaranteed. The Information Brokers of the MITL Gold project <ref> [BC92] </ref> share many of our goals. However, Information Brokers do not provide access to objects directly. Rather, they return descriptions of an 4 object's location and the method that may be used to retrieve the object.
Reference: [BLCGP92] <author> Tim Berners-Lee, Robert Cailliau, Jean-Fran~cois Groff, and Bernd Pollermann. </author> <title> World-wide web: The information universe. </title> <journal> Electronic Networking, </journal> <volume> 2(1) </volume> <pages> 52-58, </pages> <year> 1992. </year>
Reference-contexts: Also, the systems are not integrated into a file system, nor do they provide automatic attribute-based access to the contents of objects. Network navigation systems such as the Gopher system [AAL + 91] and the Word-Wide Web <ref> [BLCGP92] </ref> provide a means for organizing servers into a structure that allows navigating among and browsing through remote information on servers. If the user knows what to look for and where the resource might be located, then interesting resources can be discovered. <p> Unfortunately, NFS systems do not tolerate failure well as a rule, and error reporting and recovery are awkward 13 in the protocol. Our architecture, however, is independent of the underly-ing communication protocol. We could use Gopher [AAL + 91], World-Wide Web <ref> [BLCGP92] </ref>, Z39.50 [NIS91], or any other mechanism that provides distributed access to servers. While a hierarchical system facilitates locating objects, it introduces communication delays and performance restrictions that become intolerable for larger sets of applications as the layering gets deeper.
Reference: [Cat92] <author> Vincent Cate. </author> <title> Alex | a global filesystem. </title> <booktitle> Usenix Workshop on File Systems, </booktitle> <year> 1992. </year>
Reference-contexts: The Archie system [ED92] polls a fixed set of FTP sites on the Internet. A query yields a set of host/filename pairs which is then used to manually retrieve the relevant files. The Alex file system <ref> [Cat92] </ref> is an NFS-FTP protocol converter. It integrates FTP servers into the local file system, but does not address the issue of associative access to remote files. The Conit system [Mar83, Mar90] provides a uniform user interface to a large number of databases accessible from several retrieval systems.
Reference: [CCI88] <author> CCITT. </author> <title> The Directory Overview of Concepts, Models and Services. Recommendation X.500, </title> <year> 1988. </year>
Reference-contexts: Distributed naming systems such as X.500 <ref> [CCI88] </ref>, Profile [Pet88], and the Networked Resource Discovery Project [Sch89] provide attribute-based access to a wide variety of objects; however, they do not support the hierarchical relationship between servers and data which our system achieves 3 through its use of content labels.
Reference: [DANO91] <author> Peter B. Danzig, Jongsuk Ahn, John Noll, and Katia Obraczka. </author> <title> Distributed indexing: A scalable mechanism for distributed information retrieval. </title> <type> Technical Report USC-TR 91-06, </type> <institution> University of Southern California, Computer Science Department, </institution> <year> 1991. </year>
Reference-contexts: User queries are translated into commands on the different systems. However, there is no support for the automatic selection of relevant databases for a users query. The Distributed Indexing mechanism <ref> [DANO91] </ref> is based on precomputed indices of databases that summarize the holdings on particular topics of other databases. The architecture has a three layer fixed structure which is suitable for incorporation of bibliographic databases, but it is not flexible enough for content based access to file servers.
Reference: [ED92] <author> A. Emtage and P. Deutsch. </author> <title> Archie an electronic directory service for the internet. </title> <booktitle> In USENIX Association Winter Conference Proceedings, </booktitle> <pages> pages 93-110, </pages> <address> San Francisco, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: The Wide Area Information Service (WAIS) [KM91, Ste91] provides a uniform means of access to information servers on a network. WAIS permits information at remote sites to be queried, but relies upon the user to choose an appropriate remote host from a directory of services. The Archie system <ref> [ED92] </ref> polls a fixed set of FTP sites on the Internet. A query yields a set of host/filename pairs which is then used to manually retrieve the relevant files. The Alex file system [Cat92] is an NFS-FTP protocol converter.
Reference: [GJSO91] <author> David K. Gifford, Pierre Jouvelot, Mark A. Sheldon, and James W. O'Toole. </author> <title> Semantic file systems. </title> <booktitle> In Thirteenth ACM Symposium on Operating Systems Principles. ACM, </booktitle> <month> October </month> <year> 1991. </year> <title> Available as Operating Systems Review Volume 25, Number 5. </title>
Reference-contexts: Once a query is specific enough, the router forwards the query to its underling collections, and the user can employ the full range of attributes that had been abstracted previously from the specified collections. One way to associate attributes with objects in a collection is to use transducers <ref> [GJSO91] </ref> that automatically extract attributes from files, directories, servers, and other objects. Transducers are object-type specific, and serve to convert an unstructured object into a set of descriptive attributes. A transducer is automatically run on an object when it is created or updated. <p> Content labels represent a compromise between these two restrictions for a scalable architecture. 4.1 Content routing system implementation Our content routing system uses the Semantic File System interface <ref> [GJSO91] </ref> for both information servers and content routers. Thus a content router is implemented as a user level NFS server that may be mounted by any NFS client. Path names are interpreted as queries, and results are returned in dynamically created virtual directories. to which it will provide access.
Reference: [KM91] <author> Brewster Kahle and Art Medlar. </author> <title> An information system for corporate users: Wide area information servers. </title> <type> Technical Report TMC-199, </type> <institution> Thinking Machines, Inc., </institution> <month> April </month> <year> 1991. </year> <note> Version 3. </note>
Reference-contexts: However, it would be possible to install a content routing system into either system. Fremont [WCS93] is a research prototype for discovering key network characteristics, such as hosts, gateways and topology. Network-based information retrieval systems provide access to information on remote servers. The Wide Area Information Service (WAIS) <ref> [KM91, Ste91] </ref> provides a uniform means of access to information servers on a network. WAIS permits information at remote sites to be queried, but relies upon the user to choose an appropriate remote host from a directory of services.
Reference: [Mar83] <author> Richard S. Marcus. </author> <title> An experimental comparison of the ef-fectiveness of computers and humans as search intermediaries. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 34(6) </volume> <pages> 381-404, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: The Alex file system [Cat92] is an NFS-FTP protocol converter. It integrates FTP servers into the local file system, but does not address the issue of associative access to remote files. The Conit system <ref> [Mar83, Mar90] </ref> provides a uniform user interface to a large number of databases accessible from several retrieval systems. User queries are translated into commands on the different systems. However, there is no support for the automatic selection of relevant databases for a users query.
Reference: [Mar90] <author> Richard S. Marcus. </author> <title> Advanced retrieval assistance for the DGIS gateway. </title> <type> Technical Report LIDS R-1958, </type> <institution> MIT Laboratory for Information and Decision Systems, </institution> <month> March </month> <year> 1990. </year>
Reference-contexts: The Alex file system [Cat92] is an NFS-FTP protocol converter. It integrates FTP servers into the local file system, but does not address the issue of associative access to remote files. The Conit system <ref> [Mar83, Mar90] </ref> provides a uniform user interface to a large number of databases accessible from several retrieval systems. User queries are translated into commands on the different systems. However, there is no support for the automatic selection of relevant databases for a users query.
Reference: [NIS91] <institution> Ansi z39.50 version 2. National Information Standards Organization, Bethesda, Maryland, </institution> <month> January </month> <year> 1991. </year> <note> Second Draft. </note>
Reference-contexts: Unfortunately, NFS systems do not tolerate failure well as a rule, and error reporting and recovery are awkward 13 in the protocol. Our architecture, however, is independent of the underly-ing communication protocol. We could use Gopher [AAL + 91], World-Wide Web [BLCGP92], Z39.50 <ref> [NIS91] </ref>, or any other mechanism that provides distributed access to servers. While a hierarchical system facilitates locating objects, it introduces communication delays and performance restrictions that become intolerable for larger sets of applications as the layering gets deeper.
Reference: [Pet88] <author> Larry Peterson. </author> <title> The Profile Naming Service. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(4) </volume> <pages> 341-364, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: Distributed naming systems such as X.500 [CCI88], Profile <ref> [Pet88] </ref>, and the Networked Resource Discovery Project [Sch89] provide attribute-based access to a wide variety of objects; however, they do not support the hierarchical relationship between servers and data which our system achieves 3 through its use of content labels.
Reference: [PW91] <author> Jan-Simon Pendry and Nick Williams. Amd: </author> <title> The 4.4 BSD automounter reference manual, </title> <month> March </month> <year> 1991. </year> <title> Documentation for software revision 5.3 Alpha. </title>
Reference-contexts: In the other set of trials, the content router provided the client direct access to the server for object access. The content routers provide unmediated access to data by returning symbolic links. These links are interpreted by a version of the Berkeley automount daemon <ref> [PW91] </ref>. Mediated accesses naturally go through the content router. In Figure 9, each data point represents the average of four trials each of which reads a 35 MByte digital video data file. The information server was running on an SGI 4D/320S.
Reference: [SA89] <author> Patricia Simpson and Rafael Alonso. </author> <title> Querying a network of autonomous databases. </title> <type> Technical Report CS-TR-202-89, </type> <institution> Prince-ton University, Princeton, NJ, </institution> <month> January </month> <year> 1989. </year>
Reference-contexts: The architecture has a three layer fixed structure which is suitable for incorporation of bibliographic databases, but it is not flexible enough for content based access to file servers. Simpson and Alonso propose a querying architecture for a network of autonomous databases <ref> [SA89] </ref> that forwards user queries to known information sources. The knowledge about existing sources is acquired by exchanging messages with neighboring hosts. This approach has a probabilistic query semantics because finding all relevant objects is not guaranteed.
Reference: [Sch89] <author> Michael F. Schwartz. </author> <title> The Networked Resource Discovery Project. </title> <booktitle> In Proceedings of the IFIP XI World Congress, </booktitle> <pages> pages 827-832. </pages> <publisher> IFIP, </publisher> <month> August </month> <year> 1989. </year>
Reference-contexts: Distributed naming systems such as X.500 [CCI88], Profile [Pet88], and the Networked Resource Discovery Project <ref> [Sch89] </ref> provide attribute-based access to a wide variety of objects; however, they do not support the hierarchical relationship between servers and data which our system achieves 3 through its use of content labels.
Reference: [Ste91] <author> Richard Marlon Stein. </author> <title> Browsing through terabytes: Wide-area information servers open a new frontier in personal and corporate information services. </title> <journal> Byte, </journal> <pages> pages 157-164, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: However, it would be possible to install a content routing system into either system. Fremont [WCS93] is a research prototype for discovering key network characteristics, such as hosts, gateways and topology. Network-based information retrieval systems provide access to information on remote servers. The Wide Area Information Service (WAIS) <ref> [KM91, Ste91] </ref> provides a uniform means of access to information servers on a network. WAIS permits information at remote sites to be queried, but relies upon the user to choose an appropriate remote host from a directory of services.
Reference: [WCS93] <author> David C.M. Wood, Sean S. Coleman, and Michael F. Schwartz. Fremont: </author> <title> A system for discovering network characteristics and problems. </title> <booktitle> In USENIX Association 1993 Winter Conference Proceedings, </booktitle> <pages> pages 335-348, </pages> <year> 1993. </year> <month> 20 </month>
Reference-contexts: These systems provide facilities for individual servers that respond to queries. There is no support for query routing. However, it would be possible to install a content routing system into either system. Fremont <ref> [WCS93] </ref> is a research prototype for discovering key network characteristics, such as hosts, gateways and topology. Network-based information retrieval systems provide access to information on remote servers. The Wide Area Information Service (WAIS) [KM91, Ste91] provides a uniform means of access to information servers on a network.
References-found: 18

