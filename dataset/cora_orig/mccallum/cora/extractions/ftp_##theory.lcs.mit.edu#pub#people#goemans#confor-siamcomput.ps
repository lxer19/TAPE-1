URL: ftp://theory.lcs.mit.edu/pub/people/goemans/confor-siamcomput.ps
Refering-URL: http://theory.lcs.mit.edu/~goemans/
Root-URL: 
Title: A GENERAL APPROXIMATION TECHNIQUE FOR CONSTRAINED FOREST PROBLEMS  
Author: MICHEL X. GOEMANS AND DAVID P. WILLIAMSON 
Keyword: Key words. Approximation algorithms, combinatorial optimization, matching, Steiner tree problem, T-joins, traveling salesman problem  
Note: To appear in SIAM Journal on Computing.  AMS subject classifications. 68Q25, 90C27  
Abstract: We present a general approximation technique for a large class of graph problems. Our technique mostly applies to problems of covering, at minimum cost, the vertices of a graph with trees, cycles or paths satisfying certain requirements. In particular, many basic combinatorial optimization problems fit in this framework, including the shortest path, minimum-cost spanning tree, minimum-weight perfect matching, traveling salesman and Steiner tree problems. Our technique produces approximation algorithms that run in O(n 2 log n) time and come within a factor of 2 of optimal for most of these problems. For instance, we obtain a 2-approximation algorithm for the minimum-weight perfect matching problem under the triangle inequality. Our running time of O(n 2 log n) time compares favorably with the best strongly polynomial exact algorithms running in O(n 3 ) time for dense graphs. A similar result is obtained for the 2-matching problem and its variants. We also derive the first approximation algorithms for many NP-complete problems, including the non-fixed point-to-point connection problem, the exact path partitioning problem and complex location-design problems. Moreover, for the prize-collecting traveling salesman or Steiner tree problems, we obtain 2-approximation algorithms, therefore improving the previously best-known performance guarantees of 2.5 and 3, respectively [4]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Agrawal, P. Klein, and R. Ravi, </author> <title> When trees collide: An approximation algorithm for the generalized Steiner problem on networks, </title> <booktitle> in Proceedings of the 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1991, </year> <pages> pp. 134-144. </pages> <note> To appear in SIAM J. Comput. </note>
Reference-contexts: The algorithm is exact in these two cases. For the Steiner tree problem, we obtain the minimum spanning tree heuristic whose many variants have been described in the literature (see [39]). In the case of the generalized Steiner tree problem, our algorithm simulates Agrawal, Klein and Ravi's 2-approximation algorithm <ref> [1] </ref>. Their algorithm A GENERAL APPROXIMATION TECHNIQUE 3 was instrumental in motivating our work. In particular, we generalize their use of duality from generalized Steiner trees to all proper constrained forest problems. <p> In the process, we make their use of linear programming duality explicit and provide some conceptual simplifications since neither our algorithm nor its analysis require contractions, recursive calls to construct the forest or subdivisions of edges, as is used in the presentation of Agrawal et al. <ref> [1] </ref>. One important consequence of the algorithm is that it can be turned into a 2-approximation algorithm for the minimum-weight perfect matching problem given that the edge costs obey the triangle inequality. <p> In this case, our approximation algorithm has a performance guarantee of 2 2 k , where k = fi fi i=1;:::;p T i fi fi , and simulates an algorithm of Agrawal, Klein, and Ravi <ref> [1] </ref>. Their algorithm was the first approximation algorithm for this problem. When p = 1, the problem reduces to the classical Steiner tree problem. <p> We can potentially reduce the number of calls to our main algorithm by using a "scaling" technique introduced by Agrawal et al. <ref> [1] </ref> which requires blog f max c + 1 iterations. In iteration i, we set g (S) = 1 if f (S) 2 blog f max c+1i , g (S) = 0 otherwise, and call the main algorithm with the function g. <p> One application of allowing f max &gt; 1 is the generalized Steiner network problem in which each pair of vertices i; j must be connected by r ij edge-disjoint paths. In this case we want f (S) = max i2S;j62S r ij For this particular problem, Agrawal et al. <ref> [1] </ref> showed how to reduce this general case to the 0-1 case. Williamson et al. [38] have recently shown how to approximate (IP ) for functions of the type mentioned above when no edge replication is allowed. 4.3. The Prize-Collecting Problems.
Reference: [2] <author> E. Balas, </author> <title> The prize collecting traveling salesman problem, Networks, </title> <booktitle> 19 (1989), </booktitle> <pages> pp. 621-636. </pages>
Reference-contexts: This version of the prize-collecting TSP is a special case of a more general problem introduced by Balas <ref> [2] </ref>. The prize-collecting Steiner tree problem is defined analogously.
Reference: [3] <author> P. Berman and V. Ramaiyer, </author> <title> Improved approximations for the Steiner tree problem, </title> <booktitle> in Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1992, </year> <pages> pp. 325-334. </pages>
Reference-contexts: An improved 16 9 -approximation algorithm based upon Zelikovsky's ideas was later proposed by Berman and Ramaiyer <ref> [3] </ref>. The performance guarantee of the algorithm can be shown to be tight for this problem. When p = 1, our algorithm reduces to the standard minimum-cost spanning tree heuristic (see Goemans and Bertsimas [15]).
Reference: [4] <author> D. Bienstock, M. X. Goemans, D. Simchi-Levi, and D. Williamson, </author> <title> A note on the prize collecting traveling salesman problem, </title> <journal> Math. Programming, </journal> <volume> 59 (1993), </volume> <pages> pp. 413-420. </pages>
Reference-contexts: The standard Steiner tree problem can be seen to be a special case of the prize-collecting Steiner tree problem in which non-terminals have a penalty of zero, while terminals have a very large penalty (e.g., equal to the diameter of the graph). Bienstock, Goemans, Simchi-Levi and Williamson <ref> [4] </ref> developed the first approximation algorithms for these problems. Their performance bounds are 5=2 for the TSP version (assuming the triangle inequality) and 3 for the Steiner tree version. These approximation algorithms are not very efficient, however, since they are based upon the solution of a linear programming problem. <p> Moreover, A GENERAL APPROXIMATION TECHNIQUE 17 these algorithms are purely combinatorial and do not require the solution of a linear programming problem as in <ref> [4] </ref>. We will focus our attention on the prize-collecting Steiner tree problem, and at the end of the section we will show how the algorithm for the tree problem can be easily modified to yield a prize-collecting TSP algorithm. 4.3.1. The Prize-Collecting Steiner Tree. <p> The LP relaxation (P C-LP ) can be shown to be equivalent to the following, perhaps more natural, linear programming relaxation of the prize-collecting Steiner tree problem, which was used by the algorithm of Bienstock et al. <ref> [4] </ref>: X c e x e + i6=r subject to: x (ffi (S)) s i i 2 S; r =2 S s i 0 i 2 V ; i 6= r: The dual of (P C-LP ) can be formulated as follows: Max S:r62S subject to: (P C-D) S:e2ffi (S) X
Reference: [5] <author> V. Chvatal, </author> <title> A greedy heuristic for the set-covering problem, </title> <journal> Math. Oper. Res., </journal> <volume> 4 (1979), </volume> <pages> pp. 233-235. </pages>
Reference-contexts: This result can be contrasted with the various logarithmic upper bounds on the ratio between the optimal values of general integer covering problems and their fractional counterparts (Johnson [18], Lovasz [26] and Chvatal <ref> [5] </ref>). Our algorithm can be characterized in several ways. It is an adaptive greedy algorithm in which, at every iteration, the edge with minimum reduced cost is selected. It is adaptive in the sense that the reduced costs are updated throughout the execution of the algorithm.
Reference: [6] <author> G. Cornu ejols and W. Pulleyblank, </author> <title> A matching problem with side constraints, </title> <journal> Disc. Math., </journal> <volume> 29 (1980), </volume> <pages> pp. 135-159. </pages> <note> Papadimitriou's result appears in this paper. </note>
Reference-contexts: The lower ca-pacitated cycle partitioning problem is a variant of the 2-matching problem. More precisely, the cases k = 2, 3 and 4 correspond to integer, binary and triangle-free binary 2-matchings respectively. The lower capacitated cycle partitioning problem is NP-complete for k 5 (Papadimitriou <ref> [6] </ref> for k 6 and Vornberger [34] for k = 5), polynomially solvable for k = 2 or 3 (Edmonds and Johnson [8]), while its complexity for k = 4 is open.
Reference: [7] <author> J. Edmonds, </author> <title> Maximum matching and a polyhedron with 0,1-vertices, </title> <institution> J. Res. Nat. Bur. Standards B, </institution> <month> 69B </month> <year> (1965), </year> <pages> pp. 125-130. </pages>
Reference-contexts: The minimum-weight perfect matching problem. The minimum-weight perfect matching problem is the problem of finding a minimum-cost set of non-adjacent edges 12 M.X. GOEMANS AND D.P. WILLIAMSON that cover all vertices. This problem can be solved in polynomial time by the original primal-dual algorithm discovered by Edmonds <ref> [7] </ref>. The fastest strongly polynomial time implementation of Edmonds' algorithm is due to Gabow [11]. Its running time is O (n (m + n log n)).
References-found: 7

