URL: http://cairo.cs.uiuc.edu/papers/QoSbroker.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Title: The QoS Broker important property of the broker is its role as an active intermediary
Author: Klara Nahrstedt and Jonathan M. Smith 
Note: An  
Address: Philadelphia, PA 19104-6389  
Affiliation: Distributed Systems Laboratory University of Pennsylvania,  
Abstract: Many networked multimedia applications are delay-sensitive, and require services with guarantees of resource availability and timeliness. For networks such as those based on Asynchronous Transfer Mode (ATM), these service requirements are specified through Quality of Service (QoS) parameters. QoS guarantees are needed at multiple layers in an end-to-end protocol architecture. Delivering end-to-end QoS requires an architecture for resource management at the system end-points (e.g., computer workstation hosts), as well as in the underlying network. We describe a model for an end-point entity called the QoS Broker. The broker orchestrates resources at the end-points, coordinating resource management across layer boundaries. As an intermediary, it hides implementation details from applications and per-layer resource managers. Services such as translation, admission and negotiation are used by the broker to properly configure the system to application needs. Configuration is achieved via QoS negotiation resulting in one or more connections through the communications system. The negotiation involves all components of the communication system needed for the setup. We have implemented an experimental prototype of a QoS Broker on IBM RISC System/6000 hosts connected by an ATM LAN. This prototype was validated using a telerobotics application. This application has very strict timing constraints. It helped us to identify limitations of our system and requirements for system support, and serves as a testbed for our architecture. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Klara Nahrstedt, Jonathan Smith, </author> <title> "Experimental Study of End-to-End QoS", </title> <note> submitted to ACM/Springer Multimedia Systems, also available as MS-CIS-94-08, Technical Report, </note> <institution> University of Pennsylvania, </institution> <month> February </month> <year> 1994 </year>
Reference-contexts: There has been little orchestration between the operating system (OS) and network resources and their management structure. There is even less orchestration among all three types of resource (multimedia devices, OS resources, and network resources). Yet, as we have shown through experiments <ref> [1] </ref>, the behaviors of these components are to a large degree interdependent in a net-worked multimedia system when examined from an application perspective. <p> Third, currently no group brokerage is supported because we do not have the group setup for the telerobotics application (although controlling a group of robots would be interesting). 4.3.1 Implementation Restrictions induced by the AIX Operating System Our preliminary measurements <ref> [1] </ref> and analysis with the AIX OS, using video and robotics data, showed that using the so-called `real-time' priorities are not sufficient to control protocol task behavior when used for implementation of rate-monotone or deadline-based scheduling, unless severe restrictions are made.
Reference: [2] <author> Klara Nahrstedt, Jonathan Smith, </author> <title> "QoS Negotiation in a Robotics Environment", Workshop on Distributed Multimedia Applications and Quality of Service Verification, </title> <address> Montreal, Canada, </address> <month> June </month> <year> 1994, </year> <pages> pp. 153-161 </pages>
Reference-contexts: The robot sends the requested image in the response message of the negotiation. Our detailed application QoS negotiation in a robotics environment is described in <ref> [2] </ref>.
Reference: [3] <author> Klara Nahrstedt, Jonathan Smith, </author> <title> "A Service Kernel for Multimedia Endstations", in Multimedia: Advanced Teleservices and High-Speed Communication Architectures, </title> <booktitle> Lecture Notes in Computer Science No. </booktitle> <volume> 868, </volume> <editor> Ralf Steinmetz (ed.), </editor> <publisher> Springer Verlag, </publisher> <year> 1994, </year> <pages> pp. 8-22 </pages>
Reference-contexts: All OS resources are parameterized through system parameters. All parameters are stored in profiles (databases). Parameters are specified in a form consistent with their use (details are in <ref> [3] </ref>). For example, delay parameters are specified as a range: &lt;expected value, worst value&gt;. Jitter can be accommodated by specifying task processing times as a triple &lt; best processing time, average processing time, worst acceptable processing time&gt;. <p> In the next few subsections we detail protocols used by the broker-buyer and broker-seller, and briefly describe some new services. More detailed discussion of the services can be found in <ref> [3] </ref>. 3.1 QoS Broker Protocol Since it crosses layer boundaries, the broker protocol incorporates several types of communication: layer-to-layer, layer-to-OS, peer-to-peer, peer-to-group, and group-to-peer communication. Commu IEEE Multimedia Magazine, Spring 1995 2 (1), pp. 53-67 11 nication types are performed by different services. <p> In current OS this function is inadequate. For now, it is part of the admission service in the broker. Details of the schedulability tests for periodic multimedia streams in a workstation environment can be found in <ref> [3] </ref>. IEEE Multimedia Magazine, Spring 1995 2 (1), pp. 53-67 14 Once local resources are reserved, then negotiation at the application level with the remote broker-seller occurs. <p> The set of service procedures for the broker's transport part (e.g., SetNetQoS, admitNetQoS, NegotiateNetQoS) is equivalent to the set of the application service procedures (SetAppQoS, admitAppQoS, NegotiateAppQoS) shown in Table 1 above. The services such as admission, negotiation, and translation, which the QoS Broker uses, form a service kernel <ref> [3] </ref>. The transport protocol and the transport portion of the broker will be kernel-resident in our next implementation.
Reference: [4] <author> Michael B. Jones, </author> <title> "Adaptive Real-Time Resource Management Supporting Modular Composition of Digital Multimedia Services", </title> <booktitle> 4th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Lancaster, England, </address> <month> November 3-5, </month> <year> 1993, </year> <note> published in Lecture Notes in Computer Science Vol. 846, Springer-Verlag, 1994, pp. 11-18 IEEE Multimedia Magazine, </note> <month> Spring </month> <year> 1995 </year> <month> 2(1), </month> <pages> pp. 53-67 29 </pages>
Reference-contexts: For example, in [7] a translation between ATM Adaptation Layer (AAL) and ATM resource description is presented. In order to support local multimedia services, management of system resources, such as the CPU and disks, is a necessary part of end-to-end design and requires real-time services <ref> [4] </ref>. Several real-time extensions of common operating systems have been introduced, e.g., for Mach, AIX, Solaris, and IRIX. One important goal of such extensions has been to improve support for `delay sensitive' multimedia applications.
Reference: [5] <author> Lixia Zhang, Bob Braden, Deborah Estrin, Shai Herzog, Sugih Jamin, "RSVP: </author> <title> A new Resource ReSerVation Protocol", </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993, </year> <pages> pp. 8-18 </pages>
Reference-contexts: Network resource management (when guarantees are required) uses an admission service to determine if resources are available for a request, e.g., at the intermediate network switches. Such admission control mechanisms are presented in [11], [13]. Protocols for reservation (RSVP) <ref> [5] </ref> and administration (RCAP) [6] of network resources have been developed. Network resource management is performed, for example, in the protocol ST-II [9], intended for multimedia applications. An important component of resource management systems is translation of resource specifications between consecutive layers of the network protocol. <p> Some elements of such a network reservation establishment protocol can be found in the design of the Resource Reservation Protocol (RSVP) <ref> [5] </ref>. 4 QoS Broker Implementation We have implemented an experimental prototype of the broker.
Reference: [6] <author> Bruce Mah, </author> <title> "A Mechanism for the Administration of Real-Time Channels", </title> <type> Master Thesis, </type> <institution> University of California at Berkeley and International Computer Science Institute, </institution> <month> March, </month> <year> 1993 </year>
Reference-contexts: Network resource management (when guarantees are required) uses an admission service to determine if resources are available for a request, e.g., at the intermediate network switches. Such admission control mechanisms are presented in [11], [13]. Protocols for reservation (RSVP) [5] and administration (RCAP) <ref> [6] </ref> of network resources have been developed. Network resource management is performed, for example, in the protocol ST-II [9], intended for multimedia applications. An important component of resource management systems is translation of resource specifications between consecutive layers of the network protocol. <p> Many elements of such a network reservation establishment protocol are implemented in the Tenet Real-Time Channel Administration Protocol (RCAP) <ref> [6] </ref>. If the buyer is in receiver-initiated brokerage mode, then it relies on a receiver-oriented admission and reservation scheme. The resources are tested for admission and reserved on the path from the receiver to the sender and allocated, relaxed, or released on the way from the sender to the receiver.
Reference: [7] <author> J. Jung, D. Seret, </author> <title> "Translation of QoS Parameters into ATM Performance Parameters in B-ISDN", </title> <booktitle> IEEE INFOCOM'93, Volume II, </booktitle> <address> San Francisco, CA, </address> <month> March </month> <year> 1993, </year> <pages> pp. 748-755 </pages>
Reference-contexts: Network resource management is performed, for example, in the protocol ST-II [9], intended for multimedia applications. An important component of resource management systems is translation of resource specifications between consecutive layers of the network protocol. For example, in <ref> [7] </ref> a translation between ATM Adaptation Layer (AAL) and ATM resource description is presented. In order to support local multimedia services, management of system resources, such as the CPU and disks, is a necessary part of end-to-end design and requires real-time services [4].
Reference: [8] <author> Andrew Campbell, Geoffrey Coulson, Francisco Garcia, David Hutchison, </author> <title> "A Continuous Media Transport and orchestration Service", </title> <booktitle> SIGCOMM'92, ACM, </booktitle> <address> Baltimore, MD, </address> <month> August </month> <year> 1992, </year> <pages> pp. 99-110 </pages>
Reference-contexts: One important goal of such extensions has been to improve support for `delay sensitive' multimedia applications. IEEE Multimedia Magazine, Spring 1995 2 (1), pp. 53-67 5 Some systems have partially orchestrated multiple elements. For example, the Lancaster system <ref> [8] </ref> orchestrates the behavior of the network components. The computer music system of Anderson [14] orchestrates the relationships of users and devices. Schooler and Casner's system [12] orchestrates some parts of end-to-end communication. There has been little orchestration between the operating system (OS) and network resources and their management structure.
Reference: [9] <author> Frank Oliver Hoffmann, Luca Delgrossi, </author> <title> "Detailed Tour of ST-II for the Heidelberg Transport System", </title> <type> Technical Report 43.9302, </type> <institution> IBM European Networking Center, </institution> <address> Heidelberg, Germany, </address> <year> 1993 </year>
Reference-contexts: Such admission control mechanisms are presented in [11], [13]. Protocols for reservation (RSVP) [5] and administration (RCAP) [6] of network resources have been developed. Network resource management is performed, for example, in the protocol ST-II <ref> [9] </ref>, intended for multimedia applications. An important component of resource management systems is translation of resource specifications between consecutive layers of the network protocol. For example, in [7] a translation between ATM Adaptation Layer (AAL) and ATM resource description is presented.
Reference: [10] <author> David D. Clark, Scott Shenker, Lixia Zhang, </author> <title> "Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism", </title> <booktitle> ACM SIGCOMM'92 , Balti-more, </booktitle> <address> MD, </address> <month> August </month> <year> 1992, </year> <pages> pp. 14-26 </pages>
Reference-contexts: The QoS Broker concept is general enough to be useful across many implementation technologies. It can incorporate, for example, the integrated layering approach in the control-management plane, proposed by Clark, et al. <ref> [10] </ref>. Further, the broker has interaction mechanisms in it to make `contracts' with an OS as well as with network resource management. When operating systems and network subsystems for which contract protocols exist are available, the broker uses them.
Reference: [11] <author> Lawrence A. Crutcher and A. Gill Waters, </author> <title> "Connection Management for an ATM Network", </title> <journal> IEEE Network, </journal> <month> November </month> <year> 1992, </year> <pages> pp. 42-55 </pages>
Reference-contexts: This allocation and management is in contrast to the dynamic sharing of resources achieved with TCP/IP. Network resource management (when guarantees are required) uses an admission service to determine if resources are available for a request, e.g., at the intermediate network switches. Such admission control mechanisms are presented in <ref> [11] </ref>, [13]. Protocols for reservation (RSVP) [5] and administration (RCAP) [6] of network resources have been developed. Network resource management is performed, for example, in the protocol ST-II [9], intended for multimedia applications.
Reference: [12] <author> E. Schooler, S. Casner, </author> <title> "An Architecture for Multimedia Connection management", </title> <address> Multimedia'92, Monterey, CA, </address> <month> April </month> <year> 1992, </year> <pages> pp. 271-274 </pages>
Reference-contexts: IEEE Multimedia Magazine, Spring 1995 2 (1), pp. 53-67 5 Some systems have partially orchestrated multiple elements. For example, the Lancaster system [8] orchestrates the behavior of the network components. The computer music system of Anderson [14] orchestrates the relationships of users and devices. Schooler and Casner's system <ref> [12] </ref> orchestrates some parts of end-to-end communication. There has been little orchestration between the operating system (OS) and network resources and their management structure. There is even less orchestration among all three types of resource (multimedia devices, OS resources, and network resources).
Reference: [13] <author> Domenico Ferrari, D. C. Verma, </author> <title> "A Scheme for Real-Time Channel Establishment in Wide-Area Networks", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 8, No. 3, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 368-379 </pages>
Reference-contexts: Network resource management (when guarantees are required) uses an admission service to determine if resources are available for a request, e.g., at the intermediate network switches. Such admission control mechanisms are presented in [11], <ref> [13] </ref>. Protocols for reservation (RSVP) [5] and administration (RCAP) [6] of network resources have been developed. Network resource management is performed, for example, in the protocol ST-II [9], intended for multimedia applications.
Reference: [14] <author> David P. Anderson, </author> <title> Ron Kuivila "A System for Computer Music Performance", </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 8, No. 1, </volume> <month> February </month> <year> 1990, </year> <pages> pp. 56-82 </pages>
Reference-contexts: IEEE Multimedia Magazine, Spring 1995 2 (1), pp. 53-67 5 Some systems have partially orchestrated multiple elements. For example, the Lancaster system [8] orchestrates the behavior of the network components. The computer music system of Anderson <ref> [14] </ref> orchestrates the relationships of users and devices. Schooler and Casner's system [12] orchestrates some parts of end-to-end communication. There has been little orchestration between the operating system (OS) and network resources and their management structure.
References-found: 14

