URL: http://www.cs.dartmouth.edu/~thc/papers/partial.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~thc/papers.html
Root-URL: http://www.cs.dartmouth.edu
Title: Efficient Multichip Partial Concentrator Switches p n d(lg n)=2e data pins per chip, fi( p
Author: Thomas H. Cormen 
Note: The first switch, based on the Revsort algorithm, is an (n; m; 1 O(n 3=4 =m)) partial concentrator switch with at most 2  
Address: Cambridge, Massachusetts 02139  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: Due to chip area and pin count constraints, large concentrator switches sometimes must be partitioned among several chips. This paper presents designs for two mul-tichip partial concentrator switches, both of which follow from a lemma showing that an "-nearsorter is also an (n; m; 1 "=m) partial concentrator. The second switch, based on Columnsort, is an (n; m; 1 O(n 22fi =m)) partial concentrator switch with fi(n fi ) data pins per chip, fi(n 1fi ) chips, and volume fi(n 1+fi ), for any 1=2 fi 1. A message incurs 4fi lg n + O(1) gate delays. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. H. Cormen, </author> <title> "Concentrator switches for routing messages in parallel computers," </title> <type> Masters thesis, </type> <institution> Dept. of Electrical Engineering and Computer Science, M.I.T., </institution> <address> Cambridge, Mass., </address> <year> (1986), </year> <month> 66pp. </month>
Reference-contexts: An efficient n-by-n hyperconcentrator switch design is given in <ref> [1] </ref> and [2]. This switch has a highly regular layout in both ratioed nMOS and domino CMOS technologies, and a signal incurs exactly 2 lg n gate delays through the switch. 1 This switch uses fi (n 2 ) components and has area fi (n 2 ). <p> If the switch is to be packaged by itself on a chip, it may require more input and output pins than are provided by the packaging technology. A different hyperconcentrator switch, comprised of a parallel prefix circuit and a butterfly network <ref> [1] </ref>, can be built in volume fi (n 3=2 ) with O (n lg n) chips and as few as four data pins per chip, but this switch is not combinational. Although its sequential control is not very complex, it is not as simple as that of a combinational circuit. <p> In this paper, we show a connection between nearsort-ing and partial concentration. We then use this relationship to design two efficient multichip partial concentrator switches, both of which use the hyperconcentrator switch of <ref> [1] </ref> and [2] as a subcircuit on a single chip. The remainder of this paper is organized as follows. Section 2 covers some basic terminology and describes the message format upon which the switches are based. Section 3 defines nearsorting and shows the relationship between nearsorting and partial concentration. <p> The basic building block is the hyperconcentrator switch of <ref> [1] </ref> and [2] placed on a chip. Each message incurs 3 lg n + O (1) gate delays in passing through the switch. The load ratio is ff = 1 O (n 3=4 =m). Most of the results of this section originally appeared in [1]. <p> block is the hyperconcentrator switch of <ref> [1] </ref> and [2] placed on a chip. Each message incurs 3 lg n + O (1) gate delays in passing through the switch. The load ratio is ff = 1 O (n 3=4 =m). Most of the results of this section originally appeared in [1]. <p> We are now ready to prove that this construction works. Theorem 3 The Revsort-based construction yields an (n; m; 1 O (n 3=4 =m)) partial concentrator switch. Proof Both <ref> [1] </ref> and [7] show that after running Algorithm 1 on a p p n matrix with elements valued 0 or 1, the matrix consists of only clean rows of 1's at the top, clean rows of 0's at the bottom, and at most 2 1 tial concentrator switch with n =
Reference: [2] <author> T. H. Cormen and C. E. Leiserson, </author> <title> "A hyperconcentra-tor switch for routing bit-serial messages," </title> <booktitle> Proceedings of the 15th Annual International Conference on Parallel Processing, </booktitle> <month> (Aug. </month> <year> 1986), </year> <pages> pp. 721-728. </pages>
Reference-contexts: An efficient n-by-n hyperconcentrator switch design is given in [1] and <ref> [2] </ref>. This switch has a highly regular layout in both ratioed nMOS and domino CMOS technologies, and a signal incurs exactly 2 lg n gate delays through the switch. 1 This switch uses fi (n 2 ) components and has area fi (n 2 ). <p> In this paper, we show a connection between nearsort-ing and partial concentration. We then use this relationship to design two efficient multichip partial concentrator switches, both of which use the hyperconcentrator switch of [1] and <ref> [2] </ref> as a subcircuit on a single chip. The remainder of this paper is organized as follows. Section 2 covers some basic terminology and describes the message format upon which the switches are based. Section 3 defines nearsorting and shows the relationship between nearsorting and partial concentration. <p> The basic building block is the hyperconcentrator switch of [1] and <ref> [2] </ref> placed on a chip. Each message incurs 3 lg n + O (1) gate delays in passing through the switch. The load ratio is ff = 1 O (n 3=4 =m). Most of the results of this section originally appeared in [1].
Reference: [3] <author> F. T. Leighton, </author> <title> "Tight bounds on the complexity of parallel sorting," </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. C-34, No. 4, </volume> <month> (Apr. </month> <year> 1985), </year> <pages> pp. 344-354. </pages>
Reference-contexts: Table 1 shows resource measures for the Revsort-based switch and the values of fi at which the switch of this section matches them asymptotically. The design is based on Leighton's Columnsort algorithm <ref> [3] </ref> for sorting n elements on an r fi s mesh, where n = rs and s evenly divides r. The idea behind this partial concentrator switch is to (s 1) 2 -nearsort an r fi s matrix of valid bits. <p> This correspondence between the circuit and Columnsort allows us to prove the following theorem. Theorem 4 The Columnsort-based construction yields an (n; m; 1 (s 1) 2 =m) partial concentrator switch. Proof Leighton shows in <ref> [3] </ref> that Algorithm 2 is an (s 1) 2 -nearsorter when the matrix elements are taken in row-major order. By Lemma 2, the circuit is an (n; m; 1 (s 1) 2 =m) partial concentrator switch when the outputs are taken in row-major order.
Reference: [4] <author> M. S. Pinsker, </author> <title> "On the complexity of a concentrator," </title> <booktitle> Proceedings of the 7th International Teletraffic Conference, </booktitle> <address> Stockholm, </address> <year> (1973), </year> <pages> pp. 318/1-318/4. </pages>
Reference-contexts: The valid bits output by an nby-n hyperconcen-trator switch are thus sorted, since if there are k valid messages, we have Y 1 ; Y 2 ; : : : ; Y k = 1 during setup. Concentrators were originally presented as graphs in, for example, <ref> [4, 5, 8] </ref>. The term "hyperconcentrator" is due to Valiant.
Reference: [5] <author> N. </author> <title> Pippenger, </title> <journal> "Superconcentrators," SIAM Journal on Computing, </journal> <volume> Vol. 6, No. 2, </volume> <month> (June </month> <year> 1977), </year> <pages> pp. 298-304. </pages>
Reference-contexts: The valid bits output by an nby-n hyperconcen-trator switch are thus sorted, since if there are k valid messages, we have Y 1 ; Y 2 ; : : : ; Y k = 1 during setup. Concentrators were originally presented as graphs in, for example, <ref> [4, 5, 8] </ref>. The term "hyperconcentrator" is due to Valiant.
Reference: [6] <author> I. D. Scherson, S. Sen, and A. Shamir, </author> <title> "Shear sort: a true two-dimensional sorting technique for VLSI networks," </title> <booktitle> Proceedings of the 15th Annual International Conference on Parallel Processing, </booktitle> <month> (Aug. </month> <year> 1986), </year> <pages> pp. 903-908. </pages>
Reference-contexts: Schnorr and Shamir show in [7] that if steps 1-3 of Algorithm 1 are repeated p times, the resulting matrix contains at most eight dirty rows. We can then complete the full sorting by running three iterations of the Shearsort algorithm <ref> [6] </ref>.
Reference: [7] <author> C. P. Schnorr and A. Shamir, </author> <title> "An optimal sorting algorithm for mesh connected computers," </title> <booktitle> Proceedings of the 18th Annual ACM Symposium on Theory of Computing, </booktitle> <month> (May </month> <year> 1986), </year> <pages> pp. 255-263. </pages>
Reference-contexts: The design is based on Schnorr and Shamir's Revsort algorithm for sorting on a mesh <ref> [7] </ref>, which, although not optimal for sorting on a mesh, is simple. The idea behind the partial concentrator switch is to nearsort a p p matrix of valid bits. The m output wires of the switch correspond to the first m nearsorted matrix entries. We need some basic definitions. <p> We are now ready to prove that this construction works. Theorem 3 The Revsort-based construction yields an (n; m; 1 O (n 3=4 =m)) partial concentrator switch. Proof Both [1] and <ref> [7] </ref> show that after running Algorithm 1 on a p p n matrix with elements valued 0 or 1, the matrix consists of only clean rows of 1's at the top, clean rows of 0's at the bottom, and at most 2 1 tial concentrator switch with n = 64 inputs <p> Compared to the partial concentrator switches presented above, such hyperconcentrator switches have increased delay, and a Revsort-based hyperconcentra-tor switch has a greater chip count and asymptotic volume than its partial concentrator counterpart. Schnorr and Shamir show in <ref> [7] </ref> that if steps 1-3 of Algorithm 1 are repeated p times, the resulting matrix contains at most eight dirty rows. We can then complete the full sorting by running three iterations of the Shearsort algorithm [6].
Reference: [8] <author> L. G. Valiant, </author> <title> "Graph-theoretic properties in computational complexity," </title> <journal> JCSS, </journal> <volume> Vol. 13, No. 3, </volume> <month> (Dec. </month> <year> 1976), </year> <pages> pp. 278-285. </pages>
Reference-contexts: The valid bits output by an nby-n hyperconcen-trator switch are thus sorted, since if there are k valid messages, we have Y 1 ; Y 2 ; : : : ; Y k = 1 during setup. Concentrators were originally presented as graphs in, for example, <ref> [4, 5, 8] </ref>. The term "hyperconcentrator" is due to Valiant.
References-found: 8

