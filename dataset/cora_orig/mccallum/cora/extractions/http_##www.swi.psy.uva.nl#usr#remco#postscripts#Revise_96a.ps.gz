URL: http://www.swi.psy.uva.nl/usr/remco/postscripts/Revise:96a.ps.gz
Refering-URL: http://www.swi.psy.uva.nl/usr/remco/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 2  
Title: A Purpose Driven Method for Language Comparison The REVISE  
Address: Amsterdam Roetersstraat 15, 1018 WB Amsterdam, The Netherlands  1081a, 1081 HV Amsterdam, The Netherlands  
Affiliation: 1 SWI, University of  Faculty of Mathematics and Computer Science Vrije Universiteit De Boelelaan  
Pubnum: project 12?  
Abstract: Current efforts to compare knowledge engineering (KE) mod-elling languages have been limited to either rather shallow comparisons on a broad-set of languages, or to detailed comparisons with limited applicability to a narrow set of languages. In this paper we propose a novel way of organising language comparisons. This method is based on an alternating decomposition of the goals that a language tries to achieve and the linguistic methods it employs to achieve these goals. This new method for comparing languages allows a general comparison at high levels of abstraction, while not preventing more precise comparisons whenever possible. One result of our comparison method is an insight in the different assumptions that underly the languages to be compared. Two further consequences follow from the proposed comparison method, namely (i) a measure for the degree of similarity between languages, and (ii) a method for translating between languages. After describing our method, we apply it to a pair of KE modelling languages, and show how it yields insights in the assumptions underlying the languages and how it can be used to produce a translation procedure between the languages.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> M. Aben. </author> <title> Formal Methods in Knowledge Engineering. </title> <type> PhD thesis, </type> <institution> University of Amsterdam, Faculty of Psychology, </institution> <month> February </month> <year> 1995. </year> <note> ISBN 90-5470-028-9. </note>
Reference-contexts: Data flow can be translated into (ml) 2 by "merging" inputs and outputs of components into intermediate roles. In fact, this difference between the languages stems from a difference in creation process. Aben <ref> [1] </ref> describes that during the construction of the inference layer role ontology mappings are necessary in order to be able to connect inferences which are selected from the library. <p> For instance, one cannot write down the task layer completely before the types of roles at the inference layer are known. Since there is no way to derive an ordering from the comparison graph, we used additional information here. In <ref> [1] </ref> guidelines for translating informal kads specifications into (ml) 2 are given. These guidelines also prescribe an ordering on this translation. In the desire to (ml) 2 translation process we used this ordering, using the comparison graph to select appropriate desire concepts for the (ml) 2 concept at hand.
Reference: 2. <author> D. Fensel and F. van Harmelen. </author> <title> A comparison of languages which operationalise and formalise KADS models of expertise. </title> <journal> The Knowledge Engineering Review, </journal> <volume> 9 </volume> <pages> 105-146, </pages> <year> 1994. </year>
Reference-contexts: section we discuss the two main motivations for this paper: "Why do we need to compare languages?" and "Why do we need a new method for comparing languages?" 1.1 Why do we need to compare languages? The field of KE has seen an increase of modelling languages in recent years <ref> [8, 2] </ref>. <p> These can be found in <ref> [3, 4, 5, 8, 2] </ref>. We will discuss the deficiencies of each of these attempts. Two parameters can be used to characterise all of these comparison attempts, namely the degree of similarity among the languages that were compared, and the amount of details that was studied in the comparison. <p> This effort again aimed at comparing a very broad set of languages ((ML) 2 , MC, AIDE, KARL, DESIRE, OBJ3, MILORD, K BS SF). Again, as a result, only rather general conclusions could be drawn. Almost the opposite choice was made in <ref> [2] </ref>. This effort compared a family of closely related languages (OMOS, MODEL-K, MoMo, FORKADS, KARL, (ML) 2 , QIL, K BS SF, all aimed at KADS expertise models, and all being sufficiently precise for either formalisation or operationalisation). <p> In itself, such a goal oriented approach to language comparison is not new: [8] already speaks about a "purpose-driven" comparison, and distinguishes formali-sation and operationalisation as two distinct goals of separate sets of languages. The same distinction was made in <ref> [2] </ref> to divide the languages that are compared. However, after such a distinction based on language goals, both these papers subsequently concentrated on syntactic and semantic issues within each group. <p> In general, these will be quite abstract concepts such as "expressive power", "ex-ecutability", "reusability", "formal precision" etc. Notice that these are the types of distinctions also used in [8] and <ref> [2] </ref>. In our approach we then proceed to analyse which methods the language designers have employed to achieve these goals. These methods will be somewhat more concrete than the corresponding goals, and could be terms such as "compositionality", "information hiding", "separa tion of control", etc.
Reference: 3. <author> M. Linster. </author> <title> Sisyphus'91 part 2: Models of problem-solving. statement of the sample problem. </title> <editor> In D. Smeed, M. Linster, J. H. Boose, and B. R. Gaines, editors, </editor> <booktitle> Proceedings of EKAW91, </booktitle> <address> Glasgow, </address> <year> 1991. </year> <institution> University of Strathclyde. </institution>
Reference-contexts: These can be found in <ref> [3, 4, 5, 8, 2] </ref>. We will discuss the deficiencies of each of these attempts. Two parameters can be used to characterise all of these comparison attempts, namely the degree of similarity among the languages that were compared, and the amount of details that was studied in the comparison. <p> One of the first attempts at a broad comparison of KE modelling languages was the Sisyphus-I project <ref> [3, 4] </ref>. A number of languages was used to model the same simple task. The family of languages that was involved was very broad: Generic Tasks, KARL, OMOS, KADS. and others.
Reference: 4. <author> M. Linster. Sisyphus'91/92: </author> <title> Models of problem solving. </title> <journal> Int. J. of Human Computer Studies, </journal> <volume> 40(3), </volume> <year> 1994. </year> <note> Editorial special issue. </note>
Reference-contexts: These can be found in <ref> [3, 4, 5, 8, 2] </ref>. We will discuss the deficiencies of each of these attempts. Two parameters can be used to characterise all of these comparison attempts, namely the degree of similarity among the languages that were compared, and the amount of details that was studied in the comparison. <p> One of the first attempts at a broad comparison of KE modelling languages was the Sisyphus-I project <ref> [3, 4] </ref>. A number of languages was used to model the same simple task. The family of languages that was involved was very broad: Generic Tasks, KARL, OMOS, KADS. and others.
Reference: 5. <author> A. Th. Schreiber and W. P. </author> <title> Birmingham. The Sisyphus-VT initiative. </title> <journal> International Journal of Human-Computer Studies, </journal> <note> 1996. Editorial special issue. </note>
Reference-contexts: These can be found in <ref> [3, 4, 5, 8, 2] </ref>. We will discuss the deficiencies of each of these attempts. Two parameters can be used to characterise all of these comparison attempts, namely the degree of similarity among the languages that were compared, and the amount of details that was studied in the comparison. <p> The family of languages that was involved was very broad: Generic Tasks, KARL, OMOS, KADS. and others. As a result, the models that were constructed varied considerably, and only general properties of the languages could be studied. No final comparison paper appeared in the literature. The VT-effort <ref> [5] </ref> also aimed at comparing a broad scope of modelling languages by modelling the same task in many languages.
Reference: 6. <author> R. Straatman, F. Brazier, F. van Harmelen, J. Treur, N. Wijngaards, and M. Willems. </author> <title> A purpose driven method for language comparison. </title> <institution> Revise project, University of Amsterdam and Free University of Amsterdam, </institution> <year> 1995. </year>
Reference: 7. <author> J. Treur. </author> <title> Heuristic reasoning and relative incompleteness. </title> <journal> International Journal of Approximate Reasoning, </journal> <volume> 8 </volume> <pages> 51-87, </pages> <year> 1993. </year>
Reference-contexts: We will only briefly describe the specification here ([6] contains the complete desire specification and <ref> [7] </ref> the underlying motivation). The system uses hypothetical reasoning to come to a diagnosis. Hypothetical reasoning consists of determining a hypothesis, followed by the evaluation of this hypothesis. This continues until an acceptable hypothesis is found.
Reference: 8. <editor> J. Treur and Th. Wetter, editors. </editor> <title> Formal Specification of Complex Reasoning Systems, </title> <booktitle> Workshop Series. </booktitle> <publisher> Ellis Horwood, </publisher> <year> 1993. </year> ] <title> Fig. 5. The goals and subgoals of (ML) 2 and DESIRE This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: section we discuss the two main motivations for this paper: "Why do we need to compare languages?" and "Why do we need a new method for comparing languages?" 1.1 Why do we need to compare languages? The field of KE has seen an increase of modelling languages in recent years <ref> [8, 2] </ref>. <p> These can be found in <ref> [3, 4, 5, 8, 2] </ref>. We will discuss the deficiencies of each of these attempts. Two parameters can be used to characterise all of these comparison attempts, namely the degree of similarity among the languages that were compared, and the amount of details that was studied in the comparison. <p> The problem of too little similarity among the set of languages was partly avoided by concentrating mainly on modelling domain and inference knowledge, and leaving control issues out of the comparison effort. A third comparison effort was made at the ECAI'92 workshop on formal modelling languages for knowledge-based systems <ref> [8] </ref>. This effort again aimed at comparing a very broad set of languages ((ML) 2 , MC, AIDE, KARL, DESIRE, OBJ3, MILORD, K BS SF). Again, as a result, only rather general conclusions could be drawn. Almost the opposite choice was made in [2]. <p> In itself, such a goal oriented approach to language comparison is not new: <ref> [8] </ref> already speaks about a "purpose-driven" comparison, and distinguishes formali-sation and operationalisation as two distinct goals of separate sets of languages. The same distinction was made in [2] to divide the languages that are compared. <p> In general, these will be quite abstract concepts such as "expressive power", "ex-ecutability", "reusability", "formal precision" etc. Notice that these are the types of distinctions also used in <ref> [8] </ref> and [2]. In our approach we then proceed to analyse which methods the language designers have employed to achieve these goals. These methods will be somewhat more concrete than the corresponding goals, and could be terms such as "compositionality", "information hiding", "separa tion of control", etc.
References-found: 8

