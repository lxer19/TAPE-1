URL: http://www.cs.toronto.edu/~csc2532h/indextempo.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Email: flesperan,hectorg@ai.toronto.edu  
Title: An Argument for Indexical Representations in Temporal Reasoning  
Author: Yves Lesperance and Hector J. Levesque 
Address: Toronto, ON, M5S 1A4 Canada  (Ontario, Canada), and  
Affiliation: Department of Computer Science University of Toronto  Institute for Robotics and Intelligent Systems (Canada), the Information Technology Research Center  
Date: May, 1994.  
Note: Appeared in Renee Elio, editor, Proceedings of the Tenth Biennial Conference of the Cana--dian Society for Computational Studies of Intelligence, pp. 271-277, Banff, Canada,  This research received financial support from the  the Natural Science and Engineering Research Council (Canada). Fellow of the Canadian Institute for Advanced Research  
Abstract: This paper discusses the need for indexicals in a representation language. It has been claimed that the cost of updating a knowledge base containing indexicals would be prohibitive and thus that a robot should use its internal clock to eliminate indexicals from its representations. We criticize this view and give an example of a commonplace temporal reasoning/planning problem that can only be solved in a representation formalism that includes both indexical and absolute terms and supports reasoning using both. We show that the example can be formalized within our theory of knowledge and action. We argue that rather than trying to find restricted settings where indexical knowledge can be reduced to objective knowledge, one should investigate when and how planning and temporal knowledge base update can be performed efficiently in the presence of indexicals. 
Abstract-found: 1
Intro-found: 1
Reference: [ Agre and Chapman, 1987 ] <author> Philip E. Agre and David Chapman. Pengi: </author> <title> An implementation of a theory of activity. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 268-272, </pages> <address> Seattle, WA, </address> <month> July </month> <year> 1987. </year> <booktitle> American Association for Artificial Intelligence, </booktitle> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference: [ Goldblatt, 1987 ] <author> Robert Goldblatt. </author> <title> Logics of Time and Computation. CSLI Lecture Notes No. 7. Center for the Study of Language and Information, </title> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1987. </year>
Reference-contexts: The definitions of AfterNec and PhyPoss given here are also changed; they now behave exactly as their dynamic logic <ref> [ Goldblatt, 1987 ] </ref> counterparts do. 6 We use abbreviations such as 1h (1 hour) and 30min (30 minutes) for read-ability; it is assumed that such abbreviations stand for the corresponding number of seconds. The complex action listenUntilTimeAnnounced is defined below.
Reference: [ Grove and Halpern, 1991 ] <author> Adam J. Grove and Joseph Y. Halpern. </author> <title> Naming and identity in a multi-agent epistemic logic. </title> <editor> In James Allen, Richard Fikes, and Erik Sandewall, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Second International Conference, </booktitle> <pages> pages 301-312, </pages> <address> Cambridge, MA, 1991. </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference-contexts: A formalism along the lines of ours is required for handling such cases. Grove and Halpern's logic of knowledge <ref> [ Grove and Halpern, 1991 ] </ref> handles some aspects of indexicality, but does not deal with time; so it cannot handle the kinds of situations discussed here.
Reference: [ Haas, 1991 ] <author> Andrew R. Haas. </author> <title> Indexical expressions and planning. </title> <type> Unpublished manuscript, </type> <institution> Department of Computer Science, State University of New York, Albany, </institution> <address> NY, </address> <year> 1991. </year>
Reference: [ Lesperance and Levesque, 1990 ] <author> Yves Lesperance and Hector J. Levesque. </author> <title> Indexical knowledge in robot plans. </title> <booktitle> In Proceedings of the Eight National Conference on Artificial Intelligence, </booktitle> <pages> pages 868-874, </pages> <address> Boston, </address> <month> August </month> <year> 1990. </year> <booktitle> American Association for Artificial Intelligence, </booktitle> <publisher> AAAI Press/MIT Press. </publisher>
Reference-contexts: Our formalization will be rather simplistic, but could easily be made more accurate and general. We define the agent's plan as follows: getDinnerGoing def = startRoasting; setTimer (1h); listenUntilTimeAnnounced; lookAtTimer; leaveMsg 5 This way of defining Can is preferable to the one in <ref> [ Lesperance, 1991; Lesperance and Levesque, 1990 ] </ref> as it separates the knowledge prerequisites involving the goal from the rest.
Reference: [ Lesperance and Levesque, 1994 ] <author> Yves Lesperance and Hector J. Levesque. </author> <title> Indexical knowledge and robot action | a logical account. </title> <note> To appear in Artificial Intelligence, 1994. 15 </note>
Reference-contexts: We will show in detail in Section 4 that this example can be formalized within the theory of knowledge and action that we proposed in <ref> [ Lesperance and Levesque, 1994; Lesperance, 1991 ] </ref> . We will return to our discussion of whether indexical knowledge can be eliminated in the final section. 2 The Example The example goes as follows. <p> In purely indexical or purely absolute terms, the information is meaningless. 3 Overview of the Formalism Before presenting a formalization of the example, we briefly review a formal theory of indexical knowledge, action and ability (see <ref> [ Lesperance and Levesque, 1994; Lesperance, 1991 ] </ref> for a more detailed presentation.) The goal is to be able to express attributions of indexical knowledge, for example, that Rob knows that he himself was holding a cup five minutes ago. 4 In such cases, what is known is a "proposition" that <p> (ffi 2 )) * CanDo (if ('; ffi 1 ; ffi 2 )) def (Know (') ^ CanDo (ffi 1 )) _ (Know (:' c ) ^ CanDo (ffi 2 )) Note that we eliminate Moore's requirement that the agent know who he is; instead, we require indexical knowledge (see <ref> [ Lesperance and Levesque, 1994 ] </ref> for a discussion of why this is better).
Reference: [ Lesperance, 1991 ] <author> Yves Lesperance. </author> <title> A Formal Theory of Indexical Knowl--edge and Action. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Toronto, Toronto, </institution> <note> ON, January 1991. Also published as technical report CSRI-248. </note>
Reference-contexts: We will show in detail in Section 4 that this example can be formalized within the theory of knowledge and action that we proposed in <ref> [ Lesperance and Levesque, 1994; Lesperance, 1991 ] </ref> . We will return to our discussion of whether indexical knowledge can be eliminated in the final section. 2 The Example The example goes as follows. <p> In purely indexical or purely absolute terms, the information is meaningless. 3 Overview of the Formalism Before presenting a formalization of the example, we briefly review a formal theory of indexical knowledge, action and ability (see <ref> [ Lesperance and Levesque, 1994; Lesperance, 1991 ] </ref> for a more detailed presentation.) The goal is to be able to express attributions of indexical knowledge, for example, that Rob knows that he himself was holding a cup five minutes ago. 4 In such cases, what is known is a "proposition" that <p> Our formalization will be rather simplistic, but could easily be made more accurate and general. We define the agent's plan as follows: getDinnerGoing def = startRoasting; setTimer (1h); listenUntilTimeAnnounced; lookAtTimer; leaveMsg 5 This way of defining Can is preferable to the one in <ref> [ Lesperance, 1991; Lesperance and Levesque, 1990 ] </ref> as it separates the knowledge prerequisites involving the goal from the rest.
Reference: [ Levesque et al., 1994 ] <author> Hector J. Levesque, Yves Lesperance, Fangzhen Lin, and Richard B. Scherl. </author> <title> Knowledge, action, and ability in the situation calculus. </title> <note> In preparation, </note> <year> 1994. </year>
Reference-contexts: We are also developing a more general account of the notions of "ability to achieve a goal" and "knowing how to execute a plan" 11 <ref> [ Levesque et al., 1994 ] </ref> . Other important issues are how default information could be specified, and identifying restrictions on domain theories and queries that guarantee tractability or decidability. Acknowledgements We would like to thank Andy Haas for his comments on the ideas advanced in this paper.
Reference: [ Moore, 1980 ] <author> Robert C. Moore. </author> <title> Reasoning about knowledge and action. </title> <type> Technical Report 191, </type> <institution> AI Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> October </month> <year> 1980. </year>
Reference: [ Perry, 1979 ] <author> John Perry. </author> <title> The problem of the essential indexical. </title> <journal> No^us, </journal> <volume> 13 </volume> <pages> 3-21, </pages> <year> 1979. </year>
Reference: [ Rosenschein and Kaelbling, 1986 ] <author> Stanley J. Rosenschein and Leslie P. Kaelbling. </author> <title> The synthesis of digital machines with provable epistemic properties. </title> <editor> In Joseph Y. Halpern, editor, </editor> <booktitle> Theoretical Aspects of Reasoning about Knowledge: Proceedings of the 1986 Conference, </booktitle> <pages> pages 83-98, </pages> <address> Monterey, CA, 1986. </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference: [ Scherl and Levesque, 1993 ] <author> Richard B. Scherl and Hector J. Levesque. </author> <title> The frame problem and knowledge-producing actions. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 689-695, </pages> <address> Washington, DC, July 1993. </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference-contexts: It may be possible to develop more convenient constructs for specifying of the temporal constraints associated with actions. We are currently reformulating our framework into an extended version of the situation calculus, to incorporate a solution to the frame problem described in <ref> [ Scherl and Levesque, 1993 ] </ref> . We are also developing a more general account of the notions of "ability to achieve a goal" and "knowing how to execute a plan" 11 [ Levesque et al., 1994 ] .
Reference: [ Shoham, 1987 ] <author> Yoav Shoham. </author> <title> Temporal logics in AI: Semantical and ontological considerations. </title> <journal> Artificial Intelligence, </journal> <volume> 33(1) </volume> <pages> 89-104, </pages> <year> 1987. </year>
Reference-contexts: Secondly, we assume that all actions are "solid", in the sense that any overlapping instances of an action (type) must be the same instance (have the same endpoints) <ref> [ Shoham, 1987 ] </ref> . This ensures that we can refer to things like "the starting time of the action I have just done".
Reference: [ Subramanian and Woodfill, 1989 ] <author> Devika Subramanian and John Woodfill. </author> <title> Making the situation calculus indexical. </title> <booktitle> In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 467-474, </pages> <address> Toronto, ON, May 1989. </address> <publisher> Morgan Kaufmann Publishing. </publisher> <pages> 16 </pages>
Reference-contexts: Grove and Halpern's logic of knowledge [ Grove and Halpern, 1991 ] handles some aspects of indexicality, but does not deal with time; so it cannot handle the kinds of situations discussed here. Subramanian and Woodfill's version of the situation calculus <ref> [ Subramanian and Woodfill, 1989 ] </ref> handles aspects of indexicality, but not knowledge; thus, it cannot account for knowledge acquisition actions. Let us conclude by discussing various areas in which our framework could be extended or improved.
References-found: 14

