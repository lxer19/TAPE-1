URL: http://www.cs.umd.edu/users/yun/metasearch.ps
Refering-URL: http://www.cs.umd.edu/users/yun/
Root-URL: 
Email: (yun@cs.umd.edu)  (franklin@cs.umd.edu)  
Title: Metabot: Design and Implementation of a Filtering Meta-Search Engine  
Author: MS Student: Yun Ye Advisor: Michael Franklin 
Date: December 1997  
Note: Date:  
Abstract: The explosive growth of the Internet has created the demand for a multitude of search engines, but a multitude of search engines also bring about a confusing array of incompatible user interfaces, query languages, and ranking algorithms. Metabot aims to alleviate these problems by presenting the Internet user a single gateway to many search engines. With Metabot, users can query a number of search engines by entering the query just once, further narrow down the search by specifying regular expression search patterns, and gain more control over the results by organizing search results into a personal database for further processing and manipulation. 
Abstract-found: 1
Intro-found: 1
Reference: [CLC95] <author> James P. Callan, Zhihong Lu, and W. Bruce Croft. </author> <title> Searching distributed collections with inference networks. </title> <booktitle> Proceedings of the 18th Annual SIGIR Conference, </booktitle> <year> 1995. </year>
Reference-contexts: Not surprisingly, these incompatibilities pose a difficult problem for the meta-searcher to effectively rank query results from different search engines <ref> [CLC95] </ref>. For example, several search engines may rank document A higher than document B, while the other engines may give document B a higher score.
Reference: [DH97] <author> Daniel Dreilinger and Adele E. Howe. </author> <title> Experiences with selecting search engines using metasearch. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 15(3), </volume> <year> 1997. </year>
Reference: [Dre95] <author> Daniel Dreilinger. </author> <title> Integrating Heterogeneous WWW Search Engines. </title> <institution> Colorado State University, </institution> <year> 1995. </year>
Reference: [GCG97] <author> Luis Gravano, Chen-Chuan K. Chang, and Hector Garcia-Molina. </author> <title> STARTS: Stan-ford proposal for Internet meta-searching. </title> <booktitle> SIGMOD Record, </booktitle> <month> 26(2) </month> <year> 1997. </year>
Reference-contexts: The reason is that the algorithm might rank documents differently based on the collection where the document appears <ref> [GCG97] </ref>. The approach Metabot takes is that for each document in the query results, count the number of search engines that include this document in its result set, and rank them according to the search engine count. <p> All that needs to be added is parsing routines for each format of raw documents generated by the particular search engine. Finally, an issue that haunts all meta-search engine designers is the lack of a search engine protocol for accepting queries, ranking query results, and representing the results. <ref> [GCG97] </ref> proposes such an Internet retrieval and search protocol called STARTS, but until such a protocol is widely adopted by search engine vendors, meta-search engines will remain difficult to design and maintain, and inherently unscalable. 7 Conclusion The Internet has become an important medium for data publishing and management.
Reference: [GGT94] <author> Luis Gravano, Hector Garcia-Molina, and Antony Tomasic. </author> <title> The Effectiveness of GlOSS for the text database discovery problem. </title> <booktitle> Proceedings of 1994 ACM SIGMOD Conference. </booktitle> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference: [HD97] <author> Adele E. Howe and Daniel Dreilinger. SavvySearch. </author> <title> A metasearch engine that learns which search engines to query. </title> <journal> AI Magazine, </journal> <volume> 18(2), </volume> <year> 1997. </year>
Reference-contexts: One possibility is to let Metabot learn which engines to use by analyzing user reactions to query results from different engines. A similar learning-based approach is described by SavvySearch ([Dre95], <ref> [HD97] </ref>). GlOSS ([GGT94]) and Content Router ([SDWG95]) take another approach which uses information obtained directly from the search engines to route queries. This method may not be applicable to all search engine sources, but can be highly effective where they are applicable.
Reference: [Mau97] <author> Michael L. Mauldin. Lycos: </author> <title> Design choices in an Internet search service. </title> <journal> IEEE Expert, </journal> <volume> 12(1), </volume> <year> 1997. </year>
Reference-contexts: An inverted index, which associates a word with its occurrences in the documents [Sal89], is usually used to determine the similarity. For example, the Lycos (http://www.lycos.com) search engine ranks the documents according to a relevance score based on these criteria: <ref> [Mau97] </ref> * How many of the query terms are contained in the document * Number of occurrences of the query terms in the document * Proximity of the query terms in the document * Positions of the query terms in the document * How closely do the query terms match the
Reference: [Sal89] <author> Gerard Salton. </author> <title> Automatic text processing: the transformation, analysis, and retrieval of information by computer. </title> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: While users may quickly notice the incompatible interfaces and query syntaxes, they may not realize even the underlying query model that the search engines use may vary. Some search engines use the Boolean retrieval model <ref> [Sal89] </ref>. In this model, the query result is a set of documents that match all the conditions the query specifies. <p> Many popular search engines use the vector-space retrieval model, in which a query is a list of terms and the result is a rank of documents calculated according to how similar they are to the query. An inverted index, which associates a word with its occurrences in the documents <ref> [Sal89] </ref>, is usually used to determine the similarity.
Reference: [SDWG95] <author> Mark A. Sheldon, Andrzej Duda, Ron Weiss, and David K. Gifford. </author> <title> Discover: a resource discovery system based on content routing. </title> <booktitle> Proceedings of the Third International WWW Conference. </booktitle> <publisher> Elsevier, </publisher> <year> 1995. </year> <month> 10 </month>
Reference: [SE97] <author> Erik Selberg and Oren Etzioni. </author> <title> The MetaCrawler architecture for resource aggre-gation on the Web. </title> <journal> IEEE Expert, </journal> <volume> 12(1), </volume> <year> 1997. </year>
Reference: [SM83] <author> Gerard Salton and Michael J. McGill. </author> <title> Introduction to modern information retrieval. </title> <publisher> McGraw-Hill, </publisher> <year> 1983. </year> <month> 11 </month>
References-found: 11

