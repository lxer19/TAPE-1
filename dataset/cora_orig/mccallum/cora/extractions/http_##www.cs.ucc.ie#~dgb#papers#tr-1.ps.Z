URL: http://www.cs.ucc.ie/~dgb/papers/tr-1.ps.Z
Refering-URL: http://www.cs.ucc.ie/~dgb/publist.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Formal Analysis of Case Base Retrieval  
Author: Hugh R. Osborne and Derek G. Bridge 
Date: March 21, 1997  
Address: Heslington York YO1 5DD  
Affiliation: Department of Computer Science University of York  
Abstract: Case based systems typically retrieve cases from the case base by applying similarity measures. The measures are usually constructed in an ad hoc manner. This report presents a toolbox for the systematic construction of similarity measures. In addition to paving the way to a design methodology for similarity measures, this systematic approach facilitates the identification of opportunities for parallelisation in case base retrieval.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aamodt and E. </author> <title> Plaza. Case based reasoning: Foundational issues, methodological variations and system approaches. </title> <journal> AI Communications, </journal> <volume> 7(1) </volume> <pages> 39-59, </pages> <year> 1994. </year>
Reference-contexts: Generic presentations of CBR are typically "procedural": a number of distinct processing stages are given, and these are connected sequentially, with earlier stages invoking information, and passing it to later stages <ref> [17, 1] </ref>. The following list of processing stages typify such presentations: 1. The user's statement of the problem is mapped to a representation that allows it to be used for retrieval from, and comparison with cases (problem-solution pairs) in, the case base. 2. <p> than a partial order on cases | i.e. rather than a similarity measure being a function :: fi ! fi ! fi ! bool it will be a function that "scores" cases N 1 :: fi ! fi ! N 1 , or, alternatively, [0;1] :: fi ! fi ! <ref> [0; 1] </ref> (in the following the first option will be taken). This scoring approach is less general than the one developed in section 2 because the orders defined by the scores are always total; it does not, for example, allow the possibility of incomparable cases. <p> In what follows, functions that carry out this mapping will be denoted as f . Obviously, for numeric valued attributes of cases, f will typically be the identity function, or, if the similarity measures are to return normalised values | i.e. some value in <ref> [0; 1] </ref>, rather than N 1 | a normalising function. Example 13. For the calories attribute the function f could be * for similarity measures returning values in N 1 , the identity function; * for normalising similarity measures, returning values in [0; 1], the function f n = 1 1=n <p> return normalised values | i.e. some value in <ref> [0; 1] </ref>, rather than N 1 | a normalising function. Example 13. For the calories attribute the function f could be * for similarity measures returning values in N 1 , the identity function; * for normalising similarity measures, returning values in [0; 1], the function f n = 1 1=n In most work on numerical measures [16, 7], equality of a value in a case to the seed is taken as a sign of similarity (corresponding to is below), or the difference between two values is taken as a sign of dissimilarity
Reference: [2] <author> R. Bareiss, J.A. King, J. Ashley, K. Kolodner, B. Porter, and P. Thagard. </author> <title> Panel on "similarity metrics". </title> <booktitle> In Proceedings of DARPA Case Based Reasoning Workshop, </booktitle> <pages> pages 66-84. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: Secondly, the construction of the similarity measure can be based on similarity measures constructed for similar problem areas. Existing CBR systems <ref> [2, 16, 7, 11] </ref> typically have very simple similarity measures, e.g. a weighted count of the number of exactly matching features, or the reciprocal of a weighted sum of the difference in values of corresponding features.
Reference: [3] <author> M. Brown. </author> <title> A Memory Model for Case Retrieval by Activation Passing. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Manchester, </institution> <year> 1994. </year> <note> Technical Report 94-2-1. </note>
Reference-contexts: Ironically, parallelism has mostly been investigated for representational approaches (using spreading activation and/or parallel access to the case base through more than one index, e.g. as in the PARADYME system [10]) even though these are already optimised towards their given similarity measure. Indeed, Brown <ref> [3] </ref> argues that further indexing of the case base may improve efficiency without resorting to parallel implementations. Parallelism for more computational approaches has been much less investigated (but see, e.g., [12]). Similarity measures have traditionally been constructed on a one off basis by consideration of the problem to be solved.
Reference: [4] <institution> Functional Programming Group, Department of Computer Science, University of York, UK. </institution> <note> Gadget Gofer On-Line Reference Manual. http://dcpu1.cs.york.ac.uk:6666/rjn/ggref/index.html. </note>
Reference-contexts: The disjunctive normal form generated by the system is then passed to Gadget Gofer <ref> [4, 13] </ref>, a dialect of Gofer developed at the University of York for parallel programming of graphical user interfaces. 4.1 Installing a Case Base The system is called by maxima &lt;filename&gt;. A small window will pop up called "Centaur menu".
Reference: [5] <author> A.D. Griffiths and D.G. </author> <title> Bridge. Formalising the knowledge content of case memory systems. </title> <editor> In Ian D. Watson, editor, </editor> <booktitle> Progress in Case-Based Reasoning: First United Kingdom Workshop in Case-Based Reasoning, </booktitle> <pages> pages 32-41. </pages> <booktitle> Springer Verlag Lecture Notes in Computer Science; 1020; Lecture Notes in Artificial Intelligence, </booktitle> <year> 1995. </year>
Reference-contexts: There are two possible approaches to this. The first applies to the similarity measures themselves, the second to the process of determining maxima. The first of these will be referred to as a priority (after [18]), the second as a preference (after <ref> [5] </ref>). 2.5.1 Priorities The prioritisation of relation 1 over relation 2 , notation 1 2 , is a generalisation of lexicographic ordering defined for relations, and is the relation defined by: Definition 5 x ( 1 2 ) y = (x 1 y ^ :(y 1 x)) _ (x 1 y
Reference: [6] <author> D. Hennessy and D. Hinkle. </author> <title> Applying case-based reasoning to autoclave loading. </title> <journal> IEEE Expert, </journal> <volume> 7(5) </volume> <pages> 21-26, </pages> <year> 1992. </year>
Reference-contexts: Systems that reason in this way have seen commercial application to a variety of tasks (e.g. help-desk support [19] and autoclave loading <ref> [6] </ref>). Generic presentations of CBR are typically "procedural": a number of distinct processing stages are given, and these are connected sequentially, with earlier stages invoking information, and passing it to later stages [17, 1]. The following list of processing stages typify such presentations: 1.
Reference: [7] <author> P. Klahr and G. Vrooman. </author> <title> Commercialising case based reasoning technology. In I.M. </title> <editor> Graham and R.W. Milne, editors, </editor> <booktitle> Research and Development in Expert Systems VIII, </booktitle> <pages> pages 18-24. </pages> <publisher> Cmabridge University Press, </publisher> <year> 1991. </year>
Reference-contexts: Secondly, the construction of the similarity measure can be based on similarity measures constructed for similar problem areas. Existing CBR systems <ref> [2, 16, 7, 11] </ref> typically have very simple similarity measures, e.g. a weighted count of the number of exactly matching features, or the reciprocal of a weighted sum of the difference in values of corresponding features. <p> Example 13. For the calories attribute the function f could be * for similarity measures returning values in N 1 , the identity function; * for normalising similarity measures, returning values in [0; 1], the function f n = 1 1=n In most work on numerical measures <ref> [16, 7] </ref>, equality of a value in a case to the seed is taken as a sign of similarity (corresponding to is below), or the difference between two values is taken as a sign of dissimilarity (corresponding to best below).
Reference: [8] <author> P. Klint. </author> <title> The ASF+SDF Meta-Environment User's Guide, </title> <type> version 26. </type> <institution> Centrum voor Wiskunde en Informatica (CWI), </institution> <month> February </month> <year> 1993. </year> <note> Available by ftp from ftp.cwi.nl:pub/gipe/reports as SysManual.ps.Z. </note>
Reference-contexts: It should be stressed that the graphical demonstration of parallel retrieval is intended only as an expository aid, not a workable case based system. The syntax of cases, seeds and similarity measures and the transformation of similarity measures to disjunctive normal form was defined using the ASF+SDF <ref> [8, 9] </ref> Meta-environment developed at the Centrum voor Wiskunde en Informatica and the University of Amsterdam.
Reference: [9] <author> P. Klint. </author> <title> A meta-environment for generating programming environments. </title> <journal> ACM Transactions on Software Engineering and Methodology, </journal> <volume> 2(2) </volume> <pages> 176-201, </pages> <year> 1993. </year>
Reference-contexts: It should be stressed that the graphical demonstration of parallel retrieval is intended only as an expository aid, not a workable case based system. The syntax of cases, seeds and similarity measures and the transformation of similarity measures to disjunctive normal form was defined using the ASF+SDF <ref> [8, 9] </ref> Meta-environment developed at the Centrum voor Wiskunde en Informatica and the University of Amsterdam.
Reference: [10] <author> J.L. Kolodner. </author> <title> Judging which is the "best" case for a case-based reasoner, </title> <booktitle> 1989. published as part of [2], </booktitle> <pages> pages 77-81. </pages>
Reference-contexts: In order to address the problem of efficiency, opportunities for parallelisation of the retrieval mechanism must be found. Ironically, parallelism has mostly been investigated for representational approaches (using spreading activation and/or parallel access to the case base through more than one index, e.g. as in the PARADYME system <ref> [10] </ref>) even though these are already optimised towards their given similarity measure. Indeed, Brown [3] argues that further indexing of the case base may improve efficiency without resorting to parallel implementations. Parallelism for more computational approaches has been much less investigated (but see, e.g., [12]).
Reference: [11] <author> J.L. Kolodner. </author> <title> Case Based Reasoning. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: Secondly, the construction of the similarity measure can be based on similarity measures constructed for similar problem areas. Existing CBR systems <ref> [2, 16, 7, 11] </ref> typically have very simple similarity measures, e.g. a weighted count of the number of exactly matching features, or the reciprocal of a weighted sum of the difference in values of corresponding features.
Reference: [12] <author> P. Myllymaki and H. Tirri. </author> <title> Massively parallel case-based reasoning with probabilistic similarity measures. </title> <editor> In S. Wess, K.D. Althoff, and M.M. Richter, editors, </editor> <booktitle> Proceedings of the 1st European Workshop on Case-Based Reasoning, Lecture Notes in Computer Science No. </booktitle> <volume> 837, </volume> <pages> pages 144-154. </pages> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Indeed, Brown [3] argues that further indexing of the case base may improve efficiency without resorting to parallel implementations. Parallelism for more computational approaches has been much less investigated (but see, e.g., <ref> [12] </ref>). Similarity measures have traditionally been constructed on a one off basis by consideration of the problem to be solved. This report considers how similarity measures might be constructed more systematically, their development being driven on two fronts.
Reference: [13] <author> Rob Noble and Colin Runciman. </author> <title> Lazy functional components for graphical user interfaces. </title> <booktitle> In Proceedings of PLILP, </booktitle> <year> 1995. </year> <month> 29 </month>
Reference-contexts: The disjunctive normal form generated by the system is then passed to Gadget Gofer <ref> [4, 13] </ref>, a dialect of Gofer developed at the University of York for parallel programming of graphical user interfaces. 4.1 Installing a Case Base The system is called by maxima &lt;filename&gt;. A small window will pop up called "Centaur menu".
Reference: [14] <author> Hugh Osborne and Derek Bridge. </author> <title> Relational metrics: Integrating case based reasoning and database management systems. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of York, </institution> <year> 1997. </year> <note> In preparation. </note>
Reference-contexts: A system has been developed that demonstrates the ideas presented. Currently this provides a graphical demonstration of the method. Work is in progress to develop this into a realistic, efficient system, and to extend the work to cover other knowledge manipulation systems <ref> [14] </ref>.
Reference: [15] <author> B.W. Porter. </author> <title> Similarity assessment: Computation vs. </title> <booktitle> representation. In Proceedings of DARPA Case Based Reasoning Workshop. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: Retrieval from case based systems is typically achieved by applying a similarity measure, . The application of the function can be realised in a number of ways. Broadly though, approaches can be described as representational or computational <ref> [15] </ref>. <p> The reader should note that graphs are being used here to define distances between elements and seeds. This is quite distinct from assessing the similarity of two graph structures by some sort of subgraph algorithm, as is found in many case based reasoning systems <ref> [15] </ref>. There is, however, no reason why such an algorithm could not be used to define an ordering on graphs, and then apply this ordering in the way presented in this report.
Reference: [16] <editor> M.M. Richter and S. Wess. </editor> <title> Similarity, uncertainty and case-based reasoning in PATDEX. In R.S. </title> <editor> Boyer, editor, </editor> <booktitle> Automated Reasoning: Essays in Honour of Noody Bledsoe, </booktitle> <pages> pages 249-265. </pages> <publisher> Kluwer, </publisher> <year> 1991. </year>
Reference-contexts: Secondly, the construction of the similarity measure can be based on similarity measures constructed for similar problem areas. Existing CBR systems <ref> [2, 16, 7, 11] </ref> typically have very simple similarity measures, e.g. a weighted count of the number of exactly matching features, or the reciprocal of a weighted sum of the difference in values of corresponding features. <p> Example 13. For the calories attribute the function f could be * for similarity measures returning values in N 1 , the identity function; * for normalising similarity measures, returning values in [0; 1], the function f n = 1 1=n In most work on numerical measures <ref> [16, 7] </ref>, equality of a value in a case to the seed is taken as a sign of similarity (corresponding to is below), or the difference between two values is taken as a sign of dissimilarity (corresponding to best below).
Reference: [17] <editor> C.K. Riesbeck and R.C. Schank. </editor> <title> Inside Case Based Reasoning. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1989. </year>
Reference-contexts: Generic presentations of CBR are typically "procedural": a number of distinct processing stages are given, and these are connected sequentially, with earlier stages invoking information, and passing it to later stages <ref> [17, 1] </ref>. The following list of processing stages typify such presentations: 1. The user's statement of the problem is mapped to a representation that allows it to be used for retrieval from, and comparison with cases (problem-solution pairs) in, the case base. 2.
Reference: [18] <author> M. Ryan. </author> <title> Prioritising preference relations. </title> <editor> In S.J.G. Burn and M.D. Ryan, editors, </editor> <booktitle> Theory and Formal Methods 1993: Proc. Imperial College Department of Computer Science Workshop on Theory and Formal Methods. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: A model demonstrating some of the results from section 2 has been implemented, and this is presented in section 4. Finally section 5 draws some conclusions. The report is illustrated throughout by the following example (based on one given by Ryan <ref> [18] </ref>): Example 1. Consider the problem of providing a guest with a meal. A meal can be characterised by its name, its ingredients, some indication of its degree of spiciness, the number of calories it contains, etc., etc. <p> There are two possible approaches to this. The first applies to the similarity measures themselves, the second to the process of determining maxima. The first of these will be referred to as a priority (after <ref> [18] </ref>), the second as a preference (after [5]). 2.5.1 Priorities The prioritisation of relation 1 over relation 2 , notation 1 2 , is a generalisation of lexicographic ordering defined for relations, and is the relation defined by: Definition 5 x ( 1 2 ) y = (x 1 y ^
Reference: [19] <author> E. Simoudis. </author> <title> Using case-based retrieval for customer technical support. </title> <journal> IEEE Expert, </journal> <volume> 7(5) </volume> <pages> 7-13, </pages> <year> 1992. </year> <month> 30 </month>
Reference-contexts: Systems that reason in this way have seen commercial application to a variety of tasks (e.g. help-desk support <ref> [19] </ref> and autoclave loading [6]). Generic presentations of CBR are typically "procedural": a number of distinct processing stages are given, and these are connected sequentially, with earlier stages invoking information, and passing it to later stages [17, 1]. The following list of processing stages typify such presentations: 1.
References-found: 19

