URL: file://ftp.cc.gatech.edu/pub/coc/tech_reports/1992/GIT-CC-92-36.ps.Z
Refering-URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/MP.html
Root-URL: 
Email: rjc@cc.gatech.edu  
Title: Multi-Protocol Architectures as a Paradigm for Achieving Inter-Operability  
Author: Russell J. Clark Mostafa H. Ammar Kenneth L. Calvert 
Address: Atlanta, GA 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Date: July 14, 1992  
Pubnum: GIT-CC-92/36  
Abstract: A significant obstacle to achieving heterogeneous system interconnection is the need to maintain compatible network protocols on all communicating systems. Protocol standardization and profiling has long been viewed as a way to overcome this obstacle. The exclusive nature of this approach, however, presents certain limitations. Among them are exclusion of sometimes superior technology and the necessity for strict agreement among systems. In this paper we consider an inclusive approach to achieving inter-operability based on the use of multi-protocol architectures, that is, systems with a mixture of protocols from different standard families. Inter-operability in these architectures is achieved by providing sufficient overlap in the protocols that systems implement. We begin with a detailed description of a framework and model for describing and constructing multi-protocol architectures. We then describe a case study based on architectures that mix protocols from the OSI and Internet suites. We identify and propose solutions to the problem of determining which set of protocols to use for a particular communication task. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Bass. NIST, </author> <title> industry collaborate on OSI specs. </title> <booktitle> Federal Computer Week, </booktitle> <pages> page 20, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Whether profiling will achieve its desired objectives remains to be seen. Although MAP has been rather successful, incompatibilities with GOSIP have been noted and attempts to produce yet another profile (IGOSS) to reconcile both are underway <ref> [1] </ref>. In this paper we start a systematic investigation of another approach to achieving interoperability. Our approach is inclusive in nature and envisions a time when communicating systems implement a mixture of protocols from different standard families. We dub this the Multi-Protocol Architecture.
Reference: [2] <author> R. W. Callon. </author> <title> TCP and UDP with bigger addresses (TUBA), a simple proposal for internet addressing and routing. </title> <type> RFC 1347, </type> <month> June </month> <year> 1992. </year>
Reference-contexts: of know-how will occur if indeed all communicating systems conform to any single protocol standard. 2 * The current capabilities of end- and intermediate-systems are such that multi-protocol architectures are feasible and do not represent an undue burden. * Multi-protocol architectures are showing up in the guise of "co-existence" architectures <ref> [11, 2, 4] </ref> that are introduced as a communication system is undergoing a transi tion from one protocol standard to another.
Reference: [3] <author> Stephen E. Kille. </author> <title> An interim approach to the use of network addresses. </title> <note> Technical Report Research Note RN/89/14, </note> <institution> Department of Computer Science, University College London, </institution> <month> February </month> <year> 1989. </year>
Reference-contexts: If an Internet style address is used with the OSI protocols an RFC-1006 path is assumed and the Application Switch selects (App Switch,TP0,TCP) as the appropriate addition to the PE path <ref> [3] </ref>. If another OSI address format is given, such as an OSINET address, the Application Switch selects (App Switch,TP4,CLNP) as the appropriate addition to the PE path. <p> Both of these paths require an Internet address for the IP layer. One option for solving this problem is to use the Transport Set field of the network addressing format outlined by Kille in <ref> [3] </ref>, which is the basis for the RFC 1006 addresses. The purpose of the Transport Set field is to specify which transport protocol is being used. In the case of the path (App Switch,TP4,IP), TP4 is the transport protocol.
Reference: [4] <author> Sun Microsystems. </author> <title> Sunlink OSI Programmer's Guide, </title> <year> 1991. </year>
Reference-contexts: of know-how will occur if indeed all communicating systems conform to any single protocol standard. 2 * The current capabilities of end- and intermediate-systems are such that multi-protocol architectures are feasible and do not represent an undue burden. * Multi-protocol architectures are showing up in the guise of "co-existence" architectures <ref> [11, 2, 4] </ref> that are introduced as a communication system is undergoing a transi tion from one protocol standard to another. <p> This combination, which requires that T CP:mux = true, is used by the ISO Development Environment (ISODE) for testing OSI applications over the Internet [12] and is also supported in the Sun Microsystems SunNet T M OSI software <ref> [4] </ref>. While TP4 does have an assigned number as an official protocol over IP [10], the TP4 over IP implementation is not widely supported and has not reached the acceptance level of the RFC 1006 standard.
Reference: [5] <author> P. Mockapetris. </author> <title> Domain names concepts and facilities. </title> <type> RFC 1034, </type> <month> November </month> <year> 1987. </year>
Reference-contexts: An example of this type of directory service information is found in DNS. Though it is not widely used, the CLASS attribute of a resource record is reserved for specifying information about the "supported protocol family" of a host <ref> [5] </ref>. Since this is an integer field, its usefulness depends on the existence of a standard set of protocol family identifiers. For a multi-protocol host, the DNS database would contain separate resource record entries for each CLASS value.
Reference: [6] <institution> U.S. Department of Commerce. </institution> <note> Government Open Systems Interconnection Profile (GOSIP) Version 2. FIPS PUB 146-1. </note> <institution> U.S. Department of Commerce, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: Examples of this are the Manufacturing Automation Protocol (MAP) and the Government OSI profile (GOSIP) <ref> [6] </ref>. These profiles, which represent procurement/supply mandates, typically hold the promise of inter-operability as the reward for compliance. By its nature, the profiling approach is exclusive, in that it allows a small subset of existing protocols (and therefore technology) to be used.
Reference: [7] <author> Institute of Electrical and Electronics Engineers. IEEE 802.3: </author> <title> IEEE Standards for Local Area Networks Carrier Sense Multiple Access with Collision Detection (CSMA/CD) Access Method and Physical Layer Specifications. </title> <institution> Institute of Electrical and Electronics Engineers, </institution> <address> New York, New York, </address> <year> 1985. </year>
Reference-contexts: The rest of the PEs in Table 1 also support multiplexing. We have explicitly chosen Ethernet as the PE with base = true, rather than IEEE 802.3, because of the former's support of the type field <ref> [7, 14] </ref>. All other PEs in this study have base = false. Because of the inability of several of the PEs to support switching, we have introduced the two PEs: Application Switch and TP Switch.
Reference: [8] <author> S. W. O'Malley and L. L. Peterson. </author> <title> A dynamic network architecture. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(2) </volume> <pages> 110-143, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: While current network hosts change protocol architectures no more frequently than they change addresses, recent research suggests that this may not always be the case in the future <ref> [8, 15] </ref>. An example of this type of directory service information is found in DNS. Though it is not widely used, the CLASS attribute of a resource record is reserved for specifying information about the "supported protocol family" of a host [5]. <p> This paper represents a first step toward formulating such an approach. Future work will pursue solutions to the path selection problem for today's multi-protocol architectures, while also considering the ramifications of promising recent developments <ref> [8, 15] </ref>.
Reference: [9] <author> J. B. Postel. </author> <title> Internet control message protocol. </title> <type> RFC 792, </type> <month> September </month> <year> 1981. </year>
Reference-contexts: Specifically, the system must be able to monitor the communication process at each layer to determine the level of compatibility on the remote host. With some protocols, this monitoring is relatively straightforward. For example, IP networks use ICMP messages to indicate the status of a communication attempt <ref> [9] </ref>. These messages can indicate the point of failure in a communication attempt and help determine the presence or absence of certain protocols along the desired communication path.
Reference: [10] <author> J. Reynolds and J. Postel. </author> <title> Assigned numbers. </title> <type> RFC 1340, </type> <month> July </month> <year> 1992. </year> <month> 19 </month>
Reference-contexts: While TP4 does have an assigned number as an official protocol over IP <ref> [10] </ref>, the TP4 over IP implementation is not widely supported and has not reached the acceptance level of the RFC 1006 standard. Graph G e combines G a with a graph containing the FTAM, Application Switch, TP0, and TP4 PEs to create a graph with three distinct paths.
Reference: [11] <author> M. T. Rose. </author> <title> The Open Book. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1990. </year>
Reference-contexts: of know-how will occur if indeed all communicating systems conform to any single protocol standard. 2 * The current capabilities of end- and intermediate-systems are such that multi-protocol architectures are feasible and do not represent an undue burden. * Multi-protocol architectures are showing up in the guise of "co-existence" architectures <ref> [11, 2, 4] </ref> that are introduced as a communication system is undergoing a transi tion from one protocol standard to another. <p> Co-existence archi tectures are mostly ad hoc and different approaches might not inter-operate. * Some co-existence architectures are "comfortable" (e.g., the dual stack <ref> [11] </ref>) and there is no incentive to abandon them as they typically provide inter-operability with multiple standard families. These observations are further motivation for an examination of multi-protocol architectures.
Reference: [12] <author> M. T. Rose. </author> <title> The ISO Development Environment User's Manual Version 7.0. </title> <booktitle> Performance Systems International, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: In this case, TP0 is implemented according to the RFC 1006 standard for supporting TP0 over TCP/IP [13]. This combination, which requires that T CP:mux = true, is used by the ISO Development Environment (ISODE) for testing OSI applications over the Internet <ref> [12] </ref> and is also supported in the Sun Microsystems SunNet T M OSI software [4]. While TP4 does have an assigned number as an official protocol over IP [10], the TP4 over IP implementation is not widely supported and has not reached the acceptance level of the RFC 1006 standard.
Reference: [13] <author> M. T. Rose and D. E. Cass. </author> <title> ISO Transport Services on top of the TCP. </title> <type> RFC 1006, </type> <month> May </month> <year> 1987. </year>
Reference-contexts: This combination requires that IP:mux = true. A similar graph is G d which represents the result of adding the graph containing FTAM and TP0 to the standard TCP/IP graph. In this case, TP0 is implemented according to the RFC 1006 standard for supporting TP0 over TCP/IP <ref> [13] </ref>. This combination, which requires that T CP:mux = true, is used by the ISO Development Environment (ISODE) for testing OSI applications over the Internet [12] and is also supported in the Sun Microsystems SunNet T M OSI software [4].
Reference: [14] <author> John F. Shoch, Yogen K. Dalal, David D. Redell, and Ronald C. Crane. </author> <title> Evolution of the ethernet local computer network. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 10-26, </pages> <month> August </month> <year> 1982. </year>
Reference-contexts: In general, this is possible if the protocol defines information that can be used to select among PEs. For example, the Ethernet protocol header contains a protocol field designated for this purpose <ref> [14] </ref>. The IEEE 802.3 MAC protocol, on the other hand, defines no such field in the header, and therefore an 802.3 PE must route all incoming messages to the same higher-level entity (presumably an 802.2 Logical Link Control entity). <p> The rest of the PEs in Table 1 also support multiplexing. We have explicitly chosen Ethernet as the PE with base = true, rather than IEEE 802.3, because of the former's support of the type field <ref> [7, 14] </ref>. All other PEs in this study have base = false. Because of the inability of several of the PEs to support switching, we have introduced the two PEs: Application Switch and TP Switch.
Reference: [15] <author> C. Tschudin. </author> <title> Flexible protocol stacks. </title> <booktitle> In Computer Communication Review, </booktitle> <pages> pages 197-205. </pages> <publisher> ACM Press, </publisher> <month> September </month> <year> 1991. </year> <month> 20 </month>
Reference-contexts: While current network hosts change protocol architectures no more frequently than they change addresses, recent research suggests that this may not always be the case in the future <ref> [8, 15] </ref>. An example of this type of directory service information is found in DNS. Though it is not widely used, the CLASS attribute of a resource record is reserved for specifying information about the "supported protocol family" of a host [5]. <p> This is similar in spirit to the "generic protocol" described in <ref> [15] </ref>. In this system, the first step in establishing communication is a handshake between the hosts where each informs the other of the set of PE paths it supports. From the intersection of these two sets, the hosts then agree on the best path to use for the communication. <p> This paper represents a first step toward formulating such an approach. Future work will pursue solutions to the path selection problem for today's multi-protocol architectures, while also considering the ramifications of promising recent developments <ref> [8, 15] </ref>.
References-found: 15

