URL: ftp://gaia.cs.umass.edu/pub/Tows96:Comparison.ps
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Email: ftowsley,kuroseg@cs.umass.edu  
Title: A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols 1  
Author: Don Towsley and Jim Kurose Sridhar Pingali 
Address: Amherst, MA 01003  Amherst, MA 01003 3  
Affiliation: Dept. of Computer Science University of Massachusetts  Dept. of Electrical and Computer Engineering University of Massachusetts  
Abstract: Sender-initiated reliable multicast protocols based on the use of positive acknowledgments (ACKs) can suffer performance degradation as the number of receivers increases. This degradation is due to the fact that the sender must bear much of the complexity associated with reliable data transfer (e.g., maintaining state information and timers for each of the receivers and responding to receivers' ACKs). A potential solution to this problem is to shift the burden of providing reliable data transfer to the receivers thus resulting in receiver-initiated multicast error control protocols based on the use of negative acknowledgments (NAKs). In this paper we determine the maximum throughputs for generic sender- initiated and receiver-initiated protocols for two classes of applications: (i) one-many applications where one participant sends data to a set of receivers, and (ii) many-many applications where all participants simultaneously send and receive data to/from each other. We show that a receiver-initiated error control protocol which requires receivers to transmit NAKs point-to-point to the sender provides higher throughput than a sender-initiated counterpart for both classes of applications. We further demonstrate that, in the case of a one-many application, replacing point-to-point transfer of NAKs with multicas- ting of NAKs coupled with a random backoff procedure provides a substantial additional increase in the throughput of a receiver-initiated error control protocol over a sender-initiated protocol. We also find, however, that such a modification leads to a throughput degradation in the case of many-many applications. 
Abstract-found: 1
Intro-found: 1
References-found: 0

