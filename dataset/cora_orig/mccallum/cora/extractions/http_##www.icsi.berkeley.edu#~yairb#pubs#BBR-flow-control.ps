URL: http://www.icsi.berkeley.edu/~yairb/pubs/BBR-flow-control.ps
Refering-URL: http://www.icsi.berkeley.edu/~yairb/
Root-URL: http://www.icsi.berkeley.edu
Title: Global Optimization Using Local Information with Applications to Flow Control  
Author: Yair Bartal John W. Byers Danny Raz 
Abstract: Flow control in high speed networks requires distributed routers to make fast decisions based only on local information in allocating bandwidth to connections. While most previous work on this problem focuses on achieving local objective functions, in many cases it may be necessary to achieve global objectives such as maximizing the total flow. This problem illustrates one of the basic aspects of distributed computing: achieving global objectives using local information. Papadimitriou and Yannakakis [PY93] initiated the study of such problems in a framework of solving positive linear programs by distributed agents. We take their model further, by allowing the distributed agents to acquire more information over time. We therefore turn attention to the tradeoff between the running time and the quality of the solution to the linear program. We give a distributed algorithm that obtains a (1+*) approximation to the global optimum solution and runs in a polylogarithmic number of distributed rounds. While comparable in running time, our results exhibit a significant improvement on the logarithmic ratio previously obtained by [AA94]. Our algorithm, which draws from techniques developed by Luby and Nisan [LN93], is considerably simpler than previous approximation algorithms for positive linear programs, and thus may have practical value in both centralized and distributed settings. 
Abstract-found: 1
Intro-found: 1
Reference: [AA94] <author> B. Awerbuch and Y. Azar. </author> <title> Local Optimization of Global Objectives: Competitive Distributed Deadlock Resolution and Resource Allocation. </title> <booktitle> In Proc. of the 35th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 240-249, </pages> <year> 1994. </year>
Reference-contexts: We note that similar models for describing the interaction between connections and routers in theoretical evaluations of flow control policies have been suggested in <ref> [AA94, AMO96, AS97] </ref>. One observation toward achieving our goal is that a centralized administrator with complete information could certainly solve the problem exactly using one of the well known polynomial-time algorithms for linear programming (see for example, [K96]). <p> But we are interested in more time-efficient solutions. The only previously known result for a distributed flow control algorithm with a global objective function is an algorithm of Awerbuch and Azar <ref> [AA94] </ref>, which gives a logarithmic approximation ratio and also runs in a polylogarithmic number of rounds. Their algorithm is based on fundamental results from competitive analysis [AAFPW92, AAP93]. <p> Their algorithm is based on fundamental results from competitive analysis [AAFPW92, AAP93]. The deterministic algorithm we present produces (1 + *) approximate solutions to positive linear programs, both in general and for the flow control problem, and builds on ideas used in these other algorithms <ref> [AA94, LN93, PST94] </ref>. Our algorithm is most closely related to the algorithm of Luby and Nisan, and affords the following advantages. It eliminates the need for the complex global selection operations and a global normalization step upon termination, enabling fast implementation in a distributed setting. <p> As mentioned earlier, this simple and natural model of communication between connections and routers corresponds to models previously suggested in other studies of flow control <ref> [AA94, AMO96, AS97] </ref>. In a synchronous model, each round takes time equal to the maximum round-trip time experienced by a connection in the network.
Reference: [AAFPW92] <author> J. Aspnes, Y. Azar, A. Fiat, S. Plotkin and O. Waarts. </author> <title> On-line Load Balancing with Applications to Machine Scheduling and Virtual Circuit Routing. </title> <booktitle> In Proc. of the 33rd Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 164-173, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: The only previously known result for a distributed flow control algorithm with a global objective function is an algorithm of Awerbuch and Azar [AA94], which gives a logarithmic approximation ratio and also runs in a polylogarithmic number of rounds. Their algorithm is based on fundamental results from competitive analysis <ref> [AAFPW92, AAP93] </ref>. The deterministic algorithm we present produces (1 + *) approximate solutions to positive linear programs, both in general and for the flow control problem, and builds on ideas used in these other algorithms [AA94, LN93, PST94].
Reference: [AAP93] <author> B. Awerbuch, Y. Azar, and S. Plotkin. </author> <title> Throughput Competitive On-line Routing. </title> <booktitle> In Proc. of the 34th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <month> November </month> <year> 1993. </year>
Reference-contexts: The only previously known result for a distributed flow control algorithm with a global objective function is an algorithm of Awerbuch and Azar [AA94], which gives a logarithmic approximation ratio and also runs in a polylogarithmic number of rounds. Their algorithm is based on fundamental results from competitive analysis <ref> [AAFPW92, AAP93] </ref>. The deterministic algorithm we present produces (1 + *) approximate solutions to positive linear programs, both in general and for the flow control problem, and builds on ideas used in these other algorithms [AA94, LN93, PST94].
Reference: [AMO96] <author> Y. Afek, Y. Mansour and Z. Ostfeld. </author> <title> Convergence Complexity of Optimistic Rate Based Flow Control Algorithms. </title> <booktitle> In Proc. of 28th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 89-98, </pages> <year> 1996. </year>
Reference-contexts: In this approach, each router in the network must make regulatory decisions based only on local information, which typically consists of the current transmission rates of connections using the router. Most existing flow control policies try to satisfy local objective functions such as max-min fairness <ref> [BG87, AMO96, C94] </ref>. However, there are many other practical scenarios in which global objective functions are the appropriate choice. <p> We note that similar models for describing the interaction between connections and routers in theoretical evaluations of flow control policies have been suggested in <ref> [AA94, AMO96, AS97] </ref>. One observation toward achieving our goal is that a centralized administrator with complete information could certainly solve the problem exactly using one of the well known polynomial-time algorithms for linear programming (see for example, [K96]). <p> As mentioned earlier, this simple and natural model of communication between connections and routers corresponds to models previously suggested in other studies of flow control <ref> [AA94, AMO96, AS97] </ref>. In a synchronous model, each round takes time equal to the maximum round-trip time experienced by a connection in the network.
Reference: [AS97] <author> B. Awerbuch and Y. Shavitt. </author> <title> Converging to Approximated Max-Min Flow Fairness in Logarithmic Time. </title> <type> Johns Hopkins Tech Report, </type> <year> 1997. </year>
Reference-contexts: We note that similar models for describing the interaction between connections and routers in theoretical evaluations of flow control policies have been suggested in <ref> [AA94, AMO96, AS97] </ref>. One observation toward achieving our goal is that a centralized administrator with complete information could certainly solve the problem exactly using one of the well known polynomial-time algorithms for linear programming (see for example, [K96]). <p> As mentioned earlier, this simple and natural model of communication between connections and routers corresponds to models previously suggested in other studies of flow control <ref> [AA94, AMO96, AS97] </ref>. In a synchronous model, each round takes time equal to the maximum round-trip time experienced by a connection in the network.
Reference: [BG87] <author> D. Bertsekas and R. Gallagher. </author> <title> Data Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1987. </year>
Reference-contexts: In this approach, each router in the network must make regulatory decisions based only on local information, which typically consists of the current transmission rates of connections using the router. Most existing flow control policies try to satisfy local objective functions such as max-min fairness <ref> [BG87, AMO96, C94] </ref>. However, there are many other practical scenarios in which global objective functions are the appropriate choice.
Reference: [C94] <author> A. Charny. </author> <title> An Algorithm for Rate Allocation in a Packet-Switching Network with Feedback. </title> <type> Technical Report MIT/LCS/TR-601, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: In this approach, each router in the network must make regulatory decisions based only on local information, which typically consists of the current transmission rates of connections using the router. Most existing flow control policies try to satisfy local objective functions such as max-min fairness <ref> [BG87, AMO96, C94] </ref>. However, there are many other practical scenarios in which global objective functions are the appropriate choice.
Reference: [J81] <author> J. Jaffe. </author> <title> Bottleneck Flow Control. </title> <journal> In IEEE Transactions on Commmunica-tion, COM-29, </journal> <volume> 1(7), </volume> <pages> pp. 954-962, </pages> <month> July </month> <year> 1981. </year>
Reference: [K96] <author> H. Karloff. </author> <title> Linear Programming. </title> <publisher> Birkhauser, </publisher> <year> 1996. </year>
Reference-contexts: One observation toward achieving our goal is that a centralized administrator with complete information could certainly solve the problem exactly using one of the well known polynomial-time algorithms for linear programming (see for example, <ref> [K96] </ref>). Recently, much faster algorithms that produce approximate solutions to positive linear programs to within a (1 + *) factor of optimal have been developed. The sequential algorithm of Plotkin, Shmoys and Tardos [PST94] repeatedly identifies a globally minimum weight path, and pushes more flow along that path.
Reference: [L87] <author> N. Linial. </author> <title> Distributive Graph Algorithms Global Solutions from Local Data. </title> <booktitle> In Proc. of the 28th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 331-335, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction Processors in a distributed environment make decisions based only on local data. Therefore, fast distributed algorithms must do without global information about the system as a whole. This is exactly why computing many target functions in distributed models quickly is provably hard <ref> [L87] </ref>. However, quite surprisingly, some of the most interesting global optimization problems can be very closely approximated based only on local information. We study the problem of developing flow control policies with global objective functions.
Reference: [LN93] <author> M. Luby and N. Nisan. </author> <title> A Parallel Approximation Algorithm for Positive Linear Programming. </title> <booktitle> In Proc. of 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 448-457, </pages> <year> 1993. </year>
Reference-contexts: The sequential algorithm of Plotkin, Shmoys and Tardos [PST94] repeatedly identifies a globally minimum weight path, and pushes more flow along that path. The algorithm of Luby and Nisan <ref> [LN93] </ref> has both a fast sequential and parallel implementation, and repeatedly performs a global median selection algorithm on the values of the dual variables, then increases values of dual variables above this threshold. <p> Their algorithm is based on fundamental results from competitive analysis [AAFPW92, AAP93]. The deterministic algorithm we present produces (1 + *) approximate solutions to positive linear programs, both in general and for the flow control problem, and builds on ideas used in these other algorithms <ref> [AA94, LN93, PST94] </ref>. Our algorithm is most closely related to the algorithm of Luby and Nisan, and affords the following advantages. It eliminates the need for the complex global selection operations and a global normalization step upon termination, enabling fast implementation in a distributed setting.
Reference: [PY93] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Linear Programming without the Matrix. </title> <booktitle> In Proc. of 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 121-129, </pages> <year> 1993. </year>
Reference-contexts: Motivated by this and related applications, Pa-padimitriou and Yannakakis considered the problem of having distributed decision-makers assign values to a set of variables in a linear program, where the agents have limited information <ref> [PY93] </ref>. In one scenario they describe, each agent, acting in isolation, must set the value of a single primal variable, knowing only the constraints affecting that variable in the LP. <p> Although we focus on the application of flow control, this study could also be performed on a range of resource allocation problems including those described in <ref> [PY93] </ref>. We note that similar models for describing the interaction between connections and routers in theoretical evaluations of flow control policies have been suggested in [AA94, AMO96, AS97].

References-found: 12

