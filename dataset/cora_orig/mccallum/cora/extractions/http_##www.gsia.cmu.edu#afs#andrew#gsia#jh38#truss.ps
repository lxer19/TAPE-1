URL: http://www.gsia.cmu.edu/afs/andrew/gsia/jh38/truss.ps
Refering-URL: 
Root-URL: 
Title: Optimal Design of Truss Structures by Logic-Based Branch and Cut  
Author: S. Bollapragada O. Ghattas J. N. Hooker 
Date: December 1996  
Address: Schenectady, NY 12301 USA  Pittsburgh, PA 15213 USA  Pittsburgh, PA 15213 USA  
Affiliation: Information Technology Laboratory General Electric Corporate Research and Development  Mechanical Engineering Department Carnegie Mellon University,  Graduate School of Industrial Administration Carnegie Mellon University,  
Abstract: The truss design problem is to find the optimal placement and size of structural bars that can support a given load. The problem is nonlinear and, in the version addressed here, the bars must take certain discrete sizes. It is shown that a logic-based method that dispenses with integer variables and branches directly on logical disjunctions can solve substantially larger problems than mixed integer programming, even though the nonlinearities disappear in the mixed integer model. A primary purpose of the paper is to investigate whether advantages of logic-based branching that have been demonstrated elsewhere for linear problems extend to nonlinear programming.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Balas, E., </author> <title> Disjunctive programming and a hierarchy of relaxations for discrete optimization problems, </title> <note> SIAM Journal on Discrete Mathematics 6 (1985) 466-486. </note>
Reference-contexts: An approach introduced by Ghattas and Grossmann [6] formulates the problem with 0-1 variables in such a way that the nonlinearities disappear, resulting in an MILP problem. We will see that this formulation is in fact the tighest possible MILP formulation, namely a convex hull formulation <ref> [1] </ref>. This represents an advance relative to previous methods (e.g. [3, 4]) in the sense it does not require the solution of a nonlinear model. Nonetheless the resulting problem is hard to solve. <p> The tighest mixed integer representation of (2) is the convex hull representation <ref> [1] </ref>, which is obtained by disaggregating the variables x.
Reference: [2] <author> Beaumont, N., </author> <title> An algorithm for disjunctive programs, </title> <note> European Journal of Operational Research 48 (1990) 362-371. </note>
Reference-contexts: Although an MILP model has advantage that the continuous relaxation is always readily available, the quality of the relaxation may not justify the overhead of including integer variables. This is the case in the truss design problem. Several nontraditional schemes for relaxing disjunctive constraints are presented in <ref> [2, 10] </ref>. As it happens the disjunctions in our formulation do not have useful linear relaxations, but we show that the logic-based framework permits us to use a linear "quasi-relaxation" of the nonlinear problem at each node. <p> A continuous relaxation of the problem (1) is obtained by replacing the disjunctive constraints with 0 A i A iK i . There are actually several ways to provide linear relaxations for disjunctive constraints, as noted earlier <ref> [2, 10] </ref>. <p> One could branch on the alternatives in Hooke's law, each of which yields a linear programming problem, so that there is no need for quasi-relaxations. In this model, the schemes discussed in <ref> [2, 10] </ref> for generating linear relaxations of disjunctions could prove useful.
Reference: [3] <author> Bremicker, M., P. Y. Papalambros and H. T. Loh, </author> <title> Solution of mixed-discrete structural optimization problems with a new sequential linearization algorithm, </title> <note> Computing and Structures 37 (1990) 451-461. </note>
Reference-contexts: We will see that this formulation is in fact the tighest possible MILP formulation, namely a convex hull formulation [1]. This represents an advance relative to previous methods (e.g. <ref> [3, 4] </ref>) in the sense it does not require the solution of a nonlinear model. Nonetheless the resulting problem is hard to solve. A commercial solver (CPLEX) was unable to solve even a standard 10-bar problem when there are multiple loading conditions or bounds on node displacements.
Reference: [4] <author> Cai, J., and G. Thierauf, </author> <title> Discrete optimization of structures using an improved penalty function method, </title> <note> Engineering Optimization 21 (1993) 293-306. </note>
Reference-contexts: We will see that this formulation is in fact the tighest possible MILP formulation, namely a convex hull formulation [1]. This represents an advance relative to previous methods (e.g. <ref> [3, 4] </ref>) in the sense it does not require the solution of a nonlinear model. Nonetheless the resulting problem is hard to solve. A commercial solver (CPLEX) was unable to solve even a standard 10-bar problem when there are multiple loading conditions or bounds on node displacements.
Reference: [5] <author> Cai, J., and G. Thierauf, </author> <title> Discrete structural optimization using parallel sub-evolution-strategy, </title> <booktitle> AIAA Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <address> Panama City, FL (1994) 1239-1246. </address>
Reference-contexts: CPLEX was unable to solve the larger problems, or even the smallest problems with multiple loading conditions or displacement bounds, within 10 hours. To obtain an upper bound on the size of tractable problems, we applied the logic-based method to a 200-bar problem with 96 linking groups, described in <ref> [5] </ref>. It failed to find a solution within 10 hours of computation time. A solution was obtained in [5] using a genetic algorithm, but the quality of the solution relative to the optimum is unknown. 7 Conclusions The computational results suggest that the logic-based method proposed here significantly increases the size <p> To obtain an upper bound on the size of tractable problems, we applied the logic-based method to a 200-bar problem with 96 linking groups, described in <ref> [5] </ref>. It failed to find a solution within 10 hours of computation time. A solution was obtained in [5] using a genetic algorithm, but the quality of the solution relative to the optimum is unknown. 7 Conclusions The computational results suggest that the logic-based method proposed here significantly increases the size of problems that may be solved to optimality.
Reference: [6] <author> Ghattas, O., and I. Grossmann, </author> <title> MINLP and MILP strategies for discrete sizing structural optimization problems, </title> <booktitle> Proceedings of ASCE 10th Conference on Electronic Computation, </booktitle> <address> Indianapolis, </address> <year> 1991. </year>
Reference-contexts: This raises the question as to how a solution method is to account for constraints of a logical nature. An approach introduced by Ghattas and Grossmann <ref> [6] </ref> formulates the problem with 0-1 variables in such a way that the nonlinearities disappear, resulting in an MILP problem. We will see that this formulation is in fact the tighest possible MILP formulation, namely a convex hull formulation [1]. <p> This is precisely the mixed integer model proposed by Ghattas and Grossmann <ref> [6, 7] </ref>.
Reference: [7] <author> Grossmann, I., V. T. Voudouris and O. Ghattas, </author> <title> Mixed-integer linear programming reformulations for some nonlinear discrete design optimization problems, </title> <institution> Engineering Design Research Center, Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213 USA, </address> <year> 1991. </year>
Reference-contexts: This is precisely the mixed integer model proposed by Ghattas and Grossmann <ref> [6, 7] </ref>.
Reference: [8] <author> Hooker, J. N., </author> <title> Logic-based methods for optimization, </title> <editor> in A. Borning, ed., </editor> <booktitle> Principles and Practice of Constraint Programming, Lecture Notes in Computer Science 874 (1994) 336-349. </booktitle>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S.
Reference: [9] <author> Hooker, J., H. Yan, I. Grossmann, and R. Raman, </author> <title> Logic cuts for processing networks with fixed charges, </title> <note> Computers and Operations Research 21 (1994) 265-279. </note>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S. <p> More sophisticated topological conditions for stable structures may also be checked in this manner. It may also be possible to identify configurations that are physically possible but that cannot be optimal. These could be excluded by "nonvalid" logic cuts analogous to those introduced in <ref> [9] </ref>. There are logic-based approaches to the truss design problem other than the one developed here.
Reference: [10] <author> Hooker, J. N., and M. A. Osorio, </author> <title> Mixed logical/linear programming, </title> <type> manuscript, </type> <institution> Graduate School of Industrial Administration, Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213 USA. </address>
Reference-contexts: Office of Naval Research Grant N00014-95-1-0517 and by the Engineering Design Research Center at Carnegie Mellon University, an Engineering Research Center of the National Science Foundation. 1 (MILP). A systematic development of MLLP and a survey of the relevant literature may be found in <ref> [10] </ref>. The aim here, however, is to explore the potential of logic-based branching for solving nonlinear problems. To this end it is applied to the truss structure design problem, which is one of the fundamental problems of engineering design. <p> Logic-based branching. The branch-and-cut procedure dispenses with integer variables and branches directly on the alternatives in the disjunctions. This is in contrast with MILP approaches, which branch on integer variables. Several potential advantages of this approach are discussed in <ref> [10] </ref>. Here it has two main advantages: a) it yields much smaller subproblems at the nodes of the search tree, due to the absence of integer variables; b) it permits application of a very effective branching rule that is not available in an MILP context. Logic cuts. <p> Although an MILP model has advantage that the continuous relaxation is always readily available, the quality of the relaxation may not justify the overhead of including integer variables. This is the case in the truss design problem. Several nontraditional schemes for relaxing disjunctive constraints are presented in <ref> [2, 10] </ref>. As it happens the disjunctions in our formulation do not have useful linear relaxations, but we show that the logic-based framework permits us to use a linear "quasi-relaxation" of the nonlinear problem at each node. <p> Like a true relaxation, it provides a lower bound 2 on the optimum and so plays a role analogous to that of the continuous relaxation in MILP. Other potential elements of a logic-based approach are described in <ref> [10] </ref>. 2 The Design Problem The truss structure design problem considered here is stated for a given network of nodes and arcs. The positions of the nodes are given. The structure must consist of bars placed along some or all of the arcs and joined at the nodes. <p> A continuous relaxation of the problem (1) is obtained by replacing the disjunctive constraints with 0 A i A iK i . There are actually several ways to provide linear relaxations for disjunctive constraints, as noted earlier <ref> [2, 10] </ref>. <p> One could branch on the alternatives in Hooke's law, each of which yields a linear programming problem, so that there is no need for quasi-relaxations. In this model, the schemes discussed in <ref> [2, 10] </ref> for generating linear relaxations of disjunctions could prove useful.
Reference: [11] <author> Raman, R., and I. E. Grossmann, </author> <title> Relation between MILP modeling and logical inference for chemical process synthesis, </title> <booktitle> Computer and Chemical Engineering 15 (1991) 73-84. </booktitle>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S.
Reference: [12] <author> Raman, R., and I. E. Grossmann, </author> <title> Symbolic integration of logic in MILP branch and bound methods for the synthesis of process networks, </title> <note> Annals of Operations Research 42 (1993) 169-191. </note>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S.
Reference: [13] <author> Raman, R., and I. E. Grossmann, </author> <title> Symbolic integration of logic in mixed-integer linear programming techniques for process synthesis, </title> <booktitle> Computers and Chemical Engineering 17 (1993) 909-927. </booktitle>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S.
Reference: [14] <author> Raman, R., and I. E. Grossmann, </author> <title> Modeling and conputational techniques for logic based integer programming, </title> <booktitle> Computer and Chemical Engineering 18 (1994) 563-578. </booktitle>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S.
Reference: [15] <author> Sheu, C. Y., and L. A. </author> <title> Schmit, Minimum weight design of elastic redundant trusses under multiple static loading conditions, </title> <note> AIAA Journal 10 (1972) 155-162. </note>
Reference-contexts: Logic-based branching can also find an approximate global optimum for the continuous problem, but this possiblity is only briefly discussed here. Other algorithms for the continuous problem may be found in <ref> [15, 18, 19] </ref>. The discrete problem can be formulated by imposing disjunctive constraints, each of which states that a given bar must assume size 1 or size 2 or size 3, etc.
Reference: [16] <author> Strang, G., </author> <title> Introduction to Applied Mathematics, </title> <publisher> Wellesley-Cambridge Press 1986. </publisher>
Reference-contexts: The equilibrium equations balance the external loads with the forcws induced in the bars. The compatibility equations relate the displacement of the nodes with the elongation of the bars. A detailed description of the physics of the truss structures can be found in [18] and <ref> [16] </ref>. Note that the disjunctive constraints at the end require each area A i to take one of the discrete values A ik .
Reference: [17] <author> Turkay, M., and I. E. Grossmann, </author> <title> Logic-based MINLP algorithms for the optimal synthesis of process networks, </title> <booktitle> Computer and Chemical Engineering 20 (1996) 959-978. </booktitle>
Reference-contexts: Another option, however, is to dispense with integer variables and to branch directly on the alternatives in a logical disjunction. This approach has recently been shown to be superior for several engineering design problems <ref> [8, 9, 11, 12, 13, 14, 17] </ref>. When the constraints are linear, the logic-based approach might be referred to as Mixed Logical/Linear Programming (MLLP), in contrast to Mixed Integer/Linear Programming fl This research is partially supported by U.S.
Reference: [18] <author> Utku, S., C.H. Norris, and J.B. Wilbur, McGraw Hill, </author> <title> Elementary Structural Analysis, </title> <publisher> McGraw Hill, </publisher> <editor> 4th ed., </editor> <year> 1991. </year>
Reference-contexts: Logic-based branching can also find an approximate global optimum for the continuous problem, but this possiblity is only briefly discussed here. Other algorithms for the continuous problem may be found in <ref> [15, 18, 19] </ref>. The discrete problem can be formulated by imposing disjunctive constraints, each of which states that a given bar must assume size 1 or size 2 or size 3, etc. <p> The equilibrium equations balance the external loads with the forcws induced in the bars. The compatibility equations relate the displacement of the nodes with the elongation of the bars. A detailed description of the physics of the truss structures can be found in <ref> [18] </ref> and [16]. Note that the disjunctive constraints at the end require each area A i to take one of the discrete values A ik .

References-found: 18

