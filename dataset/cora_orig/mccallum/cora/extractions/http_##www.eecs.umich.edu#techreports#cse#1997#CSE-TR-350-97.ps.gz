URL: http://www.eecs.umich.edu/techreports/cse/1997/CSE-TR-350-97.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse97.html
Root-URL: http://www.cs.umich.edu
Email: fashaikh,kgshing@eecs.umich.edu jrex@research.att.com  
Title: Dynamics of Quality-of-Service Routing with Inaccurate Link-State Information  
Author: Anees Shaikhy Jennifer Rexfordz, and Kang G. Shiny 
Keyword: quality-of-service, source-directed routing, explicit routing, signalling, link state  
Note: The work of this author was performed while visiting AT&T Labs Research  
Address: Ann Arbor, MI 48109-2122 Florham Park, NJ 07932-0971  
Affiliation: yDepartment of Electrical Engineering zNetwork Mathematics Research and Computer Science Networking and Distributed Systems University of Michigan AT&T Labs Research  
Abstract: Quality-of-service (QoS) routing can satisfy application performance requirements and optimize network resource usage by selecting paths based on connection traffic parameters and link load information. However, effective path-selection schemes require the distribution of link-state information, which can cause a significant burden on the bandwidth and processing resources in the network. We investigate the fundamental tension between network overheads and the quality of routing decisions in the context of source-directed QoS routing algorithms. In contrast to previous performance studies that compare different routing algorithms under specific network configurations, we characterize how the performance and overheads of QoS routing relate to the link-state update policies, as a function of the underlying traffic load, network topology, and link-cost metrics. We explore the interplay between stale link-state information and random fluctuations in traffic load through a broad set of simulation experiments on a parameterized model of QoS routing. These results suggest ways to tune the frequency of link-state update messages and the link-cost functions to strike a careful balance between high accuracy and low complexity. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. J. Bae and T. Suda, </author> <title> "Survey of traffic control schemes and protocols in ATM networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, </volume> <pages> pp. 170-189, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The migration to integrated networks for voice, data, and multimedia applications introduces new challenges in supporting predictable communication performance. To accommodate diverse traffic characteristics and quality-of-service (QoS) requirements, these emerging networks can employ a variety of mechanisms to control access to shared link, buffer, and processing resources <ref> [1, 2] </ref>. These mechanisms include traffic shaping and flow control to regulate an individual traffic stream, as well as link scheduling and buffer management to coordinate resource sharing at the packet or cell level.
Reference: [2] <author> D. Towsley, </author> <title> "Providing quality of service in packet switched networks," </title> <booktitle> in Performance Evaluation of Computer and Communication Systems, </booktitle> <pages> pp. 560-586, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: 1 Introduction The migration to integrated networks for voice, data, and multimedia applications introduces new challenges in supporting predictable communication performance. To accommodate diverse traffic characteristics and quality-of-service (QoS) requirements, these emerging networks can employ a variety of mechanisms to control access to shared link, buffer, and processing resources <ref> [1, 2] </ref>. These mechanisms include traffic shaping and flow control to regulate an individual traffic stream, as well as link scheduling and buffer management to coordinate resource sharing at the packet or cell level.
Reference: [3] <author> W. C. Lee, M. G. Hluchyj, and P. A. Humblet, </author> <title> "Routing subject to quality of service constraints in integrated communication networks," </title> <journal> IEEE Network Magazine, </journal> <pages> pp. 46-55, </pages> <month> July/August </month> <year> 1995. </year>
Reference: [4] <author> Z. Whang and J. Crowcroft, </author> <title> "Quality-of-service routing for supporting multimedia applications," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 14, </volume> <pages> pp. 1228-1234, </pages> <month> September </month> <year> 1996. </year>
Reference: [5] <author> E. Crawley, R. Nair, B. Rajagopalan, and H. Sandick, </author> <title> "A framework for QoS-based routing in the Internet." Internet Draft (draft-ietf-qosr-framework-00.txt), </title> <month> March </month> <year> 1997. </year> <month> 18 </month>
Reference: [6] <author> PNNI Working Group, </author> <title> ATM Forum 94-0471R13 PNNI Draft Specification. </title> <note> Document available at ftp://ftp.atmforum.com/pub/contributions. </note>
Reference-contexts: We focus on link-state routing algorithms where the source switch or router selects a path based on the connection traffic parameters and the available resources in the network. For example, the ATM Forum's PNNI standard <ref> [6] </ref> defines a routing protocol for distributing topology and load information throughout the network, and a signalling protocol for processing and forwarding connection-establishment requests from the source. Similarly, the proposed QoS extensions to the OSPF protocol include an "explicit routing" mechanism for source-directed IP routing [7, 8].
Reference: [7] <author> Z. Zhang, C. Sanchez, B. Salkewicz, and E. S. Crawley, </author> <title> "Quality of service extensions to OSPF or quality of service path first routing (QOSPF)." Internet Draft (draft-zhang-qos-ospf-01.txt), </title> <month> September </month> <year> 1997. </year>
Reference-contexts: Similarly, the proposed QoS extensions to the OSPF protocol include an "explicit routing" mechanism for source-directed IP routing <ref> [7, 8] </ref>. Despite the attractiveness of these schemes, QoS-routing protocols can impose a significant bandwidth and processing load on the network, since each switch must maintain its own view of the available link resources, distribute link-state information to other switches, and compute and establish routes for new connections.
Reference: [8] <author> R. Guerin, S. Kamat, and A. Orda, </author> <title> "QoS routing mechanisms and OSPF extensions." Internet Draft (draft-guerin-qos-routing-ospf-01.txt), </title> <month> March </month> <year> 1997. </year> <note> To appear in Proceedings of IEEE GLOBECOM, </note> <month> November </month> <year> 1997. </year>
Reference-contexts: Similarly, the proposed QoS extensions to the OSPF protocol include an "explicit routing" mechanism for source-directed IP routing <ref> [7, 8] </ref>. Despite the attractiveness of these schemes, QoS-routing protocols can impose a significant bandwidth and processing load on the network, since each switch must maintain its own view of the available link resources, distribute link-state information to other switches, and compute and establish routes for new connections. <p> have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology. 2 Finally, new routing algorithms have been proposed that reduce computation and memory over-heads by basing path selection on a small set of discrete bandwidth levels <ref> [8, 12] </ref>; these algorithms attempt to balance the trade-off between accuracy and computational complexity. The performance and implementation trade-offs for QoS routing depend on the subtle interplay between a large set of parameters. <p> In addition to these extensions to our simulation model, we plan to explore new QoS-routing policies that consume less network resources. For example, support for precomputed routes can reduce computation overheads and connection set-up delay <ref> [8] </ref>, yet these policies must reconcile the timescale for route computation with the expected connection arrival and link-state update rates. Some initial simulation experiments with precomputed routes for a few bandwidth classes show promising results [12].
Reference: [9] <author> R. Guerin and A. Orda, </author> <title> "QoS-based routing in networks with inaccurate information," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Several recent studies consider the effects of stale or coarse-grained information on the performance of QoS-routing algorithms. For example, analytical models have been developed to evaluate routing in hierarchical networks where a switch has limited information about the aggregate resources available in other peer groups <ref> [9] </ref>. To characterize the effects of stale information, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period [10-12], while other work considers a combination of periodic and triggered updates [13].
Reference: [10] <author> L. Breslau, D. Estrin, and L. Zhang, </author> <title> "A simulation study of adaptive source routing in integrated services networks," </title> <type> Tech. Rep. 93-551, </type> <institution> Computer Science Department, University of Southern California, </institution> <year> 1993. </year>
Reference: [11] <author> Q. Ma and P. Steenkiste, </author> <title> "Quality-of-service routing for traffic with performance guarantees," </title> <booktitle> in Proc. IFIP International Workshop on Quality of Service, </booktitle> <address> (Columbia University, New York), </address> <pages> pp. 115-126, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [11, 15-18, 20] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1u i g) increases the likelihood of successfully routing the new connection. <p> Experiments with different ff values, with and without pruning, show similar performance trends. Furthermore, we find that pruning does not significantly affect the blocking probability, even with very stale information, consistent with the results in [17]. Due to fragmentation of link resources <ref> [11, 12, 20] </ref>, the high-bandwidth connections experience a larger blocking probability than the low-bandwidth connections across the range of link-state update rates. <p> Under such a non-uniform load, QoS routing continues to outperform static routing even for large update periods. For example, further experiments with the non-homogenous MCI backbone topology used in <ref> [11, 12] </ref> show that QoS routing consistently achieves lower blocking probability than static routing over a wide range of update rates. <p> In conducting further experiments on the asymmetric MCI backbone topology used in <ref> [11, 12] </ref>, we find, again, that 3 For the hop-count blocking metrics, the number of hops derives from the shortest-path distance between the source and destination nodes, independent of the actual (possibly longer) path selected for the connection. 11 (a) Routing and signalling failures (b) Link-state update rate vs. trigger compensates
Reference: [12] <author> Q. Ma and P. Steenkiste, </author> <title> "On path selection for traffic with bandwidth guarantees," </title> <booktitle> in Proceedings of IEEE International Conference on Network Protocols, </booktitle> <address> (Atlanta, GA), </address> <month> October </month> <year> 1997. </year>
Reference-contexts: have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology. 2 Finally, new routing algorithms have been proposed that reduce computation and memory over-heads by basing path selection on a small set of discrete bandwidth levels <ref> [8, 12] </ref>; these algorithms attempt to balance the trade-off between accuracy and computational complexity. The performance and implementation trade-offs for QoS routing depend on the subtle interplay between a large set of parameters. <p> Experiments with different ff values, with and without pruning, show similar performance trends. Furthermore, we find that pruning does not significantly affect the blocking probability, even with very stale information, consistent with the results in [17]. Due to fragmentation of link resources <ref> [11, 12, 20] </ref>, the high-bandwidth connections experience a larger blocking probability than the low-bandwidth connections across the range of link-state update rates. <p> Under such a non-uniform load, QoS routing continues to outperform static routing even for large update periods. For example, further experiments with the non-homogenous MCI backbone topology used in <ref> [11, 12] </ref> show that QoS routing consistently achieves lower blocking probability than static routing over a wide range of update rates. <p> In conducting further experiments on the asymmetric MCI backbone topology used in <ref> [11, 12] </ref>, we find, again, that 3 For the hop-count blocking metrics, the number of hops derives from the shortest-path distance between the source and destination nodes, independent of the actual (possibly longer) path selected for the connection. 11 (a) Routing and signalling failures (b) Link-state update rate vs. trigger compensates <p> For example, support for precomputed routes can reduce computation overheads and connection set-up delay [8], yet these policies must reconcile the timescale for route computation with the expected connection arrival and link-state update rates. Some initial simulation experiments with precomputed routes for a few bandwidth classes show promising results <ref> [12] </ref>. We are especially interested in finding ways to precompute routes, while still incorporating new link-state information in routing decisions. Finally, the intrinsic staleness of link-state information suggests new policies for alternate routing after a signalling failure.
Reference: [13] <author> M. Peyravian and R. Onvural, </author> <title> "Algorithm for efficient generation of link-state updates in ATM networks," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 29, </volume> <pages> pp. 237-247, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: To characterize the effects of stale information, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period [10-12], while other work considers a combination of periodic and triggered updates <ref> [13] </ref>.
Reference: [14] <author> S. Rampal and D. Reeves, </author> <title> "Routing and admission control algorithms for multimedia data," </title> <journal> Computer Communications, </journal> <month> October </month> <year> 1995. </year>
Reference: [15] <author> R. Gawlick, A. Kamath, S. Plotkin, and K. Ramakrishnan, </author> <title> "Routing and admission control in general topology networks," </title> <type> Tech. Rep. </type> <institution> CS-TR-95-1548, Stanford University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Biasing toward shortest-path routes is particularly attractive in a large, distributed network, since path length is a relatively stable metric, compared with dynamic measurements of link delay or loss rate <ref> [15] </ref>. In our model, the source selects a route based on the bandwidth requirement b and the desti nation node in three steps, effectively computing a "cheapest-shortest-feasible" path: 1. Prune infeasible links (i.e., links i with u 0 i + b &gt; 1) 2.
Reference: [16] <author> R. Gawlick, C. Kalmanek, and K. Ramakrishnan, </author> <title> "Online routing for virtual private networks," </title> <journal> Computer Communications, </journal> <volume> vol. 19, </volume> <pages> pp. 235-244, </pages> <month> March </month> <year> 1996. </year>
Reference: [17] <author> I. Matta and A. U. Shankar, </author> <title> "Dynamic routing of real-time virtual circuits," </title> <booktitle> in Proceedings of IEEE International Conference on Network Protocols, </booktitle> <address> (Columbus, OH), </address> <pages> pp. 132-139, </pages> <year> 1996. </year>
Reference-contexts: Defining the path cost as the sum of link utilization reduces call blocking probability and results in less route oscillation by adapting slowly to changes in network load <ref> [17] </ref>. Other studies have shown that assigning each link a cost that is exponential in its current utilization results in optimal call blocking probability [23]. <p> To extend beyond the periodic link-state update policies evaluated in previous performance studies <ref> [10-12, 17] </ref>, we consider a three-parameter model that applies to the routing protocols in PNNI and the proposed QoS extensions to OSPF. <p> Experiments with different ff values, with and without pruning, show similar performance trends. Furthermore, we find that pruning does not significantly affect the blocking probability, even with very stale information, consistent with the results in <ref> [17] </ref>. Due to fragmentation of link resources [11, 12, 20], the high-bandwidth connections experience a larger blocking probability than the low-bandwidth connections across the range of link-state update rates.
Reference: [18] <author> C. Pornavalai, G. Chakraborty, and N. Shiratori, </author> <title> "QoS based routing in integrated services packet networks," </title> <booktitle> in Proceedings of IEEE International Conference on Network Protocols, </booktitle> <address> (Atlanta, GA), </address> <month> October </month> <year> 1997. </year>
Reference: [19] <author> A. Iwata, R. Izmailov, H. Suzuki, and B. Sengupta, </author> <title> "PNNI routing algorithms for multimedia ATM internet," </title> <journal> NEC Reserach & Development, </journal> <volume> vol. 38, </volume> <month> January </month> <year> 1997. </year>
Reference: [20] <author> H. Ahmadi, J. S. Chen, and R. Guerin, </author> <title> "Dynamic routing and call control in high-speed integrated networks," in Teletraffic and Datatraffic in a Period of Change: </title> <booktitle> Proceedings of the International Teletraffic Congress (A. </booktitle> <editor> Jensen and V. B. Iversen, eds.), </editor> <volume> vol. </volume> <booktitle> 14 of Studies in Telecommunication, </booktitle> <pages> pp. 397-403, </pages> <address> Copenhagen, Denmark: </address> <publisher> North-Holland, </publisher> <month> June </month> <year> 1991. </year>
Reference-contexts: Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [11, 15-18, 20] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1u i g) increases the likelihood of successfully routing the new connection. <p> Experiments with different ff values, with and without pruning, show similar performance trends. Furthermore, we find that pruning does not significantly affect the blocking probability, even with very stale information, consistent with the results in [17]. Due to fragmentation of link resources <ref> [11, 12, 20] </ref>, the high-bandwidth connections experience a larger blocking probability than the low-bandwidth connections across the range of link-state update rates.
Reference: [21] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest, </author> <title> Introduction to Algorithms. </title> <address> Cambridge, MA (New York): </address> <publisher> MIT Press (McGraw-Hill), </publisher> <year> 1990. </year> <month> 19 </month>
Reference-contexts: In an N -node network with L links, pruning has O (L) computational complexity and produces a sparser graph consisting entirely of feasible links. Then, the switch can employ the Dijkstra shortest-path tree algorithm <ref> [21] </ref> to compute a minimum-hop path with the smallest total cost 1 . The Dijkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap. <p> Small values of C reduce network overhead by decreasing the number of bits in the link-state database. More importantly, limiting the number of cost levels can substantially lower the complexity of the Dijkstra shortest-path computation; relatively simple algorithms have O (L + CN ) complexity <ref> [21] </ref>, while more complicated approaches offer even further reduc tion [22].
Reference: [22] <author> B. V. Cherkassky, A. V. Goldberg, and T. Radzik, </author> <title> "Shortest-path algorithms: Theory and experimental evaluation," </title> <journal> Mathematical Programming, </journal> <volume> vol. 73, </volume> <pages> pp. 129-174, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: The Dijkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap. Although advanced data structures can reduce the average and worst-case complexity <ref> [22] </ref>, the shortest-path computation still incurs significant overhead in large networks. <p> More importantly, limiting the number of cost levels can substantially lower the complexity of the Dijkstra shortest-path computation; relatively simple algorithms have O (L + CN ) complexity [21], while more complicated approaches offer even further reduc tion <ref> [22] </ref>. However, coarse-grain link-cost information can degrade performance by limiting the routing algorithm's ability to distinguish between links with different available resources. 2.3 Call Signalling When a new connection request arrives, the source switch applies the three-step routing algorithm to select a suitable path.
Reference: [23] <author> S. Plotkin, </author> <title> "Competitive routing of virtual circuits in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, </volume> <pages> pp. 1128-1136, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Other studies have shown that assigning each link a cost that is exponential in its current utilization results in optimal call blocking probability <ref> [23] </ref>. For a general model of link cost, we employ a function that grows exponentially in the link utilization (c i / u ff i ), where the exponent ff controls how expensive heavily-loaded links look relative to lightly-loaded links.
Reference: [24] <author> S. Floyd and V. Jacobson, </author> <title> "Synchronization of periodic routing messages," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 122-136, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Still, the predictable nature of periodic updates simplifies the provisioning of processor and bandwidth resources for the exchange of link-state information. To prevent synchronization of update messages for different links, each link introduces a small random component to the generation of successive updates <ref> [24] </ref>.
Reference: [25] <author> E. W. Zegura, K. L. Calvert, and S. Bhattacharjee, </author> <title> "How to model an internetwork," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 594-602, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Performance evaluation on small "well-known" networks, such as the NSFnet or MCI backbone, may reveal trends that are particular to the specific topology <ref> [25] </ref>. In addition, depending on the simulated traffic pattern, these nonhomogeneous topologies may unfairly bias the evaluation against static routing algorithms. <p> As an alternative, random graphs could provide more uniform connectivity, although these networks are difficult to study in a systematic manner and may result in unrealistically long paths between certain pairs of nodes <ref> [25] </ref>. Instead, our experiments focus on regular graphs, which permit us to change the network size, diameter, and node degree in a controlled fashion. To verify the trends in the simulation results, we occasionally refer to the results of similar experiments on other "well-known" topologies. <p> This is especially true when link-state information is stale, suggesting a strong relationship between temporal and spatial inaccuracy in the link metrics. To further investigate QoS-routing dynamics for a range of topology and traffic models, we plan to extend our experiments to a broader class of transit-stub networks <ref> [25] </ref> and consider more realistic traffic models, such as bimodal bandwidth requests (e.g., audio and video traffic), a mixture of short-lived and long-lived connections, and non-uniform traffic patterns.
Reference: [26] <author> A. Khanna and J. Zinky, </author> <title> "The revised ARPANET routing metric," </title> <booktitle> in Proceedings of ACM SIGCOMM, </booktitle> <address> (Austin, TX), </address> <pages> pp. 45-56, </pages> <year> 1989. </year>
Reference-contexts: Such link-state flapping has been observed in packet routing networks <ref> [26] </ref>, where path selection can vary on a packet-by-packet basis; the same phenomenon occurs here since the link-state update period is large relative to the connection arrival rates and holding times.
Reference: [27] <author> E. Gelenbe, S. Kotia, and D. Krauss, </author> <title> "Call establishment overload in ATM networks," Performance Evaluation, </title> <year> 1997. </year>
Reference-contexts: Still, the benefit of larger triggers and periods must be weighed against the increase in connection blocking, particularly due to more expensive signalling failures. By blocking connections inside the network, signalling failures consume processing resources and delay the establishment of other connections <ref> [27] </ref>. In addition, a failed connection temporarily holds resources at the upstream links, which may block other connections in the interim [28, 29].
Reference: [28] <author> R.-H. Hwang, J. Kurose, and D. Towsley, </author> <title> "On call processing delay in high speed networks," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 3, </volume> <pages> pp. 628-639, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: By blocking connections inside the network, signalling failures consume processing resources and delay the establishment of other connections [27]. In addition, a failed connection temporarily holds resources at the upstream links, which may block other connections in the interim <ref> [28, 29] </ref>. These effects become more important when connection set-up delay is large, relative to connection holding times, since the state of a downstream link may change while the signalling message propagates through the network.
Reference: [29] <author> D. J. Mitzel, D. Estrin, S. Shenker, and L. Zhang, </author> <title> "A study of reservation dynamics in integrated services packet networks," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 871-879, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: By blocking connections inside the network, signalling failures consume processing resources and delay the establishment of other connections [27]. In addition, a failed connection temporarily holds resources at the upstream links, which may block other connections in the interim <ref> [28, 29] </ref>. These effects become more important when connection set-up delay is large, relative to connection holding times, since the state of a downstream link may change while the signalling message propagates through the network. <p> Finally, the intrinsic staleness of link-state information suggests new policies for alternate routing after a signalling failure. For example, introducing a small delay before trying an alternate route for a connection <ref> [29, 30] </ref> is particularly appropriate when the arrival of fresh link-state information has the potential to improve the routing decision.
Reference: [30] <author> A. Feldmann, </author> <title> "Impact of non-poisson arrival sequences for call admision algorithms with and without delay," </title> <booktitle> in Proceedings of IEEE GLOBECOM, </booktitle> <pages> pp. 617-622, </pages> <month> November </month> <year> 1996. </year> <month> 20 </month>
Reference-contexts: Finally, the intrinsic staleness of link-state information suggests new policies for alternate routing after a signalling failure. For example, introducing a small delay before trying an alternate route for a connection <ref> [29, 30] </ref> is particularly appropriate when the arrival of fresh link-state information has the potential to improve the routing decision.
References-found: 30

