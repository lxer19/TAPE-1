URL: http://www.cs.toronto.edu/~parodi/AI-1994.ps.gz
Refering-URL: http://www.cs.toronto.edu/~parodi/abstract_ai.html
Root-URL: 
Title: Abstract  
Keyword: Key words: polyhedral scene, line drawing, vertex, junction, planar face, polygon, edge, segment.  
Abstract: This paper investigates the computational time complexity of the labeling problem for line drawings of trihedral scenes. It is shown that the class of problems having polynomial complexity is larger than the simple case of line drawings of Legoland scenes (Kirousis and Papadimitriou, 1988). Once the location of the vanishing points in the image plane is known, the labeling problem can be solved in time O(N n) where N is the number of segments and n is the number of vanishing points. The vanishing points can be given a priori, otherwise can, in many cases, be detected by standard techniques from the line drawing itself. The NP-completeness of the labeling problem for line drawings of trihedral scenes (Kirousis and Papadimitriou, 1988) is then due to the lack of knowledge about the vanishing points. which is equivalent to the knowledge of the possible directions for the edges. These results help draw a more accurate boundary between the problems in the interpretation of line drawings that are polynomially solvable and those that are NP-complete. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.A.Huffman. </author> <title> Impossible objects as nonsense sentences. </title> <journal> Machine Intelligence, </journal> <volume> 6 </volume> <pages> 295-323, </pages> <year> 1971. </year>
Reference-contexts: This remarkable performance of the brain does not depend on the presence in the image of shading, texture and other clues associated to the grey levels: it requires a simple line drawing (Huffman <ref> [1] </ref>, Clowes [2]). The interpretation of line drawings is a classical problem in Artificial Intelligence and some of the best results obtained in Machine Vision refer to the complexity of the labeling problem and of the realizability problem. <p> The essential idea is to use properties of perspective projection, such as the location of vanishing points, to reduce the complexity of consistently labeling the segments. This is obtained by an extensive pre-processing exhibiting linear complexity. Outline of the paper This paper is largely influenced by previous work (Huffmann <ref> [1] </ref>; Kirousis & Papadimitriou [7]; Kirousis [8]) and as suggested by these authors, the labeling problem for line drawings is reduced to the problem of the satisfiability of a boolean expression. Kirousis & Papadimitriou reduced 3-SAT to the labeling problem thus showing that the labeling problem is NP-complete 1 . <p> occludes the other. 2 A connected graph G is biconnected if G v is connected for every vertex v of G. 4 In order for a junction to be realizable as the projection of a 3D vertex, the segments belonging to a junction must be labeled according to the Huffman <ref> [1] </ref> and Clowes [2] scheme (Fig. 2) (ignore, for now, the distinction between Y (+) and Y (), E (+) and E (), L (&lt;) and L (&gt;)). (Fig. 2 near here) A legal labeling is the assignment of a label to every segment of the line drawing such that every <p> For example there is only one legal labeling of a Y (+), but four legal labelings for a Y (). The final labeling requires a global analysis of the consistency of allowed labels. As suggested by previous classical papers (Huffman <ref> [1] </ref>, Papadimitriou & Kirousis [7]) this problem can be solved by associating a boolean expression F L to the line drawing L such that L is labelable if and only if F L is satisfiable.
Reference: [2] <author> M.B. Clowes. </author> <title> On seeing things. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 79-116, </pages> <year> 1971. </year>
Reference-contexts: This remarkable performance of the brain does not depend on the presence in the image of shading, texture and other clues associated to the grey levels: it requires a simple line drawing (Huffman [1], Clowes <ref> [2] </ref>). The interpretation of line drawings is a classical problem in Artificial Intelligence and some of the best results obtained in Machine Vision refer to the complexity of the labeling problem and of the realizability problem. <p> 2 A connected graph G is biconnected if G v is connected for every vertex v of G. 4 In order for a junction to be realizable as the projection of a 3D vertex, the segments belonging to a junction must be labeled according to the Huffman [1] and Clowes <ref> [2] </ref> scheme (Fig. 2) (ignore, for now, the distinction between Y (+) and Y (), E (+) and E (), L (&lt;) and L (&gt;)). (Fig. 2 near here) A legal labeling is the assignment of a label to every segment of the line drawing such that every junction is labeled
Reference: [3] <author> K. Sugihara. </author> <title> Mathematical structures of line drawings of polyhedrons. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 4(5) </volume> <pages> 458-469, </pages> <year> 1982. </year>
Reference-contexts: As for computer- and handmade images, for which it may be assumed that there are neither spurious nor undetected segments, Sugihara <ref> [3] </ref> studied extensively the realizability 31 problem for labeled line drawings with misplaced junctions and developed methods for correcting errors on the position of junctions. In our framework, the main problem that can undermine the labeling process is the incorrect assignment of a vanishing point to a segment.
Reference: [4] <author> K. Sugihara. </author> <title> An algebraic approach to shape-from-image problems. </title> <journal> Artificial Intelligence, </journal> (23):59-95, 1984. 
Reference-contexts: The realizability problem is the problem of determining whether a line drawing can be the projection of a three-dimensional polyhedral scene. Sugihara ([3], <ref> [4] </ref>, [5]); see also Shapira [6]) has provided necessary and sufficient conditions for a labeled line drawing to be realizable.
Reference: [5] <author> K. Sugihara. </author> <title> A necessary and sufficient condition for a picture to represent a polyhedral scene. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 6(5) </volume> <pages> 578-586, </pages> <year> 1984. </year>
Reference-contexts: The realizability problem is the problem of determining whether a line drawing can be the projection of a three-dimensional polyhedral scene. Sugihara ([3], [4], <ref> [5] </ref>); see also Shapira [6]) has provided necessary and sufficient conditions for a labeled line drawing to be realizable.
Reference: [6] <author> Ruth Shapira. </author> <title> A note on Sugihara's claim. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 6(1) </volume> <pages> 122-123, </pages> <year> 1984. </year>
Reference-contexts: The realizability problem is the problem of determining whether a line drawing can be the projection of a three-dimensional polyhedral scene. Sugihara ([3], [4], [5]); see also Shapira <ref> [6] </ref>) has provided necessary and sufficient conditions for a labeled line drawing to be realizable. <p> between the segments are smaller than 180 ffi the junction is classified as a Y , otherwise as an E. (Fig.1 near here) Only biconnected 2 line drawings need be considered, in that a line drawing which is not biconnected is clearly non-realizable (see for example the line drawing in <ref> [6] </ref>, Fig. 2). Assuming biconnectivity, a segment s always belongs to the boundary of exactly two distinct polygons p and p 0 (see for example [11]), which we will call the neighbor polygons of s.
Reference: [7] <author> L.M.Kirousis and C.H.Papadimitriou. </author> <title> The complexity of recognizing polyhedral scenes. </title> <journal> Journal of Computer and System Sciences, </journal> (37):14-38, 1988. 
Reference-contexts: He found that the satisfiability of these conditions is equivalent to a problem of linear programming and can therefore be checked in polynomial time (O (n 3:5 )); Kirousis and Papadimitriou <ref> [7] </ref> have shown that the labeling problem for a line drawing representing a scene of solid, trihedral, opaque polyhedra with no cracks is NP-complete, while the same problem has linear complexity whenever the line drawing represents Legoland scenes ("orthohedral scenes" in the words of the authors), that is a world with <p> The vanishing points can be given a priori, in an image-independent way (such as the Legoland hypothesis in <ref> [7] </ref>), or can be computed from the image itself by standard techniques (see for example [10]). If n = 3 and the possible orientations are mutually orthogonal, we reduce to the case of Legoland. <p> This is obtained by an extensive pre-processing exhibiting linear complexity. Outline of the paper This paper is largely influenced by previous work (Huffmann [1]; Kirousis & Papadimitriou <ref> [7] </ref>; Kirousis [8]) and as suggested by these authors, the labeling problem for line drawings is reduced to the problem of the satisfiability of a boolean expression. Kirousis & Papadimitriou reduced 3-SAT to the labeling problem thus showing that the labeling problem is NP-complete 1 . <p> These hypotheses are common in literature, and in particular it was under these hypotheses that the N P -completeness for the labeling problem was proved by Kirousis & Papadimitriou <ref> [7] </ref>. Our further hypothesis is that the edges of the polyhedra can only be oriented according to one of n unit vectors ~e 1 ; . . . ~e n . <p> For example there is only one legal labeling of a Y (+), but four legal labelings for a Y (). The final labeling requires a global analysis of the consistency of allowed labels. As suggested by previous classical papers (Huffman [1], Papadimitriou & Kirousis <ref> [7] </ref>) this problem can be solved by associating a boolean expression F L to the line drawing L such that L is labelable if and only if F L is satisfiable. <p> In <ref> [7] </ref> the boolean variables were used to distinguish between a "" label (ff = 1) and a "!" label (ff = 0). Here their use is different. <p> Here their use is different. The two uses agree in the cases of E (+)- and L (&lt;)-junctions, while they disagree for the Y ()-junctions, for which it takes two variables set to 1 to make a "" label. This difference arises from the fact that in <ref> [7] </ref> no more than two variables were assigned to any junctions. <p> In all we have C 5N . In conclusion, we have M + C 9N . The satisfiability of F (L) can then be checked in time O (N ). The overall complexity is O (N n). 2 This result is an extension of Theorem 3 in <ref> [7] </ref>, and reduces to it whenever n = 3, the 3D edge directions are mutually orthogonal and "perspective projection" is replaced with "orthographic projection". 5 Imperfect line drawings The previous section described an algorithm that checked labelabity under the implicit assumption that the line drawing was perfect (correctly drawn ). <p> Relation to previous work Kirousis & Papadimitriou <ref> [7] </ref> proved that the labeling problem for line drawings representing scenes from a world of opaque, trihedral, solid polyhedra in general position is NP-complete. <p> It is useful to discuss why the proof of NP-completeness does not apply to our case. In <ref> [7] </ref>, the NP-completeness was proved by reducing a well-known NP-complete problem, 3-SAT (in fact, a special case of 3-SAT studied by Lichtenstein [18]), to the labeling problem. <p> For this construction some special-purpose local configurations, or "gadgets", were used. The fundamental gadget is given in Fig. 10A: (Fig. 10 near here) 38 This gadget was used as a part of another gadget which in turn was used for simulating a boolean variable x (see <ref> [7] </ref>). In the general case treated by Kirousis & Papadimitriou there are two possible labelings for this gadget, those shown in Fig. 10B and 11C. The value of x depends upon which of the two labelings is selected. <p> This removes the ambiguity between the labeling of Fig. 10B and Fig. 10C so that the gadget simulating a variable actually simulates a constant and is therefore no use. This only shows, of course, that the proof of NP-completeness in <ref> [7] </ref> does not apply to our case, and is not sufficient to prove that in our case the labeling problem is not NP-complete. This can only be proved by exhibiting a polynomial time algorithm that solves it, as we have done in our paper. <p> Our work can be thought of as an extension of this result: instead of three we have an arbitrary number of known possible directions. As a further generalization, our work is concerned with perspective instead of orthographic projections of polyhedra. It is to be noticed that the algorithm in <ref> [7] </ref> cannot be applied verbatim to the case in which the line drawing represents a perspective projection of a Legoland scene, since in orthographic projection it is not possible for two Y ()-junctions to be adjacent while it is in perspective projection: that is why in orthographic projection it is possible <p> This is the approach followed by Kirousis & Papadimitriou <ref> [7] </ref> who proved that the labeling problem and the realizability problem for Legoland scenes are in P and by Kirousis [8] who considered the case in which a connecting segment is known for every Y - junctions. <p> Throughout the paper we have made the assumption that we know the possible directions of the edges and the optical center, as in <ref> [7] </ref>. All we have used, however, is the location of the vanishing points. It is important to notice that in many cases vanishing points can be computed by the image itself. <p> It is important to notice that in many cases vanishing points can be computed by the image itself. This is easy to do in the case of hand- or computer-made line drawings (as those considered in Sugihara ([3],[4],[5]), Kirousis & Papadimitriou <ref> [7] </ref>, Kirousis [8]), at least if the drawing is good enough. In the case of line drawings of real images which is the most important for computer vision agood amount of work has already been done for the detection of vanishing points. <p> we know that there exist a polynomial time algorithm for the labeling step and a polynomial time algorithm (Sugihara's one) for the realizability problem of a labeled line drawing, but we do not know whether the realizability problem for a line drawing which is not labeled (what Kirousis & Papadimitriou <ref> [7] </ref> call the combined problem) is NP-complete or not, since there can be exponentially many legal labelings (in the number of segments). The dilemma has not been solved yet even for the case of Legoland. Acknowledgments We are indebted to Prof. L. M. Kirousis and Dr. N.
Reference: [8] <author> L.M.Kirousis. </author> <title> Effectively labeling planar projections of polyhedra. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(2) </volume> <pages> 123-130, </pages> <year> 1990. </year>
Reference-contexts: opaque polyhedra with no cracks is NP-complete, while the same problem has linear complexity whenever the line drawing represents Legoland scenes ("orthohedral scenes" in the words of the authors), that is a world with physical edges oriented only according to three orthogonal directions, which are supposed to be known; Kirousis <ref> [8] </ref> has shown that the labeling problem becomes linear if for each Y -junction of the line drawing we know a priori at least one connecting segment, i.e. a segment whose label can either be "+" or "". <p> This is obtained by an extensive pre-processing exhibiting linear complexity. Outline of the paper This paper is largely influenced by previous work (Huffmann [1]; Kirousis & Papadimitriou [7]; Kirousis <ref> [8] </ref>) and as suggested by these authors, the labeling problem for line drawings is reduced to the problem of the satisfiability of a boolean expression. Kirousis & Papadimitriou reduced 3-SAT to the labeling problem thus showing that the labeling problem is NP-complete 1 . <p> The labeling problem, or labelability problem, is the problem of determining whether a legal labeling exists. This concept of labeling can be extended. In Kirousis <ref> [8] </ref> it is required that the labeling be such that: (a) all junctions be realizable as the projection of trihedral 3D vertices (that is, be labeled according to the the Huffman-Clowes scheme); (b) all L-chains (that is, maximal chains of adjacent segments pairwise forming L-junctions) be realizable as the projection of <p> This is true, at least, as long as the additional constraints can be checked without an increase in time complexity, as it is in <ref> [8] </ref>. This paper follows Kirousis' approach. It is required that the labeling satisfy conditions (a) and (b) above; in addition to this, it is required that the 3D realization of junctions and L-chains be consistent with the location of the 5 vanishing points, which is known. <p> The following lemma is, roughly speaking, an extension to perspective projection of Lemma 1 in Kirousis <ref> [8] </ref> (which regarded orthographic projection). <p> Then p is connecting for all segments in i and p 0 is connecting for all segments in i+1 . Then both p and p 0 are connecting for the segment i T Kirousis (1990) has proved in <ref> [8] </ref> the following lemma: Lemma 7 Let be a chain of L junctions. <p> Constraint 3 has been proved in Lemma 3. Constraint 4 is a simple extension of Lemma 5, and is an immediate consequence of the results about coplanar subchains. Before stating Lemma 9 it is useful to define Y E-subgraphs as in Kirousis <ref> [8] </ref>. A YE-subgraph is defined as a maximal subgraph of the line drawing made of adjacent Y and E-junctions. In order to exploit Constraint 2 completely it is useful to extract Y E-subgraphs only after disconnecting the feet of all T - junctions of the line drawing. <p> See also Section 4.2.1 for the difference between Legoland in perspective and in orthographic projection. Our work is also related to Kirousis <ref> [8] </ref>, where it was shown that the labeling problem can be solved by a linear time algorithm if for every Y -junction we know a priori at least one connecting segment. <p> This is the approach followed by Kirousis & Papadimitriou [7] who proved that the labeling problem and the realizability problem for Legoland scenes are in P and by Kirousis <ref> [8] </ref> who considered the case in which a connecting segment is known for every Y - junctions. In this paper we have followed this approach as well, considering the case in which there are only n possible known directions for the edges of the scene. <p> It is important to notice that in many cases vanishing points can be computed by the image itself. This is easy to do in the case of hand- or computer-made line drawings (as those considered in Sugihara ([3],[4],[5]), Kirousis & Papadimitriou [7], Kirousis <ref> [8] </ref>), at least if the drawing is good enough. In the case of line drawings of real images which is the most important for computer vision agood amount of work has already been done for the detection of vanishing points.
Reference: [9] <author> P.Alevizos. </author> <title> A linear algorithm for labeling planar projections of polyhedra. </title> <booktitle> Proc. IEEE/RSJ Int. Workshop on Intelligent Robots and Systems (Osaka, </booktitle> <address> Japan, </address> <year> 1991), </year> <pages> pages 595-601, </pages> <year> 1991. </year>
Reference-contexts: This assumption is ad hoc, but it covers most "natural" images, those for which the connecting segment can be obtained from the image itself. Alevizos <ref> [9] </ref> has shown that the labeling problem can be solved in linear time when the information about the hidden edges of the scene is provided. The purpose of this paper is to obtain a better understanding of the complexity of the labeling problem for line drawings of the polyhedral world.
Reference: [10] <author> M. Straforini, C. Coelho, and M. Campani. </author> <title> Extraction of vanishing points of images of indoor and outdoor scenes. Image Vision Computing. </title> <publisher> In press. </publisher>
Reference-contexts: The vanishing points can be given a priori, in an image-independent way (such as the Legoland hypothesis in [7]), or can be computed from the image itself by standard techniques (see for example <ref> [10] </ref>). If n = 3 and the possible orientations are mutually orthogonal, we reduce to the case of Legoland. The essential idea is to use properties of perspective projection, such as the location of vanishing points, to reduce the complexity of consistently labeling the segments. <p> In the case of line drawings of real images which is the most important for computer vision agood amount of work has already been done for the detection of vanishing points. In the case of real images (see for example Campani-Coelho-Straforini <ref> [10] </ref>, Collins & Weiss [21], Brillault & O'Mahony [22], Nakatani & Kitahashi [23] Barnard [24], Quan & Mohr [25], Horaud [26], Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a
Reference: [11] <author> J.L.Gross and T.W.Tucker. </author> <title> Topological Graph Theory. </title> <publisher> Wiley-Interscience, </publisher> <address> USA, </address> <year> 1987. </year> <month> 46 </month>
Reference-contexts: Assuming biconnectivity, a segment s always belongs to the boundary of exactly two distinct polygons p and p 0 (see for example <ref> [11] </ref>), which we will call the neighbor polygons of s. The scene is assumed to be composed by solid (no hanging faces or edges), trihedral (three faces lying on three different planes meeting at every vertex; no cracks or touching polyhedra) and opaque polyhedra.
Reference: [12] <author> P.Bellutta, G.Collini, A.Verri, and V.Torre. </author> <title> Recovering 3D information from vanishing points. </title> <booktitle> IEEE workshop on interpretation of 3D scenes, </booktitle> <year> 1989. </year>
Reference-contexts: The horizon line segments the image plane into two regions in which visible planes can have only one of the two orientations ~e i ^ ~e j , ~e i ^ ~e j (see also <ref> [12] </ref>). Another important property of horizon lines is illustrated in Fig. 3. 7 (Fig. 3 near here) Consider a vertex V in the 3D space.
Reference: [13] <author> B. Caprile and V.Torre. </author> <title> Using vanishing points for TV camera calibration. </title> <journal> Int. J. Computer Vision, </journal> <year> 1990. </year>
Reference-contexts: Observe that V P i ,V P j and V P k cannot be collinear (if they were, the unit vectors ~e i , ~e j and ~e k would be coplanar (see Caprile & Torre <ref> [13] </ref>) and they could not produce a 3D vertex).
Reference: [14] <author> A.K.Mackworth. </author> <title> Interpreting pictures of polyhedral scenes. </title> <journal> Artificial Intelligence, </journal> (4):121-137, 1984. 
Reference-contexts: ~ G 1 and ~ G 2 , the oriented segment from ~ G 1 to ~ G 2 is perpendicular to s and goes from the projection of face 1 to the projection of face 2 if the edge is convex, vice versa if it is concave (see Mackworth <ref> [14] </ref>) 10 All points lying on f anf f 0 satisfy respectively the equations ~n ( ~ X ~ X 0 ) = 0 0 Choose a point ~ Y on f 0 , which is projected on the image plane into the point ~y = (y 1 ; y 2
Reference: [15] <author> S. A. Cook. </author> <title> The complexity of theorem-proving procedures. </title> <booktitle> Proc. 3rd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 151-158, </pages> <year> 1971. </year>
Reference-contexts: The satisfiability problem for such a kind of proposition is called 2-SAT, and it is in P (3-SAT is NP-complete). We have reduced with linear complexity our labeling problem LAB to 2-SAT, thus showing that LAB cannot be more complex than 2-SAT. Recall the following well-known result by Cook <ref> [15] </ref>. Proposition 3 (Cook, 1971) 2-SAT is polynomially solvable. Let F be a 2-CNF proposition with M variables and C clauses.
Reference: [16] <author> K. Melhorn. </author> <title> Graph Algorithms and NP-completeness. </title> <publisher> EACTS, Springer-Verlag, </publisher> <address> Germany, </address> <year> 1974. </year>
Reference-contexts: Proposition 3 (Cook, 1971) 2-SAT is polynomially solvable. Let F be a 2-CNF proposition with M variables and C clauses. An algorithm of complexity O (M + C) solving 2-SAT by reducing it to the detection of the strongly connected components of a digraph can be found in Melhorn <ref> [16] </ref>. We are now in a position to state: Proposition 4 Let L be a line drawing.
Reference: [17] <author> M.Straforini, C.Coelho, M.Campani, and V.Torre. </author> <title> The recovery and understanding of a line drawing from indoor scenes. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 14(2) </volume> <pages> 298-303, </pages> <year> 1992. </year>
Reference-contexts: It is not possible to address here all of the problems related with the extraction of a line drawing from a real image (spurious segments, undetected segments, misplaced or misclassified junctions) for which suitable heuristics must be developed (this has been made, for instance, in Straforini et al. <ref> [17] </ref>). As for computer- and handmade images, for which it may be assumed that there are neither spurious nor undetected segments, Sugihara [3] studied extensively the realizability 31 problem for labeled line drawings with misplaced junctions and developed methods for correcting errors on the position of junctions.
Reference: [18] <author> D. Lichtenstein. </author> <title> Planar formulae and their uses. </title> <journal> SIAM J. Computing, </journal> (11):329-343, 1982. 
Reference-contexts: It is useful to discuss why the proof of NP-completeness does not apply to our case. In [7], the NP-completeness was proved by reducing a well-known NP-complete problem, 3-SAT (in fact, a special case of 3-SAT studied by Lichtenstein <ref> [18] </ref>), to the labeling problem. Given a 3-CNF formula F with n variables x 1 ; . . . x n and m clauses, a line drawing L, such that L was labelable if and only if F was satisfiable, was constructed.
Reference: [19] <author> M.R.Garey and D.S.Johnson. </author> <title> Computers and Intractability. </title> <publisher> W.H.Freeman and co., </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Even when the objects are polyhedra the problem is known to be difficult, as proved by the NP-completeness result of Kirousis & Papadimitriou ([7]). As Garey & Johnson <ref> [19] </ref> put it, when we find that a certain problem is NP-complete we can look for algorithms with good average running time in most cases although with worst-case complexity an example is the Waltz [20] algorithm, which has been developed before the discovery that the labeling problem was NP-complete; otherwise we
Reference: [20] <author> D. Waltz. </author> <title> Understanding line-drawings of scenes with shadows. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 79-116, </pages> <year> 1971. </year>
Reference-contexts: As Garey & Johnson [19] put it, when we find that a certain problem is NP-complete we can look for algorithms with good average running time in most cases although with worst-case complexity an example is the Waltz <ref> [20] </ref> algorithm, which has been developed before the discovery that the labeling problem was NP-complete; otherwise we can look for a meaningful restriction of the problem that is no more NP-complete. <p> Extensions The hypothesis of a finite number of possible directions for the edges of the objects in the scene is very useful and can be applied to a number of different situations which have been addressed in the past in the general case: polyhedra with cracks (Waltz <ref> [20] </ref>), Origami constructions (Kanade [28]). Other generalizations could concern the abandonment of the trihedricity hypothesis. Further research is needed to investigate the realizability problem for line drawings representing a world with a finite number of directions.
Reference: [21] <author> R. Collins and R. Weiss. </author> <title> An efficient and accurate method for computing vanishing points. </title> <booktitle> Proc. Opt. Soc. Amer., Workshop on Image Understanding and Machine Vision, </booktitle> <volume> 14 </volume> <pages> 92-94, </pages> <year> 1989. </year>
Reference-contexts: In the case of line drawings of real images which is the most important for computer vision agood amount of work has already been done for the detection of vanishing points. In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss <ref> [21] </ref>, Brillault & O'Mahony [22], Nakatani & Kitahashi [23] Barnard [24], Quan & Mohr [25], Horaud [26], Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure
Reference: [22] <author> B. Brillault and O'Mahony. </author> <title> New method for vanishing points detection. CVGIP: </title> <booktitle> Image Understanding, </booktitle> <volume> 54(2) </volume> <pages> 289-300, </pages> <year> 1991. </year>
Reference-contexts: In the case of line drawings of real images which is the most important for computer vision agood amount of work has already been done for the detection of vanishing points. In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss [21], Brillault & O'Mahony <ref> [22] </ref>, Nakatani & Kitahashi [23] Barnard [24], Quan & Mohr [25], Horaud [26], Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure is effective when we
Reference: [23] <author> H. Nakatani and T. Kitahashi. </author> <title> Determination of vanishing point in outdoor scene. </title> <journal> Trans. IECE, </journal> <volume> 64(5) </volume> <pages> 357-358, </pages> <year> 1981. </year>
Reference-contexts: In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss [21], Brillault & O'Mahony [22], Nakatani & Kitahashi <ref> [23] </ref> Barnard [24], Quan & Mohr [25], Horaud [26], Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure is effective when we have a small number
Reference: [24] <author> S. T. Barnard. </author> <title> Interpreting prospective images. </title> <journal> A.I. Journal, </journal> <volume> 21(4) </volume> <pages> 435-462, </pages> <year> 1983. </year>
Reference-contexts: In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss [21], Brillault & O'Mahony [22], Nakatani & Kitahashi [23] Barnard <ref> [24] </ref>, Quan & Mohr [25], Horaud [26], Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure is effective when we have a small number of vanishing
Reference: [25] <author> Quan and R. Mohr. </author> <title> Determining perspective structures using hierar-chical hough transformation. </title> <journal> Pattern Recognition Letters, </journal> <volume> 9 </volume> <pages> 279-286, </pages> <year> 1989. </year>
Reference-contexts: In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss [21], Brillault & O'Mahony [22], Nakatani & Kitahashi [23] Barnard [24], Quan & Mohr <ref> [25] </ref>, Horaud [26], Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure is effective when we have a small number of vanishing points and a great
Reference: [26] <author> R. Horaud. </author> <title> New methods for matching 3D objects with single perspective views. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 9 </volume> <pages> 401-412, </pages> <year> 1987. </year>
Reference-contexts: In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss [21], Brillault & O'Mahony [22], Nakatani & Kitahashi [23] Barnard [24], Quan & Mohr [25], Horaud <ref> [26] </ref>, Magee & Aggarwal [27]), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure is effective when we have a small number of vanishing points and a great number of
Reference: [27] <author> M. J. Magee and J. K. Aggarwal. </author> <title> Determining vanishing points form perspective images. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 26 </volume> <pages> 256-267, </pages> <year> 1984. </year>
Reference-contexts: In the case of real images (see for example Campani-Coelho-Straforini [10], Collins & Weiss [21], Brillault & O'Mahony [22], Nakatani & Kitahashi [23] Barnard [24], Quan & Mohr [25], Horaud [26], Magee & Aggarwal <ref> [27] </ref>), which is the most delicate since the line drawing extracted by a photograph with the algorithms of edge detections is seldom a faithful representation of a scene, 40 the procedure is effective when we have a small number of vanishing points and a great number of lines converging to every

References-found: 27

