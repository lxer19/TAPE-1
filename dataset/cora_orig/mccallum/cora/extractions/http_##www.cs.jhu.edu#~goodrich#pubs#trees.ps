URL: http://www.cs.jhu.edu/~goodrich/pubs/trees.ps
Refering-URL: http://www.cs.jhu.edu/~goodrich/pubs/index.html
Root-URL: http://www.cs.jhu.edu
Email: ag@cs.brown.edu  goodrich@cs.jhu.edu  rt@cs.brown.edu  
Title: Planar Upward Tree Drawings with Optimal Area  
Author: Ashim Garg Michael T. Goodrich Roberto Tamassia 
Keyword: Key Words Graph drawing, layout, upward drawing, tree, area, grid.  
Date: September 23, 1993  
Address: Providence, RI 02912-1910  Baltimore, MD 21218-2694  Providence, RI 02912-1910  
Affiliation: Dept. of Computer Science Brown University  Dept. of Computer Science The Johns Hopkins University  Dept. of Computer Science Brown University  
Abstract: Rooted trees are usually drawn planar and upward, i.e., without crossings and without any parent placed below its child. In this paper we investigate the area requirement of planar upward drawings of rooted trees. We give tight upper and lower bounds on the area of various types of drawings, and provide linear-time algorithms for constructing optimal area drawings. Let T be a bounded-degree rooted tree with N nodes. Our results are summarized as follows: * We show that T admits a planar polyline upward grid drawing with area O(N ), and with width O(N ff ) for any prespecified constant ff such that 0 &lt; ff &lt; 1. * If T is a binary tree, we show that T admits a planar orthogonal upward grid drawing with area O(N log log N ). * We show that if T is ordered, it admits an O(N log N )-area planar upward grid drawing that preserves the left-to-right ordering of the children of each node. * We show that all of the above area bounds are asymptotically optimal in the worst case. * We present O(N )-time algorithms for constructing each of the above types of drawings of T with asymptotically optimal area. * We report on the experimentation of our algorithm for constructing planar polyline upward fl Research at Brown University supported in part by the National Science Foundation under grant CCR-9007851, by the U.S. Army Research Office under grant DAAL03-91-G-0035, and by the Office of Naval Research and the Defense Advanced Research Projects Agency under contract N00014-91-J-4052, ARPA order 8225. Research at The Johns Hopkins University supported in part by the National Science Foundation under Grants CCR-9300079, CCR-9003299 and IRI-9116843, and by the NSF and DARPA under Grant CCR-8908092. An extended abstract of this paper was presented at the Ninth Annual ACM Symposium on Computational Geometry, San Diego, CA, May 19-21, 1993. grid drawings, performed on trees with up to 24 million nodes.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bhatt and S. Cosmadakis, </author> <title> "The Complexity of Minimizing Wire Lengths in VLSI Layouts," </title> <journal> Information Processing Letters, </journal> <volume> vol. 25, </volume> <year> 1987, </year> <pages> pp. 263-267. </pages>
Reference-contexts: In addition, the issue is clouded somewhat by the fact that producing the exact minimization of the area of the drawing of a tree is NP-hard under several drawing conventions <ref> [1, 4, 13] </ref>. Nevertheless, Crescenzi et al. give O (N ) area planar straight-line upward grid drawings of complete binary trees and Fibonacci trees. They do not, however, give a general construction for other types of trees.
Reference: [2] <author> S.N. Bhatt and F.T. Leighton, </author> <title> "A Framework for Solving VLSI Graph Layout Problems," </title> <journal> J. Computer Systems Sciences, </journal> <volume> vol. 28, </volume> <year> 1984, </year> <pages> pp. 300-343. </pages>
Reference-contexts: This is motivated by the finite resolution of all of our current technologies for rendering a drawing, and also by circuit-area optimization criteria in VLSI layout <ref> [2, 19, 28] </ref>. In the following, we assume the existence of a resolution rule that implies a finite minimum area for the drawing of any graph. A typical resolution rule is to require grid drawings, where the vertices and bends of the edges have integer coordinates. <p> A grid drawing is such that the vertices and bends along the edges have integer coordinates. Planar drawings, where edges do not intersect, are especially important because they improve the readability of the drawing, and, in the context of VLSI layouts, they simplify the design process <ref> [2, 19, 28] </ref>. An upward drawing of a directed graph is such that every edge is a curve monotonically nondecreasing in the vertical direction (when traversed along the direction of the edge). polyline; (c) orthogonal.
Reference: [3] <author> J.A. Bondy and U.S.R. Murty, </author> <title> Graph Theory with Applications, </title> <publisher> North-Holland, </publisher> <year> 1976. </year>
Reference: [4] <author> F.J. Bradenburg, </author> <title> "Nice Drawings of Graphs and Trees are Computationally Hard," </title> <type> Technical Report MIP-8820, </type> <institution> Fakultat fur Mathematik und Informatik, Univ. Passau, </institution> <year> 1988. </year>
Reference-contexts: In addition, the issue is clouded somewhat by the fact that producing the exact minimization of the area of the drawing of a tree is NP-hard under several drawing conventions <ref> [1, 4, 13] </ref>. Nevertheless, Crescenzi et al. give O (N ) area planar straight-line upward grid drawings of complete binary trees and Fibonacci trees. They do not, however, give a general construction for other types of trees.
Reference: [5] <author> R.P. Brent and H.T. Kung, </author> <title> "On the Area of Binary Tree Layouts," </title> <journal> Information Processing Letters, </journal> <volume> vol. 11, </volume> <year> 1980, </year> <pages> pp. 521-534. </pages>
Reference-contexts: However, Brent and Kung <ref> [5] </ref> show that if the leaves of an N -node complete binary tree are constrained to be on the convex hull of the drawing, then the drawing needs (N log N ) area. <p> It is also interesting to observe that the upward requirement penalizes the area less than the requirement of placing the leaves on the same horizontal line, for which the (N log N ) area bound also applies <ref> [5] </ref>. We summarize the previous and current bounds on planar grid tree drawing in Table 1. 2 Preliminaries In this section we give definitions that will be used throughout the paper. <p> fi (N log N ) [8] Upward Ordered Polyline - fi (N log N ) Upward Straight-Line (complete binary trees and Fi-bonacci trees) O (N ) [8] Non-Upward Orthogonal fi (N ) [19, 28] Upward Orthogonal - fi (N log log N ) Leaves-on-Hull Orthogonal fi (N log N ) <ref> [5] </ref> Table 1 Area-requirements for planar grid tree drawings. not vertices of G. is an orthogonal drawing (see Fig. 1.c) if each edge is a chain of alternating horizontal and vertical segments. A grid drawing is such that the vertices and bends along the edges have integer coordinates.
Reference: [6] <author> B. Chazelle, </author> <title> "A Theorem on Polygon Cutting with Applications," </title> <booktitle> Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 339-349. </pages>
Reference-contexts: tree which is a subgraph of T . (Note the difference between partial tree and subtree.) A separator of a binary tree T is an edge of T whose removal divides T into two partial trees, each with at least N=3 nodes and at most 2N=3 nodes (e.g., see Chazelle <ref> [6] </ref>).
Reference: [7] <author> R.F. Cohen, G. Di Battista, R. Tamassia, I.G. Tollis, and P. Bertolazzi, </author> <title> "A Framework for Dynamic Graph Drawing," </title> <booktitle> Proc. ACM Symp. on Computational Geometry, </booktitle> <year> 1992, </year> <pages> pp. 261-270. 17 </pages>
Reference-contexts: For example, we may wish to display all the symmetries in G, or, if G contains a Hamiltonian cycle, we may wish to draw G as a regular polygon with chords. The interest in this area has been growing significantly of late (see, e.g., <ref> [7, 11, 16, 17, 20] </ref>). For example, the annotated bibliography maintained by Di Battista, Eades, and Tamassia [10] mentions more than 250 papers in graph drawing. Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout. <p> being investigated of late, such as representing G by means of visibility between geometric figures in the plane (e.g., see [24, 26] and O'Rourke's computational geometry column [21]), or dynamically maintaining a drawing under a sequence of insertions and deletions of vertices and edges, as studied by Cohen et al. <ref> [7] </ref>. 1.1 The Problem An important criterion for a drawing of a graph is that it take up as little area as possible.
Reference: [8] <author> P. Crescenzi, G. Di Battista, and A. Piperno, </author> <title> "A Note on Optimal Area Algorithms for Upward Drawings of Binary Trees," </title> <note> to appear in Computational Geometry: Theory and Applications. </note>
Reference-contexts: Thus, a natural question is whether O (N ) area is still achievable for planar upward drawings. 1 Crescenzi, Di Battista, and Piperno <ref> [8] </ref> have recently provided a negative answer to this question for the case of strictly upward grid drawings, where the nodes have integer coordinates, and the parent of a node has y-coordinate strictly greater than the ones of its children. <p> (see Fig. 1.a) if each edge is a straight-line segment. is a polyline drawing (see Fig. 1.b) if each edge is a polygonal chain, and we call bends the intermediate vertices of the chain that are 2 Tree Type Previous Bounds Our Bounds Upward Polyline O (N log N ) <ref> [8] </ref> fi (N ) Strictly-Upward Straight-Line fi (N log N ) [8] Upward Ordered Polyline - fi (N log N ) Upward Straight-Line (complete binary trees and Fi-bonacci trees) O (N ) [8] Non-Upward Orthogonal fi (N ) [19, 28] Upward Orthogonal - fi (N log log N ) Leaves-on-Hull Orthogonal <p> a polyline drawing (see Fig. 1.b) if each edge is a polygonal chain, and we call bends the intermediate vertices of the chain that are 2 Tree Type Previous Bounds Our Bounds Upward Polyline O (N log N ) <ref> [8] </ref> fi (N ) Strictly-Upward Straight-Line fi (N log N ) [8] Upward Ordered Polyline - fi (N log N ) Upward Straight-Line (complete binary trees and Fi-bonacci trees) O (N ) [8] Non-Upward Orthogonal fi (N ) [19, 28] Upward Orthogonal - fi (N log log N ) Leaves-on-Hull Orthogonal fi (N log N ) [5] Table 1 Area-requirements for planar <p> the chain that are 2 Tree Type Previous Bounds Our Bounds Upward Polyline O (N log N ) <ref> [8] </ref> fi (N ) Strictly-Upward Straight-Line fi (N log N ) [8] Upward Ordered Polyline - fi (N log N ) Upward Straight-Line (complete binary trees and Fi-bonacci trees) O (N ) [8] Non-Upward Orthogonal fi (N ) [19, 28] Upward Orthogonal - fi (N log log N ) Leaves-on-Hull Orthogonal fi (N log N ) [5] Table 1 Area-requirements for planar grid tree drawings. not vertices of G. is an orthogonal drawing (see Fig. 1.c) if each edge is a chain of <p> There is still a gap between the trivial (N ) lower bound and the O (N log N ) upper bound given in <ref> [8] </ref>. It would also be interesting to extend our results to unbounded degree trees.
Reference: [9] <author> G. Di Battista, R. Tamassia, and I.G. Tollis, </author> <title> "Area Requirement and Symmetry Display of Planar Upward Drawings," </title> <journal> Discrete & Computational Geometry, </journal> <volume> vol. 7, </volume> <year> 1992, </year> <pages> pp. 381-40. </pages>
Reference-contexts: A typical resolution rule is to require grid drawings, where the vertices and bends of the edges have integer coordinates. Indeed, this consideration recently motivated the re-examination of straight-line drawings of planar directed graphs, because they require exponentially-large area <ref> [9] </ref>, whereas several researchers have recently shown that planar graph drawings require only quadratic area, and that such drawings can be produced in linear time [12, 17, 25].
Reference: [10] <author> G. Di Battista, P. Eades and R. Tamassia, </author> <title> "Algorithms for Drawing Graphs: An Annotated Bibliography," </title> <note> revised version in preparation, 1993. See also Technical Report CS-89-09, </note> <institution> Dept. of Computer Sci., Brown Univ., </institution> <year> 1989. </year>
Reference-contexts: The interest in this area has been growing significantly of late (see, e.g., [7, 11, 16, 17, 20]). For example, the annotated bibliography maintained by Di Battista, Eades, and Tamassia <ref> [10] </ref> mentions more than 250 papers in graph drawing. Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout.
Reference: [11] <author> G. Di Battista and L. Vismara, </author> <title> "Angles of Planar Triangular Graphs," </title> <booktitle> Proc. ACM Symp. on Theory of Computing, </booktitle> <year> 1993. </year>
Reference-contexts: For example, we may wish to display all the symmetries in G, or, if G contains a Hamiltonian cycle, we may wish to draw G as a regular polygon with chords. The interest in this area has been growing significantly of late (see, e.g., <ref> [7, 11, 16, 17, 20] </ref>). For example, the annotated bibliography maintained by Di Battista, Eades, and Tamassia [10] mentions more than 250 papers in graph drawing. Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout. <p> Perhaps the most studied graph drawing problem is that of producing a planar drawing of a planar graph (e.g., see the classic work of Tutte on planar convex drawings [27] and the recent results on planar straight-line drawings <ref> [11, 12, 17, 20, 25] </ref>).
Reference: [12] <author> H. de Fraysseix, J. Pach, and R. Pollack, </author> <title> "Small Sets Supporting Fary Embeddings of Planar Graphs," </title> <booktitle> Proc. 20th ACM Symp. on Theory of Computing, </booktitle> <year> 1988, </year> <pages> pp. 426-433. </pages>
Reference-contexts: Perhaps the most studied graph drawing problem is that of producing a planar drawing of a planar graph (e.g., see the classic work of Tutte on planar convex drawings [27] and the recent results on planar straight-line drawings <ref> [11, 12, 17, 20, 25] </ref>). <p> Indeed, this consideration recently motivated the re-examination of straight-line drawings of planar directed graphs, because they require exponentially-large area [9], whereas several researchers have recently shown that planar graph drawings require only quadratic area, and that such drawings can be produced in linear time <ref> [12, 17, 25] </ref>. Moreover, some very nice recent work by Kant [17] shows that a number of other aesthetic criteria (such as convex faces) can be satisfied for a planar drawing while still keeping the area quadratic. In this paper we study area-efficient drawings of rooted trees.
Reference: [13] <author> P. Eades, T. Lin, and X. Lin, </author> <title> "Two Tree Drawing Conventions," </title> <type> Technical Report 174, </type> <institution> Key Centre for Software Technology, Dept. of Computer Science, The Univ. of Queensland, </institution> <year> 1990. </year>
Reference-contexts: In addition, the issue is clouded somewhat by the fact that producing the exact minimization of the area of the drawing of a tree is NP-hard under several drawing conventions <ref> [1, 4, 13] </ref>. Nevertheless, Crescenzi et al. give O (N ) area planar straight-line upward grid drawings of complete binary trees and Fibonacci trees. They do not, however, give a general construction for other types of trees.
Reference: [14] <author> M. Formann, T. Hagerup, J. Haralambides, M. Kaufmann, F.T. Leighton, A. Simvonis, E. Welzl, and G. Woeginger, </author> <title> "Drawing Graphs in the Plane with High Resolution," </title> <booktitle> Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 86-95. </pages>
Reference-contexts: Previous results on the angular resolution of (non upward) drawings of graphs appear in <ref> [14, 20] </ref>. Acknowledgement We would like to thank Gunter Rote for useful comments.
Reference: [15] <author> L.J. Guibas, J. Hershberger, D. Leven, M. Sharir, and R.E. Tarjan, </author> <title> "Linear-Time Algorithms for Visibility and Shortest Path Problems inside Triangulated Simple Polygons," </title> <journal> Algorithmica, </journal> <volume> vol. 2, </volume> <year> 1987, </year> <pages> pp. 209-233. </pages>
Reference-contexts: Tree S has 2N 1 nodes, height at most log 3=2 N , and can be constructed in O (N ) time (e.g., see Guibas et al. <ref> [15] </ref>). 11 algorithm of Lemma 2. (b) A tree T and the separators that join blocks. (c) Truncated separator tree of T . (d) Drawing of T , where the rectangles represent the drawings of the blocks.
Reference: [16] <author> M. Furer, B. Raghavachari, X. He, and M.-Y. Kao, </author> <title> "O(n log n)-Work Parallel Algorithms for Straight-Line Grid Embeddings of Planar Graphs," </title> <booktitle> Proc. ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1992. </year>
Reference-contexts: For example, we may wish to display all the symmetries in G, or, if G contains a Hamiltonian cycle, we may wish to draw G as a regular polygon with chords. The interest in this area has been growing significantly of late (see, e.g., <ref> [7, 11, 16, 17, 20] </ref>). For example, the annotated bibliography maintained by Di Battista, Eades, and Tamassia [10] mentions more than 250 papers in graph drawing. Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout.
Reference: [17] <author> G. Kant, </author> <title> "Drawing Planar Graphs Using the lmc-Ordering," </title> <booktitle> Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1992, </year> <pages> pp. 101-110. </pages>
Reference-contexts: For example, we may wish to display all the symmetries in G, or, if G contains a Hamiltonian cycle, we may wish to draw G as a regular polygon with chords. The interest in this area has been growing significantly of late (see, e.g., <ref> [7, 11, 16, 17, 20] </ref>). For example, the annotated bibliography maintained by Di Battista, Eades, and Tamassia [10] mentions more than 250 papers in graph drawing. Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout. <p> Perhaps the most studied graph drawing problem is that of producing a planar drawing of a planar graph (e.g., see the classic work of Tutte on planar convex drawings [27] and the recent results on planar straight-line drawings <ref> [11, 12, 17, 20, 25] </ref>). <p> Indeed, this consideration recently motivated the re-examination of straight-line drawings of planar directed graphs, because they require exponentially-large area [9], whereas several researchers have recently shown that planar graph drawings require only quadratic area, and that such drawings can be produced in linear time <ref> [12, 17, 25] </ref>. Moreover, some very nice recent work by Kant [17] shows that a number of other aesthetic criteria (such as convex faces) can be satisfied for a planar drawing while still keeping the area quadratic. In this paper we study area-efficient drawings of rooted trees. <p> Moreover, some very nice recent work by Kant <ref> [17] </ref> shows that a number of other aesthetic criteria (such as convex faces) can be satisfied for a planar drawing while still keeping the area quadratic. In this paper we study area-efficient drawings of rooted trees.
Reference: [18] <author> G. Kant, G. Liotta, R. Tamassia, and I.G. Tollis, </author> <title> "Area Requirement of Visibility Representations of Trees," </title> <booktitle> Proc. 5th Canadian Conf. on Computational Geometry, </booktitle> <pages> pp. </pages> <month> 192-197 </month> <year> (1993). </year>
Reference-contexts: Nevertheless, Crescenzi et al. give O (N ) area planar straight-line upward grid drawings of complete binary trees and Fibonacci trees. They do not, however, give a general construction for other types of trees. Related results on the area requirement of visibility representations of trees are given in <ref> [18] </ref>. 1.3 Our Results In this paper we show that, for any rooted bounded-degree tree T with N nodes, one can construct a planar upward grid drawing of T with O (N ) area in O (N ) time, and that such drawing can have width O (N ff ), for
Reference: [19] <author> C.E. Leiserson, </author> <title> "Area-Efficient Graph Layouts (for VLSI)," </title> <booktitle> Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1980, </year> <pages> pp. 270-281. </pages>
Reference-contexts: This is motivated by the finite resolution of all of our current technologies for rendering a drawing, and also by circuit-area optimization criteria in VLSI layout <ref> [2, 19, 28] </ref>. In the following, we assume the existence of a resolution rule that implies a finite minimum area for the drawing of any graph. A typical resolution rule is to require grid drawings, where the vertices and bends of the edges have integer coordinates. <p> The difficulty is that most of the known techniques for constructing planar upward drawings of trees require (N 2 ) area in the worst case [22, 23]. 1.2 Previous Work If we relax the upward requirement, however, then, as independently shown by Leiserson <ref> [19] </ref> and Valiant [28], one can construct an O (N )-area planar orthogonal grid drawing of an N -node tree T , where the nodes are placed at integer grid points and the edges follow paths of the grid. <p> Type Previous Bounds Our Bounds Upward Polyline O (N log N ) [8] fi (N ) Strictly-Upward Straight-Line fi (N log N ) [8] Upward Ordered Polyline - fi (N log N ) Upward Straight-Line (complete binary trees and Fi-bonacci trees) O (N ) [8] Non-Upward Orthogonal fi (N ) <ref> [19, 28] </ref> Upward Orthogonal - fi (N log log N ) Leaves-on-Hull Orthogonal fi (N log N ) [5] Table 1 Area-requirements for planar grid tree drawings. not vertices of G. is an orthogonal drawing (see Fig. 1.c) if each edge is a chain of alternating horizontal and vertical segments. <p> A grid drawing is such that the vertices and bends along the edges have integer coordinates. Planar drawings, where edges do not intersect, are especially important because they improve the readability of the drawing, and, in the context of VLSI layouts, they simplify the design process <ref> [2, 19, 28] </ref>. An upward drawing of a directed graph is such that every edge is a curve monotonically nondecreasing in the vertical direction (when traversed along the direction of the edge). polyline; (c) orthogonal.
Reference: [20] <author> S.M. Malitz and A. Papakostas, </author> <title> "On the Angular Resolution of Planar Graphs," </title> <booktitle> Proc. ACM Symp. on Theory of Computing, </booktitle> <year> 1992, </year> <pages> pp. 527-538. </pages>
Reference-contexts: For example, we may wish to display all the symmetries in G, or, if G contains a Hamiltonian cycle, we may wish to draw G as a regular polygon with chords. The interest in this area has been growing significantly of late (see, e.g., <ref> [7, 11, 16, 17, 20] </ref>). For example, the annotated bibliography maintained by Di Battista, Eades, and Tamassia [10] mentions more than 250 papers in graph drawing. Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout. <p> Perhaps the most studied graph drawing problem is that of producing a planar drawing of a planar graph (e.g., see the classic work of Tutte on planar convex drawings [27] and the recent results on planar straight-line drawings <ref> [11, 12, 17, 20, 25] </ref>). <p> Previous results on the angular resolution of (non upward) drawings of graphs appear in <ref> [14, 20] </ref>. Acknowledgement We would like to thank Gunter Rote for useful comments.
Reference: [21] <author> J. O'Rourke, </author> <note> "Computational Geometry Column 18," to appear in Int. J. on Computational Geometry and Applications, </note> <year> 1992. </year>
Reference-contexts: But there are a variety of other interesting graph drawing problems that are also being investigated of late, such as representing G by means of visibility between geometric figures in the plane (e.g., see [24, 26] and O'Rourke's computational geometry column <ref> [21] </ref>), or dynamically maintaining a drawing under a sequence of insertions and deletions of vertices and edges, as studied by Cohen et al. [7]. 1.1 The Problem An important criterion for a drawing of a graph is that it take up as little area as possible.
Reference: [22] <author> E. Reingold and J. Tilford, </author> <title> "Tidier Drawing of Trees," </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> vol. SE-7, </volume> <year> 1981, </year> <pages> pp. 223-228. </pages>
Reference-contexts: The difficulty is that most of the known techniques for constructing planar upward drawings of trees require (N 2 ) area in the worst case <ref> [22, 23] </ref>. 1.2 Previous Work If we relax the upward requirement, however, then, as independently shown by Leiserson [19] and Valiant [28], one can construct an O (N )-area planar orthogonal grid drawing of an N -node tree T , where the nodes are placed at integer grid points and the
Reference: [23] <author> K.J. Supowit and E.M. Reingold, </author> <title> "The Complexity of Drawing Trees Nicely," </title> <journal> Acta Informatica, </journal> <volume> vol. 18, </volume> <year> 1983, </year> <pages> pp. 377-392. </pages>
Reference-contexts: The difficulty is that most of the known techniques for constructing planar upward drawings of trees require (N 2 ) area in the worst case <ref> [22, 23] </ref>. 1.2 Previous Work If we relax the upward requirement, however, then, as independently shown by Leiserson [19] and Valiant [28], one can construct an O (N )-area planar orthogonal grid drawing of an N -node tree T , where the nodes are placed at integer grid points and the
Reference: [24] <author> P. Rosenstiehl and R.E. Tarjan, </author> <title> "Rectilinear Planar Layouts of Planar Graphs and Bipolar Orientations," </title> <journal> Discrete & Computational Geometry, </journal> <volume> vol. 1, </volume> <year> 1986, </year> <pages> pp. 343-353. </pages>
Reference-contexts: But there are a variety of other interesting graph drawing problems that are also being investigated of late, such as representing G by means of visibility between geometric figures in the plane (e.g., see <ref> [24, 26] </ref> and O'Rourke's computational geometry column [21]), or dynamically maintaining a drawing under a sequence of insertions and deletions of vertices and edges, as studied by Cohen et al. [7]. 1.1 The Problem An important criterion for a drawing of a graph is that it take up as little area
Reference: [25] <author> W. Schnyder, </author> <title> "Embedding Planar Graphs on the Grid," </title> <booktitle> Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1990, </year> <pages> pp. 138-148. </pages>
Reference-contexts: Perhaps the most studied graph drawing problem is that of producing a planar drawing of a planar graph (e.g., see the classic work of Tutte on planar convex drawings [27] and the recent results on planar straight-line drawings <ref> [11, 12, 17, 20, 25] </ref>). <p> Indeed, this consideration recently motivated the re-examination of straight-line drawings of planar directed graphs, because they require exponentially-large area [9], whereas several researchers have recently shown that planar graph drawings require only quadratic area, and that such drawings can be produced in linear time <ref> [12, 17, 25] </ref>. Moreover, some very nice recent work by Kant [17] shows that a number of other aesthetic criteria (such as convex faces) can be satisfied for a planar drawing while still keeping the area quadratic. In this paper we study area-efficient drawings of rooted trees.
Reference: [26] <author> R. Tamassia and I.G. Tollis, </author> <title> "A Unified Approach to Visibility Representations of Planar Graphs," </title> <journal> Discrete & Computational Geometry, </journal> <volume> vol. 1, </volume> <year> 1986, </year> <pages> pp. 321-341. </pages>
Reference-contexts: But there are a variety of other interesting graph drawing problems that are also being investigated of late, such as representing G by means of visibility between geometric figures in the plane (e.g., see <ref> [24, 26] </ref> and O'Rourke's computational geometry column [21]), or dynamically maintaining a drawing under a sequence of insertions and deletions of vertices and edges, as studied by Cohen et al. [7]. 1.1 The Problem An important criterion for a drawing of a graph is that it take up as little area
Reference: [27] <author> W.T. Tutte, </author> <title> "How to Draw a Graph," </title> <journal> Proc. London Math Soc., </journal> <volume> vol. 3, </volume> <year> 1963, </year> <pages> pp. 743-768. </pages>
Reference-contexts: Important domains of application for graph drawing algorithms include software engineering, project management, visual languages, and VLSI layout. Perhaps the most studied graph drawing problem is that of producing a planar drawing of a planar graph (e.g., see the classic work of Tutte on planar convex drawings <ref> [27] </ref> and the recent results on planar straight-line drawings [11, 12, 17, 20, 25]).
Reference: [28] <author> L. Valiant, </author> <title> "Universality Considerations in VLSI Circuits," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. C-30, </volume> <year> 1981, </year> <pages> pp. 135-140. </pages>
Reference-contexts: This is motivated by the finite resolution of all of our current technologies for rendering a drawing, and also by circuit-area optimization criteria in VLSI layout <ref> [2, 19, 28] </ref>. In the following, we assume the existence of a resolution rule that implies a finite minimum area for the drawing of any graph. A typical resolution rule is to require grid drawings, where the vertices and bends of the edges have integer coordinates. <p> The difficulty is that most of the known techniques for constructing planar upward drawings of trees require (N 2 ) area in the worst case [22, 23]. 1.2 Previous Work If we relax the upward requirement, however, then, as independently shown by Leiserson [19] and Valiant <ref> [28] </ref>, one can construct an O (N )-area planar orthogonal grid drawing of an N -node tree T , where the nodes are placed at integer grid points and the edges follow paths of the grid. <p> Type Previous Bounds Our Bounds Upward Polyline O (N log N ) [8] fi (N ) Strictly-Upward Straight-Line fi (N log N ) [8] Upward Ordered Polyline - fi (N log N ) Upward Straight-Line (complete binary trees and Fi-bonacci trees) O (N ) [8] Non-Upward Orthogonal fi (N ) <ref> [19, 28] </ref> Upward Orthogonal - fi (N log log N ) Leaves-on-Hull Orthogonal fi (N log N ) [5] Table 1 Area-requirements for planar grid tree drawings. not vertices of G. is an orthogonal drawing (see Fig. 1.c) if each edge is a chain of alternating horizontal and vertical segments. <p> A grid drawing is such that the vertices and bends along the edges have integer coordinates. Planar drawings, where edges do not intersect, are especially important because they improve the readability of the drawing, and, in the context of VLSI layouts, they simplify the design process <ref> [2, 19, 28] </ref>. An upward drawing of a directed graph is such that every edge is a curve monotonically nondecreasing in the vertical direction (when traversed along the direction of the edge). polyline; (c) orthogonal.
References-found: 28

