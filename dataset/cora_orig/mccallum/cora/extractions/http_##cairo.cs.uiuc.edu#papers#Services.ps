URL: http://cairo.cs.uiuc.edu/papers/Services.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Email: e-mail: klara,jms@aurora.cis.upenn.edu  
Title: A Service Kernel for Multimedia  
Author: Endstations Klara Nahrstedt and Jonathan Smith 
Address: Pennsylvania  
Affiliation: Distributed Systems Lab, University of  
Abstract: Quality of Service (QoS) guarantees for delay sensitive networked multimedia applications, such as teleoperation, must be application-to-application. We describe a set of services, a service kernel, required at the end points, for multimedia call establishment with QoS guarantees. These services provide: (1) Translation among different domain specifications (layer-to-layer translation) and domain-resource specifications (layer-to-resource translation); (2) Admission and Allocation of resources; and (3) Negotiation and Coordination of QoS specifications among the distributed endpoints. For each service we propose architectural solutions. We are testing the service kernel with an ATM-based telerobotics ap plication.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Nahrstedt, J. Smith, </author> <title> "The QoS Broker", </title> <type> Technical Report, </type> <institution> MS-CIS-94-13, University of Pennsylvania, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: The services in the kernel are coordinated by the QoS Broker <ref> [1] </ref>, an end-point orchestration entity which schedules the activities of the QoS management. 7 Summary and Conclusion Translation, admission and negotiation services represent new services in multimedia communication systems and become a necessity for support of the call/connection establishment management if QoS guarantees are required.
Reference: [2] <author> K. Nahrstedt, J. Smith, </author> <title> "Experimental Study of End-to-End Issues", </title> <type> Technical Report, </type> <institution> MS-CIS-94-08, University of Pennsylvania, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: In our current implementation, a motion video file is used for visualization of the frame rate parameter. An important issue here is that the frame rate tuning must be based on the balance between the network capabilities and end-point OS capabilities 1 <ref> [2] </ref>. 1 Locally, the tuning service can display, for example, 15 frames per second, but when a network is involved between the video source and the destination, the frame rate may not be sustainable. <p> Likewise, the network QoS parameters must be mapped onto the system parameters (Figure 4). The task priorities are inherited from the importance of the medium quality and connection priority. The importance of priority inheritance for support of guarantees is experimentally shown in <ref> [2] </ref>. 4 In our telerobotics application, split of the sensor data occurs because the robotics stream carries 4 components (N, O, A, P), which have different meaning and importance for the movement of the robot arm. <p> If an interference time D I is present, it has to be added to the left side of the equations (1), (2), (3), and (4). The interference can be formally bounded as described in [10], but the current operating systems provide limited means to bound the interference <ref> [2] </ref> and provide a deterministic behavior. Because of an insufficient support of a determinism in OS, in our implementation we have limited the number of applications and users on the workstation. Further, the context switching contributes to unpredictable behavior [2], therefore the goal is to have a minimal number of context <p> the current operating systems provide limited means to bound the interference <ref> [2] </ref> and provide a deterministic behavior. Because of an insufficient support of a determinism in OS, in our implementation we have limited the number of applications and users on the workstation. Further, the context switching contributes to unpredictable behavior [2], therefore the goal is to have a minimal number of context switching. The most predictable case is achieved when tasks are implemented in one process (no process context switching). 4.3 Network Resource Availability Tests The network resource availability test is needed for end-to-end QoS guarantees.
Reference: [3] <author> K. Nahrstedt, J. Smith, </author> <title> "QoS Negotiation in a Robotics Environment", </title> <booktitle> Proceedings of Workshop on Distributed Multimedia Applications and QoS Verification, </booktitle> <address> Montreal, Quebec, Canada, May 31-June 2, </address> <year> 1994. </year>
Reference-contexts: A detailed description of the QoS negotiation service in a robotics environment is presented in <ref> [3] </ref>. 6 Implementation Issues The implementation of the service kernel is tested through our driving application - telerobotics. The hardware components of the experiment are shown in Figure 10. The end-point communication architecture (Figure 5) is implemented on the IBM RS/6000s.
Reference: [4] <author> H. Tokuda, T. Nakajima, P. Rao, </author> <title> "Real-Time Mach: Towards a Predictable Real-Time System" Technical Report, </title> <institution> Carnegie Mellon University, </institution> <address> Pitts-burgh, PA, </address> <year> 1993. </year>
Reference-contexts: 1 Problem Description Quality of Service (QoS) guarantees for delay sensitive networked multimedia applications must be application-to-application. Guarantees are achieved if: (1) the information is carried between end-points using delay-bounded communication protocols [6], [5], (2) the end-points use delay-bounded services of the operating system (OS) <ref> [4] </ref>, [9], and (3) the application, OS and network are able to prepare and configure the environment for delay sensitive multimedia calls with QoS guarantees. We identify a set of services required for QoS guarantees (in end-to-end multimedia establishment protocols) in a multimedia environment at the end-points.
Reference: [5] <author> C. J. Parris, D. Ferrari, </author> <title> "A Dynamic Connection Management Scheme for Guaranteed Performance Services in Packet-Switching Integrated Services Networks", </title> <type> Technical Report, </type> <institution> UC Berkeley, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: 1 Problem Description Quality of Service (QoS) guarantees for delay sensitive networked multimedia applications must be application-to-application. Guarantees are achieved if: (1) the information is carried between end-points using delay-bounded communication protocols [6], <ref> [5] </ref>, (2) the end-points use delay-bounded services of the operating system (OS) [4], [9], and (3) the application, OS and network are able to prepare and configure the environment for delay sensitive multimedia calls with QoS guarantees.
Reference: [6] <author> L.Zhang, S. Deering, D. Estrin, S. Shenker, D.Zappala, "RSVP: </author> <title> A new Resource ReSerVation Protocol", </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: 1 Problem Description Quality of Service (QoS) guarantees for delay sensitive networked multimedia applications must be application-to-application. Guarantees are achieved if: (1) the information is carried between end-points using delay-bounded communication protocols <ref> [6] </ref>, [5], (2) the end-points use delay-bounded services of the operating system (OS) [4], [9], and (3) the application, OS and network are able to prepare and configure the environment for delay sensitive multimedia calls with QoS guarantees.
Reference: [7] <author> E.W. Biersack, </author> <title> "Performance Evaluation of Forward Error Correction in an ATM Environment", </title> <journal> IEEE JSAC, </journal> <month> May </month> <year> 1993, </year> <note> Vol.11, No.4, pp.631-640. </note>
Reference-contexts: If real-time behavior of the continuous media is required, its importance is high and sample loss rate is low, then a forward error correction (FEC) <ref> [7] </ref> mechanism is used in the communication protocol. 3 Otherwise, a different error correction mechanism (e.g., retransmission) can be specified, if supported by the communication protocol suite. * Cost and Burstiness mappings are currently not supported. 2.
Reference: [8] <author> J. Jung, D. Seret, </author> <title> "Translation of QoS Parameters into ATM Performance Parameters in B-ISDN", </title> <booktitle> IEEE INFOCOM'93 Proceedings, </booktitle> <address> Vol.II, San Fran-cisco, CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: The relation among the translations is shown in Figure 6. 3.1 Layer-to-Layer Translation The layering in Figure 1 indicates that we need layer-to-layer translation between the subsystems. Specific instances of such translation have been noted, for example, between ATM Adaptation Layer (AAL) and ATM Layer <ref> [8] </ref>. There are other layer interfaces where translation needs to occur. An important property of these translations, such as the one between application and transport subsystem, is bidirectional translation, which may cause problems of ambiguity.
Reference: [9] <author> A. Mauthe, W. Schulz,R. Steinmetz, </author> <title> "Inside the Heidelberg Multimedia Operating System Support: Real-Time Processing of Continuous Media in OS/2", </title> <type> Technical Report, </type> <institution> IBM Research Center Heidelberg, Germany, </institution> <year> 1992. </year>
Reference-contexts: 1 Problem Description Quality of Service (QoS) guarantees for delay sensitive networked multimedia applications must be application-to-application. Guarantees are achieved if: (1) the information is carried between end-points using delay-bounded communication protocols [6], [5], (2) the end-points use delay-bounded services of the operating system (OS) [4], <ref> [9] </ref>, and (3) the application, OS and network are able to prepare and configure the environment for delay sensitive multimedia calls with QoS guarantees. We identify a set of services required for QoS guarantees (in end-to-end multimedia establishment protocols) in a multimedia environment at the end-points.
Reference: [10] <author> K.W. Tindell, A. Burns, A.J. Wellings, </author> <title> "Guaranteeing Hard Real-Time End-to-End Communication Deadlines", </title> <type> Technical Report Number RTRG/91/107, </type> <institution> Department of Computer Science. University of York, </institution> <month> De-cember </month> <year> 1991. </year>
Reference-contexts: Both tests assume that there is no interference of other applications and/or users. If an interference time D I is present, it has to be added to the left side of the equations (1), (2), (3), and (4). The interference can be formally bounded as described in <ref> [10] </ref>, but the current operating systems provide limited means to bound the interference [2] and provide a deterministic behavior. Because of an insufficient support of a determinism in OS, in our implementation we have limited the number of applications and users on the workstation.
Reference: [11] <author> C.L. Liu, James W. Layland, </author> <title> "Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment", </title> <journal> Journal of the Association for Computing Machinery, Vol.20, </journal> <volume> No.1, </volume> <month> January </month> <year> 1973, </year> <month> pp.46-61. </month>
Reference-contexts: This parameter depends on the sample (packet size). Task period is computed as the inverse of the sample rate (packet rate). Task schedulers are computed from the the rates and priorities of the tasks in both subsystems (we use a mixed scheduling algorithm <ref> [11] </ref> which is composed of a rate-monotonic and deadline-driven algorithm). The important issue here is that the task scheduler in the network subsystem takes into account the task scheduler in the application subsystem. <p> Scheduling Algorithm To schedule a set of periodic and deadline-driven tasks we choose a mixed scheduling algorithm <ref> [11] </ref> which combines rate-monotonic and deadline-driven scheduling algorithms. The rate monotony applies to the task processing media/connections according to the sample and packet production and the consumption rate at the devices. <p> For the schedulability test, parameters of interests are: (1) task duration, e; (2) task period, p; and (3) context-switching time between two OS processes/threads cs. From the schedulability condition for the mixed scheduling algorithm <ref> [11] </ref> P e i p i 1, where i is a number of tasks, we can derive the schedulability test in the application and transport subsystems: * Schedulability Tests in the Application Subsystem Let us assume that e A o;i;r specifies in application A the task r duration (processing time) of
References-found: 11

