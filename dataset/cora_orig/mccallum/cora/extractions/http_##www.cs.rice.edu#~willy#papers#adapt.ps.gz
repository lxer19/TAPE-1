URL: http://www.cs.rice.edu/~willy/papers/adapt.ps.gz
Refering-URL: http://www.cs.rice.edu/~willy/TreadMarks/papers.html
Root-URL: 
Title: Compiler-Runtime Integration for Adaptive OpenMP-based Programs on NOWs  
Date: Mar 13, 1998  
Note: Submitted to ASPLOS98 Friday  
Abstract: We present a compiler and runtime system that supports the execution of OpenMP-based programs on network of workstations (NOWs) with dynamically varying number of nodes. Nodes in the NOW can leave the computation when they are reclaimed by their owners, and idle nodes are added as they become available. OpenMP provides a set of standard compiler directives for parallelization. Our system does not require any additional directives or special-purpose code to adapt to the number of nodes. OpenMP suggests well-defined adaptation points during program execution, at which adaptation can be done relatively efficiently by changing the number of threads and re-distributing the work and the data accordingly. By granting the computation a grace period before it needs to leave a node, and by controlling the frequency of the adaptation points in the compiler, we attempt to postpone a leave until such an adaptation point. If this is not possible, we resort to the more expensive solution of migrating the process and multiplexing it with another process on an available node until the next adaptation point. The system also includes checkpointing to recover from catastrophic events. We have implemented a compiler for a sizable subset of OpenMP based on the SUIF tool kit, and added support for adaptivity to the TreadMarks runtime system. Our measurements indicate that the cost of supporting adaptivity is minor, given the added exibility and functionality of the system. For example, applications executing on a network of 8 PCs, with intervals of 15 seconds or more between adapt events, and with a grace period of 2 seconds, the overhead due to adaptation is less than 10%.
Abstract-found: 1
Intro-found: 1
References-found: 0

