URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-96-09/MP-TR-96-09.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-96-09/
Root-URL: http://www.cs.wisc.edu
Title: DISTRIBUTED GENETIC ALGORITHMS FOR PARTITIONING UNIFORM GRIDS  
Author: By Ioannis T. Christou 
Degree: A dissertation submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy (Computer Sciences) at the  
Date: 1996  
Address: WISCONSIN MADISON  
Affiliation: UNIVERSITY OF  
Abstract-found: 0
Intro-found: 1
Reference: [AMO93] <author> R. K. Ahuja, T. L. Magnanti, and J. B. Orlin. </author> <title> Network Flows. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: In the solution of finite difference schemes ( [Str89]), or the simulation of molecule behavior in Chemical Engineering or in edge detection in image processing ( [Sch89]) and computer vision, or in the solution of max-flow problems over graphs with a grid structure using preflow-push <ref> [AMO93] </ref>, one must perform a series of computations over a domain consisting of grid cells; the update of each cell requires its current value as well as the values of its immediate four neighbors, namely, its northern, southern, eastern and western neighbors.
Reference: [CM96a] <author> I. T. Christou and R. R. Meyer. </author> <title> Fast distributed genetic algorithms for paritioning uniform grids. </title> <editor> In H. Rolim and T. Yang, editors, </editor> <booktitle> Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <note> to appear in Irregular 96. </note>
Reference-contexts: DGA was allowed to 89 run for 20 generations. Experimentation showed that the above parameters resulted in good overall GA behavior. More details on the experiments conducted with DGA can be found in <ref> [CM96a] </ref>. 5.3 Rectangular Grids In table 1 we give the size of the rectangular problems in our test-suite using a QAP, linear MIP, or a GA formulation.
Reference: [CM96b] <author> I. T. Christou and R. R. Meyer. </author> <title> Optimal and asymptotically optimal equi-partition of rectangular domains via stripe decomposition. </title> <editor> In H. Fischer, B. Riedmuller, and S. Scha*er, editors, </editor> <booktitle> Applied Mathematics and Parallel Computing - Festschrift for Klaus Ritter, </booktitle> <pages> pages 77-96. </pages> <publisher> Physica-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: So the optimal perimeter is 52 instead of 50 which is the one predicted by the lower bound. One reason that the lower bound (5) fails to be tight is that the dimensions of the grid may not be large enough to accommodate the relatively square optimal shapes <ref> [CM96b] </ref>; in particular, we have the following lemma: Lemma 2 Assume that M &lt; N and that the following problem (P) is feasible: min h + w 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; : h M h; w 2 IN. <p> The following result <ref> [CM96b] </ref> is an improvement on the error bound, and the proof is more pleasing aesthetically. <p> Finally, we test DGA against R-SNAKE to check whether a Genetic Algorithm outperforms random selection in finding good inputs to the snake procedure, and we also make comparisons with PERIX-GA <ref> [CM96b, CM96c] </ref>, a GA following the host-node programming paradigm using generational replacement with a fitness evaluation function that is based on a different tiling approach. PERIX-GA is a synchronous GA running on a 9-node partition of the COW.
Reference: [CM96c] <author> I. T. Christou and R. R. Meyer. </author> <title> Optimal equi-partition of rectangular domains for parallel computation. </title> <journal> Journal of Global Optimization, </journal> <volume> 8 </volume> <pages> 15-34, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: To establish this claim, we are going to prove two lemmas. These two lemmas combined, guarantee the existence of such solutions for a large class of instances of the minimum perimeter problem (see also <ref> [CM96c] </ref>). <p> So, next we present the final and most general theorem for equi-partitioning a rectangular grid in the case that the number of processors divides the total area of the grid; the asymptotically optimal behavior of the class of grids to be presented was first established in <ref> [CM96c] </ref>. The following result [CM96b] is an improvement on the error bound, and the proof is more pleasing aesthetically. <p> show that optimal and near-optimal solutions are obtained very rapidly by using the partitions produced by MSP, an algorithm that solves the knapsack problem described above via a routine described in [MT90], and then using these stripes as input to the stripe filling process for cell assignment as described in <ref> [CM96c] </ref>. 2.5 Error Bounds for Equi-partitions of Irregular boundary Domains We now consider a procedure for equi-partitions of any uniform 5-point grid among P processors using stripe decomposition if the grid contains a relatively large rectangular area. The partition obtained will differ only slightly from the lower bound ( 5). <p> In this scheme, co-ordination is needed, the master processor bases its decisions on global information about the whole population, and the programming style is a host-node synchronized communication-computation (see figure 19). Similar versions of this model have been implemented by various researchers -see <ref> [vL91, CMY93, CM96c] </ref>. In another more recent approach [MSB91, Lev95], each processor is considered an (almost isolated) island which periodically sends qualified individuals to another island according to some criterion. <p> COW is a cluster of 40 high-performance Sun SPARC Server 20 workstations running Solaris at the Computer Sciences Dept. at the University of Wisconsin - Madison. Our experiments were performed on the nodes of this network (in <ref> [CM96c] </ref> we report results from runs of another GA on a CM-5 with 32 nodes). <p> Finally, we test DGA against R-SNAKE to check whether a Genetic Algorithm outperforms random selection in finding good inputs to the snake procedure, and we also make comparisons with PERIX-GA <ref> [CM96b, CM96c] </ref>, a GA following the host-node programming paradigm using generational replacement with a fitness evaluation function that is based on a different tiling approach. PERIX-GA is a synchronous GA running on a 9-node partition of the COW.
Reference: [CMY93] <author> R.J. Chen, R.R. Meyer, and J. Yackel. </author> <title> A genetic algorithm for diversity minimization and its parallel implementation. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 163-170. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1993. </year> <month> 105 </month>
Reference-contexts: In this scheme, co-ordination is needed, the master processor bases its decisions on global information about the whole population, and the programming style is a host-node synchronized communication-computation (see figure 19). Similar versions of this model have been implemented by various researchers -see <ref> [vL91, CMY93, CM96c] </ref>. In another more recent approach [MSB91, Lev95], each processor is considered an (almost isolated) island which periodically sends qualified individuals to another island according to some criterion.
Reference: [CQ95] <author> P. Crandall and M. Quinn. </author> <title> Non-uniform 2-d grid partitioning for heterogeneous parallel architectures. </title> <booktitle> In Proceedings of the 9th International Symposium on Parallel Processing, </booktitle> <pages> pages 428-435, </pages> <year> 1995. </year>
Reference-contexts: the authors do not provide an extension to the general k-way partitioning, it is 19 conceptually easy to design a GRASP heuristic for partitioning a graph among any number of components. 1.4.5 Fair Binary Recursive Decomposition Fair Binary Recursive Decomposition (FBRD) is a method proposed by Crandall and Quinn in <ref> [CQ95] </ref> for the partitioning of uniform and non-uniform 5-point grids; their discussion is focused on rectilinear grids. They allow for different processor speeds which implies possible different area sizes for each partition.
Reference: [Dar59] <author> Charles Darwin. </author> <title> On the Origin of Species by Means of Natural Selection. </title> <editor> J. </editor> <address> Murray, London, </address> <month> 1859. </month>
Reference-contexts: Darwin <ref> [Dar59] </ref>. Although the origins of this class of algorithms might be traced back to the early '50s (according to Michalewicz in [Mic94]) it was John Holland [Hol92] who pioneered the field and developed a theoretical framework for the use of GAs.
Reference: [Fie73] <author> M. Fiedler. </author> <title> Algebraic connectivity of graphs. </title> <journal> Czechoslovak Math. Journal, </journal> <volume> 23 </volume> <pages> 298-305, </pages> <year> 1973. </year>
Reference-contexts: The idea behind the partitioning scheme traces back to the work in algebraic graph theory done by Fiedler ( <ref> [Fie73] </ref> which relates the second smallest eigenvalue and corresponding eigenvector of the Laplacian matrix of a graph G to the edge and vertex connectivities of the graph.
Reference: [GBD + 94] <author> A. Geist, A. Beguelin, J. Dongarra, W. Jiang, R. Manchek, and V. Sunderam. </author> <title> PVM 3 User's Guide and Reference Manual. </title> <institution> Oak Ridge National Laboratory, </institution> <year> 1994. </year>
Reference-contexts: It was allowed to run for 100 iterations. DGA was written in ANSI C, and utilizes the PVM 3.3.10 message passing interface for interprocess communication <ref> [GBD + 94] </ref>. DGA runs on the COW. PERIX-GA was also written in ANSI C and uses the PVM 3.3.7 calls for message 88 passing on the COW (and the CMMD libraries for message passing on the CM-5). PERIX-GA was allowed to run for 20 generations.
Reference: [GMT95] <author> J. R. Gilbert, G. L. Miller, and S. H. Teng. </author> <title> Geometric mesh partitioning: Implementation and experiments. </title> <booktitle> In Proceedings of the 9th International Symposium on Parallel Processing, </booktitle> <pages> pages 418-427, </pages> <year> 1995. </year>
Reference-contexts: We compare the performance of DGA against that of recursive spectral bisection (RSB) and quadrisection (RSQ) as implemented in the Chaco package [HL95a], a well-known package for graph partitioning developed at Sandia National Laboratories; on the class of rectangular grids we also make comparisons with the geometric mesh partitioner <ref> [MTTV93, GMT95] </ref>, another well known mesh partitioner and a state-of-the-art GRASP heuristic for the QAP [LPR94] 87 that was written at AT&T Bell Labs.
Reference: [HL93] <author> B. Hendrickson and R. Leland. </author> <title> Multidimensional spectral load balancing. </title> <booktitle> In Proc. 6th SIAM Conference on Parallel Processing and Scientific Computing. </booktitle> <publisher> SIAM, </publisher> <year> 1993. </year>
Reference-contexts: However, it does need a relatively good partition to begin with. Extensions to the K-L algorithm are presented in <ref> [HL93] </ref> where the authors show how a generalized K-L heuristic (GKL) can 13 partition a graph among an arbitrary number of nodes. 1.4.2 Spectral Methods The spectral bisection algorithm for sparse graphs was proposed in [PSL90], and attempts to partition an arbitrary graph into two components of equal size while minimizing
Reference: [HL95a] <author> B. Hendrickson and R. Leland. </author> <note> The Chaco User's Guide Version 2.0. </note> <institution> Sandia National Laboratories, </institution> <month> July </month> <year> 1995. </year> <month> 106 </month>
Reference-contexts: Our experiments were performed on the nodes of this network (in [CM96c] we report results from runs of another GA on a CM-5 with 32 nodes). We compare the performance of DGA against that of recursive spectral bisection (RSB) and quadrisection (RSQ) as implemented in the Chaco package <ref> [HL95a] </ref>, a well-known package for graph partitioning developed at Sandia National Laboratories; on the class of rectangular grids we also make comparisons with the geometric mesh partitioner [MTTV93, GMT95], another well known mesh partitioner and a state-of-the-art GRASP heuristic for the QAP [LPR94] 87 that was written at AT&T Bell Labs.
Reference: [HL95b] <author> B. Hendrickson and R. Leland. </author> <title> An improved spectral graph partitioning algorithm for mapping parallel computations. </title> <journal> SIAM J. on Sci. Comput., </journal> <volume> 16 </volume> <pages> 452-469, </pages> <year> 1995. </year>
Reference-contexts: It is exactly this relaxation that is the key approximation in the application of spectral methods. As discussed in <ref> [HL95b] </ref>, the relaxed problem has as a solution x = p nu 2 where u 2 is the normalized eigenvector corresponding to the second lowest eigenvalue 2 of L, and n is the cardinality of V , and this solution is unique if 2 6= 3 where 3 is the third <p> This is due to a theorem proved in <ref> [HL95b] </ref> stating that the matrix L is symmetric positive semi-definite, its normalized eigenvectors are pairwise orthogonal, and that the smallest eigenvalue of L is zero, with an associated normalized eigenvector u 1 = 1 p 15 So the solution of the relaxation of the discrete optimization problem (3) is reduced to <p> The spectral bisection algorithm and its extensions (recursive spectral bisection, or RSB for short, for partitioning an arbitrary graph into a number of processors that is a power of two, and recursive spectral quadrisection and octasection <ref> [HL95b] </ref> that generalize bisection by considering two or three eigen-vectors of the Laplacian matrix of the graph) have received a lot of attention because of their demonstrated excellent performance.
Reference: [Hol92] <author> John Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: Darwin [Dar59]. Although the origins of this class of algorithms might be traced back to the early '50s (according to Michalewicz in [Mic94]) it was John Holland <ref> [Hol92] </ref> who pioneered the field and developed a theoretical framework for the use of GAs. <p> The basic idea is that for problems that satisfy the building block hypothesis, that is, for problems where parts of two different strings representing different solutions, can be combined to produce a better solution, the GA model can be expected to find high quality solutions. The schema theorem <ref> [Hol92] </ref> formulates the above statement mathematically and proves its validity. 77 4.3 Handling Constraints Even though GAs perform remarkably well in many optimization-related fields, heavily constrained problems in general can be hard for a GA to solve unless the structure of the feasible region can be somehow exploited and if possible
Reference: [KL70] <author> B. W. Kernighan and S. Lin. </author> <title> An effective heuristic procedure for partitioning graphs. </title> <journal> Bell Systems Tech. Journal, </journal> <pages> pages 291-308, </pages> <month> February </month> <year> 1970. </year>
Reference-contexts: methods, the Kernighan-Lin method or the geometric mesh partitioner , work on arbitrary graphs; however, many of them also have the disadvantage of requiring the number of partitions to be a power of two. 1.4.1 The Kernighan-Lin Heuristic One of the most famous algorithms for graph partitioning, the K-L heuristic <ref> [KL70] </ref> is a very well established method for general graph partitioning that 11 is used in many modern codes as a post-processing routine. <p> By using the eigenvectors of the Laplacian matrix of the graph (which are properties of the whole graph), this method makes use of global information about the graph, as opposed to other local refinement graph partitioning schemes like the Kernighan-Lin algorithm <ref> [KL70] </ref>. <p> So, instead 103 of relying on pairwise swaps for the final phase of the fitness evaluation, we want to investigate more sophisticated swap cycles based on a Kernighan-Lin procedure <ref> [KL70] </ref> or linear network approximations to the QAP. More generally, the output of the snake process could be viewed as a starting point for a local search procedure based on interchanges or on more general techniques such as simulated annealing or tabu search.
Reference: [Lev95] <author> D. Levine. </author> <title> User's Guide to the PGAPack Parallel Genetic Algorithm Library Version 0.2. </title> <institution> Argonne National Laboratory, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: Similar versions of this model have been implemented by various researchers -see [vL91, CMY93, CM96c]. In another more recent approach <ref> [MSB91, Lev95] </ref>, each processor is considered an (almost isolated) island which periodically sends qualified individuals to another island according to some criterion.
Reference: [LFE94] <author> M. Laguna, T. A. Feo, and H. C. Elrod. </author> <title> A greedy randomized adaptive search procedure for the two partition problem. </title> <journal> Operations Research, </journal> <month> July August </month> <year> 1994. </year>
Reference-contexts: meshes into an arbitrary number of components that is not a power of two is not straightforward . 1.4.4 Greedy Randomized Adaptive Search Procedures Another method for partitioning an arbitrary weighted graph into two balanced partitions while minimizing the sum of the weights of the cut edges is presented in <ref> [LFE94] </ref>. This GRASP heuristic chooses one node at a time from a list of candidate nodes and alternates insertion of the chosen node between the two partitions.
Reference: [Lin91] <author> K. Y. Lin. </author> <title> Exact solution of the convex polygon perimeter and area generating function. </title> <journal> J. Phys. A. Math Gen., </journal> <volume> 24 </volume> <pages> 2411-2417, </pages> <year> 1991. </year>
Reference-contexts: We denote such a near-rectangular shape by (h; w; f ). In general, the number of such near-rectangular optimal shapes is of order A 1=4 p (see [YMC95]), but this does not encompass all possible minimum perimeter configurations. There is a lot of literature (see for example <ref> [Lin91, Mel94] </ref>) dealing with the generating function approach for developing expressions for the exact number of "convex polyominoes" with various properties. 25 These near-rectangular optimal configurations play a key role in the analysis below, and we prove a particular optimality test for these shapes: Lemma 1 Given an area A p
Reference: [LPR94] <author> Y. Li, P. M. Pardalos, and M. G. C. Resende. </author> <title> A grasp for the qap. </title> <editor> In P. M. Pardalos and H. Wolkowicz, editors, </editor> <title> Quadratic Assignment and Related Problems. </title> <journal> DIMACS Series Vol. </journal> <volume> 16, </volume> <publisher> American Mathematical Society, </publisher> <year> 1994. </year> <month> 107 </month>
Reference-contexts: quadrisection (RSQ) as implemented in the Chaco package [HL95a], a well-known package for graph partitioning developed at Sandia National Laboratories; on the class of rectangular grids we also make comparisons with the geometric mesh partitioner [MTTV93, GMT95], another well known mesh partitioner and a state-of-the-art GRASP heuristic for the QAP <ref> [LPR94] </ref> 87 that was written at AT&T Bell Labs.
Reference: [Mar96] <author> W. Martin. </author> <title> Fast equi-partitioning of rectangular domains using stripe decomposition. </title> <type> Technical Report MP-TR-96-2, </type> <institution> University of Wisconsin - Madison, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: The same zero error behavior of stripes occurs when f i 1. This implies that it is not unlikely in the best near-optimal solutions to observe a large number of stripes of zero total error (more details and experimental results verifying this claim can be found in <ref> [Mar96] </ref>). The techniques used in the proof of theorem 6 can be used to prove that similar quality solutions exist when the number of rows equals the number of processors and is greater than or equal to the number of columns of the grid. <p> This distance is computed in <ref> [Mar96] </ref> to be e i = 2 N + p i (h i + 1) r i l q m where r i is the so-called repeat count of the patterns of shapes occuring in a stripe and is equal to r i = minfs t j s t = th <p> from tables 2 and 3, R-SNAKE significantly outperforms recursive spectral bisection and quadrisection as well as the geometric mesh partitioner in solution quality, and in most cases in response time as well on all the rectangular domains we tested. 5.4 The Knapsack Approach For the rectangular domains, the MSP algorithm <ref> [Mar96] </ref> mentioned in x 2.4 in chapter 2 was applied to the class of problems MP (N fi N , N ), and MP (10N fi 10N , N ); the MSP algorithm determines all "valid" stripe heights (ones that result in stripes that can be covered exactly with an integer
Reference: [Mel94] <author> M. Bousquet Melou. </author> <title> Codage des polyominos convexes et equation pour l'enumeration suivant l'aire. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 48 </volume> <pages> 21-43, </pages> <year> 1994. </year>
Reference-contexts: We denote such a near-rectangular shape by (h; w; f ). In general, the number of such near-rectangular optimal shapes is of order A 1=4 p (see [YMC95]), but this does not encompass all possible minimum perimeter configurations. There is a lot of literature (see for example <ref> [Lin91, Mel94] </ref>) dealing with the generating function approach for developing expressions for the exact number of "convex polyominoes" with various properties. 25 These near-rectangular optimal configurations play a key role in the analysis below, and we prove a particular optimality test for these shapes: Lemma 1 Given an area A p <p> This super-grid is the smallest rectangular grid that can accommodate our given grid; in the combinatorics literature <ref> [Mel94] </ref>, this rectangle is sometimes called the convex hull of the grid.
Reference: [Mic94] <author> Zbigniew Michalewicz. </author> <title> Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Darwin [Dar59]. Although the origins of this class of algorithms might be traced back to the early '50s (according to Michalewicz in <ref> [Mic94] </ref>) it was John Holland [Hol92] who pioneered the field and developed a theoretical framework for the use of GAs. <p> string representation of the solutions can be altered or generalized to include other more appropriate data structures for the original problem or simply more letters in the original alphabet, and this is some times the case in discrete optimization problems like the QAP or the traveling salesman (TSP) problem (see <ref> [Mic94] </ref> for more details on representation issues for GAs). * Genetic Operators: Having decided on the representation of the solutions, 74 the next task is to choose the genetic operators to be used for the creation of the next generation. <p> The basic difficulty a GA will have in the face of a constrained problem is that often the standard genetic operators crossover and mutation will produce infeasible offspring (see <ref> [Mic94] </ref> for an extensive treatment on the subject). There are three main techniques for dealing with this problem. * The first technique is most appropriate when one can exploit the structure of the problem.
Reference: [MSB91] <author> H. Muhlenbein, M. Schomisch, and J. Born. </author> <title> The parallel genetic algorithm as function optimizer. </title> <editor> In R. Belew and L. Booker, editors, </editor> <booktitle> Proceedings of the Fourth Intl. Conference on Genetic Algorithms, </booktitle> <pages> pages 45-52. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <address> Los Altos, CA, </address> <year> 1991. </year>
Reference-contexts: Similar versions of this model have been implemented by various researchers -see [vL91, CMY93, CM96c]. In another more recent approach <ref> [MSB91, Lev95] </ref>, each processor is considered an (almost isolated) island which periodically sends qualified individuals to another island according to some criterion.
Reference: [MT90] <author> S. Martello and P. Toth. </author> <title> Knapsack Problems: Algorithms and Computer Implementations. </title> <publisher> John Wiley & Sons, </publisher> <year> 1990. </year>
Reference-contexts: Computational results show that optimal and near-optimal solutions are obtained very rapidly by using the partitions produced by MSP, an algorithm that solves the knapsack problem described above via a routine described in <ref> [MT90] </ref>, and then using these stripes as input to the stripe filling process for cell assignment as described in [CM96c]. 2.5 Error Bounds for Equi-partitions of Irregular boundary Domains We now consider a procedure for equi-partitions of any uniform 5-point grid among P processors using stripe decomposition if the grid contains
Reference: [MTTV93] <author> G. L. Miller, S. H. Teng, W. Thurston, and S. A. Vavasis. </author> <title> Automatic mesh partitioning. </title> <editor> In A. George, J. R. Gilbert, and J. W. H. Liu, editors, </editor> <title> Graph Theory and Sparse Matrix Computation. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: though a bit slower) than its multidimensional counterparts. 1.4.3 Geometric Mesh Partitioning In 1993, Miller et. al. proposed a new method for partitioning a d-dimensional mesh that used geometric information of the graph, namely the co-ordinates of its nodes in IR d to obtain provably good edge or vertex separators <ref> [MTTV93] </ref>. <p> We compare the performance of DGA against that of recursive spectral bisection (RSB) and quadrisection (RSQ) as implemented in the Chaco package [HL95a], a well-known package for graph partitioning developed at Sandia National Laboratories; on the class of rectangular grids we also make comparisons with the geometric mesh partitioner <ref> [MTTV93, GMT95] </ref>, another well known mesh partitioner and a state-of-the-art GRASP heuristic for the QAP [LPR94] 87 that was written at AT&T Bell Labs.
Reference: [NW85] <author> G. Nemhauser and L. Wolsey. </author> <title> Integer and Combinatorial Optimization. </title> <publisher> John Wiley & Sons, </publisher> <year> 1985. </year> <month> 108 </month>
Reference-contexts: p 6= p 0 = 1 : : : P x i 2 B = f0; 1g 6 As the size of the grid increases, the number of binary variables needed in any of the above formulations renders the problem intractable by means of classical Branch & Bound methods ( <ref> [NW85] </ref>), and there is very little hope of solving exactly the problem as formulated above. Instead, we use a high level approach, taking into account the geometric aspects of the problem, to develop a theory that enables us to construct high quality solutions very efficiently.
Reference: [PRW93] <author> P. M. Pardalos, F. Rendl, and H. Wolkowicz. </author> <title> The quadratic assignment problem: A survey and recent developments. </title> <editor> In P. M. Pardalos and H. Wolkowicz, editors, </editor> <title> Quadratic Assignment and Related Problems. </title> <publisher> American Mathematical Society, </publisher> <year> 1993. </year>
Reference-contexts: MP can easily be formulated as a Quadratic Assignment problem ( <ref> [PRW93] </ref>), with jGjP binary variables and jGj + P constraints.
Reference: [PSL90] <author> A. Pothen, H. D. Simon, and K. P. Liu. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <journal> SIAM Journal on Matrix Analysis and Applications, </journal> <volume> 11 </volume> <pages> 430-452, </pages> <year> 1990. </year>
Reference-contexts: Extensions to the K-L algorithm are presented in [HL93] where the authors show how a generalized K-L heuristic (GKL) can 13 partition a graph among an arbitrary number of nodes. 1.4.2 Spectral Methods The spectral bisection algorithm for sparse graphs was proposed in <ref> [PSL90] </ref>, and attempts to partition an arbitrary graph into two components of equal size while minimizing the cut edges of the partition.
Reference: [Sch89] <author> R. J. Schalkoff. </author> <title> Digital Image Processing and Computer Vision. </title> <publisher> John Wiley & Sons, </publisher> <year> 1989. </year>
Reference-contexts: In the solution of finite difference schemes ( [Str89]), or the simulation of molecule behavior in Chemical Engineering or in edge detection in image processing ( <ref> [Sch89] </ref>) and computer vision, or in the solution of max-flow problems over graphs with a grid structure using preflow-push [AMO93], one must perform a series of computations over a domain consisting of grid cells; the update of each cell requires its current value as well as the values of its immediate
Reference: [Str89] <author> John Strikwerda. </author> <title> Finite Difference Schemes and Partial Differential Equations. </title> <publisher> Wadsworth & Brooks, </publisher> <year> 1989. </year>
Reference-contexts: Introduction 1.1 Problem Formulation This thesis is concerned with the Minimum Perimeter problem (MP), a class of NP-hard problems that arise in scientific computations and engineering in parallel computing environments. In the solution of finite difference schemes ( <ref> [Str89] </ref>), or the simulation of molecule behavior in Chemical Engineering or in edge detection in image processing ( [Sch89]) and computer vision, or in the solution of max-flow problems over graphs with a grid structure using preflow-push [AMO93], one must perform a series of computations over a domain consisting of grid
Reference: [Thi91] <author> Thinking Machines Corporation. </author> <title> The Connection Machine CM-5 Technical Summary, </title> <month> October </month> <year> 1991. </year>
Reference-contexts: the theory and main results of this thesis are concerned with the uniform case, many aspects are easily extended to the most general, non-uniform case as well. 2 In order to perform such 5-point computations over a discretized domain on a distributed memory parallel computer (like the Connection Machine CM-5 <ref> [Thi91] </ref> or a network of high-performance workstations) the computational load should be balanced across processors in a way that minimizes interprocessor communication. This communication will occur at the common boundaries of the regions that each processor will occupy.
Reference: [vL91] <author> G. von Laszewski. </author> <title> Intelligent structural operators for the k-way graph partitioning problem. </title> <editor> In R. Belew and L. Booker, editors, </editor> <booktitle> Proceedings of the Fourth Intl. Conference on Genetic Algorithms, </booktitle> <pages> pages 45-52. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <address> Los Altos, CA, </address> <year> 1991. </year>
Reference-contexts: In <ref> [vL91] </ref>, the author uses a representation for a partition of a graph into k components that assigns one allele in the chromosome for each node in the graph. <p> In this scheme, co-ordination is needed, the master processor bases its decisions on global information about the whole population, and the programming style is a host-node synchronized communication-computation (see figure 19). Similar versions of this model have been implemented by various researchers -see <ref> [vL91, CMY93, CM96c] </ref>. In another more recent approach [MSB91, Lev95], each processor is considered an (almost isolated) island which periodically sends qualified individuals to another island according to some criterion.
Reference: [Yac93] <author> J. Yackel. </author> <title> Minimum Perimeter Tiling in Parallel Computation. </title> <type> PhD thesis, </type> <institution> University of Wisconsin - Madison, </institution> <month> August </month> <year> 1993. </year> <month> 109 </month>
Reference-contexts: of the grid, where each grid cell corresponds to a vertex and each border between two neighboring cells corresponds to an edge between the corresponding vertices, the problem becomes a Graph Partitioning problem, and even though it is restricted in the class of uniform 5-point grids, it remains NP-hard (see <ref> [Yac93] </ref>). MP can easily be formulated as a Quadratic Assignment problem ( [PRW93]), with jGjP binary variables and jGj + P constraints. <p> The remaining object is an optimal shape for A p . It turns out that all the optimal shapes for a given area size A p can be constructed using this technique (see Yackel's PhD thesis <ref> [Yac93] </ref>). The optimal shapes for areas 5 and 7 (modulo reflections and rotations) are shown in figure 5.
Reference: [YM92a] <author> J. Yackel and R. R. Meyer. </author> <title> Minimum perimeter decomposition. </title> <type> Technical Report 1078, </type> <institution> University of Wisconsin - Madison, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: These theoretical results will provide the basis of the algorithms to be discussed in the next chapters. 2.2 Lower Bounds and Optimal Configurations As Yackel and Meyer have shown in <ref> [YM92a] </ref>, for any given area A p , a lower bound on the perimeter of any configuration of A p cells is given by fl (A p ) = 2 2 A p . (4) Furthermore, this lower bound is tight in the sense that there exists a non-empty library of <p> two numbers A i ; A i+1 are at a distance greater than, or equal to one, so A m l i+1 1. j p k (otherwise, there exists an optimal solution of (P rel ) that does not violate the extra constraints of (P) because it is shown in <ref> [YM92a] </ref> that there always exist an optimal solution of (P rel ) that has h fl = j p k also lemma 1.) an optimal solution of (P) is (h fl ; w fl ) = (M; l M ) and the optimal objective value of (P) is M + l
Reference: [YM92b] <author> J. Yackel and R. R. Meyer. </author> <title> Optimal tilings for parallel database design. </title> <editor> In P. M. Pardalos, editor, </editor> <booktitle> Advances in Optimization and Parallel Computing, </booktitle> <pages> pages 293-309. </pages> <publisher> North - Holland, </publisher> <year> 1992. </year>
Reference-contexts: Many of these optimal shapes are rectangular blocks with a "fringe" attached to one of their sides <ref> [YM92b] </ref>, so they can be characterized by three numbers, namely the dimensions of the rectangle h; w and the size of the fringe f . We denote such a near-rectangular shape by (h; w; f ).
Reference: [YMC95] <author> J. Yackel, R. R. Meyer, and I. T. Christou. </author> <title> Minimum-perimeter domain assignment, </title> <month> February </month> <year> 1995. </year> <note> To appear in Math. Programming. </note>
Reference-contexts: We denote such a near-rectangular shape by (h; w; f ). In general, the number of such near-rectangular optimal shapes is of order A 1=4 p (see <ref> [YMC95] </ref>), but this does not encompass all possible minimum perimeter configurations.
References-found: 36

