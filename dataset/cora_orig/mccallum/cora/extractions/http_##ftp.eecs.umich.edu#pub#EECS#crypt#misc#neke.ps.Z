URL: http://ftp.eecs.umich.edu/pub/EECS/crypt/misc/neke.ps.Z
Refering-URL: http://ftp.eecs.umich.edu/pub/EECS/crypt/misc/
Root-URL: http://www.eecs.umich.edu
Email: smb@ulysses.att.com mischu@research.att.com  
Title: Encrypted Key Exchange: Password-Based Protocols Secure Against Dictionary Attacks  
Author: Steven M. Bellovin Michael Merritt 
Address: Murray Hill, NJ 07974 Murray Hill, NJ 07974  
Affiliation: AT&T Bell Laboratories AT&T Bell Laboratories  
Abstract: Classical cryptographic protocols based on user-chosen keys allow an attacker to mount password-guessing attacks. We introduce a novel combination of asymmetric (public-key) and symmetric (secret-key) cryptography that allow two parties sharing a common password to exchange confidential and authenticated information over an insecure network. These protocols are secure against active attacks, and have the property that the password is protected against off-line "dictionary" attacks. There are a number of other useful applications as well, including secure public telephones. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Steiner, B. C. Neuman, and J. I. Schiller, "Ker-beros: </author> <title> An authentication service for open network systems," </title> <booktitle> in Proc. Winter USENIX Conference, </booktitle> <address> (Dallas), </address> <year> 1988. </year>
Reference-contexts: asymmetric (public-key) and symmetric (secret-key) cryptography | a secret key is used to encrypt a randomly-generated public key | two parties sharing a secret such as a password use it to exchange authenticated and secret information, such as a session key or a "ticket" for other services, a la Kerberos <ref> [1] </ref>. This protocol, known as encrypted key exchange, or EKE, protects the password from off-line "dictionary" attacks. <p> In order to establish a secure session key, A could generate a random key R, encrypt it with P as key and send the result, P (R), to B. (This is essentially the mechanism used to obtain the initial ticket in the Kerberos authentication system <ref> [1] </ref>.) Now A and B share R and can use it as a session key; perhaps B replies to A with R (Terminal type :) But an eavesdropper could record these messages, and run a dictionary attack against P by first decrypting P (R) with candidate password P 0 , and <p> For example, the time could be exchanged encrypted by R, under the security-critical assumption that clocks are monotonic and synchronized, as in Kerberos <ref> [1] </ref>. 2.2 When to encrypt with the password In the protocol presented above, the password was used for encryption twice, in messages RPK.1 and RPK.2. Often, one of those two encryptions may be omitted. Which one can be skipped will vary, depending on the particular asymmetric cryptosystem chosen.
Reference: [2] <author> W. Diffie and M. E. Hellman, </author> <title> "New directions in cryptography," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. IT-11, </volume> <pages> pp. 644-654, </pages> <month> November </month> <year> 1976. </year>
Reference-contexts: EKE can be used with a variety of asymmetric cryp-tosystems and public key distribution systems, subject Proceedings of the IEEE Symposium on Research in Security and Privacy, Oakland, May 1992. to a few constraints detailed below. It works especially well with exponential key exchange <ref> [2] </ref>. Section 2 describes the asymmetric cryptosystem variant and implementations using RSA [3] and ElGamal [4]. Each of those two systems presents unique problems. Section 3 generalizes EKE, and shows how most public key distribution systems can be used. <p> Encryption with ElGamal has some interesting properties; these make its mode of employment rather different. In particular, under certain circumstances we must encrypt the second message, rather than the first. ElGamal's algorithm is derived from the Diffie-Hellman exponential key exchange protocol <ref> [2] </ref>; accordingly, we will review the latter first. Briefly, A and B each pick random exponents R A and R B . <p> challenge B ; S A ): A similar change would be made to message (RPK.5). 3 EKE using exponential key exchange The use given above for asymmetric encryption | simply using it to pass a key for a symmetric encryption system | is an example of what Diffie and Hellman <ref> [2] </ref> call a public key distribution system. In the same publication, they describe the use of exponential key exchange as a public key distribution system. It is in some sense a weaker paradigm than asymmetric encryption; exponential key exchange does not provide authentication.
Reference: [3] <author> R. L. Rivest, A. Shamir, and L. Adleman, </author> <title> "A method of obtaining digital signatures and public-key cryptosystems," </title> <journal> Communications of the ACM, </journal> <volume> vol. 21, </volume> <pages> pp. 120-126, </pages> <month> February </month> <year> 1978. </year>
Reference-contexts: It works especially well with exponential key exchange [2]. Section 2 describes the asymmetric cryptosystem variant and implementations using RSA <ref> [3] </ref> and ElGamal [4]. Each of those two systems presents unique problems. Section 3 generalizes EKE, and shows how most public key distribution systems can be used. Section 4 considers general issues related to the choice and use of symmetric and asymmetric cryptosystems in EKE. <p> We will use RSA <ref> [3] </ref> to illustrate the difficulties. Elaboration of some of the subtler points, though, is deferred until Section 2.5. <p> In particular, an adversary could substitute another number, n 0 , for n in the first message, so that B receives 2 In <ref> [3] </ref>, the authors suggest satisfying equation (1) by choosing e to be a prime greater than max (p; q). Clearly, we cannot follow that advice here. &lt;P (e); n 0 &gt;.
Reference: [4] <author> T. ElGamal, </author> <title> "A public key cryptosystem and a signature scheme based on discrete logarithms," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. IT-31, </volume> <pages> pp. 469-472, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: It works especially well with exponential key exchange [2]. Section 2 describes the asymmetric cryptosystem variant and implementations using RSA [3] and ElGamal <ref> [4] </ref>. Each of those two systems presents unique problems. Section 3 generalizes EKE, and shows how most public key distribution systems can be used. Section 4 considers general issues related to the choice and use of symmetric and asymmetric cryptosystems in EKE. <p> This variant is expensive in messages, encryptions and decryptions, and of course, must be shown to be immune to attack by B. 3 2.4 Using the ElGamal asymmetric cryp tosystem The ElGamal cryptosystem <ref> [4] </ref> can also be used with EKE. Encryption with ElGamal has some interesting properties; these make its mode of employment rather different. In particular, under certain circumstances we must encrypt the second message, rather than the first.
Reference: [5] <author> R. H. Morris and K. Thompson., </author> <title> "Unix password security," </title> <journal> Communications of the ACM, </journal> <volume> vol. 22, </volume> <editor> p. </editor> <volume> 594, </volume> <month> November </month> <year> 1979. </year> <title> 4 UNIX is a registered trademark of UNIX Systems Laboratories, </title> <publisher> Inc. </publisher>
Reference-contexts: This may be fine when these secrets are long random strings, but poses considerable difficulty when the secrets are passwords chosen by naive users <ref> [5, 6, 7, 8] </ref>. 2 EKE using public keys Consider instead the following simple message exchange: 1. A generates a random public key/private key pair, E A and D A , and encrypts the public key in a symmetric cryptosystem with password P , yielding P (E A ).
Reference: [6] <author> F. T. Grampp and R. H. Morris, </author> <title> "Unix operating system security," </title> <journal> AT&T Bell Laboratories Technical Journal, </journal> <volume> vol. 63, </volume> <pages> pp. 1649-1672, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: This may be fine when these secrets are long random strings, but poses considerable difficulty when the secrets are passwords chosen by naive users <ref> [5, 6, 7, 8] </ref>. 2 EKE using public keys Consider instead the following simple message exchange: 1. A generates a random public key/private key pair, E A and D A , and encrypts the public key in a symmetric cryptosystem with password P , yielding P (E A ).
Reference: [7] <author> D. V. Klein, </author> <title> ""Foiling the cracker": A survey of, and improvements to, password security," </title> <booktitle> in Proceedings of the USENIX UNIX Security Workshop, (Portland), </booktitle> <pages> pp. 5-14, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: This may be fine when these secrets are long random strings, but poses considerable difficulty when the secrets are passwords chosen by naive users <ref> [5, 6, 7, 8] </ref>. 2 EKE using public keys Consider instead the following simple message exchange: 1. A generates a random public key/private key pair, E A and D A , and encrypts the public key in a symmetric cryptosystem with password P , yielding P (E A ). <p> Were the world like that, we might agree. Today, it is not. Empirically, weak passwords are fact of life. Attempts to strengthen users' passwords by enforcing syntactic restrictions have not been notably successful; audits still turn up many weak passwords. Klein <ref> [7] </ref>, for example, cracked 25% of a database of 15,000 password entries; others report similar success rates. The problem is so serious that many versions of the UNIX 4 operating system have been forced to read-protect the file containing users' passwords, despite the system's use of a one-way function.[5].
Reference: [8] <author> P. Leong and C. Tham, </author> <title> "Unix password encryption considered insecure," </title> <booktitle> in Proc. Winter USENIX Conference, </booktitle> <address> (Dallas), </address> <year> 1991. </year>
Reference-contexts: This may be fine when these secrets are long random strings, but poses considerable difficulty when the secrets are passwords chosen by naive users <ref> [5, 6, 7, 8] </ref>. 2 EKE using public keys Consider instead the following simple message exchange: 1. A generates a random public key/private key pair, E A and D A , and encrypts the public key in a symmetric cryptosystem with password P , yielding P (E A ).
Reference: [9] <author> D. E. Denning, </author> <title> Cryptography and Data Security. </title> <publisher> Addison-Wesley, </publisher> <year> 1982. </year>
Reference-contexts: less than a known n be distinguished from a valid public key e? Assume that p and q are chosen to be of the form 2p 0 + 1 and 2q 0 + 1, where p 0 and q 0 are primes, a choice that is recommended for other reasons <ref> [9] </ref>. Then an overwhelming majority of the odd integers (mod n) will be relatively prime to (p 1)(q 1) = 4p 0 q 0 , and hence will be valid candidate public keys e.
Reference: [10] <author> R. DeMillo and M. Merritt, </author> <title> "Protocols for data security," </title> <journal> Computer, </journal> <volume> vol. 16, </volume> <pages> pp. 39-50, </pages> <month> February </month> <year> 1983. </year>
Reference-contexts: In the same publication, they describe the use of exponential key exchange as a public key distribution system. It is in some sense a weaker paradigm than asymmetric encryption; exponential key exchange does not provide authentication. Furthermore, it is vulnerable to active wiretaps and "man in the middle" attacks <ref> [10] </ref>. How--ever, by encrypting the transmitted quantities with a secret key P , we can solve both of these problems. 1.
Reference: [11] <author> A. M. Odlyzko, </author> <title> "Discrete logarithms in finite fields and their cryptographic significance," </title> <booktitle> in Proceedings of Eurocrypt '84, </booktitle> <pages> pp. 225-314, </pages> <year> 1984. </year>
Reference-contexts: There are a variety of possibilities, offering a range of tradeoffs between cost and security. Although there are a number of possible choices for the modulus, fairly large prime values of fi are more secure <ref> [11] </ref>. Furthermore, it is desirable that ff be a primitive root of the field GF (fi). If we choose fi such that fi = 2p + 1 for some prime p, there are (fi 1)=2 = p such val-ues; hence, they are easy to find.
Reference: [12] <author> B. A. LaMacchia and A. M. Odlyzko, </author> <title> "Computation of discrete logarithms in prime fields," Designs, Codes, </title> <journal> and Cryptography, </journal> <volume> vol. 1, </volume> <pages> pp. 46-62, </pages> <year> 1991. </year>
Reference-contexts: The disadvantage is that implementations become less flexible, as all parties must agree on such values. Furthermore, to maintain security, fi must be quite large, which in turn makes the exponentiation operations expensive. Some compromise in the length of the modulus is possible, however. Though LaMacchia and Odlyzko <ref> [12] </ref> suggest 1000-bit values, they are assuming that the exponentials are available to the attacker. With EKE, the password P is used to superencrypt such values; it is not possible to essay a discrete logarithm calculation except for all possible guesses of P . <p> From a general perspective, EKE functions as a privacy amplifier. That is, it can be used to strengthen comparatively weak symmetric and asymmetric systems when used together. Consider, for example, the key size needed to maintain security when using exponential key exchange. As LaMacchia and Odlyzko have shown <ref> [12] </ref>, even modulus sizes once believed to be safe (to wit, 192 bits) are vulnerable to an attack requiring only a few minutes of computer time. But their attack is not feasible if one must first guess a password before applying it.
Reference: [13] <author> S. C. Pohlig and M. Hellman, </author> <title> "An improved algorithm for computing logarithms over GF (p) and its cryptographic significance," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. IT-24, </volume> <pages> pp. 106-110, </pages> <year> 1978. </year>
Reference-contexts: even this risk is minimal if B performs certain checks to guard against easily-solvable choices: that fi is indeed prime, that it is large enough (and hence not susceptible to precalculation of tables), that fi 1 have at least one large prime factor (to guard against Pohlig and Hell-man's algorithm <ref> [13] </ref>), and that ff is a primitive root of GF (fi). The latter two conditions are related; we must know the factorization of fi 1 in order to vali date ff.
Reference: [14] <author> A. M. Odlyzko, </author> <month> June </month> <year> 1991. </year> <title> Private conversation. </title>
Reference-contexts: The latter two conditions are related; we must know the factorization of fi 1 in order to vali date ff. Requiring that fi be of the form kp + 1, where p is prime and k a very small integer, solves both problems. Recent results <ref> [14] </ref> do suggest that it may be possible to choose a fi that contains a hidden trap door. At the moment, this attack does not seem to be practical. If that should change, other choices would, of course, be preferable. Thus far, we have said nothing about choosing ff.
Reference: [15] <author> International Organization for Standardization and International Electrotechnical Committee, </author> <title> Information Processing Systems Open Systems Interconnection Specification of Abstract Syntax Notation One (ASN.1), </title> <booktitle> 1987. International Standard 8824. </booktitle>
Reference-contexts: Each of these has different requirements, though in general the same cryptosys-tem can be used. In the initial exchange, there are severe constraints on the plaintext encrypted. Fairly obviously, the messages must not use ASN.1 <ref> [15, 16] </ref> or any other form of tagged data representation; if they did, the sanity of the decrypted tags could be used to validate a guess at P .
Reference: [16] <author> International Organization for Standardization and International Electrotechnical Committee, </author> <title> Information Processing Systems Open Systems Interconnection Specification of Basic Encoding Rules for Abstract Syntax Notation One (ASN.1), </title> <booktitle> 1987. International Standard 8825. </booktitle>
Reference-contexts: Each of these has different requirements, though in general the same cryptosys-tem can be used. In the initial exchange, there are severe constraints on the plaintext encrypted. Fairly obviously, the messages must not use ASN.1 <ref> [15, 16] </ref> or any other form of tagged data representation; if they did, the sanity of the decrypted tags could be used to validate a guess at P .
Reference: [17] <author> L. Gong, </author> <title> "A note on redundancy in encrypted messages," </title> <journal> Computer Communications Review, </journal> <volume> vol. 20, </volume> <pages> pp. 18-22, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: More subtly, the original plaintext message cannot contain any non-random padding to match the encryption blocksize, nor can it contain any form of error-detecting checksum <ref> [17] </ref>. Otherwise, an attacker could use these indicators when guessing at P . Protection against communications errors must be provided by lower-layer protocols.
Reference: [18] <author> R. L. Rivest and A. Shamir, </author> <title> "How to expose an eavesdropper," </title> <journal> Communications of the ACM, </journal> <volume> vol. 27, no. 4, </volume> <pages> pp. 393-395, </pages> <year> 1984. </year>
Reference-contexts: Since the PIN is not stored within the phone, it is not possible to retrieve one from a stolen unit. EKE also provides a replacement for Rivest and Shamir's Interlock Protocol <ref> [18] </ref>. This protocol is designed to detect active eavesdroppers. If the interlock protocol is used for authentication, as suggested by Davies and Price [19, page 222], certain attacks are possible, as we have shown elsewhere [20]. Our attack does not succeed against EKE.
Reference: [19] <author> D. W. Davies and W. L. Price, </author> <title> Security for Computer Networks. </title> <publisher> John Wiley & Sons, </publisher> <editor> second ed., </editor> <year> 1989. </year>
Reference-contexts: EKE also provides a replacement for Rivest and Shamir's Interlock Protocol [18]. This protocol is designed to detect active eavesdroppers. If the interlock protocol is used for authentication, as suggested by Davies and Price <ref> [19, page 222] </ref>, certain attacks are possible, as we have shown elsewhere [20]. Our attack does not succeed against EKE. From a general perspective, EKE functions as a privacy amplifier. That is, it can be used to strengthen comparatively weak symmetric and asymmetric systems when used together.
Reference: [20] <author> S. M. Bellovin and M. Merritt, </author> <title> "An attack on password-authenticated exponential key exchange," </title> <journal> IEEE Transactions on Information Theory, </journal> <note> to appear. </note>
Reference-contexts: EKE also provides a replacement for Rivest and Shamir's Interlock Protocol [18]. This protocol is designed to detect active eavesdroppers. If the interlock protocol is used for authentication, as suggested by Davies and Price [19, page 222], certain attacks are possible, as we have shown elsewhere <ref> [20] </ref>. Our attack does not succeed against EKE. From a general perspective, EKE functions as a privacy amplifier. That is, it can be used to strengthen comparatively weak symmetric and asymmetric systems when used together. Consider, for example, the key size needed to maintain security when using exponential key exchange.
Reference: [21] <author> T. M. A. Lomas, L. Gong, J. H. Saltzer, and R. M. Needham, </author> <title> "Reducing risks from poorly chosen keys," </title> <booktitle> in Proceedings of the Twelfth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 14-18, SIGOPS, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: One should still use a longer modulus length to maintain security.) 6 Related work Lomas et al. <ref> [21] </ref> present a different protocol with the same goals. They introduce the valuable concept of verifiable plaintext, a more formal definition of the random plaintext constraint we mandate. The paper also presents a very clear and compelling argument for why protocols that prevent password-guessing attacks are needed. <p> For some of the applications we have described above, this is not feasible. As noted, EKE simply requires that the two parties share a password. The variation presented in <ref> [21] </ref> requires that the two parties have roughly synchronized clocks; again, this is not always possible.
Reference: [22] <author> L. Gong, </author> <title> "Verifiable-text attacks in cryptographic protocols," </title> <booktitle> in Proceedings of the IEEE INFOCOM '90 The Conference on Computer Communications, </booktitle> <pages> pp. 686-693, </pages> <year> 1990. </year>
Reference-contexts: They introduce the valuable concept of verifiable plaintext, a more formal definition of the random plaintext constraint we mandate. The paper also presents a very clear and compelling argument for why protocols that prevent password-guessing attacks are needed. Gong refines the definition of verifiable plaintext in <ref> [22] </ref>. The protocols in these two papers are designed to operate via a trusted third party whose public key is known to both A and B.
Reference: [23] <author> J. J. Tardo and K. Alagappan, "SPX: </author> <title> Global authentication using public key certificates," </title> <booktitle> in Proc. IEEE Computer Society Symposium on Research in Security and Privacy, (Oakland), </booktitle> <pages> pp. 232-244, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: As in our scheme, extra complexity is needed to guard against replays, known plaintext attacks, etc. The same idea is used by the SPX <ref> [23] </ref> authentication system.
References-found: 23

