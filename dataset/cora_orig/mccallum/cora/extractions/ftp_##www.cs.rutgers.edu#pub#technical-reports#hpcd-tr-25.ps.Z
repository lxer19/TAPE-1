URL: ftp://www.cs.rutgers.edu/pub/technical-reports/hpcd-tr-25.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Email: liew@cs.rutgers.edu  
Title: Using Feedback To Improve VLSI Designs  
Author: C. W. Liew 
Date: February 26, 1995  
Address: Piscataway NJ 08855  
Affiliation: Department of Computer Science Rutgers University  
Abstract: VLSI HLS design is a typical design optimization problem with a focus on generating good solutions. Typical expert design systems incorporate a large amount of domain knowledge to generate good initial solutions. These systems are unable to use information gleaned from analysis of the solutions (feedback)to generate better solutions. This paper describes a new technique called Constrained-Redo that uses feedback to improve both the power and coverage of an existing design system, the DAA system.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. R. Barbacci and D. P. Sieworiek. </author> <title> The Design and Analysis of Instruction Set Processors. </title> <publisher> McGraw-Hill, </publisher> <year> 1982. </year>
Reference-contexts: The system was originally developed at CMU as part of the CMUDA project and later extended at AT&T as part of the Algorithms to Silicon Project. The input to the system is a behavioral description in the ISPS language <ref> [1] </ref>. The behavioral description is then compiled into a data-flow graph where the nodes represent the computations that are to be performed and the edges represent the connections that are necessary for data values to be passed between the computations.
Reference: [2] <author> S. Davidson, D. Landskov, B.D. Shriver, and P.W. Mallett. </author> <title> Some experiments in local microcode compaction for horizontal machines. </title> <journal> IEEE Transactions on Computer Aided Design, </journal> <month> July </month> <year> 1985. </year>
Reference-contexts: Total area 1.936e+06 u^2. AT^N: 1.936e+06 Level 4: Average cycle time: 1300.00 ns. Total area 2.130e+06 u^2. AT^N: 2.130e+06 Best configuration found at level 2. 2.2 Evaluating a Design Each design is evaluated by first scheduling the operations onto control steps using a priority list scheduler <ref> [2] </ref>. The highest priority is assigned to operations that are on the longest path through each linear block of operations. The length, width and area of each cluster is determined using information about the numbers and sizes of registers, multiplexers and wires.
Reference: [3] <author> Johan de Kleer. </author> <title> Choices without backtracking. </title> <booktitle> In Proceedings of AAAI-84, </booktitle> <month> August </month> <year> 1984. </year>
Reference-contexts: Using design histories to improve performance: There are many learning techniques that have been tried and tested on design systems. Explanation Based Generalization (EBG) [16] and other design history based mechanisms (Chronological Backtracking [18], Dependency Directed Backtracking <ref> [3] </ref>, ATMS [4] and Case Based Reasoning (CBR) [9]) have not been used with systems like DAA because of the difficulty in obtaining design records.
Reference: [4] <author> Johan de Kleer and Brian Williams. </author> <title> Back to backtracking: Controlling the ATMS. </title> <booktitle> In Proceedings of AAAI-86, </booktitle> <year> 1986. </year>
Reference-contexts: Using design histories to improve performance: There are many learning techniques that have been tried and tested on design systems. Explanation Based Generalization (EBG) [16] and other design history based mechanisms (Chronological Backtracking [18], Dependency Directed Backtracking [3], ATMS <ref> [4] </ref> and Case Based Reasoning (CBR) [9]) have not been used with systems like DAA because of the difficulty in obtaining design records.
Reference: [5] <author> A. E. Dunlop and B. W. Kernighan. </author> <title> A Procedure for Placement of Standard-Cell VLSI Circuits. </title> <journal> IEEE Transactions on Computer-Aided-Design, </journal> <volume> 4(1), </volume> <month> January </month> <year> 1985. </year>
Reference-contexts: This information is estimated using a computation of the maximum storage required between any two control steps as well as the maximum number of interconnections required. The clusters are now laid out on a floorplan using a min-cut partitioning algorithm that is based on <ref> [5] </ref>. An approximate floor plan is generated based on the dimensions of the leaf clusters and their component modules. The area of the bounding box for the floor plan is the total area of the design.
Reference: [6] <author> Andrew Gelsey and Don Smith. </author> <title> A search space toolkit. </title> <booktitle> In Proceedings of the 11th Conference on Artificial Intelligence Applications, </booktitle> <year> 1995. </year>
Reference-contexts: This shows that the approach may be applicable to other large existing systems. We intend to apply our work to large systems in other fields. One of the current projects is to apply the Constrained-Redo technique to a simulator for a jet engine nozzle design system <ref> [6] </ref>. 11 The hope is that the feedback will enable the system to more quickly converge on an optimal solution. Acknowledgements The research described in this paper could not be done without the generosity of AT&T in providing access to the source of the DAA system.
Reference: [7] <author> S.C. Johnson. </author> <title> Hierarchical clustering trees. </title> <journal> Psychometrika, </journal> <volume> 32(3), </volume> <year> 1967. </year>
Reference-contexts: N is the exponent specified by the user for the system's objective function AT N . Initially a distance matrix is computed that gives the distance for each pair of operations. Using the method of <ref> [7] </ref>, the system forms a hierarchical clustering tree that is based on the distances in the distance matrix. The leaves represent the operations or points to be clustered and the heights in tree correspond to distances between points.
Reference: [8] <author> David W. Knapp. </author> <title> Feedback-driven datapath optimization in FASOLT. </title> <booktitle> In Proceedings of ICCAD-90, </booktitle> <year> 1990. </year>
Reference-contexts: Explanation Based Generalization (EBG) [16] and other design history based mechanisms (Chronological Backtracking [18], Dependency Directed Backtracking [3], ATMS [4] and Case Based Reasoning (CBR) [9]) have not been used with systems like DAA because of the difficulty in obtaining design records. The FASOLT <ref> [8] </ref> system was able to use feedback to improve its performance but relied on the human designer to give it specific instructions on how to use the feedback.
Reference: [9] <author> Janet A. Kolodner, </author> <title> editor. </title> <booktitle> Proceedings of the 1988 DARPA Case-Based Reasoning Work shop. </booktitle> <address> Clearwater Beach, FL, </address> <month> May </month> <year> 1988. </year>
Reference-contexts: Using design histories to improve performance: There are many learning techniques that have been tried and tested on design systems. Explanation Based Generalization (EBG) [16] and other design history based mechanisms (Chronological Backtracking [18], Dependency Directed Backtracking [3], ATMS [4] and Case Based Reasoning (CBR) <ref> [9] </ref>) have not been used with systems like DAA because of the difficulty in obtaining design records. The FASOLT [8] system was able to use feedback to improve its performance but relied on the human designer to give it specific instructions on how to use the feedback.
Reference: [10] <author> T. J. Kowalski. </author> <title> An artificial intelligence approach to VLSI design. </title> <publisher> Kluwer Academic Pub lishers, </publisher> <address> Boston, </address> <year> 1985. </year>
Reference-contexts: VLSI HLS is a well-understood problem so generating correct solutions is easy but finding a good solution remains difficult. The Design Automation System (DAA) <ref> [10, 14] </ref> is a VLSI design system that designs microprocessors. The system incorporates a large amount of domain knowledge in the form of complex evaluation functions, optimizations and rule bases for selecting appropriate library modules.
Reference: [11] <author> Fadi J. Kurdahi and A. C. Parker. </author> <title> Techniques for area estimation of VLSI layouts. </title> <journal> IEEE Transactions on Computer Aided Design, </journal> <volume> 8(1), </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: There has been some work on improving evaluation functions but they have either been working with simpler functions [17] or the work has been done by human designers, e.g., <ref> [11, 14] </ref>. 8 Conclusion This paper has described how the Feedback Directed Optimization (FDO) approach, in particular the Constrained-Redo technique, has been applied to an existing VLSI design system.
Reference: [12] <author> C.W. Liew. </author> <title> Feedback Directed Optimization. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Rutgers University, </institution> <year> 1994. </year> <note> Also available as Tech. Report HPCD-TR-13. 12 </note>
Reference-contexts: The technique is called Constrained-Redo and it uses information output by critiques of an existing solution to guide the design system to generate a new, different and hopefully better solution. The Constrained-Redo technique is part of the Feedback Directed Optimization (FDO) framework described in <ref> [12] </ref>. The extended system (FDO/DAA) has been tested on several standard microprocessor designs and it has improved many of the solutions that DAA generated. 2 The DAA System DAA is a system designed to solve the problem of automated synthesis of digital hardware from behavioral descriptions. <p> If there is a disparity, the method will try to find a better allocation of the operations to the function units. Further details about the analysis process can be found in <ref> [12] </ref>. As an example, if we set the objective function to AT 0 for the design of an AMD2901, then the generated solutions are shown in Figure 2. The best solution generated by DAA is the one generated at level two of the cluster tree with two clusters.
Reference: [13] <author> S. Lin and B.W. Kernighan. </author> <title> An effective heuristic for the traveling salesman problem. </title> <journal> Operations Research, </journal> <volume> 21 </volume> <pages> 498-516, </pages> <year> 1973. </year>
Reference-contexts: The FDO approach can be viewed as an intra-problem learning technique wherein the system improves its performance by analyzing the solutions that it generates. Earlier work on problems like the Traveling Salesman Problem (TSP) <ref> [13] </ref> or in planning (HACKER [19]) used feedback from analysis to directly modify the solution. This approach is not applicable to VLSI High Level Synthesis because the components interact strongly and make it difficult to modify the solution without causing it to be incorrect.
Reference: [14] <author> M.C. McFarland S.J. and T.J. Kowalski. </author> <title> Incorporating bottom-up design into hardware synthesis. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 9(9) </volume> <pages> 938-950, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: VLSI HLS is a well-understood problem so generating correct solutions is easy but finding a good solution remains difficult. The Design Automation System (DAA) <ref> [10, 14] </ref> is a VLSI design system that designs microprocessors. The system incorporates a large amount of domain knowledge in the form of complex evaluation functions, optimizations and rule bases for selecting appropriate library modules. <p> The distance between operations depends on three factors: their common functionality, degree 2 of interconnection and potential parallelism. More precisely the distance between two operations x and y is defined to be (from <ref> [14] </ref>): dist (x; y) = S 1 fi f prox (x; y) S 2 fi cprox (x; y) +N fi S 3 fi par (x; y) (1) where f prox (x; y) = f cost (x) + f cost (y) f cost (xy) f cost (xy) cprox (x; y) = commconn <p> There has been some work on improving evaluation functions but they have either been working with simpler functions [17] or the work has been done by human designers, e.g., <ref> [11, 14] </ref>. 8 Conclusion This paper has described how the Feedback Directed Optimization (FDO) approach, in particular the Constrained-Redo technique, has been applied to an existing VLSI design system.
Reference: [15] <author> Michael C. McFarland S.J., Alice C. Parker, and Raul Camposano. </author> <title> Tutorial on high-level synthesis. </title> <booktitle> In Proceedings of the 25th Design Automation Conference, </booktitle> <year> 1988. </year>
Reference-contexts: The behavior of the RTL description must satisfy the functional requirements embedded in the algorithmic description. Examples of chips specified using this scheme range from simple circuits, e.g., digital filters, to complex microprocessors, e.g., Motorola MC68000. A more detailed description of High Level Synthesis can be found in <ref> [15] </ref>. Optimization is a very important part of the VLSI design process. Much time and design effort is spent on determining how to generate a solution that is optimized for a particular combination of criteria, e.g., AREA or TIME or both.
Reference: [16] <author> T. M. Mitchell, R. M. Keller, and S. T. Kedar-Cabelli. </author> <title> Explanation-based generalization: A unifying view. </title> <journal> Machine Learning, </journal> <volume> 1(1), </volume> <year> 1986. </year>
Reference-contexts: The work that is most closely related to the FDO research falls under two general categories. Using design histories to improve performance: There are many learning techniques that have been tried and tested on design systems. Explanation Based Generalization (EBG) <ref> [16] </ref> and other design history based mechanisms (Chronological Backtracking [18], Dependency Directed Backtracking [3], ATMS [4] and Case Based Reasoning (CBR) [9]) have not been used with systems like DAA because of the difficulty in obtaining design records.
Reference: [17] <author> A. L. Samuel. </author> <title> Some studies of machine learning using the game of checkers. </title> <booktitle> In Computers and Thought, </booktitle> <pages> pages 71-105. </pages> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1963. </year>
Reference-contexts: Generating better evaluation functions: In the previous section (Section 6), we discussed the difficulties involved in improving or modifying a complex evaluation function like the one shown in Equation 1. There has been some work on improving evaluation functions but they have either been working with simpler functions <ref> [17] </ref> or the work has been done by human designers, e.g., [11, 14]. 8 Conclusion This paper has described how the Feedback Directed Optimization (FDO) approach, in particular the Constrained-Redo technique, has been applied to an existing VLSI design system.
Reference: [18] <author> R. Stallman and G. Sussman. </author> <title> Forward reasoning and dependency-directed backtracking in a system for computer-aided circuit analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 9 </volume> <pages> 135-196, </pages> <year> 1977. </year>
Reference-contexts: The work that is most closely related to the FDO research falls under two general categories. Using design histories to improve performance: There are many learning techniques that have been tried and tested on design systems. Explanation Based Generalization (EBG) [16] and other design history based mechanisms (Chronological Backtracking <ref> [18] </ref>, Dependency Directed Backtracking [3], ATMS [4] and Case Based Reasoning (CBR) [9]) have not been used with systems like DAA because of the difficulty in obtaining design records.
Reference: [19] <author> G. Sussman. </author> <title> A computer model of skill acquisition. </title> <address> American-Elsevier, New York, </address> <year> 1975. </year> <month> 13 </month>
Reference-contexts: The FDO approach can be viewed as an intra-problem learning technique wherein the system improves its performance by analyzing the solutions that it generates. Earlier work on problems like the Traveling Salesman Problem (TSP) [13] or in planning (HACKER <ref> [19] </ref>) used feedback from analysis to directly modify the solution. This approach is not applicable to VLSI High Level Synthesis because the components interact strongly and make it difficult to modify the solution without causing it to be incorrect.
References-found: 19

