URL: http://www.cs.uni-bonn.de/IV/blum/papers/gnf3.ps.Z
Refering-URL: http://www.cs.uni-bonn.de/IV/blum/blum.html
Root-URL: http://cs.uni-bonn.de
Email: email: blum@cs.uni-bonn.de  
Title: Greibach Normal Form Transformation, Revisited  
Author: Norbert Blum Robert Koch 
Date: August 25, 1998  
Address: Romerstr. 164, D-53117 Bonn, Germany  
Affiliation: Informatik IV, Universitat Bonn  
Abstract: We develop a new method for placing a given context-free grammar into Greibach normal form with only polynomial increase of its size. Starting with an arbitrary "-free context-free grammar G, we transform G into an equivalent context-free grammar H in extended Greibach normal form; i.e., in addition to rules, fulfilling the Greibach normal form properties, the grammar can have chain rules. The size of H will be O(jGj 3 ), where jGj is the size of G. Moreover, in the case that G is chain rule free, H will be already in Greibach normal form. If H is not chain rule free then we use the standard method for chain rule elimination for the transformation of H into Greibach normal form. The size of the constructed grammar is O(jGj 4 ). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, and J. D. Ullman, </author> <title> The Theory of Parsing, Translation, and Compiling, Vol. I: Parsing, </title> <publisher> Prentice-Hall (1972). </publisher>
Reference-contexts: 1 Introduction and definitions We assume that the reader is familiar with the elementary theory of finite automata and context-free grammars as written in standard text books, e.g. <ref> [1, 4, 5, 11] </ref>.
Reference: [2] <author> A. Ehrenfeucht, and G. Rozenberg, </author> <title> An easy proof of Greibach normal form, Inform. </title> <booktitle> and Control 63 (1984), </booktitle> <pages> 190-199. </pages>
Reference-contexts: In [10] Urbanek has given an algorithm for the transformation of a given context-free grammar 3 in Chomsky normal form into Greibach normal form which produces in a pure derivation-oriented way without using systems of equations the same grammar as Rosenkrantz's algorithm. Ehrenfeucht and Rozenberg <ref> [2] </ref> have given another algorithm which constructs for a given arbitrary "-free context-free grammar G an equivalent grammar in 2 Greibach normal form of size O (jGj 6 ). They also use the language L B of sentential forms of terminal leftmost derivations introduced in Section 2.
Reference: [3] <author> S. A. Greibach, </author> <title> A new normal-form theorem for context-free, phrase-structure grammars, </title> <booktitle> JACM 12 (1965), </booktitle> <pages> 42-52. </pages>
Reference-contexts: Given an arbritrary context-free grammar G = (V; ; P; S), it is well known that G can be transformed into an equivalent context-free grammar G 0 which is in Greibach normal form <ref> [3, 4, 5, 11] </ref>. But the usual algorithms possibly construct a context-free grammar G 0 , where the size of G 0 is exponential in the size of G (see [4], pp. 113-115 for an example).
Reference: [4] <author> M. A. Harrison, </author> <title> Introduction to Formal Language Theory, </title> <publisher> Addison-Wesley (1978). </publisher>
Reference-contexts: 1 Introduction and definitions We assume that the reader is familiar with the elementary theory of finite automata and context-free grammars as written in standard text books, e.g. <ref> [1, 4, 5, 11] </ref>. <p> Given an arbritrary context-free grammar G = (V; ; P; S), it is well known that G can be transformed into an equivalent context-free grammar G 0 which is in Greibach normal form <ref> [3, 4, 5, 11] </ref>. But the usual algorithms possibly construct a context-free grammar G 0 , where the size of G 0 is exponential in the size of G (see [4], pp. 113-115 for an example). <p> But the usual algorithms possibly construct a context-free grammar G 0 , where the size of G 0 is exponential in the size of G (see <ref> [4] </ref>, pp. 113-115 for an example). Given a context-free grammar G without "-rules and without chain rules, Rosenkrantz [9] has given an algorithm which produces an equivalent context-free grammar G 0 in Greibach normal form such that jG 0 j = O (jGj 3 ). <p> Rosenkrantz gave no analysis of the size of G 0 . For an analysis, see <ref> [4] </ref>, pp. 129-130 or [7]. Given an arbitrary context-free grammar G = (V; ; P; S), the usual algorithm for the elimination of the chain rules can square the size of the grammar (see [4], p. 102 for an example). No better algorithm is known. <p> Rosenkrantz gave no analysis of the size of G 0 . For an analysis, see <ref> [4] </ref>, pp. 129-130 or [7]. Given an arbitrary context-free grammar G = (V; ; P; S), the usual algorithm for the elimination of the chain rules can square the size of the grammar (see [4], p. 102 for an example). No better algorithm is known. <p> The size of the constructed grammar is O (jGj 4 ). In [6], Piricka-Kelemenova has shown for a specific infinite family of context-free grammars G that any equivalent context-free grammar in Greibach normal form has size (jGj 2 ) (see also <ref> [4] </ref>, p. 131). This is the best lower bound known so far such that a gap of O (jGj 2 ) between to the best lower bound and the new upper bound still exists. 2 The method Let G = (V; ; P; S) be an arbitrary "-free context-free grammar. <p> It is easy to see that we get a context-free grammar G 0 in 2 Greibach normal form. Since the first step increases the size of the grammar only by a small constant factor (see e.g. <ref> [4] </ref>), jG 0 j = O (jGj 4 ).
Reference: [5] <author> J. E. Hopcroft, and J. D. Ullman, </author> <title> Introduction to Autmata Theory, Languages, and Computation, </title> <publisher> Addison-Wesley (1979). </publisher> <pages> 9 </pages>
Reference-contexts: 1 Introduction and definitions We assume that the reader is familiar with the elementary theory of finite automata and context-free grammars as written in standard text books, e.g. <ref> [1, 4, 5, 11] </ref>. <p> Given an arbritrary context-free grammar G = (V; ; P; S), it is well known that G can be transformed into an equivalent context-free grammar G 0 which is in Greibach normal form <ref> [3, 4, 5, 11] </ref>. But the usual algorithms possibly construct a context-free grammar G 0 , where the size of G 0 is exponential in the size of G (see [4], pp. 113-115 for an example).
Reference: [6] <author> A. Piricka-Kelemenova, </author> <title> Greibach normal form complexity, </title> <booktitle> 4th MFCS (1975), </booktitle> <pages> 344-350. </pages>
Reference-contexts: If H is not chain rule free, then we use the standard method for chain rule elimination for the transformation of H into Greibach normal form. The size of the constructed grammar is O (jGj 4 ). In <ref> [6] </ref>, Piricka-Kelemenova has shown for a specific infinite family of context-free grammars G that any equivalent context-free grammar in Greibach normal form has size (jGj 2 ) (see also [4], p. 131).
Reference: [7] <author> A. Kelemenova, </author> <title> Complexity of normal form grammars, </title> <booktitle> TCS 28 (1984), </booktitle> <pages> 299-314. </pages>
Reference-contexts: Rosenkrantz gave no analysis of the size of G 0 . For an analysis, see [4], pp. 129-130 or <ref> [7] </ref>. Given an arbitrary context-free grammar G = (V; ; P; S), the usual algorithm for the elimination of the chain rules can square the size of the grammar (see [4], p. 102 for an example). No better algorithm is known.
Reference: [8] <author> R. Koch, and N. Blum, </author> <title> Greibach normal form transformation, revisited, </title> <booktitle> 14th STACS (1997), </booktitle> <pages> 47-54. </pages>
Reference-contexts: They also use the language L B of sentential forms of terminal leftmost derivations introduced in Section 2. But during the construction they use a chain rule free right linear scheme H, where the absence of chain rules seems to be essential. In <ref> [8] </ref>, we have given a similiar construction. But since we do not need the chain rule freedom in between, we get an equivalent context-free grammar in 2 Greibach normal form of size O (jGj 4 ).
Reference: [9] <author> D. J. Rosenkrantz, </author> <title> Matrix equations and normal forms for context-free grammers, </title> <booktitle> JACM 14 (1967), </booktitle> <pages> 501-507. </pages>
Reference-contexts: But the usual algorithms possibly construct a context-free grammar G 0 , where the size of G 0 is exponential in the size of G (see [4], pp. 113-115 for an example). Given a context-free grammar G without "-rules and without chain rules, Rosenkrantz <ref> [9] </ref> has given an algorithm which produces an equivalent context-free grammar G 0 in Greibach normal form such that jG 0 j = O (jGj 3 ). Rosenkrantz gave no analysis of the size of G 0 . For an analysis, see [4], pp. 129-130 or [7].
Reference: [10] <author> F. J. Urbanek, </author> <title> On Greibach normal form construction, </title> <booktitle> TCS 40 (1985), </booktitle> <pages> 315-317. </pages>
Reference-contexts: Rosenkrantz's algorithm uses formal power series. In <ref> [10] </ref> Urbanek has given an algorithm for the transformation of a given context-free grammar 3 in Chomsky normal form into Greibach normal form which produces in a pure derivation-oriented way without using systems of equations the same grammar as Rosenkrantz's algorithm.
Reference: [11] <author> D. Wood, </author> <title> Theory of Computation, </title> <publisher> Harper & Row (1987). </publisher> <pages> 10 </pages>
Reference-contexts: 1 Introduction and definitions We assume that the reader is familiar with the elementary theory of finite automata and context-free grammars as written in standard text books, e.g. <ref> [1, 4, 5, 11] </ref>. <p> Given an arbritrary context-free grammar G = (V; ; P; S), it is well known that G can be transformed into an equivalent context-free grammar G 0 which is in Greibach normal form <ref> [3, 4, 5, 11] </ref>. But the usual algorithms possibly construct a context-free grammar G 0 , where the size of G 0 is exponential in the size of G (see [4], pp. 113-115 for an example).
References-found: 11

