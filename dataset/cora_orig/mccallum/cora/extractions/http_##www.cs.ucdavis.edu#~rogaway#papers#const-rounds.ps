URL: http://www.cs.ucdavis.edu/~rogaway/papers/const-rounds.ps
Refering-URL: http://www.cs.ucdavis.edu/~rogaway/papers/
Root-URL: http://www.cs.ucdavis.edu
Title: The Round Complexity of Secure Protocols (Extended Abstract)  
Author: Donald Beaver Silvio Micali Phillip Rogaway 
Affiliation: Harvard University  MIT  MIT  
Date: (1990), 503-513. 1  
Note: Appears in Proceedings of the 22nd Annual ACM Symposium on the Theory of Computing  
Abstract: In a network of n players, each player i having private input x i , we show how the players can collaboratively evaluate a function f(x 1 ; : : : ; x n ) in a way that does not compromise the privacy of the players' inputs, and yet requires only a constant number of rounds of interaction. The underlying model of computation is a complete network of private channels, with broadcast, and a majority of the players must behave honestly. Our solution assumes the existence of a one-way function. 
Abstract-found: 1
Intro-found: 1
Reference: [BB89] <author> J. Bar-Ilan and D. Beaver, </author> <title> "Non-Cryptographic Fault Tolerant Computing in a Constant Number of Rounds of Interaction," </title> <booktitle> Proc. of the 8th PODC (1989), </booktitle> <pages> 201-09. </pages>
Reference-contexts: For many concrete computations, the resulting number of rounds would be prohibitive; in distributed computation, the number of rounds is generally the most valuable resource. Bar-Ilan and Beaver <ref> [BB89] </ref> were the first to investigate reducing the round complexity for secure function evaluation. They exhibited a non-cryptographic method that always saves a logarithmic factor of rounds (logarithmic in the total length of the players' inputs), while the total amount of communication grows only by a polynomial factor.
Reference: [Be88] <author> D. Beaver, </author> <title> "Secure Multiparty Protocols Tolerating Half Faulty Processors," </title> <type> Harvard Technical Report TR-19-88, </type> <note> and in CRYPTO-89 Proceedings. </note>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages. <p> Computing on shared bits. [RB89] have shown that in our model of computation, VSS is implementable in a constant number of rounds and tolerating any compu-tationally unbounded t-adversary, for any t &lt; n=2. Furthermore, they (as well as <ref> [Be88] </ref>) have shown that any Boolean circuit C with bounded fan-in and depth d can be evaluated on shared values securely and secretly| that is, the inputs to the computation are shared bits, and the result also is a shared bit (which will be revealed only if so wanted). <p> To give a second example, the result of Ben-Or and El-Yaniv <ref> [BE88] </ref> can be applied to give secure constant-round computation in the model with only private channels. Corollary 5 Same as Theorem 3, but for t &lt; n=3 and in the model with only private channels (no broadcast).
Reference: [Be90] <author> D. Beaver, </author> <title> "Security, Fault-Tolerance, and Communication Complexity for Distributed Systems," </title> <type> Har-vard University Ph.D. Thesis, </type> <year> 1990. </year>
Reference: [BFKR89] <author> D. Beaver, J. Feigenbaum, J. Kilian, and P. Rog-away, </author> <title> "Cryptographic Applications of Locally Random Reductions," </title> <institution> Bell Laboratories Technical Memorandum, </institution> <month> November </month> <year> 1989. </year> <title> Also a 1990 PODC submission, "Security with Low Communication Overhead." </title>
Reference-contexts: A partial answer to this question is now known, due to Beaver, Feigenbaum, Kilian, and Rogaway <ref> [BFKR89] </ref>: they show that any functions on O ((n log n)=t) shared bits can be t-securely evaluated in a constant number of rounds by a network of n processors.
Reference: [BG89] <author> D. Beaver and S. Goldwasser, </author> <title> "Multiparty Computations with Faulty Majority," </title> <booktitle> CRYPTO-89 Proceedings. </booktitle>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages.
Reference: [BE88] <author> M. Ben-Or and R. El-Yaniv, </author> <title> "Interactive Consistency in Constant Expected Time," </title> <type> manuscript, </type> <month> De-cember </month> <year> 1988. </year>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages. <p> Computing on shared bits. [RB89] have shown that in our model of computation, VSS is implementable in a constant number of rounds and tolerating any compu-tationally unbounded t-adversary, for any t &lt; n=2. Furthermore, they (as well as <ref> [Be88] </ref>) have shown that any Boolean circuit C with bounded fan-in and depth d can be evaluated on shared values securely and secretly| that is, the inputs to the computation are shared bits, and the result also is a shared bit (which will be revealed only if so wanted). <p> To give a second example, the result of Ben-Or and El-Yaniv <ref> [BE88] </ref> can be applied to give secure constant-round computation in the model with only private channels. Corollary 5 Same as Theorem 3, but for t &lt; n=3 and in the model with only private channels (no broadcast).
Reference: [BGW88] <author> M. Ben-Or, S. Goldwasser and A. Wigderson, </author> <title> "Completeness Theorems for Non-Cryptographic Fault-Tolerant Distributed Computation," </title> <booktitle> Proc. of the 20th STOC (1988), </booktitle> <pages> 1-10. </pages>
Reference-contexts: The first general solution for secure function evaluation was found by Yao [Ya86] for the two-party case, and by Goldreich, Micali and Wigderson [GMW87] for the multiparty case. Many other protocols for the multiparty case have been found since. In particular, the protocols of Ben-Or, Goldwasser and Wigder-son <ref> [BGW88] </ref>, Chaum, Crepeau and Damg-ard [CCD88], and Rabin and Ben-Or [RB89], succeed in defeating the influence of bad players without making use of cryptography, assuming that the privacy of communication among players is guaranteed. Other general protocols with different and interesting properties include [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89].
Reference: [BM82] <author> M. Blum and S. Micali, </author> <title> "How to Generate Cryptographically Strong Sequences of Pseudo-Random Bits," </title> <journal> SIAM J. of Computing, </journal> <volume> 13 </volume> <month> 850-864 </month> <year> (1984), </year> <note> and FOCS 82. </note>
Reference-contexts: This is a deterministic polynomial-time algorithm stretching a short, truly random input string (the "seed") to a longer, pseudorandom string. It is required that the ensemble of output strings be computationally indistinguishable from truly random strings of the same length. This notion is due to Blum and Micali <ref> [BM82] </ref> and Yao [Ya82b], who showed that such generators exist under suitable complexity assumptions. Complexity assumption The only complexity assumption used for our main theorem is the existence of a pseudorandom generator.
Reference: [Ch89] <author> D. Chaum, </author> <title> "The Spymasters Double-Agent Problem: Multiparty Computations Secure Unconditionally from Minorities and Cryptographically from Majorities," </title> <booktitle> CRYPTO-89 Proceeding. </booktitle>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages.
Reference: [CCD88] <author> D. Chaum, C. Crepeau and I. Damg-ard, </author> <title> "Multi-party Unconditionally Secure Protocols," </title> <booktitle> Proc. of the 20th STOC (1988), </booktitle> <pages> 11-19. </pages>
Reference-contexts: Many other protocols for the multiparty case have been found since. In particular, the protocols of Ben-Or, Goldwasser and Wigder-son [BGW88], Chaum, Crepeau and Damg-ard <ref> [CCD88] </ref>, and Rabin and Ben-Or [RB89], succeed in defeating the influence of bad players without making use of cryptography, assuming that the privacy of communication among players is guaranteed. Other general protocols with different and interesting properties include [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89]. The GMW paradigm.
Reference: [CDG87] <author> D. Chaum, I. Damg-ard and J. van de Graff, </author> <title> "Multiparty Computations Ensuring the Privacy of Each Party's Input and Correctness of the Result," </title> <booktitle> CRYPTO-87 Proceedings, </booktitle> <pages> 87-119. </pages>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages.
Reference: [CGMA85] <author> B. Chor, O. Goldreich, S. Micali and B. Awer-buch, </author> <title> "Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults," </title> <booktitle> Proc. of the 26th FOCS (1985), </booktitle> <pages> 383-95. 10 </pages>
Reference-contexts: Verifiable Secret Sharing. Let us informally state the notion of verifiable secret sharing (VSS), originally introduced by <ref> [CGMA85] </ref>. This is a way to secretly commit to a value. A distinguished player D (the dealer) has a private input bit b. At the end of an execution of a VSS protocol tolerating t faults, each player i holds his own private share b i of bit b.
Reference: [CR87] <author> B. Chor and M. Rabin, </author> <title> "Achieving Independence in Logarithmic Number of Rounds," </title> <booktitle> Proc. of the 6th PODC (1987). </booktitle>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages.
Reference: [Fe88] <author> P. Feldman, </author> <title> "One Can Always Assume Private Channels," </title> <note> unpublished manuscript (1988). </note>
Reference-contexts: Local computation in P is poly (jCj; k) time bounded, where poly is a fixed polynomial. As mentioned in Section 1, corresponding results for other models of computation follow. For example, the result of Feldman <ref> [Fe88] </ref> implies that public-key encryption can be used to establish the analogous result for the broadcast model.
Reference: [FM88] <author> P. Feldman and S. Micali, </author> <title> "Optimal Algorithms for Byzantine Agreement," </title> <booktitle> Proc. of the 20th STOC (1988), </booktitle> <pages> 148-161. </pages>
Reference: [GHY87] <author> Z. Galil, S. Haber and M. Yung, </author> <title> "Cryptographic Computation: Secure Fault-Tolerant Protocols and the Public-Key Model," </title> <booktitle> CRYPTO-87 Proceedings, </booktitle> <pages> 135-155. </pages>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages.
Reference: [GMW87] <author> O. Goldreich, S. Micali and A. Wigderson, </author> <title> "How to Play Any Mental Game," </title> <booktitle> Proc. of the 19th STOC (1987), </booktitle> <pages> 218-229. </pages>
Reference-contexts: Here, as people may be behind their computers, correctness and privacy are equally important. The first general solution for secure function evaluation was found by Yao [Ya86] for the two-party case, and by Goldreich, Micali and Wigderson <ref> [GMW87] </ref> for the multiparty case. Many other protocols for the multiparty case have been found since. <p> Other general protocols with different and interesting properties include [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89]. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of <ref> [GMW87] </ref> that we now describe. There are three stages. In the first stage, each player shares the bits of his private input. Sharing a bit b entails breaking b into n "shares," b 1 ; : : : ; b n , and giving share b i to player i.
Reference: [GV87] <author> O. Goldreich and R. Vainish, </author> <title> "How to Solve any Protocol Problem|An Efficiency Improvement," </title> <booktitle> CRYPTO-87 Proceedings, </booktitle> <pages> 76-86. </pages>
Reference-contexts: Other general protocols with different and interesting properties include <ref> [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89] </ref>. The GMW paradigm. In the above multiparty protocols, the underlying notions of security are often quite different, and so are the assumed communication models. Nonetheless, all of them follow the same paradigm of [GMW87] that we now describe. There are three stages.
Reference: [Ha88] <author> S. Haber, </author> <title> "Multi-Party Cryptographic Computation: Techniques and Applications," </title> <institution> Columbia University Ph.D. </institution> <note> Thesis (1988). </note>
Reference: [Ha90] <author> J. H-astad, </author> <title> "Pseudo-Random Generators with Uniform Assumptions," </title> <booktitle> these proceedings. </booktitle>
Reference-contexts: This notion is due to Blum and Micali [BM82] and Yao [Ya82b], who showed that such generators exist under suitable complexity assumptions. Complexity assumption The only complexity assumption used for our main theorem is the existence of a pseudorandom generator. Recently, Impagliazzo, Levin and Luby [ILL89] and H-astad <ref> [Ha90] </ref> have shown this assumption to be equivalent to the existence of a one-way function. The structure of our protocol The protocol we construct has two phases. The first phase is a non-cryptographic protocol.
Reference: [KMR90] <author> J. Kilian, S. Micali and P. Rogaway, </author> <title> "The Notion of Secure Computation," </title> <type> manuscript, </type> <month> March </month> <year> 1990. </year>
Reference-contexts: These are non-trivial matters. Many valuable notions of security have been proposed and used in the literature. In this abstract, we adopt notions of security due to Kilian, Micali, and Rogaway <ref> [KMR90] </ref>. We believe their formalization to be the "right one," and present it in Section 2. However, we make no attempt to compare this notion with previous ones, or to support the above claim. <p> Security As with zero-knowledge interactive proofs, the notion of privacy involves the approximability of the adversary's view by a simulator. The question is: the view should be approximable given what? We now state definitions from <ref> [KMR90] </ref>. A t-bounded (~x; f )-oracle behaves as follows. It ac cepts two types of queries, called component queries and output queries. A component query is an integer i, 1 i n.
Reference: [ILL89] <author> R. Impagliazzo, L. Levin and M. Luby, </author> <title> "PseudoRandom Generation from One-Way Functions," </title> <booktitle> Proc. of the 21st STOC (1989), </booktitle> <pages> 12-23. </pages>
Reference-contexts: This notion is due to Blum and Micali [BM82] and Yao [Ya82b], who showed that such generators exist under suitable complexity assumptions. Complexity assumption The only complexity assumption used for our main theorem is the existence of a pseudorandom generator. Recently, Impagliazzo, Levin and Luby <ref> [ILL89] </ref> and H-astad [Ha90] have shown this assumption to be equivalent to the existence of a one-way function. The structure of our protocol The protocol we construct has two phases. The first phase is a non-cryptographic protocol.
Reference: [RB89] <author> T. Rabin and M. Ben-Or, </author> <title> "Verifiable Secret Sharing and Multiparty Protocols with Honest Majority," </title> <booktitle> Proc. of the 21st STOC (1989), </booktitle> <pages> 73-85. </pages>
Reference-contexts: Many other protocols for the multiparty case have been found since. In particular, the protocols of Ben-Or, Goldwasser and Wigder-son [BGW88], Chaum, Crepeau and Damg-ard [CCD88], and Rabin and Ben-Or <ref> [RB89] </ref>, succeed in defeating the influence of bad players without making use of cryptography, assuming that the privacy of communication among players is guaranteed. Other general protocols with different and interesting properties include [GV87, CR87, CDG87, GHY87, Be88, BG89, Ch89]. The GMW paradigm. <p> A committed value is publicly revealed if all good players broadcast their private shares of the value; in this way, all the players recover the value. Computing on shared bits. <ref> [RB89] </ref> have shown that in our model of computation, VSS is implementable in a constant number of rounds and tolerating any compu-tationally unbounded t-adversary, for any t &lt; n=2.
Reference: [Ro90] <author> P. Rogaway, </author> <title> "The Round Complexity of Secure Protocols," </title> <type> MIT Ph.D. Thesis (1990). </type>
Reference: [Ya82a] <author> A. Yao, </author> <title> Protocols for Secure Computation, </title> <booktitle> Proc. of the 23rd FOCS (1982) 160-164. </booktitle>
Reference: [Ya82b] <author> A. Yao, </author> <title> "Theory and Applications of Trapdoor Functions," </title> <booktitle> Proc. of the 23rd FOCS (1982) 80-91. </booktitle>
Reference-contexts: It is required that the ensemble of output strings be computationally indistinguishable from truly random strings of the same length. This notion is due to Blum and Micali [BM82] and Yao <ref> [Ya82b] </ref>, who showed that such generators exist under suitable complexity assumptions. Complexity assumption The only complexity assumption used for our main theorem is the existence of a pseudorandom generator.
Reference: [Ya86] <author> A. Yao, </author> <title> "How to Generate and Exchange Secrets," </title> <booktitle> Proc. of the 18th STOC (1986) 162-167. </booktitle> <pages> 11 </pages>
Reference-contexts: Second, secure function computation is central to protocol design, as the correctness and privacy of any protocol can be reduced to it. Here, as people may be behind their computers, correctness and privacy are equally important. The first general solution for secure function evaluation was found by Yao <ref> [Ya86] </ref> for the two-party case, and by Goldreich, Micali and Wigderson [GMW87] for the multiparty case. Many other protocols for the multiparty case have been found since. <p> However, we make no attempt to compare this notion with previous ones, or to support the above claim. A bird's-eye view of our solution Our method can be described as finding the right way to generalize the older two-party protocol of Yao <ref> [Ya86] </ref>. His result has been used within the GMW paradigm for computing the desired "outgoing shares" of each gate from its "incoming shares" by engaging in many, suitably chosen, two-party computations. This use, however, leads to an unbounded number of rounds.
References-found: 27

