URL: ftp://ftp.cs.colorado.edu/users/alw/papers/md96.ps.Z
Refering-URL: http://www.cs.colorado.edu/~serl/dot/Papers.html
Root-URL: http://www.cs.colorado.edu
Email: fdoppke,dennis,alwg@cs.colorado.edu  
Title: Language-Based Support for Metadata  
Author: John Doppke, Dennis Heimbigner, and Alexander L. Wolf 
Address: Boulder, Colorado 80309 USA  
Affiliation: Department of Computer Science University of Colorado  
Date: April 16-18, 1996  
Note: From the Proceedings of the First IEEE Metadata Conference, Silver Spring, Maryland,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D.A. Baker, D.A. Fisher, and J.C. Shultis. </author> <title> The Gardens of Iris. Incremental Systems Corporation, </title> <address> Pittsburgh, PA, </address> <year> 1988. </year>
Reference-contexts: Language-specific tools can also be supported, if the representation is properly designed, by building a variety of optional language-specific interfaces on top. Diana [2], Iris <ref> [1] </ref>, and Reprise [6] are perhaps the best known of the abstract semantics graph models. Diana is inappropriate for our purposes because the graph structure is extremely language specific (i.e., to Ada). This means that one must define a new variant of Diana for every language.
Reference: [2] <author> A. Evans, K.J. Butler, G. Goos, </author> <title> and W.A. Wulf. Diana Reference Manual, </title> <type> Revision 3. </type> <institution> Tartan Laboratories, Inc., </institution> <address> Pittsburgh, PA, </address> <year> 1983. </year>
Reference-contexts: Language-specific tools can also be supported, if the representation is properly designed, by building a variety of optional language-specific interfaces on top. Diana <ref> [2] </ref>, Iris [1], and Reprise [6] are perhaps the best known of the abstract semantics graph models. Diana is inappropriate for our purposes because the graph structure is extremely language specific (i.e., to Ada). This means that one must define a new variant of Diana for every language.
Reference: [3] <author> R. Kadia. </author> <title> Issues Encountered in Building A Flexible Software Development Environment. </title> <booktitle> In Proc. Fifth ACM SIGSOFT/SIGPLAN Symposium on Software Development Environments, </booktitle> <address> Washington, D.C., </address> <month> 9-11 December </month> <year> 1992. </year>
Reference-contexts: The advantage of this layered approach is that it clearly provides significant opportunities for reuse of operator declarations. Iris was developed in conjunction with the Arcadia project <ref> [3] </ref> primarily to represent Ada and several Ada variants. Reprise, which was inspired by Iris, was developed at AT&T Bell Laboratories primarily to represent C ++ .
Reference: [4] <author> Gregor Kiczales, Jim des Rivieres, and Daniel Bobrow. </author> <title> The Art of the Metaobject Protocol. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1991. </year>
Reference-contexts: It is often useful to extend the semantics of a language or database feature unobtrusively, such as to add the generation of tracing or triggering information to operation calls. The CLOS meta-object protocol <ref> [4] </ref>, for example, supports this by allowing dynamic changes to metadata information. * Specialization. Inheritance and subtyping mechanisms depend upon a dynamic binding of operation calls to operation bodies.
Reference: [5] <author> Object Management Group. </author> <title> The Common Object Request Broker: Architecture and Specification, </title> <month> 26 August </month> <year> 1991. </year>
Reference-contexts: This prototype, the CORBA Repository for Interface Metadata Exchange (CRIME), uses the Reprise notation to represent the interface definition language (IDL) used in the distributed object environment CORBA. 5.1 CORBA Interface Repository Recognizing the need for dynamic, run-time access to interface metadata, the CORBA standard <ref> [5] </ref> defines the interface for an interface repository.
Reference: [6] <author> D.S. Rosenblum and A.L. Wolf. </author> <title> Representing Semantically Analyzed C++ Code with Reprise. </title> <booktitle> In Proceedings of the Third C++ Technical Conference, </booktitle> <pages> pages 119-134. </pages> <publisher> USENIX Association, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: Language-specific tools can also be supported, if the representation is properly designed, by building a variety of optional language-specific interfaces on top. Diana [2], Iris [1], and Reprise <ref> [6] </ref> are perhaps the best known of the abstract semantics graph models. Diana is inappropriate for our purposes because the graph structure is extremely language specific (i.e., to Ada). This means that one must define a new variant of Diana for every language.
References-found: 6

