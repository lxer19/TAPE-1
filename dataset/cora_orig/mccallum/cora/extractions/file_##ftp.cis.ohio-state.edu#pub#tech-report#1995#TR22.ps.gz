URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1995/TR22.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Title: Application to Qualitative Physics  
Author: Kenneth Yip Feng Zhao Feng Zhao, 
Keyword: Spatial Aggregate: Theory  
Address: New Haven, CT 06520.  2015 Neil Ave., Columbus, OH 43210.  
Affiliation: Department of Computer Science, Yale University,  Department of Computer and Information Science, The Ohio State University,  
Note: and  Corresponding author:  
Email: E-mail: fz@cis.ohio-state.edu,  
Phone: Phone: 614-292-1553, Fax: 614-292-2911  
Date: May 8, 1995  
Abstract: Tech Report OSU-CISRC-3/95-TR22, Comp. & Info. Sci., Ohio State U., 1995 1 Abstract Effective reasoning about a physical system requires an appropriate mapping from the system characteristics to abstractions that match the impedance of the task at hand. In Qualitative Physics, three ontological abstractions are widely used: device, process, and constraint. We present a framework and a new ontological abstraction, the field ontology, to unify many reasoning tasks involving image-like analogue representations such as the velocity field for fluid motion, phase space for dynamical systems, and configuration space for mechanism analysis. A field is defined as a mapping from one continuum (say R m ) to another (say R n ). A field is typically information-rich. To transform the information-rich representation into symbolic descriptions well suited for explaining the structure and behavior of the system, we propose a theory of multi-layer spatial abstractions. Abstraction in each layer is represented by a neighborhood graph whose nodes are objects and edges are adjacency relations. The multilayer theory has two advantages: (1) A nonlocal property of a lower layer can be redescribed as a local property of a higher layer, and (2) On each layer the neighborhood graph provides a common interface to support identical modular computations. To illustrate our theory, we examine the computational structure of three implemented programs - KAM, MAPS, and J&S that integrate symbolic, numerical, and visual reasoning. We show a small set of generic operators that construct, transform, filter, classify, and search neighborhood graphs capture the commonalities of these programs. We develop a language, a way of organizing programs around neighborhood graphs, to make programs written in this style clear. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Abelson, M. Eisenberg, M. Halfant, J. Katzenelson, E. Sacks, G.J. Sussman, J. Wisdom, and K. </author> <title> Yip, </title> <journal> "Intelligence in scientific computing." CACM, </journal> <volume> 32(5), </volume> <month> May </month> <year> 1989. </year>
Reference: [2] <author> E. Bradley, </author> <title> "Taming chaotic circuits." </title> <type> Technical Report AI-TR-1388, </type> <institution> MIT Artificial Intelligence Lab, </institution> <year> 1992. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments [23, 19, 26], kinematics analysis of mechanisms [13], design of controllers <ref> [27, 2] </ref>, analysis of seismic data [14], and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers.
Reference: [3] <author> B. Chandrasekaran and N.H. Narayanan, </author> <title> "Towards a theory of commonsense visual reasoning." </title> <booktitle> in Foundations of Software technology and Theoretical Computer Science, </booktitle> <editor> Nori, K.V. and Madhavan, C.E.V. (eds.), </editor> <publisher> Springer, </publisher> <year> 1990. </year> <month> 19 </month>
Reference-contexts: Chandrasekaran and Narayanan proposed a direct analogue simulation of the motion of a sliding block on an inclined plane <ref> [3] </ref>. Their objective is to develop a cognitive architecture for visual perception and mental imagery. The direct representation of a scene they propose consists of a hierarchical, multi-resolution symbol structure encoding spatial relations among objects, and is linked to an anological representation of the scene (image).
Reference: [4] <author> J. DeKleer and J. S. Brown, </author> <title> "A qualitative physics based on confluences." </title> <journal> Arti--ficial Intelligence, </journal> <volume> 24, </volume> <year> 1984. </year>
Reference-contexts: central computational problem is the efficient transformation of a pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system. 2 (Fig. 1 illustrates how the field ontology relates to the other commonly used ontologies in Qualitative Physics: device <ref> [4] </ref>, process [5], and constraint [16].) To be useful, the symbolic descriptions must impose a conceptual structure on the system so that the complexity of the system can be understood in terms of well-defined parts and subparts and interactions among them.
Reference: [5] <author> K.D. Forbus, </author> <title> "Qualitative process theory." </title> <journal> Artificial Intelligence, </journal> <volume> 24, </volume> <year> 1984. </year>
Reference-contexts: problem is the efficient transformation of a pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system. 2 (Fig. 1 illustrates how the field ontology relates to the other commonly used ontologies in Qualitative Physics: device [4], process <ref> [5] </ref>, and constraint [16].) To be useful, the symbolic descriptions must impose a conceptual structure on the system so that the complexity of the system can be understood in terms of well-defined parts and subparts and interactions among them.
Reference: [6] <author> K.D. Forbus, P. Nielsen and B. Faltings, </author> <title> "Qualitative spatial reasoning: the CLOCK project." </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <year> 1991. </year>
Reference-contexts: The relevant parts and interactions are often abstract global properties of the field. An abstract property is a 1 Forbus et al. <ref> [6] </ref> proposed a general methodology for qualitative spatial reasoning: the Metric Diagram/Place Vocabulary (MD/PV). We generally agree with their methodology. <p> We choose these programs as illustrations largely because of our familiarity with them. We plan to investigate the applicability of our framework to several other programs (such as <ref> [17, 6, 10, 14] </ref>). 2 Spatial Aggregate Theory 2.1 The Tasks Given a field, a spectrum of reasoning tasks can be defined. The following list is roughly in the order of increasing complexity: 1. Infer structural descriptions. Find out objects, if any, that exist in the field. <p> They proposed a four-level hierarchical representation incorporating topological and metric descriptions in terms of entities such as places, paths, distances, and angles. Forbus et al. developed the Metric Diagram/Place Vocabulary theory <ref> [6] </ref>. The metric diagram contains both numerical and symbolic descriptions of a scene, while the place vocabulary is a quantization of the space according to task-specific criteria (see also footnote 1). Comparing the spatial aggregate framework and the MD/PV framework, we note two major differences.
Reference: [7] <author> B.V. Funt, </author> <title> "Problem solving with diagrammatic representations." </title> <journal> Artificial Intelligence, </journal> <volume> 13, </volume> <year> 1980. </year>
Reference-contexts: The second line of work concerns analogue simulations in naive physics. Funt's WHISPER program is the first AI program that uses primarily perceptual primitives to predict dynamical events in a simple blocks world <ref> [7] </ref>. Arguing that the commonsense predictions of solid or fluid behavior cannot possibly depend on the solution of complicated equations, Gardin and Meltzer proposed a "molecular" simulation of strings and fluids [8].
Reference: [8] <editor> F. Gardin and B. Meltzer, </editor> <title> "Analogical representations of naive physics." </title> <journal> Artificial Intelligence, </journal> <volume> 38, </volume> <year> 1989. </year>
Reference-contexts: Arguing that the commonsense predictions of solid or fluid behavior cannot possibly depend on the solution of complicated equations, Gardin and Meltzer proposed a "molecular" simulation of strings and fluids <ref> [8] </ref>.
Reference: [9] <author> H. Gelernter, </author> <title> "Realization of a Geometry-Theorem Proving Machine." </title> <booktitle> in Computers and Thought, </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1963. </year>
Reference-contexts: See for example [15] and [11]. In this section, we discuss only the computationally oriented approaches. The first line of work investigates how diagram-like representations aid heuristic search. Gelernter used diagrams in his geometry theorem prover to prune goals that are obviously false <ref> [9] </ref>. Nevins' geometry theorem prover constrained forward deduction to conclude facts about objects explicitly depicted in the diagrams [20]. Stallman and Sussman exploited the connectivity and locality of lumped-parameter model to guide forward reasoning and implement symbolic constraint propagation [21].
Reference: [10] <author> A. Gelsey, </author> <booktitle> "Automated reasoning about machines" Artificial Intelligence, </booktitle> <volume> 74, </volume> <year> 1995. </year>
Reference-contexts: We choose these programs as illustrations largely because of our familiarity with them. We plan to investigate the applicability of our framework to several other programs (such as <ref> [17, 6, 10, 14] </ref>). 2 Spatial Aggregate Theory 2.1 The Tasks Given a field, a spectrum of reasoning tasks can be defined. The following list is roughly in the order of increasing complexity: 1. Infer structural descriptions. Find out objects, if any, that exist in the field.
Reference: [11] <author> J. Glasgow, </author> <title> "The imagery debate revisited: a computational perspective." </title> <booktitle> Computational Intelligence, </booktitle> <year> 1993. </year>
Reference-contexts: The result is a full region-diagram. Using the operators of the spatial aggregate language, J&S is summarized in Fig. 5. 5 Related Works The literature in visual and spatial reasoning is enormous. See for example [15] and <ref> [11] </ref>. In this section, we discuss only the computationally oriented approaches. The first line of work investigates how diagram-like representations aid heuristic search. Gelernter used diagrams in his geometry theorem prover to prune goals that are obviously false [9].
Reference: [12] <author> P. J. Hayes, </author> <title> "The Naive Physics Manifesto." In Expert systems in the microelectronic age, </title> <editor> D. Michie (ed.), </editor> <publisher> Edinburgh University Press, </publisher> <year> 1979. </year>
Reference: [13] <author> Joskowicz and E. Sacks, </author> <title> "Computational Kinematics." </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 381-416, </pages> <year> 1991. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments [23, 19, 26], kinematics analysis of mechanisms <ref> [13] </ref>, design of controllers [27, 2], analysis of seismic data [14], and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers. <p> We isolate a set of generic operators aggregate, classify, re-describe, and search which correspond to the important conceptual pieces common to a class of imagistic problem solvers (such as KAM [23], MAPS [26], and J&S <ref> [13] </ref>). The next section discuss these operators in detail. Section 4 illustrates the use of these operators in a rational reconstruction of three implemented computer programs. 3 The Language of Spatial Aggregates We present a language for describing computational processes organized around spatial aggregates. <p> The dimension of the new object is one higher than that of the object. 6. convolve (object mask) performs pointwise convolution with the given mask. 10 4 Generic Spatial Computations in Programs KAM, MAPS, and J&S In this section, we examine three implemented systems KAM [23], MAPS [26], and J&S <ref> [13] </ref>. Although these programs are designed for different tasks, they share important commonalities. <p> Finally, MAPS parses the result into pseudo English description in terms of flow pipes, stability regions, and equilibrium points. Using the operators of the spatial aggregate language, MAPS is summarized in Fig. 4. The program J&S <ref> [13] </ref> performs an automatic analysis of fixed-axes kinematic mechanisms in configuration space (CS): * Input: configuration space obtained from a description of mechanism configu ration * Output: a high-level description of the feasibility of the mechanism. * Task: determine the feasibility of the mechanism in terms of operating region diagram.
Reference: [14] <author> U. Junker and B. Braunschweug, </author> <title> "History-based Interpretation of finite element simulations of seismic wave fields." </title> <booktitle> Proceedings of IJCAI, </booktitle> <year> 1995. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments [23, 19, 26], kinematics analysis of mechanisms [13], design of controllers [27, 2], analysis of seismic data <ref> [14] </ref>, and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers. <p> We choose these programs as illustrations largely because of our familiarity with them. We plan to investigate the applicability of our framework to several other programs (such as <ref> [17, 6, 10, 14] </ref>). 2 Spatial Aggregate Theory 2.1 The Tasks Given a field, a spectrum of reasoning tasks can be defined. The following list is roughly in the order of increasing complexity: 1. Infer structural descriptions. Find out objects, if any, that exist in the field.
Reference: [15] <author> S.M. Kosslyn, </author> <title> "Image and Brain: the resolution of the imagery debate." </title> <publisher> MIT press, </publisher> <year> 1994. </year>
Reference-contexts: The result is a full region-diagram. Using the operators of the spatial aggregate language, J&S is summarized in Fig. 5. 5 Related Works The literature in visual and spatial reasoning is enormous. See for example <ref> [15] </ref> and [11]. In this section, we discuss only the computationally oriented approaches. The first line of work investigates how diagram-like representations aid heuristic search. Gelernter used diagrams in his geometry theorem prover to prune goals that are obviously false [9].
Reference: [16] <author> B. Kuipers, </author> " <title> Qualitative simulation." </title> <journal> Artificial Intelligence, </journal> <volume> 29, </volume> <year> 1986. </year>
Reference-contexts: efficient transformation of a pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system. 2 (Fig. 1 illustrates how the field ontology relates to the other commonly used ontologies in Qualitative Physics: device [4], process [5], and constraint <ref> [16] </ref>.) To be useful, the symbolic descriptions must impose a conceptual structure on the system so that the complexity of the system can be understood in terms of well-defined parts and subparts and interactions among them. The relevant parts and interactions are often abstract global properties of the field.
Reference: [17] <author> B. Kuipers and T. Levitt, </author> <title> "Navigation and mapping in large-scale space." </title> <journal> AI Magazine, </journal> <volume> 9(2), </volume> <year> 1988. </year>
Reference-contexts: We choose these programs as illustrations largely because of our familiarity with them. We plan to investigate the applicability of our framework to several other programs (such as <ref> [17, 6, 10, 14] </ref>). 2 Spatial Aggregate Theory 2.1 The Tasks Given a field, a spectrum of reasoning tasks can be defined. The following list is roughly in the order of increasing complexity: 1. Infer structural descriptions. Find out objects, if any, that exist in the field. <p> The major challenge in analogue simulation is how to provide a reliable simulation without incorporating extensive physics and geometrical modeling. The third line of work consists of spatial reasoning research in qualitative physics. Ben Kuipers and Levitt <ref> [17] </ref> described an approach to spatial reasoning in robot navigation and mapping of large-scale spaces. They proposed a four-level hierarchical representation incorporating topological and metric descriptions in terms of entities such as places, paths, distances, and angles. Forbus et al. developed the Metric Diagram/Place Vocabulary theory [6].
Reference: [18] <author> J. Larkin and H. Simon, </author> <title> "Why a diagram is (sometimes) worth ten thousand words." </title> <journal> Cognitive Science, </journal> <volume> 11, </volume> <year> 1987. </year>
Reference: [19] <author> T. Nishida et al., </author> <title> "Automated phase portrait analysis by integrating qualitative and quantitative analysis." </title> <booktitle> Proceedings of AAAI, </booktitle> <year> 1991. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments <ref> [23, 19, 26] </ref>, kinematics analysis of mechanisms [13], design of controllers [27, 2], analysis of seismic data [14], and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers.
Reference: [20] <author> A. Nevins, </author> <title> "Plane Geometry Theorem Proving Using Forward Chaining." </title> <journal> Artificial Intelligence, </journal> <volume> 6, </volume> <year> 1975. </year> <month> 20 </month>
Reference-contexts: The first line of work investigates how diagram-like representations aid heuristic search. Gelernter used diagrams in his geometry theorem prover to prune goals that are obviously false [9]. Nevins' geometry theorem prover constrained forward deduction to conclude facts about objects explicitly depicted in the diagrams <ref> [20] </ref>. Stallman and Sussman exploited the connectivity and locality of lumped-parameter model to guide forward reasoning and implement symbolic constraint propagation [21].
Reference: [21] <author> R. Stallman and G. J. Sussman, </author> <title> "Forward Reasoning and Dependency-directed Backtracking in a system for Computer-Aided Circuit Analysis." </title> <journal> Artificial Intelligence, </journal> <volume> 9, </volume> <year> 1977. </year>
Reference-contexts: Nevins' geometry theorem prover constrained forward deduction to conclude facts about objects explicitly depicted in the diagrams [20]. Stallman and Sussman exploited the connectivity and locality of lumped-parameter model to guide forward reasoning and implement symbolic constraint propagation <ref> [21] </ref>. In a similar spirit, Larkin and Simon showed that in elementary mechanics problem a diagrammatic representation can reduce search because the diagram provides convenient indices for clustering objects and relations. The second line of work concerns analogue simulations in naive physics.
Reference: [22] <author> S. Ullman, </author> <title> "Visual Routines." </title> <journal> Cognition, </journal> <volume> 18, </volume> <year> 1984. </year>
Reference-contexts: Infer incremental behavior. Given an instantaneous configuration, predict its possible short-term behaviors. 5 6. Infer behavioral descriptions. Explain and summarize the evolution of objects by a set of domain-specific interaction rules. 2.2 Requirements of imagistic reasoning Partly motivated by Ullman's theory of visual analysis <ref> [22] </ref>, we find desirable the following general requirements on imagistic reasoning: * Abstractness. The problem solver should be able to find objects defined by abstract global properties. * Open-endedness.
Reference: [23] <author> K. M. Yip, KAM: </author> <title> A System for intelligently guiding numerical experimentation by computer. </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments <ref> [23, 19, 26] </ref>, kinematics analysis of mechanisms [13], design of controllers [27, 2], analysis of seismic data [14], and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers. <p> We isolate a set of generic operators aggregate, classify, re-describe, and search which correspond to the important conceptual pieces common to a class of imagistic problem solvers (such as KAM <ref> [23] </ref>, MAPS [26], and J&S [13]). The next section discuss these operators in detail. Section 4 illustrates the use of these operators in a rational reconstruction of three implemented computer programs. 3 The Language of Spatial Aggregates We present a language for describing computational processes organized around spatial aggregates. <p> The dimension of the new object is one higher than that of the object. 6. convolve (object mask) performs pointwise convolution with the given mask. 10 4 Generic Spatial Computations in Programs KAM, MAPS, and J&S In this section, we examine three implemented systems KAM <ref> [23] </ref>, MAPS [26], and J&S [13]. Although these programs are designed for different tasks, they share important commonalities.
Reference: [24] <author> K. M. Yip, </author> <title> "Reasoning about fluid motion: Finding Structures." </title> <booktitle> Proceedings of IJCAI, </booktitle> <year> 1995. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments [23, 19, 26], kinematics analysis of mechanisms [13], design of controllers [27, 2], analysis of seismic data [14], and reasoning about fluid motion <ref> [24] </ref>), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers. Our framework comprises three ideas: * The field ontology: The input is a field, a mapping from one continuum to another.
Reference: [25] <author> F. Zhao, </author> <title> "Computational dynamics: modeling and visualizing trajectory flows in phase space." </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <pages> 8(3-4), </pages> <year> 1993. </year>
Reference: [26] <author> F. Zhao, </author> <title> "Extracting and representing qualitative behaviors of complex systems in phase spaces", </title> <journal> Artificial Intelligence, </journal> <volume> 69(1-2):51-92, </volume> <year> 1994. </year>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments <ref> [23, 19, 26] </ref>, kinematics analysis of mechanisms [13], design of controllers [27, 2], analysis of seismic data [14], and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers. <p> We isolate a set of generic operators aggregate, classify, re-describe, and search which correspond to the important conceptual pieces common to a class of imagistic problem solvers (such as KAM [23], MAPS <ref> [26] </ref>, and J&S [13]). The next section discuss these operators in detail. Section 4 illustrates the use of these operators in a rational reconstruction of three implemented computer programs. 3 The Language of Spatial Aggregates We present a language for describing computational processes organized around spatial aggregates. <p> The dimension of the new object is one higher than that of the object. 6. convolve (object mask) performs pointwise convolution with the given mask. 10 4 Generic Spatial Computations in Programs KAM, MAPS, and J&S In this section, we examine three implemented systems KAM [23], MAPS <ref> [26] </ref>, and J&S [13]. Although these programs are designed for different tasks, they share important commonalities.
Reference: [27] <author> F. Zhao, </author> <title> "Intelligent simulation in designing complex dynamical control systems", </title> <booktitle> in Artificial intelligence in industrial decision making, control, and automation. Tzafestas and Verbruggen (eds.), </booktitle> <pages> pp. 127-158, </pages> <publisher> Kluwer, </publisher> <year> 1995. </year> <month> 21 </month>
Reference-contexts: Although these problem solvers have been designed to perform tasks in many different domains (e.g., control and interpretation of numerical experiments [23, 19, 26], kinematics analysis of mechanisms [13], design of controllers <ref> [27, 2] </ref>, analysis of seismic data [14], and reasoning about fluid motion [24]), we have found important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers.
References-found: 27

