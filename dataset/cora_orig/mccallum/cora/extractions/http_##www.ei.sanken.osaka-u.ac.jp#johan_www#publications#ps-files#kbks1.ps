URL: http://www.ei.sanken.osaka-u.ac.jp/johan_www/publications/ps-files/kbks1.ps
Refering-URL: http://www.ei.sanken.osaka-u.ac.jp/pub/all-publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: (johan/miz)@ei.sanken.osaka-u.ac.jp  
Title: Workplace-Adapted Behaviors: Lessons Learned for Knowledge Reuse  
Author: Johan Vanwelkenhuysen and Riichiro Mizoguchi 
Address: Osaka, Japan  
Affiliation: I.S.I.R., Osaka University  
Abstract: Any problem solving behavior integrated in organized work practice is necessarily adapted to forces originating from characteristics of the workplace, organizational embedding, and social environment. An analysis and comparison of troubleshooting behaviors of same devices with access to the same technical information but performed in different workplaces teaches us that after integration, behaviors may be inadequate for other workplaces. Knowledge level models of the workplace-adapted behaviors showed significant differences. We investigate implications of this observation for the development and use of reusable problem solving components
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Benjamins, R. and Jansweijer W., </author> <title> "Toward a Competence Theory of Diagnosis", </title> <journal> IEEE Expert, </journal> <pages> pages 43-52, </pages> <month> October, </month> <year> 1994. </year>
Reference: 2. <author> Brown, J. and Duguid, P., </author> <title> "Borderline issues: Social and material aspects of design." </title> <journal> Human-Computer Interaction, </journal> <volume> 9 </volume> <pages> 3-36, </pages> <year> 1994. </year>
Reference-contexts: Note, however, that object ontologies are chosen above model ontologies to stress task-dependency of representations in domain models. In a similar manner, workplace ontologies are task-dependent. We define a workplace ontology as a vocabulary to capture borderline issues (as defined in <ref> [2] </ref>) of the workplace in which problem solving is (to be) performed. These borderline issues lie outside the canonical knowledge level model defining the (observed/designed) problem solving behaviors but have a recognized effect on the behaviors. <p> As argued in <ref> [2] </ref>, borderline issues are not inherent in an artifact. Rather, they are the result of technical and social conventions in which a line is drawn about what is reasoned about explicitly and what remains peripheral. <p> As in our design experience, this issue remained peripheral until new work practice was discussed: "... when attention, perspective, or practice changes, parts of the periphery may be swept to the center of attention and vice versa" <ref> [2, page 7] </ref>. 4.2 Rationalized design decisions We propose to make explicit key design decisions behind previously constructed knowledge components and to express their problem solving context. <p> It suggests ways to modify knowledge components as non-functional requirement priorities or workplace characteristics change. 5 CONCLUSION "The more designers struggle to attain freedom from context, the greater the tasks they set not only for themselves, but for the users of their designs" <ref> [2, page 6] </ref>. To integrate predefined problem solving behaviors in a workplace, they need to be adapted to forces originating from characteristics of organizational processes, workplaces, expectations, and so forth. Discovering what characteristics affect behaviors in the workplace under study is difficult, time-consuming, and hardly studied at all.
Reference: 3. <author> Chandrasekaran, B. and Johnson, T., </author> <title> "Generic tasks and task structures: History, critique and new directions". </title> <editor> In David, J., Krivine, J., and Simmons, R., editors, </editor> <booktitle> Second Generation Expert Systems, </booktitle> <pages> pages 232-272. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Moreover, in knowledge level research it is recognized that interactions exist between task, domain, and inference knowledge. Indeed, domain knowledge cannot be adequately represented independent of the class of tasks it is designed for <ref> [3] </ref>; Task knowledge is related to inferences through the competence of an inference structure to derive the required outputs from the task's inputs; Domain knowledge is related to inference knowledge through its ability to fill the inference's knowledge roles.
Reference: 4. <author> Clancey, W., </author> <title> "The knowledge level reinterpreted: Modeling how systems interact." </title> <journal> Machine Learning, </journal> 4(3/4):285-291, 1989. 
Reference: 5. <author> Hamscher, W. </author> <title> "Modeling digital circuits for troubleshooting", </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 223-271, </pages> <year> 1991. </year>
Reference-contexts: The design team may wish to investigate key design decisions behind each reusable knowledge component to drive selection. A design decision behind Hamscher's XDE system mentions that system adaptivity is considered to the extent that the diagnostic engine is independent from the type of digital device it reasons about <ref> [5] </ref>. A side-effect of another design decision (the use of temporal abstractions) is that only people familiar with the XDE design can create and decide upon the appropriate level of temporal abstractions for each new type of device.
Reference: 6. <author> Kang, B. et al., </author> <title> "Multiple classification ripple down rules". </title> <editor> In Mizoguchi, R., Motoda, H., Boose, J., Gaines, B., and Compton, P., editors, </editor> <booktitle> Proceedings of the 3rd Japanese Knowledge Acquisition for Knowledge-Based Systems Workshop JKAW'94, </booktitle> <pages> pages 197-211, </pages> <address> Hatoyama, Japan, </address> <year> 1994. </year>
Reference: 7. <author> Lee, J. and Lai, K., </author> <title> "What's in design rationale?" Human-Computer Interaction, </title> <address> 6(3-4):251-280, </address> <year> 1991. </year>
Reference-contexts: We illustrate this idea by recapitulating a reasoning pattern from our experience in developing the diagnostic system [16]. Figure 4 represents this reasoning pattern in a semi-formal manner. Graphical objects denote formal concepts from the decision representation language, DRL <ref> [7] </ref>. Contents of the rectangles are natural language descriptions of expressions in problem solving and workplace ontologies. 4.2.1 Representation We focus on how to design the hypothesis generation subtask of a diagnostic system for which, additionally, high priority requirements are defined about troubleshooting competence, efficiency, fidelity, and precision.
Reference: 8. <author> Mizoguchi, R., </author> <title> "Knowledge acquisition and ontology". </title> <booktitle> In Proceedings International Conference on Building and Sharing of Very Large-Scaled Knowledge Bases '93, </booktitle> <pages> pages 121-128, </pages> <address> Tokyo, Japan, </address> <year> 1993. </year>
Reference: 9. <author> Mizoguchi, R. et al., </author> <title> "Task Ontology for Reuse of Problem Solving Knowledge", </title> <booktitle> Proceedings of Second International Conference on Building and Sharing of Very Large-Scaled Knowledge Bases, </booktitle> <publisher> IOS Press, </publisher> <address> Amsterdam, Netherlands, </address> <year> 1995. </year>
Reference-contexts: These borderline issues lie outside the canonical knowledge level model defining the (observed/designed) problem solving behaviors but have a recognized effect on the behaviors. Examples of expressions in a troubleshooting-in-production-plant workplace ontology are: Expression: Low reliability of test and measure ment equipment (resources) Task affected: Behavior observation 4 See <ref> [9] </ref> for a more detailed definition of problem solving context.
Reference: 10. <author> Neches, R. et al., </author> <title> "Enabling technology for knowledge sharing". </title> <journal> AI Magazine, </journal> <pages> pages 36-56, </pages> <year> 1991. </year>
Reference: 11. <author> Pfeifer, R. and Rademakers, P., </author> <title> "Situated adaptive design: Toward a new methodology for knowledge systems development". </title> <editor> In Brauer, W. and Hernan-dez, D., editors, </editor> <booktitle> Verteilte kunstliche intelligenz und kooperatives arbeiten. Proceedings of the 4th international GI-congress on knowledge based systems, </booktitle> <pages> pages 53-64, </pages> <address> Berlin. </address> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference: 12. <editor> Schmalhofer, F. et al., </editor> <title> "Beyond the knowledge level: Descriptions of rational behavior for sharing and reuse". </title> <editor> In Steels, L., Schreiber, G., and de Velde, W. V., editors, </editor> <booktitle> Proceedings of the Eight European Knowledge Acquisition Workshop (EKAW'94), </booktitle> <address> Hoe-gaarden, Belgium. </address> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference: 13. <author> Steels, L., </author> <title> "How can we make further progress in knowledge acquisition ?" In Mizoguchi, </title> <editor> R., Motoda, H., Boose, J., Gaines, B., and Compton, P., editors, </editor> <booktitle> Proceedings of the 3rd Japanese Knowledge Acquisition for Knowledge-Based Systems Workshop JKAW'94, </booktitle> <pages> pages 65-71, </pages> <address> Hatoyama, Japan, </address> <year> 1994. </year>
Reference-contexts: We envision two ways to achieve this: * Make explicit the problem solving context for which the knowledge component was designed. Purpose is 3 As argued in <ref> [13] </ref>, recognizing the significance of context and behavior adaptation, some researchers take a more extreme position than we do. Some reduce the role of representations in system development (e.g., situated cognition) [4,11].
Reference: 14. <author> Steels, L. and McDermott, J., </author> <title> "The knowledge-level in expert systems. Conversations and commentary". </title> <publisher> Academic Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: We particularly scrutinize dimensions along which ontologies for reusable problem solving components should be defined to adequately support in the construction and maintenance of conceptual knowledge system designs. Starting assumption of our discussion is that generic knowledge level models of problem solving behavior <ref> [14] </ref> (generic models for short) are a significant aid to create an initial conceptual design of the target knowledge system. <p> Ontologies guide to potential appropriate conceptual knowledge system designs. This use of ontologies imposes the requirement that ontologies must capture aspects that drive and justify problem solving behaviors. Knowledge level research teaches us that problem solving behaviors are driven by <ref> [14] </ref>: 1. The need to satisfy aspects (goals/subgoals) of the problem solving task; 2. The problem solver's understanding of the domain theory; 3. The inferences that can be made by the problem solver; We have created ontologies for problem solving components along two dimensions to capture these aspects.
Reference: 15. <author> Tijerino, Y. et al., "Multis: </author> <title> A knowledge acquisition system based on problem solving primitives". </title> <journal> Intern'l Journal of Expert Systems, </journal> <volume> 5(2), </volume> <year> 1993. </year>
Reference: 16. <author> Vanwelkenhuysen, J., </author> <title> "Participative Conceptual System Design of Industrial Knowledge Systems". </title> <type> PhD thesis, </type> <institution> Vrije Universiteit Brussel, Artificial Intelligence Laboratory, </institution> <address> Pleinlaan 2, 1050 Brussel, Belgium, </address> <year> 1993. </year>
Reference-contexts: We add to this discussion an experience which triggered our interest in contextual issues in general and workplace characteristics in particular. 3.1 An experience in designing problem solving behaviors We have developed a diagnostic knowledge system for digital processor boards for use in a telecommunications' production plant <ref> [16] </ref>. We closely interacted with testers to create a knowledge level model of their problem solving behavior following the model-based knowledge acquisition approach. <p> We illustrate this idea by recapitulating a reasoning pattern from our experience in developing the diagnostic system <ref> [16] </ref>. Figure 4 represents this reasoning pattern in a semi-formal manner. Graphical objects denote formal concepts from the decision representation language, DRL [7].
Reference: 17. <author> Vanwelkenhuysen, J., </author> <title> "Augmenting conceptual software designs with their rationales". </title> <journal> IEEE Expert (forthcoming), </journal> <year> 1995. </year>
Reference-contexts: design decisions, the extent to which and plausibility that high priority requirements are acceptably dealt with. * Reuse of past design, workplace and requirements analyses is supported and patterns of reasoning can be reused within same task and domain environ ments. * Guidance in maintaining the knowledge system de sign <ref> [17] </ref>. To illustrate the first benefit, consider the situation in which system adaptivity is a high priority requirement imposed upon a diagnostic system (i.e. the system must be easily adaptable to reason about new devices). <p> A workplace characterization (as shown in figures 2 and 3) is useful to drive this analysis. Moreover, as these structures are related to problem solving tasks and pragmatics they affect, rationalized design decisions drive problem and requirements analysis through design synthesis <ref> [17] </ref>. 4.3 Modification guidelines The idea of modification guidelines is to support reuse of essential information about rationalized design decisions across tasks and domains. The ontology research community typically creates model ontologies (section 2) to enable knowledge reuse and sharing across tasks and domains.
Reference: 18. <author> Vanwelkenhuysen, J. and Mizoguchi, R., </author> <title> "Maintaining the workplace context in a knowledge level analysis". </title> <editor> In Mizoguchi, R., Motoda, H., Boose, J., Gaines, B., and Compton, P., editors, </editor> <booktitle> Proceedings of the 3rd Japanese Knowledge Acquisition for Knowledge-Based Systems Workshop JKAW'94, </booktitle> <pages> pages 33-47, </pages> <address> Hatoyama, Japan, </address> <year> 1994. </year>
Reference: 19. <author> Vanwelkenhuysen, J. and Mizoguchi, R., </author> <title> "Ontologies and guidelines for modeling digital systems". </title> <booktitle> In Proceedings of the Ninth Knowledge Acquisition for Knowledge-Based Systems Workshop, </booktitle> <address> Banff, Canada, </address> <year> 1995. </year>
Reference-contexts: Encapsulating problem solving behaviors in a justified manner requires that ontologies capture these interactions <ref> [19] </ref>. <p> As a consequence, this guideline may be triggered by the need to create a more effective trou bleshooting problem solver or to integrate a design into a non-critical workplace. Another example of a modification guideline extracted from <ref> [19] </ref> is one which is triggered by the need to reduce knowledge acquisition and representation efforts involved in adapting the knowledge system design to new type of devices to be diagnosed. <p> Advantage of these guidelines for reuse is that it facilitates the reverse construction from model ontologies to refined concepts and relationships tuned to certain task environments <ref> [19] </ref>. It suggests ways to modify knowledge components as non-functional requirement priorities or workplace characteristics change. 5 CONCLUSION "The more designers struggle to attain freedom from context, the greater the tasks they set not only for themselves, but for the users of their designs" [2, page 6].
Reference: 20. <author> Wielinga, B. and Schreiber, A., </author> <title> "Reusable and shareable knowledge bases: A European perspective". </title> <booktitle> In Proceedings International Conference on Building and Sharing of Very Large-Scaled Knowledge Bases '93, </booktitle> <pages> pages 103-115, </pages> <address> Tokyo, Japan, </address> <year> 1993. </year>
References-found: 20

