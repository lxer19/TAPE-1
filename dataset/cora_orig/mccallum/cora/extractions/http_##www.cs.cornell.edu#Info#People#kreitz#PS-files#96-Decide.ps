URL: http://www.cs.cornell.edu/Info/People/kreitz/PS-files/96-Decide.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/kreitz/Abstracts/96-Decide.html
Root-URL: 
Email: e-mail: korn@informatik.th-darmstadt.de,  e-mail: kreitz@cs.cornell.edu,  
Phone: phone: +49-6151-16 6634 2  phone: +1-607-255 1068  
Title: Deciding Intuitionistic Propositional Logic via Translation into Classical Logic  
Author: Daniel S. Korn Christoph Kreitz 
Address: Alexanderstrae 10, D-64238 Darmstadt  Ithaca, NY 14853-7501  
Affiliation: 1 FG Intellektik, FB Informatik, TH-Darmstadt  Department of Computer Science Cornell University,  
Abstract: We present a technique that efficiently translates propositional intuitionistic formulas into propositional classical formulas. This technique allows the use of arbitrary classical theorem provers for deciding the intuitionistic validity of a given propositional formula. The translation is based on the constructive description of a finite counter-model for any intuitionistic non-theorem. This enables us to replace universal quantification over all accessible worlds by a conjunction over the constructed finite set of these worlds within the encoding of a refuting Kripke-frame. This way, no additional theory handling by the theorem prover is required.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Dyckhoff: </author> <title> Contraction-Free Sequent Calculi for Intuitionistic Logic, </title> <journal> Journal of Symbolic Logic, </journal> <volume> Vol. 57, No. 3, </volume> <pages> pp. 795-807, </pages> <year> 1992 </year>
Reference-contexts: All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time. Contraction-free tableau calculi for intuitionistic logic have been presented in <ref> [1, 5, 8] </ref>, where the one in [1] is implemented as described in [4]. They explicitly preserve decidability but since they are connective-driven they cannot compete with matrix or resolution based calculi which are based on connecting complementary literals. <p> All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time. Contraction-free tableau calculi for intuitionistic logic have been presented in [1, 5, 8], where the one in <ref> [1] </ref> is implemented as described in [4]. They explicitly preserve decidability but since they are connective-driven they cannot compete with matrix or resolution based calculi which are based on connecting complementary literals. Nevertheless, they provided us with the key ideas for our translation method.
Reference: 2. <author> R. Dyckhoff, L. Pinto: </author> <title> Loop-free construction of counter-models for intuitionis-tic propositional logic, </title> <editor> In Behara, Fritsch, Lintz (eds.): </editor> <booktitle> Symposia Gaussiana, Conf. A, </booktitle> <pages> pp. 225-232, </pages> <publisher> de Gruyter, </publisher> <year> 1995 </year>
Reference-contexts: However, it does not incorporate any concept comparable to our maximality principles which would allow unrestricted classical reasoning. Yet, it turns out to have an astonishing practical performance (see fig. 6) but this may | at least partly | be explained by the efficient encoding in C. In <ref> [2] </ref> a technique to construct finite J p -countermodels for non-J p -theorems based on a refutation calculus ("CRIP") has been presented. For implicative special subformulas the potential countermodels constructed by our approach are perfectly equivalent to the ones constructed by CRIP disregarding the provisos for rules axiom and (11).
Reference: 3. <author> M. </author> <title> Fitting: Intuitionistic Logic Model Theory and Forcing, </title> <address> Amsterdam, </address> <month> 1 </month> <year> 1969 </year>
Reference-contexts: A basic as well as natural approach to this end is given, for instance, by Moore [9] or van Benthem [17]. This approach essentially encodes the definition of validity w.r.t. the Kripke-semantics (see <ref> [3, 16] </ref>) of a given logic within the language of classical first-order logic. <p> We assume the reader to be familiar with the basic concepts and terminology of classical and intuitionistic logic. Since, however, our definition of intuitionistic interpretation, forcing, model and validity results from a combination of the respective definitions in <ref> [3] </ref> and [16] and thus slightly differs from them we will repeat it in the following: Definition 1 Intuitionistic interpretation Let W be a non-empty set, R W fi W a transitive and reflexive relation (accessibility ), and V an evaluation function mapping elements of W to sets of atomic formulas. <p> Consequently accessibility is to be seen in a temporal sense: for a given w any w fl is supposed to denote a future stage of knowledge. The following lemma which has been proved in <ref> [3] </ref> ensures that any evidence for some formula which is known at a given stage will remain known at any future stage: Lemma 1 Heredity of forcing Let I j = hW; R; Vi be a J p -interpretation and A be a propositional formula.
Reference: 4. <author> A. Heuerding, e. a.: </author> <title> Propositional Logics on the Computer, </title> <booktitle> Proceedings of the 4th TABLEAUX '95, LNAI 918, </booktitle> <pages> pp. 310-323, </pages> <year> 1995 </year>
Reference-contexts: Contraction-free tableau calculi for intuitionistic logic have been presented in [1, 5, 8], where the one in [1] is implemented as described in <ref> [4] </ref>. They explicitly preserve decidability but since they are connective-driven they cannot compete with matrix or resolution based calculi which are based on connecting complementary literals. Nevertheless, they provided us with the key ideas for our translation method.
Reference: 5. <author> J. Hudelmaier: </author> <title> An O(n log n)-space decision procedure for intuitionistic propositional logic, In: </title> <journal> Journal of Logic and Computation 3(1)1, </journal> <pages> pp. 63-75, </pages> <year> 1993 </year>
Reference-contexts: All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time. Contraction-free tableau calculi for intuitionistic logic have been presented in <ref> [1, 5, 8] </ref>, where the one in [1] is implemented as described in [4]. They explicitly preserve decidability but since they are connective-driven they cannot compete with matrix or resolution based calculi which are based on connecting complementary literals.
Reference: 6. <author> D. Korn, C. </author> <title> Kreitz.: A Constructively Adequate Refutation System for Intuition-istic Logic, </title> <type> Tech. Rep. </type> <institution> AIDA-96-14, TH Darmstadt, </institution> <year> 1996. </year>
Reference-contexts: They explicitly preserve decidability but since they are connective-driven they cannot compete with matrix or resolution based calculi which are based on connecting complementary literals. Nevertheless, they provided us with the key ideas for our translation method. The refutation system for first-order intuitionistic logic which we have formulated in <ref> [6] </ref> is based on the ideas presented here and allows a direct comparison between our approach and the contraction-free calculi. A practically efficient implementation of the contraction-free techniques is presented in [14]. Decidability is achieved there by a kind of loop checking that resembles the ideas mentioned in section 2. <p> Some of these optimizations are obvious but we have not mentioned them here for the sake of simplicity. Yet, our long-term goal is to extend our ideas to full first-order logic. Work on this issue is currently in progress (cf. <ref> [6] </ref>). Acknowledgments We would like to thank Heiko Mantel for helping us to put the text into a readable form as well as Jens Otten for providing us with a non-normalform Davis-Putnam prover which is as fast as its source code is short and cryptic.
Reference: 7. <author> D. Korn, C. </author> <title> Kreitz.: Efficiently Deciding Intuitionistic Propositional Logic via Translation into Classical Logic., </title> <type> Tech. Rep. </type> <institution> AIDA-96-10, TH Darmstadt, </institution> <year> 1996. </year>
Reference-contexts: ) = hW; R; Vi with W = fw 0 ; w 1 g, R = f (w 0 ; w 0 ); (w 0 ; w 1 ); (w 1 ; w 1 )g and V (w 1 ) = fag whereas V (w 0 ) = ; In <ref> [7] </ref> we have proved S to be sound and complete in the sense that there is a classical countermodel for S (F ) whenever there is a J p -countermodel for F (soundness) as well as vice versa (completeness).
Reference: 8. <author> P. Miglioli, U. Moscato, M. Ornaghi: </author> <title> An Improved Refutation System for In-tuitionistic Predicate Logic, </title> <journal> Journal of Automated Reasoning 13, </journal> <pages> pp 361-373, </pages> <year> 1994 </year>
Reference-contexts: All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time. Contraction-free tableau calculi for intuitionistic logic have been presented in <ref> [1, 5, 8] </ref>, where the one in [1] is implemented as described in [4]. They explicitly preserve decidability but since they are connective-driven they cannot compete with matrix or resolution based calculi which are based on connecting complementary literals.
Reference: 9. <author> Robert C. Moore: </author> <title> Reasoning about Knowledge and Action, </title> <booktitle> Proceedings of the IJCAI-77, </booktitle> <pages> pp 223-227, </pages> <address> Stanford, California 94305, </address> <year> 1977 </year>
Reference-contexts: Once we have proved soundness and completeness of this translation, we are free to use the very best of the existing classical theorem provers and let it do the work for us. A basic as well as natural approach to this end is given, for instance, by Moore <ref> [9] </ref> or van Benthem [17]. This approach essentially encodes the definition of validity w.r.t. the Kripke-semantics (see [3, 16]) of a given logic within the language of classical first-order logic. <p> There are various approaches which deal with intuitionistic theorem-proving | theoretical as well as practical ones. We have mentioned the general translation methods for modal logics which (explicitly or implicitly) cover J p in a very unspecific manner via the embedding into S4 (e.g. <ref> [9, 10, 15, 17] </ref>). The matrix method presented in [18] amounts to the functional translation principle described in [10] and has been implemented for intuitionistic logic as described in [11].
Reference: 10. <author> H. J. Ohlbach: </author> <title> Semantics-Based Translation Methods for Modal Logics, </title> <journal> Journal of Logic and Computation, </journal> <volume> Vol. 1, no. 6, </volume> <pages> pp 691-746, </pages> <year> 1991 </year>
Reference-contexts: 1 Introduction Following the ideas of Ohlbach in <ref> [10] </ref> deduction systems for classical logic can be viewed as "processors" for theorem proving environments. <p> On the other hand decidability is lost even for the propositional fragment of the given logic. There are several approaches to recover from the first problem. The so called "functional" translation proposed in <ref> [10] </ref>, for instance, allows the use of theory unification and thus to handle the theory knowledge about the given logic on a meta-level rather than on the object level. However, translation methods that explicitly deal with the second problem do not exist. <p> Essentially this is achieved by generating a suitable representation for the negation of a possible J p -countermodel within classical logic. We use unary function symbols to denote mappings from a given knowledge stage to an accessible one (cf. <ref> [10] </ref>). As shown above the existence of accessible knowledge stages within a potential J p -countermodel depends only on negated and implicative subformulas not being forced somewhere. We will thus associate our function symbols with such sub-formulas. <p> There are various approaches which deal with intuitionistic theorem-proving | theoretical as well as practical ones. We have mentioned the general translation methods for modal logics which (explicitly or implicitly) cover J p in a very unspecific manner via the embedding into S4 (e.g. <ref> [9, 10, 15, 17] </ref>). The matrix method presented in [18] amounts to the functional translation principle described in [10] and has been implemented for intuitionistic logic as described in [11]. <p> We have mentioned the general translation methods for modal logics which (explicitly or implicitly) cover J p in a very unspecific manner via the embedding into S4 (e.g. [9, 10, 15, 17]). The matrix method presented in [18] amounts to the functional translation principle described in <ref> [10] </ref> and has been implemented for intuitionistic logic as described in [11]. All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time.
Reference: 11. <author> J. Otten, C. </author> <title> Kreitz: A Connection Based Proof Method for Intuitionistic Logic, </title> <booktitle> Proceedings of the 4th TABLEAUX '95, LNAI 918, </booktitle> <pages> pp. 122-137, </pages> <year> 1995 </year>
Reference-contexts: The matrix method presented in [18] amounts to the functional translation principle described in [10] and has been implemented for intuitionistic logic as described in <ref> [11] </ref>. All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time.
Reference: 12. <author> J. Otten: </author> <title> On the Advantage of a Non-Clausal Davis-Putnam Procedure, </title> <type> Tech. Rep. </type> <institution> AIDA-97-1, TH Darmstadt, </institution> <year> 1997 </year>
Reference-contexts: Fig. 6 shows a practical runtime comparison for the propositional problems presented in [13] between a prototypical Eclipse-PROLOG implementation of our technique together with the non-normalform Davis-Putnam prover presented in <ref> [12] </ref> and the C implementation of the ft-prover [14] (version 1.23). All runtimes were measured on a SPARC 10 in microseconds where "0" means "not measurable".
Reference: 13. <author> F. J. Pelletier: </author> <title> Seventy-Five Problems for Testing Automatic Theorem Provers, </title> <journal> Journal of Automated Reasoning 2, </journal> <pages> pp 191-216, </pages> <year> 1986 </year>
Reference-contexts: Yet our technique is constructively adequate in the sense that search space complexity increases along with the degree of constructivity of the possible proof. Fig. 6 shows a practical runtime comparison for the propositional problems presented in <ref> [13] </ref> between a prototypical Eclipse-PROLOG implementation of our technique together with the non-normalform Davis-Putnam prover presented in [12] and the C implementation of the ft-prover [14] (version 1.23). All runtimes were measured on a SPARC 10 in microseconds where "0" means "not measurable".
Reference: 14. <author> D. Sahlin, T. Franz en, S. Haridi: </author> <title> An Intuitionistic Predicate Logic Theorem Prover, </title> <journal> Journal of Logic and Computation, </journal> <volume> Vol. 2, no. 5, </volume> <pages> pp 619-656, </pages> <year> 1992 </year>
Reference-contexts: Fig. 6 shows a practical runtime comparison for the propositional problems presented in [13] between a prototypical Eclipse-PROLOG implementation of our technique together with the non-normalform Davis-Putnam prover presented in [12] and the C implementation of the ft-prover <ref> [14] </ref> (version 1.23). All runtimes were measured on a SPARC 10 in microseconds where "0" means "not measurable". This comparison actually confirms the claim of constructive adequateness: We could beat ft for formulas involving negated special subformulas in the immediate vicinity of the root (72a,72b,74). <p> The refutation system for first-order intuitionistic logic which we have formulated in [6] is based on the ideas presented here and allows a direct comparison between our approach and the contraction-free calculi. A practically efficient implementation of the contraction-free techniques is presented in <ref> [14] </ref>. Decidability is achieved there by a kind of loop checking that resembles the ideas mentioned in section 2. However, it does not incorporate any concept comparable to our maximality principles which would allow unrestricted classical reasoning.
Reference: 15. <author> R. B. Scherl: </author> <title> A Constraint Logic Approach to Automated Modal Deduction, </title> <type> Report UIUCDCS-R-93-1803, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1993 </year>
Reference-contexts: There are various approaches which deal with intuitionistic theorem-proving | theoretical as well as practical ones. We have mentioned the general translation methods for modal logics which (explicitly or implicitly) cover J p in a very unspecific manner via the embedding into S4 (e.g. <ref> [9, 10, 15, 17] </ref>). The matrix method presented in [18] amounts to the functional translation principle described in [10] and has been implemented for intuitionistic logic as described in [11].
Reference: 16. <author> K. Sch utte: </author> <title> Vollstandige Systeme modaler und intuitionistischer Logik, </title> <publisher> Springer, </publisher> <year> 1968 </year>
Reference-contexts: A basic as well as natural approach to this end is given, for instance, by Moore [9] or van Benthem [17]. This approach essentially encodes the definition of validity w.r.t. the Kripke-semantics (see <ref> [3, 16] </ref>) of a given logic within the language of classical first-order logic. <p> We assume the reader to be familiar with the basic concepts and terminology of classical and intuitionistic logic. Since, however, our definition of intuitionistic interpretation, forcing, model and validity results from a combination of the respective definitions in [3] and <ref> [16] </ref> and thus slightly differs from them we will repeat it in the following: Definition 1 Intuitionistic interpretation Let W be a non-empty set, R W fi W a transitive and reflexive relation (accessibility ), and V an evaluation function mapping elements of W to sets of atomic formulas.
Reference: 17. <author> J. Van Benthem: </author> <title> Correspondence Theory, </title> <editor> In: D. Gabbay and F. Guenther (eds.): </editor> <booktitle> Handbook of Philosophical Logic, </booktitle> <volume> Vol. II, </volume> <pages> pp. 167-247, </pages> <publisher> Reidel, </publisher> <month> 1 </month> <year> 1984 </year>
Reference-contexts: A basic as well as natural approach to this end is given, for instance, by Moore [9] or van Benthem <ref> [17] </ref>. This approach essentially encodes the definition of validity w.r.t. the Kripke-semantics (see [3, 16]) of a given logic within the language of classical first-order logic. <p> There are various approaches which deal with intuitionistic theorem-proving | theoretical as well as practical ones. We have mentioned the general translation methods for modal logics which (explicitly or implicitly) cover J p in a very unspecific manner via the embedding into S4 (e.g. <ref> [9, 10, 15, 17] </ref>). The matrix method presented in [18] amounts to the functional translation principle described in [10] and has been implemented for intuitionistic logic as described in [11].
Reference: 18. <author> L. Wallen: </author> <title> Automated Proof Search in Non-Classical Logics, MIT Press, 1 1990 This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: We have mentioned the general translation methods for modal logics which (explicitly or implicitly) cover J p in a very unspecific manner via the embedding into S4 (e.g. [9, 10, 15, 17]). The matrix method presented in <ref> [18] </ref> amounts to the functional translation principle described in [10] and has been implemented for intuitionistic logic as described in [11]. All these approaches share the disadvantage of neither preserving decidability (at least not explicitly) nor of liberating the theorem prover of dealing somehow with theory knowledge at run-time.
References-found: 18

