URL: http://www.isse.gmu.edu:80/~csis/publications/i91oo.ps
Refering-URL: http://www.isse.gmu.edu:80/~csis/publication.html
Root-URL: 
Title: SUPPORTING TIMING-CHANNEL FREE COMPUTATIONS IN MULTILEVEL SECURE OBJECT-ORIENTED DATABASES  
Author: Ravi S. Sandhu, Roshan Thomas and Sushil Jajodia 
Date: November 4-7, 1991.  
Address: Shepherdstown, West Virginia,  Fairfax, Virginia 22030-4444, USA  
Affiliation: Security,  Center for Secure Information Systems Department of Information and Software Systems Engineering George Mason University  
Note: Proc. of the IFIP WG11.3 Workshop on Database  
Abstract: In an earlier paper [3], Jajodia and Kogan proposed a message filter approach to enforcing mandatory security in multilevel object-oriented databases. The key idea in the message filter model is that all information exchange be permitted solely through messages and that security be enforced by a message filter component that mediates these messages. In a recent paper [8] the authors proposed a kernelized architecture for implementing the message filter model. A major complication in implementing this model arises due to timing channels intrinsic to the object-oriented model of computing. These channels arise because object-oriented "write-up" operations are abstract and arbitrarily complex (as opposed to primitive memory writes). One approach to closing these timing channels is to execute a logically sequential computation as concurrent pieces. Our earlier paper presented an execution model for managing such concurrent computations as well as a multiversion synchronization protocol to guarantee correctness with respect to the intended sequential execution. While our approach with asynchronous computations can close such channels, the scheduling strategy presented earlier was not totally secure as it may be exploited for timing channels under certain conditions. In this paper we present a revised execution model that not only guarantees correctness but is also timing channel free. We give proof outlines to support these claims. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Kim et al. </author> <title> Features of the ORION object-oriented database system. </title> <editor> In W. Kim and F. Lochovsky, editors, </editor> <title> Object-Oriented Concepts, Databases, and Applications, </title> <publisher> Addison-Wesley Publ. Co., Inc., </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: 1 Introduction In recent years we have seen a considerable effort in the research and development of object-oriented databases (e.g., ORION <ref> [1] </ref>, IRIS [2], GEMSTONE [6]). The driving force behind these efforts can be attributed to the advantages offered by object-oriented data models. These include the ability of objects to model the complex structure of entities in an application domain.
Reference: [2] <author> D. Fisherman. </author> <title> IRIS: An object-oriented database management system. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 5(1):pp. </volume> <pages> 48-69, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: 1 Introduction In recent years we have seen a considerable effort in the research and development of object-oriented databases (e.g., ORION [1], IRIS <ref> [2] </ref>, GEMSTONE [6]). The driving force behind these efforts can be attributed to the advantages offered by object-oriented data models. These include the ability of objects to model the complex structure of entities in an application domain.
Reference: [3] <author> S. Jajodia and B. Kogan. </author> <title> Integrating an object-oriented data model with multi-level security. </title> <booktitle> Proc. of the 1990 IEEE Symposium on Security and Privacy, </booktitle> <pages> pp. 76-85, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: This is because access control and security policies can be specified and implemented in terms of objects that map closely to the real world entities that are modeled. Accordingly, we have seen a number of proposals for models that address mandatory security issues in object-oriented databases <ref> [3, 4, 5, 7, 9] </ref>. The model proposed by Jajodia and Kogan [3] (referred to as the message filter model) is distinguishable from this set as it expresses the security policy with a message filtering algorithm and relies on a message filter component to mediate all messages sent between objects. <p> Accordingly, we have seen a number of proposals for models that address mandatory security issues in object-oriented databases [3, 4, 5, 7, 9]. The model proposed by Jajodia and Kogan <ref> [3] </ref> (referred to as the message filter model) is distinguishable from this set as it expresses the security policy with a message filtering algorithm and relies on a message filter component to mediate all messages sent between objects.
Reference: [4] <author> T.F. Keefe and W.T. Tsai. </author> <title> Prototyping the SODA security model. </title> <booktitle> Proc. 3rd IFIP WG 11.3 Workshop on Database Security, </booktitle> <month> September </month> <year> 1989. </year>
Reference-contexts: This is because access control and security policies can be specified and implemented in terms of objects that map closely to the real world entities that are modeled. Accordingly, we have seen a number of proposals for models that address mandatory security issues in object-oriented databases <ref> [3, 4, 5, 7, 9] </ref>. The model proposed by Jajodia and Kogan [3] (referred to as the message filter model) is distinguishable from this set as it expresses the security policy with a message filtering algorithm and relies on a message filter component to mediate all messages sent between objects.
Reference: [5] <author> T.F. Keefe, W.T. Tsai, and M.B. Thuraisingham. </author> <title> A multilevel security model for object-oriented systems. </title> <booktitle> Proc. 11th National Computer Security Conference, </booktitle> <pages> pp. 1-9, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: This is because access control and security policies can be specified and implemented in terms of objects that map closely to the real world entities that are modeled. Accordingly, we have seen a number of proposals for models that address mandatory security issues in object-oriented databases <ref> [3, 4, 5, 7, 9] </ref>. The model proposed by Jajodia and Kogan [3] (referred to as the message filter model) is distinguishable from this set as it expresses the security policy with a message filtering algorithm and relies on a message filter component to mediate all messages sent between objects.
Reference: [6] <author> D. Maier. </author> <title> Development of an object-oriented DBMS. </title> <booktitle> Proc. 1st Intl. Conf. on Object-Oriented Programming Systems, Languages and Applications, </booktitle> <pages> pp. 472-482, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction In recent years we have seen a considerable effort in the research and development of object-oriented databases (e.g., ORION [1], IRIS [2], GEMSTONE <ref> [6] </ref>). The driving force behind these efforts can be attributed to the advantages offered by object-oriented data models. These include the ability of objects to model the complex structure of entities in an application domain.
Reference: [7] <author> J.K. Millen and T.F. Lunt. </author> <title> Secure Knowledge-based Systems. </title> <type> Technical Report, </type> <institution> Computer Science Laboratory, SRI International, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: This is because access control and security policies can be specified and implemented in terms of objects that map closely to the real world entities that are modeled. Accordingly, we have seen a number of proposals for models that address mandatory security issues in object-oriented databases <ref> [3, 4, 5, 7, 9] </ref>. The model proposed by Jajodia and Kogan [3] (referred to as the message filter model) is distinguishable from this set as it expresses the security policy with a message filtering algorithm and relies on a message filter component to mediate all messages sent between objects.
Reference: [8] <author> R.S. Sandhu, R. Thomas, and S. Jajodia. </author> <title> A Secure Kernelized Architecture for Multilevel Object-Oriented Databases. </title> <booktitle> Proc. of the IEEE Computer Security Foundations Workshop IV, </booktitle> <pages> pp. 139-152, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The main advantage of the message filter model is the simplicity with which mandatory security policies can be stated and enforced. In a recent paper <ref> [8] </ref> we proposed a kernelized architecture for the message filter model that was motivated by the existing architecture of object-oriented database systems. A major complication in implementing the message filter model arises from timing channels inherent in the object-oriented computational model. <p> It is therefore insecure to report the completion of a write-up operation. Instead the process which initiated the write-up must proceed concurrently with the process which executes the write-up. In other words these timing channels can be closed by supporting concurrent asynchronous computations. This idea was proposed in <ref> [8] </ref>. However, the scheduling strategy and execution model for concurrent computations that was presented in [8] is not totally secure as it may be exploited for timing channels under certain conditions. <p> In other words these timing channels can be closed by supporting concurrent asynchronous computations. This idea was proposed in <ref> [8] </ref>. However, the scheduling strategy and execution model for concurrent computations that was presented in [8] is not totally secure as it may be exploited for timing channels under certain conditions. <p> The security properties must guarantee freedom from timing and storage channels. The execution model presented in <ref> [8] </ref> allowed only the leftmost computations in a tree to execute concurrently. This invariant guarantees that there will be only one active computation (message manager) at each ascending security level.
Reference: [9] <author> M.B. Thuraisingham. </author> <title> A multilevel secure object-oriented data model. </title> <booktitle> Proc. 12th National Computer Security Conference, </booktitle> <pages> pp. 579-590, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: This is because access control and security policies can be specified and implemented in terms of objects that map closely to the real world entities that are modeled. Accordingly, we have seen a number of proposals for models that address mandatory security issues in object-oriented databases <ref> [3, 4, 5, 7, 9] </ref>. The model proposed by Jajodia and Kogan [3] (referred to as the message filter model) is distinguishable from this set as it expresses the security policy with a message filtering algorithm and relies on a message filter component to mediate all messages sent between objects.
References-found: 9

