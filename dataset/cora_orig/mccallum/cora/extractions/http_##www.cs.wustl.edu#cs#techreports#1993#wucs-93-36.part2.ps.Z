URL: http://www.cs.wustl.edu/cs/techreports/1993/wucs-93-36.part2.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: Distributed Computing Systems and Checkpointing*  
Author: Ken Wong and Mark Franklin 
Address: St. Louis, MO 63130  
Affiliation: The Computer and Communications Research Center Washington University,  
Abstract: This paper examines the performance of synchronous checkpointing in a distributed computing environment with and without load redistribution. Performance models are developed, and optimum checkpoint intervals are determined. The analysis extends earlier work by allowing for multiple nodes, state dependent checkpoint intervals, and a performance metric which is coupled with failure-free performance and the speedup functions associated with implementation of parallel algorithms. Expressions for the optimum checkpoint intervals for synchronous checkpointing with and without load redistribution are derived and the results are then used to determine when load redistribution is advantageous. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J.S. Turner, </author> <title> ``Design of a Broadcast Packet Switching Network,'' </title> <journal> IEEE Trans. on Comm. </journal> <pages> 36(6) pp. </pages> <month> 734-743 (June </month> <year> 1988). </year>
Reference-contexts: 1. Introduction The dual emerging technologies associated with gigabit networks <ref> [1] </ref> and high-speed processors (supercomputers), suggest the possibility of tackling very large, computation-ally intensive problems by coupling these technologies into a distributed computing environment. The large applications which make good candidates for this environment may produce results only after many hours even when multiple computers are employed.
Reference: 2. <author> John W. Young, </author> <title> ``A First Order Approximation to the Optimum Checkpoint Interval,'' </title> <journal> Communications of the ACM 17(9) pp. </journal> <month> 530-531 (Sept. </month> <year> 1974). </year>
Reference: 3. <author> K. Mani Chandy, James C. Browne, Charles W. Dissly, and Werner R. Uhrig, </author> <title> ``Analytic Models for Rollback and Recovery Strategies in Data Base Systems,'' </title> <journal> IEEE Transactions on Software Engineering SE-1(1) pp. </journal> <month> 100-110 (March </month> <year> 1975). </year>
Reference: 4. <author> E. Gelenbe and D. Derochette, </author> <title> ``Performance of Rollback Recovery Systems under Intermittent Failures,'' </title> <journal> Comm. ACM 21(6) pp. </journal> <month> 493-499 (June </month> <year> 1978). </year>
Reference: 5. <author> Erol Gelenbe, </author> <title> ``On the Optimum Checkpoint Interval,'' </title> <journal> Journal of the ACM 26(2) pp. </journal> <month> 259-270 (Apr. </month> <year> 1979). </year>
Reference: 6. <author> Asser N. Tantawi and Manfred Ruschitzka, </author> <title> ``Performance Analysis of Checkpointing Strategies,'' </title> <journal> ACM Transactions on Computer System 2(2) pp. </journal> <month> 123-144 (May </month> <year> 1984). </year>
Reference: 7. <author> Kang G. Shin, Tein-Hsiang Lin, and Yann-Hang Lee, </author> <title> ``Optimal Checkpointing of Real-Time Tasks,'' </title> <journal> IEEE Transactions on Computers C-36(11) pp. </journal> <month> 1328-1341 (Nov. </month> <year> 1987). </year>
Reference: 8. <author> Victor F. Nicola and Johannes M. Van Spanje, </author> <title> ``Comparative Analysis of Different Models of Checkpointing and Recovery,'' </title> <journal> IEEE Trans. Software Engineering 16(8) pp. </journal> <month> 807-821 (Aug. </month> <year> 1990). </year>
Reference-contexts: Optimum checkpointing Optimum checkpointing for the single-node case has been studied extensively [2,3,4,5,6,7,8]. Optimum checkpoint intervals have been found by maximizing availability or minimizing response time. The objective function is typically convex, and analytic or numerical solutions can be found in many cases <ref> [8] </ref>. In most cases, a transaction-oriented environment is assumed where jobs or requests arrive from a Poisson source. The optimum selection of checkpoint intervals for the multicomputer case has been sparsely studied. Gelenbe, et. al., developed a model which included the overhead of fault detection [9].
Reference: 9. <author> Erol Gelenbe, David Finkel, and Satish K. Tripathi, </author> <title> ``Availability of a Distributed Computer System with Failures,'' </title> <note> Acta Informatica 23 pp. </note> <month> 643-655 </month> <year> (1986). </year>
Reference-contexts: In most cases, a transaction-oriented environment is assumed where jobs or requests arrive from a Poisson source. The optimum selection of checkpoint intervals for the multicomputer case has been sparsely studied. Gelenbe, et. al., developed a model which included the overhead of fault detection <ref> [9] </ref>. Gelenbe assumed that the nodes were homogeneous, the load at each node was identical, the nodes were tested periodically for faults, and there was an external source of jobs. In his development, requests sent to faulty nodes were routed to operational ones.
Reference: 10. <author> Kishor Shridharbhai Trivedi, </author> <title> Probability and Statistics with Reliability, Queueing, </title> <booktitle> and Computer Science Applications, </booktitle> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey (1982). </address>
Reference-contexts: Model Parameters. The availability (steady-state probability of being in the available state) p A can be derived using standard CTMC (continuous-time Markov chain) techniques <ref> [10] </ref>: (1) p A = J 1 + a hh + f hh J -1 Note that the mean recovery rate s is a function of the mean checkpoint rate a since the amount of work to be repeated after a failure is related to the time between checkpoints.
Reference: 11. <author> X. Castillo, S. R. McConnel, and D. P. Siewiorek, </author> <title> ``Derivation and Calibration of a Transient Error Reliability Model,'' </title> <journal> IEEE Trans. on Comm. C-31(7) pp. </journal> <month> 658-671 (July </month> <year> 1982). </year>
Reference-contexts: Checkpoint and state restoration times are representative of times for writing and reading a few megabytes of data from moveable head disk and synchronizing the checkpoint and recovery activities. The mean failure time of 10 5 seconds is a typical value <ref> [11] </ref>, while the mean repair times of 10 3 seconds and 10 seconds represent two short repair times. The dashed curve is the failure-free speedup curve with exponential form (constants b =128 and a =1/128).
Reference: 12. <author> Richard Koo and Sam Toueg, </author> <title> ``Checkpointing and Rollback-Recovery for Distributed Systems,'' </title> <journal> IEEE Transactions on Software Engineering SE-13(1) pp. </journal> <month> 23-31 (January </month> <year> 1987). </year>
Reference: 13. <author> Kai Li, Jeffrey F. Naughton, and James S. Plank, </author> <title> ``An Efficient Checkpointing Method for Multicomputers with Wormhole Routing,'' </title> <journal> International Journal of Parallel Processing, </journal> <month> (June </month> <year> 1992). </year>
Reference: 14. <author> K. Kant, </author> <title> Introduction to Computer System Performance Evaluation, </title> <publisher> McGraw Hill, </publisher> <address> New York (1992). </address>
Reference-contexts: Our hope is that results from both approaches can be used iteratively to produce results which identify the fundamental parameters in determining task allocation in a faulty computation environment. Appendix I Optimum Synchronous Checkpointing With Load Redistribution The Markov chain for Model II obeys local balance equations <ref> [14] </ref>.
Reference: 15. <author> Ken Wong and Mark Franklin, </author> <title> ``Distributed Computing Systems and Checkpointing,'' </title> <type> WUEE 92-115, </type> <institution> Department of Electrical Engineering, Washington University (January 1992). </institution>
Reference-contexts: The details can be found in <ref> [15] </ref>. Since all state probabilities have been written in terms of p N ,0,0,0 above, we have solved for all state probabilities.
References-found: 15

