URL: http://www.cs.unc.edu/~aliaga/Publications/requirements93.ps
Refering-URL: http://www.cs.unc.edu/~aliaga/publications.html
Root-URL: http://www.cs.unc.edu
Phone: Phone: (+49) 89 636 49505 Fax: (+49) 89 636 48000  
Title: Implementation of Graphing Tools by Direct GUI Composition  
Author: Daniel G. Aliaga, Martin Brenner, Matthias Schneider-Hufschmidt 
Address: Otto-Hahn-Ring 6 D-8000 Munchen 83  
Affiliation: Siemens Corporate Research and Development  
Note: 1 of 9  
Abstract: we describe an object oriented design and exible implementation of a set of graphing tools implemented by using only the standard graphical user interface widgets provided by an interactive program composition system developed at Siemens Corporate R&D. The system, SX/Tools, allows for the addition of arbitrary tools (widgets) by direct composition of a set of initial objects. Using this mechanism and without any further system programming we were able to design a powerful set of graphing tools for applications ranging from static displays of data, to business graphs, to dynamically varying data and maintaining interactive rates. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Shneiderman: </author> <title> Designing the User Interface, </title> <publisher> Addi-son-Wesley Publishing Company, </publisher> <year> 1987. </year>
Reference: [2] <editor> Pergamon Infotech Limited, Maidenhead Berkshire, </editor> <title> England: Designing end-user interfaces, </title> <year> 1988. </year>
Reference: [3] <author> T. Kuhme, M. Schneider-Hufschmidt: </author> <title> SX/Tools - An Open Design Environment for Adaptable Multimedia User Interfaces, </title> <booktitle> Proceedings of Eurographics 92, </booktitle> <address> Cambridge, UK, </address> <month> 7-11 September </month> <year> 1992. </year>
Reference-contexts: Many of these systems supported a C-like scripting language or produced C code that could later be compiled. 1.1.3 Direct Composition One of the most powerful strategies used by several of the aforementioned systems is direct composition <ref> [3] </ref>. In essence, an interface designer is given an initial set of widgets with which the user interface is to be built. Once the layout is determined, the application designer or programmer links the user interface to the application.
Reference: [4] <author> T. Kuhme, H. Dieterich, U. Malinowski, M. Schneider-Hufschmidt: </author> <title> Approaches to Adaptivity in User Interface Technology: Survey and Taxonomy, </title> <booktitle> Proceedings of the IFIP TC2/WG2.7 Working Conference on Engineering for Human-Computer Interaction, </booktitle> <address> Ellivuori, Finland, </address> <month> 10-14 August </month> <year> 1992. </year>
Reference-contexts: The ease with which the user interface itself can be altered has caused areas like Adaptive User Interfaces (AUI) to ourish. The difficulty lies in determining an interface suitable for all users, AUI tries to solve this through self-adaptation, user-controlled adaptation, computer-aided adaptation, among others <ref> [4] </ref>. Naturally, the interface designers, namely non-computer experts, soon also wanted to take part in the application construction and linkage. This caused the systems to provide more powerful composition methods. The previous interface designers now also had sets of black-box functionality they could manipulate.
Reference: [5] <institution> Visual Edge Software Ltd.,3870 Cote Vertu, Mont-real, Quebec H4R 1V4: UIMX, </institution> <year> 1990. </year>
Reference-contexts: To name only a few interface builders, some of which obey a direct composition-like strat egy: UIMX (MOTIF) <ref> [5] </ref>, DevGuide (OpenLook) [6], NeXT Interface Builder [7].
Reference: [6] <author> SunSoft: </author> <month> DevGuide. </month> ($$$$$$$) 
Reference-contexts: To name only a few interface builders, some of which obey a direct composition-like strat egy: UIMX (MOTIF) [5], DevGuide (OpenLook) <ref> [6] </ref>, NeXT Interface Builder [7].
Reference: [7] <institution> NeXT Inc., </institution> <address> 900 Chesapeake Drive, Redwood City, CA 94063: </address> <booktitle> NeXTStep and the NeXT Interface Builder, </booktitle> <year> 1991. </year>
Reference-contexts: To name only a few interface builders, some of which obey a direct composition-like strat egy: UIMX (MOTIF) [5], DevGuide (OpenLook) [6], NeXT Interface Builder <ref> [7] </ref>.
Reference: [8] <institution> SX/Tools doc </institution> ($$$$$$$) 
Reference-contexts: To name only a few interface builders, some of which obey a direct composition-like strat egy: UIMX (MOTIF) [5], DevGuide (OpenLook) [6], NeXT Interface Builder [7]. We implemented our graphing tools using a platform developed at Siemens Corporate R&D, namely SX/Tools, <ref> [8] </ref> which follows the principle of direct composition. 1.2 Graphing Tools 1.2.1 Graphs in General It is well known that humans understand facts better when it is presented to them in a visual or graphical manner.
Reference: [9] <author> D. Aliaga: SX/Graphs: </author> <title> Implementation Overview, </title> <month> July </month> <year> 1992. </year> <title> [further ideas: Add an example to the last paragraph of the graph tools future work section. I couldnt think of one (and its already Friday 24th!). to-do: Section 3.0 needs to be filled. 2 refs are still missing, if cannot be completed, omit them. Once final text is all inserted, arrange so that figures do not cause large empty sections in the paper.] </title>
Reference-contexts: See <ref> [9] </ref> for a complete listing of methods. Implementation Implementation of Graphing Tools by Direct GUI Composition 5 of 9 TABLE 2. Essential Graph-specific Methods Method Name Description For bar and line graphs: setCoordinateStyle Select type of coordinate axes to use. setCoordinateDivs Select the number of divisions per axis.
References-found: 9

