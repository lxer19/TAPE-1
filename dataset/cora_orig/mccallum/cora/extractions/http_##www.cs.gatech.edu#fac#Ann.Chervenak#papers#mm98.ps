URL: http://www.cs.gatech.edu/fac/Ann.Chervenak/papers/mm98.ps
Refering-URL: http://www.cs.gatech.edu/fac/Ann.Chervenak/ptera/prefetchWWW.html
Root-URL: 
Email: fmaria,annc,ewzg@cc.gatech.edu  
Title: Tracking Number A-183 Using Experience to Guide Web Server Selection  
Author: Maria L. Gullickson Ann L. Chervenak Ellen W. Zegura 
Note: This work was supported in part by NSF Careers Award CCR-9702609 and by an REU Supplement to NSF Careers Award MIP-9502669. Corresponding author  
Address: Atlanta, GA 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Abstract: We examine the use of the anycasting communication paradigm to improve client performance when accessing replicated multimedia objects. Anycasting supports dynamic selection of a server amongst a group of servers that provide equivalent content. If the selection is done well, the client will experience improved performance. A key issue in anycasting is the method used to maintain performance information used in server selection. We explore user experience | i.e., performance on past accesses | to predict future performance. We conduct our work in the context of a customized web prefetching application called WebSnatcher. We examine a variety of algorithms for selecting a server using past performance. We find that the overall average and weighted average algorithms are closest to optimal performance. This work has implications for responsible network behavior by applications that generate network traffic automatically. The results can also be used to reach conclusions about the performance that would be obtained if anycasting were used in an interactive application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bhattacharjee, M. H. Ammar, E. W. Zegura, V. Shah, and Z. Fei. </author> <title> Application layer anycasting. </title> <booktitle> In Proceedings of INFOCOM 97, </booktitle> <year> 1997. </year>
Reference-contexts: The resolver keeps information on the performance of the servers in the group and uses that information to predict which server will provide the best performance on the current request. In previous work we defined an architecture for application-layer anycasting <ref> [1] </ref> and examined a hybrid server-push/client-pull method for maintaining performance information at the resolver [5]. In this paper, we explore the use of an alternative method for maintaining server metrics, namely user experience. This technique uses the information obtained over time in accessing servers to predict future performance. <p> In this paper, we explore the use of an alternative method for maintaining server metrics, namely user experience. This technique uses the information obtained over time in accessing servers to predict future performance. We had previously included user experience in an enumeration of possible metric maintenance techniques <ref> [1] </ref>, but had not evaluated this method. For suitable applications, user experience is attractive because the performance information is obtained in the course of normal information retrieval. We examine user experience in the context of a particular application, namely a customized web prefetching application called WebSnatcher. <p> The sender requests interaction by sending a datagram with the IP anycast address for the group in the destination address field. The datagram is then routed using anycast-aware routers to at least one of the hosts identified by the anycast address. In our work <ref> [1] </ref> we adopt a more general view of anycasting as a communication paradigm that is analogous to the broadcast and multicast communication paradigms. In the anycasting paradigm, a name is used to refer to a service that can be provided by any of a group of servers. <p> The original anycasting proposal [15] can be viewed as providing the anycasting service definition and examining the provision of this service within the IP layer, where the naming is done with an IP anycast address. This network-layer-supported anycasting has several limitations as discussed in <ref> [1] </ref>, the most important being that application-specific metrics cannot be maintained at the network layer. These limitations motivate our application-layer approach to anycasting. Whereas network-layer support hinges around the use of anycast IP addresses, our application-layer support makes use of anycast domain names (ADNs). <p> Third, we gather metric information using a technique that we had previously defined, but not explored in any detail. In previous work we have focused on an architecture for application-layer anycasting <ref> [1] </ref> and the use of a hybrid server-push/client-pull method for maintaining server metrics [5]. In this paper, we explore the use of an alternative method for maintaining server metrics, namely user experience.
Reference: [2] <author> R. L. Carter and M. E. Crovella. </author> <title> Dynamic server selection using bandwidth probing in wide-area networks. </title> <type> Technical Report BU-CS-96-007, </type> <institution> Computer Science Department, Boston University, </institution> <address> Boston, MA, </address> <year> 1996. </year>
Reference-contexts: The attribute values are updated via a push from a Server agent co-located with the Service and deposited at a Directory. While not explicitly prohibited, it is not at all clear whether path-dependent attributes could be incorporated within the attribute update protocol. Recent work by Carter and Corvella <ref> [3, 2] </ref> has also addressed the issue of server selection. Their selection, however, has been primarily based on the characteristics of the path leading to the server. <p> Their selection, however, has been primarily based on the characteristics of the path leading to the server. While they acknowledge the desirability of using server load information as a guide to server selection, their work does not address this issue (except for a limited experiment reported in <ref> [2] </ref>). The concept of probing the network and the servers to determine performance measures is related to various tools, and systems that are used for network management purposes.
Reference: [3] <author> R. L. Carter and M. E. Crovella. </author> <title> Server selection using dynamic path characterization in wide-area networks. </title> <booktitle> In Proceedings of INFOCOM 97, </booktitle> <year> 1997. </year>
Reference-contexts: The attribute values are updated via a push from a Server agent co-located with the Service and deposited at a Directory. While not explicitly prohibited, it is not at all clear whether path-dependent attributes could be incorporated within the attribute update protocol. Recent work by Carter and Corvella <ref> [3, 2] </ref> has also addressed the issue of server selection. Their selection, however, has been primarily based on the characteristics of the path leading to the server.
Reference: [4] <author> Richard V. Dragan. </author> <title> Advice From the Web. </title> <journal> PC Magazine, </journal> <note> 9 September 1997. http://www.zdnet.com/pcmag/features/advice/ open.htm. </note>
Reference-contexts: Third, the application prefetches documents based on the user's access pattern and the current document request. Recommendation systems allow users explicitly to tell the system what pages they like and dislike <ref> [4] </ref>. The system can then determine which users have similar interests and make recommendations to a particular user based on how others with shared interests have responded. Systems of this type include Firefly [6], Net Perceptions [14], LikeMinds [11], and WiseWire [19].
Reference: [5] <author> Z. Fei, S. Bhattacharjee, E. Zegura, and M. Ammar. </author> <title> A novel server selection technique for improving the response time of a replicated service. </title> <note> In To appear in INFOCOM 98, </note> <year> 1998. </year>
Reference-contexts: In previous work we defined an architecture for application-layer anycasting [1] and examined a hybrid server-push/client-pull method for maintaining performance information at the resolver <ref> [5] </ref>. In this paper, we explore the use of an alternative method for maintaining server metrics, namely user experience. This technique uses the information obtained over time in accessing servers to predict future performance. <p> Further, our earlier work indicates that the use of anycasting by some clients can improve performance for all clients (including those who select servers at random) because anycasting tends to balance load across network paths and servers <ref> [5] </ref>. Thus, responsible WebSnatcher behavior can reduce the burden on interactive clients. Second, one can use the results of this study to reach conclusions about the performance that would be obtained if anycasting were used in an interactive application. The remainder of the paper is organized as follows. <p> Third, we gather metric information using a technique that we had previously defined, but not explored in any detail. In previous work we have focused on an architecture for application-layer anycasting [1] and the use of a hybrid server-push/client-pull method for maintaining server metrics <ref> [5] </ref>. In this paper, we explore the use of an alternative method for maintaining server metrics, namely user experience. This technique is motivated by the observation that users currently make server access decisions based, in part, on past experience.
Reference: [6] <author> Firefly. </author> <title> Web Site, </title> <note> 1996. http://www.firefly.net/. </note>
Reference-contexts: Recommendation systems allow users explicitly to tell the system what pages they like and dislike [4]. The system can then determine which users have similar interests and make recommendations to a particular user based on how others with shared interests have responded. Systems of this type include Firefly <ref> [6] </ref>, Net Perceptions [14], LikeMinds [11], and WiseWire [19]. Wget [18] is a GNU utility to retrieve specified web pages that allows users to indicate what types of hyperlinks to follow during prefetching. This allows the user to restrict the data being retrieved without eliminating pages of greatest interest.
Reference: [7] <author> A. Ghosh and P. Brooks. Mwatch 3.6.2. </author> <note> available from http://www.cl.cam.ac.uk/mbone/index.html#Mrouted. </note>
Reference-contexts: The concept of probing the network and the servers to determine performance measures is related to various tools, and systems that are used for network management purposes. Examples of these include the traceroute [10], and mwatch <ref> [7] </ref> tools and management systems that integrate such tools such as the Fremont system [20]. 3 WebSnatcher: Customized Web Prefetching WebSnatcher is an application that prefetches multimedia objects over the World Wide Web according to a user's specified interests.
Reference: [8] <author> J. Guyton and M. Schwartz. </author> <title> Locating nearby copies of replicated Internet servers. </title> <booktitle> In Proceedings of SIGCOMM 95, </booktitle> <pages> pages 288-298, </pages> <year> 1995. </year>
Reference-contexts: Two notable studies in the area of "best" server selection are the original work by Partridge, Mendez and Milliken [15] proposing the idea of anycasting and discussing its network-layer support and a study by Guyton and Schwartz <ref> [8] </ref> which addresses the problem of locating the nearest server. The latter work also presents a classification of "best"-server location schemes.
Reference: [9] <institution> The Informant Common questions. FAQ, </institution> <year> 1997. </year> <note> http://informant.dartmouth.edu/about.html. </note>
Reference-contexts: Wget [18] is a GNU utility to retrieve specified web pages that allows users to indicate what types of hyperlinks to follow during prefetching. This allows the user to restrict the data being retrieved without eliminating pages of greatest interest. The Informant <ref> [9] </ref> is a web notification service from Dartmouth College. Users select URLs and sets of keywords. The Informant combines the results of queries to several search engines to determine the ten most relevant sites. The application monitors these sites and informs the user when they change.
Reference: [10] <author> V. Jacobson. Traceroute. </author> <note> available from ftp://ftp.ee.lbl.gov/traceroute.tar.Z. </note>
Reference-contexts: The concept of probing the network and the servers to determine performance measures is related to various tools, and systems that are used for network management purposes. Examples of these include the traceroute <ref> [10] </ref>, and mwatch [7] tools and management systems that integrate such tools such as the Fremont system [20]. 3 WebSnatcher: Customized Web Prefetching WebSnatcher is an application that prefetches multimedia objects over the World Wide Web according to a user's specified interests. <p> The table includes the geographic location of each server as well as the number of network hops along the routing path from a client at Georgia Tech to each server. The hop count was determined using the traceroute application <ref> [10] </ref>.
Reference: [11] <author> LikeMinds, Inc. </author> <title> Web Site, </title> <note> 1997. http://www.likeminds.com/. </note>
Reference-contexts: The system can then determine which users have similar interests and make recommendations to a particular user based on how others with shared interests have responded. Systems of this type include Firefly [6], Net Perceptions [14], LikeMinds <ref> [11] </ref>, and WiseWire [19]. Wget [18] is a GNU utility to retrieve specified web pages that allows users to indicate what types of hyperlinks to follow during prefetching. This allows the user to restrict the data being retrieved without eliminating pages of greatest interest.
Reference: [12] <author> Tong Sau Loon and Vaduvur Bharghavan. </author> <title> Alleviating the Latency and Bandwidth Problems in WWW Browsing. </title> <note> 1997. http://timely.crhc.uiuc.edu/Papers/usits v1.ps. 16 </note>
Reference-contexts: The application can also construct a search engine query to find related pages. By predicting the interest level of links, Syskill & Webert helps users avoid fetching uninteresting pages. Loon and Bharghavan have developed several techniques to address latency and bandwidth problems in web browsing <ref> [12] </ref> over a low bandwidth link. First, they maintain profiles of user and group access patterns and allow users to join groups based on their interests. Second, their 6 application prefetches documents to a proxy server and filters data to reduce the amount that is transmitted to a client.
Reference: [13] <author> K. Moore, J. Cox, and S. Green. </author> <title> SONAR a network proximity service. Internet Draft (work in progress) draft-moore-sonar-01.txt, </title> <month> February </month> <year> 1996. </year>
Reference-contexts: The latter work also presents a classification of "best"-server location schemes. Another related project is the SONAR network proximity service <ref> [13] </ref> in which the authors define a service that can return the closest (in hops) server from among a list presented to it. The Service Location Working Group of the IETF has been developing protocols to facilitate the discovery and selection of network services [17].
Reference: [14] <institution> Net Perceptions. </institution> <note> Web Site, 1997. http://www.netperceptions.com/. </note>
Reference-contexts: The system can then determine which users have similar interests and make recommendations to a particular user based on how others with shared interests have responded. Systems of this type include Firefly [6], Net Perceptions <ref> [14] </ref>, LikeMinds [11], and WiseWire [19]. Wget [18] is a GNU utility to retrieve specified web pages that allows users to indicate what types of hyperlinks to follow during prefetching. This allows the user to restrict the data being retrieved without eliminating pages of greatest interest.
Reference: [15] <author> C. Partridge, T. Mendez, and W. Milliken. </author> <title> Host anycasting service. </title> <type> RFC 1546, </type> <month> November </month> <year> 1993. </year>
Reference-contexts: Section 4 describes the anycasting resolver algorithms we studied and presents their performance for several groups of anycasting servers. We conclude in Section 5. 2 Application-Layer Anycasting 2.1 Architecture Overview Anycasting was originally defined <ref> [15] </ref> as an IP network layer service that provides: "a stateless best effort delivery of an anycast datagram to at least one host, and prefer ably only one host, which serves the anycast address." In this definition, an IP anycast address is used to identify a group of hosts. <p> In the anycasting paradigm, a name is used to refer to a service that can be provided by any of a group of servers. The original anycasting proposal <ref> [15] </ref> can be viewed as providing the anycasting service definition and examining the provision of this service within the IP layer, where the naming is done with an IP anycast address. <p> Two notable studies in the area of "best" server selection are the original work by Partridge, Mendez and Milliken <ref> [15] </ref> proposing the idea of anycasting and discussing its network-layer support and a study by Guyton and Schwartz [8] which addresses the problem of locating the nearest server. The latter work also presents a classification of "best"-server location schemes.
Reference: [16] <author> Michael Pazzani, Jack Muramatsu, and Daniel Billsus. Syskill & Webert: </author> <title> Identifying interesting web sites. </title> <booktitle> In Spring Symposium. AAAI, </booktitle> <year> 1996. </year> <note> http://www.ics.uci.edu/~pazzani/RTF/AAAI.html. </note>
Reference-contexts: Pazzani, Muramatsu and Billsus at the University of California, Irvine, have developed an agent called Syskill & Webert <ref> [16] </ref> that allows users to rate the interest level of various pages on a specific topic. Based on these ratings, the application suggests links from the current page that might be of interest to the user. The application can also construct a search engine query to find related pages.
Reference: [17] <author> J. Veizades, E. Guttman, C. Perkins, and S. Kaplan. </author> <title> Service location protocol. </title> <type> RFC 2165, </type> <month> June </month> <year> 1997. </year>
Reference-contexts: The Service Location Working Group of the IETF has been developing protocols to facilitate the discovery and selection of network services <ref> [17] </ref>. Thus, the high level objectives of their work and ours are quite similar. However, their focus has been on selecting services within an enterprise network, not the global Internet. Their protocols are well-suited to services such as printers or file servers, with long-lived attributes (e.g., location of a printer).
Reference: [18] <author> Wget Manual, </author> <month> 27 May </month> <year> 1997. </year> <note> http://www.lns.cornell.edu/public/COMP/info/wget/wget toc.html. </note>
Reference-contexts: The system can then determine which users have similar interests and make recommendations to a particular user based on how others with shared interests have responded. Systems of this type include Firefly [6], Net Perceptions [14], LikeMinds [11], and WiseWire [19]. Wget <ref> [18] </ref> is a GNU utility to retrieve specified web pages that allows users to indicate what types of hyperlinks to follow during prefetching. This allows the user to restrict the data being retrieved without eliminating pages of greatest interest. The Informant [9] is a web notification service from Dartmouth College.
Reference: [19] <author> WiseWire Corporation. </author> <title> Web Site, </title> <note> 1997. http://www.wisewire.com/. </note>
Reference-contexts: The system can then determine which users have similar interests and make recommendations to a particular user based on how others with shared interests have responded. Systems of this type include Firefly [6], Net Perceptions [14], LikeMinds [11], and WiseWire <ref> [19] </ref>. Wget [18] is a GNU utility to retrieve specified web pages that allows users to indicate what types of hyperlinks to follow during prefetching. This allows the user to restrict the data being retrieved without eliminating pages of greatest interest.
Reference: [20] <author> D. Wood, S. Coleman, and M. Schwartz. Fremont: </author> <title> A system for discovering network characteristics and problems. </title> <booktitle> In Proceedings of 1993 Winter USENIX Conference, </booktitle> <pages> pages 335-347, </pages> <month> January </month> <year> 1993. </year> <month> 17 </month>
Reference-contexts: Examples of these include the traceroute [10], and mwatch [7] tools and management systems that integrate such tools such as the Fremont system <ref> [20] </ref>. 3 WebSnatcher: Customized Web Prefetching WebSnatcher is an application that prefetches multimedia objects over the World Wide Web according to a user's specified interests. WebSnatcher stores prefetched web pages, images and frames on the user's local file system.
References-found: 20

