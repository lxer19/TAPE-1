URL: http://www.tns.lcs.mit.edu/~djw/library/sigmetric96.ps.gz
Refering-URL: http://www.tns.lcs.mit.edu/~djw/library/
Root-URL: 
Title: Experiences with Network Simulation  
Author: Lawrence S. Brakmo and Larry L. Peterson 
Affiliation: University of Arizona  
Abstract: Simulation is a critical tool in developing, testing, and evaluating network protocols and architectures. This paper describes x-Sim, a network simulator based on the x-kernel, that is able to fully simulate the topologies and traffic patterns of large scale networks. It also gives case studies to help illustrate the capabilities and usefulness of the simulator. Finally, we consider a set of basic simulation principles in the context of running network simulations, giving a set of concrete guidelines and, most importantly, providing examples to help quantify the value of these principles as well as the cost of ignoring them. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.-S. Ahn, P. B. Danzig, Z. Liu, and L. Yan. </author> <title> Experience with TCP Vegas: Emulation and Experiment. </title> <booktitle> In Proceedings of the SIGCOMM '95 Symposium, </booktitle> <month> Aug. </month> <year> 1995. </year> <note> In press. </note>
Reference-contexts: An alternative to simulation is emulation <ref> [1] </ref>, a technique that uses workstations connected by a real network, with modifications to the operating system to simulate slower links and larger propagation delays. Under this framework, simulated time and real time are the same.
Reference: [2] <author> L. S. Brakmo and L. L. Peterson. </author> <title> Performance Problems in BSD4.4 TCP. </title> <journal> ACM Computer Communication Review, </journal> <volume> 25(5) </volume> <pages> 69-86, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Some of the problems, like the cause of the sending rate spike, were caused by bugs in the code (specifically a bug in the header prediction code). Other problems, like the duration of the RTOs, were caused by suboptimal algorithms. All together, more than five problems were uncovered <ref> [2] </ref>. Figure 4 shows the behavior, under the same scenario, of a modified implementation of TCP where the problems were fixed. This is the plot that someone familiar with both, TCP and our graphs, would have expected to see initially.
Reference: [3] <author> L. S. Brakmo and L. L. Peterson. </author> <title> TCP Vegas: End to End Congestion Avoidance on a Global Internet. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 13(8) </volume> <pages> 1465-1480, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: All that remains is to set buffer utilization goals which are then used to trigger either an increase or a decrease of the congestion window. This congestion avoidance mechanism was incorporated into a new implementation of TCP with the goal of testing its effectiveness at preventing congestion <ref> [3] </ref>. The simulator proved invaluable as a debugging, tuning, and measuring tool. The fact that protocols can be moved between the simulator and platforms supporting the x-kernel, allowed us to easily measure the performance of this TCP implementation on the Internet. <p> This is another example where varying the parameters of the experiment leads to useful insights and comparisons. For example, a set of experiments comparing TCP Reno with TCP Vegas <ref> [3] </ref> showed that TCP Vegas was not sensitive to the send buffer sizeas long as it is big enough so that it is not the limiting factor. Figure 13 shows the average throughput for a set of simulations with different send buffer sizes.
Reference: [4] <author> P. Danzig and S. Jamin. tcplib: </author> <title> A Library of TCP Internetwork Traffic Characteristics. </title> <type> Technical Report CS-SYS-91-495, </type> <institution> Computer Science Department, USC, </institution> <year> 1991. </year>
Reference-contexts: The first step for having realistic traffic is to use a common implementation of the underlying protocolsx-Sim gets this from the protocol graph. Next, we need a way to model the traffic. Here, x-Sim contains a protocol for simulating Internet traffic based on tcplib <ref> [4] </ref>. Tcplib is a library to model Internet traffic sources based on empirical data collected at different Internet gateways, and it has been shown to produce realistic traffic patterns [13].
Reference: [5] <author> A. Heybey. </author> <title> The network simulator. </title> <type> Technical report, </type> <institution> MIT, </institution> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: Finally, there are other protocols (everything is a protocol in the x-kernel) that model other types of transfers; for example, TCP bulk transfers transfers. 2.4 Related Work Some of best known freely available network simulators are REAL [10], Netsim <ref> [5] </ref> and the recently released ns from LBL's Network Research Group 1 . Neither simulator supports common implementations of protocols, that is, direct execution. Instead there is code to simulate the major characteristics of the protocol.
Reference: [6] <author> N. C. Hutchinson and L. L. Peterson. </author> <title> The x-kernel: An architecture for implementing network protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(1) </volume> <pages> 64-76, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: In short, the simulator must facilitate working with actual protocols, rather than just abstract specifications of protocols. This paper describes a suite of tools to simulate and analyze network and protocol behavior. The centerpiece of this suite is x-Sim, a network simulator based on the x-kernel <ref> [6] </ref> which satisfies the requirements enumerated in the previous paragraph. Section 2 describes the simulatoras well as the related analysis toolsand compares it to existing simulators and emulators.
Reference: [7] <author> V. Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proceedings of the SIGCOMM '88 Symposium, </booktitle> <pages> pages 314-32, </pages> <month> Aug. </month> <year> 1988. </year>
Reference: [8] <author> V. Jacobson, R. Braden, and D. </author> <title> Borman. TCP Extensions for High Performance. Request for Comments 1323, </title> <month> May </month> <year> 1992. </year>
Reference-contexts: For example, TCP Reno augments TCP Tahoe with a better loss recovery mechanism, called Fast Retransmit [14], which resulted in throughput improvements of 10 to 20%. TCP Lite augments TCP Reno by implementing the Big Window and the Protection Against Wrapped Sequence Numbers options <ref> [8] </ref>. As will be seen later in this section, newer implementations of TCP not only include desirable features but also sometimes introduce performance bugs. Hence the need for tools with which to analyze the behavior of TCP connections. Graphical tools are generally the most useful. TCP transfer.
Reference: [9] <author> R. Jain. </author> <title> The Art of Computer Systems Performance Analysis: Techniques for ExperimentalDesign, Measurement, Simulation and Modeling. </title> <publisher> John Wiley and Sons, Inc., </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: measurements, in the simulator and on the Internet, showed a major decrease in losses and a large increase in throughputthis implementation of TCP had more new mechanisms than just congestion avoidance. 4 Guidelines for Network Simulations There is a wealth of literature on the subject of simulation; for example, see <ref> [9] </ref> and [11] for a good overview. Among the issues presented in the literature are general principles all simulation experiments should follow to insure the validity of the results.
Reference: [10] <author> S. Keshav. </author> <title> REAL: A Network Simulator. </title> <type> Technical Report 88/472, </type> <institution> Department of Computer Science, UC Berkeley, </institution> <year> 1988. </year>
Reference-contexts: Finally, there are other protocols (everything is a protocol in the x-kernel) that model other types of transfers; for example, TCP bulk transfers transfers. 2.4 Related Work Some of best known freely available network simulators are REAL <ref> [10] </ref>, Netsim [5] and the recently released ns from LBL's Network Research Group 1 . Neither simulator supports common implementations of protocols, that is, direct execution. Instead there is code to simulate the major characteristics of the protocol.
Reference: [11] <author> A. M. Law and W. D. </author> <title> Kelton. Simulation Modelling and Analysis. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: the simulator and on the Internet, showed a major decrease in losses and a large increase in throughputthis implementation of TCP had more new mechanisms than just congestion avoidance. 4 Guidelines for Network Simulations There is a wealth of literature on the subject of simulation; for example, see [9] and <ref> [11] </ref> for a good overview. Among the issues presented in the literature are general principles all simulation experiments should follow to insure the validity of the results. Typically, these principles are presented in general terms, and it is up to the experimenter to apply them to their particular case.
Reference: [12] <author> W. Leland, M. Taqqu, W. Willinger, and D. Wilson. </author> <title> On the Self-Similar Nature of Ethernet Traffic. </title> <booktitle> In Proceedings of the SIGCOMM '93 Conference, </booktitle> <pages> pages 183-193, </pages> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: The most common ways to simulate this traffic has been either through Poisson sources, or by having multiple bulk transfer TCP connections. There are several problems with Poisson sources. First, it has been shown that Poisson sources fail to accurately model either LAN traffic <ref> [12] </ref> or WAN traffic [13]. Moreover, Poisson sources are non-reactivethey behave the same way regardless of the network behavior.
Reference: [13] <author> V. Paxson and S. Floyd. </author> <title> Wide-Area Traffic: The Failure of Poisson Modeling. </title> <booktitle> In Proceedings of the SIGCOMM '94 Conference, </booktitle> <pages> pages 257-268, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: Here, x-Sim contains a protocol for simulating Internet traffic based on tcplib [4]. Tcplib is a library to model Internet traffic sources based on empirical data collected at different Internet gateways, and it has been shown to produce realistic traffic patterns <ref> [13] </ref>. This traffic model is realized as a protocol called TRAFFIC, which sits at the top of the protocol graph generating work. The traffic simulation protocol (TRAFFIC) starts conversations with interarrival times given by an exponential distribution. <p> The most common ways to simulate this traffic has been either through Poisson sources, or by having multiple bulk transfer TCP connections. There are several problems with Poisson sources. First, it has been shown that Poisson sources fail to accurately model either LAN traffic [12] or WAN traffic <ref> [13] </ref>. Moreover, Poisson sources are non-reactivethey behave the same way regardless of the network behavior.
Reference: [14] <author> W. R. Stevens. </author> <title> TCP/IP Illustrated, Volume 1: The Protocols. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Each succeeding generation, starting with TCP Tahoe and ending with TCP Lite, was the result of adding more features to its predecessor. For example, TCP Reno augments TCP Tahoe with a better loss recovery mechanism, called Fast Retransmit <ref> [14] </ref>, which resulted in throughput improvements of 10 to 20%. TCP Lite augments TCP Reno by implementing the Big Window and the Protection Against Wrapped Sequence Numbers options [8]. <p> The results are similar as having a large number of traffic sources, with a group of sources firing their timers at the same time. 7 The exact mechanism for deciding when to retransmit is outside the scope of this paper; <ref> [14] </ref> is an excellent source. A tool that is very useful at finding unwanted uniform behavior is Fourier analysis. This type of analysis uncovers periodic behavior which may point to possible problems and to the cause of these problems.
Reference: [15] <author> USC. </author> <title> Transmission control protocol. Request for Comments 793, </title> <institution> USC Information Sciences Institute, Marina del Ray, Calif., </institution> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: shown in the next section where we consider some case studies showing the usefulness of the simulator and its tools. traffic (throughput: 70KB/s). 3 Case Studies This section gives two case studies that illustrate how we have used x-Sim and the associated analysis tools to do performance debugging on TCP <ref> [15] </ref>. The most widely used implementations of TCPTahoe, Reno and Liteare named after the BSD Unix distributions they were a part of. Each succeeding generation, starting with TCP Tahoe and ending with TCP Lite, was the result of adding more features to its predecessor.
References-found: 15

