URL: http://dc.isx.com/~bkettle/Papers/ieee-exp.ps
Refering-URL: 
Root-URL: 
Title: Massively Parallel Support for Case-based Planning  
Author: Brian P. Kettler, James A. Hendler, William A. Andersen, and Matthew P. Evett 
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: In case-based planning (CBP), previously generated plans are stored as cases in memory and can be reused to solve similar planning problems in the future. CBP can save considerable time over planning from scratch (generative planning), thus offering a potential (heuristic) mechanism for handling intractable problems. One drawback of CBP systems has been the need for a highly structured memory that requires significant domain engineering and complex memory indexing schemes to enable efficient case retrieval. In contrast, our CBP system, CaPER, is based on a massively parallel frame-based AI language and can do extremely fast retrieval of complex cases from a large, unindexed memory. The ability to do fast, frequent retrievals has many advantages: indexing is unnecessary; very large casebases can be used; and memory can be probed in numerous alternate ways, allowing more specific retrieval of stored plans that better fit a target problem with less adaptation. fl Preliminary version of an article appearing in IEEE Expert, February 1994, pp. 8-14. This paper is an extended version of [1]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> B.P. Kettler, J.A. Hendler, W.A. Andersen, </editor> <title> and M.P. Evett, "Massively Parallel Support for Case-Based Planning," </title> <booktitle> Proceedings of the Ninth Conference on Artificial Intelligence Applications (IEEE). </booktitle> <address> Los Alamitos, California: </address> <publisher> IEEE Computer Society Press: </publisher> <year> 1993, </year> <pages> pp. 3-11. </pages>
Reference-contexts: The parallel procedures, in contrast, exhibited times growing better than logarithmically in the size of the casebase. Thus, using parallel methods, casebases in the thousands of cases can be accessed efficiently. Results similar to those above were also found for the automobile assembly domain <ref> [1] </ref>.
Reference: [2] <author> W.D. Hillis, </author> <title> The Connection Machine. </title> <address> Cambridge, Massachusetts: </address> <publisher> The MIT Press, </publisher> <year> 1985. </year>
Reference: [3] <author> S. Vosniadou and A. Ortony, </author> <title> "Similarity and analogical reasoning: a synthesis," Similarity and Analogical Reasoning, </title> <publisher> Cambridge: Cambridge University Press, </publisher> <year> 1989, </year> <pages> pp. 1-17. </pages>
Reference-contexts: CBP is a type of case-based reasoning (CBR), which involves the use of stored experiences ("cases"). There is strong evidence that people frequently employ this kind of analogical reasoning (e.g., <ref> [3] </ref> [4] [5]). CBP planners can be distinguished from generative planners, such as Nonlin [6], which generate a plan from scratch by searching a space of partial plans.
Reference: [4] <author> D. Gentner, </author> <title> "The mechanisms of analogical learning," Similarity and Analogical Reasoning, </title> <editor> Eds. S. Vosniadou and A. Ortony. </editor> <publisher> Cambridge: Cambridge University Press, </publisher> <year> 1989, </year> <pages> pp. 199-241. </pages>
Reference-contexts: CBP is a type of case-based reasoning (CBR), which involves the use of stored experiences ("cases"). There is strong evidence that people frequently employ this kind of analogical reasoning (e.g., [3] <ref> [4] </ref> [5]). CBP planners can be distinguished from generative planners, such as Nonlin [6], which generate a plan from scratch by searching a space of partial plans. <p> For example, a discrimination tree has a fixed ordering of indexed features by salience: the more salient features are at higher levels of the tree. Finally, the psychological plausibility of indexing is questionable given evidence from psychological studies of human analogue retrieval (e.g., <ref> [4] </ref> [9] [10]). Human analogue retrieval is fast and highly associative, with many remindings being generated. <p> The abstract relationships between the objects involved may be more important for retrieving analogous plans than the particular objects and locations themselves. The better analogies are often those in which the two analogues have underlying, or "structural", similarities <ref> [4] </ref>. CaPER is able to use relevant structural relationships between domain entities as part of the memory probe.
Reference: [5] <author> B.H. Ross, </author> <title> "Some Psychological Results on Case-based Reasoning," </title> <booktitle> Proceedings: Case-Based Reasoning Workshop (DARPA). </booktitle> <address> San Mateo, California: </address> <publisher> Morgan Kauf-mann, </publisher> <year> 1989, </year> <pages> pp. 144-147. </pages>
Reference-contexts: CBP is a type of case-based reasoning (CBR), which involves the use of stored experiences ("cases"). There is strong evidence that people frequently employ this kind of analogical reasoning (e.g., [3] [4] <ref> [5] </ref>). CBP planners can be distinguished from generative planners, such as Nonlin [6], which generate a plan from scratch by searching a space of partial plans.
Reference: [6] <author> A. Tate, </author> <title> "Project Planning Using a Hierarchic Non-linear Planner", Research Report No. </title> <type> 25, </type> <institution> Department of Artificial Intelligence, University of Edinburgh, </institution> <year> 1975. </year>
Reference-contexts: CBP is a type of case-based reasoning (CBR), which involves the use of stored experiences ("cases"). There is strong evidence that people frequently employ this kind of analogical reasoning (e.g., [3] [4] [5]). CBP planners can be distinguished from generative planners, such as Nonlin <ref> [6] </ref>, which generate a plan from scratch by searching a space of partial plans. These systems expand a partial plan by adding actions to it and then checking the plan for helpful and harmful interactions between actions in the expanded plan | a costly process.
Reference: [7] <author> K.J. Hammond, </author> <title> "Case-based planning: A framework for planning from experience," </title> <journal> Cognitive Science, </journal> <volume> Vol. 14, </volume> <year> 1990, </year> <pages> pp. 384-443. </pages>
Reference-contexts: This is known as the "indexing problem" in the CBR/CBP literature. Many serial CBP systems use pre-indexing. Pre-indexing is the use of case features ("indices") which are fixed at case storage time. For example, the CHEF system <ref> [7] </ref> stores a plan for cooking beef and broccoli stir-fry under the indices "beef" and "broccoli" and abstractions "meat" and "vegetable". Many CBP systems use more complex indices such as expectation failures encountered during plan execution. Pre-indexing often imposes a particular organization on the case memory.
Reference: [8] <author> M. Goodman, </author> <title> "CBR in Battle Planning," </title> <booktitle> Proceedings: Case-Based Reasoning Workshop (DARPA). </booktitle> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1989, </year> <pages> pp. 264-269. </pages>
Reference-contexts: Some recent research has been done on ways to automatically build indexing schemes. For example, in the Battle Planner system <ref> [8] </ref>, the discrimination tree of indices was automatically induced, producing a better-balanced tree that enabled more efficient case retrieval. 2 The indices pro 2 Worst case retrieval time from a balanced binary tree is O (log n), where n is the 3 duced by automated techniques, however, can be highly artificial,
Reference: [9] <author> P.R. Thagard and K.J. Holyoak, </author> <title> "Why Indexing is the Wrong Way to Think About Analog Retrieval", </title> <booktitle> Proceedings: Case-Based Reasoning Workshop (DARPA). </booktitle> <address> San Ma-teo, California: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1989, </year> <pages> pp. 36-40. </pages>
Reference-contexts: For example, a discrimination tree has a fixed ordering of indexed features by salience: the more salient features are at higher levels of the tree. Finally, the psychological plausibility of indexing is questionable given evidence from psychological studies of human analogue retrieval (e.g., [4] <ref> [9] </ref> [10]). Human analogue retrieval is fast and highly associative, with many remindings being generated.
Reference: [10] <author> D. Waltz, </author> <title> "Is Indexing Used for Retrieval?" Proceedings: </title> <booktitle> Case-Based Reasoning Workshop (DARPA), </booktitle> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1989, </year> <pages> pp. 41-45. 17 </pages>
Reference-contexts: For example, a discrimination tree has a fixed ordering of indexed features by salience: the more salient features are at higher levels of the tree. Finally, the psychological plausibility of indexing is questionable given evidence from psychological studies of human analogue retrieval (e.g., [4] [9] <ref> [10] </ref>). Human analogue retrieval is fast and highly associative, with many remindings being generated.
Reference: [11] <author> M.P. Evett, J.A. Hendler, and L. Spector, </author> <title> "Parallel Knowledge Representation on the Connection Machine," </title> <journal> Journal of Parallel and Distributed Computing, </journal> <year> 1993, </year> <month> forthcoming. </month>
Reference-contexts: One application of PARADYME was an unindexed memory of cases. PARADYME provided different procedures for case retrieval than those of CaPER/PARKA. PARKA's query algorithms are more complete and significantly faster than those used by PARADYME <ref> [11] </ref>. 6 Future work The Plan Retriever is currently being tested on the transport logistics domain, which requires more complex case retrieval probes and similarity met-rics. To support this, the PARKA Structure Matcher is being extended to allow inexact matching.
Reference: [12] <author> L. Spector, J.A. Hendler, </author> <title> and M.P. Evett, "Knowledge Representation in PARKA", </title> <type> Technical Report 2410, </type> <institution> Department of Computer Science, University of Maryland at College Park, </institution> <year> 1990. </year>
Reference-contexts: Plan Build-Car-1, the top-level ("root") plan used in Case-Build-Car-1, consists of subplans Build-Body-1, Install-Engine-1, Install-Sunroof-1, etc. E-action P-Install-Sunroof-1 is a primitive action of subplan Install-Sunroof-1 (and its parent plan Build-Car-1). 2.1 CaPER's Memory Implementation CaPER's memory is implemented using the massively-parallel, frame-based PARKA knowledge representation system.[11] <ref> [12] </ref> (See A for details). A node in the semantic network is implemented as a frame in PARKA. An arc for relation r connecting node 1 to node 2 is implemented as a slot r in the frame for node 1 filled with the frame for node 2 .
Reference: [13] <author> L. Spector, B. Andersen, J. Hendler, B. Kettler, E. Schwartzman, C. Woods, and M. Evett, </author> <title> "Knowledge Representation in PARKA Part 2: Experiments, Analysis, and Enhancements", </title> <type> Technical Report 2837, </type> <institution> Department of Computer Science, University of Maryland at College Park, </institution> <year> 1992. </year>
Reference-contexts: An arc for relation r connecting node 1 to node 2 is implemented as a slot r in the frame for node 1 filled with the frame for node 2 . CaPER makes use of PARKA's fast inheritance mechanisms for representational efficiencies and retrieval. The PARKA Structure Matcher <ref> [13] </ref> used by CaPER to retrieve episodes from memory, takes advantage of this fast query processing speed. A knowledge base is viewed as a graph with vertices representing frames and edges representing slots, which relate two frames.
Reference: [14] <author> M. </author> <title> Redmond, "Distributed Cases for Case-Based Reasoning: Facilitating Uses of Multiple Cases," </title> <booktitle> Proceedings of the Eighth National Conference on Artificial Intelligence. American Association for Artificial Intelligence, </booktitle> <year> 1990, </year> <pages> pp. 304-309. </pages>
Reference-contexts: CaPER can quickly retrieve several plans (or sub-plans) to achieve different goals of the target problem and merge them with the result being a better-fitting, composite plan that solves all (or most) of the target goals with less adaptation. 6 Some of these systems can retrieve pieces of cases (e.g. <ref> [14] </ref>). 7 3.1 The Plan Retrieval Process This section describes the Plan Retrieval algorithm. An example of plan retrieval is given in the next section. The Plan Retriever is initially given a set of features (F T ) to use to find an old plan that achieves the target goals.
Reference: [15] <author> M.M. Veloso, </author> <title> Learning by Analogical Reasoning in General Problem Solving, </title> <type> Ph.D. </type> <institution> disseration, CMU-CS-92-174, Dept. of Computer Science, Carnegie Mellon University, </institution> <year> 1992. </year>
Reference-contexts: an object between locations in the same city Q5: find all plans for getting an object between locations in different cities Q6: find all top-level plans where a truck and an object are in the same location in the initial situation 10 This domain was based on that used in <ref> [15] </ref>. 12 For example, one query (Q2) was to find all plans using a particular airport. This query might be useful in avoiding plans that used an airport that is closed in the current situation.
Reference: [16] <author> C. Stanfill and D. Waltz., </author> <title> "Toward Memory-Based Reasoning," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 29, No. 12, </volume> <month> December </month> <year> 1986, </year> <pages> pp. 1213-1228. </pages>
Reference-contexts: MBRTalk <ref> [16] </ref> is a MBR system for speech pronunciation that also uses massive parallelism to access a large, unindexed memory of cases residing on the CM. MBRTalk retrieves cases that are the shortest distance 14 Queries (shown on a logarithmic scale) from a probe.
Reference: [17] <author> J.L. Kolodner and R. Thau, </author> <title> "Design and Implementation of a Case Memory", </title> <type> Technical Report RL88-1, </type> <institution> Thinking Machines Corporation, Cambridge, Massachusetts, </institution> <year> 1988. </year>
Reference-contexts: CaPER, in contrast, computes similarity scores for candidate cases in serial (due to a case's being distributed across CM processors). MBRTalk uses a flat representation of cases. CaPER uses a highly structured, semantic network representation of cases and a stronger domain model than MBRTalk. PARADYME <ref> [17] </ref>, like PARKA, was a frame system that used the massive parallelism of the CM. One application of PARADYME was an unindexed memory of cases. PARADYME provided different procedures for case retrieval than those of CaPER/PARKA.
Reference: [18] <author> B. Kettler and L.D. Darden, </author> <title> "Protein Sequencing Experiment Planning Using Analogy," </title> <booktitle> Proceedings of the First International Conference on Intelligent Systems for Molecular Biology. </booktitle> <address> Menlo Park, California: </address> <publisher> AAAI Press, </publisher> <year> 1993, </year> <month> forthcoming. </month>
Reference-contexts: These would contain information about how old plans were adapted to achieve target goals and could be retrieved and reused when similar adaptations are required in the future. Finally, the use of CaPER's fast retrieval mechanisms are being explored in a system which plans scientific experiments using derivational analogy <ref> [18] </ref>. 7 Conclusion CBP systems can take advantage of plan reuse where possible. The success of this approach depends on the ability to retrieve old cases that are similar to the target problem and to adapt these cases appropriately.
Reference: [19] <author> S. Kambhampati and J.A. Hendler, </author> <title> "A validation-structure-based theory of plan modification and reuse," </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 55, </volume> <year> 1992, </year> <pages> pp. 193-258. </pages>
Reference-contexts: Several adaptation techniques are being investigated for use by CaPER's Plan Adapter component. These include saving, as part of a case, plan validation structure information similar to that which is saved in the PRIAR system <ref> [19] </ref>. This information, which is produced by Nonlin when generating plans for seeding the initial casebase, could be used by a generative planner to adapt the plan. Another technique being investigated is the storage of adaptation episodes in memory.
Reference: [20] <author> D.B. Lenat and R.V. Guha, </author> <title> Building Large Knowledge-Based Systems. </title> <address> Reading, Mas-sachusetts: </address> <publisher> Addison Wesley, </publisher> <year> 1990. </year> <month> 18 </month>
References-found: 20

