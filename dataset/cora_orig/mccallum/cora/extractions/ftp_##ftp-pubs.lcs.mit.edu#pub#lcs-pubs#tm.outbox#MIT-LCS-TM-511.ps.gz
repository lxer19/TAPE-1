URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tm.outbox/MIT-LCS-TM-511.ps.gz
Refering-URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/listings/catatm.html
Root-URL: 
Title: The Generalized Railroad Crossing: A Case Study in Formal Verification of Real-Time Systems  
Author: Constance Heitmeyer Nancy Lynch 
Abstract: A new solution to the Generalized Railroad Crossing problem, based on timed automata, invariants and simulation mappings, is presented and evaluated. The solution shows formally the correspondence between four system descriptions: an axiomatic specification, an operational specification, a discrete system implementation, and a system implementation that works with a continuous gate model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Cleaveland, J. Parrow, and B. Steffen. </author> <title> The concurrency workbench: A semantics-based tool for the verification of concurrent systems. </title> <journal> ACM Trans. Prog. Lang. and Sys., </journal> <volume> 15(1) </volume> <pages> 36-72, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: all occupancy intervals.) Utility Property: t 62 [ i [t i ~ 1 ; i+~ 2 ] ) g (t) = 90 (The gate is up when no train is in the crossing.) To solve the GRC problem, real-time researchers have applied a variety of formal methods, including process algebraic <ref> [9, 3, 1] </ref>, event-based [10], and logic-based approaches [19, 11]. They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139. <p> We only specify trivial bounds (that is, <ref> [0; 1] </ref>) for the enterR (r) and exit (r) actions. For each enterI (r) action, we use bounds [* 1 ; * 2 ].
Reference: [2] <author> Oxford Formal Systems (Europe) Ltd. </author> <title> Failure Divergence Refinement, user manual and tutorial, </title> <year> 1992. </year>
Reference-contexts: Supported by NSF grant 9225124-CCR, ONR contract N00014-91-J-1046, AFOSR contract F49620-94-1-0199, and ARPA contract N00014-92-J-4033. have also used various mechanical proof systems, including PVS [18], EVES [11], and FDR <ref> [2] </ref>, to formally analyze and verify their solutions. Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model [16, 15], using invariant and simulation mapping techniques [12, 15, 14].
Reference: [3] <author> R. Gerber and I. Lee. </author> <title> A proof system for communicating shared resources. </title> <booktitle> In Proc. 11th IEEE Real-Time Systems Symp., </booktitle> <pages> pages 288-299, </pages> <year> 1990. </year>
Reference-contexts: all occupancy intervals.) Utility Property: t 62 [ i [t i ~ 1 ; i+~ 2 ] ) g (t) = 90 (The gate is up when no train is in the crossing.) To solve the GRC problem, real-time researchers have applied a variety of formal methods, including process algebraic <ref> [9, 3, 1] </ref>, event-based [10], and logic-based approaches [19, 11]. They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139.
Reference: [4] <author> J. V. Guttag and J. J. Horning. </author> <title> Larch: Languages and Tools for Formal Specification. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Some new complications are expected to arise when the continuous quantities of interest include velocity and acceleration as well as time and position. 2. Developing the appropriate computer assistance for carrying out and checking the proofs. We plan to try to use the proof systems PVS [18] and Larch <ref> [4] </ref> to check the proofs and to assess the utility of mechanical proof systems for such proofs. 3. Trying to systematize the reasoning about the correspondence between the axiomatic and operational specifications. Acknowledgments Discussions with R.
Reference: [5] <author> C. Heitmeyer and R. Jeffords. </author> <title> Formal specification and verification of real-time systems: A comparison study. </title> <type> Technical report, </type> <address> NRL, Wash., DC, </address> <year> 1994. </year> <note> In preparation. </note>
Reference-contexts: Supported by NSF grant 9225124-CCR, ONR contract N00014-91-J-1046, AFOSR contract F49620-94-1-0199, and ARPA contract N00014-92-J-4033. have also used various mechanical proof systems, including PVS [18], EVES [11], and FDR [2], to formally analyze and verify their solutions. Reference <ref> [5] </ref> describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model [16, 15], using invariant and simulation mapping techniques [12, 15, 14].
Reference: [6] <author> C. Heitmeyer and J. McLean. </author> <title> Abstract requirements specifications: A new approach and its application. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> SE-9(5), </volume> <month> September </month> <year> 1983. </year>
Reference-contexts: In our collaboration, much of the dialogue focused on the system requirements. Once the requirements specification was acceptable, defining and verifying an implementation, while labor-intensive and time-consuming, was relatively straightforward. A system requirements specification describes all acceptable system implementations <ref> [6] </ref>. It has two parts: (1) A set of formal models describing the computer system at an abstract level, the environment (here, the trains and the gate), and the interface between them. (2) Formal statements of the properties that the system must satisfy.
Reference: [7] <author> C. L. Heitmeyer, R. D. Jeffords, and B. G. Labaw. </author> <title> A benchmark for comparing different approaches for specifying and verifying real-time systems. </title> <booktitle> In Proc., 10th Intern. Workshop on Real-Time Operating Systems and Software, </booktitle> <month> May, </month> <year> 1993. </year>
Reference-contexts: To compare these methods and to better understand their use in developing practical real-time systems, one of us (Heitmeyer) has defined a benchmark problem, called the Generalized Railroad (GRC) Crossing <ref> [7] </ref>. The problem is as follows. The system to be developed operates a gate at a railroad crossing. The railroad crossing I lies in a region of interest R, i.e., I R. A set of trains travel through R on multiple tracks in both directions. <p> This is as needed. 8 Discussion We have applied a formal method based on timed automata, invariants, and simulation mappings to model and verify the Generalized Railroad Crossing example <ref> [7] </ref>. Here, we extrapolate from this experience and attempt to evaluate the method for use in modeling and verifying other real-time systems. We also describe future work. 26 * Generality. Can the method be used to describe all acceptable implementations? It seems so.
Reference: [8] <author> Constance Heitmeyer and Nancy Lynch. </author> <title> The Generalized Railroad Crossing: A case study in formal verification of real-time systems. </title> <booktitle> In Proceedings, Real-Time Systems Symposium, </booktitle> <address> San Juan, Puerto Rico, </address> <month> December </month> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Section 8 evaluates our solution and method. Several appendices provide background on the formal methods we use, plus two proofs about the high-level specification. A concise version of this report, which omits the details of the proofs, appears in <ref> [8] </ref>. 2 Our Approach In this section, we describe our approach to solving the GRC problem. Section 2.1 contains some general principles for applying formal methods to real-time systems. Section 2.2 contains a description of the timed automaton model and of invariant and simulation mapping proof methods.
Reference: [9] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1985. </year>
Reference-contexts: all occupancy intervals.) Utility Property: t 62 [ i [t i ~ 1 ; i+~ 2 ] ) g (t) = 90 (The gate is up when no train is in the crossing.) To solve the GRC problem, real-time researchers have applied a variety of formal methods, including process algebraic <ref> [9, 3, 1] </ref>, event-based [10], and logic-based approaches [19, 11]. They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139.
Reference: [10] <author> F. Jahanian and A. K. Mok. </author> <title> Safety analysis of timing properties in real-time systems. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> SE-12(9), </volume> <month> September </month> <year> 1986. </year>
Reference-contexts: Property: t 62 [ i [t i ~ 1 ; i+~ 2 ] ) g (t) = 90 (The gate is up when no train is in the crossing.) To solve the GRC problem, real-time researchers have applied a variety of formal methods, including process algebraic [9, 3, 1], event-based <ref> [10] </ref>, and logic-based approaches [19, 11]. They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139.
Reference: [11] <author> S. Kromodimoeljo, W. Pase, M. Saaltink, D. Craigen, and I. Meisels. </author> <title> A tutorial on EVES. </title> <type> Technical report, </type> <institution> Odyssey Research Associates, </institution> <address> Ottawa, Canada, </address> <year> 1993. </year>
Reference-contexts: i [t i ~ 1 ; i+~ 2 ] ) g (t) = 90 (The gate is up when no train is in the crossing.) To solve the GRC problem, real-time researchers have applied a variety of formal methods, including process algebraic [9, 3, 1], event-based [10], and logic-based approaches <ref> [19, 11] </ref>. They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139. <p> They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139. Supported by NSF grant 9225124-CCR, ONR contract N00014-91-J-1046, AFOSR contract F49620-94-1-0199, and ARPA contract N00014-92-J-4033. have also used various mechanical proof systems, including PVS [18], EVES <ref> [11] </ref>, and FDR [2], to formally analyze and verify their solutions. Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model [16, 15], using invariant and simulation mapping techniques [12, 15, 14].
Reference: [12] <author> N. Lynch and H. Attiya. </author> <title> Using mappings to prove timing properties. Distrib. </title> <journal> Comput., </journal> <volume> 6 </volume> <pages> 121-139, </pages> <year> 1992. </year>
Reference-contexts: Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model [16, 15], using invariant and simulation mapping techniques <ref> [12, 15, 14] </ref>. To develop the solution, a "formal methods expert" (Lynch) and an "applications expert" (Heitmeyer) worked closely together to refine the GRC problem statement and to design and verify an implementation.
Reference: [13] <author> N. Lynch and M. Tuttle. </author> <title> An introduction to Input/Output automata. </title> <journal> CWI-Quarterly, </journal> <volume> 2(3) </volume> <pages> 219-246, </pages> <month> September </month> <year> 1989. </year> <institution> Centrum voor Wiskunde en Informatica, </institution> <address> Amsterdam, The Netherlands. </address>
Reference: [14] <author> Nancy Lynch. </author> <title> Simulation techniques for proving properties of real-time systems. </title> <booktitle> In REX Workshop '93, Lecture Notes in Computer Science, Mook, </booktitle> <address> the Netherlands, </address> <year> 1994. </year> <note> Springer-Verlag. To appear. </note>
Reference-contexts: Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model [16, 15], using invariant and simulation mapping techniques <ref> [12, 15, 14] </ref>. To develop the solution, a "formal methods expert" (Lynch) and an "applications expert" (Heitmeyer) worked closely together to refine the GRC problem statement and to design and verify an implementation.
Reference: [15] <author> Nancy Lynch and Frits Vaandrager. </author> <title> Forward and backward simulations Part II: </title> <journal> Timing-based systems. </journal> <note> Submitted for publication. 29 </note>
Reference-contexts: Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model <ref> [16, 15] </ref>, using invariant and simulation mapping techniques [12, 15, 14]. To develop the solution, a "formal methods expert" (Lynch) and an "applications expert" (Heitmeyer) worked closely together to refine the GRC problem statement and to design and verify an implementation. <p> Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model [16, 15], using invariant and simulation mapping techniques <ref> [12, 15, 14] </ref>. To develop the solution, a "formal methods expert" (Lynch) and an "applications expert" (Heitmeyer) worked closely together to refine the GRC problem statement and to design and verify an implementation. <p> required to learn new notations or proof techniques. 4 2.2 The Formal Framework The formal method we used to specify the GRC problem and to develop and verify a solution represents both the computer system and the system environment as timed automata, according to the definitions of Lynch and Vaandrager <ref> [16, 15] </ref>. A timed automaton is a very general automaton, i.e., a labeled transition system. It is not finite-state: for example, the state can contain real-valued information, such as the current time or the position of a train or crossing gate.
Reference: [16] <author> Nancy Lynch and Frits Vaandrager. </author> <title> Forward and backward simulations for timing-based sys-tems. </title> <booktitle> In Proceedings of REX Workshop "Real-Time: Theory in Practice", volume 600 of Lecture Notes in Computer Science, </booktitle> <pages> pages 397-446, </pages> <address> Mook, The Netherlands, June 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Reference [5] describes three early efforts to solve the GRC problem. This paper describes a new solution of the GRC based on the Lynch-Vaandrager timed automaton model <ref> [16, 15] </ref>, using invariant and simulation mapping techniques [12, 15, 14]. To develop the solution, a "formal methods expert" (Lynch) and an "applications expert" (Heitmeyer) worked closely together to refine the GRC problem statement and to design and verify an implementation. <p> required to learn new notations or proof techniques. 4 2.2 The Formal Framework The formal method we used to specify the GRC problem and to develop and verify a solution represents both the computer system and the system environment as timed automata, according to the definitions of Lynch and Vaandrager <ref> [16, 15] </ref>. A timed automaton is a very general automaton, i.e., a labeled transition system. It is not finite-state: for example, the state can contain real-valued information, such as the current time or the position of a train or crossing gate.
Reference: [17] <author> Michael Merritt, Francesmary Modugno, and Mark R. Tuttle. </author> <title> Time constrained automata. </title> <editor> In J. C. M. Baeten and J. F. Goote, editors, CONCUR'91: </editor> <booktitle> 2nd International Conference on Con-currency Theory, volume 527 of Lecture Notes in Computer Science, </booktitle> <pages> pages 408-423, </pages> <address> Amsterdam, The Netherlands, </address> <month> August </month> <year> 1991. </year> <note> Springer-Verlag. </note>
Reference-contexts: An important special case of the model, describable in a particularly simple way, is the MMT automaton model <ref> [17] </ref>, developed by Merritt, Modugno and Tuttle. An MMT automaton consists of a collection of "tasks" (i.e., "processes") sharing common data, where each task has an upper bound and a lower bound on the time between its events.
Reference: [18] <author> S. Owre, N. Shankar, and J. Rushby. </author> <title> User guide for the PVS specification and verification system (Draft). </title> <type> Technical report, </type> <institution> Computer Science Lab, SRI Intl., </institution> <address> Menlo Park, CA, </address> <year> 1993. </year>
Reference-contexts: They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139. Supported by NSF grant 9225124-CCR, ONR contract N00014-91-J-1046, AFOSR contract F49620-94-1-0199, and ARPA contract N00014-92-J-4033. have also used various mechanical proof systems, including PVS <ref> [18] </ref>, EVES [11], and FDR [2], to formally analyze and verify their solutions. Reference [5] describes three early efforts to solve the GRC problem. <p> Some new complications are expected to arise when the continuous quantities of interest include velocity and acceleration as well as time and position. 2. Developing the appropriate computer assistance for carrying out and checking the proofs. We plan to try to use the proof systems PVS <ref> [18] </ref> and Larch [4] to check the proofs and to assess the utility of mechanical proof systems for such proofs. 3. Trying to systematize the reasoning about the correspondence between the axiomatic and operational specifications. Acknowledgments Discussions with R.
Reference: [19] <author> N. Shankar. </author> <title> Verification of real-time systems using PVS. </title> <booktitle> In Proc. Computer Aided Verification (CAV '93), </booktitle> <pages> pages 280-291. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <month> 30 </month>
Reference-contexts: i [t i ~ 1 ; i+~ 2 ] ) g (t) = 90 (The gate is up when no train is in the crossing.) To solve the GRC problem, real-time researchers have applied a variety of formal methods, including process algebraic [9, 3, 1], event-based [10], and logic-based approaches <ref> [19, 11] </ref>. They fl Code 5546, Naval Research Laboratory, Washington, D.C. 20375. y Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139.
References-found: 19

