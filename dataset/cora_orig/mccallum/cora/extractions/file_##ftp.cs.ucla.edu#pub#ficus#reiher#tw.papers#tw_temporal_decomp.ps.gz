URL: file://ftp.cs.ucla.edu/pub/ficus/reiher/tw.papers/tw_temporal_decomp.ps.gz
Refering-URL: http://ficus-www.cs.ucla.edu/project-members/reiher/available_papers.html
Root-URL: http://www.cs.ucla.edu
Title: TEMPORAL DECOMPOSITION OF SIMULATIONS UNDER THE TIME WARP OPERATING SYSTEM  
Author: Peter Reiher Steven Bellenot David Jefferson 
Affiliation: Jet Propulsion Laboratory  Florida State University  UCLA  
Abstract: The Time Warp Operating System (TWOS) is a special-purpose operating system designed to run event driven simulations on parallel processors using optimistic synchronization based on virtual time. TWOS currently achieves speedup by decomposing a simulation spatially, dividing it into multiple objects that can be run in parallel. This paper describes how the simulation can be further decomposed temporally. Temporal decomposition offers opportunities for better static load balancing. It also allows further parallelism by permitting activities of the same object at different points in simulation time to be run in parallel. This paper contains the first TWOS supercritical speedup, achieved by exploiting this kind of parallelism. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Beckman, B.; P. Hontalas; J. Ruffles; F. Wieland; and D. Jefferson. </author> <year> 1989. </year> <title> Instantaneous Speedup. </title> <booktitle> In Proceedings of the 1989 Summer Computer Simulation Conference . SCS, </booktitle> <address> San Diego, CA. </address>
Reference-contexts: The correct place to perform the temporal splits was found using TWOS instantaneous speedup tool <ref> (Beckman 89) </ref>. Separate performance information for each object up to time 8500 and after time 8500 was gathered for the two stages of the simulation.
Reference: <author> Berry, O.. </author> <year> 1986. </year> <title> Performance Evaluation of the Time Warp Distributed Simulation Mechanism. </title> <type> Ph.D. dissertation, </type> <institution> Department of Computer Science, University of Southern California, </institution> <address> Los Angeles, CA. </address>
Reference-contexts: On forty nodes using temporal decomposition, TWOS gets a speedup of 12.8, substantially higher than the critical path speedup. TWOS has long been known to have the theoretical ability to beat the critical path length of a simulation, due to lazy cancellation <ref> (Berry 86) </ref>. (The limited jump forward optimization, the state analog to lazy cancellation for messages, can also cause this phenomenon.) However, never before has this phenomenon been observed.
Reference: <author> Burdorf, C. and J. Marti. </author> <year> 1990. </year> <title> Non-Preemptive Time Warp Scheduling Algorithms. </title> <journal> Operating Systems Review 24, </journal> <volume> no. 2 (Apr.): </volume> <pages> 7-18. </pages>
Reference-contexts: Unless the system permits optimistic execution, temporal decomposition will only assist in load balancing. Besides TWOS, some other systems that could make full use of temporal decomposition are Jades Time Warp system (Lomow 88), Mitres Time Warp variant (Sokol 90), and the Time Warp implementation at Rand <ref> (Burdorf 90) </ref>, as well as systems based on Chandys paradigm of space-time (Chandy 90). 3. TWOS TEMPORAL SPLITTING MECHANISM temporal split. Object A exists in a single phase in figure 2a. This single phase has responsibility for the full range of virtual times.
Reference: <author> Chandy K. M. and R. Sherman. </author> <year> 1989. </year> <title> Space-Time and Simulation. </title> <booktitle> In Proceedings of the SCS Multiconference on Distributed Simulation (Tampa, </booktitle> <address> FL, March 28-31). </address> <publisher> SCS, </publisher> <address> San Diego, CA: </address> <pages> 53-57. </pages>
Reference: <author> Jefferson, D.; et al. </author> <year> 1987. </year> <title> Distributed Simulation and the Time Warp Operating System. ACM Operating System Review , November 1987. </title>
Reference-contexts: TWOS takes care of message delivery, scheduling, resource management, and synchronization. TWOS synchronization method relies on rollback and message cancellation to guarantee results consistent with a normal sequential run of the simulation. A more complete description of TWOS can be found in <ref> (Jefferson 1987) </ref>. TWOS currently runs on the BBN Butterfly GP1000 parallel processor. A [,1700) A [1700,+) 1200 1500 1500 1800 The fundamental unit of scheduling and migration in TWOS is a phase .
Reference: <author> Lomow, G.; J. Cleary; B. Unger; and D. West. </author> <year> 1988. </year>
Reference-contexts: Unless the system permits optimistic execution, temporal decomposition will only assist in load balancing. Besides TWOS, some other systems that could make full use of temporal decomposition are Jades Time Warp system <ref> (Lomow 88) </ref>, Mitres Time Warp variant (Sokol 90), and the Time Warp implementation at Rand (Burdorf 90), as well as systems based on Chandys paradigm of space-time (Chandy 90). 3. TWOS TEMPORAL SPLITTING MECHANISM temporal split. Object A exists in a single phase in figure 2a.
References-found: 6

