URL: ftp://ftp.cs.rochester.edu/pub/u/rosca/gp/jrphdd.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/rosca/research.html
Root-URL: 
Title: Hierarchical Learning with Procedural Abstraction Mechanisms  
Author: by Justinian Rosca 
Degree: Submitted in Partial Fulfillment of the Requirements for the Degree Doctor of Philosophy Supervised by Professor Dana Ballard Department of Computer Science The College Arts and Sciences  
Date: 1997  
Address: Rochester, New York  
Affiliation: University of Rochester  
Abstract-found: 0
Intro-found: 1
Reference: [Ackley, 1987] <author> David H. Ackley, </author> <title> A Connectionist Machine for Genetic Hillclimbing, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1987. </year>
Reference: [Altenberg, 1994] <author> Lee Altenberg, </author> <title> "The Evolution of Evolvability in Genetic Programming," </title> <editor> In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming, </booktitle> <pages> pages 47-74. </pages> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Further, experimental developments should examine complexity adaptation techniques. A challenging theoretical task is to search for new properties, analogous to the rooted tree-schema concept of this dissertation, that can shed light on aspects of the GP dynamics, other than complexity. Such properties were called indicators in <ref> [Altenberg, 1994] </ref>. 8.2.2 Random sampling of trees The initial states of an iterative stochastic algorithm are very important. When the application domain provides sufficient knowledge, initial states are seeded by the human designer. Most often though, the genetic material in the initial GP population is created 211 randomly.
Reference: [Altenberg, 1995] <author> Lee Altenberg, </author> <title> "The Schema Theorem and Price's Theorem," </title> <editor> In L. Darrell Whitley and Michael D. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms 3, </booktitle> <pages> pages 23-49, </pages> <address> San Mateo, CA, USA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Andre, 1995] <author> David Andre, </author> <title> "The Evolution of Agents that Build Mental Models and Create Simple Plans Using Genetic Programming," </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 248-255, </pages> <address> San Francisco, CA, USA, July 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Andre and Teller, 1996] <author> David Andre and Astro Teller, </author> <title> "A Study in Program Response and the Negative Effects of Introns in Genetic Programming," </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 12-20, </pages> <address> Cambridge, MA, 1996. </address> <publisher> The MIT Press. </publisher>
Reference: [Angeline and Kinnear, Jr., 1996] <editor> P. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1996. </year>
Reference: [Angeline, 1994a] <author> Peter J. Angeline, </author> <title> Evolutionary Algorithms and Emergent Intelligence, </title> <type> PhD thesis, </type> <institution> Computer Science Department, Ohio State University, </institution> <year> 1994. </year> <month> 216 </month>
Reference: [Angeline, 1994b] <author> Peter J. Angeline, </author> <title> "Genetic Programming and Emergent Intelligence," </title> <editor> In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming, chapter 4, </booktitle> <pages> pages 75-98. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1994. </year>
Reference: [Angeline and Pollack, 1993] <author> Peter J. Angeline and Jordan B. Pollack, </author> <title> "Evolutionary Module Acquisition," </title> <booktitle> In Proceedings of the Second Annual Conference on Evolutionary Programming, </booktitle> <year> 1993. </year>
Reference: [Angeline and Pollack, 1994] <author> Peter J. Angeline and Jordan B. Pollack, </author> <title> "Coevolving High Level Representations," </title> <editor> In Christofer G. Langton, editor, </editor> <booktitle> Artificial Life III, SFI Studies in the Sciences of Complexity, </booktitle> <volume> volume XVII, </volume> <pages> pages 55-71, </pages> <address> Redwood City, CA, 1994. </address> <publisher> Addison-Wesley. </publisher>
Reference: [Back et al., 1991] <editor> Thomas Back, Frank Hoffmeister, and Hans-Paul Schwefel, </editor> <title> "A Survey of Evolutionary Strategies," </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, Inc, </publisher> <year> 1991. </year>
Reference: [Back and Schwefel, 1993] <editor> Thomas Back and Hans-Paul Schwefel, </editor> <title> "An Overview of Evolutionary Algorithms for Parameter Optimization," </title> <journal> Evolutionary Computation, </journal> <volume> 1(1) </volume> <pages> 1-23, </pages> <year> 1993. </year>
Reference: [Ballard, 1997] <author> Dana Ballard, </author> <title> An Introduction to Natural Computation, </title> <publisher> MIT Press, </publisher> <year> 1997. </year>
Reference: [Baluja and Caruana, 1995] <author> Shumeet Baluja and Rich Caruana, </author> <title> "Removing the Genetics from the Standard Genetic Algorithm," </title> <booktitle> In Proceedings of the 12th International Conference on Machine Learning, </booktitle> <pages> pages 38-46. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1995. </year>
Reference: [Barr and Feigenbaum, 1981] <editor> Avron Barr and Edward A. Feigenbaum, editors, </editor> <booktitle> The Handbook of Artificial Intelligence, volume I, </booktitle> <publisher> HeurisTech Press, Stanford, </publisher> <address> California, </address> <year> 1981. </year>
Reference: [Beckenbach and Bellman, 1965] <author> Edwin F. Beckenbach and Richard Bellman, </author> <title> Inequalities, </title> <publisher> Springer Verlag, </publisher> <year> 1965. </year> <month> 217 </month>
Reference: [Blickle, 1996] <author> Tobias Blickle, </author> <title> Theory of Evolutionary Algorithms and Application to System Synthesis, </title> <type> PhD thesis, </type> <institution> University of Saarbrucken, Germany, </institution> <year> 1996. </year>
Reference: [Booker, 1995] <author> L. B. Booker, </author> <title> "Improving the performance of genetic algorithms in classifier systems," </title> <editor> In J. J. Grefenstette, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the First International Conference, </booktitle> <address> Pittsburgh, PA, 1995. </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: Most applications are for function optimization. Parallel GAs explicitly divide the population into smaller subpopulations using geometrical patterns aiming both to parallelize computation and to maintain diversity. The techniques used to create subpopulations are explicit. For instance, mating is restricted to functionally similar individuals <ref> [Booker, 1995] </ref> or to local individuals [Hillis, 1990]. In EDC the division into subpopulations is dynamic. Many similarities exists between our approach and classifier systems. In order to facilitate comparisons, we have intentionally named the two symbiotic components of 200 the GP representation as condition and output.
Reference: [Boyan and Moore, 1997] <author> Justin A. Boyan and Andrew W. Moore, </author> <title> "Using Prediction to Improve Combinatorial Optimization Search," </title> <booktitle> In AIStats, </booktitle> <month> January </month> <year> 1997. </year>
Reference-contexts: ARL employs the differential fitness gradient-like heuristic to select symbolic substructures. The STAGE algorithm <ref> [Boyan and Moore, 1997] </ref>, shortly discussed in Section 5.6, is similar in philosophy with ARL.
Reference: [Breiman et al., 1984] <author> L. Breiman, J.H. Friedman, R.A. Olsen, and C.J. Stone, </author> <title> Classification and Regression Trees, </title> <booktitle> Wdasworth International Group, </booktitle> <address> Belmont, CA, </address> <year> 1984. </year>
Reference-contexts: In our system no special seeding is necessary, and more importantly, we do not provide any help on how the problem can be decomposed. Classical machine learning approaches to decomposition using the divide-and-conquer paradigm are techniques such as CART <ref> [Breiman et al., 1984] </ref> and ID3 [Quinlan, 1986] (or its successor C4.5). Our approach appears suitable for online learning and adaptation to changing environments.
Reference: [Brooks, 1986] <author> Rodney A. Brooks, </author> <title> "A Robust Layered Control System for a Mobile Robot," </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 2(1) </volume> <pages> 14-23, </pages> <month> March </month> <year> 1986. </year>
Reference: [Brooks, 1991] <author> Rodney A. Brooks, </author> <title> "Intelligence Without Reason, </title> <booktitle> Computers and Thought lecture," In Proceedings of IJCAI-91, </booktitle> <address> Sydney, Australia, </address> <year> 1991. </year>
Reference: [Bruce H. Weber and Smith, 1988] <author> David J. Depew Bruce H. Weber and James D. Smith, </author> <title> editors, Entropy, information, and evolution : new perspectives on physical and biological evolution, </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference: [Chaitin, 1987] <author> Gregory J Chaitin, </author> <title> Algorithmic information theory, </title> <publisher> Cambridge University Press, </publisher> <year> 1987. </year>
Reference: [Chatfield and Collins, 1989] <author> C. Chatfield and A.J. Collins, </author> <title> Introduction to Dynamic Systems Theory, Models and Applications, </title> <publisher> Chapman and Hall Ltd., </publisher> <address> London, </address> <year> 1989. </year>
Reference: [Cormen et al., 1990] <author> Thomas H. Cormen, Charles E. Leiserson, and Ronald L. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [Cramer, 1985] <author> Nichael Lynn Cramer, </author> <title> "A Representation for the Adaptive Generation of Simple Sequential Programs," </title> <booktitle> In Proceedings of the First International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, Inc, </publisher> <year> 1985. </year> <month> 218 </month>
Reference: [DeJong, 1975] <author> Kenneth DeJong, </author> <title> An Analysis of the Behavior of a Class of Genetic Adaptive Systems, </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <year> 1975. </year>
Reference: [Eshelman and Schaffer, 1993] <editor> Larry J. Eshelman and J. David Schaffer, "Crossover's Niche," In Stephanie Forrest, editor, </editor> <booktitle> Proceedings of the International Conference on Genetic Algorithms, </booktitle> <pages> pages 9-14. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1993. </year>
Reference: [Fogel, 1995] <author> David B. Fogel, </author> <title> Evolutionary computation : toward a new philosophy of machine intelligence, </title> <publisher> IEEE Press, </publisher> <year> 1995. </year>
Reference: [Fogel, 1993] <editor> David Bruce Fogel, </editor> <booktitle> Evolving Artificial Intelligence, University Microfilms International, </booktitle> <year> 1993. </year>
Reference: [Fogel et al., 1966] <author> Lawrence J. Fogel, Alvin J. Owens, and Michael J. Walsh, </author> <title> Artificial intelligence through simulated evolution, </title> <publisher> Wiley, </publisher> <year> 1966. </year>
Reference: [Garey and Johnson, 1979] <author> Michael R. Garey and David S. Johnson, </author> <title> Computers and Intractability A Guide to the Theory of NP-completeness, W.H. </title> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference: [Gelb, 1974] <author> Arthur Gelb, </author> <title> Applied Optimal Estimation, </title> <publisher> MIT Press, </publisher> <year> 1974. </year>
Reference: [Geman et al., 1992] <author> S. Geman, E.Bienenstock, and R.Doursat, </author> <title> "Neural Networks and the Bias/Variance Dilemma," </title> <journal> Neural Computation, </journal> (4):1-58, 1992. 
Reference: [Goldberg, 1989] <author> David E. Goldberg, </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference: [Goldberg et al., 1991] <author> David E. Goldberg, Kalyanmoy Deb, and Bradley Korb, </author> <title> "Don't Worry, Be Messy," </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, Inc, </publisher> <year> 1991. </year>
Reference: [Goldberg et al., 1989] <author> David E. Goldberg, Bradley Korb, and Kalyanmoy Deb, </author> <title> "Messy Genetic Algorithms: Motivation, Analysis, and First Results," </title> <journal> Complex Systems, </journal> <volume> 3 </volume> <pages> 493-530, </pages> <year> 1989. </year> <month> 219 </month>
Reference: [Goldberg et al., 1990] <author> David E. Goldberg, Bradley Korb, and Kalyanmoy Deb, </author> <title> "Messy Genetic Algorithms Revisited: Studies in Mixed Size and Scale," </title> <journal> Complex Systems, </journal> <volume> 4 </volume> <pages> 415-444, </pages> <year> 1990. </year>
Reference: [Gordon and DesJardins, 1995] <author> Diana F. Gordon and Marie DesJardins, </author> <title> "Evaluation and Selection of Biases in Machine Learning," </title> <journal> Machine Learning, </journal> <volume> 20 </volume> <pages> 5-22, </pages> <year> 1995. </year>
Reference-contexts: The adaptive representation approach is clearly an example of a system that learns new biases. ARL can be further studied as an example of a system where procedural bias interacts with representational bias <ref> [Gordon and DesJardins, 1995] </ref>. This may shed additional light on how GP exploits structures and constructs solutions or how GP search can be improved. 8.2.9 Hierarchical simulated annealing The discovery component of the ARL algorithm could be coupled with a simulated annealing stochastic search procedure.
Reference: [Graham et al., 1994] <author> Ronald L. Graham, Donald E. Knuth, and Oren Patashnik, </author> <title> Concrete mathematics : a foundation for computer science, </title> <publisher> Addison-Wesley, </publisher> <address> 2nd edition, </address> <year> 1994. </year>
Reference: [Grefenstette and Baker, 1989] <author> J.J. Grefenstette and J.E. Baker, </author> <title> "How Genetic Algorithms work: a critical look at implicit parallelism," </title> <editor> In J.D. Schaffer, editor, </editor> <booktitle> Proceedings of the 3rd International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference: [Gruau, 1994] <author> Frederic Gruau, </author> <title> Neural Network Synthesis Using Cellular Encoding and the Genetic Algorithm, </title> <type> PhD thesis, </type> <institution> L'ecole Normale Superieure de Lyon, L'universite Claude Bernard, </institution> <year> 1994. </year>
Reference-contexts: Predicate invention corresponds to adding hidden variables to the representation. In the suite of test problems we used, we made no distinction between genotype and phenotype. A separation between the two as in <ref> [Gruau, 1994] </ref> could additionally help point out hidden structure in the application domain. One way to do just this is to make the phenotype represent some visualizable structure such as a graphical model. The genotype is a program that, as a result of interpretation, develops into a graph structure. <p> The requirements of what to do, when to do, and how to combine the information, are challenging to define. 8.2.12 More general interpretations of procedural expressions The model of computation used to interpret procedural representations can be generalized, as suggested in <ref> [Gruau, 1994] </ref> (see Section 5.1). While in the control domain used in Chapter 6 of this dissertation evolution implicitly accounts for the hidden interactions among the components of the representation, such interactions are hardly understandable.
Reference: [Gruau and Whitley, 1993] <author> Frederic Gruau and Darrel Whitley, </author> <title> "Adding Learning to the Cellular development of Neural Networks: Evolution and the Baldwin Effect," </title> <journal> Evolutionary Computation, </journal> <volume> 1(3) </volume> <pages> 213-233, </pages> <year> 1993. </year>
Reference: [Hennessy and Patterson, 1992] <author> John L. Hennessy and David A. Patterson, </author> <title> Computer Architecture: A Quantitative Approach, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference: [Hertz et al., 1991] <author> John Hertz, Anders Krogh, and Richard G. Palmer, </author> <title> Introduction to the theory of neural computation, </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year>
Reference: [Hillis, 1985] <author> W. Daniel Hillis, </author> <title> The Connention Machine, </title> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference-contexts: This effect is analogous the coevolution of parasites in <ref> [Hillis, 1985] </ref> but acts at a cluster level. Again there is no effect on the relative ranking within a cluster. A second diversity term drives the coevolving clusters into different directions of the decomposition search space by penalizing individuals that are very similar to the representatives of other clusters.
Reference: [Hillis, 1990] <author> W. Daniel Hillis, </author> <title> "Co-evolving Parasites Improve Simulated Evolution as an Optimization Procedure," </title> <editor> In Stephanie Forrest, editor, </editor> <booktitle> Proceedings of the 220 Ninth Annual International Conference of the Center for Nonlinear Studies on Self-organizing, Collective, and Cooperative Phenomena in Natural and Artificial Computing Networks, </booktitle> <pages> pages 228-234. </pages> <publisher> North Holland, </publisher> <year> 1990. </year>
Reference-contexts: Parallel GAs explicitly divide the population into smaller subpopulations using geometrical patterns aiming both to parallelize computation and to maintain diversity. The techniques used to create subpopulations are explicit. For instance, mating is restricted to functionally similar individuals [Booker, 1995] or to local individuals <ref> [Hillis, 1990] </ref>. In EDC the division into subpopulations is dynamic. Many similarities exists between our approach and classifier systems. In order to facilitate comparisons, we have intentionally named the two symbiotic components of 200 the GP representation as condition and output.
Reference: [Hinton and Nowlan, 1987] <author> Geoffrey E. Hinton and Steven J. Nowlan, </author> <title> "How Learning Can Guide Evolution," </title> <journal> Complex Systems, </journal> <pages> pages 495-502, </pages> <year> 1987. </year>
Reference: [Holland, 1992] <author> John H. Holland, </author> <title> Adaptation in Natural and Artificial Systems, An Introductory Analysis with Applications to Biology, </title> <booktitle> Control and Artificial Intelligence, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992, </year> <note> Second edition (First edition, </note> <year> 1975). </year>
Reference-contexts: These are the discovered subroutines. Discovered subroutines are stable because the search process builds on the useful ones bottom-up and generates a hierarchy of abstractions. When should the system discover subroutines? The choice of the search strategy to pursue exemplifies a well-known machine learning problem, the exploration-exploitation trade-off <ref> [Holland, 1992] </ref>. In the reinforcement learning literature, this tradeoff is made explicit by the control structure of the algorithms [Kaelbling, 1993]. If the search process chooses the action prescribed by its current knowledge, then the system exploits its current knowledge by acting in order to gain reward.
Reference: [Holland, 1975] <author> John H. Holland, </author> <title> Adaptation in Natural and Artificial Systems, An Introductory Analysis with Applications to Biology, </title> <booktitle> Control and Artificial Intelligence, </booktitle> <institution> The University of Michigan, </institution> <address> 1st edition, </address> <year> 1975. </year>
Reference: [Hubel and Wiesel, 1968] <author> D.H. Hubel and T.N. Wiesel, </author> <title> "Functional architecture of macaque monkey visual cortex," </title> <journal> Physiology, </journal> (195):215-242, 1968. 
Reference: [Iba and de Garis, 1996] <author> Hitoshi Iba and Hugo de Garis, </author> <title> "Extending Genetic Programming with Recombinative Guidance," </title> <editor> In P. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 4. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1996. </year>
Reference: [Iba et al., 1994] <author> Hitoshi Iba, Hugo de Garis, and Taisuke Sato, </author> <title> "Genetic Programming Using a Minimum Description Length Principle," </title> <editor> In Kim Kinnear Jr., editor, </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference: [Iba et al., 1993] <author> Hitoshi Iba, Takio Kurita, Hugo de Garis, and Taisuke Sato, </author> <title> "System Identification using Structured Genetic Algorithms," </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, Inc, </publisher> <year> 1993. </year>
Reference: [Ishikawa, 1995] <author> Masumi Ishikawa, </author> <title> "Learning of Modular Structured Networks," </title> <journal> Artificial Intelligence Journal, </journal> <volume> 75(51-62):51-62, </volume> <year> 1995. </year> <month> 221 </month>
Reference: [Jacobs et al., 1991] <author> Robert A. Jacobs, Michael I. Jordan, Steven J. Nowlan, and Ge-offrey E. Hinton, </author> <title> "Adaptive Mixture of Experts," </title> <journal> Neural Computation, </journal> <volume> 3 </volume> <pages> 79-87, </pages> <year> 1991. </year>
Reference-contexts: Classical machine learning approaches to decomposition using the divide-and-conquer paradigm are techniques such as CART [Breiman et al., 1984] and ID3 [Quinlan, 1986] (or its successor C4.5). Our approach appears suitable for online learning and adaptation to changing environments. The adaptive mixture of experts (ME) <ref> [Jacobs et al., 1991] </ref> is a modular neural network approach which is the closest in spirit to our problem decomposition approach.
Reference: [Johnson, 1988] <author> Lionel Johnson, </author> <title> The Thermodynamic Origin of Ecosystems: A Tale of Broken Symmetry, chapter 5, </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference: [Johnson et al., 1994] <author> Michael P. Johnson, Pattie Maes, and Trevor Darrel, </author> <title> "Evolving Visual Routines," </title> <journal> Artificial Life, </journal> <volume> 1(4) </volume> <pages> 373-389, </pages> <year> 1994. </year>
Reference: [Jones, 1995a] <author> Terry Jones, </author> <title> "Crossover, Macromutation and Population-Based Search," </title> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms (ICGA95), </booktitle> <pages> pages 73-80, </pages> <year> 1995. </year>
Reference: [Jones, 1995b] <author> Terry Jones, </author> <title> Evolutionary Algorithms, Fitness Landscapes and Search, </title> <type> PhD thesis, </type> <institution> University of New Mexico, </institution> <year> 1995. </year>
Reference: [Jordan and Jacobs, 1993] <author> Michael Jordan and Robert Jacobs, </author> <title> "Supervised learning and divide-and-conquer: A statistical approach," </title> <booktitle> In Proceedings of the 10th International Conference, </booktitle> <pages> pages 159-166. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: The ADF-GP approach [Koza, 1992; Koza, 1994b] also starts with a generic architecture of a decomposition and modifies the components of the the decomposition throughout an evolutionary process, as opposed to a top-down divide-and-conquer approach <ref> [Jordan and Jacobs, 1993] </ref>. The approach of GP with architecture altering operations using gene duplication [Koza, 1995], discussed in more detail in Section 5.1, elegantly coped with the problem of adapting the architecture of solutions.
Reference: [Kaelbling, 1993] <author> Leslie Pack Kaelbling, </author> <title> Learning in Embedded Systems, </title> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: When should the system discover subroutines? The choice of the search strategy to pursue exemplifies a well-known machine learning problem, the exploration-exploitation trade-off [Holland, 1992]. In the reinforcement learning literature, this tradeoff is made explicit by the control structure of the algorithms <ref> [Kaelbling, 1993] </ref>. If the search process chooses the action prescribed by its current knowledge, then the system exploits its current knowledge by acting in order to gain reward. It occasionally explores actions at random in order to experiment with more situations and eventually improve.
Reference: [Kauffman, 1993] <author> Stuart A. Kauffman, </author> <title> The Origins of Order, </title> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference: [Kinnear Jr., 1994] <author> Kim Kinnear Jr., </author> <title> "Alternatives in Automatic Function Definition," </title> <editor> In Kim Kinnear Jr., editor, </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference: [Kirkpatrick et al., 1983] <author> S. Kirkpatrick, </author> <title> C.D. Gelatt, and M.P. Vecchi, "Optimization by Simulated Annealing," </title> <journal> Science, </journal> <volume> 220 </volume> <pages> 671-680, </pages> <year> 1983. </year>
Reference: [Kitano, 1990] <author> Hiroaki Kitano, </author> <title> "Designing Neural Networks Using Genetic Algorithms with Graph Generation Systems," </title> <journal> Complex Systems, </journal> (4):461-476, 1990. <volume> 222 </volume>
Reference: [Kitano, 1993] <author> Hiroaki Kitano, </author> <title> "Challanges of Massive Parallelism," </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 813-834. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1993. </year>
Reference-contexts: The genotype is a program that, as a result of interpretation, develops into a graph structure. The graph plays the role of a representation of the real world that only includes application relevant variables. 8.1.3 Evolutionary divide-and-conquer The metaphor of symbiosis inspires models for the evolution of intelligence <ref> [Kitano, 1993] </ref>. In symbiosis, two dissimilar organisms, each of which is differentiated through evolution, live together in a mutually beneficial relationship. Chapter 7 described a symbiotic interpretation of the modular GP representation that can encourage specialization of individuals on sub-domains of the input space.
Reference: [Koza, 1989] <author> John R. Koza, </author> <title> "Hierarchical Genetic Algorithms operating on populations of computer programs," </title> <booktitle> In Proc. of the 11th International Joint Conference on Artificial Intelligence, volume I. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference: [Koza, 1992] <author> John R. Koza, </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection, </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: The ADF-GP approach <ref> [Koza, 1992; Koza, 1994b] </ref> also starts with a generic architecture of a decomposition and modifies the components of the the decomposition throughout an evolutionary process, as opposed to a top-down divide-and-conquer approach [Jordan and Jacobs, 1993].
Reference: [Koza, 1994a] <author> John R. Koza, </author> <title> "Architecture-Altering Operations for Evolving the Architecture of a Multi-Part Program in Genetic Programming," </title> <institution> Computer Science Department STAN-CS-TR-94-1528, Stanford University, </institution> <year> 1994. </year>
Reference: [Koza, 1994b] <editor> John R. Koza, </editor> <booktitle> Genetic Programming II, </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: However, the EDC solution is considerably simpler. EDC, in particular the firm-clustering approach, promises to scale up much better to problems with more regimes and dimensions. 7.6 Related work EDC can be compared to the modular ADF approach <ref> [Koza, 1994b] </ref>. Interleaved mating in EDC corresponds to branch typing in ADF. The symbiotic representation of EDC is different from the ADF approach in that the condition part has a different role compared to an ADF. <p> The ADF-GP approach <ref> [Koza, 1992; Koza, 1994b] </ref> also starts with a generic architecture of a decomposition and modifies the components of the the decomposition throughout an evolutionary process, as opposed to a top-down divide-and-conquer approach [Jordan and Jacobs, 1993].
Reference: [Koza, 1995] <author> John R. Koza, </author> <title> "Gene Duplication to Enable Genetic Programming to Concurrently Evolve both the Architecture and Work-Performing Steps of a Computer Program," </title> <editor> In Chris S. Mellish, editor, </editor> <booktitle> IJCAI, </booktitle> <volume> volume 1, </volume> <pages> pages 734-740. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1995. </year>
Reference-contexts: The approach of GP with architecture altering operations using gene duplication <ref> [Koza, 1995] </ref>, discussed in more detail in Section 5.1, elegantly coped with the problem of adapting the architecture of solutions. The idea there was to provide additional genetic operations for altering the architecture of a solution during genetic search.
Reference: [Koza and Andre, 1995] <author> John R. Koza and David Andre, </author> <title> "Parallel Genetic Programming on a Network of Transputers," </title> <type> Technical Report STAN-CS-TR-95-1542, </type> <institution> Stan-ford University, </institution> <year> 1995. </year>
Reference-contexts: Such a search procedure may be more computationally efficient than GP for certain problem representations. Reuse and parameterization would still allow for a hierarchical decomposition. 8.2.10 Parallel implementation of ARL Maintaining a global library of subroutines may be infeasible in parallel implementations of GP, such as in <ref> [Koza and Andre, 1995] </ref>. However, individuals can be grouped geographically and can share acquired knowledge in the form of subroutines within local 214 areas.
Reference: [Koza et al., 1996a] <editor> John R. Koza, David Andre, Forrest H. Benett III, and Martin A. Keane, </editor> <title> "Use of automatically defined functions and architecture altering operation in Automated circuit synthesis with genetic programming," </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 123-131, </pages> <address> Cambridge, MA, 1996. </address> <publisher> The MIT Press. </publisher>
Reference: [Koza et al., 1996b] <editor> John R. Koza, Forrest H. Benett III, David Andre, and Martin A. Keane, </editor> <title> "Automated WYSIWYG Design of both the topology and component val 223 ues of electrical circuits using genetic programming," </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 123-131, </pages> <address> Cambridge, MA, 1996. </address> <publisher> The MIT Press. </publisher> <editor> [Laarhoven, 1988] van Peter J. M. </editor> <title> Laarhoven, Theoretical and computational aspects of simulated annealing, </title> <publisher> Centrum voor Wiskunde en Informatica, </publisher> <address> Netherlands, </address> <year> 1988. </year>
Reference: [Langdon, 1996] <author> W. B. Langdon, </author> <title> Data Structures and Genetic Programming, </title> <type> PhD thesis, </type> <institution> University College, </institution> <address> London, </address> <month> 27 September </month> <year> 1996. </year>
Reference-contexts: Experiments with an adaptation of Price's theorem for GP have been reported in <ref> [Langdon, 1996] </ref>, where the theory has been applied to understand the propagation of primitives as genes. With this definition of a gene, Price's theorem can be used to indirectly refute hypothesized useful blocks of code (subroutines), by modifying the utility of subroutines.
Reference: [Li and Vitanyi, 1993] <author> Ming Li and Paul Vitanyi, </author> <title> An Introduction to Kolmogorov Complexity and its Applications, </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [Li and Vitanyi, 1992] <author> Ming Li and Paul M. B. Vitanyi, </author> <title> "Inductive Reasonong and Kolmogorov Complexity," </title> <journal> Journal of Computer and Systems Sciences, </journal> <volume> 44 </volume> <pages> 343-384, </pages> <year> 1992. </year>
Reference: [Litmann, 1987] <author> Richard P. Litmann, </author> <title> "An Introduction to Computing with Neural Nets," </title> <journal> IEEE ASSP, </journal> <month> April </month> <year> 1987. </year>
Reference: [Littman, 1994] <author> Michael L. Littman, </author> <title> "Memoryless policies: theoretical limitations and practical results," </title> <booktitle> In Proceedings of the Third International Conference on Simulation and adaptive Behavior: From Animals to Animats, </booktitle> <pages> pages 238-245, </pages> <year> 1994. </year>
Reference: [Luenberger, 1992] <author> David G. Luenberger, </author> <title> Introduction to Dynamic Systems Theory, Models and Applications, </title> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference: [Maes, 1993a] <editor> Pattie Maes, </editor> <booktitle> "Behavior-Based Artificial Intelligence," In SAB-2. </booktitle> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference: [Maes, 1993b] <editor> Pattie Maes, </editor> <booktitle> "Behavior-Based Artificial Intelligence," In Proceedings of the Second Conference on Simulated and Adaptive Behavior. </booktitle> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference: [Mahadevan and Connell, 1990] <author> Sridhar Mahadevan and Jonathan Connell, </author> <title> "Automatic Programming of Behavior-Based Robots Using Reinforcement Learning," </title> <booktitle> In 224 Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> Boston, 1990. </address> <publisher> MIT Press. </publisher>
Reference: [Mahfoud, 1995] <author> Samir W. Mahfoud, </author> <title> "A comparison of parallel and sequential niching methods," </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 136-143, </pages> <address> San Francisco, CA, USA, July 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The coevolutionary fitness function also takes into account the special meaning of the modular representation in EDC. The GA literature is rich in methods designed to promote the evolution of multiple subpopulations, also called niching methods (see <ref> [Mahfoud, 1995] </ref> for a comparison). It is assumed that the maintenance of stable and diverse subpopulations combats premature convergence and improves the search capabilities of GAs. Most applications are for function optimization.
Reference: [McCallum, 1995] <author> Andrew Kachites McCallum, </author> <title> Reinforcement Learning with Selective Perception and Hidden State, </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Rochester, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: ARL and hidden structure The Pac-Man game, used as a test case in this dissertation, is a very difficult reinforcement learning task. One of the difficulties in the domain is perceptual aliasing, discussed more generally as hidden state in <ref> [Whitehead, 1991; McCallum, 1995] </ref>. The agent perception does not give complete information about the current state of the world, which makes the problem harder. The Pac-Man game was successfully approached using GP. Solutions obtained by means of procedural representations have surprising capabilities of generalization and structure discovery.
Reference: [Muhlenbein, 1991] <author> Heinz Muhlenbein, </author> <title> "Evolution in Time and Space The Parallel Genetic Algorithm," </title> <editor> In Gregory J.E. Rawlins, editor, </editor> <booktitle> Foundations of Genetic Algorithms 1, </booktitle> <pages> pages 316-337, </pages> <address> San Mateo, CA, USA, 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Michalski, 1983] <author> Ryszard S. Michalski, </author> <title> "A Theory and Methodology of Inductive Learning," </title> <editor> In Ryszard S. Michalski, Jaime G. Carbonell, and Tom M. Mitchell, editors, </editor> <booktitle> Machine Learning, An Artificial Intelligence Approach, </booktitle> <pages> pages 83-129. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1983. </year>
Reference: [Minsky and Papert, 1969] <author> Marvin Lee Minsky and Seymour Papert, </author> <title> Perceptrons; an introduction to computational geometry, </title> <publisher> MIT Press, </publisher> <year> 1969. </year>
Reference: [Minsky and Papert, 1988] <author> Marvin Lee Minsky and Seymour Papert, </author> <title> Perceptrons; an introduction to computational geometry, </title> <publisher> MIT Press, </publisher> <address> expanded edition edition, </address> <year> 1988. </year>
Reference: [Mitchell, 1996] <author> Melanie Mitchell, </author> <title> An Introduction To Genetic Algorithms, </title> <publisher> MIT Press, </publisher> <year> 1996. </year>
Reference: [Mitchell, 1980] <author> Tom Mitchell, </author> <title> "The Need for Biases in Learning Generalizations," </title> <editor> In Jude W. Shavlik and Thomas G. Dietterich, editors, </editor> <booktitle> Readings in Machine Learning, </booktitle> <pages> pages 184-191. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1980. </year>
Reference-contexts: Bias was defined as "any basis for choosing one generalization over another, other than strict consistency with the observed training instances" <ref> [Mitchell, 1980] </ref>. The adaptive representation approach is clearly an example of a system that learns new biases. ARL can be further studied as an example of a system where procedural bias interacts with representational bias [Gordon and DesJardins, 1995].
Reference: [Mitchell, 1994] <author> Tom M. Mitchell, </author> <title> "Robot Learning," </title> <booktitle> In Proceedings of the ML-94 Workshop, </booktitle> <year> 1994. </year> <month> 225 </month>
Reference: [Mjolsness et al., 1989] <author> Eric Mjolsness, David H. Sharp, and Bradley K. Albert, </author> <title> "Scaling, </title> <booktitle> Machine Learning and Genetic Neural Nets," Advances in Applied Mathematics, </booktitle> (10):137-163, 1989. 
Reference: [Montana, 1994] <author> David J. Montana, </author> <title> "Strongly Typed Genetic Programming," </title> <type> BBN Technical Report #7866, </type> <institution> Bolt Beranek and Newman, Inc., </institution> <address> Cambridge, MA, USA, </address> <month> March </month> <year> 1994. </year>
Reference: [Muggleton, 1992] <author> Stephen Muggleton, </author> <title> Inductive logic programming, </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: A technique related to the ARL subroutine discovery is predicate invention in inductive logic programming <ref> [Muggleton, 1992] </ref>. Predicate invention helps to reduce the structural complexity of induced structures due to reuse. Even more importantly, invented predicates may generalize over the search space, thus compensating for missing 209 background knowledge. Predicate invention corresponds to adding hidden variables to the representation.
Reference: [Newell, 1990] <author> Allen Newell, </author> <title> Unified Theories of Cognition, </title> <publisher> Harvard University Press, </publisher> <year> 1990. </year>
Reference: [Newell and Simon, 1972] <author> Allen Newell and Herbert A. Simon, </author> <title> Human Problem Solving, </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1972. </year>
Reference: [Nilsson, 1980] <author> Nils Nilsson, </author> <booktitle> Principles of Artificial Intelligence, </booktitle> <publisher> Tioga Pub. Co., </publisher> <address> Palo Alto, California, </address> <year> 1980. </year>
Reference: [Nix and Vose, 1992] <author> A.E. Nix and M.D. Vose, </author> <title> "Modeling Genetic Algorithms with Markov Chains," </title> <journal> Annals of Mathematics and Artificial Intelligence Research, </journal> (5):79-88, 1992. 
Reference: [Nordin et al., 1995] <author> Peter Nordin, Frank Francone, and Wolfgang Banzhaf, </author> <title> "Explicitly Defined Introns and Destructive Crossover in Genetic Programming," </title> <editor> In Justinian P. Rosca, editor, </editor> <booktitle> Proceeedings of the Workshop on Genetic Programming: From Theory to Real-World Applications (NRL TR 95.2, University of Rochester), </booktitle> <pages> pages 6-22, </pages> <month> July </month> <year> 1995. </year>
Reference: [Olsson, 1995] <author> Roland Olsson, </author> <title> "Inductive functional programming using incremental program transformation," </title> <journal> Artificial Intelligence, </journal> <volume> 74 </volume> <pages> 55-81, </pages> <year> 1995. </year>
Reference: [O'Reilly, 1995] <author> Una-May O'Reilly, </author> <title> An Analysis of Genetic Programming, </title> <type> PhD thesis, </type> <institution> Ottawa-Carleton Institute for Computer Science, </institution> <month> Sept </month> <year> 1995. </year> <month> 226 </month>
Reference: [O'Reilly and Oppacher, 1995] <author> Una-May O'Reilly and Franz Oppacher, </author> <title> "The Troubling Aspects of a Building Block Hypothesis for Genetic Programming," </title> <editor> In L. Darrell Whitley and Michael D. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms 3, </booktitle> <pages> pages 73-88, </pages> <address> San Mateo, CA, USA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Papadimitriou and Steiglitz, 1982] <author> Christos H. Papadimitriou and Kenneth Steiglitz, </author> <title> Combinatorial optimization: algorithms and complexity, </title> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference: [Pearl, 1984] <author> Judea Pearl, </author> <title> Heuristics : Intelligent Search Strategies for Computer Problem Solving, </title> <publisher> Addison-Wesley, </publisher> <year> 1984. </year>
Reference: [Potter et al., 1995] <author> Mitchell A. Potter, Kenneth A. DeJong, and John J. Greffenstette, </author> <title> "A co-evolutionary approach to learning sequantial decision rules," </title> <editor> In L. Eshel-man, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 366-372, </pages> <address> San Francisco, CA, USA, July 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Classifiers to be deleted and replaced by new individuals in the GA step are taken from the least fit ones of the largest match sets, in order to balance the size of clusters. <ref> [Potter et al., 1995] </ref> suggests that explicit notions of modularity need to be introduced in a GA-based system in order to evolve a problem decomposition. In their system, which evolves co-adapted rule sets, subspecialty are encouraged by seeding the initial population with particular forms of rules.
Reference: [Price, 1970] <author> Price, </author> <title> "Selection and Covariance," </title> <journal> Nature, </journal> <volume> 227 </volume> <pages> 520-521, </pages> <month> August </month> <year> 1970. </year>
Reference: [Quinlan, 1986] <author> J. Ross Quinlan, </author> <title> "Induction of Decision Trees," </title> <booktitle> Machine Learning, </booktitle> <pages> pages 81-106, </pages> <year> 1986. </year>
Reference-contexts: In our system no special seeding is necessary, and more importantly, we do not provide any help on how the problem can be decomposed. Classical machine learning approaches to decomposition using the divide-and-conquer paradigm are techniques such as CART [Breiman et al., 1984] and ID3 <ref> [Quinlan, 1986] </ref> (or its successor C4.5). Our approach appears suitable for online learning and adaptation to changing environments. The adaptive mixture of experts (ME) [Jacobs et al., 1991] is a modular neural network approach which is the closest in spirit to our problem decomposition approach.
Reference: [Quinlan and Rivest, 1989] <author> J. Ross Quinlan and Ronald L. Rivest, </author> <title> "Inferring Decision Trees Using the Minimum Description Length Principle," </title> <booktitle> Information and Computation, </booktitle> <pages> pages 227-248, </pages> <year> 1989. </year>
Reference: [Radcliffe, 1991] <author> Nicholas J. Radcliffe, </author> <title> "Equivalence Class Analysis of Genetic Algorithms," </title> <journal> Complex Systems 5, </journal> (2):183-205, 1991. 
Reference: [Radcliffe, 1992] <author> Nicholas J. Radcliffe, </author> <title> "Non-linear Genetics Representations," </title> <editor> In R. Mfagnner and B. Manderick, editors, </editor> <title> Parallel Problem Solving from Nature, 2. </title> <publisher> Elsevier Science Publishers, </publisher> <year> 1992. </year>
Reference: [Ray, 1993] <author> Thomas S. Ray, </author> <title> "Evolution, Complexity, Entropy, </title> <journal> and Artificial Reality," Physica D, </journal> <year> 1993. </year> <month> 227 </month>
Reference: [Rechenberg, 1994] <author> Ingo Rechenberg, </author> <title> "Evolution Strategy," </title> <editor> In Jacek M. Zurada, Robert J. Marks-II, and Charles J. Robinson, editors, </editor> <booktitle> Computational Intelligence Imitating Life, </booktitle> <pages> pages 147-159. </pages> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: Next I will put into a broader perspective some of its major contributions. 8.1.1 Theory of genetic programming Biases in the evolution of procedural representations A useful perspective for analyzing program transformations is the notion of causality, defined in Chapter 4 <ref> [Rechenberg, 1994] </ref>. Causality relates changes in the structure of an object with the effects of changes, that is changes in the properties or behavior of the object. Ideally, smooth changes should have smooth effects (what is called strong causality), but this is obviously not true for programs.
Reference: [Reynolds, 1994] <author> Craig W. Reynolds, </author> <title> "Evolution of Obstacle Avoidance Be-haviour:Using Noise to Promote Robust Solutions," </title> <editor> In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming, chapter 10. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference: [Rissanen, 1987] <author> J. Rissanen, </author> <title> "Stochastic Complexity," </title> <journal> Journal of Royal Statistical Society, Series B, </journal> <volume> 49(3) </volume> <pages> 223-239, </pages> <year> 1987. </year>
Reference: [Rosca, 1995a] <author> Justinian P. Rosca, </author> <title> "Entropy-Driven Adaptive Representation," </title> <editor> In Justinian P. Rosca, editor, </editor> <booktitle> Proceeedings of the Workshop on Genetic Programming: From Theory to Real-World Applications (NRL TR 95.2, University of Rochester), </booktitle> <pages> pages 23-32, </pages> <month> July </month> <year> 1995. </year>
Reference: [Rosca, 1995b] <author> Justinian P. Rosca, </author> <title> "Genetic Programming Exploratory Power and the Discovery of Functions," </title> <editor> In John Robert McDonnell, Robert G. Reynolds, and David B. Fogel, editors, </editor> <booktitle> Evolutionary Programming IV Proceedings of the Fourth Annual Conference on Evolutionary Programming, </booktitle> <pages> pages 719-736, </pages> <address> San Diego, CA, USA, 1995. </address> <publisher> MIT Press. </publisher>
Reference-contexts: In RL, exploration and exploitation are explicitly handled. In contrast, GP is a search technique that implicitly balances exploration and exploitation, at some cost in search effort. Discovery and evolution of functions amplifies the exploratory ability of the GP search process <ref> [Rosca, 1995b] </ref>. However, as the best-of-generation program fitness increases, the probability of falling upon better individuals by exploration substantially decreases. The GP search process should exploit the structures already discovered and avoid spending unnecessary effort with state space exploration.
Reference: [Rosca, 1996] <author> Justinian P. Rosca, </author> <title> "Generality versus size in genetic programming," </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 381-387, </pages> <address> Cambridge, MA, 1996. </address> <publisher> The MIT Press. </publisher>
Reference: [Rosca and Ballard, 1994a] <author> Justinian P. Rosca and Dana H. Ballard, </author> <title> "Genetic Programming with Adaptive Representations," </title> <type> Technical Report TR 489, </type> <institution> University of Rochester, Computer Science Department, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: The effect of these first two steps is the creation of abstractions. The adaptive representation idea is to further use abstractions to expand on-the-fly the vocabulary used by the evolutionary system, thus biasing search <ref> [Rosca and Ballard, 1994a; Rosca and Ballard, 1994c] </ref>. In essence, AR and ARL control through abstraction manipulation, at a meta-level, the operation of GP at the base level. The beauty of this procedure is that learning of more and more complex abstractions is possible by applying the process recursively.
Reference: [Rosca and Ballard, 1994b] <author> Justinian P. Rosca and Dana H. Ballard, </author> <title> "Hierarchical Self-Organization in Genetic Programming," </title> <booktitle> In 11th ICML, </booktitle> <pages> pages 251-258. </pages> <publisher> Morgan Kauf-mann, </publisher> <year> 1994. </year> <month> 228 </month>
Reference: [Rosca and Ballard, 1994c] <author> Justinian P. Rosca and Dana H. Ballard, </author> <title> "Learning by Adapting Representations in Genetic Programming," </title> <booktitle> In Proceedings of the 1994 IEEE World Congress on Computational Intelligence, </booktitle> <address> Orlando, Florida, USA, </address> <pages> pages 407-412. </pages> <publisher> IEEE Press, </publisher> <month> June </month> <year> 1994. </year>
Reference-contexts: The effect of these first two steps is the creation of abstractions. The adaptive representation idea is to further use abstractions to expand on-the-fly the vocabulary used by the evolutionary system, thus biasing search <ref> [Rosca and Ballard, 1994a; Rosca and Ballard, 1994c] </ref>. In essence, AR and ARL control through abstraction manipulation, at a meta-level, the operation of GP at the base level. The beauty of this procedure is that learning of more and more complex abstractions is possible by applying the process recursively.
Reference: [Rosca and Ballard, 1995] <author> Justinian P. Rosca and Dana H. Ballard, </author> <title> "Causality in Genetic Programming," </title> <editor> In L. Eshelman, editor, </editor> <booktitle> ICGA95, </booktitle> <pages> pages 256-263, </pages> <address> San Francisco, CA., USA, July 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Rosca and Ballard, 1996a] <author> Justinian P. Rosca and Dana H. Ballard, </author> <title> "Discovery of Subroutines in Genetic Programming," </title> <editor> In P. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 9. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1996. </year>
Reference-contexts: In ZCS [Wilson, 1994], conditions are given by fixed length bit strings. In contrast, in EDC both conditions and outputs are implicit representations in their respective domains. An implicit representation has the desirable properties of generality and compactness (see also <ref> [Rosca and Ballard, 1996a] </ref>). For instance, the EDC individual conditions specify a partitioning of the input space regardless of the number of dimensions.
Reference: [Rosca and Ballard, 1996b] <author> Justinian P. Rosca and Dana H. Ballard, </author> <title> "Evolution-based Discovery of Hierarchical Behaviors," </title> <booktitle> In Proc. of the Thirteenth National Conference on Artificial Intelligence (AAAI-96), </booktitle> <pages> pages 888-894. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <year> 1996. </year>
Reference: [Rosca et al., 1996] <editor> Justinian P. Rosca, Michael Patrick Johnson, and Pattie Maes, </editor> <title> "Evolutionary Speciation Genetic Programming," </title> <type> unpublished report, </type> <year> 1996. </year>
Reference-contexts: The intuition is that individuals within the same cluster should be preferentially mated. The EDC/cluster-selection algorithm (see <ref> [Rosca et al., 1996] </ref>) divides the full GP population into sub-populations of similar individuals, which are selected and mated purely within subpopulations. This amounted to applying regular GP on each sub-population and letting the condition mating and mutation randomly change the clusters.
Reference: [Rumelhart et al., 1986] <author> D.E. Rumelhart, J.L.McClelland, </author> <title> and the PDP research Group, Parallel distributed processing: explorations into the microstructure of cognition, volume 1, </title> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference: [Russell and Wefald, 1991] <author> Stuart Russell and Eric Wefald, </author> <title> Do the right thing : studies in limited rationality, </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [Ryan, 1994] <editor> Conor. O. Ryan, "Pygmies and Civil Servants," In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference: [Saravanan and Fogel, 1994] <author> N. Saravanan and D.B. Fogel, </author> <title> "Learning Strategy Parameters in Evolutionary Programming: An Empirical Study," </title> <booktitle> In Proceedings of the Third 229 Annual Conference on Evolutionary Programming, </booktitle> <pages> pages 269-280. </pages> <publisher> World Scientific, </publisher> <year> 1994. </year>
Reference: [Schrodinger, 1945] <author> Erwin Schrodinger, </author> <title> What is life? : the physical aspect of the living cell, </title> <publisher> Macmillan, </publisher> <address> New York, </address> <year> 1945. </year>
Reference: [Schwartz, 1993] <author> Anton Schwartz, </author> <title> "A Reinforcement Learning Method for Maximizing Undiscounted Rewards," </title> <booktitle> In The Proceedings of the Tenth International Machine Learning Conference, </booktitle> <pages> pages 298-305. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1993. </year>
Reference: [Schwefel, 1981] <editor> Hans-Paul Schwefel, </editor> <title> Numerical Optimization of Computer Models, </title> <publisher> John Wiley & Sons, </publisher> <year> 1981. </year>
Reference: [Selman and Kautz, 1993] <author> Bart Selman and Henry A. Kautz, </author> <title> "An Empirical Study of Greedy Local Search for Satisfiability Testing," </title> <booktitle> In AAAI, </booktitle> <pages> pages 46-51. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <year> 1993. </year>
Reference: [Shannon, 1949] <author> Claude E Shannon, </author> <title> The mathematical theory of communication, </title> <publisher> University of Illinois Press, </publisher> <year> 1964 [c1949]. </year>
Reference: [Shell et al., 1994] <author> Peter Shell, Juan Antonio Hernandez Rubio, and Gonzalo Quiroga Barro, </author> <title> "Improving Search through Diversity," </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <volume> volume 2, </volume> <pages> pages 1323-1328, </pages> <year> 1994. </year>
Reference: [Simon, 1973] <author> Herbert A. Simon, </author> <title> "The Organization of Complex Systems," </title> <editor> In G. Braziller Howard H. Pattee, editor, </editor> <booktitle> Hierarchy Theory; The Challenge of Complex Systems, </booktitle> <pages> pages 3-27. </pages> <address> New York, </address> <year> 1973. </year>
Reference: [Sims, 1991] <author> Karl Sims, </author> <title> "Artificial Evolution for Computer Graphics," </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 319-328, </pages> <month> July </month> <year> 1991. </year>
Reference: [Smith, 1991] <author> Douglas R. Smith, "KIDS: </author> <title> A Knowledge-Based Software Development System," </title> <editor> In M. Lowry and R. McCartney, editors, </editor> <booktitle> Automating Software Design, </booktitle> <pages> pages 483-514. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year> <month> 230 </month>
Reference: [Spector, 1996] <author> Lee Spector, </author> <title> "Evolving Control Structures with Automatically Defined Macros," </title> <editor> In P. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 7. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1996, </year> <note> Submitted to. </note>
Reference: [Stahl, 1993] <author> Irene Stahl, </author> <title> "Predicate Invention in ILP an Overview," </title> <editor> In Pavel B. Brazdil, editor, </editor> <booktitle> ECML, </booktitle> <pages> pages 313-322. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [Sutton, 1988] <author> Richard S. Sutton, </author> <title> "Learning to Predict by the Method of Temporal Differences," </title> <journal> Machine Learning, </journal> <volume> 3(1) </volume> <pages> 9-44, </pages> <year> 1988. </year>
Reference: [Tackett, 1993] <author> Walter Alden Tackett, </author> <title> "Genetic Programming for Feature Discovery and Image Discrimination," </title> <booktitle> In Proceedings of the 5th International Conference on Genetic Algorithms, ICGA-93. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference: [Tackett, 1994] <author> Walter Alden Tackett, </author> <title> Recombination, Selection and the Genetic Construction of Computer Programs, </title> <type> PhD thesis, </type> <institution> University of Southern California, </institution> <month> April </month> <year> 1994. </year>
Reference: [Tackett, 1995] <author> Walter Alden Tackett, </author> <title> "Mining the genetic program," </title> <journal> IEEE Expert, </journal> <month> June </month> <year> 1995, </year> <booktitle> IEEE Expert, Special Track on Evolutionary Programming. </booktitle>
Reference: [Teller, 1994] <author> Astro Teller, </author> <title> "The Evolution of Mental Models," </title> <editor> In Kim Kinnear Jr., editor, </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Further, one can look at programs as implicit ways of maintaining state. The procedural program representation can also make explicit state manipulation 213 <ref> [Teller, 1994] </ref>. A comparison between GP-based techniques and state-maintaining reinforcement learning algorithms is worth further investigation. One particular candidate test case is the Pac-Man problem. 8.2.8 Bias in machine learning The problem of learning is often formulated as a problem of determining generalizations consistent with available data.
Reference: [Tesauro, 1992] <author> Gerald Tesauro, </author> <title> "Practical Issues in Temporal Difference Learning," </title> <journal> Machine Learning, </journal> 8(3/4):257-277, 1992. 
Reference: [Thompson, 1988] <author> Colin J. Thompson, </author> <title> Classical equilibrium statistical mechanics, </title> <publisher> Oxford Univ Press, </publisher> <year> 1988. </year>
Reference: [Valiant, 1984] <author> L. G. Valiant, </author> <title> "A Theory of the Learnable," </title> <journal> Communications of the ACM, </journal> <volume> 27(11) </volume> <pages> 1134-1142, </pages> <year> 1984. </year>
Reference: [Vose and Liepins, 1991] <author> Michael D. Vose and G.E. Liepins, </author> <title> "Punctuated Equilibria in Genetic Search," </title> <journal> Complex Systems, </journal> (5):31-44, 1991. <volume> 231 </volume>
Reference: [Watkins, 1989] <author> Chris Watkins, </author> <title> Learning from Delayed Rewards, </title> <type> PhD thesis, </type> <institution> Cam-bridge University, </institution> <year> 1989. </year>
Reference: [Watkins and Dayan, 1992] <author> Christopher Watkins and Peter Dayan, </author> <title> "Q-learning," </title> <journal> Machine Learning, </journal> <volume> 8(3) </volume> <pages> 279-292, </pages> <year> 1992. </year>
Reference: [Watson et al., 1987] <author> James D. Watson, Nancy H. Hopkins, Jeffrey W. Roberts, Joan Argetsinger Steitz, and Alan M. Weiner, </author> <title> Molecular biology of the gene, </title> <booktitle> Ben-jamin/Cummings, fourth edition, </booktitle> <year> 1987. </year>
Reference: [Whitehead, 1991] <author> Steven D. Whitehead, </author> <title> Reinforcement Learning for the Adaptive Control of Perception and Action, </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: ARL and hidden structure The Pac-Man game, used as a test case in this dissertation, is a very difficult reinforcement learning task. One of the difficulties in the domain is perceptual aliasing, discussed more generally as hidden state in <ref> [Whitehead, 1991; McCallum, 1995] </ref>. The agent perception does not give complete information about the current state of the world, which makes the problem harder. The Pac-Man game was successfully approached using GP. Solutions obtained by means of procedural representations have surprising capabilities of generalization and structure discovery.
Reference: [Whitley et al., 1991] <author> D. Whitley, K. Mathias, and P. Fizhorn, </author> <title> "Delta Coding: An Iterative Search Strategy for Genetic Algorithms," </title> <booktitle> Proceedings of the International Conference on Genetic Algorithms, </booktitle> <pages> pages 77-84, </pages> <year> 1991. </year>
Reference: [Wicken, 1988] <author> Jeffrey S. Wicken, </author> <title> Thermodynamics, Evolution, and Emergence: Ingredients for a New Synthesis, chapter 7, </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference: [Wills, 1993] <author> Christopher Wills, </author> <title> The Runaway Brain, </title> <address> BasicBooks, </address> <year> 1993. </year>
Reference: [Wilson, 1994] <author> Stewart W. Wilson, "ZCS: </author> <title> A Zeroth Level Classifier System," </title> <journal> Evolutionary Computation, </journal> <volume> 2(1) </volume> <pages> 1-18, </pages> <year> 1994. </year>
Reference-contexts: In EDC the division into subpopulations is dynamic. Many similarities exists between our approach and classifier systems. In order to facilitate comparisons, we have intentionally named the two symbiotic components of 200 the GP representation as condition and output. In ZCS <ref> [Wilson, 1994] </ref>, conditions are given by fixed length bit strings. In contrast, in EDC both conditions and outputs are implicit representations in their respective domains. An implicit representation has the desirable properties of generality and compactness (see also [Rosca and Ballard, 1996a]).
Reference: [Winston, 1992] <author> Patrick Henry Winston, </author> <booktitle> Artificial Intelligence, 3rd edition, </booktitle> <publisher> Addison-Wesley Pub. Co., </publisher> <year> 1992. </year>
Reference: [Wolfram, 1994] <author> Stephen Wolfram, </author> <title> Cellular Automata and Complexity, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference: [Woods, 1970] <author> W. A. Woods, </author> <title> "Transition Network Grammars for Natural Language Analysis," </title> <journal> Communications of the ACM, </journal> <volume> 3(10) </volume> <pages> 591-606, </pages> <year> 1970. </year> <month> 232 </month>
Reference: [Zhang and Muhlenbein, 1995] <author> Byoung-Tak Zhang and Heinz Muhlenbein, </author> <title> "Balancing Accuracy and Parsimony in Genetic Programming," </title> <journal> Evolutionary Computation, </journal> <volume> 3(1) </volume> <pages> 17-38, </pages> <year> 1995. </year>
Reference-contexts: The main reason is that partial solutions do not have to conform the MDL principle. We prefer the use of adaptive techniques, as discussed in Section 4.3.4 or <ref> [Zhang and Muhlenbein, 1995] </ref>. 8.1.2 Adaptive representation ARL and architecture evolution The main critique to much of previous AI work for learning hierarchical decompositions is that decomposition architectures are hand-designed in advance of solving the problem [Brooks, 1991; Maes, 1993b; Rumelhart et al., 1986; Ishikawa, 1995; Jacobs et al., 1991; Jordan
Reference: [Zhang, 1996] <author> Wei Zhang, </author> <title> Reinforcement Learning for Job-Shop Scheduling, </title> <type> PhD thesis, </type> <institution> Oregon State University, </institution> <year> 1996. </year> <month> 233 </month>
References-found: 164

