URL: http://robotics.eecs.berkeley.edu/~clairet/multiob.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~clairet/multiob.html
Root-URL: 
Email: lygeros@lcs.mit.edu  clairet, sastry@eecs.berkeley.edu  
Title: Multi-objective Hybrid Controller Synthesis  
Author: John Lygeros, Claire Tomlin and Shankar Sastry 
Address: NE43-374 545 Technology Square, Cambridge, MA 02139  Berkeley, CA 94720  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology,  Intelligent Machines and Robotics Laboratory University of California,  
Abstract: The problem of systematically synthesizing hybrid controllers which satisfy multiple control objectives is considered. We present a technique, based on the principles of optimal control, for determining the class of least restrictive controllers that satisfies the most important objective (which we refer to as safety). The system performance with respect to the lower priority objective (which we refer to as efficiency) can then be optimized within this class. We motivate our approach by three examples, one purely discrete (the problem of reachability in finite automata), one hybrid (the steam boiler benchmark problem), and one primarily continuous (a flight vehicle management system).
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alur and D. Dill, </author> <title> "A theory of timed automata," </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 126, </volume> <pages> pp. 183-235, </pages> <year> 1994. </year>
Reference-contexts: The main problem that has been addressed in this setting has been verification, that is formally proving that a given system satisfies certain specifications. One approach to this problem comes from the area of model checking <ref> [1, 2, 3, 4] </ref>, where the emphasis is on systems and properties that can be algorithmically verified. In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7]. <p> Starting with l 1 1 (x), p 1 = <ref> [1; 0] </ref> T , so that along this boundary, u fl 1 = T max but u 2 is indeterminate. Because of the loss of dependency of the optimal Hamiltonian on u 2 , the points in 19 fx 2 Sjl 1 1 (x) = 0g are called abnormal extremals.
Reference: [2] <author> X. Nicollin, A. Olivero, J. Sifakis, and S. Yovine, </author> <title> "An approach to the description and analysis of hybrid systems," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 149-178, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year> <title> 7 Actually, the legacy controllers frequently involve state based switching between controllers designed for "safety" and "performance", not unlike the systems discussed here. </title> <type> 24 </type>
Reference-contexts: The main problem that has been addressed in this setting has been verification, that is formally proving that a given system satisfies certain specifications. One approach to this problem comes from the area of model checking <ref> [1, 2, 3, 4] </ref>, where the emphasis is on systems and properties that can be algorithmically verified. In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7].
Reference: [3] <author> R. Alur, C. Courcoubetis, T. A. Henzinger, and P. H. Ho, </author> <title> "Hybrid automaton: An algorithmic approach to the specification and verification of hybrid systems," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 209-229, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The main problem that has been addressed in this setting has been verification, that is formally proving that a given system satisfies certain specifications. One approach to this problem comes from the area of model checking <ref> [1, 2, 3, 4] </ref>, where the emphasis is on systems and properties that can be algorithmically verified. In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7].
Reference: [4] <author> T. Henzinger, P. Kopke, A. Puri, and P. Varaiya, </author> <title> "What's decidable about hybrid automata," </title> <booktitle> in 27 th Annual Symposium on the Theory of Computing, STOC'95, </booktitle> <pages> pp. 373-382, </pages> <publisher> ACM Press, </publisher> <year> 1995. </year>
Reference-contexts: The main problem that has been addressed in this setting has been verification, that is formally proving that a given system satisfies certain specifications. One approach to this problem comes from the area of model checking <ref> [1, 2, 3, 4] </ref>, where the emphasis is on systems and properties that can be algorithmically verified. In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7].
Reference: [5] <author> R. P. Kurshan, </author> <title> Computer-aided verification of coordinating processes; the automata-theoretic approach. </title> <publisher> Princeton University Press, </publisher> <year> 1994. </year>
Reference-contexts: In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property <ref> [5, 6, 7] </ref>. A different approach in the computer science literature has been to extend deductive techniques [8, 9, 10].
Reference: [6] <author> C. Daws, A. Olivero, and S. Yovine, </author> <title> "Verifying ET-LOTOS programs with KRONOS," </title> <booktitle> in Proc. 7th. IFIP WG G.1 International Conference of Formal Description Techniques, </booktitle> <editor> FORTE'94 (D. Hogrefe and S. Leue, eds.), </editor> <address> (Bern, Switzerland), </address> <pages> pp. </pages> <month> 227-242, </month> <title> Formal Description Techniques VII, </title> <publisher> Chapman & Hall, </publisher> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property <ref> [5, 6, 7] </ref>. A different approach in the computer science literature has been to extend deductive techniques [8, 9, 10].
Reference: [7] <author> T. A. Henzinger, P. H. Ho, and H. W. Toi, </author> <title> "A user guide to HYTECH," in TACAS 95: Tools and Algorithms for the Construction and Analysis of Systems (E. </title> <editor> Brinksma, W. Cleaveland, K. Larsen, T. Margaria, and B. Steffen, eds.), </editor> <volume> no. </volume> <booktitle> 1019 in LNCS, </booktitle> <pages> pp. 41-71, </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property <ref> [5, 6, 7] </ref>. A different approach in the computer science literature has been to extend deductive techniques [8, 9, 10].
Reference: [8] <author> C. Heitmayer and N. Lynch, </author> <title> "The generalized railroad crossing: A case study in formal verification of real-time systems," </title> <booktitle> in Proc. ICCC Real-Time Systems Symposium, </booktitle> <address> (San Juan, Puerto Rico), </address> <year> 1994. </year>
Reference-contexts: In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7]. A different approach in the computer science literature has been to extend deductive techniques <ref> [8, 9, 10] </ref>. Here the emphasis has been on developing models [11, 12] that provide formal semantics for composition, abstraction, etc. and support proof techniques such as induction on the length of the system executions, invariant assertions and simulation relations.
Reference: [9] <author> Z. Manna and A. Pnueli, </author> <title> Temporal Verification of Reactive Systems: Safety. </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7]. A different approach in the computer science literature has been to extend deductive techniques <ref> [8, 9, 10] </ref>. Here the emphasis has been on developing models [11, 12] that provide formal semantics for composition, abstraction, etc. and support proof techniques such as induction on the length of the system executions, invariant assertions and simulation relations.
Reference: [10] <author> M. Branicky, E. Dolginova, and N. Lynch, </author> <title> "A toolbox for proving and maintaining hybrid specifications." </title> <type> preprint, </type> <year> 1996. </year> <title> presented in Workshop on Hybrid Systems, </title> <institution> Cornell University, </institution> <month> October 12-16. </month>
Reference-contexts: In problems where the model checking approach is applicable the verification process can be completely automated; a number of computational tools have been developed to take advantage of this property [5, 6, 7]. A different approach in the computer science literature has been to extend deductive techniques <ref> [8, 9, 10] </ref>. Here the emphasis has been on developing models [11, 12] that provide formal semantics for composition, abstraction, etc. and support proof techniques such as induction on the length of the system executions, invariant assertions and simulation relations.
Reference: [11] <author> Z. Manna and A. Pnueli, </author> <title> The Temporal Logic of Reactive and Concurrent Systems: specification. </title> <publisher> Berlin: Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: A different approach in the computer science literature has been to extend deductive techniques [8, 9, 10]. Here the emphasis has been on developing models <ref> [11, 12] </ref> that provide formal semantics for composition, abstraction, etc. and support proof techniques such as induction on the length of the system executions, invariant assertions and simulation relations.
Reference: [12] <author> N. Lynch, R. Segala, F. Vaandrager, and H. Weinberg, </author> <title> "Hybrid I/O automata," in Hybrid Systems III, no. </title> <booktitle> 1066 in LNCS, </booktitle> <pages> pp. 496-510, </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: A different approach in the computer science literature has been to extend deductive techniques [8, 9, 10]. Here the emphasis has been on developing models <ref> [11, 12] </ref> that provide formal semantics for composition, abstraction, etc. and support proof techniques such as induction on the length of the system executions, invariant assertions and simulation relations.
Reference: [13] <author> R. W. Brockett, </author> <title> "Hybrid models for motion control systems," in Perspectives in Control (H. </title> <editor> Trentelman and J. Willems, eds.), </editor> <publisher> Birkhauser, </publisher> <year> 1993. </year>
Reference-contexts: One effort has been in extending the standard modeling <ref> [13, 14, 15] </ref> and simulation techniques [16, 17, 18] to capture the interaction between the continuous and discrete components.
Reference: [14] <author> A. Nerode and W. Kohn, </author> <title> "Models for hybrid systems: Automata, topologies, controllability, observability," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 317-356, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: One effort has been in extending the standard modeling <ref> [13, 14, 15] </ref> and simulation techniques [16, 17, 18] to capture the interaction between the continuous and discrete components.
Reference: [15] <author> M. S. Branicky, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Massachussets Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: One effort has been in extending the standard modeling <ref> [13, 14, 15] </ref> and simulation techniques [16, 17, 18] to capture the interaction between the continuous and discrete components. <p> One effort has been in extending the standard modeling [13, 14, 15] and simulation techniques [16, 17, 18] to capture the interaction between the continuous and discrete components. Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems <ref> [15, 19] </ref>, discrete event control [20, 21, 22] and optimal control [23, 15, 24]. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25]. <p> Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control [20, 21, 22] and optimal control <ref> [23, 15, 24] </ref>. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25]. <p> We will take a more input/output approach, along the lines of the reactive module paradigm [32]. For an overview of hybrid models from a dynamical systems perspective see <ref> [15] </ref>. A hybrid automaton is a dynamical system which determines the evolution and interaction of a finite collection of variables.
Reference: [16] <author> L. Tavernini, </author> <title> "Differential automata and their simulators," Nonlinear Analysis, </title> <journal> Theory, Methods and Applications, </journal> <volume> vol. 11(6), </volume> <pages> pp. 665-683, </pages> <year> 1987. </year> <month> 25 </month>
Reference-contexts: One effort has been in extending the standard modeling [13, 14, 15] and simulation techniques <ref> [16, 17, 18] </ref> to capture the interaction between the continuous and discrete components. Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control [20, 21, 22] and optimal control [23, 15, 24].
Reference: [17] <author> A. Deshpande, A. Gollu, and L. Semenzato, </author> <title> "The SHIFT programming language and run-time system for dynamic networks of hybrid automata," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-97-7, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1997. </year>
Reference-contexts: One effort has been in extending the standard modeling [13, 14, 15] and simulation techniques <ref> [16, 17, 18] </ref> to capture the interaction between the continuous and discrete components. Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control [20, 21, 22] and optimal control [23, 15, 24].
Reference: [18] <author> M. Anderson, D. Bruck, S. E. Mattsson, and T. Schonthal, </author> <title> "Omsim- an integrated interactive environment for object-oriented modeling and simulation," </title> <booktitle> in IEEE/IFAC joint symposium on computer aided control system design, </booktitle> <pages> pp. 285-90, </pages> <year> 1994. </year>
Reference-contexts: One effort has been in extending the standard modeling [13, 14, 15] and simulation techniques <ref> [16, 17, 18] </ref> to capture the interaction between the continuous and discrete components. Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control [20, 21, 22] and optimal control [23, 15, 24].
Reference: [19] <author> L. Hou, A. Michel, and H. Ye, </author> <title> "Stability analysis of switched systems," </title> <booktitle> in IEEE Conference on Decision and Control, </booktitle> <pages> pp. 1208-1214, </pages> <year> 1996. </year>
Reference-contexts: One effort has been in extending the standard modeling [13, 14, 15] and simulation techniques [16, 17, 18] to capture the interaction between the continuous and discrete components. Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems <ref> [15, 19] </ref>, discrete event control [20, 21, 22] and optimal control [23, 15, 24]. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25].
Reference: [20] <author> O. Maler, A. Pnueli, and J. Sifakis, </author> <title> "On the synthesis of discrete controllers for timed systems," </title> <booktitle> in Theoretical Aspects of Computer Science, no. 900 in LNCS, </booktitle> <pages> pp. 229-242, </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control <ref> [20, 21, 22] </ref> and optimal control [23, 15, 24]. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25].
Reference: [21] <author> M. Heymann, F. Lin, and G. Meyer, </author> <title> "Control synthesis for a class of hybrid systems subject to configuration-based safety constraints," in Hybrid and Real Time Systems, no. </title> <booktitle> 1201 in LNCS, </booktitle> <pages> pp. 376-391, </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference-contexts: Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control <ref> [20, 21, 22] </ref> and optimal control [23, 15, 24]. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25].
Reference: [22] <author> M. Lemmon, J. A. Stiver, and P. J. Antsaklis, </author> <title> "Event identification and intelligent hybrid control," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 268-296, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control <ref> [20, 21, 22] </ref> and optimal control [23, 15, 24]. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25].
Reference: [23] <author> A. Nerode and W. Kohn, </author> <title> "Multiple agent hybrid control architecture," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 297-316, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control [20, 21, 22] and optimal control <ref> [23, 15, 24] </ref>. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25].
Reference: [24] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "Multiagent hybrid system design using game theory and optimal control," </title> <booktitle> in IEEE Conference on Decision and Control, </booktitle> <pages> pp. 1190-1195, </pages> <year> 1996. </year>
Reference-contexts: Another has been in developing new analysis and controller design methodologies by extending existing methodologies such as Lyapunov's theorems [15, 19], discrete event control [20, 21, 22] and optimal control <ref> [23, 15, 24] </ref>. Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25]. <p> Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control <ref> [24, 25] </ref>. We have successfully applied these techniques to a number of problems including automated highway systems [26], air traffic management [27] and benchmark examples such as the train gate controller [25].
Reference: [25] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A game theoretic approach to hybrid system design," in Hybrid Systems III, no. </title> <booktitle> 1066 in LNCS, </booktitle> <pages> pp. 1-12, </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control <ref> [24, 25] </ref>. We have successfully applied these techniques to a number of problems including automated highway systems [26], air traffic management [27] and benchmark examples such as the train gate controller [25]. <p> We have successfully applied these techniques to a number of problems including automated highway systems [26], air traffic management [27] and benchmark examples such as the train gate controller <ref> [25] </ref>. The focus of our work so far has been on the hybrid phenomena that arise due to the interaction between the multiple agents (e.g. vehicles, aircraft, etc.) in a large scale system.
Reference: [26] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A verified hybrid controller for automated vehicles," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-97-9, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1997. </year> <note> (to appear in the Special Issue on Hybrid Systems of the IEEE Transactions on Automatic Control). </note>
Reference-contexts: Our work falls under the last category. In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25]. We have successfully applied these techniques to a number of problems including automated highway systems <ref> [26] </ref>, air traffic management [27] and benchmark examples such as the train gate controller [25]. The focus of our work so far has been on the hybrid phenomena that arise due to the interaction between the multiple agents (e.g. vehicles, aircraft, etc.) in a large scale system. <p> Fortunately, in the examples considered here (as well as the ones <ref> [27, 26] </ref>) a solution can be obtained analytically, or using simple numerical calculations. In general, sophisticated optimal control tools [33] can make the solution of more general problems feasible, at least numerically. Two special cases of the above algorithm deserve explicit mention.
Reference: [27] <author> C. Tomlin, G. Pappas, and S. Sastry, </author> <title> "Conflict resolution for air traffic management: a case study in multi-agent hybrid systems," </title> <type> Tech. Rep. </type> <institution> UCB/ERL M96/38, Electronic Research Laboratory, University of California Berkeley, </institution> <year> 1996. </year>
Reference-contexts: In recent years we have developed a methodology for designing controllers for large scale systems, making use of techniques from game theory and optimal control [24, 25]. We have successfully applied these techniques to a number of problems including automated highway systems [26], air traffic management <ref> [27] </ref> and benchmark examples such as the train gate controller [25]. The focus of our work so far has been on the hybrid phenomena that arise due to the interaction between the multiple agents (e.g. vehicles, aircraft, etc.) in a large scale system. <p> Fortunately, in the examples considered here (as well as the ones <ref> [27, 26] </ref>) a solution can be obtained analytically, or using simple numerical calculations. In general, sophisticated optimal control tools [33] can make the solution of more general problems feasible, at least numerically. Two special cases of the above algorithm deserve explicit mention.
Reference: [28] <author> J. Lygeros, </author> <title> Hierarchical Hybrid Control of Large Scale Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: The efficiency requirement can then be optimized within this class. The resulting controller will typically be hybrid (even if the plant dynamics are purely continuous) as it involves switching between the safe and efficient controllers. Our analysis is based on the hybrid system model introduced in <ref> [28] </ref>, which is outlined in Section 2. The design algorithm (presented in Section 3) is motivated by three examples. The first is purely discrete and involves the control of finite automata. <p> Output Evolution: for all t 2 t , y (t) = h (q (t); x (t); u (t)). It can be shown <ref> [28] </ref> that the definitions introduced here are rich enough to allow us to model regular dynamical systems, discrete events, autonomous jumps, controlled jumps, etc. 2.2 Graphical Representation If X D is a finite set it is very convenient to represent the hybrid automaton by a directed graph. <p> Note also that there is no requirement that q 6= q 0 , i.e. loops to the same node are allowed. 2.3 Operations on Hybrid Dynamical Systems A number of operations can be defined on hybrid dynamical systems <ref> [28] </ref>. Here we restrict our attention to just one, called interconnection. It allows us to form new hybrid systems out of collections of existing ones.
Reference: [29] <author> J.-R. </author> <title> Abrial, "The steam-boiler control specification problem," in Formal Methods for Industrial Applications: Specifying and Programming the Steam Boiler Control (J.-R. </title> <editor> Abrial, E. Borger, and H. Langmaack, eds.), </editor> <volume> no. </volume> <booktitle> 1165 in LNCS, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Efficiency on the other hand can be encoded by fairness constraints. We show how to determine the least restrictive class of safe controllers, within which one should look for the controllers that satisfy the fairness requirements. 2 The second example is the steam boiler benchmark problem <ref> [29] </ref>. Here the plant itself is hybrid, a continuous process (the level of water in the boiler) is to be controlled using discrete controls (pumps being switched on and off). <p> expensive computationally, as it would require construction of the automata that accept the languages and complementation of one of them. 5 The Steam Boiler 5.1 Problem Description Our analysis of the steam boiler problem is based on the description given in [36], which is simpler than the original specification of <ref> [29] </ref> in that the effect of faults on the system is not considered. The steam boiler consists of a tank containing water and a heating element that causes the water to boil and escape as steam.
Reference: [30] <author> A. Deshpande, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1994. </year> <month> 26 </month>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature in various forms ([2, 3, 12]). The model we consider will be similar to models used primarily in model checking (in particular the ones in <ref> [30] </ref> and [31]). We will take a more input/output approach, along the lines of the reactive module paradigm [32]. For an overview of hybrid models from a dynamical systems perspective see [15].
Reference: [31] <author> A. Puri, </author> <title> Theory of Hybrid Systems and Discrete Event Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature in various forms ([2, 3, 12]). The model we consider will be similar to models used primarily in model checking (in particular the ones in [30] and <ref> [31] </ref>). We will take a more input/output approach, along the lines of the reactive module paradigm [32]. For an overview of hybrid models from a dynamical systems perspective see [15]. A hybrid automaton is a dynamical system which determines the evolution and interaction of a finite collection of variables. <p> In the set up of [35], uncontrollable events are given "priority" over controllable ones, in the sense that they can always take place independent of the action of the controller. To capture this effect (and motivated by a discussion in <ref> [31] </ref>) we assume that the evolution of the system takes place in rounds where a controllable event is followed by an uncontrollable one.
Reference: [32] <author> R. Alur and T. Henzinger, </author> <title> "Reactive modules," </title> <booktitle> in Proceedings of the 11th Annual Symposium on Logic in Computer Science, </booktitle> <pages> pp. 207-218, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: The model we consider will be similar to models used primarily in model checking (in particular the ones in [30] and [31]). We will take a more input/output approach, along the lines of the reactive module paradigm <ref> [32] </ref>. For an overview of hybrid models from a dynamical systems perspective see [15]. A hybrid automaton is a dynamical system which determines the evolution and interaction of a finite collection of variables.
Reference: [33] <author> A. L. Schwartz, </author> <title> Theory and Implementation of Numerical Methods Based on Runge-Kutta Integration for Solving Optimal Control Problems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: Fortunately, in the examples considered here (as well as the ones [27, 26]) a solution can be obtained analytically, or using simple numerical calculations. In general, sophisticated optimal control tools <ref> [33] </ref> can make the solution of more general problems feasible, at least numerically. Two special cases of the above algorithm deserve explicit mention. The first is the case where there is no disturbance. The algorithm then calls for the solution to a pair of optimal control problems (rather than games).
Reference: [34] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "Optimal control approach to multiagent, hierarchical system verification," </title> <booktitle> in IFAC World Congress, </booktitle> <year> 1996. </year>
Reference-contexts: The verification problem reduces to a pair of optimal control problems. For further discussion of this special case the reader is referred to <ref> [34] </ref>. 4 Reachability in Finite Automata 4.1 Problem Description Consider a standard, deterministic finite automaton G = (Q; ; ffi; Q 0 ) where Q is a finite set of states, a finite set of events, ffi : Q fi ! Q a transition relation and Q 0 Q a set
Reference: [35] <author> P. J. G. Ramadge and W. M. Wonham, </author> <title> "The control of discrete event dynamical systems," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. Vol.77, no. 1, </volume> <pages> pp. 81-98, </pages> <year> 1989. </year>
Reference-contexts: Let L (G) denote the string of events (language) generated/accepted by G. Following <ref> [35] </ref> we assume that the set of events is partitioned into two subsets, = u [ c , where the events in c are controllable (in the sense that they can be disabled at will) while the events in u are uncontrollable 4 . <p> As there are no continuous variables, X C ; U C ; Y C and f will be omitted. In the set up of <ref> [35] </ref>, uncontrollable events are given "priority" over controllable ones, in the sense that they can always take place independent of the action of the controller.
Reference: [36] <author> T. A. Henzinger and H. Wong-Toi, </author> <title> "Using HYTECH to synthesize control parameters for a steam boiler," in Formal Methods for Industrial Applications: Specifying and Programming the Steam Boiler Control (J.-R. </title> <editor> Abrial, E. Borger, and H. Langmaack, eds.), </editor> <volume> no. </volume> <booktitle> 1165 in LNCS, </booktitle> <pages> pp. 265-282, </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: However, it is likely to be prohibitively expensive computationally, as it would require construction of the automata that accept the languages and complementation of one of them. 5 The Steam Boiler 5.1 Problem Description Our analysis of the steam boiler problem is based on the description given in <ref> [36] </ref>, which is simpler than the original specification of [29] in that the effect of faults on the system is not considered. The steam boiler consists of a tank containing water and a heating element that causes the water to boil and escape as steam. <p> Here we will use three hybrid automata to describe the system, one for the boiler and one for each of the pumps. The specification of <ref> [36] </ref> also includes a valve that, together with the pumps, can be used to bring the water level to a desirable initial condition before the heating element is turned on and the boiling starts. <p> Following <ref> [36] </ref> the dynamics are given by: f B (x B ; u B ) = _p 1 + _p 2 r # [ u B 2 U B 12 Note that the set E does not allow any discrete jumps of the state.
Reference: [37] <author> C. S. Hynes and L. Sherry, </author> <title> "Synthesis from design requirements of a hybrid system for transport aircraft longitudinal control." </title> <type> preprint, </type> <institution> NASA Ames Research Center, </institution> <year> 1996. </year>
Reference-contexts: Safe control laws do not exist if W &gt; P 1 + P 2 . 6 Flight Vehicle Management Systems The flight vehicle management system (FVMS) example is based on the dynamic aircraft equations and the design specification of <ref> [37] </ref>. The equations model the speed and the flight path angle dynamics of a commercial aircraft in still air. The control inputs to the equations are the thrust T, accessed through the engine throttle, and the pitch angle , accessed through the elevators. <p> Safety regulations for the aircraft dictate that V and fl must remain within specified limits: for ease of presentation we simplify this safety envelope, S, of <ref> [37] </ref> to S = f (V; fl)j (V min V V max ) " (fl min fl fl max )g (17) where V min ; V max ; fl min ; fl max are constant values.
Reference: [38] <author> C. Tomlin, S. Sastry, and R. Montgomery, </author> <title> "Computing safe sets using the Hamilton-Jacobi equation." </title> <note> (to be published), </note> <year> 1997. </year>
Reference-contexts: In this example, the abnormal extremal was not complicated enough to cause difficulties in the construction; the general situation is considered in <ref> [38] </ref>. Repeat this calculation for the remaining three boundaries. Only fx 2 Sjl 3 1 (x) = 0g contains a point at which H fl 1 (x) vanishes.
References-found: 38

