URL: http://www.ai.mit.edu/people/unamay/papers/eurogp.final.ps
Refering-URL: http://www.ai.mit.edu/people/unamay/papers.html
Root-URL: 
Phone: 2  
Title: Where Does the Good Stuff Go, and Why? How contextual semantics influences program structure in
Author: David E. Goldberg and Una-May O'Reilly 
Address: IL, USA, 61801  MA, USA, 02139  
Affiliation: 1 University of Illinois at Urbana-Champaign,  Massachusetts Institute of Technology,  
Abstract: Using deliberately designed primitive sets, we investigate the relationship between context-based expression mechanisms and the size, height and density of genetic program trees during the evolutionary process. We show that contextual semantics influence the composition, location and flows of operative code in a program. In detail we analyze these dynamics and discuss the impact of our findings on micro-level descriptions of genetic programming.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: 1 Introduction Genetic programmers look at work in genetic algorithms (GAs, <ref> [1] </ref>) with an odd mixture of scorn and envy. The scorn is born of the knowledge that genetic algo-rithmists limit themselves|often times needlessly|to somewhat impoverished and sometimes inadequate codings of the problem at hand.
Reference: 2. <author> J. R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: The scorn is born of the knowledge that genetic algo-rithmists limit themselves|often times needlessly|to somewhat impoverished and sometimes inadequate codings of the problem at hand. The envy is born of the knowledge that genetic programming (GP, <ref> [2] </ref>) practitioners have less theory than their GA counterparts have to help them size their populations, code and analyze their problems, choose their operator probabilities, and otherwise intelligently make the myriad implementation decisions that every GP practitioner must make.
Reference: 3. <author> Una-May O'Reilly and David E. Goldberg. </author> <title> The impact of fitness structure on sub-solution acquisition. </title> <type> Technical report, </type> <institution> University of Illinois, Urbana-Champaign, Illinois, </institution> <month> February </month> <year> 1998. </year> <note> Available via ftp from the Illigal WWW site. </note>
Reference-contexts: Consider other expression mechanisms or extend the taxonomy of transfor mational expression mechanisms as defined in this paper. Study spatial structure in problems with non-linear fitness structures. Investigate the relationship between fitness salience and temporal discovery in both independent and nonlinear settings. (For example, see <ref> [3] </ref>). Consider what has been called the decision-making question, particularly the relationship between GP population sizing and solution accuracy, in a manner akin to GAs ([4, 20]).
Reference: 4. <author> D. E. Goldberg, K. Deb, and J. Clark. </author> <title> Genetic algorithms, noise, and the sizing of populations. </title> <journal> Complex Systems, </journal> <volume> 6 </volume> <pages> 333-3624, </pages> <year> 1992. </year>
Reference: 5. <author> D. E. Goldberg, B. Korb, and K. Deb. </author> <title> Messy genetic algorithms: Motivation, analysis and first results. </title> <journal> Complex Systems, </journal> <volume> 4 </volume> <pages> 415-444, </pages> <year> 1989. </year>
Reference: 6. <author> D. H. Ackley. </author> <title> Stochastic iterated genetic hill-climbing. </title> <type> Technical Report CMU-CS-87-107, </type> <institution> Carnegie-Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1987. </year>
Reference: 7. <author> Nicholas Freitag McPhee and Justin Darwin Miller. </author> <title> Accurate replication in genetic programming. </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 303-309, </pages> <address> Pittsburgh, PA, USA, 15-19 July 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: 8. <author> Peter Nordin, Frank Francone, and Wolfgang Banzhaf. </author> <title> Explicitly defined introns and destructive crossover in genetic programming. </title> <editor> In Peter J. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 6, </booktitle> <pages> pages 111-134. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1996. </year>
Reference: 9. <author> W. A. Tackett. </author> <title> Recombination, Selection, and the Genetic Construction of Com--puter Programs. </title> <type> PhD thesis, </type> <institution> University of Southern California, Department of Electrical Engineering Systems, </institution> <year> 1994. </year>
Reference: 10. <author> Justinian P. Rosca and Dana H. Ballard. </author> <title> Complexity drift in evolutionary computation with tree representations. </title> <type> Technical Report NRL5, </type> <institution> University of Rochester, Computer Science Department, Rochester, </institution> <address> NY, USA, </address> <month> December </month> <year> 1996. </year>
Reference: 11. <author> David Andre and Astro Teller. </author> <title> A study in program response and the negative effects of introns in genetic programming. </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 12-20, </pages> <address> Stanford University, CA, USA, 28-31 July 1996. </address> <publisher> MIT Press. </publisher>
Reference: 12. <author> Justinian Rosca and Dana H. Ballard. </author> <title> Causality in genetic programming. </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 256-263, </pages> <address> Pittsburgh, PA, USA, 15-19 July 1995. </address> <publisher> Mor-gan Kaufmann. </publisher>
Reference: 13. <author> Justinian Rosca. </author> <title> Generality versus size in genetic programming. </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 381-387, </pages> <address> Stanford University, CA, USA, 28-31 July 1996. </address> <publisher> MIT Press. </publisher>
Reference-contexts: This rooted subtree provides an evaluation context for the lower part of the program tree. There are competitions between schemas of equal order and different shapes or within a schema (same order and shape). Schemas "grow" downwards extending the ends of a program tree. In <ref> [13] </ref>, given assumptions of mostly full trees and the often-used 90 : 10 node to leaf crossover point selection bias, with simple calculations it is shown that the expected height of subtrees swapped by crossover approximately equals two.
Reference: 14. <author> Justinian Rosca. </author> <title> Analysis of complexity drift in genetic programming. </title> <editor> In John R. Koza, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max Garzon, Hitoshi Iba, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <month> 28-31 July </month> <year> 1997. </year>
Reference: 15. <author> Terence Soule and James A. Foster. </author> <title> Code size and depth flows in genetic programming. </title> <editor> In John R. Koza, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max Garzon, Hitoshi Iba, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 313-320, </pages> <address> Stanford University, CA, USA, 13-16 July 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Collectively, the search process is a competition among progressively larger, fitter rooted-tree schemas (growing downward) and exploration of their combinations with smaller subtrees cut from lower branches. Soule and Foster in <ref> [15] </ref> did an interesting experimental study of program size and depth flows. It was to understand bloat as well as to examine the relative flow rates of program depth and program size in order to estimate program density. <p> As shown by Equation 3 less dense programs imply that relatively larger sections of code will be involved in the crossover operations, with potentially large repercussions for the evolutionary process. 3 <ref> [15] </ref> So, while explanations of behaviour under the assumptions of almost full trees may be correct, these assumptions do not always hold. Currently, there is a gap in current explanations of GP for the cases where programs are not almost full.
Reference: 16. <author> D. E. Goldberg. </author> <title> Making genetic algorithms fly: A lesson from the wright brothers. Advanced Technology for Developers, </title> <booktitle> 2 </booktitle> <pages> 1-8, </pages> <year> 1993. </year>
Reference: 17. <author> D. E. Goldberg. </author> <title> Toward a mechanics of conceptual machines: </title> <booktitle> Developments in theoretical and applied mechanics. In Proceedings of the Eighteenth Southeastern Conference on Theoretical and Applied Mechanics, </booktitle> <volume> volume 18, </volume> <year> 1996. </year>
Reference: 18. <author> D. E. Goldberg, K. Deb, and B. Korb. </author> <title> Messy genetic algorithms revisited: Studies in mixed size and scale. </title> <journal> Complex Systems, </journal> <volume> 4 </volume> <pages> 415-444, </pages> <year> 1990. </year>
Reference: 19. <author> J. Horn and D. E. Goldberg. </author> <title> Genetic algorithm difficulty and the modality of fitness landscapes. </title> <editor> In L. D. Whitley and M. D. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms, volume 3, </booktitle> <address> San Mateo, CA, </address> <year> 1995. </year> <note> Morgan Kaufmann. (To appear). </note>
Reference-contexts: A well-read GA follower will recognize that the task we cite is the GP version of the standard GA workhorse: the Max-Ones problem (e.g. <ref> [19] </ref>). We shall use it with a uniform fitness structure. For each different X i it outputs, a program is awarded a unit.
Reference: 20. <author> G. Harik, E. Cantuu-Paz, D.E. Goldberg, and B.L. Miller. </author> <title> The gambler's ruin problem, genetic algorithms, and the sizing of populations. </title>
Reference: 21. <author> D. E. Goldberg, K. Deb, and D. Thierens. </author> <title> Toward a better understanding of mixing in genetic algorithms. </title> <journal> Journal of the Society of Instrument and Control Engineers, </journal> <volume> 32(1) </volume> <pages> 10-16, </pages> <year> 1993. </year>
Reference: 22. <author> D. Thierens and D. E. Goldberg. </author> <title> Mixing in genetic algorithms. </title> <editor> In S. Forrest, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: 23. <author> D. Thierens. </author> <title> Analysis and design of genetic algorithms. </title> <type> PhD thesis, </type> <institution> Katholieke Universiteit Leuven, </institution> <year> 1995. </year>
Reference: 24. <author> D. E. Goldberg, K. Deb, H. Kargupta, and G. Harik. </author> <title> Rapid, accurate optimization of difficult problems using fast messy genetic algorithms. </title> <editor> In S. Forrest, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 56-64, </pages> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: 25. <author> G. Harik. </author> <title> Learning gene linkage to efficiently solve problems of bounded difficulty using genetic algorithms. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1997. </year> <note> Unpublished doctoral dissertation (also IlliGAL 97005). </note>
Reference: 26. <author> H. Kargupta. </author> <title> Search, evolution, and the gene expression messy genetic algorithm. </title> <type> Technical Report Unclassified Report LA-UR 96-60, </type> <institution> Los Alamos National Laboratory, </institution> <address> Los Alamos, NM, </address> <year> 1996. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
References-found: 26

