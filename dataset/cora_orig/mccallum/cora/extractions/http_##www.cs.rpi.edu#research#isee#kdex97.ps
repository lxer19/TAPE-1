URL: http://www.cs.rpi.edu/research/isee/kdex97.ps
Refering-URL: http://www.cs.rpi.edu/research/isee/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fsibel,bufic,temtanayg@cs.rpi.edu  
Title: Integrated Search Engine  
Author: Sibel Adal, Corey Bufi and Yaowadee Temtanapat 
Address: Troy, NY 12180  
Affiliation: Department of Computer Science Rensselaer Polytechnic Institute  
Abstract: 1 Searching for information has become an important part of the Internet life. New and more powerful search engines are being built everyday for public use. Even though the combined power of these engines are far more advanced than their past alternatives, an average user does not seem to be benefiting fully from the state-of-the-art of search technologies. In this paper, we develop an integrated search engine architecture called I.SEE (Integrated SEarch Engine) that combines the capabilities of search engines. I.SEE facilitates construction of complex search queries with the help of a uniform interface, transforms the queries by relaxing them when necessary to queries that can be supported by search engines, translates relaxed queries to the specific query language syntax used by different systems and executes multiple search requests in parallel to improve query response time. I.SEE is a flexible and extensible system that adapts to the changes in the search engines and provides users with customization options for developing specialized query interfaces. A current version of the system is available at: www.cs.rpi.edu/research/isee/ 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Adal, K.S. Candan, Y. Papakonstantinou and V.S. Subrahmanian. </author> <title> "Query Caching and Optimization in Distributed Mediator Systems", </title> <booktitle> Proc. of the 1996 Sigmod Conference on Management of Data, </booktitle> <pages> pp. 137 - 148. </pages>
Reference-contexts: We have also shown that this interface can be easily customized and updated to adapt to the frequently changing access methods while still allowing users to consult a number of different systems and improve query execution time. Integration of information from heterogeneous sources has been studied by many researchers <ref> [1, 2, 4, 12, 15, 18] </ref>. Using view definitions to rewrite queries have been discussed as a means of finding relevant information sources [3, 9, 13, 17]. Query relaxation in this context has not been addressed in great detail.
Reference: [2] <author> S. Adal and R. Emery. </author> <title> "A Uniform Framework For Integrating Knowledge In Heterogeneous Knowledge Systems", </title> <booktitle> Proc. of the Eleventh International Conference on Data Engineering, </booktitle> <pages> pp. 513 - 520. 146 </pages>
Reference-contexts: We have also shown that this interface can be easily customized and updated to adapt to the frequently changing access methods while still allowing users to consult a number of different systems and improve query execution time. Integration of information from heterogeneous sources has been studied by many researchers <ref> [1, 2, 4, 12, 15, 18] </ref>. Using view definitions to rewrite queries have been discussed as a means of finding relevant information sources [3, 9, 13, 17]. Query relaxation in this context has not been addressed in great detail.
Reference: [3] <author> S. Adal and X. Qian. </author> <title> "Using Views to Answer Queries with Contraction and Relaxation Options", </title> <note> submitted for publication. </note>
Reference-contexts: We reduce the problem of finding maximal relaxations to rewriting queries using views. This problem has been addressed by many researchers [9, 13, 17] in the database literature because of its applicability to integration of information. Our algorithm uses the methods developed in <ref> [3, 17] </ref> since these are the only known methods that systematically generate all possible rewritings (equivalent, contracted and relaxed) of a query in the presence of constraints. However, any other method with the desired properties can be used for our purposes. <p> Integration of information from heterogeneous sources has been studied by many researchers [1, 2, 4, 12, 15, 18]. Using view definitions to rewrite queries have been discussed as a means of finding relevant information sources <ref> [3, 9, 13, 17] </ref>. Query relaxation in this context has not been addressed in great detail. The work of Chu and of Marcus and Subrahmanian are exceptions to this rule. In [5, 14], authors establish a framework for defining suitable substitutions for an object based on a measure of similarity.
Reference: [4] <author> Y. Arens, C.Y. Chee, C.-N. Hsu, </author> <title> C.A. Knoblock. "Re trieving and integrating data from multiple information sources", </title> <journal> International Journal of Intelligent and Cooperative Information Systems. </journal> <volume> Vol. 2, No. 2., </volume> <pages> pp. 127-158. </pages>
Reference-contexts: We have also shown that this interface can be easily customized and updated to adapt to the frequently changing access methods while still allowing users to consult a number of different systems and improve query execution time. Integration of information from heterogeneous sources has been studied by many researchers <ref> [1, 2, 4, 12, 15, 18] </ref>. Using view definitions to rewrite queries have been discussed as a means of finding relevant information sources [3, 9, 13, 17]. Query relaxation in this context has not been addressed in great detail.
Reference: [5] <author> A. Brink, S. Marcus and V.S. Subrahmanian. </author> <title> "Het erogeneous Multimedia Reasoning", </title> <journal> IEEE Computer, </journal> <volume> 28, 9, </volume> <pages> pps 33-39, </pages> <month> Sep. </month> <year> 1995. </year>
Reference-contexts: Using view definitions to rewrite queries have been discussed as a means of finding relevant information sources [3, 9, 13, 17]. Query relaxation in this context has not been addressed in great detail. The work of Chu and of Marcus and Subrahmanian are exceptions to this rule. In <ref> [5, 14] </ref>, authors establish a framework for defining suitable substitutions for an object based on a measure of similarity. The CoBase system [7, 8] provides explicit operators that will allow the users to specify when and how queries should be relaxed.
Reference: [6] <author> P. Buneman, S. Davidson, G. Hillebrand and D. Su ciu. </author> <title> "Query Language and Optimization Techniques for Unstructured Data", </title> <type> Technical Report MS-CIS-96-09, </type> <institution> CIS Department, University of Pennsylvania. </institution> <note> An extended abstract of this work appears in SIG-MOD Proceedings, </note> <year> 1996. </year>
Reference-contexts: For this reason, MetaCrawler is more of a search engine than an integrated interface. The need for a standard of meta-search engines is discussed in [10]. Future research directions include the construction and relaxation of structured and complex queries <ref> [6] </ref> and developing flexible lattice structures and relaxation schemes. Detailed design and implementation of customization services and automated construction of preference lattices for large structures such as the category attribute are other important research items in our agenda.
Reference: [7] <author> Wesley W. Chu, Hua Yang, Kuorong Chiang, Michael Minock, Gladys Chow, and Chris Larson. </author> <month> "CoBase: </month>
Reference-contexts: Query relaxation in this context has not been addressed in great detail. The work of Chu and of Marcus and Subrahmanian are exceptions to this rule. In [5, 14], authors establish a framework for defining suitable substitutions for an object based on a measure of similarity. The CoBase system <ref> [7, 8] </ref> provides explicit operators that will allow the users to specify when and how queries should be relaxed. The CoBase system uses type abstraction hierarchies similar to the attribute preference lattices in our system as its knowledge base.
References-found: 7

