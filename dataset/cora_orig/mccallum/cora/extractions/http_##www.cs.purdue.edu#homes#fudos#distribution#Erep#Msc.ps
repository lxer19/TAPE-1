URL: http://www.cs.purdue.edu/homes/fudos/distribution/Erep/Msc.ps
Refering-URL: http://www.cs.purdue.edu/people/fudos/
Root-URL: http://www.cs.purdue.edu
Title: EDITABLE REPRESENTATIONS FOR 2D GEOMETRIC DESIGN  
Author: by Ioannis Fudos 
Degree: A Thesis Submitted to the Faculty of  In Partial Fulfillment of the Requirements for the Degree of Master of Science  
Date: December 1993  
Affiliation: Purdue University  
Abstract-found: 0
Intro-found: 1
Reference: <institution> 71 BIBLIOGRAPHY </institution>
Reference: [Ald88] <author> B. Aldefeld. </author> <title> Variation of geometries based on a geometric-reasoning method. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 20(3) </volume> <pages> 117-126, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: This method can be proved to confirm theorems that are provable under the system of axioms given, the rules for determining automatically the desired unique solution are not discussed in these papers. A system based on this method was implemented in Prolog. Aldefeld in <ref> [Ald88] </ref> uses a forward chaining inference mechanism, the notion of direction of lines is imposed with additional rules, restricting the number of solutions. A similar method is presented in [SAK90], where handling of overconstrained and underconstrained cases is given special consideration.
Reference: [BA91] <author> Inc Brown Associates. </author> <title> Conceptual Design: Tradeoffs in Performance and Flexibility. </title> <booktitle> Notes on the design of Pro/ENGINEER, </booktitle> <year> 1991. </year>
Reference-contexts: In PIGMOD and Roller's system it seems that the levels of abstraction provided by the systems make the user view the underlying constructive representations as declarative. 4 For the pure approach where the user does not impose any order the terms variational declarative or simply variational have been employed <ref> [BA91, HJ93] </ref>. The idea of using constraints for determining a sketch was first used in Sketchpad [Sut63a], and it remains very attractive because of its simplicity from the viewpoint of the user. <p> To succeed this, various propagation techniques have been used, but none of them guarantees to derive a solution or to has a reasonable worst case running time. For a review of these methods see [Soh91]. Sketchpad [Sut63a] uses propagation of degrees of freedom and propagation of known values. Pro/ENGINEER <ref> [BA91, Pro] </ref> uses propagation of known values. Propagation of known values is the inverse process of propagation of degrees of freedom, both methods are global, unstable and do not work for cyclic dimensioned sketches. <p> As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER <ref> [BA91, Pro] </ref>, Sketchpad [Sut63a, Sut63b], ThingLab [FBMB90, Bor81], and Magritte [Gos83].
Reference: [Bar87] <author> L. A. Barford. </author> <title> A Graphical, Language-Based Editor for Generic Solid Models Represented by Constraints. </title> <type> PhD thesis, </type> <institution> Dept of Computer Science, Cornell University, </institution> <month> March </month> <year> 1987. </year> <type> TR 87-813. </type>
Reference-contexts: Sketchpad, described in [Sut63a] was the first system to use the method of relaxation as an alternative, relaxation is a slow but quite general method. Many systems like ThingLab [Bor81] and Magritte [Gos83] kept the relaxation as an alternative to other methods. In <ref> [Bar87] </ref> a method called projection method is presented for finding a new solution that minimizes the Euclidean distance between the old and the new solution.
Reference: [BMMW89] <author> A. Borning, M. Maher, A. Martindale, and M. Wilson. </author> <title> Constraint Hierarchies and Logic Programming. </title> <booktitle> In Proc. of the 6th International Logig Programming Conference, </booktitle> <pages> pages 149-164, </pages> <year> 1989. </year>
Reference-contexts: This applied has been applied in PRESS, a program for algebraic manipulation. Much of the recent research on general-purpose languages with constraints has used logic programming as a base. The research in Constraint Logic Programming (CLP) Languages has some interesting results to exhibit. In <ref> [BMMW89] </ref> a scheme called CLP (D) is described for CLP languages, which is parameterized by D, the domain of constraints. In place of unification, constraints are accumulated and tested for satisfiability over D, using techniques appropriate for the domain. <p> More research is needed in this area, we could have a hierarchy of constraints (like the one presented in <ref> [BMMW89] </ref>), where the explicit constraints override the implicit constraints. 12 2.
Reference: [Bor81] <author> A. H. Borning. </author> <title> The programming language aspects of ThingLab, a constraint oriented simulation laboratory. </title> <journal> ACM TOPLAS, </journal> <volume> 3(4) </volume> <pages> 353-387, </pages> <year> 1981. </year>
Reference-contexts: This fact emphasizes the need for further research in the area of numerical constraint solvers. Sketchpad, described in [Sut63a] was the first system to use the method of relaxation as an alternative, relaxation is a slow but quite general method. Many systems like ThingLab <ref> [Bor81] </ref> and Magritte [Gos83] kept the relaxation as an alternative to other methods. In [Bar87] a method called projection method is presented for finding a new solution that minimizes the Euclidean distance between the old and the new solution. <p> In general, retraction is faster but less powerful than propagation of known values. ThingLab uses the Blue and Delta Blue algorithms described in <ref> [FBMB90, Bor81] </ref>, they are faster than other algorithms because they are based on a local propagation of degrees of freedom within the constraint graph, the Delta Blue algorithm is just an incremental version of the Blue algorithm where the constraint graph need not be recomputed from scratch with each removal or <p> As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER [BA91, Pro], Sketchpad [Sut63a, Sut63b], ThingLab <ref> [FBMB90, Bor81] </ref>, and Magritte [Gos83].
Reference: [Bru86] <author> Beat Bruderlin. </author> <title> Constructing Three-Dimensional Geometric Objects Defined by Constraints. </title> <booktitle> In Workshop on Interactive 3D Graphics, </booktitle> <pages> pages 111-129. </pages> <publisher> ACM, </publisher> <month> October 23-24 </month> <year> 1986. </year>
Reference-contexts: A method that guarantees termination, ruler and compass completeness and uniqueness using the Knuth-Bendix critical pair algorithm is presented in <ref> [Bru86, Soh91] </ref>. This method can be proved to confirm theorems that are provable under the system of axioms given, the rules for determining automatically the desired unique solution are not discussed in these papers. A system based on this method was implemented in Prolog.
Reference: [Buc85] <author> B. </author> <title> Buchberger. Grobner Bases : An Algorithmic Method in Polynomial Ideal Theory. </title> <editor> In N. K. Bose, editor, </editor> <booktitle> Multidimensional Systems Theory, </booktitle> <pages> pages 184-232. </pages> <address> D. </address> <publisher> Reidel Publishing Company, </publisher> <year> 1985. </year>
Reference-contexts: for solving a considerable class of configurations and we can tell when something is solvable or not in almost linear time. 1.2.4 Symbolic constraint solvers Here the constraints are again transformed to a system of algebraic equations that is solved with methods known from algebraic manipulation, such as Grobner's basis <ref> [Buc85] </ref> or Wu's method [Wen86]. Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and [Kap88]. <p> Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and [Kap88]. Kondo in [Kon92] deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm <ref> [Buc85] </ref> to derive a polynomial that shows the relationship between the deleted and added constraints. We don't know any other sketching system using symbolic methods for constraint solving. 1.2.5 Solvers using hybrid methods The existing constraints solvers usually use a combination of the above methods. <p> Such constructions are done by precomputing a normal form of the system 43 from which to the unknowns are easier to find. Preprocessing can be done using Grobner bases; for example see, <ref> [Buc85] </ref>. 3.2.4 Graph transformations The scope of the basic solver can be extended by certain graph transformations. For example, when two angle constraints ff and fi are given between three lines, then a third angle constraint can be added requiring an angle of 180 ffi ff fi.
Reference: [BW81] <author> Alan Bundy and Bob Welham. </author> <title> Using Meta-level Inference for Selective Application of Multiple Rewrite Rule Sets in Algebraic Manipulation. </title> <journal> Artificial Intelligence, </journal> <volume> 16 </volume> <pages> 189-212, </pages> <year> 1981. </year>
Reference-contexts: A recent detailed work describing a complete set of rules for 2D design can be found in [VSR92], in this work the scope of the particular set of rules is characterized. Finally, a technique called Meta-level Inference is introduced in <ref> [BW81] </ref>, this approach combined with multiple sets of rules and selective application is said to cut down on search. This applied has been applied in PRESS, a program for algebraic manipulation. Much of the recent research on general-purpose languages with constraints has used logic programming as a base.
Reference: [Cap93] <author> Vasilis S. Capoyleas. </author> <type> Personal Communication. </type> <institution> NYU, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: In addition we may give a cyclic ordering specifying how to connect the points to obtain the polygon. This additional requirement makes the problem NP-complete. More specifically the following holds : Theorem <ref> [Cap93] </ref>: Given n points in the plane that are well constrained by 2n3 point-point distances, and a cyclical ordering specifying how to connect the points to obtain a polygon.
Reference: [CFV88] <author> U. Cugini, F. Folini, and I. Vicini. </author> <title> A procedural system for the definition and storage of technical drawings in parametric form. </title> <editor> In D. A. Duce and P. Jancene, editors, </editor> <volume> Eurographics '88, </volume> <pages> pages 183-196. </pages> <publisher> Eurographics Association, Elsevier Science Publishers B.V. (North Holland), </publisher> <year> 1988. </year> <month> 72 </month>
Reference-contexts: In [Mac77] a class of algorithms is discussed for discovering a situation that satisfies a set of simultaneous constraints. This method has never been used in the context of geometric modeling. The GIPS system described in <ref> [CFV88] </ref>, is using macros, that is family of objects, where to define an object the user must supply the values for a number of predefined constraints. How the overall placement of object is made is not discussed.
Reference: [Cho87] <author> Shang-Ching Chou. </author> <title> A Method for the Mechanical Derivation of Formulas in Elementary Geometry. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 3 </volume> <pages> 291-299, </pages> <year> 1987. </year>
Reference-contexts: Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], <ref> [Cho88, CS86, Cho87] </ref> and [Kap88]. Kondo in [Kon92] deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [Cho88] <author> Shang-Ching Chou. </author> <title> An Introduction to Wu's Method for Mechanical Theorem Proving in Geometry. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 4 </volume> <pages> 237-267, </pages> <year> 1988. </year>
Reference-contexts: Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], <ref> [Cho88, CS86, Cho87] </ref> and [Kap88]. Kondo in [Kon92] deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [Coh90] <author> Jacques Cohen. </author> <title> Constraint Logic Programming Languages. </title> <journal> Communications of the ACM, </journal> <volume> 33(7) </volume> <pages> 52-68, </pages> <year> 1990. </year>
Reference-contexts: In place of unification, constraints are accumulated and tested for satisfiability over D, using techniques appropriate for the domain. In this work a scheme for Hierarchical CLP languages is also introduced. A review of CLP languages can be found in <ref> [Coh90] </ref>. The other constructive approach has two phases, during the first phase the graph of constraints is analyzed and a sequence of construction steps is derived, during the second phase these construction steps are followed to derive the geometries. We call this approach graph-constructive solving.
Reference: [CS86] <author> Shang-Ching Chou and William Schelter. </author> <title> Proving Geometry Theorems with Rewrite Rules. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 2 </volume> <pages> 253-273, </pages> <year> 1986. </year>
Reference-contexts: Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], <ref> [Cho88, CS86, Cho87] </ref> and [Kap88]. Kondo in [Kon92] deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [D-C93] <institution> D-Cubed Ltd, </institution> <address> 68 Castle Street, Cambridge, CB3 0AJ, England. </address> <booktitle> The Dimensional Constraint Manager, </booktitle> <month> May </month> <year> 1993. </year> <note> Version 2.5. </note>
Reference-contexts: Todd in [Tod89] first generalized the dimension trees of Requicha. Owen in [Owe91] presents an extension of this principle to include circularly dimensioned sketches and DCM <ref> [D-C93] </ref> is a system using this method. 1.2.3 Propagation methods This was the obvious approach in the early constraint solving systems. <p> They try one method if it does not succeed then they try another one, the problem is that some methods may take exponential time for giving a negative response. As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM <ref> [D-C93] </ref>, Pro/ENGINEER [BA91, Pro], Sketchpad [Sut63a, Sut63b], ThingLab [FBMB90, Bor81], and Magritte [Gos83]. <p> For example, if we have 12 geometries, we will have 1024 solutions in average. * DCM <ref> [D-C93] </ref>, has introduced a move button , that has the purpose of moving a part of the design relative to the rest of it. This button can be used for implicitly affecting some the solution choices, by changing the relative position of the geometries.
Reference: [FBMB90] <author> Bjorn N. Freeman-Benson, John Maloney, and Alan Borning. </author> <title> An Incremental Constraint Solver. </title> <journal> CACM, </journal> <volume> 33(1) </volume> <pages> 54-63, </pages> <year> 1990. </year>
Reference-contexts: In general, retraction is faster but less powerful than propagation of known values. ThingLab uses the Blue and Delta Blue algorithms described in <ref> [FBMB90, Bor81] </ref>, they are faster than other algorithms because they are based on a local propagation of degrees of freedom within the constraint graph, the Delta Blue algorithm is just an incremental version of the Blue algorithm where the constraint graph need not be recomputed from scratch with each removal or <p> As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER [BA91, Pro], Sketchpad [Sut63a, Sut63b], ThingLab <ref> [FBMB90, Bor81] </ref>, and Magritte [Gos83].
Reference: [Fit81] <author> W. Fitzerland. </author> <title> Using Axial Dimensions to Determine the Proportions of Line Drawings in Computer Graphics. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 13(6), </volume> <month> November </month> <year> 1981. </year>
Reference-contexts: We call this approach graph-constructive solving. This approach is fast, more methodical and proved to be sound. The problem is that as the repertoire of constraints increases the graph-analyze algorithm needs to be modified. Fitzerald <ref> [Fit81] </ref> follows the approach of dimensioned trees by Requicha [Req77], only horizontal and vertical distances are allowed in this method and it was useful for simple engineering drawings. Todd in [Tod89] first generalized the dimension trees of Requicha.
Reference: [Fuq87] <author> T. W. Fuqua. </author> <title> Constraint Kernels : Constraints and Dependencies in a Geometric Modeling System. </title> <type> Master's thesis, </type> <institution> The University of Utah, </institution> <month> August </month> <year> 1987. </year>
Reference-contexts: The algorithm presented in [Wil91] has a better conflict detection that is based on information, provided explicitly by the user. Magritte [Gos83] employs a propagation method to transform the undirected constraint graph and then breadth first search is used to derive all solutions. Constraint Kernels, a system described in <ref> [Fuq87] </ref> uses a somewhat different approach, it transforms the original undirected graph to a directed acyclic dependency graph. 9 Actually the Constructive Constraint Solvers is a subcase of this method (fixed geometries for constants and variable geometries for variables), that has the advantage that we can derive almost linear algorithms, for
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability. </title> <editor> W. H. </editor> <publisher> Freeman and Co., </publisher> <year> 1979. </year>
Reference: [Gos83] <author> J. Gosling. </author> <title> Algebraic Constraints. </title> <type> Technical Report CMU-CS-83-132, CMU, </type> <year> 1983. </year>
Reference-contexts: This fact emphasizes the need for further research in the area of numerical constraint solvers. Sketchpad, described in [Sut63a] was the first system to use the method of relaxation as an alternative, relaxation is a slow but quite general method. Many systems like ThingLab [Bor81] and Magritte <ref> [Gos83] </ref> kept the relaxation as an alternative to other methods. In [Bar87] a method called projection method is presented for finding a new solution that minimizes the Euclidean distance between the old and the new solution. <p> The algorithm presented in [Wil91] has a better conflict detection that is based on information, provided explicitly by the user. Magritte <ref> [Gos83] </ref> employs a propagation method to transform the undirected constraint graph and then breadth first search is used to derive all solutions. <p> As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER [BA91, Pro], Sketchpad [Sut63a, Sut63b], ThingLab [FBMB90, Bor81], and Magritte <ref> [Gos83] </ref>. Some solvers like the one used in Pro/ENGINEER try to isolate a number of reduced sets of core equations that must be solve simultaneously, then for solving these systems they use numerical methods. 10 1.2.6 Other methods The AI community has some interesting work to exhibit.
Reference: [GZS88] <author> D. C. Gossard, R. P. Zuffante, and H. Sakurai. </author> <title> Representing dimensions, tolerances, and features in MCAE systems. </title> <journal> IEEE Computer Graphics & and Applications, </journal> <volume> 8(2) </volume> <pages> 51-59, </pages> <year> 1988. </year>
Reference-contexts: This approach attains all the above goals except the first: the user may be involved in designing parameterized transformations that may be hard to invent and difficult to understand. Another constructive approach is the one described in <ref> [GZS88] </ref>, which is a 3D CSG representation, with the capability of parameterizing the relative placement of the geometric objects using what is called relative position operators. 1.1.3 The declarative approach The declarative approach is characterized by a number of constraints that the user imposes on the sketch.
Reference: [HB78] <author> R. C. Hillyard and I. C. </author> <title> Braid. Analysis of Dimensions and Tolerances in Computer-aided Mechanical Design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 10(3) </volume> <pages> 161-166, </pages> <year> 1978. </year>
Reference-contexts: The idea of using constraints for determining a sketch was first used in Sketchpad [Sut63a], and it remains very attractive because of its simplicity from the viewpoint of the user. Hillyard and Braid <ref> [HB78] </ref> were the first to develop a general theory in which dimensions are used to specify algebraic constraints on the coordinates of vertices of a wire-frame representation.
Reference: [HJ93] <author> C. M. Hoffmann and R. Juan. </author> <title> EREP : An Editable High-Level Representation for Geometric Design and Analysis. </title> <editor> In P. Wilson, M. Wozny, and M. Pratt, editors, </editor> <title> Geometric and Product Modeling. </title> <publisher> North Holland, </publisher> <year> 1993. </year> <month> 73 </month>
Reference-contexts: The traditional Boundary representation (Brep) and Constructive Solid Geometry (CSG) represenation impose major limitations and exhibit unacceptable performance when used in a system that tries to accomplish the above goals. For conclusions regarding the use of CSG and Brep in such systems, the reader may refer to [Woo90], [Rol89a], <ref> [HJ93] </ref>, [Hof92], [Woo88]. One powerful method for constructing three dimensional features is to create a two dimensional sketch and then use a number of standard operations with predefined 2 semantics such as extrusion or sweep. In this work we concentrate on defining an Editable REPresentation for two dimensional sketches. <p> In PIGMOD and Roller's system it seems that the levels of abstraction provided by the systems make the user view the underlying constructive representations as declarative. 4 For the pure approach where the user does not impose any order the terms variational declarative or simply variational have been employed <ref> [BA91, HJ93] </ref>. The idea of using constraints for determining a sketch was first used in Sketchpad [Sut63a], and it remains very attractive because of its simplicity from the viewpoint of the user.
Reference: [Hof82] <author> P. Hoffmann. </author> <title> Analysis of Tolerances and Process Inaccuracies in Discrete Part Manufacturing. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 14(2) </volume> <pages> 83-88, </pages> <year> 1982. </year>
Reference-contexts: A theory for defining tolerance constraints as regions in the vector space spanned by the model's variables was developed in <ref> [Hof82] </ref> and extended in [Tur88]. Another framework that tries to overcome the problems in [Hof82] was introduced in [Req83]. A survey of these attempts can be found in [Jus92]. <p> A theory for defining tolerance constraints as regions in the vector space spanned by the model's variables was developed in <ref> [Hof82] </ref> and extended in [Tur88]. Another framework that tries to overcome the problems in [Hof82] was introduced in [Req83]. A survey of these attempts can be found in [Jus92].
Reference: [Hof92] <author> C. M. Hoffmann. </author> <title> On the Semantics of Generative Geometry Representations. </title> <note> working paper, </note> <year> 1992. </year>
Reference-contexts: For conclusions regarding the use of CSG and Brep in such systems, the reader may refer to [Woo90], [Rol89a], [HJ93], <ref> [Hof92] </ref>, [Woo88]. One powerful method for constructing three dimensional features is to create a two dimensional sketch and then use a number of standard operations with predefined 2 semantics such as extrusion or sweep. In this work we concentrate on defining an Editable REPresentation for two dimensional sketches.
Reference: [Jus92] <author> N. P. Juster. </author> <title> Modelling and representation of dimensions and tolerances : a survey. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(1) </volume> <pages> 3-17, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: A theory for defining tolerance constraints as regions in the vector space spanned by the model's variables was developed in [Hof82] and extended in [Tur88]. Another framework that tries to overcome the problems in [Hof82] was introduced in [Req83]. A survey of these attempts can be found in <ref> [Jus92] </ref>. The declarative approach may capture most of the desired functionality, but it had two major drawbacks: until now, the constraint solving methods used were quite inefficient, and the user had no standard way of editing a solution that was not intuitive.
Reference: [Kap88] <author> Deepak Kapur. </author> <title> A Refutational Approach to Geometry Theorem Proving. </title> <journal> Artificial Intelligence, </journal> <volume> 37 </volume> <pages> 61-93, </pages> <year> 1988. </year>
Reference-contexts: Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and <ref> [Kap88] </ref>. Kondo in [Kon92] deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [Kar72] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In R. E. Miller and J. W. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> pages 85-103. </pages> <publisher> Plenum Press, </publisher> <address> NY, </address> <year> 1972. </year>
Reference-contexts: efficient algorithm even if we restrict the problem in simple cases, like the generalization of the above example: "Given n parallel lines and n parallel distances among them, is there any solution that satisfies them?" 49 We will prove that this problem is NP-complete by reducing the integer partition problem <ref> [Kar72] </ref> to it (since that existential problem is NP-complete the problem of finding the correct solution is obviously at least as hard).
Reference: [Kon90] <author> K. Kondo. PIGMOD: </author> <title> parametric and interactive geometric modeller for mechanical design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 22(10) </volume> <pages> 633-644, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and [Kap88]. Kondo in [Kon92] deals with the addition and deletion of constraints (see also <ref> [Kon90] </ref>), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [Kon92] <author> K. Kondo. </author> <title> Algebraic method for manipulation of dimensional relationships in geometric models. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(3) </volume> <pages> 141-147, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and [Kap88]. Kondo in <ref> [Kon92] </ref> deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [Lel88] <author> Wm Leler. </author> <title> Constraint Programming Languages: Their Specification and Generation. </title> <publisher> Addison Wesley, </publisher> <year> 1988. </year> <note> ISBN 0201062437. </note>
Reference: [LG82] <author> Robert Light and David Gossard. </author> <title> Modification of geometric models through variational geometry. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 14(4) </volume> <pages> 209-214, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: The Newton-Raphson method has been used in various systems, and it proved to be faster that relaxation but it has the problem that it may converge to local minima, for that reason Juno [Nel85] uses as initial state the original sketch. A modification of the Newton-Raphson was developed in <ref> [LG82] </ref>, where an improved way for finding the inverse Jacobi matrix is presented. Furthermore, the idea of dividing the matrix of constraints into submatrices as presented in the same work, has the 6 potential of providing the user with useful information regarding the constraint structure of the sketch.
Reference: [Li88] <author> Jiarong Li. </author> <title> Using algebraic constraints in interactive text and graphics editing. </title> <editor> In D. A. Duce and P. Jancene, editors, </editor> <volume> Eurographics '88, </volume> <pages> pages 197-205. </pages> <publisher> Eurographics Association, Elsevier Science Publishers B.V. (North Holland), </publisher> <year> 1988. </year>
Reference-contexts: CONSTRAINTS [SS80] uses retraction, which is a localized version of propagation of known values, that stores some information for each variable, about the variable's premises and dependents. A similar technique is used in <ref> [Li88] </ref>, where an algorithm for local propagation of known values is given, for the remaining simultaneous constraint solving, a system of linear equations is attempted. In general, retraction is faster but less powerful than propagation of known values.
Reference: [Mac77] <author> Alan Mackworth. </author> <title> Consistency in Networks of Relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 99-119, </pages> <year> 1977. </year>
Reference-contexts: Some solvers like the one used in Pro/ENGINEER try to isolate a number of reduced sets of core equations that must be solve simultaneously, then for solving these systems they use numerical methods. 10 1.2.6 Other methods The AI community has some interesting work to exhibit. In <ref> [Mac77] </ref> a class of algorithms is discussed for discovering a situation that satisfies a set of simultaneous constraints. This method has never been used in the context of geometric modeling.
Reference: [Nel85] <author> G. Nelson. Juno, </author> <title> a costraint-based graphics system. </title> <booktitle> In SIGGRAPH, </booktitle> <pages> pages 235-243, </pages> <address> San Francisco, </address> <month> July 22-26 </month> <year> 1985. </year> <note> ACM. </note>
Reference-contexts: The Newton-Raphson method has been used in various systems, and it proved to be faster that relaxation but it has the problem that it may converge to local minima, for that reason Juno <ref> [Nel85] </ref> uses as initial state the original sketch. A modification of the Newton-Raphson was developed in [LG82], where an improved way for finding the inverse Jacobi matrix is presented.
Reference: [Owe91] <author> J. C. Owen. </author> <title> Algebraic Solution for Geometry from Dimensional Constraints. </title> <booktitle> In ACM Symp. Found. of Solid Modeling, </booktitle> <address> Austin, TX, </address> <pages> pages 397-407. </pages> <publisher> ACM, </publisher> <year> 1991. </year>
Reference-contexts: Fitzerald [Fit81] follows the approach of dimensioned trees by Requicha [Req77], only horizontal and vertical distances are allowed in this method and it was useful for simple engineering drawings. Todd in [Tod89] first generalized the dimension trees of Requicha. Owen in <ref> [Owe91] </ref> presents an extension of this principle to include circularly dimensioned sketches and DCM [D-C93] is a system using this method. 1.2.3 Propagation methods This was the obvious approach in the early constraint solving systems. <p> A similar more complicated example with 2 n3 discrete solutions is presented in <ref> [Owe91] </ref>. In this chapter we will review some commonly used methods for root identification and we will pinpoint their deficiencies, then we will present the method and the interactive framework provided by Erep.
Reference: [Pai93] <author> R. Paige. </author> <title> Apts external specification manual. internal documentation, </title> <booktitle> 1993. </booktitle> <pages> 74 </pages>
Reference-contexts: The sketch has only to be topologically correct. The structure of the constraint solver is shown in figure 2.2. The constraint solver consists of two parts: 14 * A part written in the high level transformational programming system APTS <ref> [Pai93] </ref>, this reads the Erep file and transforms it into a normal form where we have only points, lines, circles, distances and angles.
Reference: [Pro] <author> Pro/ENGINEER. </author> <title> Modeling Users Guide: 2D Sketcher. </title> <publisher> Brown Associates, Inc. Release 8.0. </publisher>
Reference-contexts: To succeed this, various propagation techniques have been used, but none of them guarantees to derive a solution or to has a reasonable worst case running time. For a review of these methods see [Soh91]. Sketchpad [Sut63a] uses propagation of degrees of freedom and propagation of known values. Pro/ENGINEER <ref> [BA91, Pro] </ref> uses propagation of known values. Propagation of known values is the inverse process of propagation of degrees of freedom, both methods are global, unstable and do not work for cyclic dimensioned sketches. <p> As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER <ref> [BA91, Pro] </ref>, Sketchpad [Sut63a, Sut63b], ThingLab [FBMB90, Bor81], and Magritte [Gos83].
Reference: [RBN88] <author> J. R. Rossignac, P. Borrel, and L. R. Nackman. </author> <title> Interactive Design with Sequences of Parameterized Transformations. </title> <type> Technical Report RC 13740 (#61565), </type> <institution> IBM Research Division, T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10598, </address> <year> 1988. </year>
Reference-contexts: Researchers had early realized that this approach could not fulfill the above objectives, and they enhanced this approach with parameterized operations <ref> [RBN88] </ref> or with some kind of constraints [Wyk82]. A complete, purely constructive system based on parameterized operations is MAMOUR described in [RBN88]. <p> Researchers had early realized that this approach could not fulfill the above objectives, and they enhanced this approach with parameterized operations <ref> [RBN88] </ref> or with some kind of constraints [Wyk82]. A complete, purely constructive system based on parameterized operations is MAMOUR described in [RBN88]. This approach attains all the above goals except the first: the user may be involved in designing parameterized transformations that may be hard to invent and difficult to understand.
Reference: [Req77] <author> A. Requicha. Dimensionining and tolerancing. </author> <type> Technical report, </type> <institution> Production Automation Project, University of Rochester, </institution> <month> May </month> <year> 1977. </year> <note> PADL TM-19. </note>
Reference-contexts: We call this approach graph-constructive solving. This approach is fast, more methodical and proved to be sound. The problem is that as the repertoire of constraints increases the graph-analyze algorithm needs to be modified. Fitzerald [Fit81] follows the approach of dimensioned trees by Requicha <ref> [Req77] </ref>, only horizontal and vertical distances are allowed in this method and it was useful for simple engineering drawings. Todd in [Tod89] first generalized the dimension trees of Requicha.
Reference: [Req83] <author> A. A. G. Requicha. </author> <title> Toward a theory of geometric tolerancing. </title> <journal> Int. J. Robot. Res., </journal> <volume> 2(4) </volume> <pages> 45-60, </pages> <year> 1983. </year>
Reference-contexts: A theory for defining tolerance constraints as regions in the vector space spanned by the model's variables was developed in [Hof82] and extended in [Tur88]. Another framework that tries to overcome the problems in [Hof82] was introduced in <ref> [Req83] </ref>. A survey of these attempts can be found in [Jus92].
Reference: [Rol89a] <author> Deiter Roller. </author> <title> Design by Features: An Approach to High Level Shape Manipulations. </title> <booktitle> Computers in Industry, </booktitle> <volume> 12 </volume> <pages> 185-191, </pages> <year> 1989. </year>
Reference-contexts: Design by features is a notion rather than a formally defined process. It means that certain areas have a specific semantic description that makes them capable of being modified or of functioning in a predetermined (but not fixed) way when linked in a certain environment <ref> [Woo90, Rol89a] </ref>. The traditional Boundary representation (Brep) and Constructive Solid Geometry (CSG) represenation impose major limitations and exhibit unacceptable performance when used in a system that tries to accomplish the above goals. <p> The traditional Boundary representation (Brep) and Constructive Solid Geometry (CSG) represenation impose major limitations and exhibit unacceptable performance when used in a system that tries to accomplish the above goals. For conclusions regarding the use of CSG and Brep in such systems, the reader may refer to [Woo90], <ref> [Rol89a] </ref>, [HJ93], [Hof92], [Woo88]. One powerful method for constructing three dimensional features is to create a two dimensional sketch and then use a number of standard operations with predefined 2 semantics such as extrusion or sweep. In this work we concentrate on defining an Editable REPresentation for two dimensional sketches.
Reference: [Rol89b] <author> Dieter Roller. </author> <title> Dimension-Driven geometry in CAD : a Survey. </title> <booktitle> In Theory and Practice of Geometric Modeling, </booktitle> <pages> pages 509-523. </pages> <publisher> Springer Verlag, </publisher> <year> 1989. </year>
Reference-contexts: How the overall placement of object is made is not discussed. We can characterize this method as a hybrid of the constructive and declarative approach. A comparative review of six implemented 2D sketching systems can be found in <ref> [Rol89b] </ref>. 1.3 The repertoire of constraints The repertoire of constraints differs from system to system. There is although a common kernel of constraints that consists of distances and angles. Also the parallel, perpendicular and on constraints are usually being treated as separate constraints for reasons that we will explain later.
Reference: [Rol90] <author> Dieter Roller. </author> <title> A System for Interactive Variation Design. </title> <editor> In M. J. Wozny, J. U. Turner, and K. Preiss, editors, </editor> <booktitle> Geometric Modeling for Product Engineering, </booktitle> <pages> pages 207-219. </pages> <publisher> Elsevier Science Publishers B.V. (North Holland), </publisher> <year> 1990. </year>
Reference-contexts: In this method, the user does not determine how the constraints will be satisfied. In one version of this approach, the user implicitly or explicitly determines an order in which the constraints are to be satisfied [Ros86]. We call that approach parametric declarative or simply parametric. Roller in <ref> [Rol90, Rol91] </ref> describes such a system in which the order that the constraints are satisfied is determined from the design steps made by the user to construct the drawing. In the same system rules are used for determining a unique solution. <p> Another approach is to allow only 11 linear relation between dimensional constraints and use a linear solver for deriving the dimensions before constraint solving. Some systems like Pro/ENGINEER and <ref> [Rol90, Rol91] </ref>, support the notion of implied constraints, for example two lines that are almost perpendicular or parallel are considered to be perpendicular or parallel, without needing the user to impose explicitly this relation.
Reference: [Rol91] <author> Dieter Roller. </author> <title> An approach to computer-aided parametric design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 23(5) </volume> <pages> 385-391, </pages> <year> 1991. </year>
Reference-contexts: In this method, the user does not determine how the constraints will be satisfied. In one version of this approach, the user implicitly or explicitly determines an order in which the constraints are to be satisfied [Ros86]. We call that approach parametric declarative or simply parametric. Roller in <ref> [Rol90, Rol91] </ref> describes such a system in which the order that the constraints are satisfied is determined from the design steps made by the user to construct the drawing. In the same system rules are used for determining a unique solution. <p> Another approach is to allow only 11 linear relation between dimensional constraints and use a linear solver for deriving the dimensions before constraint solving. Some systems like Pro/ENGINEER and <ref> [Rol90, Rol91] </ref>, support the notion of implied constraints, for example two lines that are almost perpendicular or parallel are considered to be perpendicular or parallel, without needing the user to impose explicitly this relation.
Reference: [Ros86] <author> J. R. Rossignac. </author> <title> Constraints in constructive solid geometry. </title> <booktitle> In Workshop on Interactive 3D Graphics, </booktitle> <pages> pages 93-110, </pages> <address> Chapel Hill, NC, Octo-ber 23-24 1986. </address> <publisher> ACM. </publisher>
Reference-contexts: In this method, the user does not determine how the constraints will be satisfied. In one version of this approach, the user implicitly or explicitly determines an order in which the constraints are to be satisfied <ref> [Ros86] </ref>. We call that approach parametric declarative or simply parametric. Roller in [Rol90, Rol91] describes such a system in which the order that the constraints are satisfied is determined from the design steps made by the user to construct the drawing.
Reference: [SAK90] <author> Hirimasa Suzuki, Hidetoshi Ando, and Fumihiko Kimura. </author> <title> Variation of geometries based on a geometric-reasoning method. </title> <journal> Computer & Graphics, </journal> <volume> 14(2) </volume> <pages> 211-224, </pages> <year> 1990. </year>
Reference-contexts: A system based on this method was implemented in Prolog. Aldefeld in [Ald88] uses a forward chaining inference mechanism, the notion of direction of lines is imposed with additional rules, restricting the number of solutions. A similar method is presented in <ref> [SAK90] </ref>, where handling of overconstrained and underconstrained cases is given special consideration. Sunde in [Sun88] uses a similar rule-constructive method but uses different rules for representing directed distance and non directed distance, giving flexibility for dealing with the root selection problem.
Reference: [SKW90] <author> Mark S. Shephard, Elaine V. Korngold, and Rolf Wentorf. </author> <title> Design systems supposrting engineering idealizations. </title> <editor> In M. J. Wozny, J. U. Turner, and K. Preiss, editors, </editor> <booktitle> Geometric Modeling for Product Engineering, </booktitle> <pages> pages 279-300. </pages> <publisher> Elsevier Science Publishers B.V. (North Hol-land), </publisher> <year> 1990. </year>
Reference-contexts: An object can be used in subsequent phases (analysis, robot motion planning, assembly), which implies that information related to the user's intentions has to be preserved (see also <ref> [SKW90] </ref>). The above trend is related to "design by features". Design by features is a notion rather than a formally defined process.
Reference: [Sny90] <author> K. Snyder. </author> <title> The SETL2 programming language. </title> <type> Technical report, </type> <institution> New York University, Computer Science, Courant Institute, </institution> <year> 1990. </year> <month> 75 </month>
Reference-contexts: This normal form is fed to the solver, and then the solution is read back in, and is incorporated into an EREP file. * The SETL2 <ref> [Sny90] </ref> program analyzes the constraint graph and if the sketch is well constrained, a unique solution is being computed in a constructive fashion. The constraint solving algorithm is being explained in chapter 3.
Reference: [Soh91] <author> Wolfang Sohrt. </author> <title> Interaction with Constraints in three-dimensional Modeling. </title> <type> Master's thesis, </type> <institution> Dept of Computer Science, The University of Utah, </institution> <month> March </month> <year> 1991. </year>
Reference-contexts: A method that guarantees termination, ruler and compass completeness and uniqueness using the Knuth-Bendix critical pair algorithm is presented in <ref> [Bru86, Soh91] </ref>. This method can be proved to confirm theorems that are provable under the system of axioms given, the rules for determining automatically the desired unique solution are not discussed in these papers. A system based on this method was implemented in Prolog. <p> To succeed this, various propagation techniques have been used, but none of them guarantees to derive a solution or to has a reasonable worst case running time. For a review of these methods see <ref> [Soh91] </ref>. Sketchpad [Sut63a] uses propagation of degrees of freedom and propagation of known values. Pro/ENGINEER [BA91, Pro] uses propagation of known values. Propagation of known values is the inverse process of propagation of degrees of freedom, both methods are global, unstable and do not work for cyclic dimensioned sketches.
Reference: [SS80] <author> G. L. Steele and G. L. Sussman. </author> <title> CONSTRAINTS A Language for Expressing Almost-Hierarchical Descriptions. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 1-39, </pages> <month> January </month> <year> 1980. </year>
Reference-contexts: Sketchpad [Sut63a] uses propagation of degrees of freedom and propagation of known values. Pro/ENGINEER [BA91, Pro] uses propagation of known values. Propagation of known values is the inverse process of propagation of degrees of freedom, both methods are global, unstable and do not work for cyclic dimensioned sketches. CONSTRAINTS <ref> [SS80] </ref> uses retraction, which is a localized version of propagation of known values, that stores some information for each variable, about the variable's premises and dependents.
Reference: [Sun88] <author> Geir Sunde. </author> <title> Specification of shape by dimensions and other geometric constraints. </title> <editor> In M. J. Wozny, H. W. McLaughlin, and J. L. Encarnacao, editors, </editor> <booktitle> Geometric modeling for CAD applications, </booktitle> <pages> pages 199-213. </pages> <publisher> North Holland, IFIP, </publisher> <year> 1988. </year>
Reference-contexts: Aldefeld in [Ald88] uses a forward chaining inference mechanism, the notion of direction of lines is imposed with additional rules, restricting the number of solutions. A similar method is presented in [SAK90], where handling of overconstrained and underconstrained cases is given special consideration. Sunde in <ref> [Sun88] </ref> uses a similar rule-constructive method but uses different rules for representing directed distance and non directed distance, giving flexibility for dealing with the root selection problem. In [YK90] the problem of nonunique solutions is 7 handled by imposing an order on three geometries.
Reference: [Sut63a] <author> I. Sutherland. </author> <title> Sketchpad, a man-machine graphical communication system. </title> <booktitle> In Proc. of the spring Joint Comp. Conference, </booktitle> <pages> pages 329-345. IFIPS, </pages> <year> 1963. </year>
Reference-contexts: The idea of using constraints for determining a sketch was first used in Sketchpad <ref> [Sut63a] </ref>, and it remains very attractive because of its simplicity from the viewpoint of the user. Hillyard and Braid [HB78] were the first to develop a general theory in which dimensions are used to specify algebraic constraints on the coordinates of vertices of a wire-frame representation. <p> All constraint solvers more or less switch to iterative methods when the given configuration is not solvable by their method. This fact emphasizes the need for further research in the area of numerical constraint solvers. Sketchpad, described in <ref> [Sut63a] </ref> was the first system to use the method of relaxation as an alternative, relaxation is a slow but quite general method. Many systems like ThingLab [Bor81] and Magritte [Gos83] kept the relaxation as an alternative to other methods. <p> To succeed this, various propagation techniques have been used, but none of them guarantees to derive a solution or to has a reasonable worst case running time. For a review of these methods see [Soh91]. Sketchpad <ref> [Sut63a] </ref> uses propagation of degrees of freedom and propagation of known values. Pro/ENGINEER [BA91, Pro] uses propagation of known values. Propagation of known values is the inverse process of propagation of degrees of freedom, both methods are global, unstable and do not work for cyclic dimensioned sketches. <p> As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER [BA91, Pro], Sketchpad <ref> [Sut63a, Sut63b] </ref>, ThingLab [FBMB90, Bor81], and Magritte [Gos83].
Reference: [Sut63b] <author> I. Sutherland. </author> <title> Sketchpad, a man-machine graphical communication system. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> January </month> <year> 1963. </year>
Reference-contexts: As already mentioned many systems use a numerical approach as alternative to some other method, such systems are DCM [D-C93], Pro/ENGINEER [BA91, Pro], Sketchpad <ref> [Sut63a, Sut63b] </ref>, ThingLab [FBMB90, Bor81], and Magritte [Gos83].
Reference: [Tod89] <author> Philip Todd. </author> <title> A k-tree generalization that characterizes consistency of dimensioned engineering drawings. </title> <journal> SIAM J. DISC. MATH., </journal> <volume> 2(2) </volume> <pages> 255-261, </pages> <year> 1989. </year>
Reference-contexts: The problem is that as the repertoire of constraints increases the graph-analyze algorithm needs to be modified. Fitzerald [Fit81] follows the approach of dimensioned trees by Requicha [Req77], only horizontal and vertical distances are allowed in this method and it was useful for simple engineering drawings. Todd in <ref> [Tod89] </ref> first generalized the dimension trees of Requicha. Owen in [Owe91] presents an extension of this principle to include circularly dimensioned sketches and DCM [D-C93] is a system using this method. 1.2.3 Propagation methods This was the obvious approach in the early constraint solving systems.
Reference: [Tur88] <author> Joshua U. Turner. </author> <title> A Mathematical Theory of Tolerances. </title> <editor> In M. J. Wozny, H. W. McLaughlin, and J. L. Encarnacao, editors, </editor> <booktitle> Geometric modeling for CAD applications, </booktitle> <pages> pages 163-187. </pages> <publisher> North Holland, IFIP, </publisher> <year> 1988. </year>
Reference-contexts: A theory for defining tolerance constraints as regions in the vector space spanned by the model's variables was developed in [Hof82] and extended in <ref> [Tur88] </ref>. Another framework that tries to overcome the problems in [Hof82] was introduced in [Req83]. A survey of these attempts can be found in [Jus92].
Reference: [Ver90] <author> A. Verroust. </author> <title> Etude de problemes lies a la definition, </title> <institution> la visualisation et l'animation d'objets complexes en informatique graphique. </institution> <type> PhD thesis, </type> <institution> Universite Paris-Sud, France, </institution> <year> 1990. </year>
Reference-contexts: The side, angle, and parallel distance rules are almost natural and come from the concepts of signed distance and signed angle, that's why we call them natural rules. The usage of oriented curves, signed distances and similar information for determining unambiguously a sketch have been studied in <ref> [Ver90] </ref>. Unfortunately, as we have already seen, these rules are not sufficient.
Reference: [VSR92] <author> A. Verroust, F. Schonek, and D. </author> <title> Roller. Rule-oriented method for parameterized computer-aided design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(3) </volume> <pages> 531-540, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: In [YK90] the problem of nonunique solutions is 7 handled by imposing an order on three geometries. A recent detailed work describing a complete set of rules for 2D design can be found in <ref> [VSR92] </ref>, in this work the scope of the particular set of rules is characterized. Finally, a technique called Meta-level Inference is introduced in [BW81], this approach combined with multiple sets of rules and selective application is said to cut down on search.
Reference: [Wen86] <author> Wu Wen-Tsun. </author> <title> Basic Principles of Mechanical Theorem Proving in Elementary Geometries. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 2 </volume> <pages> 221-252, </pages> <year> 1986. </year>
Reference-contexts: class of configurations and we can tell when something is solvable or not in almost linear time. 1.2.4 Symbolic constraint solvers Here the constraints are again transformed to a system of algebraic equations that is solved with methods known from algebraic manipulation, such as Grobner's basis [Buc85] or Wu's method <ref> [Wen86] </ref>. Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and [Kap88]. <p> again transformed to a system of algebraic equations that is solved with methods known from algebraic manipulation, such as Grobner's basis [Buc85] or Wu's method <ref> [Wen86] </ref>. Both methods provide some means for solving a system of algebraic equations. These methods have also been used in mechanical geometry theorem proving in [Wen86], [Cho88, CS86, Cho87] and [Kap88]. Kondo in [Kon92] deals with the addition and deletion of constraints (see also [Kon90]), by using the Buchberger's Algorithm [Buc85] to derive a polynomial that shows the relationship between the deleted and added constraints.
Reference: [WFB87] <author> A. Witkin, K. Fleischer, and A. Barr. </author> <title> Energy Constraints on Parameterized models. </title> <journal> Computer Graphics, </journal> <volume> 21 </volume> <pages> 225-232, </pages> <year> 1987. </year>
Reference-contexts: Though this information is usually quantitative and non specific, it may help the user in basic modifications. A method that represents constraints by an energy function and then searches for a local minimum using the energy gradient is presented in <ref> [WFB87] </ref>. 1.2.2 Constructive constraint solvers This class of constraint solvers is based on the fact that most configurations in an engineering drawing are solvable by ruler, compass and protractor.
Reference: [Wil91] <author> Michael R. Wilk. Equate: </author> <title> An Object-Oriented Constraint Solver. </title> <booktitle> In OOPSLA, </booktitle> <pages> pages 286-298. </pages> <publisher> ACM, </publisher> <year> 1991. </year>
Reference-contexts: The algorithm presented in <ref> [Wil91] </ref> has a better conflict detection that is based on information, provided explicitly by the user. Magritte [Gos83] employs a propagation method to transform the undirected constraint graph and then breadth first search is used to derive all solutions.
Reference: [Woo88] <author> J. R. Woodwark. </author> <title> Some speculations on feature recognition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 20(4), </volume> <month> May </month> <year> 1988. </year> <month> 76 </month>
Reference-contexts: For conclusions regarding the use of CSG and Brep in such systems, the reader may refer to [Woo90], [Rol89a], [HJ93], [Hof92], <ref> [Woo88] </ref>. One powerful method for constructing three dimensional features is to create a two dimensional sketch and then use a number of standard operations with predefined 2 semantics such as extrusion or sweep. In this work we concentrate on defining an Editable REPresentation for two dimensional sketches.
Reference: [Woo90] <author> Robert F. Woodbury. </author> <title> Variations in Solids : A Declarative Treatment. </title> <journal> Computers & Graphics, </journal> <volume> 14(2) </volume> <pages> 173-188, </pages> <year> 1990. </year>
Reference-contexts: Design by features is a notion rather than a formally defined process. It means that certain areas have a specific semantic description that makes them capable of being modified or of functioning in a predetermined (but not fixed) way when linked in a certain environment <ref> [Woo90, Rol89a] </ref>. The traditional Boundary representation (Brep) and Constructive Solid Geometry (CSG) represenation impose major limitations and exhibit unacceptable performance when used in a system that tries to accomplish the above goals. <p> The traditional Boundary representation (Brep) and Constructive Solid Geometry (CSG) represenation impose major limitations and exhibit unacceptable performance when used in a system that tries to accomplish the above goals. For conclusions regarding the use of CSG and Brep in such systems, the reader may refer to <ref> [Woo90] </ref>, [Rol89a], [HJ93], [Hof92], [Woo88]. One powerful method for constructing three dimensional features is to create a two dimensional sketch and then use a number of standard operations with predefined 2 semantics such as extrusion or sweep.
Reference: [Wyk82] <author> Christopher J. Van Wyk. </author> <title> A High-Level Language for Specifying Pictures. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 1(2) </volume> <pages> 163-182, </pages> <year> 1982. </year>
Reference-contexts: Researchers had early realized that this approach could not fulfill the above objectives, and they enhanced this approach with parameterized operations [RBN88] or with some kind of constraints <ref> [Wyk82] </ref>. A complete, purely constructive system based on parameterized operations is MAMOUR described in [RBN88]. This approach attains all the above goals except the first: the user may be involved in designing parameterized transformations that may be hard to invent and difficult to understand.
Reference: [YK90] <author> Yasushi Yamaguchi and Fumihiko Kimura. </author> <title> A constraint modeling system for variational geometry. </title> <editor> In M. J. Wozny, J. U. Turner, and K. Preiss, editors, </editor> <booktitle> Geometric Modeling for Product Engineering, </booktitle> <pages> pages 221-233. </pages> <publisher> Elsevier Science Publishers B.V. (North Holland), </publisher> <year> 1990. </year>
Reference-contexts: A similar method is presented in [SAK90], where handling of overconstrained and underconstrained cases is given special consideration. Sunde in [Sun88] uses a similar rule-constructive method but uses different rules for representing directed distance and non directed distance, giving flexibility for dealing with the root selection problem. In <ref> [YK90] </ref> the problem of nonunique solutions is 7 handled by imposing an order on three geometries. A recent detailed work describing a complete set of rules for 2D design can be found in [VSR92], in this work the scope of the particular set of rules is characterized.
References-found: 66

