URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/cmcl/archive/Remulac-papers/98hpdc.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/usr/prs/WWW/PeterSteenkiste.html
Root-URL: http://www.cs.cmu.edu
Email: flowekamp,nam,dfsuther,trg,prs,jassg@cs.cmu.edu  
Title: A Resource Query Interface for Network-Aware Applications  
Author: Bruce Lowekamp Nancy Miller Dean Sutherland Thomas Gross Peter Steenkiste Jaspal Subhlok 
Address: Pittsburgh PA 15213  
Affiliation: School of Computer Science, Carnegie Mellon University,  
Abstract: Development of portable network-aware applications demands an interface to the network that allows an application to obtain information about its execution environment. This paper motivates and describes the design of Remos, an API that allows network-aware applications to obtain relevant information. The major challenges in defining a uniform interface are network heterogeneity, diversity in traffic requirements, variability of the information, and resource sharing in the network. Remos addresses these issues with two abstraction levels, explicit management of resource sharing, and statistical measurements. The flows abstraction captures the communication between nodes, and the topologies abstraction provides a logical view of network connectivity. Remos measurements are made at network level, and therefore information to manage sharing of resources is available. Remos is designed to deliver best effort information to applications, and it explicitly adds statistical reliability and variability measures to the core information. The paper also presents preliminary results and experience with a prototype Remos implementation for a high speed IP-based network testbed. fl Thomas Gross is also with ETH Zurich, Switzerland Effort sponsored by the Advanced Research Projects Agency and Rome Laboratory, Air Force Materiel Command, USAF, under agreement number F30602-96-1-0287. The U.S. Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any copyright annotation thereon. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of the Advanced Research Projects Agency, Rome Laboratory, or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> http://www.nlanr.net/INFO. </institution>
Reference-contexts: However, the interfaces developed by these efforts have been designed specifically for the scenarios being studied, while Remos is a general interface. A number of sites are collecting Internet traffic statistics, e.g., <ref> [1] </ref>. This information is not in a form that is usable for applications, and it is typically also at a coarser grain than what applications are interested in using.
Reference: [2] <institution> ATM User-Network Interface Specification. </institution> <note> Version 4.0, </note> <year> 1996. </year> <title> ATM Forum document. </title>
Reference-contexts: If other information is available, Remos can use different sharing policies when estimating flow bandwidths. The basic sharing policy assumed by Remos corresponds to the max-min fair share policy [11], which is the basis of ATM flow control for ABR traffic <ref> [13, 2] </ref>, and is also used in other environments [9]. Note that clients of the topology interface are responsible for accounting for sharing effects, both across application flows, and between application flows and other competing flows.
Reference: [3] <author> CASE, J., MCCLOGHRIE, K., ROSE, M., AND WALDBUSSER, S. </author> <title> Protocol Operations for Version 2 of the Simple Network Management Protocol (SN-MPv2), </title> <month> January </month> <year> 1999. </year> <note> RFC 1905. </note>
Reference-contexts: The Remos implementation has two components, a Collector and Modeler; they are responsible for network-oriented and application-oriented functionality, respectively. The Collector consists of a process that retrieves information from routers using SNMP <ref> [3] </ref>. The information obtained covers both static topology and dynamic bandwidth information. For latency, the Collector currently assumes a fixed per-hop delay. (A reasonable approximation as long as we use a LAN testbed). A large environment may require multiple Collectors.
Reference: [4] <author> DEWITT, T., GROSS, T., LOWEKAMP, B., MILLER, N., STEENKISTE, P., SUBHLOK, J., AND SUTHER-LAND, D. Remos: </author> <title> A resource monitoring system for network-aware applications. </title> <type> Tech. Rep. </type> <institution> CMU-CS-97-194, Carnegie Mellon University, </institution> <month> Dec </month> <year> 1997. </year>
Reference-contexts: To limit the scope of a query, the application may select network parameters and parts of a larger network that are of interest. We sketch the main features of the Remos API and explain how they address the challenges presented above. A complete API is published in <ref> [4] </ref>.
Reference: [5] <author> ECKHARDT, D., AND STEENKISTE, P. </author> <title> A Wireless MAC with Service Guarantees. </title> <note> In preparation, </note> <year> 1998. </year>
Reference-contexts: Remos implementations make measurements at network level when possible, which minimizes the measurement overhead and yields key information for managing sharing of resources. A number of groups have looked at the benefits of explicit feedback to simplify and speed up adaptation <ref> [10, 5] </ref>. However, the interfaces developed by these efforts have been designed specifically for the scenarios being studied, while Remos is a general interface. A number of sites are collecting Internet traffic statistics, e.g., [1].
Reference: [6] <author> FOSTER, I., AND KESSELMAN, K. Globus: </author> <title> A meta-computing infrastructure toolkit. </title> <journal> Journal of Supercomputer Applications. </journal> <note> To appear. </note>
Reference-contexts: In contrast, Remos is motivated by network driven applications and focuses primarily on communication resources. Resource management systems for large scale internet-wide computing is an important area of current research, and some well known efforts are Globus <ref> [6] </ref> and Legion [7]. These systems provide support for a wide range of functions such as resource location and reservation, authentication, and remote process creation mechanisms.
Reference: [7] <author> GRIMSHAW, A., WULF, W., AND LEGION TEAM. </author> <title> The Legion vision of a worldwide virtual computer. </title> <journal> Communications of the ACM 40, </journal> <month> 1 (January </month> <year> 1997). </year>
Reference-contexts: In contrast, Remos is motivated by network driven applications and focuses primarily on communication resources. Resource management systems for large scale internet-wide computing is an important area of current research, and some well known efforts are Globus [6] and Legion <ref> [7] </ref>. These systems provide support for a wide range of functions such as resource location and reservation, authentication, and remote process creation mechanisms.
Reference: [8] <author> GROSS, T., O'HALLARON, D., AND SUBHLOK, J. </author> <title> Task parallelism in a High Performance Fortran framework. </title> <booktitle> IEEE Parallel & Distributed Technology 2, 3 (Fall 1994), </booktitle> <pages> 1626. </pages>
Reference-contexts: Airshed contains a rich set of computation and communication operations, as it simulates diverse chemical and physical phenomena [18]. Both programs were developed using the Fx compiler system <ref> [8, 19] </ref> and easily modified to use the clustering information. All experiments were performed on the IP-based testbed illustrated in Figure 2. We first examine the value of node selection when there are no competing applications on the testbed.
Reference: [9] <author> HAHNE, E. L. </author> <title> Round-robin scheduling for max-min fairness in data networks. </title> <journal> IEEE Journal on Selected Areas in Communication 9, </journal> <month> 7 (September </month> <year> 1991). </year>
Reference-contexts: The basic sharing policy assumed by Remos corresponds to the max-min fair share policy [11], which is the basis of ATM flow control for ABR traffic [13, 2], and is also used in other environments <ref> [9] </ref>. Note that clients of the topology interface are responsible for accounting for sharing effects, both across application flows, and between application flows and other competing flows.
Reference: [10] <author> INOUYE, J., CEN, S., PU, C., AND WALPOLE, J. </author> <title> System support for mobile multimedia applications. </title> <booktitle> In Proceedings of the 7th International Workshop on Network and Operating System Support for Digital Audio and Video (St. </booktitle> <address> Louis, </address> <month> May </month> <year> 1997), </year> <pages> pp. 143154. </pages>
Reference-contexts: Remos implementations make measurements at network level when possible, which minimizes the measurement overhead and yields key information for managing sharing of resources. A number of groups have looked at the benefits of explicit feedback to simplify and speed up adaptation <ref> [10, 5] </ref>. However, the interfaces developed by these efforts have been designed specifically for the scenarios being studied, while Remos is a general interface. A number of sites are collecting Internet traffic statistics, e.g., [1].
Reference: [11] <author> JAFFE, J. M. </author> <title> Bottleneck flow control. </title> <journal> IEEE Transactions on Communications 29, </journal> <month> 7 (July </month> <year> 1981), </year> <month> 954962. </month>
Reference-contexts: If other information is available, Remos can use different sharing policies when estimating flow bandwidths. The basic sharing policy assumed by Remos corresponds to the max-min fair share policy <ref> [11] </ref>, which is the basis of ATM flow control for ABR traffic [13, 2], and is also used in other environments [9]. Note that clients of the topology interface are responsible for accounting for sharing effects, both across application flows, and between application flows and other competing flows.
Reference: [12] <author> JAIN, R. </author> <title> The Art of Computer Systems Performance Analysis. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1991. </year>
Reference-contexts: To address these aspects, the Re-mos interface adds statistical variability and estimation accuracy parameters to all dynamic quantitative information. Since the actual distributions for the measured quantities are generally not known, we present the variability of network parameters using quartiles <ref> [12] </ref>. 4 Implementation The initial implementation of the Remos interface is for a dedicated IP-based testbed at Carnegie Mellon illustrated in routers, 100Mbps point-to-point Ethernet segments as links, and DEC Alpha systems as endpoints.
Reference: [13] <author> JAIN, R. </author> <title> Congestion control and traffic management in ATM networks: Recent advances and a survey. Computer Networks and ISDN Systems (February 1995). </title>
Reference-contexts: If other information is available, Remos can use different sharing policies when estimating flow bandwidths. The basic sharing policy assumed by Remos corresponds to the max-min fair share policy [11], which is the basis of ATM flow control for ABR traffic <ref> [13, 2] </ref>, and is also used in other environments [9]. Note that clients of the topology interface are responsible for accounting for sharing effects, both across application flows, and between application flows and other competing flows.
Reference: [14] <author> LITZKOW, M., LIVNY, M., AND MUTKA, M. </author> <title> Condor A hunter of idle workstations. </title> <booktitle> In Proceedings of the Eighth Conference on Distributed Computing Systems (San Jose, </booktitle> <address> California, </address> <month> June </month> <year> 1988). </year>
Reference-contexts: performance in dynamic environments with competing traffic, and our greedy clustering routine using Remos is effective in selecting good sets of nodes in such realistic situations. 6 Related Work A number of resource management systems allow applications to make queries about the availability of computation resources, some examples being Condor <ref> [14] </ref> and LSF (Load Sharing Facility). In contrast, Remos is motivated by network driven applications and focuses primarily on communication resources. Resource management systems for large scale internet-wide computing is an important area of current research, and some well known efforts are Globus [6] and Legion [7].
Reference: [15] <author> OBRACZKA, K., AND GHEORGHIU, G. </author> <title> The performance of a service for network-aware applications. </title> <type> Tech. Rep. TR 97-660, </type> <institution> Computer Science Department, University of Southern California, </institution> <month> Oct </month> <year> 1997. </year>
Reference-contexts: The Remos system can be used to extend the functionality of the above systems. Recent systems that focus on measurements of communication resources across internet wide networks include Network Weather Service (NWS) [20] and topology-d <ref> [15] </ref>. NWS makes resource measurements to predict future resource availability, while topology-d computes the logical topology of a set of internet nodes. Both these systems actively send messages to make communication measurements between pairs of computation nodes.
Reference: [16] <author> SCHOPF, J., AND BERMAN, F. </author> <title> Performance prediction in production environments. </title> <booktitle> In 12th International Parallel Processing Symposium (Orlando, </booktitle> <address> FL, </address> <month> April </month> <year> 1998), </year> <pages> pp. 647653. </pages>
Reference-contexts: An important aspect of the Remos interface is that dynamic quantities are reported with statistical parameters and not just as single values. Related work in estimating stochastic values such as <ref> [16] </ref> is important for developing good Remos implementations. 7 Concluding remarks Remos is an attempt to develop a uniform interface between networks and network-aware applications that covers a range of network architectures. It allows applications to discover, at runtime, the properties of their execution environments.
Reference: [17] <author> STEMM, M., SESHAN, S., AND KATZ, R. Spand: </author> <title> Shared passive network performance discovery. </title> <booktitle> In USENIX Symposium on Internet Technologies and Systems (Monterey, </booktitle> <address> CA, </address> <month> June </month> <year> 1997). </year>
Reference-contexts: Another class of related research is the collection and use of application specific performance data, e.g., a Web browser that collects information the response times of different sites <ref> [17] </ref>. An important aspect of the Remos interface is that dynamic quantities are reported with statistical parameters and not just as single values.
Reference: [18] <author> SUBHLOK, J., STEENKISTE, P., STICHNOTH, J., AND LIEU, P. </author> <title> Airshed pollution modeling: A case study in application development in an HPF environment. </title> <booktitle> In 12th International Parallel Processing Symposium (Orlando, </booktitle> <address> FL, </address> <month> April </month> <year> 1998), </year> <pages> pp. 701710. </pages>
Reference-contexts: Airshed contains a rich set of computation and communication operations, as it simulates diverse chemical and physical phenomena <ref> [18] </ref>. Both programs were developed using the Fx compiler system [8, 19] and easily modified to use the clustering information. All experiments were performed on the IP-based testbed illustrated in Figure 2. We first examine the value of node selection when there are no competing applications on the testbed.
Reference: [19] <author> SUBHLOK, J., AND YANG, B. </author> <title> A new model for integrated nested task and data parallel programming. </title> <booktitle> In Proceedings of the Sixth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (June 1997), ACM. </booktitle>
Reference-contexts: Airshed contains a rich set of computation and communication operations, as it simulates diverse chemical and physical phenomena [18]. Both programs were developed using the Fx compiler system <ref> [8, 19] </ref> and easily modified to use the clustering information. All experiments were performed on the IP-based testbed illustrated in Figure 2. We first examine the value of node selection when there are no competing applications on the testbed.
Reference: [20] <author> WOLSKI, R., SPRING, N., AND PETERSON, C. </author> <title> Implementing a performance forecasting system for metacomputing: The network weather service. </title> <type> Tech. Rep. </type> <institution> TR-CS97-540, University of California, </institution> <address> San Diego, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: The Remos system can be used to extend the functionality of the above systems. Recent systems that focus on measurements of communication resources across internet wide networks include Network Weather Service (NWS) <ref> [20] </ref> and topology-d [15]. NWS makes resource measurements to predict future resource availability, while topology-d computes the logical topology of a set of internet nodes. Both these systems actively send messages to make communication measurements between pairs of computation nodes.
References-found: 20

