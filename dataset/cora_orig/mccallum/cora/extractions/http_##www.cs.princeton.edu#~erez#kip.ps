URL: http://www.cs.princeton.edu/~erez/kip.ps
Refering-URL: http://www.cs.princeton.edu/~erez/publications.html
Root-URL: http://www.cs.princeton.edu
Title: An Efficient Non-Interactive Zero-Knowledge Proof System for NP with General Assumptions  
Author: Joe Kilian Erez Petrank 
Abstract: We consider noninteractive zero-knowledge proofs in the shared random string model proposed by Blum, Feldman and Micali [BFM88]. Until recently there was a sizable polynomial gap between the most efficient noninteractive proofs for NP based on general complexity assumptions [FLS90] versus those based on specific algebraic assumptions [Dam92]. Recently, this gap was reduced to a polylogarithmic factor [Kil94]; we further reduce the gap to a constant factor. Our proof system relies on the existence of one-way permutations (or trapdoor permutations for bounded provers). Our protocol is based on the random committed bit model introduced by Feige, Lapidot and Shamir. We show how to prove that an n-gate circuit is satisfiable, with error probability 1=n O(1) , using only O(n lg n) random committed bits. For this error probability, this result matches to within a constant factor the number of committed bits required by the most efficient known interactive proof systems.
Abstract-found: 1
Intro-found: 1
Reference: [BFM88] <author> M. Blum, P. Feldman, and S. Micali. </author> <title> Non-Interactive Zero Knowledge and Its Applications. </title> <booktitle> In Proc. Twentieth ACM Symp. Theor. Comput., </booktitle> <pages> pages 103-112, </pages> <year> 1988. </year>
Reference-contexts: Fiat and Shamir [FS86] give a heuristic means for eliminating the need for interaction, at a cost of slightly weaker security properties and more importantly the ability (for now) of rigorously analyzing the resulting protocols. Blum, Feldman and Micali <ref> [BFM88] </ref> propose a more theoretically appealing compromise, known as the shared random string model for noninteractive zero-knowledge proofs. In this model, the prover and verifier are given a shared string of bits that are guaranteed to be completely random. <p> This motivates the questions of what assumptions are necessary for noninteractive zero-knowledge proofs and how efficient can these proofs be made. 1.1 Previous results Blum, Feldman, and Micali <ref> [BFM88] </ref> show how to construct a non-interactive zero-knowledge proof system for any language in NP given a very specific number theoretic assumption. The assumption fl NEC Research Institute. E-mail: joe@research.nj.nec.com y Technion - Israel Institute of Technology, Haifa, Israel. E-mail: erez@cs.technion.ac.il.
Reference: [BG89] <author> M. Bellare and S. Goldwasser. </author> <title> New Paradigms for Digital Signatures and Message Authentication Based on Non-Interactive Zero-Knowledge Proofs. </title> <editor> In J. Feigenbaum, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO '89 proceeding, volume 435 of Lecture notes in computer Science, </booktitle> <pages> pages 194-211. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Such non-interactive zero-knowledge proofs turned out to be an important cryptographic primitive. For example, it is used in the signature scheme framework of <ref> [BG89] </ref> and to obtain secure public-key encryption schemes that are robust against chosen message attacks [NY90].
Reference: [BP94] <author> J. Boyar and R. Peralta. </author> <title> Efficient Zero-Knowledge Proofs of Circuit Satisfiability. </title> <type> Technical Report 1, ISSN No. 09033920, </type> <institution> Institut for Matematik og Datalogi, Odense Uni-versitet, </institution> <year> 1994. </year>
Reference-contexts: The original solution required n 4 shared random bits to prove that a n-node graph is 4-colorable, but the efficiency of protocols based on quadratic residuosity has since been recently greatly improved <ref> [Dam92, BP94] </ref>. Given a cryptographic security parameter k, which must be large, the most efficient of these families of solutions requires O (k 2 n) shared random bits. Feige, Lapidot, and Shamir [FLS90] gave the first non-interactive zero-knowledge for NP under a general complexity assumption.
Reference: [BY92] <author> M. Bellare and M. Yung. </author> <title> Certifying Cryptographic Tools: The Case of Trapdoor Permutations. </title> <booktitle> In Advances in Cryptology - CRYPTO '92 proceeding, Lecture notes in computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Feige, Lapidot, and Shamir [FLS90] gave the first non-interactive zero-knowledge for NP under a general complexity assumption. Their construction requires one way permutations or, for polyno-mially bounded provers, certified trapdoor permutations (the technical "certification" requirement was eliminated in <ref> [BY92] </ref>). They also obtained much greater generality in how their proofs could be used (e.g., many provers could prove many theorems using the same random string). To achieve this they introduced the random committed bit model; all subsequent progress using general complexity assumptions has used this model. <p> and states a member f i 2 F , and then the prover and verifier interpret the shared random string according to the permutation f i in the rest of the proof. 6.1 Getting rid of the certification requirement The need for certification in this setting was first noted by <ref> [BY92] </ref>. They also suggested a way to get rid of this requirement. Loosely speaking, they replace the requirement for efficient verification that f i is a permutation by a proof (of the prover) that f i is "close" to a permutation. <p> So let us compute the probability that the number of bad bits b does not exceed 5k. The expected number of bad bits is l * = k. By the Chernoff Inequality, we get: Prob [b 5k] Prob [jb E [b]j 4k] 2 3k It was shown in <ref> [BY92] </ref> that this proof is zero knowledge. It should also be clear that if ' 23-SAT-5 and the (honest) prover indeed selects a permutation then he cannot fail. Summing up, we can use the technique of [BY92] in order to relax the cryptographic assumption from the existence of a family of <p> Prob [b 5k] Prob [jb E [b]j 4k] 2 3k It was shown in <ref> [BY92] </ref> that this proof is zero knowledge. It should also be clear that if ' 23-SAT-5 and the (honest) prover indeed selects a permutation then he cannot fail. Summing up, we can use the technique of [BY92] in order to relax the cryptographic assumption from the existence of a family of certified trapdoor permutations to the existence of a general family of trapdoor permutations.
Reference: [Dam92] <author> I. Damg-ard. </author> <title> Non-Interactive Circuit-Based Proofs and Non-Interactive Perfect Zero Knowledge with Preprocessing. </title> <booktitle> In Advances in Cryptology - Eurocrypt '92 proceeding, Lecture notes in computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The original solution required n 4 shared random bits to prove that a n-node graph is 4-colorable, but the efficiency of protocols based on quadratic residuosity has since been recently greatly improved <ref> [Dam92, BP94] </ref>. Given a cryptographic security parameter k, which must be large, the most efficient of these families of solutions requires O (k 2 n) shared random bits. Feige, Lapidot, and Shamir [FLS90] gave the first non-interactive zero-knowledge for NP under a general complexity assumption.
Reference: [DSMP88] <author> A. De Santis, S. Micali, and G. Persiano. </author> <title> Non-Interactive Zero-Knowledge with Preprocessing. </title> <editor> In S. Goldwasser, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO '88 proceeding, volume 403 of Lecture notes in computer Science, </booktitle> <pages> pages 27-35. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: The assumption fl NEC Research Institute. E-mail: joe@research.nj.nec.com y Technion - Israel Institute of Technology, Haifa, Israel. E-mail: erez@cs.technion.ac.il. Most of this work was done while the author was visiting the NEC Research Institute. 1 was relaxed to quadratic residuosity by De-Santis, Micali, and Persiano <ref> [DSMP88] </ref>. The original solution required n 4 shared random bits to prove that a n-node graph is 4-colorable, but the efficiency of protocols based on quadratic residuosity has since been recently greatly improved [Dam92, BP94].
Reference: [Fei] <author> U. Feige. </author> <type> Personal Communication. </type>
Reference-contexts: The proof system proposed by [FLS90] was much less efficient than those based on quadratic residuosity: It required O (k n 11=2 ) shared random bits to prove that an n-node graph contains a Hamiltonian cycle. Subsequently, Feige <ref> [Fei] </ref> has shown how to prove that n by n by n matrix has a 3-dimensional matching, using only O (k n 7=2 ) shared random bits.
Reference: [FLS90] <author> U. Feige, D. Lapidot, and A. Shamir. </author> <title> Multiple Non-Interactive Zero-Knowledge Proofs Based on a Single Random String. </title> <booktitle> In Proc. 31th Ann. Symp. Found. Comput. Sci., </booktitle> <pages> pages 308-317, </pages> <year> 1990. </year>
Reference-contexts: Given a cryptographic security parameter k, which must be large, the most efficient of these families of solutions requires O (k 2 n) shared random bits. Feige, Lapidot, and Shamir <ref> [FLS90] </ref> gave the first non-interactive zero-knowledge for NP under a general complexity assumption. Their construction requires one way permutations or, for polyno-mially bounded provers, certified trapdoor permutations (the technical "certification" requirement was eliminated in [BY92]). <p> The verifier can only look at those bits that have been revealed and decide whether to accept or reject. A protocol for the random committed bit model may then be compiled into a protocol for the shared random string model. The proof system proposed by <ref> [FLS90] </ref> was much less efficient than those based on quadratic residuosity: It required O (k n 11=2 ) shared random bits to prove that an n-node graph contains a Hamiltonian cycle. <p> In addition to the efficiency of this proof, circuit satisfiability seems to be the preferred NP-problem for reducing a general predicate. Kilian's construction is based on random committed bit model, and hence is based on the same complexity assumptions as those of <ref> [FLS90] </ref>. 1.2 Our results We improve the protocol of [Kil94] and get a non-interactive zero-knowledge proof system for circuit satisfiability which uses only O (k 2 n) shared random bits. Our proof system is significantly simpler than the one in [Kil94]. As in [FLS90]+[BY92],[Kil94] we also rely on the general cryptographic <p> We do not know how to achieve such an error probability in the interactive model without using (n lg n) bit commitments. Note however that the compilation technique of <ref> [FLS90] </ref> requires a significant overhead and hence noninteractive zero-knowledge proofs remain asymptotically less efficient than their interactive counterparts. 1.3 Outline of the paper In Section 2 we introduce some definitions and technical details that we use in the paper. <p> The compilation procedure of <ref> [FLS90] </ref> requires that the security parameter k be large, as it must be as large as the security parameter for the one-way permutations or trap-door permutations. In the actual construction for the random committed bit model we can set it to be O (lg n). <p> However, our protocol is more involved since we would like the proof to be zero knowledge. Our proof system is a direct improvement over the protocol in [Kil94] which in turn is inspired by the protocol of <ref> [FLS90] </ref>. 4.1 Interpreting pairs of bits as characters The prover and verifier first establish characters in the random string. A character can have 3 possible values: 0, 1, and a wild-character (WC). <p> However, a few changes have to be made which affect the cryptographic assumption we use. We follow <ref> [FLS90, Kil94] </ref> by assuming the existence (and specifically by using) a family of certified trap-door permutations.
Reference: [FS86] <author> A. Fiat and A. Shamir. </author> <title> How to Prove Yourself: Practical Solutions to Identification and Signature Problems. </title> <booktitle> In Advances in Cryptology - CRYPTO '86 proceeding, Lecture notes in computer Science, </booktitle> <pages> pages 186-189. </pages> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: 1 Introduction A basic issue in cryptography is the tradeoff between resources and security properties. Ordinary zero-knowledge proofs obtain greater security at the price of requiring greater interaction between the prover and the verifier. Fiat and Shamir <ref> [FS86] </ref> give a heuristic means for eliminating the need for interaction, at a cost of slightly weaker security properties and more importantly the ability (for now) of rigorously analyzing the resulting protocols.
Reference: [GMR89] <author> S. Goldwasser, S. Micali, and C. Rackoff. </author> <title> The Knowledge Complexity of Interactive Proof Systems. </title> <journal> SIAM J. Comput., </journal> <volume> 18 </volume> (1):186-208, 1989. 
Reference: [Kil94] <author> J. Kilian. </author> <title> On the Complexity of Bounded-Interaction and Non-Interactive Zero-Knowledge Proofs. </title> <booktitle> In Proc. 35th Ann. Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1994. </year>
Reference-contexts: Subsequently, Feige [Fei] has shown how to prove that n by n by n matrix has a 3-dimensional matching, using only O (k n 7=2 ) shared random bits. Recently, a more efficient proof system for NP was given by Kilian <ref> [Kil94] </ref> who presented a proof system for circuit satisfiability using O (k 2 n log c n) shared random bits for some constant c. In addition to the efficiency of this proof, circuit satisfiability seems to be the preferred NP-problem for reducing a general predicate. <p> Kilian's construction is based on random committed bit model, and hence is based on the same complexity assumptions as those of [FLS90]. 1.2 Our results We improve the protocol of <ref> [Kil94] </ref> and get a non-interactive zero-knowledge proof system for circuit satisfiability which uses only O (k 2 n) shared random bits. Our proof system is significantly simpler than the one in [Kil94]. As in [FLS90]+[BY92],[Kil94] we also rely on the general cryptographic assumption that there exists a one way permutation, or <p> is based on the same complexity assumptions as those of [FLS90]. 1.2 Our results We improve the protocol of <ref> [Kil94] </ref> and get a non-interactive zero-knowledge proof system for circuit satisfiability which uses only O (k 2 n) shared random bits. Our proof system is significantly simpler than the one in [Kil94]. As in [FLS90]+[BY92],[Kil94] we also rely on the general cryptographic assumption that there exists a one way permutation, or trapdoor permutations if the prover only runs in polynomial time. <p> The description there is a bottom up description of how the proof system is built on top of the random string. In this section, we first discuss at a high level the basic approach of <ref> [Kil94] </ref>, the sources of its inefficiency and our approach to eliminating these inefficiencies. We then give a shorter top-down description of the proof system, which may help going through the details of Section 4. 3.1 Influence Games The protocol of [Kil94] is based on implementing an influence game, a further abstraction <p> first discuss at a high level the basic approach of <ref> [Kil94] </ref>, the sources of its inefficiency and our approach to eliminating these inefficiencies. We then give a shorter top-down description of the proof system, which may help going through the details of Section 4. 3.1 Influence Games The protocol of [Kil94] is based on implementing an influence game, a further abstraction from the random committed bits model. In an influence game, the dealer deals the prover and the verifier a sequence of committed pairs of random strings f (s 1 i ; s 2 i )g. <p> In <ref> [Kil94] </ref> it is shown how to in prove that circuit satisfiability (via 3-CNF-O (1)) in zero-knowledge using an influence game where each committed string has size O (lg n), where n is the circuit size. <p> The error probability for this proof is 1=n c where c may be set to any constant (affecting the constant in the size of the committed strings). Thus, only O (n lg n) committed bits are required. 3.2 Sources of Inefficiency in <ref> [Kil94] </ref> The inefficiency in [Kil94] comes from implementing influence games within the random committed bit model. Let ` be the length of the strings in the influence game; for the application in [Kil94], ` = fi (lg n). In [Kil94] string pairs are represented by a committed bit sequence of size <p> The error probability for this proof is 1=n c where c may be set to any constant (affecting the constant in the size of the committed strings). Thus, only O (n lg n) committed bits are required. 3.2 Sources of Inefficiency in <ref> [Kil94] </ref> The inefficiency in [Kil94] comes from implementing influence games within the random committed bit model. Let ` be the length of the strings in the influence game; for the application in [Kil94], ` = fi (lg n). In [Kil94] string pairs are represented by a committed bit sequence of size ` fi (1) which <p> Thus, only O (n lg n) committed bits are required. 3.2 Sources of Inefficiency in <ref> [Kil94] </ref> The inefficiency in [Kil94] comes from implementing influence games within the random committed bit model. Let ` be the length of the strings in the influence game; for the application in [Kil94], ` = fi (lg n). In [Kil94] string pairs are represented by a committed bit sequence of size ` fi (1) which occurs at random with probability 1=` fi (1) . <p> lg n) committed bits are required. 3.2 Sources of Inefficiency in <ref> [Kil94] </ref> The inefficiency in [Kil94] comes from implementing influence games within the random committed bit model. Let ` be the length of the strings in the influence game; for the application in [Kil94], ` = fi (lg n). In [Kil94] string pairs are represented by a committed bit sequence of size ` fi (1) which occurs at random with probability 1=` fi (1) . The procedure for "distilling" these representations will occasionally let through invalid representations that could be exploited by a cheating prover. To eliminate this problem, the [Kil94] <p> <ref> [Kil94] </ref> string pairs are represented by a committed bit sequence of size ` fi (1) which occurs at random with probability 1=` fi (1) . The procedure for "distilling" these representations will occasionally let through invalid representations that could be exploited by a cheating prover. To eliminate this problem, the [Kil94] construction uses ` fi (1) representations, so that most representations will be correct with high probability. <p> To obtain such large pairs we use the distillation method of <ref> [Kil94] </ref> (with different parameter settings) to generate O (lg n) string pairs each of size O (1). This requires only O (lg n) random committed bits. We then adapt an expander-based method of [Kil94] to combine these pairs into a single pair whose strings are of size c 0 lg n, <p> To obtain such large pairs we use the distillation method of <ref> [Kil94] </ref> (with different parameter settings) to generate O (lg n) string pairs each of size O (1). This requires only O (lg n) random committed bits. We then adapt an expander-based method of [Kil94] to combine these pairs into a single pair whose strings are of size c 0 lg n, where c 0 is a slightly larger constant. We use a different and more powerful method of analyzing the result of this combining procedure. <p> However, our protocol is more involved since we would like the proof to be zero knowledge. Our proof system is a direct improvement over the protocol in <ref> [Kil94] </ref> which in turn is inspired by the protocol of [FLS90]. 4.1 Interpreting pairs of bits as characters The prover and verifier first establish characters in the random string. A character can have 3 possible values: 0, 1, and a wild-character (WC). <p> However, a few changes have to be made which affect the cryptographic assumption we use. We follow <ref> [FLS90, Kil94] </ref> by assuming the existence (and specifically by using) a family of certified trap-door permutations.
Reference: [NY90] <author> M. Naor and M. Yung. </author> <title> Public Key Cryptosystems Provably Secure Against Chosen Ciphertext Attacks. </title> <booktitle> In Proc. Twenty-second Ann. ACM Symp. Theor. Comput., </booktitle> <pages> pages 427-437, </pages> <year> 1990. </year>
Reference-contexts: Such non-interactive zero-knowledge proofs turned out to be an important cryptographic primitive. For example, it is used in the signature scheme framework of [BG89] and to obtain secure public-key encryption schemes that are robust against chosen message attacks <ref> [NY90] </ref>.
References-found: 12

