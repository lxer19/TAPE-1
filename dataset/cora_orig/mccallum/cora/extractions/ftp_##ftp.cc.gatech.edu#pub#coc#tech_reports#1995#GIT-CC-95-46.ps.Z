URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1995/GIT-CC-95-46.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.95.html
Root-URL: 
Title: Collaboration during Conceptual Design  
Author: Lara D. Catledge and Colin Potts 
Affiliation: Georgia Institute of Technology  
Date: October 24, 1995 1  October 24, 1995  
Abstract: The conceptual design of software involves the analysis of requirements, functional specification, and architectural design. Despite the recent interest in supporting the software development process, conceptual design remains a largely informal and little understood activity. We studied the conceptual design activities of a representative industrial software project, Centauri, for three months with follow-up observations and discussions over the following six months. Our goal was to understand how patterns of collaboration and communication in project teams affect the convergence of the project on a common vision and a documented specification. In this paper, we present our research methodology and findings, and the implications of the results for process and tool support. The following observations stand out. First, convergence on a common system vision was painfully slow. The major impediment to faster progress was the difficulty that the project team had in making critical allocation and interface design decisions. Second, Centauri project members repeatedly raised certain issues and failed to reach closure on key problems. Finally, we observed a persistent tension between the desire on behalf of nearly all project members to follow a proceduralized development process and the urgency of delivering a working product. This tension manifested itself in the creation of ad hoc processes and various dysfunctional displacement activities. Although our findings are rooted in the specific context of a single project, we believe they are of general import, and discuss their implications in the light of comparable findings in other studies. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [1] <author> Baecker, Ronald M., </author> <title> Groupware and ComputerSupported Cooperative Work: </title> <publisher> Assisting Human-Human Collaboration. </publisher>
Reference: [2] <author> Bergland et. al. </author> <title> "Improving the Front End of the Software-Development Process for Large-Scale Systems", </title> <journal> AT&T Technical Journal, </journal> <month> March/April </month> <year> 1990. </year>
Reference: [3] <institution> Blomberg et al " Ethnographic Field Methods and their Relation to Design", </institution> <year> 1993. </year>
Reference: [4] <author> Boehm, Barry W. </author> <title> "A Spiral Model of Software Development and Enhancement", </title> <journal> IEEE Software, </journal> <month> May </month> <year> 1989. </year>
Reference: [5] <author> Boehm, Barry W. </author> <title> Software Engineering Economics. </title> <publisher> Prentice-Hall, </publisher> <year> 1981. </year>
Reference: [6] <author> Christel et. al. "AMORE: </author> <title> The Advanced Multimedia Organizer for Requirements Elicitation", </title> <type> Technical Report, </type> <month> CMU/SEI-93-TR-12 , June </month> <year> 1993. </year>
Reference: [7] <author> Curtis, B., H. Krasner, and N. </author> <title> Iscoe (1988), "A Field Study of the Software Design Process for Large Teams," </title> <journal> Comm. ACM, </journal> <volume> 31(11): </volume> <pages> 1268-1287. </pages>
Reference-contexts: All of these studies indicate that while the details, the what and how, are being discussed, the rationale, reasons and the larger vision are being neglected. Another set of reseach focused on surveys. Curtis et. al. <ref> [7] </ref>, by interviewing key personnel in 19 organizations found that one of the most significant and pervasive features that affected the success of large projects was the presence of what they called a superdesigner, a person who was responsible for holding and supporting the project vision. <p> Focusing on the early stages of design, as opposed to SEI and other software improvement efforts. This is a real project with real deadlines and deliverables. Not a toy project. Formation & facilitation of common technical vision As Curtis, Krasner and Iscoe <ref> [7] </ref> discovered, successful projects, even very large ones, often have a single person who is recognized as the source and keeper of the project vision.
Reference: [8] <author> Dahlbom and Mathiassen, </author> <title> Computers in Context: </title> <booktitle> The Philosophy and Practice of Systems Design. </booktitle> <publisher> NCC Blackwell, </publisher> <address> Cambridge: </address> <month> 19??. </month>
Reference: [9] <author> Dobson and Strens, </author> <title> "Organisational Requirements Definition for Information Technology Systems", </title> <booktitle> IEEE Computer, </booktitle> <year> 1994. </year>
Reference: [10] <author> Eason, Ken, </author> <title> Information Technology and Organisational Change. </title> <publisher> Taylor & Francis, </publisher> <address> New York, </address> <year> 1998. </year>
Reference: [11] <author> Fafchampts, Danielle. </author> <title> "Organizational Factors and Reuse", </title> <journal> IEEE Software, </journal> <month> Sept. </month> <year> 1994. </year> <month> October 24, </month> <year> 1995 </year> <month> 23 </month>
Reference: [12] <author> Fagen, </author> <title> M.E., Design and Code Inspections to Reduce Errors in Program Development, </title> <journal> IBM Systems Journal, </journal> <volume> Vol. 15, No. 3, </volume> <year> 1976. </year> <pages> pp. 182-221 </pages>
Reference: [13] <institution> Goguen and Linde "Techniques for Requirements Elicitation", IEEE Software, </institution> <year> 1992. </year>
Reference: [14] <author> Grudin, Jonathan, </author> <title> "Computer-Supported Cooperative Work: History and Focus", </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1994. </year>
Reference: [15] <author> Grudin, Jonathan, </author> <title> "Eight Challenges for Developers", </title> <journal> Communications of teh ACM, </journal> <month> Jan. </month> <year> 1994. </year>
Reference: [16] <author> Heninger, Kathryn L. </author> <title> "Specifying Software Requirements for Complex Systems: New Techniques and Their Application", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-6, No. 1, </volume> <month> January </month> <year> 1980. </year>
Reference: [17] <author> Herbsleb, James D. et. al. </author> <title> "Object-Oriented Analysis and Design in Software Project Teams" [unpublished]. </title>
Reference: [18] <author> Holtzblatt and Jones, </author> <title> "Comtextual Inquiry: A Participatory Technique for System Design", </title> <year> 1993 </year>
Reference: [19] <author> Hsi, Idris and Colin Potts, </author> <title> "Integrating Rationalistic and Ecological Design Methods for Interactive Systems", </title> <note> [unpublished]. </note>
Reference-contexts: 1. Collaboration in Conceptual Design 1.1. Previous Research A number of case studies exist that describe portions of the requirements process. By analyzing and cataloging the kinds of questions asked in writing requirements, Kuwana and Herbsleb <ref> [19] </ref> found that most of the questions asked related to how a particular feature would be implemented and very rarely why a feature had been included.
Reference: [20] <author> Kuwana and Herbsleb, </author> <title> "Representing Knowledge in Requirements Engineering: An Empirical Study of what Software Engineers Need to Know", </title> <journal> IEEE Software, </journal> <year> 1992. </year>
Reference: [21] <author> Lubars, Mike, Colin Potts and Charles Richter. </author> <title> Developing Initial OOA Models. </title> <booktitle> The 15th International Conference on Software Engineering, </booktitle> <address> Los Alamitos, CA, </address> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year> <note> p. 255 </note>
Reference: [22] <editor> Luff et al "Work, </editor> <title> Interaction and Technology: The Naturalistic Analysis of Human Conduct and Requirements Analysis", </title> <year> 1994. </year>
Reference: [23] <author> Markus and Keil, </author> <title> "If We Build It, They Will Come: Desiging Information Systems That People Want to Use", Sloan Management Review, </title> <booktitle> Summer 1994. </booktitle> <month> October 24, </month> <year> 1995 </year> <month> 24 </month>
Reference: [24] <author> Moran, Thomas P and John M. Carroll. </author> <title> Design Rationale: Comcepts, Techniques and Use. </title> <publisher> Lawrence Earlbaum Associates, </publisher> <year> 1995. </year> <note> [in press] </note>
Reference-contexts: Keeping track of status & supporting project's "working memory" It has become a commonplace to observe that effective teams and organizations `learn' from their experiences and that an `institutional memory' is an aid to rapid problem solving in familiar situations. Tools such as gIBIS <ref> [24] </ref> aim to provide teams with a structured record of their decisions so that they can be reconsidered, audited, or replayed later. We are mainly interested in the remembering and forgetting of key design considerations and decisions during conceptual design.
Reference: [25] <author> Olson, McGuffin, Kuwanna and Olson, </author> <title> "Designing Software For A Group's Needs: A Functional Analysis of Synchronous Groupware," </title> <booktitle> User Interface Software, </booktitle> <year> 1993. </year>
Reference-contexts: By analyzing and cataloging the kinds of questions asked in writing requirements, Kuwana and Herbsleb [19] found that most of the questions asked related to how a particular feature would be implemented and very rarely why a feature had been included. Olson et. al. <ref> [25] </ref> developed a method for describing the percentage of time spent in Requirements meetings on various tasks and found that a large portion of time spent in meetings was to clarify points already discussed.
Reference: [26] <author> Onoe and Kuwana, </author> <title> "Communication analysis of Argument Structure-based Collaborative Design", </title> <type> NTT Technical Report. </type>
Reference: [27] <author> Perry, D. E. and Michael Evangelist, </author> <title> "An empirical study of software interface errors," </title> <booktitle> Proc. International Symposium on New Directions in Computing, </booktitle> <address> Trondheim, Norway, </address> <year> 1985, </year> <pages> 32-38. </pages>
Reference: [28] <author> Perry, D. E. and Michael Evangelist, </author> <title> "An empirical study of software interface errors: An update," </title> <booktitle> Proc. Twentieth Hawaii International Conference on System Sciences, Kailua-Kona, </booktitle> <year> 1987, </year> <pages> 113-126. </pages>
Reference: [29] <editor> Potts et. al. </editor> <booktitle> "Inquiry-Based Requirements Analysis" IEEE Software, </booktitle> <month> March </month> <year> 1994. </year>
Reference-contexts: Lubars, Potts and Richter <ref> [29] </ref> did a similar study of 23 organizations, but focused on the Requirements analysis process exclusively. That study clearly demonstrated that informal October 24, 1995 3 documentation, communication and coordination are all more important during what we now call the conceptual design phase, than conventional notational and analytic methodologies. 1.2. <p> In particular, many software engineering and human-computer interaction October 24, 1995 4 researchers have recently focused on the role of scenarios in defining system Requirements and in exploring design options <ref> [29] </ref>. This use of scenarios contrasts with their role in validating existing specifications or designs because it is aimed at generating such documents. 2. Methodology 2.1.
Reference: [30] <author> Potts et. al., </author> <title> "An Evaluation of Inquiry-Based Requirements Analysis for an Internet Service," </title> <note> [forth-coming in REI '95] </note>
Reference: [31] <author> Potts, </author> <title> Colin "Software Engineering Research Revisited", </title> <booktitle> IEEE Software 1993. </booktitle>
Reference: [32] <author> Potts, Colin, Al Badre and Jay David Bolter. </author> <title> Synthesis: A Computer System for the Rich Recording and Indexing of Collaborative Ideas. </title> <year> 1993. </year>
Reference: [33] <author> Potts, Colin. </author> <title> Invented Requirements and Imagined Customers: Requirements Engineering for Off-the-Shelf Software. </title> <booktitle> Second IEEE International Symposium on Requirements Engineering, </booktitle> <address> Los Alamitos, CA, </address> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year> <note> p. 128 </note>
Reference: [34] <editor> Randall et al "Steps towards a Partnership: </editor> <booktitle> Ethnography and System Design", </booktitle> <year> 1994. </year>
Reference: [35] <author> Sakamoto and Kuwana, </author> <title> "Toward integrated support of synchronous and asynchronous communicatino in cooperative work: an empirical study of real group communication", </title> <booktitle> ACM COOCS 1993. </booktitle> <month> October 24, </month> <year> 1995 </year> <month> 25 </month>
Reference: [36] <author> Schon, Donald A. </author> <title> The Reflective Practitioner: How Professionals Think in Action. </title> <publisher> Harper Collins Publishers, </publisher> <year> 1983. </year>
Reference: [37] <editor> Simon, </editor> <publisher> Herbert A., </publisher>
Reference: [38] <institution> Sommerville et al "Integrating Ethnography into the Requirements Engineering Process" 1993. </institution>
Reference: [39] <author> Truex, Duane P. and Heinz K. Klein, </author> <title> "A Rejection of Structure as a Basis for Information Systems Development", Collaborative Work, </title> <journal> Social Communications and Information Systems, </journal> <year> 1991. </year>
Reference: [40] <author> Waltz, Elam and Curtis, </author> <title> Inside a Software Design Team: Knowledge Acquisition, Sharing, and Integration. </title> <journal> CACM, Oct. 1993. </journal> <volume> Vol. 36, No. </volume> <pages> 10. </pages>
References-found: 41

