URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume4/vanbeek96a.ps.Z
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/vanbeek96a.html
Root-URL: 
Email: vanbeek@cs.ualberta.ca  dmanchak@vnet.ibm.com  
Title: The Design and Experimental Analysis of Algorithms for Temporal Reasoning  
Author: Peter van Beek Dennis W. Manchak 
Address: Edmonton, Alberta, Canada T6G 2H1  
Affiliation: Department of Computing Science, University of Alberta  
Note: Journal of Artificial Intelligence Research 4 (1996) 1-18 Submitted 9/95; published 1/96  
Abstract: Many applications|from planning and scheduling to problems in molecular biology| rely heavily on a temporal reasoning component. In this paper, we discuss the design and empirical analysis of algorithms for a temporal reasoning system based on Allen's influential interval-based framework for representing temporal information. At the core of the system are algorithms for determining whether the temporal information is consistent, and, if so, finding one or more scenarios that are consistent with the temporal information. Two important algorithms for these tasks are a path consistency algorithm and a backtracking algorithm. For the path consistency algorithm, we develop techniques that can result in up to a ten-fold speedup over an already highly optimized implementation. For the backtracking algorithm, we develop variable and value ordering heuristics that are shown empirically to dramatically improve the performance of the algorithm. As well, we show that a previously suggested reformulation of the backtracking search problem can reduce the time and space requirements of the backtracking search. Taken together, the techniques we develop allow a temporal reasoning component to solve problems that are of practical size.
Abstract-found: 1
Intro-found: 1
Reference: <author> Aho, A. V., Hopcroft, J. E., & Ullman, J. D. </author> <year> (1974). </year> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley. </publisher>
Reference: <author> Allen, J. F. </author> <year> (1983). </year> <title> Maintaining knowledge about temporal intervals. </title> <journal> Comm. ACM, </journal> <volume> 26, </volume> <pages> 832-843. </pages>
Reference-contexts: We experimentally compared two practical methods for composition that have been proposed in the literature. Allen (1983) gives a method for composition which uses a table of size 13 fi 13. The table gives the composition of the basic relations <ref> (see Allen, 1983, for the table) </ref>. The composition of two labels is computed by a nested loop that forms the union of the pairwise composition of the basic relations in the labels.
Reference: <author> Allen, J. F., & Koomen, J. A. </author> <year> (1983). </year> <title> Planning using a temporal world model. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 741-747 Karlsruhe, West Germany. </address>
Reference-contexts: We experimentally compared two practical methods for composition that have been proposed in the literature. Allen (1983) gives a method for composition which uses a table of size 13 fi 13. The table gives the composition of the basic relations <ref> (see Allen, 1983, for the table) </ref>. The composition of two labels is computed by a nested loop that forms the union of the pairwise composition of the basic relations in the labels.
Reference: <author> Benzer, S. </author> <year> (1959). </year> <title> On the topology of the genetic fine structure. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. Sci. USA, </institution> <month> 45, </month> <pages> 1607-1620. </pages>
Reference-contexts: Model B (n) is intended to model the problems that arise in molecular biology <ref> (as estimated from the problem discussed in Benzer, 1959) </ref>. Model S (n; p) allows us to study how algorithm performance depends on the important problem characteristic of sparseness of the underlying constraint graph.
Reference: <author> Bitner, J. R., & Reingold, E. M. </author> <year> (1975). </year> <title> Backtrack programming techniques. </title> <journal> Comm. ACM, </journal> <volume> 18, </volume> <pages> 651-655. </pages>
Reference: <author> Bruce, B. C. </author> <year> (1972). </year> <title> A model for temporal references and its application in a question answering program. </title> <journal> Artificial Intelligence, </journal> <volume> 3, </volume> <pages> 1-25. </pages>
Reference: <author> Dechter, R. </author> <year> (1992). </year> <title> From local to global consistency. </title> <journal> Artificial Intelligence, </journal> <volume> 55, </volume> <pages> 87-107. </pages>
Reference-contexts: Forward checking (Haralick & Elliott, 1980) is a technique where it is determined and recorded how the instantiation of the current variable restricts the possible instantiations of future variables. This technique can be viewed as a hybrid of tree search and consistency algorithms (see Nadel, 1989; Nudel, 1983). <ref> (See Dechter, 1992, for a general survey on backtracking.) </ref> 4.1 Alternative formulations Let C be the matrix representation of an IA network, where C ij is the label on edge (i; j).
Reference: <author> Dechter, R., & Pearl, J. </author> <year> (1988). </year> <title> Network-based heuristics for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34, </volume> <pages> 1-38. </pages>
Reference: <author> Freuder, E. C. </author> <year> (1982). </year> <title> A sufficient condition for backtrack-free search. </title> <journal> J. ACM, </journal> <volume> 29, </volume> <pages> 24-32. </pages>
Reference: <author> Ginsberg, M. L., Frank, M., Halpin, M. P., & Torrance, M. C. </author> <year> (1990). </year> <title> Search lessons learned from crossword puzzles. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 210-215 Boston, Mass. </address>
Reference: <author> Golomb, S., & Baumert, L. </author> <year> (1965). </year> <title> Backtrack programming. </title> <journal> J. ACM, </journal> <volume> 12, </volume> <pages> 516-524. </pages>
Reference-contexts: Backtracking Algorithm Allen (1983) was the first to propose that a backtracking algorithm <ref> (Golomb & Baumert, 1965) </ref> could be used to find a consistent scenario of an IA network. In the worst case, a backtracking algorithm can take an exponential amount of time to complete.
Reference: <author> Golumbic, M. C., & Shamir, R. </author> <year> (1993). </year> <title> Complexity and algorithms for reasoning about time: A graph-theoretic approach. </title> <journal> J. ACM, </journal> <volume> 40, </volume> <pages> 1108-1133. </pages>
Reference: <author> Haralick, R. M., & Elliott, G. L. </author> <year> (1980). </year> <title> Increasing tree search efficiency for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 14, </volume> <pages> 263-313. </pages>
Reference-contexts: In chronological backtracking, when the search reaches a dead end, the search simply backs up to the next most recently instantiated variable and tries a different instantiation. Forward checking <ref> (Haralick & Elliott, 1980) </ref> is a technique where it is determined and recorded how the instantiation of the current variable restricts the possible instantiations of future variables.
Reference: <author> Hogge, J. C. </author> <year> (1987). </year> <title> TPLAN: A temporal interval-based planner with novel extensions. </title> <institution> Department of computer science technical report UIUCDCS-R-87, University of Illinois. </institution>
Reference: <author> Hooker, J. N. </author> <year> (1994). </year> <title> Needed: An empirical science of algorithms. </title> <journal> Operations Research, </journal> <volume> 42, </volume> <pages> 201-212. </pages> <editor> van Beek & Manchak Ladkin, P., & Reinefeld, A. </editor> <year> (1992). </year> <title> Effective solution of qualitative interval constraint problems. </title> <journal> Artificial Intelligence, </journal> <volume> 57, </volume> <pages> 105-124. </pages>
Reference-contexts: There are two approaches: (i) collect a set of "benchmark" problems that are representative of problems that arise in practice, and (ii) randomly generate problems and "investigate how algorithmic performance depends on problem characteristics ... and learn to predict how an algorithm will perform on a given problem class" <ref> (Hooker, 1994) </ref>. For IA networks, there is no existing collection of large benchmark problems that actually arise in practice|as opposed to, for example, planning in a toy domain such as the blocks world.
Reference: <author> Ladkin, P., & Reinefeld, A. </author> <year> (1993). </year> <title> A symbolic approach to interval constraint problems. </title> <editor> In Calmet, J., & Campbell, J. (Eds.), </editor> <booktitle> Artificial Intelligence and Symbolic Mathematical Computing, Springer Lecture Notes in Computer Science 737. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: <author> Ladkin, P. B., & Maddux, R. D. </author> <year> (1988). </year> <title> On binary constraint networks. </title> <type> Technical report, </type> <institution> Kestrel Institute, Palo Alto, Calif. </institution>
Reference: <author> Mackworth, A. K. </author> <year> (1977). </year> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8, </volume> <pages> 99-118. </pages>
Reference: <author> Montanari, U. </author> <year> (1974). </year> <title> Networks of constraints: Fundamental properties and applications to picture processing. </title> <journal> Inform. Sci., </journal> <volume> 7, </volume> <pages> 95-132. </pages>
Reference: <author> Nadel, B. A. </author> <year> (1989). </year> <title> Constraint satisfaction algorithms. </title> <journal> Computational Intelligence, </journal> <volume> 5, </volume> <pages> 188-224. </pages>
Reference: <author> Nebel, B., & Burckert, H.-J. </author> <year> (1995). </year> <title> Reasoning about temporal relations: A maximal tractable subclass of Allen's interval algebra. </title> <journal> J. ACM, </journal> <volume> 42, </volume> <pages> 43-66. </pages>
Reference-contexts: ) ^ (A &lt; A + ) ^ (A B + ); where A and A + represent the start and end points of interval A, respectively. (See Ladkin & Maddux, 1988; van Beek & Cohen, 1990, for an enumeration of the allowed relations for SA networks.) In NB networks <ref> (Nebel & Burckert, 1995) </ref>, the allowed relations between two intervals are only those subsets of I that can be translated, using the relations f&lt;, , =, &gt;, , 6=g, into conjunctions of Horn clauses that express the relations between the endpoints of the intervals.
Reference: <author> Nudel, B. </author> <year> (1983). </year> <title> Consistent-labeling problems and their algorithms: Expected-complexities and theory-based heuristics. </title> <journal> Artificial Intelligence, </journal> <volume> 21, </volume> <pages> 135-178. </pages>
Reference-contexts: Two of their heuristics cannot be applied in our context as the heuristics assume a constraint satisfaction problem with finite domains, whereas IA networks are examples of constraint satisfaction problems with infinite domains. A third heuristic <ref> (due to B. Nudel, 1983) </ref> closely corresponds to our cardinality heuristic. All experiments were performed on a Sun 4/25 with 12 megabytes of memory.
Reference: <author> Purdom, Jr., P. W. </author> <year> (1983). </year> <title> Search rearrangement backtracking and polynomial average time. </title> <journal> Artificial Intelligence, </journal> <volume> 21, </volume> <pages> 117-133. </pages> <editor> van Beek, P. </editor> <year> (1992). </year> <title> Reasoning about qualitative temporal information. </title> <journal> Artificial Intelligence, </journal> <volume> 58, </volume> <pages> 297-326. </pages> <editor> van Beek, P., & Cohen, R. </editor> <year> (1990). </year> <title> Exact and approximate reasoning about temporal relations. </title> <journal> Computational Intelligence, </journal> <volume> 6, </volume> <pages> 132-144. </pages>
Reference: <author> Vilain, M., & Kautz, H. </author> <year> (1986). </year> <title> Constraint propagation algorithms for temporal reasoning. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 377-382 Philadelphia, Pa. </address>
Reference-contexts: Our alternative formulation is based on results for two restricted classes of IA networks, denoted here as SA networks and NB networks. In IA networks, the relation between two intervals can be any subset of I, the set of all thirteen basic relations. In SA networks <ref> (Vilain & Kautz, 1986) </ref>, the allowed relations between two intervals are only those subsets of I that can be translated, using the relations f&lt;, , =, &gt;, , 6=g, into conjunctions of 11 van Beek & Manchak relations between the endpoints of the intervals.
Reference: <author> Vilain, M., Kautz, H., & van Beek, P. </author> <year> (1989). </year> <title> Constraint propagation algorithms for temporal reasoning: </title> <note> A revised report. In Weld, </note> <editor> D. S., & de Kleer, J. (Eds.), </editor> <booktitle> Readings in Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 373-381. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Wallace, R. J., & Freuder, E. C. </author> <year> (1992). </year> <title> Ordering heuristics for arc consistency algorithms. </title> <booktitle> In Proceedings of the Ninth Canadian Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 163-169 Vancouver, B.C. </address> <month> 18 </month>
References-found: 26

