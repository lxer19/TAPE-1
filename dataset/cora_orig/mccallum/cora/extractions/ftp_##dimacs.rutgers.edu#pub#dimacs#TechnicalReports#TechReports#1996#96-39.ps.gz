URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1996/96-39.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1996.html
Root-URL: http://www.cs.rutgers.edu
Title: Deterministic and Randomized Bounded Truth-table Reductions of P, NL, and L to Sparse Sets  
Author: by Dieter van Melkebeek ; 
Note: 2 Most of the research was done while the author was funded as a Research Assistant of the Belgian National Fund for Scientific Research at the  DIMACS is a partnership of Rutgers University, Princeton University, AT&T Research, Bellcore, and Bell Laboratories. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Address: Chicago, IL 60637  
Affiliation: Department of Computer Science The University of Chicago  Katholieke Universiteit Leuven.  
Abstract: DIMACS Technical Report 96-39 September 1996 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, O. Goldreich, J. H. stad, and R. Peralta. </author> <title> Simple constructions of almost k-wise independent random variables. </title> <booktitle> In Proceedings of the 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 544-553. </pages> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: This yields a RNC 2 algorithm for CVP. Next they prove that the rank of this system is always m O (log m), if Y = D fi with D the following "small-bias sample space" <ref> [17, 1] </ref>: D = f ( u i ; v ) m1 where b 2 f2 3 t j t 2 Ng with b 2 O (log m), and ; represents the standard inner product of the vector space GF (2 b ) over GF (2).
Reference: [2] <author> V. Arvind, J. Kobler, and M. Mundhenk. </author> <title> On bounded truth-table, conjunctive, and randomized reductions to sparse sets. </title> <booktitle> In Proceedings of the 12th Conference onF ounda-tions of Software Technology and Theoretical Computer Science, volume 652 of Lecture Notes in Computer Science, </booktitle> <pages> pages 140-151. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference-contexts: Earlier, Ranjan and Rohatgi [22] had shown this theorem for reductions with one-sided error on the non-membership side. Arvind, Kobler and Mundhenk <ref> [2] </ref> improved upon that, but the question whether the statement was true of reductions with one-sided error on the membership side, and of reductions with two-sided error remained open.
Reference: [3] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity I, </title> <booktitle> volume 11 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: We conclude the paper by mentioning possible directions for further research in section 5. 2 Notation and Preliminaries Most of our notation and definitions are standard <ref> [3] </ref>. denotes the binary alphabet f0; 1g. We consider the lexicographic ordering 6 ` on fl .
Reference: [4] <author> L. Berman and J. Hartmanis. </author> <title> On isomorphism and density of NP and other complete sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 6(2) </volume> <pages> 305-322, </pages> <year> 1977. </year>
Reference-contexts: Two major issues motivate them in doing so: * A fundamental result by Meyer <ref> [4] </ref> states that the sets polynomial-time Turing reducible to sparse sets are precisely those that have polynomial-size (non-uniform) circuits. The same holds for truth-table reductions, i.e., Turing reductions with non-adaptive queries. <p> The same holds for truth-table reductions, i.e., Turing reductions with non-adaptive queries. Consequently, a sparse hard set for NP under polynomial-time Turing reductions exists iff a sparse hard set for NP under polynomial-time truth-table reductions exists iff every set in NP has polynomial-size circuits. * Berman and Hartmanis <ref> [4] </ref> observed that all known sets complete for NP under polynomial-time computable many-one reductions, are polynomial-time isomorphic, i.e., there exist bijective polynomial-time computable and polynomial-time invertible many-one reductions between them. They conjectured that this property holds for all NP-complete sets.
Reference: [5] <author> J. Cai, A. Naik, and D. Sivakumar. </author> <title> Bounded truth-table reductions of P. </title> <type> Technical Report TR-95-42, </type> <institution> Department of Computer Science, State University of New York at Buffalo, </institution> <month> September </month> <year> 1995. </year>
Reference-contexts: Cai, Naik and Sivakumar [6] next considered truth-table reductions. They argued that the existence of a sparse hard set for P under logspace computable bounded truth-table reductions implies P = NC 2 <ref> [5] </ref>, but left the implication P = L open. We establish here as our main result that this final collapse does follow: Theorem 1 (Main Theorem) There is no sparse hard set for P under logspace computable bounded truth-table reductions unless P = L. <p> Section 3 deals with deterministic reductions. We first describe previous work and indicate how our results relate to it. Next we prove our Main Theorem that there is no sparse hard set for P under logspace computable bounded truth-table reductions unless P collapses to L. As in previous papers <ref> [19, 7, 6, 5] </ref>, the proof structure parallels the one used by Ogiwara and Watanabe [21] for NP. We construct a space-efficient algorithm for the P-complete circuit value problem, based on the reduction of a well-chosen auxiliary set in P to a sparse set. <p> We will solve this problem by using variable sized subsets of a particular kind obtained by considering intervals of allowable queries. For the sake of completeness of the overview, we mention the result by Cai, Naik and Sivakumar <ref> [6, 5] </ref> that the existence of a sparse hard set for P under logspace bounded truth-table reductions implies that P NC 2 . They use a reduction from A 1 for all elements of the set D defined by equation (5) and certain error-correcting capabilities of this small-bias sample space.
Reference: [6] <author> J. Cai, A. Naik, and D. Sivakumar. </author> <title> On the existence of hard sparse sets under weak reductions. </title> <booktitle> In Proceedings of the 13th Symposium on Theoretical Aspects of Computer - 36 - Science, volume 1046 of Lecture Notes in Computer Science, </booktitle> <pages> pages 307-318. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference-contexts: Ogihara [19] showed that the existence of a sparse hard set for P under logspace computable many-one reductions implies that P DSPACE [log 2 n], and Cai and Sivakumar [7] subsequently proved that this hypothesis actually yields P = L. Cai, Naik and Sivakumar <ref> [6] </ref> next considered truth-table reductions. They argued that the existence of a sparse hard set for P under logspace computable bounded truth-table reductions implies P = NC 2 [5], but left the implication P = L open. <p> Given this state of affairs, complexity theorists wondered whether randomization might help: They started investigating the existence of sparse hard sets for NP under randomized polynomial-time reductions. Cai, Naik and Sivakumar <ref> [6] </ref> showed that there is no sparse hard set for NP under polynomial-time randomized two-sided error many-one reductions with confidence as small as inversely polynomial unless all of NP has polynomial-time randomized algorithms with bounded one-sided error. <p> Recently, Ogihara [19] made significant progress in showing this condition also necessary in the case of many-one reductions, and Cai and Sivakumar [7] actually proved it: There is no sparse hard set for P under logspace many-one reductions unless P = L. Cai, Naik and Sivakumar <ref> [6] </ref> then tried to extend this result to bounded truth-table reductions, and we establish this extension here: There is no sparse hard set for P under logspace computable bounded truth-table reductions unless P = L. <p> We generalize this theorem and obtain new results for various sparseness conditions, space bounds and bounds on the number of queries of the truth-table reduction. However, the problem remains open for general truth-table reductions and Turing reductions. - 3 - Regarding randomized reductions, Cai, Naik and Sivakumar <ref> [6] </ref> showed that there is no sparse hard set for P under logspace randomized two-sided error many-one reductions with confidence at least inversely polynomial unless all of P has randomized logspace algorithms with zero error, provided two-way read access to the random bit tape used. <p> Section 3 deals with deterministic reductions. We first describe previous work and indicate how our results relate to it. Next we prove our Main Theorem that there is no sparse hard set for P under logspace computable bounded truth-table reductions unless P collapses to L. As in previous papers <ref> [19, 7, 6, 5] </ref>, the proof structure parallels the one used by Ogiwara and Watanabe [21] for NP. We construct a space-efficient algorithm for the P-complete circuit value problem, based on the reduction of a well-chosen auxiliary set in P to a sparse set. <p> This extends a result by Cai, Naik and Sivakumar <ref> [6] </ref> for many-one reductions. As in that paper, the proof uses the Hadamard encoding of gate assignments - 4 - of circuits defined by Ogihara [19] to construct an auxiliary set. <p> As in the deterministic case, we obtain results for NL and L. Moreover, in the randomized case we can also apply our construction to NP by virtue of Valiant and Vazirani's reduction [24], as Cai, Naik and Sivakumar <ref> [6] </ref> showed for many-one reductions: There is no sparse hard set for NP under randomized two-sided error polynomial-time bounded truth-table reductions with confidence at least inversely polynomial unless NP = RP. <p> However, for the case of a reduction from A 1 , Cai, Naik and Sivakumar <ref> [6] </ref> made (a slightly weaker version of) the following observation: Let Y be any subset of m fi . * Either there is a popular query, i.e., a string w that the reduction queries for many inputs hC; x; y; ai where (y; a) ranges over Y . <p> We will solve this problem by using variable sized subsets of a particular kind obtained by considering intervals of allowable queries. For the sake of completeness of the overview, we mention the result by Cai, Naik and Sivakumar <ref> [6, 5] </ref> that the existence of a sparse hard set for P under logspace bounded truth-table reductions implies that P NC 2 . They use a reduction from A 1 for all elements of the set D defined by equation (5) and certain error-correcting capabilities of this small-bias sample space. <p> As in the deterministic case, we next parameterize it to a Randomized Generic Theorem for P. Finally, we prove similar results on the sparse hard set problem for NL, L, and also for NP. 4.1 Previous Work Cai, Naik and Sivakumar <ref> [6] </ref> proved that there is no sparse hard set for P under randomized two-sided error many-one reductions computable in logspace and with confidence at least inversely polynomial unless P ZP fl L. <p> Nisan [18] gives strong evidence that in general the multiple access model is more powerful than the read-once model, but in this specific context that may not be the case. Acknowledgments I would like to thank Ashish Naik for explaining the results of Cai, Naik and Sivakumar <ref> [6] </ref>, and both Lance Fortnow and Ashish Naik for helpful discussions, comments, and for proofreading the paper. I also thank Jin-Yi Cai, Mitsu Ogihara, and D. Sivakumar for their encouragement.
Reference: [7] <author> J. Cai and D. Sivakumar. </author> <title> The resolution of a Hartmanis conjecture. </title> <booktitle> In Proceedings of the 36th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 362-371. </pages> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: Ogihara [19] showed that the existence of a sparse hard set for P under logspace computable many-one reductions implies that P DSPACE [log 2 n], and Cai and Sivakumar <ref> [7] </ref> subsequently proved that this hypothesis actually yields P = L. Cai, Naik and Sivakumar [6] next considered truth-table reductions. <p> As before, note that if P = L, sparse complete sets for P clearly exist under any reasonable logspace computable reducibility. Recently, Ogihara [19] made significant progress in showing this condition also necessary in the case of many-one reductions, and Cai and Sivakumar <ref> [7] </ref> actually proved it: There is no sparse hard set for P under logspace many-one reductions unless P = L. <p> Section 3 deals with deterministic reductions. We first describe previous work and indicate how our results relate to it. Next we prove our Main Theorem that there is no sparse hard set for P under logspace computable bounded truth-table reductions unless P collapses to L. As in previous papers <ref> [19, 7, 6, 5] </ref>, the proof structure parallels the one used by Ogiwara and Watanabe [21] for NP. We construct a space-efficient algorithm for the P-complete circuit value problem, based on the reduction of a well-chosen auxiliary set in P to a sparse set. <p> We construct a space-efficient algorithm for the P-complete circuit value problem, based on the reduction of a well-chosen auxiliary set in P to a sparse set. We use the auxiliary set defined by Cai and Sivakumar <ref> [7] </ref>, which encapsulates Reed-Solomon encodings of the gate values of the circuits. The main ingredients of the algorithm are the NC 1 Vandermonde system solver by Cai and Sivakumar [7] to recover the encoded gate values, and a novel combinatorial argument for exploiting sparseness. <p> We use the auxiliary set defined by Cai and Sivakumar <ref> [7] </ref>, which encapsulates Reed-Solomon encodings of the gate values of the circuits. The main ingredients of the algorithm are the NC 1 Vandermonde system solver by Cai and Sivakumar [7] to recover the encoded gate values, and a novel combinatorial argument for exploiting sparseness. Similar to Cai and Sivakumar's construction, in case of reductions computable in NC 1 , our algorithm for the circuit value problem is actually NC 1 . <p> Cai and Sivakumar <ref> [7] </ref> also used the set A 1 , but viewed (2) as the linear equation m X y j g j = a (4) over GF (2) in the gate values g 1 ; : : : ; g m . <p> For fixed hC; xi, we say that hu; vi generates equation (7). The equations that result from Property 3 form a Vandermonde system, which is particularly interesting because we can determine the rank of and solve Vandermonde systems in NC 1 , as Cai and Sivakumar <ref> [7] </ref> showed. <p> They show that if it does, the NC 2 approach of Cai and Sivakumar <ref> [7] </ref> works. However, our work does not build upon this construction. 3.2 Main Result In this subsection, we establish our Main Theorem. <p> The proof will rely on a Combinatorial Lemma indicating how in general a space efficient reduction to a sparse set can be exploited, and on the algorithm by Cai and Sivakumar <ref> [7] </ref> to solve Vandermonde systems of equations. We will first prove the Main Theorem, and then the Combinatorial Lemma. We will also sketch the Vandermonde system solver. <p> In order to do so, we consider the auxiliary set A 2 defined by Cai and Sivakumar <ref> [7] </ref>: A 2 = fhC; x; u; vij C circuit with jxj inputs, ; x 2 fl ; u; v 2 GF (2 b ) for some b 2 f2 3 t j t 2 N g and m X u j1 g j = vg; (9) where g 1 ; <p> Cai and Sivakumar <ref> [7] </ref> proved that we can solve such systems in space O (b + log m). We will sketch their construction in a later subsubsection. <p> We sketch a proof here and refer to the paper by Cai and Sivakumar <ref> [7] </ref> for the details. We do the analysis only for finite fields of characteristic 2, because that is what we need in the proof of our Main Theorem, but the extension to other characteristics is straightforward.
Reference: [8] <author> J. Cai and D. Sivakumar. </author> <title> Resolution of Hartmanis' conjecture for NL-hard sparse sets. </title> <type> Technical Report TR-95-40, </type> <institution> Department of Computer Science, State University of New York at Buffalo, </institution> <month> September </month> <year> 1995. </year>
Reference-contexts: Another instantiation of this Generic Theorem yields that that there is no quasipolynomially dense hard set for P under polylog-space computable truth-table reductions using polylogarithmi-cally many queries unless P is in polylog-space. Finally, we apply the proof technique to NL and L, as Cai and Sivakumar <ref> [8] </ref> did for their results. This shows that there is no sparse hard set for NL under logspace computable bounded truth-table reductions unless NL = L, and that there is no sparse hard set for L under NC 1 -computable bounded truth-table reductions unless L = NC 1 . <p> Proof Assuming the existence of a sparse hard set for NL under logspace bounded truth-table reductions, we will show how to solve in logspace the NL-complete problem DAG-STCON. In order to do so, we consider a variant A 3 of the auxiliary set defined by Cai and Sivakumar <ref> [8] </ref>: A 3 = fhG; s; t; u; u 2 ; u 3 ; : : : ; u m1 ; vij G DAG with m vertices, s; t vertices of G; u; v 2 GF (2 b ) for some b 2 f2 3 t j t 2 N g
Reference: [9] <author> S. A. Cook and P. McKenzie. </author> <title> Problems complete for deterministic logarithmic space. </title> <journal> Journal of Algorithms, </journal> <volume> 8 </volume> <pages> 385-394, </pages> <year> 1987. </year>
Reference-contexts: DAG-STCON is complete for NL under logspace many-one reductions [23] and actually even under NC 1 -computable many-one reductions. - 5 - We denote the analogous problem for undirected acyclic graphs by F-STCON ("F" for forest). It is complete for L under NC 1 -computable many-one reductions <ref> [9] </ref>.
Reference: [10] <author> O. Goldreich and L. Levin. </author> <title> A hard-core predicate for all one-way functions. </title> <booktitle> In Proceedings of the 21st ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 25-32. </pages> <publisher> ACM, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: As in that paper, the proof uses the Hadamard encoding of gate assignments - 4 - of circuits defined by Ogihara [19] to construct an auxiliary set. Instead of the Vandermonde system solver in the deterministic case, we apply Goldreich and Levin's algorithm <ref> [10] </ref> to recover the encoded gate values, and combine it with a modified version of our Combinatorial Lemma. Next we parameterize the Randomized Main Theorem in the same vein as the deterministic Main Theorem. <p> They used Hadamard encodings in the form of the auxiliary language A 1 defined by Ogihara [19], and a probabilistic algorithm by Goldreich and Levin <ref> [10] </ref> to recover the code word. The same approach will allow us to extend their result to bounded truth-table reductions. Cai, Naik and Sivakumar applied the same technique to the sparse hard set problem for NL and L. <p> The proof uses Hadamard encodings instead of Reed-Solomon encodings as in the deterministic case. It is based on the probabilistic algorithm by Goldreich and Levin <ref> [10] </ref> to decode Hadamard codes, and on a randomized version of the Combinatorial Lemma. <p> An interesting property of this encoding is that a randomized oracle with confidence at least inversely polynomial suffices to recover the code word in RNC 1 . Goldreich and Levin <ref> [10] </ref> showed a way to do this, and we will sketch it in a subsequent subsubsection. Lemma 16 Let * : N ! (0; 1 2 ], and suppose that `(m) : * 2 ) is space constructible. <p> Therefore, we give an outline of the description and analysis of the algorithm that Goldreich and Levin proposed for this problem <ref> [10] </ref>. Proof Sketch (of Lemma 16) Fix y 2 fl , m 2 N, and a string g 2 m for which (16) holds. We will omit the argument m for ` and *.
Reference: [11] <author> J. Hartmanis. </author> <title> On log-tape isomorphisms of complete sets. </title> <journal> Theoretical Computer Science, </journal> <volume> 7(3) </volume> <pages> 273-286, </pages> <year> 1978. </year>
Reference-contexts: Turing reductions computable by logspace-uniform log-depth circuits are exactly those that have (non-uniform) polynomial-size log-depth circuits, and the same holds for truth-table reductions instead of Turing reductions. * Based on the observation that all known sets complete for P under logspace computable many-one reductions, are in fact logspace isomorphic, Hartmanis <ref> [11] </ref> conjectured that all P-complete sets are logspace isomorphic. By the same token as above, since a P-complete set of exponential density exists, this implies that sets complete for P under logspace computable many-one reductions cannot be sparse.
Reference: [12] <author> S. Homer and L. Longpre. </author> <title> On reductions of NP sets to sparse sets. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 48(2) </volume> <pages> 324-336, </pages> <year> 1994. </year>
Reference-contexts: We single out the crucial new way of exploiting the sparseness in a separate Combinatorial Lemma, and also consider some consequences of the Main Theorem for complexity classes above P. Then we generalize our Main Theorem and obtain an analogue for P of Homer and Longpre's result <ref> [12] </ref> for NP. The generalization parameterizes the sparseness condition, the space bound and the bound on the number of queries of the truth-table reduction.
Reference: [13] <author> J. Hong. </author> <title> On some deterministic space complexity problems. </title> <booktitle> In Proceedings of the 12th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 310-317. </pages> <publisher> ACM, </publisher> <address> New York, </address> <year> 1980. </year>
Reference-contexts: is acyclic, it suffices to perform from every vertex of G a lexicographic walk for no more than 2m steps, and check whether during that walk for every vertex w 0 visited, we go from w 0 to every one of its neighbors exactly once and in cyclic lexicographic order <ref> [13] </ref>. All of this can be done in logspace. * Check the successive powers of u for correctness. This can be done in logspace as argued in the proof of Theorem 12. * Check that the equation P m j=1 u j1 e j = v holds.
Reference: [14] <author> R. Karp and R. Lipton. </author> <title> Turing machines that take advice. </title> <journal> L'Enseignement Mathematique, </journal> <volume> 28(2) </volume> <pages> 191-209, </pages> <year> 1982. </year> <note> A preliminary version appeared in STOC 1980. </note>
Reference-contexts: In this respect, Mahaney [16] settled the problem - 2 - for many-one reductions: There is no sparse hard set for NP under polynomial-time many-one reductions unless P = NP. It appears very difficult to prove that the same holds for Turing reductions, but Karp and Lipton <ref> [14] </ref> showed that the existence of a sparse hard set for NP under polynomial-time Turing reductions collapses the polynomial-time hierarchy to the second level.
Reference: [15] <author> R. Ladner. </author> <title> The circuit value problem is log-space complete for P. </title> <journal> SIGACT News, </journal> <volume> 6(2) </volume> <pages> 18-20, </pages> <year> 1975. </year>
Reference-contexts: The instance hC; xi is in CVP if the marked gate of C outputs 1 on input x. CVP is complete for P under logspace many-one reductions <ref> [15] </ref>. Hence, it suffices to prove that CVP is in L to establish that P L. CVP is actually complete for P under weaker reductions, e.g., under NC 1 -computable many-one reductions.
Reference: [16] <author> S. Mahaney. </author> <title> Sparse complete sets for NP: Solution of a conjecture of Berman and Hartmanis. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 25(2) </volume> <pages> 130-143, </pages> <year> 1982. </year>
Reference-contexts: Intermediate types of reductions, such as bounded truth-table reductions, also play an im portant role. Note that if P = NP, sparse complete sets for NP obviously exist under any reasonable polynomial-time computable reducibility. In this respect, Mahaney <ref> [16] </ref> settled the problem - 2 - for many-one reductions: There is no sparse hard set for NP under polynomial-time many-one reductions unless P = NP.
Reference: [17] <author> J. Naor and M. Naor. </author> <title> Small-bias probability spaces: efficient constructions and applications. </title> <booktitle> In Proceedings of the 22nd ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 213-223. </pages> <publisher> ACM, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: This yields a RNC 2 algorithm for CVP. Next they prove that the rank of this system is always m O (log m), if Y = D fi with D the following "small-bias sample space" <ref> [17, 1] </ref>: D = f ( u i ; v ) m1 where b 2 f2 3 t j t 2 Ng with b 2 O (log m), and ; represents the standard inner product of the vector space GF (2 b ) over GF (2).
Reference: [18] <author> N. Nisan. </author> <title> On read-once vs. multiple access to randomness in logspace. </title> <journal> Theoretical Computer Science, </journal> <volume> 107 </volume> <pages> 135-144, </pages> <year> 1993. </year>
Reference-contexts: It is complete for L under NC 1 -computable many-one reductions [9]. We use the following notation introduced by Nisan <ref> [18] </ref>: RP fl SPACE [s (n)] denotes the class of sets A that can be accepted by a one-sided error probabilistic Turing machine M with two-way read access to its random tape that uses no more than s (n) work space on inputs of length n and always halts. <p> The randomized algorithms we construct use the latter model, because they basically simulate randomized circuits, and randomized circuits inherently have the ability to reuse their random seeds. Nisan <ref> [18] </ref> gives strong evidence that in general the multiple access model is more powerful than the read-once model, but in this specific context that may not be the case.
Reference: [19] <author> M. Ogihara. </author> <title> Sparse P-hard sets yield space-efficient algorithms. </title> <booktitle> In Proceedings of the 36th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 354-361. </pages> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1995. </year> <month> - 37 </month> - 
Reference-contexts: 1 Introduction Recently, complexity theorists made much progress on the sparse hard set problem for P, i.e., the question whether there are sparse hard sets for P under various logspace computable reducibilities. Ogihara <ref> [19] </ref> showed that the existence of a sparse hard set for P under logspace computable many-one reductions implies that P DSPACE [log 2 n], and Cai and Sivakumar [7] subsequently proved that this hypothesis actually yields P = L. Cai, Naik and Sivakumar [6] next considered truth-table reductions. <p> As before, note that if P = L, sparse complete sets for P clearly exist under any reasonable logspace computable reducibility. Recently, Ogihara <ref> [19] </ref> made significant progress in showing this condition also necessary in the case of many-one reductions, and Cai and Sivakumar [7] actually proved it: There is no sparse hard set for P under logspace many-one reductions unless P = L. <p> Section 3 deals with deterministic reductions. We first describe previous work and indicate how our results relate to it. Next we prove our Main Theorem that there is no sparse hard set for P under logspace computable bounded truth-table reductions unless P collapses to L. As in previous papers <ref> [19, 7, 6, 5] </ref>, the proof structure parallels the one used by Ogiwara and Watanabe [21] for NP. We construct a space-efficient algorithm for the P-complete circuit value problem, based on the reduction of a well-chosen auxiliary set in P to a sparse set. <p> This extends a result by Cai, Naik and Sivakumar [6] for many-one reductions. As in that paper, the proof uses the Hadamard encoding of gate assignments - 4 - of circuits defined by Ogihara <ref> [19] </ref> to construct an auxiliary set. Instead of the Vandermonde system solver in the deterministic case, we apply Goldreich and Levin's algorithm [10] to recover the encoded gate values, and combine it with a modified version of our Combinatorial Lemma. <p> We will call such a set a witness set. Much of the progress on this kind of problems relies on an appropriate choice of A. Ogihara <ref> [19] </ref> considered the set A 1 = fhC; x; y; ai j C circuit with jxj inputs; x 2 fl ; y 2 m ; a 2 and y j =1 g j = ag; (1) where g 1 ; : : : ; g m denote the gate values of <p> They used Hadamard encodings in the form of the auxiliary language A 1 defined by Ogihara <ref> [19] </ref>, and a probabilistic algorithm by Goldreich and Levin [10] to recover the code word. The same approach will allow us to extend their result to bounded truth-table reductions. Cai, Naik and Sivakumar applied the same technique to the sparse hard set problem for NL and L. <p> To create that list, we consider the auxiliary set A 5 defined by Ogihara <ref> [19] </ref>: A 5 = fhC; x; wij C circuit with jxj inputs and m gates; x 2 fl ; w 2 (GF (2)) m and m X w j g j = 1g; where g j denotes the value of the j-th gate of C on input x, and the arithmetic
Reference: [20] <author> M. Ogiwara and A. Lozano. </author> <title> On one-query self-reducible sets. </title> <booktitle> In Proceedings of the 6th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pages 139-151. </pages> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: solving the n fi n Vandermonde system over GF (2 b ) has depth O (b + log n), and we can generate it in space O (b + log n). fl 3.2.4 Consequences of the Main Theorem for classes above P Ogiwara and Watanabe [21] and Ogiwara and Lozano <ref> [20] </ref> proved that for C equal to NP, PP, C = P or Mod k P for some k &gt; 2, there is no sparse hard set for C under polynomial-time bounded truth-table reductions unless C = P.
Reference: [21] <author> M. Ogiwara and O. Watanabe. </author> <title> On polynomial-time bounded truth-table reducibility of NP sets to sparse sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(3) </volume> <pages> 471-483, </pages> <year> 1991. </year>
Reference-contexts: In bridging the gap between many-one reductions and Turing reductions, Ogiwara and Watanabe <ref> [21] </ref> obtained a breakthrough by extending Mahaney's theorem to bounded truth-table reductions: There is no sparse hard set for NP under polynomial-time bounded truth-table reductions unless P = NP. <p> Next we prove our Main Theorem that there is no sparse hard set for P under logspace computable bounded truth-table reductions unless P collapses to L. As in previous papers [19, 7, 6, 5], the proof structure parallels the one used by Ogiwara and Watanabe <ref> [21] </ref> for NP. We construct a space-efficient algorithm for the P-complete circuit value problem, based on the reduction of a well-chosen auxiliary set in P to a sparse set. <p> Therefore, the resulting circuit for solving the n fi n Vandermonde system over GF (2 b ) has depth O (b + log n), and we can generate it in space O (b + log n). fl 3.2.4 Consequences of the Main Theorem for classes above P Ogiwara and Watanabe <ref> [21] </ref> and Ogiwara and Lozano [20] proved that for C equal to NP, PP, C = P or Mod k P for some k &gt; 2, there is no sparse hard set for C under polynomial-time bounded truth-table reductions unless C = P.
Reference: [22] <author> D. Ranjan and P. Rohatgi. </author> <title> On randomized reductions to sparse sets. </title> <booktitle> In Proceedings of the 7th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pages 239-242. </pages> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Earlier, Ranjan and Rohatgi <ref> [22] </ref> had shown this theorem for reductions with one-sided error on the non-membership side. Arvind, Kobler and Mundhenk [2] improved upon that, but the question whether the statement was true of reductions with one-sided error on the membership side, and of reductions with two-sided error remained open.
Reference: [23] <author> W. Savitch. </author> <title> Maze recognizing automata and nondeterministic tape complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 7 </volume> <pages> 389-403, </pages> <year> 1973. </year>
Reference-contexts: The instance hG; s; ti belongs to DAG-STCON if there is a directed path in G from vertex s to vertex t. DAG-STCON is complete for NL under logspace many-one reductions <ref> [23] </ref> and actually even under NC 1 -computable many-one reductions. - 5 - We denote the analogous problem for undirected acyclic graphs by F-STCON ("F" for forest). It is complete for L under NC 1 -computable many-one reductions [9].
Reference: [24] <author> L. Valiant and V. Vazirani. </author> <title> NP is as easy as detecting unique solutions. </title> <journal> Theoretical Computer Science, </journal> <volume> 47 </volume> <pages> 85-93, </pages> <year> 1986. </year>
Reference-contexts: Finally, we apply the same technique to other complexity classes than P. As in the deterministic case, we obtain results for NL and L. Moreover, in the randomized case we can also apply our construction to NP by virtue of Valiant and Vazirani's reduction <ref> [24] </ref>, as Cai, Naik and Sivakumar [6] showed for many-one reductions: There is no sparse hard set for NP under randomized two-sided error polynomial-time bounded truth-table reductions with confidence at least inversely polynomial unless NP = RP. <p> The same approach will allow us to extend their result to bounded truth-table reductions. Cai, Naik and Sivakumar applied the same technique to the sparse hard set problem for NL and L. Using the randomized reduction from satisfiability to unique satisfiability by Valiant and Vazirani <ref> [24] </ref>, they were also able to obtain the first known result on the existence of sparse hard sets for NP under randomized many-one reductions with two-sided error: There is no sparse hard set for NP under polynomial-time randomized two-sided error many-one reductions with confidence at least inversely polynomial unless NP RP. <p> As in the deterministic case, this approach works for NL and L. In the randomized case, we can also apply it to NP. Sets in NP are not known to have unique membership proofs, but Valiant and Vazirani <ref> [24] </ref> showed that randomness allows us to reduce the number of proofs with high probability to one, if there is one. <p> We can then use the NC 1 solution checker to weed out the incorrect ones. The resulting algorithm for F-STCON is in RNC 1 . fl Valiant and Vazirani <ref> [24] </ref> constructed a randomized one-sided error many-one reduction of satisfiability to unique satisfiability computable in RNC 1 . It allows us to apply the strategy behind the Randomized Main Theorem to NP.
Reference: [25] <author> J. H. van Lint. </author> <title> Introduction to Coding Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year> <institution> Dieter van Melkebeek Department of Computer Science The University of Chicago 1100 East 58th Street Chicago, </institution> <address> IL 60637 USA Email: dieter@cs.uchicago.edu WWW: http://www.cs.uchicago.edu/~dieter </address>
Reference-contexts: Consequently, its elements can be represented as polynomials of degree less than b over GF (2). For b 2 f2 3 t j t 2 N g, f (x) = x b + x b=2 + 1 is irreducible over GF (2) <ref> [25] </ref>, and we will use this polynomial to construct GF (2 b ) for such b's. 3 Deterministic Reductions We start off with an overview of previous work, and describe how our results evolve from it. The reader can skip this subsection without loss of continuity.
References-found: 25

