URL: http://www.cs.helsinki.fi/~vilo/Publications/ISAAC96.ps
Refering-URL: http://www.cs.helsinki.fi/research/pmdm/publications/
Root-URL: 
Email: abra@cclu.lv  ukkonen,vilo@cs.helsinki.fi  
Phone: 2  
Title: Discovering Unbounded Unions of Regular Pattern Languages from Positive Examples (Extended Abstract)  
Author: Alvis Brazma Esko Ukkonen Jaak Vilo 
Address: 29 Rainis Bulevard, LV-1459 Riga, Latvia  P.O.Box 26, FIN-00014 University of Helsinki, Finland  
Affiliation: 1 Institute of Mathematics and Computer Science, University of Latvia  Department of Computer Science, University of Helsinki  
Abstract: The problem of learning unions of certain pattern languages from positive examples is considered. We restrict to the regular patterns, i.e., patterns where each variable symbol can appear only once, and to the substring patterns, which is a subclass of regular patterns of the type xffy, where x and y are variables and ff is a string of constant symbols. We present an algorithm that, given a set of strings, finds a good collection of patterns covering this set. The notion of a `good covering' is defined as the most probable collection of patterns likely to be present in the examples, assuming a simple probabilistic model, or equivalently using the Minimum Description Length (MDL) principle. Our algorithm is shown to approximate the optimal cover within a logarithmic factor. This extends a similar recent result for the so-called simple patterns. For substring patterns the running time of the algorithm is O(nN ), where n is the number and N the total lenght of the sequences.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. Angluin. </author> <title> Finding patterns common to a set of strings. </title> <journal> J. of Comp. and Syst. Sci., </journal> <volume> 21 </volume> <pages> 46-62, </pages> <year> 1980. </year>
Reference-contexts: By a shared property we simply mean a pattern of symbols that is contained in all sequences belonging to the same cluster. A natural formalism for describing such common patterns is the pattern languages of Angluin <ref> [1] </ref>.
Reference: 2. <author> H. Arimura, T. Shinohara, and S. Otsuki. </author> <title> Finding minimal generalizations for unions of pattern languages and its application to inductive inference from positive data. </title> <booktitle> In Proc. of the 11th STACS, Lecture Notes in Comp. Sci., </booktitle> <volume> 755, </volume> <pages> pages 649-660. </pages> <publisher> Springer, </publisher> <year> 1994. </year>
Reference-contexts: Stated in machine learning terminology, our problem is to learn unions of unbounded number of regular pattern languages from positive examples. A similar problem for bounded unions has been considered in <ref> [2] </ref>, where the learning in the limit (in the sense of Gold [7]) of such unions has been studied. The union of unbounded number of patterns cannot be learned in the limit from only positive examples [7].
Reference: 3. <author> A. Brazma, I. Jonassen, I. Eidhammer, and D. Gilbert. </author> <title> Approaches to automatic discovery of patterns in biosequences. </title> <type> Technical Report TR-113, </type> <institution> Department of Informatics, University of Bergen, Bergen, Norway, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: Note that a number of efficient heuristics are available for finding a hypotheses set fi (e.g., [9, 16], for a survey see <ref> [3] </ref>). Corollary 3. There exists an algorithm Greedy2 that, given a set of strings A and a set of patterns , finds a cover such that M ( ) M opt () filog jAj+ O (1) in time O (kAk kk + jj jAj log jAj).
Reference: 4. <author> A. Brazma, I. Jonassen, E. Ukkonen, and J. Vilo. </author> <title> Discovering patterns and sub-families in biosequences. </title> <booktitle> In Proceedings of Fourth International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 34-43. </pages> <publisher> AAAI Press, </publisher> <year> 1996. </year>
Reference-contexts: We have also developed and implemented a heuristic version of our algorithm for the pattern class used in the protein sequence database PROSITE and carried out some experiments on discovering patterns and subfamilies in protein sequences <ref> [4] </ref>. The algorithm has been able to discover patterns characterizing subfamilies of biosequences recognized by biologists [4]. Acknowledgements. Alvis Brazma was supported by the Finnish Centre for the International Mobility and by the Latvian Council of Sciences (grant Nr. 93.593). <p> also developed and implemented a heuristic version of our algorithm for the pattern class used in the protein sequence database PROSITE and carried out some experiments on discovering patterns and subfamilies in protein sequences <ref> [4] </ref>. The algorithm has been able to discover patterns characterizing subfamilies of biosequences recognized by biologists [4]. Acknowledgements. Alvis Brazma was supported by the Finnish Centre for the International Mobility and by the Latvian Council of Sciences (grant Nr. 93.593). Part of his work has been done at the Department of Computer Science, University of Helsinki.
Reference: 5. <author> A. Brazma, E. Ukkonen, and J. Vilo. </author> <title> Finding a good collection of patterns covering a set of sequences. </title> <type> Technical Report C-1995-60, </type> <institution> Department of Computer Science, University of Helsinki, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: Pattern i that gives the maximal relative compression is selected ("greedily") next. To satisfy the complexity requirements of the theorem, the algorithm should be implemented in a slightly less straight-forward way using priority queue for managing the hypotheses set (for details see <ref> [5] </ref>). Next, let us prove that the cover fi returned by the algorithm satisfies the theorems. Let C j (x) = u j x w j ; for some reals u j and w j .
Reference: 6. <author> V. Chvatal. </author> <title> A greedy heuristic for the set-covering problem. </title> <journal> Math. Oper. Res., </journal> <volume> 4 </volume> <pages> 233-235, </pages> <year> 1979. </year>
Reference-contexts: i ; F i ) 2 maximizing u ( i )j (F i "U)jw ( i ) [ f ( i ; F i " U )g f ( i ; F i )g return The algorithm is a variation of the greedy algorithm for the weighted set cover problem <ref> [6] </ref>.
Reference: 7. <author> E. M. Gold. </author> <title> Language identification in the limit. </title> <journal> Information and Control, </journal> <volume> 10 </volume> <pages> 447-474, </pages> <year> 1967. </year>
Reference-contexts: Stated in machine learning terminology, our problem is to learn unions of unbounded number of regular pattern languages from positive examples. A similar problem for bounded unions has been considered in [2], where the learning in the limit (in the sense of Gold <ref> [7] </ref>) of such unions has been studied. The union of unbounded number of patterns cannot be learned in the limit from only positive examples [7]. <p> A similar problem for bounded unions has been considered in [2], where the learning in the limit (in the sense of Gold <ref> [7] </ref>) of such unions has been studied. The union of unbounded number of patterns cannot be learned in the limit from only positive examples [7]. Moreover, learning in the limit assumes that there are potentially infinitely many examples, while in practice the number of (even potential) examples is finite, and frequently quite small.
Reference: 8. <author> L. C. K. Hui. </author> <title> Color set size problem with application to string matching. </title> <booktitle> In Proc. of Third Annual Symposium on Combinatorial Pattern Matching, Lecture Notes in Comp. Science, </booktitle> <volume> 644, </volume> <pages> pages 230-243. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: All substrings of every string in GST are represented by some (may be partial) path from the root. GST can be constructed in linear time on the sum of the lengths of strings it contains <ref> [8] </ref>. For the substring pattern case the input of the algorithm is only the set U = A, but the pairs ( i ; F i ) are found by the algorithm Greedy substring from A. We first build the GST in time O (kAk). <p> For each i we also compute c i = c ( i ; i) and keep track of the best i (i.e., i having the highest c i ) so far. This can be done in time O (kAk) by using the construction described on page 239 of <ref> [8] </ref>.
Reference: 9. <author> I. Jonassen, J. F. Collins, and D. G. Higgins. </author> <title> Finding flexible patterns in unaligned protein sequences. </title> <journal> Protein Science, </journal> <volume> 4(8) </volume> <pages> 1587-1595, </pages> <year> 1995. </year>
Reference-contexts: Note that a number of efficient heuristics are available for finding a hypotheses set fi (e.g., <ref> [9, 16] </ref>, for a survey see [3]). Corollary 3.
Reference: 10. <author> P. Kilpelainen, H. Mannila, and E. Ukkonen. </author> <title> MDL learning of unions of simple pattern languages from positive examples. </title> <booktitle> In Proceedings of the 2nd European conference EuroCOLT'95, </booktitle> <pages> pages 252-260, </pages> <year> 1995. </year>
Reference-contexts: In practice one has to use some particular coding system, and thus to use a heuristic MDL principle. MDL based learning of pattern languages has been studied in <ref> [10] </ref>. The class of patterns considered in [10] consists of the so called simple patterns where variables correspond to unit-length substitutions (therefore all words in the generated pattern language have equal length and the language is finite). <p> In practice one has to use some particular coding system, and thus to use a heuristic MDL principle. MDL based learning of pattern languages has been studied in <ref> [10] </ref>. The class of patterns considered in [10] consists of the so called simple patterns where variables correspond to unit-length substitutions (therefore all words in the generated pattern language have equal length and the language is finite). <p> It is proved there that the best pattern according to the MDL principle using a natural coding scheme can be approximated in polynomial time within a logarithmic factor. In this paper we extend the approach of <ref> [10] </ref> for regular patterns. Additionally, we study the Bayesian interpretation of MDL [14] in this particular case. We assume a probability distribution of patterns and sequences, and then look for the set of patterns having the highest conditional probability under the assumption that it has `generated' the given examples. <p> Such a `best' pattern is the same as the best according to our heuristic MDL if we select certain parameters in the MDL scheme as suggested by the probabilistic model of sequences and patterns. Unfortunately finding the best pattern set is NP-hard. Like in <ref> [10] </ref> we develop a greedy polynomial-time approximation algorithm and prove that it approximates the optimal solution within a logarithmic factor. For substring patterns the algorithm runs in O (nN ) time, where n is the number of examples, and N is the total length of examples. <p> + M 2 (); where M 1 () = ` P 1 () log r; M 2 () = ` P 2 (A) j=1 4 MDL approach The MDL principle offers another possibility to define essentially the same optimality criterion as in Section 3 for pattern set as follows (c.f. <ref> [10] </ref>). Let us assume, that we want to transmit the sequences A = fff 1 ; : : : ; ff n g over a channel. <p> We denote the minimum value of M () by M opt . Because maximization of expression (4) contains the NP-hard set covering problem as a special case <ref> [10] </ref>, the problem of finding M opt for a given set A is NP-hard. Hence we will develop a fast approximation algorithm. We will prove two approximation theorems the first for the case of substring patterns and the second for the case of regular patterns. <p> Note that algorithm Greedy constructs an ordered cover. For the next few paragraphs we will closely follow <ref> [10] </ref>. We will compare some optimal ordered cover, say I = (i 1 ; : : : ; i k ), with the ordered cover constructed by the algorithm, say J = (j 1 ; : : : ; j p ). <p> Lemma 6. P The proof of this lemma is similar to the proof of Lemma 3 in <ref> [10] </ref>, except the minus sign before w i r and signs changed to .
Reference: 11. <author> M. Li and P. Vitanyi. </author> <title> An introduction to Kolmogorov complexity and its applications. Texts and monographs in Computer Science. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: An approach to learning which is closer to the described situation can be based on the so called Minimum Description Length (MDL) principle <ref> [11, 15] </ref>. According to the MDL principle (in this context), the best pattern set is the one that minimizes the sum of the length (in bits) of the patterns; and the length (in bits) of data when encoded with the help of the patterns. <p> Note that the probability that has length l = h is (1 q) h q. A similar length distribution has been used in [14] for MDL learning of decision trees. It follows from Kraft's equality (e.g., see <ref> [11] </ref>) that P 2 ([fflg) fl P 1 () = 1. In practice the probability distribution P 1 can be used as a tool for giving preferences to different symbols in patterns.
Reference: 12. <author> E. M. McCreight. </author> <title> A space-economical suffix tree construction algorithm. </title> <journal> J. ACM, </journal> <volume> 23 </volume> <pages> 262-272, </pages> <year> 1976. </year>
Reference-contexts: To prove Theorem 1 we have to show, how to implement the algorithm in time O (jAj kAk) in the case of substring patterns. This can be done by using generalized suffix trees (GST). GST generalizes the suffix trees (see for example <ref> [12] </ref>) for multiple strings. It is a trie-like data structure that represents all suffixes of multiple strings. Each leaf node contains a list of the names of the original strings that have as a suffix the string that leads from root to this leaf.
Reference: 13. <author> A. F. Neuwald, J. S. Liu, and C. E. Lawrence. </author> <title> Gibbs motif sampling: Detection of bacterial outer membrane protein repeats. </title> <journal> Protein Science, </journal> <volume> 4 </volume> <pages> 1618-1632, </pages> <year> 1995. </year>
Reference-contexts: of A, we define P (Aj) = P (B 1 j 1 ) : : : P (B k j k ), and finally P (Aj) = maxfP (Aj) j is a cover of A with pattern set g: (3) In essence this probabilistic model is similar to that of <ref> [13] </ref>. To maximize (1) we can just as well minimize log P r (jA) = log P (Aj) log P (). This minimization can be interpreted as length-minimization problem as follows. We need some notations. Let P x be a probability distribution over some alphabet 0 .
Reference: 14. <author> J. R. Quinlan and R. L. Rivest. </author> <title> Inferring decision trees using the minimum de-cription length principle. </title> <journal> Information and Computation, </journal> <volume> 80 </volume> <pages> 227-248, </pages> <year> 1989. </year>
Reference-contexts: It is proved there that the best pattern according to the MDL principle using a natural coding scheme can be approximated in polynomial time within a logarithmic factor. In this paper we extend the approach of [10] for regular patterns. Additionally, we study the Bayesian interpretation of MDL <ref> [14] </ref> in this particular case. We assume a probability distribution of patterns and sequences, and then look for the set of patterns having the highest conditional probability under the assumption that it has `generated' the given examples. In other words, we look for a Bayesian maximum a posteriori estimate. <p> Note that the probability that has length l = h is (1 q) h q. A similar length distribution has been used in <ref> [14] </ref> for MDL learning of decision trees. It follows from Kraft's equality (e.g., see [11]) that P 2 ([fflg) fl P 1 () = 1. In practice the probability distribution P 1 can be used as a tool for giving preferences to different symbols in patterns.
Reference: 15. <author> J. Rissanen. </author> <title> Modeling by the shortest data description. </title> <journal> Automatica-J.IFAC, </journal> <volume> 14 </volume> <pages> 465-471, </pages> <year> 1978. </year>
Reference-contexts: An approach to learning which is closer to the described situation can be based on the so called Minimum Description Length (MDL) principle <ref> [11, 15] </ref>. According to the MDL principle (in this context), the best pattern set is the one that minimizes the sum of the length (in bits) of the patterns; and the length (in bits) of data when encoded with the help of the patterns.
Reference: 16. <author> M.-F. Sagot, A. Viari, and H. Soldano. </author> <title> A distance-based block searching algorithm. </title> <booktitle> In Proc. of Third International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 322-331. </pages> <publisher> AAAI Press, </publisher> <year> 1995. </year>
Reference-contexts: Note that a number of efficient heuristics are available for finding a hypotheses set fi (e.g., <ref> [9, 16] </ref>, for a survey see [3]). Corollary 3.
Reference: 17. <author> T. Shinohara. </author> <title> Polynomial time inference of extended regular pattern languages. </title> <booktitle> In Proceedings of RIMS Symposia on Software Science and Engineering, Lecture Notes in Computer Science, </booktitle> <volume> 147, </volume> <pages> pages 115-127. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: In the current paper we consider regular patterns in the sense of <ref> [17] </ref> and substring patterns as a particular case. Stated in machine learning terminology, our problem is to learn unions of unbounded number of regular pattern languages from positive examples.
Reference: 18. <author> R. Staden. </author> <title> Methods for discovering novel motifs in nucleic acid sequences. </title> <journal> CABIOS, </journal> <volume> 5(4) </volume> <pages> 293-298, </pages> <year> 1989. </year>
Reference-contexts: In many applications different regular subclasses of the pattern languages (such a pattern language belongs also to the set of regular languages) are reasonably sufficient and even such a simple subclass as substring patterns, i.e., a presence of a certain substring in strings, is useful in computational molecular biology <ref> [18, 19] </ref>. In the current paper we consider regular patterns in the sense of [17] and substring patterns as a particular case. Stated in machine learning terminology, our problem is to learn unions of unbounded number of regular pattern languages from positive examples.
Reference: 19. <author> M. S. Waterman, R. Arratia, and D. J. Galas. </author> <title> Pattern recognition in several sequences: Consensus and alignment. </title> <journal> Bulletin of Mathematical Biology, </journal> <volume> 46(4) </volume> <pages> 515-527, </pages> <year> 1984. </year>
Reference-contexts: In many applications different regular subclasses of the pattern languages (such a pattern language belongs also to the set of regular languages) are reasonably sufficient and even such a simple subclass as substring patterns, i.e., a presence of a certain substring in strings, is useful in computational molecular biology <ref> [18, 19] </ref>. In the current paper we consider regular patterns in the sense of [17] and substring patterns as a particular case. Stated in machine learning terminology, our problem is to learn unions of unbounded number of regular pattern languages from positive examples.
References-found: 19

