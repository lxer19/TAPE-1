URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-14.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-14.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Awerbuch, Baruch, Kutten, Shay and Peleg, David, </author> <title> Competitive Distributed Job Scheduling, </title> <note> in preparation. 35 </note>
Reference-contexts: As another example of an approximation algorithm related to the transportation prob lem, consider the bin packing problem. In the bin packing problem, we are given a finite 27 set of items of rational size 2 <ref> [0; 1] </ref> and we must partition the items into the fewest number of sets such that no set contains items that sum to more than one. <p> An algorithm is considered strongly competitive if the factor obtained is provably the best possible. An example of a strongly competitive algorithm is given by [29]. In <ref> [1] </ref> the authors use the notion of polylog (n)-competitive to describe an on-line scheduling problem related to transportation problems. They describe an on-line algorithm to balance the job load in a network of processors that is provably polylog (n)-competitive with the best off-line algorithm.
Reference: [2] <author> Bixby, R., Gregory, J., Lustig, I., Marsten, R. and Shanno, D., </author> <title> Very Large-Scale Linear Programming: A Case Study in Combining Interior Point and Simplex Methods, </title> <type> Rutcor Research Report 34-91, </type> <month> June, </month> <year> 1991. </year>
Reference-contexts: This work introduces the concept of randomized rounding in which high-probability algorithms are obtained for integer problems by first solving a relaxed linear program and then using the resulting real-number values to determine integer values for the variables. (See <ref> [2] </ref> for recent results in using linear programming for solving complex transportation problems). In [13] we apply this randomized rounding technique to the greyhound problem. We demonstrate the benefits of this method for restrictions of the greyhound problem by providing algorithmic solutions.
Reference: [3] <author> Boddy, Mark, </author> <title> Solving Time-Dependent Problems: A Decision-Theoretic Approach to Planning in Dynamic Environments, </title> <type> Ph.D. Thesis, </type> <institution> Brown University Department of Computer Science, </institution> <address> (Providence, RI 1991). </address>
Reference-contexts: This maxim points to the dynamic complexities involved in operating 33 in a changing environment. Anytime algorithms address this issue by providing iterative algorithms that achieve better solutions as more time for computation is available, but are able to provide some solution at any time <ref> [3] </ref>. In other words, the quality of the solution (i.e., performance guarantee) is a function of the computation time. This notion differs from the traditional concept in which algorithms provide only one solution at the completion of processing. Anytime algorithms have many applications to transportation problems.
Reference: [4] <author> Boddy, Mark and Dean, Thomas, </author> <title> Solving Time-Dependent Planning Problems, </title> <booktitle> Proceedings IJCAI 11, </booktitle> <address> (Detroit, Michigan 1989) 979-984. </address>
Reference-contexts: In other words, the quality of the solution (i.e., performance guarantee) is a function of the computation time. This notion differs from the traditional concept in which algorithms provide only one solution at the completion of processing. Anytime algorithms have many applications to transportation problems. In <ref> [4] </ref> anytime vehicle routing solutions are provided based on the edge-exchange algorithm of [28].
Reference: [5] <author> Boddy, Mark and Dean, Thomas, </author> <title> Approximation Algorithms for Planning and Control, </title> <booktitle> Proceedings of the NASA Conference on Telerobotics, </booktitle> <year> 1989. </year>
Reference: [6] <author> Bodin, Lawrence D., </author> <title> Twenty Years of Routing and Scheduling, </title> <journal> Operations Research, (38:4) July-August 1990, </journal> <pages> 571-579. </pages>
Reference-contexts: It is beyond the scope of this article to go into detail about the specific concepts of these related lines of research and mappings from their terminology to the transportation domain. For a more detailed discussions see <ref> [25, 6, 38, 10, 19, 16] </ref>. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned [25]. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems.
Reference: [7] <author> Bodin, Lawrence and Golden, Bruce, </author> <title> Classification in Vehicle Routing and Scheduling, Networks, </title> <booktitle> (11) 1981, </booktitle> <pages> 97-108. </pages>
Reference-contexts: In Section 5, we explore how to deal with dynamic sources of complexity. 3.1 Subscriber Dial-a-Ride Problem One reformulation of the general transportation problem that has been studied in the literature is the Subscriber Dial-a-Ride Problem <ref> [38, 7] </ref>. This problem consists of a set of customers (packages) who each need to be delivered from a source location to a destination location. In addition, the pickup and/or delivery time for each customer is specified.
Reference: [8] <author> Bodin, L., and Sexton, T., </author> <title> The Subscriber Dial-a-Ride Problem, </title> <type> Final Report, U.S. </type> <institution> Department of Transportation, Urban Mass Transportation Administration, </institution> <address> Washington, D.C. </address> <year> 1979. </year>
Reference-contexts: We demonstrate the benefits of this method for restrictions of the greyhound problem by providing algorithmic solutions. We also demonstrate the limitations of applying this method to more general transportation problems. Algorithmic solutions to the dial-a-ride problem are discussed in <ref> [31, 39, 8, 41] </ref>. It should be noted that approximation and randomization techniques can be applied to the dynamic problems discussed in Section 5 as well as the static ones discussed here.
Reference: [9] <author> Christofides, N., </author> <title> Worst-case Analysis of a New Heuristic for the Traveling Salesman Problem, </title> <type> Technical Report, </type> <institution> Graduate School of Industrial Administration, Carnegie-Mellon University (Pittsburgh, </institution> <address> PA 1976). </address>
Reference-contexts: This problem has been extensively studied [24] and has been shown NP-complete. However Christofides <ref> [9] </ref> has demonstrated an approximation algorithm with ratio 3=2 based on minimum spanning tree methods for instances of the TSP problem that satisfy the triangle inequality (i.e., for every 3 cities fa; b; cg, dist (a; c) dist (a; b) + dist (b; c)).
Reference: [10] <author> Christofides, N., </author> <title> `Vehicle Routing', in Combinatorial Optimization: Annotated Bibliographies, </title> <editor> ed. O'hEigeartaigh, M. and Lenstra, J.K. and Rinnooy Kan, A., </editor> <publisher> (John Wiley & Sons, </publisher> <address> New York 1985). </address>
Reference-contexts: It is beyond the scope of this article to go into detail about the specific concepts of these related lines of research and mappings from their terminology to the transportation domain. For a more detailed discussions see <ref> [25, 6, 38, 10, 19, 16] </ref>. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned [25]. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems. <p> Similar optimality relaxation results for approximation algorithms are discussed in Section 4.3. A second body of research that relates to features in the transportation problem are shortest path, traveling salesman (TSP) and multicommodity flow problems <ref> [15, 20, 10, 36] </ref>.
Reference: [11] <author> Cormen, Thomas, Leiserson, Charles and Rivest, Ronald, </author> <title> Introduction to Algorithms, </title> <publisher> (MIT Press, </publisher> <year> 1990). </year>
Reference-contexts: We can obtain provable performance guarantees for certain problems by constructing approximation algorithms. Approximation algorithms apply to optimization problems in which we can be content with solutions that are provably near-optimal using fast (polynomial) algorithms. Good discussions of approximation algorithms can be found in <ref> [16, 11] </ref>. When analyzing an approximation algorithm, we compare the value of the solution with the optimal value for the optimization problem.
Reference: [12] <author> Cross, Major Stephen, </author> <title> A Proposed Initiative in Crisis Action Planning, </title> <booktitle> Information Science and Technology Office, DARPA, </booktitle> <address> (Arlington, VA 1990). </address> <month> 36 </month>
Reference-contexts: The purpose of the description is to facilitate technical discussion among participants in the initiative and within the larger community of researchers in planning, scheduling and control. For more background details on the initiative see <ref> [12, 21, 43, 17] </ref>. The specific problem faced by the initiative is concerned with directing the operators and equipment involved in transporting material and personnel for the United States military. This is the problem currently faced by the United States Transportation Command. <p> In this section, we discuss two of these techniques that provide performance guarantees in the face of dynamic sources of complexity. They are anytime algorithms and competitive algorithms. A classic military maxim is "Good plans offered now are always better than perfect plans offered later" <ref> [12] </ref>. This maxim points to the dynamic complexities involved in operating 33 in a changing environment. Anytime algorithms address this issue by providing iterative algorithms that achieve better solutions as more time for computation is available, but are able to provide some solution at any time [3].
Reference: [13] <author> Dean, Thomas and Greenwald, Lloyd, </author> <title> Provable Performance Guarantees for Package Routing in Transportation Networks with Fixed Vehicle Schedules, </title> <note> in preparation. </note>
Reference-contexts: An induced graph corresponding to our example is given in Figure 5. As we point out in Section 4.3, this graph can then be used to solve the greyhound problem as a multicom-modity flow problem. For a more detailed treatment of the greyhound problem see <ref> [13] </ref>. 3.3 Comparing the Two Special Cases In the general transportation formulation of Section 2, properties on basic entities are left unspecified. This lack of structure can lead to combinatorial problems. Both the dial-a-ride and greyhound problems address this issue by further constraining the problem. <p> In <ref> [13] </ref> we apply this randomized rounding technique to the greyhound problem. We demonstrate the benefits of this method for restrictions of the greyhound problem by providing algorithmic solutions. We also demonstrate the limitations of applying this method to more general transportation problems.
Reference: [14] <author> Dean, Thomas and Wellman, Michael, </author> <title> Planning and Control, </title> <publisher> (Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA 1991). </address>
Reference-contexts: We distinguish between state and control in keeping with standard practice in the control literature. For a description of the motivation and use of this formalism for modeling dynamical systems see <ref> [14, 18, 22] </ref>. Given a state, an initial time, and a final time, the transition function determines a final state for a fixed u.
Reference: [15] <author> Even, S., Itai, A. and Shamir, A., </author> <title> On the Complexity of Timetable and Multi-Commodity Flow PRoblems, </title> <journal> SIAM Journal on Computing, </journal> <month> (5:4) December, </month> <year> 1976, </year> <pages> 691-703. </pages>
Reference-contexts: Similar optimality relaxation results for approximation algorithms are discussed in Section 4.3. A second body of research that relates to features in the transportation problem are shortest path, traveling salesman (TSP) and multicommodity flow problems <ref> [15, 20, 10, 36] </ref>.
Reference: [16] <author> Garey, M. and Johnson, D., </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, </title> <address> (New York, </address> <publisher> W. H. Freeman and Company, </publisher> <year> 1979). </year>
Reference-contexts: It is beyond the scope of this article to go into detail about the specific concepts of these related lines of research and mappings from their terminology to the transportation domain. For a more detailed discussions see <ref> [25, 6, 38, 10, 19, 16] </ref>. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned [25]. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems. <p> Similar optimality relaxation results for approximation algorithms are discussed in Section 4.3. A second body of research that relates to features in the transportation problem are shortest path, traveling salesman (TSP) and multicommodity flow problems [15, 20, 10, 36]. In the shortest weight-constrained path problem <ref> [16] </ref>, we are given: a graph G = (V; E); length l (e) 2 Z + , for each e 2 E; weight w (e) 2 Z + , for each e 2 E; specified vertices s; t 2 V ; and positive integers K; W ; and ask the question: <p> path (all vertices in the path are distinct) in G from s to t with total weight W or less and total length K or less? This problem is NP-complete for directed and undirected graphs, but solvable in polynomial time if all weights are equal or all lengths are equal <ref> [16] </ref>. This problem indicates that an optimal assignment of assets to packages, even for a single package, is NP-complete. Another closely related problem from [16] is the path constrained network flow problem. <p> or less? This problem is NP-complete for directed and undirected graphs, but solvable in polynomial time if all weights are equal or all lengths are equal <ref> [16] </ref>. This problem indicates that an optimal assignment of assets to packages, even for a single package, is NP-complete. Another closely related problem from [16] is the path constrained network flow problem. <p> It is similar to the static transportation problem in that it specifies a set of paths, each with a unique cost (size). However, it does not specify schedules since paths do not include any timing information. A third related problem is the directed two-commodity integral flow problem <ref> [16] </ref>. <p> We can obtain provable performance guarantees for certain problems by constructing approximation algorithms. Approximation algorithms apply to optimization problems in which we can be content with solutions that are provably near-optimal using fast (polynomial) algorithms. Good discussions of approximation algorithms can be found in <ref> [16, 11] </ref>. When analyzing an approximation algorithm, we compare the value of the solution with the optimal value for the optimization problem. <p> Since the optimal value is a lower bound on the value that any algorithm will return for an instance, this ratio is lower bounded by one. There are further details concerning the difference between absolute performance bounds and asymptotic performance bounds that we will not go into here (see <ref> [16] </ref>). In the analysis of a given approximation algorithm, we would like to upper and/or lower bound this ratio. <p> While this problem is also NP-hard, an approximation algorithm exists <ref> [16] </ref> that can find a solution in which the number of sets in the partition is within 22% of the optimal number of sets. There is an extension on the approximation algorithm idea into what is called an approximation scheme.
Reference: [17] <institution> Global Transportation Network (GTN), </institution> <note> Trans Plan Concept of Operations, </note> <year> (1991). </year>
Reference-contexts: The purpose of the description is to facilitate technical discussion among participants in the initiative and within the larger community of researchers in planning, scheduling and control. For more background details on the initiative see <ref> [12, 21, 43, 17] </ref>. The specific problem faced by the initiative is concerned with directing the operators and equipment involved in transporting material and personnel for the United States military. This is the problem currently faced by the United States Transportation Command.
Reference: [18] <author> Gopal, M., </author> <title> Modern Control System Theory, </title> <publisher> (Halstead Press, </publisher> <address> New York 1985). </address>
Reference-contexts: We distinguish between state and control in keeping with standard practice in the control literature. For a description of the motivation and use of this formalism for modeling dynamical systems see <ref> [14, 18, 22] </ref>. Given a state, an initial time, and a final time, the transition function determines a final state for a fixed u.
Reference: [19] <author> Greenwald, L., </author> <title> Distributed Transportation Scheduling: Preliminary Complexity Perspective, </title> <institution> Brown University Computer Science Department, Unpublished Notes, (Providence, </institution> <year> 1991). </year>
Reference-contexts: It is beyond the scope of this article to go into detail about the specific concepts of these related lines of research and mappings from their terminology to the transportation domain. For a more detailed discussions see <ref> [25, 6, 38, 10, 19, 16] </ref>. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned [25]. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems.
Reference: [20] <author> Itai, Alon, </author> <title> Two-Commodity Flow, </title> <journal> J. ACM, </journal> <month> (25:4) October, </month> <year> 1978, </year> <pages> 596-611. </pages>
Reference-contexts: Similar optimality relaxation results for approximation algorithms are discussed in Section 4.3. A second body of research that relates to features in the transportation problem are shortest path, traveling salesman (TSP) and multicommodity flow problems <ref> [15, 20, 10, 36] </ref>.
Reference: [21] <institution> The Joint Staff Officer's Guide 1988, National Defense University, Armed Forces Staff College, </institution> <address> (Norfolk, VA 1988). </address>
Reference-contexts: The purpose of the description is to facilitate technical discussion among participants in the initiative and within the larger community of researchers in planning, scheduling and control. For more background details on the initiative see <ref> [12, 21, 43, 17] </ref>. The specific problem faced by the initiative is concerned with directing the operators and equipment involved in transporting material and personnel for the United States military. This is the problem currently faced by the United States Transportation Command.
Reference: [22] <author> Kalman, R. E., Falb, P. L., and Arbib, M. A., </author> <title> Topics in Mathematical System Theory, </title> <publisher> (McGraw-Hill, </publisher> <address> New York, </address> <year> 1969). </year>
Reference-contexts: Now that we have the static structure of the transportation network, we need to describe how things change over time. To account for change over time, we borrow from the systems theory literature by defining an appropriate state space and dynamical system <ref> [22] </ref>. The state space is determined by a set of state variables corresponding to the location of each asset, the asset containing each package, and the status of each property for each location, route, asset, and package. <p> We distinguish between state and control in keeping with standard practice in the control literature. For a description of the motivation and use of this formalism for modeling dynamical systems see <ref> [14, 18, 22] </ref>. Given a state, an initial time, and a final time, the transition function determines a final state for a fixed u.
Reference: [23] <author> Karlin, A., Manasse, M., Rudolph, L. and Sleator, D., </author> <title> Competitive Snoopy Caching, </title> <journal> Algorithmica, </journal> <month> (3:1) </month> <year> 1988, </year> <pages> 79-119. </pages>
Reference-contexts: This analysis is similar to that of approximation algorithms in that we are interested in the ratio of the best on-line to the best off-line solution, online (I) of f line (I) : An algorithm is termed k-competitive <ref> [23] </ref> if the ratio is within a factor k. An algorithm is considered strongly competitive if the factor obtained is provably the best possible. An example of a strongly competitive algorithm is given by [29].
Reference: [24] <author> Lawler, E., Lenstra, J., Rinnoy Kan, A. and Shmoys, D., </author> <title> The Traveling Salesman Problem, </title> <publisher> (John Wiley & Sons, </publisher> <year> 1985). </year>
Reference-contexts: The TSP problem is a single-vehicle problem in which, given a finite set of cities and a distance between any two cities, we would like to find a tour of minimum distance for the vehicle such that each city is visited exactly once. This problem has been extensively studied <ref> [24] </ref> and has been shown NP-complete.
Reference: [25] <author> Lawler, E., Lenstra, J., Rinnooy Kan, A. and Shmoys, D., </author> <title> Sequencing and Scheduling: Algorithms and Complexity, </title> <type> Report BS-R8909, </type> <institution> Centre for Mathematics and Computer Science, </institution> <address> (Amsterdam, </address> <year> 1990). </year> <month> 37 </month>
Reference-contexts: It is beyond the scope of this article to go into detail about the specific concepts of these related lines of research and mappings from their terminology to the transportation domain. For a more detailed discussions see <ref> [25, 6, 38, 10, 19, 16] </ref>. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned [25]. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems. <p> For a more detailed discussions see [25, 6, 38, 10, 19, 16]. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned <ref> [25] </ref>. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems. If we are to take advantage of results in the scheduling literature, we must describe our problem in terms of machines, jobs, operations, etc. <p> This simplified problem also appears to be NP-hard, based on related scheduling results above. However, when uncertainty is introduced into the problem and we are looking for expected performance rather than exact performance, it is often the case that NP-hard problems can be solved in polynomial time <ref> [25] </ref>. Similar optimality relaxation results for approximation algorithms are discussed in Section 4.3. A second body of research that relates to features in the transportation problem are shortest path, traveling salesman (TSP) and multicommodity flow problems [15, 20, 10, 36]. <p> They describe an on-line algorithm to balance the job load in a network of processors that is provably polylog (n)-competitive with the best off-line algorithm. This scheduling problem is similar to the parallel machine scheduling problems mentioned in Section 4.1 and described fully in <ref> [25] </ref>. This demonstrates the use of competitive algorithms to bound the performance of an on-line scheduling problem. In the past, researchers have recognized the tradeoffs inherent in the extremes characterized by anticipatory control strategies involving complex forms of inference and responsive 34 control strategies involving much simpler forms of inference.
Reference: [26] <author> Leighton, Tom, Makedon, Fillia, Plotkin, Serge, Stein, Clifford, Tardos, Eva and Tragoudas, Spyros, </author> <title> Fast Approximation Algorithms for Multicommodity Flow Problems, </title> <publisher> ACM, </publisher> <year> (1991) </year> <month> 101-111. </month>
Reference-contexts: Randomization techniques can also be used to construct approximation algorithms that are provably close to optimal with high-probability. The relation of multicommodity flow problems to transportation problems was mentioned in Section 4.1. In <ref> [26] </ref> the authors 28 demonstrate an approximate k-commodity flow algorithm that runs in O (knm log 4 n) time with high probability, where n is the number of nodes and m is the number of edges in the network.
Reference: [27] <author> Lin, F., and Wonham, W. M., </author> <title> Decentralized Supervisory Control of Discrete-Event Systems, </title> <journal> Inform Sci., </journal> <month> 44 </month> <year> (1988) </year> <month> 199-224. </month>
Reference-contexts: Results from this area may also be applicable to the dynamic nature of the transportation problem, including their consideration of the problem of partial information. The results of Ramadge, Wonham and Lin <ref> [35, 27] </ref> are encouraging in that they are the first results we have come upon that enable us to formally analyze the feasibility of a distributed solution. They provide conditions under which distributed solutions are provably feasible. In the DES context, the complexity of synthesizing supervisors is the relevant measure.
Reference: [28] <author> Lin, S. and Kernighan, B. W., </author> <title> An Effective Heuristic for the Travelling Salesman Problem, </title> <journal> Operations Research, </journal> <volume> (21), </volume> <year> 1973 </year> <month> 498-516. </month>
Reference-contexts: This notion differs from the traditional concept in which algorithms provide only one solution at the completion of processing. Anytime algorithms have many applications to transportation problems. In [4] anytime vehicle routing solutions are provided based on the edge-exchange algorithm of <ref> [28] </ref>. Anytime algorithms are useful for both dynamic and uncertain environments because they allow the decision-making agent to make effective use of the time available for decision-making while at the same time allowing for unexpected changes to interrupt the decision-making at any moment.
Reference: [29] <author> McGeoch, L. and Sleator, D., </author> <title> A Strongly Competitive Randomized Algorithm for Paging, </title> <year> 1989. </year>
Reference-contexts: An algorithm is considered strongly competitive if the factor obtained is provably the best possible. An example of a strongly competitive algorithm is given by <ref> [29] </ref>. In [1] the authors use the notion of polylog (n)-competitive to describe an on-line scheduling problem related to transportation problems. They describe an on-line algorithm to balance the job load in a network of processors that is provably polylog (n)-competitive with the best off-line algorithm.
Reference: [30] <editor> O'hEigeartaigh, M., Lenstra, J.K. and Rinnooy Kan, A., eds. </editor> <title> Combinatorial Optimization: Annotated Bibliographies, </title> <publisher> (John Wiley & Sons, </publisher> <address> New York 1985). </address>
Reference-contexts: It should be noted that approximation and randomization techniques can be applied to the dynamic problems discussed in Section 5 as well as the static ones discussed here. A good reference for surveys and results for combinatorial optimization problems is <ref> [30] </ref>. 5 Dynamic Complexity Issues and Solution Concepts In Section 4.1, we explore research that points to static sources of complexity that tend to make a problem hard. In Section 4.3, we discuss approximation algorithms and how to provide performance guarantees for the corresponding problem reformulations.
Reference: [31] <author> Psarafitis, H., </author> <title> Dynamic Programming Algorithms for Specially Structured Sequencing and Routing Problems in Transportation, </title> <type> Ph.D. Thesis, </type> <institution> MIT, </institution> <address> (Cambridge, MA 1978). </address>
Reference-contexts: We demonstrate the benefits of this method for restrictions of the greyhound problem by providing algorithmic solutions. We also demonstrate the limitations of applying this method to more general transportation problems. Algorithmic solutions to the dial-a-ride problem are discussed in <ref> [31, 39, 8, 41] </ref>. It should be noted that approximation and randomization techniques can be applied to the dynamic problems discussed in Section 5 as well as the static ones discussed here.
Reference: [32] <author> Raghavan, </author> <title> Prabhakar, </title> <booktitle> Lecture Notes on Randomized Algorithms, </booktitle> <address> (Yorktown Heights, </address> <year> 1989). </year>
Reference-contexts: In other words, there is some non-zero probability that the performance guarantee will be violated in some cases. However, these cases are provably very rare. A good discussion of randomized algorithms can be found in <ref> [32] </ref>. One example of a randomized algorithm is a variant of quicksort called random quicksort. The major difference from deterministic quicksort is that, in random quicksort, the splitter element is picked randomly. <p> The probability in this case is 1 O (n 6 ). In other words, the probability that random quicksort will terminate in O (n log n) steps is very close to one <ref> [32] </ref>. Randomization techniques can also be used to construct approximation algorithms that are provably close to optimal with high-probability. The relation of multicommodity flow problems to transportation problems was mentioned in Section 4.1.
Reference: [33] <author> Raghavan, Prabhakar, </author> <title> Probabilistic Construction of Deterministic Algorithms: Approximating Packing Integer Programs, </title> <journal> Computer and Systems Sciences, </journal> <month> (37) </month> <year> (1988) </year> <month> 130-143. </month>
Reference-contexts: Another use of randomization techniques to construct approximation algorithms for multicommodity flow and other transportation related problems can be found in <ref> [34, 33] </ref>.
Reference: [34] <author> Raghavan, Prabhakar and Thompson, Clark, </author> <title> Randomized Rounding: A Technique for Provably Good Algorithms and Algorithmic Proofs, </title> <journal> Combinatorica, </journal> <month> (7:4) </month> <year> (1987) </year> <month> 365-374. </month>
Reference-contexts: Another use of randomization techniques to construct approximation algorithms for multicommodity flow and other transportation related problems can be found in <ref> [34, 33] </ref>.
Reference: [35] <author> Ramadge, Peter and Wonham, Murray, </author> <title> The Control of Discrete Event Systems, </title> <booktitle> Proceedings of the IEEE, </booktitle> <month> 77(1) </month> <year> (1989) </year> <month> 81-98. </month>
Reference-contexts: Results from this area may also be applicable to the dynamic nature of the transportation problem, including their consideration of the problem of partial information. The results of Ramadge, Wonham and Lin <ref> [35, 27] </ref> are encouraging in that they are the first results we have come upon that enable us to formally analyze the feasibility of a distributed solution. They provide conditions under which distributed solutions are provably feasible. In the DES context, the complexity of synthesizing supervisors is the relevant measure. <p> They provide conditions under which distributed solutions are provably feasible. In the DES context, the complexity of synthesizing supervisors is the relevant measure. A supervisor is a control program that restricts the dynamical system from entering certain states. Ramadge and Wonham <ref> [35] </ref> give polynomial algorithms for solving some supervisor synthesis problems. However, they show that it is unlikely that techniques to realize minimal supervisors will be feasible in large problems.
Reference: [36] <author> Sahni, Sartaj, </author> <title> Computationally Related Problems, </title> <journal> SIAM J. Comput., </journal> <month> (3:4) December, </month> <year> 1974, </year> <pages> 262-279. </pages>
Reference-contexts: Similar optimality relaxation results for approximation algorithms are discussed in Section 4.3. A second body of research that relates to features in the transportation problem are shortest path, traveling salesman (TSP) and multicommodity flow problems <ref> [15, 20, 10, 36] </ref>.
Reference: [37] <author> Sahni S. and Gonzalez T., </author> <title> P-complete approximation problems, </title> <journal> Journal of the ACM, </journal> <volume> (23) 1976, </volume> <pages> 555-565. </pages>
Reference-contexts: So, for any instance of the TSP problem satisfying this condition, a solution can be found quickly (in polynomial time) that provides a tour in which the vehicle travels no more than 50% more than the optimal tour. It is interesting to note that it has been shown <ref> [37] </ref> that a good approximation algorithm to solve the TSP problem without the triangle inequality constraint cannot be found in polynomial time unless P = N P . As another example of an approximation algorithm related to the transportation prob lem, consider the bin packing problem.
Reference: [38] <author> Schank, John, Mattock, Michael, Sumner, Gerald, Greenberg, Irwin, Rothenberg, Jeff and Stucker, James, </author> <title> A Review of Strategic Mobility Models and Analysis, </title> <type> Rand Report R-3926-JS. </type>
Reference-contexts: In Section 5, we explore how to deal with dynamic sources of complexity. 3.1 Subscriber Dial-a-Ride Problem One reformulation of the general transportation problem that has been studied in the literature is the Subscriber Dial-a-Ride Problem <ref> [38, 7] </ref>. This problem consists of a set of customers (packages) who each need to be delivered from a source location to a destination location. In addition, the pickup and/or delivery time for each customer is specified. <p> In cases where only pickup or delivery times are given the corresponding term can be dropped. The dial-a-ride problem can be expressed and solved as a linear program. A mathemat ical formalization for this problem is found in <ref> [38] </ref>. 3.2 Greyhound Package Scheduling Problem A second reformulation of the general transportation problem is the Greyhound Package Scheduling Problem. This problem is characterized by fixed asset routes resembling bus schedules. <p> It is beyond the scope of this article to go into detail about the specific concepts of these related lines of research and mappings from their terminology to the transportation domain. For a more detailed discussions see <ref> [25, 6, 38, 10, 19, 16] </ref>. There is a well-developed body of research in sequencing and scheduling that explores some of the questions with which we are concerned [25]. This research is divided into single machine deterministic problems, parallel machine deterministic problems, stochastic problems and job shop problems.
Reference: [39] <author> Sexton, T., </author> <title> The Single Vehicle Many to Many Routing and Scheduling Problem, </title> <type> Ph.D. Thesis, </type> <institution> State University of New York at Stony Brook, (Stony Brook, </institution> <address> NY 1979). </address>
Reference-contexts: We demonstrate the benefits of this method for restrictions of the greyhound problem by providing algorithmic solutions. We also demonstrate the limitations of applying this method to more general transportation problems. Algorithmic solutions to the dial-a-ride problem are discussed in <ref> [31, 39, 8, 41] </ref>. It should be noted that approximation and randomization techniques can be applied to the dynamic problems discussed in Section 5 as well as the static ones discussed here.
Reference: [40] <author> Sleator, D., and Tarjan, R. </author> <title> Amortized Efficiency of List Update and Paging Rules, </title> <booktitle> Communication of the ACM, (28:2) 1985, </booktitle> <pages> 202-208. </pages>
Reference-contexts: In Section 5.2, we consider the difference between the off-line (static) construction of schedules and the on-line (dynamic) construction of schedules. In <ref> [40] </ref> a method of analysis is developed that compares the performance of an on-line algorithm on any sequence of operations to the performance of the optimum off-line algorithm (i.e., one in which the entire sequence is known in advance) on the same sequence of operations.
Reference: [41] <author> Stein, D., </author> <title> Scheduling Dial-a-Ride Transportation Systems, </title> <journal> Trans. Sci., </journal> <month> (12) </month> <year> 1978 </year> <month> 232-249. </month>
Reference-contexts: We demonstrate the benefits of this method for restrictions of the greyhound problem by providing algorithmic solutions. We also demonstrate the limitations of applying this method to more general transportation problems. Algorithmic solutions to the dial-a-ride problem are discussed in <ref> [31, 39, 8, 41] </ref>. It should be noted that approximation and randomization techniques can be applied to the dynamic problems discussed in Section 5 as well as the static ones discussed here.
Reference: [42] <author> Tsitsiklis, J. N., </author> <title> On the Control of Discrete Event Dynamical Systems, Math. Contr., Signals, </title> <institution> and Syst., </institution> <month> 2(1) </month> <year> (1989) </year> <month> 95-107. </month>
Reference-contexts: In these systems the number of states increases exponentially with the number of components. Tsitsiklis <ref> [42] </ref> provides necessary and sufficient conditions for the existence of certain classes of supervisors and then demonstrates polynomial-time algorithms for showing whether or not those conditions are met for specific DES. However, this only shows the existence of a supervisor in polynomial-time.
Reference: [43] <institution> United States Transportation Command: Command, </institution> <note> Control, Communications, and Computer Systems Master Plan (1989). 39 </note>
Reference-contexts: The purpose of the description is to facilitate technical discussion among participants in the initiative and within the larger community of researchers in planning, scheduling and control. For more background details on the initiative see <ref> [12, 21, 43, 17] </ref>. The specific problem faced by the initiative is concerned with directing the operators and equipment involved in transporting material and personnel for the United States military. This is the problem currently faced by the United States Transportation Command.
References-found: 43

