URL: http://www.cs.colostate.edu/~ftppub/TechReports/1997/tr97-103.ps.Z
Refering-URL: http://www.cs.colostate.edu/~ftppub/
Root-URL: 
Phone: Phone: (970) 491-5792 Fax: (970) 491-2466  
Title: Job Scheduling for Torus Connected Networks  
Author: Sandeep K. S. Gupta and Pradip K. Srimani 
Web: WWW: http://www.cs.colostate.edu  
Date: January 17, 1997  
Address: Ft. Collins, CO 80523  Fort Collins, CO 80523-1873  
Affiliation: Department of Computer Science Colorado State University  Computer Science Department Colorado State University  
Pubnum: Technical Report CS-97-103  
Abstract: Computer Science Technical Report 
Abstract-found: 1
Intro-found: 1
Reference: [AZ90] <author> M. Ahuja and Y. Zhu. </author> <title> An o(n log n) feasibility algorithm for preemptive scheduling of n independent jobs on a hypercube. </title> <journal> Information Processing Letters, </journal> <volume> 35 </volume> <pages> 7-11, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Remark 5 Note that all p-intervals of size x 2 (x is a positive integer) are x-subtorus; in this paper we are interested only in those p-intervals which are valid link disjoint sub torii and hence we use the terms p-interval and subtorus interchangeably. Definition 8 The profile <ref> [AZ90, ZA93] </ref> of a schedule is defined to be a function F that maps a processor p 2 V to a time f = F (p) such that the processor p has been busy until time f and T f denotes the time when the processor p is available for more
Reference: [BCC + 88] <author> S. Borkar, R. Cohn, G. Cox, S. Gleason, T. Gross, H. T. Kung, B. Moore M. Lam, C. Peterson, J. Pieper, L. Rankin, P. S. Tseng, J. Sutton, J. Urbanski, and J. Webb. </author> <title> iWarp: An integrated solution to high-speed parallel computing. </title> <booktitle> In Proceedings of Supercomputing '88, </booktitle> <pages> pages 330-339. </pages> <publisher> IEEE Computer Society and ACM SIGARCH, </publisher> <month> November </month> <year> 1988. </year>
Reference-contexts: Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON [TS88], Cray T3D [Cra93, Oed93], Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp <ref> [BCC + 88] </ref>. A torus is a mesh with wrap-around links.
Reference: [BP95] <author> G. Bilardi and F. P. Preprata. </author> <title> Horizons of Parallel Computation. </title> <journal> J. of Parallel and Distributed Computing, </journal> <volume> 27 </volume> <pages> 172-182, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction The mesh and torus networks have been recognized as versatile interconnection networks for massively parallel computing. Mesh/torus-like low-dimensional networks have recently received a lot of attention for their better scalability to larger networks, as opposed to more complex networks such as hypercubes <ref> [BP95] </ref>. Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON [TS88], Cray T3D [Cra93, Oed93], Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [Cra93] <author> Cray Research, Inc. </author> <title> Cray T3D System Architecture Overview, </title> <year> 1993. </year>
Reference-contexts: Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON [TS88], Cray T3D <ref> [Cra93, Oed93] </ref>, Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [dCVGG95] <author> Luis Diaz de Cerio, Miguel Valero-Garcia, and Antonio Gonzales. </author> <title> A study of the communication cost of the fft on torus multicomputers. </title> <booktitle> In IEEE First Intl. Conf. on Algorithms and Architectures for Parallel Processing, </booktitle> <pages> pages 131-140, </pages> <year> 1995. </year> <month> 17 </month>
Reference-contexts: The 1 Bisection bandwidth is the minimum number of links across any hyper-plane that cuts a network in half. 1 motivation for doing this is that the algorithms which are designed for torus networks would run faster under this allocation strategy <ref> [dCVGG95] </ref>. Our scheme is targeted towards wormhole routed networks. The message propagation time in wormhole routed networks is insensitive to routing distance in the absence of contention for the links as long as the routing distance does not exceed a threshold. However, contention for communication links severely degrades the performance.
Reference: [DDF + 89] <author> W. J. Dally, R. Davison, J. A. Stuart Fiske, G. Fyler, J. S. Keen, R. A. Lethin, M. Noakes, and P. R. Nuth. </author> <title> The J-Machine: A Fine-grain Concurrent Computer. </title> <booktitle> In Information Processing 89, IFIP, </booktitle> <pages> pages 1147-1153, </pages> <year> 1989. </year>
Reference-contexts: Mesh/torus-like low-dimensional networks have recently received a lot of attention for their better scalability to larger networks, as opposed to more complex networks such as hypercubes [BP95]. Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine <ref> [DDF + 89] </ref>, Tera HORIZON [TS88], Cray T3D [Cra93, Oed93], Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [LC91] <author> K. Li and K. H. Cheng. </author> <title> Job scheduling in a partitionable mesh using a two-dimensional buddy system partitioning scheme. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 2(4) </volume> <pages> 413-422, </pages> <year> 1991. </year>
Reference-contexts: Several schemes have been proposed for processor allocation in mesh connected multiprocessor networks <ref> [LC91, Zhu92] </ref>. Some work has also been done for processor allocation in a partitionable torus connected multiprocessor [QN95]; however, this scheme allocates submeshes in a torus. In this paper, we propose a scheme for allocating subtorii in a torus network.
Reference: [LM89] <author> H. Li and M. Maresca. </author> <title> Polymorphic-Torus Network. </title> <journal> IEEE Trans. on Computing, </journal> <volume> 38(9) </volume> <pages> 1345-1351, </pages> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON [TS88], Cray T3D [Cra93, Oed93], Polymorphic Torus <ref> [LM89] </ref>, Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [Mas] <institution> MasPar Computer Co. MP-1 Family Data-parallel Computers. </institution>
Reference-contexts: Mesh/torus-like low-dimensional networks have recently received a lot of attention for their better scalability to larger networks, as opposed to more complex networks such as hypercubes [BP95]. Examples of machines with such topologies include the MasPar MP-1 <ref> [Mas] </ref>, Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON [TS88], Cray T3D [Cra93, Oed93], Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [Oed93] <author> W. Oed. </author> <title> Massively Parallel Processor System Cray T3D. </title> <institution> Cray Research GmbH, </institution> <year> 1993. </year>
Reference-contexts: Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON [TS88], Cray T3D <ref> [Cra93, Oed93] </ref>, Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [QN95] <author> W. Qiao and L. M. Ni. </author> <title> Efficient processor allocation in 3D tori. </title> <booktitle> In Proceedings of International Parallel Processing Symposium, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Several schemes have been proposed for processor allocation in mesh connected multiprocessor networks [LC91, Zhu92]. Some work has also been done for processor allocation in a partitionable torus connected multiprocessor <ref> [QN95] </ref>; however, this scheme allocates submeshes in a torus. In this paper, we propose a scheme for allocating subtorii in a torus network.
Reference: [TG96] <author> Y.-C. Tseng and S. K. S. Gupta. </author> <title> All-to-All Personalized Communication in a Wormhole-routed Torus. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 7(5) </volume> <pages> 498-505, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Further in order to fully utilize the available communication bandwidth the number of communication phases are minimized by scheduling as many communications in a phase as possible. Such is also the case for algorithms designed for wormhole-routed torus networks <ref> [TG96, TLGP97] </ref>. However, programs based on such algorithms would not be able to get maximum benefit from the underlying torus network if the jobs are allocated on a submesh rather that a subtorii.
Reference: [TLGP97] <author> Y.-C. Tseng, T.-H. Lin, S. K. S. Gupta, and D. K. Panda. </author> <title> Bandwidth-optimal complete exchange on wormhole-routed torus networks: a diagonal-propagation approach. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <note> 1997. To appear. </note>
Reference-contexts: Further in order to fully utilize the available communication bandwidth the number of communication phases are minimized by scheduling as many communications in a phase as possible. Such is also the case for algorithms designed for wormhole-routed torus networks <ref> [TG96, TLGP97] </ref>. However, programs based on such algorithms would not be able to get maximum benefit from the underlying torus network if the jobs are allocated on a submesh rather that a subtorii.
Reference: [TS88] <author> M. R. Thistle and B. J. Smith. </author> <title> A Processor Architecture for Horizon. </title> <booktitle> In Supercomputing, </booktitle> <pages> pages 35-41, </pages> <year> 1988. </year>
Reference-contexts: Mesh/torus-like low-dimensional networks have recently received a lot of attention for their better scalability to larger networks, as opposed to more complex networks such as hypercubes [BP95]. Examples of machines with such topologies include the MasPar MP-1 [Mas], Intel Paragon, MIT J-Machine [DDF + 89], Tera HORIZON <ref> [TS88] </ref>, Cray T3D [Cra93, Oed93], Polymorphic Torus [LM89], Fujitsu AP-1000, and iWarp [BCC + 88]. A torus is a mesh with wrap-around links.
Reference: [ZA93] <author> Y. Zhu and M. Ahuja. </author> <title> On job scheduling on a hypercube. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(1) </volume> <pages> 62-69, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Remark 5 Note that all p-intervals of size x 2 (x is a positive integer) are x-subtorus; in this paper we are interested only in those p-intervals which are valid link disjoint sub torii and hence we use the terms p-interval and subtorus interchangeably. Definition 8 The profile <ref> [AZ90, ZA93] </ref> of a schedule is defined to be a function F that maps a processor p 2 V to a time f = F (p) such that the processor p has been busy until time f and T f denotes the time when the processor p is available for more <p> Remark 6 If a p-interval has zero RP T in a schedule, it cannot be used for scheduling further jobs and will be deleted from the profile. Definition 9 A profile P is called stair-like <ref> [ZA93] </ref> if 8i : f i+1 &lt; f i .
Reference: [Zhu92] <author> Y. Zhu. </author> <title> Efficient processor allocation strategies for mesh connected parallel computers. </title> <journal> J. of Parallel and Distributed Computing, </journal> <volume> 16 </volume> <pages> 328-337, </pages> <year> 1992. </year> <month> 18 </month>
Reference-contexts: Several schemes have been proposed for processor allocation in mesh connected multiprocessor networks <ref> [LC91, Zhu92] </ref>. Some work has also been done for processor allocation in a partitionable torus connected multiprocessor [QN95]; however, this scheme allocates submeshes in a torus. In this paper, we propose a scheme for allocating subtorii in a torus network.
References-found: 16

