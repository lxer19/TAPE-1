URL: ftp://ftp.orie.cornell.edu/pub/techreps/TR1116.ps.Z
Refering-URL: http://www.orie.cornell.edu/~shmoys/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Chapter 26 Improved approximation algorithms for network design problems based on a primal-dual approximation method
Author: M.X. Goemans A.V. Goldberg S. Plotkin D.B. Shmoys E. Tardos D.P. Williamson k 
Affiliation: Department of Mathematics, Massachusetts Institute of Technology;  Department of Computer Science, Stanford University;  Department of Computer Science, Stanford University;  Mitsubishi Electric Laboratories. School of Operations Research and Industrial Engineering, Cornell University;  School of Operations Research and Industrial Engineering, Cornell University;  Princeton University. k School of Operations Research and Industrial Engineering, Cornell University;  
Date: 1  
Note: 3  rithms are  research supported in part by Air Force contract F49620-92-J-0125 and DARPA contract N00014-92-J-1799.  research supported in part by ONR Young Investigator Award N00014-91-J-1855, NSF Presidential Young Investigator Grant CCR-8858097 with matching funds from AT&T, DEC, and 3M, and a grant from Powell Foundation.  research supported by U.S. Army Research Office Grant DAAL-03-91-G-0102 and by a grant from  research partially supported by NSF PYI Award CCR-89-96272 with matching support from UPS, Sun, Proctor Gamble, and DuPont. This research was done during an extended visit to DIMACS.  research supported in part by a Packard Fellowship, an NSF PYI award, and by the NSF, the Air Force Office of Scientific Research, and the Office of Naval Research, through NSF grant DMS-8920550. This research was done during an extended visit to  research supported by an NSF Graduate Fellowship, Air Force contract F49620-92-J-0125, and DARPA contract N00014-92-J-1799. This research was done while a graduate student at MIT.  
Abstract: We consider a class of network design problems in which one needs to find a minimum-cost network satisfying certain connectivity requirements. For example, in the survivable network design problem, the requirements specify that there should be at least r(v; w) edge-disjoint paths between each pair of vertices v and w. We present an approximation algorithm with a performance guarantee of 2H(f max ) = 2(1 + 1 f max ) where f max is the maximum requirement. This improves upon the best previously known performance guarantee of 2f max . We also show that our analysis is tight, up to a constant factor. In addition, we present approximation algorithms for two natural variations of the problem involving capacities. Our algo 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Aggarwal and N. Garg. </author> <title> A scaling technique for better network design. </title> <booktitle> These proceedings, </booktitle> <year> 1994. </year>
Reference-contexts: Based on this result, they derive a 2H (f max )- approximation algorithm for the multiple-copy variant with arbitrary proper functions. Recently, Aggar-wal & Garg <ref> [1] </ref> have strengthened this result by giving a 2 log 2 d-approximation algorithm for the survivable network design problem, where d is the number of nodes v with f (v) &gt; 0. The reader is referred to Figure 1 for a summary of the results mentioned above.
Reference: [2] <author> A. Agrawal, P. Klein, and R. Ravi. </author> <title> When trees collide: An approximation algorithm for the generalized Steiner problem in networks. </title> <booktitle> In Proceedings of the 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 134-144, </pages> <year> 1991. </year>
Reference-contexts: Guarantee with Guarantee with Type of Function f Multiple Copies Allowed Multiple Copies Forbidden r (u; v) = minfr (u); r (v)g minf2q;2H (f max )g [6] - r (u; v) 2 log 2 f max <ref> [2] </ref> - f0,2g-proper - 3 [9] proper 2H (f max ) [7] 2f max [14] 2H (f max ) this paper to prove this suggest that a rather different approach is needed to obtain an algorithm with a constant performance guarantee. <p> One of the main themes of the recent research in this area is the role of the primal-dual method. Agrawal, Klein, & Ravi <ref> [2] </ref> use this approach to devise a 2-approximation algorithm for the survivable network design problem in which each r (u; v) 2 f0; 1g. Based on this result, they obtain a 2 log 2 f max -approximation algorithm for the survivable network design problem (where multiple copies are allowed).
Reference: [3] <author> J. Bang-Jensen, A. Frank, and B. Jackson. </author> <title> Preserving and increasing local edge-connectivity in mixed graphs. </title> <note> Submitted to SIAM Journal on Discrete Mathematics, </note> <year> 1993. </year>
Reference-contexts: Bang-Jensen, Frank & Jackson <ref> [3] </ref> have also introduced this class of functions, and have called them x-supermodular. As we will show below, an important special case of weakly supermodular functions are proper functions, as defined in Williamson et al. [14].
Reference: [4] <author> D. Bienstock and N. Diaz. </author> <title> Blocking small cuts in a network, and related problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 22 </volume> <pages> 482-499, </pages> <year> 1993. </year>
Reference-contexts: Our algorithm for the fixed-charge network design problem can be used to solve a network reinforcement problem recently investigated by Bienstock and Diaz <ref> [4] </ref>. Given a graph G = (V; E), edge costs c (e), and a weakly supermodular function f , one must find a minimum-cost set of edges such that the graph induced by contracting these edges satisfies f .
Reference: [5] <author> H. N. Gabow, M. X. Goemans, and D. P. Williamson. </author> <title> An efficient approximation algorithm for the survivable network design problem. </title> <booktitle> In Proceedings of the Third MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> pages 57-74, </pages> <year> 1993. </year>
Reference-contexts: Edge e is then added to F , improving primal feasibility. When F becomes feasible, the algorithm executes an edge-deletion stage, eliminating unnecessary edges from F . We denote the resulting set of edges by F 0 . Gabow, Goemans, and Williamson <ref> [5] </ref> have shown that Uncrossable can be implemented in O (n 2 + n p m log log n + n + T ) time, where is the time to compute h, and T is the total time taken to compute active sets. <p> Last, we show that we can find the active sets in polynomial time given that f is a proper function. Let m 0 = min (nf max ; m) and be the time to compute f. As in <ref> [5] </ref>, we find active sets in O (n 2 m 0 + nm 0 f max + n 2 ) time. We prove each of these things in turn, yielding the following theorem. <p> Our algorithm will closely follow the algorithm for finding active sets for proper f given in Gabow, Goemans, and Williamson <ref> [5] </ref>. Gabow et al. show that, given the edge set F p , a Gomory-Hu style cut-tree H can be constructed in O (nm 0 f max ) time, where m 0 = min (nf max ; m). <p> The separation subroutine required by the linear programming algorithm is as follows: given a vector x 2 Q jEj + , find a set S such that x (ffi (S)) &lt; f (S), if one exists. Gabow et al. <ref> [5] </ref> give a polynomial time algorithm for this problem. Let x fl denote the optimal fractional solution obtained.
Reference: [6] <author> M. X. Goemans and D. J. Bertsimas. </author> <title> Survivable networks, linear programming relaxations and the parsimonious property. </title> <journal> Mathematical Programming, </journal> <volume> 60, </volume> <year> 1993. </year> <note> Also appears as MIT Tech Report OR 216-90. </note>
Reference-contexts: The analysis of the performance guarantee is tight, and the examples 223 224 Goemans et al. Guarantee with Guarantee with Type of Function f Multiple Copies Allowed Multiple Copies Forbidden r (u; v) = minfr (u); r (v)g minf2q;2H (f max )g <ref> [6] </ref> - r (u; v) 2 log 2 f max [2] - f0,2g-proper - 3 [9] proper 2H (f max ) [7] 2f max [14] 2H (f max ) this paper to prove this suggest that a rather different approach is needed to obtain an algorithm with a constant performance guarantee. <p> This is the special case of our network design problem in which f (S) = max v2S;w62S r (v; w). Goemans & Bertsimas <ref> [6] </ref> consider the case in which each requirement r (v; w) is given indirectly by node requirements r (v) for each v 2 V , where r (v; w) = minfr (v); r (w)g.
Reference: [7] <author> M. X. Goemans and D. P. Williamson. </author> <title> A general approximation technique for constrained forest problems. </title> <booktitle> In Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 307-316, </pages> <year> 1992. </year>
Reference-contexts: Guarantee with Guarantee with Type of Function f Multiple Copies Allowed Multiple Copies Forbidden r (u; v) = minfr (u); r (v)g minf2q;2H (f max )g [6] - r (u; v) 2 log 2 f max [2] - f0,2g-proper - 3 [9] proper 2H (f max ) <ref> [7] </ref> 2f max [14] 2H (f max ) this paper to prove this suggest that a rather different approach is needed to obtain an algorithm with a constant performance guarantee. <p> Based on this result, they obtain a 2 log 2 f max -approximation algorithm for the survivable network design problem (where multiple copies are allowed). Goemans & Williamson <ref> [7] </ref> apply the primal-dual method to the network design problem specified by a proper f0; 1g function f to obtain a 2-approximation algorithm.
Reference: [8] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> Geometric Algorithm and Combinatorial Optimization. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: If f is proper, then the algorithm can be implemented to run in polynomial time. Proof: Consider the linear programming relaxation in which the integrality constraints on x (e) are replaced by constraints 0 x (e) u (e). We use the ellipsoid method <ref> [8] </ref> or the convex programming algorithm of Vaidya [12] to solve this linear program. Note that this linear program has an exponential number of inequalities.
Reference: [9] <author> P. Klein and R. Ravi. </author> <title> When cycles collapse: A general approximation technique for constrained 232 Goemans et al. two-connectivity problems. </title> <booktitle> In Proceedings of the Third MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> pages 39-55, </pages> <year> 1993. </year> <note> Also appears as Brown University Technical Report CS-92-30. </note>
Reference-contexts: There are two primary variants of these problems: one in which a solution may include multiple copies of each edge, and one in which this is forbidden. We first focus on the latter case. Extending work of Klein & Ravi <ref> [9] </ref> for proper function with range f0; 2g, Williamson, Goemans, Mihail, & Vazirani [14] gave a polynomial-time 2f max -approximation algorithm when the function f is proper, where f max = max SV f (S) and a approximation algorithm is an algorithm that always delivers a solution of cost at most <p> Guarantee with Guarantee with Type of Function f Multiple Copies Allowed Multiple Copies Forbidden r (u; v) = minfr (u); r (v)g minf2q;2H (f max )g [6] - r (u; v) 2 log 2 f max [2] - f0,2g-proper - 3 <ref> [9] </ref> proper 2H (f max ) [7] 2f max [14] 2H (f max ) this paper to prove this suggest that a rather different approach is needed to obtain an algorithm with a constant performance guarantee.
Reference: [10] <author> T. L. Magnanti and R. T. Wong. </author> <title> Network design and transportation planning: Models and algorithms. </title> <journal> Transportation Science, </journal> <volume> 18 </volume> <pages> 1-55, </pages> <year> 1984. </year>
Reference-contexts: 1 Introduction Network design problems have a wide range of practical applications, ranging from telecommunications to transportation problems <ref> [10] </ref>. In this paper, we will investigate approximation algorithms for several basic network design problems.
Reference: [11] <author> J.-C. Picard and M. Queyranne. </author> <title> On the structure of all minimum cuts in a network and applications. </title> <journal> Mathematical Programming Study, </journal> <volume> 13 </volume> <pages> 8-16, </pages> <year> 1980. </year>
Reference-contexts: As in Gabow et al., for each edge e = (s; t) of the cut-tree, we will keep track of all minimum s-t cuts by using a compact representation due to Picard and Queyranne <ref> [11] </ref>. The Picard-Queyranne representation is a directed acyclic graph G e such that each vertex in G e represents a set of vertices in the original graph, and the vertices of G e induce a partition of the original vertex set V .
Reference: [12] <author> P. M. Vaidya. </author> <title> A new algorithm for minimizing convex functions over convex sets. </title> <booktitle> In Proceedings of the 30th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 338-343, </pages> <year> 1989. </year>
Reference-contexts: Proof: Consider the linear programming relaxation in which the integrality constraints on x (e) are replaced by constraints 0 x (e) u (e). We use the ellipsoid method [8] or the convex programming algorithm of Vaidya <ref> [12] </ref> to solve this linear program. Note that this linear program has an exponential number of inequalities.
Reference: [13] <author> D. P. Williamson. </author> <title> On the design of approximation algorithms for a class of graph problems. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <address> Cambridge, MA, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: However, the algorithm uses a subroutine to find minimally violated subsets, and to do this in polynomial time, one still needs the stronger assumption that f is proper. Complete proofs of the results of this paper can be found in <ref> [13] </ref>. 2 Preliminaries and Definitions Formally, a network design problem is defined by a graph G = (V; E) with n nodes and m edges, with a non-negative cost function c : E ! Q + on the edges.
Reference: [14] <author> D. P. Williamson, M. X. Goemans, M. Mihail, and V. V. Vazirani. </author> <title> A primal-dual approximation algorithm for generalized Steiner network problems. </title> <booktitle> In Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 708-717, </pages> <year> 1993. </year>
Reference-contexts: We first focus on the latter case. Extending work of Klein & Ravi [9] for proper function with range f0; 2g, Williamson, Goemans, Mihail, & Vazirani <ref> [14] </ref> gave a polynomial-time 2f max -approximation algorithm when the function f is proper, where f max = max SV f (S) and a approximation algorithm is an algorithm that always delivers a solution of cost at most times the optimum. <p> Guarantee with Guarantee with Type of Function f Multiple Copies Allowed Multiple Copies Forbidden r (u; v) = minfr (u); r (v)g minf2q;2H (f max )g [6] - r (u; v) 2 log 2 f max [2] - f0,2g-proper - 3 [9] proper 2H (f max ) [7] 2f max <ref> [14] </ref> 2H (f max ) this paper to prove this suggest that a rather different approach is needed to obtain an algorithm with a constant performance guarantee. <p> For this version, we give a polynomial-time minf2f max ; 2mg-approximation algorithm. Our algorithm for the uncapacitated version is quite similar to the algorithm of Williamson, Goe-mans, Mihail, & Vazirani <ref> [14] </ref>. Both algorithms proceed in phases, where in each phase we specify cuts for which the connectivity must be augmented. The main difference between the two algorithms is the way in which these cuts are specified. <p> Bang-Jensen, Frank & Jackson [3] have also introduced this class of functions, and have called them x-supermodular. As we will show below, an important special case of weakly supermodular functions are proper functions, as defined in Williamson et al. <ref> [14] </ref>. The function f is proper if f (V ) = 0, f (S) = f (V S) for each S V (symmetry), and f (A [ B) maxff (A); f (B)g whenever A and B are disjoint (maximality). <p> (B)) x (ffi (A B)) + x (ffi (B A))g: The lemma statement follows straightforwardly from these inequalities. 226 Goemans et al. 3 The Algorithm 3.1 The previous algorithm Before discussing our algorithm for network design problems, it will first be useful to review the algorithm of Williamson et al. <ref> [14] </ref>. Their algorithm successively augments a set of edges in phases, starting with the empty set.
References-found: 14

