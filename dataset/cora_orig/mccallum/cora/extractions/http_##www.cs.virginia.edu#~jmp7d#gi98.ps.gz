URL: http://www.cs.virginia.edu/~jmp7d/gi98.ps.gz
Refering-URL: http://www.cs.virginia.edu/~jmp7d/research.html
Root-URL: http://www.cs.virginia.edu
Email: jmp7d@virginia.edu  kma@icase.edu  
Author: James Patten Kwan-Liu Ma 
Address: Charlottesville, VA 22906  Hampton VA 23681  
Affiliation: Department of Computer Science University of Virginia  Institute for Computer Applications in Science and Engineering (ICASE) NASA Langley Research Center,  
Abstract: A Graph Based Interface for Representing Volume Visualization Results Abstract This paper discusses a graph based user interface for representing the results of the volume visualization process. As images are rendered, they are connected to other images in a graph based on their rendering parameters. The user can take advantage of the information in this graph to understand how certain rendering parameter changes affect a dataset, making the visualization process more efficient. Because the graph contains more information than is contained in an unstructured history of images, the image graph is also helpful for collaborative visualization and animation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Di. Battista, P. Eades, R. Tamassia, and I. Tollis. </author> <title> Annotated Bibliography on Graph Drawing Algorithms. Computational Geometry: theory and Applications, </title> <address> 4:235282, </address> <year> 1994. </year>
Reference-contexts: We provide forward and back but-tons to select nodes in the graph relative to the current node according to the order of creation. Drawing ordered graphs has been investigated elsewhere <ref> [14, 1] </ref>. process using the graph-based approach. The initial image is in the top left corner of the figure. The images grow newer towards the right side of the graph. The node displaying a mix of blue and red vortices shows the dataset with extreme values emphasized.
Reference: [2] <author> B. Cabral, N. Cam, and J. Foran. </author> <title> Accelerated Volume Rendering and Tomographic Reconstruction Using Texture mapping Hardware. </title> <booktitle> In Proceedings of 1994 Symposium on Volume Visualization, </booktitle> <pages> pages 9198, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Several volume rendering algorithms have been introduced including the ray casting [7], projection [3], splatting [15] and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted <ref> [13, 2] </ref> and parallel [10, 5] methods. To take advantage of these improvements in visualization algorithms, we need an effective user interface for volume visualization.
Reference: [3] <author> R. A. Drebin, L. Carpenter, and P. </author> <title> Hanrahan. </title> <booktitle> Volume Rendering. In Proceedings of SIGGRAPH '88, </booktitle> <pages> pages 6574, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: 1 Introduction Direct volume rendering has received considerable attention because it is effective for visualizing features in the data that are either very fine or difficult to define analytically. Several volume rendering algorithms have been introduced including the ray casting [7], projection <ref> [3] </ref>, splatting [15] and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted [13, 2] and parallel [10, 5] methods.
Reference: [4] <author> T. He, L. Hong, A. Kaufman, and H. Pfister. </author> <title> Generation of Transfer Functions with Stochastic Search Techniques. </title> <booktitle> In Proceedings of Visualization '96, </booktitle> <pages> pages 227234, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: If the user can specify the rendering parameters he or she wants in an intuitive manner, this does not guarantee good images. Because a user may not be able to predict the rendered image output, volume visualization is an inherently iterative process. One system <ref> [4] </ref> uses stochastic search techniques in concert with user defined fitness functions to help the user pick good transfer functions. However under most current systems, this iteration is a process of trial and error.
Reference: [5] <author> P. Lacroute. </author> <title> Real-Time Volume Rendering on Shared Memory Multiprocessors Using the Shear-Warp Factorization. </title> <booktitle> In Proceedings of the 1995 Parallel Rendering Symposium, </booktitle> <pages> pages 1522, </pages> <year> 1995. </year>
Reference-contexts: Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted [13, 2] and parallel <ref> [10, 5] </ref> methods. To take advantage of these improvements in visualization algorithms, we need an effective user interface for volume visualization. Because volume data exploration often involves a trial and error process of parameter specification, an important part of a user interface is a structured representation of the rendering results.
Reference: [6] <author> P. Lacroute and M. Levoy. </author> <title> Fast Volume Rendering Using a Shear-Warp Factorization of the Viewing Transformation. </title> <booktitle> In Proceedings of SIGGRAPH '94, </booktitle> <pages> pages 451458, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Direct volume rendering has received considerable attention because it is effective for visualizing features in the data that are either very fine or difficult to define analytically. Several volume rendering algorithms have been introduced including the ray casting [7], projection [3], splatting [15] and shear warp <ref> [6] </ref> methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted [13, 2] and parallel [10, 5] methods.
Reference: [7] <author> M. Levoy. </author> <title> Display Surfaces from Volume Data. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 25(4):2937, </volume> <month> May </month> <year> 1988. </year>
Reference-contexts: 1 Introduction Direct volume rendering has received considerable attention because it is effective for visualizing features in the data that are either very fine or difficult to define analytically. Several volume rendering algorithms have been introduced including the ray casting <ref> [7] </ref>, projection [3], splatting [15] and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted [13, 2] and parallel [10, 5] methods.
Reference: [8] <author> M. Levoy. </author> <title> Efficient Ray Tracing of Volume Data. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(3):245261, </volume> <month> July </month> <year> 1990. </year>
Reference-contexts: Several volume rendering algorithms have been introduced including the ray casting [7], projection [3], splatting [15] and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence <ref> [8] </ref>, encoding image space coherence [17], hardware assisted [13, 2] and parallel [10, 5] methods. To take advantage of these improvements in visualization algorithms, we need an effective user interface for volume visualization.
Reference: [9] <author> M. Levoy. </author> <title> Spreadsheets for Images. </title> <booktitle> In Proceedings of SIGGRAPH '94, </booktitle> <pages> pages 139146, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: While current systems do not provide a structured representation of the rendering results, some systems have explored structured visual representations of the image production process. The SI system <ref> [9] </ref> extends the spreadsheet paradigm by incorporating images, data and widgets into spreadsheets. This extension allows the user to manipulate data according to formulae in the same way that numbers are manipulated in a traditional spreadsheet.
Reference: [10] <author> Kwan-Liu Ma, Jamie S Painter, C.D. Hansen, and M.F. Krogh. </author> <title> Parallel Volume Rendering Using Binary-Swap Compositing. </title> <journal> IEEE Computer Graphics Applications, </journal> <volume> 14(4):5967, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted [13, 2] and parallel <ref> [10, 5] </ref> methods. To take advantage of these improvements in visualization algorithms, we need an effective user interface for volume visualization. Because volume data exploration often involves a trial and error process of parameter specification, an important part of a user interface is a structured representation of the rendering results.
Reference: [11] <author> J. Marks, B. Andalman, P. Beardsley, W. Freeman, S. Gibson, J. Hodings, T. Kang, B. Mirtich, H. Pfis-ter, W. Ruml, K. Ryall, J. Seims, and S. Shieber. </author> <title> Design Galleries: A General Approach to Setting Parameters for Computer Graphics and Animation. </title> <booktitle> In Proceedings of SIGGRAPH '97, </booktitle> <pages> pages 389400, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: The user simply tries combinations of rendering parameters, and stops if he finds a combination which produces a useful image. This rendering process can be time consuming, depending on the algorithm and hardware being used. The Design Galleries system <ref> [11] </ref> treats volume rendering as the process of exploring a multidimensional space. The dimensions of the space are the rendering parameters. The image the user is looking for exists in this space, but the user does not know the appropriate combination of rendering parameters to produce that image.
Reference: [12] <author> C. K. Michaels and M. J. Bailey. </author> <title> A Java Applet for Interactive 3D Scientific Visualization on the Web . In Proceedings of Visualization '97, </title> <month> October </month> <year> 1997. </year>
Reference-contexts: It serves as a testbed for our visualization research in the areas of user interfaces and collaborative visualization. This system allows visualization across the Internet. Several other systems have addressed the problem of remote visualization. The VizWiz system <ref> [12] </ref> performs some types of visualization over the Internet, including isosurface rendering and cutting planes, but the system does not support direct volume rendering.
Reference: [13] <author> H. Pfister and A. Kaufman. </author> <title> Cube4 A Scalable Architecture for REal-Time Volume Rendering. </title> <booktitle> In Proceedings of 1996 Symposium on Volume Visualization, </booktitle> <month> 47-54 </month> <year> 1996. </year>
Reference-contexts: Several volume rendering algorithms have been introduced including the ray casting [7], projection [3], splatting [15] and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted <ref> [13, 2] </ref> and parallel [10, 5] methods. To take advantage of these improvements in visualization algorithms, we need an effective user interface for volume visualization.
Reference: [14] <author> I. </author> <title> Rival. </title> <booktitle> The Diagram, </booktitle> <pages> pages 103133. </pages> <publisher> Reidel Publishing, </publisher> <year> 1985. </year>
Reference-contexts: We provide forward and back but-tons to select nodes in the graph relative to the current node according to the order of creation. Drawing ordered graphs has been investigated elsewhere <ref> [14, 1] </ref>. process using the graph-based approach. The initial image is in the top left corner of the figure. The images grow newer towards the right side of the graph. The node displaying a mix of blue and red vortices shows the dataset with extreme values emphasized.
Reference: [15] <author> L. Westover. </author> <title> Footprint Evaluation for Volume Rendering. </title> <booktitle> In Proceedings of SIGGRAPH '90, </booktitle> <pages> pages 367376, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Direct volume rendering has received considerable attention because it is effective for visualizing features in the data that are either very fine or difficult to define analytically. Several volume rendering algorithms have been introduced including the ray casting [7], projection [3], splatting <ref> [15] </ref> and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence [17], hardware assisted [13, 2] and parallel [10, 5] methods.
Reference: [16] <author> C. Wittenbrink, K. Kim, J. Story, and A. Pang. PermWeb: </author> <title> remote parallel and distributed volume visualization. </title> <booktitle> In Proceedings of SPIE Visual Data Exploration and Analysis IV, SPIE's Electronic Imaging `97, </booktitle> <pages> pages 100110, </pages> <month> February </month> <year> 1997. </year>
Reference-contexts: This system allows visualization across the Internet. Several other systems have addressed the problem of remote visualization. The VizWiz system [12] performs some types of visualization over the Internet, including isosurface rendering and cutting planes, but the system does not support direct volume rendering. The PermWeb system <ref> [16] </ref> uses a client server approach to volume rendering, but this system does not address the specification of rendering parameters such as color and opacity transfer functions.
Reference: [17] <author> R. Yagel and Z. Shi. </author> <title> Accelerating Volume Animation by Space-Leaping. </title> <booktitle> In Proceedings of Visualization '93, </booktitle> <month> 63-69 </month> <year> 1993. </year>
Reference-contexts: Several volume rendering algorithms have been introduced including the ray casting [7], projection [3], splatting [15] and shear warp [6] methods. Various optimization and acceleration techniques for volume rendering have also been developed including encoding object space coherence [8], encoding image space coherence <ref> [17] </ref>, hardware assisted [13, 2] and parallel [10, 5] methods. To take advantage of these improvements in visualization algorithms, we need an effective user interface for volume visualization.
Reference: [18] <author> D. Young, M. Argiro. Cantata: </author> <title> Visual Programming Environment for the Khoros System. </title> <journal> Computer Graphics, </journal> <volume> 29(2):2224, </volume> <month> May </month> <year> 1995. </year> <title> and positive (red) vortices. </title>
Reference-contexts: The SI system [9] extends the spreadsheet paradigm by incorporating images, data and widgets into spreadsheets. This extension allows the user to manipulate data according to formulae in the same way that numbers are manipulated in a traditional spreadsheet. The Khoros system provides a visual programming environment called Cantata <ref> [18] </ref> which allows the user to construct directed graphs which represent the flow of data through the system.
References-found: 18

