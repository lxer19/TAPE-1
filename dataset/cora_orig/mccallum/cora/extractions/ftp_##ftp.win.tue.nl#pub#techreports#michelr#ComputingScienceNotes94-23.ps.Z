URL: ftp://ftp.win.tue.nl/pub/techreports/michelr/ComputingScienceNotes94-23.ps.Z
Refering-URL: http://www.win.tue.nl/cs/fm/michelr/msc.html
Root-URL: http://www.win.tue.nl
Email: sjouke@win.tue.nl michelr@win.tue.nl  
Title: An algebraic semantics of Message Sequence Charts  
Author: S. Mauw M.A. Reniers 
Address: P.O. Box 513, 5600 MB Eindhoven, The Netherlands.  
Affiliation: Dept. of Mathematics and Computing Science, Eindhoven University of Technology,  
Abstract: Message Sequence Charts is a graphical and textual language for the description and specification of the interactions between system components and their environment. The language is standardized by the ITU-TS (the Telecommunication Standardization section of the International Telecommunication Union, the former CCITT). The main area of application for Message Sequence Charts is as an overview specification of the communication behavior of real-time systems, in particular telecommunication switching systems. Message Sequence Charts may be used for requirement specification, interface specification, simulation and validation, test-case specification and documentation of real-time systems. In this paper we present a formal semantics of Message Sequence Charts exploiting techniques from process algebra. This semantics is proposed for standardization within the ITU-TS. We start with the semantics of the core language of Message Sequence Charts, Basic Message Sequence Charts, and subsequently add other features such as process creation and termination, refinement and timer handling. 
Abstract-found: 1
Intro-found: 1
Reference: [AB91] <author> G.J. Akkerman and J.C.M. Baeten. </author> <title> Term rewriting analysis in process algebra. </title> <journal> CWI Quarterly, </journal> <volume> 4(4), </volume> <year> 1991. </year>
Reference-contexts: We can associate a term rewriting system [Klo92] with the axioms from PA MSC by replacing the = by a ! in all axioms except A1 and A2. Using term-rewrite techniques <ref> [AB91, Der79] </ref> it can be proven that this term-rewriting system is strongly normalizing (i.e. there are no infinite rewritings possible). Furthermore it can be proven that a normal form of a closed PA MSC term is a closed PA " term. Let s be a closed PA MSC term.
Reference: [BB88] <author> J.C.M. Baeten and J.A. Bergstra. </author> <title> Global renaming operators in concrete process algebra. </title> <journal> Information and Computation, </journal> <volume> 78, </volume> <year> 1988. </year>
Reference-contexts: After the execution of the message input the message identifier is removed from the set M . The operator M is an instance of the state operator <ref> [BB88, BW90] </ref>. For all M L (&lt;mn&gt;[,<min>]), x ; y 2 V , a 2 A, i ; j 2 L (&lt;inst name&gt;), m 2 L (&lt;mn&gt;[,<min>]) and p 2 L &lt;&gt; (&lt;par list&gt;), we define the state operator M in Table 10. <p> = i if n = m sen m (x + y) = sen m (x ) if sen m (x ) = sen m (y ) Table 12: The functions rec m and sen m For the renaming of the atomic actions we use the global renaming operator ae f <ref> [BB88, BW90] </ref>. It renames an atomic action a 2 A into an atomic action given by f (a). Let f : A ! A be a function.
Reference: [BW90] <author> J.C.M. Baeten and W.P. Weijland. </author> <title> Process Algebra. </title> <booktitle> Cambridge Tracts in Theoretical Computer Science 18. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference-contexts: This means that a Message Sequence Chart is described by giving the behavior of every instance in separation. The formal semantics presented in this paper is based on the algebraic theory of process description ACP (Algebra of Communicating Processes) <ref> [BW90] </ref>. ACP is an algebraic theory in many ways related to the algebraic process theories CCS (Calculus of Communicating Systems) [Mil80] and CSP (Communicating Sequential Processes) [Hoa85]. <p> Since we consider asynchronous communication and since Message Sequence Charts may be "empty", we use PA " , i.e. ACP without the communication function and with the empty process <ref> [BW90] </ref>. This paper is structured in the following way. First we introduce Basic Message Sequence Charts, the core language of Message Sequence Charts. Within a Basic Message Sequence Chart only local actions and communications can be specified. <p> A decomposed instance may not be refined by the chart it is defined in, directly or via a number of refinements. 3 The process algebra PA " 3.1 Introduction The process algebra PA " is an algebraic theory for the description of process behavior <ref> [BW90] </ref>. Such an algebraic theory is given by a signature defining the processes and a set of equations defining the equality relation on these processes. <p> The definition of basic PA " terms used coincides with the definition of basic BPA ffi" terms in <ref> [BW90] </ref>. A proof of this theorem is given there. 2 Because of Theorem 3.3.1 we have a very simple induction structure. If we want to prove a property of closed PA " terms, we only have to prove that the property holds for basic PA " terms. <p> Lemma 3.3.1 For closed PA " terms x ,y and z we have the following properties: 1. x k y = y k x 3. x k ffi = ffi k x = x ffi Proof. These properties are taken from <ref> [BW90] </ref>. 2 Because of the symmetry and associativity of the alternative composition and the free merge the quantified notations for these operators from the previous section are allowed. 14 4 Semantics of Message Sequence Charts 4.1 Introduction In this section the semantics of Message Sequence Charts is presented in a stepwise <p> After the execution of the message input the message identifier is removed from the set M . The operator M is an instance of the state operator <ref> [BB88, BW90] </ref>. For all M L (&lt;mn&gt;[,<min>]), x ; y 2 V , a 2 A, i ; j 2 L (&lt;inst name&gt;), m 2 L (&lt;mn&gt;[,<min>]) and p 2 L &lt;&gt; (&lt;par list&gt;), we define the state operator M in Table 10. <p> = i if n = m sen m (x + y) = sen m (x ) if sen m (x ) = sen m (y ) Table 12: The functions rec m and sen m For the renaming of the atomic actions we use the global renaming operator ae f <ref> [BB88, BW90] </ref>. It renames an atomic action a 2 A into an atomic action given by f (a). Let f : A ! A be a function.
Reference: [CCI92] <author> CCITT. </author> <title> CCITT Recommendation Z.120: Message Sequence Chart (MSC). </title> <address> Geneva, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Message Sequence Charts is a graphical language for the description of the interactions between entities, standardized by the ITU-TS (the Telecommunication Standardization section of the International Telecommunication Union, the former CCITT). Besides the graphical syntax there is also a textual syntax for Message Sequence Charts. ITU recommendation Z.120 <ref> [CCI92] </ref> contains both the graphical and the textual syntax and an informal explanation of the semantics. The current goal in the process of standardization is the definition of a formal semantics of the language. <p> The static requirements imposed on Basic Message Sequence Charts, as far as they are of importance to the definition of the formal semantics in Section 4, are given. The static requirements are not formalized. In <ref> [CCI92] </ref> the static requirements for Message Sequence Charts are given informally. 2 Thereafter we introduce the other primitives incorporated in the language of Message Sequence Charts. These primitives are process creation and process termination, timer handling, coregions, conditions, and refinement. <p> These primitives are process creation and process termination, timer handling, coregions, conditions, and refinement. In this paper we do not use the concrete textual syntax for Message Sequence Charts as defined in <ref> [CCI92] </ref>, but an alternative syntax. We feel that the original concrete textual syntax is not suited for the definition of the formal semantics and the auxiliary functions used in the definition thereof. In Appendix A both the original concrete textual syntax and the alternative syntax are presented.
Reference: [Der79] <author> N. Dershowitz. </author> <title> A note on simplification orderings. </title> <journal> Information Processing Letters, </journal> <volume> 9(5), </volume> <year> 1979. </year>
Reference-contexts: We can associate a term rewriting system [Klo92] with the axioms from PA MSC by replacing the = by a ! in all axioms except A1 and A2. Using term-rewrite techniques <ref> [AB91, Der79] </ref> it can be proven that this term-rewriting system is strongly normalizing (i.e. there are no infinite rewritings possible). Furthermore it can be proven that a normal form of a closed PA MSC term is a closed PA " term. Let s be a closed PA MSC term.
Reference: [dM93] <author> J. de Man. </author> <title> Towards a formal semantics of Message Sequence Charts. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. Several attempts have been made to achieve such a formal semantics. We mention approaches based on automata theory [LL94], Petri net theory [GGR93] and on process algebra <ref> [dM93, MvWW93] </ref>. None of these papers contains a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition.
Reference: [GGR93] <author> J. Grabowski, P. Graubmann, and E. Rudolph. </author> <title> Towards a Petri net based semantics definition for Message Sequence Charts. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Else-vier Science Publishers B.V. </publisher>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. Several attempts have been made to achieve such a formal semantics. We mention approaches based on automata theory [LL94], Petri net theory <ref> [GGR93] </ref> and on process algebra [dM93, MvWW93]. None of these papers contains a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition.
Reference: [Hoa85] <author> C.A.R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference-contexts: The formal semantics presented in this paper is based on the algebraic theory of process description ACP (Algebra of Communicating Processes) [BW90]. ACP is an algebraic theory in many ways related to the algebraic process theories CCS (Calculus of Communicating Systems) [Mil80] and CSP (Communicating Sequential Processes) <ref> [Hoa85] </ref>. The process algebra ACP is a useful framework for the description of the formal semantics of Message Sequence Charts since all features incorporated in the theory of Message Sequence Charts are related to topics already studied in process algebra such as the state operator and the global renaming operator.
Reference: [Klo92] <author> J.W. Klop. </author> <title> Term rewriting systems. </title> <editor> In S. Abramsky, D. Gabbay, and T. Maibaum, editors, </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> volume II, </volume> <pages> pages 1-116, </pages> <year> 1992. </year>
Reference-contexts: The signature PA " consists of 1. the special constants ffi and " 2. the set of unspecified constants A 3. the unary operator p 4. the binary operators +, , k and k 2 A context is a term containing a hole, e.g. <ref> [Klo92] </ref>. 12 The special constant ffi denotes the process that has stopped executing actions and cannot proceed. This constant is called deadlock. The special constant " denotes the process that is only capable of terminating successfully. It is called the empty process. <p> Theorem 4.10.1 (Elimination) For every closed PA MSC term s, there exists a basic PA " term t such that PA MSC ` s = t Proof. We can associate a term rewriting system <ref> [Klo92] </ref> with the axioms from PA MSC by replacing the = by a ! in all axioms except A1 and A2. Using term-rewrite techniques [AB91, Der79] it can be proven that this term-rewriting system is strongly normalizing (i.e. there are no infinite rewritings possible).
Reference: [LL94] <author> P.B. Ladkin and S. Leue. </author> <title> What do Message Sequence Charts mean? In R.L. </title> <editor> Tenney, P.D. Amer, and M. U. Uyar, editors, </editor> <booktitle> Formal Description Techniques VI, IFIP Transactions C, Proceedings of the Sixth International Conference on Formal Description Techniques. </booktitle> <publisher> North-Holland, </publisher> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. Several attempts have been made to achieve such a formal semantics. We mention approaches based on automata theory <ref> [LL94] </ref>, Petri net theory [GGR93] and on process algebra [dM93, MvWW93]. None of these papers contains a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition.
Reference: [Mil80] <author> R. Milner. </author> <title> A Calculus of Communicating Systems. </title> <booktitle> Lecture Notes in Computer Science 92. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: The formal semantics presented in this paper is based on the algebraic theory of process description ACP (Algebra of Communicating Processes) [BW90]. ACP is an algebraic theory in many ways related to the algebraic process theories CCS (Calculus of Communicating Systems) <ref> [Mil80] </ref> and CSP (Communicating Sequential Processes) [Hoa85].
Reference: [MvWW93] <author> S. Mauw, M. van Wijk, and T. Winter. </author> <title> A formal semantics of synchronous Interwork-ings. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: Finally a formal semantics will help to harmonize the use of Message Sequence Charts. Several attempts have been made to achieve such a formal semantics. We mention approaches based on automata theory [LL94], Petri net theory [GGR93] and on process algebra <ref> [dM93, MvWW93] </ref>. None of these papers contains a formal semantics of the complete language. Although all approaches have their advantages and disadvantages, it has been decided by the standardization committee to use process algebra for the formal definition. <p> Therefore, we will only describe the semantics of a single Message Sequence Chart with its corresponding Sub Message Sequence Charts. This work is related to the formal semantics of Interworkings in <ref> [MvWW93] </ref>. A difference is that we consider asynchronous communication whereas the theory of Interworkings is only concerned with synchronous communication. Furthermore, Message Sequence Charts and Interworkings have a different approach with respect to their textual representation.
Reference: [MW93] <author> S. Mauw and T. Winter. </author> <title> A prototype toolset for Interworkings. </title> <journal> Philips Telecommunication Review, </journal> <volume> 51(3), </volume> <year> 1993. </year>
Reference-contexts: This is best illustrated by the state operators we used to remove some traces from the interleaving of the instances. The algebraic approach from process algebra enables the use of term rewriting systems for the rapid prototyping of specifications <ref> [MW93] </ref>. The definition of a formal semantics of Message 33 Sequence Charts based on process algebra has turned out to be a natural and successful method.
References-found: 13

