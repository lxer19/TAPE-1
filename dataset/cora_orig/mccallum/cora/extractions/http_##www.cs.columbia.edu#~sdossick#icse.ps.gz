URL: http://www.cs.columbia.edu/~sdossick/icse.ps.gz
Refering-URL: http://www.cs.columbia.edu/~sdossick/
Root-URL: http://www.cs.columbia.edu
Email: kaiser@cs.columbia.edu  
Phone: 212-939-7081,  
Title: An Architecture for WWW-based Hypercode Environments  
Author: Gail E. Kaiser Stephen E. Dossick Wenyu Jiang Jack Jingshuang Yang 
Keyword: Hypermedia, Environments, Software process, Work-flow, CSCW, Software documentation  
Address: New York, NY 10027, UNITED STATES  
Affiliation: Columbia University Department of Computer Science, MC 0401  
Abstract: A hypercode software engineering environment represents all plausible multimedia artifacts concerned with software development and evolution that can be placed or generated on-line, from source code to formal documentation to digital library resources to informal email and chat transcripts. A hypercode environment supports both internal (hypertext) and external (link server) links among these artifacts, which can be added incrementally as useful connections are discovered; project-specific hypermedia search and browsing; automated construction of artifacts and hyperlinks according the software process; application of tools to the artifacts according to the process workflow; and collaborative work for geographically dispersed teams. We present a general architecture for what we call hyper-media subwebs, and groupspace services operating on shared subwebs, based on World Wide Web technology | which could be applied over the Internet or within an intranet. We describe our realization in OzWeb. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. M. Anderson, R. N. Taylor, and E. J. Whitehead, Jr. </author> <title> Chimera: Hypertext for heterogeneous software environments. </title> <booktitle> In 1994 European Conference on Hyperme-dia Technology, </booktitle> <pages> pages 94-107, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Anchors need not refer to full pages or images, but may correspond to a point within a document, e.g., using the fragment name feature of HTML (&lt;A HREF="...#&lt;name&gt;" and &lt;A NAME="..."&gt;) or to a particular state of a tool applied to the anchor as in Chimera <ref> [1] </ref>. Reference as the access type; treats the hypermedia entity content as opaque (binary); and stores related information like timestamp and location in a text file. The my links and my children attributes allow arbitrary references and composition of objects.
Reference: [2] <author> K. Andrews, F. Kappe, and H. Maurer. </author> <title> Serving information to the Web with Hyper-G. </title> <booktitle> In 3rd Intl. WorldWide Web Conference, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Relationships among hypertext pages augment the usual links. However, data content must be modified to include the entity class, attributes, and relationships. Hyper-G <ref> [2] </ref> supports hierarchical structuring of aggregate collections of Web pages, with collections spread across websites. Links are represented externally to the hypermedia content. Scaling is supported by replication and caching (with weak consistency). Hyper-G uses its own format, but converts to HTML when serving a WWW client.
Reference: [3] <author> I. Ben-Shaul and G. E. Kaiser. </author> <title> A Paradigm for Decentralized Process Modeling. </title> <publisher> Kluwer, </publisher> <year> 1995. </year>
Reference-contexts: Thus we adapted these facilities from the Oz process-centered environment <ref> [3] </ref> to our hypercode architecture, rather than attempting to invent new ones or arguing in favor of our old ones. <p> There is a similar issue regarding concurrency control, since arbitrary browsers do not signal when reading is "done". OZWEB REALIZATION Oz Background Oz <ref> [3] </ref> provides a rule-based process modeling language in which a rule generally corresponds to a workflow step.
Reference: [4] <author> C. Brooks, M. S. Mazer, S. Meeks, and J. Miller. </author> <title> Application-specific proxy servers as HTTP stream transducers. </title> <booktitle> In 4th Intl. World Wide Web Conference, </booktitle> <pages> pages 539-548, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: Subweb users are de-picted as WWW browsers. The browsers are configured to transmit all their traffic through the subweb's proxy server. These may be daisy-chained with other proxy servers before and after the subweb proxy, performing other functions, as in OreO's stream transducers <ref> [4] </ref>. The same subweb could be accessed through multiple subweb proxies. The browsers, proxy server (s), subweb server, subweb website (s) and any other relevant web-sites may reside on different machines dispersed across the Internet or an intranet.
Reference: [5] <author> M. H. Brown. WebCard: </author> <title> Integrated and uniform access to mail, news, and the Web. </title> <type> Technical Report 139a, </type> <institution> DEC Systems Research Center, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: Repository data is transformed to/from a common structured hypermedia format by a repository-specific gateway. Only navigational access is supported. Update requests are turned down if the object has changed since last retrieved. WebCard <ref> [5] </ref> supports representation of Web pages in the style of email/news folders. Lightweight Databases [8] extends HTML to map relational database schemas onto hypertext documents, to support queries that rely on semantic knowledge of the structure and content of documents. Relationships among hypertext pages augment the usual links.
Reference: [6] <author> U. Dayal, H. Garcia-Molina, M. Hsu, B. Kao, and M.- C. Shan. </author> <title> Third generation TP monitors: A database challenge. </title> <booktitle> In 1993 SIGMOD Intl. Conference on Management of Data, </booktitle> <pages> pages 393-398, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Although the Web may soon support versioning and configuration management following the "checkout model", there is little concept of transactions, with either the classical atomicity, consistency, isolation and durability properties, or permitting relaxations proposed for long-duration, interactive, and/or cooperative work <ref> [10, 6] </ref>. The first author argues in [11] why the checkout model is less attractive than "cooperative transactions".
Reference: [7] <institution> Defense Advanced Research Projects Agency. Evolutionary Design of Complex Systems, </institution> <month> July </month> <year> 1996. </year> <note> http://www.ito.darpa.mil/ResearchAreas/EDCS.html. </note>
Reference-contexts: See <ref> [7] </ref> for further rationale. The hyperlinked nature permits references to materials generated and managed independently from the project, such as digital library publications, technical reports from unrelated institutions that provided algorithms, architectures or insights, videos or transcripts of lectures with some bearing on the system, etc.
Reference: [8] <author> S. Dobson and V. Burrill. </author> <title> Lightweight databases. </title> <booktitle> In 3rd Intl. World-Wide Web Conference, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Repository data is transformed to/from a common structured hypermedia format by a repository-specific gateway. Only navigational access is supported. Update requests are turned down if the object has changed since last retrieved. WebCard [5] supports representation of Web pages in the style of email/news folders. Lightweight Databases <ref> [8] </ref> extends HTML to map relational database schemas onto hypertext documents, to support queries that rely on semantic knowledge of the structure and content of documents. Relationships among hypertext pages augment the usual links. However, data content must be modified to include the entity class, attributes, and relationships.
Reference: [9] <author> S. E. Dossick and G. E. Kaiser. </author> <title> WWW access to legacy client/server applications. </title> <booktitle> In 5th Intl. World Wide Web Conference, </booktitle> <pages> pages 931-940, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: A process designer may explicitly include version control in the process, as currently in Oz, but we leave investigation of built-in Web versioning schemes to others [20]. The implementation presented here is OzWeb 0.2. We previously developed another system called OzWeb (effectively version 0.1), described in <ref> [9] </ref>. It provided a Web-based GUI to Oz similar to some commercial work-flow systems. The original architecture involved an HTTP proxy server and would work with any HTTP browser, but that is where the similarity ends.
Reference: [10] <editor> A. K. Elmagarmid (ed). </editor> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Although the Web may soon support versioning and configuration management following the "checkout model", there is little concept of transactions, with either the classical atomicity, consistency, isolation and durability properties, or permitting relaxations proposed for long-duration, interactive, and/or cooperative work <ref> [10, 6] </ref>. The first author argues in [11] why the checkout model is less attractive than "cooperative transactions".
Reference: [11] <author> G. E. Kaiser. </author> <title> Cooperative transactions for multi-user environments. </title> <editor> In W. Kim, editor, </editor> <title> Modern Database Systems: The Object Model, Interoperability, and Beyond, </title> <booktitle> chapter 20, </booktitle> <pages> pages 409-433. </pages> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: Although the Web may soon support versioning and configuration management following the "checkout model", there is little concept of transactions, with either the classical atomicity, consistency, isolation and durability properties, or permitting relaxations proposed for long-duration, interactive, and/or cooperative work [10, 6]. The first author argues in <ref> [11] </ref> why the checkout model is less attractive than "cooperative transactions".
Reference: [12] <author> Michael Baentsch, Georg Molter and Peter Sturm. WebMake: </author> <title> Integrating distributed software development in a structure-enhanced Web. </title> <booktitle> In 3rd Intl. WorldWide Web Conference, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: We are investigating a third model, where separate tool servers are introduced as a new architectural element and groupspace service that combines the advantages of both approaches. RELATED WORK WebMake <ref> [12] </ref> supports hierarchical structuring of Web files, checkout for editing, and invocation of file-based tools like make. A special Web client hides details from users; otherwise WebMake uses standard facilities: CGI and MIME types.
Reference: [13] <author> J. Noll and W. Scacchi. </author> <title> A hypertext system for integrating heterogeneous autonomous software repositories. </title> <booktitle> In 3rd Irvine Software Symposium, </booktitle> <pages> pages 49-60, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: It allows choice between checkout of individual attributes or entire objects (with dirty reads), and conventional transactions over multiple objects. An application must be implemented by a method of the relevant class in the schema to use transactions, but methods written in Scheme can be added dynamically. DHT <ref> [13] </ref> overlays hyper text to add on transparent access and external organization to distributed, heterogeneous, autonomously-maintained repositories. Repository data is transformed to/from a common structured hypermedia format by a repository-specific gateway. Only navigational access is supported. Update requests are turned down if the object has changed since last retrieved.
Reference: [14] <author> Object Management Group. </author> <title> The Common Object Request Broker: Architecture Specification Revision 2.0, </title> <month> July </month> <year> 1995. </year> <note> www.omg.org/corba2/cover.htm. </note>
Reference-contexts: It is tempting to consider how some other distributed computing infrastructure, other than the Web, might serve as the basis for subweb and groupspace implementation. We have looked at CORBA <ref> [14] </ref> as a candidate, but it is currently lacking the key ingredient: a standard component that supports complete interception and mediation in the style of HTTP proxy servers. This might be an appropriate avenue to explore for future distributed computing standards.
Reference: [15] <author> J. Ockerbloom. </author> <title> Introducing structured data types into Internet-scale information systems, </title> <month> May </month> <year> 1994. </year> <institution> Carnegie Mellon University School of Computer Science PhD Thesis Proposal. </institution> <address> www.cs.cmu.edu/afs/cs.cmu.edu/- user/spok/www/proposal.html. </address>
Reference-contexts: Hyper-G [2] supports hierarchical structuring of aggregate collections of Web pages, with collections spread across websites. Links are represented externally to the hypermedia content. Scaling is supported by replication and caching (with weak consistency). Hyper-G uses its own format, but converts to HTML when serving a WWW client. Ockerbloom <ref> [15] </ref> proposes an alternative to MIME types, called Typed Object Model , that could be employed underneath our subwebs. Object types exported from anywhere on the Internet can be registered in "type oracles", specialized servers which may communicate among themselves to uncover the definitions of types registered elsewhere.
Reference: [16] <author> OSF Research Institute. </author> <title> Intelligent Browsing Assistant for the World Wide Web and GroupWare for the Web, </title> <month> October </month> <year> 1995. </year> <note> www.osf.org/www/waiba/index.html. </note>
Reference-contexts: A special Web client hides details from users; otherwise WebMake uses standard facilities: CGI and MIME types. Data may be temporarily transmitted to another locale for tool execution (e.g., to compile for a particular architecture) using XMosaic remote control. WAIBA <ref> [16] </ref> produced a suite of utilities useful to software development teams (and others), such as collaborative annotations, search engines that find what's changed in categories of interest, what's changed in recently viewed pages, what's out there that's "similar" to what the user is currently viewing, displays link composition to a given
Reference: [17] <author> B. Peuschel and S. Wolf. </author> <title> Architectural support for distributed process centered software development environments. </title> <editor> In W. Schafer, editor, </editor> <booktitle> 8th Intl. Software Process Workshop, </booktitle> <pages> pages 126-128, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: The server already provides basic groupspace functionality and would be augmented by the subweb mechanism, as we described for Oz. Clients are replaced by Web browsers and proxy servers. Peer/peer environments where the peers already share a common repository <ref> [17] </ref> may be adaptable to multiple groupspace servers sharing a common subweb server, but investigation is outside our scope. It is tempting to consider how some other distributed computing infrastructure, other than the Web, might serve as the basis for subweb and groupspace implementation.
Reference: [18] <author> A. Sheth. </author> <title> Private communication, </title> <month> June </month> <year> 1996. </year> <note> See ls-dis.cs.uga.edu/workflow/. </note>
Reference-contexts: Meteor <ref> [18] </ref> is a transactional workflow engine that submits workflow tasks to Web browsers using CGI, but does not support workflow over Web accesses. Hyperform [21] is a hypertext database with an extensible object-oriented schema.
Reference: [19] <author> G. Valetto and G. E. Kaiser. </author> <title> Enveloping sophisticated tools into process-centered environments. </title> <journal> Journal of Automated Software Engineering, </journal> <note> 1996. In press. </note>
Reference-contexts: And it is difficult for multiple users to "share" a tool instance, directing their tasks to the same running tool instance serially or concurrently <ref> [19] </ref>. We are investigating a third model, where separate tool servers are introduced as a new architectural element and groupspace service that combines the advantages of both approaches. RELATED WORK WebMake [12] supports hierarchical structuring of Web files, checkout for editing, and invocation of file-based tools like make.
Reference: [20] <author> J. Whitehead. </author> <title> Working group on versioning and configuration management of World Wide Web content, </title> <month> June </month> <year> 1996. </year> <note> www.ics.uci.edu/~ejw/versioning/. </note>
Reference-contexts: Evaluation The most significant limitation of OzWeb 0.2 is we ignore version and configuration management. A process designer may explicitly include version control in the process, as currently in Oz, but we leave investigation of built-in Web versioning schemes to others <ref> [20] </ref>. The implementation presented here is OzWeb 0.2. We previously developed another system called OzWeb (effectively version 0.1), described in [9]. It provided a Web-based GUI to Oz similar to some commercial work-flow systems.
Reference: [21] <author> U. K. Wiil. Hyperform: </author> <title> Rapid prototyping of hyperme-dia services. </title> <journal> Communications of the ACM, </journal> <volume> 38(8) </volume> <pages> 109-111, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Meteor [18] is a transactional workflow engine that submits workflow tasks to Web browsers using CGI, but does not support workflow over Web accesses. Hyperform <ref> [21] </ref> is a hypertext database with an extensible object-oriented schema. It allows choice between checkout of individual attributes or entire objects (with dirty reads), and conventional transactions over multiple objects.
Reference: [22] <author> J. J. Yang and G. E. Kaiser. </author> <title> An architecture for integrating OODBs with WWW. In 5th Intl. </title> <booktitle> World Wide Web Conference, </booktitle> <pages> pages 1243-1254, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: We also developed the experimental subweb server described in <ref> [22] </ref>. We used a rather convoluted implementation involving CGI rather than a proxy. It was thus impossible to intercept all Web accesses as in our current system. No groupspace services were supported, it was purely an organizational facility.
Reference: [23] <author> W. Yeong, T. Howes, and S. Kille. </author> <title> Lightweight Directory Access Protocol, </title> <month> March </month> <year> 1995. </year> <title> Network Working Group Request For Comments: </title> <type> 1777, </type> <institution> an-drew2.andrew.cmu.edu/rfc/rfc1777.html. </institution>
Reference-contexts: It is not possible for an end-user to be operating in multiple groupspaces at the same time from the same browser. This limitation is easy to remove by connecting each subweb proxy to a directory service such as Lightweight Directory Access Protocol (LDAP <ref> [23] </ref>) through which it can interact with any number of registered subwebs.
References-found: 23

