URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c28.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Title: High-Performance Routing Trees With Identified Critical Sinks  
Author: Kenneth D. Boese, Andrew B. Kahng and Gabriel Robins 
Address: Los Angeles, Los Angeles, CA 90024-1596  Charlottesville, VA 22903-2442  
Affiliation: Computer Science Department, University of California at  Computer Science Department, University of Virginia,  
Abstract: We present two critical-sink routing tree (CSRT) constructions which exploit critical-path information that becomes available during timing-driven layout. Our CS-Steiner heuristics with "Global Slack Removal" modify traditional Steiner constructions and produce routing trees with significantly lower critical-sink delays compared with existing performance-driven methods. We also propose a new class of Elmore routing tree (ERT) constructions, which iteratively add tree edges to minimize Elmore delay. This direct optimization of Elmore delay yields trees that improve delays to identified critical sinks by up to 69% over minimum Steiner routings. ERTs also improve performance over such recent methods as [1] [6] when no critical sinks are specified. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, T. C. Hu, J. H. Huang and A. B. Kahng, </author> <title> "A Direct Combination of the Prim and Dijkstra Constructions for Improved Performance-Driven Global Routing", </title> <note> to appear in Proc. IEEE ISCAS, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: Very recently, a radius-cost tradeoff was achieved by combining the Dijkstra (shortest-path tree, or SPT) and Prim (MST) recurrences: the AHHK algorithm of <ref> [1] </ref> iteratively adds edge e ij and pin n i to T , choos ing n j 2 T and n i 2 N T to minimize (c l j ) + d ij (l j is the pathlength from n 0 to n j , and c is a trade <p> This recalls the motivations in <ref> [1] </ref> [6], but the tradeoff is with respect to only the critical sink n c . <p> Delay simulation results are presented in Table 2. For purposes of comparison, the table includes data from the minimum spanning tree, AHHK tree (quoted from <ref> [1] </ref>), and 1-Steiner tree constructions. Even as generic net-dependent routers, our ERT methods are highly effective. <p> Note that data for AHHK are quoted from <ref> [1] </ref> and are computed using values relative to MST and a different set of 50 random nets. parameters and by 69% for MCM parameters. <p> Finally, we note that SERT-C is more practical than HBest, in that it does not use the circuit simulator during con struction of the tree. 6 Figures 6 and 7 illustrate the SERT and SERT-C 5 These results are particularly impressive because the implementation of AHHK in <ref> [1] </ref> simulates delays for output trees for 21 different values of the c parameter, then chooses the best value of c for each net instance. 6 With respect to practicality: the average CPU times in seconds for SERT-C and the two-pole distributed RCL delay simulator [21] on a Sun Sparc IPC
Reference: [2] <author> B. Awerbuch, A. Baratz and D. Peleg, </author> <title> "Cost-Sensitive Analysis of Communication Protocols", </title> <booktitle> Proc. ACM Symp. on Principles of Distributed Computing, </booktitle> <year> 1990, </year> <pages> pp. 177-187. </pages>
Reference-contexts: Cong et al. [6] proposed the BRBC (bounded-radius, bounded-cost) algorithm, which simultaneously constrains both radius (maximum source-sink pathlength) and cost (total tree wirelength) within constant factors of optimal. Both [6] and [13] belong to the class of "shallow-light" methods <ref> [2] </ref>, which achieve a radius-cost tradeoff by a modified depth-first traversal of the minimum-cost spanning tree (MST) over N .
Reference: [3] <author> K. D. Boese, J. Cong, A. B. Kahng, K. S. Leung and D. Zhou, </author> <title> "On High-Speed VLSI Interconnects: Analysis and Design", </title> <booktitle> Proc. Asia-Pacific Conf. on Circuits and Systems, </booktitle> <month> Dec. </month> <year> 1992, </year> <pages> pp. 35-40. </pages>
Reference-contexts: The size of r d relative to unit wire resistance is a "resistance ratio" <ref> [3] </ref> that captures the technology vis-a-vis routing tree design. Typical values of r d are relatively large for current 1 Because of its relatively simple form, Elmore delay can be calculated in O (k) time, as noted by Rubinstein et al. [18].
Reference: [4] <author> K.D. Boese, A. B. Kahng and G. Robins, </author> <title> "High-Performance Routing Trees With Identified Critical Sinks", </title> <type> Technical Report CS-92-37, </type> <institution> CS Department, Univ. Virginia, Char-lottesville, </institution> <year> 1992. </year> <title> ters; sinks numbered in order of distance from source (pin 1). </title>
Reference-contexts: The input tree must be processed in top-down order to guarantee the following two results (see <ref> [4] </ref> for discussion and proofs): GSR Algorithm Input: 1-Steiner tree T with source n 0 Output: Steiner tree T with no U 's 1. remove all degree-2 Steiner nodes from T 2.
Reference: [5] <author> K. D. Boese, A. B. Kahng, B. A. McCoy and G. Robins, </author> <title> "Fidelity and Near-Optimality of Elmore-Based Routing Constructions", </title> <type> Technical Report CS-93-14, </type> <institution> CS Department, Univ. Virginia, Charlottesville, </institution> <year> 1993. </year>
Reference-contexts: Our use of the Elmore model has been validated by recent results in <ref> [5] </ref> which demonstrate the high fidelity of Elmore delay with respect to physical delay: optimizing Elmore delay in 4- and 5-pin nets produces routing tree topologies that are nearly optimal according to SPICE simulations. 2 High-Performance Routing Trees A signal net N consists of fixed terminal locations N = fn 0
Reference: [6] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong, </author> <title> "Provably Good Performance-Driven Global Routing", </title> <journal> IEEE Trans. on CAD 11(6), </journal> <month> June </month> <year> 1992, </year> <pages> pp. 739-752. </pages>
Reference-contexts: Kuh et al. [14] give a performance-driven routing method for hierarchical building-block layouts, and [17] uses A* heuristic search in a similar domain. Cong et al. <ref> [6] </ref> proposed the BRBC (bounded-radius, bounded-cost) algorithm, which simultaneously constrains both radius (maximum source-sink pathlength) and cost (total tree wirelength) within constant factors of optimal. Both [6] and [13] belong to the class of "shallow-light" methods [2], which achieve a radius-cost tradeoff by a modified depth-first traversal of the minimum-cost spanning <p> Cong et al. <ref> [6] </ref> proposed the BRBC (bounded-radius, bounded-cost) algorithm, which simultaneously constrains both radius (maximum source-sink pathlength) and cost (total tree wirelength) within constant factors of optimal. Both [6] and [13] belong to the class of "shallow-light" methods [2], which achieve a radius-cost tradeoff by a modified depth-first traversal of the minimum-cost spanning tree (MST) over N . <p> This recalls the motivations in [1] <ref> [6] </ref>, but the tradeoff is with respect to only the critical sink n c .
Reference: [7] <author> W. E. Donath, R. J. Norman, B. K. Agrawal, S. E. Bello, S. Y. Han, J. M. Kurtzberg, P. Lowy and R. I. McMillan, </author> <title> "Timing Driven Placement Using Complete Path Delays", </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1990, </year> <pages> pp. 84-89. </pages>
Reference-contexts: 1 Introduction Prevailing approaches to performance-driven layout use static timing analysis to iteratively drive the module placement and global routing phases. For example, net-dependent placement algorithms typically use centroid-connected star cost [19], probabilistic estimates of Steiner tree cost [11], minimum spanning tree cost <ref> [7] </ref> or the bounding box semiperimeter [16] to estimate wire capacitance and signal delay for a multi-terminal net. From this information, critical timing paths can be computed and module placements updated to reduce these "net-based" objective functions.
Reference: [8] <author> A. E. Dunlop, V. D. Agrawal, D. N. Deutsh, M. F. Jukl, P. Kozak and M. Wiesel, </author> <title> "Chip Layout Optimization Using Critical Path Weighting", </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1984, </year> <pages> pp. 133-136. </pages>
Reference-contexts: Our methods generalize to the case where a small number of critical sinks is specified. 2.1 Existing Approaches Early performance-driven routing methods relied on minimizing wirelength via minimum Steiner constructions, e.g., <ref> [8] </ref> uses static timing analysis to prioritize nets such that critical nets can be routed by minimum Steiner trees. Kuh et al. [14] give a performance-driven routing method for hierarchical building-block layouts, and [17] uses A* heuristic search in a similar domain.
Reference: [9] <author> W. C. </author> <title> Elmore, "The Transient Response of Damped Linear Network with Particular Regard to Wideband Amplifiers", </title> <editor> J. </editor> <booktitle> Applied Physics 19 (1948), </booktitle> <pages> pp. 55-63. </pages>
Reference-contexts: Because minimum Steiner trees also give bona-fide "performance-driven" routing in certain technologies, Section 4 also compares our methods against the 1-Steiner heuristic of [12]. 2.2 Intuitions From the Elmore Model To solve the CSRT problem, we first develop intuitions from Elmore's distributed RC-tree model <ref> [9] </ref>. Elmore delay is defined as follows. Given routing tree T (N ) rooted at n 0 , let e i denote the edge from n i to its parent. The resistance and capacitance of edge e i are denoted by r e i and c e i , respectively.
Reference: [10] <author> P. S. Hauge, R. Nair and E. J. Yoffa, </author> <title> "Circuit Placement for Predictable Performance", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1987, </year> <pages> pp. 88-91. </pages>
Reference-contexts: On the other hand, path-dependent methods consider delay between the source and a particular critical sink of a multi-terminal net. The critical sink is determined via timing analysis using known module delays and estimated path delays <ref> [10, 15, 20] </ref>. If a timing-critical path passes through a given net, the path-dependent approach will afford an explicit routing constraint which bounds delay at that net's critical sink.
Reference: [11] <author> M. A. B. Jackson and E. S. Kuh, </author> <title> "Estimating and Optimizing RC Interconnect Delay During Physical Design", </title> <booktitle> Proc. IEEE Intl. Conf. on Circuits and Systems, </booktitle> <year> 1990, </year> <pages> pp. 869-871. </pages>
Reference-contexts: 1 Introduction Prevailing approaches to performance-driven layout use static timing analysis to iteratively drive the module placement and global routing phases. For example, net-dependent placement algorithms typically use centroid-connected star cost [19], probabilistic estimates of Steiner tree cost <ref> [11] </ref>, minimum spanning tree cost [7] or the bounding box semiperimeter [16] to estimate wire capacitance and signal delay for a multi-terminal net. From this information, critical timing paths can be computed and module placements updated to reduce these "net-based" objective functions.
Reference: [12] <author> A. B. Kahng and G. Robins, </author> <title> "A New Class of Iterative Steiner Tree Heuristics with Good Performance", </title> <journal> IEEE Transactions on CAD 11(7), </journal> <month> July </month> <year> 1992, </year> <pages> pp. 893-902. </pages>
Reference-contexts: Thus, Section 4 compares our methods against the AHHK algorithm. Because minimum Steiner trees also give bona-fide "performance-driven" routing in certain technologies, Section 4 also compares our methods against the 1-Steiner heuristic of <ref> [12] </ref>. 2.2 Intuitions From the Elmore Model To solve the CSRT problem, we first develop intuitions from Elmore's distributed RC-tree model [9]. Elmore delay is defined as follows. <p> All of our variants use the 1-Steiner heuristic <ref> [12] </ref> to construct the initial tree T 0 in Step 1. Section 4 reports results for the following three variants: H0: The direct connection in Step 2 consists of a single wire from n c to n 0 . <p> Theorem 2: GSR uses time linear in the size of T (N ) and returns a tree containing no U 's. 2 A 1-Steiner tree has the property that no single Steiner point can be added to reduce the tree cost. The 1-Steiner algorithm <ref> [12] </ref> always produces such a tree. 3.2 Elmore Routing Trees We now propose a new class of greedy Elmore routing tree (ERT) algorithms which optimize Elmore delay directly during construction of the routing tree. <p> we currently have a rather interesting situation where the CSRT problem formulation leads to an algorithm (SERT-C) that enjoys quadratic speedup over the generic Steiner computation (SERT). 4 Experimental Results 4.1 CS-Steiner Trees We have implemented each of the CS-Steiner variants H0, H1 and HBest along with the 1-Steiner algorithm <ref> [12] </ref> using C in the UNIX Sun environment, and have run the algorithms on random 4-, 8- and 16-sink inputs. We also applied our GSR post-processing algorithm (denoted as +U) to 1-Steiner and each of the CS-Steiner variants.
Reference: [13] <author> S. Khuller, B. Raghavachari and N. Young, </author> <title> "Balancing Minimum Spanning and Shortest Path Trees", </title> <booktitle> Proc. ACM/SIAM Symp. on Discrete Algorithms, </booktitle> <month> January </month> <year> 1993. </year>
Reference-contexts: Cong et al. [6] proposed the BRBC (bounded-radius, bounded-cost) algorithm, which simultaneously constrains both radius (maximum source-sink pathlength) and cost (total tree wirelength) within constant factors of optimal. Both [6] and <ref> [13] </ref> belong to the class of "shallow-light" methods [2], which achieve a radius-cost tradeoff by a modified depth-first traversal of the minimum-cost spanning tree (MST) over N .
Reference: [14] <author> E. Kuh, M. A. B. Jackson and M. Marek-Sadowska, </author> <title> "Timing-Driven Routing for Building Block Layout", </title> <booktitle> Proc. IEEE International Symposium on Circuits and Systems, </booktitle> <pages> pp. 518-519, </pages> <year> 1987. </year>
Reference-contexts: Kuh et al. <ref> [14] </ref> give a performance-driven routing method for hierarchical building-block layouts, and [17] uses A* heuristic search in a similar domain. Cong et al. [6] proposed the BRBC (bounded-radius, bounded-cost) algorithm, which simultaneously constrains both radius (maximum source-sink pathlength) and cost (total tree wirelength) within constant factors of optimal.
Reference: [15] <author> I. Lin and D. H. C. Du, </author> <title> "Performance-Driven Constructive Placement", </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1990, </year> <pages> pp. 103-106. </pages>
Reference-contexts: On the other hand, path-dependent methods consider delay between the source and a particular critical sink of a multi-terminal net. The critical sink is determined via timing analysis using known module delays and estimated path delays <ref> [10, 15, 20] </ref>. If a timing-critical path passes through a given net, the path-dependent approach will afford an explicit routing constraint which bounds delay at that net's critical sink.
Reference: [16] <author> M. Marek-Sadowska and S. Lin, </author> <title> "Timing Driven Placement", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1989, </year> <pages> pp. 94-97. </pages>
Reference-contexts: 1 Introduction Prevailing approaches to performance-driven layout use static timing analysis to iteratively drive the module placement and global routing phases. For example, net-dependent placement algorithms typically use centroid-connected star cost [19], probabilistic estimates of Steiner tree cost [11], minimum spanning tree cost [7] or the bounding box semiperimeter <ref> [16] </ref> to estimate wire capacitance and signal delay for a multi-terminal net. From this information, critical timing paths can be computed and module placements updated to reduce these "net-based" objective functions.
Reference: [17] <author> S. Prasitjutrakul and W. J. Kubitz, </author> <title> "A Timing-Driven Global Router for Custom Chip Design", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 48-51. </pages>
Reference-contexts: Kuh et al. [14] give a performance-driven routing method for hierarchical building-block layouts, and <ref> [17] </ref> uses A* heuristic search in a similar domain. Cong et al. [6] proposed the BRBC (bounded-radius, bounded-cost) algorithm, which simultaneously constrains both radius (maximum source-sink pathlength) and cost (total tree wirelength) within constant factors of optimal. <p> This yields the SERT-C ("SERT with identified Critical sink") algorithm. While CS-Steiner began with a minimum-cost Steiner tree and perturbed it to heuristically improve 3 Our approach should be distinguished from the method of Prasitjutrakul and Kubitz <ref> [17] </ref> cited in Section 2.1. Like our method, [17] grows a routing tree over a net N starting from the source n 0 ; they perform A* search of a routing graph (e.g., in building-block design) to find the Elmore delay-optimal Steiner connection from the existing tree to a new sink. <p> This yields the SERT-C ("SERT with identified Critical sink") algorithm. While CS-Steiner began with a minimum-cost Steiner tree and perturbed it to heuristically improve 3 Our approach should be distinguished from the method of Prasitjutrakul and Kubitz <ref> [17] </ref> cited in Section 2.1. Like our method, [17] grows a routing tree over a net N starting from the source n 0 ; they perform A* search of a routing graph (e.g., in building-block design) to find the Elmore delay-optimal Steiner connection from the existing tree to a new sink. <p> Indeed, an example is easy to construct (similar to Figure 1a) for which their method yields a tree with Elmore delays at least twice as large as those of ERT. Practical considerations also separate the two methods, e.g., <ref> [17] </ref> cannot be easily modified to address our CSRT formulation. t (n c ), our SERT-C algorithm takes a virtually op-posite approach: it starts with the required n 0 -n c connection and grows the routing tree while keeping t ED (n c ) as small as possible.
Reference: [18] <author> J. Rubinstein, P. Penfield, and M. A. Horowitz, </author> <title> "Signal Delay in RC Tree Networks", </title> <journal> IEEE Trans. on CAD 2(3) (1983), </journal> <pages> pp. 202-211. </pages>
Reference-contexts: Typical values of r d are relatively large for current 1 Because of its relatively simple form, Elmore delay can be calculated in O (k) time, as noted by Rubinstein et al. <ref> [18] </ref>. The calculation can be accomplished using two depth-first traversals: 1) to compute the delay along each edge and 2) to sum up the delays along each source/sink path.
Reference: [19] <author> A. Srinivasan, K. Chaudhary and E. S. Kuh, "RITUAL: </author> <title> A Performance Driven Placement Algorithm for Small-Cell ICs", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1991, </year> <pages> pp. 48-51. </pages>
Reference-contexts: 1 Introduction Prevailing approaches to performance-driven layout use static timing analysis to iteratively drive the module placement and global routing phases. For example, net-dependent placement algorithms typically use centroid-connected star cost <ref> [19] </ref>, probabilistic estimates of Steiner tree cost [11], minimum spanning tree cost [7] or the bounding box semiperimeter [16] to estimate wire capacitance and signal delay for a multi-terminal net. From this information, critical timing paths can be computed and module placements updated to reduce these "net-based" objective functions.
Reference: [20] <author> S. Teig, R. L. Smith and J. Seaton, </author> <title> "Timing Driven Layout of Cell-Based ICs", </title> <booktitle> VLSI Systems Design, </booktitle> <month> May </month> <year> 1986, </year> <pages> pp. 63-73. </pages>
Reference-contexts: On the other hand, path-dependent methods consider delay between the source and a particular critical sink of a multi-terminal net. The critical sink is determined via timing analysis using known module delays and estimated path delays <ref> [10, 15, 20] </ref>. If a timing-critical path passes through a given net, the path-dependent approach will afford an explicit routing constraint which bounds delay at that net's critical sink.
Reference: [21] <author> D. Zhou, S. Su, F. Tsui, D. S. Gao and J. Cong, </author> <title> "Analysis of Trees of Transmission Lines", </title> <type> Technical Report CSD TR-920010, </type> <institution> CS Department, University of California, </institution> <address> Los Angeles, </address> <year> 1992. </year>
Reference-contexts: Delays at all sink nodes were estimated using the computationally efficient two-pole circuit simulator developed by Zhou et al. <ref> [21] </ref>. Each delay figure gives the average over all sink nodes in 50 random point sets. Since the 1-Steiner algorithm is net-oriented, it will return the same solution no matter which sink is critical. In contrast, CS-Steiner can return a different tree for each choice of critical sink. <p> (ns) H1+U 2.20 3.02 8.90 11.22 HBest+U 2.12 2.77 7.02 7.31 Ave 1Stein+U 1.51 2.22 15.65 21.91 Cost H0+U 1.95 2.74 20.35 27.32 (cm) H1+U 1.58 2.39 16.20 23.33 HBest+U 1.67 2.54 19.51 26.95 Table 1: Routing tree simulation results using IC and MCM technology parameters and the two-pole simulator <ref> [21] </ref>. Notes: (i) all source and sink locations are chosen randomly in a layout region with grid resolution 25m; (ii) each value in a given column represents an average over the same 50 random signal nets. <p> 3.49 17.07 24.43 34.88 AHHK 1.89 2.87 4.10 20.02 29.43 44.22 Ave WL ERT 2.00 3.04 4.41 28.21 54.80 103.67 (cm) 1Stein+U 1.51 2.22 3.13 15.65 21.91 31.29 SERT 1.67 2.61 3.70 28.21 54.80 103.67 SERT-C 1.71 2.48 3.45 20.35 27.52 37.07 Table 2: Delay results using the two-pole simulator <ref> [21] </ref> for Elmore routing trees, compared with the 1-Steiner heuristic using IC and MCM technology parameters (see notes in Table 1 caption). <p> the implementation of AHHK in [1] simulates delays for output trees for 21 different values of the c parameter, then chooses the best value of c for each net instance. 6 With respect to practicality: the average CPU times in seconds for SERT-C and the two-pole distributed RCL delay simulator <ref> [21] </ref> on a Sun Sparc IPC were respectively .0012 and .031 seconds for jN j = 5; .017 and .049 for jN j = 9; .31 and .089 for jN j = 17. <p> Finally, we believe that the SERT and ERT time complexities can be reduced by at least a factor of k; we leave this as an open problem. 6 Acknowledgements We are grateful to the authors of <ref> [21] </ref> for use of their simulator code.
References-found: 21

