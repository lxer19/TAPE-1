URL: http://polaris.cs.uiuc.edu/reports/1228.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Email: fpetersen,paduag@csrd.uiuc.edu  
Title: Dynamic Dependence Analysis: A Novel Method for Data Dependence Evaluation  
Author: Paul M. Petersen David A. Padua 
Address: Urbana, IL, 61801-2932  
Affiliation: Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign  
Abstract: This paper analyzes the results of applying data dependence calculations to the Perfect Benchmarks suite. We show that it is possible to measure the optimal parallelism, as defined by our model, and to compare the obtained parallelism for various data dependence tests with the optimal parallelism. Using these techniques, we find that a variation of Banerjee's inequalities is sufficient in all cases to obtain more than half of the available parallelism, and that a full integer-programming based dependence test does not contribute significantly to the measured parallelism. 
Abstract-found: 1
Intro-found: 1
Reference: [All83] <author> John Randal Allen. </author> <title> Dependence Analysis for Subscripted Variables and Its Application to Program Transformations. </title> <type> PhD thesis, </type> <institution> Rice University, </institution> <month> April </month> <year> 1983. </year>
Reference: [Ban88] <author> Utpal Banerjee. </author> <title> Dependence Analysis for Supercomputing. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference: [Che89] <author> Ding-Kai Chen. </author> <title> MAXPAR: An Execution Driven Simulator for Studying Parallel Systems. </title> <type> CSRD Report no. 917, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> October </month> <year> 1989. </year>
Reference: [GKT91] <author> Gina Goff, Ken Kennedy, and Chau-Wen Tseng. </author> <title> Practical Dependence Testing. </title> <address> SIG-PLAN'91, </address> <year> 1991. </year>
Reference-contexts: By pipelining the computation of successive calculations of the inner dot product, we are able to achieve at least partial parallelism. 5 Static Results Practically all dependence analysis evaluations have been static, with potential dependences classified as dependent, independent, or statically indeterminant <ref> [GKT91, MHL91, PP91] </ref>. The criterion for the success of a dependence test has been the number of potential dependences it has been able to identify as dependent or independent. As we discussed in Section 4, we are interested only in the flow-dependences for this experiment. <p> is important to understanding a program, it would have a minor impact on the static results. 6 Effectiveness of Data Dependence Tests One must ask the question: Are the existing dependence tests sufficient, and if they are not, where must further effort be expended? A number of papers such as <ref> [MHL91, GKT91, Pug91] </ref> show that each of the many different alternative tests are capable of solving a number of data dependence problems. For evaluation purposes we want to use a perfect dependence test. This perfect test should be able to determine dependence or independence for all possible subscripts.
Reference: [Kum88] <author> Manoj Kumar. </author> <title> Measuring Parallelism in Computation-Intensive Science / Engineering Applications. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(9) </volume> <pages> 5-40, </pages> <year> 1988. </year>
Reference: [MHL91] <author> Dror E. Maydan, John L. Hennessy, and Monica S. Lam. </author> <title> Efficient and Exact Data Dependence Analysis. </title> <booktitle> ACM PLDI'91, </booktitle> <year> 1991. </year>
Reference-contexts: By pipelining the computation of successive calculations of the inner dot product, we are able to achieve at least partial parallelism. 5 Static Results Practically all dependence analysis evaluations have been static, with potential dependences classified as dependent, independent, or statically indeterminant <ref> [GKT91, MHL91, PP91] </ref>. The criterion for the success of a dependence test has been the number of potential dependences it has been able to identify as dependent or independent. As we discussed in Section 4, we are interested only in the flow-dependences for this experiment. <p> is important to understanding a program, it would have a minor impact on the static results. 6 Effectiveness of Data Dependence Tests One must ask the question: Are the existing dependence tests sufficient, and if they are not, where must further effort be expended? A number of papers such as <ref> [MHL91, GKT91, Pug91] </ref> show that each of the many different alternative tests are capable of solving a number of data dependence problems. For evaluation purposes we want to use a perfect dependence test. This perfect test should be able to determine dependence or independence for all possible subscripts.
Reference: [Pad89] <author> David A. Padua. </author> <title> The Delta Program Manipulation System | Preliminary Design. </title> <type> CSRD Report no. 808, </type> <institution> University of Illinois at Urbana-Champaign, Center for Super-comp. Res.&Dev., </institution> <month> June </month> <year> 1989. </year>
Reference: [Per89] <editor> Perfect Club, et al. </editor> <title> The Perfect Club Benchmarks: Effective Performance Evaluation of Supercomputers. </title> <journal> International Journal of Supercomputer Applications, </journal> <pages> pages 5-40, </pages> <month> Fall </month> <year> 1989. </year>
Reference: [PP91] <author> Paul Petersen and David Padua. </author> <title> Experimental Evaluation of Some Data Dependence Tests (Extended Abstract). </title> <type> Technical report, </type> <institution> Univ. of Illinois at Urbana-Champaign, Center for Supercomputing Res. & Dev., </institution> <month> February </month> <year> 1991. </year> <type> CSRD Report 1080. </type>
Reference-contexts: By pipelining the computation of successive calculations of the inner dot product, we are able to achieve at least partial parallelism. 5 Static Results Practically all dependence analysis evaluations have been static, with potential dependences classified as dependent, independent, or statically indeterminant <ref> [GKT91, MHL91, PP91] </ref>. The criterion for the success of a dependence test has been the number of potential dependences it has been able to identify as dependent or independent. As we discussed in Section 4, we are interested only in the flow-dependences for this experiment.
Reference: [PP92] <author> Paul Petersen and David Padua. </author> <title> Machine-Independent Evaluation of Parallelizing Compilers. In Advanced Compilation Techniques for Novel Architectures, </title> <month> January </month> <year> 1992. </year>
Reference-contexts: Tables 4 and 5 list the results of the dynamic analysis. The abbreviations in these tables are explained in Table 3. The first two columns in each table are obtained from <ref> [PP92] </ref>. The first column is the optimal parallelism present in each program. Optimal parallelism is defined in terms of the critical path length when assuming loop-level parallelism, as discussed in Section 4. The second column is the measured performance of the KAP/Concurrent restructuring compiler on our ideal machine.
Reference: [Pug91] <author> William Pugh. </author> <title> The Omega Test: A Fast and Practical Integer Programming Algorithm for Dependence Analysis. </title> <address> Supercomputing'91, </address> <year> 1991. </year> <month> 21 </month>
Reference-contexts: is important to understanding a program, it would have a minor impact on the static results. 6 Effectiveness of Data Dependence Tests One must ask the question: Are the existing dependence tests sufficient, and if they are not, where must further effort be expended? A number of papers such as <ref> [MHL91, GKT91, Pug91] </ref> show that each of the many different alternative tests are capable of solving a number of data dependence problems. For evaluation purposes we want to use a perfect dependence test. This perfect test should be able to determine dependence or independence for all possible subscripts.
References-found: 11

