URL: http://www.cs.vt.edu/~irchen/ps/tr97sept.ps
Refering-URL: http://www.cs.vt.edu/~irchen/
Root-URL: http://www.cs.vt.edu
Title: Reliability Assessment of Multiple-Agent Cooperating Systems  
Author: I-Ling Yen, Member IEEE Ing-Ray Chen, Member IEEE National Cheng Kung 
Keyword: Key Words: Real-time systems, reliability analysis, multiple agent cooperation, adap tive control, output acceptability.  
Note: Summary Conclusions  
Address: East Lansing, Michigan  Taiwan  
Affiliation: Michigan State University,  University, Tainan,  
Abstract: Multiple agent systems are being increasingly used in various applications, including real-time applications and safety-critical systems. Many of these applications have soft real-time constraints and imprecise correctness criteria for the output value. A principal characteristic of such systems is the tradeoff between using an efficient but less accurate strategy and a sophisticated but more time-consuming strategy. In this paper, we develop methods for assessing the reliability of these systems in terms of the timeliness and accuracy of the output to aid decision making. We consider two commonly used coordination structures, parallel and pipeline structures. We also propose some adaptive schemes where strategies can be selected dynamically by agents at the run-time according to the input encountered in order to enhance the reliability of the system. The applicability of our approach is demonstrated by a practical multimedia client-server example. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P.K. Anddleigh and K. Thakrar, </author> <title> Multimedia Systems Design, </title> <publisher> Prentice Hall, </publisher> <year> 1994. </year>
Reference-contexts: Let r (t) denote the corresponding acceptability of the output in terms of timeliness. Function r (t) can be a step function for hard real-time constraints, and bell-shaped, exponential, or other curves for soft real-time constraints. The acceptability of the output varies over the interval <ref> [0; 1] </ref>, with 1 indicating "completely acceptable" and 0 indicating "complete failure". <p> Strategy 1 uses a less accurate decompression method and carries out motion compensation to within 1-pixel resolution. Strategy 2 uses a more accurate decompression method and performs motion compensation to within 1/2-pixel resolution. Both strategies involve the use of prediction or interpolation methods for motion compensation <ref> [1] </ref>. Similar 20 to stage 1, we assume that the distribution functions of the execution times per frame of the two strategies at stage 2 are impulse functions, with f 2;1 (t) = ffi (t 18ms), and f 2;2 (t) = ffi (t 35ms).
Reference: [2] <author> F.B. Bastani and E. Leiss, </author> <title> "On the overall reliability of hardware/software systems," </title> <booktitle> FJCC, </booktitle> <address> Dallas, TX, </address> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: Many of these applications are "soft" real-time systems in the sense that a non-rigid deadline is associated with the system and a missed deadline may not necessarily result in the failure of the system <ref> [2, 6, 9] </ref>. For example, in an automated production line, the delay of a certain part can delay the delivery of the final products; however, the missed deadline only degrades the level of the service provided, but does not necessarily cause disastrous failures. <p> A typical characteristic of soft real-time systems is the tradeoff between the accuracy of the output and the time spent in computing the output <ref> [2, 3, 5, 6, 7, 8] </ref>. With a more sophisticated strategy, a more accurate output can be computed with a longer computation time, which, in some cases, may actually degrade the reliability of the system since the acceptability of the output in terms of timeliness is degraded.
Reference: [3] <author> M. Boddy, </author> <title> "Anytime problem solving using dynamic programming," </title> <booktitle> 9th National Conf. Artificial Intelligence, </booktitle> <pages> pp. 738-743, </pages> <year> 1991. </year>
Reference-contexts: A typical characteristic of soft real-time systems is the tradeoff between the accuracy of the output and the time spent in computing the output <ref> [2, 3, 5, 6, 7, 8] </ref>. With a more sophisticated strategy, a more accurate output can be computed with a longer computation time, which, in some cases, may actually degrade the reliability of the system since the acceptability of the output in terms of timeliness is degraded.
Reference: [4] <author> I.R. Chen, </author> <title> and F.B. Bastani, "Effect of Artificial Intelligence planning procedures on system reliability," </title> <journal> IEEE Trans. Reliability, </journal> <month> August </month> <year> 1991, </year> <pages> pp. 364-369. </pages>
Reference-contexts: Similarly, in an AI-based decision making system <ref> [4, 5] </ref> the output decision may not be correct or wrong; instead, the output may be optimal, suboptimal, marginal, or poor.
Reference: [5] <author> I.R. Chen, F.B. Bastani, and T.W. Tsao, </author> <title> "On the reliability of AI planning software in real-time applications," </title> <journal> IEEE Trans Know. and Data Eng., </journal> <month> Feb. </month> <year> 1995, </year> <pages> pp. 4-13. </pages>
Reference-contexts: Similarly, in an AI-based decision making system <ref> [4, 5] </ref> the output decision may not be correct or wrong; instead, the output may be optimal, suboptimal, marginal, or poor. <p> A typical characteristic of soft real-time systems is the tradeoff between the accuracy of the output and the time spent in computing the output <ref> [2, 3, 5, 6, 7, 8] </ref>. With a more sophisticated strategy, a more accurate output can be computed with a longer computation time, which, in some cases, may actually degrade the reliability of the system since the acceptability of the output in terms of timeliness is degraded.
Reference: [6] <author> J.Y. Chung, J.W.S. Liu, and K.J. Lin, </author> <title> "Scheduling periodic jobs that allow imprecise computations," </title> <journal> IEEE Trans. Computers, </journal> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: Many of these applications are "soft" real-time systems in the sense that a non-rigid deadline is associated with the system and a missed deadline may not necessarily result in the failure of the system <ref> [2, 6, 9] </ref>. For example, in an automated production line, the delay of a certain part can delay the delivery of the final products; however, the missed deadline only degrades the level of the service provided, but does not necessarily cause disastrous failures. <p> A typical characteristic of soft real-time systems is the tradeoff between the accuracy of the output and the time spent in computing the output <ref> [2, 3, 5, 6, 7, 8] </ref>. With a more sophisticated strategy, a more accurate output can be computed with a longer computation time, which, in some cases, may actually degrade the reliability of the system since the acceptability of the output in terms of timeliness is degraded.
Reference: [7] <author> V. Grassi and C. Antonelli, </author> <title> "Optimal design of fault-tolerant soft-real-time systems with imprecise computations" in Dependable Computing - EDCC-1 (K. </title> <editor> Echtle, D. Hammer, D. Powell eds.), </editor> <publisher> Springer Verlag LNCS 852, </publisher> <year> 1994. </year>
Reference-contexts: A typical characteristic of soft real-time systems is the tradeoff between the accuracy of the output and the time spent in computing the output <ref> [2, 3, 5, 6, 7, 8] </ref>. With a more sophisticated strategy, a more accurate output can be computed with a longer computation time, which, in some cases, may actually degrade the reliability of the system since the acceptability of the output in terms of timeliness is degraded. <p> While software and hardware failures can be defined precisely with a certain probability when given a time period, it is less intuitive to relate timeliness-related and correctness-related failures with a probability since the concept of failure for the latter two types of failures does not have a precise definition <ref> [7] </ref>. Therefore, if we exclude software and hardware failures from the above equation, one can define R s as the "system acceptability" of the output in terms of meeting the timeliness and correctness criteria specified by the service request.
Reference: [8] <author> B. Hamidzadeh, and S. Shekhar, "DYNORA: </author> <title> A real-time planning algorithm to meet response-time constraints in dynamic environments," </title> <booktitle> Proc. 3rd Int. Conf. Tools for AI, </booktitle> <address> San Jose, </address> <year> 1991. </year>
Reference-contexts: A typical characteristic of soft real-time systems is the tradeoff between the accuracy of the output and the time spent in computing the output <ref> [2, 3, 5, 6, 7, 8] </ref>. With a more sophisticated strategy, a more accurate output can be computed with a longer computation time, which, in some cases, may actually degrade the reliability of the system since the acceptability of the output in terms of timeliness is degraded.
Reference: [9] <author> E.D. Jensen, </author> <title> "Asynchronous decentralized real-time computer systems," </title> <booktitle> Proc. </booktitle> <institution> NATO Adv. Study Inst. on Real-Time Comp., </institution> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Many of these applications are "soft" real-time systems in the sense that a non-rigid deadline is associated with the system and a missed deadline may not necessarily result in the failure of the system <ref> [2, 6, 9] </ref>. For example, in an automated production line, the delay of a certain part can delay the delivery of the final products; however, the missed deadline only degrades the level of the service provided, but does not necessarily cause disastrous failures.
Reference: [10] <author> I.L. Yen and F.B. Bastani, </author> <title> "Robust coordination in distributed multi-server systems," </title> <booktitle> Proc. IEEE Workshop Adv. in Paral. and Distr. Sys., </booktitle> <address> Princeton, </address> <year> 1993, </year> <pages> pp. 133-138. 24 </pages>
Reference-contexts: In this paper, we develop assessment methods for evaluating the reliability of a special 2 soft real-time system that consists of multiple cooperating agents. We consider two types of coordination structures, parallel structure and pipeline structure <ref> [10, 11] </ref>. In the first case, each agent accomplishes a task entirely on its own. In the second case, each task is executed by the agents cooperatively, in a pipeline form.
Reference: [11] <author> I.L. Yen and F.B. Bastani, </author> <title> "Systematic incorporation of efficient fault tolerance in systems of cooperating parallel programs," </title> <booktitle> Intl. Symp. Fault-Tolerant Comp., </booktitle> <month> June </month> <year> 1994. </year> <month> 25 </month>
Reference-contexts: In this paper, we develop assessment methods for evaluating the reliability of a special 2 soft real-time system that consists of multiple cooperating agents. We consider two types of coordination structures, parallel structure and pipeline structure <ref> [10, 11] </ref>. In the first case, each agent accomplishes a task entirely on its own. In the second case, each task is executed by the agents cooperatively, in a pipeline form.
References-found: 11

