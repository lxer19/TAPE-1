URL: ftp://ftp.cs.uah.edu/techreports/TR-UAH-CS-1995-02.ps.Z
Refering-URL: http://www.cs.uah.edu/~delugach/cs-tech-reports.html
Root-URL: 
Email: E-mail: thinke@cs.uah.edu delugach@cs.uah.edu rwolf@cs.uah.edu  
Title: Genie: A Database Generator for Testing Inference Detection Tools  
Author: Thomas H. Hinke, Harry S. Delugach and Randall P. Wolf 
Address: Huntsville, AL, 35899, U.S.A.  
Affiliation: Computer Science Department, University of Alabama in Huntsville,  
Abstract: This paper describes a system called Genie, which generates databases suitable for testing inference detection tools. In order to provide the inter-relationships that must exist among data instances if the database is actually to have inferences, Genie uses a simulator to mimic "real world" activity and captures data from the simulator. Since the data is based on a simulation, it will have the necessary inter-relationships. When simulator-based data cohesiveness is not required, Genie provides a means to generate instances that are not related to the simulator. It also provides a means to associate external semantics with the data by renaming data to associate it with desired "real-world" objects and activities. The paper describes the database that is currently generated by Genie and then shows how a set of inferences that have been identified by the AERIE inference research project can be supported by the database. These inferences are organized in terms of the inference targets specified by the AERIE inference model. The paper describes a language called FGL (Fact Generation Language), which can be used to program Genie to generate various databases, including the one presented in this paper. It then presents a description of the Genie architecture. Finally, the paper concludes with observations of our experience to date in using Genie to support the development of inference detection tools. fl This work was supported under Maryland Procurement Office Contract No. MDA 904-92-C-5146.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Leonard J. Binns. </author> <title> Inference Through Secondary Path Analysis. </title> <booktitle> In Proceedings of the Sixth IFIP 11.3 Working Conference on Database Security. IFIP, </booktitle> <month> August </month> <year> 1992. </year>
Reference-contexts: This is called the "database inference problem". A number of research groups have been working on the development of techniques and tools to detect whether a database is vulnerable to an inference attack. Researchers at TRW [7, 8], SRI International [16], the U.S. Department of Defense <ref> [1, 2] </ref> and the University of Alabama in Huntsville (UAH) under its AERIE inference research project [10, 11] have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack.
Reference: [2] <author> Leonard J. Binns. </author> <title> Implementation considerations for inference detection: Intended vs. actual classification. </title> <booktitle> In Proceedings of the IFIP WG 11.3 Seventh Annual Working Conference on Database Security, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: This is called the "database inference problem". A number of research groups have been working on the development of techniques and tools to detect whether a database is vulnerable to an inference attack. Researchers at TRW [7, 8], SRI International [16], the U.S. Department of Defense <ref> [1, 2] </ref> and the University of Alabama in Huntsville (UAH) under its AERIE inference research project [10, 11] have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack.
Reference: [3] <author> Dina Bitton and Carolyn Turbyfill. </author> <title> A retrospective on the wisconsin benchmark. </title> <editor> In Michael Stonebraker, editor, </editor> <booktitle> Readings in Database Systems. </booktitle> <publisher> Morgan Kaufman Publishers, Inc., </publisher> <year> 1994. </year>
Reference-contexts: To test an instance-level inference detection tool, the test database must obviously include instances. However, in contrast to test databases that are used for benchmark testing <ref> [3, 4] </ref>, an inference test database cannot be just a random collection of data. In order for a database to be useful for inference testing, it must contain real inferences that can be detected.
Reference: [4] <author> R. G. G. Cattell. </author> <title> An engineering database benchmark. </title> <editor> In Michael Stonebraker, editor, </editor> <booktitle> Readings in Database Systems. </booktitle> <publisher> Morgan Kaufman Publishers, Inc., </publisher> <year> 1994. </year>
Reference-contexts: To test an instance-level inference detection tool, the test database must obviously include instances. However, in contrast to test databases that are used for benchmark testing <ref> [3, 4] </ref>, an inference test database cannot be just a random collection of data. In order for a database to be useful for inference testing, it must contain real inferences that can be detected. <p> This follows similar ideas for parts explosions provided in <ref> [4] </ref>. The following set of FGL statements will create a parts explosion, which is illustrated in Figure 2: netname test numparts 8 numdisjoint 1 numwholes 3 17 numarcs 13 numduplicates 3 end test The name of this group is test. It consists of one set of connected parts.
Reference: [5] <author> Peter Pin-Shan Chen. </author> <title> The entity-relationship model toward a unified view of data. </title> <journal> ACM Transactions of Database Systems, </journal> <month> March </month> <year> 1976. </year>
Reference-contexts: More detail on each of these relations is presented in the Appendix. 3 Inference Targets For Database In [9] we presented an inference model called AERIE (Activities, Entities, Relationship Inference Effects), which was an extension of Chen's ER-model <ref> [5] </ref>. The AERIE model consists of entities, which (as in the ER-model) are just things that have a distinguishable identity. Activities represent actions that could be undertaken by the entities or that could involve entities.
Reference: [6] <author> Thomas D. Garvey. </author> <title> SRI RADC Database. </title> <type> Private communication, </type> <year> 1993. </year>
Reference-contexts: To test its schema-level inference tool, the AERIE project has used a database schema developed by SRI Internatinal, based on information from Rome Laboratory <ref> [6] </ref>. This schema is specified in MSQL (a version of SQL developed by SRI International that permits security levels to be associated with attributes of the schema) [13]. This test schema consists of 50 relations.
Reference: [7] <author> Thomas H. Hinke. </author> <title> Inference Aggregation Detection In Database Management Systems. </title> <booktitle> In Proceedings 1988 IEEE Symposium on Security and Privacy, </booktitle> <month> April </month> <year> 1988. </year>
Reference-contexts: This is called the "database inference problem". A number of research groups have been working on the development of techniques and tools to detect whether a database is vulnerable to an inference attack. Researchers at TRW <ref> [7, 8] </ref>, SRI International [16], the U.S. Department of Defense [1, 2] and the University of Alabama in Huntsville (UAH) under its AERIE inference research project [10, 11] have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack.
Reference: [8] <author> Thomas H. Hinke. </author> <title> Database Inference Engine Design Approach. </title> <editor> In Carl E. Landwehr, editor, </editor> <title> Database Security II: Status and Prospects. </title> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: This is called the "database inference problem". A number of research groups have been working on the development of techniques and tools to detect whether a database is vulnerable to an inference attack. Researchers at TRW <ref> [7, 8] </ref>, SRI International [16], the U.S. Department of Defense [1, 2] and the University of Alabama in Huntsville (UAH) under its AERIE inference research project [10, 11] have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack.
Reference: [9] <author> Thomas H. Hinke and Harry S. Delugach. AERIE: </author> <title> Database Inference Modeling and Detection For Databases. </title> <editor> In Bhavani M. Thuraisingham and Carl E. Landwehr, editors, </editor> <title> Database Security VI: Status and Prospects. </title> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: More detail on each of these relations is presented in the Appendix. 3 Inference Targets For Database In <ref> [9] </ref> we presented an inference model called AERIE (Activities, Entities, Relationship Inference Effects), which was an extension of Chen's ER-model [5]. The AERIE model consists of entities, which (as in the ER-model) are just things that have a distinguishable identity.
Reference: [10] <author> Thomas H. Hinke, Harry S. Delugach, and Asha Chandrasekhar. </author> <title> Layered Knowledge Chunks for Database Inference. </title> <editor> In T.F. Keefe and C.E. Landwehr, editors, </editor> <title> Database Security VII: Status and Prospects. </title> <publisher> North-Holland, </publisher> <year> 1994. </year>
Reference-contexts: Researchers at TRW [7, 8], SRI International [16], the U.S. Department of Defense [1, 2] and the University of Alabama in Huntsville (UAH) under its AERIE inference research project <ref> [10, 11] </ref> have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack.
Reference: [11] <author> Thomas H. Hinke, Harry S. Delugach, and Asha Chandrasekhar. </author> <title> A Fast Algorithm For Detecting Second Paths in Database Inference Analysis. </title> <journal> Journal of Computer Security, </journal> <note> 1995. (Accepted). </note>
Reference-contexts: Researchers at TRW [7, 8], SRI International [16], the U.S. Department of Defense [1, 2] and the University of Alabama in Huntsville (UAH) under its AERIE inference research project <ref> [10, 11] </ref> have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack. <p> In fact, the value of the Genie database has been demonstrated in the fact that Wizard has found a large number of inference paths. This has resulted in the project having to focus on methods to group the paths, much as we have done with our schema-level tool Merlin <ref> [11] </ref>, in order not to overwhelm the inference analyst. The Genie database has thus stretched the Wizard tool and opened up promising areas for additional research. The value of a scalable, automatic database generator has also been validated with our experience.
Reference: [12] <author> Joseph C. Giarratano. </author> <title> CLIPS User's Guide, </title> <type> CLIPS Version 6.0. </type> <institution> NASA Lyndon B. Johnson Space Center, Information Systems Directorate, Software Technology Branch, </institution> <month> May </month> <year> 1993. </year> <month> 27 </month>
Reference-contexts: It also creates facts, which will result in instances, that are needed in the final database, but are not affected by the simulator. The simulator, written in the CLIPS (C Language Integrated Production System) production system <ref> [12, 14, 15] </ref> simulates a business environment and records data resulting from the simulation in an archival file.
Reference: [13] <author> Teresa F. Lunt. </author> <title> Toward a Multilevel Relational Data Language. </title> <booktitle> In Proceedings of the Fourth IFIP Aerospace Computer Security Applications Conference, </booktitle> <month> December </month> <year> 1988. </year>
Reference-contexts: This schema is specified in MSQL (a version of SQL developed by SRI International that permits security levels to be associated with attributes of the schema) <ref> [13] </ref>. This test schema consists of 50 relations. To support its research, the AERIE project has also developed its own test schema, consisting of approximately 30 relations drawn from the manufacturing and distribution domain.
Reference: [14] <author> NASA Lyndon B. </author> <title> Johnson Space Center, Information Systems Directorate, Software Technology Branch. CLIPS Reference Manual, Volume I, ] Basic Programming Guide, </title> <note> CLIPS Version 6.0, </note> <month> June </month> <year> 1993. </year>
Reference-contexts: It also creates facts, which will result in instances, that are needed in the final database, but are not affected by the simulator. The simulator, written in the CLIPS (C Language Integrated Production System) production system <ref> [12, 14, 15] </ref> simulates a business environment and records data resulting from the simulation in an archival file.
Reference: [15] <author> NASA Lyndon B. </author> <title> Johnson Space Center, Information Systems Directorate, Software Technology Branch. CLIPS Reference Manual, Volume II, ] Advanced Programming Guide, </title> <note> CLIPS Version 6.0, </note> <month> January </month> <year> 1994. </year>
Reference-contexts: It also creates facts, which will result in instances, that are needed in the final database, but are not affected by the simulator. The simulator, written in the CLIPS (C Language Integrated Production System) production system <ref> [12, 14, 15] </ref> simulates a business environment and records data resulting from the simulation in an archival file.
Reference: [16] <author> Xiaolei Qian, Mark E. Stickel, Peter D. Karp, Teresa F. Lunt, and Thomas D. Garvey. </author> <title> Detection and elimination of inference channels in multilevel relational database systems. </title> <booktitle> In Proceedings 1993 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: This is called the "database inference problem". A number of research groups have been working on the development of techniques and tools to detect whether a database is vulnerable to an inference attack. Researchers at TRW [7, 8], SRI International <ref> [16] </ref>, the U.S. Department of Defense [1, 2] and the University of Alabama in Huntsville (UAH) under its AERIE inference research project [10, 11] have developed tools that can analyze a relational database schema to detect whether it is vulnerable to an inference attack.
Reference: [17] <author> Alfred Round. </author> <title> Knowledge Based Simulation: D4 Rule-driven Simulation. </title> <editor> In Avron Barr, Paul R. Cohen, and Edward A. Feigenbaum, editors, </editor> <booktitle> The Handbook of Artificial Intelligence. </booktitle> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: namelink namelink namelink environment objname linkenv namelink location linkattatt attribute linkperatt person netname activityname linkactloc stringnamenamelink schedlinkschedule linkactper linkpersonactivity linkactobj The linkage commands are shown in Table 2, along with a short explanation of each of the commands. 20 4.2 Simulator The Genie simulator is implemented as a production-system-based simulator <ref> [17] </ref>. It is is implemented using the CLIPS production system. In order to understand how the simulator operates, it is first necessary to understand how a production system operates, and then to understand the nature of the facts and rules making up the Genie CLIPS-based simulator.
References-found: 17

