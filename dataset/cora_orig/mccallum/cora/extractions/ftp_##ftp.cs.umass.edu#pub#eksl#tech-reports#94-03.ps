URL: ftp://ftp.cs.umass.edu/pub/eksl/tech-reports/94-03.ps
Refering-URL: http://eksl-www.cs.umass.edu/~oates/home.html
Root-URL: 
Title: Humans Plus Agents Maintain Schedules Better than Either Alone  
Author: Tim Oates and Paul R. Cohen 
Note: This research is supported by ARPA-AFOSR contract F30602-91-C-0076.  
Address: Box 34610  Amherst, MA 01003-4610  
Affiliation: Computer Science  Experimental Knowledge Systems Laboratory Department of Computer Science,  Lederle Graduate Research Center University of Massachusetts  
Pubnum: Technical Report 94-03  
Abstract: Tracking and evaluating the progress of large, complex plans or schedules as they unfold in real time is extremely difficult for humans. In this paper we present a mixed-initiative system for the task of schedule maintenance in a simulated shipping network. A schedule maintenance agent monitors the network, predicting the occurrence of states that may result in reduced throughput and formulating schedule modifications to avoid those states. The goal is to maximize throughput while minimizing disruptions to the original schedule. We present results of experiments in which human subjects attempt to obtain that goal both with and without the aid of the agent. We found that the human and the agent working together are able to achieve better results than either one working alone. In addition to looking at global performance measures such as throughput, we analyze individual schedule modification decisions made by subjects in an attempt to assign credit for the improvements in performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ambros-Ingerson, Jose A. and Steel, Sam. </author> <title> Integrating planning, execu 10 tion and monitoring. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 83-88, </pages> <address> Minneapolis, Minnesota, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Plans formulated to run in the real world will often fail due to the complexity and unpredictability of the environment. Existing methods to deal with this problem include real time recovery from plan failures <ref> [1] </ref> [2] [7] and post-hoc plan repair based on failures observed while executing the plan [5]. Failure recovery mechanisms, such as replanning, can be expensive, and it may not be feasible to repair a plan by letting it repeatedly fail.
Reference: [2] <author> Lopez-Mellado, Ernesto and Alami, Rachid. </author> <title> A failure recovery scheme for assembly workcells. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <volume> volume 1, </volume> <pages> pages 702-707, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction Plans formulated to run in the real world will often fail due to the complexity and unpredictability of the environment. Existing methods to deal with this problem include real time recovery from plan failures [1] <ref> [2] </ref> [7] and post-hoc plan repair based on failures observed while executing the plan [5]. Failure recovery mechanisms, such as replanning, can be expensive, and it may not be feasible to repair a plan by letting it repeatedly fail.
Reference: [3] <institution> Removed for blind reviewing. </institution>
Reference-contexts: However, the agent required significantly fewer rerouting decisions than the random rerouting condition to achieve an equivalent level of performance. That is, for a given level of performance, the agent preserved more of the structure inherent in the initial schedule. <ref> [3] </ref> 3 Bringing Humans into the Loop Part of the motivation for plan steering is the belief that humans find it extremely difficult to perform tasks such as the one for which our agent was designed.
Reference: [4] <author> Sadeh, N. </author> <title> Micro-opportunistic scheduling: the Micro-Boss factory scheduler, to appear in Intelligent Scheduling, edited by M. </title> <editor> Zweben and M. Fox, </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: Failure recovery mechanisms, such as replanning, can be expensive, and it may not be feasible to repair a plan by letting it repeatedly fail. An alternative strategy is to monitor the execution of the plan, attempting to predict pathological states that make it difficult or impossible to achieve goals. <ref> [4] </ref> Doing so admits the possibility of effecting plan modifications in real time to avoid pathological states. Plan steering is a mixed-initiative approach to real time prediction and avoidance of plan failures.
Reference: [5] <author> Simmons, Reid G. </author> <title> A theory of debugging plans and interpretations. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 94-99, </pages> <address> Minneapolis, Minnesota. </address>
Reference-contexts: Existing methods to deal with this problem include real time recovery from plan failures [1] [2] [7] and post-hoc plan repair based on failures observed while executing the plan <ref> [5] </ref>. Failure recovery mechanisms, such as replanning, can be expensive, and it may not be feasible to repair a plan by letting it repeatedly fail.
Reference: [6] <author> Tukey, John W. </author> <title> Exploratory data analysis. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1977. </year>
Reference-contexts: That baseline was created by averaging the queue lengths measured for each day over all four of the participants' assisted trials in a scenario and then performing a 3-mean smooth. <ref> [6] </ref> To score a decision point on a given day in an individual trial, we simply look at future queue lengths in that trial and compare them to future queue lengths in the same time range in the appropriate baseline curve.
Reference: [7] <author> Wilkins, David E. </author> <title> Recovering from execution errors in SIPE. </title> <type> Technical Report 346, </type> <institution> Artificail Intelligence Center, Computer Science and Technology Center, SRI International, </institution> <year> 1985. </year> <month> 11 </month>
Reference-contexts: 1 Introduction Plans formulated to run in the real world will often fail due to the complexity and unpredictability of the environment. Existing methods to deal with this problem include real time recovery from plan failures [1] [2] <ref> [7] </ref> and post-hoc plan repair based on failures observed while executing the plan [5]. Failure recovery mechanisms, such as replanning, can be expensive, and it may not be feasible to repair a plan by letting it repeatedly fail.
References-found: 7

