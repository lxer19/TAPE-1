URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/deshpande/PostScript/reno93.ps
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/deshpande/research.html
Root-URL: http://www.cs.yale.edu
Title: Implementation of a Parallel Algorithm on a Distributed Network  
Author: Manish Deshpande Jinzhang Feng and Charles L. Merkle Ashish Deshpande 
Affiliation: Propulsion Engineering Research Center Department of Mechanical Engineering The Pennsylvania State University  Department of Computer Science Yale University  
Abstract: The objective of this research is to investigate the potential of using a network of concurrently operating workstations for solving large compute-intensive problems typical of Computational Fluid Dynamics. Such problems have a communication structure based primarily on nearest-neighbour communication and are therefore ideally suited to message passing. The implementation of a 3-D Navier-Stokes code on a network of IBM RISC/6000's is described. The performance of this code is compared with that on conventional high-performance machines such as the Cray-YMP and the Intel iPSC/860. The results suggest that a cluster of workstations presents a viable and economical resource for this purpose. Additionally a workstation network has the advantage of easy accessibility, fault tolerance and a simple environment for program development. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Hwang, K., and Briggs, F., </author> <booktitle> Computer Architecture and Parallel Processing McGraw-Hill, </booktitle> <year> 1984. </year>
Reference-contexts: advances in parallel computer architectures and parallel algorithms, the solution of large and more complex problems with many interacting components has become fl Student Member, AIAA y Member, AIAA z Member, AIAA Copyright c fl1993 by the American Institute of Aeronautics and Astronautics All Rights Reserved more feasible and economical <ref> [1] </ref>. In general, the computations of each component necessitates unique requirements. <p> The Minsky Conjecture, which seems rather pessimistic is the lower bound. It scales as log 2 n. A more optimistic estimate is the n=ln n scaling known as Amdahl's Law <ref> [1] </ref>. As the figure shows the performance of our code is near ideal for two processors and better than the n=ln n estimate for more than two processors.
Reference: [2] <author> Sunderam, V." </author> <title> PVM: A Framework for Parallel Distributed Computing," </title> <journal> Concurrency: Practice and Experience, </journal> <volume> vol. 2, no. 4, </volume> <month> December </month> <year> 1990, </year> <pages> 315-339. </pages>
Reference-contexts: Such autonomous, networked computers can be coerced to work simultaneously on a computational problem, termed as distributed computing. Within this loose definition, several software packages are available to support distributed computing <ref> [2, 3, 4] </ref>. These packages, in general, help users to achieve better computer performace at a lower cost as well as to utilize available resources in an efficient manner. <p> These packages, in general, help users to achieve better computer performace at a lower cost as well as to utilize available resources in an efficient manner. One such application that seeks to harness this collection of capabilities and utilize it productively is PVM (Parallel Virtual Machine) <ref> [2, 5, 6] </ref>.This software attempts to provide a unified framework to develop parallel systems in an efficient manner.
Reference: [3] <author> Carriero, N., and Gelernter, D." </author> <title> Linda in Context," </title> <journal> Communications of the ACM, </journal> <volume> vol. 32, no. 4, </volume> <month> April </month> <year> 1989, </year> <pages> 444-458. </pages>
Reference-contexts: Such autonomous, networked computers can be coerced to work simultaneously on a computational problem, termed as distributed computing. Within this loose definition, several software packages are available to support distributed computing <ref> [2, 3, 4] </ref>. These packages, in general, help users to achieve better computer performace at a lower cost as well as to utilize available resources in an efficient manner.
Reference: [4] <author> Butler, R., and Lusk, E." </author> <title> User's Guide to the p4 Programming System," </title> <type> Tech. Rep. </type> <institution> ANL-92/17, Argonne National Laboratory, </institution> <month> Oct </month> <year> 1992. </year>
Reference-contexts: Such autonomous, networked computers can be coerced to work simultaneously on a computational problem, termed as distributed computing. Within this loose definition, several software packages are available to support distributed computing <ref> [2, 3, 4] </ref>. These packages, in general, help users to achieve better computer performace at a lower cost as well as to utilize available resources in an efficient manner.
Reference: [5] <author> Geist, G., and Sunderam, V." </author> <title> Network Based Concurrent Computing on the PVM System," </title> <journal> Concurrency: </journal> <note> Practice and Experience (in press). </note>
Reference-contexts: These packages, in general, help users to achieve better computer performace at a lower cost as well as to utilize available resources in an efficient manner. One such application that seeks to harness this collection of capabilities and utilize it productively is PVM (Parallel Virtual Machine) <ref> [2, 5, 6] </ref>.This software attempts to provide a unified framework to develop parallel systems in an efficient manner.
Reference: [6] <author> Beguelin, A., Dongarra, J., Geist, A., Manchek, B., and Sunderam, V." </author> <title> A User's Guide to PVM Parallel Virtual Machine," </title> <type> Tech. Rep. </type> <institution> TM-1126, ORNL, </institution> <month> July </month> <year> 1991. </year>
Reference-contexts: These packages, in general, help users to achieve better computer performace at a lower cost as well as to utilize available resources in an efficient manner. One such application that seeks to harness this collection of capabilities and utilize it productively is PVM (Parallel Virtual Machine) <ref> [2, 5, 6] </ref>.This software attempts to provide a unified framework to develop parallel systems in an efficient manner.
Reference: [7] <author> Grant, B., and Skjellum, A." </author> <title> The PVM Systems: An In-Depth Analysis and Documenting Study Concise Edition," </title> <type> Tech. rep., </type> <institution> LLNL, </institution> <month> Aug </month> <year> 1992. </year>
Reference-contexts: First it is free and easily available. Additionally it is simple, easy to install, understand and run, and it supports heterogeneity well. In general, PVM is a capable tool for connecting a few worstations together for applications with relatively low communication needs relative to their computational requirements <ref> [7] </ref>. Other competing distributed computing software were not tested in the present research. This paper presents the design and implementation of a general purpose Navier-Stokes solver on a local network of workstations using PVM as the interface for communication.
Reference: [8] <author> Yagley, J., Feng, J., Merkle, C., and Lee, Y.-T." </author> <title> The Effect of Aspect Ratio on the Effectiveness of Combustor Cooling Passages," AIAA Paper 92-3153, </title> <booktitle> AIAA/SAE/ASME/ASEE, 28th Joint Propulsion Conference, </booktitle> <address> Nashville, TN July 1992. </address>
Reference-contexts: Like most CFD problems its communication structure is based primarily on nearest neighbour communication, thus making it ideally suited for message passing. Additionally this problem has received considerable attention recently in the analysis of the heat transfer through high-aspect ratio combustor cooling channels <ref> [8, 9] </ref>. This application requires the simultaneous solution of the variable property Reynolds-averaged Navier-Stokes equation and the energy equation, to compute the heat transfer through the combustor walls. <p> The primary motivation of this implementation is to provide a means for studying the heat transfer characteristics of high-aspect ratio cooling channels in rocket engine combustors. A general parametric study of this effect has been conducted and reported in <ref> [8] </ref> for super-critical hydrogen. Such a computation can then be coupled to the heat transfer from the combustor walls and eventually to the combustion process itself, thus presenting a complete model for the analysis of rocket engine combustors. <p> The memory Serial Optical Communication Communication, Lightly Loaded Network requirements of the largest grid exceed the available memory of a single machine and the sequential time is therefore extrapolated from the times for smaller grids. The solutions for the flowfield have been presented and discussed in detail in <ref> [8] </ref>, and are only presented here to define the problem of interest. The cross-stream velocity profiles on a section of the flow in the streamwise direction are shown in Fig. 3.
Reference: [9] <author> Frohlich, A., Immich, H., Lebail, F., and Popp, M." </author> <title> Three Dimensional Flow Analysis in a Rocket Engine Coolant Channel of High Depth/Width Ratio," AIAA Paper 91-2183, </title> <booktitle> AIAA/SAE/ASME/ASEE, 27th Joint Propulsion Conference, </booktitle> <address> Sacramento, CA June 1991. </address>
Reference-contexts: Like most CFD problems its communication structure is based primarily on nearest neighbour communication, thus making it ideally suited for message passing. Additionally this problem has received considerable attention recently in the analysis of the heat transfer through high-aspect ratio combustor cooling channels <ref> [8, 9] </ref>. This application requires the simultaneous solution of the variable property Reynolds-averaged Navier-Stokes equation and the energy equation, to compute the heat transfer through the combustor walls.
Reference: [10] <author> Kwak, D., Chang, J., Shanks, S., and Chakravarthy, S." </author> <title> A Three-Dimensional Navier-Stokes Flow Solver Using Primitive Variables," </title> <journal> AIAA Journal, </journal> <volume> vol. 24 , 1986, </volume> <pages> 390-396. </pages>
Reference-contexts: For simplicity, the parallel algorithm investigated in this paper is restricted to the flow of a laminar, incompressible fluid, although extension to the more complicated problem discussed above is fairly straightforward. The Navier-Stokes equations in conservative form in generalized coordinates using artificial compressibility <ref> [10] </ref> are @t @ (E E v ) + @ @ (G G v ) = 0 (1) where Q = B p v 1 A ; = B 1=fi 0 0 0 0 0 1 0 1 A 0 @ U u + ~ x p U w + ~
Reference: [11] <author> Pulliam, T." </author> <title> Artificial Disspiation Models for the Eu-ler Equations," </title> <journal> AIAA Journal, </journal> <volume> vol. 24, no. 12, </volume> <month> De-cember </month> <year> 1986, </year> <pages> 1931-1940. </pages>
Reference-contexts: When the solution converges all the time derivatives approach zero and the steady state Navier-Stokes solution is recovered. A four stage Runge-Kutta scheme is used to advance the solution in time. Central-differencing is used to calculate the spatial derivatives. A fourth order artificial viscosity is added <ref> [11] </ref> to prevent odd-even splitting in the numerical solution. The boundary conditions on the system are formulated using a Method of Characteristics (MOC) procedure [12]. The velocity profile is specified at the inlet and a uniform pressure at the exit plane.
Reference: [12] <author> Merkle, C., and Tsai, Y.-L. P." </author> <title> Application of Runge-Kutta Schemes to Incompressible Flows," </title> <type> AIAA Paper 86-0553, </type> <institution> AIAA, </institution> <note> 24th Aerospace Sciences Meeting January 1986. 9 </note>
Reference-contexts: Central-differencing is used to calculate the spatial derivatives. A fourth order artificial viscosity is added [11] to prevent odd-even splitting in the numerical solution. The boundary conditions on the system are formulated using a Method of Characteristics (MOC) procedure <ref> [12] </ref>. The velocity profile is specified at the inlet and a uniform pressure at the exit plane. The remaining variables at the inlet and outlet are calculated from the Riemann variables of the system determined from the MOC formulation.
References-found: 12

