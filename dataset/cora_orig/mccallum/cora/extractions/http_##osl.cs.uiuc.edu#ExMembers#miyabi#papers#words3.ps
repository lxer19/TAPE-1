URL: http://osl.cs.uiuc.edu/ExMembers/miyabi/papers/words3.ps
Refering-URL: http://osl.cs.uiuc.edu/ExMembers/miyabi/
Root-URL: http://www.cs.uiuc.edu
Title: Lazy Fault Tolerance A Method for Dependable Distributed Systems  
Author: Masahiko Saito Takanori Yokoyama Masaru Shimada 
Address: 1-1, Omika-cho 7-chome, Hitachi-shi Ibaraki-ken, 319-12 Japan  
Affiliation: Hitachi Research Lab., Hitachi, Ltd.  
Abstract: We present a new method called Lazy Fault Tolerance for refining the reliability of distributed systems. Lazy Fault Tolerance uses data redundancy and the data of objects are distributed over computers in accordance with their `nativity'. The data of system management objects, which control the whole system based on the information of each computer, are naturally distributed over all computers. The object will restore its data by gathering all information from all computers in the case of failures. Lazy Fault Tolerance can greatly reduce the performance degradation in the absence of failures, although it takes a longer time to restore the system when a computer fails. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. B. Schneider. </author> <title> Byzantine Generals in Action: Implementing Fail-stop Processors. </title> <journal> ACM Trans. on Computer Systems, Vol.2 No.2, </journal> <volume> pp.145-154, </volume> <year> 1984. </year>
Reference-contexts: Computer management objects that exist on every computer manage the software/hardware information of their own computers. The computer management object can be substituted by a distributed operating system (OS) or one of its OS servers. Further, we assume all computers in the system to be fail-silent <ref> [1] </ref>. It is possible in distributed computing systems that only one fault on one computer infects other computers and destroys the whole system.
Reference: [2] <author> N. A. Speirs et al. </author> <title> Using Passive Replications in Delta-4 to Provide Dependable Distributed Computing. </title> <booktitle> Proc. 19th Int'l Symp. Fault-Tolerant Computing Systems, </booktitle> <address> pp.184-190, </address> <year> 1989. </year>
Reference-contexts: This method is used in the Delta-4 <ref> [2, 3, 4, 5] </ref> system developed under the European Strategic Programme for Research in Information Technology (ESPRIT). OSF/DCE [6] uses replicas of the components, although their use is not only for dependability. Primarily, they are used as caches. Other systems deploying replicas have been reviewed in [7]. <p> Both active and passive replication can cause further performance degradation during normal operation. Active Replication [4, 8]: In the case where all replicas process all requests in parallel, they have to be synchronized even when they operate on computers of different performance. Passive Replication <ref> [2, 9, 10] </ref>: In the case where a primary object processes all requests, the primary object must send its internal data periodically to secondary objects and update their internal data. If more than one secondary object is used, the procedure to guarantee data consistency may cause another drop in performance.
Reference: [3] <editor> P. A. Barrett et al. </editor> <booktitle> The Delta-4 Extra Performance Architecture (XPA). Proc. of the 20th Int'l Symp. Fault-Tolerant Computing Systems, </booktitle> <address> pp.481-488, </address> <year> 1990. </year>
Reference-contexts: This method is used in the Delta-4 <ref> [2, 3, 4, 5] </ref> system developed under the European Strategic Programme for Research in Information Technology (ESPRIT). OSF/DCE [6] uses replicas of the components, although their use is not only for dependability. Primarily, they are used as caches. Other systems deploying replicas have been reviewed in [7].
Reference: [4] <author> M. Chereque et al. </author> <title> Active Replication in Delta-4. </title> <booktitle> Proc. 22nd Int'l Conf. Fault-Tolerant Computing Systems, </booktitle> <address> pp.28-37, </address> <year> 1992. </year>
Reference-contexts: This method is used in the Delta-4 <ref> [2, 3, 4, 5] </ref> system developed under the European Strategic Programme for Research in Information Technology (ESPRIT). OSF/DCE [6] uses replicas of the components, although their use is not only for dependability. Primarily, they are used as caches. Other systems deploying replicas have been reviewed in [7]. <p> Both active and passive replication can cause further performance degradation during normal operation. Active Replication <ref> [4, 8] </ref>: In the case where all replicas process all requests in parallel, they have to be synchronized even when they operate on computers of different performance.
Reference: [5] <author> D. Powell. </author> <title> Distributed Fault Tolerance: Lessons from Delta-4. </title> <journal> IEEE Micro, </journal> <volume> pp.36-47, </volume> <month> February </month> <year> 1994. </year>
Reference-contexts: This method is used in the Delta-4 <ref> [2, 3, 4, 5] </ref> system developed under the European Strategic Programme for Research in Information Technology (ESPRIT). OSF/DCE [6] uses replicas of the components, although their use is not only for dependability. Primarily, they are used as caches. Other systems deploying replicas have been reviewed in [7].
Reference: [6] <author> Open Software Foundation. </author> <title> Introduction to OSF DCE. </title> <publisher> Prentice Hall, Inc., </publisher> <year> 1992. </year>
Reference-contexts: This method is used in the Delta-4 [2, 3, 4, 5] system developed under the European Strategic Programme for Research in Information Technology (ESPRIT). OSF/DCE <ref> [6] </ref> uses replicas of the components, although their use is not only for dependability. Primarily, they are used as caches. Other systems deploying replicas have been reviewed in [7].
Reference: [7] <author> K. P. Birman et al. </author> <title> Exploiting Replication in Distributed Systems. in Distributed Systems, </title> <editor> S. Mul-lender, ed. </editor> <publisher> ACM Press, Addison-Wesley, </publisher> <address> New York, pp.319-367, </address> <year> 1989. </year>
Reference-contexts: OSF/DCE [6] uses replicas of the components, although their use is not only for dependability. Primarily, they are used as caches. Other systems deploying replicas have been reviewed in <ref> [7] </ref>. By using the replica method, even when a computer and a replica on that computer fail, other replicated objects can take over its operation with almost no restoring overhead.
Reference: [8] <author> M. Ahamad et al. </author> <title> Fault Tolerant Computing in Object Based Distributed Operating Systems. </title> <booktitle> Proc. of the 6th Symposium on Reliable Distributed Systems, </booktitle> <address> pp.115-125, </address> <year> 1987. </year>
Reference-contexts: Both active and passive replication can cause further performance degradation during normal operation. Active Replication <ref> [4, 8] </ref>: In the case where all replicas process all requests in parallel, they have to be synchronized even when they operate on computers of different performance.
Reference: [9] <author> K. P. Birman et al. </author> <title> Implementing Fault Tolerant Distributed Objects. </title> <journal> IEEE Trans. on Software Engineering, Vol.11 No.6, </journal> <volume> pp.502-508, </volume> <year> 1985. </year>
Reference-contexts: Both active and passive replication can cause further performance degradation during normal operation. Active Replication [4, 8]: In the case where all replicas process all requests in parallel, they have to be synchronized even when they operate on computers of different performance. Passive Replication <ref> [2, 9, 10] </ref>: In the case where a primary object processes all requests, the primary object must send its internal data periodically to secondary objects and update their internal data. If more than one secondary object is used, the procedure to guarantee data consistency may cause another drop in performance.
Reference: [10] <author> O. Babaogle. </author> <title> Fault Tolerant Computing Based on Mach. </title> <booktitle> ACM Operating Review, </booktitle> <address> Vol.24 No.1, pp.27-39, </address> <year> 1990. </year>
Reference-contexts: Both active and passive replication can cause further performance degradation during normal operation. Active Replication [4, 8]: In the case where all replicas process all requests in parallel, they have to be synchronized even when they operate on computers of different performance. Passive Replication <ref> [2, 9, 10] </ref>: In the case where a primary object processes all requests, the primary object must send its internal data periodically to secondary objects and update their internal data. If more than one secondary object is used, the procedure to guarantee data consistency may cause another drop in performance.
Reference: [11] <author> P. Maes. </author> <title> Concepts and Experiments in Computational Reflection. </title> <booktitle> OOPSLA-88 Proceedings, </booktitle> <address> pp.147-155, </address> <year> 1988. </year>
Reference-contexts: System nOR (figure 2) incorporates Lazy Fault Tolerance as a fault tolerant method. It deploys the reflective architecture <ref> [11] </ref> that deals with operation and management separately. The reflective architecture divides the software into two layers: (1) a base layer that provides only the inherent services of applications; and (2) a meta layer that manages applications in the base layer.
References-found: 11

