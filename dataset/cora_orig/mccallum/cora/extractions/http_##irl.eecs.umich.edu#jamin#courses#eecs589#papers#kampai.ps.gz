URL: http://irl.eecs.umich.edu/jamin/courses/eecs589/papers/kampai.ps.gz
Refering-URL: http://irl.eecs.umich.edu/jamin/courses/eecs589/fall97/readinglist.html
Root-URL: http://www.eecs.umich.edu
Email: tsuchiya@thumper.bellcore.com  
Title: routing function may not be able to maintain entries for every router and host. In
Author: Paul F. Tsuchiya, Bellcore 
Note: 1.0 Introduction If the network is large, however, the  this case, the addresses, and usually the  2.0 Background  
Date: 11111  
Abstract: In communications networks, communication endpoints are often assigned hierarchical addresses. Traditionally, hierarchical addresses are formed by defining fixed-length, fixed-position fields, each of which describes one layer of the hierarchy (for instance, telephone numbers in the USA). If the hierarchical topology is not relatively evenly populated, however, the address space can end up sparsely populated and therefore poorly utilized. This paper describes a method of hierarchical address assignment, called kampai addressing, where addresses are formed using variable-length, non-contiguous fields. In this method, addresses are assigned as needed from the bottom up, so that growth in any region of the hierarchy is efficiently accommodated. Simulation results show that kampai utilizes address space at nearly 50% efficiency at each hierarchy level, compared to less than half that for traditional hierarchical addresses. In communications networks, communication endpoints are unambiguously identified by addresses. Examples of communications endpoints are telephones and computers (we use the term host). When one such host wishes to establish communications with another, it presents the network with the address, which the network uses to find a path through routers to the addressed host. This path finding is the network routing function. The operation of the network routing function is strongly inuenced by the network topology and the semantics of the addresses. For instance, if the network is small, it may be possible for the routing function to maintain information about every router and host in the network. In this case, the addresses can be at. That is, where a host is attached to the network has no bearing on its address. Ethernet addresses are at. A hosts Ethernet address remains the same no matter where in the world that host is connected. While variations exist (for instance, IP subnetting [MP]), a common way to encode hierarchical addresses is to preassign positions and lengths to each field. For instance, in the USA, ten-digit telephone numbers are split into three fields; three digits, three digits, and four digits. Preassigned address structures suffer the problem that, if the hierarchical structure of the topology doesnt match the hierarchical structure of the address, inefficiencies can occur. For instance, in the USA, some area-codes (the three most significant digits) are under-utilized because of a sparse population, while others have overowed, resulting in area-code splitting (renumbering an area as two areas). In this paper, we present a technique for hierarchical address assignment that 1) uses the address space efficiently, 2) allows for an arbitrary number of hierarchy levels (limited only by the number of bits in the address), and 3) allows for growth at any level of the hierarchy without forcing any addresses to change to accommodate the growth. These features are primarily achieved using arbitrary length, non-contiguous bit masks. We call the new In section 2, we provide background to hierarchical routing and addressing, and particularly the use of masks. In section 3, we discuss the problems with traditional fixed-length, fixed-position addresses. In section 4, we describe the new technique, kampai addressing. In section 5, we discuss the performance of kampai, giving simulation results. Section 6 discusses other issues associated with kampai addressing, and section 7 summarizes this paper. Consider the network of Figure 1. Here we have three backbone networks 10, 11, and 2, serving stub networks (101, 102, etc.). As the topology is a two-layer hierarchy technique kampai addressing 1 .
Abstract-found: 1
Intro-found: 1
Reference: [OSI1] <author> International Organization for Standardization ISO10589, </author> <title> Intermediate System to Intermediate System Intra-Domain routeing exchange protocol for use in Conjunction with the Protocol for providing the Connectionless-mode Network Service (ISO 8473) </title>
Reference-contexts: From the right, one byte is used to identify the transport layer protocol, 6 bytes the host ID, and 2 bytes the area within the stub network. This leaves four bytes to encode everything above the stub network <ref> [OSI1] </ref>. <p> From the left, there are fields that indicate who the addressing authority is for the remainder of the address [OSI2]. From the right, fields have been set aside for intra-domain routing, such as the Ethernet address in bytes 1 through 6 <ref> [OSI1] </ref>. There is no reason that these fields cant remain as they are, and still use kampai for the not-yet-assigned inter-domain part of the address. We have described kampai assuming binary operation masks are assigned one bit at a time.
Reference: [OSI2] <author> International Organization for Standardization ISO8348, </author> <title> Addendum 2, Network Layer Addressing </title>
Reference-contexts: For connectionless packets with small amounts of data, the addresses account for most of the packet size. Perhaps not surprisingly, large addresses do not necessarily even eliminate the problem of address utilization. In OSI network layer, addresses (Network Service Access Points, NSAPs) can be up to 20 bytes long <ref> [OSI2] </ref>, and indeed the full length is usually used. However, even the large OSI address space is quickly being allocated away. From the left (most significant), the first two bytes identify the type of NSAP address (X.121, E.164, Data Country Code (DCC), etc.) [OSI2]. <p> can be up to 20 bytes long <ref> [OSI2] </ref>, and indeed the full length is usually used. However, even the large OSI address space is quickly being allocated away. From the left (most significant), the first two bytes identify the type of NSAP address (X.121, E.164, Data Country Code (DCC), etc.) [OSI2]. For DCCs, the next 2 bytes identify the country having authority over the remaining 16 bytes. In the USA, the next three bytes indicate which organization has authority over the remaining 13 bytes. <p> Hybrid and M-ary Kampai A hybrid of kampai and traditional addresses is possible. For instance, in OSI, certain fixed-length fields are already defined. From the left, there are fields that indicate who the addressing authority is for the remainder of the address <ref> [OSI2] </ref>. From the right, fields have been set aside for intra-domain routing, such as the Ethernet address in bytes 1 through 6 [OSI1]. There is no reason that these fields cant remain as they are, and still use kampai for the not-yet-assigned inter-domain part of the address.
Reference: [CO] <institution> Central Office Code Utilization Study (COCUS), </institution> <note> 1990 and 1974, Bellcore (proprietary). </note>
Reference-contexts: Here, we look at the address utilization for two existing networks, the telephone network in the USA, and the IP Internet. 6 In 1990, there were an average of roughly 1,800,000 telephone numbers assigned per area code in North America <ref> [CO] </ref>. Each area code has a capacity of roughly 7,920,000 telephone numbers (some office codes within each area code are not available for assignment). Therefore, 1,800,000 numbers is roughly 23% of the available numbers.
Reference: [Fe] <author> Feldmeier, </author> <title> D.C., Improving Gateway Performance with a Routing-Table Cache, </title> <booktitle> Proc. IEEE INFOCOM 88, </booktitle> <month> March </month> <year> 1988. </year>
Reference-contexts: Efficient Routing Table Lookup with Non contiguous Masks There are numerous techniques for quickly searching for the routing table entry that best matches an address. Using Knuths terminology [Kn], these include the Tree searches, Trie search, Patricia search, and hashing <ref> [Fe, Ja] </ref>. Each of these can be run entirely in software or can be hardware assisted. In addition, complete hardware methods, such as Content Addressable Memory, are possible.
Reference: [Ja] <author> Jain, R., </author> <title> Characteristics of Destination Address Locality in Computer Networks: A Comparison of Caching Schemes, </title> <institution> Digital Equipment Corporation, DEC-TR-592, Littleton MA, </institution> <month> February </month> <year> 1989. </year>
Reference-contexts: Efficient Routing Table Lookup with Non contiguous Masks There are numerous techniques for quickly searching for the routing table entry that best matches an address. Using Knuths terminology [Kn], these include the Tree searches, Trie search, Patricia search, and hashing <ref> [Fe, Ja] </ref>. Each of these can be run entirely in software or can be hardware assisted. In addition, complete hardware methods, such as Content Addressable Memory, are possible.
Reference: [Kn] <author> Knuth, D.E., </author> <title> The Art of Computer Programming, Volume 3: Sorting and Searching, </title> <publisher> Addison Wesley, </publisher> <year> 1973 </year>
Reference-contexts: As a result, it is not possible to give back a block of address space without reassigning some addresses. Efficient Routing Table Lookup with Non contiguous Masks There are numerous techniques for quickly searching for the routing table entry that best matches an address. Using Knuths terminology <ref> [Kn] </ref>, these include the Tree searches, Trie search, Patricia search, and hashing [Fe, Ja]. Each of these can be run entirely in software or can be hardware assisted. In addition, complete hardware methods, such as Content Addressable Memory, are possible.
Reference: [MP] <author> Mogul, J.C., Postel, J.B., </author> <title> Internet standard subnetting procedure, </title> <institution> RFC-950, USC/ Information Sciences Institute, </institution> <month> August </month> <year> 1985, </year> <pages> 18 pp. </pages>
Reference-contexts: In Efficient and Flexible Hierarchical Address Assignment Paul F. Tsuchiya, Bellcore tsuchiya@thumper.bellcore.com this case, the addresses, and usually the network topology, are hierarchically structured. While variations exist (for instance, IP subnetting <ref> [MP] </ref>), a common way to encode hierarchical addresses is to preassign positions and lengths to each field. For instance, in the USA, ten-digit telephone numbers are split into three fields; three digits, three digits, and four digits. <p> To make this work, always assign identity bits from the most significant bit moving right, and growth bits from the least significant bit moving left. Indeed, this technique has been used for the assignment of subnet masks in IP <ref> [MP, Ts] </ref>. It hasnt been widely used, mainly because two-level kampai results in variable-length masks for different subnets, which many routing algorithms cannot handle. Newer algorithms, such as OSPF, do not have this limitation [OSPF].
Reference: [OSPF] <author> Moy, J., </author> <title> OSPF Specification, </title> <institution> RFC-1131, USC/ Information Sciences Institute, </institution> <month> October </month> <year> 1989, </year> <pages> 107 pp. </pages>
Reference-contexts: Indeed, this technique has been used for the assignment of subnet masks in IP [MP, Ts]. It hasnt been widely used, mainly because two-level kampai results in variable-length masks for different subnets, which many routing algorithms cannot handle. Newer algorithms, such as OSPF, do not have this limitation <ref> [OSPF] </ref>. Politics Anyone that has been involved in committees that are responsible for the assignment of hierarchical addresses knows that the politics can overwhelm any technical issues that might exist. Often, addresses are a scarce resource, and the assignment of fields can determine the limits of easy growth.
Reference: [Ts] <author> Tsuchiya, P.F., </author> <title> On the Assignment of Subnet Numbers, </title> <institution> RFC-1219, USC/Information Sciences Institute, </institution> <month> April </month> <year> 1991, </year> <pages> 13 pp. </pages>
Reference-contexts: To make this work, always assign identity bits from the most significant bit moving right, and growth bits from the least significant bit moving left. Indeed, this technique has been used for the assignment of subnet masks in IP <ref> [MP, Ts] </ref>. It hasnt been widely used, mainly because two-level kampai results in variable-length masks for different subnets, which many routing algorithms cannot handle. Newer algorithms, such as OSPF, do not have this limitation [OSPF].
References-found: 9

