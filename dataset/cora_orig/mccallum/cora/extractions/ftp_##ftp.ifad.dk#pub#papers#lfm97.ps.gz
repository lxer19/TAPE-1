URL: ftp://ftp.ifad.dk/pub/papers/lfm97.ps.gz
Refering-URL: http://www.ifad.dk/publications/publications.html
Root-URL: 
Email: Email: fsten,peterg@ifad.dk  
Title: Modeling and Validating SAFER in VDM-SL  
Author: Sten Agerholm and Peter Gorm Larsen 
Address: Forskerparken 10, DK-5230 Odense M, Denmark  
Affiliation: IFAD  
Abstract: Formal methods can be applied with different levels of rigor. The more rigorously used, the more confidence is obtained in a formal model of a computer system. However, rigorous development using formal verification requires skilled personnel and is costly. Based on our experience of introducing formal specification to some European industrial companies, e.g. British Aerospace [7] and Aerospatiale [3], we believe that a less rigorous approach using validation by testing is a complement to formal verification, which engineers can use cost-effectively early in their formal methods careers. When they become more confident with constructing formal models, it would be natural to take the next step and introduce verification. In this paper we illustrate how testing-based validation can be applied to the SAFER example used throughout [9]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ricky W. Butler, James L. Caldwell, Victor A. Carreno, C. Michael Holloway, Paul S. Miner, and Ben L. Di Vito. </author> <title> Nasa lang-ley's research and technology transfer program in formal methods. </title> <booktitle> In Tenth Annual Conference on Computer Assurance (COMPASS 95). </booktitle> <address> Gaithersburg, MD, </address> <month> June </month> <year> 1995. </year> <note> (expanded version available from http://atb-www.larc.nasa.gov/fm.html). </note>
Reference-contexts: 1 Introduction Historically, NASA's involvement in formal methods has concentrated on formal verification using mechanical theorem provers <ref> [1, 2, 9] </ref>. In technology transfer projects supported by NASA such formal verification has been in focus. This is clearly understandable considering the criticality of the systems being developed in the avionics sector.
Reference: [2] <author> James L. Caldwell. </author> <title> Formal methods technology-transfer: a view from nasa. </title> <editor> In S. Gnesi and D. Latella, editors, </editor> <booktitle> Proceedings of the ERCIM Workshop on Formal Methods for Industrial Critical Systems, </booktitle> <address> Oxford Eng-land, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Historically, NASA's involvement in formal methods has concentrated on formal verification using mechanical theorem provers <ref> [1, 2, 9] </ref>. In technology transfer projects supported by NASA such formal verification has been in focus. This is clearly understandable considering the criticality of the systems being developed in the avionics sector.
Reference: [3] <author> Lionel Devauchelle, Peter Gorm Larsen, and Henrik Voss. PICGAL: </author> <title> Lessons Learnt from a Practical Use of Formal Specification to Develop a High Reliability Software. </title> <booktitle> In DA-SIA'97. ESA, </booktitle> <month> May </month> <year> 1997. </year>
Reference: [4] <author> Rene Elmstrtm, Peter Gorm Larsen, and Poul Btgh Lassen. </author> <title> The IFAD VDM-SL Toolbox: A Practical Approach to Formal Specifications. </title> <journal> ACM Sigplan Notices, </journal> <volume> 29(9) </volume> <pages> 77-80, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: When the engineers feel confident in using formal specification and testing, it seems feasible to introduce verification. In this paper we illustrate how a testing-based validation approach can be applied to the SAFER 1 example from [9] using VDM-SL [10] and the IFAD VDM-SL Toolbox <ref> [8, 4] </ref>. In [9], SAFER is specified in the PVS notation and properties are proved using the PVS theorem prover [11]. The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting.
Reference: [5] <author> J.S. Fitzgerald and P.G. Larsen. </author> <title> Formal specification techniques in the commercial development process. </title> <editor> In M. Wirsing, editor, </editor> <booktitle> Position Papers from the Workshop on Formal Methods Application in Software Engineering Practice, International Conference on Software Engineering (ICSE-17), </booktitle> <address> Seattle, </address> <month> April </month> <year> 1995. </year> <month> ftp://ftp.ifad.dk/pub/papers/icse.ps.gz. </month>
Reference-contexts: This is clearly understandable considering the criticality of the systems being developed in the avionics sector. However, we believe that the technology transfer process is more likely to have significant effect if the formal methods technology is incorporated in smaller "deltas" into the existing practice <ref> [5] </ref>.
Reference: [6] <author> Brigitte Frohlich and Peter Gorm Larsen. </author> <title> Combining VDM-SL Specifications with C++ Code. </title> <editor> In Marie-Claude Gaudel and Jim Woodcock, editors, FME'96: </editor> <booktitle> Industrial Benefit and Advances in Formal Methods, </booktitle> <pages> pages 179-194. </pages> <publisher> Springer-Verlag, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: Instead, we focus on the kind of analysis that can be performed using a validation by testing approach rather than formal verification. This analysis reveals some interesting "unclarities" in [9]. To support the testing approach, we exploit the Dynamic Link facility of the Toolbox for rapid pro-totyping <ref> [6] </ref>, linking graphical visualization models (compiled code) with our executable specification. <p> In order to ease this kind of testing we can exploit the Dynamic Link facility of the IFAD Toolbox for combining compiled code and VDM-SL specifications <ref> [6] </ref>. We have made a simple interface model of the hand controller using Tcl/Tk and linked this with the SAFER specification. Figure 12 shows a screen dump of the interface, where the mode (translational or rotational) and the AAH switch together form the first parameter to ControlCycle.
Reference: [7] <author> Peter Gorm Larsen, John Fitzgerald, and Tom Brookes. </author> <title> Applying Formal Specification in Industry. </title> <journal> IEEE Software, </journal> <volume> 13(3) </volume> <pages> 48-56, </pages> <month> May </month> <year> 1996. </year>
Reference: [8] <author> Paul Mukherjee. </author> <title> Computer-aided Validation of Formal Specifications. </title> <journal> Software Engineering Journal, </journal> <pages> pages 133-140, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: When the engineers feel confident in using formal specification and testing, it seems feasible to introduce verification. In this paper we illustrate how a testing-based validation approach can be applied to the SAFER 1 example from [9] using VDM-SL [10] and the IFAD VDM-SL Toolbox <ref> [8, 4] </ref>. In [9], SAFER is specified in the PVS notation and properties are proved using the PVS theorem prover [11]. The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting.
Reference: [9] <author> NASA. </author> <title> Formal methods, specification and ver-ification guidebook for software and computer systems a practitioner's companion. </title> <type> Technical Report Draft 2.0, </type> <address> Washington, DC 20546, USA, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Historically, NASA's involvement in formal methods has concentrated on formal verification using mechanical theorem provers <ref> [1, 2, 9] </ref>. In technology transfer projects supported by NASA such formal verification has been in focus. This is clearly understandable considering the criticality of the systems being developed in the avionics sector. <p> When the engineers feel confident in using formal specification and testing, it seems feasible to introduce verification. In this paper we illustrate how a testing-based validation approach can be applied to the SAFER 1 example from <ref> [9] </ref> using VDM-SL [10] and the IFAD VDM-SL Toolbox [8, 4]. In [9], SAFER is specified in the PVS notation and properties are proved using the PVS theorem prover [11]. The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting. <p> When the engineers feel confident in using formal specification and testing, it seems feasible to introduce verification. In this paper we illustrate how a testing-based validation approach can be applied to the SAFER 1 example from <ref> [9] </ref> using VDM-SL [10] and the IFAD VDM-SL Toolbox [8, 4]. In [9], SAFER is specified in the PVS notation and properties are proved using the PVS theorem prover [11]. The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting. <p> The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting. Instead, we focus on the kind of analysis that can be performed using a validation by testing approach rather than formal verification. This analysis reveals some interesting "unclarities" in <ref> [9] </ref>. To support the testing approach, we exploit the Dynamic Link facility of the Toolbox for rapid pro-totyping [6], linking graphical visualization models (compiled code) with our executable specification. <p> Finally, a few concluding remarks are provided. The reader is assumed to have a basic knowledge of VDM-SL or a similar notation such as PVS. 2 Overview of the SAFER System This overview of the SAFER system is based on, and partly copied from, the NASA report <ref> [9] </ref>, which describes a cut-down version of a real SAFER system. SAFER is a small, lightweight propulsive backpack system designed to provide self-rescue capabilities to a NASA space crewmember separated during an EVA (Extravehicular Activity). <p> These may seem straightforward and clear, but the discussion in Section 4.3 below will show that in fact they are not. 3 VDM-SL Specification of SAFER In <ref> [9] </ref>, a PVS specification is provided of a cut-down version of SAFER. We have translated this specification to VDM-SL, a relatively straightforward task since the two notations share many constructs. <p> Here, Control-Cycle is defined as an operation and not a function, since it depends on the AAH state (see Section 3.3) and the SAFER state, which is simply a natural number valued clock (as in <ref> [9] </ref> we do not use a real-time clock): state SAFER of clock : N init s 4 s = mk-SAFER (0) end The result of a call to ControlCycle is a set of thruster settings, i.e. a set of thruster names to be turned on. <p> This AAH control function in (3) is not modeled either in the PVS specification of <ref> [9] </ref>, though it is mentioned in a very implicit way. The control cycle first transforms the "raw" grip commands to translation and rotation commands. Next it calculates the thruster settings and then the AAH state is updated in the body of the let-statement. <p> Note that Transition uses a starting predicate for the situation when the AAH is initiating. The starting predicate is used to calculate the active axes and axes for which the hand controller must be ignored. 4 Validation Using Testing The NASA guidebook <ref> [9] </ref> focuses mainly on formal verification as a method for analysis of requirements and high-level design. However, we find that alternative approaches to validating specifications based on testing techniques are also beneficial, though they should not replace verification. <p> This kind of testing, which to a large extent also could be performed by theorem provers, e.g. if rewriting is available, is not considered nor mentioned in <ref> [9] </ref>. However, it does make sense to test, for instance, that thrusters are fired correctly according to hand grip commands. <p> However, the LRUDThrusters function is still only 72% covered. But the uncovered parts are precisely those that have the "Not Applicable" label in the requirement specification from <ref> [9] </ref>, so this is good. The test coverage coloring shows this very clearly in the boxes in Figure 11 (we have cut the specification down to the same cases as in Section 3.2). The sub-expressions written in grey have never been reached in the interpretation of the test argument (s). <p> Hence, if a result failed the check, the interpreter would give a run-time error with position information (line and column) in the specification document. This never happened in any of our tests (including the big test mentioned above). In <ref> [9] </ref> a proof of the maximum thruster property (41) is given. The validation made here is not as strong as that, because we would have to test it with all values in a model-checking fashion. <p> This property is also related to the AAH protocol so Figure 8 must be used again. The timeout of 0.5 seconds is for test purposes represented as 10 control cycles in our specification. As in <ref> [9] </ref> we do not represent a real-time clock. We first turn the AAH on by pressing and then releasing the AAH button. <p> Turn AAH on again, press and release the AAH button once, wait at least 11 cycles, press and release again and check that the AAH still works. Finally, press, release and press the AAH button within 10 cycles. The report <ref> [9] </ref> is unclear here: Strictly speaking, property (19) says that this should deactivate the AAH while the PVS specification and the AAH state diagram does not deactivate the AAH until the button is released. <p> We could capture this problem using a pre-condition on the SAFER ControlCycle operation. In the PVS specification, an obvious place to take this into account would be in a post-condition of the AAH_control_out function, which could be done using the subtype facility in PVS, but in <ref> [9] </ref> this function is implicitly defined and does not give any information whatsoever about implementation requirements. When translating the PVS specification to VDM-SL, we cut out the very implicit AAH_control_out and modeled this as the third argument of ControlCycle instead. <p> For example: Once AAH is turned off for a rotational axis it remains off until a new AAH cycle is initiated. which appears in Section C.4.1 of the NASA report. Point: In validating this property we discovered that neither our model nor the PVS model in <ref> [9] </ref> is sufficiently strong to prove certain desirable properties. 4.3.5 Property (38) Any hand controller rotation command present at the time AAH is initiated shall subsequently be ignored until a return to the off condition is detected for that axis or until AAH is disabled. <p> These different kinds of analyzes tend to discover different kinds of problems. Hence, though some verification of the PVS specification of SAFER had already been carried out in <ref> [9] </ref>, we were still able to detect a few points that need further clarification using the validation approach (see Section 4.3). Throughout this paper, we have assumed that verification is costly. <p> We are also grateful for the constructive comments we got on earlier versions of this paper from Hanne Carlsen, Benny Graff Mortensen, Paul Mukherjee and Anne Berit Nielsen. Finally PGL would like to thank John Kelly for asking for review comments on <ref> [9] </ref>.
Reference: [10] <author> P. G. Larsen and B. S. Hansen and H. Brunn N. Plat and H. Toetenel and D. J. Andrews and J. Dawes and G. Parkin and others. </author> <title> Information technology | Programming languages, their environments and system software interfaces | Vienna Development Method | Specification Language | Part 1: Base language, </title> <month> December </month> <year> 1996. </year>
Reference-contexts: When the engineers feel confident in using formal specification and testing, it seems feasible to introduce verification. In this paper we illustrate how a testing-based validation approach can be applied to the SAFER 1 example from [9] using VDM-SL <ref> [10] </ref> and the IFAD VDM-SL Toolbox [8, 4]. In [9], SAFER is specified in the PVS notation and properties are proved using the PVS theorem prover [11]. The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting.
Reference: [11] <institution> PVS World Wide Web page. </institution> <note> http://www.csl.sri.com/pvs/overview.html. </note>
Reference-contexts: In this paper we illustrate how a testing-based validation approach can be applied to the SAFER 1 example from [9] using VDM-SL [10] and the IFAD VDM-SL Toolbox [8, 4]. In [9], SAFER is specified in the PVS notation and properties are proved using the PVS theorem prover <ref> [11] </ref>. The VDM-SL notation is quite close to the PVS notation, but it is not the notational differences we find interesting. Instead, we focus on the kind of analysis that can be performed using a validation by testing approach rather than formal verification.
Reference: [12] <author> Gunnar St-almarck. </author> <title> A System for Determining Propositional Logic Theorems by Applying Values and Rules to Triplets that are Generated from a Formula, 1989. </title> <type> Swedish Patent No. 467 076 (approved 1992), U.S. Patent No. </type> <note> 5 276 897 (1994), European Patent No. 0403 454 (1995). </note>
Reference-contexts: In fact, we have continued the experiment above together with Arne Boralv from Logikkonsult, in order to investigate the potential power of automatic verification. Arne Boralv has taken our VDM description and manually translated it to a model in NP-Tools <ref> [12] </ref>, using only propositional logic extended with integer arithmetic and enumerated types. Using this model it was possible to automatically prove the maximum thruster and the thruster consistency requirements, as well as some other properties.
References-found: 12

