URL: http://dml.cs.ucla.edu/~waiman/professional/publications/compcon96.ps
Refering-URL: http://dml.cs.ucla.edu/~waiman/professional/
Root-URL: http://www.cs.ucla.edu
Title: Randomized Data Allocation for Real-time Disk I/O  
Author: Steven Berson R. R. Muntz W. R. Wong 
Address: Marina del Rey, CA 90292  Los Angeles, CA 90024  
Affiliation: USC Information Sciences Institute Computer Science Department  UCLA  
Abstract: Continuous media such as video or audio from databases that are disk resident require real-time disk I/O support. Video on demand systems have been widely studied and most proposed designs take advantage of the (largely) predictable nature of the I/O stream to provide both guaranteed upper bounds on delay and reasonably high resource utilizations. For disk based 3D interactive systems the problem is very different since the user's actions determine the future deadlines for model data at the display. The data layout we propose and evaluate in this paper abandons the idea of a careful layout of data for a completely randomized layout. We consider large, multidisk systems in which the 3D model data is partitioned into granules which are the logical unit of data that gets transferred in and out of the active scene graph. Granules form parity groups as is familiar from disk arrays. In the proposed system, the use of redundancy in the form of parity is used under normal conditions for load balancing (since for a parity group of size G, any G 1 blocks can be read to obtain the data). Preliminary simulation results suggest that for moderate increase in storage for parity, one can obtain high degree of disk bandwidth utilization combined with a "nearly guaranteed" maximum delay, i.e., with probability approaching 1. The simulations show the nature of the tradeoffs between utilization and the probability that deadlines are met. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. </author> <title> Birk, </title> <type> Personal communication, </type> <year> 1995. </year>
Reference-contexts: Random allocation of data to disks is studied in [7] in the context of parallel I/O for scientific computations. Neither [2] nor [7] consider the use of parity for load balancing. <ref> [1] </ref> independently developed the same idea as in this paper (random allocation of parity groups and exploiting redundancy for load balancing) for video-on-demand systems. 5 Summary and Conclusions We have proposed a scheme by which we can achieve high disk utilization coupled with delay bounds that are achieved with a probability
Reference: [2] <author> L. T. Chen and D. Rotem, </author> <title> "Declustering Objects for Visualization" VLDB 1993, </title> <booktitle> Dublin, Ireland, </booktitle> <pages> pp. 85-96. </pages>
Reference-contexts: Another related work is <ref> [2] </ref> in which 2D Landsat images are distributed over multiple disks to optimize the time to retrieve any randomly chosen circular region covered by the image. Random allocation of data to disks is studied in [7] in the context of parallel I/O for scientific computations. Neither [2] nor [7] consider the <p> Another related work is <ref> [2] </ref> in which 2D Landsat images are distributed over multiple disks to optimize the time to retrieve any randomly chosen circular region covered by the image. Random allocation of data to disks is studied in [7] in the context of parallel I/O for scientific computations. Neither [2] nor [7] consider the use of parity for load balancing. [1] independently developed the same idea as in this paper (random allocation of parity groups and exploiting redundancy for load balancing) for video-on-demand systems. 5 Summary and Conclusions We have proposed a scheme by which we can achieve high disk
Reference: [3] <author> T. Funkhauser, C. H. Sequin and S. Teller, </author> <title> "Management of Large Amounts of Data in Interactive Building Walkthroughs", </title> <booktitle> ACM SIGGRAPH Proc. of the 1992 Symposium on Interactive 3D Graphics, </booktitle> <year> 1992. </year>
Reference-contexts: 1 Introduction We consider the design of a disk based storage server for 3D interactive applications such as architectural walk throughs <ref> [3, 6] </ref>. Most of these systems have been main memory limited in the sense that the size model that could be accommodated was limited to what could fit in main memory. The few exceptions include [3, 5]. <p> Most of these systems have been main memory limited in the sense that the size model that could be accommodated was limited to what could fit in main memory. The few exceptions include <ref> [3, 5] </ref>. In our case we are interested in very large models, at least on the order of a terabyte, such as would result from a complete model of the Los Angeles basin with all its buildings, topography, etc. <p> For 20 disks and N 0 = 26 the fractions of requests delayed even one extra cycle vs. group size (no parity). 100 disk system. was 0. 4 Related work As mentioned previously, there are a few examples of disk based storage for interactive 3D models <ref> [3, 5] </ref>. Another related work is [2] in which 2D Landsat images are distributed over multiple disks to optimize the time to retrieve any randomly chosen circular region covered by the image.
Reference: [4] <author> D. J. Gemmell, et. al, </author> <title> "Multimedia Storage Servers: A Tutorial", </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 40-49, </pages> <month> May, </month> <year> 1995. </year>
Reference-contexts: We propose that disk requests be scheduled in rounds or cycles as is commonly proposed for video-on-demand systems <ref> [4, 8] </ref>. Briefly, the idea is to serve a group of requests for each disk during each cycle; the requests are sorted by cylinder number and served in order so that the average seek time per request is reduced.
Reference: [5] <author> B. A. Gennert and R. D. Hersch, </author> <title> "Multimedia Performance Behavior of the GigaView Parallel Im system. age Server", </title> <booktitle> Thirteenth IEEE Symposium on Mass Storage Systems, </booktitle> <address> France, </address> <month> June, </month> <year> 1994. </year>
Reference-contexts: Most of these systems have been main memory limited in the sense that the size model that could be accommodated was limited to what could fit in main memory. The few exceptions include <ref> [3, 5] </ref>. In our case we are interested in very large models, at least on the order of a terabyte, such as would result from a complete model of the Los Angeles basin with all its buildings, topography, etc. <p> For 20 disks and N 0 = 26 the fractions of requests delayed even one extra cycle vs. group size (no parity). 100 disk system. was 0. 4 Related work As mentioned previously, there are a few examples of disk based storage for interactive 3D models <ref> [3, 5] </ref>. Another related work is [2] in which 2D Landsat images are distributed over multiple disks to optimize the time to retrieve any randomly chosen circular region covered by the image.
Reference: [6] <author> W. Jepson, R. Liggett and S. Friedman, </author> <title> "Virtual Modeling of Urban Environments", Presence: Teleoperators and Virtual Environments,Vol. 5, </title> <publisher> No.1, MIT Press 1996. </publisher>
Reference-contexts: 1 Introduction We consider the design of a disk based storage server for 3D interactive applications such as architectural walk throughs <ref> [3, 6] </ref>. Most of these systems have been main memory limited in the sense that the size model that could be accommodated was limited to what could fit in main memory. The few exceptions include [3, 5].
Reference: [7] <author> E. L. Miller and R. H. Katz, </author> <title> "RAMA: Easy Access to a High-Bandwidth Massively Parallel File System", </title> <booktitle> USENIX, </booktitle> <pages> pp. 59-70, </pages> <year> 1995. </year>
Reference-contexts: Another related work is [2] in which 2D Landsat images are distributed over multiple disks to optimize the time to retrieve any randomly chosen circular region covered by the image. Random allocation of data to disks is studied in <ref> [7] </ref> in the context of parallel I/O for scientific computations. Neither [2] nor [7] consider the use of parity for load balancing. [1] independently developed the same idea as in this paper (random allocation of parity groups and exploiting redundancy for load balancing) for video-on-demand systems. 5 Summary and Conclusions We <p> Random allocation of data to disks is studied in <ref> [7] </ref> in the context of parallel I/O for scientific computations. Neither [2] nor [7] consider the use of parity for load balancing. [1] independently developed the same idea as in this paper (random allocation of parity groups and exploiting redundancy for load balancing) for video-on-demand systems. 5 Summary and Conclusions We have proposed a scheme by which we can achieve high disk utilization coupled
Reference: [8] <author> P. Yu, M. Chen and D. Kandlur, </author> <title> "Design and Analysis of a Grouped Sweeping Scheme for Multimedia Storage Management", </title> <booktitle> Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, </address> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: We propose that disk requests be scheduled in rounds or cycles as is commonly proposed for video-on-demand systems <ref> [4, 8] </ref>. Briefly, the idea is to serve a group of requests for each disk during each cycle; the requests are sorted by cylinder number and served in order so that the average seek time per request is reduced.
References-found: 8

