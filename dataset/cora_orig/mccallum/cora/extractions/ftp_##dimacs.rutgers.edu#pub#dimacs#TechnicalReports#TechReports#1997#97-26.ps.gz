URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1997/97-26.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1997.html
Root-URL: http://www.cs.rutgers.edu
Email: Email: erez@dimacs.rutgers.edu 2  Email: rackoff@cs.toronto.edu.  
Author: Charles Rackoff 
Keyword: CBC MAC for Real-Time Data Sources  
Affiliation: Dept. of Computer Science, University of Toronto,  
Address: Box 1179, Piscataway, NJ 08855-1179.  Toronto, Ontario, Canada M5B 3g4.  
Note: by Erez Petrank 1 DIMACS Center, P. O.  2 Part of this work was done while the author was visiting the University of Toronto. DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs, Bellcore, and Bell Labs. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 97-26 July 1997 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare, R. Canetti, and H. Krawczyk. </author> <title> Keying hash functions for message authentication. </title> <booktitle> Advances in Cryptology - Crypto 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1109, </volume> <editor> N. Koblitz ed, </editor> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive or's on encryptions of the input blocks. This allows parallelizability and incrementality. Bellare, Canetti, and Krawczyk <ref> [1] </ref> introduce two methods for message authentication code: NMAC and HMAC. Both bear resemblence to our DMAC, but are also different. <p> Their constructions and proofs are not applicable to the DMAC construction since the DMAC deals with an iteration that is not (weakly) collision resistant for non-fixed size inputs. This bad property of the CBC MAC foils the proof in <ref> [1] </ref> and therefore a proof is needed that the DMAC is indeed secure. Last, we mention the ANSI standard X9.19 which augmentats CBC-MAC using a DES cipher. The standrad suggests using two keys like our DMAC.
Reference: [2] <author> M. Bellare, R. Guerin, and P. Rogaway. </author> <title> XOR MACs: New Methods for Message Authentication Using Finite Pseudorandom Functions. </title> <booktitle> Advances in Cryptology - Crypto '95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <publisher> Springer-Verlag, </publisher> <address> D. </address> <publisher> Coppersmith, Ed., </publisher> <pages> pp. 340-358, </pages> <year> 1995. </year>
Reference-contexts: Tsudik was the first to suggest "keyed hashing" authentication using MD5 [10], and many other authentications may be used with MD5 as an underlying hash function. We also mention the work of Bellare, Guerin, and Rogaway <ref> [2] </ref>, who suggested a new type of (provably secure) authentication based on performing exclusive or's on encryptions of the input blocks. This allows parallelizability and incrementality. Bellare, Canetti, and Krawczyk [1] introduce two methods for message authentication code: NMAC and HMAC.
Reference: [3] <author> M. Bellare, J. Kilian, and P. Rogaway. </author> <title> The security of Cipher Block Chaining. </title> <booktitle> Advances in Cryptology - Crypto '94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <publisher> Springer-Verlag, </publisher> <editor> Y. Desmedt, </editor> <publisher> Ed., </publisher> <pages> pp. 340-358, </pages> <year> 1994. </year>
Reference-contexts: Until recently, no solid theoretical ground was suggested to deal with the security of this method. The main interest is whether the security of the block cipher function f (e.g. DES) implies the security of the CBC MAC f (m) . Bellare, Kilian, and Rogaway <ref> [3] </ref> were the first to study this problem. They show that CBC MAC is secure when applied to messages of fixed length 1 . <p> Therefore, the efficiency of this authentication is virtually the same as the standard CBC MAC. We call this authentication DMAC (for double MAC). 2 We then provide a rigorous proof that this message is secure. Our proof is an extension of the proof in <ref> [3] </ref>. 1 It is easy to show that for variable length messages CBC MAC is not secure. <p> Namely, after examining a few authentications, an adversary that doesn't know the secret key can produce a valid authentication of a message that hasn't yet been authenticated. 2 Actually, a different method to deal with unknown lengths was suggested in <ref> [3] </ref>. Their method seems to have a flaw. See Appendix A for details. - 2 - Next, we argue that the security of cipher block chaining (CBC) message authentication code (MAC) applied on prefix free message space is secure. <p> The proof of this is an easy augmentation of the proof for fixed length messages given in <ref> [3] </ref>. We remark that making such assumptions on the behavior of the system is on one hand reasonable, but on the other hand, relies solely on the system being used as it was meant to be used. <p> The key is then discarded. We would like to remark that the use of CBC-MAC with a key that is used only once is a safe use of CBC-MAC. In <ref> [3] </ref> it is asserted that if the adversary only sees authentications of messages of a fixed length, then he "cannot" succeed in producing an authentication of a message of the same length that he hasn't already seen the authentication of. <p> Thus, seeing an authentication on one message cannot help the adversary authenticate any other message. 1.3 The theoretical framework We follow the approach suggested by Bellare, Kilian and Rogaway <ref> [3] </ref>. We describe it here shortly, and we refer the reader to their paper for details and motivation. We would like to show that if the underlying block cipher is secure then a message authentication code is also secure. <p> We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack. This adopts the viewpoints of Goldwasser, Micali and Rivest [5] with regards to signature schemes. We shall follow <ref> [3] </ref> and actually show that the message authentication code is secure in a very strong sense, i.e., that the DMAC we suggest, or the application of CBC MAC on prefix free message space, is actually a family of pseudo random functions. - 3 - Bellare, Kilian and Rogaway have also provided <p> 3 we show that DMAC is (almost) as secure as the underlying block cipher used, and in Section 4 we argue that it is secure to use CBC MAC on a prefix free message space (given that the underlying family is secure). 2 Preliminaries We (basically) use the notation of <ref> [3] </ref>. The set of all functions from f0; 1g ` to f0; 1g ` is called R `!` . Also, let the (infinite) set of all functions from (f0; 1g ` ) fl to f0; 1g ` be called R ` fl !` . <p> In the main theorem of <ref> [3] </ref> (where all messages had the same length) and also in case the message space is prefix-free, the adversary is limited in his queries, and this is used in the proof. <p> The constant c is a small number which depends on the computational model. Proof: We extend the proof in <ref> [3] </ref> to deal with this case. The proof in [3] is composed of three stages. - 6 - 1. They start by considering the information theoretic case in which the function f is really chosen at random between all functions from f0; 1g ` to f0; 1g ` . <p> The constant c is a small number which depends on the computational model. Proof: We extend the proof in <ref> [3] </ref> to deal with this case. The proof in [3] is composed of three stages. - 6 - 1. They start by considering the information theoretic case in which the function f is really chosen at random between all functions from f0; 1g ` to f0; 1g ` . <p> Last, they show that if CBC MAC is a family of pseudo-random function then it is also a secure authentication scheme. The arguments given in <ref> [3] </ref> for Steps (2) and (3) are standard, except for the fact that they computed the exact security of the reductions involved. The exact calculations, given in [3], apply to our case too (with easy modifications in the presentations of the parameters). <p> The arguments given in <ref> [3] </ref> for Steps (2) and (3) are standard, except for the fact that they computed the exact security of the reductions involved. The exact calculations, given in [3], apply to our case too (with easy modifications in the presentations of the parameters). <p> and see that the advantage of the adversary does not exceed ( P n 2 2 2 ` . as needed for Lemma 3.1, and we are done. 3.2 The computational case Reducing DMAC to the underlying family of functions involves a standard reduction whose exact analysis was done in <ref> [3] </ref>. The only difference in our case is that we get a distinguisher which distinguishes a randomly chosen pair of functions f 1 ; f 2 2 F from a randomly chosen pair of random functions g 1 ; g 2 2 R `!` . <p> The message that the adversary outputs is not required to satisfy the prefix free demand. It may be a prefix or an extension of one of the queries. Still, the adversary has low probability in succeeding to construct such an authentication. Some notations (following <ref> [3] </ref>): Let the CBC MAC be used with a family F of functions from f0; 1g ` to f0; 1g ` . <p> The proof of this theorem is a simple extension of the proof which was given in <ref> [3] </ref> for a message space of fixed length messages. We briefly mark the main differences. The difference is in the main part of the proof the information theoretic case. <p> In what follows we assume that the reader is familiar with the proof and notations of the original proof of <ref> [3] </ref>. To augment the proof of the information theoretic case, we redefine border nodes. Instead of border nodes being exactly the nodes at depth m, border nodes are defined to be the nodes which the adversary asks to see their content. <p> The game tree is not extended after a border node. Now, the main change in the argument is in the proof of Lemma 3.4 of <ref> [3] </ref>. In this lemma, it is asserted that if there is no collision in the first n queries then there is little chance of a collision in the next query. Here the fact that the adversary doesn't get to see non-border nodes is used.
Reference: [4] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to Construct Random Functions . In Journal of the ACM, </title> <journal> Vol. </journal> <volume> 33, No. 4, </volume> <pages> 210-217, </pages> <year> (1986). </year> <month> - 14 </month> - 
Reference-contexts: Then we assume that this family is a pseudo random family of functions. This approach to security of a cipher scheme was suggested by Luby and Rackoff [8, 9], and the notion of a family of pseudo random functions was suggested by Goldreich, Goldwasser and Micali <ref> [4] </ref>. We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack. This adopts the viewpoints of Goldwasser, Micali and Rivest [5] with regards to signature schemes. <p> Let F be a family of functions from f0; 1g ` to f0; 1g ` , then advantage A (F ) def fi fiProb [A F = 1] Prob [A R `!` ] fi fi : (This notation follows <ref> [4] </ref>.) We also use a similar definition for a family of functions F from (f0; 1g ` ) fl to f0; 1g ` .
Reference: [5] <author> S. Goldwasser, S. Micali, and R. Rivest. </author> <title> A Digital Signature Scheme Secure Against Adaptive Chosen-message Attack. </title> <journal> In SIAM Journal on Computing , 17(2) </journal> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack. This adopts the viewpoints of Goldwasser, Micali and Rivest <ref> [5] </ref> with regards to signature schemes.
Reference: [6] <author> H. Krawczyk, </author> <title> LFSR-based Hashing and Authentication. </title> <booktitle> In Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <publisher> Springer-Verlag, </publisher> <editor> Y. Desmedt, </editor> <publisher> Ed., </publisher> <pages> pp. 129-139, </pages> <year> 1994. </year>
Reference-contexts: Wegman and Carter [15] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk <ref> [6] </ref>, Stinson [14], Shoup [13], and Rogaway [12]. See the later for more details and references. One should also note the MD5 hashing function suggested by Rivest [11], and while no attack has been suggested so far, there is also no proof that it is secure.
Reference: [7] <author> ISO/IEC 9797. </author> <title> Data Cryptographic Techniques Data Integrity Mechanism Using a Cryptographic Check Function Employing a Block Cipher Algorithm. </title> <year> 1989. </year>
Reference-contexts: Thus, f (m) a is a function that takes a message of m 1 blocks (or m` bits) and assigns it a tag of one block. The CBC MAC is an International Standard <ref> [7] </ref>, widely used, especially with the DES as the underlying cipher block function. Until recently, no solid theoretical ground was suggested to deal with the security of this method. The main interest is whether the security of the block cipher function f (e.g.
Reference: [8] <author> M. Luby and C. Rackoff. </author> <title> How to Construct Pseudorandom Permutations from Pseudorandom Functions. </title> <note> In SIAM Journal on Computing , 17(2), </note> <month> April </month> <year> 1988. </year>
Reference-contexts: Namely, consider the block cipher as a family of functions, so that each key determines a function in the family. Then we assume that this family is a pseudo random family of functions. This approach to security of a cipher scheme was suggested by Luby and Rackoff <ref> [8, 9] </ref>, and the notion of a family of pseudo random functions was suggested by Goldreich, Goldwasser and Micali [4]. We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack.
Reference: [9] <author> M. Luby and C. Rackoff. </author> <title> A Study of Password Security. </title> <booktitle> In Advances in Cryptology - Crypto 87 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 293, </volume> <editor> C. Pomerance ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Namely, consider the block cipher as a family of functions, so that each key determines a function in the family. Then we assume that this family is a pseudo random family of functions. This approach to security of a cipher scheme was suggested by Luby and Rackoff <ref> [8, 9] </ref>, and the notion of a family of pseudo random functions was suggested by Goldreich, Goldwasser and Micali [4]. We say that a MAC from fl to f0; 1g ` is secure if it resists existential forgery under adaptive message attack.
Reference: [10] <author> G. Tsudik, </author> <title> Message Authentication with One-Way Hash Functions. </title> <booktitle> In Proceedings of Infocom 92, </booktitle> <publisher> IEEE Press, </publisher> <year> 1992. </year>
Reference-contexts: See the later for more details and references. One should also note the MD5 hashing function suggested by Rivest [11], and while no attack has been suggested so far, there is also no proof that it is secure. Tsudik was the first to suggest "keyed hashing" authentication using MD5 <ref> [10] </ref>, and many other authentications may be used with MD5 as an underlying hash function. We also mention the work of Bellare, Guerin, and Rogaway [2], who suggested a new type of (provably secure) authentication based on performing exclusive or's on encryptions of the input blocks.
Reference: [11] <author> R. Rivest, </author> <title> The MD5 message digest algorithm. </title> <institution> IETF RFC-1321, </institution> <year> 1992. </year>
Reference-contexts: Following that, efficient applications of this procedure were suggested by Krawczyk [6], Stinson [14], Shoup [13], and Rogaway [12]. See the later for more details and references. One should also note the MD5 hashing function suggested by Rivest <ref> [11] </ref>, and while no attack has been suggested so far, there is also no proof that it is secure. Tsudik was the first to suggest "keyed hashing" authentication using MD5 [10], and many other authentications may be used with MD5 as an underlying hash function.
Reference: [12] <author> P. Rogaway. </author> <title> Bucket Hashing and its Application to Fast Message Authentication. </title> <booktitle> In Advances in Cryptology - Crypto 95 Proceedings, </booktitle> <pages> pages 29-42, </pages> <year> 1995. </year>
Reference-contexts: Wegman and Carter [15] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [6], Stinson [14], Shoup [13], and Rogaway <ref> [12] </ref>. See the later for more details and references. One should also note the MD5 hashing function suggested by Rivest [11], and while no attack has been suggested so far, there is also no proof that it is secure.
Reference: [13] <author> V. Shoup. </author> <title> On fast and Provably Secure Message Authentication based on Universal Hashing. </title> <booktitle> In Advances in Cryptology - Crypto 96 Proceedings, </booktitle> <year> 1996. </year>
Reference-contexts: Wegman and Carter [15] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [6], Stinson [14], Shoup <ref> [13] </ref>, and Rogaway [12]. See the later for more details and references. One should also note the MD5 hashing function suggested by Rivest [11], and while no attack has been suggested so far, there is also no proof that it is secure.
Reference: [14] <author> D. Stinson. </author> <title> Universal Hashing and Authentication Codes. In Designs, </title> <journal> Codes and Cryptography, </journal> <volume> vol. 4, </volume> <pages> 369-380, </pages> <year> 1994. </year>
Reference-contexts: Wegman and Carter [15] suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [6], Stinson <ref> [14] </ref>, Shoup [13], and Rogaway [12]. See the later for more details and references. One should also note the MD5 hashing function suggested by Rivest [11], and while no attack has been suggested so far, there is also no proof that it is secure.
Reference: [15] <author> M. Wegman and L. Carter. </author> <title> New Hash Functions and their use in Authentication and Set Equality. </title> <editor> In J. </editor> <booktitle> of Computer and System Sciences 22, </booktitle> <pages> 265-279, </pages> <year> 1981. </year>
Reference-contexts: In this way, it is possible to study non-asymptotic ciphers schemes, such as DES (which is only defined on a block of 64 bits). We follow this approach. 1.4 Related works There are various approaches to authentication other then CBC MAC. Wegman and Carter <ref> [15] </ref> suggested to hash a message using almost universal 2 family of hash functions and then encrypt it (using probabilistic encryption). Following that, efficient applications of this procedure were suggested by Krawczyk [6], Stinson [14], Shoup [13], and Rogaway [12]. See the later for more details and references.
References-found: 15

