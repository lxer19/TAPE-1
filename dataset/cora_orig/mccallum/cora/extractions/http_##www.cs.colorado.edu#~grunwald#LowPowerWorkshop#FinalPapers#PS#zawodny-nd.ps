URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/FinalPapers/PS/zawodny-nd.ps
Refering-URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/agenda.html
Root-URL: http://www.cs.colorado.edu
Email: fjzawodny,ejohnson,jbb,koggeg@cse.nd.edu  
Title: Cache-In-Memory: A Lower Power Alternative?  
Author: Jason T. Zawodny, Eric W. Johnson Jay B. Brockman, Peter M. Kogge 
Address: Valparaiso University  
Affiliation: University of Notre Dame  
Abstract: The concept of Processing-In-Memory (PIM) achieves many benefits by placing memory and processing logic on the same chip, utilizing more of the available bandwidth and reducing both the power and time associated with memory accesses. Typical architectures, even current single-chip microprocessors with on-chip memory, rely on traditional cache hierarchies. This paper serves to explore the possible performance and power improvement of "migrating" the cache into the memory itself. This idea, which we call Cache-In-Memory (CIM) utilizes the sense-amplifiers inside the memory array to perform this function. Early results indicate that the most trivial implementations of this technique provide comparable power efficiency with reasonable performance. However, the increase in resident DRAM has yet to be explored. Ongoing work strives to further solidify the tools needed for energy and performance simulations as well as explore the potential capacity benefits as well. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [1] <author> Brockman, Jay B., and Peter M. Kogge, </author> <title> The Case for PIM, </title> <journal> Notre Dame CSE TR-9707, Jan. </journal> <volume> 10, </volume> <year> 1997. </year>
Reference: [2] <author> Cmelik, B. </author> <title> The SHADE simulator, </title> <note> Sun-Labs Technical Report 1993 </note>
Reference-contexts: The row is then decoded from the middle bits, followed by the subrow. The word and byte bits are, of course, the least significant bits, but these do not matter to the memory array. 4 Description of the Model Some initial experiments with CIM were conducted using the Shade <ref> [2] </ref> tool from Sun Microsys-tems, Inc.
Reference: [3] <author> Fromm, Richard, ET AL., </author> <title> The Energy Efficiency of IRAM Architectures, </title> <booktitle> In Conference Proceedings, 1997 International Symposium on Computer Architecture (Denver, </booktitle> <address> Colorado, </address> <month> June </month> <year> 1997), </year> <pages> pp. 327-337. </pages>
Reference: [4] <author> Kogge, Peter M., </author> <title> EXECUBE- A New Architecture for Scalable MPPs, </title> <booktitle> 1994 International Conference on Parallel Processing. </booktitle>
Reference: [5] <institution> Nanda, Kartik, SRAM Energy Modeleing , Notre Dame CSE Technical Report, </institution> <month> June </month> <year> 1998. </year>
Reference-contexts: This simulator is aimed at comparing the time and energy performance of traditional structures to CIM structures. We are integrating energy and timing numbers from separate software to achieve a reasonable degree of realism in these simulations <ref> [5] </ref>. 5 Test Suite A reasonable effort was expended in collecting typical yet diverse applications to analyze using the Shade-based simulators. These applications are listed and described in in Table 1. <p> While these hit rates are not stellar, they show promise for the performance and energy efficiency of CIM. 7 Energy Estimation Parameters As mentioned before, energy values in this study are derived from separate software which computes SRAM size, time, and energy <ref> [5] </ref>. The basis for this simulator was the IBM 7LD .25 DRAM and logic process [10]. Using these parameters and requesting moderate energy and time constraints on the SRAM simulator, we were able to generate the tag and data array numbers directly.
Reference: [6] <author> Hennessey, John, and David Patterson, </author> <title> Computer Architecture: A Quantitative Approach, Second Edition, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1996 </year>
Reference-contexts: We have presented approximate hit rates for the CIM architecture of 90% instruction and 60% data. If we look at typical hit rates for split 8KB direct mapped caches, we find rates of approximately 99% instruction and 90% data <ref> [6] </ref>. This illustrates that the normal cache architecture should be more efficient in terms of power. Next we examine the energy associated with cache misses. Again looking in Tables 4 and 5 we find that CIM holds an edge in per access energy for misses. <p> Table 8 shows the hit rates that the simulator achieved using each processor and memory combination. For the most part, the results for the traditional cache structure falls close to the expected figure. Except for the FpMatrMult data result, which we expect to thrash the cache <ref> [6] </ref>, all other programs approach or exceed the 99% instruction and 90% data rates expected. The results for the CIM simulations also show good correlation between previous study and these simulations, meeting or exceeding the 90% instruction and 60% data hit rates.
Reference: [7] <editor> Saulsbury, Ashley, ET AL., </editor> <title> Missing the Memory Wall: The Case for Processor/Memory Integration, </title> <booktitle> In Proceedings of the 23rd Annual International Symposium on Computer Architecture (Philadelphia, </booktitle> <address> Pennsylvania, </address> <month> May, </month> <year> 1996), </year> <pages> pp. </pages> <note> 90-101 [8] http://notes.sematech.org/97melec.htm [9] http://www.chips.ibm.com/products/embedded/ chips/401core.html [10] http:www.chips.ibm.com/services/foundry/ technology/cmos7ld.html [11] http:www.mitsubishichips.com/products/mcu/ m32rd/m32rd.htm [12] http:www.usa.samsungsemi.com/new/dram-asic.htm 6 </note>
Reference-contexts: That work considered the memory as a "black box," accepting current DRAM structures without modification. Newer studies have investigated the effects of retaining entire lines of DRAM within the memory array using the sense-amplifiers, those projects looked at performance <ref> [7] </ref>. This study approaches the idea from a power efficiency standpoint. In this paper, we discuss the ongoing simulation of the CIM architecture and the results derived from preliminary simulations. <p> Studies have shown show how much performance and energy gain can be obtained from creating systems on a single chip while leaving the memory arrays virtually unchanged [3][4]. And there have been some performance estimates of more interesting ways to utilize the proximity <ref> [7] </ref>. Memory devices are constructed of smaller arrays. The reasons involve the ability to drive and sense signal changes across limited distances due to capacitance in the wiring, as well as providing convenient redundancy. <p> The time performance is around 50% slower, however, in looking at these results we should remember that this was the first design point simulated. A range of row and column sizes need to be explored. Looking at the effect of increases in associativity <ref> [7] </ref> and small L1 caches are possible next steps. We will continue to look at how to choose bits from the address to build each of field for the sub-array and row mapping.
References-found: 8

