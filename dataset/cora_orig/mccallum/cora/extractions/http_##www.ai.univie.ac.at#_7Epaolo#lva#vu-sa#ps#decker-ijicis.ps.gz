URL: http://www.ai.univie.ac.at/%7Epaolo/lva/vu-sa/ps/decker-ijicis.ps.gz
Refering-URL: http://www.ai.univie.ac.at/%7Epaolo/lva/vu-sa/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: CSNET: decker@cs.umass.edu, lesser@cs.umass.edu  
Title: Generalizing the Partial Global Planning Algorithm  
Author: Keith S. Decker Victor R. Lesser 
Date: June 21, 1993  
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: fl To appear in the International Journal of Intelligent Cooperative Information Systems, 1(2), pp. 319-346, 1992. This work was supported by DARPA contract N00014-92-J-1698, and partly by the Office of Naval Research under a University Research Initiative grant, number N00014-86-K-0764, and NSF contract CDA 8922572. The content of the information does not necessarily reflect the position or the policy of the Government and not official endorsement should be inferred. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James F. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <year> 1984. </year>
Reference-contexts: From Allen <ref> [1] </ref>, these include before, equal, meets, overlaps, during, starts, finishes, and their inverses. Temporal relations may be preferences (soft constraints) as well as absolute relations. There are three levels of temporal constraints. Hard constraints cannot be violated. The inability to satisfy hard constraints means that the problem is overconstrained.
Reference: [2] <author> Mark Boddy and Thomas Dean. </author> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: These agents can appear in human systems and systems where agents use approximate processing or anytime algorithm techniques <ref> [12, 2] </ref>. In the PA scenario in Section 3, the mission planner might solve its dilemma by using different algorithms to respond to each plan request.
Reference: [3] <author> C. A. Broverman, K. E. Huff, and V. R. Lesser. </author> <title> The role of plan recognition in design of an intelligent user interface. </title> <booktitle> In Proceedings of the IEEE Systems, Man, and Cybernetics Conference, </booktitle> <pages> pages 863-868, </pages> <address> Atlanta, Georgia, </address> <year> 1987. </year>
Reference-contexts: It is a flexible approach to coordination that does not 1 Some computer supported cooperative work (CSCW) research has concentrated on the act of the intelligent assistant discovering the goals of the human worker <ref> [3] </ref>. 5 assume any particular distribution of subproblems, expertise, or other resources, but instead lets nodes coordinate in response to the current situation. Each node can represent and reason about the actions and interactions of groups of nodes and how they affect local activities.
Reference: [4] <author> Paul R. Cohen. </author> <booktitle> A survey of the eighth national conference on artificial intelligence: Pulling together or pulling apart? AI Magazine, </booktitle> <volume> 12(1) </volume> <pages> 16-41, </pages> <month> Spring </month> <year> 1991. </year>
Reference-contexts: In order to build predictive models of how to best coordinate in an environment, we need to decide how to characterize the environment with respect to the behaviors in which we are interested <ref> [4] </ref>. This process includes both deciding what aspects need to be represented, and to what accuracy. We are performing such an environmental assessment for what we contend is a large class of agent architectures 24 and tasks, using a simulation model.
Reference: [5] <author> S. E. Conry, K. Kuwabara, V. R. Lesser, and R. A. Meyer. </author> <title> Multistage negotiation for distributed constraint satisfaction. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6), </volume> <month> November </month> <year> 1991. </year>
Reference-contexts: Where the PGP mechanisms exchanged all local information, our extensions would allow for a multi-stage process <ref> [5] </ref> where agents would communicate only the information believed relevant to the issue at hand. Agents could ask for more contextual information when it is needed to resolve a conflict between agents. Agents would not automatically acquire information from other agents performing non-related problem solving activities.
Reference: [6] <author> Daniel D. Corkill and Victor R. Lesser. </author> <title> The use of meta-level control for coordination in a distributed problem solving network. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 748-755, </pages> <month> August </month> <year> 1983. </year>
Reference-contexts: This approach views the coordination mechanism as modulating local control, not supplanting it a two level distributed search process that makes a clear distinction between coordination behavior and local scheduling <ref> [6, 25] </ref> (See Section 4 and Figure 3). By concentrating on the creation of local scheduling constraints, we avoid the sequentiality of scheduling in partial global planning that occurs when there are multiple plans.
Reference: [7] <author> Thomas Dean. </author> <title> Planning, execution, and control. </title> <booktitle> In Proceedings of the DARPA Knowledge-based Planning Workshop, </booktitle> <month> December </month> <year> 1987. </year>
Reference-contexts: The node plan structure could also be expanded with contingency plans for routine expectation failures <ref> [7] </ref> to allow for predictability in the face of a changing environment.
Reference: [8] <author> Keith Decker, Alan Garvey, Marty Humphrey, and Victor Lesser. </author> <title> A blackboard system for real-time control of approximate processing. </title> <booktitle> In Proceedings of the 25th Hawaii International Conference on System Sciences, </booktitle> <month> January </month> <year> 1992. </year> <note> Extended version to appear in the International Journal of Pattern Recognition and Artificial Intelligence 7(2) 1993. 25 </note>
Reference-contexts: to certain goal characteristics, and add explicit slack to schedules [11]. 3.3 Real-time Agents What happens when time becomes an integral part of local and shared goals? Dynamic agents will be able to modify both task durations (perhaps trading them off for other task characteristics) and the goal deadlines themselves <ref> [8, 17] </ref>. <p> agent will make use of periodic tasks, which occur in a predictable fashion, and known non-periodic tasks, to build a opportunistic planning framework that can keep an agent from painting itself into a corner with purely reactive planning techniques, or from exhaustively planning uncertain future details with reflective planning techniques <ref> [8, 17] </ref>. 10 3.4 Negotiating Agents A direct consequence of heterogeneous, dynamic, and real-time agents is the need for negotiation to solve conflicts. Even with a known global decision evaluation function, conflicting decisions of equal global value may have very different local value to the agents.
Reference: [9] <author> Keith S. Decker, Alan J. Garvey, Marty A. Humphrey, and Victor R. Lesser. </author> <title> Effects of parallelism on blackboard system scheduling. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 15-21, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year> <note> Extended version to appear in the International Journal of Pattern Recognition and Artificial Intelligence 7(2) 1993. </note>
Reference-contexts: The original partial global planning algorithm requires only a fraction of these relationships, to be discussed in the next section. We have found several of these relationships to be useful in scheduling tasks for parallel execution as well <ref> [9] </ref>. The basic framework of the objective model is to formally specify how the execution and timing of tasks affect this measure of quality.
Reference: [10] <author> Keith S. Decker, Alan J. Garvey, Victor R. Lesser, and Marty A. Humphrey. </author> <title> An approach to modeling environment and task characteristics for coordination. </title> <editor> In Charles J. Petrie, Jr., editor, </editor> <title> Enterprise Integration Modeling: </title> <booktitle> Proceedings of the First International Conference. </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: If the result received is of less than maximal quality, d is reduced by the proportion quality received maximal quality . Communication after the start of processing has no effect. A fuller treatment of the mathematical details can be found in <ref> [10] </ref>. The task environment structure is an abstract model of the agents' environment that can be used for analysis and simulation. The objective level describes the essential structure of a particular problem-solving situation or instance over time. <p> Each task group has a deadline D (T ). The quality of the execution or result of each task influences the quality of the task group result Q (T ) in a precise way <ref> [10] </ref>. These quantities, deadline and quality, can be used to evaluate the performance of a system. <p> We have found several of these relationships to be useful in scheduling tasks for parallel execution as well [9]. The basic framework of the objective model is to formally specify how the execution and timing of tasks affect this measure of quality. See <ref> [10] </ref> for details and more formal definitions of the task environment model, and also Section 6.1. 4.1 Building an Augmented Goal Model for the DVMT In generalizing the PGP algorithm for the DVMT, we will replace the PGP notion of i-goals with augmented goals, patterned after out task environment model structures.
Reference: [11] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Analyzing a quantitative coordination relationship. Group Decision and Negotiation, </title> <booktitle> 2(3) </booktitle> <pages> 195-217, </pages> <year> 1993. </year>
Reference-contexts: We expect that different strategies will be useful depending on the characteristics of the problem being solved and the domain or environment involved. Thus we are also developing a model of how the characteristics of the environment and task effect the coordination behavior of such a strategy <ref> [11] </ref>. For example, the DVMT environment is characterized by the presence of many overlapping and facilitative goals, while computer-supported design environments are overwhelmed by constraint relationships, and office environments by enablement and non-computational (physical) resource constraints. <p> The node plan structure could also be expanded with contingency plans for routine expectation failures [7] to allow for predictability in the face of a changing environment. Agents can also make commitments to certain goal characteristics, and add explicit slack to schedules <ref> [11] </ref>. 3.3 Real-time Agents What happens when time becomes an integral part of local and shared goals? Dynamic agents will be able to modify both task durations (perhaps trading them off for other task characteristics) and the goal deadlines themselves [8, 17]. <p> The existing hill-climbing algorithm for scheduling may no longer be appropriate, and is one reason why we now advocate the separation of coordination and local scheduling. Our initial experiments with a real-time local scheduler <ref> [11] </ref> show that a large part of distributed real-time performance emerges from sophisticated local real-time scheduling capabilities [17]. <p> The agent receiving this information may not even know that it has (will have) the facilitated local goal. The receiving agent should add a representation of the work required at the predicted time to the current local schedule, potentially delaying the facilitated local goal (see <ref> [11] </ref> for a discussion of how long to delay), and potentially changing the predicted duration or result quality of the goal. The remote agent who has the facilitating goal will commit to a communication deadline and minimum quality for the communicated result. <p> On the other hand, our measurements are against a real-time scheduling algorithm that likewise does not take these factors into account. Finally, the addition of such structure to tasks begs the addition of new coordination relationships (especially subtask). Our initial results <ref> [11] </ref> are based on the detection of, and coordination by, the facilitates coordination relationship only. <p> The strategy is currently being extended to handle a more complex environment, and to take advantage of more complex problem-solving methods. Experiments are currently being conducted to examine the effect of each coordination rule on each agent's computational load, communications load, and problem-solving results <ref> [11] </ref>. Each coordination rule should be considered a temporarily settled question, subject to being reopened in the domain setting [18]. This idea leads to extending a coordination strategy so that agents can negotiate about the strategy itself.
Reference: [12] <author> Keith S. Decker, Victor R. Lesser, and Robert C. Whitehair. </author> <title> Extending a blackboard architecture for approximate processing. </title> <journal> The Journal of Real-Time Systems, </journal> 2(1/2):47-79, 1990. 
Reference-contexts: These agents can appear in human systems and systems where agents use approximate processing or anytime algorithm techniques <ref> [12, 2] </ref>. In the PA scenario in Section 3, the mission planner might solve its dilemma by using different algorithms to respond to each plan request. <p> I-goals had expected durations; node-plans anchored (mapped) the completion of the various i-goals to a plan activity map. Experiments were conducted with the local incremental planner that did indicate the ability to plan to meet deadlines in a single agent <ref> [28, 12] </ref>. In extending the architecture to so-called real-time problem-solving, agents may have goals with hard deadlines, which add constraints to the construction of a plan activity map. <p> The term quality in the model summarizes several possible properties of actions or results in a real system: certainty, precision, and completeness of a result, for example <ref> [12] </ref>. Quality of an agent's performance on an individual task is a function of the timing and choice of agent actions (`local effects'), and possibly previous task executions (`non-local effects'). When local or non-local effects exist between tasks that are known by more than one agent, they become coordination relationships. <p> However, we wanted to take advantage of new characteristics of our environment that did not exist when the original PGP was designed, such as a real-time scheduler and approximate data processing algorithms <ref> [12] </ref>. Therefore we detect some coordination relationships that could never have occurred in the original system, and handle them appropriately. Thus the resulting algorithm is not only generalized because it is domain-independent, but also because it has been extended to react to new goal interactions. <p> Facilitation relationships are generated between tasks with a base probability that decreases linearly with the difference between task arrivals. Each agent uses a highly sophisticated design-to-time (DTT) real-time local scheduler based on the concept of approximate processing <ref> [17, 12] </ref>. The DTT scheduler will choose a method for a task based on the amount of time available for that task and the other tasks currently on the agenda.
Reference: [13] <author> E. Durfee and V. Lesser. </author> <title> Predictability vs. responsiveness: Coordinating problem solvers in dynamic domains. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 66-71, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: When network, data, and problem-solving characteristics change and communication channels have delay and limited capacity, nodes can locally respond to new situations, still cooperating but with potentially less effectiveness because they have somewhat inconsistent PGPs <ref> [13] </ref>. <p> The node plan structure can be modified to hold ranges as well as a best current estimate for a value, but it is also likely that agents will have to reason and perhaps negotiate about predictability versus reliability issues as well <ref> [13] </ref>. The node plan structure could also be expanded with contingency plans for routine expectation failures [7] to allow for predictability in the face of a changing environment.
Reference: [14] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Incremental planning to control a time-constrained, blackboard-based problem solver. </title> <journal> IEEE Transactions on Aerospace and Electronic Systems, </journal> <volume> 24(5) </volume> <pages> 647-662, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: Each intermediate goal was an abstraction of the processing and integration work that each node planned for locally. These intermediate goals were ordered by the local node planners based on several criteria <ref> [14] </ref>, but these relationships are not transmitted in the node plans. The PGPlanner reorders node activities by hill-climbing in the space of costs of the present ordering of activities. The cost of an ordering is computed from relationships like redundancy, reliability, predictiveness, and independence of the activities. <p> Planning for the simultaneous achievement of multiple goals is not supported. The modularity of the PGP mechanism (which separates the local agent's incremental planner <ref> [14] </ref> from the PGPlanner) comes close to permitting heterogeneous local decision criteria. The only problem arises when the PGPlanner reorders the node plan for another agent.
Reference: [15] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Negotiating task decomposition and allocation using partial global planning. </title> <editor> In L. Gasser and M. N. Huhns, editors, </editor> <booktitle> Distributed Artificial Intelligence, </booktitle> <volume> Vol. II. </volume> <publisher> Pitman Publishing Ltd., </publisher> <year> 1989. </year>
Reference-contexts: A node is underutilized if it is either idle or participates in only low-rated PGPs. A node is overburdened if its estimated completion time of a subgoal of goal G is much later than the completion time of all the other subgoals of G <ref> [15] </ref>. * It assumes that a goal is more likely to be correct if it is compatible with goals at other nodes. In the DVMT task, a goal represented a processing task to ascertain whether a vehicle was moving in a region r at time t.
Reference: [16] <author> E.H. Durfee and V.R. Lesser. </author> <title> Partial global planning: A coordination framework for distributed hypothesis formation. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(5) </volume> <pages> 1167-1183, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The partial global planning (PGP) approach to distributed coordination increased the coordination of agents in the network by avoiding redundant activities, shifting tasks to idle nodes, and providing predictive results <ref> [16] </ref> in short, by informing local scheduling of non-local considerations. It grew out of the observation (made while studying functionally accurate, cooperative distributed problem solving (FA/C)[26, 25]) that agents do not have to be totally coherent in their behavior in every situation to make a coordination approach worthwhile. <p> Section 5 describes the design and implementation of a particular example of a domain-independent coordination strategy, the generalized partial global planning mechanism, followed by examples of its use in a greatly modified DVMT. 2 Partial Global Planning Partial global planning <ref> [16] </ref> was developed as a distributed control technique to insure coherent network problem solving behavior. <p> Each node can maintain its own set of PGPs that it may use independently and asynchronously to coordinate its activities. A PGP contains an objective, a plan-activity-map, a solution-construction-graph and a status <ref> [16] </ref>: * The objective contains information about why the PGP exists, including its eventual goal (the larger solution being formed) and its importance (a priority rating or reasons for pursuing it). * The plan-activity-map represents what the nodes are doing, including the major plan steps the nodes are concurrently taking, their
Reference: [17] <author> Alan Garvey and Victor Lesser. </author> <title> Design-to-time real-time scheduling. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 23(6), </volume> <year> 1993. </year> <note> Special Issue on Scheduling, Planning, and Control. </note>
Reference-contexts: to certain goal characteristics, and add explicit slack to schedules [11]. 3.3 Real-time Agents What happens when time becomes an integral part of local and shared goals? Dynamic agents will be able to modify both task durations (perhaps trading them off for other task characteristics) and the goal deadlines themselves <ref> [8, 17] </ref>. <p> Our initial experiments with a real-time local scheduler [11] show that a large part of distributed real-time performance emerges from sophisticated local real-time scheduling capabilities <ref> [17] </ref>. Often in real time situations planning is reactive, where the current situation mostly controls an agent's actions (where the current situation may include both local and global information), rather than reflective, where a sequence of actions is planned out in some detail before execution. <p> agent will make use of periodic tasks, which occur in a predictable fashion, and known non-periodic tasks, to build a opportunistic planning framework that can keep an agent from painting itself into a corner with purely reactive planning techniques, or from exhaustively planning uncertain future details with reflective planning techniques <ref> [8, 17] </ref>. 10 3.4 Negotiating Agents A direct consequence of heterogeneous, dynamic, and real-time agents is the need for negotiation to solve conflicts. Even with a known global decision evaluation function, conflicting decisions of equal global value may have very different local value to the agents. <p> Facilitation relationships are generated between tasks with a base probability that decreases linearly with the difference between task arrivals. Each agent uses a highly sophisticated design-to-time (DTT) real-time local scheduler based on the concept of approximate processing <ref> [17, 12] </ref>. The DTT scheduler will choose a method for a task based on the amount of time available for that task and the other tasks currently on the agenda.
Reference: [18] <author> Les Gasser, N. F. Rouquette, R. W. Hill, and J. Lieb. </author> <title> Representing and using organizational knowledge in distributed AI systems. </title> <editor> In L. Gasser and M. N. Huhns, editors, </editor> <booktitle> Distributed Artificial Intelligence, </booktitle> <volume> Vol. II. </volume> <publisher> Pitman Publishing Ltd., </publisher> <year> 1989. </year>
Reference-contexts: Experiments are currently being conducted to examine the effect of each coordination rule on each agent's computational load, communications load, and problem-solving results [11]. Each coordination rule should be considered a temporarily settled question, subject to being reopened in the domain setting <ref> [18] </ref>. This idea leads to extending a coordination strategy so that agents can negotiate about the strategy itself. For instance, in a real-time situation, an agent with a predicted bottleneck might restrict messages from other agents during the bottleneck.
Reference: [19] <author> M. R. Genesereth, M. L. Ginsberg, and J. S. Rosenschein. </author> <title> Cooperation without communication. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 51-57, </pages> <address> Philadelphia, PA., </address> <month> August </month> <year> 1986. </year>
Reference-contexts: Less uncertainty in the environment means less uncertainty in the existence and extent of the CRs, less uncertainty in local scheduling, and therefore less complex coordination behavior (communication, negotiation, partial plans, etc) is needed (for example, one can have cooperation without communication <ref> [19] </ref>). A secondary problem is the lack of infinite computational resources/time, resulting in the necessity of satisficing, not optimal, behaviors.
Reference: [20] <author> Barbara Hayes-Roth. </author> <title> A blackboard architecture for control. </title> <journal> Artificial Intelligence, </journal> <volume> 26 </volume> <pages> 251-321, </pages> <year> 1985. </year>
Reference-contexts: Satisfaction of such a goal is not black-and-white, but is a continuum of degrees of satisfaction with different solutions. As problem solving commences, each DVMT node builds a hierarchical, BB1-style control plan <ref> [20] </ref> that describes the set of concurrent tasks that the node is currently pursuing, for example, a node might be tracking two vehicles (using different methods) and looking out for any new vehicles (see Figure 4 and Figure 5).
Reference: [21] <author> Carl Hewitt. </author> <title> Offices are open systems. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 4(3) </volume> <pages> 271-287, </pages> <month> July </month> <year> 1986. </year>
Reference-contexts: For example, in the office environment, both independent computerized agents (usually controlling access to resources) and intelligent assistants to office workers can exist [30]. In real 4 offices, activity is taking place semi-autonomously, and centralized control and detailed global views are rarely available or socially possible <ref> [21, 31] </ref>.
Reference: [22] <author> Carl Hewitt. </author> <title> Open information systems semantics for distributed artificial intelligence. </title> <journal> Artificial Intelligence, </journal> <volume> 47(1) </volume> <pages> 79-106, </pages> <year> 1991. </year>
Reference-contexts: The tactical planner and system status may negotiate over the amount of time that the damaged sensor can be used if the situation arises. 11 The primary interruption to this smooth flow of information is uncertainty. Uncertainty also flows from the environment (the open systems concept <ref> [22] </ref>), and through the above mechanisms to create local scheduling uncertainty.
Reference: [23] <author> Craig A. Knoblock. </author> <title> Search reduction in hierarchical problem solving. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> Anaheim, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: Two extensions need to be made. First, communicating goals at a single level of detail is inappropriate and potentially wasteful in more complex domains <ref> [23] </ref>; certainly the detection of the interactions of two goals (partial global goals) will not always be simple [33]. Secondly, many different methods may exist for accomplishing a goal, each with its own effects on duration, precision, and other goal characteristics.
Reference: [24] <author> Susan Lander and Victor R. Lesser. </author> <title> A framework for the integration of cooperative knowledge-based systems. </title> <booktitle> In Proceedings of the 4th IEEE International Symposium on Intelligent Control, </booktitle> <pages> pages 472-477, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: have different local problem solving criteria? This can arise in several ways: * Some agents in the system are humans with local (personal) decision criteria that cannot be adequately or fully modeled. * Some agents in the system have different expertise, and hence different local decision criteria (cooperative design problems <ref> [24] </ref>, pilot's associate-style problems [36]). The PA scenario in Section 3 is a classic example of heterogeneous agents with shared global goals and differing local expertise.
Reference: [25] <author> V. R. Lesser. </author> <title> A retrospective view of FA/C distributed problem solving. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1347-1363, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: This approach views the coordination mechanism as modulating local control, not supplanting it a two level distributed search process that makes a clear distinction between coordination behavior and local scheduling <ref> [6, 25] </ref> (See Section 4 and Figure 3). By concentrating on the creation of local scheduling constraints, we avoid the sequentiality of scheduling in partial global planning that occurs when there are multiple plans. <p> For example, the abstract domain of distributed search contains several potentially uncertain coordination relationships <ref> [25] </ref>. The primary uncertainty lies in the subgoal relationship: how a particular task relates to the problem as a whole.
Reference: [26] <author> Victor R. Lesser and Daniel D. Corkill. </author> <title> Functionally accurate, cooperative distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> SMC-11(1):81-96, </volume> <month> January </month> <year> 1981. </year>
Reference: [27] <author> Victor R. Lesser and Daniel D. Corkill. </author> <title> The distributed vehicle monitoring testbed. </title> <journal> AI Magazine, </journal> <volume> 4(3) </volume> <pages> 63-109, </pages> <month> Fall </month> <year> 1983. </year>
Reference-contexts: The resulting view was then used by an agent to plan or schedule the order that the agent's own goals would be accomplished. The PGPlanner, as it was used for coordination in the distributed vehicle monitoring task (finding, identifying, and tracking moving vehicles using acoustic sensor signals <ref> [27] </ref>), relied on the fact that the level of abstraction at which the node plans were communicated was a sequential sequence of intermediate goals (times and locations in which to extend a vehicle track).
Reference: [28] <author> Victor R. Lesser, Jasmina Pavlin, and Edmund Durfee. </author> <title> Approximate processing in real-time problem solving. </title> <journal> AI Magazine, </journal> <volume> 9(1) </volume> <pages> 49-61, </pages> <month> Spring </month> <year> 1988. </year>
Reference-contexts: I-goals had expected durations; node-plans anchored (mapped) the completion of the various i-goals to a plan activity map. Experiments were conducted with the local incremental planner that did indicate the ability to plan to meet deadlines in a single agent <ref> [28, 12] </ref>. In extending the architecture to so-called real-time problem-solving, agents may have goals with hard deadlines, which add constraints to the construction of a plan activity map.
Reference: [29] <author> Thomas W. Malone. </author> <title> Modeling coordination in organizations and markets. </title> <journal> Management Science, </journal> <volume> 33 </volume> <pages> 1317-1332, </pages> <year> 1987. </year>
Reference-contexts: To experimentally verify our formulations we are taking a tack somewhat between the analytical but perhaps too simplified approach of Malone <ref> [29] </ref> and the non-analytical but probably too specialized approach of the DVMT, by using a statistical simulation of a large class of CDPS environments. The simulation is driven by a task environment model constructed as briefly discussed in Section 4. In the experiments below, there were two task classes. <p> We are performing such an environmental assessment for what we contend is a large class of agent architectures 24 and tasks, using a simulation model. This simulation model is more complex than an analytical queueing theory based model <ref> [29] </ref> because it allows for non-independent tasks with multiple possible solution methods, and heterogeneous agent characterizations. Finally, we are examining formal characterizations of local agent behavior, such as local scheduling algorithms.
Reference: [30] <author> Thomas W. Malone and Kevin Crowston. </author> <title> Toward an interdisciplinary theory of coordination. </title> <type> Center for Coordination Science Technical Report 120, </type> <institution> MIT Sloan School of Management, </institution> <year> 1991. </year>
Reference-contexts: The goal structures constructed, maintained, and communicated by the original PGP mechanism are subsumed by this model. For example, in the office environment, both independent computerized agents (usually controlling access to resources) and intelligent assistants to office workers can exist <ref> [30] </ref>. In real 4 offices, activity is taking place semi-autonomously, and centralized control and detailed global views are rarely available or socially possible [21, 31].
Reference: [31] <author> Sergei Nirenburg and Victor Lesser. </author> <title> Providing intelligent assistance in distributed office environments. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 590-598. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: For example, in the office environment, both independent computerized agents (usually controlling access to resources) and intelligent assistants to office workers can exist [30]. In real 4 offices, activity is taking place semi-autonomously, and centralized control and detailed global views are rarely available or socially possible <ref> [21, 31] </ref>. <p> In the intelligent office assistant domain, then, generalized PGP can be applied to providing guidance to an office worker about how to prioritize tasks, given discovered coordination relationships between one worker's goals and the goals of others <ref> [31] </ref> 1 Coordination algorithms do not supply a solution for problems of negotiating outcomes or resolving disparate views, but rather try to avoid negative interactions between agent goals or planned actions (avoiding conflicting actions or inter-agent action sequences), and recognize positive or helpful interactions (such as the potential to do another
Reference: [32] <author> Charles Perrow. </author> <title> Complex Organizations. Random House, </title> <address> New York, </address> <year> 1986. </year>
Reference-contexts: The facilitates relationship, 3 Our description of the coordination process is consistent with social views of organizational coordination mechanisms or behaviors: the use of rules, regulations, and standards; the creation of supervisory and decision-making hierarchies; and specialization or departmentalization <ref> [32, 35] </ref>. Organizational structure can be viewed as part of the coordination algorithm. 12 therefore, has two parameters (called power parameters) d and q , that indicate the effect on duration and quality respectively.
Reference: [33] <author> William N. Robinson and Stephen Fickas. </author> <title> Negotiation freedoms for requirements engineering. </title> <type> Technical Report CIS-TR-90-04, </type> <institution> Department of Computer and Information Science, University of Oregon, </institution> <month> April </month> <year> 1990. </year>
Reference-contexts: Two extensions need to be made. First, communicating goals at a single level of detail is inappropriate and potentially wasteful in more complex domains [23]; certainly the detection of the interactions of two goals (partial global goals) will not always be simple <ref> [33] </ref>. Secondly, many different methods may exist for accomplishing a goal, each with its own effects on duration, precision, and other goal characteristics. This makes the existing PGP node plan 9 structure change rapidly when problem solving methods are changing dynamically (as an agent reacts to the problem being solved).
Reference: [34] <author> N. Sadeh and M. S. Fox. </author> <title> Preference propagation in temporal/capacity constraint graphs. </title> <type> Technical report CMU-RI-TR-89-2, </type> <institution> Robotics Institute, Carnegie Mellon University, </institution> <month> January </month> <year> 1989. </year>
Reference-contexts: Non-computational Resource Constraints: A final type of relation is the use of physical, non-computational resources. This is the major coordination relationship in some domains, such as factory scheduling and office automation <ref> [37, 34] </ref>. Partial global planning requires information about the resources each agent has to collect data. The original partial global planning algorithm requires only a fraction of these relationships, to be discussed in the next section.
Reference: [35] <author> W. Richard Scott. </author> <title> Organizations: Rational, Natural, and Open Systems. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1987. </year> <month> 27 </month>
Reference-contexts: The facilitates relationship, 3 Our description of the coordination process is consistent with social views of organizational coordination mechanisms or behaviors: the use of rules, regulations, and standards; the creation of supervisory and decision-making hierarchies; and specialization or departmentalization <ref> [32, 35] </ref>. Organizational structure can be viewed as part of the coordination algorithm. 12 therefore, has two parameters (called power parameters) d and q , that indicate the effect on duration and quality respectively.
Reference: [36] <author> David Smith and Martin Broadwell. </author> <title> Plan coordination in support of expert systems integration. </title> <booktitle> In Proceedings of the DARPA Knowledge-Based Planning Workshop, </booktitle> <pages> pages 12.1-12.6, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: The PGP framework does not deal with conflicts in physical resources. 3 Issues in Extending the PGP Mechanisms The global coherence problems we would like to address occur in many systems other than the DVMT, such as the Pilot's Associate (PA) system <ref> [36] </ref>, where situations occur that cause potentially complex and dynamically changing coordination relationships to appear between goals that are spread over several agents. Each agent in the Pilot's Associate system has subgoals that other agents must fulfill, and receives subgoals from other agents that only it can fulfill. <p> solving criteria? This can arise in several ways: * Some agents in the system are humans with local (personal) decision criteria that cannot be adequately or fully modeled. * Some agents in the system have different expertise, and hence different local decision criteria (cooperative design problems [24], pilot's associate-style problems <ref> [36] </ref>). The PA scenario in Section 3 is a classic example of heterogeneous agents with shared global goals and differing local expertise.
Reference: [37] <author> Frank v. Martial. </author> <title> Multiagent plan relationships. </title> <booktitle> In Proceedings of the Ninth Workshop on Distributed AI, </booktitle> <month> September </month> <year> 1989. </year>
Reference-contexts: Non-computational Resource Constraints: A final type of relation is the use of physical, non-computational resources. This is the major coordination relationship in some domains, such as factory scheduling and office automation <ref> [37, 34] </ref>. Partial global planning requires information about the resources each agent has to collect data. The original partial global planning algorithm requires only a fraction of these relationships, to be discussed in the next section.
Reference: [38] <author> Frank v. Martial. </author> <title> A conversation model for resolving conflicts among distributed office activities. </title> <booktitle> In Proceedings of the Fifth Conference on Office Information Systems, </booktitle> <pages> pages 99-108, </pages> <address> Cambridge, MA, </address> <month> April </month> <year> 1990. </year> <month> 28 </month>
References-found: 38

