URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tr.outbox/MIT-LCS-TR-691.ps.gz
Refering-URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/listings/tr600.html
Root-URL: 
Title: A Security Model for the Information Mesh  
Author: by Matthew N. Condell Karen R. Sollins 
Degree: Submitted to the Department of Electrical Engineering and Computer Science in partial fulfillment of the requirements for the degrees of Bachelor of Science in Computer Science and Engineering and Master of Engineering in Electrical Engineering and Computer Science at the  M.I.T. All rights reserved. Author  Certified by  Scientist Thesis Supervisor Accepted by F. R. Morgenthaler Chairman, Department Committee on Graduate Theses  
Note: Copyright  
Date: June 1996  1996  May 9, 1996  
Affiliation: MASSACHUSETTS INSTITUTE OF TECHNOLOGY  Department of Electrical Engineering and Computer Science  Research  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> Architecture Project Management, Ltd., "ANSA Security Framework", AR.009.00, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Introduction Modern authentication systems, such as Kerberos [7], are based on a model of a central policy server that must be queried to obtain permission to access other servers. This model, while effective, does not conform to the object model being used by many emerging distributed infrastructures <ref> [1, 5, 6] </ref>. This work proposes a security model for one such object-based system, The Information Mesh. The object model advocates the doctrine that objects manage their own destiny. <p> Cascaded authentication is also used in the server-based model proposed by Bull, Gong, and Sollins [3] which is the second work that forms the base for the Information Mesh's model. This model has been incorporated into the security framework for the ANSA project <ref> [1] </ref>. 3.1 Cascaded Authentication Cascaded authentication [13] was developed for use in an environment where cooperation must exist despite the absence of complete trust. A request for a service may require the invocation to be cascaded in order to fulfill it.
Reference: [2] <author> Berners-Lee, T., Masinter, L., McCahill, M., </author> <title> "Uniform Resource Locators (URL)", Network Working Group RFC 1738, </title> <month> December, </month> <year> 1994. </year>
Reference-contexts: Naming generally is used to provide three functions: identification, access, and description. To help support longevity, mobility, and evolution, the Information Mesh has separated these three functions. This is similar to work that's been done in the Uniform Resource Identifiers working group of the IETF <ref> [8, 14, 2] </ref>. Every object is assigned an oid (object identifier) which uniquely identifies the object through both space and time. This is similar to the URI working group's URN (Uniform Resource Name).
Reference: [3] <author> Bull, J. A., Gong, L., Sollins, K., </author> <title> "Towards Security in an Open Systems Federation", </title> <booktitle> Computer Security - ESORICS 92, </booktitle> <pages> pp. </pages> <publisher> 3-20 Springer-Verlag LNCS Series, </publisher> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: The first is a cascaded authentication protocol, developed by Sollins [13], that is used as the basic means of authentication. Cascaded authentication is also used in the server-based model proposed by Bull, Gong, and Sollins <ref> [3] </ref> which is the second work that forms the base for the Information Mesh's model. <p> The data and reply may also be encrypted with the conversation 21 key to assure that no one has tampered with them. 3.2 Server-based Security The Information Mesh's security policy is based on the server-based security model that was developed by Bull, Gong, and Sollins <ref> [3] </ref>. This model proposed that servers control their own security policies. It uses a modified version of the cascaded authentication protocols discussed above. <p> It uses a modified version of the cascaded authentication protocols discussed above. This section first discusses the motivation for a server-based security model, then describes the relevent features of the model. 3.2.1 Motivation One of the major contributions of Bull, Gong, and Sollins <ref> [3] </ref> is that they describe the advantages of a server-based security model over an infrastructure-based model. These arguments are important to understanding why a security model for the Information Mesh should be built on a server-based model. <p> One of the major arguments for a server-based model is that it is a natural model to use in an object-based system. A fundamental characteristic of objects is "you don't manage objects, objects manage themselves" <ref> [3] </ref>. So naturally, objects should control their own security policies otherwise there would be a foreign influence over the management of the objects. Reducing the granularity of the security policy (from security domains to servers) by giving servers control of their own policies has several positive effects. <p> Without one of these protections, an attacker could modify the unprotected data or reply and gain unauthorized access. The remaining changes to the protocol involve minor modifications to the access certificate. The first was suggested as part of the protocol for the server-based model <ref> [3] </ref>. It was noted that access certificates often start and end at the same server. This allows the initial certificate to be signed using a secret key that is known only to that server for additional security.
Reference: [4] <author> Dean, D., Felten, E., and Wallach, D., </author> <title> "Java Security: From HotJava to Netscape and Beyond", </title> <booktitle> IEEE Symp. on Security and Privacy, </booktitle> <year> 1996. </year>
Reference-contexts: This has some flaws. First, it depends upon the security of DNS. DNS security is not a safe assumption and has been a problem when implementing security managers for Java <ref> [4] </ref>. Second, it can not guard against an attacker who knows the IP address and port number of the destination server and can therefore bypass DNS. Another way to handle this is to designate false ports on each host.
Reference: [5] <institution> ISO/IEC DIS 10181-1 "Security Frameworks for Open Systems: Overview" </institution>
Reference-contexts: Introduction Modern authentication systems, such as Kerberos [7], are based on a model of a central policy server that must be queried to obtain permission to access other servers. This model, while effective, does not conform to the object model being used by many emerging distributed infrastructures <ref> [1, 5, 6] </ref>. This work proposes a security model for one such object-based system, The Information Mesh. The object model advocates the doctrine that objects manage their own destiny.
Reference: [6] <institution> ISO/IEC DIS 10746-1,2,3,4 "Basic Reference Model for Open Distributed Processing" </institution>
Reference-contexts: Introduction Modern authentication systems, such as Kerberos [7], are based on a model of a central policy server that must be queried to obtain permission to access other servers. This model, while effective, does not conform to the object model being used by many emerging distributed infrastructures <ref> [1, 5, 6] </ref>. This work proposes a security model for one such object-based system, The Information Mesh. The object model advocates the doctrine that objects manage their own destiny.
Reference: [7] <author> Kohl, J. and Neuman, C. </author> <title> "The Kerberos Network Authentication Service". </title> <type> RFC 1510, </type> <month> September </month> <year> 1993. </year>
Reference-contexts: Introduction Modern authentication systems, such as Kerberos <ref> [7] </ref>, are based on a model of a central policy server that must be queried to obtain permission to access other servers. This model, while effective, does not conform to the object model being used by many emerging distributed infrastructures [1, 5, 6]. <p> It also means that server-specific parts of a server's security policy can be built into its design. A final advantage is the wide range of security policies that it is possible to im 4 This can be contrasted to an infrastructure-based model, like Kerberos <ref> [7] </ref>, where access is granted at the time the Kerberos server issues a ticket, not when the service is requested. 22 plement when the granularity of policy enforcement is the server.
Reference: [8] <author> Kunze, J., </author> <title> "Functional Recommendations for Internet Resource Locators", Network Working Group RFC 1736, </title> <month> February </month> <year> 1995. </year>
Reference-contexts: Naming generally is used to provide three functions: identification, access, and description. To help support longevity, mobility, and evolution, the Information Mesh has separated these three functions. This is similar to work that's been done in the Uniform Resource Identifiers working group of the IETF <ref> [8, 14, 2] </ref>. Every object is assigned an oid (object identifier) which uniquely identifies the object through both space and time. This is similar to the URI working group's URN (Uniform Resource Name).
Reference: [9] <author> Mockapetris, P., </author> <title> "Domain names concepts and facilities", Network Working Group RFC 1034, </title> <journal> Nov. </journal> <volume> 1, </volume> <year> 1987. </year> <month> 68 </month>
Reference-contexts: Not all domains may have the geographic locality necessary to use gateway to redirect messages. There are several possible ways to solve this problem, though they all have some weaknesses. The first would be to use the Domain Name Service (DNS) <ref> [9, 10] </ref> to map server (host) names to the path server instead of to the actual host. This has some flaws. First, it depends upon the security of DNS. DNS security is not a safe assumption and has been a problem when implementing security managers for Java [4].
Reference: [10] <author> Mockapetris, P., </author> <title> "Domain names implementation and specification", Network Working Group RFC 1035, </title> <journal> Nov. </journal> <volume> 1, </volume> <year> 1987. </year>
Reference-contexts: Not all domains may have the geographic locality necessary to use gateway to redirect messages. There are several possible ways to solve this problem, though they all have some weaknesses. The first would be to use the Domain Name Service (DNS) <ref> [9, 10] </ref> to map server (host) names to the path server instead of to the actual host. This has some flaws. First, it depends upon the security of DNS. DNS security is not a safe assumption and has been a problem when implementing security managers for Java [4].
Reference: [11] <author> Needham, R. M., and Schroeder M. D., </author> <title> "Using encryption for authentication in large networks of computers". </title> <journal> CACM, </journal> <volume> Vol. 21, No. 12, </volume> <month> December </month> <year> 1978, </year> <pages> pp. 993-998. </pages>
Reference-contexts: Sollins' work assumes a secret key encryption scheme for her protocols, though she notes that it could be easily converted to a public key scheme as demonstrated by Needham and Schroeder <ref> [11] </ref>. The encryption should be chained 2 so it is possible to add some randomness to the encryption. The trade-offs between secret and public key cryptography will be discussed later in the context of the security model. <p> Sollins suggests using a pairwise authentication scheme similar to one suggested by Needham and Schroeder <ref> [11] </ref>. This scheme first requires an exchange with a trusted authentication server 3 to obtain a conversation key which will be used for the pairwise authentication. The following notation (in addition to the notation above) will be used to illustrate the protocol for getting a conversation key. <p> Public Keys All the protocols discussed so far have assumed the use of a private key encryption scheme. The protocols are easily converted to use a public key encryption scheme as demonstrated by Needham and Schroeder <ref> [11] </ref>. While the Information Mesh security model does not, and should not, specify which encryption scheme should be used 4 , it is important to look at the trade-offs between the two schemes.
Reference: [12] <author> Rivest, R. </author> <title> "The MD5 Message-Digest Algorithm", </title> <type> RFC 1321, </type> <month> April </month> <year> 1992. </year>
Reference-contexts: We will describe examples of service-specific information in the 36 discussion of particular servers in Chapter 5. We should note that we often want to be assured the data and reply are also authentic. If privacy is not an issue, we can accomplish this by encrypting the MD5 <ref> [12] </ref> of the information with the conversation key. This then can be used as proof of the information's authenticity. If privacy is an issue, though, we can just encrypt the information with the conversation key. This guarantees that an attacker has not tampered with the data or reply.
Reference: [13] <author> Sollins, K., </author> <title> "Cascaded Authentication", </title> <booktitle> Proc. of the IEEE Symp. on Security and Privacy, </booktitle> <address> Oakland, </address> <publisher> CS, </publisher> <month> April </month> <year> 1988, </year> <pages> pp. 156-163. </pages>
Reference-contexts: The first is a cascaded authentication protocol, developed by Sollins <ref> [13] </ref>, that is used as the basic means of authentication. Cascaded authentication is also used in the server-based model proposed by Bull, Gong, and Sollins [3] which is the second work that forms the base for the Information Mesh's model. <p> Cascaded authentication is also used in the server-based model proposed by Bull, Gong, and Sollins [3] which is the second work that forms the base for the Information Mesh's model. This model has been incorporated into the security framework for the ANSA project [1]. 3.1 Cascaded Authentication Cascaded authentication <ref> [13] </ref> was developed for use in an environment where cooperation must exist despite the absence of complete trust. A request for a service may require the invocation to be cascaded in order to fulfill it. <p> A nonce is included in the initial access certificate to add randomness to the encrypted information. The randomness is necessary to guard against a known cleartext 1 The access certificate is called a passport in Sollins' work <ref> [13] </ref>. 18 attack. Without the randomness, such an attack is possible since all the encrypted information is also made available in the clear.
Reference: [14] <author> Sollins, K., Masinter, L., </author> <title> "Functional Requirements for Uniform Resource Names" Network Working Group RFC 1737, </title> <month> December </month> <year> 1994. </year>
Reference-contexts: Naming generally is used to provide three functions: identification, access, and description. To help support longevity, mobility, and evolution, the Information Mesh has separated these three functions. This is similar to work that's been done in the Uniform Resource Identifiers working group of the IETF <ref> [8, 14, 2] </ref>. Every object is assigned an oid (object identifier) which uniquely identifies the object through both space and time. This is similar to the URI working group's URN (Uniform Resource Name).
Reference: [15] <author> Sollins K., Van Dyke J. R., </author> <title> "Linking in a Global Information Infrastructure", WWW Journal, </title> <booktitle> Conf. Proc. 4th International WWW Conf., </booktitle> <address> Boston, MA, </address> <month> Dec. </month> <year> 1995, </year> <pages> pp. 493-508. </pages>
Reference-contexts: Its goals can be summarized as: universality, longevity, mobility, evolution, resiliency, homogeneity, and heterogeneity. * Universality The Information Mesh should provide a single model of information identification and location for "network-based applications accessing information that is distributed both physically throughout the net and administratively across regions of differing management policies <ref> [15] </ref>." * Longevity The Information Mesh must be able to support long-lived information. Information and references to the information should be able to survive over long periods of time (greater than 100 years). <p> The Information Mesh should be designed to handle such failures gracefully. * Homogeneity In order for distinct applications and information to interact well, it is necessary for the Information Mesh to "provide a single model for information identification, location, and access, as a substrate for distributed systems and applications <ref> [15] </ref>." This provides a stable abstraction barrier that can allow increased functionality only when it is desired. * Heterogeneity The Information Mesh should be flexible enough to provide support in a diverse environment. <p> Implementations are also first class Mesh objects which contain concrete methods for actions, parts, and makers. 2.4 Mesh Links Mesh links <ref> [16, 15] </ref> give us the means to express relationships between Mesh objects. The discussion here will be brief since they do not relate to the security model. Mesh links provide two features for expressing relationships. The first is a generic link-role.
Reference: [16] <author> Van Dyke, J. R., </author> <title> "Link Architecture for a Global Information Infrastructure", </title> <address> MIT/LCS/TR-659, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Implementations are also first class Mesh objects which contain concrete methods for actions, parts, and makers. 2.4 Mesh Links Mesh links <ref> [16, 15] </ref> give us the means to express relationships between Mesh objects. The discussion here will be brief since they do not relate to the security model. Mesh links provide two features for expressing relationships. The first is a generic link-role.
Reference: [17] <author> Velez-Rivera, B. </author> <title> "Information Mesh Objects", </title> <note> Working Document. </note>
Reference-contexts: The Information Mesh takes advantage of one type of meta-information, called hints, to help translate oids to URLs. 14 2.3 Ob ject Model The Information Mesh object system <ref> [17] </ref> provides a typing model for objects that allows for the flexibility and evolution that is necessary to achieve the Mesh's goals. It is also designed to work in an environment where the enforcement of the typing is not guaranteed.
Reference: [18] <author> Velez-Rivera, B., and Bawden, A., </author> <title> "The Information Mesh Kernel", </title> <note> Working Document. </note>
Reference-contexts: This is important because "we can not depend on any universal agreement on issues like a best way to find information, the internal structure of information or how information is internally manipulated by programs <ref> [18] </ref>." The Information Mesh must be highly flexible to adapt to a diverse and ever changing environment. It must be able to support changing information, network infrastructures, expectations from applications, protocols, and whatever else may change in the future.
Reference: [19] <author> Voydock, V. L. and Kent, S. T. </author> <title> "Security Mechanisms in High-Level Network Protocols", </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 15, No. 2, </volume> <month> June </month> <year> 1983, </year> <month> pp.135-171. </month>
Reference-contexts: In order to do this, we must look at what kinds of attacks may be mounted against servers in the Information Mesh environment and determine which ones we will and will not attempt to guard against. Voydock and Kent <ref> [19] </ref> provide a good overview of possible threats and will be used as the basis of this discussion. The Information Mesh depends upon an environment where communication occurs over local and wide area networks. These networks consist of hosts interconnected by links 1 .
Reference: [20] <author> Wulf, W. A., Levin, R., and Harbison, S. P., HYDRA/C.mmp: </author> <title> An Experimental Computer System. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1981. </year> <month> 69 </month>
Reference-contexts: This policy representation does not evolve well because it relies on some universal agreement on the attribute which each bit represents. A solution to this problem may be suggested by the Hydra <ref> [20] </ref> capability system. Hydra designed a flexible security policy based on twenty-four bits. The first sixteen bits represented access control privileges to a fixed set of general operations. The last eight bits represented type specific privileges. Those bits represented access control for different operations in policies of different types.
References-found: 20

