URL: http://www.cs.toronto.edu/~dt/papers/cagd96/cagd96.ps.gz
Refering-URL: http://www.cs.toronto.edu/~dt/cad.html
Root-URL: http://www.cs.toronto.edu
Email: E-mail addresses: qin@cs.toronto.edu; dt@cs.toronto.edu  
Title: Triangular NURBS and their Dynamic Generalizations  
Author: Hong Qin and Demetri Terzopoulos 
Keyword: CAGD, Physics-Based Modeling, Triangular NURBS, Triangular B-splines, Dynamics, Constraints, Finite Elements, Solid Rounding, Scattered Data Fitting, Interactive Sculpting.  
Note: Published in Computer-Aided Geometric Design, ??(??):??-12??, 1996, in press.  
Address: 10 King's College Road, Toronto, Ontario, M5S 1A4  
Affiliation: Department of Computer Science, University of Toronto,  
Abstract: Triangular B-splines are a new tool for modeling a broad class of objects defined over arbitrary, non-rectangular domains. They provide an elegant and unified representation scheme for all piecewise continuous polynomial surfaces over planar triangulations. To enhance the power of this model, we propose triangular NURBS, the rational generalization of triangular B-splines, with weights as additional degrees of freedom. Fixing the weights to unity reduces triangular NURBS to triangular B-splines. Conventional geometric design with triangular NURBS can be laborious, since the user must manually adjust the many control points and weights. To ameliorate the design process, we develop a new model based on the elegant triangular NURBS geometry and principles of physical dynamics. Our model combines the geometric features of triangular NURBS with the demonstrated conveniences of interaction within a physics-based framework. The dynamic behavior of the model results from the numerical integration of differential equations of motion that govern the temporal evolution of control points and weights in response to applied forces and constraints. This results in physically meaningful hence highly intuitive shape variation. We apply Lagrangian mechanics to formulate the equations of motion of dynamic triangular NURBS and finite element analysis to reduce these equations to efficient numerical algorithms. We demonstrate several applications, including direct manipulation and interactive sculpting through force-based tools, the fitting of unorganized data, and solid rounding with geometric and physical constraints. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Auerbach, R. Gmelig Meyling, M. Neamtu, and H. Schaeben. </author> <title> Approximation and geometric modeling with simplex B-splines associated with irregular triangles. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 8(1) </volume> <pages> 67-87, </pages> <year> 1991. </year>
Reference-contexts: Traas [29] discussed the applicability of bivariate quadratic simplex splines as finite elements and derived differentiation and inner product formulas. Auerbach et al. <ref> [1] </ref> use bivariate simplex B-splines to fit geological surfaces to scattered data by adjusting the triangulation of the parametric domain in accordance with the data distribution. In 1993, the first experimental CAGD software based on the triangular B-spline was developed, demonstrating the practical feasibility of multivariate B-spline algorithms [9].
Reference: [2] <author> J. Baumgarte. </author> <title> Stabilization of constraints and integrals of motion in dynamical systems. </title> <journal> Comp. Meth. in Appl. Mech. and Eng., </journal> <volume> 1 </volume> <pages> 1-16, </pages> <year> 1972. </year>
Reference-contexts: This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [17] combines the Lagrange multipliers with the simpler penalty method. The Baumgarte stabilization method <ref> [2] </ref> solves constrained equations of motion through linear feedback control (see also [15, 28]). These techniques are appropriate for enforcing constraints on dynamic triangular NURBS.
Reference: [3] <author> M.I.G. Bloor and M.J. Wilson. </author> <title> Representing PDE surfaces in terms of B-splines. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 324-331, </pages> <year> 1990. </year>
Reference-contexts: A different area of research that provides background for our work in this paper is physics-based shape modeling. Terzopoulos and Fleischer [27] constructed free-form surfaces with natural dynamic behavior governed by the physical laws of elasticity and demonstrated simple interactive sculpting using viscoelastic and plastic models. Bloor and Wilson <ref> [3] </ref> demonstrated free-form design using tensor product B-splines and the optimization of energy functionals. Celniker and Gossard [4] developed an interesting prototype system for interactive design based on surface finite elements. Welch and Witkin [30] made similar use of trimmed hierarchical B-splines.
Reference: [4] <author> G. Celniker and D. Gossard. </author> <title> Deformable curve and surface finite elements for free-form shape design. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 257-266, </pages> <year> 1991. </year> <note> (Proc. ACM Siggraph'91). </note>
Reference-contexts: Terzopoulos and Fleischer [27] constructed free-form surfaces with natural dynamic behavior governed by the physical laws of elasticity and demonstrated simple interactive sculpting using viscoelastic and plastic models. Bloor and Wilson [3] demonstrated free-form design using tensor product B-splines and the optimization of energy functionals. Celniker and Gossard <ref> [4] </ref> developed an interesting prototype system for interactive design based on surface finite elements. Welch and Witkin [30] made similar use of trimmed hierarchical B-splines. Moreton and Sequin [18] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. <p> We express the kinetic energy due to a prescribed mass distribution function (u; v) over the parametric domain of the surface and a dissipation energy due to a damping density function fl (u; v). To define an elastic potential energy, we adopt the thin-plate under tension energy model <ref> [26, 4, 30] </ref> U = 2 ff 1;1 s 2 v + fi 1;1 s 2 uv + fi 2;2 s 2 j The subscripts on s denote parametric partial derivatives. The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control tension and rigidity, respectively.
Reference: [5] <author> W. Dahmen and C. Micchelli. </author> <title> On the linear independence of multivariate B-splines, I. triangulations of simploids. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 19(5) </volume> <pages> 993-1012, </pages> <year> 1982. </year>
Reference-contexts: Motivated by an idea of Curry and Schoenberg for a geometric interpretation of univariate B-splines, deBoor [8] first presented a brief description of multivariate simplex splines. Since then, their theory has been explored extensively <ref> [16, 5, 6, 13] </ref>. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines.
Reference: [6] <author> W. Dahmen and C. Micchelli. </author> <title> Recent progress in multivariate splines. </title> <editor> In C.K. Chui, L.L. Schumaker, and J.D. Ward, editors, </editor> <booktitle> Approximation Theory IV, </booktitle> <pages> pages 27-121. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: Motivated by an idea of Curry and Schoenberg for a geometric interpretation of univariate B-splines, deBoor [8] first presented a brief description of multivariate simplex splines. Since then, their theory has been explored extensively <ref> [16, 5, 6, 13] </ref>. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines. <p> Since then, their theory has been explored extensively [16, 5, 6, 13]. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli <ref> [6] </ref> presented a thorough review of multivariate B-splines. From the point of view of blossoming, Dahmen, Micchelli and Seidel [7] proposed triangular B-splines which are essentially normalized simplex splines.
Reference: [7] <author> W. Dahmen, C. Micchelli, and H.-P. Seidel. </author> <title> Blossoming begets B-spline bases built better by B-patches. </title> <journal> Mathematics of Computation, </journal> <volume> 59(199) </volume> <pages> 97-115, </pages> <year> 1992. </year>
Reference-contexts: To compensate, explicit linear and/or non-linear smoothness constraints must be enforced on the patches, thus complicating the design task. Triangular B-splines are emerging as a powerful new tool for solid modeling because they can represent, without degeneracy, complex objects defined on irregular parametric domains <ref> [7] </ref>. Using triangular B-splines, designers can represent shapes over triangulated planar domains with low degree piecewise polynomials that nonetheless maintain high-order continuity. 1 In addition, triangular B-splines offer a considerable breadth of geometric coverage. They subsume Bernstein-Bezier triangles with n-fold knots. <p> The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines. From the point of view of blossoming, Dahmen, Micchelli and Seidel <ref> [7] </ref> proposed triangular B-splines which are essentially normalized simplex splines. <p> Triangular NURBS Geometry In this section we review the formulation of multivariate simplex splines and triangular B-splines, summarize their analytic and geometric properties, and straightforwardly generalize to the rational case| triangular NURBS. 2.1 Multivariate Simplex Splines The basis functions of multivariate simplex splines may be defined either analytically or recursively <ref> [7, 16] </ref>. <p> The bivariate simplex spline M (ujV i;fi ) with degree n over V i;fi can be defined recursively (see <ref> [7] </ref> for the details), where u = (u; v) defines the triangulated parametric domain of the surface. <p> They inherit many of the properties of non-rational B-splines, such as the convex hull property, local support, affine invariance, and form a common representation for any piecewise polynomial <ref> [7, 25, 9, 12] </ref>. Moreover, they have some additional properties: * Triangular NURBS and their rational basis functions are infinitely smooth in the interior of nonoverlapping sub-triangles formed by the knot nets, provided the denominator is nonzero.
Reference: [8] <author> C. de Boor. </author> <title> Splines as linear combinations of B-splines. </title> <editor> In G. Lorentz, C. Chui, and L.L. Schumaker, editors, </editor> <booktitle> Approximation Theory II, </booktitle> <pages> pages 1-47. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: Motivated by an idea of Curry and Schoenberg for a geometric interpretation of univariate B-splines, deBoor <ref> [8] </ref> first presented a brief description of multivariate simplex splines. Since then, their theory has been explored extensively [16, 5, 6, 13]. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm.
Reference: [9] <author> P. Fong and H.-P. Seidel. </author> <title> An implementation of triangular B-spline surfaces over arbitrary triangulations. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <address> 3-4(10):267-275, </address> <year> 1993. </year>
Reference-contexts: In 1993, the first experimental CAGD software based on the triangular B-spline was developed, demonstrating the practical feasibility of multivariate B-spline algorithms <ref> [9] </ref>. Recently, Pfeifle and Seidel [19] demonstrate the fitting of triangular B-spline surfaces to scattered data through the use of least squares and optimization techniques. A different area of research that provides background for our work in this paper is physics-based shape modeling. <p> Extra effort is therefore needed to deal with the boundary evaluation (see <ref> [9] </ref> for the concept of semi-open convex hull in the context of bivariate B-splines). Second, when m &gt; s the barycentric coefficients are not unique. <p> They inherit many of the properties of non-rational B-splines, such as the convex hull property, local support, affine invariance, and form a common representation for any piecewise polynomial <ref> [7, 25, 9, 12] </ref>. Moreover, they have some additional properties: * Triangular NURBS and their rational basis functions are infinitely smooth in the interior of nonoverlapping sub-triangles formed by the knot nets, provided the denominator is nonzero. <p> Note that Fig. 4 shows only a subset of the finer triangulation comprising the intersection of knot lines. The complete finer triangulation can be obtained by adding extra edges <ref> [9] </ref> into Fig. 4. This subdivision scheme yields about 10 100 subtriangles per parametric domain triangle for cubics and quadratics. 5 Dynamic Interaction The physics-based shape design approach allows modeling requirements to be expressed and satisfied through the use of energies, forces, and constraints. <p> For example, by confining all associated weights to be unity, we obtain dynamic triangular B-splines. Furthermore, we arrive at the continuous net <ref> [9] </ref>, which is a special case of general triangular B-splines, by constraining respective control points along common boundaries of two adjacent triangles in parametric triangulation (Fig. 5). Linear constraints can be implemented by applying the same numerical solver on an unconstrained subset of p. <p> We have adopted the data structure, file, and rendering formats of existing geometric triangular B-spline software <ref> [9] </ref>. To implement the Lagrangian dynamics model on top of this software, we have had to implement a new algorithm for simultaneously evaluating non-zero basis functions and their derivatives up to second order at arbitrary domain points for finite element assembly and dynamic simulation.
Reference: [10] <author> B.R. Gossick. </author> <title> Hamilton's Principle and Physical Systems. </title> <publisher> Academic Press, </publisher> <address> New York and London, </address> <year> 1967. </year>
Reference-contexts: Published in Computer-Aided Geometric Design, ??(??):??-??, 1996, in press. 8 3.1.1 Lagrange Equations of Motion We derive the equations of motion of our dynamic triangular NURBS by applying Lagrangian dynamics <ref> [10] </ref>. We express the kinetic energy due to a prescribed mass distribution function (u; v) over the parametric domain of the surface and a dissipation energy due to a damping density function fl (u; v).
Reference: [11] <author> T. Grandine. </author> <title> The stable evaluation of multivariate simplex splines. </title> <journal> Mathematics of Computation, </journal> <volume> 50(181) </volume> <pages> 197-205, </pages> <year> 1988. </year>
Reference-contexts: Since then, their theory has been explored extensively [16, 5, 6, 13]. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine <ref> [11] </ref> devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines. From the point of view of blossoming, Dahmen, Micchelli and Seidel [7] proposed triangular B-splines which are essentially normalized simplex splines.
Reference: [12] <author> G. Greiner and H.-P. Seidel. </author> <title> Modeling with triangular B-splines. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 14(2) </volume> <pages> 56-60, </pages> <year> 1994. </year>
Reference-contexts: They inherit many of the properties of non-rational B-splines, such as the convex hull property, local support, affine invariance, and form a common representation for any piecewise polynomial <ref> [7, 25, 9, 12] </ref>. Moreover, they have some additional properties: * Triangular NURBS and their rational basis functions are infinitely smooth in the interior of nonoverlapping sub-triangles formed by the knot nets, provided the denominator is nonzero.
Reference: [13] <author> K. Hollig. </author> <title> Multivariate splines. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 19(5) </volume> <pages> 1013-1031, </pages> <year> 1982. </year>
Reference-contexts: Motivated by an idea of Curry and Schoenberg for a geometric interpretation of univariate B-splines, deBoor [8] first presented a brief description of multivariate simplex splines. Since then, their theory has been explored extensively <ref> [16, 5, 6, 13] </ref>. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines.
Reference: [14] <author> H. Kardestuncer. </author> <title> Finite Element Handbook. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: The derivation of (12) proceeds as for D-NURBS (see [28] for the details). 4 Finite Element Implementation The evolution of the generalized coordinates p (t), determined by (12) with time-varying matrices, cannot be solved analytically in general. Instead, we pursue an efficient numerical implementation using finite-element techniques <ref> [14] </ref>. Standard finite element codes explicitly assemble the global matrices that appear in the discrete equations of motion [14]. This approach would be too expensive for interactive performance. <p> Instead, we pursue an efficient numerical implementation using finite-element techniques <ref> [14] </ref>. Standard finite element codes explicitly assemble the global matrices that appear in the discrete equations of motion [14]. This approach would be too expensive for interactive performance. We use an iterative matrix solver to avoid the cost of assembling the global matrices M, D, and K, working instead with the individual element matrices.
Reference: [15] <author> D. Metaxas and D. Terzopoulos. </author> <title> Dynamic deformation of solid primitives with constraints. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 309-312, </pages> <year> 1992. </year> <note> (Proc. ACM Siggraph'92). </note>
Reference-contexts: The augmented Lagrangian method [17] combines the Lagrange multipliers with the simpler penalty method. The Baumgarte stabilization method [2] solves constrained equations of motion through linear feedback control (see also <ref> [15, 28] </ref>). These techniques are appropriate for enforcing constraints on dynamic triangular NURBS. Linear geometric constraints such as point, curve, and surface normal constraints can be easily incorporated into dynamic triangular NURBS by reducing the matrices and vectors in (12) to a minimal unconstrained set of generalized coordinates.
Reference: [16] <author> C.A. Micchelli. </author> <title> On a numerically efficient method for computing with multivariate B-splines. </title> <editor> In W. Schempp and K. Zeller, editors, </editor> <booktitle> Multivariate Approximation Theory, </booktitle> <pages> pages 211-248. </pages> <publisher> Birkhauser, </publisher> <address> Basel, </address> <year> 1979. </year>
Reference-contexts: Motivated by an idea of Curry and Schoenberg for a geometric interpretation of univariate B-splines, deBoor [8] first presented a brief description of multivariate simplex splines. Since then, their theory has been explored extensively <ref> [16, 5, 6, 13] </ref>. The well-known recurrence relation of multivariate simplex splines was introduced in [16]. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines. <p> Motivated by an idea of Curry and Schoenberg for a geometric interpretation of univariate B-splines, deBoor [8] first presented a brief description of multivariate simplex splines. Since then, their theory has been explored extensively [16, 5, 6, 13]. The well-known recurrence relation of multivariate simplex splines was introduced in <ref> [16] </ref>. Subsequently, Grandine [11] devised a stable evaluation algorithm. Dahmen and Micchelli [6] presented a thorough review of multivariate B-splines. From the point of view of blossoming, Dahmen, Micchelli and Seidel [7] proposed triangular B-splines which are essentially normalized simplex splines. <p> Triangular NURBS Geometry In this section we review the formulation of multivariate simplex splines and triangular B-splines, summarize their analytic and geometric properties, and straightforwardly generalize to the rational case| triangular NURBS. 2.1 Multivariate Simplex Splines The basis functions of multivariate simplex splines may be defined either analytically or recursively <ref> [7, 16] </ref>. <p> Given integers N g , we can find Gauss weights a g and abscissas u g and v g in the two parametric directions such that m ij can be approximated by m ij g=1 We apply the recursive algorithm of multivariate simplex splines <ref> [16] </ref> to evaluate f ij (u g ; v g ). In our imple mentation we choose N g to be 7 for quadratic and cubic triangular splines. Note that because of the irregular knot distribution, the integrands f ij 's may vanish over subregions of (r; s; t).
Reference: [17] <author> M. Minoux. </author> <title> Mathematical Programming. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [17, 20] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [17] combines the Lagrange multipliers with the simpler penalty method. <p> Nonlinear constraints can be enforced through Lagrange multiplier techniques [17, 20]. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method <ref> [17] </ref> combines the Lagrange multipliers with the simpler penalty method. The Baumgarte stabilization method [2] solves constrained equations of motion through linear feedback control (see also [15, 28]). These techniques are appropriate for enforcing constraints on dynamic triangular NURBS. <p> The inclusion of an elastic energy in our dynamic surfaces makes them applicable to such problems. The data interpolation problem is amenable to common constraint techniques <ref> [17] </ref>. Approximation can be achieved by physically coupling the dynamic triangular B-splines to the data through Hookean spring forces (16).
Reference: [18] <author> H.P. Moreton and C.H. Sequin. </author> <title> Functional optimization for fair surface design. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 167-176, </pages> <year> 1992. </year> <note> (Proc. ACM Siggraph'92). </note>
Reference-contexts: Bloor and Wilson [3] demonstrated free-form design using tensor product B-splines and the optimization of energy functionals. Celniker and Gossard [4] developed an interesting prototype system for interactive design based on surface finite elements. Welch and Witkin [30] made similar use of trimmed hierarchical B-splines. Moreton and Sequin <ref> [18] </ref> interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. In our earlier work, we developed dynamic NURBS (D-NURBS) [28, 23, 22], a physics-based generalization of standard geometric NURBS with full second-order dynamics. <p> The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control tension and rigidity, respectively. Other energies are applicable, including, at greater computational cost, the nonquadratic, curvature-based energies in <ref> [27, 18] </ref>.
Reference: [19] <author> R. Pfeifle and H.-P. Seidel. </author> <title> Fitting triangular B-Splines to functional scattered data. </title> <booktitle> In Proceedings of Graphics Interface'95, </booktitle> <pages> pages 26-33, </pages> <year> 1995. </year> <title> Published in Computer-Aided Geometric Design, </title> ??(??):??-??, <note> 1996, in press. 20 </note>
Reference-contexts: In 1993, the first experimental CAGD software based on the triangular B-spline was developed, demonstrating the practical feasibility of multivariate B-spline algorithms [9]. Recently, Pfeifle and Seidel <ref> [19] </ref> demonstrate the fitting of triangular B-spline surfaces to scattered data through the use of least squares and optimization techniques. A different area of research that provides background for our work in this paper is physics-based shape modeling.
Reference: [20] <author> J. Platt. </author> <title> A generalization of dynamic constraints. CVGIP: Graphical Models and Image Processing, </title> <booktitle> 54(6) </booktitle> <pages> 516-525, </pages> <year> 1992. </year>
Reference-contexts: Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [17, 20] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [17] combines the Lagrange multipliers with the simpler penalty method.
Reference: [21] <author> W. Press, B. Flanney, S. Teukolsky, and W. Verttering. </author> <title> Numerical Recipes: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1986. </year>
Reference-contexts: The matrices and forces are evaluated at time t. We employ the conjugate gradient method <ref> [21] </ref> to obtain an iterative solution for p (t+t) at each time step. To achieve interactive simulation rates, we limit the number of conjugate gradient iterations per time step to 10. More than 2 iterations tend to be necessary when the physical parameters are changed significantly during the numerical simulation. <p> Neighboring elements will share some generalized coordinates. 4.3 Calculation of Element Matrices The integral expressions for the mass, damping, and stiffness matrices associated with each element are evaluated numerically using Gaussian quadrature <ref> [21] </ref>. We explain the computation of the element mass matrix; the computation of the damping and stiffness matrices follow suit. The expression for entry m ij of the element mass matrix takes the integral form m ij = (r;s;t) where (r; s; t), is the parametric domain of the element.
Reference: [22] <author> H. Qin and D. Terzopoulos. </author> <title> Dynamic manipulation of triangular B-splines. </title> <booktitle> In Proceedings of Third ACM/IEEE Symposium on Solid Modeling and Applications, </booktitle> <pages> pages 351-360, </pages> <address> Salt Lake City, May 1995. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Welch and Witkin [30] made similar use of trimmed hierarchical B-splines. Moreton and Sequin [18] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. In our earlier work, we developed dynamic NURBS (D-NURBS) <ref> [28, 23, 22] </ref>, a physics-based generalization of standard geometric NURBS with full second-order dynamics. <p> By building the dynamic model upon the triangular NURBS geometry, we allow the designer to continue to use the repertoire of advanced geometric tools that have become prevalent, among them, the imposition of geometric constraints that the final shape must satisfy. Our physics-based shape design approach <ref> [28, 23, 22] </ref> which utilizes energies, forces, and constraints has proven to be simpler and more intuitive than conventional geometric design methods (e.g., the manipulation and adjustment of control points and weights).
Reference: [23] <author> H. Qin and D. Terzopoulos. </author> <title> Dynamic NURBS swung surfaces for physics-based shape design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 27(2) </volume> <pages> 111-127, </pages> <year> 1995. </year>
Reference-contexts: Welch and Witkin [30] made similar use of trimmed hierarchical B-splines. Moreton and Sequin [18] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. In our earlier work, we developed dynamic NURBS (D-NURBS) <ref> [28, 23, 22] </ref>, a physics-based generalization of standard geometric NURBS with full second-order dynamics. <p> By building the dynamic model upon the triangular NURBS geometry, we allow the designer to continue to use the repertoire of advanced geometric tools that have become prevalent, among them, the imposition of geometric constraints that the final shape must satisfy. Our physics-based shape design approach <ref> [28, 23, 22] </ref> which utilizes energies, forces, and constraints has proven to be simpler and more intuitive than conventional geometric design methods (e.g., the manipulation and adjustment of control points and weights).
Reference: [24] <author> H.-P. Seidel. </author> <title> Representing piecewise polynomials as linear combinations of multivariate B-splines. </title> <editor> In T. Lyche and L.L. Schumaker, editors, </editor> <booktitle> Curves and Surfaces, </booktitle> <pages> pages 559-566. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: They subsume Bernstein-Bezier triangles with n-fold knots. Moreover, any piecewise polynomial surface over a planar triangulation may be represented as a linear combination of triangular B-splines <ref> [24] </ref>. Thus, triangular B-splines can also serve as a common representation for product data exchange and representation conversion. In this paper we enhance the power of triangular spline models by proposing triangular NURBS, the rational generalization of triangular B-splines, with weights as additional degrees of freedom.
Reference: [25] <author> H.-P. Seidel. </author> <title> An introduction to polar forms. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 13(1) </volume> <pages> 38-46, </pages> <year> 1993. </year>
Reference-contexts: They inherit many of the properties of non-rational B-splines, such as the convex hull property, local support, affine invariance, and form a common representation for any piecewise polynomial <ref> [7, 25, 9, 12] </ref>. Moreover, they have some additional properties: * Triangular NURBS and their rational basis functions are infinitely smooth in the interior of nonoverlapping sub-triangles formed by the knot nets, provided the denominator is nonzero.
Reference: [26] <author> D. Terzopoulos. </author> <title> Regularization of inverse visual problems involving discontinuities. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8(4) </volume> <pages> 413-424, </pages> <year> 1986. </year>
Reference-contexts: We express the kinetic energy due to a prescribed mass distribution function (u; v) over the parametric domain of the surface and a dissipation energy due to a damping density function fl (u; v). To define an elastic potential energy, we adopt the thin-plate under tension energy model <ref> [26, 4, 30] </ref> U = 2 ff 1;1 s 2 v + fi 1;1 s 2 uv + fi 2;2 s 2 j The subscripts on s denote parametric partial derivatives. The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control tension and rigidity, respectively.
Reference: [27] <author> D. Terzopoulos and K. Fleischer. </author> <title> Deformable models. </title> <journal> The Visual Computer, </journal> <volume> 4(6) </volume> <pages> 306-331, </pages> <year> 1988. </year>
Reference-contexts: Recently, Pfeifle and Seidel [19] demonstrate the fitting of triangular B-spline surfaces to scattered data through the use of least squares and optimization techniques. A different area of research that provides background for our work in this paper is physics-based shape modeling. Terzopoulos and Fleischer <ref> [27] </ref> constructed free-form surfaces with natural dynamic behavior governed by the physical laws of elasticity and demonstrated simple interactive sculpting using viscoelastic and plastic models. Bloor and Wilson [3] demonstrated free-form design using tensor product B-splines and the optimization of energy functionals. <p> The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control tension and rigidity, respectively. Other energies are applicable, including, at greater computational cost, the nonquadratic, curvature-based energies in <ref> [27, 18] </ref>. <p> The force distribution f (u; v; t) represents the net effect of all applied forces. Typical force functions are spring forces, repulsion forces, gravitational forces, inflation forces, etc. <ref> [27] </ref>. Consider connecting a material point (u 0 ; v 0 ) of a dynamic triangular NURBS surface to a point d 0 in space with an ideal Hookean spring of stiffness k.
Reference: [28] <author> D. Terzopoulos and H. Qin. </author> <title> Dynamic NURBS with geometric constraints for interactive sculpting. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 13(2) </volume> <pages> 103-136, </pages> <year> 1994. </year>
Reference-contexts: As in conventional NURBS, fixing the weights to unity reduces triangular NURBS to triangular B-splines. Although triangular NURBS enable designers to overcome the limitations of tensor product NURBS, conventional geometric design with NURBS models can be problematic for the following reasons <ref> [28] </ref>: * Normally the designer controls the geometry by assigning knots, positioning control points, and adjusting weights. <p> Our new surface model, dynamic triangular NURBS, combines the elegant geometric features of triangular NURBS with the demonstrated conveniences of interaction within a physical dynamics framework. The following are some advantages of physics-based shape design <ref> [28] </ref>: * Shape design is generally a time-varying process|the designer is often interested not only in the final shape but also in the intermediate shape variation. <p> While shape design may proceed interactively or automatically at the physical level, existing geometric toolkits are concurrently applicable at the underlying geometric level. Like their tensor product dynamic NURBS (D-NURBS) progenitors <ref> [28] </ref>, dynamic triangular NURBS (or triangular D-NURBS) are a free-form, rational model that provides a systematic and unified technique for a variety of modeling tasks. <p> Welch and Witkin [30] made similar use of trimmed hierarchical B-splines. Moreton and Sequin [18] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. In our earlier work, we developed dynamic NURBS (D-NURBS) <ref> [28, 23, 22] </ref>, a physics-based generalization of standard geometric NURBS with full second-order dynamics. <p> Moreover, we can express the surface as the product of the Jacobian matrix and the generalized coordinate vector: s (u; p) = Jp: (11) The proof of (11) is the same as that for D-NURBS in <ref> [28] </ref>. Published in Computer-Aided Geometric Design, ??(??):??-??, 1996, in press. 8 3.1.1 Lagrange Equations of Motion We derive the equations of motion of our dynamic triangular NURBS by applying Lagrangian dynamics [10]. <p> The derivation of (12) proceeds as for D-NURBS (see <ref> [28] </ref> for the details). 4 Finite Element Implementation The evolution of the generalized coordinates p (t), determined by (12) with time-varying matrices, cannot be solved analytically in general. Instead, we pursue an efficient numerical implementation using finite-element techniques [14]. <p> By building the dynamic model upon the triangular NURBS geometry, we allow the designer to continue to use the repertoire of advanced geometric tools that have become prevalent, among them, the imposition of geometric constraints that the final shape must satisfy. Our physics-based shape design approach <ref> [28, 23, 22] </ref> which utilizes energies, forces, and constraints has proven to be simpler and more intuitive than conventional geometric design methods (e.g., the manipulation and adjustment of control points and weights). <p> The augmented Lagrangian method [17] combines the Lagrange multipliers with the simpler penalty method. The Baumgarte stabilization method [2] solves constrained equations of motion through linear feedback control (see also <ref> [15, 28] </ref>). These techniques are appropriate for enforcing constraints on dynamic triangular NURBS. Linear geometric constraints such as point, curve, and surface normal constraints can be easily incorporated into dynamic triangular NURBS by reducing the matrices and vectors in (12) to a minimal unconstrained set of generalized coordinates. <p> Linear constraints can be implemented by applying the same numerical solver on an unconstrained subset of p. See <ref> [28] </ref> for a detailed discussion on linear constraints. Rational dynamic models have an interesting peculiarity due to the weights. While the control point components of p may take arbitrary finite values in &lt;, negative weights may cause the denominator to vanish at some evaluation points, causing the matrices to diverge. <p> using Published in Computer-Aided Geometric Design, ??(??):??-??, 1996, in press. 13 P 300 P 012 P 111 102 Q 030 Q 210 Q Q 003 P 120 P 201 Q 111 Q 021 P 021 201 Q = X Z Triangulated Domain u = P 030 Q 300 penalty methods <ref> [28] </ref>. 6 Modeling Applications We have developed prototype modeling software based on dynamic triangular B-splines (an advanced system based upon dynamic triangular NURBS is under construction). We have adopted the data structure, file, and rendering formats of existing geometric triangular B-spline software [9].
Reference: [29] <author> C. Traas. </author> <title> Practice of bivariate simplicial splines. </title> <editor> In W. Dahmen et al, editor, </editor> <booktitle> Computation of Curves and Surfaces, </booktitle> <pages> pages 383-422. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1990. </year>
Reference-contexts: Fortunately, it is possible to derive efficient algorithms for a low dimensional domain such as a plane and/or a low order polynomial such as a quadratic or a cubic. Traas <ref> [29] </ref> discussed the applicability of bivariate quadratic simplex splines as finite elements and derived differentiation and inner product formulas. Auerbach et al. [1] use bivariate simplex B-splines to fit geological surfaces to scattered data by adjusting the triangulation of the parametric domain in accordance with the data distribution.
Reference: [30] <author> W. Welch and A. Witkin. </author> <title> Variational surface modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 157-166, </pages> <year> 1992. </year> <note> (Proc. ACM Siggraph'92). </note>
Reference-contexts: Bloor and Wilson [3] demonstrated free-form design using tensor product B-splines and the optimization of energy functionals. Celniker and Gossard [4] developed an interesting prototype system for interactive design based on surface finite elements. Welch and Witkin <ref> [30] </ref> made similar use of trimmed hierarchical B-splines. Moreton and Sequin [18] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. <p> We express the kinetic energy due to a prescribed mass distribution function (u; v) over the parametric domain of the surface and a dissipation energy due to a damping density function fl (u; v). To define an elastic potential energy, we adopt the thin-plate under tension energy model <ref> [26, 4, 30] </ref> U = 2 ff 1;1 s 2 v + fi 1;1 s 2 uv + fi 2;2 s 2 j The subscripts on s denote parametric partial derivatives. The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control tension and rigidity, respectively.
References-found: 30

