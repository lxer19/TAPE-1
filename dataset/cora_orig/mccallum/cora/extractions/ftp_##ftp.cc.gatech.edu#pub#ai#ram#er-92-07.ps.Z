URL: ftp://ftp.cc.gatech.edu/pub/ai/ram/er-92-07.ps.Z
Refering-URL: http://www.cs.gatech.edu/aimosaic/robot-lab/mrl-online-publications.html
Root-URL: 
Title: A Case-Based Approach to Reactive Control for Autonomous Robots  
Author: Kenneth Moorman and Ashwin Ram 
Affiliation: College of Computing Georgia Institute of Technology  
Date: October 1992.  
Note: AAAI Fall Symposium on "AI for Real-World Autonomous Mobile Robots", Cambridge, MA,  
Abstract: We propose a case-based method of selecting behavior sets as an addition to traditional reactive robotic control systems. The new system (ACBARR | A Case BAsed Reactive Robotic system) provides more flexible performance in novel environments, as well as overcoming a standard "hard" problem for reactive systems, the box canyon. Additionally, ACBARR is designed in a manner which is intended to remain as close to pure reactive control as possible. Higher level reasoning and memory functions are intentionally kept to a minimum. As a result, the new reasoning does not significantly slow the system down from pure reactive speeds. 
Abstract-found: 1
Intro-found: 1
Reference: [ Arkin, 1989a ] <author> Ronald C. Arkin. </author> <title> Motor schema-based mobile robot navigation. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 8(4) </volume> <pages> 92-112, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Introduction Reactive robotic control systems <ref> [ Arkin, 1989a, Brooks, 1986 ] </ref> have produced impressive results in the area of generating intelligent robotic action. Unlike traditional approaches, these systems typically decompose actions into simple behaviors in order to produce rapid real-time response to the environment. <p> This paper describes our work on ACBARR (A Case-BAsed Reactive Robotic system), a system which performs both types of behavior modifications described above. The work is a continuation of a line of research involving reactive systems in general <ref> [ Arkin, 1989a, Clark et al., 1992 ] </ref> . In addition, the system uses case-based reasoning [ Kolodner, 1990 ] to implement the global level of modifications. The system presented is extremely robust, doing well in novel environments.
Reference: [ Arkin, 1989b ] <author> Ronald C. Arkin. </author> <title> Towards the unification of navigational planning and reactive control. In the working note: </title> <booktitle> AAAI Fall Symposium on Robot Navigation, </booktitle> <month> May </month> <year> 1989. </year>
Reference: [ Arkin, 1990 ] <author> Ronald C. Arkin. </author> <title> Integrating behavioral, perceptual, and world knowledge in reactive navigation. </title> <editor> In Pattie Maes, editor, </editor> <title> Designing Autonomous Agents. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1990. </year>
Reference-contexts: Overview of Reactive Control using Schemas Schema-based control is a type of reactive robotic control system currently being used in the Autonomous Robot Architecture (AuRA) that is implemented on the Georgia Institute of Technology autonomous robot, GEORGE <ref> [ Arkin, 1990 ] </ref> . Under this system, each basic type of motor behavior is represented by a schema. By selecting the proper schema or combination of schemas to employ the robot is able to react to its environment.
Reference: [ Brooks, 1986 ] <author> Rodney Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA- 2(1) </volume> <pages> 14-23, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: Introduction Reactive robotic control systems <ref> [ Arkin, 1989a, Brooks, 1986 ] </ref> have produced impressive results in the area of generating intelligent robotic action. Unlike traditional approaches, these systems typically decompose actions into simple behaviors in order to produce rapid real-time response to the environment.
Reference: [ Clark et al., 1992 ] <author> Russell J. Clark, Ronald C. Arkin, and Ashwin Ram. </author> <title> Learning momentum: On-line performance enhancement for reactive systems. </title> <booktitle> Submitted to 1992 IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: This technique allows the system to fine tune its current behavior patterns to the exact environment in which it finds itself <ref> [ Clark et al., 1992 ] </ref> . For example, if the robot has been in an open area for a period of time and has not encountered any obstacles, it picks up speed and does not worry as much about obstacles. <p> This paper describes our work on ACBARR (A Case-BAsed Reactive Robotic system), a system which performs both types of behavior modifications described above. The work is a continuation of a line of research involving reactive systems in general <ref> [ Arkin, 1989a, Clark et al., 1992 ] </ref> . In addition, the system uses case-based reasoning [ Kolodner, 1990 ] to implement the global level of modifications. The system presented is extremely robust, doing well in novel environments. <p> Reactive control forms the base level of robotic control within our system. Additionally, the system permits the adaptation of values in order for a behavior set to become better suited for a given environment <ref> [ Clark et al., 1992 ] </ref> . In this way, the local adjustment technique discussed earlier is implemented within ACBARR. There is still the question of how to implement the more global behavior changes. <p> If so, it determines which way is the shorter side of it, and go for a distance in that direction. 1 The simulator was written in standard C with an X-Windows interface. All test runs described were performed on Sun SparcStation 1s. For more information concerning the simulator, see <ref> [ Clark et al., 1992 ] </ref> . 7. Random: The system will raise the noise gain and goal gain, leave the obstacle gain at a medium level, and wander for a period of time. 8.
Reference: [ Cohen and Howe, 1988 ] <author> Paul R. Cohen and Adele E. Howe. </author> <title> How evaluation guides AI research. </title> <journal> AI Magazine, </journal> <volume> 9(4) </volume> <pages> 35-43, </pages> <month> Winter </month> <year> 1988. </year>
Reference-contexts: As a test of the ACBARR system, an ablation study was performed on it <ref> [ Cohen and Howe, 1988 ] </ref> , in which the system was tested without one or more of its components in order to evaluate their impact. Figure 3 shows the system's performance on the box canyon world with neither local adjustments nor global cases available to the system.
Reference: [ Kolodner, 1990 ] <author> Janet L. Kolodner. </author> <title> An introduction to case-based reasoning. </title> <type> Technical Report GIT-ICS-90/19, </type> <institution> Georgia Institute of Technology, </institution> <year> 1990. </year>
Reference-contexts: The work is a continuation of a line of research involving reactive systems in general [ Arkin, 1989a, Clark et al., 1992 ] . In addition, the system uses case-based reasoning <ref> [ Kolodner, 1990 ] </ref> to implement the global level of modifications. The system presented is extremely robust, doing well in novel environments. Additionally, it is able to navigate through several "hard" environments, such as box canyons, in which traditional reactive systems would perform significantly worse. <p> To do this, case-based reasoning is used to select sets of behaviors appropriate for the current environment as perceived by the system. Overview of Case-Based Reasoning Case-based reasoning (CBR) is an artificial intelligence technique which relies on past experiences to guide the reasoning process <ref> [ Kolodner, 1990 ] </ref> . The hope in CBR is that past experiences will be applicable to new situations| what worked in the past on a certain problem will more than likely work on a new problem which is similar to the previous one.
Reference: [ Kolodner, 1992 ] <author> Janet L. Kolodner. </author> <title> Case- Based Reasoning. </title> <publisher> Morgan Kaufmann Pub- lishers, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year> <note> In press. 11 </note>
Reference-contexts: Ideally, similar things should be grouped together. However, the selection of the proper set of features to index the cases in memory is a difficult problem and an ongoing research issue. This indexing problem has been approached in a variety of ways (see, for example, <ref> [ Kolodner, 1992 ] </ref> ), but none are totally effective. Each indexing method is chosen to be efficient for a given problem or situation. There are other problems inherent to the case- based paradigm which must be handled for ACBARR to be effective. <p> Indexing and case selection Since there is a limited number of cases in the library, there is little need at this stage for a sophisticated indexing scheme. As a result, ACBARR employs a flat memory model of the case library <ref> [ Kolodner, 1992 ] </ref> . Cases are located by a sequential search of the memory for index matches. Although generally an inefficient method, this suffices for the current system without significant slow-down.
References-found: 8

