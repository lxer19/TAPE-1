URL: http://www.cs.ucl.ac.uk/staff/P.Bentley/gecco.ps
Refering-URL: http://www.cs.ucl.ac.uk/research/nuclear/nuclearpapers.html
Root-URL: http://www.cs.ucl.ac.uk
Email: P.Bentley@cs.ucl.ac.uk, S.Kumar@cs.ucl.ac.uk  
Phone: +44 (0)171 391 1329  
Title: Paper category: Genetic Algorithms Three Ways to Grow Designs: A Comparison of Evolved Embryogenies for
Author: by Peter Bentley and Sanjeev Kumar 
Note: processes, or embryogenies, to map genotypes  showing no  
Address: Gower Street, London WC1E 6BT, UK  
Affiliation: Department of Computer Science, University College London  
Abstract: the size of tiles to be evolved. The results are surprising, with the implicit embryogeny outperforming all other techniques by
Abstract-found: 1
Intro-found: 1
Reference: <author> Baron, P. Tuson, A. and Fisher, R. </author> <title> (1999) A Voxel Based Representation for Evolutionarys Shape Optimisation. </title> <editor> In Bentley, P. J. (Guest Ed.) </editor> <title> Special Issue on Evolutionary Design, </title> <note> AIEDAM journal v13:3 (to appear). </note>
Reference-contexts: By using 'smoothing' operators, such holes can be reduced <ref> (Baron et al, 1999) </ref>. Unfortunately, this approach does suffer from reduced performance as the phenotype grid is scaled up.
Reference: <author> Bentley, P. J. (Ed.) </author> <year> (1999). </year> <title> Evolutionary Design by Computers. </title> <publisher> Academic Press Ltd., London. </publisher>
Reference-contexts: 1. Introduction The use of computers to evolve solutions to problems has seen a dramatic increase in popularity and success over the last decade. This is especially true for design problems, with designs of great variety now being evolved by computers <ref> (Bentley, 1999) </ref>. However, as more difficult design problems are set, the complexity of the corresponding solutions is increasing. <p> It has the following features: Indirect correspondence between alleles and phenotypic effects. The genotype is now regarded a set of growing instructions a recipe which defines how the phenotype will develop. Polygeny. Phenotypic traits are produced by multiple genes acting in combination. An embryogeny can provide the following benefits <ref> (Bentley, 1999) </ref>: Reduction of search space. Embryogeny permits highly compact genotypes to define phenotypes. This compression (often recursive, hierarchical and multifunctional) results in genotypes with fewer parameters than their corresponding phenotypes, causing a reduction in the dimensionality of the search space, and hence a smaller search space for the EA. <p> Adaptation. It is possible to 'grow' phenotypes from genotypes adaptively, allowing constraints to be satisfied (Yu & Bentley, 1998), improvement to variable conditions, and correction of malfunctions in designs (Sipper, 1997). Embryogenies also suffer from some drawbacks <ref> (Bentley, 1999) </ref>: Can be hard to design. All types of embryogeny require careful design, and to date, only those researchers capable of performing this difficult art have demonstrated successful results. Can be hard to evolve. If care is not taken, embryogenies can introduce problems for evolutionary algorithms. <p> In nature, embryogenies are defined by the interactions between genes, their phenotypic effects and the environment in which the embryo develops. In EAs, we can define embryogenies in three main ways: externally, explicitly, and implicitly <ref> (Bentley, 1999) </ref>. 2.1 External (non-evolved) Embryogenies Embryogenies are, in a very real sense, complex designs in their own right. Most embryogenies are hand-designed and are defined globally and externally to genotypes. <p> The GP system used steady-state selection and a crossover designed to minimise disruption by crossing parents at points of similarity in the two trees. Further details of this system and crossover operator can be found in <ref> (Mallinson & Bentley, 1999 and Bentley & Wakefield, 1996) </ref>. As with all GP systems, bloat occurred, so an additional fitness function penalised genotypes with more nodes. 3.5 Implicit Embryogeny The fourth and final evolutionary system used an advanced GA to evolve implicit embryogenies. <p> Example of a three-rule implicit embryogeny and its corresponding phenotype after two iterations. A steady-state GA with a crossover designed to cope with variable numbers of rules in the genotype was used. Further details of this GA and its operators can be found in <ref> (Bentley, 1999, ch. 18) </ref>. 4. Experiments 4.1 Objectives and Parameters There were two main objectives of the experiments: to investigate how the use of different embryogenies affected efficiency of search and to investigate the scalability of the different embryogenies for the tessellating tile problem.
Reference: <author> Bentley, P. J. </author> <year> (1998). </year> <title> Aspects of Evolutionary Design by Computers. </title> <booktitle> In Advances in Soft Computing - Engineering Design and Manufacturing, </booktitle> <publisher> Springer-Verlag, London. </publisher>
Reference-contexts: Repetition. Properly designed embryogenies can improve the ability of evolution to generate solutions with repeating structures such as symmetry, segmentation, and subroutines. Adaptation. It is possible to 'grow' phenotypes from genotypes adaptively, allowing constraints to be satisfied <ref> (Yu & Bentley, 1998) </ref>, improvement to variable conditions, and correction of malfunctions in designs (Sipper, 1997). Embryogenies also suffer from some drawbacks (Bentley, 1999): Can be hard to design. <p> Most embryogenies are hand-designed and are defined globally and externally to genotypes. For example, Evolutionary Art systems often use embryogenies defined by fixed, non-evolveable structures which specify how phenotypes should be constructed using the genes in the genotypes <ref> (Bentley, 1998) </ref>. The advantage with such external embryogenies is that the user retains more control of the final evolved forms, and can potentially improve the quality of evolved designs by careful embryogeny design.
Reference: <author> Bentley, P. J. & Wakefield, J. P. </author> <title> (1997) Generic Evolutionary Design. </title> <editor> Chawdhry, P.K., Roy, R., & Pant, R.K. </editor> <booktitle> (eds) Soft Computing in Engineering Design and Manufacturing. </booktitle> <publisher> Springer Verlag, </publisher> <pages> Part 6, 289-298. </pages>
Reference-contexts: For example, a simple embryogeny might be: - Spiral ( radius, curliness, depth ) Rotate&Duplicate ( angle, duplicates ) - with the values radius, curliness, depth, angle, duplicates being evolved in the separate genotypes, to generate different forms. Alternatively, Bentleys generic evolutionary design system <ref> (Bentley and Wakefield, 1997) </ref> illustrates an adaptive external embryogeny process. Designs evolving in the system have various constraints satisfied by mapping illegal genotypes to legal phenotypes.
Reference: <author> Bentley, P. J. & Wakefield, J. P. </author> <year> (1996). </year> <title> Hierarchical Crossover in Genetic Algorithms. </title> <booktitle> In Proceedings of the 1st Online Workshop on Soft Computing (WSC1), </booktitle> <pages> (pp. 37-42), </pages> <address> Nagoya University, Japan. </address>
Reference: <author> Coates, P., </author> <title> (1997) Using Genetic Programming and L-Systems to explore 3D design worlds. </title> <editor> CAADFutures'97, R. Junge (ed), </editor> <publisher> Kluwer Academic Publishers, Munich. </publisher> <editor> de Garis, H. </editor> <title> (1994) An Artificial Brain. New Generation Computing v12:2, </title> <publisher> Springer Verlag. </publisher>
Reference: <author> Gero, J. and Rosenman, M. </author> <year> (1999). </year> <title> Evolving Designs by Generating Useful Complex Gene Structures. </title> <editor> In Bentley, P. J. (ed.) </editor> <year> (1999). </year> <title> Evolutionary Design by Computers. </title> <publisher> Academic Press Ltd., London. </publisher>
Reference: <author> Holland, J., H. </author> <year> (1998), </year> <title> Emergence: From Chaos to Order. </title> <publisher> Oxford University Press, Oxford, </publisher> <address> UK. </address>
Reference-contexts: Through emergence during evolution, these implicit embryogenies incorporate all concepts of conditional iteration, subroutines, and parallel processing which must be manually introduced into explicit GP embryogenies. Implicit embryogenies are types of constrained generating procedures, which, as Holland describes, resemble neural nets, game theory and classifier systems <ref> (Holland, 1998) </ref>. By evolving a set of simple rules which can then be iteratively applied to each element of the growing solution, many large-scale problems can be tackled.
Reference: <editor> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </editor> <booktitle> (1999). Genetic Programming III. </booktitle> <address> San Francisco, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: There are some disadvantages, however. The creation of suitable representations can be difficult. Successfully evolving such representations can also be difficult (often specialised genetic operators are required to ensure disruption is minimised <ref> (Koza et al, 1999) </ref>). Nevertheless, this type of embryogeny is used by many researchers. Koza and his team have made an extensive study of the evolution of analogue electronic circuits using Cellular Encoding as their explicit embryogeny (Koza et al, 1999). <p> be difficult (often specialised genetic operators are required to ensure disruption is minimised <ref> (Koza et al, 1999) </ref>). Nevertheless, this type of embryogeny is used by many researchers. Koza and his team have made an extensive study of the evolution of analogue electronic circuits using Cellular Encoding as their explicit embryogeny (Koza et al, 1999). Coates (1997) evolves architectural forms using a Lindenmayer system as his embryogeny. <p> Not all duplicate paths have been shown. By examining Fig. 9, it is clear that tiles are constructed using repeated patterns of movement from the seed, so the use of ADFs, ADLs and ADIs is likely to improve performance <ref> (Koza et al, 1999) </ref>. Whether such enhancements to the GP system would overcome all detrimental increases of genotype size for larger phenotype grids is unknown. The GA using implicit embryogeny showed the least amount of diversity of output in the experiments.
Reference: <author> Lawrence, P. A. </author> <year> (1995). </year> <title> The Making of a Fly: The Genetics of Animal Design. </title> <publisher> Blackwell Science Ltd, The Alden Press, Oxford, </publisher> <address> UK. </address>
Reference: <author> Mallinson, H and Bentley, P. J.. </author> <title> (1999) Evolving Fuzzy Rules for Pattern Classification. </title> <booktitle> In International Conference on Computational Intelligence for Modelling, Control and Automation - CIMCA'99 (to appear). </booktitle>
Reference-contexts: The GP system used steady-state selection and a crossover designed to minimise disruption by crossing parents at points of similarity in the two trees. Further details of this system and crossover operator can be found in <ref> (Mallinson & Bentley, 1999 and Bentley & Wakefield, 1996) </ref>. As with all GP systems, bloat occurred, so an additional fitness function penalised genotypes with more nodes. 3.5 Implicit Embryogeny The fourth and final evolutionary system used an advanced GA to evolve implicit embryogenies.
Reference: <author> Mitchell, M. Hraber, P. T. and Crutchfield, J. P. </author> <title> (1993) Revisiting the edge of chaos: Evolving cellular automata to perform computations. </title> <journal> Complex Systems, </journal> <volume> 7 </volume> <pages> 89-130. </pages>
Reference-contexts: For example, Taura and Nagasaka (1999) describe the use of an implicit embryogeny to define patterns of cells on the surface of a sphere, which are then used via a second, external embryogeny to define the morphology of shapes. Alternatively, Mitchell evolves CAbased systems designed to perform computations <ref> (Mitchell et al, 1993) </ref>, that can be regarded as types of implicit embryogeny.
Reference: <author> Sipper, M. </author> <title> (1997) A Phylogenetic, Ontogenetic, and Epigenetic View of Bio-Inspired Hardware Systems. </title> <journal> IEEE Transactions On Evolutionary Computation, </journal> <volume> Vol 1, No. 1, </volume> <month> February 4, </month> <year> 1997. </year>
Reference-contexts: Adaptation. It is possible to 'grow' phenotypes from genotypes adaptively, allowing constraints to be satisfied (Yu & Bentley, 1998), improvement to variable conditions, and correction of malfunctions in designs <ref> (Sipper, 1997) </ref>. Embryogenies also suffer from some drawbacks (Bentley, 1999): Can be hard to design. All types of embryogeny require careful design, and to date, only those researchers capable of performing this difficult art have demonstrated successful results. Can be hard to evolve.
Reference: <author> Slack, J. M. </author> <year> (1991). </year> <title> From Egg to Embryo. </title> <publisher> Cambridge University Press. </publisher>
Reference-contexts: As embryos develop, complex chains of gene activation occur, cells grow and die to form the appropriate shapes, and cells are differentiated to perform specialised functions. Even the movement of the developing muscles of the embryo affects the development and placement of cells <ref> (Slack, 1991) </ref>. Few researchers have explored the use of implicit embryogenies for Evolutionary Design, and yet the potential advantages of this approach are significant. <p> In a similar way to the gradients used to provide positional information in eggs and wombs of nature <ref> (Slack, 1991, Lawrence, 1995) </ref>, the gradients divide the grid into 16 zones, regardless of the number of elements in the phenotype grid. At iteration zero, a seed cell is placed in the centre of the phenotype grid.
Reference: <author> Taura, T. and Nagasaka, I. </author> <title> (1999) Adaptive-Growth-Type 3D Representation for Configuration Design. </title> <editor> In Bentley, P. J. (guest ed.) </editor> <title> Special Issue on Evolutionary Design, </title> <note> AIEDAM journal v13:3 (to appear). </note>
Reference: <author> Todd, S. & Latham, W. </author> <title> (1992) Evolutionary Art and Computers. </title> <publisher> Academic Press. </publisher>
Reference-contexts: This does not necessarily imply that the evolved designs will be any less fit, but it does mean that the designer of the embryogeny must take care to ensure that this complex mapping process will always perform the desired function. William Lathams evolved art <ref> (Todd & Latham, 1992) </ref> provides an excellent example of an external embryogeny in use. Latham hand-designs embryogenies comprising tori, 'ribs' and other shapes and how they are placed and duplicated.
Reference: <author> Yu, T. and Bentley, P. </author> <year> (1998). </year> <title> Methods to Evolve Legal Phenotypes. </title> <booktitle> In Proceedings of the Fifth Int. Conf. on Parallel Problem Solving From Nature. </booktitle> <address> Amsterdam, Sept 27-30, </address> <year> 1998, </year> <pages> pp. 280-282. </pages>
Reference-contexts: Repetition. Properly designed embryogenies can improve the ability of evolution to generate solutions with repeating structures such as symmetry, segmentation, and subroutines. Adaptation. It is possible to 'grow' phenotypes from genotypes adaptively, allowing constraints to be satisfied <ref> (Yu & Bentley, 1998) </ref>, improvement to variable conditions, and correction of malfunctions in designs (Sipper, 1997). Embryogenies also suffer from some drawbacks (Bentley, 1999): Can be hard to design.
References-found: 17

