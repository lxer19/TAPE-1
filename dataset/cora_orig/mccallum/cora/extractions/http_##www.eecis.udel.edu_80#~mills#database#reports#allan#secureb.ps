URL: http://www.eecis.udel.edu:80/~mills/database/reports/allan/secureb.ps
Refering-URL: http://www.eecis.udel.edu:80/~mills/reports.htm
Root-URL: http://www.cis.udel.edu
Abstract-found: 0
Intro-found: 1
Reference: <institution> References 3-7 are available from Internet archives in PostScript format. Contact the author for location and availability. </institution>
Reference: 1. <author> Allan, D.W. </author> <title> Time and frequency (time-domain) estimation and prediction of precision clocks and oscillators. </title> <journal> IEEE Trans. on Ultrasound, Ferroelectrics, and Frequency Control UFFC 34, </journal> <month> 6 (November </month> <year> 1987), </year> <pages> 647-654. </pages> <note> Also in: Sullivan, D.B., </note> <author> D.W. Allan, D.A. Howe and F.L. </author> <title> 32 Walls (Eds.). Characterization of Clocks and Oscillators . NIST Technical Note 1337, </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <year> 1990, </year> <pages> 121-128. </pages>
Reference-contexts: Assuming the clock discipline algorithm can learn the nominal frequency error of each clock oscillator separately and correct for it, the primary characteristic affecting the clock accuracy is the oscillator stability. The traditional characterization of oscillator stability is a plot of Allan variance <ref> [1] </ref>, which is defined as follows. Consider a series of time offsets measured between a computer clock and some external standard. Let x k be the k th measurement and t be the interval since the last measurement. Define the fractional frequency 19 which is a dimensionless quantity.
Reference: 2. <author> Levine, J. </author> <title> An algorithm to synchronize the time of a computer to universal time. </title> <journal> IEEE Trans. </journal> <volume> Networks 3, </volume> <month> 1 (February </month> <year> 1995), </year> <pages> 42-50. </pages>
Reference-contexts: In the FLL algorithm, the frequency at the k th update is determined directly from the differences between the current and previous update times. In the previous design, adapted from <ref> [2] </ref>, the FLL operates is the same way as the PLL, except that y k is determined indirectly from a frequency esti mate computed as the exponential average , (8) with w = 4 determined by experiment. <p> It may seem that a simple measurement of phase noise would suffice to determine the optimum point to switch between FLL and PLL modes, as suggested in the Allan deviation experiments. As in <ref> [2] </ref>, the phase noise could be measured prior to regular operation and the optimum intercept determined. However, as determined by experiment, this is not practical in the current Internet. is typically congested during working hours in Europe and the US.
Reference: 3. <author> Mills, </author> <title> D.L. Improved algorithms for synchronizing computer network clocks. </title> <journal> IEEE/ACM Trans. Networks (June 1995), </journal> <pages> 245-254. </pages>
Reference-contexts: Using available technology and existing workstations and Internet paths, it has been demonstrated that computers can be reliably synchronized to better than a millisecond in LANs and better than a few tens of milliseconds in most places in the global Internet <ref> [3] </ref>. This technology includes the Network Time Protocol (NTP), now used in an estimated total of over 100,000 servers and clients in the global Internet. <p> The current NTP Version 3 design with improvements described in <ref> [3] </ref> represent the departure point for this report. The goal is the engineering design and evaluation of the algorithm intended for NTP Version 4, which is in the implementation design stage. The performance of the new algorithm has been experimentally determined using a set of experiments described in this report. <p> The clock filter functions as a tapped delay line, with the output V s taken at the sample selected by the algorithm. The clock selection, clustering and combining algorithms (not shown) provide additional processing, as decribed in <ref> [3] </ref>. The loop filter, with impulse response F ( t ), produces a correction V c , which controls the VFO frequency w c and thus its phase . <p> The residual error thus has a sawtooth characteristic with maximum amplitude 500 m s, which can be reduced only by reducing the intrinsic frequency error or by reducing the adjustment interval as described elsewhere <ref> [3] </ref>. Assuming the clock discipline algorithm can learn the nominal frequency error of each clock oscillator separately and correct for it, the primary characteristic affecting the clock accuracy is the oscillator stability. The traditional characterization of oscillator stability is a plot of Allan variance [1], which is defined as follows.
Reference: 4. <author> Mills, </author> <title> D.L. Internet time synchronization: the Network Time Protocol. </title> <journal> IEEE Trans. Commu nications COM-39, </journal> <month> 10 (October </month> <year> 1991), </year> <pages> 1482-1493. </pages> <note> Also in: Yang, </note> <editor> Z., and T.A. Marsland (Eds.). </editor> <title> Global States and Time in Distributed Systems, </title> <publisher> IEEE Press, Los Alamitos, </publisher> <address> CA, 91 102. </address>
Reference-contexts: Appendix A contains a description of the program and directions for its use. 2. Network Time Protocol While not in itself the subject of this report, an brief overview of the NTP design will be helpful in understanding the algorithms involved. As described in <ref> [4] </ref>, a synchronization subnet is a hierarchical set of time servers and clients organized by stratum , in much the same way as in digital 3 telephone networks. The servers at the lowest stratum are synchronized to national standards by radio or telephone modem.
Reference: 5. <author> Mills, </author> <title> D.L. Modelling and analysis of computer network clocks. </title> <institution> Electrical Engineering Department Report 92-5-2, University of Delaware, </institution> <month> May </month> <year> 1992, </year> <pages> 29 pp. </pages>
Reference-contexts: The characteristic behavior of this model, which is determined by F ( t ) and the various gain factors, is studied in many textbooks and summarized in <ref> [5] </ref>. As described in [6], the original NTP Version 3 clock discipline algorithm, which is based on a conventional PLL, has been improved to include a FLL capability.
Reference: 6. <author> Mills, </author> <title> D.L. Network Time Protocol (Version 3) specification, implementation and analysis. </title> <institution> Network Working Group Report RFC-1305, University of Delaware, </institution> <month> March </month> <year> 1992, </year> <pages> 113 pp. </pages>
Reference-contexts: NTP is designed to do this in Unix and Windows operating systems. The NTP architecture, protocol and algorithms have evolved over almost two decades, with the latest NTP Version 3 designated an Internet (draft) standard <ref> [6] </ref>. Among the goals of this design are: 1. Optimize the computer clock accuracy and stability, subject to constraints of network over heads and/or telephone toll charges, relative to local and/or remote sources of time. 2. <p> In this case, it faithfully reproduces the actual NTP operations with a simulated clock discipline algorithm. This report begins with a brief overview of the NTP Version 4 architecture and algorithms. A comprehensive description of the NTP Version 3 architecture, protocol and algorithms can be found in <ref> [6] </ref>. Next is a detailed description of the new clock discipline algorithm, including a mathematical analysis of its operation. <p> The characteristic behavior of this model, which is determined by F ( t ) and the various gain factors, is studied in many textbooks and summarized in [5]. As described in <ref> [6] </ref>, the original NTP Version 3 clock discipline algorithm, which is based on a conventional PLL, has been improved to include a FLL capability.
Reference: 7. <author> Mills, </author> <title> D.L. Unix kernel modifications for precision time synchronization. </title> <institution> Electrical Engi neering Department Report 94-10-1, University of Delaware, </institution> <month> October </month> <year> 1994, </year> <pages> 24 pp. </pages>
Reference-contexts: Portions of the algorithm are implemented in the NTP software that runs the protocol and provides the computer clock corrections. The remaining portions have been implemented in this software and in the operating system kernel. As described elsewhere <ref> [7] </ref>, for greater accuracy, a stable oscillator and counter delivering a pulse-per-second (PPS) signal can be used to steer the computer clock frequency, while an external NTP server or local radio provides the UTC time. <p> While requiring some additional complexity and per-site engineering, this combination has been shown to provide accuracies in the order of a few tens of microseconds <ref> [7] </ref>. 2 The emphasis in this report is on recent developments in the clock discipline algorithm and its error modelling and evaluation. The current NTP Version 3 design with improvements described in [3] represent the departure point for this report. <p> In the NTP dae mon for Unix and Windows, T A is one second; while, in the modified kernel described elsewhere <ref> [7] </ref>, T is one clock tick. This model provides rapid adjustment (fast convergence) when x is relatively large, together with fine adjustment (low jitter) when x is relatively small. <p> The PPS experiment measured the freerunning clock offsets relative to an external precision PPS source. This experiment used data collected over about five days for a SPARC IPC and monitored using the ppsclock line discipline <ref> [7] </ref> connected via a level converter and pulse regenerator to the PPS signal from a cesium oscillator. A special test program measured the PPS offsets at 2-s intervals and recorded them in a data file. <p> The NOISE, PPS and LAN results duplicate the data of Figure 12 for comparison. The BARN, 3. Prior to Digital Unix 4.0, the kernel clock resolution was limited to about 1 ms. Digital Unix 4.0 incorporates the authors kernel modifications <ref> [7] </ref>, which provide a resolution of 1 m s. In principle, the kernel clock resolution is limited only by the CPU clock period. 23 PEERS, USNO and IEN results use the rawstats data collected from a selected subset of the 19 remote time servers. <p> As demonstrated previously, this requires a compromise between poll interval and error margin. Figure 23 illustrates typical cases involving a PPS signal with suitable interface, as described in <ref> [7] </ref>. Each of the four curves is labelled with three numbers, reading from the top: mean poll interval, standard error in milliseconds and maximum absolute error in milliseconds.
Reference: 8. <author> Stein, </author> <title> S.R. Frequency and time their measurement and characterization (Chapter 12). In: E.A. </title> <editor> Gerber and A. Ballato (Eds.). </editor> <title> Precision Frequency Control, Vol. </title> <publisher> 2 , Academic Press, </publisher> <address> New York 1985, </address> <pages> 191-232, 399-416. </pages> <note> Also in: Sullivan, D.B., </note> <author> D.W. Allan, D.A. Howe and F.L. </author> <title> Walls (Eds.). Characterization of Clocks and Oscillators . National Institute of Standards and Technology Technical Note 1337, </title> <type> U.S. </type> <institution> Government Printing Office (January, </institution> <year> 1990), </year> <note> TN61 TN119. 33 </note>
Reference-contexts: The shape of each curve depends on the phase and frequency variations specific to the particular clock oscillator and network path involved. The phase variations, which are dominated by white phase noise, produce straight lines with slope -1 on the plots <ref> [8] </ref>. The frequency variations, which are dominated by random-walk frequency noise, produce straight lines with slope +0.5 on the plots. The intersection of these two lines, called here the Allan intercept point , characterizes each particular clock oscillator and network path.
References-found: 9

