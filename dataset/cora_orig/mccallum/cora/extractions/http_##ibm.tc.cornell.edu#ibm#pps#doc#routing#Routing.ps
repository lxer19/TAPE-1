URL: http://ibm.tc.cornell.edu/ibm/pps/doc/routing/Routing.ps
Refering-URL: http://spud-web.tc.cornell.edu/HyperNews/get/Hardware/3.html
Root-URL: http://www.tc.cornell.edu
Email: abali@watson.ibm.com  
Phone: 2  
Title: Routing Algorithms for IBM SP1  
Author: Bulent Abali and Cevdet Aykanat 
Address: P.O.Box 218, Yorktown Heights, NY 10598  06533 Ankara, Turkey  
Affiliation: 1 IBM Thomas J. Watson Research Center,  Bilkent University,  
Note: in Lecture Notes in Comp. Sci., Springer-Verlag. Vol. 853, 1994. pp. 161-175  
Abstract: Scalable multicomputers are based upon interconnection networks that typically provide multiple communication routes between any given pair of processor nodes. Routes must be selected for communication so that the load is distributed evenly among the links and switches to prevent congestion in the network. We describe the route selection algorithm used in the IBM 9076 SP1 multicomputer. We then describe a new algorithm for reducing network congestion and compare the two algorithms.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> C. B. Stunkel, D. G. Shea, B. Abali, M. M. Denneau, P. H. Hochschild, D. J. Joseph, B. J. Nathanson, M. Tsao, and P. R. Varker, </author> <booktitle> "Architecture and Implementation of Vulcan," in Proc. Int. Parallel Processing Symp., </booktitle> <pages> pp. 268-274, </pages> <month> April </month> <year> 1994. </year> <note> An extended version is also available as Research Report RC19492 from the IBM T.J. </note> <institution> Watson Research Center. </institution>
Reference-contexts: In Section 2 we describe the SP1 routing algorithm. In Section 3 we describe the experimental routing algorithm and compare the two algorithms in Section 4. 1.1 The SP1 Network Architecture The 9076 SP1 is a commercially available multicomputer whose communication architecture is based upon the Vulcan architecture <ref> [1] </ref>. The SP1 processor nodes attach to a multistage interconnection network consisting of 8 input 8 output non-blocking switches [1]. The switch chip shown in Fig.3 consists of 8 receiver and 8 transmitter modules, an unbuffered 8 fi 8 crossbar, and a 1-KByte large central queue. <p> algorithm and compare the two algorithms in Section 4. 1.1 The SP1 Network Architecture The 9076 SP1 is a commercially available multicomputer whose communication architecture is based upon the Vulcan architecture <ref> [1] </ref>. The SP1 processor nodes attach to a multistage interconnection network consisting of 8 input 8 output non-blocking switches [1]. The switch chip shown in Fig.3 consists of 8 receiver and 8 transmitter modules, an unbuffered 8 fi 8 crossbar, and a 1-KByte large central queue. Each input and output port consists of 8 data lines and 2 control lines. Processor nodes communicate by sending and receiving message packets. <p> In this respect, the SP1 network topologies differ from more commonly known unidirectional multistage interconnection networks (MIN) such as the Omega and indirect binary n-cube [5, 6]. Bidirectionality enhances the modularity, fault-tolerance, and diagnosis of the network as described in <ref> [1] </ref>. Eight switches placed in a 2-stage configuration interconnected with a shu*e form the switch board as shown in Fig. 4. The switch board provides full connectivity; it can route a packet from any 32 input ports to any 32 output ports. <p> Examples of 128 node and 256 node networks are shown in Figs. 5 and 6. Custom network topologies of any size can be easily constructed due to the link technology used. 2 The SP1 Routing Algorithm We developed the SP1 routing algorithm originally for the Vulcan prototype <ref> [1] </ref>. A modified version of the algorithm is also being used in IBM's recently announced SP2 multicomputer. The SP1 routing algorithm is a simple algorithm that selects a single shortest path between each pair of processor nodes, although multiple shortest paths may exist.
Reference: 2. <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-Free Message Routing in Multiprocessor Interconnection Networks," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-36, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Each input and output port consists of 8 data lines and 2 control lines. Processor nodes communicate by sending and receiving message packets. Packets are of variable length with up to 255 bytes in size. The method of packet transfer is similar to wormhole routing <ref> [2] </ref>, with the difference in that when a packet is blocked the packet bytes are not buffered in place but they are temporarily transferred to the central queue until the blocked output port is cleared up. <p> The method of packet transfer also differs from virtual cut-through technique <ref> [3, 2] </ref> in that flow control is byte based, not packet based. When there is no output contention packet bytes pass through the switch chip via crossbar in 5 clock cycles. <p> In this respect, the SP1 routing algorithm is comparable to the commonly known XY routing algorithm for 2 dimensional meshes and the e-cube routing algorithm for hypercubes <ref> [2] </ref>. <p> However, in the experiments we observed that the SP1 routing algorithm realizes many commonly used communication patterns without link conflicts for some network topologies. In the SP1 multicomputer, network topologies are generally designed to be deadlock-free <ref> [2] </ref> with shortest path routes. For example, all the topologies used in the experiments reported in this paper are deadlock-free with shortest path routes.
Reference: 3. <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual Cut-Through: A new computer communications switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: The method of packet transfer also differs from virtual cut-through technique <ref> [3, 2] </ref> in that flow control is byte based, not packet based. When there is no output contention packet bytes pass through the switch chip via crossbar in 5 clock cycles.
Reference: 4. <author> A. S. Tanenbaum, </author> <title> Computer Networks. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, </publisher> <year> 1981. </year>
Reference-contexts: Packets are formatted such that the first byte of each packet indicates the packet length, followed by a number of routing bytes, followed by data. The source routing technique is used for routing packets <ref> [4] </ref>. In this technique, the source processor node determines the complete route and puts the respective route bytes in the packet. As the packet proceeds to its destination, each switch chip examines the first route byte of the packet and determines the destination output port.
Reference: 5. <author> D. H. Lawrie, </author> <title> "Access and alignment of data in an array processor," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-24, </volume> <pages> pp. 1145-1155, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: In this respect, the SP1 network topologies differ from more commonly known unidirectional multistage interconnection networks (MIN) such as the Omega and indirect binary n-cube <ref> [5, 6] </ref>. Bidirectionality enhances the modularity, fault-tolerance, and diagnosis of the network as described in [1]. Eight switches placed in a 2-stage configuration interconnected with a shu*e form the switch board as shown in Fig. 4.
Reference: 6. <author> M. C. Pease, </author> <title> "The indirect binary n-cube microprocessor array," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-26, </volume> <pages> pp. 458-473, </pages> <month> May </month> <year> 1977. </year>
Reference-contexts: In this respect, the SP1 network topologies differ from more commonly known unidirectional multistage interconnection networks (MIN) such as the Omega and indirect binary n-cube <ref> [5, 6] </ref>. Bidirectionality enhances the modularity, fault-tolerance, and diagnosis of the network as described in [1]. Eight switches placed in a 2-stage configuration interconnected with a shu*e form the switch board as shown in Fig. 4.
Reference: 7. <author> S. A. Felperin, L. Gravano, G. D. Pifarre, and J. L. C. Sanz, </author> <title> "Routing Techniques for Massively Parallel Communication," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, </volume> <pages> pp. 488-503, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The shortest path routing is not necessarily the best choice for all communication patterns <ref> [7] </ref>. However, in the absence of any information on communication patterns, we decided to use the shortest paths since fewer switches and links would be used. <p> Therefore, it is a nonadaptive algorithm. Adaptive switches are known to perform better than nonadaptive switches in general with somewhat increased switch complexity <ref> [9, 7] </ref>. However, in the experiments we observed that the SP1 routing algorithm realizes many commonly used communication patterns without link conflicts for some network topologies. In the SP1 multicomputer, network topologies are generally designed to be deadlock-free [2] with shortest path routes.
Reference: 8. <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest, </author> <title> Introduction to Algorithms. </title> <publisher> NY: McGraw-Hill, </publisher> <year> 1990. </year>
Reference-contexts: The algorithm is originally due to <ref> [8] </ref> and uses a first-in, first-out (FIFO) queue Q for the breadth-first search. We added a simple static load balancing strategy to ensure that links are included in the selected routes in a balanced manner. The network graph G = (V; E) is represented by a linked list of vertices.
Reference: 9. <author> R. V. Boppana and S. Chalasani, </author> <title> "A Comparison of Adaptive Wormhole Routing Algorithms," </title> <booktitle> in Proceedings of the 20th Ann. Int. Symp. on Computer Architecture, </booktitle> <pages> pp. 351-360, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Therefore, it is a nonadaptive algorithm. Adaptive switches are known to perform better than nonadaptive switches in general with somewhat increased switch complexity <ref> [9, 7] </ref>. However, in the experiments we observed that the SP1 routing algorithm realizes many commonly used communication patterns without link conflicts for some network topologies. In the SP1 multicomputer, network topologies are generally designed to be deadlock-free [2] with shortest path routes.
Reference: 10. <author> T. Bultan and C. Aykanat, </author> <title> "A New Mapping Heuristic Based on Mean Field Annealing," </title> <journal> J. Parallel and Distributed Comput., </journal> <volume> vol. 16, </volume> <pages> pp. 292-305, </pages> <year> 1992. </year>
Reference-contexts: The NIG model may appear unrealistic for general applications since it does not model the temporal interactions between the processor nodes. However, a large class of applications such as iterative solution of systems of equations that arise in numerical computing may be represented with NIGs (see <ref> [10, 11] </ref> for examples). When all vertices of an NIG have an in-degree and out-degree of 1, then it is a permutation routing problem.
Reference: 11. <author> C. Aykanat, F. Ozguner, F. Ercal, and P. Sadayappan, </author> <title> "Iterative Algorithms for Solution of Large Sparse Systems of Linear Equations on Hypercubes," </title> <journal> IEEE Trans. Comput, </journal> <volume> vol. 37, no. 12, </volume> <pages> pp. 1554-1567, </pages> <year> 1988. </year>
Reference-contexts: The NIG model may appear unrealistic for general applications since it does not model the temporal interactions between the processor nodes. However, a large class of applications such as iterative solution of systems of equations that arise in numerical computing may be represented with NIGs (see <ref> [10, 11] </ref> for examples). When all vertices of an NIG have an in-degree and out-degree of 1, then it is a permutation routing problem.
Reference: 12. <author> D. D. Kandlur and K. G. Shin, </author> <title> "Traffic Routing for Multicomputer Networks with Virtual Cut-Through Capability," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 41, </volume> <pages> pp. 1257-1270, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: A cost function similar to Eq. 1 was used in <ref> [12] </ref> for routing in networks with virtual cut-through capability. However, Eq. 1 differs from that of [12] such that the second term due to switch sharing does not exist in [12]. <p> A cost function similar to Eq. 1 was used in <ref> [12] </ref> for routing in networks with virtual cut-through capability. However, Eq. 1 differs from that of [12] such that the second term due to switch sharing does not exist in [12]. Furthermore, the distance metric that we use in our algorithm is based on the number of network hops, whereas in [12] it is based on the link utilization. <p> A cost function similar to Eq. 1 was used in <ref> [12] </ref> for routing in networks with virtual cut-through capability. However, Eq. 1 differs from that of [12] such that the second term due to switch sharing does not exist in [12]. Furthermore, the distance metric that we use in our algorithm is based on the number of network hops, whereas in [12] it is based on the link utilization. A brief sketch of the adaptive algorithm is given in Fig. 2. The objective is to minimize the cost. <p> However, Eq. 1 differs from that of <ref> [12] </ref> such that the second term due to switch sharing does not exist in [12]. Furthermore, the distance metric that we use in our algorithm is based on the number of network hops, whereas in [12] it is based on the link utilization. A brief sketch of the adaptive algorithm is given in Fig. 2. The objective is to minimize the cost.
Reference: 13. <author> B. Abali, F. Ozguner, and A. Bataineh, </author> <title> "Balanced Parallel Sort on Hypercube Multiprocessors," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 4, </volume> <pages> pp. 572-581, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: EXOR refers to a communication pattern that provides conflict free routing in hypercubes as shown in <ref> [13] </ref>.

References-found: 13

