URL: http://www.cs.toronto.edu/~micah/pubs/trans.ps
Refering-URL: http://www.cs.toronto.edu/~micah/pubs/pubs.html
Root-URL: 
Title: A Modular Analysis of Network Transmission Protocols  
Author: Micah Adler Yair Bartal John W. Byers Michael Luby Danny Raz 
Note: Supported in part by NSF operating grants CCR-9304722 and NCR-9416101.  
Address: Berkeley.  
Affiliation: The International Computer Science Institute in Berkeley, California, and the University of California,  
Abstract: We propose a new model for the analysis of data transmission protocols in lossy communication networks. The overall goal of a data transmission protocol is to successfully transmit a message from the sender to the receiver. We study the performance of protocols in an adversarial setting where the loss pattern and latencies of packets are determined by an adversary. We advocate the modular decomposition of data transmission protocols into a time scheduling policy, which determines when packets are to be sent, and a data selection policy, which determines what data is to be placed in each sent packet. We concentrate on the data selection policy and require that the protocol will achieve high bandwidth utilization in transmitting any prefix of the transmitted message. The simple and universal data selection policy we introduce is provably close to optimal in the following sense: For any time scheduling policy and any network behavior, in the worst case prefix measure our data selection policy performs as well as any other data selection policy up to a constant additive term. Our explicit modular decomposition of a transmission protocol into two policies should be contrasted with existing network protocols such as TCP/IP. Our result shows that the performance of the overall transmission protocol would not degrade in performance (and could improve dramatically) if it used our universal data selection policy in place of its own. We therefore reduce the problem of designing a data transmission protocol to the task of designing a time scheduling policy. z DEC/SRC, 130 Lytton Avenue, Palo Alto, California 94301. A large portion of this research was done while still at the International Computer Science Institute in Berkeley, California. Research supported in part by National Science Foundation operating grants CCR-9304722 and NCR-9416101, and United States-Israel Binational Science Foundation grant No. 92-00226. 
Abstract-found: 1
Intro-found: 1
Reference: [AAF+ 96] <author> D.M. Andrews, B. Awerbuch, A. Fernandez, J. Kleinberg, F.T. Leighton, Z. Liu. </author> <title> Universal stability results for greedy contention-resolution protocols. </title> <booktitle> In Proc. 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Our abstraction models the network behavior as arbitrary, i.e., it may drop any sequence of packets and may vary the latency on packet transmissions arbitrarily. This is somewhat similar to the approach of recent works such as the adversarial models of [BKR+ 95] and <ref> [AAF+ 96] </ref>. In these works the performance of protocols on packet routing networks have been provably analyzed, even when the distribution of packet arrivals and routes is arbitrary, subject to the requirement that edge capacity constraints are not violated.
Reference: [BPSK 96] <author> H. Balakrishnan, V. Padmanabhan, S. Seshan, and R. Katz. </author> <title> A Comparison of Mechanisms for Improving TCP Performance over Wireless Links. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 256-269, </pages> <year> 1996. </year>
Reference: [BKR+ 95] <author> A. Borodin, J. Kleinberg, P. Raghavan, M. Su-dan, D. Williamson. </author> <title> Adversarial queueing theory. </title> <booktitle> In Proc. 28th ACM Symposium on Theory of Computing '96, </booktitle> <year> 1995. </year>
Reference-contexts: Our abstraction models the network behavior as arbitrary, i.e., it may drop any sequence of packets and may vary the latency on packet transmissions arbitrarily. This is somewhat similar to the approach of recent works such as the adversarial models of <ref> [BKR+ 95] </ref> and [AAF+ 96]. In these works the performance of protocols on packet routing networks have been provably analyzed, even when the distribution of packet arrivals and routes is arbitrary, subject to the requirement that edge capacity constraints are not violated.
Reference: [BOM 94] <author> L. S. Brakmo, S. W. O'Malley and L. L. Peter-son. </author> <title> TCP Vegas: New Techniques for Congestion Detection and Avoidance. </title> <booktitle> In Proc. ACM SIGCOMM '94, </booktitle> <pages> pp. 24-35, </pages> <year> 1994. </year>
Reference: [CLZ 87] <author> D. D. Clark, M. L. Lambert, and L. Zhang. NETBLT: </author> <title> A High Throughput Transport Protocol. </title> <journal> Computer Communications Review, </journal> <volume> 17(5) </volume> <pages> 353-359, </pages> <year> 1987. </year>
Reference-contexts: We advocate and justify in this paper a modular approach to protocol design. This approach has obvious advantages: It encourages the design of simple and easy to understand protocols, while explicitly discouraging consideration of complex interactions between the different parts. This notion is not new the architects of NETBLT <ref> [CLZ 87] </ref> and the proponents of forward acknowledgment in TCP/IP [MM 96] both advocate explicit decoupling of congestion control algorithms from other parts of the protocol.
Reference: [FF 96] <author> K. Fall and S. Floyd. </author> <title> Simulation-based Comparisons of Tahoe, Reno and SACK TCP. </title> <journal> Computer Communications Review, </journal> <volume> 26(3), </volume> <month> July </month> <year> 1996. </year>
Reference-contexts: Our model supports negative acknowledgments (NACKs), when the receiver can infer that a packet has been lost. It can also support the use of acknowledgments which acknowledge multiple packets, similar to the use of selective acknowledgment in TCP (see for example <ref> [FF 96, JB 88] </ref>), simply by unpacking such a multiple acknowledgment into a sequence of separate acknowledgments. Although the model implicitly permits the receiver to choose what to acknowledge at each time-step, our algorithms will use a rather simple mechanism for doing so. <p> This is made possible by the fact that successfully transmitted packets are guaranteed to arrive in order, and we incur a per acknowledgment overhead of at most B bits. This acknowledgment style is similar to the proposal to add selective acknowledgment to TCP (see for example [JB 88] <ref> [FF 96] </ref>), designed to improve TCP performance over lossy networks.
Reference: [Jac 88] <author> V. Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proc. ACM SIGCOMM '88, </booktitle> <pages> pp. 314-329, </pages> <year> 1988. </year>
Reference: [JB 88] <author> V. Jacobson and R. Braden. </author> <title> TCP Extensions for Long-Delay Paths, </title> <month> October </month> <year> 1988. </year> <note> RFC 1072. </note>
Reference-contexts: Our model supports negative acknowledgments (NACKs), when the receiver can infer that a packet has been lost. It can also support the use of acknowledgments which acknowledge multiple packets, similar to the use of selective acknowledgment in TCP (see for example <ref> [FF 96, JB 88] </ref>), simply by unpacking such a multiple acknowledgment into a sequence of separate acknowledgments. Although the model implicitly permits the receiver to choose what to acknowledge at each time-step, our algorithms will use a rather simple mechanism for doing so. <p> This is made possible by the fact that successfully transmitted packets are guaranteed to arrive in order, and we incur a per acknowledgment overhead of at most B bits. This acknowledgment style is similar to the proposal to add selective acknowledgment to TCP (see for example <ref> [JB 88] </ref> [FF 96]), designed to improve TCP performance over lossy networks.
Reference: [LTWW 95] <author> W. E. Leland, M. S. Taqqu, W. Willinger, and D. V. Wilson. </author> <title> On the Self-Similar Nature of Ethernet Traffic (Extended Version). </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 2, No. 1, </volume> <pages> pp. 1-15, </pages> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: However, in practice, working networks have become extremely complex and difficult to model, since these networks can have arbitrary topologies, variable edge capacities and can experience bursty periods of abnormally high traffic <ref> [LTWW 95, YKT 96] </ref>. Furthermore, packets traversing these networks can be dropped by intermediate routers or can experience unpredictable and widely varying round-trip times [Pax 96].
Reference: [MM 96] <author> M. Mathis and J. Mahdavi. </author> <title> Forward Acknowledgment: Refining TCP Congestion Control. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 281-291, </pages> <year> 1996. </year>
Reference-contexts: This approach has obvious advantages: It encourages the design of simple and easy to understand protocols, while explicitly discouraging consideration of complex interactions between the different parts. This notion is not new the architects of NETBLT [CLZ 87] and the proponents of forward acknowledgment in TCP/IP <ref> [MM 96] </ref> both advocate explicit decoupling of congestion control algorithms from other parts of the protocol. As in [MM 96], we propose decomposing a transmission protocol into two parts: A time scheduling policy that determines when the packets are to be sent, and a data selection policy that determines what data <p> This notion is not new the architects of NETBLT [CLZ 87] and the proponents of forward acknowledgment in TCP/IP <ref> [MM 96] </ref> both advocate explicit decoupling of congestion control algorithms from other parts of the protocol. As in [MM 96], we propose decomposing a transmission protocol into two parts: A time scheduling policy that determines when the packets are to be sent, and a data selection policy that determines what data is to be placed in each sent packet.
Reference: [Pax 96] <author> V. Paxson. </author> <title> End-to-End Routing Behavior in the Internet. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 25-38, </pages> <year> 1996. </year>
Reference-contexts: Furthermore, packets traversing these networks can be dropped by intermediate routers or can experience unpredictable and widely varying round-trip times <ref> [Pax 96] </ref>. Therefore, drawing conclusions about TCP based on a particular model or interpretation of the network is sharply limited by those assumptions introduced to derive the model. <p> This natural assumption is further supported by recent Internet measurements by Paxson <ref> [Pax 96] </ref> and others which indicate that out-of-order packet arrivals currently occur very rarely. Under this assumption, we can focus on bounding the minimax regret, or competitive difference.
Reference: [ST 85] <author> D. Sleator and R. Tarjan. </author> <title> Amortized Efficiency of List Update and Paging Rules. </title> <journal> In Communications of the ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: Thus, using our stringent performance measure ensures that our data selection policy works well independent of where the breakpoints are within the stream. We analyze this performance measure for our data selection policy in the spirit of competitive analysis of on-line algorithms introduced in <ref> [ST 85] </ref>. The analysis measures the worst-case performance of our data selection policy when compared with the performance of an optimal data selection policy, where comparisons are made at all points in time for each possible time scheduling policy and each specification of the behavior of the network.
Reference: [YKT 96] <author> M. Yajnik, J. Kurose, and D. Towsley. </author> <title> Packet Loss Correlation in the MBone Multicast Network, </title> <booktitle> In Proceedings of IEEE Global Internet '96, </booktitle> <month> November, </month> <year> 1996. </year>
Reference-contexts: However, in practice, working networks have become extremely complex and difficult to model, since these networks can have arbitrary topologies, variable edge capacities and can experience bursty periods of abnormally high traffic <ref> [LTWW 95, YKT 96] </ref>. Furthermore, packets traversing these networks can be dropped by intermediate routers or can experience unpredictable and widely varying round-trip times [Pax 96].
References-found: 13

