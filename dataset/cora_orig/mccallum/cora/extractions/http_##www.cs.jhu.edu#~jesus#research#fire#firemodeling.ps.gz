URL: http://www.cs.jhu.edu/~jesus/research/fire/firemodeling.ps.gz
Refering-URL: http://www.cs.jhu.edu/~jesus/research/fire/fire.html
Root-URL: http://www.cs.jhu.edu
Email: JESUS@CS.JHU.EDU  
Title: FIRE MODELING: AN ONTOGENETIC PHYSICAL MODEL  
Author: THEO SCHLOSSNAGLE 
Keyword: Background  
Abstract: There are many approaches to the modeling of physical phenomenon such as steam, smoke, and fire. Most of these approaches involve procedural texturing and/or animation. One simple approach is to pragmatically devise equations that would represent the looks of such a model, ignoring any physical representation or phenomenon. The other end of the spectrum would be a technique that revolves around an accurate physical model of such a system, placing this model in an environment. We will see that realistic fire can be achieved by a combination of the two[4]. In order to model fire we will either need the dynamic and extremely large set of guiding equations to model our system (as if we were physicists!), or a little computer magic. This magic comes in the form of noise. We must be very explicit in our requirements for this noise. Noise in the strictest sense is a signal with even an distribution of all frequencies that is never the same twice. The distribution of this noise is what we are aiming at, but the inability to create the exact same noise pattern would be disastrous. Simple movement can be described by noise and for continuity purposes we will need to recreate the same noise vector frame after frame to achieve realistic animation. There have been many approaches in the area of stochastic noise creation. The basis for these methods have varied from simple pseudo-random lattices with polynomial interpolation to multi-resolutioning wavelet construction. As we have established, we do want repeatable noise vectors, but we also want an clean, even distribution. As in all of computer science, no deterministic finite state automata 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> David S. Ebert, </author> <title> editor. Texturing and Modeling: A Procedural Approach. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference: [2] <author> Gerald E. Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design: A Practical Guide. </title> <publisher> Academic Press, </publisher> <address> New York, 4th edition, </address> <year> 1997. </year>
Reference-contexts: We are guaranteed to have a resulting v within the range [0::1] where 0 is no energy and 1 is maximum energy. For a conversion from energy to color value, I interpolated a set of equally spaced color knots using a Catmull-Rom spline <ref> [2] </ref>.
Reference: [3] <author> James D. Foley, Adnries van Dam, Steven K. Fuiner, John F. Hughes, and Richard L. Phillips. </author> <title> Introduction to Computer Graphics. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, USA, </address> <year> 1994. </year>
Reference-contexts: The following images where generated by simple program that computes a rotation matrix for an angle of rotation around the z-axis, transforms the 3D particle system into a temporary 3D space and then performs a parallel projection <ref> [3] </ref> rendering of the image. Because we intend to have the fire lie within a circumscribed cylinder within out rectangular prism, we can ignore those points rotated out of or into our 80x80x160 space.
Reference: [4] <author> Alan Watt and Mark Watt. </author> <title> Advanced Animation and Rendering Techniques. </title> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1992. </year>
References-found: 4

