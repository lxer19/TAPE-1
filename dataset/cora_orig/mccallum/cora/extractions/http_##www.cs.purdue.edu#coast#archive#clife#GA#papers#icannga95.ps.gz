URL: http://www.cs.purdue.edu/coast/archive/clife/GA/papers/icannga95.ps.gz
Refering-URL: http://www.cs.purdue.edu/coast/archive/clife/GA/papers/
Root-URL: http://www.cs.purdue.edu
Title: EVOLUTIONARY HEURISTICS FOR THE BIN PACKING PROBLEM  
Author: Sami Khuri Martin Schutz Jorg Heitkotter 
Date: Apr 18-21)  
Note: (Published in the proceedings of ICANNGA '95 Int'l Conf on Artificial NNs and GAs,  
Address: One Washington Square San Jose, CA 95192-0103, U.S.A.  D-44221 Dortmund, Germany  Emil-Figge-Str. 80 D-44227 Dortmund, Germany  
Affiliation: Department of Mathematics Computer Science San Jose State University  Universitat Dortmund Fachbereich Informatik, LS XI  EUnet Deutschland GmbH Research Development  
Abstract: In this paper we investigate the use of two evolutionary based heuristic to the bin packing problem. The intractability of this problem is a motivation for the pursuit of heuristics that produce approximate solutions. Unlike other evolutionary based heuristics used with optimization problems, ours do not use domain-specific knowledge and has no specialized genetic operators. It uses a straightforward fitness function to which a graded penalty term is added to penalize infeasible strings. The encoding of the problem makes use of strings that are of integer value. Strings do not represent permutations of the objects as is the case in most approaches to this problem. We use a different representation and give justifications for our choice. Several problem instances are used with a greedy heuristic and the evolutionary based algorithms. We compare the results and conclude with some observations, and suggestions on the use of evolutionary heuristics for combinatorial optimization problems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Th. Back and M. Schutz. </author> <title> Evolution strategies for mixed-integer optimization of optical multilayer systems. </title> <booktitle> In Proceedings of the 4th Annual Conference on Evolutionary Programming, </booktitle> <year> 1995. </year> <note> (accepted for publication). </note>
Reference-contexts: For the ES, we make use of the package EVOS + [11], which was successfully used as an optimization tool for mixed integer problems in the field of optics <ref> [1] </ref>. In the third section, several problem instances are used with both evolutionary based heuristics and the greedy heuristic and the results are compared. Our work concludes with some observations from our findings, and some suggestions on the use of evolutionary heuristics for other combinatorial optimization problems.
Reference: [2] <author> J. E. Beasley. OR-Library: </author> <title> Distributing test problems by electronic mail. </title> <journal> Journal of the Operational Research Society, </journal> <volume> 41(11) </volume> <pages> 1069-1072, </pages> <year> 1990. </year>
Reference-contexts: Note that we might get different fillings of the 4 bins since some of the objects have equal weights. Experimental Results For our experimental runs, we make use of the 40 bin packing problem instances found in Beasley's OR-library <ref> [2] </ref>. These are divided into two groups. The first (binpack4 from the OR-library) has 20 problems, each consisting of 1000 objects and the bin capacity is 150.
Reference: [3] <author> A. L. Corcoran and R. L. Wainwright. Libga: </author> <title> A user-friendly workbench for order-based genetic algorithm research. </title> <booktitle> In Proceedings of the 1993 ACM/SIGAPP Symposium on Applied Computing, </booktitle> <pages> pages 111-117. </pages> <publisher> ACM, ACM Press, </publisher> <month> February </month> <year> 1993. </year>
Reference-contexts: In the next section, we give the formal definition 1 of the bin packing problem including three greedy based heuristics. The paper then shifts to the evolutionary based heuristics. The different ingredients with justifications, for our GA implementation are then presented and encoded in LibGA <ref> [3] </ref>, the GA package we use in this work. For the ES, we make use of the package EVOS + [11], which was successfully used as an optimization tool for mixed integer problems in the field of optics [1].
Reference: [4] <author> E. Falkenaur. </author> <title> A new representation and operators for genetic algorithms applied to grouping problems. </title> <journal> Evolutionary Computation, </journal> <volume> 2(2) </volume> <pages> 123-144, </pages> <year> 1994. </year>
Reference-contexts: First, it is very possible that evolutionary heuristics' representation, and more importantly, stochastic genetic operators are not appropriate for problems such as bin packing that exhibit a "grouping property". In other words, our work would tend to agree with Falkenauer's findings about GAs <ref> [4] </ref>. He believes that neither standard nor ordering operators are suitable for such problems and offers a hybrid Group Genetic Algorithm as a remedy. Second, we believe that our findings are not conclusive; more work has to be done.
Reference: [5] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability | A Guide to the Theory of NP-Completeness. </title> <publisher> Freemann & Co., </publisher> <address> San Francisco, CA, </address> <year> 1979. </year>
Reference-contexts: Note that with the three algorithms, we assume that bins are considered in increasing order of their indices. We define W = P n i=1 w i and by borrowing Garey and Johnson's notation <ref> [5] </ref>, we denote the number of non-empty bins obtained when First Fit Algorithm is applied to problem instance I by FF (I); and by FFD (I) the number of non-empty bins when the First Fit Decreasing Algorithm is used with problem instance I. <p> Similarly, let OPT (I) denote the number of bins obtained by the using an exact algorithm (thus OPT (I) is the optimum packing). It can be shown that <ref> [5] </ref>: F F (I) 2W F F D (I) = 9 Since Result 2 shows that the First Fit Decreasing Algorithm always yields solutions that are within 22% of the optimal for large problem instances, we chose to implement it so as to compare its performance with our evolutionary based heuristic.
Reference: [6] <author> D. E. Goldberg. </author> <title> Genetic algorithms in search, optimization and machine learning. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: Incidently, only a handful of exact algorithms do exist. Martello and Toth's branch-and-bound based "first-fit decreasing" heuristic is the most adequate algorithm for large problem instances [9]. In this work we describe the results of applying a genetic algorithm (GA) <ref> [6, 7] </ref> and an Evolution Strategy (ES) [12] to the bpp. The approach used here differs in more than one way to the traditional evolutionary algorithms.
Reference: [7] <author> J. H. Holland. </author> <title> Adaptation in natural and artificial systems. </title> <publisher> The University of Michigan Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1975. </year>
Reference-contexts: Incidently, only a handful of exact algorithms do exist. Martello and Toth's branch-and-bound based "first-fit decreasing" heuristic is the most adequate algorithm for large problem instances [9]. In this work we describe the results of applying a genetic algorithm (GA) <ref> [6, 7] </ref> and an Evolution Strategy (ES) [12] to the bpp. The approach used here differs in more than one way to the traditional evolutionary algorithms.
Reference: [8] <author> S. Khuri, T. Back, and J. Heitkotter. </author> <title> An evolutionary approach to combinatorial optimization problems. </title> <editor> In D. Cizmar, editor, </editor> <booktitle> Proceedings of the 22 nd Annual ACM Computer Science Conference, </booktitle> <pages> pages 66-73. </pages> <publisher> ACM, ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: Second, we believe that our findings are not conclusive; more work has to be done. After all, similar GA approaches have worked quite well with other combinatorial optimization problems <ref> [8] </ref>.
Reference: [9] <author> S. Martello and P. Toth. </author> <title> Knapsack Problems: Algorithms and Computer Implementations. </title> <publisher> Wiley, </publisher> <address> Chichester, West Sussex, England, </address> <year> 1990. </year>
Reference-contexts: Thus, unless P = N P , the search for exact algorithms is replaced by the design of approximate algorithms. Incidently, only a handful of exact algorithms do exist. Martello and Toth's branch-and-bound based "first-fit decreasing" heuristic is the most adequate algorithm for large problem instances <ref> [9] </ref>. In this work we describe the results of applying a genetic algorithm (GA) [6, 7] and an Evolution Strategy (ES) [12] to the bpp. The approach used here differs in more than one way to the traditional evolutionary algorithms.
Reference: [10] <author> C. H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: The bpp belongs to the class of NP-hard problems. The tripartite matching problem can be reduced to it <ref> [10] </ref>. Thus, unless P = N P , the search for exact algorithms is replaced by the design of approximate algorithms. Incidently, only a handful of exact algorithms do exist. Martello and Toth's branch-and-bound based "first-fit decreasing" heuristic is the most adequate algorithm for large problem instances [9].
Reference: [11] <author> M. </author> <type> Schutz. </type> <institution> Eine Evolutionsstrategie fur gemischt-ganzzahlige Optimierungsprobleme mit variabler Dimension. Diplomarbeit, Universitat Dortmund, Fachbereich Informatik, </institution> <year> 1994. </year>
Reference-contexts: The paper then shifts to the evolutionary based heuristics. The different ingredients with justifications, for our GA implementation are then presented and encoded in LibGA [3], the GA package we use in this work. For the ES, we make use of the package EVOS + <ref> [11] </ref>, which was successfully used as an optimization tool for mixed integer problems in the field of optics [1]. In the third section, several problem instances are used with both evolutionary based heuristics and the greedy heuristic and the results are compared.
Reference: [12] <author> H.-P. Schwefel. </author> <title> Evolution and Optimum Seeking. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: Incidently, only a handful of exact algorithms do exist. Martello and Toth's branch-and-bound based "first-fit decreasing" heuristic is the most adequate algorithm for large problem instances [9]. In this work we describe the results of applying a genetic algorithm (GA) [6, 7] and an Evolution Strategy (ES) <ref> [12] </ref> to the bpp. The approach used here differs in more than one way to the traditional evolutionary algorithms. <p> The second (binpack8) also has 20 problem instances, each consisting of 501 objects with bin capacity 100. 3 For the ES, we use a (15; 100)-ES, i.e. 15 parents and 100 offspring (see <ref> [12] </ref> for more details) with standard parameter settings. As for the GA, each run consists of 1000 generations with 500 strings in each.

References-found: 12

