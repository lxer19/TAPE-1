URL: http://www.cs.utexas.edu/users/dmcl/projects/mercury/papers/ps/TR98.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/projects/mercury/papers.html
Root-URL: http://www.cs.utexas.edu
Title: Statistical Delay Guarantee of Virtual Clock  
Author: Pawan Goyal Harrick M. Vin 
Address: Florham Park, NJ 07932  Taylor Hall 2.124, Austin, TX 78712  
Affiliation: AT&T Labs Research Department of Computer Sciences  University of Texas at Austin  
Abstract: In this paper, we derive a statistical delay guarantee of the generalized Virtual Clock scheduling algorithm. We define the concept of an equivalent fluid and packet source and prove a theorem that relates the departure time of a packet in a fluid FCFS multiplexor to its departure time in a packet multiplexor that uses generalized Virtual Clock algorithm for scheduling packets. This theorem enables us to use extant analyses of fluid FCFS multiplexors for providing statistical QoS guarantees in a network that employs the generalized Virtual Clock algorithm. We utilize the extant analysis of FCFS fluid multiplexors serving two-state on-off sources with exponentially distributed on and off durations to evaluate the increase in utilization yielded by our analysis technique. Our experiments demonstrate that our technique can increase utilization by upto 400%.
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Workshop on Packet Scheduling held in conjunction with SIGCOMM'96. </institution> <month> August </month> <year> 1996. </year>
Reference-contexts: However, analysis techniques for packet scheduling algorithms that enable a network to provide statistical guarantees and, thus, achieve higher utilization of resources have largely remained unexplored. In fact statistical analysis techniques for packet scheduling algorithms has been considered one of the important open problems <ref> [1] </ref>. In this paper, we take a step towards addressing this problem by deriving a statistical delay guarantee of the generalized Virtual Clock scheduling algorithm [10]. We first model the sources as fluid processes and analyze the queuing behaviour of a FCFS fluid multiplexor.
Reference: [2] <author> D. Anick, D. Mitra, and M.M. Sondhi. </author> <title> Stochastic Theory of a Data Handling System with Multiple Sources. </title> <journal> Bell Systems Technical Journal, </journal> <volume> 61:18711894, </volume> <year> 1982. </year>
Reference-contexts: This theorem enables us to use extant analyses of fluid FCFS multiplexors for providing 1 statistical QoS guarantees in a network that employs the generalized Virtual Clock algorithm. We utilize the analysis of FCFS fluid multiplexors serving two-state on-off sources with exponentially distributed on and off durations presented in <ref> [2] </ref> to evaluate the increase in utilization yielded by our analysis technique. Our experiments demonstrate that our technique can increase utilization by upto 400%. The rest of the paper is organized as follows. In Section 2, we derive the statistical delay guarantee of generalized Virtual Clock algorithm. <p> The steady state distribution of queue length of a FCFS fluid server when all the sources are identical on/off fluid sources with exponentially distributed periods has been derived in <ref> [2] </ref>. Thus, function G (fl) such that P ( c W (t) &gt; fl) G (fl) when t ! 1 is known. As argued in [18], P ( c W (t) &gt; fl) G (fl) even when t is finite. <p> This theorem enables us to use extant analyses of fluid FCFS multiplexors for providing statistical QoS guarantees in a network that employs the generalized Virtual Clock algorithm. We utilized the analysis of FCFS fluid multiplexors serving two state on-off sources with exponentially distributed on and off durations presented in <ref> [2] </ref> to evaluate the increase in utilization yielded by our analysis technique. Our experiments demonstrated that our technique can increase utilization by upto 400%. 12
Reference: [3] <author> J.C.R. Bennett and H. Zhang. </author> <title> W F 2 Q: Worst-case Fair Weighted Fair Queuing. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <pages> pages 120127, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [4] <author> J.C.R. Bennett and H. Zhang. </author> <title> Hierarchical Packet Fair Queuing Algorithms. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 5(5), </volume> <month> October </month> <year> 1997. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [5] <author> N. Figuera and J. Pasquale. Leave-in-Time: </author> <title> A New Service Discipline for Real-Time Communication in a Packet-Switching Data Network. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 207218, </pages> <year> 1995. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [6] <author> L. Georgiadis, R. Guerin, V. Peris, and K.N. Sivarajan. </author> <title> Efficient Network QoS Provisioning Based on per Node Traffic Shaping. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <pages> pages 102110, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out <ref> [6, 8, 10, 13] </ref>. These techniques enable a network to provide deterministic bounds on QoS. Though these techniques are appropriate when the packet sources can be well characterized deterministically, they lead to underutilization of resources when the sources have significant statistical variations [12].
Reference: [7] <author> P. Goyal. </author> <title> Packet Scheduling Algorithms for Integrated Services Networks. </title> <type> PhD thesis, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <year> 1997. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [8] <author> P. Goyal, S. S. Lam, and H. M. Vin. </author> <title> Determining End-to-End Delay Bounds In Heterogeneous Networks. </title> <journal> ACM/Springer-Verlag Multimedia Systems Journal, </journal> <volume> 5(3):157163, </volume> <month> May </month> <year> 1997. </year> <booktitle> Also appeared in the Proceedings of the Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> Pages 287-298, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out <ref> [6, 8, 10, 13] </ref>. These techniques enable a network to provide deterministic bounds on QoS. Though these techniques are appropriate when the packet sources can be well characterized deterministically, they lead to underutilization of resources when the sources have significant statistical variations [12].
Reference: [9] <author> P. Goyal and H. M. Vin. </author> <title> Fair Airport Scheduling Algorithms. </title> <booktitle> In Proceedings of the Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 273282, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [10] <author> P. Goyal and H. M. Vin. </author> <title> Generalized Guaranteed Rate Scheduling Algorithms: A Framework. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 5(4):161171, </volume> <month> August </month> <year> 1997. </year>
Reference-contexts: Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out <ref> [6, 8, 10, 13] </ref>. These techniques enable a network to provide deterministic bounds on QoS. Though these techniques are appropriate when the packet sources can be well characterized deterministically, they lead to underutilization of resources when the sources have significant statistical variations [12]. <p> In fact statistical analysis techniques for packet scheduling algorithms has been considered one of the important open problems [1]. In this paper, we take a step towards addressing this problem by deriving a statistical delay guarantee of the generalized Virtual Clock scheduling algorithm <ref> [10] </ref>. We first model the sources as fluid processes and analyze the queuing behaviour of a FCFS fluid multiplexor. <p> We now use this concept of equivalence to derive a new delay guarantee of generalized Virtual Clock algorithm. 2.2 Delay Guarantee of Generalized Virtual Clock The generalized Virtual Clock (VC) scheduling algorithm, defined in <ref> [10] </ref>, is a generalization of Virtual Clock presented in [22]. This generalization is based on the observation that since several continuous media 3 and data sources generate data at time varying rates, a scheduling algorithm should be able to allocate variable rate to the packets of a flow. <p> Packets are serviced in the increasing order of the virtual clock values. Consider a VC server serving Q flows. It was shown in <ref> [10] </ref> that if C is the capacity of the server and P n2Q R n (t) C for all t, then the VC server guarantees that the departure time of a packet, denoted by L V C (p f ), is given as: L V C (p f ) V C
Reference: [11] <author> P. Goyal, H. M. Vin, and H. Cheng. </author> <title> Start-time Fair Queuing: A Scheduling Algorithm for Integrated Services Packet Switching Networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 5(5), </volume> <month> October </month> <year> 1997. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [12] <author> S. Jamin, P. Danzig, S. Shenker, and L. Zhang. </author> <title> A Measurement Based Admission Control Algorithm for Integrated Services Packet Networks. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 213, </pages> <year> 1995. </year>
Reference-contexts: These techniques enable a network to provide deterministic bounds on QoS. Though these techniques are appropriate when the packet sources can be well characterized deterministically, they lead to underutilization of resources when the sources have significant statistical variations <ref> [12] </ref>. However, analysis techniques for packet scheduling algorithms that enable a network to provide statistical guarantees and, thus, achieve higher utilization of resources have largely remained unexplored. In fact statistical analysis techniques for packet scheduling algorithms has been considered one of the important open problems [1]. <p> We choose two specific values for the tuple and term the resultant sources EXP1 and EXP2: * EXP1: For this source, I on = 312ms, I of f = 325ms, and R = 64Kb=s. This model has been considered appropriate for audio source <ref> [12] </ref>. * EXP2: For this source, I on = 9:76ms, I off = 90ms, and R = 1M b=s. This is one of the source models used in [12] and may be appropriate for some data sources. <p> This model has been considered appropriate for audio source <ref> [12] </ref>. * EXP2: For this source, I on = 9:76ms, I off = 90ms, and R = 1M b=s. This is one of the source models used in [12] and may be appropriate for some data sources. In both the models, we assume that only complete packets are generated, i.e., if the source would make a transition to off state before a complete packet can be generated, no packet is generated. <p> As Figure 3 (a) demonstrates, the maximum delay for 269 flows is 13:8 ms when the desired loss probability is 10 6 and there is one server on the path. This illustrates that our analysis matches the performance of the measurement based admission control 9 algorithm in <ref> [12] </ref> which accepts 250 flows on an average. The figures also show that the end-to-end delay increases with increase in the number of servers. For example, the delay increases to 81:9 ms for 269 flows when the number of servers increases to 5. <p> As Figure 4 (a) demonstrates, the maximum delay for 79 flows is 41 ms when the desired loss probability is 10 6 and there is one server on the path. This illustrates that our analysis matches the performance of the measurement based admission control algorithm in <ref> [12] </ref> which accepts 75 flows on an average. Also, the maximum delay incurred by a packet was found to be 42ms through simulations in [12]. Thus, the analytical predictions conform with simulation observations reported in the literature. <p> This illustrates that our analysis matches the performance of the measurement based admission control algorithm in <ref> [12] </ref> which accepts 75 flows on an average. Also, the maximum delay incurred by a packet was found to be 42ms through simulations in [12]. Thus, the analytical predictions conform with simulation observations reported in the literature. The figures also show that as in the case of EXP1, the end-to-end delay increases with increase in the number of servers.
Reference: [13] <author> A.K. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, MIT, </institution> <year> 1992. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13]. <p> Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out <ref> [6, 8, 10, 13] </ref>. These techniques enable a network to provide deterministic bounds on QoS. Though these techniques are appropriate when the packet sources can be well characterized deterministically, they lead to underutilization of resources when the sources have significant statistical variations [12]. <p> Furthermore, this weaker notion of equivalence provides protection from flows that misbehave either intentionally or due to faulty hardware. The above theorem can be misinterpreted as being the same as Theorem 1 of <ref> [13] </ref> that relates the departure time of a packet in a Packet-by-packet Generalized Processor Sharing (PGPS) server to its departure time in a fluid Generalized Processor Sharing (GPS) server. However, there are several important differences. To elucidate the differences, let us briefly review Theorem 1 of [13]. <p> as Theorem 1 of <ref> [13] </ref> that relates the departure time of a packet in a Packet-by-packet Generalized Processor Sharing (PGPS) server to its departure time in a fluid Generalized Processor Sharing (GPS) server. However, there are several important differences. To elucidate the differences, let us briefly review Theorem 1 of [13].
Reference: [14] <author> D. Stiliadis. </author> <title> Traffic Scheduling in Packet-Switched Networks: Analysis, Design and Implementation. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of California at Santa Cruz, </institution> <year> 1996. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [15] <author> S. Suri, G. Varghese, and G. Chandramenon. </author> <title> Leap Forward Virtual Clock: A New Fair Queuing Scheme with Guaranteed Delays and Throughput fairness. </title> <booktitle> In Proceedings of INFOCOM'97, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [16] <author> J. S. Turner. </author> <title> Managing Bandwidth in ATM Networks with Bursty Traffic. </title> <journal> IEEE Network, </journal> <volume> 6(5):558, </volume> <month> September </month> <year> 1992. </year> <month> 13 </month>
Reference-contexts: We assume that all the servers in the network employ generalized Virtual Clock as the packet scheduling algorithm. Furthermore, we assume that the mechanisms required for allocating variable rate in a VC server to the packets of a flow (such as the fast reservation protocol in <ref> [16] </ref>) are available. Finally, we assume that jitter controller as in [20] is employed at each server to reconstruct the traffic pattern of each flow at each server on the path.
Reference: [17] <author> G. Xie and S. S. Lam. </author> <title> Real-Time Block Transfer Under a Link Sharing Hierarchy. </title> <booktitle> In Proceedings of INFOCOM'97, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Other differences between the guarantees of a PGPS and a VC server have been discussed at length in Section 2.2. An approach for providing statistical QoS guarantees to flows in a VC server has also been presented in <ref> [17] </ref>. The approach in [17] employs the deterministic delay guarantee of a VC server to provide statistical guarantees as follows. It assumes that packets that cause P n2Q R n (t) to exceed C are dropped. <p> Other differences between the guarantees of a PGPS and a VC server have been discussed at length in Section 2.2. An approach for providing statistical QoS guarantees to flows in a VC server has also been presented in <ref> [17] </ref>. The approach in [17] employs the deterministic delay guarantee of a VC server to provide statistical guarantees as follows. It assumes that packets that cause P n2Q R n (t) to exceed C are dropped. <p> The increase in utilization is higher in EXP2 than in EXP1 as EXP2 source has higher peak to average ratio and, hence, is more bursty. Thus, the additional flexibility provided by our approach (Finite Buffer) enables a network to achieve significantly higher utilization than the approach (Zero Buffer) in <ref> [17] </ref>. 5 Conclusions In this paper, we derived a statistical delay guarantee of the generalized Virtual Clock scheduling algorithm.
Reference: [18] <author> O. Yaron and M. Sidi. </author> <title> Performance and Stability of Communication Networks via Robust Exponential Bounds. </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> volume 1, </volume> <pages> pages 372385, </pages> <year> 1993. </year>
Reference-contexts: Thus, function G (fl) such that P ( c W (t) &gt; fl) G (fl) when t ! 1 is known. As argued in <ref> [18] </ref>, P ( c W (t) &gt; fl) G (fl) even when t is finite. Hence, we can determine the delay and loss probability in the fluid FCFS server. <p> This demonstrates that our analysis enables a network to achieve significantly higher utilization when statistical guarantees are acceptable. 4 Related Work Statistical guarantees of Generalized Processor Sharing (GPS) when the sources have exponentially bounded burstiness have been derived in <ref> [18, 19, 23] </ref>. Our approach is different from the approach taken in [19, 23]. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system.
Reference: [19] <author> O. Yaron and M. Sidi. </author> <title> Generalized Processor Sharing Networks with Exponentially Bounded Bursti-ness Arrivals. </title> <booktitle> In Proceedings of INFOCOM'94, </booktitle> <year> 1994. </year>
Reference-contexts: This demonstrates that our analysis enables a network to achieve significantly higher utilization when statistical guarantees are acceptable. 4 Related Work Statistical guarantees of Generalized Processor Sharing (GPS) when the sources have exponentially bounded burstiness have been derived in <ref> [18, 19, 23] </ref>. Our approach is different from the approach taken in [19, 23]. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system. <p> Our approach is different from the approach taken in <ref> [19, 23] </ref>. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system. <p> Our approach is different from the approach taken in <ref> [19, 23] </ref>. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system.
Reference: [20] <author> H. Zhang. </author> <title> Service Disciplines for Integrated Services Networks. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, University of California at Berkeley, </institution> <year> 1993. </year>
Reference-contexts: Our objective now is to extend this analysis to a network of servers. 8 We extend the above single server analysis to multiple servers by employing the methodology in <ref> [20] </ref>. We assume that all the servers in the network employ generalized Virtual Clock as the packet scheduling algorithm. Furthermore, we assume that the mechanisms required for allocating variable rate in a VC server to the packets of a flow (such as the fast reservation protocol in [16]) are available. <p> Furthermore, we assume that the mechanisms required for allocating variable rate in a VC server to the packets of a flow (such as the fast reservation protocol in [16]) are available. Finally, we assume that jitter controller as in <ref> [20] </ref> is employed at each server to reconstruct the traffic pattern of each flow at each server on the path. Let there be K servers on the path of flow f and i th server on the path be server i. <p> Also, let q i and d f be the packet loss probability and the maximum packet delay at server i determined using the single server analysis. Then, as shown in <ref> [20] </ref>, the maximum end-to-end delay is P i=K max;i packet loss probability is P i=K In the next section, we evaluate the increase in utilization yielded by our analysis. 3 Experimental Evaluation We determine the increase in utilization when a network provides statistical guarantee to on/off sources with exponentially distributed on
Reference: [21] <author> H. Zhang. </author> <title> Service Disciplines For Guaranteed Performance Service in Packet-Switching Networks. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 83(10), </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. To appropriately schedule network bandwidth, several packet scheduling algorithms have been proposed in the literature <ref> [3, 4, 5, 7, 9, 11, 13, 14, 15, 21] </ref>. Furthermore, to enable the network to provide bounds on end-to-end delay as well as throughput guarantees to various flows, several analyses of these algorithms have been carried out [6, 8, 10, 13].
Reference: [22] <author> L. Zhang. VirtualClock: </author> <title> A New Traffic Control Algorithm for Packet Switching Networks. </title> <booktitle> In Proceedings of ACM SIGCOMM'90, pages 1929, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: We now use this concept of equivalence to derive a new delay guarantee of generalized Virtual Clock algorithm. 2.2 Delay Guarantee of Generalized Virtual Clock The generalized Virtual Clock (VC) scheduling algorithm, defined in [10], is a generalization of Virtual Clock presented in <ref> [22] </ref>. This generalization is based on the observation that since several continuous media 3 and data sources generate data at time varying rates, a scheduling algorithm should be able to allocate variable rate to the packets of a flow. Specifically, it is defined as follows: 1.
Reference: [23] <author> Z. L. Zhang, D. Towsley, and J. Kurose. </author> <title> Statistical Analysis of Generalized Processor Sharing Discipline. </title> <booktitle> In Proceedings of ACM SIGCOMM'94, </booktitle> <pages> pages 6877, </pages> <year> 1994. </year> <month> 14 </month>
Reference-contexts: This demonstrates that our analysis enables a network to achieve significantly higher utilization when statistical guarantees are acceptable. 4 Related Work Statistical guarantees of Generalized Processor Sharing (GPS) when the sources have exponentially bounded burstiness have been derived in <ref> [18, 19, 23] </ref>. Our approach is different from the approach taken in [19, 23]. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system. <p> Our approach is different from the approach taken in <ref> [19, 23] </ref>. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system. <p> Our approach is different from the approach taken in <ref> [19, 23] </ref>. Whereas [19, 23] focus on analyzing the behaviour of a fluid GPS server, we leverage off existing analysis for FCFS fluid servers and focus on determining the performance guarantees of an equivalent packet system.
References-found: 23

