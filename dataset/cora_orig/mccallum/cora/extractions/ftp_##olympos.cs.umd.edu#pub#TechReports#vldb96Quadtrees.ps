URL: ftp://olympos.cs.umd.edu/pub/TechReports/vldb96Quadtrees.ps
Refering-URL: http://www.cs.umd.edu/~christos/cpub.html
Root-URL: 
Email: christos@cs.umd.edu  gaede@wiwi.hu-berlin.de  
Title: Analysis of n-dimensional Quadtrees Using the Hausdorff Fractal Dimension  
Author: Christos Faloutsos Volker Gaede 
Note: [Gae95b] and 3-d [ACF 94] data.  
Date: February 18, 1996  
Address: College Park, MD 20742-3255  Spandauer Str. 1 10178 Berlin, Germany  
Affiliation: Department of Computer Science University of Maryland  Institut fur Wirtschaftsinformatik Humboldt-Universitat zu Berlin  
Abstract: There is mounting evidence [Man77, Sch91] that real datasets are statistically self-similar, and thus, `fractal'. This is an important insight since it permits a compact statistical description of spatial datasets; subsequently, as we show, it also forms the basis for the theoretical analysis of spatial access methods, without using the typical, but unrealistic, uniformity assumption. In this paper, we focus on the estimation of the number of quadtree blocks that a real, spatial dataset will require. Using the the well-known Hausdorff fractal dimension, we derive some closed formulas which allow us to predict the number of quadtree blocks, given some few parameters. Using our formulas, it is possible to predict the space overhead and the response time of linear quadtrees/z-ordering [OM88], which are widely used in practice. In order to verify our analytical model, we performed an extensive experimental investigation using several real datasets coming from different domains. In these experiments, we found that our analytical model agrees well with our experiments as well as with older empirical observations on 2-d 
Abstract-found: 1
Intro-found: 1
Reference: [ACF + 94] <author> Manish Arya, William Cody, Christos Faloutsos, Joel Richardson, and Arthur Toga. Qbism: </author> <title> Extending a dbms to support 3d medical images. </title> <booktitle> Tenth Int. Conf. on Data Engineering (ICDE), </booktitle> <pages> pages 314-325, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Spatial databases have numerous applications, including geographic information systems, medical image databases <ref> [ACF + 94] </ref>, multimedia databases (after extracting n features from each object, and mapping it into a point in n-d space [Jag91, FRM94]), as well as traditional databases, where each record with n attributes can be considered as a point in n-dimensional space [Gut94]. fl This work was partially supported by <p> Bureau of Census [Whi81] (http://tiger.census.gov/ tiger/tiger.html), which stores the map and statistical data of the U.S.A., as well as research prototypes such as QUILT [SSN87], PROBE [OM88], and GODOT [GR94]. For higher dimensions, oct-trees have been used in 3-d graphics and robotics [BB82]; in databases of 3-d medical images <ref> [ACF + 94] </ref>, etc. There are several good reasons for the popularity of these methods, such as their simplicity, their robustness and that the indexing keys can be inserted into ubiquitous one-dimensional access methods, e.g., B-trees. <p> Third, we show that our result agree perfectly with previous analytical results and that it explains our older empirical work <ref> [Gae95b, ACF + 94] </ref>, where we first pointed out the existence of the power law. Lastly, we present experimental results, to demonstrate the accuracy of our formulas for real datasets. <p> However, the relationship of D z to D H was not clear and therefore, we will clarify this point in this paper. natural logarithm of the number of z-values versus the granularity g, i.e., the maximum permissible length for z-values. Similar experimental data on 3-d human brain images <ref> [ACF + 94] </ref> used oct-trees (= 3-d quadtrees), and showed that the number of oct-tree blocks for brain organs grows as N b (k) / 2 2:63k number of oct-tree leaf nodes, as a function of the level k, along with the regression line. (a) (b) number of its z-values vs. <p> In this paper it has been shown experimentally as well as analytically that the performance of the spatial access method z-ordering is sensitive to the chosen granularity. Finally, in <ref> [ACF + 94] </ref> we observed experimentally that the number of oct-tree blocks for human MRI brain scans was N b (k) / 2 2:63k . Notice that 2.63 is close to 2.73-2.79, which is the range of the typical fractal dimension of the surface of mammalian brains [Man77]. <p> for quadtrees [VM96, SS85], * the theory of fractals, which claims that spatial objects of the real world are often self-similar, and have a non-integer `Hausdorff' fractal dimension [Man77, Sch91] and * empirical observations that a power law holds for the number of quadtree blocks for 2-d and 3-d data <ref> [Gae95b, ACF + 94] </ref> We showed that the `level independence' assumption implies a power law for the number of quadtree nodes, for any dimensionality E of the address space. Moreover, we showed that the exponent of the power law is the Hausdorff fractal dimension of the boundary of the object.
Reference: [BB82] <author> D. Ballard and C. Brown. </author> <title> Computer Vision. </title> <publisher> Prentice Hall, </publisher> <year> 1982. </year>
Reference-contexts: Bureau of Census [Whi81] (http://tiger.census.gov/ tiger/tiger.html), which stores the map and statistical data of the U.S.A., as well as research prototypes such as QUILT [SSN87], PROBE [OM88], and GODOT [GR94]. For higher dimensions, oct-trees have been used in 3-d graphics and robotics <ref> [BB82] </ref>; in databases of 3-d medical images [ACF + 94], etc. There are several good reasons for the popularity of these methods, such as their simplicity, their robustness and that the indexing keys can be inserted into ubiquitous one-dimensional access methods, e.g., B-trees.
Reference: [BF95] <author> Alberto Belussi and Christos Faloutsos. </author> <title> Estimating the selectivity of spatial queries using the `correlation' fractal dimension. </title> <booktitle> Proc. of VLDB, </booktitle> <pages> pages 299-310, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: In a previous paper [FK94], we presented an analysis of R-trees using the Hausdorff fractal dimension. Recently, we also showed that the theory of fractals can be successfully used for estimating the selectivity of spatial queries <ref> [BF95] </ref>. The results presented are very encouraging, since the estimates based on fractals yielded very good results compared with other assumptions typically made. In [BF95], we already pointed out that fractals may also be a suitable tool for the analysis of spatial access methods based on a regular decomposition of the <p> Recently, we also showed that the theory of fractals can be successfully used for estimating the selectivity of spatial queries <ref> [BF95] </ref>. The results presented are very encouraging, since the estimates based on fractals yielded very good results compared with other assumptions typically made. In [BF95], we already pointed out that fractals may also be a suitable tool for the analysis of spatial access methods based on a regular decomposition of the data space such as z-ordering [OM84]. <p> The way to resolve the issue is to consider fractional values for the dimensionality, which are called fractal dimensions. There are more than one fractal dimensions <ref> [BF95] </ref>, but among them the Hausdorff or box-counting fractal dimension D H is the one that is suitable for our application. It is quite easy to compute for a given data set embedded in an E-dimensional address space its fractal dimension D H by using the box-counting method [Sch91]. <p> Practical Considerations: The question is `how would a practitioner use the above results?' Given a data-set (set of points, or a region), the first step is to estimate the fractal dimension D H . This can be done with an O (N log N ) algorithm <ref> [BF95] </ref>, or even by consulting the literature on fractals, for the typical D H of the dataset of interest. For example, if our application focuses on 3-d human brain scans, a crude estimate of D H would be 2.7.
Reference: [BKSS90] <author> N. Beckmann, H.-P. Kriegel, R. Schneider, and B. Seeger. </author> <title> The R fl -tree: An efficient and robust access method for points and recta ngles. </title> <booktitle> In Proc. ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 322-331, </pages> <year> 1990. </year> <month> 16 </month>
Reference-contexts: In practice, the prevailing methods seem to be two: (a) the R-trees [Gut84] and its variants <ref> [SRF87, BKSS90] </ref>, and (b) methods based on a regular subdivision of the data space such as linear quadtrees [Gar82] and z-ordering [OM84]. The terms `linear quadtrees' and `z-ordering' essentially denote the same method and therefore, will be used interchangeably. Linear quadtrees have been very popular for 2-dimensional spaces.
Reference: [Dye82] <author> C.R. Dyer. </author> <title> The space efficiency of quadtrees. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 19(4) </volume> <pages> 335-348, </pages> <month> August </month> <year> 1982. </year>
Reference-contexts: identical, and are used interchangeably for the rest of this paper. 6 Before presenting our analysis, we first want to recall some previous empirical and analytical results, in order to put our work into context. 2.3 Analysis of quadtree decomposition Previous attempts have been restricted to 2-dimensional polygons [HS79], squares <ref> [Dye82, Sha88] </ref>, 2-d rectangles [Fal92] and E-d hyper-rectangles [FJM94]. In a closely related previous paper [Gae95b], we showed experimentally that the number of blocks N b (k) of a level-k quadtree decomposition grows exponentially with the level k of the quadtree.
Reference: [Fal92] <author> C. Faloutsos. </author> <title> Analytical results on the quadtree decomposition of arbitrary rectangles. </title> <journal> Pattern Recognition Letters, </journal> <volume> 13(1) </volume> <pages> 31-40, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: interchangeably for the rest of this paper. 6 Before presenting our analysis, we first want to recall some previous empirical and analytical results, in order to put our work into context. 2.3 Analysis of quadtree decomposition Previous attempts have been restricted to 2-dimensional polygons [HS79], squares [Dye82, Sha88], 2-d rectangles <ref> [Fal92] </ref> and E-d hyper-rectangles [FJM94]. In a closely related previous paper [Gae95b], we showed experimentally that the number of blocks N b (k) of a level-k quadtree decomposition grows exponentially with the level k of the quadtree.
Reference: [FJM94] <author> Christos Faloutsos, H.V. Jagadish, and Yannis Manolopoulos. </author> <title> Analysis of the n-dimensional quadtree decomposition for arbitrary hyper-rectangles. </title> <institution> CS-TR-3381, UMIACS-TR-94-130, Dept. of Computer Science, Univ. of Maryland, College Park, MD, </institution> <month> December </month> <year> 1994. </year> <note> submitted for publication. </note>
Reference-contexts: of this paper. 6 Before presenting our analysis, we first want to recall some previous empirical and analytical results, in order to put our work into context. 2.3 Analysis of quadtree decomposition Previous attempts have been restricted to 2-dimensional polygons [HS79], squares [Dye82, Sha88], 2-d rectangles [Fal92] and E-d hyper-rectangles <ref> [FJM94] </ref>. In a closely related previous paper [Gae95b], we showed experimentally that the number of blocks N b (k) of a level-k quadtree decomposition grows exponentially with the level k of the quadtree. <p> Thus, they showed that it is the boundary that plays crucial role our formula goes even further, generalizing the result for arbitrary (self-similar) E-d spatial objects, and showing that the major parameter is the `ruggedness' of the boundary, as measured by the fractal dimension D H . In <ref> [FJM94] </ref> we showed that the number of quadtree nodes for an E-d hyper-rectangle is proportional to its hyper-surface: Thus, the number of quadtree blocks will 13 follow a power law with exponent E 1, because the hyper-surface is a manifold of dimensionality E 1, both traditional, as well as fractal.
Reference: [FK94] <author> Christos Faloutsos and Ibrahim Kamel. </author> <title> Beyond Uniformity and Irndependence: Analysis of R-trees Using the Concept of Fractal Dimension. </title> <booktitle> Proc. ACM SIGACT-SIGMOD-SIGART PODS, </booktitle> <pages> pages 4-13, </pages> <month> May </month> <year> 1994. </year> <note> Also available as CS-TR-3198, UMIACS-TR-93-130. </note>
Reference-contexts: Ideally, one could predict for each given dataset the number of indexing entries by using some parameter. In a previous paper <ref> [FK94] </ref>, we presented an analysis of R-trees using the Hausdorff fractal dimension. Recently, we also showed that the theory of fractals can be successfully used for estimating the selectivity of spatial queries [BF95].
Reference: [FRM94] <author> Christos Faloutsos, M. Ranganathan, and Yannis Manolopoulos. </author> <title> Fast subsequence matching in time-series databases. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 419-429, </pages> <month> May </month> <year> 1994. </year> <note> `Best Paper' award; also available as CS-TR-3190, UMIACS-TR-93-131, ISR TR-93-86. </note>
Reference-contexts: 1 Introduction Spatial databases have numerous applications, including geographic information systems, medical image databases [ACF + 94], multimedia databases (after extracting n features from each object, and mapping it into a point in n-d space <ref> [Jag91, FRM94] </ref>), as well as traditional databases, where each record with n attributes can be considered as a point in n-dimensional space [Gut94]. fl This work was partially supported by the Institute of Systems Research and by the National Science Foundation under Grants No.
Reference: [Gae95a] <author> V. </author> <title> Gaede. Geometric information makes spatial query processing more efficient. </title> <booktitle> In Proc. 3rd ACM International Workshop on Advances in Geographic Information Systems (ACM-GIS'95), </booktitle> <pages> pages 45-52, </pages> <address> Baltimore, Maryland, USA, </address> <year> 1995. </year>
Reference-contexts: In all the above cases, it is important to know the number of index entries (z-values) that a specified region will be decomposed into, since the performance of the spatial access methods is correlated with the number of index entries <ref> [Ore89, Gae95b, Gae95a] </ref>. For a query region, the number of z-values is related to the number of disk accesses that will be required; for a data region, the number of z-values is directly related to the storage requirements for this region, as we describe in subsection 2.2.
Reference: [Gae95b] <author> V. </author> <title> Gaede. Optimal redundancy in spatial database systems. </title> <booktitle> In Proc. 4th Int. Symp. on Spatial Databases (SSD'95), </booktitle> <pages> pages 96-116, </pages> <year> 1995. </year>
Reference-contexts: In all the above cases, it is important to know the number of index entries (z-values) that a specified region will be decomposed into, since the performance of the spatial access methods is correlated with the number of index entries <ref> [Ore89, Gae95b, Gae95a] </ref>. For a query region, the number of z-values is related to the number of disk accesses that will be required; for a data region, the number of z-values is directly related to the storage requirements for this region, as we describe in subsection 2.2. <p> Third, we show that our result agree perfectly with previous analytical results and that it explains our older empirical work <ref> [Gae95b, ACF + 94] </ref>, where we first pointed out the existence of the power law. Lastly, we present experimental results, to demonstrate the accuracy of our formulas for real datasets. <p> Since every block has a unique z-value, we can represent a level-i quadtree decomposition of an object by listing the corresponding z-values. Thus, the z-values of the shaded rectangle in 5 figure 2 (a) are `0001' (for `left-down; left-up') `0011' and `01'. Following <ref> [Gae95b] </ref>, the maximum permissible length of the z-values that correspond to a level-i quadtree decomposition is called the granularity g. <p> In a closely related previous paper <ref> [Gae95b] </ref>, we showed experimentally that the number of blocks N b (k) of a level-k quadtree decomposition grows exponentially with the level k of the quadtree. <p> Again, this agrees with our formula, which predicts that for a given level-i decomposition, the number of z-values will grow exponentially, with exponent D H = E 1. As mentioned earlier, in <ref> [Gae95b] </ref>, we showed experimentally that the number of z-values follows a power law, for several 2-d datasets (E = 2). <p> For each dataset that the `level-independence' assumption holds, the two numbers should be very close. Notice that this is indeed the case; the difference is typically in the third significant digit. This result is particularly interesting, since it readily allows us to use the analytical model presented in <ref> [Gae95b] </ref> for determining a good choice of the granularity. In this paper it has been shown experimentally as well as analytically that the performance of the spatial access method z-ordering is sensitive to the chosen granularity. <p> for quadtrees [VM96, SS85], * the theory of fractals, which claims that spatial objects of the real world are often self-similar, and have a non-integer `Hausdorff' fractal dimension [Man77, Sch91] and * empirical observations that a power law holds for the number of quadtree blocks for 2-d and 3-d data <ref> [Gae95b, ACF + 94] </ref> We showed that the `level independence' assumption implies a power law for the number of quadtree nodes, for any dimensionality E of the address space. Moreover, we showed that the exponent of the power law is the Hausdorff fractal dimension of the boundary of the object.
Reference: [Gar82] <author> I. </author> <title> Gargantini. An effective way to represent quadtrees. </title> <journal> Comm. of ACM (CACM), </journal> <volume> 25(12) </volume> <pages> 905-910, </pages> <month> December </month> <year> 1982. </year>
Reference-contexts: In practice, the prevailing methods seem to be two: (a) the R-trees [Gut84] and its variants [SRF87, BKSS90], and (b) methods based on a regular subdivision of the data space such as linear quadtrees <ref> [Gar82] </ref> and z-ordering [OM84]. The terms `linear quadtrees' and `z-ordering' essentially denote the same method and therefore, will be used interchangeably. Linear quadtrees have been very popular for 2-dimensional spaces. <p> For simplicity, we ignore those variations in this paper, although we believe that they are amenable to a similar analysis like the upcoming one. As described above, quadtrees have been used to store objects in main memory. For disk storage, the prevailing approach is the so-called linear quadtree <ref> [Gar82] </ref>, or, equivalently the z-ordering method [OM84]. Using the z-values as just described, each object (and range query) can be uniquely represented by a set of z-values, namely the z-values of the blocks of its level-i quadtree decomposition.
Reference: [GR94] <author> V. Gaede and W.-F. Riekert. </author> <title> Spatial access methods and query processing in the object-oriented GIS GODOT. </title> <booktitle> In Proc. of the AGDM'94 Workshop, </booktitle> <pages> pages 40-52, </pages> <address> Delft, The Netherlands, 1994. Netherlands Geodetic Commission. </address>
Reference-contexts: Bureau of Census [Whi81] (http://tiger.census.gov/ tiger/tiger.html), which stores the map and statistical data of the U.S.A., as well as research prototypes such as QUILT [SSN87], PROBE [OM88], and GODOT <ref> [GR94] </ref>. For higher dimensions, oct-trees have been used in 3-d graphics and robotics [BB82]; in databases of 3-d medical images [ACF + 94], etc.
Reference: [Gut84] <author> A. Guttman. R-trees: </author> <title> a dynamic index structure for spatial searching. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 47-57, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: CDR-8803012, EEC-94-02384, IRI-8958546 and IRI-9205273), with matching funds from Empress Software Inc. and Thinking Machines Inc. 1 In order to guarantee the fast retrieval of the data stored in these databases, spatial access meth-ods are typically used. In practice, the prevailing methods seem to be two: (a) the R-trees <ref> [Gut84] </ref> and its variants [SRF87, BKSS90], and (b) methods based on a regular subdivision of the data space such as linear quadtrees [Gar82] and z-ordering [OM84]. The terms `linear quadtrees' and `z-ordering' essentially denote the same method and therefore, will be used interchangeably.
Reference: [Gut94] <author> R. H. Guting. </author> <title> An introduction to spatial database systems. </title> <journal> VLDB Journal, </journal> <volume> 3(4) </volume> <pages> 357-399, </pages> <year> 1994. </year>
Reference-contexts: including geographic information systems, medical image databases [ACF + 94], multimedia databases (after extracting n features from each object, and mapping it into a point in n-d space [Jag91, FRM94]), as well as traditional databases, where each record with n attributes can be considered as a point in n-dimensional space <ref> [Gut94] </ref>. fl This work was partially supported by the Institute of Systems Research and by the National Science Foundation under Grants No.
Reference: [HS79] <author> G.M. Hunter and K. Steiglitz. </author> <title> Operations on images using quad trees. </title> <journal> IEEE Trans. on PAMI, </journal> <volume> PAMI-1(2):145-153, </volume> <month> April </month> <year> 1979. </year>
Reference-contexts: z-values' are identical, and are used interchangeably for the rest of this paper. 6 Before presenting our analysis, we first want to recall some previous empirical and analytical results, in order to put our work into context. 2.3 Analysis of quadtree decomposition Previous attempts have been restricted to 2-dimensional polygons <ref> [HS79] </ref>, squares [Dye82, Sha88], 2-d rectangles [Fal92] and E-d hyper-rectangles [FJM94]. In a closely related previous paper [Gae95b], we showed experimentally that the number of blocks N b (k) of a level-k quadtree decomposition grows exponentially with the level k of the quadtree. <p> the following issues: (a) how do older quadtree analyses compare with our result? (b) how often should we expect to encounter fractal datasets? (c) how would a practitioner benefit from our result? Older analyses: Our formula agrees with previous analyses, or even includes them as special cases: Steiglitz and Hunter <ref> [HS79] </ref> proved that the number of quadtree leaf nodes for a 2-d polygon is proportional to its perimeter.
Reference: [Jag91] <author> H.V. Jagadish. </author> <title> A retrieval technique for similar shapes. </title> <booktitle> Proc. ACM SIGMOD Conf., </booktitle> <pages> pages 208-217, </pages> <month> May </month> <year> 1991. </year> <month> 17 </month>
Reference-contexts: 1 Introduction Spatial databases have numerous applications, including geographic information systems, medical image databases [ACF + 94], multimedia databases (after extracting n features from each object, and mapping it into a point in n-d space <ref> [Jag91, FRM94] </ref>), as well as traditional databases, where each record with n attributes can be considered as a point in n-dimensional space [Gut94]. fl This work was partially supported by the Institute of Systems Research and by the National Science Foundation under Grants No.
Reference: [Kli71] <author> A. Klinger. </author> <title> Pattern and search statistics. </title> <editor> In S. Rustagi, editor, </editor> <booktitle> Optimizing Methods in Statistics, </booktitle> <pages> pages 303-337. </pages> <year> 1971. </year>
Reference-contexts: For a 2-dimensional object, the result of such a decomposition is a 4-way tree, which is termed as the region quadtree <ref> [Kli71] </ref>. Blocks that are empty/full/partially-full are represented as white, black and gray nodes in the quadtree, respectively. See Figure 2 (b) for an example. For efficiency reasons (eg., see [Ore89]), we often approximate an object with a `coarser resolution' object.
Reference: [Man77] <author> B. Mandelbrot. </author> <title> Fractal Geometry of Nature. W.H. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: standard curves have D H =1; planes, disks and standard surfaces have D H =2; Euclidean volumes in E-dimensional space have D H = E. slope for r 2 (e 4:5 ; e 1 ) is 1.574, very close to the theoretical value of log 3= log 2 = 1:585 <ref> [Man77] </ref>. 2.2 Quadtrees and z-ordering The terminology is easiest described in 2-d address space; the generalizations to E dimensions should be obvious. <p> Finally, in [ACF + 94] we observed experimentally that the number of oct-tree blocks for human MRI brain scans was N b (k) / 2 2:63k . Notice that 2.63 is close to 2.73-2.79, which is the range of the typical fractal dimension of the surface of mammalian brains <ref> [Man77] </ref>. <p> Notice that 2.63 is close to 2.73-2.79, which is the range of the typical fractal dimension of the surface of mammalian brains [Man77]. Popularity of fractal datasets: Real datasets seem to be self-similar more often than not: The literature on fractals <ref> [Man77, Sch91] </ref> provides a long list of real, self-similar structures, including coastlines and country borders (with D H typically 1.1-1.3); periphery of clouds and rainfall patches (D H 1.35); surface of mammalian brain (2.73-2.79); human pulmonary system (D H 2.9); stock-price plots over time (D H 1.5). 14 Data set actual <p> approach unified three observations, which have been made independently: 15 * the `level independence' assumption, which is the basis of statistical models for quadtrees [VM96, SS85], * the theory of fractals, which claims that spatial objects of the real world are often self-similar, and have a non-integer `Hausdorff' fractal dimension <ref> [Man77, Sch91] </ref> and * empirical observations that a power law holds for the number of quadtree blocks for 2-d and 3-d data [Gae95b, ACF + 94] We showed that the `level independence' assumption implies a power law for the number of quadtree nodes, for any dimensionality E of the address space.
Reference: [OM84] <author> J.A. Orenstein and T.H. Merrett. </author> <title> A class of data structures for associative searching. </title> <booktitle> Proc. of SIGACT-SIGMOD, </booktitle> <pages> pages 181-190, </pages> <month> April </month> <year> 1984. </year>
Reference-contexts: In practice, the prevailing methods seem to be two: (a) the R-trees [Gut84] and its variants [SRF87, BKSS90], and (b) methods based on a regular subdivision of the data space such as linear quadtrees [Gar82] and z-ordering <ref> [OM84] </ref>. The terms `linear quadtrees' and `z-ordering' essentially denote the same method and therefore, will be used interchangeably. Linear quadtrees have been very popular for 2-dimensional spaces. <p> In [BF95], we already pointed out that fractals may also be a suitable tool for the analysis of spatial access methods based on a regular decomposition of the data space such as z-ordering <ref> [OM84] </ref>. Here, we will substantiate this claim by providing an analysis of linear quadtrees that uses the theory of the well-known Hausdorff fractal dimension. The contributions of this work are the following: First, we highlight and exploit the fact that most real datasets are self-similar (fractal). <p> As described above, quadtrees have been used to store objects in main memory. For disk storage, the prevailing approach is the so-called linear quadtree [Gar82], or, equivalently the z-ordering method <ref> [OM84] </ref>. Using the z-values as just described, each object (and range query) can be uniquely represented by a set of z-values, namely the z-values of the blocks of its level-i quadtree decomposition.
Reference: [OM88] <author> J.A. Orenstein and F.A. Manola. </author> <title> Probe spatial data modeling and query processing in an image database application. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 14(5) </volume> <pages> 611-629, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Bureau of Census [Whi81] (http://tiger.census.gov/ tiger/tiger.html), which stores the map and statistical data of the U.S.A., as well as research prototypes such as QUILT [SSN87], PROBE <ref> [OM88] </ref>, and GODOT [GR94]. For higher dimensions, oct-trees have been used in 3-d graphics and robotics [BB82]; in databases of 3-d medical images [ACF + 94], etc.
Reference: [Ore89] <author> J.A. Orenstein. </author> <title> Redundancy in spatial databases. </title> <booktitle> Proc. of ACM SIGMOD Conf., </booktitle> <month> May </month> <year> 1989. </year>
Reference-contexts: In all the above cases, it is important to know the number of index entries (z-values) that a specified region will be decomposed into, since the performance of the spatial access methods is correlated with the number of index entries <ref> [Ore89, Gae95b, Gae95a] </ref>. For a query region, the number of z-values is related to the number of disk accesses that will be required; for a data region, the number of z-values is directly related to the storage requirements for this region, as we describe in subsection 2.2. <p> Blocks that are empty/full/partially-full are represented as white, black and gray nodes in the quadtree, respectively. See Figure 2 (b) for an example. For efficiency reasons (eg., see <ref> [Ore89] </ref>), we often approximate an object with a `coarser resolution' object. Formally, we have: Definition 4 The level-i quadtree decomposition of an object (i &lt; K) is the minimal set of blocks of levels 0 through i that cover the object completely, while they cover the smallest possible additional area.
Reference: [Sch91] <author> Manfred Schroeder. </author> <title> Fractals, Chaos, Power Laws: Minutes From an Infinite Paradise. W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: It is quite easy to compute for a given data set embedded in an E-dimensional address space its fractal dimension D H by using the box-counting method <ref> [Sch91] </ref>. This method imposes an E-dimensional grid with (hyper-)cubic grid cells of side r and counts the number N (r) of cells that are penetrated by the set of points (i.e., that contain one or more of its points). <p> Notice that 2.63 is close to 2.73-2.79, which is the range of the typical fractal dimension of the surface of mammalian brains [Man77]. Popularity of fractal datasets: Real datasets seem to be self-similar more often than not: The literature on fractals <ref> [Man77, Sch91] </ref> provides a long list of real, self-similar structures, including coastlines and country borders (with D H typically 1.1-1.3); periphery of clouds and rainfall patches (D H 1.35); surface of mammalian brain (2.73-2.79); human pulmonary system (D H 2.9); stock-price plots over time (D H 1.5). 14 Data set actual <p> approach unified three observations, which have been made independently: 15 * the `level independence' assumption, which is the basis of statistical models for quadtrees [VM96, SS85], * the theory of fractals, which claims that spatial objects of the real world are often self-similar, and have a non-integer `Hausdorff' fractal dimension <ref> [Man77, Sch91] </ref> and * empirical observations that a power law holds for the number of quadtree blocks for 2-d and 3-d data [Gae95b, ACF + 94] We showed that the `level independence' assumption implies a power law for the number of quadtree nodes, for any dimensionality E of the address space.
Reference: [Sha88] <author> C.A. Shaffer. </author> <title> A formula for computing the number of quadtree node fragments created by a shift. </title> <journal> Pattern Recognition Letters, </journal> <volume> 7(1) </volume> <pages> 45-49, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: identical, and are used interchangeably for the rest of this paper. 6 Before presenting our analysis, we first want to recall some previous empirical and analytical results, in order to put our work into context. 2.3 Analysis of quadtree decomposition Previous attempts have been restricted to 2-dimensional polygons [HS79], squares <ref> [Dye82, Sha88] </ref>, 2-d rectangles [Fal92] and E-d hyper-rectangles [FJM94]. In a closely related previous paper [Gae95b], we showed experimentally that the number of blocks N b (k) of a level-k quadtree decomposition grows exponentially with the level k of the quadtree.
Reference: [SRF87] <author> T. Sellis, N. Roussopoulos, and C. Faloutsos. </author> <title> The r+ tree: a dynamic index for multidimensional objects. </title> <booktitle> In Proc. 13th International Conference on VLDB, </booktitle> <pages> pages 507-518, </pages> <address> England,, </address> <month> September </month> <year> 1987. </year> <note> also available as SRC-TR-87-32, UMIACS-TR-87-3, CS-TR-1795. </note>
Reference-contexts: In practice, the prevailing methods seem to be two: (a) the R-trees [Gut84] and its variants <ref> [SRF87, BKSS90] </ref>, and (b) methods based on a regular subdivision of the data space such as linear quadtrees [Gar82] and z-ordering [OM84]. The terms `linear quadtrees' and `z-ordering' essentially denote the same method and therefore, will be used interchangeably. Linear quadtrees have been very popular for 2-dimensional spaces.
Reference: [SS85] <author> Hanan Samet and Clifford A. Shaffer. </author> <title> A model for the analysis of neighbor finding in pointer-based quadtrees. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence (PAMI), </journal> <volume> 7(6) </volume> <pages> 717-720, </pages> <year> 1985. </year>
Reference-contexts: Assumptions for Random Quadtrees: In the analysis of quadtrees and their related algorithms, it is important to have a statistical model of typical, real quadtrees. Such a successful assumption <ref> [VM96, SS85] </ref> postulates that the probabilities p w , p b , p g of white, black and gray 7 (a) (b) number of its oct-tree blocks N b (k) vs. level k nodes (respectively) is independent of the position and of the level. <p> Experiments in <ref> [SS85] </ref> for nearest neighbor queries showed that the `level-independence' assumption leads to accurate predictions, for main-memory 2-d quadtrees. <p> Our approach unified three observations, which have been made independently: 15 * the `level independence' assumption, which is the basis of statistical models for quadtrees <ref> [VM96, SS85] </ref>, * the theory of fractals, which claims that spatial objects of the real world are often self-similar, and have a non-integer `Hausdorff' fractal dimension [Man77, Sch91] and * empirical observations that a power law holds for the number of quadtree blocks for 2-d and 3-d data [Gae95b, ACF +
Reference: [SSN87] <author> C.A. Shaffer, H. Samet, and R.C. Nelson. Quilt: </author> <title> a geographic information system based on quadtrees. </title> <type> Technical Report CS-TR-1885.1, </type> <institution> Univ. of Maryland, Dept. of Computer Science, </institution> <month> July </month> <year> 1987. </year> <note> to appear in the International Journal of Geographic Information Systems. </note>
Reference-contexts: Bureau of Census [Whi81] (http://tiger.census.gov/ tiger/tiger.html), which stores the map and statistical data of the U.S.A., as well as research prototypes such as QUILT <ref> [SSN87] </ref>, PROBE [OM88], and GODOT [GR94]. For higher dimensions, oct-trees have been used in 3-d graphics and robotics [BB82]; in databases of 3-d medical images [ACF + 94], etc.
Reference: [VM96] <author> Michael Vassilakopoulos and Yannis Manolopoulos. </author> <title> A random model for analyzing region quadtrees. </title> <journal> Pattern Recognition Letters, </journal> <note> 1996. to appear. </note>
Reference-contexts: The contributions of this work are the following: First, we highlight and exploit the fact that most real datasets are self-similar (fractal). Second, using an existing, successful assumption for `random quadtrees' <ref> [VM96] </ref>, we show that the number of index entries for an object follows a power law, with exponent the so-called `Hausdorff ' fractal dimension of the object's boundary. <p> Assumptions for Random Quadtrees: In the analysis of quadtrees and their related algorithms, it is important to have a statistical model of typical, real quadtrees. Such a successful assumption <ref> [VM96, SS85] </ref> postulates that the probabilities p w , p b , p g of white, black and gray 7 (a) (b) number of its oct-tree blocks N b (k) vs. level k nodes (respectively) is independent of the position and of the level. <p> We make the following conventions: * the root of the quadtree is at level 0, and it is always gray * the address space has been normalized to the unit hyper-cube. The fundamental assumption <ref> [VM96] </ref> is that the black/gray/white probabilities are level-independent. <p> Our approach unified three observations, which have been made independently: 15 * the `level independence' assumption, which is the basis of statistical models for quadtrees <ref> [VM96, SS85] </ref>, * the theory of fractals, which claims that spatial objects of the real world are often self-similar, and have a non-integer `Hausdorff' fractal dimension [Man77, Sch91] and * empirical observations that a power law holds for the number of quadtree blocks for 2-d and 3-d data [Gae95b, ACF +
Reference: [Whi81] <author> M. White. N-Trees: </author> <title> Large Ordered Indexes for Multi-Dimensional Space. Application Mathematics Research Staff, Statistical Research Division, </title> <type> U.S. </type> <institution> Bureau of the Census, </institution> <month> December </month> <year> 1981. </year> <month> 18 </month>
Reference-contexts: Linear quadtrees have been very popular for 2-dimensional spaces. One of the major application is in geographic information systems: linear quadtrees have been used both in production systems, like the TIGER system at the U.S. Bureau of Census <ref> [Whi81] </ref> (http://tiger.census.gov/ tiger/tiger.html), which stores the map and statistical data of the U.S.A., as well as research prototypes such as QUILT [SSN87], PROBE [OM88], and GODOT [GR94]. For higher dimensions, oct-trees have been used in 3-d graphics and robotics [BB82]; in databases of 3-d medical images [ACF + 94], etc.
References-found: 29

