URL: http://www.cs.virginia.edu/~ftree/doc/userman/diftree_paper.ps
Refering-URL: http://www.cs.virginia.edu/~ftree/doc/userman/manual.htm
Root-URL: http://www.cs.virginia.edu
Phone: Bharath Venkataraman 2  
Title: DIFtree: A software package for the analysis of dynamic fault tree models  
Author: Joanne Bechta Dugan 
Keyword: Rohit Gulati 2 Cadence Design Systems 2 Sunnyvale Key Words: Fault tree, Binary Decision Diagram (BDD), Markov model, Software Tool  
Note: SUMMARY AND CONCLUSIONS  
Address: 2 Charlottesville  2 Charlottesville  
Affiliation: University of Virginia  University of Virginia  
Abstract: Several recent advances in fault tree models have been developed as an aid in the analysis of computer systems, and these have appeared in the RAMS symposium in the past several years. Such advances include the ability to model sequence dependencies [8, 6], the application of fault trees to the analysis of hardware- and software- fault tolerant systems [11], the ability to include details of the recovery process in the fault tree solution [2], and the use of modularization [16] and Binary Decision Diagrams as an aid in solution [4]. In this paper we present a software package (DIFtree) that implements these advances into a single methodology that can solve both dynamic and static fault trees, and which is applicable to the analysis of hardware, software and humanware in complex computer-based systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Fault tree handbook. US Nuclear Regulatory Commission NUREG-0492, </institution> <year> 1981. </year>
Reference-contexts: The operator console basic event represents the hardware, while the console software basic event represents the application software. The undeveloped basic event <ref> [1] </ref> labeled operator represents potential failures that the operator might induce. For the redundant buses, the two statistically identical buses have been combined into one replicated event labeled 2*Bus.
Reference: [2] <author> Stacy A. Doyle and Joanne Bechta Dugan. </author> <title> Fault trees and imperfect coverage: A combinatorial approach. </title> <booktitle> In Proceedings of the Reliability and Maintainability Symposium, </booktitle> <pages> pages 214-219, </pages> <month> January, </month> <year> 1993. </year>
Reference: [3] <author> Stacy A. Doyle and Joanne Bechta Dugan. </author> <title> Dependability assessment using binary decision diagrams. </title> <booktitle> In Proc. IEEE Int. Symp. on Fault-Tolerant Computing, </booktitle> <address> FTCS-25, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: 1. INTRODUCTION DIFtree (Dynamic Innovative Fault Tree) is both a methodology and prototype software tool providing a unique approach for reliability analysis of complex computer-based systems. The technical aspects of the DIFtree methodology have been described in <ref> [3, 10, 18, 15] </ref>; in this paper we describe the software package which implements the methodology. DIFtree implements a modular approach to fault tree solution, efficiently combining the best of static and dynamic analysis approaches. <p> The first and fourth independent subtrees are static, since they have no dynamic gates. The basic events in these subtrees can have either a fixed probability of occurrence or a constant failure rate. A static subtree is solved using a Binary Decision Diagram solution which incorporates coverage <ref> [3] </ref>. The second and third independent subtrees are dynamic, since each contains at least one dynamic gate. For a dynamic fault tree, a constant failure rate must be defined for each basic event, since the model is solved using Markov methods [7, 14].
Reference: [4] <author> Stacy A. Doyle, Joanne Bechta Dugan, and Mark A. Boyd. </author> <title> Combinatorial-models and coverage: A binary decision diagram (BDD) approach. </title> <booktitle> In Proceedings of the Reliability and Maintainability Symposium, </booktitle> <month> January, </month> <year> 1995. </year>
Reference: [5] <author> Stacy A. Doyle, Joanne Bechta Dugan, and Ann Patterson-Hine. </author> <title> A combinatorial approach to modeling imperfect coverage. </title> <journal> IEEE Transactions on Reliability, </journal> <pages> pages 87-94, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: This generally occurs if an undetected error propagates through the system, or if the faulty unit cannot be isolated and thus the system cannot be reconfigured. For a more complete discussion of coverage modeling, see <ref> [12, 5, 9, 17] </ref>. DIFtree incorporates coverage models into the fault tree model via three parameters which are (optionally) associated with each basic event.
Reference: [6] <author> Joanne Bechta Dugan, Salvatore Bavuso, and Mark Boyd. </author> <title> Tutorial: Modeling Advanced Fault Tolerant Architectures. </title> <booktitle> 1991 Reliability and Maintainability Symposium, </booktitle> <year> 1991. </year>
Reference: [7] <author> Joanne Bechta Dugan, Salvatore Bavuso, and Mark Boyd. </author> <title> Dynamic fault tree models for fault tolerant computer systems. </title> <journal> IEEE Transactions on Reliability, </journal> <month> September </month> <year> 1992. </year>
Reference-contexts: The memory interface units are the trigger input to the functional dependency gates, and the dependent basic events are the memory units. The functional dependency gate operates by labeling the dependent basic events as failed when the trigger event occurs <ref> [7] </ref>. The trigger event for a functional dependency gate need not be a basic event; the second functional dependency gate triggers the failure of memory unit M3 when both interface units fail. <p> The second and third independent subtrees are dynamic, since each contains at least one dynamic gate. For a dynamic fault tree, a constant failure rate must be defined for each basic event, since the model is solved using Markov methods <ref> [7, 14] </ref>. When the independent subtrees are solved, their solutions are combined using the fault tree gates which remain. That is, each independent subtree is replaced in the overall fault tree with a basic event (with a corresponding probability of failure and coverage parameters).
Reference: [8] <author> Joanne Bechta Dugan, Salvatore Bavuso, and Mark Boyd. </author> <title> Fault trees and sequence dependencies. </title> <booktitle> In Proceedings of the Reliability and Maintainability Symposium, </booktitle> <pages> pages 286-293, </pages> <month> January, </month> <year> 1990. </year>
Reference: [9] <author> Joanne Bechta Dugan, Salvatore J. Bavuso, and Mark A. Boyd. </author> <title> Fault trees and markov models for reliability analysis of fault tolerant systems. Reliability Engineering and System Safety, </title> <booktitle> 39 </booktitle> <pages> 291-307, </pages> <year> 1993. </year>
Reference-contexts: This generally occurs if an undetected error propagates through the system, or if the faulty unit cannot be isolated and thus the system cannot be reconfigured. For a more complete discussion of coverage modeling, see <ref> [12, 5, 9, 17] </ref>. DIFtree incorporates coverage models into the fault tree model via three parameters which are (optionally) associated with each basic event.
Reference: [10] <author> Joanne Bechta Dugan, Stacy A. Doyle, and Laura L. Pul-lum. </author> <title> New approaches to fault tree analysis. Communication in Reliability, Maintainability, </title> <journal> Supportability and Logistics, </journal> <month> July </month> <year> 1996. </year> <note> AR&MS 97RM-047 -6 </note>
Reference-contexts: 1. INTRODUCTION DIFtree (Dynamic Innovative Fault Tree) is both a methodology and prototype software tool providing a unique approach for reliability analysis of complex computer-based systems. The technical aspects of the DIFtree methodology have been described in <ref> [3, 10, 18, 15] </ref>; in this paper we describe the software package which implements the methodology. DIFtree implements a modular approach to fault tree solution, efficiently combining the best of static and dynamic analysis approaches.
Reference: [11] <author> Joanne Bechta Dugan and Ann Patterson-Hine. </author> <title> Sim--ple models of fault tolerant software. </title> <booktitle> In Proceedings of the Reliability and Maintainability Symposium, </booktitle> <month> January, </month> <year> 1993. </year>
Reference: [12] <author> Joanne Bechta Dugan and K. S. Trivedi. </author> <title> Coverage modeling for dependability analysis of fault-tolerant systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(6) </volume> <pages> 775-787, </pages> <year> 1989. </year>
Reference-contexts: A coverage model is used to analyze the fault and error recovery behavior of an adaptive system, and is used to assess coverage. A coverage model includes information about fault duration (permanent, transient) and the effectiveness of the system recovery procedures <ref> [12] </ref>. Including the concept of coverage (and the possibility that recovery may be imperfect) in the system level model is critical to an accurate dependability assessment. DIFtree coverage parameters are derived from a coverage model which takes the form shown in figure 7. <p> This generally occurs if an undetected error propagates through the system, or if the faulty unit cannot be isolated and thus the system cannot be reconfigured. For a more complete discussion of coverage modeling, see <ref> [12, 5, 9, 17] </ref>. DIFtree incorporates coverage models into the fault tree model via three parameters which are (optionally) associated with each basic event.
Reference: [13] <author> Yves Dutuit and Antoine Rauzy. </author> <title> A linear-time algorithm to find modules in fault trees. </title> <journal> IEEE Transactions on Reliability, </journal> <month> September </month> <year> 1996. </year>
Reference-contexts: Modular solution DIFtree models are solved via a modular combination of dynamic and static solution methods. Independent sub-trees, which share no inputs, are found using an algorithm developed by Dutuit and Rauzy <ref> [13, 15] </ref>; in the example system there are 4 independent subtrees, as shown in figure 8. Subtrees can be detected at any level of the fault tree; in our example they all happen to appear as inputs to the top event.
Reference: [14] <author> Rohit Gulati. </author> <title> A modular approach to static and dynamic fault tree analysis. </title> <type> Master's thesis, </type> <institution> University of Virginia Department of Electrical Engineering, </institution> <year> 1996. </year>
Reference-contexts: The second and third independent subtrees are dynamic, since each contains at least one dynamic gate. For a dynamic fault tree, a constant failure rate must be defined for each basic event, since the model is solved using Markov methods <ref> [7, 14] </ref>. When the independent subtrees are solved, their solutions are combined using the fault tree gates which remain. That is, each independent subtree is replaced in the overall fault tree with a basic event (with a corresponding probability of failure and coverage parameters).
Reference: [15] <author> Rohit Gulati and Joanne Bechta Dugan. </author> <title> A modular approach for analyzing static and dynamic fault trees. </title> <booktitle> In Proceedings of the Reliability and Maintainability Symposium, </booktitle> <month> January, </month> <year> 1997. </year>
Reference-contexts: 1. INTRODUCTION DIFtree (Dynamic Innovative Fault Tree) is both a methodology and prototype software tool providing a unique approach for reliability analysis of complex computer-based systems. The technical aspects of the DIFtree methodology have been described in <ref> [3, 10, 18, 15] </ref>; in this paper we describe the software package which implements the methodology. DIFtree implements a modular approach to fault tree solution, efficiently combining the best of static and dynamic analysis approaches. <p> Modular solution DIFtree models are solved via a modular combination of dynamic and static solution methods. Independent sub-trees, which share no inputs, are found using an algorithm developed by Dutuit and Rauzy <ref> [13, 15] </ref>; in the example system there are 4 independent subtrees, as shown in figure 8. Subtrees can be detected at any level of the fault tree; in our example they all happen to appear as inputs to the top event.
Reference: [16] <author> Ann Patterson-Hine and Joanne Bechta Dugan. </author> <title> Modular techniques for dynamic fault tree analysis. </title> <booktitle> In Proceedings of the Reliability and Maintainability Symposium, </booktitle> <pages> pages 363-368, </pages> <month> January, </month> <year> 1992. </year>
Reference: [17] <editor> Michael Pecht, editor. </editor> <title> Product Reliability, Maintainability and Supportability Handbook. </title> <publisher> CRC Press, </publisher> <year> 1995. </year>
Reference-contexts: This generally occurs if an undetected error propagates through the system, or if the faulty unit cannot be isolated and thus the system cannot be reconfigured. For a more complete discussion of coverage modeling, see <ref> [12, 5, 9, 17] </ref>. DIFtree incorporates coverage models into the fault tree model via three parameters which are (optionally) associated with each basic event.

References-found: 17

