URL: ftp://hobbes.jsc.nasa.gov/pub/korten/jetai.ps.Z
Refering-URL: http://tommy.jsc.nasa.gov/~bonasso/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fbonasso,korteng@mickey.jsc.nasa.gov  
Title: Experiences with an Architecture for Intelligent, Reactive Agents  
Author: R. Peter Bonasso R. James Firby ,Erann Gat David Kortenkamp David P. Miller Marc G. Slack 
Address: ER4 Houston, TX 77598  1100 East 58th Street Chicago, IL 60637  4800 Oak Grove Dr. Pasadena, CA 91109  7525 Colshire Dr. McLean VA, 22102  
Affiliation: Metrica Incorporated Robotics and Automation Group NASA Johnson Space Center  Computer Science Department University of Chicago  Jet Propulsion Laboratory  The MITRE Corporation  
Abstract: This paper describes an implementation of the 3 T robot architecture which has been under development for the last eight years. The architecture uses three levels of abstraction and description languages which are compatible between levels. The makeup of the architecture helps to coordinate planful activities with real-time behaviors for dealing with dynamic environments. In recent years, other architectures have been created with 
Abstract-found: 1
Intro-found: 1
Reference: [ Albus et al., 1986 ] <author> J.S. Albus, R. Lumia, and H.G. McCain. </author> <title> Nasa/nbs standard reference model for telerobot control system architecture (nasrem). </title> <type> Technical Report Tech Note #1235, </type> <institution> NASA SS-GFSC-0027, National Bureau of Standards, </institution> <year> 1986. </year> <month> 20 </month>
Reference-contexts: In 3 Tthe sensing from the control tier uses explicit task context to determine its meaning to the rest of the architecture. The control community also has some noteworthy multi-tiered architectures. NASREM <ref> [ Albus et al., 1986 ] </ref> was an early reference model for telerobotic control. It was in essence a many tiered model which predated 3 T in its provision for increasing abstraction and increasing cycle time as it moved from the servo level to the reasoning levels.
Reference: [ Arkin, 1989 ] <author> Ron Arkin. </author> <title> Motor schema-based mobile robot navigation. </title> <journal> International Journal of Robotics Research, </journal> <volume> 8(4), </volume> <year> 1989. </year>
Reference-contexts: Examples of the former sort include subsumption [ Brooks, 1986 ] , TCA [ Simmons, 1990 ] , and AURA <ref> [ Arkin, 1989 ] </ref> . Examples of the latter include SOAR [ Laird et al., 1987 ] , and the architecture used in the Guardian program [ Hayes-Roth, 1995 ] . <p> Noreils's architecture has been implemented on two robots, with some of the computation being done off-board. There are numerous architectures which are specific to mobile robot navigation. AURA <ref> [ Arkin, 1989 ] </ref> is superficially similar to 3 T. It based on a fundamental building block of a motor schema, a vector field associated with a goal or an obstacle. Motor schemas are combined by vector addition to produce a resultant which drives the robot.
Reference: [ Blidberg and Chappell, 1986 ] <author> D.R. Blidberg and S.G. Chappell. </author> <title> Guidance and control architecture for the eave vehicle. </title> <journal> IEEE Journal of Ocean Engineering, </journal> <volume> OE-11(4):449-461, </volume> <year> 1986. </year>
Reference-contexts: But NASREM was a reference model, not an implementation. The subsequent implementations of NASREM followed primarily the traditional sense-plan-act approach and were mainly applied to telerobotic applications, as opposed to autonomous robots. A notable exception was the early work of Blidberg <ref> [ Blidberg and Chappell, 1986 ] </ref> . Saridis' intelligent control architecture [ Saridis, 1995 ] , while having three layers, is fundamentally different from 3 T in its philosophy and implementation.
Reference: [ Bonasso and Kortenkamp, 1994 ] <author> R. Peter Bonasso and David Kortenkamp. </author> <title> An intelligent agent architecture in which to pursue robot learning. </title> <booktitle> In Proceedings of the MLC-COLT '94 Robot Learning Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: Natural language is already being researched at the RAPs level [ Martin and Firby, 1991 ] . Machine learning techniques can be investigated from case-based reasoning in the planning tier to reinforcement learning in the skill tier <ref> [ Bonasso and Kortenkamp, 1994 ] </ref> . The architecture could also benefit from combining it with concurrent perception architectures such as those used to support mapping [ Kuipers and Byun, 1991; Kortenkamp and Weymouth, 1994 ] .
Reference: [ Bonasso et al., 1992 ] <author> R. Peter Bonasso, H.J. Antonisse, and Marc G. Slack. </author> <title> A reactive robot system for find and fetch tasks in an outdoor environment. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <year> 1992. </year>
Reference: [ Borenstein and Koren, 1991 ] <author> Johann Borenstein and Yoram Koren. </author> <title> The Vector Field Histogram for fast obstacle-avoidance for mobile robots. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 7(3), </volume> <year> 1991. </year>
Reference-contexts: The skills include visual skills for searching and tracking colors, a skill for cropping a face and a skill for recognizing 8 a face. There are also skills for moving the robot using obstacle avoidance (the VFH obstacle avoidance method <ref> [ Borenstein and Koren, 1991 ] </ref> ), approaching a person using sonar and turning the robot. Skill events report changes in the robot's state and in the state of the world to the RAP system.
Reference: [ Brooks, 1986 ] <author> Rodney A. Brooks. </author> <title> A Robust Layered Control System for a Mobile Robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 2(1), </volume> <year> 1986. </year>
Reference-contexts: Examples of the former sort include subsumption <ref> [ Brooks, 1986 ] </ref> , TCA [ Simmons, 1990 ] , and AURA [ Arkin, 1989 ] . Examples of the latter include SOAR [ Laird et al., 1987 ] , and the architecture used in the Guardian program [ Hayes-Roth, 1995 ] .
Reference: [ Connell, 1992 ] <author> Jonathon H. Connell. </author> <title> SSS: A hybrid architecture applied to robot navigation. </title> <booktitle> In Proceedings IEEE International Conference on Robotics and Automation, </booktitle> <year> 1992. </year>
Reference-contexts: A three-tiered derivative of subsumption, SSS, was developed by Connell <ref> [ Connell, 1992 ] </ref> . Subsumption makes up the middle tier of SSS, not, as one might suppose, the bottom tier, which is a collection of traditional servo-control loops. The ability of SSS to respond to contingencies is therefore limited by subsumption's finite-state-machine model.
Reference: [ Elsaesser and MacMillan, 1991 ] <author> Chris Elsaesser and Richard MacMillan. </author> <title> Representation and algorithms for multiagent adversarial planning. </title> <type> Technical Report MTR-91W000207, </type> <institution> The MITRE Corporation, </institution> <year> 1991. </year>
Reference-contexts: Importantly, all three tiers must operate concurrently and asynchronously. Accomplishing this is the key to making planning useful in a robot. The planner we are using in our experiments, AP <ref> [ Elsaesser and MacMillan, 1991 ] </ref> , has a number of features which make it compelling to use for robot planning.
Reference: [ Elsaesser and Slack, 1994 ] <author> Chris Elsaesser and Marc G. Slack. </author> <title> Integrating deliberative planning in a robot architecture. </title> <booktitle> In Proceedings of the AIAA/NASA Conference on Intelligent Robots in Field, Factory, Service, and Space (CIRFFSS '94), </booktitle> <year> 1994. </year>
Reference-contexts: For this we use the Reactive Action Packages (RAPs) system [ Firby, 1989 ] . * A deliberative planner that reasons in depth about goals, resources and timing constraints. For this we use a system known as the Adversarial Planner (AP) <ref> [ Elsaesser and Slack, 1994 ] </ref> . charging in a docking bay on a space station. At the beginning of a typical day, there will be several routine maintenance tasks to perform on the outside of the station, such as retrieving broken items or inspecting power levels.
Reference: [ Firby and Slack, 1995 ] <author> R. James Firby and Marc G. Slack. </author> <title> Task execution: Interfacing to reactive skill networks. </title> <booktitle> In Working Notes: 1995 AAAI Spring Symposium on Lessons Learned from Implemented Architecture for Physical Agents, </booktitle> <year> 1995. </year>
Reference-contexts: Using these angles in combination with a rough estimate of the distance between the tags allows the robot to roughly determine the distance and direction to the landmark when both tags are visible. found in <ref> [ Firby and Slack, 1995 ] </ref> . 10 included watching for landmarks, moving to a landmark, and moving through doorways.
Reference: [ Firby et al., 1995 ] <author> R. James Firby, Roger E. Kahn, Peter N. Prokopowicz, and Michael J. Swain. </author> <title> An architecture for vision and action. </title> <booktitle> In International Joint Conference on Artificial Intelligence (to appear), </booktitle> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year> <pages> IJCAI. </pages>
Reference-contexts: The color vision system is used to find and identify trash and trash bins. The manipulator is used to pick up and deposit the trash. This task was implemented using only the bottom two layers of the architecture. More details of this implementation can be found in <ref> [ Firby et al., 1995; Firby, 1995 ] </ref> . Chip uses a network of skills that include routines for moving in a given direction while avoiding obstacles, turning to face a particular direction, finding an object visually, tracking an object, and reaching toward an object.
Reference: [ Firby, 1987 ] <author> R. James Firby. </author> <title> An investigation into reactive planning in complex domains. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1987. </year>
Reference: [ Firby, 1989 ] <author> R. James Firby. </author> <title> Adaptive Execution in Complex Dynamic Worlds. </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <year> 1989. </year> <month> 21 </month>
Reference-contexts: For this we use the Reactive Action Packages (RAPs) system <ref> [ Firby, 1989 ] </ref> . * A deliberative planner that reasons in depth about goals, resources and timing constraints. For this we use a system known as the Adversarial Planner (AP) [ Elsaesser and Slack, 1994 ] . charging in a docking bay on a space station. <p> Each of these tasks corresponds to one or more sets of sequenced actions, or RAPs <ref> [ Firby, 1989 ] </ref> . The planner then begins executing its plan and monitoring the results. By matching via unification each task's propositional effects clauses with the succeed clauses of RAPs in the RAP library, the planner selects a navigate RAP to execute the first task.
Reference: [ Firby, 1995 ] <author> R. James Firby. </author> <title> Lessons learned from the animate agent project. </title> <booktitle> In Working Notes: 1995 AAAI Spring Symposium on Lessons Learned from Implemented Architecture for Physical Agents, </booktitle> <year> 1995. </year>
Reference-contexts: The color vision system is used to find and identify trash and trash bins. The manipulator is used to pick up and deposit the trash. This task was implemented using only the bottom two layers of the architecture. More details of this implementation can be found in <ref> [ Firby et al., 1995; Firby, 1995 ] </ref> . Chip uses a network of skills that include routines for moving in a given direction while avoiding obstacles, turning to face a particular direction, finding an object visually, tracking an object, and reaching toward an object.
Reference: [ Gat et al., 1989 ] <author> Erann Gat, R. James Firby, and David P. Miller. </author> <title> Planning for execution monitoring on a planetary rover. </title> <booktitle> In Proceedings of the Space Operations Automation and Robotics Workshop, </booktitle> <year> 1989. </year>
Reference: [ Gat, 1992 ] <author> Erann Gat. </author> <title> Integrating planning and reacting in a heterogeneous asynchronous architecture for controlling real-world mobile robots. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1992. </year>
Reference-contexts: Of the robot architectures in use, 3 T has its strongest similarity to ATLANTIS <ref> [ Gat, 1992 ] </ref> . ATLANTIS and 3 T grew out of the same work hence their similarity. The chief differences between the two is that ATLANTIS leaves much more control at the sequencing tier. In ATLANTIS, the deliberative tier must be specifically called by the sequencing tier.
Reference: [ Graves et al., 1993 ] <author> Sean Graves, Larry Ciscon, and J.D. Wise. </author> <title> A telerobotic interface protocol. </title> <booktitle> In Proceedings of IEEE International Confernence on Robotics and Automation, </booktitle> <year> 1993. </year>
Reference-contexts: Existing ARMSS modules included inverse kinematic trajectory generation, velocity and position sensing and control, force/torque sensing and control, and ratchet and gripper control. These software modules could be accessed via the TelRIP Ethernet <ref> [ Graves et al., 1993 ] </ref> communications protocols. Thus, the skill system was simply functions that called and received signals from those modules.
Reference: [ Hayes-Roth, 1995 ] <author> Barbara Hayes-Roth. </author> <title> An architecture for adaptive intelligent systems. </title> <journal> Artificial Intelligence, </journal> <volume> 72, </volume> <year> 1995. </year>
Reference-contexts: Examples of the former sort include subsumption [ Brooks, 1986 ] , TCA [ Simmons, 1990 ] , and AURA [ Arkin, 1989 ] . Examples of the latter include SOAR [ Laird et al., 1987 ] , and the architecture used in the Guardian program <ref> [ Hayes-Roth, 1995 ] </ref> . We consider 3 T to be an example of the former sort, that is, an architecture designed from the outset to control physical agents, and mobile robots in particular.
Reference: [ Huber and Kortenkamp, 1995 ] <author> Eric Huber and David Kortenkamp. </author> <title> Using stereo vision to pursue moving agents with a mobile robot. </title> <booktitle> In 1995 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1995. </year>
Reference-contexts: In a similar application, the same robot equipped with a black and white stereo vision system used the bottom two tiers of the architecture to find and pursue other agents <ref> [ Huber and Kortenkamp, 1995 ] </ref> . 9 3.2 A trash-collecting mobile robot As part of the Animate Agent Project at the University of Chicago's Department of Computer Science, the robot Chip has been programmed to clean up trash from the floor.
Reference: [ Kortenkamp and Weymouth, 1994 ] <author> David Kortenkamp and Terry Weymouth. </author> <title> Topological mapping for mobile robots using a combination of sonar and vision sensing. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <year> 1994. </year>
Reference-contexts: Machine learning techniques can be investigated from case-based reasoning in the planning tier to reinforcement learning in the skill tier [ Bonasso and Kortenkamp, 1994 ] . The architecture could also benefit from combining it with concurrent perception architectures such as those used to support mapping <ref> [ Kuipers and Byun, 1991; Kortenkamp and Weymouth, 1994 ] </ref> .
Reference: [ Kortenkamp et al., 1993 ] <author> David Kortenkamp, Marcus Huber, Charles Cohen, Ulrich Raschke, Clint Bidlack, Clare Bates Congdon, Frank Koss, and Terry Weymouth. </author> <title> Integrated mobile robot design: Winning the AAAI-92 robot competition. </title> <journal> IEEE Expert, </journal> <volume> 8(4), </volume> <month> August </month> <year> 1993. </year>
Reference: [ Kuipers and Byun, 1991 ] <author> Benjamin J. Kuipers and Yung-Tai Byun. </author> <title> A robot exploration and mapping strategy based on a semantic hierarchy of spatial representations. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 8, </volume> <year> 1991. </year>
Reference-contexts: Machine learning techniques can be investigated from case-based reasoning in the planning tier to reinforcement learning in the skill tier [ Bonasso and Kortenkamp, 1994 ] . The architecture could also benefit from combining it with concurrent perception architectures such as those used to support mapping <ref> [ Kuipers and Byun, 1991; Kortenkamp and Weymouth, 1994 ] </ref> .
Reference: [ Laird et al., 1987 ] <author> John E. Laird, Allen Newell, and Paul S. Rosenbloom. </author> <title> Soar: An architecture for general intelligence. </title> <journal> Artificial Intelligence, </journal> <volume> 33(1), </volume> <year> 1987. </year>
Reference-contexts: Examples of the former sort include subsumption [ Brooks, 1986 ] , TCA [ Simmons, 1990 ] , and AURA [ Arkin, 1989 ] . Examples of the latter include SOAR <ref> [ Laird et al., 1987 ] </ref> , and the architecture used in the Guardian program [ Hayes-Roth, 1995 ] . We consider 3 T to be an example of the former sort, that is, an architecture designed from the outset to control physical agents, and mobile robots in particular. <p> Perceptual tasks produce results (information) that can be preconditions of other tasks, but this is all handled with one unifying mechanism. We find that even in very complex cases, the appropriate behavior arises naturally from encoding tasks in the RAP representation. Soar <ref> [ Laird et al., 1987 ] </ref> is a production system with the ability to switch between deliberative and more reactive modes of reasoning via a learning mechanism that caches deliberative results.
Reference: [ Martin and Firby, 1991 ] <author> Charles E. Martin and R. James Firby. </author> <title> Generating natural language expectations from a reactive execution system. </title> <booktitle> In Proceedings of the 13th Cognitive Science Conference, </booktitle> <address> Chicago, IL, </address> <year> 1991. </year>
Reference-contexts: Having achieved this framework we have also begun to investigate the integration of other AI disciplines. Natural language is already being researched at the RAPs level <ref> [ Martin and Firby, 1991 ] </ref> . Machine learning techniques can be investigated from case-based reasoning in the planning tier to reinforcement learning in the skill tier [ Bonasso and Kortenkamp, 1994 ] .
Reference: [ Miller et al., 1994 ] <author> David P. Miller, Marc G. Slack, and Chris Elsaesser. </author> <title> An implemented intelligent agent architecture for autonomous submersibles. </title> <booktitle> In Intelligent Ships Symposium Proceedings: Intelligent Ship Technologies for the 21st Century, </booktitle> <year> 1994. </year>
Reference: [ Miller, 1986 ] <author> David P. Miller. </author> <title> A plan language for dealing with the physical world. </title> <booktitle> In Proceedings of the Third Annual Computer Science Symposium on Knowledge Based Systems, </booktitle> <address> Columbia SC, </address> <year> 1986. </year> <month> 22 </month>
Reference: [ Musliner et al., 1993 ] <author> David J. Musliner, Ed Durfee, and Kang Shin. </author> <title> CIRCA: A cooperative, intelligent, real-time control architecture. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 23(6), </volume> <year> 1993. </year>
Reference-contexts: But because RAPs were designed to allow integration with conventional AI planners, we did not have to write an interlingua such as ACTs to achieve such integration. Additionally, Cypress does not specify a canonical interface to the control tier as does 3 T. CIRCA <ref> [ Musliner et al., 1993 ] </ref> has been used only with simulations, but it does make a strong claim for meeting hard-real time constraints.
Reference: [ Noreils and Chatila, 1995 ] <author> Fabric Noreils and Raja Chatila. </author> <title> Plan execution monitoring and control architecture for mobile robots. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 2, </volume> <year> 1995. </year>
Reference-contexts: ATLANTIS and 3 T grew out of the same work hence their similarity. The chief differences between the two is that ATLANTIS leaves much more control at the sequencing tier. In ATLANTIS, the deliberative tier must be specifically called by the sequencing tier. Noreils <ref> [ Noreils and Chatila, 1995 ] </ref> describes an architecture that integrates planning and reactivity. Noreils' architecture has three levels (called planning, control, and functional) which correspond roughly to the three main components of 3 T. The control level is based on a formalism that is similar to RAPs.
Reference: [ Payton, 1990 ] <author> David Payton. </author> <title> Exploiting plans as resources for action. In Workshop on Innovative Approaches to Planning, Scheduling, and Control, </title> <address> San Diego, CA, </address> <month> November </month> <year> 1990. </year> <pages> DARPA. </pages>
Reference-contexts: Each behavior is coupled directly to the robot's sensors and actuators. Conflicts among behaviors are resolved by an arbitration mechanism. Subsumption, and numerous variations on the theme (e.g. <ref> [ Payton, 1990 ] </ref> ), are all homogeneous architectures. The structure of behaviors and the way in which behaviors interact is the same throughout the architecture. There is no architectural support for abstraction, planning, or resource management.
Reference: [ Saridis, 1995 ] <author> G.N. Saridis. </author> <title> Architectures for intelligent controls. </title> <editor> In Gupta and Sinhm, editors, </editor> <booktitle> Intelligent Control Systems: Theory and Applications. </booktitle> <publisher> IEEE Press, </publisher> <year> 1995. </year>
Reference-contexts: The subsequent implementations of NASREM followed primarily the traditional sense-plan-act approach and were mainly applied to telerobotic applications, as opposed to autonomous robots. A notable exception was the early work of Blidberg [ Blidberg and Chappell, 1986 ] . Saridis' intelligent control architecture <ref> [ Saridis, 1995 ] </ref> , while having three layers, is fundamentally different from 3 T in its philosophy and implementation. The architecture begins with the servo systems available on a given robot and augments them to integrate the execution algorithms of the next level, using VXWORKS and the VME-bus.
Reference: [ Shoham, 1988 ] <author> Y. Shoham. </author> <title> Reasoning about Change. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: These problems are addressed by augmenting the plan with operations that prevent the negative effects of the uncontrolled action. This amounts to reasoning about situation-specific preconditions, and is the way AP addressees the qualification problem <ref> [ Shoham, 1988 ] </ref> . AP can use these adversarial reasoning capabilities as a risk assessment mechanism to consider the probability of dangerous interactions with other agents. 3 Applications of the Architecture We have applied our architecture to several robotic and even some non-robotic tasks.
Reference: [ Simmons, 1990 ] <author> Reid Simmons. </author> <title> An architecture for coordinating planning, sensing and action. In Proceedings of the Workshop on Innovative Approaches to Planning, </title> <journal> Scheduling and Control, </journal> <year> 1990. </year>
Reference-contexts: Examples of the former sort include subsumption [ Brooks, 1986 ] , TCA <ref> [ Simmons, 1990 ] </ref> , and AURA [ Arkin, 1989 ] . Examples of the latter include SOAR [ Laird et al., 1987 ] , and the architecture used in the Guardian program [ Hayes-Roth, 1995 ] . <p> SSS adds a "contingency table" representation, making programming somewhat less cumbersome than constructing FSA's directly, but it is still quite restrictive. SSS has only been demonstrated on tasks involving pure navigation (although it performs this task with impressive speed). Simmons' Task Control Architecture (TCA) <ref> [ Simmons, 1990 ] </ref> has been successfully used on a number of real-world robots, but it is very different from 3 T. There are essentially no tiers in TCA. A task net is constructed for the robot which is similar to a task-net in RAPs.
Reference: [ Slack, 1992a ] <author> Marc G. Slack. </author> <title> Computation limited sonar-based local navigation. </title> <booktitle> In Proceedings of the AAAI 92 Spring Symposium on Selective Perception, </booktitle> <year> 1992. </year>
Reference: [ Slack, 1992b ] <author> Marc G. Slack. </author> <title> Sequencing formally defined reactions for robotic activity: </title> <booktitle> Integrating raps and gapps. In Proceedings of SPIE's Conference on Sensor Fusion, </booktitle> <year> 1992. </year>
Reference-contexts: For instance, in one of our manipulator projects, unloading an item involves unfastening bolts, two or three tool changes, and the use of a redundant joint capability. 3 2.1 Skills Situated skills represent the architecture's connection with the world. The term situated skill <ref> [ Slack, 1992b ] </ref> is intended to denote a configuration of the robot's control system that, if placed in the proper context, will achieve or maintain a particular state in the world.
Reference: [ Slack, 1993 ] <author> Marc G. Slack. </author> <title> Navigation templates: Mediating qualitative guidance and quantitative control in mobile robots. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 23(2), </volume> <year> 1993. </year>
Reference-contexts: The primary navigation skills are Navigation Template-based (or NaT-based) <ref> [ Slack, 1993 ] </ref> processes that use sonar information to avoid obstacles while moving to a given coordinate or moving in a particular direction. When constructed properly, such skill networks allow the robot to follow halls and enter doors independent of the specific hallway or door that the robot encounters.
Reference: [ Weismeyer, 1989 ] <author> Mark Weismeyer. </author> <title> New and improved Soar I/O. </title> <type> Technical report, </type> <institution> University of Michigan, </institution> <year> 1989. </year>
Reference-contexts: Soar [ Laird et al., 1987 ] is a production system with the ability to switch between deliberative and more reactive modes of reasoning via a learning mechanism that caches deliberative results. Soar has been augmented with a perceptual-motor interface <ref> [ Weismeyer, 1989 ] </ref> which is constructed from the same basic computational mechanism as the rest of the system. Soar thus collapses all of the capabilities of 3 Tinto a single mechanism.
Reference: [ Wilkins et al., 1995 ] <author> David E. Wilkins, Karen L. Myers, John D. Lowrance, and Leonard P. Wesley. </author> <title> Planning and reacting in uncertain dynamic environments. </title> <journal> Journal of Experimental an Theoretical AI, </journal> <volume> 7, </volume> <year> 1995. </year>
Reference-contexts: Soar thus collapses all of the capabilities of 3 Tinto a single mechanism. Like Guardian, Soar embraces the concept of representation, but does not commit to a particular task representation. 3 T shares many aspects of Cypress <ref> [ Wilkins et al., 1995 ] </ref> . Our AP planner has similar expressive power at an abstract level as SIPE; RAPs compares favorably with PRS.
Reference: [ Wong et al., 1995 ] <author> Carol Wong, David Kortenkamp, and Mark Speich. </author> <title> A mobile robot that recognizes people. </title> <booktitle> In Proceedings of the 1995 IEEE International Conference on Tools with Artificial Intelligence, </booktitle> <year> 1995. </year>
Reference-contexts: We will describe how this task was implemented in the bottom two tiers of our architecture, starting with the robot's skills. Details about the color vision system and the neural network can be found in <ref> [ Wong et al., 1995 ] </ref> . in C and executed entirely on-board the robot. The skills include visual skills for searching and tracking colors, a skill for cropping a face and a skill for recognizing 8 a face.
Reference: [ Yu et al., 1994 ] <author> Sophia T. Yu, Marc G. Slack, and David P. Miller. </author> <title> A streamlined software environment for situated skills. </title> <booktitle> In Proceedings of the AIAA/NASA Conference on Intelligent Robots in Field, Factory, Service, and Space (CIRFFSS '94), </booktitle> <year> 1994. </year> <month> 23 </month>
Reference-contexts: Our architecture separates the general robot intelligence problem into three interacting layers or tiers and is thus known as 3 T. The particular implementation of 3 T described in this paper consists of: * A dynamically reprogrammable set of reactive skills coordinated by a skill manager <ref> [ Yu et al., 1994 ] </ref> . * A sequencer that activates and deactivates sets of skills to create networks that change the state of the world and accomplish specific tasks. <p> So, to keep the control architecture robot independent, we have developed a set of tools for constructing these situated skills <ref> [ Yu et al., 1994 ] </ref> . This canonical approach to skill development forces a standard interface among the skills and a standard interface to the sequencer, independent of the physical characteristics of the robot and sensors to which they are connected. The representation includes: 1.
References-found: 40

