URL: http://www.research.att.com/library/trs/TRs/98/98.7/98.7.1.body.ps.gz
Refering-URL: http://www.research.att.com/library/trs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: dalia@research.att.com  reiter@research.att.com  yash@research.bell-labs.com  rwright@research.att.com  
Title: Probabilistic Byzantine Quorum Systems  
Author: Dahlia Malkhi Michael Reiter Avishai Wool Rebecca N. Wright L 
Address: Florham Park, New Jersey, USA;  Florham Park, New Jersey, USA;  Murray Hill, New Jersey, USA;  Florham Park, New Jersey, USA;  
Affiliation: AT&T Labs|Research,  AT&T Labs|Research,  Bell Labs, Lucent Technologies,  AT&T Labs|Research,  
Date: May 6, 1998  
Note: AT&T Labs-Research TR 98-7-1  
Abstract-found: 0
Intro-found: 0
Reference: [BG87] <author> D. Barbara and H. Garcia-Molina. </author> <title> The reliability of vote mechanisms. </title> <journal> IEEE Trans. Comput., </journal> <volume> C-36:1197-1208, </volume> <month> October </month> <year> 1987. </year>
Reference-contexts: We also show that our construction offers good availability by studying its failure probability <ref> [BG87, PW95] </ref>. Even when designed with Byzantine failures in mind, an important property of a replication scheme is the extent to which it can ensure data availability in the face of benign server failures (crashes). <p> Figure 1 shows this comparison for some values of n and b. The left side of Figure 1 compares F p (R k (n; q)) to the lower bound on failure probability for any strict system <ref> [BG87, PW95] </ref>. 2 This figure shows that our construction can beat this lower bound|and hence the failure probability of any strict system| for many values of p in settings where b = p n.
Reference: [Chv79] <author> V. Chvatal. </author> <title> The tail of the hypergeometric distribution. </title> <journal> Discrete Math., </journal> <volume> 25 </volume> <pages> 285-287, </pages> <year> 1979. </year>
Reference-contexts: In [Hoe63], Hoeffding derives such a bound as a special case of more general results (see also <ref> [Chv79] </ref>). However, we obtain a tighter bound by comparing X with the sum of independent Bernoulli random variables. We will use the following result, which is a consequence of [Hoe63, Theorem 4].
Reference: [Fel67] <author> W. Feller. </author> <title> An Introduction to Probability Theory and Its Applications, volume 1. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <note> 3rd edition, </note> <year> 1967. </year>
Reference-contexts: This is because the q members of Q are sampled without replacement from a universe of size n containing b = q=` faulty servers. Therefore E [X] = `n (for instance, see <ref> [Fel67, p. 233] </ref>). We can compute the expectation of Y directly. Fix the set B. For each element u 62 B define an indicator random variable I u such that I u = 1 if u 2 Q " Q 0 n B.
Reference: [HB95] <author> M. Hayden and K. P. Birman. </author> <title> Achieving critical reliability with unreliable components and unreliable glue. </title> <institution> Cornell University Technical Report, TR95-1493, </institution> <month> March, </month> <year> 1995. </year>
Reference-contexts: Other approaches to relaxing consistency in such application domains have been proposed. For example, Pu and Leff proposed *-serializability [PL91], a relaxed serializability constraint for database replication; Hayden and Birman implemented pbcast <ref> [HB95] </ref>, a probabilistic broadcast with relaxed reliability guarantees for building fault tolerant distributed applications; and Malkhi et al. [MMR97] proposed a probabilistic secure broadcast with a relaxed consistency property for securely replicating services in a very large network.
Reference: [Hoe63] <author> W. Hoeffding. </author> <title> Probability inequalities for sums of bounded random variables. </title> <journal> J. Am. Statist. Assoc., </journal> <volume> 58(301) </volume> <pages> 13-30, </pages> <year> 1963. </year>
Reference-contexts: In <ref> [Hoe63] </ref>, Hoeffding derives such a bound as a special case of more general results (see also [Chv79]). However, we obtain a tighter bound by comparing X with the sum of independent Bernoulli random variables. We will use the following result, which is a consequence of [Hoe63, Theorem 4]. <p> In [Hoe63], Hoeffding derives such a bound as a special case of more general results (see also [Chv79]). However, we obtain a tighter bound by comparing X with the sum of independent Bernoulli random variables. We will use the following result, which is a consequence of <ref> [Hoe63, Theorem 4] </ref>. Proposition 5.3 Let ^x i ~ B ( q `n ) be independent Bernoulli random variables for i = 1; : : : ; q, and let b X = i=1 ^x i .
Reference: [IS92] <author> A. Israeli and A. Shaham. </author> <title> Optimal multi-write multi-reader atomic register. </title> <booktitle> In Proceedings of the 11th ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 71-82, </pages> <year> 1992. </year>
Reference-contexts: We are aware of no standard definition of variable semantics against which to prove the correctness of the above protocol. The following theorem nevertheless clarifies its utility, showing that it approximates a multi-reader, single-writer safe variable [Lam86]. From these, multi-writer multi-reader atomic variables can be built using well-known constructions <ref> [Lam86, IS92] </ref>. Alternatively, the protocol above can be used in constructing other replicated variables directly. Theorem 3.2 Consider a multi-reader, single-writer variable replicated using the above access protocol with a (b; ")-masking quorum system.
Reference: [Lam86] <author> L. Lamport. </author> <title> On interprocess communication (part II: algorithms). </title> <booktitle> Distributed Computing 1 </booktitle> <pages> 86-101, </pages> <year> 1986. </year>
Reference-contexts: In particular, we present an access protocol that implements a replicated variable whose semantics approximate that of a multi-reader, single-writer safe variable <ref> [Lam86] </ref>. We also present a general construction for a probabilistic masking quorum system. Compared with strict quorum systems that can mask Byzantine server failures, our approach yields dramatically better data availability in the face of crash failures, and does so while simultaneously decreasing the load on servers. <p> We are aware of no standard definition of variable semantics against which to prove the correctness of the above protocol. The following theorem nevertheless clarifies its utility, showing that it approximates a multi-reader, single-writer safe variable <ref> [Lam86] </ref>. From these, multi-writer multi-reader atomic variables can be built using well-known constructions [Lam86, IS92]. Alternatively, the protocol above can be used in constructing other replicated variables directly. Theorem 3.2 Consider a multi-reader, single-writer variable replicated using the above access protocol with a (b; ")-masking quorum system. <p> We are aware of no standard definition of variable semantics against which to prove the correctness of the above protocol. The following theorem nevertheless clarifies its utility, showing that it approximates a multi-reader, single-writer safe variable [Lam86]. From these, multi-writer multi-reader atomic variables can be built using well-known constructions <ref> [Lam86, IS92] </ref>. Alternatively, the protocol above can be used in constructing other replicated variables directly. Theorem 3.2 Consider a multi-reader, single-writer variable replicated using the above access protocol with a (b; ")-masking quorum system.
Reference: [MMR97] <author> D. Malkhi, M. Merritt and O. Rodeh. </author> <title> Secure multicast in a WAN. </title> <booktitle> The International Conference on Distributed Computing Systems (ICDCS), Baltimore, </booktitle> <pages> pages 87-94. </pages> <month> May </month> <year> 1997. </year> <month> 13 </month>
Reference-contexts: For example, Pu and Leff proposed *-serializability [PL91], a relaxed serializability constraint for database replication; Hayden and Birman implemented pbcast [HB95], a probabilistic broadcast with relaxed reliability guarantees for building fault tolerant distributed applications; and Malkhi et al. <ref> [MMR97] </ref> proposed a probabilistic secure broadcast with a relaxed consistency property for securely replicating services in a very large network.
Reference: [MR97] <author> D. Malkhi and M. Reiter. </author> <title> Byzantine quorum systems. </title> <booktitle> In Proc. 29th ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 569-578, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Compared with strict quorum systems that can mask Byzantine server failures, our approach yields dramatically better data availability in the face of crash failures, and does so while simultaneously decreasing the load on servers. To recall the definition of strict masking quorum systems <ref> [MR97] </ref>, let b denote the bound on the number of Byzantine server failures that may occur. Then a strict b-masking quorum system is one in which any two quorums intersect in at least 2b + 1 elements. <p> This led to the definition of a b-masking quorum system <ref> [MR97] </ref>: Definition 2.3 A strict b-masking quorum system Q over a universe U is a set system over U such that for every Q 1 ; Q 2 2 Q, jQ 1 " Q 2 j 2b + 1. <p> So, if the client discards any values that were returned by b or fewer servers, and then chooses from the remaining values the one with the most recent timestamp, then the client is guaranteed to obtain the correct value <ref> [MR97] </ref>. Clients pick quorums to access in accordance with some access strategy, which defines the likelihood that a quorum is chosen for any given access. Definition 2.4 An access strategy, or simply strategy, w for a set system Q specifies a probability distribution on the elements of Q. <p> One advantage of such a definition is that there is no need to change the client access protocol: simply adopting the read and write protocols from <ref> [MR97] </ref> would ensure that clients receive correct answers with high probability. However, this definition does not yield the performance benefits that the probabilistic approach did for regular quorum systems. <p> This comparison is further pronounced in the right side of Figure 1, where our construction is directly compared to the Threshold strict masking quorum system ("Thr") of <ref> [MR97] </ref>, whose quorums are all sets of size d n+2b+1 2 e. Here, the comparison is drawn in a setting where b = n 4 1, which is the largest b for which strict masking quorum systems exist [MR97]. <p> is directly compared to the Threshold strict masking quorum system ("Thr") of <ref> [MR97] </ref>, whose quorums are all sets of size d n+2b+1 2 e. Here, the comparison is drawn in a setting where b = n 4 1, which is the largest b for which strict masking quorum systems exist [MR97]. Like our probabilistic construction, Thr has asymptotic failure probability of e (n) . However, Figure 1 shows that our construction decisively beats Thr in this case. We remind the reader that these gains in availability come at the cost of risking consistency with some probability ".
Reference: [MRW97a] <author> D. Malkhi, M. Reiter, and A. Wool. </author> <title> The load and availability of Byzantine quorum systems. </title> <booktitle> In Proc. 16th ACM Symp. Princip. Distributed Computing (PODC), </booktitle> <pages> pages 249-257, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: The load of Q is L (Q) = min w fL w (Q)g, where the minimum is taken over all strategies. Any strict quorum system over a universe of n servers has load (1= p n) [NW98], and any strict b-masking quorum system has load ( p b=n) <ref> [MRW97a] </ref>. Numerous systems have been found that meet these lower bounds. The failure probability captures the ability of the service to tolerate crash failures. The failure probability of a quorum system is the probability that the system is disabled when individual servers crash independently with a fixed probability. <p> It is also interesting to note that the load of R k (n; `b) beats the load of any strict masking quorum system in the case when both b = !( p n) and b = o (n). More precisely, the load of any strict system is ( b=n) <ref> [MRW97a] </ref>. So, if b = fi ( n), then choosing ` = n 1=5 , for example, yields a load of O (n 0:3 ), which beats the lower bound of (n 0:25 ) for any strict system.
Reference: [MRW97b] <author> D. Malkhi, M. Reiter, and R. Wright. </author> <title> Probabilistic quorum systems. </title> <booktitle> In Proc. 16th ACM Symp. Princip. Distributed Computing (PODC), </booktitle> <pages> pages 267-273, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: 1 Overview Quorums are tools for increasing the availability and efficiency of replicated services. A quorum system is a set of subsets (quorums) of servers such that every pair of quorums intersect. Recently, probabilistic quorum systems <ref> [MRW97b] </ref>, in which any two chosen quorums intersect with high probability rather than with certainty, have been introduced to break availability and efficiency tradeoffs inherent in non-probabilistic (strict ) quorum systems. However, this prior work addressed only crash server failures and limited forms of Byzantine server failures. <p> F p (Q) p 1 2 for strict quorum systems, and typically F p (Q) ! 1 when p &gt; 1 2 . 3 Probabilistic masking quorum systems To formulate a probabilistic version of masking quorum systems, a natural place to start is the definition of a probabilistic quorum system <ref> [MRW97b] </ref>. A probabilistic quorum system is a set system and an accompanying access strategy such that any two "quorums" selected via the access strategy intersect with high probability. <p> To do this, we modify the basic construction given in <ref> [MRW97b] </ref> by introducing the appropriate threshold k. The constructions in the resulting family differ in the number b of faulty servers that they tolerate and in the probability " of reading an incorrect value. They all fit the following template: Definition 5.1 Let U be a universe of size n. <p> Our work improves on previous work in probabilistic quorum systems <ref> [MRW97b] </ref> by introducing new techniques in order to handle Byzantine faults in their full generality.
Reference: [MR95] <author> R. Motwani and P. Raghavan. </author> <title> Randomized Algorithms. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year>
Reference-contexts: P ( b X &gt; (1 + fl)E [ b X ]) e E [ b X ]fl 2 =4 when 0 &lt; fl 2e 1, and P ( b X &gt; (1 + fl)E [ b X ]) 2 (1+fl)E [ b X] when fl &gt; 2e 1, (cf. <ref> [MR95, p. 72] </ref>). In our case, E [ b X ] = E [X] = q 2 =`n by (3). Setting k = (1+fl)E [ b X ] and substituting k = q 2 =2n yields fl = `=2 1.
Reference: [NW98] <author> M. Naor and A. Wool. </author> <title> The load, capacity and availability of quorum systems. </title> <journal> SIAM J. Computing, </journal> <volume> 27(2) </volume> <pages> 423-447, </pages> <month> April </month> <year> 1998. </year> <note> Extended abstract in Proc. 35th IEEE Symp. Foundations of Comp. Sci. (FOCS), </note> <year> 1994. </year>
Reference-contexts: That is, w : Q ! [0; 1] satisfies P In this paper we consider two measures of the quality of quorum systems, which are the load and the failure probability of the system. The load of a quorum system, defined in <ref> [NW98] </ref>, captures the probability of accessing the busiest server. Load is a measure of efficiency. All other things being equal, systems with lower load can process more requests than those with higher load. <p> The load of Q is L (Q) = min w fL w (Q)g, where the minimum is taken over all strategies. Any strict quorum system over a universe of n servers has load (1= p n) <ref> [NW98] </ref>, and any strict b-masking quorum system has load ( p b=n) [MRW97a]. Numerous systems have been found that meet these lower bounds. The failure probability captures the ability of the service to tolerate crash failures. <p> Then L (hQ; w; ki) max E [jQj] ; p E [jQj] ; where the expectation is taken with respect to the strategy w. 7 Theorem 4.1 is analogous to the bounds shown in <ref> [NW98] </ref> for strict quorum systems, however its proof is more involved.
Reference: [PW95] <author> D. Peleg and A. Wool. </author> <title> The availability of quorum systems. </title> <journal> Information and Computation, </journal> <volume> 123(2) </volume> <pages> 210-223, </pages> <year> 1995. </year>
Reference-contexts: We also show that our construction offers good availability by studying its failure probability <ref> [BG87, PW95] </ref>. Even when designed with Byzantine failures in mind, an important property of a replication scheme is the extent to which it can ensure data availability in the face of benign server failures (crashes). <p> A good failure probability F p (Q) for a strict quorum system Q has lim n!1 F p (Q) = 0 when p &lt; 1 2 <ref> [PW95] </ref>. <p> This bound shows that our construction cannot be outperformed (asymptotically) with respect to failure probability by any strict system, because the best possible failure probability of any strict quorum system is e (n) <ref> [PW95] </ref>. Moreover, if 1 2 &lt; p &lt; 1 q n then the failure probability of our construction is provably better than that of any strict system, because when p &gt; 1 2 then F p (Q) &gt; p for any strict system Q [PW95], and typically F p (Q) ! <p> strict quorum system is e (n) <ref> [PW95] </ref>. Moreover, if 1 2 &lt; p &lt; 1 q n then the failure probability of our construction is provably better than that of any strict system, because when p &gt; 1 2 then F p (Q) &gt; p for any strict system Q [PW95], and typically F p (Q) ! n!1 1 for such systems. The extent of our construction's improvement in failure probability over strict systems is best demonstrated by precise failure probability comparisons, rather than by asymptotic bounds. Figure 1 shows this comparison for some values of n and b. <p> Figure 1 shows this comparison for some values of n and b. The left side of Figure 1 compares F p (R k (n; q)) to the lower bound on failure probability for any strict system <ref> [BG87, PW95] </ref>. 2 This figure shows that our construction can beat this lower bound|and hence the failure probability of any strict system| for many values of p in settings where b = p n.
Reference: [PL91] <author> C. Pu and A. Leff. </author> <title> Replica control in distributed systems: An asynchronous approach. </title> <booktitle> In Proceedings of the 1991 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 377-386, </pages> <year> 1991. </year>
Reference-contexts: Other approaches to relaxing consistency in such application domains have been proposed. For example, Pu and Leff proposed *-serializability <ref> [PL91] </ref>, a relaxed serializability constraint for database replication; Hayden and Birman implemented pbcast [HB95], a probabilistic broadcast with relaxed reliability guarantees for building fault tolerant distributed applications; and Malkhi et al. [MMR97] proposed a probabilistic secure broadcast with a relaxed consistency property for securely replicating services in a very large network.
Reference: [Sch90] <author> F. B. Schneider. </author> <title> Implementing fault-tolerant services using the state machine approach: A tutorial. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(4) </volume> <pages> 299-319, </pages> <month> December </month> <year> 1990. </year>
Reference: [SSS95] <author> J. P. Schmidt, A. Siegel, and A. Srinivasan. </author> <title> Chernoff-Hoeffding bounds for applications with limited independence. </title> <journal> SIAM J. Discrete Math., </journal> <volume> 8, </volume> <year> 1995. </year> <month> 14 </month>
References-found: 17

