URL: file://theory.lcs.mit.edu/pub/people/rosario/stream.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~rosario/research.html
Root-URL: 
Title: How to Sign Digital Streams  
Author: Rosario Gennaro Pankaj Rohatgi 
Date: February 24, 1998  
Abstract: We present a new efficient paradigm for signing digital streams. The problem of signing digital streams to prove their authenticity is substantially different from the problem of signing regular messages. Traditional signature schemes are message oriented and require the receiver to process the entire message before being able to authenticate its signature. However, a stream is a potentially very long ( or infinite) sequence of bits that the sender sends to the receiver and the receiver is required to consumes the received bits at more or less the input rate and without excessive delay. Therefore it is infeasible for the receiver to obtain the entire stream before authenticating and consuming it. Examples of streams include digitized video and audio files, data feeds and applets. We present two solutions to the problem of authenticating digital streams. The first one is for the case of a finite stream which is entirely known to the sender (say a movie). We use this constraint to devise an extremely efficient solution. The second case is for a (potentially infinite) stream which is not known in advance to the sender (for example a live broadcast). We present proofs of security of our constructions. Our techniques also have applications in other areas, for example, efficient authentication of long files when communication is at a cost and signature based filtering at a proxy server.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare, S. Micali. </author> <title> How to Sign Given any Trapdoor Permutation. </title> <journal> J. of the ACM, </journal> <volume> 39(1) </volume> <pages> 214-233, </pages> <year> 1992. </year>
Reference-contexts: We also use the idea to of using old keys in order to authenticate new keys. This has appeared in several places but always for long-lived keys. Examples include <ref> [1, 16, 19] </ref> where this technique is used to build provably secure signature schemes. We stress that the results in [1, 16, 19] are mostly of theoretical interest and do not yield practical schemes. <p> We also use the idea to of using old keys in order to authenticate new keys. This has appeared in several places but always for long-lived keys. Examples include <ref> [1, 16, 19] </ref> where this technique is used to build provably secure signature schemes. We stress that the results in [1, 16, 19] are mostly of theoretical interest and do not yield practical schemes.
Reference: [2] <author> J. Benaloh, M. de Mare. </author> <title> One-Way Accumulators: A Decentralized Alternative to Digital Signatures. </title> <booktitle> Advances in Cryptology-EUROCRYPT'93. </booktitle> <publisher> LNCS, vol.765, pp.274-285, Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The novelty here is that we exploit the structure of the construction to allow fast authentication of single blocks in sequential order. It can also be seen as a weak construction of accumulators as introduced in <ref> [2] </ref>. An accumulator for k blocks B 1 ; : : : ; B k is a single value ACC that allows a signer to quickly authenticate any of the blocks in any particular order. Accumulators based on the RSA assumption were proposed in [2]. <p> construction of accumulators as introduced in <ref> [2] </ref>. An accumulator for k blocks B 1 ; : : : ; B k is a single value ACC that allows a signer to quickly authenticate any of the blocks in any particular order. Accumulators based on the RSA assumption were proposed in [2]. In our case we have a much faster construction based on collision-free hash functions, since we exploit the property that the blocks must be authenticated in a specific order. Mixing "regular" signatures with 1-time signatures, for the purpose of improving efficiency is discussed in [8].
Reference: [3] <author> D. Bleichenbacher, U. Maurer. </author> <title> Optimal Tree-Based One-time Digital Signature Schemes. </title> <journal> STACS'96, </journal> <volume> LNCS, Vol. 1046, </volume> <publisher> pp.363-374, Springer-Verlag. </publisher>
Reference-contexts: However these schemes cannot be used to sign an arbitrary number of messages but only a prefixed number of 8 them (usually one). Several other 1-time schemes have been proposed <ref> [8, 3, 4] </ref>; in Section 6 we discuss possible instantiations for our purpose. In this case also the stream is split into blocks. Initially the sender sends a signed public key for a 1-time signature scheme. <p> there is no major degradation in the level of security of the compound scheme and thus the basic components can be run with keys of ordinary length. 6 Implementation Issues 6.1 The Choice of the One-Time Signature Scheme Several one-time schemes have been presented in the literature, see for example <ref> [11, 12, 8, 3, 4] </ref>. The main parameters of these schemes are signature length and verification time.
Reference: [4] <author> D. Bleichenbacher, U. Maurer. </author> <title> On the efficiency of one-time digital signatures. Advances in Cryptology-ASYACRYPT'96, </title> <note> to appear. </note>
Reference-contexts: However these schemes cannot be used to sign an arbitrary number of messages but only a prefixed number of 8 them (usually one). Several other 1-time schemes have been proposed <ref> [8, 3, 4] </ref>; in Section 6 we discuss possible instantiations for our purpose. In this case also the stream is split into blocks. Initially the sender sends a signed public key for a 1-time signature scheme. <p> there is no major degradation in the level of security of the compound scheme and thus the basic components can be run with keys of ordinary length. 6 Implementation Issues 6.1 The Choice of the One-Time Signature Scheme Several one-time schemes have been presented in the literature, see for example <ref> [11, 12, 8, 3, 4] </ref>. The main parameters of these schemes are signature length and verification time.
Reference: [5] <author> I. Damgard. </author> <title> A Design Principle for Hash Functions. </title> <booktitle> Advances in Cryptology-Crypto'89. </booktitle> <publisher> LNCS, vol.435, Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: only the stream block but also the 1-time key attached to it. 1.4 Related Work The "chaining" technique of embedding the hash of the following block in the current block can be seen as a variation of the Merkle-Damg-ard meta-method to construct hash functions based on a simpler compression function <ref> [14, 5] </ref>. The novelty here is that we exploit the structure of the construction to allow fast authentication of single blocks in sequential order. It can also be seen as a weak construction of accumulators as introduced in [2].
Reference: [6] <author> W. Diffie, M. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):74-84, </volume> <year> 1976. </year>
Reference-contexts: 1 Introduction Digital Signatures (see <ref> [6, 18] </ref>) are the cryptographic answer to the problem of information authenticity.
Reference: [7] <author> T. ElGamal. </author> <title> A Public-Key Cryptosystem and a Signature Scheme based on Discrete Logarithms. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-31(4):469-472, </volume> <year> 1985. </year>
Reference: [8] <author> S. Even, O. Goldreich, S. Micali. </author> <title> On-Line/Off-Line Digital Signatures. </title> <journal> J. of Cryptology, </journal> <volume> 9(1) </volume> <pages> 35-67, </pages> <year> 1996. </year>
Reference-contexts: In our case we have a much faster construction based on collision-free hash functions, since we exploit the property that the blocks must be authenticated in a specific order. Mixing "regular" signatures with 1-time signatures, for the purpose of improving efficiency is discussed in <ref> [8] </ref>. However in that paper the focus is in making the signing operation of a message M efficient by dividing it in two parts. An off-line part in which the signer signs a 1-time public key with his long-lived secret key even before the messages M is known. <p> However these schemes cannot be used to sign an arbitrary number of messages but only a prefixed number of 8 them (usually one). Several other 1-time schemes have been proposed <ref> [8, 3, 4] </ref>; in Section 6 we discuss possible instantiations for our purpose. In this case also the stream is split into blocks. Initially the sender sends a signed public key for a 1-time signature scheme. <p> there is no major degradation in the level of security of the compound scheme and thus the basic components can be run with keys of ordinary length. 6 Implementation Issues 6.1 The Choice of the One-Time Signature Scheme Several one-time schemes have been presented in the literature, see for example <ref> [11, 12, 8, 3, 4] </ref>. The main parameters of these schemes are signature length and verification time. <p> The verification of the signature takes the same amount of computation as the scheme described above. However the length of the signature is slightly shorter, i.e. jDj (m + 1) bits. For a SHA-1 implementation this means 1288 bytes. As noticed in <ref> [8] </ref> the security of this scheme is based on a somewhat stronger assumption on F . Namely F is assumed to be non-quasi-invertible, that is on input y it infeasible to find an index i and a value x such that F i+1 (x) = F i (y). <p> Clearly if F is a one-way permutation the above notion is automatically satisfied. This scheme can be further generalized as described in <ref> [8] </ref>. The message M is split in m t blocks of size t bits, let them be M 1 ; : : : ; M m t .
Reference: [9] <author> S. Goldwasser, S. Micali, R. Rivest. </author> <title> A Digital Signature Scheme Secure Against Adaptive Chosen Message Attack. </title> <journal> SIAM J. Comp. </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <year> 1988. </year> <month> 19 </month>
Reference-contexts: On input a message M and the secret key SK, it outputs a signature . * V is the verification algorithm. For every (P K; SK) = G (1 n ) and = S (SK; M ), it holds that V (P K; ; M ) = 1. In <ref> [9] </ref> security for signature schemes is defined in several variants. The strongest variant is called "existential unforgeability against adaptively chosen message attack". That is, we require that no efficient algorithm will be able to produce a valid signed message, even after seeing several signed messages of its choice. Stream Signatures. <p> The above definitions say nothing about security. In order to define security for stream signing we use the same notions of security introduced in <ref> [9] </ref>. That is, we require that no efficient algorithm will be able to produce a valid signed stream, even after seeing several signed streams. However notice that given our definition of signed streams, a prefix of a valid signed stream is itself a valid signed stream. <p> B (1) 6 B (2) . This is the definition of existential unforgeability against adaptive chosen message attack, the strongest of the notions presented in <ref> [9] </ref>. Following [9] weaker variants can be defined. 3 The Off-Line Solution In this case we assume that the sender knows the entire stream in advance. (e.g., music/movie broadcast). <p> B (1) 6 B (2) . This is the definition of existential unforgeability against adaptive chosen message attack, the strongest of the notions presented in <ref> [9] </ref>. Following [9] weaker variants can be defined. 3 The Off-Line Solution In this case we assume that the sender knows the entire stream in advance. (e.g., music/movie broadcast). <p> So with probability *=4T , which is still non-negligible, the forger F 3 succeeds. Remark 1: In the bodies and proofs of the above theorems we meant security as "existential unforgeability against adaptively chosen message attack". However the theorems hold for any notion of security defined in <ref> [9] </ref>, that is the stream signature scheme inherits the same kind of security of the underlying signature scheme (s) provided that the hash function is collision-resistant.
Reference: [10] <author> G. Itkis. </author> <title> Asymmetric MACs. </title> <note> Rump talk at Crypto'96. </note>
Reference-contexts: A different method to authenticate broadcasted streams, with weaker non-repudiation properties than ours, was proposed in <ref> [10] </ref>. Long Files when Communication is at Cost. Our solution can be used also to authenticate long files in a way to reduce communication cost in case of tampering. Suppose that a receiver is downloading a long file from the Web.
Reference: [11] <author> L. Lamport. </author> <title> Constructing Digital Signatures from a One-Way Function. </title> <type> Technical Report SRI Intl. CSL 98, </type> <year> 1979. </year>
Reference-contexts: The size of the embedded authentication information is also an issue in this case. The idea here is to use fast 1-time signature schemes 4 (introduced in <ref> [11, 12] </ref>) to authenticate the internal blocks. So block i will contain a 1--time public key and also the 1-time signature of itself with respect to the key contained in block i 1. <p> One-Time Signatures. In the following we will use a special kind of signature scheme introduced in <ref> [11, 12] </ref>. These are signatures which are much faster to compute and verify than regular signatures since they are based on one-way functions and do not require a trapdoor function. Conjectured known one-way functions (as DES or SHA-1) are much more efficient then the known conjectured trapdoor functions as RSA. <p> there is no major degradation in the level of security of the compound scheme and thus the basic components can be run with keys of ordinary length. 6 Implementation Issues 6.1 The Choice of the One-Time Signature Scheme Several one-time schemes have been presented in the literature, see for example <ref> [11, 12, 8, 3, 4] </ref>. The main parameters of these schemes are signature length and verification time. <p> The scheme is based on a 1-way function F in a domain D. It also uses a collision resistant hash function H . The scheme allows signing of a single m-bit message. It is based on a combinations of ideas from <ref> [11, 20] </ref>. Here are the details of the scheme. Key Generation. Choose m + log m elements in D, let them be a 1 ; : : : ; a m+logm . This is the secret key.
Reference: [12] <author> R. Merkle. </author> <title> A Digital Signature based on a Conventional Encryption Function. </title> <booktitle> Advances in Cryptology-Crypto'87. LNCS, vol.293, </booktitle> <pages> pp. 369-378, </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: The size of the embedded authentication information is also an issue in this case. The idea here is to use fast 1-time signature schemes 4 (introduced in <ref> [11, 12] </ref>) to authenticate the internal blocks. So block i will contain a 1--time public key and also the 1-time signature of itself with respect to the key contained in block i 1. <p> One-Time Signatures. In the following we will use a special kind of signature scheme introduced in <ref> [11, 12] </ref>. These are signatures which are much faster to compute and verify than regular signatures since they are based on one-way functions and do not require a trapdoor function. Conjectured known one-way functions (as DES or SHA-1) are much more efficient then the known conjectured trapdoor functions as RSA. <p> there is no major degradation in the level of security of the compound scheme and thus the basic components can be run with keys of ordinary length. 6 Implementation Issues 6.1 The Choice of the One-Time Signature Scheme Several one-time schemes have been presented in the literature, see for example <ref> [11, 12, 8, 3, 4] </ref>. The main parameters of these schemes are signature length and verification time.
Reference: [13] <author> R. Merkle. </author> <title> A Certified Digital Signature. </title> <booktitle> Advances in Cryptology-Crypto'89. LNCS, vol.435, </booktitle> <pages> pp. 218-238, </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: and each piece is preceded by a small signed table of contents. 2 The above solution can be further modified by using an authentication tree: the blocks are placed as the leaves of a binary tree and each internal node takes as a value the hash of its children (see <ref> [13] </ref>.) This way the sender needs to sign and send only the root of this tree.
Reference: [14] <author> R. Merkle. </author> <title> One-way Hash Functions and DES. </title> <booktitle> Advances in Cryptology-Crypto'89. </booktitle> <publisher> LNCS, vol.435, Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: only the stream block but also the 1-time key attached to it. 1.4 Related Work The "chaining" technique of embedding the hash of the following block in the current block can be seen as a variation of the Merkle-Damg-ard meta-method to construct hash functions based on a simpler compression function <ref> [14, 5] </ref>. The novelty here is that we exploit the structure of the construction to allow fast authentication of single blocks in sequential order. It can also be seen as a weak construction of accumulators as introduced in [2].
Reference: [15] <institution> National Institute of Standard and Technology. </institution> <note> Secure Hash Standard. NIST FIPS Pub 180-1, </note> <year> 1995. </year>
Reference-contexts: MD5 [17] and SHA-1 <ref> [15] </ref> are conjectured collision-resistant hash functions. 5 Signature Schemes. A signature scheme is a triplet (G; S; V ) of probabilistic polynomial- time algorithms satisfying the following properties: * G is the key generator algorithm.
Reference: [16] <author> M. Naor, M. Yung. </author> <title> Universal One-Way Hash Functions and their Cryptographic Applications. </title> <booktitle> Proceedings of STOC 1989, </booktitle> <address> pp.33-43. </address>
Reference-contexts: We also use the idea to of using old keys in order to authenticate new keys. This has appeared in several places but always for long-lived keys. Examples include <ref> [1, 16, 19] </ref> where this technique is used to build provably secure signature schemes. We stress that the results in [1, 16, 19] are mostly of theoretical interest and do not yield practical schemes. <p> We also use the idea to of using old keys in order to authenticate new keys. This has appeared in several places but always for long-lived keys. Examples include <ref> [1, 16, 19] </ref> where this technique is used to build provably secure signature schemes. We stress that the results in [1, 16, 19] are mostly of theoretical interest and do not yield practical schemes.
Reference: [17] <author> R. Rivest. </author> <title> The MD5 Message Digest Algorithm. Internet Request for Comments. </title> <month> April </month> <year> 1992. </year>
Reference-contexts: MD5 <ref> [17] </ref> and SHA-1 [15] are conjectured collision-resistant hash functions. 5 Signature Schemes. A signature scheme is a triplet (G; S; V ) of probabilistic polynomial- time algorithms satisfying the following properties: * G is the key generator algorithm.
Reference: [18] <author> R. Rivest, A. Shamir, L. Adleman. </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems. </title> <journal> Comm. of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-126, </pages> <year> 1978. </year>
Reference-contexts: 1 Introduction Digital Signatures (see <ref> [6, 18] </ref>) are the cryptographic answer to the problem of information authenticity.
Reference: [19] <author> J. Rompel. </author> <title> One-Way Functions are Necessary and Sufficient for Secure Signatures. </title> <booktitle> Proceedings of STOC 1990, </booktitle> <address> pp.387-394. </address>
Reference-contexts: We also use the idea to of using old keys in order to authenticate new keys. This has appeared in several places but always for long-lived keys. Examples include <ref> [1, 16, 19] </ref> where this technique is used to build provably secure signature schemes. We stress that the results in [1, 16, 19] are mostly of theoretical interest and do not yield practical schemes. <p> We also use the idea to of using old keys in order to authenticate new keys. This has appeared in several places but always for long-lived keys. Examples include <ref> [1, 16, 19] </ref> where this technique is used to build provably secure signature schemes. We stress that the results in [1, 16, 19] are mostly of theoretical interest and do not yield practical schemes.
Reference: [20] <author> Winternitz. </author> <title> Personal communication to R. </title> <type> Merkle. 20 </type>
Reference-contexts: The scheme is based on a 1-way function F in a domain D. It also uses a collision resistant hash function H . The scheme allows signing of a single m-bit message. It is based on a combinations of ideas from <ref> [11, 20] </ref>. Here are the details of the scheme. Key Generation. Choose m + log m elements in D, let them be a 1 ; : : : ; a m+logm . This is the secret key. <p> Indeed this scheme is used in the on-line case and as such both operations have to be performed on-line and thus efficiently. The improvement in signature generation is much more substantial. Other schemes: The scheme above could be improved in the length of the signature by using Winternitz's idea <ref> [20] </ref>. The public key is composed by m + 1 elements of D, let them be a 0 ; a 1 ; : : : ; a m .
References-found: 20

