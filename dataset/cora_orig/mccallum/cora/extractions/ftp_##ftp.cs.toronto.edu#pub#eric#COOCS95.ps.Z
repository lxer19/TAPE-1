URL: ftp://ftp.cs.toronto.edu/pub/eric/COOCS95.ps.Z
Refering-URL: http://www.cs.toronto.edu/~eric/
Root-URL: 
Email: eric@cs.toronto.edu  
Title: Models for Supporting the Redesign of Organizational Work  
Author: Eric S. K. Yu 
Address: Toronto, Ontario, Canada M5S 1A4  
Affiliation: Milpitas, California, USA.  Department of Computer Science, University of Toronto  
Date: August 13-16, 1995,  
Note: Proceedings, Conf. on Organizational Computing Systems (COOCS'95)  
Abstract: Many types of models have been proposed for supporting organizational work. In this paper, we consider models that are used for supporting the redesign of organizational work. These models are used to help discover opportunities for improvements in organizations, introducing information technologies where appropriate. To support the redesign of organizational work, models are needed for describing work configurations, and for identifying issues, exploring alternatives, and evaluating them. Several approaches are presented and compared. The i* framework consisting of the Strategic Dependency and Strategic Rationale models is discussed in some detail, as it is expressly designed for modelling and redesigning organizational work. We argue that models which view organizational participants as intentional actors with motivations and intents, and abilities and commitments, are needed to provide richer representations of organizational work to support its effective redesign. The redesign of a bank loan operation is used as illustration. 
Abstract-found: 1
Intro-found: 1
Reference: [Briand95] <author> L. Briand, W. L. Melo, C. Seaman, and V. Basili, </author> <title> Characterizing and Assessing a Large-Scale Software Maintenance Organization, </title> <booktitle> Proc. 17th Int. Conf. Software Engineering, </booktitle> <address> April 1995, Seattle, Washington, USA, </address> <pages> pp. 133-143. </pages>
Reference-contexts: Unlike the first two classes of models, models of intentional relationships have yet to be tested in practice on a large scale. Preliminary experiences in using the Strategic Dependency model in practice has been reported in <ref> [Briand95] </ref>. 3.4 Discussion Each of the above three work description models offers different kinds of basic concepts (or ontology), thus focusing attention on different aspects or dimensions of organizational work. In SADT-like models, the focus is on entities and activities and their inter-relationships.
Reference: [Brodie84] <editor> M. L. Brodie, J. Mylopoulos, J. W. Schmidt, eds., </editor> <booktitle> On Conceptual Modelling: Perspectives from Artificial Intelligence, Databases, and Programming Languages, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: The concepts of enforcement, assurance, insurance in analyzing dependency networks have been discussed in [Yu94a]. The SD model makes use of knowledge structuring mechanisms developed in conceptual modelling (e.g., <ref> [Brodie84] </ref>) to organize knowledge. SD models are represented formally using the conceptual modelling language Telos [Mylopoulos90]. Dependums (goals, tasks, etc.), as well as actors, can be organized along the dimensions of classification, generalization, aggregation, and time, thus allowing modelling at various levels of detail.
Reference: [Bubenko93] <author> J. A. Bubenko, </author> <title> Extending the Scope of Information Modeling, </title> <booktitle> Proc. 4th Int. Workshop on the Deductive Approach to Information Systems and Databases, </booktitle> <address> Lloret-Costa Brava, Catalonia, </address> <month> Sept. </month> <pages> 20-22, </pages> <year> 1993, </year> <pages> pp. 73-98. </pages>
Reference-contexts: Understanding how people work in an organization, and redesigning their work configurations to make innovatives uses of information technology to bring about superior performance is becoming an important prerequisite step to technical system development <ref> [Bubenko93] </ref> [Jarke94]. The use of appropriate models can be of considerable value in helping understand and redesign organizational work. First of all, modelling techniques can be used to highlight the salient features of a particular way of accomplishing work, so that it may be compared to alternate work arrangements.
Reference: [Chung93] <author> K. L. Chung, </author> <title> Representing and Using NonFunctional Requirements for Information System Development: A Process-Oriented Approach, </title> <type> Ph.D. Thesis, also Tech. </type> <institution> Rpt. DKBS-TR-93-1, Dept. of Comp. Sci., Univ. of Toronto, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: Also, for designing organizational work, it may be hard to identify the boundaries of a "global system", or their top-level goals. AND/OR trees are also quite limiting in dealing with informal goals. A more general treatment of qualitative goals has been developed for dealing with non-functional requirements <ref> [Chung93] </ref>. 4.3 An Intentional Actor Rationale Approach The Strategic Rationale model is used to model and support the reasoning that organizational actors have about their work relationships. It is represented as a network of nodes and links, as in the preceding two classes of design support frameworks. <p> To assist in the generation of alternatives, and the recognition of correlated issues, the i* framework makes use of generic rules and methods [Yu94b]. These techniques are adapted from a framework for dealing with non-functional requirements in software engineering [Mylopoulos92] <ref> [Chung93] </ref>. Knowledge-based tools can support the construction of and reasoning in the Strategic Rationale model, by drawing on libraries of codified knowledge about information systems and work redesign (e.g., [Turner84]). <p> Generic knowledge can be organized for reuse. For example, methods for achieving lower cost, faster service, higher quality, better security, greater reliability, etc., can be organized into libraries to assist in generating work redesigns [Yu94b] <ref> [Chung93] </ref>. As hinted at in the above presentation of the Strategic Dependency and Strategic Rationales models, the use of formal representation techniques need not imply assumptions of rigid mechanistic agent behaviour. The SD model assumes a high degree of agent autonomy and open-endedness. <p> The SD model assumes a high degree of agent autonomy and open-endedness. The SR model, though conducive to systematic reasoning and decision making, still relies on human designers to make decisions and judgements. The concept of softgoals provides semi-formal mechanisms (based on qualitative reasoning <ref> [Chung93] </ref>) for dealing with many important domain concepts that would otherwise have to be treated informally. 5 Conclusions In this paper, we have argued for the importance of models that support the redesign of organizational work.
Reference: [Chung95] <author> K. L. Chung, B. A. Nixon, E. Yu, </author> <title> Using Non-Functional Requirements to Systematically Support Change, </title> <booktitle> Second IEEE International Symposium on Requirements Engineering, </booktitle> <address> York, England, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Much further work is need to refine and test these models in practice. Tools and usage methodologies also need to be further developed. Work is also needed to show how these models can be used in the overall context of system development [Jarke92] [Yu95], and for supporting change <ref> [Chung95] </ref>. Acknowledgements. The author is grateful to Sylvie Nigot for assistance in working out a related banking example, and to Alessandra Agostini and Prof. Giorgio De Michelis for providing additional information on banking case studies. Prof. J. Mylopoulos provided valuable on-going guidance, support, and encouragement.
Reference: [Conklin88] <author> J. Conklin and M. L. Begeman, gIBIS: </author> <title> A Hypertext Tool for Explanatory Policy Discussions, </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 6(4), </volume> <pages> pp. 303-331, </pages> <year> 1988. </year>
Reference-contexts: For work design models, we compare gIBIS <ref> [Conklin88] </ref> (as an example of argumentation and design rationale models), KAOS [Dardenne92] (as an example of agent-oriented requirements engineering models and frameworks), and the Strategic Rationale model (as an example of the modelling of intentional actors' rationales.) The models of the i* framework (the Strategic Dependency and Strategic Rationale models) are <p> Having a record of this process will also facilitate the revision of designs and their on-going evolution. 4.1 Design Rationale and Argumenta tion Frameworks A number of models or frameworks have been developed to support argumentation, or for representing or supporting design reasoning, e.g., <ref> [Conklin88] </ref> [Potts88] [MacLean91] [Lee92]. This class of models view arguments or design rationales as a network. A number of generic relationships are provided for interrelating them. The contents of the nodes are typically expressed informally in natural language text. In gIBIS [Conklin88] [Conklin91], there are three types of nodes: issues, positions, <p> argumentation, or for representing or supporting design reasoning, e.g., <ref> [Conklin88] </ref> [Potts88] [MacLean91] [Lee92]. This class of models view arguments or design rationales as a network. A number of generic relationships are provided for interrelating them. The contents of the nodes are typically expressed informally in natural language text. In gIBIS [Conklin88] [Conklin91], there are three types of nodes: issues, positions, and arguments. These may be connected by various link types: a position may respond to an issue, an issue may be supported or objected to by an argument, an issue may be suggested by a position, and so forth.
Reference: [Conklin91] <author> E. J. Conklin and K. C. Burgess-Yakemovic, </author> <title> A process-oriented approach to design rationale, Human-Computer Interaction, </title> <type> 6(3-4), </type> <year> 1991. </year>
Reference-contexts: This class of models view arguments or design rationales as a network. A number of generic relationships are provided for interrelating them. The contents of the nodes are typically expressed informally in natural language text. In gIBIS [Conklin88] <ref> [Conklin91] </ref>, there are three types of nodes: issues, positions, and arguments. These may be connected by various link types: a position may respond to an issue, an issue may be supported or objected to by an argument, an issue may be suggested by a position, and so forth.
Reference: [Curtis92] <author> W. Curtis, M. I. Kellner and J. </author> <title> Over, Process Modelling, </title> <journal> Comm. ACM, </journal> <volume> 35 (9), </volume> <year> 1992, </year> <pages> pp. 75-90. </pages>
Reference-contexts: Although a higher level activity may provide some hints as to why its sub-activities are needed, it would not convey what other ways for achieving it might be, and what criteria are used to choose among the alternatives. Another difficulty is the appropriate choice of granularity in modelling <ref> [Curtis92] </ref>. The model may either appear to be too high-level, and therefore vague, or too detailed, and therefore too constraining.
Reference: [Dardenne93] <author> A. Dardenne, A. van Lamsweerde and S. Fickas, </author> <title> Goal-Directed Requirements Acquisition, </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 20, </volume> <pages> pp. 3-50, </pages> <year> 1993. </year>
Reference: [Davenport93] <author> T. H. Davenport, </author> <title> Process Innovation: Reengineering Work Through Information Technology, </title> <publisher> Harvard Business School Press, </publisher> <address> Boston, Mass., </address> <year> 1993. </year>
Reference-contexts: 1 Introduction Today, many organizations are undergoing rapid and fundamental changes. Organizational computing systems are increasingly called upon to play a part in such changes [Keen91] [Tapscott93]. New technical systems are no longer merely used to automate conventional work activities, but are fundamentally changing the way people work <ref> [Davenport93] </ref> [Hammer93] . Understanding how people work in an organization, and redesigning their work configurations to make innovatives uses of information technology to bring about superior performance is becoming an important prerequisite step to technical system development [Bubenko93] [Jarke94].
Reference: [Dubois94] <author> E. Dubois, Ph. Du Bois, F. Dubru, and M. Petit, </author> <title> Agent-Oriented Requirements Engineering </title> - 
Reference-contexts: design configurations would appear as informal text in the various nodes. example 4.2 Agent-Oriented Requirements En gineering Frameworks In the requirements engineering area, frameworks have been developed that view computer-based systems as components in a larger system that includes humans and hardware and software systems called composite systems [Feather87] [Fickas92] <ref> [Dubois94] </ref>. The requirements engineering process starts from global system goals, which are reduced to subgoals in an AND/OR tree. The objective is to reduce goals until they can be assigned as responsibilities to agents- which are the separate components of the global system.
References-found: 11

