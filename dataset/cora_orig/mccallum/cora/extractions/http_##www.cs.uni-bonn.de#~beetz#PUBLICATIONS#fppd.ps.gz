URL: http://www.cs.uni-bonn.de/~beetz/PUBLICATIONS/fppd.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~beetz/publications.html
Root-URL: http://cs.uni-bonn.de
Email: beetz@cs.uni-bonn.de  mcdermott@cs.yale.edu  
Phone: 2  
Title: Fast Probabilistic Plan Debugging  
Author: Michael Beetz and Drew McDermott 
Address: Roemerstr. 164, D-53117 Bonn, Germany,  P.O. Box 208285, Yale Station, New Haven, CT 06520-8285, USA,  
Affiliation: 1 University of Bonn, Dept. of Computer Science III,  Yale University, Dept. of Computer Science,  
Abstract: To improve the perfomance of robot action planners we must equip them with better and more realistic models of the robots' behavior and the physics of the world. These more realistic models together with the robots' lack of, and uncertainty in, information, however, yield so many ways the world might change as plan gets executed that the prediction of the probability of something happening becomes hopelessly infeasible. In this paper, we discuss fppd (Fast Probabilistic Plan Debugging), a plan revision technique that can, with high probability, forestall probable situation-specific execution failures: if the original plan is reliable for standard situations, then fppd can debug the plan's flaws in nonstandard situations based on randomly projecting a small (3-4) number of execution scenarios | even when considering various types of uncertainty and temporally complex behavior. 
Abstract-found: 1
Intro-found: 1
Reference: [AF94] <author> J. Allen and G. Ferguson. </author> <title> Actions and events in interval temporal logic. </title> <type> Technical Report 521, </type> <institution> University of Rochester, Computer Science Department, </institution> <year> 1994. </year>
Reference-contexts: The various types of uncertainty yield a huge number of ways the execution of a plan might go. The rich temporal structure of the behaviors generated by controllers of autonomous robots, increases the number of possible execution scenarios even more (see <ref> [AF94] </ref> for a discussion of important issues in the representation of temporally complex of actions and events). These behaviors cause changes in the world when they start, terminate, and change states while they are active. For example, going to a particular location causes the robot to steadily change its location.
Reference: [Bee96] <author> M. Beetz. </author> <title> Anticipating and Forestalling Execution Failures in Structured Reactive Plans. </title> <type> Technical report, </type> <institution> Yale University, </institution> <year> 1996. </year>
Reference-contexts: To verify that fppd can improve the robot's behavior in the simulated world we perform three kinds of experiments. (For a detailed description see <ref> [Bee96] </ref>.) The first one demonstrates that for problems in which routine plans are adequate, the robot controller described in section 2 performs as well as the routine plan.
Reference: [BF88] <author> J. Breese and M. Fehling. </author> <title> Decision-theoretic control of problem solving: </title> <booktitle> Principles and architecture. In Proceedings of the 1988 Workshop on Uncertainty and Artificial Intelligence, </booktitle> <year> 1988. </year>
Reference: [Bly95] <author> J. Blythe. </author> <title> Ai planning in dynamic, uncertain domains. </title> <booktitle> In AAAI Spring Symposium on Extending Theories of Action, </booktitle> <year> 1995. </year>
Reference-contexts: Several variations of the classical planning problem have been proposed to reason about exogenous events; sensing actions, and uncertain and incomplete information. For example, the problems of generating plans that maximize the probability that a given goal G is true <ref> [KHW95, DHW94, Bly95, Han90a] </ref> or that maximizes the expected utility [HR90, Wel90, WH95]. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [BM94] <author> M. Beetz and D. McDermott. </author> <title> Improving robot plans during their execution. </title> <editor> In Kris Hammond, editor, </editor> <booktitle> AIPS-94, </booktitle> <pages> pages 3-12, </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Other planning systems that make plans more robust during their execution mainly address plan failures caused by nondeterministic outcomes of plan actions [DB90, DKKN93], or they plan for single, highly repetitive tasks [LH92]. fppd, on the other hand, is able to diagnose a larger variety of failures (see <ref> [BM94] </ref>) and non-repetitive tasks. Another body of related work includes systems [Wil88] that revise plans in order to recover from execution failures that have already occurred. Several variations of the classical planning problem have been proposed to reason about exogenous events; sensing actions, and uncertain and incomplete information.
Reference: [BM96] <author> M. Beetz and D. McDermott. </author> <title> Local planning of ongoing behavior. </title> <editor> In Brian Drabble, editor, </editor> <booktitle> AIPS-96, </booktitle> <pages> pages 3-12, </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1996. </year>
Reference-contexts: Often, it is not necessary to revise the current plan and therefore the robot keeps executing its current plan until the planner signals that a revision is necessary. This strategy is visualized in the pseudo code shown below (see <ref> [BM96] </ref> for details on local planning of ongoing problem-solving behavior): DO-CONCURRENTLY 1. monitor the environment for situations in which the assumptions of the current plan do not hold 2.
Reference: [CGHH89] <author> P. Cohen, M. Greenberg, D. Hart, and A. Howe. </author> <title> Trial by fire: Understanding the design requirements for agents in complex environments. </title> <journal> AI Magazine, </journal> <pages> pages 32-48, </pages> <year> 1989. </year>
Reference-contexts: The results can be improved by increasing the number of execution scenarios that are generated and analyzed. 6 Experiments An important metric for evaluating fppd is the amount by which it improves the performance of the agent it controls <ref> [Zil95, CGHH89, PR90] </ref>, which is measured in terms of how well the robot accomplishes its jobs and how long it takes.
Reference: [DB90] <author> M. Drummond and J. Bresina. </author> <title> Anytime synthetic projection: Maximizing the probability of goal satisfaction. </title> <booktitle> In Proc. of AAAI-90, </booktitle> <pages> pages 138-144, </pages> <year> 1990. </year>
Reference-contexts: Other planning systems that make plans more robust during their execution mainly address plan failures caused by nondeterministic outcomes of plan actions <ref> [DB90, DKKN93] </ref>, or they plan for single, highly repetitive tasks [LH92]. fppd, on the other hand, is able to diagnose a larger variety of failures (see [BM94]) and non-repetitive tasks.
Reference: [DHW94] <author> D. Draper, S. Hanks, and D. Weld. </author> <title> Probabilistic planning with information gathering and contingent execution. </title> <editor> In K. Hammond, editor, </editor> <booktitle> Proc. 2nd. Int. Conf. on AI Planning Systems. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Several variations of the classical planning problem have been proposed to reason about exogenous events; sensing actions, and uncertain and incomplete information. For example, the problems of generating plans that maximize the probability that a given goal G is true <ref> [KHW95, DHW94, Bly95, Han90a] </ref> or that maximizes the expected utility [HR90, Wel90, WH95]. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [DKKN93] <author> T. Dean, L. Kaelbling, J. Kirman, and A. Nicholson. </author> <title> Planning with deadlines in stochastic domains. </title> <booktitle> In Proc. of AAAI-93, </booktitle> <pages> pages 574-579, </pages> <year> 1993. </year>
Reference-contexts: Other planning systems that make plans more robust during their execution mainly address plan failures caused by nondeterministic outcomes of plan actions <ref> [DB90, DKKN93] </ref>, or they plan for single, highly repetitive tasks [LH92]. fppd, on the other hand, is able to diagnose a larger variety of failures (see [BM94]) and non-repetitive tasks.
Reference: [DP85] <author> R. Dechter and J. Pearl. </author> <title> Generalized best-first search strategies and the optimality of A*. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 32(3) </volume> <pages> 505-536, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: This typically overestimates the severity because plans resulting from plan revisions are often slower. However, by making behavior flaws look more severe than they are we can make sure that the planner tries to eliminate them <ref> [DP85] </ref>. Estimating the severity of a flaw is further complicated by the fact that the elimination of a behavior flaw might introduce new flaws. Approaches to deal with these complications are described in [Sim88, McD92]. Cost/benefit Computations.
Reference: [DSBL93] <author> M. Drummond, K. Swanson, J. Bresina, and R. Levinson. </author> <title> Reaction-first search. </title> <booktitle> In Proc. of the 13 th IJCAI, </booktitle> <year> 1993. </year>
Reference: [Etz89] <author> O. Etzioni. </author> <title> Tractable decision-analytic control. </title> <editor> In R. J. Brachman, H. J. Levesque, and R. Reiter, editors, </editor> <booktitle> KR'89: Proc. of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 114-125. </pages> <publisher> Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1989. </year>
Reference: [Ham89] <author> K. Hammond. </author> <title> Case-Based Planning. </title> <publisher> Academic Press, Inc., </publisher> <year> 1989. </year>
Reference-contexts: cannot be handled without projection and plan revision. 7 Related Work Plan revision techniques can be classified into ones that reason about the structure of plans and the dependencies between plan steps [Sus90, Kam90, HW92] and others that revise plans based on simulations/projections of plans (Hacker [Sus90], Gordius [Sim92], Chef <ref> [Ham89] </ref>).
Reference: [Han90a] <author> S. Hanks. </author> <title> Practical temporal projection. </title> <booktitle> In Proc. of AAAI-90, </booktitle> <pages> pages 158-163, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: Several variations of the classical planning problem have been proposed to reason about exogenous events; sensing actions, and uncertain and incomplete information. For example, the problems of generating plans that maximize the probability that a given goal G is true <ref> [KHW95, DHW94, Bly95, Han90a] </ref> or that maximizes the expected utility [HR90, Wel90, WH95]. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [Han90b] <author> S. Hanks. </author> <title> Projecting Plans for Uncertain Worlds. </title> <type> Technical report 756, </type> <institution> Yale University, Department of Computer Science, </institution> <year> 1990. </year>
Reference-contexts: Therefore, the planning processes cannot compute bounds for different plan outcomes in reasonable amounts of time <ref> [Han90b, KHW95, Kan92] </ref>. An alternative might seem to enumerate execution scenarios by projecting the most likely outcomes of actions first. But this technique breaks down even in very simple scenarios.
Reference: [HH90] <author> P. Haddawy and S. Hanks. </author> <title> Issues in decision-theoretic planning: Symbolic goals and utilities. </title> <editor> In K. Sycara, editor, </editor> <booktitle> Proceedings of the Workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pages 48-58, </pages> <year> 1990. </year>
Reference: [HR90] <author> P. Haddawy and L. Rendell. </author> <title> Planning and decision theory. </title> <journal> The Knowledge Engineering Review, </journal> <volume> 5 </volume> <pages> 15-33, </pages> <year> 1990. </year>
Reference-contexts: For example, the problems of generating plans that maximize the probability that a given goal G is true [KHW95, DHW94, Bly95, Han90a] or that maximizes the expected utility <ref> [HR90, Wel90, WH95] </ref>. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [HW92] <author> S. Hanks and D. Weld. </author> <title> Systematic adaptation for case-based planning. </title> <editor> In J. Hendler, editor, </editor> <booktitle> AIPS-92, </booktitle> <pages> pages 96-105, </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: shows that fppd made it possible for the agent to act competently in a variety of situations that cannot be handled without projection and plan revision. 7 Related Work Plan revision techniques can be classified into ones that reason about the structure of plans and the dependencies between plan steps <ref> [Sus90, Kam90, HW92] </ref> and others that revise plans based on simulations/projections of plans (Hacker [Sus90], Gordius [Sim92], Chef [Ham89]).
Reference: [Kam90] <author> S. Kambhampati. </author> <title> A theory of plan modification. </title> <booktitle> In Proc. of AAAI-90, </booktitle> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: shows that fppd made it possible for the agent to act competently in a variety of situations that cannot be handled without projection and plan revision. 7 Related Work Plan revision techniques can be classified into ones that reason about the structure of plans and the dependencies between plan steps <ref> [Sus90, Kam90, HW92] </ref> and others that revise plans based on simulations/projections of plans (Hacker [Sus90], Gordius [Sim92], Chef [Ham89]).
Reference: [Kan92] <author> K. </author> <title> Kanazawa. Reasoning about Time and Probability. </title> <type> PhD thesis, </type> <institution> Brown University, </institution> <year> 1992. </year>
Reference-contexts: Therefore, the planning processes cannot compute bounds for different plan outcomes in reasonable amounts of time <ref> [Han90b, KHW95, Kan92] </ref>. An alternative might seem to enumerate execution scenarios by projecting the most likely outcomes of actions first. But this technique breaks down even in very simple scenarios.
Reference: [KHW95] <author> N. Kushmerick, S. Hanks, and D. Weld. </author> <title> An algorithm for probabilistic planning. </title> <journal> Artificial Intelligence, </journal> <volume> 76 </volume> <pages> 239-286, </pages> <year> 1995. </year>
Reference-contexts: Therefore, the planning processes cannot compute bounds for different plan outcomes in reasonable amounts of time <ref> [Han90b, KHW95, Kan92] </ref>. An alternative might seem to enumerate execution scenarios by projecting the most likely outcomes of actions first. But this technique breaks down even in very simple scenarios. <p> Several variations of the classical planning problem have been proposed to reason about exogenous events; sensing actions, and uncertain and incomplete information. For example, the problems of generating plans that maximize the probability that a given goal G is true <ref> [KHW95, DHW94, Bly95, Han90a] </ref> or that maximizes the expected utility [HR90, Wel90, WH95]. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [LFT + 85] <author> C. Langlotz, L. Fagan, S. Tu, J. Williams, and B. Sikic. Onyx: </author> <title> An architecture for planning in uncertain environments. </title> <booktitle> In Proc. of the 9 th IJCAI, </booktitle> <pages> pages 447-449, </pages> <address> Los Angeles, CA, </address> <year> 1985. </year>
Reference: [LH92] <author> D. Lyons and A. Hendriks. </author> <title> A practical approach to integrating reaction and deliberation. </title> <editor> In J. Hendler, editor, </editor> <booktitle> AIPS-92, </booktitle> <pages> pages 153-162, </pages> <year> 1992. </year>
Reference-contexts: Other planning systems that make plans more robust during their execution mainly address plan failures caused by nondeterministic outcomes of plan actions [DB90, DKKN93], or they plan for single, highly repetitive tasks <ref> [LH92] </ref>. fppd, on the other hand, is able to diagnose a larger variety of failures (see [BM94]) and non-repetitive tasks. Another body of related work includes systems [Wil88] that revise plans in order to recover from execution failures that have already occurred.
Reference: [McD92] <author> D. McDermott. </author> <title> Transformational planning of reactive behavior. </title> <institution> Research Report YALEU/DCS/RR-941, Yale University, </institution> <year> 1992. </year>
Reference-contexts: Such events might occur at any time during deliveries and, as a consequence, the object might fall down at many different locations. If, however, the routine plan has a hardwired reaction that 1 xfrm's probabilistic temporal projection algorithm is described in <ref> [McD92, McD94] </ref>. [McD94] gives a formal semantics of the representation language for probabilistic and temporally complex behehavior, shows that a consistent set of causal models has a unique model, and proves the algorithms for projecting execution scenarios to be correct. <p> Estimating the severity of a flaw is further complicated by the fact that the elimination of a behavior flaw might introduce new flaws. Approaches to deal with these complications are described in <ref> [Sim88, McD92] </ref>. Cost/benefit Computations. Agents should often try to accomplish as many of their jobs in as little time as possible. This kind of behavior is achieved by incorporating a utility model into fppd that assigns benefits for accomplishing jobs from which costs for the time spent are subtracted.
Reference: [McD94] <author> D. McDermott. </author> <title> An algorithm for probabilistic, totally-ordered temporal projection. </title> <institution> Research Report YALEU/DCS/RR-1014, Yale University, </institution> <year> 1994. </year>
Reference-contexts: Our experience is that forestalling many typical flaws of robot behavior requires more detailed models of robot behavior. We therefore use the temporal projector of the planning system xfrm <ref> [McD94] </ref> that provides a very expressive language for representing uncertain and temporally complex behavior. <p> If projector is biased to look at the most likely outcomes first, the plan will be predicted never to succeed while in reality the plan will certainly succeed. So far only Monte Carlo projection algorithms project such complex, probabilistic behavior <ref> [McD94, Yam94] </ref>. Before we analyze the impact of planning based on a small number of randomly generated execution scenarios, let us first explain how fppd reasons about projected execution scenarios. <p> Such events might occur at any time during deliveries and, as a consequence, the object might fall down at many different locations. If, however, the routine plan has a hardwired reaction that 1 xfrm's probabilistic temporal projection algorithm is described in <ref> [McD92, McD94] </ref>. [McD94] gives a formal semantics of the representation language for probabilistic and temporally complex behehavior, shows that a consistent set of causal models has a unique model, and proves the algorithms for projecting execution scenarios to be correct. <p> Such events might occur at any time during deliveries and, as a consequence, the object might fall down at many different locations. If, however, the routine plan has a hardwired reaction that 1 xfrm's probabilistic temporal projection algorithm is described in [McD92, McD94]. <ref> [McD94] </ref> gives a formal semantics of the representation language for probabilistic and temporally complex behehavior, shows that a consistent set of causal models has a unique model, and proves the algorithms for projecting execution scenarios to be correct.
Reference: [MR91] <author> D. McAllester and D. Rosenblitt. </author> <title> Systematic nonlinear planning. </title> <booktitle> In Proc. of AAAI-91, </booktitle> <pages> pages 634-639, </pages> <year> 1991. </year>
Reference-contexts: To generate adequate behavior under such circumstances robot action planners must reason through many kinds of uncertainty and predict the effects of temporally complex, possibly interfering activities. Planning algorithms, such as snlp <ref> [MR91] </ref>, have been extended in various ways to handle more expressive ac-tion models and different kinds of uncertainty (about the initial state and the occurrence and outcome of events). Typically, these probabilistic planning systems compute bounds for the likelihood of, or probability distributions on, the states resulting from plan execution.
Reference: [PR90] <author> M. Pollack and M. Ringuette. </author> <title> Introducing the tileworld: Experimentally evaluating agent architectures. </title> <booktitle> In Proc. of AAAI-90, </booktitle> <pages> pages 183-189, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: The results can be improved by increasing the number of execution scenarios that are generated and analyzed. 6 Experiments An important metric for evaluating fppd is the amount by which it improves the performance of the agent it controls <ref> [Zil95, CGHH89, PR90] </ref>, which is measured in terms of how well the robot accomplishes its jobs and how long it takes.
Reference: [Sim88] <author> R. Simmons. </author> <title> Combining Associational and Causal Reasoning to Solve Interpretation and Planning Problems. </title> <type> Technical report 1048, </type> <institution> MIT AI Lab, </institution> <year> 1988. </year>
Reference-contexts: Estimating the severity of a flaw is further complicated by the fact that the elimination of a behavior flaw might introduce new flaws. Approaches to deal with these complications are described in <ref> [Sim88, McD92] </ref>. Cost/benefit Computations. Agents should often try to accomplish as many of their jobs in as little time as possible. This kind of behavior is achieved by incorporating a utility model into fppd that assigns benefits for accomplishing jobs from which costs for the time spent are subtracted.
Reference: [Sim92] <author> R. Simmons. </author> <title> The roles of associational and causal reasoning in problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 53 </volume> <pages> 159-207, </pages> <year> 1992. </year>
Reference-contexts: situations that cannot be handled without projection and plan revision. 7 Related Work Plan revision techniques can be classified into ones that reason about the structure of plans and the dependencies between plan steps [Sus90, Kam90, HW92] and others that revise plans based on simulations/projections of plans (Hacker [Sus90], Gordius <ref> [Sim92] </ref>, Chef [Ham89]).
Reference: [Sus90] <author> G. Sussman. </author> <title> The virtuous nature of bugs. </title> <editor> In J. Allen, J. Hendler, and A. Tate, editors, </editor> <booktitle> Readings in Planning, </booktitle> <pages> pages 111-117. </pages> <publisher> Kaufmann, </publisher> <address> San Ma-teo, CA, </address> <year> 1990. </year>
Reference-contexts: shows that fppd made it possible for the agent to act competently in a variety of situations that cannot be handled without projection and plan revision. 7 Related Work Plan revision techniques can be classified into ones that reason about the structure of plans and the dependencies between plan steps <ref> [Sus90, Kam90, HW92] </ref> and others that revise plans based on simulations/projections of plans (Hacker [Sus90], Gordius [Sim92], Chef [Ham89]). <p> variety of situations that cannot be handled without projection and plan revision. 7 Related Work Plan revision techniques can be classified into ones that reason about the structure of plans and the dependencies between plan steps [Sus90, Kam90, HW92] and others that revise plans based on simulations/projections of plans (Hacker <ref> [Sus90] </ref>, Gordius [Sim92], Chef [Ham89]).
Reference: [Wel90] <author> M. Wellmann. </author> <title> Formulation of Tradeoffs in Planning under Uncertainty. </title> <publisher> Pitman and Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: For example, the problems of generating plans that maximize the probability that a given goal G is true [KHW95, DHW94, Bly95, Han90a] or that maximizes the expected utility <ref> [HR90, Wel90, WH95] </ref>. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [WH95] <author> M. Williamson and S. Hanks. </author> <note> Utility-directed planning. page 1498, </note> <year> 1995. </year>
Reference-contexts: For example, the problems of generating plans that maximize the probability that a given goal G is true [KHW95, DHW94, Bly95, Han90a] or that maximizes the expected utility <ref> [HR90, Wel90, WH95] </ref>. fppd, on the other hand, does not reason about the exact probabilities of outcomes of plan execution. Probability is handled implicitly by the projector that generates random execution scenarios based on the given probability distributions.
Reference: [Wil88] <author> D. Wilkins. </author> <title> Practical Planning: Extending the AI Planning Paradigm. </title> <publisher> Mor-gan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: Another body of related work includes systems <ref> [Wil88] </ref> that revise plans in order to recover from execution failures that have already occurred. Several variations of the classical planning problem have been proposed to reason about exogenous events; sensing actions, and uncertain and incomplete information.
Reference: [Yam94] <author> E. Yampratoom. </author> <title> Using simulation-based projection to plan in an uncertain and temporally complex world. </title> <type> Technical Report 531, </type> <institution> University of Rochester, CS Deptartment, </institution> <year> 1994. </year>
Reference-contexts: Planning algorithms that guarantee bounds for the probabilities of plan outcomes become prohibitively expensive even when abstracting away from important aspects of behavior such as reactions and interfering continuous events <ref> [Yam94] </ref>. Therefore, we research planning problems that do not require the computation of plans with guaranteed properties such as optimality or bounds on the probabilities of plan outcomes but still enable the robots to perform their jobs (on average) better than they possibly could without planning. <p> If projector is biased to look at the most likely outcomes first, the plan will be predicted never to succeed while in reality the plan will certainly succeed. So far only Monte Carlo projection algorithms project such complex, probabilistic behavior <ref> [McD94, Yam94] </ref>. Before we analyze the impact of planning based on a small number of randomly generated execution scenarios, let us first explain how fppd reasons about projected execution scenarios. <p> Also, Monte Carlo projection methods often converge faster to the exact probability than other methods for probabilistic temporal projection (see <ref> [Yam94] </ref> for experiments and a detailed discussion). 8 Conclusions This paper has described and discussed fppd, a plan revision technique that enables agents acting in complex and partly unknown environments to achieve probably approximately competent behavior in contingent situations.
Reference: [Zil95] <author> S. Zilberstein. </author> <title> On the utility of planning. </title> <editor> In M. Pollack, </editor> <title> editor, </title> <journal> SIGART Bulletin Special Issue on Evaluating Plans, Planners, and Planning Systems, </journal> <volume> volume 6. </volume> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: The results can be improved by increasing the number of execution scenarios that are generated and analyzed. 6 Experiments An important metric for evaluating fppd is the amount by which it improves the performance of the agent it controls <ref> [Zil95, CGHH89, PR90] </ref>, which is measured in terms of how well the robot accomplishes its jobs and how long it takes.
References-found: 36

