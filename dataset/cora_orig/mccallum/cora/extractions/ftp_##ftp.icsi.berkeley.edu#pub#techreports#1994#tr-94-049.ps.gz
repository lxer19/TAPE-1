URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1994/tr-94-049.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1994.html
Root-URL: http://www.icsi.berkeley.edu
Title: Lower Space Bounds for Randomized Computation  
Author: Rusi~ns Freivalds Marek Karpinski 
Date: September, 1994  
Pubnum: TR-94-049  
Abstract: It is a fundamental open problem in the randomized computation how to separate different randomized time or randomized small space classes (cf., e.g., [KV 87], [KV 88]). In this paper we study lower space bounds for randomized computation, and prove lower space bounds up to log n for the specific sets computed by the Monte Carlo Turing machines. This enables us for the first time, to separate randomized space classes below log n (cf. [KV 87], [KV 88]), allowing us to separate, say, the randomized space O (1) from the randomized space O (log fl n). We prove also lower space bounds up to log log n and log n, respectively, for specific sets computed by probabilistic Turing machines, and one-way probabilistic Turing machines. 
Abstract-found: 1
Intro-found: 1
Reference: [ABHH 92] <author> Allender, E., Beigel, R., Hertrampf, U., and Homer, S., </author> <title> Almost-Everywhere Complexity Hierarchies for Nondeterministic Time, </title> <booktitle> in Lecture Notes in Computer Science 415 (1990), </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 1-11, </pages> <note> also Manuscript, 1992, A preliminary version has appeared in Proc. STACS'90, </note>
Reference: [BCP 83] <author> Borodin, A., Cook, S., and Pippenger, N., </author> <title> Parallel computation for wellendowed rings and space-bounded probabilistic machines, </title> <booktitle> in Information and Control 58, </booktitle> <pages> pp. 113-136. </pages>
Reference: [Bu 77] <author> Bukharaev, R. E., </author> <title> Probabilistic Automata, (Russian), </title> <publisher> Kazan University Press, </publisher> <year> 1977. </year>
Reference-contexts: The only exception is rather many proofs of languages being nonstochastic, i. e. for rather many languages L it is proved that arbitrary 1-way probabilistic Turing machine recognizing L cannot use constant space only (see monographs <ref> [Pa 71, Bu 77] </ref>).
Reference: [DS 88] <author> Dwork, C., Stockmeyer, L., </author> <title> Interactive proof systems with finite state verifiers, Res. </title> <type> Rep. </type> <institution> RJ6262. IBM Research Division, </institution> <address> San Jose, Calif., </address> <month> May </month> <year> 1988. </year>
Reference-contexts: Rabin [Ra 63], and then adapted in different contexts by A. Greenberg and A. Weiss [GW 86], R. Freivalds [Fr 79], C. Dwork and L. Stockmeyer <ref> [DS 88, DS 92] </ref>. Let M be a randomized Turing machine.
Reference: [DS 92] <author> Dwork, C., and Stockmeyer, L., </author> <title> Finite state verifiers I: The power of interaction, </title> <booktitle> in Journal of ACM 39 (4), </booktitle> <pages> pp. 800-828, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Rabin [Ra 63], and then adapted in different contexts by A. Greenberg and A. Weiss [GW 86], R. Freivalds [Fr 79], C. Dwork and L. Stockmeyer <ref> [DS 88, DS 92] </ref>. Let M be a randomized Turing machine. <p> We start with a lemma which bounds the effect of small changes in the transition probabilities of a Markov chain. This lemma has been taken from <ref> [DS 92] </ref> with a reference to Lemma 1 from [GW 86] which was however slightly different. Let fi 1.
Reference: [Fr 75] <author> Freivalds, R., </author> <title> Fast computation by probabilistic Turing machines, (Russian), </title> <booktitle> in Proceedings of Latvian State University 233 (1975), </booktitle> <pages> pp. 201-205. </pages>
Reference-contexts: It appears now that these algorithms are more efficient than the purely deterministic ones in terms of running time, hardware size, circuits depth, etc. The advantages of randomized Turing machines over deterministic machines have been studied early starting with <ref> [Fr 75] </ref> where the sets of palindromes were proved to be computed by Monte Carlo off-line Turing machines much faster than by the deterministic machines of the same type. Later similar results were obtained for space and reversal complexity for various types of machines [Fr 83, Fr 85, KF 90]. <p> It deserves to be mentioned that there have already been lower time bounds (const n 2 for Monte Carlo off-line Turing machines to recognize palindromes <ref> [Fr 75, Fr 77] </ref>). The essential ideas for lower space bounds for 1-way Monte Carlo Turing machines have been published in [Fr 83, Fr 85] but they have not materialized in any completed lower space bound for specific languages.
Reference: [Fr 77] <author> Freivalds, R., </author> <title> Probabilistic machines can use less running time, </title> <booktitle> in Information Processing '77 (Proc. IFIP Congress'77) (1977), </booktitle> <publisher> North Holland, </publisher> <pages> pp. 839-842, </pages>
Reference-contexts: It deserves to be mentioned that there have already been lower time bounds (const n 2 for Monte Carlo off-line Turing machines to recognize palindromes <ref> [Fr 75, Fr 77] </ref>). The essential ideas for lower space bounds for 1-way Monte Carlo Turing machines have been published in [Fr 83, Fr 85] but they have not materialized in any completed lower space bound for specific languages.
Reference: [Fr 79] <author> Freivalds, R., </author> <title> Speeding up recognition of some sets by usage of random number generators, (Russian), </title> <booktitle> in Problemi kibernetiki 36 (1979), </booktitle> <pages> pp. 209-224. </pages>
Reference-contexts: Rabin [Ra 63], and then adapted in different contexts by A. Greenberg and A. Weiss [GW 86], R. Freivalds <ref> [Fr 79] </ref>, C. Dwork and L. Stockmeyer [DS 88, DS 92]. Let M be a randomized Turing machine.
Reference: [Fr 83] <author> Freivalds, R., </author> <title> Space and reversal complexity of probabilistic one-way Turing machines, </title> <booktitle> in Lecture Notes in Computer Science 158 (1983), </booktitle> <pages> pp. 159-170. </pages>
Reference-contexts: Later similar results were obtained for space and reversal complexity for various types of machines <ref> [Fr 83, Fr 85, KF 90] </ref>. On the other hand, it is universally conjectured that randomness do not always help. <p> It deserves to be mentioned that there have already been lower time bounds (const n 2 for Monte Carlo off-line Turing machines to recognize palindromes [Fr 75, Fr 77]). The essential ideas for lower space bounds for 1-way Monte Carlo Turing machines have been published in <ref> [Fr 83, Fr 85] </ref> but they have not materialized in any completed lower space bound for specific languages. The surprising power of the coin tosses in the self-constructibility of very small space functions was proven in [KV 87].
Reference: [Fr 85] <author> Freivalds, R., </author> <booktitle> Space and reversal complexity of probabilistic one-way Turing machines , in Annals of Discrete Mathematics 24 (1985), </booktitle> <pages> pp. 39-50. </pages>
Reference-contexts: Later similar results were obtained for space and reversal complexity for various types of machines <ref> [Fr 83, Fr 85, KF 90] </ref>. On the other hand, it is universally conjectured that randomness do not always help. <p> It deserves to be mentioned that there have already been lower time bounds (const n 2 for Monte Carlo off-line Turing machines to recognize palindromes [Fr 75, Fr 77]). The essential ideas for lower space bounds for 1-way Monte Carlo Turing machines have been published in <ref> [Fr 83, Fr 85] </ref> but they have not materialized in any completed lower space bound for specific languages. The surprising power of the coin tosses in the self-constructibility of very small space functions was proven in [KV 87]. <p> We introduce metrics (p x ; p y ) = jp x (conf 1 ) p y (conf 1 )j + + jp x (conf V ol (n) ) p y (conf V ol (n) )j: Lemma 2. 3 in <ref> [Fr 85] </ref> asserts that there is a positive constant c such that if x and y are not Myhill-Nerode equivalent with respect to L, then (p x ; p y ) c.
Reference: [Gi 74] <author> Gill, J. T., </author> <title> Computational complexity of probabilistic Turing machines, </title> <journal> in SIAM J. Comput. </journal> <volume> 6 (1977), </volume> <pages> pp. 675-694. </pages>
Reference-contexts: Hence much more effort has been spent to construct efficient Monte Carlo algorithms. On the other hand, nondeterministic Turing machines with space bound S (n) log n can be simulated by probabilistic Turing machines in space const S (n) <ref> [Gi 74, Tr 74] </ref> but it is conjectured that this may be not true for Monte Carlo Turing machines. Thus no wonder that it had been difficult to prove nontrivial lower space bounds for specific non-diagonal languages recognized by Monte Carlo Turing machines.
Reference: [GW 86] <author> Greenberg, A. G., Weiss A., </author> <title> A lower bound for probabilistic algorithms for finite state machines, </title> <booktitle> in Journal of Computer and System Science 33 (1986), </booktitle> <pages> pp. 88-105. </pages>
Reference-contexts: Rabin [Ra 63], and then adapted in different contexts by A. Greenberg and A. Weiss <ref> [GW 86] </ref>, R. Freivalds [Fr 79], C. Dwork and L. Stockmeyer [DS 88, DS 92]. Let M be a randomized Turing machine. <p> We start with a lemma which bounds the effect of small changes in the transition probabilities of a Markov chain. This lemma has been taken from [DS 92] with a reference to Lemma 1 from <ref> [GW 86] </ref> which was however slightly different. Let fi 1. Say that two numbers r and r 0 are fi-close if either (i) r = r 0 = 0 or (ii) r &gt; 0, r 0 &gt; 0, and fi 1 r=r 0 fi.
Reference: [Ka 89] <author> Kaneps, J., </author> <title> Stochasticity of languages recognized by two-way finite probabilistic automata, (Russian), </title> <booktitle> in Diskretnaya matematika 1 (1989), </booktitle> <pages> pp. 63-77. </pages>
Reference-contexts: Proof. It follows from Theorem 5.1 that arbitrary 1-way probabilistic Turing machine separating A from B cannot have space bound o (log m). J. Kaneps <ref> [Ka 89] </ref> proved that every language recognizable by a 2-way probabilistic finite automaton with k states can be recognized by a 1-way probabilistic finite automaton with 2 O (k 2 ) states as well.
Reference: [KF 90] <author> Kaneps, J., Freivalds, R., </author> <title> Minimal nontrivial space complexity of probabilistic one-way Turing machines, </title> <booktitle> in Lecture Notes in Computer Science 452 (1990), </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 355-361. </pages>
Reference-contexts: Later similar results were obtained for space and reversal complexity for various types of machines <ref> [Fr 83, Fr 85, KF 90] </ref>. On the other hand, it is universally conjectured that randomness do not always help.
Reference: [Kr 90] <author> Karp, R. M., </author> <title> An Introduction to Randomized Algorithms, </title> <type> Technical Report TR-90-029, </type> <institution> International Computer Science Institute, Berke-ley, </institution> <year> 1990. </year>
Reference: [KV 87] <author> Karpinski, M., Verbeek, R., </author> <title> On the Monte Carlo space constructible functions and separation results for probabilistic complexity classes, </title> <booktitle> in Information and Computation 75 (1987), </booktitle> <pages> pp. 178-189. </pages>
Reference-contexts: We call a function f: N ! N Monte Carlo space self-constructible (cf. <ref> [KV 87] </ref>) if there is a Monte Carlo machine M computing the function M with the space bound f (n) for which for all n there is some input x, jxj = n, such that M (x) = f (n). <p> The surprising power of the coin tosses in the self-constructibility of very small space functions was proven in <ref> [KV 87] </ref>. This has also raised a fundamental open question how to separate different small randomized space classes (the standard deterministic or nondeterministic separation methods do not work for the fundamental reasons). 2 Randomized Turing Machines The results in this section are based on an idea firstly used by M. <p> This can be done in space k. Finally, the machine deterministically recognizes whether the assertions (i)-(ii) hold. No more than logarithmic (in jvj) space is needed for this. The Assertion 2) is a corollary from Theorem 2.2. fl M. Karpinski and R. Verbeek <ref> [KV 87] </ref> have shown that there are many small functions which are Monte Carlo space self-constructible. Among these functions one should mention log log : : : log n (repeated arbitrarily many times), log fl n, the inverse Ackermann function.
Reference: [KV 88] <author> Karpinski, M., Verbeek, R., </author> <title> Randomness, Probability, and the Sepa-rartion of Monte Carlo Time and Space, </title> <booktitle> in Lecture Notes in Computer Science 270 (1988), </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 189-207. </pages>
Reference: [KV 93] <author> Karpinski, M. , Verbeek, R., </author> <title> On Randomized versus Deterministic Computation, </title> <booktitle> in Proc. ICALP '93, appeared in Lecture Notes in Computer Science 700 (1993), </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 227-240. </pages>
Reference-contexts: For instance, there is a language recognizable by 2-way Monte Carlo Turing machines in space log fl n but not in space equal to the inverse Ackerman function (For the related problems of randomized time bounded computation cf. <ref> [KV 93] </ref>). 4 1-way Monte Carlo Machines Consider a language L fl . We say that the words u and v are equivalent with respect to L if and only if (8w)(uw 2 L , vw 2 L).
Reference: [KS 60] <author> Kemeny, J. G., Snell, J. L., </author> <title> Finite Markov Chains, </title> <publisher> Van Nostrand, </publisher> <year> 1960. </year>
Reference-contexts: Since we model computations of Turing machines by Markov chains, we first give some definitions and results about Markov chains. Basic facts about Markov chains with finite state space can be found, for example, in <ref> [KS 60] </ref>. We consider Markov chains with finite state space, say 1; 2; : : : ; s for same s. A particular Markov chain is completely specified by its matrix R = fr ij g s i;j=1 of transition probabilities.
Reference: [LR 83] <author> Leighton, F. T., and Rivest, R. L., </author> <title> The Markov Chain Tree Theo--rem, </title> <type> Rep. </type> <institution> MIT/LCS, TM-249, Laboratory of Computer Science, MIT, </institution> <address> Cambridge, Mass., </address> <year> 1983. </year>
Reference: [LR 86] <author> Leighton, F. T., and Rivest, R. L., </author> <title> Estimating a Probability Using Finite Memory, </title> <journal> in IEEE Trans. Inf. Theory IT-32 (1986), </journal> <pages> pp. 733-742. </pages>
Reference: [NH 71] <author> Nasu, M. and Honda, N., </author> <title> A context-free language which is not acceptable by a probabilistic automaton, </title> <booktitle> in Information and Control 18 (1971), </booktitle> <pages> pp. 233-236. </pages>
Reference-contexts: Hence the space used by M on these words does not exceed S (H (Y 2 + 1)) y (because, by the contrary, S (H (m)) = o (log m)). Contradiction between (5) and (3). fl Consider the language NH defined by M. Nasu and N.Honda <ref> [NH 71] </ref>.
Reference: [Pa 71] <author> Paz, A., </author> <title> Introduction to Probabilistic Automata, </title> <publisher> Academic Press, </publisher> <year> 1971. </year>
Reference-contexts: The only exception is rather many proofs of languages being nonstochastic, i. e. for rather many languages L it is proved that arbitrary 1-way probabilistic Turing machine recognizing L cannot use constant space only (see monographs <ref> [Pa 71, Bu 77] </ref>).
Reference: [Ra 63] <author> Rabin, M. O., </author> <title> Probabilistic automata, </title> <booktitle> in Information and Control 6 (1963), </booktitle> <pages> pp. 230-245. </pages>
Reference-contexts: This has also raised a fundamental open question how to separate different small randomized space classes (the standard deterministic or nondeterministic separation methods do not work for the fundamental reasons). 2 Randomized Turing Machines The results in this section are based on an idea firstly used by M. Rabin <ref> [Ra 63] </ref>, and then adapted in different contexts by A. Greenberg and A. Weiss [GW 86], R. Freivalds [Fr 79], C. Dwork and L. Stockmeyer [DS 88, DS 92]. Let M be a randomized Turing machine.
Reference: [Se 81] <author> Seneta, E., </author> <title> Non-Negative Matrices and Markov Chains, 2nd Edition, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1981. </year>
Reference: [Tr 74] <author> Trakhtenbrot, B. A., </author> <title> Notes on the complexity of computation by probabilistic machines, (Russian), </title> <booktitle> in Theory of Algorithms and Mathematical Logics, VC AN SSSR (1974), </booktitle> <pages> pp. 159-176 17 </pages>
Reference-contexts: Hence much more effort has been spent to construct efficient Monte Carlo algorithms. On the other hand, nondeterministic Turing machines with space bound S (n) log n can be simulated by probabilistic Turing machines in space const S (n) <ref> [Gi 74, Tr 74] </ref> but it is conjectured that this may be not true for Monte Carlo Turing machines. Thus no wonder that it had been difficult to prove nontrivial lower space bounds for specific non-diagonal languages recognized by Monte Carlo Turing machines.
References-found: 26

