URL: http://www.idt.unit.no/~epos/Papers/OOPSLA-93-OORAM.ps
Refering-URL: http://www.idt.unit.no/~epos/bibliografia.html
Root-URL: 
Email: geirmag@idt.unit.no  
Title: Dynamic Modeling in OOram  
Author: Geir Magne Htydalsvik and Jon Harald Holm 
Address: UNIT-NTH/IDT, N-7034 Trondheim, NORWAY.  
Affiliation: University of Trondheim Norwegian Institute of Technology Department of Computer Systems and Telematics  
Abstract: This position paper outlines the research effort regarding dynamic modeling capabilities in OOram (Object-Oriented role modeling and analysis). This research has focused on partial descriptions of objects, using the role abstraction. The behavior of each role has been described by stat-echarts which are synthesized to create a wide range of object specifications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Grady Booch. </author> <title> Object Oriented Design with Ap plications. </title> <address> Benjamin/Cummings, </address> <year> 1991. </year>
Reference-contexts: At the University of Trondheim we have been involved in extending OOram with dynamic modeling capabilities [6]. Based on some compatibility requirements given by TASKON, we considered some dynamic modeling languages used in object-oriented design methods (i.e. OMT [8], Booch <ref> [1] </ref>, SDL-92 [2], and Contracts [5]). We decided to use Harel statecharts [4] (used in OMT) for role specifications and SDL-92 Process Description Language 1 TASKON AS, Gaustadalleen 21, N-0371 OSLO 3, NORWAY. for type specifications.
Reference: [2] <author> Rolv Brk and ystein Haugen. </author> <title> Engineer ing Real Time Systems. Number ISBN 0-13-034448-6. </title> <publisher> Prentice Hall International (UK) Ltd., </publisher> <address> Hemel Hempstead, </address> <year> 1993. </year>
Reference-contexts: At the University of Trondheim we have been involved in extending OOram with dynamic modeling capabilities [6]. Based on some compatibility requirements given by TASKON, we considered some dynamic modeling languages used in object-oriented design methods (i.e. OMT [8], Booch [1], SDL-92 <ref> [2] </ref>, and Contracts [5]). We decided to use Harel statecharts [4] (used in OMT) for role specifications and SDL-92 Process Description Language 1 TASKON AS, Gaustadalleen 21, N-0371 OSLO 3, NORWAY. for type specifications.
Reference: [3] <author> Derek Coleman, Fiona Hayes, and Stephen Bear. </author> <title> Introducing Objectcharts or How to Use Statecharts in Object-Oriented Design. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 18(1) </volume> <pages> 9-18, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: We thus adopted the SDL-92 PDL as an abstract specification of methods (i.e. state transitions). The choice of SDL-92 2 SDL-92 Functional Specification and Description Language, CCITT standard, the language include object-oriented features. was pragmatic an alternative, more declarative solution is to use Objectcharts <ref> [3] </ref>. However, we find that some more experiences with the existing solution must be achieved before changing the approach.
Reference: [4] <author> D.Harel. Statecharts: </author> <title> A Visual Formalism for Complex Systems. </title> <journal> Sience of Computer Programming, </journal> <volume> 8 </volume> <pages> 231-274, </pages> <year> 1987. </year>
Reference-contexts: Based on some compatibility requirements given by TASKON, we considered some dynamic modeling languages used in object-oriented design methods (i.e. OMT [8], Booch [1], SDL-92 [2], and Contracts [5]). We decided to use Harel statecharts <ref> [4] </ref> (used in OMT) for role specifications and SDL-92 Process Description Language 1 TASKON AS, Gaustadalleen 21, N-0371 OSLO 3, NORWAY. for type specifications. The rest of this paper is organized as follows: Section 2 explain role models as an objects abstraction technique.
Reference: [5] <author> Richard Helm, Ian M. Holland, and Dipayan Gangopadhyay. </author> <title> Contracts: Specifying Behavioral Compositions in Object-Oriented Systems. </title> <booktitle> OOPSLA'90 Proceedings, </booktitle> <year> 1990. </year>
Reference-contexts: At the University of Trondheim we have been involved in extending OOram with dynamic modeling capabilities [6]. Based on some compatibility requirements given by TASKON, we considered some dynamic modeling languages used in object-oriented design methods (i.e. OMT [8], Booch [1], SDL-92 [2], and Contracts <ref> [5] </ref>). We decided to use Harel statecharts [4] (used in OMT) for role specifications and SDL-92 Process Description Language 1 TASKON AS, Gaustadalleen 21, N-0371 OSLO 3, NORWAY. for type specifications. The rest of this paper is organized as follows: Section 2 explain role models as an objects abstraction technique. <p> Roles are organized into role models. Role models can be included in other role models by a set of synthesis operations (similar to the inclusion and refinement operations found in <ref> [5] </ref>). The relationship between roles and types is as follows: A type may play different roles in different role models, and a role may be played by many different types of objects.
Reference: [6] <author> Jon Harald Holm. </author> <title> Dynamic Modeling in OORAM. </title> <type> Technical report, </type> <institution> Norwegian Institute of Technology, </institution> <month> December </month> <year> 1992. </year> <note> MSc thesis, REBOOT-STP TR 94. </note>
Reference-contexts: OOram has evolved into a commercial product, with method and tools marketed by TASKON AS 1 . OOram is different from other object-oriented methods in its focus on roles rather than on objects. At the University of Trondheim we have been involved in extending OOram with dynamic modeling capabilities <ref> [6] </ref>. Based on some compatibility requirements given by TASKON, we considered some dynamic modeling languages used in object-oriented design methods (i.e. OMT [8], Booch [1], SDL-92 [2], and Contracts [5]).
Reference: [7] <author> Trygve Reenskaug et al. OORASS: </author> <title> seamless support for the creation and maintenance of object oriented systems. </title> <journal> Journal of Object-Oriented Programming, </journal> <volume> 5(6) </volume> <pages> 27-41, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: 1 Introduction OOram is an object-oriented system development methodology, originating from Center for Industrial Research (SI) in Norway <ref> [7] </ref>. OOram has evolved into a commercial product, with method and tools marketed by TASKON AS 1 . OOram is different from other object-oriented methods in its focus on roles rather than on objects.
Reference: [8] <author> James Rumbaugh, et al. </author> <title> Object-Oriented Mod eling and Design. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: At the University of Trondheim we have been involved in extending OOram with dynamic modeling capabilities [6]. Based on some compatibility requirements given by TASKON, we considered some dynamic modeling languages used in object-oriented design methods (i.e. OMT <ref> [8] </ref>, Booch [1], SDL-92 [2], and Contracts [5]). We decided to use Harel statecharts [4] (used in OMT) for role specifications and SDL-92 Process Description Language 1 TASKON AS, Gaustadalleen 21, N-0371 OSLO 3, NORWAY. for type specifications.
References-found: 8

