URL: http://www.icsi.berkeley.edu/~yairb/pubs/BKR-scheduling-lower.ps
Refering-URL: http://www.icsi.berkeley.edu/~yairb/
Root-URL: http://www.icsi.berkeley.edu
Title: A Better Lower Bound for On-Line Scheduling  
Author: Yair Bartal Howard Karloff Yuval Rabani 
Note: algorithm exceeds 1:837. The best upper bound on the competitive ratio is now 1:945.  
Abstract: We consider the on-line version of the original m-machine scheduling problem: given m machines and n positive real jobs, schedule the n jobs on the m machines so as to minimize the makespan, the completion time of the last job. In the on-line version, as soon as a job arrives, it must be assigned immediately to one of the m machines. We study the competitive ratio of the best algorithm for m-machine scheduling. The largest prior lower bound was that if m 4, then every algorithm has a competitive ratio at least 1+1= 2 1:707. We show that if m is large enough, the competitive ratio of every p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Bartal, A. Fiat, H. Karloff and R. Vohra, </author> <title> "New Algorithms for an Ancient Scheduling Problem," </title> <booktitle> Proc. 24th ACM Symposium on the Theory of Computing, </booktitle> <address> Victoria, Canada, </address> <year> 1992, </year> <pages> 51-58. </pages>
Reference-contexts: Until recently, no algorithm was known whose performance ratio, as a function of m, was bounded above by 2 * for all m (for a fixed positive *). Bartal, Fiat, Karloff and Vohra recently exhibited an on-line algorithm with competitive ratio at most 2 1=70 for all m <ref> [1] </ref>. Currently the best algorithm for large m is due to Karger, Phillips and Torng [5], and has competitive ratio bounded by 1:945.
Reference: [2] <author> U. Faigle, W. Kern and Gyorgy Turan, </author> <title> "On the Performance of On-Line Algorithms for Partition Problems," </title> <note> Acta Cybernetica 9 (1989), 107-119. </note>
Reference-contexts: Currently the best algorithm for large m is due to Karger, Phillips and Torng [5], and has competitive ratio bounded by 1:945. But how small can c A be? Prior to this note, the best known lower bounds were due to Faigle, Kern and Turan <ref> [2] </ref>, who proved in 1989 that no on-line algorithm could have a competitive ratio that is smaller than 3=2 if m = 2 or smaller than 5=3 if m = 3, and that for no m 4 could the competitive ratio be less than 1 + 1 p 2 = 1:707
Reference: [3] <author> R. L. Graham, </author> <title> "Bounds for Certain Multiprocessing Anomalies," </title> <journal> Bell System Technical Journal 45 (1966), </journal> <pages> 1563-1581. </pages>
Reference-contexts: In this note, we study one of the simplest and earliest m-machine scheduling problems ever studied, the scheduling problem of Graham, introduced in 1966 <ref> [3] </ref>. This is the variant in which each job consists of exactly one task, which requires the same execution time on each of the m machines. Jobs cannot be preempted and are independent of each other. The goal is to minimize the makespan, the completion time of the last job. <p> A's competitive ratio is then c A := sup E [A ()] ; where the supremum is over all nonempty sequences of jobs. Graham showed in <ref> [3] </ref> that the naive List algorithm|always place the next job on the most lightly loaded machine|has competitive ratio 2 1=m for each m.
Reference: [4] <author> R. L. Graham, E. L. Lawler, J. K. Lenstra, and A. H. G. Rinnooy Kan, </author> <title> "Optimization and Approximation in Deterministic Sequencing and Scheduling: a Survey," </title> <booktitle> Annals of Discrete Mathematics 5 (1979), </booktitle> <pages> 287-326. </pages>
Reference: [5] <author> D. Karger, S. Phillips, and E. Torng, </author> <title> "A Better Algorithm for an Ancient Scheduling Problem," </title> <type> manuscript, </type> <institution> Stanford University. </institution>
Reference-contexts: Bartal, Fiat, Karloff and Vohra recently exhibited an on-line algorithm with competitive ratio at most 2 1=70 for all m [1]. Currently the best algorithm for large m is due to Karger, Phillips and Torng <ref> [5] </ref>, and has competitive ratio bounded by 1:945.
Reference: [6] <author> E. L. Lawler, </author> <title> "Recent Results in the Theory of Machine Scheduling," </title> <editor> in A. Bachem, M. Grotschel, and B. Korte (eds.), </editor> <booktitle> Math Programming: The State of the Art (Bonn 1982), </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1983, </year> <pages> 202-234. </pages>
Reference: [7] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys, </author> <title> "Sequencing and Scheduling: Algorithms and Complexity," to appear in Handbook of Operations Research and Management Science, Volume IV: Production Planning and Inventory, </title> <editor> S. C. Graves, A. H. G. Rinnooy Kan, and P. Zipkin (eds.), </editor> <publisher> North-Holland. </publisher>
Reference: [8] <author> J. K. Lenstra and A. H. G. Rinnooy Kan, </author> <title> "An Introduction to Multiprocessor Scheduling," </title> <type> Technical Report, </type> <institution> CWI, </institution> <address> Amsterdam, </address> <year> 1988. </year> <month> 6 </month>
References-found: 8

