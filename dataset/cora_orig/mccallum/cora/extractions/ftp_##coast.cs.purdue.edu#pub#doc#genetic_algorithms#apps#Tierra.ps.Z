URL: ftp://coast.cs.purdue.edu/pub/doc/genetic_algorithms/apps/Tierra.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ20.html
Root-URL: http://www.cs.purdue.edu
Email: ray@udel.edu, ray@santafe.edu  
Author: Thomas S. Ray 
Keyword: Evolution, Ecology and Optimization of Digital Organisms evolution, ecology, artificial life, synthetic life, emergence, self-replication, diversity, adaptation, coevolution, optimization  
Address: 19716,  
Affiliation: School of Life Health Sciences, University of Delaware, Newark, Delaware  
Abstract: Digital organisms have been synthesized based on a computer metaphor of organic life in which CPU time is the "energy" resource and memory is the "material" resource. Memory is organized into informational "genetic" patterns that exploit CPU time for self-replication. Mutation generates new forms, and evolution proceeds by natural selection as different "genotypes" compete for CPU time and memory space. In addition, new genotypes appear which exploit other "creatures" for informational or energetic resources. The digital organisms are self-replicating computer programs, however, they can not escape because they run exclusively on a virtual computer in its unique machine language. From a single ancestral "creature" there have evolved tens of thousands of self-replicating genotypes of hundreds of genome size classes. Parasites evolved, then creatures that were immune to parasites, and then parasites that could circumvent the immunity. Hyper-parasites evolved which subvert parasites to their own reproduction and drive them to extinction. The resulting genetically uniform communities evolve sociality in the sense of creatures that can only reproduce in cooperative aggregations, and these aggregations are then invaded by cheating hyper-hyper-parasites. Diverse ecological communities have emerged. These digital communities have been used to experimentally study ecological and evolutionary processes: e.g., competitive exclusion and coexistance, symbiosis, host/parasite density dependent population regulation, the effect of parasites in enhancing community diversity, evolutionary arms races, punctuated equilibrium, and the role of chance and historical factors in evolution. It is possible to extract information on any aspect of the system without disturbing it, from phylogeny or community structure through time to the "genetic makeup" and "metabolic processes" of individuals. Digital life demonstrates the power of the computational approach to science as a complement to the traditional approaches of experiment, and theory based on analysis through calculus and differential equations. Optimization experiments have shown that freely evolving digital organisms can optimize their algorithms by a factor of 5.75 in a few hours of real time. In addition, evolution discovered the optimization technique of "unrolling the loop". Evolution may provide a new method for the optimization or generation of application programs. This method may prove particularly useful for programming massively parallel machines. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ackley, D. H. & Littman, M. S. </author> <title> "Learning from natural selection in an artificial environment." </title> <booktitle> In: Proceedings of the International Joint Conference on Neural Networks, Volume I, Theory Track, Neural and Cognitive Sciences Track, IJCNN Winter 1990, </booktitle> <address> Washington, DC. Hillsdale, New Jersey: </address> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1990. </year>
Reference-contexts: Their potential is limited by the structure of the model, which generally endows each individual with a genome consisting of a set of pre-defined genes, each of which may exist in a pre-defined set of allelic forms (Holland [20]; Dewdney [12]; Dawkins [7, 8]; Packard [29]; Ackley & Littman <ref> [1] </ref>). The object being evolved is generally a data structure representing the genome, which the simulator program mutates and/or recombines, selects, and replicates according to criteria designed into the simulator.
Reference: [2] <author> Aho, A. V., Hopcroft, J. E. & Ullman, J. D. </author> <title> The design and analysis of computer algorithms. </title> <address> Reading, Mass.: </address> <publisher> Addison-Wesley Publ. Co, </publisher> <year> 1974. </year>
Reference-contexts: Sets of machine instructions similar to those used in the Tierra Simulator have been shown to be capable of "universal computation" (Aho et al. <ref> [2] </ref>; Minsky [26]; Langton [24]). This suggests that evolving machine codes should be able to generate any level of complexity. <p> instructions (Appendix C). 2.2 THE VIRTUAL COMPUTER | TIERRA SIMULATOR The computers we use are general purpose computers, which means, among other things, that they are capable of emulating through software, the behavior of any other computer that ever has been built or that could be built (Aho et al. <ref> [2] </ref>; Minsky [26]; Langton [24]). We can utilize this flexibility to design a computer that would be especially hospitable to synthetic life. There are several good reasons why it is not wise to attempt to synthesize digital organisms that exploit the machine codes and operating systems of real computers.
Reference: [3] <author> Bagley, R. J., Farmer, J. D., Kauffman, S. A., Packard, N. H., Perelson, A. S. & Stadnyk, I. M. </author> <title> "Modeling adaptive biological systems." </title> <type> Unpublished paper, </type> <year> 1989. </year>
Reference-contexts: This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland [21], Farmer et al. [16], Langton [22], Rasmussen et al. [31], and Bagley et al. <ref> [3] </ref>. A characteristic these efforts generally have in common is that they parallel the origin of life event by attempting to create prebiotic conditions from which life may emerge spontaneously and evolve in an open ended fashion.
Reference: [4] <author> Barbieri, M. </author> <title> The semantic theory of evolution. </title> <publisher> London: Harwood Academic Publishers, </publisher> <year> 1985. </year>
Reference-contexts: Each "creature" occupies some block of memory in this soup. Cellularity is one of the fundamental properties of organic life, and can be recognized in the fossil record as far back as 3.6 billion years (Barbieri <ref> [4] </ref>). The cell is the original individual, with the cell membrane defining its limits and preserving its chemical integrity. An analog to the cell membrane is needed in digital organisms in order to preserve the integrity of the informational structure from being disrupted easily by the activity of other organisms.
Reference: [5] <author> Cariani, P. </author> <title> "Emergence and artificial life." In: Artificial Life II, edited by C. </title> <editor> Langton, D. Farmer and S. Rasmussen. </editor> <address> Redwood City, CA: </address> <publisher> Addison-Wesley, </publisher> <year> 1991, </year> <pages> 000-000. </pages>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani <ref> [5] </ref>). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney [10, 11, 13, 14]; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution.
Reference: [6] <author> Cohen, F. </author> <title> Computer viruses: theory and experiments. </title> <publisher> Ph. </publisher> <address> D. </address> <institution> dissertation, U. of Southern California, </institution> <year> 1984. </year>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen <ref> [6] </ref>; Dewdney [10, 11, 13, 14]; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended.
Reference: [7] <author> Dawkins, R. </author> <title> The blind watchmaker. </title> <address> New York: </address> <publisher> W. W. Norton & Co., </publisher> <year> 1987. </year>
Reference-contexts: Most evolutionary simulations are not open-ended. Their potential is limited by the structure of the model, which generally endows each individual with a genome consisting of a set of pre-defined genes, each of which may exist in a pre-defined set of allelic forms (Holland [20]; Dewdney [12]; Dawkins <ref> [7, 8] </ref>; Packard [29]; Ackley & Littman [1]). The object being evolved is generally a data structure representing the genome, which the simulator program mutates and/or recombines, selects, and replicates according to criteria designed into the simulator.
Reference: [8] <author> Dawkins, R. </author> <title> "The evolution of evolvability." </title> <booktitle> In: Artificial life: proceedings of an interdisciplinary workshop on the synthesis and simulation of living systems, edited by C. Langton. </booktitle> <address> Redwood City, CA: </address> <publisher> Addison-Wesley, </publisher> <year> 1989, </year> <pages> 201-220. </pages>
Reference-contexts: Most evolutionary simulations are not open-ended. Their potential is limited by the structure of the model, which generally endows each individual with a genome consisting of a set of pre-defined genes, each of which may exist in a pre-defined set of allelic forms (Holland [20]; Dewdney [12]; Dawkins <ref> [7, 8] </ref>; Packard [29]; Ackley & Littman [1]). The object being evolved is generally a data structure representing the genome, which the simulator program mutates and/or recombines, selects, and replicates according to criteria designed into the simulator.
Reference: [9] <author> Denning, P. J. </author> <title> "Computer viruses." </title> <journal> Amer. Sci. </journal> <volume> 76 (1988): </volume> <pages> 236-238. </pages>
Reference-contexts: Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney [10, 11, 13, 14]; Denning <ref> [9] </ref>; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended.
Reference: [10] <author> Dewdney, A. K. </author> <title> "Computer recreations: In the game called Core War hostile programs engage in a battle of bits." </title> <journal> Sci. Amer. </journal> <volume> 250 (1984): </volume> <pages> 14-22. </pages>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney <ref> [10, 11, 13, 14] </ref>; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended. <p> In its present manifestation, the Tierran language consists of 32 instructions, which can be represented by five bits, operands included. Emphasis is placed on this last point because some instruction sets are deceptively small. Some versions of the redcode language of Core Wars (Dewdney <ref> [10, 13] </ref>; Rasmussen et al. [31]) for example are defined to have ten operation codes. It might appear on the surface then that the instruction set is of size ten. However, most of the ten instructions have one or two operands. <p> The need for this can be seen in Artificial Life models such as cellular automata where virtual state machines pass through one another (Langton [22, 23]), or in core wars type simulations where coherent structures demolish one another when they come into contact (Dewdney <ref> [10, 13] </ref>; Rasmussen et al. [31]). Tierran creatures are considered to be cellular in the sense that they are protected by a "semi-permeable membrane" of memory allocation. The Tierran operating system provides memory allocation services. Each creature has exclusive write privileges within its allocated block of memory.
Reference: [11] <author> Dewdney, A. K. </author> <title> "Computer recreations: A core war bestiary of viruses, worms and other threats to computer memories." </title> <journal> Sci. Amer. </journal> <volume> 252 (1985a): </volume> <pages> 14-23. </pages>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney <ref> [10, 11, 13, 14] </ref>; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended.
Reference: [12] <author> Dewdney, A. K. </author> <title> "Computer recreations: Exploring the field of genetic algorithms in a primordial computer sea full of flibs." </title> <journal> Sci. Amer. </journal> <volume> 253 (1985b): </volume> <pages> 21-32. </pages>
Reference-contexts: Most evolutionary simulations are not open-ended. Their potential is limited by the structure of the model, which generally endows each individual with a genome consisting of a set of pre-defined genes, each of which may exist in a pre-defined set of allelic forms (Holland [20]; Dewdney <ref> [12] </ref>; Dawkins [7, 8]; Packard [29]; Ackley & Littman [1]). The object being evolved is generally a data structure representing the genome, which the simulator program mutates and/or recombines, selects, and replicates according to criteria designed into the simulator.
Reference: [13] <author> Dewdney, A. K. </author> <title> "Computer recreations: A program called MICE nibbles its way to victory at the first core war tournament." </title> <journal> Sci. Amer. </journal> <volume> 256 (1987): </volume> <pages> 14-20. </pages>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney <ref> [10, 11, 13, 14] </ref>; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended. <p> In its present manifestation, the Tierran language consists of 32 instructions, which can be represented by five bits, operands included. Emphasis is placed on this last point because some instruction sets are deceptively small. Some versions of the redcode language of Core Wars (Dewdney <ref> [10, 13] </ref>; Rasmussen et al. [31]) for example are defined to have ten operation codes. It might appear on the surface then that the instruction set is of size ten. However, most of the ten instructions have one or two operands. <p> The need for this can be seen in Artificial Life models such as cellular automata where virtual state machines pass through one another (Langton [22, 23]), or in core wars type simulations where coherent structures demolish one another when they come into contact (Dewdney <ref> [10, 13] </ref>; Rasmussen et al. [31]). Tierran creatures are considered to be cellular in the sense that they are protected by a "semi-permeable membrane" of memory allocation. The Tierran operating system provides memory allocation services. Each creature has exclusive write privileges within its allocated block of memory.
Reference: [14] <author> Dewdney, A. K. </author> <title> "Of worms, viruses and core war." </title> <journal> Sci. Amer. </journal> <volume> 260 (1989): </volume> <pages> 110-113. </pages>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney <ref> [10, 11, 13, 14] </ref>; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended.
Reference: [15] <author> Eldredge, N. & Gould, S. J. </author> <title> "Punctuated equilibria: an alternative to phyletic gradualism." In: Models in Paleobiology, edited by J. </title> <editor> M. Schopf. </editor> <address> San Francisco: Greeman, Cooper, </address> <year> 1972, </year> <pages> 82-115. </pages>
Reference-contexts: These long runs illustrate a pattern which could be described as periods of stasis punctuated by periods of rapid evolutionary change, which appears to parallel the pattern of punctuated equilibrium described by Eldredge & Gould <ref> [15] </ref> and Gould & Eldredge [19]. Initially these communities are dominated by creatures with genome sizes in the eighties. This represents a period of relative stasis, which has lasted from 178 million to 1.44 billion instructions in the several long runs conducted to date.
Reference: [16] <author> Farmer, J. D., Kauffman, S. A., & Packard, N. H. </author> <title> "Autocatalytic replication of polymers." </title> <journal> Physica D 22 (1986): </journal> <pages> 50-67. </pages>
Reference-contexts: This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland [21], Farmer et al. <ref> [16] </ref>, Langton [22], Rasmussen et al. [31], and Bagley et al. [3]. A characteristic these efforts generally have in common is that they parallel the origin of life event by attempting to create prebiotic conditions from which life may emerge spontaneously and evolve in an open ended fashion.
Reference: [17] <editor> Farmer, J. D. & Belin, A. </editor> <booktitle> "Artificial life: the coming evolution." Proceedings in celebration of Murray Gell-Man's 60th Birthday. </booktitle> <address> Cambridge: </address> <publisher> University Press. In press. </publisher> <pages> 23 </pages>
Reference-contexts: Any mutation or recombination event in a real machine code is almost certain to produce a non-functional program. The problem of brittleness can be mitigated by designing a virtual computer whose machine code is designed with evolution in mind. Farmer & Belin <ref> [17] </ref> have suggested that overcoming this brittleness and "Discovering how to make such self-replicating patterns more robust so that they evolve to increasingly more complex states is probably the central problem in the study of artificial life." The work described here takes place on a virtual computer known as Tierra (Spanish
Reference: [18] <author> Gould, S. J. </author> <title> Wonderful life, </title> <booktitle> the Burgess shale and the nature of history. </booktitle> <address> New York: </address> <publisher> W. W. Norton & Company, </publisher> <year> 1989. </year>
Reference-contexts: This event involved a riotous diversification of life forms. Dozens of phyla appeared suddenly, many existing only fleetingly, as diverse and sometimes bizarre ways of life were explored in a relative ecological void (Gould <ref> [18] </ref>; Morris [27]). The work presented here aims to parallel the second major event in the history of life, the origin of diversity.
Reference: [19] <author> Gould, S. J. & Eldredge, N. </author> <title> "Punctuated equilibria: the tempo and mode of evolution reconsidered." </title> <booktitle> Paleobiology 3 (1977): </booktitle> <pages> 115-151. </pages>
Reference-contexts: These long runs illustrate a pattern which could be described as periods of stasis punctuated by periods of rapid evolutionary change, which appears to parallel the pattern of punctuated equilibrium described by Eldredge & Gould [15] and Gould & Eldredge <ref> [19] </ref>. Initially these communities are dominated by creatures with genome sizes in the eighties. This represents a period of relative stasis, which has lasted from 178 million to 1.44 billion instructions in the several long runs conducted to date.
Reference: [20] <author> Holland, J. H. </author> <title> Adaptation in natural and artificial systems: an introductory analysis with applications to biology, control, </title> <booktitle> and artificial intelligence. </booktitle> <address> Ann Arbor: </address> <publisher> Univ. of Michigan Press, </publisher> <year> 1975. </year>
Reference-contexts: Most evolutionary simulations are not open-ended. Their potential is limited by the structure of the model, which generally endows each individual with a genome consisting of a set of pre-defined genes, each of which may exist in a pre-defined set of allelic forms (Holland <ref> [20] </ref>; Dewdney [12]; Dawkins [7, 8]; Packard [29]; Ackley & Littman [1]). The object being evolved is generally a data structure representing the genome, which the simulator program mutates and/or recombines, selects, and replicates according to criteria designed into the simulator.
Reference: [21] <author> Holland, J. H. </author> <title> "Studies of the spontaneous emergence of self-replicating systems using cellular automata and formal grammars." In: Automata, Languages, Development, edited by Lindenmayer, </title> <editor> A., & Rozenberg, G. </editor> <address> New York: </address> <publisher> North-Holland, </publisher> <year> 1976, </year> <pages> 385-404. </pages>
Reference-contexts: This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland <ref> [21] </ref>, Farmer et al. [16], Langton [22], Rasmussen et al. [31], and Bagley et al. [3].
Reference: [22] <author> Langton, C. G. </author> <title> "Studying artificial life with cellular automata." </title> <journal> Physica 22D (1986): </journal> <pages> 120-149. </pages>
Reference-contexts: This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland [21], Farmer et al. [16], Langton <ref> [22] </ref>, Rasmussen et al. [31], and Bagley et al. [3]. A characteristic these efforts generally have in common is that they parallel the origin of life event by attempting to create prebiotic conditions from which life may emerge spontaneously and evolve in an open ended fashion. <p> The need for this can be seen in Artificial Life models such as cellular automata where virtual state machines pass through one another (Langton <ref> [22, 23] </ref>), or in core wars type simulations where coherent structures demolish one another when they come into contact (Dewdney [10, 13]; Rasmussen et al. [31]). Tierran creatures are considered to be cellular in the sense that they are protected by a "semi-permeable membrane" of memory allocation.
Reference: [23] <author> Langton, C. G. </author> <title> "Virtual state machines in cellular automata." </title> <booktitle> Complex Systems 1 (1987): </booktitle> <pages> 257-271. </pages>
Reference-contexts: The need for this can be seen in Artificial Life models such as cellular automata where virtual state machines pass through one another (Langton <ref> [22, 23] </ref>), or in core wars type simulations where coherent structures demolish one another when they come into contact (Dewdney [10, 13]; Rasmussen et al. [31]). Tierran creatures are considered to be cellular in the sense that they are protected by a "semi-permeable membrane" of memory allocation.
Reference: [24] <editor> Langton, C. G. </editor> <booktitle> "Artificial life." In: Artificial life: proceedings of an interdisciplinary workshop on the synthesis and simulation of living systems, edited by Langton, C. Vol. 6 in the series: </booktitle> <institution> Santa Fe Institute studies in the sciences of complexity. </institution> <address> Redwood City, CA: </address> <publisher> Addison-Wesley, </publisher> <year> 1989, </year> <pages> 1-47. </pages>
Reference-contexts: Sets of machine instructions similar to those used in the Tierra Simulator have been shown to be capable of "universal computation" (Aho et al. [2]; Minsky [26]; Langton <ref> [24] </ref>). This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland [21], Farmer et al. [16], Langton [22], Rasmussen et al. [31], and Bagley et al. [3]. <p> THE VIRTUAL COMPUTER | TIERRA SIMULATOR The computers we use are general purpose computers, which means, among other things, that they are capable of emulating through software, the behavior of any other computer that ever has been built or that could be built (Aho et al. [2]; Minsky [26]; Langton <ref> [24] </ref>). We can utilize this flexibility to design a computer that would be especially hospitable to synthetic life. There are several good reasons why it is not wise to attempt to synthesize digital organisms that exploit the machine codes and operating systems of real computers.
Reference: [25] <author> Lotka, A. J. </author> <title> Elements of physical biology. Baltimore: </title> <editor> Williams and Wilkins, </editor> <year> 1925, </year> <title> reprinted as Elements of mathematical biology, </title> <publisher> Dover Press, </publisher> <year> 1956. </year>
Reference-contexts: Their calls to the copy procedure fail and generate errors, causing them to rise to the top of the reaper queue and die. When the parasites die off, the host population rebounds. Hosts and parasites cultured together demonstrate Lotka-Volterra population cycling (Lotka <ref> [25] </ref>; Volterra [35]; Wilson & Bossert [36]). A number of experiments have been conducted to explore the factors affecting diversity of size classes in these communities. Competitive exclusion trials were conducted with a series of self-replicating (non-parasitic) genotypes of different size classes.
Reference: [26] <author> Minsky, M. L. </author> <title> Computation: finite and infinite machines. </title> <address> Englewood Cliffs, N.J.: </address> <publisher> Prentice-Hall, </publisher> <year> 1976. </year>
Reference-contexts: Sets of machine instructions similar to those used in the Tierra Simulator have been shown to be capable of "universal computation" (Aho et al. [2]; Minsky <ref> [26] </ref>; Langton [24]). This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland [21], Farmer et al. [16], Langton [22], Rasmussen et al. [31], and Bagley et al. [3]. <p> C). 2.2 THE VIRTUAL COMPUTER | TIERRA SIMULATOR The computers we use are general purpose computers, which means, among other things, that they are capable of emulating through software, the behavior of any other computer that ever has been built or that could be built (Aho et al. [2]; Minsky <ref> [26] </ref>; Langton [24]). We can utilize this flexibility to design a computer that would be especially hospitable to synthetic life. There are several good reasons why it is not wise to attempt to synthesize digital organisms that exploit the machine codes and operating systems of real computers.
Reference: [27] <author> Morris, S. C. </author> <title> "Burgess shale faunas and the cambrian explosion." </title> <booktitle> Science 246 (1989): </booktitle> <pages> 339-346. </pages>
Reference-contexts: This event involved a riotous diversification of life forms. Dozens of phyla appeared suddenly, many existing only fleetingly, as diverse and sometimes bizarre ways of life were explored in a relative ecological void (Gould [18]; Morris <ref> [27] </ref>). The work presented here aims to parallel the second major event in the history of life, the origin of diversity.
Reference: [28] <author> Paine, R. T. </author> <title> "Food web complexity and species diversity." </title> <journal> Am. Nat. </journal> <volume> 100 (1966): </volume> <pages> 65-75. </pages>
Reference-contexts: The same community was then regenerated, but a single genotype (0045aaa) of parasite was also introduced. After 30 million instructions, 16 size classes remained, including the parasite. This seems to be an example of a "keystone" parasite effect (Paine <ref> [28] </ref>). Symbiotic relationships are also possible. The ancestor was manually dissected into two creatures, one of size 46 which contained only the code for self-examination and the copy loop, and one of size 64 which contained only the code for self-examination and the copy procedure (Figure 3).
Reference: [29] <author> Packard, N. H. </author> <title> "Intrinsic adaptation in a simple model for evolution." </title> <booktitle> In: Artificial life: proceedings of an interdisciplinary workshop on the synthesis and simulation of living systems, edited by C. Langton. </booktitle> <address> Redwood City, CA: </address> <publisher> Addison-Wesley, </publisher> <year> 1989, </year> <pages> 141-155. </pages>
Reference-contexts: Their potential is limited by the structure of the model, which generally endows each individual with a genome consisting of a set of pre-defined genes, each of which may exist in a pre-defined set of allelic forms (Holland [20]; Dewdney [12]; Dawkins [7, 8]; Packard <ref> [29] </ref>; Ackley & Littman [1]). The object being evolved is generally a data structure representing the genome, which the simulator program mutates and/or recombines, selects, and replicates according to criteria designed into the simulator.
Reference: [30] <author> Pattee, H. H. </author> <title> "Simulations, realizations, and theories of life." </title> <booktitle> In: Artificial life: proceedings of an interdisciplinary workshop on the synthesis and simulation of living systems, edited by C. Langton. </booktitle> <address> Redwood City, CA: </address> <publisher> Addison-Wesley, </publisher> <year> 1989, </year> <pages> 63-77. </pages>
Reference-contexts: I would consider a system to be living if it is self-replicating, and capable of open-ended evolution. Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee <ref> [30] </ref>; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney [10, 11, 13, 14]; Denning [9]; Rheingold [32]; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution.
Reference: [31] <author> Rasmussen, S., Knudsen, C., Feldberg, R. & Hindsholm, M. </author> <title> "The coreworld: emergence and evolution of cooperative structures in a computational chemistry" Physica D 42 (1990): </title> <type> 111-134. </type>
Reference-contexts: This suggests that evolving machine codes should be able to generate any level of complexity. Other examples of the synthetic approach to life can be seen in the work of Holland [21], Farmer et al. [16], Langton [22], Rasmussen et al. <ref> [31] </ref>, and Bagley et al. [3]. A characteristic these efforts generally have in common is that they parallel the origin of life event by attempting to create prebiotic conditions from which life may emerge spontaneously and evolve in an open ended fashion. <p> In its present manifestation, the Tierran language consists of 32 instructions, which can be represented by five bits, operands included. Emphasis is placed on this last point because some instruction sets are deceptively small. Some versions of the redcode language of Core Wars (Dewdney [10, 13]; Rasmussen et al. <ref> [31] </ref>) for example are defined to have ten operation codes. It might appear on the surface then that the instruction set is of size ten. However, most of the ten instructions have one or two operands. Each operand has four addressing modes, and then an integer. <p> The need for this can be seen in Artificial Life models such as cellular automata where virtual state machines pass through one another (Langton [22, 23]), or in core wars type simulations where coherent structures demolish one another when they come into contact (Dewdney [10, 13]; Rasmussen et al. <ref> [31] </ref>). Tierran creatures are considered to be cellular in the sense that they are protected by a "semi-permeable membrane" of memory allocation. The Tierran operating system provides memory allocation services. Each creature has exclusive write privileges within its allocated block of memory.
Reference: [32] <author> Rheingold, H. </author> <year> (1988). </year> <note> Computer viruses. Whole Earth Review Fall (1988): 106. </note>
Reference-contexts: Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney [10, 11, 13, 14]; Denning [9]; Rheingold <ref> [32] </ref>; Spafford et al. [33]) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended.
Reference: [33] <author> Spafford, E. H., Heaphy, K. A. & Ferbrache, D. J. </author> <title> Computer viruses, dealing with electronic vandalism and programmed threats. </title> <booktitle> ADAPSO, 1300 N. 17th Street, </booktitle> <address> Suite 300, Arlington, VA 22209, </address> <year> 1989. </year> <month> 24 </month>
Reference-contexts: Synthetic life should self-replicate, and evolve structures or processes that were not designed-in or pre-conceived by the creator (Pattee [30]; Cariani [5]). Core Wars programs, computer viruses, and worms (Cohen [6]; Dewdney [10, 11, 13, 14]; Denning [9]; Rheingold [32]; Spafford et al. <ref> [33] </ref>) are capable of self-replication, but fortunately, not evolution. It is unlikely that such programs will ever become fully living, because they are not likely to be able to evolve. Most evolutionary simulations are not open-ended.
Reference: [34] <author> Stanley, S. M. </author> <title> "An ecological theory for the sudden origin of multicellular life in the late precambrian." </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. Sci. </institution> <month> 70 </month> <year> (1973): </year> <pages> 1486-1489. </pages>
Reference-contexts: Evolutionary theory suggests that adaptation to the biotic environment (other organisms) rather than to the physical environment is the primary force driving the auto-catalytic diversification of organisms (Stanley <ref> [34] </ref>). It is encouraging to discover that the process has already begun in the Tierran world. It is worth noting that the results presented here are based on evolution of the first creature that I designed, written in the first instruction set that I designed.
Reference: [35] <author> Volterra, V. </author> <title> "Variations and fluctuations of the number of individuals in animal species living together." In: Animal Ecology, edited by R. </title> <editor> N. </editor> <publisher> Chapman. </publisher> <address> New York: </address> <publisher> McGraw-Hill, </publisher> <year> 1926, </year> <pages> 409-448. </pages>
Reference-contexts: Their calls to the copy procedure fail and generate errors, causing them to rise to the top of the reaper queue and die. When the parasites die off, the host population rebounds. Hosts and parasites cultured together demonstrate Lotka-Volterra population cycling (Lotka [25]; Volterra <ref> [35] </ref>; Wilson & Bossert [36]). A number of experiments have been conducted to explore the factors affecting diversity of size classes in these communities. Competitive exclusion trials were conducted with a series of self-replicating (non-parasitic) genotypes of different size classes.

References-found: 35

