URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1993/tr-93-080.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1993.html
Root-URL: http://www.icsi.berkeley.edu
Title: Dynamic Programming in a Generalized Decision Model  
Author: U l r i c h H u c k e n b e c k ) 
Note: 1) Ernst-Moritz-Arndt-Universitat Greifswald, Fachrichtungen Mathematik/Informatik, Jahnstr. 15 a, D-17487 Greifswald, GERMANY  
Date: December, 1993  
Abstract: We present two dynamic programming strategies for a general class of decision processes. Each of these algorithms includes among others the following graph theoretic optimization algorithms as special cases: * the Ford-Bellman Strategy for optimal paths in acyclic digraphs, * the Greedy Method for optimal forests and spanning trees in undirected graphs. In our general decision model, we define several structural properties of cost measures in order to formulate sufficient conditions for the correctness of our algorithms. Our first algorithm works as fast as the original Ford-Bellman Strategy and the Greedy Method, respectively. Our second algorithm solves a larger class of optimization problems than our first search strategy. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.Bellman, </author> <title> Dynamic Programming. </title> <publisher> Princeton University Press, </publisher> <address> Princton, N.J., </address> <year> 1957. </year>
Reference-contexts: The Greedy procedure works correctly since the set U of all forests is structured like a matroid. The correctness of the Dynamic Programming paradigm is usually inferred from Bellman Principles, which are described in <ref> [1] </ref> and [9]. In our paper we translate order preservance, matroid properties and Bellman conditions from the original situations into the general case described in Problem P. These translated properties help us to formulate sufficient conditions for the correct behaviour of DP 1 and DP 2 . <p> The optimal successor Y 2 of X 2 is constructed by appending the last arc of Y 1 to X 2 . We next define several Bellman properties of relational decsion models. These properties are similar to the principles of optimality in <ref> [1] </ref> and [9]. Definition 1.11.
Reference: [2] <author> N.Christofides, </author> <title> Graph Theory, An Algorithmic Approach. </title> <publisher> Academic Press, </publisher> <address> London (1975). </address>
Reference: [3] <author> R.Dechter, J.Pearl, </author> <title> Generalized Best-First Search Strategies and the Optimality of A*. </title> <journal> JACM 32, </journal> <volume> No. 3, </volume> <editor> p. </editor> <month> 505 - 536 </month> <year> (1985). </year>
Reference-contexts: More precisely, the correct behavior of the Ford-Bellman Procedure is proven with the order preservance of C as defined in <ref> [3] </ref>. The Greedy procedure works correctly since the set U of all forests is structured like a matroid. The correctness of the Dynamic Programming paradigm is usually inferred from Bellman Principles, which are described in [1] and [9]. <p> Further Definitions in Context with Relational Decision Models We next define and discuss several structural properties of relational decision models or their components. In particular, we translate the original graph theoretic definition of order preservance <ref> [3] </ref> and matroid propertiy [7] into the situation of RDMs. Let us start with order preservance: Preliminary Remark 1.2. <p> = t 2 A and if U i := T i (t; u) (i = 1; 2) with (t; u) 2 E then C (T 1 ) C (T 2 ) =) C (U 1 ) C (U 2 ) : This definition is equivalent to the original version in <ref> [3] </ref>. In particular, C is order preserving if C is additive; this follows from the equality C (P 1 Q) C (P 1 ) = C (P 2 Q) C (P 2 ) for all paths P 1 ; P 2 ; Q. Definition 1.3.
Reference: [4] <author> R.W.Haddad, A.A.Schaffer, </author> <title> Recognizing Bellman-Ford-Orderable Graphs. </title> <journal> SIAM Journal on Discrete Mathematics 1, </journal> <volume> No. 4, </volume> <editor> p. </editor> <month> 447 - 471 </month> <year> (1988). </year>
Reference-contexts: This property is somewhat weaker than the monotonity of R, and it was already investigated in <ref> [4] </ref>. So it remains to give an generalized version of DP 1 or DP 2 if * G U is not acyclic, * R is not even a Bellman-Ford ordering, * The underlying relational decision model ffi does not even have the weak Bellman property.
Reference: [5] <author> T.Ibaraki, </author> <title> On the Optimality of Algorithms for Finite State Sequential Decision Processes. </title> <journal> Journal of Mathematical Analysis and Applications 53 (1976), p. </journal> <volume> 618 - 643. </volume>
Reference-contexts: This means that C ( (a)) is minimal among all candidates C (X) where (X; a) 2 R. This general formulation includes several further optimization problems. Important examples arise from searching optimal sequences of decisions in dynamic programs [9] and in sequential decision processes <ref> [5] </ref>, [6]. Also in these situations, the relation R can be defined as a function. <p> Our dynamic programming methods seem to be the first that include the case of a relation R which is not a function. In contrast to the algorithms described in <ref> [5] </ref> and [6], we require a particular structural property of A, that is the so-called admissible ordering of A. <p> An interesting field of future research would be to improve DP 1 and DP 2 so that they work correctly without admissible orderings of A; these improved versions of our two algorithms would be at least as general as the search strategies in <ref> [5] </ref> and [9]. The paradigm of Dynamic Programming helps to reduce the time of computation. Since only the optimal objects (a 0 ) are considered, no time is wasted by handling non-optimal objects related to a 0 . <p> := h 0 ( C (ffi) ; R (ffi) ; d ) : At last, the graph G U := (U ; E U ) is defined by E U := f (ffi; ffid) j ffi 2 D fl ; d 2 Dg : Also the sequential decision processes in <ref> [5] </ref> and [6] can be considered as RDMs; the definitions are almost the same as in the case of finite dynamic programs. 1.4. Further Definitions in Context with Relational Decision Models We next define and discuss several structural properties of relational decision models or their components.
Reference: [6] <author> R.M.Karp, M.Held, </author> <title> Finite-State Processes and Dynamic Programming. </title> <note> SIAM Journal on Applied Mathematics 15 (1967), p. 693 - 718. </note>
Reference-contexts: This means that C ( (a)) is minimal among all candidates C (X) where (X; a) 2 R. This general formulation includes several further optimization problems. Important examples arise from searching optimal sequences of decisions in dynamic programs [9] and in sequential decision processes [5], <ref> [6] </ref>. Also in these situations, the relation R can be defined as a function. In our paper, however, we carefully study a situation where the relation R is not a function. 1 The main purpose of this paper is to present an efficient solution to the general optimization problem P. <p> Our dynamic programming methods seem to be the first that include the case of a relation R which is not a function. In contrast to the algorithms described in [5] and <ref> [6] </ref>, we require a particular structural property of A, that is the so-called admissible ordering of A. <p> 0 ( C (ffi) ; R (ffi) ; d ) : At last, the graph G U := (U ; E U ) is defined by E U := f (ffi; ffid) j ffi 2 D fl ; d 2 Dg : Also the sequential decision processes in [5] and <ref> [6] </ref> can be considered as RDMs; the definitions are almost the same as in the case of finite dynamic programs. 1.4. Further Definitions in Context with Relational Decision Models We next define and discuss several structural properties of relational decision models or their components.
Reference: [7] <author> D.C.Kozen, </author> <title> The Design and Analysis of Algorithms. </title> <publisher> Springer-Verlag, </publisher> <address> New York, Berlin (1991). </address>
Reference-contexts: Introduction Two of the most prominent graph theoretic optimization strategies are the Ford-Bellman Algorithm ([2], [8]) and Kruskal's Greedy Method (see <ref> [7] </ref>). The first of them finds cost minimal paths in a digraph G. More precisely, if s is a fixed start node then the Ford-Bellman Strategy finds a cost minimal path (a) from s to a for each vertex a. <p> The following formulation is almost identical to Kozen's description <ref> [7] </ref>: Procedure KRUSKAL A) Sort the set E of all edges by weight. B) For each edge e on the list in order of increasing weight, include e in the intermediate forest if e does not form a cycle with the edges already taken. Otherwise discard e. <p> Further Definitions in Context with Relational Decision Models We next define and discuss several structural properties of relational decision models or their components. In particular, we translate the original graph theoretic definition of order preservance [3] and matroid propertiy <ref> [7] </ref> into the situation of RDMs. Let us start with order preservance: Preliminary Remark 1.2. <p> This means that the time complexity T of DP 1 is mainly influenced by T (k) T 2 O n 2 This means that in this case DP 1 is as fast as the Greedy Procedure described in <ref> [7] </ref>. Example 1.4: To calculate T (k) (k) 3 we make several observations.
Reference: [8] <author> E.L.Lawler, </author> <title> Combinatorial Optimization: Networks and Matroids. </title> <publisher> Holt, Rinehart and Winston, </publisher> <address> New York (1976). </address>
Reference-contexts: Introduction Two of the most prominent graph theoretic optimization strategies are the Ford-Bellman Algorithm ([2], <ref> [8] </ref>) and Kruskal's Greedy Method (see [7]). The first of them finds cost minimal paths in a digraph G. More precisely, if s is a fixed start node then the Ford-Bellman Strategy finds a cost minimal path (a) from s to a for each vertex a.

References-found: 8

