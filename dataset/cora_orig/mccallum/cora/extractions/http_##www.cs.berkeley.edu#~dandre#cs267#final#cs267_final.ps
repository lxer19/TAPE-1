URL: http://www.cs.berkeley.edu/~dandre/cs267/final/cs267_final.ps
Refering-URL: http://www.cs.berkeley.edu/~dandre/cs267/index.html
Root-URL: http://www.cs.berkeley.edu
Email: dandre@cs.berkeley.edu  
Title: Parallelizing Robocup CS-267  Multilevel parallelism in automatically synthesizing soccer-playing programs for Robocup using genetic programming  
Author: David Andre David Andre 
Date: 05/17/98 1  Spring 1998  
Pubnum: CS 267 Course Project  
Abstract: Many of the various proposals for tomorrow's supercomputers have included clusters of multiprocessors as an essential component. However, when designing the systems of the future, it is important to insure that the nature of the parallelism provided matches up with some relevant and important set of algorithms. This project presents empirical program synthesis as an algorithm that can successfully exploit the multiple levels of interconnect present in an multi-SMP cluster system. When applying program synthesis techniques to difficult problems, it is often the case that two distinct levels of parallelism will emerge. First, many example programs must be tested - and can often be tested in parallel. This matches up with the slow interconnect on a clump-based system. Second, the execution of a particular program can often be parallelized, especially if the program is complicated or requires interactions with a complex simulation. This level of parallelism, in contrast to the first, often requires fine-grained communication. Thus, this matches up with the fast level of the clump-based system. In particular, this project presents a multilevel parallel system for the automatic program synthesis of soccer-playing agents for the Robocup simulator competition using genetic programming. The system utilizes both the fast shared-memory communication of the SMP system as well as a much slower mechanism for the interSMP communication. The system is benchmarked on a variety of configurations, and speedup curves are presented. Additionally, a simple LogP analysis comparing the performance of the designed system with a single-processor based NOW system is presented. Finally, the Robocup project is reviewed and the future work outlined. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Accelerated Strategic Computing Initiative. </institution> <year> (1996). </year> <title> The Red Hardware. </title> <note> Information available at http://mephisto.ca.sandia.gov/TFLOP/sc96/node2.html. </note>
Reference: <author> Andre, D., and Koza, J. R. </author> <year> (1998). </year> <title> Exploiting the fruits of parallelism: An implementation of parallel genetic programming that achieves super-linear performance. </title> <journal> Information Science Journal, </journal> <note> Elsevier, In press. </note>
Reference-contexts: Given that for most problems of reasonable complexity, this migration consists of only 8 KB/s, it is certainly the case that even simple interconnects can handle this inter-generational migration. Several successful systems have been built using this model <ref> (Andre and Koza, 1998) </ref>, and show linear speedups by using a parallel hardware, and additional speedups from using the deme model. Based on the success of these techniques, a 1000 node machine of single processor DEC alpha boxes is being built this summer at Stanford (Koza, 1998).
Reference: <author> Keeton, K.K, Anderson, T.A., and Patterson, D.A. </author> <year> (1995). </year> <title> LogP quantified: the case for low-overhead local area networks. Presented at Hot Interconnects III: A symposium on High Performance Interconnects, </title> <publisher> Stanford University. </publisher>
Reference: <author> Kitano, H., et al., </author> <year> (1997). </year> <title> RoboCup Synthetic Agent Challenge 97. </title> <booktitle> In proceedings of International joint conference on artificial intelligence. </booktitle> <address> Nagoya, Japan, </address> <month> August, </month> <year> 1998. </year>
Reference-contexts: The problem domain we consider for this project is the Robocup soccer simulator, part of the international Robocup Challenge Project <ref> (Kitano et al., 1997) </ref>. Robocup is described in more detail below. To demonstrate the system, we parallelized the Robocup soccer simulator (Noda, 1998) using threads, and implemented a simple algorithm to distribute games over a slow network.
Reference: <author> Koza, J.R., </author> <year> (1992). </year> <title> Genetic Programming: on the programming of computers by means of natural selection, </title> <address> Cambridge, Mass: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, J.R., </author> <year> (1998). </year> <type> Personal communication. </type>
Reference-contexts: Given that for most problems of reasonable complexity, this migration consists of only 8 KB/s, it is certainly the case that even simple interconnects can handle this inter-generational migration. Several successful systems have been built using this model <ref> (Andre and Koza, 1998) </ref>, and show linear speedups by using a parallel hardware, and additional speedups from using the deme model. Based on the success of these techniques, a 1000 node machine of single processor DEC alpha boxes is being built this summer at Stanford (Koza, 1998). <p> Based on the success of these techniques, a 1000 node machine of single processor DEC alpha boxes is being built this summer at Stanford <ref> (Koza, 1998) </ref>. Although it is certainly the case that GP is embarrassingly parallel, there are some limitations on its parallelization. First, the sub-populations often need to be of reasonable size in order to obtain any likelihood of success.
Reference: <author> Koza, J.R., Andre, D., Bennett, F. H, Keane, M. A. </author> <year> (1998). </year> <title> Genetic programming III: automatic programming and circuit synthesis. </title> <publisher> Morgan Kauffman. In Press. </publisher>
Reference-contexts: Given that for most problems of reasonable complexity, this migration consists of only 8 KB/s, it is certainly the case that even simple interconnects can handle this inter-generational migration. Several successful systems have been built using this model <ref> (Andre and Koza, 1998) </ref>, and show linear speedups by using a parallel hardware, and additional speedups from using the deme model. Based on the success of these techniques, a 1000 node machine of single processor DEC alpha boxes is being built this summer at Stanford (Koza, 1998). <p> Based on the success of these techniques, a 1000 node machine of single processor DEC alpha boxes is being built this summer at Stanford <ref> (Koza, 1998) </ref>. Although it is certainly the case that GP is embarrassingly parallel, there are some limitations on its parallelization. First, the sub-populations often need to be of reasonable size in order to obtain any likelihood of success.
Reference: <author> Lumetta, S.S., Mainwaring, A.M., and Culler, D.E. </author> <year> (1997). </year> <title> Multi-protocol active messages on a cluster of SMPs. </title> <booktitle> In Proceedings of the 1997 SuperComputing conference. Noda, </booktitle> <address> Itsuki, </address> <note> (1998) Robocup Soccer Server. Information available from http://ci.etl.go.jp/~noda/soccer/server/index.html. </note>
References-found: 8

