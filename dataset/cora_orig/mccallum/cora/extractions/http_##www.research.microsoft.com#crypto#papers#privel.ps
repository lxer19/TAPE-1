URL: http://www.research.microsoft.com/crypto/papers/privel.ps
Refering-URL: http://www.research.microsoft.com/crypto/
Root-URL: http://www.research.microsoft.com
Note: 454 This work was supported in part by the National Security Agency under Grant MDA904-84-H-0004. 454 This work was supported in part by the National Security Agency under Grant MDA904-84-H-0004.  
Abstract-found: 0
Intro-found: 1
Reference: [AdMc82] <author> Adleman, L. and McDonnell, R. </author> <title> "An Application of Higher Reciprocity to Computational Number Theory." </title> <booktitle> Proc. 23 rd IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Chicago, IL pp. </address> <month> (Nov. </month> <year> 1982), </year> <pages> 100-106. </pages>
Reference-contexts: This problem is believed to be hard, but more information as to its precise complexity would be very useful. Adelman and McDonnell in <ref> [AdMc82] </ref> (see also [APR83]) have shown that the problem is almost as hard as factoring when the exponent r is allowed to vary. It would be nice to show that the fixed exponent case used here is as hard as factoring.
Reference: [APR83] <author> Adleman, L., Pomerance, C., and Rumley, R. </author> <title> "On Distinguishing Prime Numbers from Composite Numbers." </title> <journal> Annals of Math. </journal> <volume> 117, </volume> <year> (1983), </year> <pages> 173-206. </pages>
Reference-contexts: This problem is believed to be hard, but more information as to its precise complexity would be very useful. Adelman and McDonnell in [AdMc82] (see also <ref> [APR83] </ref>) have shown that the problem is almost as hard as factoring when the exponent r is allowed to vary. It would be nice to show that the fixed exponent case used here is as hard as factoring.
Reference: [CGMA85] <author> Chor, B., Goldwasser, S., Micali, S., and Awerbuch, B. </author> <title> "Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 383-395. 16 </pages>
Reference-contexts: to be restarted easily), such a failure could be limited to a teller not releasing its required sub-tally. (This would be accomplished by moving the random number selection of step 4a into phase 1.) Since no partial information about the tally exists before this point, a simultaneous broadcast protocol (see <ref> [CGMA85] </ref>, for example) can prevent an unhappy teller from refusing to release its sub-tally after seeing that the tally is not developing as it desires. 2.1 Recovering from Teller Faults An alternative approach to dealing with the possibility of faulty tellers is given by embedding the entire election within a suitable <p> By again using a simultaneous broadcast protocol such as <ref> [CGMA85] </ref>, the private coins of officials can be revealed and XORed to form a secure public coin.
Reference: [CoFi85] <author> Cohen, J. and Fischer, M. </author> <title> "A Robust and Verifiable Cryp--tographically Secure Election Scheme." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 372-382. </pages>
Reference-contexts: 1 Introduction and Background In <ref> [CoFi85] </ref>, a protocol was presented which gives a method of holding a mutually verifiable secret-ballot election. The participants are the voters, a government, a trusted "beacon" which generates publically readable random bits, and a trusted global clock. The protocol has four basic phases. <p> With the aid of a final interactive proof, very high confidence is given that the tally released correctly represents the total number of no votes and the total number of yes votes cast. For completeness, the protocol is given in figure 1.1. Proofs are given in <ref> [CoFi85] </ref> that this protocol satisfies a correctness theorem and a privacy theorem. The correctness theorem states roughly that if the election passes a simple check function, then with high probability the tally claimed by the government is the desired tally of votes. <p> The total number of votes cast by any voter over all sub-elections must be either 0 (mod r) indicating a no vote or 1 (mod r) indicating a yes vote. A form of interactive proof (see [GMR85], <ref> [CoFi85] </ref>) is used to ensure that this constraint is met. This protocol denoted by scheme S 2 is given in the four phases detailed in figures 2.1-2.4.
Reference: [Coh86] <author> Cohen, J. </author> <title> "Keeping Shares of a Secret Secret." </title> <institution> TR-453, Yale University, Departement of Computer Science, </institution> <address> New Haven, CT (Feb. </address> <year> 1986). </year>
Reference-contexts: It might seem as though an adversarial group of less than d tellers could use its private information together with the information publically revealed by the remaining tellers to discern information about individual votes. It is seen in <ref> [Coh86] </ref>, however, that this cannot happen. There is an obvious trade off in the choice of d | the number of tellers required to complete the protocol.
Reference: [DLM82] <author> DeMillo, R., Lynch, N., and Merritt, M. </author> <title> "Cryptographic Protocols." </title> <booktitle> Proc. 14 th ACM Symp. on Theory of Computing, </booktitle> <address> San Francisco, CA (May 1982), </address> <pages> 383-400. </pages>
Reference: [GMR85] <author> Goldwasser, S., Micali, S., and Rackoff C. </author> <title> "The Knowledge Complexity of Interactive Proof-Systems." </title> <booktitle> Proc. 17 th ACM Symp. on Theory of Computing, </booktitle> <address> Providence, RI (May 1985), </address> <pages> 291-304. </pages>
Reference-contexts: The total number of votes cast by any voter over all sub-elections must be either 0 (mod r) indicating a no vote or 1 (mod r) indicating a yes vote. A form of interactive proof (see <ref> [GMR85] </ref>, [CoFi85]) is used to ensure that this constraint is met. This protocol denoted by scheme S 2 is given in the four phases detailed in figures 2.1-2.4.
Reference: [MaAd78] <author> Manders, K. and Adleman, L. </author> <title> "NP-Complete Decision Problems for Binary Quadratics." </title> <journal> J. Comput. System Sci. </journal> <volume> 16, </volume> <year> (1978), </year> <pages> 168-184. </pages>
Reference-contexts: The problem of deciding r th residues is certainly in N P, but it would be very nice to show that it is N P-complete | yielding among other things the corollary that factoring is N P-hard. Manders and Adelman in <ref> [MaAd78] </ref> have shown that the problem is in fact N P-complete (even when r is 2) when the size of the potential r th roots is constrained.
Reference: [Mer83] <author> Merritt, M. </author> <title> "Cryptographic Protocols." </title> <type> Ph.D. </type> <institution> Thesis presented at Georgia Institute of Technology (Feb. </institution> <year> 1983). </year>
Reference: [Sha79] <author> Shamir, A. </author> <title> "How to Share a Secret." </title> <journal> Comm. ACM 22, </journal> <volume> 11 (Nov. </volume> <year> 1979), </year> <pages> 612-613. </pages>
Reference-contexts: Although the entire election scheme is to be embedded within a secret sharing scheme, the modifications to scheme S 2 which are required in order to achieve this embedding are surprisingly minor. Shamir's threshold scheme <ref> [Sha79] </ref> is particularly well suited for this purpose. The key difference between the new scheme and scheme S 2 is in the definition of a C-vote.
Reference: [Yao82] <author> Yao, A. </author> <title> "Protocols for Secure Computations." </title> <booktitle> Proc. 23 rd IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Chicago, IL (Nov. </address> <year> 1982), </year> <pages> 160-164. </pages>
References-found: 11

