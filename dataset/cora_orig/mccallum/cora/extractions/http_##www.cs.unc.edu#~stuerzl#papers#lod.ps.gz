URL: http://www.cs.unc.edu/~stuerzl/papers/lod.ps.gz
Refering-URL: http://www.cs.unc.edu/~stuerzl/publications.html
Root-URL: http://www.cs.unc.edu
Email: [schauer stuerzlinger]@gup.uni-linz.ac.at  
Phone: Tel.: +43 732 2468 9228  
Title: Generating Multiple Levels of Detail from Polygonal Geometry Models  
Author: G. Schauer and W. Strzlinger 
Address: Altenbergerstrasse 69, A-4040 Linz, Austria/Europe  
Affiliation: GUP Linz Johannes Kepler University Linz  
Abstract: This paper presents a new method for solving the following problem: Given a polygonal model of some geometric object generate several more and more approximative representations of this object containing less and less polygons. The idea behind the method is that small detail in the model is represented by many spatially close points. A hierarchical clustering algorithm is used to generate a hierarchy of clusters from the vertices of the objects polygons. The coarser the approximation the more points are found to lie within one cluster of points. Each cluster is replaced by one representative point and polygons are reconstructed from these points. A static detail elision algorithm was implemented to prove the practicability of the method. This paper shows examples of approximations generated from different geometry models, pictures of scenes rendered by a detail elision algorithm and timings of the method at work.
Abstract-found: 1
Intro-found: 1
Reference: [DeHa91] <editor> Simplification of Objects Rendered - Polygonal Approximations. Michael J. DeHaemer, Jr. and Michael J. Zyda. </editor> <booktitle> Computers & Graphics Vol. </booktitle> <volume> 15, </volume> <pages> No.2 pp 175 - 184, </pages> <year> 1991. </year>
Reference-contexts: For each triangle mesh found they optimize the energy function by slight changes to the vertex positions of the triangle mesh. The method is fairly complex and demanding as far as computational and implementational efforts are concerned. DeHaemer et al. <ref> [DeHa91] </ref> have presented two methods for approximating or simplifying meshes of quadrilaterals topologically equivalent to regular grids. The first method applies adaptive subdivision to trial polygons which are recursively divided into smaller polygons until some fitting criterion is met.
Reference: [Funk93] <institution> Adaptive Display Algorithm for Interactive Frame Rates During Visualization of Complex Virtual Environments. Thomas A. </institution> <note> Funkhouser, </note> <editor> Carlo H. Squin. </editor> <booktitle> SIGGRAPH 93, Computer Graphics Proceedings, </booktitle> <pages> pp 247-254, </pages> <year> 1993. </year>
Reference-contexts: Primarily for performance reasons these algorithms choose one of the approximative representations of the objects in the course of their work thereby trading quality for speed. Examples are the visualization of complex virtual environments <ref> [Funk93] </ref>, 3D graphics toolkits [Rolf94] or indirect illumination calculations [Rush93]. <p> Second we want to build a new mode into our viewer which guarantees a constant frame rate through the method described by Funkhouser et al. <ref> [Funk93] </ref>. We hope to outdo their results in variations in the frame rate as our object models are well structured and probably allow faster and better estimation of the rendering complexity of the visible objects.
Reference: [Hopp94] <author> Piecewise Smooth Surface Reconstruction. Hugues Hoppe, Tony DeRose, Tom Duchamp, Mark Halstead, Hubert Jun, Jon McDonald, Jean Schweitzer, Werner Stuetzle. </author> <booktitle> SIG-GRAPH 94, Computer Graphics Proceedings, </booktitle> <pages> pp 295-302, </pages> <year> 1994. </year>
Reference-contexts: However, these algorithms are very costly as far as computational complexity is concerned and are less suitable for geometry models of CAD software <ref> [Hopp94] </ref>. Other methods filter large triangle or polygon meshes with the aim to retain the detail of the digitizing process but do not generate several LODs (see e.g. [DeHa91],[Turk92],[Schr92]). <p> The program allows navigation through the environment as well as a close inspection of the objects LODs generated by the method. 2 Previous work Hoppe et al. <ref> [Hopp94] </ref> have presented a method to solve the following problem: Starting from a set of three dimensional data points and an initial triangular mesh they produce a mesh of the same topology which fits the data well and has a smaller number of vertices.
Reference: [Murt83] <editor> A Survey of Recent Advances in Hierarchical Clustering Algorithms. F. </editor> <booktitle> Murtagh.The Computer Journal, </booktitle> <volume> Vol. 26, No. 4, </volume> <year> 1983. </year>
Reference-contexts: The general algorithm for hierarchical clustering may be described as follows (although very different algorithms exist for the same hierarchical clustering method <ref> [Murt83] </ref>): Step 1 Examine all inter-point dissimilarities, and form a cluster from the two closest points. Step 2 Replace the two points clustered by a representative point. Step 3 Return to Step 1 treating constructed clusters the same as remaining points until only one cluster remains. <p> Each time Step 2 is performed the nearest neighbour data is updated at the cost of on the average yielding a total complexity of the algorithm of . As stated in the paper of Murtagh <ref> [Murt83] </ref> hierarchical clustering can be implemented with a complexity of less than , so a g + -= O N ( ) O N Nlog ( ) O N Nlog ( ) O N ( ) 2 O N ( ) 5 future implementation should incorporate such optimizations or one of <p> Table 1 Statistics for the new method 9 Future Work As already mentioned briey we are investigating at two areas of further research. First we want to further speed up the hierarchical clustering algorithm by making best use of the optimizations described by Murtagh <ref> [Murt83] </ref>. This work will decrease the order of complexity of the clustering algorithm below O (n 2 ) allowing to deal with more complex object models in less time.
Reference: [Rolf94] <author> IRIS Performer: </author> <title> A High Performance Multiprocessing Toolkit for Real-Time 3D Graphics. </title> <editor> John Rohlf, James Helman. </editor> <booktitle> SIGGRAPH 94, Computer Graphics Proceedings, </booktitle> <pages> pp 381-394, </pages> <year> 1994. </year>
Reference-contexts: Primarily for performance reasons these algorithms choose one of the approximative representations of the objects in the course of their work thereby trading quality for speed. Examples are the visualization of complex virtual environments [Funk93], 3D graphics toolkits <ref> [Rolf94] </ref> or indirect illumination calculations [Rush93].
Reference: [Ross92] <editor> Multi-Resolution 3D Approximations for Rendering Complex Scenes. J. R. Rossignac, P. </editor> <address> Borrel. </address> <institution> Computer Science, IBM T.J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10598, </address> <month> 2 </month> <year> 1992. </year>
Reference-contexts: Moreover the approaches are quite complex to implement and computationally intensive as they all involve re-triangulation and multiple passes over the polygon mesh. It has been pointed out by a reviewer that the proposed method is similar to the method introduced by Rossignac et al. <ref> [Ross92] </ref>. Rossignac uses a regular grid to find points in close proximity which is disadvantageous in the case of greatly differing object sizes.
Reference: [Rush93] <editor> Geometric Simplification for Indirect Illumination Calculations. Holly Rushmeier, Charles Patterson, Aravindan Veerasamy. </editor> <booktitle> Proceedings of Graphics Interface 93, </booktitle> <year> 1993. </year>
Reference-contexts: Primarily for performance reasons these algorithms choose one of the approximative representations of the objects in the course of their work thereby trading quality for speed. Examples are the visualization of complex virtual environments [Funk93], 3D graphics toolkits [Rolf94] or indirect illumination calculations <ref> [Rush93] </ref>. In visualization of virtual environments LODs allow to retain a constant frame rate during the navigation through the environment by adapting the detail of the visible objects to the complexity of the visible part of the scene and the graphics performance of the used hardware.
Reference: [Snea73] <editor> Numerical Taxonomy; The Principles and Practice of Numerical Classification. Peter H. A. Sneath, Robert R. Sokal. Publisher W. H. </editor> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1973. </year>
Reference-contexts: In the first stage the clustering algorithm generates a hierarchy of clusters from the points in the model. Different algorithms exist to generate such a hierarchy - the centroid or unweighted group pair method <ref> [Snea73] </ref> is used in the current implementation. Depending on the desired degree of approximation the method traverses the calculated cluster tree to a specific depth and either keeps the geometry model or replaces parts by coarser approximations.
Reference: [Turk92] <editor> Re-Tiling Polygonal Surfaces. Greg Turk. </editor> <booktitle> SIGGRAPH 92, Computer Graphics Proceedings, </booktitle> <pages> pp 55-64, </pages> <year> 1992. </year>
Reference-contexts: Growing the polygon stops when the fitting criterion is violated. These methods work well for large regular meshes and achieves reductions in polygon numbers down to 10% for sufficiently smooth surfaces. 3 Turks re-tiling method <ref> [Turk92] </ref> is best suited for polygonal meshes which represent curved surfaces. It generates an immediate model containing both the vertices from the original model and new points which are to become the vertices of the re-tiled surface.
Reference: [Schr92] <editor> Decimation of Triangle Meshes. William J. Schroeder, Jonathan A. Zarge, William E. Lorensen. </editor> <booktitle> SIGGRAPH 92, Computer Graphics Proceedings, </booktitle> <pages> pp 65-70, </pages> <year> 1992. </year>
Reference-contexts: It is worth mentioning that models containing nested levels of vertex densities can be generated and that smooth interpolation between these levels is possible. Schroeder et al. <ref> [Schr92] </ref> deal with decimation of triangle meshes in the following way: In multiple passes over an existing triangle mesh local geometry and topology is used to remove vertices which pass a distance or angle criterion. The holes left by the vertex removal are patched using a local triangulation process.
References-found: 10

