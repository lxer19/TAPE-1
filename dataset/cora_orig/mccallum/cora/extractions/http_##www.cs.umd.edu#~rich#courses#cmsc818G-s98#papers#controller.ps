URL: http://www.cs.umd.edu/~rich/courses/cmsc818G-s98/papers/controller.ps
Refering-URL: http://www.cs.umd.edu/~rich/courses/cmsc818G-s98/resources.html
Root-URL: 
Title: Streamlinig Real-Time Controller Design: From Performance Specifications to End-to-End Timing Constraints  
Author: Minsoo Ryu, Seongsoo Hong Manas Saksena 
Address: Seoul, 151-742, Korea Montreal, PQ H3G 1M8, Canada  
Affiliation: School of Electrical Eng. and ERC-ACI Dept. of Computer Seoul National University Concordia University  
Abstract: This paper presents a control theoretic approach to optimizing end-to-end timing constraints subject to the performance requirements and the schedulability constraint of a real-time control system. The control performance is specified in terms of control output responses such as steady state error, maximum overshoot, settling time, and rise time; and the end-to-end timing constraints include loop processing periods and input-to-output latency. Our approach includes a generic real-time controller model on which our analysis is performed, and a heuristic optimization algorithm which derives end-to-end timing constraints. We apply the approach to the design of an embedded real-time controller, and validate it through an experimental study using simulation. Our approach contributes to both the control and real- time areas: (1) it allows control engineers to take into consideration the effect of scheduling latency and sampling periods at the early stage of system design; and (2) it makes it possible to streamline the design of real-time control systems, since temporal requirements are derived in an automatic manner. Our approach can be effectively used with the period calibration method [2, 8, 4] as its front-end. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Bettati and J. W. S. Liu. </author> <title> End-to-end scheduling to meet deadlines in distributed systems. </title> <booktitle> In In Proceedings of the 12th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 452-459, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: For example, C i may include a sampling task, an input task which generates a reference input, a computation task which executes the control algorithm, and an output task which issues output commands to the controlled system <ref> [1] </ref>. They form a chain of tasks, as shown in Figure 2. Each control loop C i has two kinds of timing constraints: (1) maximum loop processing period M axP i , and (2) maximum input-to-output latency M axL i .
Reference: [2] <author> R. Gerber, S. Hong, and Manas Saksena. </author> <title> Guaranteeing real-time requirements with resource-based calibration of periodic processes. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 21(7) </volume> <pages> 579-592, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: In current engineering practice, real-time controllers are designed to optimize some performance measure, neglecting the availability of computing resources on the target platform <ref> [2, 9] </ref>. When a controller is hosted on a target platform, timing flaws may be detected due to insufficient computing resources. This results in a costly process of fine-tuning the controller's design. <p> A much better approach is to incorporate the availability of computing resources into the design of the controller by utilizing the results of real- time scheduling theory. Recently, several researchers have investigated interactions between system performance and task scheduling in the context of real-time system design <ref> [2, 8, 9] </ref>. In [2, 8], we developed a design methodology which allows system designers to consider the schedulability from the early stages of system design. <p> Recently, several researchers have investigated interactions between system performance and task scheduling in the context of real-time system design [2, 8, 9]. In <ref> [2, 8] </ref>, we developed a design methodology which allows system designers to consider the schedulability from the early stages of system design. <p> We refer to this method as the period calibration method (PCM) <ref> [2, 8, 4] </ref>. While the period calibration method brings a much needed integration, it is only half a step, since the end- to-end timing constraints are not a genuine starting point in system design, but another set of artifacts which are derived from the system's performance requirements. <p> The algorithm is also shown pictorially in Figure 7. Since the algorithm makes use of the period calibration method, we briefly review the method. For a more comprehensive discussion, readers are referred to <ref> [2, 7] </ref>. Overview of the Period Calibration Method.
Reference: [3] <author> E. I. Jury. </author> <title> Theory and Application of the z-Transform Method. NY: </title> <editor> R. E. </editor> <publisher> Krieger Publishing Co., </publisher> <year> 1973. </year>
Reference: [4] <author> N. Kim, M. Ryu, S. Hong, M. Saksena, C. H. Choi, and H. Shin. </author> <title> Visual assessment of a real-time system design: A case study on a cnc controller. </title> <booktitle> In Proceedings of IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 300-310. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> December </month> <year> 1996. </year>
Reference-contexts: We refer to this method as the period calibration method (PCM) <ref> [2, 8, 4] </ref>. While the period calibration method brings a much needed integration, it is only half a step, since the end- to-end timing constraints are not a genuine starting point in system design, but another set of artifacts which are derived from the system's performance requirements. <p> Since the plant undergoes changes in its state, while the controller is generating a new control command, the input-to-output latency has a critical effect on control performance <ref> [4] </ref>. Thus, it is very important to simultaneously consider latency and sampling periods. In fact, there is a tradeoff involved here; a high latency may be compensated by a tight sampling period, or alternatively, a large sampling period may be compensated by a tight latency. <p> The controller was implemented on top of our own real-time kernel called SNU-ROS (Seoul National University Real- time OS), which afforded tight control over latencies and periods. This CNC controller was earlier used in our previous study <ref> [4] </ref> to validate the period calibration method. This study highlighted the benefits of PCM, and showed the effects of sampling period, output jitter, and input-to-output latency on control quality. Using this CNC controller, we compare the results of the analytical model with the simulated controller. <p> For the purpose of presentation, we assume that each control loop C i is implemented with an independent process. This does not impose any serious restrictions, as long as PCM is used to implement the controllers <ref> [4] </ref>. Note that PCM can handle interactions between tasks in distinct control loops. Control loop C i consists of m i tasks t i1 ; t i2 ; : : : ; t im i . <p> As in our earlier work <ref> [4] </ref>, we have chosen a CNC controller for this purpose, since it is a multi-rate control system possessing hard real-time properties. The CNC controller we design has two axes (X axis and Y axis) of motion which are controlled by two control loops C x and C y , respectively. <p> We have built a realistic CNC simulator with two Pen- tium PCs, as in <ref> [4] </ref>. One PC runs the controller tasks of the X axis control loop on top of SNU-ROS, and the other executes a plant simulator which emulates the CNC motor on MS-DOS. SNU-ROS is a light kernel which allows for fast context switches (5 s on the 133 MHz Pentium processor).
Reference: [5] <author> K. Ogata. </author> <title> Discrete-Time Control Systems. </title> <address> PrenticeHall, </address> <year> 1987. </year>
Reference-contexts: Steady state error occurs due to various factors such as disturbance, jitter, digitization effects, etc. In control engineering, the transient state response is characterized by maximum overshoot M peak , rise time T rise and settling time T set <ref> [5] </ref>. The maximum overshoot M peak is defined as the maximum peak value of the output response. It is often expressed as a percentage. Rise time T rise is the time required for the output response to reach 100% of its input value from the beginning.
Reference: [6] <author> C. L. Phillips and H. T. Nagle. </author> <title> Digital Control System Analysis and Design. </title> <publisher> Prentice-Hall, </publisher> <year> 1995. </year>
Reference-contexts: If the period is infinitely small, the digital controller works as if it were an analog controller. In general, the smaller sampling period leads to the better performance. Figure 5 shows the schematic diagram of the digital control system corresponding to the analog controller shown in Figure 4 <ref> [6] </ref>. The most noticeable difference between those two schematic diagrams is the existence of ZOH (zero order hold). Whereas the plant needs continuous data, a digital controller periodically produces only discrete data. Thus, the ZOH constantly holds data for the entire sampling period.
Reference: [7] <author> M. Ryu and S. Hong. </author> <title> A period assignment algorithm for embedded digital controllers. </title> <type> Technical Report SNUEE-TR-96-1, </type> <institution> School of Electrical Engineering, Seoul National University, Korea, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: The algorithm is also shown pictorially in Figure 7. Since the algorithm makes use of the period calibration method, we briefly review the method. For a more comprehensive discussion, readers are referred to <ref> [2, 7] </ref>. Overview of the Period Calibration Method. <p> Step 2 involves solving a nonlinear optimization problem which is conjectured to be an NP-hard problem. In order to reduce the amount of computation needed for the optimization problem, we use a polynomial time approximation algorithm developed in <ref> [7] </ref>.
Reference: [8] <author> M. Saksena and S. Hong. </author> <title> Resource conscious design of distributed real-time systems: An end-to-end approach. </title> <booktitle> In Proceedings, IEEE International Conference on Engineering of Complex Computer Systems, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: A much better approach is to incorporate the availability of computing resources into the design of the controller by utilizing the results of real- time scheduling theory. Recently, several researchers have investigated interactions between system performance and task scheduling in the context of real-time system design <ref> [2, 8, 9] </ref>. In [2, 8], we developed a design methodology which allows system designers to consider the schedulability from the early stages of system design. <p> Recently, several researchers have investigated interactions between system performance and task scheduling in the context of real-time system design [2, 8, 9]. In <ref> [2, 8] </ref>, we developed a design methodology which allows system designers to consider the schedulability from the early stages of system design. <p> We refer to this method as the period calibration method (PCM) <ref> [2, 8, 4] </ref>. While the period calibration method brings a much needed integration, it is only half a step, since the end- to-end timing constraints are not a genuine starting point in system design, but another set of artifacts which are derived from the system's performance requirements.
Reference: [9] <author> D. Seto, J. P. Lehoczky, L. Sha, and K. G. Shin. </author> <title> On task schedulability in real-time control systems. </title> <booktitle> In Proceedings of IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 13-21. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> December </month> <year> 1996. </year>
Reference-contexts: In current engineering practice, real-time controllers are designed to optimize some performance measure, neglecting the availability of computing resources on the target platform <ref> [2, 9] </ref>. When a controller is hosted on a target platform, timing flaws may be detected due to insufficient computing resources. This results in a costly process of fine-tuning the controller's design. <p> A much better approach is to incorporate the availability of computing resources into the design of the controller by utilizing the results of real- time scheduling theory. Recently, several researchers have investigated interactions between system performance and task scheduling in the context of real-time system design <ref> [2, 8, 9] </ref>. In [2, 8], we developed a design methodology which allows system designers to consider the schedulability from the early stages of system design. <p> This is illustrated in Figure 1, which shows how a design would proceed with the period calibration method. As shown in the figure, there is an ad hoc step of translating the performance specifications for a given system model into a set of timing constraints. In <ref> [9] </ref>, Seto, Lehoczky, Sha, and Shin addressed this problem. They proposed an algorithm that translates a given system performance index into sampling periods considering schedulability among tasks running with preemptive priority scheduling. <p> In this paper, we built upon our previous work to address some of these problems. In particular, we take the approach presented in <ref> [9] </ref> of bringing real-time scheduling into the early stage of real-time controller design. More specifically, we present our initial attempt at formalizing the ad hoc step shown in Figure 1 by considering a realistic controller model, and incorporating latency as a variable in addition to sampling periods.
References-found: 9

