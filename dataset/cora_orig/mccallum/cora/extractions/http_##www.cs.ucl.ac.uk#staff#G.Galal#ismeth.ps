URL: http://www.cs.ucl.ac.uk/staff/G.Galal/ismeth.ps
Refering-URL: http://www.cs.ucl.ac.uk/staff/G.Galal/publications.html
Root-URL: http://www.cs.ucl.ac.uk
Email: Email: Galal@acm.org  Email: Ray.Paul@Brunel.ac.uk  
Title: From the Prescriptive to the Analytic: A New Direction for Information Systems Engineering Methodology  
Author: Galal H Galal Ray J Paul 
Address: College London, Gower Street, London WC1E 6BT, United Kingdom.  Uxbridge, Middlesex UB8 3LJ United Kingdom  
Affiliation: Software Systems Engineering Group Department of Computer Science University  Department of Information Systems and Computing Brunel University  
Abstract: Information systems engineering (ISE) methodology has been so far predominated by an overly normative/ prescriptive view of what methodology should be. This has been to the detriment of both the contextual fit and dynamic evolvement of an information system. This paper argues for the analytic emphasis to supplant the prescriptive one, so as to enable the concept of continuous design needed for the dynamic evolvement of information systems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Avison, D. E., & Wood-Harper, A. T. </author> <year> (1990). </year> <title> Multiview - An Exploration in Information Systems Development. </title> <publisher> Oxford: Alfred Waller. </publisher>
Reference: <author> Boehm, B. W. </author> <year> (1988). </year> <title> A Spiral Model for Software Development and Enhancement. </title> <booktitle> Computer(May 1988), </booktitle> <pages> 61-72. </pages>
Reference-contexts: Independently from content models, engineering process models that depart from assuming apriori full specification have been proposed. Some of the best known are the Prototyping model (Brooks, 1982; Carey, 1990), the Evolutionary model (Gilb, 1988), and the Spiral model <ref> (Boehm, 1988) </ref>. All these models rely, to varying degrees, on a limited amount of system engineering, a prototype or a small increment, deploying and evaluating it, and using the result of the evaluation to guide further system engineering efforts, such as requirements, architecture, interface design, performance attributes, and so on.
Reference: <author> Brooks, F. P. </author> <year> (1982). </year> <title> The Mythical Man-month, </title> <booktitle> Essays on Software Engineering. </booktitle> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> Carey, J. M. </author> <year> (1990). </year> <title> Prototyping: Alternative systems development methodology. </title> <journal> Information and Software Technology, </journal> <volume> 32(2), </volume> <pages> 119-126. </pages>
Reference: <author> Checkland, P. B., & Scholes, S. </author> <year> (1990). </year> <title> S o f t Systems Methodology in Action. </title> <address> Chichester: </address> <publisher> Wiley. </publisher>
Reference: <author> Coad, P., & Yourdon, E. </author> <year> (1991). </year> <title> ObjectOriented Design. </title> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice-Hall. </publisher>
Reference: <author> Downs, E., Clare, P., & Coe, I. </author> <year> (1992). </year> <title> Structured Systems Analysis and Design Method, Application and Context (2nd ed.). </title> <address> Hemel Hempstead, UK: </address> <publisher> Prentice Hall International. </publisher>
Reference: <author> Galal, G. H. </author> <year> (1996). </year> <title> An Interpretive Approach to Information Systems Engineering - Using the Grounded Systems Engineering Methodology. </title> <type> PhD, Unpublished, </type> <institution> Brunel University. </institution>
Reference-contexts: needs its own change-management efforts! A Way Forward Our particular approach to address the concerns that we outline above taps the potential of the Grounded Theory method (Glaser & Strauss, 1967), as an interpretive framework for developing dynamic views of putative information systems, against which system increments may be evaluated <ref> (Galal, 1996) </ref>. <p> framework (GSEM, the Grounded Systems Engineering Methodology) relies predominantly on qualitative data to construct theories that express predictions about the system, while being at the same time interpretive from the paradigmatic point of view, since situation-bound interpretations can be easily incorporated into the type of theories that can be developed <ref> (Galal, 1996) </ref>. We hope that our framework will be the subject of future writings of relevance to the practice-oriented, as well as the philosophy-oriented segments of the information systems engineering community.
Reference: <author> Galal, G. H. </author> <year> (1997). </year> <title> An IssueDriven Perspective on Information Systems Engineering: The Technical Dimension of the Debate. </title> <editor> In J. N. D. Gupta (Ed.), </editor> <booktitle> Third Americas Conference on Information Systems, </booktitle> <pages> (pp. 303-305). </pages> <address> Indianapolis, </address> <institution> Indiana USA: Association for Information Systems. </institution>
Reference-contexts: Introduction In this paper, we progress our issue-oriented discussion of methodology (Johnson & Galal, 1993), <ref> (Galal, 1997) </ref> a step further. This time, we are concerned with the epistemological emphasis of information systems engineering methodology. <p> All while focusing on macro, architectural aspects of the systems being developed: semantic quality and fit; overall, emergent system effects; and dynamic potential. The techniques required should also pay particular attention to the qualitative data that characterise the dynamic contexts of the systems being engineered <ref> (Galal, 1997) </ref>, perhaps using some scenario or vision-oriented representations. However, the analytic mechanisms used need to be compatible with the technical models being developed of the system, for example by utilising the same concepts used the requirements' model.
Reference: <author> Gane, C., & Sarson, T. </author> <year> (1979). </year> <title> Structured Systems Analysis: Tools and Techniques. </title> <address> New York: </address> <publisher> Prentice-Hall. </publisher>
Reference: <author> Gilb, T. </author> <year> (1988). </year> <booktitle> Principles of Software Engineering Management. </booktitle> <address> Wokingham: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: The processual side is what may be termed the engineering process model. Independently from content models, engineering process models that depart from assuming apriori full specification have been proposed. Some of the best known are the Prototyping model (Brooks, 1982; Carey, 1990), the Evolutionary model <ref> (Gilb, 1988) </ref>, and the Spiral model (Boehm, 1988).
Reference: <author> Glaser, B. G., & Strauss, A. L. </author> <year> (1967). </year> <title> T h e Discovery of Grounded Theory - Strategies for Qualitative Research. </title> <publisher> London: Weidenfeld and Nicolson. </publisher>
Reference-contexts: This philosophy requires changes in the mindset and attitudes of both the systems engineers and clients, which needs its own change-management efforts! A Way Forward Our particular approach to address the concerns that we outline above taps the potential of the Grounded Theory method <ref> (Glaser & Strauss, 1967) </ref>, as an interpretive framework for developing dynamic views of putative information systems, against which system increments may be evaluated (Galal, 1996).
Reference: <author> Hillier, B. </author> <year> (1996). </year> <title> Space is the machine - A configurational theory of architecture. </title> <publisher> Cambridge: Cambridge University Press. </publisher>
Reference: <author> Hirschheim, R., & Klein, H. K. </author> <year> (1989). </year> <title> Four Paradigms of Information Systems Development. </title> <journal> Communications of the ACM, </journal> <volume> 32(10), </volume> <pages> 1199-1216. </pages>
Reference-contexts: This is an issue that lies beyond the fundamental ontological assumptions of information systems methodology <ref> (see Hirschheim & Klein, 1989) </ref>, but is also based on it. We explain why an analytic emphasis is more suited to the highly dynamic contexts which most substantial information systems find they need to satisfy.
Reference: <author> Jackson, M. </author> <year> (1983). </year> <title> Systems Development. </title> <publisher> London: Prentice-Hall International. </publisher>
Reference: <author> Johnson, L., & Galal, G. H. </author> <year> (1993). </year> <title> KBS Methodologies: Principles and Misconceptions. </title> <journal> Systems Research and Information Science, </journal> <volume> 6(2), </volume> <pages> 69-83. </pages>
Reference-contexts: Introduction In this paper, we progress our issue-oriented discussion of methodology <ref> (Johnson & Galal, 1993) </ref>, (Galal, 1997) a step further. This time, we are concerned with the epistemological emphasis of information systems engineering methodology.
Reference: <author> Kanellis, P., & Paul, R. J. </author> <year> (1996). </year> <note> Will Information Systems Continue to Disappoint? In J. </note> <editor> M. Carey (Ed.), </editor> <booktitle> the Americas Conference on Information Systems, </booktitle> <pages> (pp. 752-754). </pages> <institution> Katz Graduate School of Business, University of Pittsburgh, Phoenix, Arizona: Association for Information Systems. </institution>
Reference-contexts: These fixed-point oriented view neglect the fact that complex information systems exist in highly dynamic and fast-changing contexts. Organisations are dynamic entities, which necessitated that any technological systems hosted by them will be judged against highly dynamic realities <ref> (Kanellis & Paul, 1996) </ref>. Unfortunately, the prescriptive/ normative orientation that predominate most current methodology and process model proposals do not deal adequately with these realities.
Reference: <author> Monarchi, D. E., & Puhr, G. I. </author> <year> (1992). </year> <title> A research typology for objectoriented analysis and design. </title> <journal> Communications of the ACM, </journal> <volume> 35(9), </volume> <pages> 35-47. </pages>
Reference: <author> Paul, R. J. </author> <year> (1993). </year> <title> Dead Paradigms for Living Systems. </title> <editor> In E. A. Whitley (Ed.), </editor> <booktitle> 1st European Conference on Information Systems, </booktitle> <month> 29-30 March </month> <year> 1993, </year> <pages> (pp. 250-255). </pages> <month> Henley, </month> <title> UK: Operational Research Society. End notes 1 This should be a minimal response to colleagues and amply experienced practitioners who always remind us that methodologies don't work because you can't decide on all of the system's requirements and architectures at the start: this is not a necessary consequence of adopting a methodology. </title>
References-found: 19

