URL: ftp://ftp.cs.jhu.edu/pub/subodh/papers/backface.ps.Z
Refering-URL: http://www.cs.jhu.edu/~subodh/research/abs.vis.html
Root-URL: http://www.cs.jhu.edu
Email: fkumar,manocha,garrett,ling@cs.unc.edu  
Title: Hierarchical Back-Face Computation  
Author: Subodh Kumar Dinesh Manocha William Garrett Ming Lin 
Address: Chapel Hill, NC, USA.  
Affiliation: Department of Computer Science University of North Carolina  
Abstract: We present a sub-linear algorithm to compute the set of back-facing polygons in a polyhedral model. The algorithm partitions the model into hierarchical clusters based on the orientations and positions of the polygons. As a pre-processing step, the algorithm constructs spatial decompositions with respect to each cluster. For a sequence of back-face computations, the algorithm exploits the coherence in view-point movement to efficiently determine if it is in front of or behind a cluster. Due to coherence, the algorithm's performance is linear in the number of clusters on average. We have applied this algorithm to speed up the rendering of polyhedral models. On average, we are able to cull almost half the polygons. The algorithm accounts for 5 10% of the total CPU time per frame on an SGI Indigo2 Extreme. The overall frame rate is improved by 40 75% as compared to the standard back-face culling implemented in hardware.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Airey, J. Rohlf, and F. Brooks. </author> <title> Towards image realism with interactive update rates in complex virtual building environments. </title> <booktitle> In Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 41-50, </pages> <year> 1990. </year>
Reference-contexts: Obscuration Culling: These include techniques based on partitioning the model into cells and portals and computing the partial visibility set of polygons from each cell <ref> [1, 17] </ref>. A hierarchical Z-buffer algorithm combining spatial and temporal coherence with hierarchical structures was presented in [9]. Back-face Culling: Back-face culling is a particular form of occlusion culling used on solid models that can be easily combined with other visibility culling methods.
Reference: [2] <author> M. Bern, D. Dobkin, D. Eppstein, and R. Grossman. </author> <title> Visibility with a moving point of view. </title> <journal> Algorithmica, </journal> <volume> 11 </volume> <pages> 360-78, </pages> <year> 1994. </year>
Reference-contexts: Finally we discuss implementation and performance in Section 7. 2 Previous Work Since the early days of image synthesis, visible surface computation has been a central geometric problem. A number of algorithms have been proposed based on spatial partitioning, hierarchical representations, Z-buffer, list-priority, scan-line, area-subdivision and polygon clusters <ref> [2, 7, 8, 15] </ref>. Schumaker [13] and Newell [11] were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper [15], Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence.
Reference: [3] <author> W. Bouma and G. Vanecek. </author> <title> Velocity-based collision detection. </title> <editor> In A. Paeth, editor, </editor> <booktitle> Graphics Gems V, </booktitle> <pages> pages 380-385, </pages> <publisher> Academic Press, </publisher> <year> 1995. </year>
Reference-contexts: For example, a polygon renderer can skip drawing any polygon that is back-facing. This technique, known as back-face culling, is widely used to improve the frame rate. Many graphics systems implement it in hardware. Similar techniques are also used by algorithms for shadow generation [5] and collision detection <ref> [3] </ref>. At the same time, these algorithms can be used to compute the front-facing polygons, and thus the silhouettes, which in turn are useful for visibility clustering in radiosity computations among other things.
Reference: [4] <author> J.H. Clark. </author> <title> Hierarchical geometric models for visible surface algorithms. </title> <journal> Communications of the ACM, </journal> 19(10) 547-554, 1976. 
Reference-contexts: To handle such large data-sets, three kinds of visibility approaches have been used along with Z-buffering: View-Frustum Culling: The technique of view-frustum culling uses spatial data structures such as oct-trees and hierarchical traversals of such structures to cull out portions of the model not lying in the current view volume <ref> [4, 7] </ref>. Obscuration Culling: These include techniques based on partitioning the model into cells and portals and computing the partial visibility set of polygons from each cell [1, 17]. A hierarchical Z-buffer algorithm combining spatial and temporal coherence with hierarchical structures was presented in [9].
Reference: [5] <author> F. C. Crow. </author> <title> Shadow algorithms for computer graphics. </title> <journal> ACM Computer Graphics, </journal> <volume> 11(3) </volume> <pages> 242-248, </pages> <year> 1977. </year>
Reference-contexts: For example, a polygon renderer can skip drawing any polygon that is back-facing. This technique, known as back-face culling, is widely used to improve the frame rate. Many graphics systems implement it in hardware. Similar techniques are also used by algorithms for shadow generation <ref> [5] </ref> and collision detection [3]. At the same time, these algorithms can be used to compute the front-facing polygons, and thus the silhouettes, which in turn are useful for visibility clustering in radiosity computations among other things.
Reference: [6] <author> D. P. Dobkin and D. G. Kirkpatrick. </author> <title> Fast detection of polyhedral intersection. </title> <booktitle> In Proc. 9th In-ternat. Colloq. Automata Lang. Program., volume 140 of Lecture Notes in Computer Science, </booktitle> <pages> pages 154-165. </pages> <publisher> Springer-Verlag, </publisher> <year> 1982. </year>
Reference-contexts: As a result, any point location query can take time proportional to the number of bounding planes, which is O (m); m being the number of polygons in the cluster. In computational geometry literature, algorithms with logarithmic asymptotic complexity are known for point location in convex sets <ref> [6] </ref>. However, their space requirements and constant factors are rather high. In this section, we present a simple algorithm to decompose BackRegion, F rontRegion and MixedRegion into Query cells. Each Query cell is a convex regions bounded by three planes.
Reference: [7] <author> J. Foley, A. Van Dam, J. Hughes, and S. </author> <title> Feiner. </title> <booktitle> Computer Graphics: Principles and Practice. </booktitle> <publisher> Addison Wesley, </publisher> <address> Reading, Mass., </address> <year> 1990. </year>
Reference-contexts: Finally we discuss implementation and performance in Section 7. 2 Previous Work Since the early days of image synthesis, visible surface computation has been a central geometric problem. A number of algorithms have been proposed based on spatial partitioning, hierarchical representations, Z-buffer, list-priority, scan-line, area-subdivision and polygon clusters <ref> [2, 7, 8, 15] </ref>. Schumaker [13] and Newell [11] were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper [15], Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence. <p> To handle such large data-sets, three kinds of visibility approaches have been used along with Z-buffering: View-Frustum Culling: The technique of view-frustum culling uses spatial data structures such as oct-trees and hierarchical traversals of such structures to cull out portions of the model not lying in the current view volume <ref> [4, 7] </ref>. Obscuration Culling: These include techniques based on partitioning the model into cells and portals and computing the partial visibility set of polygons from each cell [1, 17]. A hierarchical Z-buffer algorithm combining spatial and temporal coherence with hierarchical structures was presented in [9].
Reference: [8] <author> H. Fuchs, Z. Kedem, and B. Naylor. </author> <title> On visible surface generation by a priori tree structures. </title> <booktitle> In Proc. of ACM Siggraph, </booktitle> <volume> volume 14, </volume> <pages> pages 124-133, </pages> <year> 1980. </year>
Reference-contexts: Finally we discuss implementation and performance in Section 7. 2 Previous Work Since the early days of image synthesis, visible surface computation has been a central geometric problem. A number of algorithms have been proposed based on spatial partitioning, hierarchical representations, Z-buffer, list-priority, scan-line, area-subdivision and polygon clusters <ref> [2, 7, 8, 15] </ref>. Schumaker [13] and Newell [11] were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper [15], Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence.
Reference: [9] <author> N. Greene, M. Kass, and G. Miller. </author> <title> Hierarchical z-buffer visibility. </title> <booktitle> In Proc. of ACM Siggraph, </booktitle> <pages> pages 231-238, </pages> <year> 1993. </year>
Reference-contexts: Obscuration Culling: These include techniques based on partitioning the model into cells and portals and computing the partial visibility set of polygons from each cell [1, 17]. A hierarchical Z-buffer algorithm combining spatial and temporal coherence with hierarchical structures was presented in <ref> [9] </ref>. Back-face Culling: Back-face culling is a particular form of occlusion culling used on solid models that can be easily combined with other visibility culling methods. It has recently been extended to spline patches by computing a bound on the normals and Gauss map of a patch [10, 14].
Reference: [10] <author> S. Kumar and D. Manocha. </author> <title> Hierarchical visibility culling for spline models. </title> <booktitle> In Proceedings of Graphics Interface, </booktitle> <pages> pages 142-150, </pages> <address> Totonto, Canada, </address> <year> 1996. </year>
Reference-contexts: Back-face Culling: Back-face culling is a particular form of occlusion culling used on solid models that can be easily combined with other visibility culling methods. It has recently been extended to spline patches by computing a bound on the normals and Gauss map of a patch <ref> [10, 14] </ref>. Tanimoto [16] proposed a graph-theoretic approach that incrementally computes the silhouettes of a convex polytope using frame-to-frame coherence. 3 Definitions and Background Fig. 1.
Reference: [11] <author> M. Newell, R. Newell, and T. Sancha. </author> <title> A new solution to the hidden surface problem. </title> <booktitle> Proc. ACM Ann. Conf., </booktitle> <pages> pages 443-448, </pages> <year> 1972. </year>
Reference-contexts: A number of algorithms have been proposed based on spatial partitioning, hierarchical representations, Z-buffer, list-priority, scan-line, area-subdivision and polygon clusters [2, 7, 8, 15]. Schumaker [13] and Newell <ref> [11] </ref> were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper [15], Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence.
Reference: [12] <author> F.P. Preparata and M. I. Shamos. </author> <title> Computational Geometry. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: Finally, if the view-point lies in the MixedRegion, some of the polygons are back-facing and the others are front-facing. The overall algorithm uses many concepts and algorithms from computational geometry e.g. convex hulls, linear programming and duality. Details of these can be found in <ref> [12] </ref>. 4 Cluster Formation Given a model with N polygons, decomposing the model into clusters is an essential component of our algorithm.
Reference: [13] <author> R. Schumacker, B. Brand, M. Gilliland, and W. Sharp. </author> <title> Study for applying computer-generated images to visual generation. </title> <type> Technical report, </type> <institution> AFHRL-TR-69-74, US Air Force Human Resources Lab, </institution> <year> 1969. </year>
Reference-contexts: A number of algorithms have been proposed based on spatial partitioning, hierarchical representations, Z-buffer, list-priority, scan-line, area-subdivision and polygon clusters [2, 7, 8, 15]. Schumaker <ref> [13] </ref> and Newell [11] were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper [15], Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence.
Reference: [14] <author> L.A. Shirman and S.S. Abi-Ezzi. </author> <title> The cone of normals technique for fast processing of curved patches. </title> <booktitle> In EUROGRAPHICS, </booktitle> <pages> pages 261-272, </pages> <year> 1993. </year>
Reference-contexts: Back-face Culling: Back-face culling is a particular form of occlusion culling used on solid models that can be easily combined with other visibility culling methods. It has recently been extended to spline patches by computing a bound on the normals and Gauss map of a patch <ref> [10, 14] </ref>. Tanimoto [16] proposed a graph-theoretic approach that incrementally computes the silhouettes of a convex polytope using frame-to-frame coherence. 3 Definitions and Background Fig. 1.
Reference: [15] <author> I. Sutherland, R. Sproull, and R. Schumaker. </author> <title> A characterization of ten hidden-surface algorithms. </title> <journal> Computing Surveys, </journal> <volume> 6(1) </volume> <pages> 1-55, </pages> <year> 1974. </year>
Reference-contexts: Finally we discuss implementation and performance in Section 7. 2 Previous Work Since the early days of image synthesis, visible surface computation has been a central geometric problem. A number of algorithms have been proposed based on spatial partitioning, hierarchical representations, Z-buffer, list-priority, scan-line, area-subdivision and polygon clusters <ref> [2, 7, 8, 15] </ref>. Schumaker [13] and Newell [11] were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper [15], Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence. <p> Schumaker [13] and Newell [11] were among the first researchers to employ polygon clustering. Coherence has been key to many visibility algorithms. In the classic paper <ref> [15] </ref>, Sutherland et. al. show how visibility algorithms can take advantage of coherence and identify eight different kinds of coherence. Rendering an extremely complex geometric database has always been a challenge for visibility computations.
Reference: [16] <author> S.L. Tanimoto. </author> <title> A graph-theoretic real-time visible surface editing technique. </title> <booktitle> In Proc. of ACM Siggraph, </booktitle> <pages> pages 223-228, </pages> <year> 1977. </year>
Reference-contexts: Back-face Culling: Back-face culling is a particular form of occlusion culling used on solid models that can be easily combined with other visibility culling methods. It has recently been extended to spline patches by computing a bound on the normals and Gauss map of a patch [10, 14]. Tanimoto <ref> [16] </ref> proposed a graph-theoretic approach that incrementally computes the silhouettes of a convex polytope using frame-to-frame coherence. 3 Definitions and Background Fig. 1.
Reference: [17] <author> S. J. Teller. </author> <title> Visibility Computations in Densely Occluded Polyheral Environments. </title> <type> PhD thesis, </type> <institution> CS Division, UC Berkeley, </institution> <year> 1992. </year> <note> Fig. 4. Fig. 5. </note>
Reference-contexts: Obscuration Culling: These include techniques based on partitioning the model into cells and portals and computing the partial visibility set of polygons from each cell <ref> [1, 17] </ref>. A hierarchical Z-buffer algorithm combining spatial and temporal coherence with hierarchical structures was presented in [9]. Back-face Culling: Back-face culling is a particular form of occlusion culling used on solid models that can be easily combined with other visibility culling methods.
References-found: 17

