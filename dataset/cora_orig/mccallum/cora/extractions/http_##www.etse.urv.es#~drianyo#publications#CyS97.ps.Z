URL: http://www.etse.urv.es/~drianyo/publications/CyS97.ps.Z
Refering-URL: http://goliat.upc.es/~ia/biblio.html/
Root-URL: 
Email: e-mail: drianyo@etse.urv.es  e-mail: ia@lsi.upc.es  
Title: Rule Generation and Compaction in the wwtp  
Author: D. Ria~no U. Cortes 
Date: January 28, 1998  
Address: Rovira i Virgili  
Affiliation: Departament d'Enginyeria Informatica Universitat  Departament de Llenguatges i Sistemes Informatics Universitat Politecnica de Catalunya  
Abstract: In this paper we discuss our approach to learning classification rules from data. We sketch out two modules of our architecture, namely LINNEO + and GAR. LINNEO + , which is a knowledge acquisition tool for ill-structured domains automatically generating classes from examples that incrementally works with an unsupervised strategy. LINNEO + 's output, a representation of the conceptual structure of the domain in terms of classes, is the input to GAR that is used to generate a set of classification rules for the original training set. GAR can generate both conjunctive and disjunctive rules. Herein we present an application of these techniques to data obtained from a real wastewater treatment plant in order to help the construction of a rule base. This rule will be used for a knowledge-based system that aims to supervise the whole process. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Bejar. LINNEO: </author> <title> a classification methodology for ill-structured domains. </title> <type> Technical Report LSI-93-22-R, </type> <institution> Facultat d'Informatica de Barcelona, </institution> <year> 1993. </year>
Reference-contexts: Once the whole set of variables is established, their values for the plant are observed for 527 consecutive days. All these observations are taken as input data of the clustering module LINNEO + <ref> [1] </ref> as figure 1 shows.
Reference: [2] <author> J. Bejar, U. Cortes, and M. Domingo. </author> <title> Using domain theories to bias classification processes in ill-domains. </title> <booktitle> In Proceedings of the 4 t h Iberoamerican Congress on Artificial Intelligence (IBERAMIA '94), </booktitle> <year> 1994. </year>
Reference-contexts: Although some modules are not described in this paper, as the Consensus Module [25] or the clustering module LINNEO + <ref> [2, 21] </ref>, they are well documented in the bibliography. MILORD II [14] and Bolero [10] are respectively a shell for Expert Systems and a Case-Based System to manage and reason with the acquired knowledge and the new incoming cases. <p> The original classification was obtained after setting the radius to 4 -measure of the similitude among the objects of each class [21]-, without using a DT -set of predefined rules to direct the first step in the classifi cation process <ref> [2] </ref>, represented in figure 1 by the rules coming into the LINNEO + module -, and considering only the attributes within the process. The results were the 17 meaningful classes briefly described in table 1 (at the taxonomical level of operation situation [22, 23]). <p> The third feature is minimality. BDC rules are built using Hill Climbing which stops when no improvement is feasible at that point. 2 During the testing of this algorithm, three different domains (marine sponges <ref> [2] </ref>, mental illnesses [19], and wastewater treatment plants [23]) were chosen with equivalent good results. INPUT: training set, set of possible terms OUTPUT: the BDC rule 1. Select the best term. 2. Add such term to the up to now conjunctive premise. 3. Reduce the set of possible terms. 4. <p> Also we will intend to use these ideas to generate rules for a hierarchy of classes. has been used to generate classification rules from data in other domains with promising results, for example classification and diagnostic of mental illnesses [19] and classification of marine sponges <ref> [2] </ref>. Nevertheless, much work remains undone in the process of joining the system (LINNEO + + GAR) with the rest of the components in figure 1. 6 Acknowledgments The authors are grateful to P.
Reference: [3] <author> J. S. Bruner, J. Goodnow, and G. A. Austin. </author> <title> A study in thinking. </title> <publisher> New York Wiley, </publisher> <year> 1956. </year>
Reference-contexts: (&lt; 19.6 RD-DBO-G) (= (1406.0) COND-P) -&gt; SECONDARY PROBLEMS) This is reflected in the fact that the mixture of both methods allows a more accurate description of the concept in the line established by table 5.a, and by the assertion `MSC behaves in a closer way to how humans do' <ref> [3] </ref>.
Reference: [4] <author> J. Cendrowska. </author> <title> PRISM: An algorithm for inducing modular rules. </title> <journal> International Journal on Man Machine Studies, </journal> <volume> 27, </volume> <year> 1987. </year>
Reference-contexts: Unfortunately, the time complexity of exhaustive search is exponential respect to the size of the searching space. In the case of heuristic methods a criterion is taken to direct the search. Two big alternative criteria have directed the research: those based on statistics <ref> [4] </ref>, and those based on information theory [15, 5, 16]. Focusing our attention on the specificity [26] of a rule, generally defined as the percentage of negative examples not explained by the rule, the methods producing rules can be cataloged depending on the specificity of the rules they produce. <p> Nevertheless, the computation of the least specific conjunctive rule is a NP-complete problem which is heuristically relaxed to a more handled problem via a Hill-climbing algorithm in the form of <ref> [4, 11] </ref> and called the best-first descriptive conjunctive rule (BDC). The algorithm in table 3 describes how the BDC rules are obtained in an iterative process. At each iteration, the term with the greatest reduction of negative examples accepted is called to be part of the conjunctive rule.
Reference: [5] <author> P. Clark and T. Niblett. </author> <title> The CN2 induction algorithm. </title> <journal> Machine Learning, </journal> <volume> 3 </volume> <pages> 261-271, </pages> <year> 1989. </year>
Reference-contexts: Specific-to-general methods [6] start with the most specific rule, which is the result of making a conjunction with all the available terms, and then the methods perform gener-alizations to include those positive examples missing in the initial description. In general-to-specific methods <ref> [5, 16] </ref> an initial empty rule set is successively modified by specialization techniques to adjust the target concept, this time by means of refusing negative examples previously accepted. <p> In the case of heuristic methods a criterion is taken to direct the search. Two big alternative criteria have directed the research: those based on statistics [4], and those based on information theory <ref> [15, 5, 16] </ref>. Focusing our attention on the specificity [26] of a rule, generally defined as the percentage of negative examples not explained by the rule, the methods producing rules can be cataloged depending on the specificity of the rules they produce.
Reference: [6] <author> P. Domingos. </author> <title> Unifying instance-based and rule-based induction. </title> <journal> Machine Learning, </journal> <volume> 24, </volume> <year> 1996. </year>
Reference-contexts: Some of these strategies are grouped into specific-to-general vs. general-to-specific, instance-based vs. selectors-based, and exhaustive vs. heuristic methods. Specific-to-general methods <ref> [6] </ref> start with the most specific rule, which is the result of making a conjunction with all the available terms, and then the methods perform gener-alizations to include those positive examples missing in the initial description. <p> Some methods take a disturbing example, i.e. a positive example rejected or a negative example accepted, and perform a modification in the rule set to fix this situation. This is the case of instance-based methods like <ref> [6] </ref>. Alternatively, selectors-based methods take terms to modify a deficient rule set ant then they evaluate the modified subset with the training set to decide whether the change is maintained or not.
Reference: [7] <author> D. Haussler. </author> <title> Quantifying inductive bias: </title> <journal> Artificial intelligence algorithms and Valiant's learning framework. Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 177-221, </pages> <year> 1988. </year>
Reference-contexts: A conjunctive rule is said to be the least specific conjunctive rule (LSC) if none term can be removed from it without a change in the above partition. As a complement, the most specific conjunctive rule (MSC) <ref> [7] </ref> is defined as a conjunctive rule where none term can be added to it without a change in the partition of the training set. LSC rules can be defended since they represent a memory safe and a faster reasoning process, though Haussler [7] attacks this position and introduces the MSC <p> complement, the most specific conjunctive rule (MSC) <ref> [7] </ref> is defined as a conjunctive rule where none term can be added to it without a change in the partition of the training set. LSC rules can be defended since they represent a memory safe and a faster reasoning process, though Haussler [7] attacks this position and introduces the MSC rules for the sake of human understanding. Both standpoints are pursued by GAR under two different working modes. One producing a set of short conjunctive rules, and other one as a step previous to the compaction process described in the next section. <p> On the other hand, the MSC rule computation, also a complex problem <ref> [7] </ref>, is approximated by an algorithm that takes the m terms of the BDC rule, as well as those feasible terms whose addition to the rule do not modify its accuracy [26].
Reference: [8] <author> L. F. Imam and R. S. Michalski. </author> <title> Learning decision trees from decision rules: a method and initial results from a comparative study. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 2 </volume> <pages> 279-304, </pages> <year> 1993. </year>
Reference-contexts: A third alternative approach to or-clauses is to transform the set of rules into a decision tree <ref> [8] </ref> and transform this tree to contain external or operators. 3.3 Complexity of Rules Genera tion Here the temporal cost of producing the set of rules describing a class (or concept) is analyzed in the worst case of asymptotic time.
Reference: [9] <author> S. Kundu. </author> <title> Discovering new concepts in rule learnings. </title> <booktitle> In Proceedings of the ISAI, </booktitle> <address> Mexico, </address> <year> 1993. </year>
Reference-contexts: Two sort of methods can be pointed out for such purpose: methods a priori where rules are directly produced containing disjunctive clauses [17, 18] and methods a posteriori where rules are initially borne in conjunctive form and compacted afterwards to disjunctive expressions <ref> [9, 13] </ref>. GAR is able to produce disjunctive clauses a priory [17], and a posteriori by the use of the operators in table 7, which are inspired in those of Shapiro.
Reference: [10] <author> B. Lopez and E. </author> <title> Plaza. Case-based planning for medical diagnosis. </title> <booktitle> In Proceedings on the Int. Symposium of Methodologies for Intelligent Sistems,ISMIS'93, </booktitle> <institution> University of Todheim, Norway, </institution> <note> J. </note> <editor> Ko-morowski and Z. W. Ras Eds., </editor> <address> pages 96-105, </address> <year> 1993. </year>
Reference-contexts: Although some modules are not described in this paper, as the Consensus Module [25] or the clustering module LINNEO + [2, 21], they are well documented in the bibliography. MILORD II [14] and Bolero <ref> [10] </ref> are respectively a shell for Expert Systems and a Case-Based System to manage and reason with the acquired knowledge and the new incoming cases.
Reference: [11] <author> A. J. Mooney. </author> <title> Integrating theory and data in category learning. </title> <journal> The psicology of learning and motivation, </journal> <volume> 29, </volume> <year> 1993. </year>
Reference-contexts: Nevertheless, the computation of the least specific conjunctive rule is a NP-complete problem which is heuristically relaxed to a more handled problem via a Hill-climbing algorithm in the form of <ref> [4, 11] </ref> and called the best-first descriptive conjunctive rule (BDC). The algorithm in table 3 describes how the BDC rules are obtained in an iterative process. At each iteration, the term with the greatest reduction of negative examples accepted is called to be part of the conjunctive rule.
Reference: [12] <author> R. Moreno, C. de Prada, J. Lafuente, M.Poch, and G. Montagne. </author> <title> Non linear predictive control of dissolved oxygen in the activated sludge process. </title> <booktitle> In ICCAFT 5/IFAC-BIO 2 Conference. </booktitle> <address> Keystoke (USA), </address> <year> 1992. </year>
Reference-contexts: Moreover, the complex chemical and biological interactions within a wwtp are not always easily described using mathematical models, <ref> [12] </ref>. A great reliance on experience and intuition is required in many situations. <p> In this context, although some advanced control techniques such as predictive control have obtained promising results, they are not able to handle a number of situations that need to consider qualitative knowledge <ref> [12] </ref>. Consequently, the personal expertise of the plant manager is necessary to attain an efficient management of the process.
Reference: [13] <author> S. Muggleton. </author> <title> Inductive Acquisition of Expert Knowledge, </title> <booktitle> chapter 9, Duce, </booktitle> <pages> pages 153-171. </pages> <publisher> Ed. Addison Wesley Publishing Co., </publisher> <year> 1990. </year>
Reference-contexts: Two sort of methods can be pointed out for such purpose: methods a priori where rules are directly produced containing disjunctive clauses [17, 18] and methods a posteriori where rules are initially borne in conjunctive form and compacted afterwards to disjunctive expressions <ref> [9, 13] </ref>. GAR is able to produce disjunctive clauses a priory [17], and a posteriori by the use of the operators in table 7, which are inspired in those of Shapiro. <p> Extending the set of possible operators in Duce <ref> [13] </ref> with the above three new or-operators and modifying the treatment of rules to accept disjunctions, the system Duce can come to grips with the compaction of and/or-rule bases within its initial time cost. <p> Thus the search-space <ref> [13] </ref> for the best operator application is of size 2 jRj , the size of the power set of R. 4 Results Let us give some ideas about the kind of rules that are generated by the automatic rule generator module GAR attending the classification in table 1.
Reference: [14] <author> J. Puyol. </author> <title> Modularization, Uncertainty, Reflective Control and Deduction by Specification in Milord II, a language for knowledge-based sysmtems. </title> <type> PhD thesis, </type> <institution> Departament d'Informatica, Universitat Autonoma de Barcelona, </institution> <year> 1994. </year>
Reference-contexts: Although some modules are not described in this paper, as the Consensus Module [25] or the clustering module LINNEO + [2, 21], they are well documented in the bibliography. MILORD II <ref> [14] </ref> and Bolero [10] are respectively a shell for Expert Systems and a Case-Based System to manage and reason with the acquired knowledge and the new incoming cases. <p> rule generation (defined here as the specificity of a rule normalized in time) is the largest for conjunctive rules [17]; b) when given to the expert, conjunctive rules are qualified as more understandable than other sort of rules [23]; c) when applying conjunctive rules, the rea soning process is faster <ref> [14] </ref>; and d) conjunctive rules structure knowledge in a more atomic way. These considerations intuitively justify the production of conjunctive rules, like the majority of the rule learning systems do.
Reference: [15] <author> J. R. Quinlan. </author> <title> Induction of decision trees. </title> <journal> Machine Learning, </journal> <volume> 1 </volume> <pages> 81-106, </pages> <year> 1986. </year>
Reference-contexts: In the case of heuristic methods a criterion is taken to direct the search. Two big alternative criteria have directed the research: those based on statistics [4], and those based on information theory <ref> [15, 5, 16] </ref>. Focusing our attention on the specificity [26] of a rule, generally defined as the percentage of negative examples not explained by the rule, the methods producing rules can be cataloged depending on the specificity of the rules they produce.
Reference: [16] <author> J. R. Quinlan. C4.5: </author> <title> programs for machine learning. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Specific-to-general methods [6] start with the most specific rule, which is the result of making a conjunction with all the available terms, and then the methods perform gener-alizations to include those positive examples missing in the initial description. In general-to-specific methods <ref> [5, 16] </ref> an initial empty rule set is successively modified by specialization techniques to adjust the target concept, this time by means of refusing negative examples previously accepted. <p> In the case of heuristic methods a criterion is taken to direct the search. Two big alternative criteria have directed the research: those based on statistics [4], and those based on information theory <ref> [15, 5, 16] </ref>. Focusing our attention on the specificity [26] of a rule, generally defined as the percentage of negative examples not explained by the rule, the methods producing rules can be cataloged depending on the specificity of the rules they produce.
Reference: [17] <author> D. Ria~no. </author> <title> Automatic knowledge generation from data in clasification domains. </title> <type> Master's thesis, </type> <institution> Facultat d'Informatica de Barcelona. Universitat Politecnica de Catalunya, </institution> <year> 1994. </year>
Reference-contexts: After the analysis and comparison of conjunctive, k-term-DNF, k-DNF, and k-CNF rules in <ref> [17] </ref>, the following conclusions have been reached: a) the effectiveness of rule generation (defined here as the specificity of a rule normalized in time) is the largest for conjunctive rules [17]; b) when given to the expert, conjunctive rules are qualified as more understandable than other sort of rules [23]; c) <p> After the analysis and comparison of conjunctive, k-term-DNF, k-DNF, and k-CNF rules in <ref> [17] </ref>, the following conclusions have been reached: a) the effectiveness of rule generation (defined here as the specificity of a rule normalized in time) is the largest for conjunctive rules [17]; b) when given to the expert, conjunctive rules are qualified as more understandable than other sort of rules [23]; c) when applying conjunctive rules, the rea soning process is faster [14]; and d) conjunctive rules structure knowledge in a more atomic way. <p> Some of the operators in table 6 are the foundation for or-compactions as we will see later. Disjunctive clauses here are basically used to compact knowledge. Two sort of methods can be pointed out for such purpose: methods a priori where rules are directly produced containing disjunctive clauses <ref> [17, 18] </ref> and methods a posteriori where rules are initially borne in conjunctive form and compacted afterwards to disjunctive expressions [9, 13]. <p> GAR is able to produce disjunctive clauses a priory <ref> [17] </ref>, and a posteriori by the use of the operators in table 7, which are inspired in those of Shapiro. The operators, extended to manage or con nectors and depicted in table 7, are a transformation of those suggested by Shapiro.
Reference: [18] <author> D. Ria~no. </author> <title> Knowledge abstraction using heuristic search: A specialization approach. </title> <type> Technical report, </type> <institution> Centrum voor Wiskunde in Informatica, </institution> <address> Amsterdam. CS-R9469, </address> <year> 1994. </year>
Reference-contexts: Some of the operators in table 6 are the foundation for or-compactions as we will see later. Disjunctive clauses here are basically used to compact knowledge. Two sort of methods can be pointed out for such purpose: methods a priori where rules are directly produced containing disjunctive clauses <ref> [17, 18] </ref> and methods a posteriori where rules are initially borne in conjunctive form and compacted afterwards to disjunctive expressions [9, 13].
Reference: [19] <author> E. Rojo. Aplicacion del software LIN-NEO a la clasificacion de transtornos mentales. </author> <type> PhD thesis, </type> <institution> Divisio de Cien-cies de la Salut. Facultat de Medicina. Universitat de Barcelona, </institution> <year> 1993. </year>
Reference-contexts: The third feature is minimality. BDC rules are built using Hill Climbing which stops when no improvement is feasible at that point. 2 During the testing of this algorithm, three different domains (marine sponges [2], mental illnesses <ref> [19] </ref>, and wastewater treatment plants [23]) were chosen with equivalent good results. INPUT: training set, set of possible terms OUTPUT: the BDC rule 1. Select the best term. 2. Add such term to the up to now conjunctive premise. 3. Reduce the set of possible terms. 4. <p> Also we will intend to use these ideas to generate rules for a hierarchy of classes. has been used to generate classification rules from data in other domains with promising results, for example classification and diagnostic of mental illnesses <ref> [19] </ref> and classification of marine sponges [2]. Nevertheless, much work remains undone in the process of joining the system (LINNEO + + GAR) with the rest of the components in figure 1. 6 Acknowledgments The authors are grateful to P.
Reference: [20] <author> M. Sanchez, Ll. Belanche, P. Serra, and U. Cortes. </author> <title> A knowledge-based system for the diagnosis of waste-water treatment plant. </title> <booktitle> In Proceedings of the Fifth international conference of industrial and engineering applications of AI and Expert Systems IEA/AIE-92. Paderborn, </booktitle> <address> Ger-many. </address> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: In section 5 some conclusions are commented. 2 A case-study: Wastewater Treatment Plant After some successful tests using the classification module LINNEO + , to generate a concept structure at the level of operation situations in a real Wastewater Treatment Plant <ref> [21, 20, 23] </ref>, now, has been applied to generate classification rules for those operation situations. The studied urban wastewater treatment plant uses a biological process known as activated sludge process. Activated sludge is undoubtedly the most widely extended waste water treatment. <p> This interpretation was confirmed when confronted with the daily log of the plant. The results were used to help the experts to build-up a knowledge base for the automatic control and supervision of the wastewater treatment plant and reported in <ref> [20, 22, 23] </ref>.
Reference: [21] <author> M. Sanchez, U. Cortes, J. de Gracia, J. Lafuente, and M. Poch. </author> <title> Concept formation in wwtp by means of classification techniques: a compared study. </title> <journal> Applied Intelligence, </journal> <note> 1996 (accepted). </note>
Reference-contexts: Although some modules are not described in this paper, as the Consensus Module [25] or the clustering module LINNEO + <ref> [2, 21] </ref>, they are well documented in the bibliography. MILORD II [14] and Bolero [10] are respectively a shell for Expert Systems and a Case-Based System to manage and reason with the acquired knowledge and the new incoming cases. <p> In section 5 some conclusions are commented. 2 A case-study: Wastewater Treatment Plant After some successful tests using the classification module LINNEO + , to generate a concept structure at the level of operation situations in a real Wastewater Treatment Plant <ref> [21, 20, 23] </ref>, now, has been applied to generate classification rules for those operation situations. The studied urban wastewater treatment plant uses a biological process known as activated sludge process. Activated sludge is undoubtedly the most widely extended waste water treatment. <p> All these observations are taken as input data of the clustering module LINNEO + [1] as figure 1 shows. The original classification was obtained after setting the radius to 4 -measure of the similitude among the objects of each class <ref> [21] </ref>-, without using a DT -set of predefined rules to direct the first step in the classifi cation process [2], represented in figure 1 by the rules coming into the LINNEO + module -, and considering only the attributes within the process.
Reference: [22] <author> P. </author> <type> Serra. </type> <institution> Desenvolupament d'un sis-tema basat en el coneixement per al control i supervisio de plantes depuradores d'aigues residuals urbanes. </institution> <type> PhD thesis, </type> <institution> Departament de Qumica. Facultat de Ciencies. Universitat Autonoma de Barcelona, </institution> <year> 1994. </year>
Reference-contexts: The results were the 17 meaningful classes briefly described in table 1 (at the taxonomical level of operation situation <ref> [22, 23] </ref>). As an example of the classification obtained by LINNEO + , the normalized center of the class number 13 is shown in table 2. <p> This interpretation was confirmed when confronted with the daily log of the plant. The results were used to help the experts to build-up a knowledge base for the automatic control and supervision of the wastewater treatment plant and reported in <ref> [20, 22, 23] </ref>.
Reference: [23] <author> P. Serra, M. Sanchez, J. Lafuente, U. Cortes, and M. Poch. DEPUR: </author> <title> a knowledge-based tool for wastewater treatment plants. </title> <journal> Engineering Applica--tions of Artificial Intelligence, </journal> <volume> 7(1) </volume> <pages> 23-30, </pages> <year> 1994. </year>
Reference-contexts: In section 5 some conclusions are commented. 2 A case-study: Wastewater Treatment Plant After some successful tests using the classification module LINNEO + , to generate a concept structure at the level of operation situations in a real Wastewater Treatment Plant <ref> [21, 20, 23] </ref>, now, has been applied to generate classification rules for those operation situations. The studied urban wastewater treatment plant uses a biological process known as activated sludge process. Activated sludge is undoubtedly the most widely extended waste water treatment. <p> The results were the 17 meaningful classes briefly described in table 1 (at the taxonomical level of operation situation <ref> [22, 23] </ref>). As an example of the classification obtained by LINNEO + , the normalized center of the class number 13 is shown in table 2. <p> This interpretation was confirmed when confronted with the daily log of the plant. The results were used to help the experts to build-up a knowledge base for the automatic control and supervision of the wastewater treatment plant and reported in <ref> [20, 22, 23] </ref>. <p> in [17], the following conclusions have been reached: a) the effectiveness of rule generation (defined here as the specificity of a rule normalized in time) is the largest for conjunctive rules [17]; b) when given to the expert, conjunctive rules are qualified as more understandable than other sort of rules <ref> [23] </ref>; c) when applying conjunctive rules, the rea soning process is faster [14]; and d) conjunctive rules structure knowledge in a more atomic way. These considerations intuitively justify the production of conjunctive rules, like the majority of the rule learning systems do. <p> These two methods are applied to produce a rule (or a set of rules) for the same concept, which comes in this case from the wwtp domain when classified with LINNEO + <ref> [23] </ref>, and only considering the attributes relevant for the characterization (in this case DBO-P, DBO-D, SSV-D, and ZN-E 1 ). <p> The third feature is minimality. BDC rules are built using Hill Climbing which stops when no improvement is feasible at that point. 2 During the testing of this algorithm, three different domains (marine sponges [2], mental illnesses [19], and wastewater treatment plants <ref> [23] </ref>) were chosen with equivalent good results. INPUT: training set, set of possible terms OUTPUT: the BDC rule 1. Select the best term. 2. Add such term to the up to now conjunctive premise. 3. Reduce the set of possible terms. 4.
Reference: [24] <author> A. D. Shapiro. </author> <title> Structured Induction in Expert Systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: In section 3 the Automatic Rule Generator Module GAR is introduced together with the description of how conjunctive and disjunctive rules are generated. Later, some details about the complexity of this process is given, and an alternative solution is presented with the extension of the Duce operators <ref> [24] </ref>. Section 4 summarizes the results obtained by when this is applied to the problem described in section 2, and shows the levels of knowledge compaction when disjunctive expressions are allowed. <p> One of them comes related to the horizontal (number of terms per rule) and vertical (number of rules) size of the set of rules. If only conjunctive rules are permitted, both horizontal and vertical sizes use to be great. In front of this situation, Shapiro <ref> [24] </ref> defined Duce, a machine learning system based on the truth-preserving transformation of a set of conjunctive rules into a more compact set of rules. conjunction Positive examples Negative examples pure BDC ( (0.22) DBO-P) ( (0.5) DBO-D) d-29/1/91 d-31/1/91 none pure msc ( (0.22) DBO-P) all all BDC+MSC ( (0.22)
Reference: [25] <author> V. Torra and U. Cortes. </author> <title> Towards an automatic consensus generator tool: </title> <journal> EGAC. IEEE transactions on Systems, Man and Cybernetics, </journal> <volume> 25(5) </volume> <pages> 888-894, </pages> <year> 1995. </year>
Reference-contexts: Although some modules are not described in this paper, as the Consensus Module <ref> [25] </ref> or the clustering module LINNEO + [2, 21], they are well documented in the bibliography. MILORD II [14] and Bolero [10] are respectively a shell for Expert Systems and a Case-Based System to manage and reason with the acquired knowledge and the new incoming cases.
Reference: [26] <author> S. M. Weiss. </author> <title> Computer systems that learn. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> Palo Alto, CA, </address> <year> 1990. </year>
Reference-contexts: In the case of heuristic methods a criterion is taken to direct the search. Two big alternative criteria have directed the research: those based on statistics [4], and those based on information theory [15, 5, 16]. Focusing our attention on the specificity <ref> [26] </ref> of a rule, generally defined as the percentage of negative examples not explained by the rule, the methods producing rules can be cataloged depending on the specificity of the rules they produce. <p> On the other hand, the MSC rule computation, also a complex problem [7], is approximated by an algorithm that takes the m terms of the BDC rule, as well as those feasible terms whose addition to the rule do not modify its accuracy <ref> [26] </ref>. The algorithm in table 4 takes the BDC rule and it adds all the terms in the set of possible terms which do not modify the rule criterion of acceptance or rejection for any example.
References-found: 26

